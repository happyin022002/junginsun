<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RFARateProposalDBDAOMstRoutSmryListRSQL">
			<desc><![CDATA[Basic RFA가 상속한 Master RFA가 가지고 있는 Route Summary를 조회한다.
isExists가 Y일때 Basic이 가지고 있는 Mst의 Route를 N일때 Basic이 없는 Mst의 Route를 조회한다.]]></desc>
			<sql><![CDATA[
WITH MST_INFO AS (
    SELECT MN.PROP_NO, MAX(MN.AMDT_SEQ) AS AMDT_SEQ, SVC_SCP_CD, HDR.RFA_NO
      FROM PRI_RP_MN MN, PRI_RP_SCP_RT_CMDT_ROUT ROUT, PRI_RP_HDR HDR
     WHERE MN.PROP_NO = (SELECT PROP_NO FROM PRI_RP_HDR WHERE RFA_NO = @[mst_rfa_no]) -- Mst RFA No
       AND MN.PROP_NO = ROUT.PROP_NO
       AND MN.AMDT_SEQ = ROUT.AMDT_SEQ
	AND MN.PROP_NO = HDR.PROP_NO
       AND PROP_STS_CD = 'A'
     GROUP BY MN.PROP_NO, SVC_SCP_CD,HDR.RFA_NO
)
SELECT A.*
FROM (
	 SELECT A.PROP_NO
	      , A.AMDT_SEQ
	      , A.SVC_SCP_CD
	      , A.CMDT_HDR_SEQ
	      , A.ROUT_SEQ
	      , A.MST_ROUT_ID
	      , B.ROUT_PNT_LOC_DEF_CD AS ORG_ROUT_PNT_LOC_DEF_CD
	      , B.RCV_DE_TERM_CD AS RCV_DE_TERM_CD_ORI
	      , C.ROUT_VIA_PORT_DEF_CD AS ORG_ROUT_VIA_PORT_DEF_CD
	      , D.ROUT_VIA_PORT_DEF_CD AS DEST_ROUT_VIA_PORT_DEF_CD
	      , E.ROUT_PNT_LOC_DEF_CD AS DEST_ROUT_PNT_LOC_DEF_CD
	      , E.RCV_DE_TERM_CD AS RCV_DE_TERM_CD_DEST
	      , BKG_DIR_CALL_FLG
	      , BKG_TS_PORT_DEF_CD
	      , BKG_SLAN_CD
	      , BKG_VVD_CD
	      , CASE WHEN NOTE_CONV_CHG_CD IS NULL
		     THEN NOTE_CONV_RULE_CD
		     WHEN NOTE_CONV_RULE_CD IS NULL
		     THEN NOTE_CONV_CHG_CD
		ELSE NOTE_CONV_RULE_CD ||','|| NOTE_CONV_CHG_CD
		 END AS NOTE_CONV_CHG_CD
	      , A.NOTE_DP_SEQ
	      , DECODE(PREV_D2, 0, '', PREV_D2) AS PREV_D2
	      , DECODE(PREV_D4, 0, '', PREV_D4) AS PREV_D4
	      , DECODE(PREV_D5, 0, '', PREV_D5) AS PREV_D5
	      , DECODE(CURR_D2, 0, '', CURR_D2) AS CURR_D2
	      , DECODE(CURR_D4, 0, '', CURR_D4) AS CURR_D4
	      , DECODE(CURR_D5, 0, '', CURR_D5) AS CURR_D5

	      , DECODE(PREV_D2_DG, 0, '', PREV_D2_DG) AS PREV_D2_DG
	      , DECODE(PREV_D4_DG, 0, '', PREV_D4_DG) AS PREV_D4_DG
	      , DECODE(PREV_D5_DG, 0, '', PREV_D5_DG) AS PREV_D5_DG
	      , DECODE(CURR_D2_DG, 0, '', CURR_D2_DG) AS CURR_D2_DG
	      , DECODE(CURR_D4_DG, 0, '', CURR_D4_DG) AS CURR_D4_DG
	      , DECODE(CURR_D5_DG, 0, '', CURR_D5_DG) AS CURR_D5_DG

	      , A.N1ST_CMNC_AMDT_SEQ
	      , A.N1ST_CMNC_AMDT_SEQ AS ORG_N1ST_CMNC_AMDT_SEQ

	      , DECODE((
		    SELECT COUNT(*) CNT
		    FROM PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT 
		    WHERE CMDT_ROUT.MST_ROUT_ID = A.MST_ROUT_ID 
		   AND CMDT_ROUT.PROP_NO = @[prop_no]
		   AND CMDT_ROUT.AMDT_SEQ =@[amdt_seq]
		    
		),0,'N','Y') is_exists
		,MST.RFA_NO  AS MST_RFA_NO
	  FROM MST_INFO MST
	     , PRI_RP_SCP_RT_CMDT_ROUT A
	     , PRI_RP_SCP_RT_ROUT_PNT B
	     , PRI_RP_SCP_RT_ROUT_VIA C
	     , PRI_RP_SCP_RT_ROUT_VIA D
	     , PRI_RP_SCP_RT_ROUT_PNT E
	     ,(SELECT A.PROP_NO
		     ,A.AMDT_SEQ
		     ,A.SVC_SCP_CD
		     ,A.CMDT_HDR_SEQ
		     ,A.ROUT_SEQ
		     ,WM_CONCAT(DISTINCT(NOTE_CONV_CHG_CD)) AS NOTE_CONV_CHG_CD
		     ,WM_CONCAT(DISTINCT(NOTE_CONV_RULE_CD)) AS NOTE_CONV_RULE_CD
		     -- Summary
		     ,MAX(DECODE(NOTE_CONV_RULE_CD, 'APP', B.BKG_DIR_CALL_FLG, '')) AS BKG_DIR_CALL_FLG
		     ,MAX(DECODE(NOTE_CONV_RULE_CD, 'APP', B.BKG_TS_PORT_DEF_CD, '')) AS BKG_TS_PORT_DEF_CD
		     ,MAX(DECODE(NOTE_CONV_RULE_CD, 'APP', B.BKG_SLAN_CD, '')) AS BKG_SLAN_CD
		     ,MAX(DECODE(NOTE_CONV_RULE_CD, 'APP', (B.BKG_VSL_CD || B.BKG_SKD_VOY_NO || B.BKG_SKD_DIR_CD), '')) AS BKG_VVD_CD
		     ,MAX(DECODE(NOTE_CONV_RULE_CD, 'APP', B.NOTE_CONV_SEQ, '')) AS NOTE_CONV_SEQ
		 FROM PRI_RP_SCP_RT_CMDT_RNOTE A, PRI_RFA_NOTE_CONV B, MST_INFO MST
		WHERE A.PROP_NO = MST.PROP_NO
		  AND A.AMDT_SEQ = MST.AMDT_SEQ
		  AND A.SVC_SCP_CD = MST.SVC_SCP_CD
		  AND A.NOTE_CONV_MAPG_ID = B.NOTE_CONV_MAPG_ID
		GROUP BY A.PROP_NO
			,A.AMDT_SEQ
			,A.SVC_SCP_CD
			,A.CMDT_HDR_SEQ
			,A.ROUT_SEQ) F
	     ,(SELECT RT.PROP_NO
		     ,RT.SVC_SCP_CD
		     ,CMDT_HDR_SEQ
		     ,ROUT_SEQ
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ -1 AND RAT_UT_CD = 'D2' AND PRC_CGO_TP_CD = 'DR' THEN PROP_FRT_RT_AMT ELSE 0 END) AS PREV_D2
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ -1 AND RAT_UT_CD = 'D4' AND PRC_CGO_TP_CD = 'DR' THEN PROP_FRT_RT_AMT ELSE 0 END) AS PREV_D4
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ -1 AND RAT_UT_CD = 'D5' AND PRC_CGO_TP_CD = 'DR' THEN PROP_FRT_RT_AMT ELSE 0 END) AS PREV_D5
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ AND RAT_UT_CD = 'D2' AND PRC_CGO_TP_CD = 'DR' THEN PROP_FRT_RT_AMT ELSE 0 END) AS CURR_D2
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ AND RAT_UT_CD = 'D4' AND PRC_CGO_TP_CD = 'DR' THEN PROP_FRT_RT_AMT ELSE 0 END) AS CURR_D4
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ AND RAT_UT_CD = 'D5' AND PRC_CGO_TP_CD = 'DR' THEN PROP_FRT_RT_AMT ELSE 0 END) AS CURR_D5

		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ -1 AND RAT_UT_CD = 'D2' AND PRC_CGO_TP_CD = 'DG' THEN PROP_FRT_RT_AMT ELSE 0 END) AS PREV_D2_DG
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ -1 AND RAT_UT_CD = 'D4' AND PRC_CGO_TP_CD = 'DG' THEN PROP_FRT_RT_AMT ELSE 0 END) AS PREV_D4_DG
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ -1 AND RAT_UT_CD = 'D5' AND PRC_CGO_TP_CD = 'DG' THEN PROP_FRT_RT_AMT ELSE 0 END) AS PREV_D5_DG
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ AND RAT_UT_CD = 'D2' AND PRC_CGO_TP_CD = 'DG' THEN PROP_FRT_RT_AMT ELSE 0 END) AS CURR_D2_DG
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ AND RAT_UT_CD = 'D4' AND PRC_CGO_TP_CD = 'DG' THEN PROP_FRT_RT_AMT ELSE 0 END) AS CURR_D4_DG
		     ,SUM(CASE WHEN RT.AMDT_SEQ = MST.AMDT_SEQ AND RAT_UT_CD = 'D5' AND PRC_CGO_TP_CD = 'DG' THEN PROP_FRT_RT_AMT ELSE 0 END) AS CURR_D5_DG

		 FROM PRI_RP_SCP_RT RT, MST_INFO MST
		WHERE RT.PROP_NO = MST.PROP_NO
		  AND (RT.AMDT_SEQ = MST.AMDT_SEQ OR
		      (RT.AMDT_SEQ = MST.AMDT_SEQ - 1 AND
		      SRC_INFO_CD IN ('NW', 'PC', 'PM', 'GC', 'GM', 'AM')))
		  AND RT.SVC_SCP_CD = MST.SVC_SCP_CD
		  AND RAT_UT_CD IN ('D2', 'D4', 'D5')
		GROUP BY RT.PROP_NO
			,RT.SVC_SCP_CD
			,RT.CMDT_HDR_SEQ
			,RT.ROUT_SEQ) I
	 WHERE A.PROP_NO = MST.PROP_NO
	   AND A.AMDT_SEQ = MST.AMDT_SEQ
	   AND A.SVC_SCP_CD = MST.SVC_SCP_CD
	   AND A.PROP_NO = B.PROP_NO(+)
	   AND A.AMDT_SEQ = B.AMDT_SEQ(+)
	   AND A.SVC_SCP_CD = B.SVC_SCP_CD(+)
	   AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ(+)
	   AND A.ROUT_SEQ = B.ROUT_SEQ(+)
	   AND A.PROP_NO = C.PROP_NO(+)
	   AND A.AMDT_SEQ = C.AMDT_SEQ(+)
	   AND A.SVC_SCP_CD = C.SVC_SCP_CD(+)
	   AND A.CMDT_HDR_SEQ = C.CMDT_HDR_SEQ(+)
	   AND A.ROUT_SEQ = C.ROUT_SEQ(+)
	   AND A.PROP_NO = D.PROP_NO(+)
	   AND A.AMDT_SEQ = D.AMDT_SEQ(+)
	   AND A.SVC_SCP_CD = D.SVC_SCP_CD(+)
	   AND A.CMDT_HDR_SEQ = D.CMDT_HDR_SEQ(+)
	   AND A.ROUT_SEQ = D.ROUT_SEQ(+)
	   AND A.PROP_NO = E.PROP_NO(+)
	   AND A.AMDT_SEQ = E.AMDT_SEQ(+)
	   AND A.SVC_SCP_CD = E.SVC_SCP_CD(+)
	   AND A.CMDT_HDR_SEQ = E.CMDT_HDR_SEQ(+)
	   AND A.ROUT_SEQ = E.ROUT_SEQ(+)
	   AND A.PROP_NO = F.PROP_NO(+)
	   AND A.AMDT_SEQ = F.AMDT_SEQ(+)
	   AND A.SVC_SCP_CD = F.SVC_SCP_CD(+)
	   AND A.CMDT_HDR_SEQ = F.CMDT_HDR_SEQ(+)
	   AND A.ROUT_SEQ = F.ROUT_SEQ(+)
	   AND A.PROP_NO = I.PROP_NO(+)
	   AND A.SVC_SCP_CD = I.SVC_SCP_CD(+)
	   AND A.CMDT_HDR_SEQ = I.CMDT_HDR_SEQ(+)
	   AND A.ROUT_SEQ = I.ROUT_SEQ(+)
	   AND B.ORG_DEST_TP_CD = 'O'
	   AND C.ORG_DEST_TP_CD(+) = 'O'
	   AND D.ORG_DEST_TP_CD(+) = 'D'
	   AND E.ORG_DEST_TP_CD = 'D'
 ) A
 ORDER BY A.IS_EXISTS DESC, A.ROUT_SEQ			]]></sql>
			<params>
				<param name="mst_rfa_no" type="12" value="" out="N"/>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="amdt_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
