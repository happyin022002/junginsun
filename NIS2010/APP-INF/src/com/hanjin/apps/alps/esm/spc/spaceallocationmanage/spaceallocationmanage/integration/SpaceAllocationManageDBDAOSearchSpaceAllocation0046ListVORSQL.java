/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0046ListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.18
*@LastModifier : 최성민
*@LastVersion : 1.0
* 2016.08.18 최성민
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI SUNGMIN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0046ListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Allocation Copy 화면 조회
	  *  2012.08.29 전상화 [CHM-201219578-01] Control by HO / RHQ 화면에 Alloc Copy & Paste 버튼 추가 
	  *  2013.06.26 진마리아 [CHM-201325016-01] 성수기 Alloc copy 기능 개발
	  * 2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
	  * 2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경
	  * 2014.01.13 김시몬 [선처리] SELSA/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가
	  * 2014.01.14 진마리아 [SRM-201341166] Yield Group의 확대
	  * 2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완
	  * 2015.03.04 김성욱 [CHM-201534435] SQM QTA주가 변경 관련 적용 요청
	  * 2016.05.18 최성민 Double Callling Route(Port/Tmnl)에 대한 물량집계 및 병목상 Logic 보완 사항 요청
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0046ListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("grp_acct",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("user_ofc",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0046ListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT V.REP_TRD_CD   ," ).append("\n"); 
		query.append("           V.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD      ," ).append("\n"); 
		query.append("           V.DIR_CD        ," ).append("\n"); 
		query.append("           V.COST_YR       ," ).append("\n"); 
		query.append("           V.COST_MON      ," ).append("\n"); 
		query.append("           V.COST_WK       ," ).append("\n"); 
		query.append("           V.VSL_CD        ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO    ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD    ," ).append("\n"); 
		query.append("           VPS.YD_CD AS PORT_CD," ).append("\n"); 
		query.append("           VPS.CALL_YD_IND_SEQ ," ).append("\n"); 
		query.append("           VPS.VPS_PORT_CD," ).append("\n"); 
		query.append("           VPS.CLPT_IND_SEQ," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ         AS PORT_SEQ," ).append("\n"); 
		query.append("           VPS.TURN_PORT_IND_CD AS PORT_IND," ).append("\n"); 
		query.append("           SPC_CONTI_CONV_FNC(L.CONTI_CD,V.RLANE_CD,V.DIR_CD) AS CONTI_CD, " ).append("\n"); 
		query.append("           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD )), -1, 'Y', 'N') AS PORT_PAST," ).append("\n"); 
		query.append("           VPS.VPS_ETA_DT AS ETA_DT," ).append("\n"); 
		query.append("           VPS.VPS_ETD_DT AS ETD_DT," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           V.OFC_CD              ," ).append("\n"); 
		query.append("           (SELECT L.CONTI_CD" ).append("\n"); 
		query.append("              FROM MDM_LOCATION     L," ).append("\n"); 
		query.append("                   MDM_ORGANIZATION O" ).append("\n"); 
		query.append("             WHERE L.LOC_CD  = O.LOC_CD" ).append("\n"); 
		query.append("               AND O.OFC_CD  = V.OFC_CD" ).append("\n"); 
		query.append("           ) AS OFC_CONTI          ," ).append("\n"); 
		query.append("           V.STS                 ," ).append("\n"); 
		query.append("           NVL(VPS.SKD_CNG_STS_CD, ' ') AS CNG_STS_CD," ).append("\n"); 
		query.append("           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MIN_SEQ," ).append("\n"); 
		query.append("           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ," ).append("\n"); 
		query.append("           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("            SELECT /*+INDEX_DESC (M XPKSPC_MDL_VER_MST) */" ).append("\n"); 
		query.append("                   DECODE(V.HH_FLG, 'Y', COST_YRWK, '200001')" ).append("\n"); 
		query.append("            FROM SPC_MDL_VER_MST M" ).append("\n"); 
		query.append("            WHERE V.COST_YR||V.COST_WK BETWEEN M.VER_ST_YRWK AND M.VER_END_YRWK" ).append("\n"); 
		query.append("              AND M.CFM_FLG = 'Y'" ).append("\n"); 
		query.append("              AND M.TRD_CD  = V.REP_TRD_CD" ).append("\n"); 
		query.append("              AND ROWNUM    = 1" ).append("\n"); 
		query.append("           ) AS SEASON" ).append("\n"); 
		query.append("		 , V.BSE_YR" ).append("\n"); 
		query.append("		 , V.BSE_QTR_CD" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD VPS," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("            SELECT V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("                   V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                   V.RLANE_CD," ).append("\n"); 
		query.append("                   V.DIR_CD  ," ).append("\n"); 
		query.append("                   SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("                   SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("                   V.COST_WK   ," ).append("\n"); 
		query.append("                   V.VSL_CD    ," ).append("\n"); 
		query.append("                   V.SKD_VOY_NO," ).append("\n"); 
		query.append("                   V.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("                   V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                   V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("#if (${user_ofc} == 'SZPDC')" ).append("\n"); 
		query.append("                   @[user_ofc] AS OFC_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("	#if (${office} == '')" ).append("\n"); 
		query.append("                   'SHARC' AS OFC_CD," ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("                   @[office] AS OFC_CD," ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end " ).append("\n"); 
		query.append("                   @[fcast] AS STS         ," ).append("\n"); 
		query.append("                   V.SLAN_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                  , DECODE(H.DIR_CD, NULL, 'N', 'Y') AS HH_FLG" ).append("\n"); 
		query.append("                  , SUBSTR(V.COST_YRMON, 1, 4) AS BSE_YR" ).append("\n"); 
		query.append("				  , CASE WHEN V.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("						  THEN CEIL(TO_NUMBER(SUBSTR(V.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("						  ELSE CEIL(TO_NUMBER(DECODE(V.COST_WK,'00','01','53','52',V.COST_WK))/13)||'Q'" ).append("\n"); 
		query.append("					  END BSE_QTR_CD -- 2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("              FROM MAS_MON_VVD V," ).append("\n"); 
		query.append("                   SPC_HD_HUL_MST H" ).append("\n"); 
		query.append("             WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("               AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("               AND V.TRD_CD     = H.TRD_CD  (+)" ).append("\n"); 
		query.append("               AND V.RLANE_CD   = H.RLANE_CD(+)" ).append("\n"); 
		query.append("               AND V.DIR_CD     = H.DIR_CD  (+)" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("#if( ${vsl_cd} == '' )  -- per VVD 선택시" ).append("\n"); 
		query.append("               AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK IN (SELECT /*+ INDEX(D COST_YR, COST_WK)*/" ).append("\n"); 
		query.append("                                                               D.COST_YR||D.COST_WK" ).append("\n"); 
		query.append("                                                          FROM MAS_WK_PRD D" ).append("\n"); 
		query.append("                                                         WHERE D.COST_YR||D.COST_WK > @[year]||@[week]" ).append("\n"); 
		query.append("                                                           AND ROWNUM <= TO_NUMBER(@[duration])  )               " ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("    #if(${vvd} == '' )    -- per VSEL 선택시" ).append("\n"); 
		query.append("               AND V.VSL_CD     = @[vsl_cd]" ).append("\n"); 
		query.append("               AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK IN (SELECT /*+ INDEX(D COST_YR, COST_WK)*/" ).append("\n"); 
		query.append("                                                                   D.COST_YR||D.COST_WK" ).append("\n"); 
		query.append("                                                              FROM MAS_WK_PRD D" ).append("\n"); 
		query.append("                                                             WHERE D.COST_YR||D.COST_WK > @[year]||@[week]" ).append("\n"); 
		query.append("                                                               AND D.COST_YR||EQ_WK <= (SELECT TO_CHAR(ADD_MONTHS(TO_DATE(COST_YR||EQ_WK, 'YYYYMM'), 12), 'YYYYMM')" ).append("\n"); 
		query.append("                                                                                          FROM MAS_WK_PRD" ).append("\n"); 
		query.append("                                                                                         WHERE COST_YR||COST_WK = @[year]||@[week] ) )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("               AND V.TRD_CD     LIKE @[trade]   || '%'" ).append("\n"); 
		query.append("               AND V.SUB_TRD_CD LIKE @[subtrade]|| '%'" ).append("\n"); 
		query.append("               AND V.RLANE_CD   LIKE @[lane]    || '%'" ).append("\n"); 
		query.append("               AND V.DIR_CD     LIKE @[bound]   || '%'" ).append("\n"); 
		query.append("               AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                                                        FROM MAS_MON_VVD N" ).append("\n"); 
		query.append("                                                                       WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("                                                                         AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                                                         AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                         AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                                                         AND N.DELT_FLG   = 'N'  " ).append("\n"); 
		query.append("                                                                         AND N.SLAN_CD   <> 'SFX'))" ).append("\n"); 
		query.append("           )         V" ).append("\n"); 
		query.append("     WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_POL_POD AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           POL_PAST            ," ).append("\n"); 
		query.append("           POL_ETA_DT          ," ).append("\n"); 
		query.append("           POL_ETD_DT          ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POD_CONTI           ," ).append("\n"); 
		query.append("           POD_PAST            ," ).append("\n"); 
		query.append("           POD_ETA_DT          ," ).append("\n"); 
		query.append("           POD_ETD_DT          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS                 ," ).append("\n"); 
		query.append("           LD_PORT             ," ).append("\n"); 
		query.append("           PL_PORT_CNT         ," ).append("\n"); 
		query.append("           PD_PORT_CNT         ," ).append("\n"); 
		query.append("           PL_PD_PORT_CNT      ," ).append("\n"); 
		query.append("           SEASON" ).append("\n"); 
		query.append("           , BSE_YR" ).append("\n"); 
		query.append("           , BSE_QTR_CD" ).append("\n"); 
		query.append("           , MAX(PL_PORT_CNT) OVER (PARTITION BY POL_CD) AS MAX_POL_PORT_SEQ" ).append("\n"); 
		query.append("           , MAX(PD_PORT_CNT) OVER (PARTITION BY POD_CD) AS MAX_POD_PORT_SEQ" ).append("\n"); 
		query.append("           , POL_YD_SEQ" ).append("\n"); 
		query.append("           , POD_YD_SEQ" ).append("\n"); 
		query.append("           , PL_VPS_PORT_CD" ).append("\n"); 
		query.append("           , PD_VPS_PORT_CD" ).append("\n"); 
		query.append("           , PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("           , PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("             SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("                    REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                    RLANE_CD            ," ).append("\n"); 
		query.append("                    DIR_CD              ," ).append("\n"); 
		query.append("                    TRD_CD              ," ).append("\n"); 
		query.append("                    SUB_TRD_CD          ," ).append("\n"); 
		query.append("                    COST_YR             ," ).append("\n"); 
		query.append("                    COST_MON            ," ).append("\n"); 
		query.append("                    COST_WK             ," ).append("\n"); 
		query.append("                    VSL_CD              ," ).append("\n"); 
		query.append("                    SKD_VOY_NO          ," ).append("\n"); 
		query.append("                    SKD_DIR_CD          ," ).append("\n"); 
		query.append("                    POL_CD              ," ).append("\n"); 
		query.append("                    POL_SEQ             ," ).append("\n"); 
		query.append("                    POL_CONTI           ," ).append("\n"); 
		query.append("                    POL_PAST            ," ).append("\n"); 
		query.append("                    POL_ETA_DT          ," ).append("\n"); 
		query.append("                    POL_ETD_DT          ," ).append("\n"); 
		query.append("                    POD_CD              ," ).append("\n"); 
		query.append("                    POD_SEQ             ," ).append("\n"); 
		query.append("                    POD_CONTI           ," ).append("\n"); 
		query.append("                    POD_PAST            ," ).append("\n"); 
		query.append("                    POD_ETA_DT          ," ).append("\n"); 
		query.append("                    POD_ETD_DT          ," ).append("\n"); 
		query.append("                    IOC_CD              ," ).append("\n"); 
		query.append("                    PAST                ," ).append("\n"); 
		query.append("                    LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                    LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                    OFC_CD              ," ).append("\n"); 
		query.append("                    OFC_CONTI           ," ).append("\n"); 
		query.append("                    STS                 ," ).append("\n"); 
		query.append("                    LD_PORT             ," ).append("\n"); 
		query.append("                    PL_PORT_CNT         ," ).append("\n"); 
		query.append("                    PD_PORT_CNT         " ).append("\n"); 
		query.append("                    , ROW_NUMBER() OVER (PARTITION BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_VPS_PORT_CD,PL_CLPT_IND_SEQ,PD_VPS_PORT_CD,PD_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                 ORDER BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_VPS_PORT_CD,PL_CLPT_IND_SEQ DESC,PD_VPS_PORT_CD,PD_CLPT_IND_SEQ DESC) AS PL_PD_PORT_CNT" ).append("\n"); 
		query.append("                    , SEASON" ).append("\n"); 
		query.append("                    , BSE_YR" ).append("\n"); 
		query.append("                    , BSE_QTR_CD" ).append("\n"); 
		query.append("                    , POL_YD_SEQ" ).append("\n"); 
		query.append("                    , POD_YD_SEQ" ).append("\n"); 
		query.append("                    , PL_VPS_PORT_CD" ).append("\n"); 
		query.append("                    , PD_VPS_PORT_CD" ).append("\n"); 
		query.append("                    , PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    , PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("               FROM (" ).append("\n"); 
		query.append("                       SELECT PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                              PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                              PL.RLANE_CD      ," ).append("\n"); 
		query.append("                              PL.DIR_CD        ," ).append("\n"); 
		query.append("                              DRL.TRD_CD       ," ).append("\n"); 
		query.append("                              DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                              PL.COST_YR       ," ).append("\n"); 
		query.append("                              PL.COST_MON      ," ).append("\n"); 
		query.append("                              PL.COST_WK       ," ).append("\n"); 
		query.append("                              PL.VSL_CD        ," ).append("\n"); 
		query.append("                              PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                              PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                              PL.PORT_CD        AS POL_CD    ," ).append("\n"); 
		query.append("                              MAX(PL.PORT_SEQ)  AS POL_SEQ   ," ).append("\n"); 
		query.append("                              SPC_CONTI_CONV_PORT_FNC(PL.CONTI_CD, PD.CONTI_CD, PL.RLANE_CD, SUBSTR(PL.PORT_CD, 1, 5), SUBSTR(PD.PORT_CD, 1, 5)) AS POL_CONTI," ).append("\n"); 
		query.append("                              MIN(PL.PORT_PAST) AS POL_PAST  ," ).append("\n"); 
		query.append("                              PL.ETA_DT         AS POL_ETA_DT," ).append("\n"); 
		query.append("                              PL.ETD_DT         AS POL_ETD_DT," ).append("\n"); 
		query.append("                              PD.PORT_CD        AS POD_CD    ," ).append("\n"); 
		query.append("                              (CASE" ).append("\n"); 
		query.append("                                    WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)" ).append("\n"); 
		query.append("                                                                            ELSE CASE" ).append("\n"); 
		query.append("                                                                                      WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)" ).append("\n"); 
		query.append("                                                                                  END" ).append("\n"); 
		query.append("                                END" ).append("\n"); 
		query.append("                              ) AS POD_SEQ," ).append("\n"); 
		query.append("                              PD.CONTI_CD       AS POD_CONTI ," ).append("\n"); 
		query.append("                              MIN(PD.PORT_PAST) AS POD_PAST  ," ).append("\n"); 
		query.append("                              PD.ETA_DT         AS POD_ETA_DT," ).append("\n"); 
		query.append("                              PD.ETD_DT         AS POD_ETD_DT," ).append("\n"); 
		query.append("                              DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD," ).append("\n"); 
		query.append("                              DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                              PL.OFC_CD              ," ).append("\n"); 
		query.append("                              PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                              PL.STS                 ," ).append("\n"); 
		query.append("                              (" ).append("\n"); 
		query.append("                                SUBSTR((SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)" ).append("\n"); 
		query.append("                                          FROM VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                         WHERE S1.CNG_STS_CD <> 'S'),4)" ).append("\n"); 
		query.append("                              ) AS LD_PORT," ).append("\n"); 
		query.append("                   			      PL.PORT_CNT AS PL_PORT_CNT," ).append("\n"); 
		query.append("                              PD.PORT_CNT AS PD_PORT_CNT," ).append("\n"); 
		query.append("                              MAX(PD.SEASON) AS SEASON" ).append("\n"); 
		query.append("		                          , PL.BSE_YR" ).append("\n"); 
		query.append("		                          , PL.BSE_QTR_CD" ).append("\n"); 
		query.append("                              , PL.CALL_YD_IND_SEQ AS POL_YD_SEQ" ).append("\n"); 
		query.append("                              , PD.CALL_YD_IND_SEQ AS POD_YD_SEQ" ).append("\n"); 
		query.append("                              , PL.VPS_PORT_CD     AS PL_VPS_PORT_CD" ).append("\n"); 
		query.append("                              , PD.VPS_PORT_CD     AS PD_VPS_PORT_CD" ).append("\n"); 
		query.append("                              , PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                              , PD.CLPT_IND_SEQ    AS PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                         FROM MDM_DTL_REV_LANE DRL," ).append("\n"); 
		query.append("                              VSL_PORT_SKD     PD ," ).append("\n"); 
		query.append("                              VSL_PORT_SKD     PL" ).append("\n"); 
		query.append("                        WHERE DRL.RLANE_CD        = PL.RLANE_CD" ).append("\n"); 
		query.append("                          AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD" ).append("\n"); 
		query.append("                          AND DRL.FM_CONTI_CD     = PL.CONTI_CD" ).append("\n"); 
		query.append("                          AND DRL.TO_CONTI_CD     = PD.CONTI_CD" ).append("\n"); 
		query.append("                          AND PD.REP_TRD_CD       = PL.REP_TRD_CD" ).append("\n"); 
		query.append("                          AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                          AND PD.RLANE_CD         = PL.RLANE_CD" ).append("\n"); 
		query.append("                          AND PD.VSL_CD           = PL.VSL_CD" ).append("\n"); 
		query.append("                          AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND PD.PORT_CD         <> PL.PORT_CD" ).append("\n"); 
		query.append("                          AND PD.PORT_SEQ         > PL.PORT_SEQ" ).append("\n"); 
		query.append("                          AND (    PL.PORT_SEQ = DECODE(PD.CONTI_CD, PL.CONTI_CD, PL.MIN_SEQ, PL.MAX_SEQ)   -- 단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두" ).append("\n"); 
		query.append("                                OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING" ).append("\n"); 
		query.append("                     GROUP BY PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                              PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                              PL.RLANE_CD      ," ).append("\n"); 
		query.append("                              PL.DIR_CD        ," ).append("\n"); 
		query.append("                              DRL.TRD_CD       ," ).append("\n"); 
		query.append("                              DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                              PL.COST_YR       ," ).append("\n"); 
		query.append("                              PL.COST_MON      ," ).append("\n"); 
		query.append("                              PL.COST_WK       ," ).append("\n"); 
		query.append("                              PL.VSL_CD        ," ).append("\n"); 
		query.append("                              PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                              PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                              PL.PORT_CD       ," ).append("\n"); 
		query.append("                              PL.CONTI_CD      ," ).append("\n"); 
		query.append("                              PD.PORT_CD       ," ).append("\n"); 
		query.append("                              PD.CONTI_CD      ," ).append("\n"); 
		query.append("                              PL.ETA_DT        ," ).append("\n"); 
		query.append("                              PL.ETD_DT        ," ).append("\n"); 
		query.append("                              PD.ETA_DT        ," ).append("\n"); 
		query.append("                              PD.ETD_DT        ," ).append("\n"); 
		query.append("                              DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')," ).append("\n"); 
		query.append("                              DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y')," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                              PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                              PL.OFC_CD              ," ).append("\n"); 
		query.append("                              PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                              PL.STS                 ," ).append("\n"); 
		query.append("                              PL.PORT_CNT            ," ).append("\n"); 
		query.append("                              PD.PORT_CNT" ).append("\n"); 
		query.append("                              , PL.BSE_YR" ).append("\n"); 
		query.append("                              , PL.BSE_QTR_CD" ).append("\n"); 
		query.append("                              , PL.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("                              , PD.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("                              , PL.VPS_PORT_CD" ).append("\n"); 
		query.append("                              , PD.VPS_PORT_CD" ).append("\n"); 
		query.append("                              , PL.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                              , PD.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("     WHERE A.PL_PD_PORT_CNT = '1'" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS                 ," ).append("\n"); 
		query.append("           SEASON" ).append("\n"); 
		query.append("	     , BSE_YR" ).append("\n"); 
		query.append("	     , BSE_QTR_CD" ).append("\n"); 
		query.append("      FROM VVD_POL_POD VPP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POL_YD_CD           ," ).append("\n"); 
		query.append("           POD_YD_CD           ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           TS_FLG              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY," ).append("\n"); 
		query.append("           TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_TTL_WGT," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           SEASON" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT VPP.REP_TRD_CD          ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                     VPP.RLANE_CD            ," ).append("\n"); 
		query.append("                     VPP.DIR_CD              ," ).append("\n"); 
		query.append("                     VPP.COST_YR             ," ).append("\n"); 
		query.append("                     VPP.COST_MON            ," ).append("\n"); 
		query.append("                     VPP.COST_WK             ," ).append("\n"); 
		query.append("                     VPP.VSL_CD              ," ).append("\n"); 
		query.append("                     VPP.SKD_VOY_NO          ," ).append("\n"); 
		query.append("                     VPP.SKD_DIR_CD          ," ).append("\n"); 
		query.append("                     DECODE(BV.VSL_PRE_PST_CD, 'T', VPP.IOC_CD, 'T') AS IOC_CD," ).append("\n"); 
		query.append("                     DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG," ).append("\n"); 
		query.append("                     VPP.PAST                ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT    TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                               || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY *( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                      FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                     WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                          FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                         WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                           AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                     ) AS VAL," ).append("\n"); 
		query.append("                     BV.BKG_NO   ," ).append("\n"); 
		query.append("                     BV.POL_CD   ," ).append("\n"); 
		query.append("                     BV.POD_CD   ," ).append("\n"); 
		query.append("                     BV.POL_YD_CD," ).append("\n"); 
		query.append("                     BV.POD_YD_CD," ).append("\n"); 
		query.append("                     O.OFC_CD    ," ).append("\n"); 
		query.append("                     VPP.SEASON" ).append("\n"); 
		query.append("                FROM SPC_OFC_LVL O  ," ).append("\n"); 
		query.append("                     BKG_BOOKING B  ," ).append("\n"); 
		query.append("                     BKG_VVD     BV ," ).append("\n"); 
		query.append("                     VVD_POL_POD VPP," ).append("\n"); 
		query.append("                     BKG_BL_DOC  D" ).append("\n"); 
		query.append("               WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                 AND O.OFC_CD         = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)" ).append("\n"); 
		query.append("                 AND VPP.COST_YR||VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                 AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("                 AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                 AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                 AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ = VPP.MAX_POL_PORT_SEQ))" ).append("\n"); 
		query.append("                 AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ = VPP.MAX_POD_PORT_SEQ)) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                 AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("#if (${office} == '')" ).append("\n"); 
		query.append("                AND (    VPP.POL_CONTI      = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                      OR O.N2ND_PRNT_OFC_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                      OR O.N2ND_PRNT_OFC_CD = 'SINRS'" ).append("\n"); 
		query.append("					  OR VPP.RLANE_CD       = 'WAFIE' )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                 AND (" ).append("\n"); 
		query.append("                        (VPP.OFC_CONTI = 'A' AND O.N2ND_PRNT_OFC_CD = VPP.OFC_CD)" ).append("\n"); 
		query.append("                        OR" ).append("\n"); 
		query.append("                        (VPP.OFC_CONTI <> 'A' AND ( VPP.POL_CONTI    = VPP.OFC_CONTI OR (VPP.RLANE_CD = 'WAFIE' AND O.N2ND_PRNT_OFC_CD = @[office] ) ) )" ).append("\n"); 
		query.append("                     )    " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("               )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", OWN_DATA AS (" ).append("\n"); 
		query.append("    SELECT /*+INDEX_DESC (M XPKSPC_MDL_VER_MST) */" ).append("\n"); 
		query.append("           DECODE(DECODE(H.DIR_CD, NULL, 'N', 'Y'), 'Y', COST_YRWK, '200001') AS SEASON" ).append("\n"); 
		query.append("     FROM SPC_MDL_VER_MST M, MAS_MON_VVD V, SPC_HD_HUL_MST H" ).append("\n"); 
		query.append("    WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("      AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("      AND SUBSTR(V.SLS_YRMON,1,4)||V.COST_WK BETWEEN M.VER_ST_YRWK AND M.VER_END_YRWK" ).append("\n"); 
		query.append("      AND M.CFM_FLG = 'Y'" ).append("\n"); 
		query.append("      AND M.TRD_CD  = @[trade]" ).append("\n"); 
		query.append("      AND V.TRD_CD  = M.TRD_CD" ).append("\n"); 
		query.append("      AND V.RLANE_CD = @[lane]" ).append("\n"); 
		query.append("      AND V.VSL_CD = SUBSTR(@[vvd],1,4)" ).append("\n"); 
		query.append("      AND V.SKD_VOY_NO = SUBSTR(@[vvd],5,4)" ).append("\n"); 
		query.append("      AND V.DIR_CD = SUBSTR(@[vvd],9,1)" ).append("\n"); 
		query.append("      AND V.TRD_CD     = H.TRD_CD  (+)" ).append("\n"); 
		query.append("      AND V.RLANE_CD   = H.RLANE_CD(+)" ).append("\n"); 
		query.append("      AND V.DIR_CD     = H.DIR_CD  (+)" ).append("\n"); 
		query.append("      AND ROWNUM = 1" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  SELECT Z.TRD_CD    ," ).append("\n"); 
		query.append("         Z.SUB_TRD_CD," ).append("\n"); 
		query.append("         Z.RLANE_CD  ," ).append("\n"); 
		query.append("         Z.DIR_CD    ," ).append("\n"); 
		query.append("         Z.COST_YR   ," ).append("\n"); 
		query.append("         Z.COST_MON  ," ).append("\n"); 
		query.append("         Z.COST_WK   ," ).append("\n"); 
		query.append("         Z.VSL_CD    ," ).append("\n"); 
		query.append("         Z.SKD_VOY_NO," ).append("\n"); 
		query.append("         Z.SKD_DIR_CD," ).append("\n"); 
		query.append("         VVD," ).append("\n"); 
		query.append("         BSA_VOL," ).append("\n"); 
		query.append("         BSA_WGT," ).append("\n"); 
		query.append("         QTA_OCN               ," ).append("\n"); 
		query.append("         QTA_IPC               ," ).append("\n"); 
		query.append("         FC_OCN_VOL            ," ).append("\n"); 
		query.append("         FC_OCN_WGT            ," ).append("\n"); 
		query.append("         FC_IPC_VOL            ," ).append("\n"); 
		query.append("         FC_IPC_WGT            ," ).append("\n"); 
		query.append("		 FC_TS_VOL             ," ).append("\n"); 
		query.append("         FC_TS_WGT             ," ).append("\n"); 
		query.append("         EP_VOL                ," ).append("\n"); 
		query.append("         AL_OCN_VOL            ," ).append("\n"); 
		query.append("         AL_OCN_WGT            ," ).append("\n"); 
		query.append("         AL_IPC_VOL            ," ).append("\n"); 
		query.append("         AL_IPC_WGT            ," ).append("\n"); 
		query.append("         AL_TS_VOL             ," ).append("\n"); 
		query.append("         AL_TS_WGT             ," ).append("\n"); 
		query.append("         BKG_OCN_VOL           ," ).append("\n"); 
		query.append("         BKG_OCN_WGT           ," ).append("\n"); 
		query.append("         BKG_IPC_VOL           ," ).append("\n"); 
		query.append("         BKG_IPC_WGT           ," ).append("\n"); 
		query.append("         BKG_TS_VOL            ," ).append("\n"); 
		query.append("         BKG_TS_WGT            ," ).append("\n"); 
		query.append("         LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("         LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("         CTRL_PORT_FLG   ," ).append("\n"); 
		query.append("         CTRL_40FT_HC_FLG," ).append("\n"); 
		query.append("         CTRL_45FT_HC_FLG," ).append("\n"); 
		query.append("         CTRL_53FT_FLG   ," ).append("\n"); 
		query.append("         CTRL_RF_FLG     ," ).append("\n"); 
		query.append("         CTRL_WGT_FLG    ," ).append("\n"); 
		query.append("         CTRL_SPC_FLG    ," ).append("\n"); 
		query.append("         IBFLAG  ," ).append("\n"); 
		query.append("         SEASON  ," ).append("\n"); 
		query.append("         (CASE WHEN ACCT_GRP_CTRL_FLG = 'Y'" ).append("\n"); 
		query.append("              THEN DECODE(Z.SEASON, (SELECT O.SEASON FROM OWN_DATA O), 'Y', 'N')" ).append("\n"); 
		query.append("              ELSE 'Y'" ).append("\n"); 
		query.append("         END) AS USABLE" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("          SELECT Z.REP_TRD_CD     AS TRD_CD    ," ).append("\n"); 
		query.append("                 Z.REP_SUB_TRD_CD AS SUB_TRD_CD," ).append("\n"); 
		query.append("                 Z.RLANE_CD  ," ).append("\n"); 
		query.append("                 Z.DIR_CD    ," ).append("\n"); 
		query.append("                 Z.COST_YR   ," ).append("\n"); 
		query.append("                 Z.COST_MON  ," ).append("\n"); 
		query.append("                 Z.COST_WK   ," ).append("\n"); 
		query.append("                 Z.VSL_CD    ," ).append("\n"); 
		query.append("                 Z.SKD_VOY_NO," ).append("\n"); 
		query.append("                 Z.SKD_DIR_CD," ).append("\n"); 
		query.append("                 Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                 SPC_GET_WK_VVD_BSA_FNC('VOL'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_VOL," ).append("\n"); 
		query.append("                 SPC_GET_WK_VVD_BSA_FNC('WGT'    , Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_WGT," ).append("\n"); 
		query.append("                 QTA_OCN               ," ).append("\n"); 
		query.append("                 QTA_IPC               ," ).append("\n"); 
		query.append("                 FC_OCN_VOL            ," ).append("\n"); 
		query.append("                 FC_OCN_WGT            ," ).append("\n"); 
		query.append("                 FC_IPC_VOL            ," ).append("\n"); 
		query.append("                 FC_IPC_WGT            ," ).append("\n"); 
		query.append("                 FC_TS_VOL             ," ).append("\n"); 
		query.append("                 FC_TS_WGT             ," ).append("\n"); 
		query.append("                 EP_VOL                ," ).append("\n"); 
		query.append("                 AL_OCN_VOL            ," ).append("\n"); 
		query.append("                 AL_OCN_WGT            ," ).append("\n"); 
		query.append("                 AL_IPC_VOL            ," ).append("\n"); 
		query.append("                 AL_IPC_WGT            ," ).append("\n"); 
		query.append("                 AL_TS_VOL             ," ).append("\n"); 
		query.append("                 AL_TS_WGT             ," ).append("\n"); 
		query.append("                 BKG_OCN_VOL           ," ).append("\n"); 
		query.append("                 BKG_OCN_WGT           ," ).append("\n"); 
		query.append("                 BKG_IPC_VOL           ," ).append("\n"); 
		query.append("                 BKG_IPC_WGT           ," ).append("\n"); 
		query.append("                 BKG_TS_VOL            ," ).append("\n"); 
		query.append("                 BKG_TS_WGT            ," ).append("\n"); 
		query.append("                 Z.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                 Z.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                 NVL(C.CTRL_LVL_CD     , 'L') AS CTRL_PORT_FLG   ," ).append("\n"); 
		query.append("                 NVL(C.CTRL_40FT_HC_FLG, 'N') AS CTRL_40FT_HC_FLG," ).append("\n"); 
		query.append("                 NVL(C.CTRL_45FT_HC_FLG, 'N') AS CTRL_45FT_HC_FLG," ).append("\n"); 
		query.append("                 NVL(C.CTRL_53FT_FLG   , 'N') AS CTRL_53FT_FLG   ," ).append("\n"); 
		query.append("                 NVL(C.CTRL_RF_FLG     , 'N') AS CTRL_RF_FLG     ," ).append("\n"); 
		query.append("                 NVL(C.CTRL_WGT_FLG    , 'N') AS CTRL_WGT_FLG    ," ).append("\n"); 
		query.append("                 NVL(C.CTRL_SPC_FLG    , 'N') AS CTRL_SPC_FLG    ," ).append("\n"); 
		query.append("                 DECODE(C.RLANE_CD, NULL, 'I', 'R') AS IBFLAG  --," ).append("\n"); 
		query.append("                 --SG.SPC_GNTE_QTY AS MTY_GNTE" ).append("\n"); 
		query.append("                 , SEASON" ).append("\n"); 
		query.append("                 , NVL(C.ACCT_GRP_CTRL_FLG, 'N') AS ACCT_GRP_CTRL_FLG" ).append("\n"); 
		query.append("            FROM (" ).append("\n"); 
		query.append("                    SELECT REP_TRD_CD    ," ).append("\n"); 
		query.append("                           REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                           RLANE_CD      ," ).append("\n"); 
		query.append("                           DIR_CD        ," ).append("\n"); 
		query.append("                           COST_YR       ," ).append("\n"); 
		query.append("                           COST_MON      ," ).append("\n"); 
		query.append("                           COST_WK       ," ).append("\n"); 
		query.append("                           VSL_CD        ," ).append("\n"); 
		query.append("                           SKD_VOY_NO    ," ).append("\n"); 
		query.append("                           SKD_DIR_CD    ," ).append("\n"); 
		query.append("                           SUM(QTA_OCN)     AS QTA_OCN    ," ).append("\n"); 
		query.append("                           SUM(QTA_IPC)     AS QTA_IPC    ," ).append("\n"); 
		query.append("                           SUM(FC_OCN_VOL)  AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                           SUM(FC_OCN_WGT)  AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                           SUM(FC_IPC_VOL)  AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                           SUM(FC_IPC_WGT)  AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                           SUM(FC_TS_VOL)  AS FC_TS_VOL ," ).append("\n"); 
		query.append("                           SUM(FC_TS_WGT)  AS FC_TS_WGT ," ).append("\n"); 
		query.append("                           SUM(EP_VOL)      AS EP_VOL     ," ).append("\n"); 
		query.append("                           SUM(AL_OCN_VOL)  AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                           SUM(AL_OCN_WGT)  AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                           SUM(AL_IPC_VOL)  AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                           SUM(AL_IPC_WGT)  AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                           SUM(AL_TS_VOL)  AS AL_TS_VOL ," ).append("\n"); 
		query.append("                           SUM(AL_TS_WGT)  AS AL_TS_WGT ," ).append("\n"); 
		query.append("                           SUM(BKG_OCN_VOL) AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                           SUM(BKG_OCN_WGT) AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                           SUM(BKG_IPC_VOL) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                           SUM(BKG_IPC_WGT) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                           SUM(BKG_TS_VOL) AS BKG_TS_VOL," ).append("\n"); 
		query.append("                           SUM(BKG_TS_WGT) AS BKG_TS_WGT," ).append("\n"); 
		query.append("                           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                           LST_LODG_PORT_CD," ).append("\n"); 
		query.append("                           MAX(SEASON) AS SEASON" ).append("\n"); 
		query.append("                      FROM (" ).append("\n"); 
		query.append("                              -- LOAD QUOTA (OFFICE)" ).append("\n"); 
		query.append("                              SELECT 3 AS FLG," ).append("\n"); 
		query.append("                                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                     VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                     VPP.COST_YR       ," ).append("\n"); 
		query.append("                                     VPP.COST_MON      ," ).append("\n"); 
		query.append("                                     VPP.COST_WK       ," ).append("\n"); 
		query.append("                                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                     VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                     DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN," ).append("\n"); 
		query.append("                                     DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC," ).append("\n"); 
		query.append("                                     NULL AS FC_OCN_VOL ," ).append("\n"); 
		query.append("                                     NULL AS FC_OCN_WGT ," ).append("\n"); 
		query.append("                                     NULL AS FC_IPC_VOL ," ).append("\n"); 
		query.append("                                     NULL AS FC_IPC_WGT ," ).append("\n"); 
		query.append("                                     NULL AS FC_TS_VOL ," ).append("\n"); 
		query.append("                                     NULL AS FC_TS_WGT ," ).append("\n"); 
		query.append("                                     NULL AS EP_VOL     ," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_CD," ).append("\n"); 
		query.append("                                     VPP.SEASON" ).append("\n"); 
		query.append("                                FROM SQM_CFM_QTA      MQ ," ).append("\n"); 
		query.append("                                     SQM_QTA_RLSE_VER MQR," ).append("\n"); 
		query.append("                                     VVDS             VPP," ).append("\n"); 
		query.append("                                     SPC_OFC_LVL      O" ).append("\n"); 
		query.append("                               WHERE 1 = 1" ).append("\n"); 
		query.append("                                 AND MQR.BSE_YR          = VPP.BSE_YR" ).append("\n"); 
		query.append("                                 AND MQR.BSE_QTR_CD      = VPP.BSE_QTR_CD --CEIL(TO_NUMBER(DECODE(VPP.COST_WK,'00','01','53','52',VPP.COST_WK))/13)||'Q'--CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("                                 AND MQR.SQM_VER_STS_CD  = 'R' -- " ).append("\n"); 
		query.append("                                 AND MQR.BSE_TP_CD       = 'Q' --" ).append("\n"); 
		query.append("                                 AND MQ.QTA_RLSE_VER_NO  = MQR.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                                 AND MQ.BSE_TP_CD        = MQR.BSE_TP_CD  --" ).append("\n"); 
		query.append("                                 AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("                                 AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                                 AND MQ.QTA_TGT_CD       = 'D'" ).append("\n"); 
		query.append("                                 AND MQ.OFC_VW_CD        = 'L' " ).append("\n"); 
		query.append("                                 AND MQ.TRD_CD           = VPP.TRD_CD" ).append("\n"); 
		query.append("                                 AND MQ.RLANE_CD         = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                 AND MQ.DIR_CD           = VPP.DIR_CD" ).append("\n"); 
		query.append("                                 AND MQ.VSL_CD           = VPP.VSL_CD" ).append("\n"); 
		query.append("                                 AND MQ.SKD_VOY_NO       = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                 AND MQ.SKD_DIR_CD       = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                 AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                                 --AND MQ.RGN_OFC_CD       = O.OFC_CD" ).append("\n"); 
		query.append("                                 AND NVL((SELECT O2.CONV_RGN_OFC_CD" ).append("\n"); 
		query.append("                                            FROM SPC_RGN_OFC_CONV O2" ).append("\n"); 
		query.append("                                           WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD), MQ.RGN_OFC_CD) = O.OFC_CD" ).append("\n"); 
		query.append("#if (${office} == '')" ).append("\n"); 
		query.append("                                 AND (    O.N2ND_PRNT_OFC_CD = CASE" ).append("\n"); 
		query.append("                                                          WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN ( SELECT A1.OFC_CD" ).append("\n"); 
		query.append("                                                                                                                FROM MDM_ORGANIZATION A1," ).append("\n"); 
		query.append("                                                                                                                     MDM_LOCATION     A2" ).append("\n"); 
		query.append("                                                                                                               WHERE A2.CNT_CD   = 'EG'" ).append("\n"); 
		query.append("                                                                                                                 AND A1.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                                                                                                 AND A2.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                                                                                                 AND A1.OFC_CD   = A2.SLS_OFC_CD" ).append("\n"); 
		query.append("                                                                                                               GROUP BY OFC_CD  ) THEN 'HAMRU'" ).append("\n"); 
		query.append("                                                         WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD" ).append("\n"); 
		query.append("                                                         ELSE VPP.OFC_CD" ).append("\n"); 
		query.append("                                                     END" ).append("\n"); 
		query.append("                                        OR O.N2ND_PRNT_OFC_CD = 'SINRS' )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                 AND O.N2ND_PRNT_OFC_CD           = VPP.OFC_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                 AND MQ.LOD_QTY          > 0" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                              UNION ALL" ).append("\n"); 
		query.append("                              -- FORECAST" ).append("\n"); 
		query.append("                              SELECT 4 AS FLG," ).append("\n"); 
		query.append("                                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                     VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                     VPP.COST_YR       ," ).append("\n"); 
		query.append("                                     VPP.COST_MON      ," ).append("\n"); 
		query.append("                                     VPP.COST_WK       ," ).append("\n"); 
		query.append("                                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                     VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                     NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                                     NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                                     DECODE(F.IOC_TS_CD, 'O', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                     DECODE(F.IOC_TS_CD, 'O', F.CFM_TTL_WGT) AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                     DECODE(F.IOC_TS_CD, 'I', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                     DECODE(F.IOC_TS_CD, 'I', F.CFM_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                     DECODE(F.IOC_TS_CD, 'T', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_TS_VOL," ).append("\n"); 
		query.append("                                     DECODE(F.IOC_TS_CD, 'T', F.CFM_TTL_WGT) AS FC_TS_WGT," ).append("\n"); 
		query.append("                                     NULL AS EP_VOL     ," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_CD," ).append("\n"); 
		query.append("                                     VPP.SEASON" ).append("\n"); 
		query.append("                                FROM SPC_DLY_FCAST_CUST F  ," ).append("\n"); 
		query.append("                                     VVD_POL_POD        VPP" ).append("\n"); 
		query.append("                               WHERE F.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                 AND F.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                                 AND F.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                                 AND F.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                 AND F.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                 AND F.POL_YD_CD  = VPP.POL_CD" ).append("\n"); 
		query.append("                                 AND F.POD_YD_CD  = VPP.POD_CD" ).append("\n"); 
		query.append("                                 AND F.POL_YD_IND_SEQ = VPP.POL_YD_SEQ" ).append("\n"); 
		query.append("                                 AND F.POD_YD_IND_SEQ = VPP.POD_YD_SEQ" ).append("\n"); 
		query.append("#if (${office} == '')" ).append("\n"); 
		query.append("                                 AND (    VPP.POL_CONTI      = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                                       OR F.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                                       OR F.SLS_RHQ_CD = 'SINRS'" ).append("\n"); 
		query.append("                                       OR VPP.RLANE_CD       = 'WAFIE' )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                 AND (" ).append("\n"); 
		query.append("                                        (VPP.OFC_CONTI = 'A' AND F.SLS_RHQ_CD = VPP.OFC_CD)" ).append("\n"); 
		query.append("                                        OR" ).append("\n"); 
		query.append("                                        (VPP.OFC_CONTI <> 'A' AND ( VPP.POL_CONTI    = VPP.OFC_CONTI OR (VPP.RLANE_CD = 'WAFIE' AND F.SLS_RHQ_CD = @[office] ) ) )" ).append("\n"); 
		query.append("                                     )    " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                 AND VPP.PAST      = 'N'" ).append("\n"); 
		query.append("                                 AND NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) + NVL(F.CFM_RF_QTY,0) > 0" ).append("\n"); 
		query.append("                              UNION ALL" ).append("\n"); 
		query.append("                              -- EMPTY PLAN" ).append("\n"); 
		query.append("                              SELECT 5 AS FLG, " ).append("\n"); 
		query.append("                                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                     VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                     VPP.COST_YR       ," ).append("\n"); 
		query.append("                                     VPP.COST_MON      ," ).append("\n"); 
		query.append("                                     VPP.COST_WK       ," ).append("\n"); 
		query.append("                                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                     VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                     NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                                     NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                                     NULL AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS FC_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS FC_TS_WGT," ).append("\n"); 
		query.append("                                     (" ).append("\n"); 
		query.append("                                       SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY)" ).append("\n"); 
		query.append("                                         FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                        WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                                     ) AS EP_VOL, " ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_WGT ," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_WGT ," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_VOL ," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_WGT ," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_CD," ).append("\n"); 
		query.append("                                     VPP.SEASON" ).append("\n"); 
		query.append("                                FROM BKG_BOOKING B  ," ).append("\n"); 
		query.append("                                     BKG_VVD     BV ," ).append("\n"); 
		query.append("                                     VVD_POL_POD VPP" ).append("\n"); 
		query.append("                               WHERE B.BKG_STS_CD   IN ('W', 'F')" ).append("\n"); 
		query.append("                                 AND B.BKG_CGO_TP_CD = 'P'" ).append("\n"); 
		query.append("                                 AND B.BKG_NO        = BV.BKG_NO" ).append("\n"); 
		query.append("                                 AND BV.VSL_CD       = VPP.VSL_CD" ).append("\n"); 
		query.append("                                 AND BV.SKD_VOY_NO   = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                 AND BV.SKD_DIR_CD   = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                 AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1))" ).append("\n"); 
		query.append("                                 AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1)) " ).append("\n"); 
		query.append("                                 AND VPP.POL_CONTI   = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                              UNION ALL" ).append("\n"); 
		query.append("                              -- ALLOCATION" ).append("\n"); 
		query.append("                              SELECT 6 AS FLG," ).append("\n"); 
		query.append("                                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                                     VPP.RLANE_CD      ," ).append("\n"); 
		query.append("                                     VPP.DIR_CD        ," ).append("\n"); 
		query.append("                                     VPP.COST_YR       ," ).append("\n"); 
		query.append("                                     VPP.COST_MON      ," ).append("\n"); 
		query.append("                                     VPP.COST_WK       ," ).append("\n"); 
		query.append("                                     VPP.VSL_CD        ," ).append("\n"); 
		query.append("                                     VPP.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                                     VPP.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                                     NULL AS QTA_OCN   ," ).append("\n"); 
		query.append("                                     NULL AS QTA_IPC   ," ).append("\n"); 
		query.append("                                     NULL AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS FC_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS FC_TS_WGT," ).append("\n"); 
		query.append("                                     NULL AS EP_VOL    ," ).append("\n"); 
		query.append("                                     DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'O', A.ASGN_TTL_QTY)) AS AL_OCN_VOL," ).append("\n"); 
		query.append("                                     DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'O', A.ASGN_TTL_WGT)) AS AL_OCN_WGT," ).append("\n"); 
		query.append("                                     DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'I', A.ASGN_TTL_QTY)) AS AL_IPC_VOL," ).append("\n"); 
		query.append("                                     DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'I', A.ASGN_TTL_WGT)) AS AL_IPC_WGT," ).append("\n"); 
		query.append("                                     DECODE(A.TS_FLG, 'Y', A.ASGN_TTL_QTY) AS AL_TS_VOL," ).append("\n"); 
		query.append("                                     DECODE(A.TS_FLG, 'Y', A.ASGN_TTL_WGT) AS AL_TS_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS BKG_TS_WGT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                     VPP.LST_LODG_PORT_CD," ).append("\n"); 
		query.append("                                     VPP.SEASON" ).append("\n"); 
		query.append("                                FROM SPC_ALOC_POL_POD A  ," ).append("\n"); 
		query.append("                                     VVD_POL_POD      VPP" ).append("\n"); 
		query.append("                               WHERE A.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                                 AND A.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                                 AND A.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                                 AND A.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                 AND A.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                 AND A.POL_YD_CD  = VPP.POL_CD" ).append("\n"); 
		query.append("                                 AND A.POD_YD_CD  = VPP.POD_CD" ).append("\n"); 
		query.append("                                 AND A.POL_YD_IND_SEQ = VPP.POL_YD_SEQ" ).append("\n"); 
		query.append("                                 AND A.POD_YD_IND_SEQ = VPP.POD_YD_SEQ" ).append("\n"); 
		query.append("                                 AND A.REP_TRD_CD     = VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                                 AND A.REP_SUB_TRD_CD = VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                                 AND A.TRD_CD         = VPP.TRD_CD" ).append("\n"); 
		query.append("                                 AND A.SUB_TRD_CD     = VPP.SUB_TRD_CD" ).append("\n"); 
		query.append("#if (${office} == '')" ).append("\n"); 
		query.append("                                 AND (    VPP.POL_CONTI      = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                                       OR A.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                                       OR A.SLS_RHQ_CD = 'SINRS'" ).append("\n"); 
		query.append("                                       OR VPP.RLANE_CD       = 'WAFIE' )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                 AND (" ).append("\n"); 
		query.append("                                        (VPP.OFC_CONTI = 'A' AND A.SLS_RHQ_CD = VPP.OFC_CD)" ).append("\n"); 
		query.append("                                        OR" ).append("\n"); 
		query.append("                                        (VPP.OFC_CONTI <> 'A' AND ( VPP.POL_CONTI    = VPP.OFC_CONTI OR (VPP.RLANE_CD = 'WAFIE' AND A.SLS_RHQ_CD = @[office] ) ) )" ).append("\n"); 
		query.append("                                     )    " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                              UNION ALL" ).append("\n"); 
		query.append("                              -- BOOKING" ).append("\n"); 
		query.append("                              SELECT 7 AS FLG," ).append("\n"); 
		query.append("                                     REP_TRD_CD    ," ).append("\n"); 
		query.append("                                     REP_SUB_TRD_CD ," ).append("\n"); 
		query.append("                                     RLANE_CD       ," ).append("\n"); 
		query.append("                                     DIR_CD         ," ).append("\n"); 
		query.append("                                     COST_YR        ," ).append("\n"); 
		query.append("                                     COST_MON       ," ).append("\n"); 
		query.append("                                     COST_WK        ," ).append("\n"); 
		query.append("                                     VSL_CD         ," ).append("\n"); 
		query.append("                                     SKD_VOY_NO     ," ).append("\n"); 
		query.append("                                     SKD_DIR_CD     ," ).append("\n"); 
		query.append("                                     NULL AS QTA_OCN," ).append("\n"); 
		query.append("                                     NULL AS QTA_IPC," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD||PAST, 'OY', BKG_TTL_QTY) AS FC_OCN_VOL," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD||PAST, 'OY', BKG_TTL_WGT) AS FC_OCN_WGT," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD||PAST, 'IY', BKG_TTL_QTY) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD||PAST, 'IY', BKG_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD||PAST, 'TY', BKG_TTL_QTY) AS FC_IPC_VOL," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD||PAST, 'TY', BKG_TTL_WGT) AS FC_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS EP_VOL    ," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_VOL," ).append("\n"); 
		query.append("                                     NULL AS AL_OCN_WGT," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_VOL," ).append("\n"); 
		query.append("                                     NULL AS AL_IPC_WGT," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_VOL," ).append("\n"); 
		query.append("                                     NULL AS AL_TS_WGT," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD, 'O', BKG_TTL_QTY) AS BKG_OCN_VOL," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD, 'O', BKG_TTL_WGT) AS BKG_OCN_WGT," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD, 'I', BKG_TTL_QTY) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD, 'I', BKG_TTL_WGT) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD, 'T', BKG_TTL_QTY) AS BKG_IPC_VOL," ).append("\n"); 
		query.append("                                     DECODE(IOC_CD, 'T', BKG_TTL_WGT) AS BKG_IPC_WGT," ).append("\n"); 
		query.append("                                     LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                     LST_LODG_PORT_CD," ).append("\n"); 
		query.append("                                     SEASON" ).append("\n"); 
		query.append("                                FROM BKG_DATA" ).append("\n"); 
		query.append("                               WHERE BKG_TTL_QTY + BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("                           ) V" ).append("\n"); 
		query.append("                  GROUP BY REP_TRD_CD          ," ).append("\n"); 
		query.append("                           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                           RLANE_CD            ," ).append("\n"); 
		query.append("                           DIR_CD              ," ).append("\n"); 
		query.append("                           COST_YR             ," ).append("\n"); 
		query.append("                           COST_MON            ," ).append("\n"); 
		query.append("                           COST_WK             ," ).append("\n"); 
		query.append("                           VSL_CD              ," ).append("\n"); 
		query.append("                           SKD_VOY_NO          ," ).append("\n"); 
		query.append("                           SKD_DIR_CD          ," ).append("\n"); 
		query.append("                           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                           LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                 ) Z," ).append("\n"); 
		query.append("                 SPC_ALOC_CTRL_OPT C" ).append("\n"); 
		query.append("           WHERE C.RLANE_CD  (+) = Z.RLANE_CD" ).append("\n"); 
		query.append("             AND C.DIR_CD    (+) = Z.DIR_CD" ).append("\n"); 
		query.append("             AND C.VSL_CD    (+) = Z.VSL_CD" ).append("\n"); 
		query.append("             AND C.SKD_VOY_NO(+) = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("             AND C.SKD_DIR_CD(+) = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("            -- AND NVL(C.ACCT_GRP_CTRL_FLG(+),'N') = nvl([grp_acct],'N') -- 20130604" ).append("\n"); 
		query.append("  ) Z" ).append("\n"); 
		query.append(" WHERE Z.ACCT_GRP_CTRL_FLG = @[grp_acct]" ).append("\n"); 
		query.append("ORDER BY Z.TRD_CD          ," ).append("\n"); 
		query.append("         Z.SUB_TRD_CD      ," ).append("\n"); 
		query.append("         Z.RLANE_CD            ," ).append("\n"); 
		query.append("         Z.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("         Z.DIR_CD              ," ).append("\n"); 
		query.append("         Z.COST_YR             ," ).append("\n"); 
		query.append("         Z.COST_MON            ," ).append("\n"); 
		query.append("         Z.COST_WK             ," ).append("\n"); 
		query.append("         Z.VSL_CD              ," ).append("\n"); 
		query.append("         Z.SKD_VOY_NO          ," ).append("\n"); 
		query.append("         Z.SKD_DIR_CD" ).append("\n"); 

	}
}