<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TransshipmentMgtDBDAOsearchTSListBy1st2ndVVDListRSQL">
			<desc><![CDATA[t/s port를 기준으로 booking들의 입항 vessel과 출항 vessel을 조회한다.
2011.04.28 이일민 [CHM-201110111] Transshipment 와 discharging list data match 요청
2011.04.28 이일민 [CHM-201110191] * T/S List by 1st VSL & 2nd VSL 화면의 1st VSL 조회 값 변경]]></desc>
			<sql><![CDATA[
select  rmk
      , ts_rmk
      , disc
      , firstlane
      , firstvvd 
      , firstetb
      , nextlane
      , nextvvd
      , nextetd
      , bl_no
      , cntr_no
      , cntr_vol
      , cntr_tpsz_cd
      , cntr_seal_no
      , org_yd_cd
      , pol_cd
      , POL_NM
      , pod_cd
      , pod_nod_cd
      , POD_NM
      , del_cd
      , DEL_NM
      , wgt
      , BS_CD
      , special
      , auth
      , stwg_cd
      , cmdt_nm
      , bkg_no
      , TEU
      , FEU
#if (${disc_load_cd}=='D' || ${disc_load_cd}=='L')
      , op_cd 
      , terminal
      , vsl_nm 
      , vvd1
      , etb
#end
  from(
select #if (${disc_load_cd}=='L') 
        	RANK() OVER (PARTITION BY BK.BL_NO, CNTR.CNTR_NO ORDER BY VVD1.VSL_PRE_PST_CD DESC, VVD1.VSL_SEQ DESC) AS RNK
#elseif (${disc_load_cd}=='D')
        	RANK() OVER (PARTITION BY BK.BL_NO, CNTR.CNTR_NO ORDER BY VVD2.VSL_PRE_PST_CD DESC, VVD2.VSL_SEQ DESC) AS RNK
#end
        , decode(nvl(rmk.ts_rmk, 'null'), 'null', '0', '1') rmk
        , rmk.ts_rmk
        , @[disc_load_cd] disc
#if (${disc_load_cd}=='D') 
        , vvd1.op_cd 
#elseif (${disc_load_cd}=='L')
        , vvd2.op_cd 
#end
		, vvd1.slan_cd firstlane
		, nvl(vvd1.vsl_cd||vvd1.skd_voy_no||vvd1.skd_dir_cd,' ') firstvvd 
		, to_char(skd1.vps_etb_dt,'yyyy-mm-dd') firstetb
		, vvd2.slan_cd nextlane
        , nvl(vvd2.vsl_cd||vvd2.skd_voy_no||vvd2.skd_dir_cd,' ') nextvvd   
		, to_char(skd2.vps_etd_dt,'yyyy-mm-dd') nextetd
#if (${disc_load_cd}=='D') 
		, vvd2.pol_yd_cd terminal 
#elseif (${disc_load_cd}=='L')
		, vvd2.pol_yd_cd terminal 
#end    
		, bk.bl_no
        , cntr.cntr_no
        , cntr.cntr_vol_qty as cntr_vol
        , cntr.cntr_tpsz_cd
        , seal.cntr_seal_no
        , vvd1.pod_yd_cd org_yd_cd
        , vvd2.pod_yd_cd org_yd_cd2
        , bk.pol_cd
        , (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = BK.POL_CD) POL_NM
        , vvd2.pod_cd
		, SUBSTR(VVD2.POD_YD_CD,6,2) pod_nod_cd
        , (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = VVD2.POD_CD) POD_NM
        , bk.del_cd
        , (SELECT LOC_NM FROM MDM_LOCATION WHERE LOC_CD = BK.DEL_CD) DEL_NM
		, ROUND((CASE WHEN NVL(CNTR.CNTR_WGT, 0) = 0 THEN 
				            decode(BL.wgt_ut_cd, 'LBS', BL.ACT_WGT * 0.45359, BL.ACT_WGT)
		        		     / (SELECT COUNT(1) FROM BKG_CONTAINER CNT WHERE CNT.BKG_NO = CNTR.BKG_NO) 
				      ELSE decode(cntr.wgt_ut_cd, 'LBS', cntr.cntr_wgt * 0.45359, cntr.cntr_wgt) END
				+ (SELECT DECODE(NVL(S.TARE_WGT, 0), 0
				            , DECODE(NVL(MDM.CNTR_TPSZ_TARE_WGT, 0), 0
					            , DECODE(M.CNTR_TPSZ_CD, 'T2', 3600, 'T4', 5200, 0) 
						            , MDM.CNTR_TPSZ_TARE_WGT)
							            , S.TARE_WGT  ) TARE_WGT
					FROM MST_CONTAINER M, MST_CNTR_SPEC S, MDM_CNTR_TP_SZ MDM
					WHERE M.CNTR_NO           =   CNTR.CNTR_NO
					AND   M.CNTR_SPEC_NO      =   S.CNTR_SPEC_NO(+)
					AND   M.CNTR_TPSZ_CD      =   MDM.CNTR_TPSZ_CD
				)), 0) wgt
			,BK.blck_stwg_cd AS BS_CD
        ,  ltrim(   decode(dg.bkg_no, null,'', 'Cls:'||dg.imdg_clss_cd||' UN:'||dg.imdg_un_no||' ')
			     || decode(rf.bkg_no, null, '', rf.cdo_temp||'''C/')
			     || decode(rf.cntr_vent_tp_cd, 'C', 'CMH:', 'P', 'Venti:', '')||' '
			     || decode(rf.cntr_vent_tp_cd, 'C', decode(rf.CBM_PER_HR_QTY, 0, 'Closed', rf.CBM_PER_HR_QTY||'%') , 'P', decode(rf.VENT_RTO, 0, 'Closed', rf.VENT_RTO ||'%'), '')
			     || decode(awk.bkg_no, null, '', decode(awk.ovr_hgt,    0, '' , 'OH:'||awk.ovr_hgt)
                    		                  || decode(awk.ovr_lf_len, 0, '' , decode(awk.ovr_hgt               ,0,'','/')||'OWL:'||awk.ovr_lf_len)
            		                          || decode(awk.ovr_rt_len, 0, '' , decode(awk.ovr_hgt+awk.ovr_lf_len,0,'','/')||'OWR:'||awk.ovr_rt_len) )||' '
			     || decode(bk.stwg_cd, null, '', bk.stwg_cd)||' '|| decode(cntr.rd_cgo_flg, 'Y', 'RD', '')
             ) AS special
        , decode(TRIM(dg.spcl_cgo_apro_cd||rf.spcl_cgo_apro_cd||awk.spcl_cgo_apro_cd), '', '', 'Y', 'Y', 'YY', 'Y', 'YYY', 'Y', 'N') auth
        , bk.stwg_cd
        , cmdt.cmdt_nm
        , bk.bkg_no
        , skd1.vps_eta_dt
        , skd2.vps_eta_dt vps_eta_dt2
#if (${disc_load_cd}=='D') 
        , vsl2.vsl_eng_nm||' '||vvd2.skd_voy_no||' '||vvd2.skd_dir_cd vsl_nm 
        , vvd2.vsl_cd||vvd2.skd_voy_no||vvd2.skd_dir_cd vvd1
        , to_char(skd2.vps_etb_dt, 'yyyy-mm-dd') etb
#elseif (${disc_load_cd}=='L')
        , vsl1.vsl_eng_nm||' '||vvd1.skd_voy_no||' '||vvd1.skd_dir_cd vsl_nm 
        , vvd1.vsl_cd||vvd1.skd_voy_no||vvd1.skd_dir_cd vvd1
        , to_char(skd1.vps_etb_dt, 'yyyy-mm-dd') etb
#end  
        , (SELECT DECODE(SUBSTR(CNTR_TPSZ_CD,2,1),'2',NVL(cntr_vol_qty,0),0)
           FROM  BKG_CONTAINER C
           WHERE C.BKG_NO = CNTR.BKG_NO
           AND   C.CNTR_NO = CNTR.CNTR_NO) AS TEU
        , (SELECT DECODE(SUBSTR(CNTR_TPSZ_CD,2,1),'2',0,NVL(cntr_vol_qty,0))
           FROM BKG_CONTAINER C
           WHERE C.BKG_NO = CNTR.BKG_NO
           AND   C.CNTR_NO = CNTR.CNTR_NO) AS FEU
  from bkg_booking bk, bkg_bl_doc bl
        , bkg_container cntr, bkg_cntr_seal_no seal
        , bkg_dg_cgo dg, bkg_rf_cgo rf, bkg_awk_cgo awk
        , bkg_ts_rmk rmk, mdm_commodity cmdt
        , bkg_vvd vvd1, mdm_vsl_cntr vsl1, vsk_vsl_port_skd skd1
        , bkg_vvd vvd2, mdm_vsl_cntr vsl2, vsk_vsl_port_skd skd2
 where bk.bkg_no         = VVD1.bkg_no 
   and bk.bkg_no         = VVD2.bkg_no 
   and vvd1.pod_cd       = vvd2.pol_cd
   and bk.bkg_no         = bl.bkg_no 
   AND BK.BKG_STS_CD     not in ('X','S')
   and bk.bkg_no         = cntr.bkg_no 
   and cntr.bkg_no        = seal.bkg_no(+) 
   and cntr.cntr_no       = seal.cntr_no(+)
   and 1                  = seal.cntr_seal_Seq(+)
   and cntr.bkg_no        = dg.bkg_no(+) 
   and cntr.cntr_no       = dg.cntr_no(+)
   and 1	          = dg.CNTR_CGO_SEQ(+)
   and cntr.bkg_no        = rf.bkg_no(+) 
   and cntr.cntr_no       = rf.cntr_no(+)
   and cntr.bkg_no        = awk.bkg_no(+) 
   and cntr.cntr_no       = awk.cntr_no(+)
   and vvd1.bkg_no        = rmk.bkg_no(+) 
   and 'N'                = rmk.ts_rmk_delt_flg(+)
   and bk.cmdt_cd         = cmdt.cmdt_cd
   and vvd1.vsl_cd        = vsl1.vsl_cd(+)
   and vvd1.vsl_cd        = skd1.vsl_cd(+)
   and vvd1.skd_voy_no    = skd1.skd_voy_no(+)
   and vvd1.skd_dir_cd    = skd1.skd_dir_cd(+)
   and vvd1.pod_cd        = skd1.vps_port_cd(+)
   and vvd1.pod_clpt_ind_seq  = skd1.clpt_ind_seq(+)
   and vvd2.vsl_cd        = vsl2.vsl_cd(+)
   and vvd2.vsl_cd        = skd2.vsl_cd(+)
   and vvd2.skd_voy_no    = skd2.skd_voy_no(+)
   and vvd2.skd_dir_cd    = skd2.skd_dir_cd(+)
   and vvd2.pol_cd        = skd2.vps_port_cd(+)
   and vvd2.pol_clpt_ind_seq  = skd2.clpt_ind_seq(+)
#if (${loc_cd}!='')
   and vvd1.pod_cd  = @[loc_cd]             
#end

#if (${loc_cd}!='' && ${loc_yd_cd} !='')
   and vvd1.pod_yd_cd =@[loc_cd]||@[loc_yd_cd]           
#end

#if (${vvd} !='')
	#if (${disc_load_cd}=='D') 
	   	and vvd1.vsl_Cd       = substr(UPPER(@[vvd]), 1, 4)
	   	and vvd1.skd_voy_no   = substr(UPPER(@[vvd]), 5, 4)
	   	and vvd1.skd_dir_cd   = substr(UPPER(@[vvd]), 9, 1)
	#elseif (${disc_load_cd}=='L')
	   	and vvd2.vsl_Cd       = substr(UPPER(@[vvd]), 1, 4)
	   	and vvd2.skd_voy_no   = substr(UPPER(@[vvd]), 5, 4)
	   	and vvd2.skd_dir_cd   = substr(UPPER(@[vvd]), 9, 1)	
	#end
#end	

#if (${search_kind_cd} =='D')
     #if (${disc_load_cd}=='D'&& ${dur_from}!=''&& ${dur_to}!='')
	 	and skd1.vps_eta_dt > to_date(@[dur_from], 'yyyy-mm-dd')
	 	and skd1.vps_eta_dt < to_date(@[dur_to],   'yyyy-mm-dd')+1
     #elseif (${disc_load_cd}=='L' && ${dur_from}!=''&& ${dur_to}!='')
	 	and skd2.vps_etd_dt > to_date(@[dur_from], 'yyyy-mm-dd')
	 	and skd2.vps_etd_dt < to_date(@[dur_to],   'yyyy-mm-dd')+1
     #end
#end

#if(${search_kind_cd} =='E' && ${vvd}=='' && 0==1)
--적용 중지
     #if (${disc_load_cd}=='D'&& ${vps_etd_dt}!='')
	 	and skd1.vps_eta_dt > to_date(@[vps_etd_dt], 'yyyy-mm-dd')
	 	and skd1.vps_eta_dt < to_date(@[vps_etd_dt],   'yyyy-mm-dd')+1
	 #elseif (${disc_load_cd}=='L' && ${vps_etd_dt}!='')
		and skd2.vps_etd_dt > to_date(@[vps_etd_dt], 'yyyy-mm-dd')
	 	and skd2.vps_etd_dt < to_date(@[vps_etd_dt],   'yyyy-mm-dd')+1
     #end
#end

#if (${pol_cd} !='')
         and vvd1.pol_cd like @[pol_cd]||'%'
#end

#if (${pod_cd} !='')
         and vvd2.pod_cd like @[pod_cd] ||'%'
#end

#if (${disc_load_cd}=='D' && ${op_cd} !='' )
             and vvd1.op_cd = @[op_cd]
#elseif (${disc_load_cd}=='L' && ${op_cd} !='')
             and vvd2.op_cd = @[op_cd]
#end

#if (${special} != 'SD')
			 #if (${special} == 'All')
                 and (CNTR.dcgo_flg = 'Y'
                 or CNTR.rc_flg = 'Y'
                 or CNTR.awk_cgo_flg = 'Y'
				 or CNTR.bb_cgo_flg ='Y'
                 or bk.rd_cgo_flg  = 'Y'
                 or bk.stwg_cd  is not null
                 or cntr.soc_flg ='Y')
             #elseif (${special} == 'DG')
                 and cntr.dcgo_flg = 'Y'
             #elseif (${special} == 'RF')
                 and cntr.rc_flg = 'Y'
             #elseif (${special} == 'AK') 
                 and cntr.awk_cgo_flg = 'Y'
             #elseif (${special} == 'ST')
                 and bk.stwg_cd  is not null
             #elseif (${special} == 'RD')
                 and bk.rd_cgo_flg  = 'Y'
			 #elseif (${special} == 'SO')
				 and cntr.soc_flg ='Y'
             #end
#end
)
where 1 = rnk
order by vsl_nm
#if (${disc_load_cd}=='D')
       , org_yd_cd2
       , to_char(vps_eta_dt2, 'yyyy-mm-dd')
#elseif (${disc_load_cd}=='L')
       , org_yd_cd
       , to_char(vps_eta_dt, 'yyyy-mm-dd')
#end
       , bl_no			]]></sql>
			<params>
				<param name="disc_load_cd" type="12" value="L" out="N"/>
				<param name="loc_cd" type="12" value="KRPUS" out="N"/>
				<param name="loc_yd_cd" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="HNMN0042W" out="N"/>
				<param name="dur_from" type="12" value="" out="N"/>
				<param name="dur_to" type="12" value="" out="N"/>
				<param name="vps_etd_dt" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="op_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
