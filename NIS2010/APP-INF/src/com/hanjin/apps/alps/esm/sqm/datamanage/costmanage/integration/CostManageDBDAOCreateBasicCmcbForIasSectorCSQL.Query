<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CostManageDBDAOCreateBasicCmcbForIasSectorCSQL">
			<desc><![CDATA[Basic CMCB for IAS Sector Data를 생성한다.]]></desc>
			<sql><![CDATA[
INSERT INTO SQM_SCTR_PAIR_COST
           (BSE_TP_CD
           ,BSE_YR
           ,BSE_QTR_CD
           ,RLANE_CD
           ,DIR_CD
           ,POL_CD
           ,POD_CD
           ,TRD_CD
           ,SUB_TRD_CD
           ,GID_PA_CM_UC_AMT
           ,GID_RA_CM_UC_AMT
           ,PA_CM_UC_AMT
           ,RA_CM_UC_AMT
           ,ADD_FLG
           ,CRE_USR_ID
           ,CRE_DT
           ,UPD_USR_ID
           ,UPD_DT
           )
            SELECT 
                   A1.BSE_TP_CD
                  ,A1.BSE_YR
                  ,A1.BSE_QTR_CD
                  ,A1.RLANE_CD
                  ,A1.DIR_CD
                  ,A1.POL_CD
                  ,A1.POD_CD
                  ,A1.TRD_CD
                  ,A1.SUB_TRD_CD
                  ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.PA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS GID_PA_CM_UC_AMT
                  ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.RA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS GID_RA_CM_UC_AMT
                  ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.PA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS PA_CM_UC_AMT
                  ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.RA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS RA_CM_UC_AMT
                  ,'N' AS ADD_FLG
                  ,@[usr_id] AS CRE_USR_ID
                  ,SYSDATE AS CRE_DT
                  ,@[usr_id] AS UPD_USR_ID
                  ,SYSDATE AS UPD_DT
              FROM (
                    SELECT DISTINCT 
                           BSE_TP_CD
                          ,BSE_YR
                          ,BSE_QTR_CD
                          ,RLANE_CD
                          ,DIR_CD
                          ,POL_CD
                          ,POD_CD
                          ,TRD_CD
                          ,SUB_TRD_CD
                      FROM SQM_SCTR_PAIR_MGMT
                     WHERE 1=1
                     AND BSE_TP_CD = @[f_bse_tp_cd]
                     AND BSE_YR = @[f_bse_yr]
                     AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
                   )A1
                  ,SQM_SCTR_PERF_IF A2
             WHERE 1=1
               AND A1.BSE_TP_CD = @[f_bse_tp_cd]
               AND A1.BSE_YR     = @[f_bse_yr]
               AND A1.BSE_QTR_CD = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
               AND A1.BSE_TP_CD   = A2.BSE_TP_CD(+)
               AND A1.BSE_YR      = A2.BSE_YR(+)
               AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD(+)
               AND A1.RLANE_CD    = A2.RLANE_CD(+)
               AND A1.DIR_CD      = A2.DIR_CD(+)
               AND A1.POL_CD      = A2.POL_CD(+)
               AND A1.POD_CD      = A2.POD_CD(+)
               AND A2.OFC_VW_CD(+)   = 'L'
             GROUP BY A1.BSE_TP_CD
                  ,A1.BSE_YR
                  ,A1.BSE_QTR_CD
                  ,A1.RLANE_CD
                  ,A1.DIR_CD
                  ,A1.POL_CD
                  ,A1.POD_CD
                  ,A1.TRD_CD
                  ,A1.SUB_TRD_CD
           			]]></sql>
			<params>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
