<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusReportDBDAOSearchOutBdMovementByTPSZSumRSQL">
			<desc><![CDATA[Outbound Container Movement Status by Type/Size[ESM_BKG_0619]
2015.06.08 COA_MON_VVD ==>MAS_MON_VVD 변경]]></desc>
			<sql><![CDATA[
WITH AAA AS
(
   SELECT  SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR
         , V.COST_WK
         , V.SLS_YRMON
         , V.TRD_CD
         , V.SUB_TRD_CD
         , V.RLANE_CD
         , V.DIR_CD
         , V.VSL_CD
         , V.SKD_VOY_NO
         , V.DIR_CD AS SKD_DIR_CD
         , V.IOC_CD
   FROM    MDM_REV_LANE RL
         , MAS_MON_VVD V
   WHERE   RL.RLANE_CD = V.RLANE_CD
   AND     V.DELT_FLG = 'N'
   AND     V.VSL_CD = SUBSTR(@[vvd_cd], 1, 4)
   AND     V.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
   AND     V.DIR_CD = SUBSTR(@[vvd_cd], 9, 1)
)
, BKG_VVD_DATE AS
(
   SELECT  B.BKG_NO
         , BV.SLAN_CD
         , BV.VSL_CD
         , BV.SKD_VOY_NO
         , BV.SKD_DIR_CD
         , DRL.TRD_CD
         , DRL.SUB_TRD_CD
         , DRL.RLANE_CD
         , BV.POL_CD
         , BV.POD_CD
         , B.BKG_CGO_TP_CD
         , (
              SELECT  SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, BV.SKD_DIR_CD)
              FROM    MDM_LOCATION L
              WHERE   L.LOC_CD = BV.POL_CD
           ) FM_CONTI_CD,
           (
              SELECT  SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, BV.SKD_DIR_CD)
              FROM    MDM_LOCATION L
              WHERE   L.LOC_CD = BV.POD_CD
           ) TO_CONTI_CD
   FROM    BKG_VVD BV
         , BKG_BOOKING B
         , AAA M
         , MDM_DTL_REV_LANE DRL
         , MDM_REV_LANE RL
   WHERE   B.BKG_NO = BV.BKG_NO
   AND     M.VSL_CD = BV.VSL_CD
   AND     M.SKD_VOY_NO = BV.SKD_VOY_NO
   AND     M.SKD_DIR_CD = BV.SKD_DIR_CD
   AND     RL.VSL_SLAN_CD = BV.SLAN_CD
   AND     DRL.RLANE_CD = RL.RLANE_CD
   AND     DRL.RLANE_CD = M.RLANE_CD
   AND     DRL.VSL_SLAN_DIR_CD = M.DIR_CD
   AND     DRL.IOC_CD = M.IOC_CD
   AND     DRL.TRD_CD = M.TRD_CD
   AND     DRL.SUB_TRD_CD = M.SUB_TRD_CD
   AND     DRL.DELT_FLG = 'N'
   AND     DRL.FM_CONTI_CD = ( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, M.DIR_CD) FROM MDM_LOCATION L WHERE L.LOC_CD = BV.POL_CD )
   AND     DRL.TO_CONTI_CD = ( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, M.DIR_CD) FROM MDM_LOCATION L WHERE L.LOC_CD = BV.POD_CD )
   AND     RL.RLANE_CD = M.RLANE_CD
   AND     RL.VSL_TP_CD = 'C'
   AND     RL.DELT_FLG = 'N'
)
SELECT  SUB1.VVD_CD
      , SUB1.TRD_CD
      , SUB1.SUB_TRD_CD
      , SUB1.RLANE_CD
      , SUB1.VVD_CD||SUB1.TRD_CD||SUB1.SUB_TRD_CD||SUB1.RLANE_CD SUB_STR
      , SUB1.CNTR_TPSZ_CD_MV
      , SUM(NVL(SUB1.BKG_QTY,0)) BKG_QTY
      , SUM(SUB1.OP) OP
      , SUM(SUB1.OC) OC
      , SUM(SUB1.ETN) ETN
      , SUM(SUB1.CY) CY
      , SUM(SUB1.VL) VL
      , SUM(SUB1.MT) MT
      , SUM(SUB1.OT) OT
      , SUM(SUB1.TTL) TTL
      , SUM(NVL(SUB1.BKG_QTY,0)) - SUM(NVL(SUB1.TTL,0)) DIFF_QTY
FROM    (
          SELECT  VVD_CD
				, TRD_CD
                , SUB_TRD_CD
                , RLANE_CD
                , CNTR_TPSZ_CD CNTR_TPSZ_CD_MV
                , SUM(NVL(OP_CNTR_QTY,0)) BKG_QTY
                , 0 OP
                , 0 OC
                , 0 ETN
                , 0 CY
                , 0 VL
                , 0 MT
                , 0 OT
                , 0 TTL
          FROM    (
                    SELECT  DISTINCT VB.TRUNK_VVD
						  , VB.KEY_VSL_CD||VB.KEY_SKD_VOY_NO||VB.KEY_SKD_DIR_CD AS VVD_CD
                          , BVD.TRD_CD
                          , BVD.SUB_TRD_CD
                          , BVD.RLANE_CD
                          , VB.BKG_NO
                          , VB.BKG_STS_CD
                          , VB.BKG_CGO_TP_CD
                          , VB.POR_CD
                          , VB.POD_CD
                          , VB.POL_CD
                          , A.OP_CNTR_QTY
                          , A.CNTR_TPSZ_CD
                    FROM    BKG_WORK_V VB
                          , BKG_QUANTITY A  --SELECT * FROM BKG_QUANTITY
                          , VSK_VSL_PORT_SKD V
                          , BKG_BOOKING BK
                          , BKG_VVD_DATE BVD
                    WHERE   VB.BKG_NO        = A.BKG_NO
                    AND     V.VSL_CD(+)      = VB.KEY_VSL_CD
                    AND     V.SKD_VOY_NO(+)  = VB.KEY_SKD_VOY_NO
                    AND     V.SKD_DIR_CD(+)  = VB.KEY_SKD_DIR_CD
                    AND     (DECODE(VB.PRE_1_POL_CD, NULL, VB.TRUNK_POL, VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+))
                    AND     VB.BKG_NO = BK.BKG_NO
                    AND     VB.BKG_STS_CD IN ('F', 'W', 'A')
                    AND     VB.BKG_NO = BVD.BKG_NO(+)
#if (${vvd_cd} != '') 
                    AND     VB.KEY_VSL_CD = SUBSTR(@[vvd_cd],1,4)
                    AND     VB.KEY_SKD_VOY_NO = SUBSTR(@[vvd_cd],5,4)
                    AND     VB.KEY_SKD_DIR_CD =  SUBSTR(@[vvd_cd],9,1)
#end

#if (${trd_cd} != '')
                    AND     BVD.TRD_CD = @[trd_cd]
#end

#if (${sub_trd_cd} != '') 
                    AND     BVD.SUB_TRD_CD = @[sub_trd_cd]
#end

#if (${rlane_cd} != '') 
                    AND     BVD.RLANE_CD = @[rlane_cd]
#end
#if (${rlane_cd} != '') 
                   AND     BVD.RLANE_CD = @[rlane_cd]
#end

#if (${ofc_inc_sub} == 'Y') 
                   AND      VB.BKG_OFC_CD IN (
                                                SELECT  OFC_CD  
                                                FROM    MDM_ORGANIZATION MO
                                                START WITH MO.OFC_CD IN ( 
                                                                          #if(${bkg_ofc_cd}=='')
                                                                            VB.BKG_OFC_CD
                                                                          #else
                                                                               #foreach( ${key} in ${r_bkgOfcCd}) 
                                                                                   #if($velocityCount < $r_bkgOfcCd.size()) 
                                                                                       '${key}', 
                                                                                   #else 
                                                                                       '${key}'
                                                                                   #end 
                                                                               #end
                                                                          #end
                                                                         )
                                                CONNECT BY PRIOR MO.OFC_CD = MO.PRNT_OFC_CD
                                             )
#else 
       #if (${bkg_ofc_cd} != '') 
                   AND      VB.BKG_OFC_CD IN ( 

                        #foreach( ${key} in ${r_bkgOfcCd}) 
                          #if($velocityCount < $r_bkgOfcCd.size()) 
                             '${key}', 
                          #else 
                             '${key}'
                          #end 
                        #end 
                            )
       #end
#end

#if (${period_flg} == 'B') 

	#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') 
	                   AND      VB.BKG_CRE_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_fr} != '') 
	                   AND      VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_to} != '') 
	                   AND      VB.BKG_CRE_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')
	#end

#elseif (${period_flg} == 'E') 

	#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') 
	                   AND      V.VPS_ETA_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_fr} != '') 
	                   AND      V.VPS_ETA_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_to} != '') 
	                   AND      V.VPS_ETA_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')
	#end
	
#end

#if (${bkg_no} != '') 
                    AND     VB.BKG_NO = @[bkg_no]
#end
#if (${pol_cd} != '') 
                    AND     VB.KEY_POL_CD  LIKE RTRIM(@[pol_cd]) || '%'
#end
#if (${por_cd} != '') 
                    AND     VB.POR_CD LIKE RTRIM(@[por_cd]) || '%'
#end

#if (${rcv_term_cd} != '') 
                    AND     VB.RCV_TERM_CD = @[rcv_term_cd]
#end
#if (${de_term_cd} != '') 
                    AND     VB.DE_TERM_CD = @[de_term_cd]
#end



#if (${chk_lt_type} == 'L') 
                    AND     VB.KEY_POL_CD = VB.POL_CD	--L/T Local  
#elseif (${chk_lt_type} == 'T') 
                    AND     VB.KEY_POL_CD <> VB.POL_CD	--T/S
#end


#if (${bkg_sts_cd} != '') 
                    AND     VB.BKG_STS_CD = @[bkg_sts_cd]  	--예약 현황 
#end

#if (${pre_1_vvd} != '') 
                    AND     VB.PRE_1_VVD LIKE @[pre_1_vvd] || '%'	--pre_vvd
#end

#if (${pre_1_pol_cd} != '') 
                    AND     VB.PRE_1_POL_CD = @[pre_1_pol_cd]		--pre_pol       
#end

#if (${xter_bkg_rqst_cd} != '') 
                    AND     VB.XTER_BKG_RQST_CD = @[xter_bkg_rqst_cd]	--BKG Kind 
#end


#if (${bkg_cgo_tp_cd} != '') 
                    AND     BK.BKG_CGO_TP_CD = @[bkg_cgo_tp_cd]	 --화물 종류All, Full, Empty로 구분 (Cargo Type 코드 참고)
#end

#if (${dest_trns_svc_mod_cd} != '') 
                    AND     VB.DEST_TRNS_SVC_MOD_CD = @[dest_trns_svc_mod_cd]	--Service Mode
#end

--------------------------------------------------------------------------
--1.'SHPR'
#if (${cust_tp_cd} == 'S') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	    SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] 
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	    VB.SHIPPER LIKE @[cust_cnt_cd] || @[cust_seq] || '%'
	#end 
	#if (${cust_nm} != '') 
                    AND	    VB.SHPR_NAME LIKE   @[cust_nm] || '%'
	#end
--2.'CNEE'
#elseif (${cust_tp_cd} == 'C') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	    SUBSTR(VB.CONSIGNEE,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	    VB.CONSIGNEE LIKE @[cust_cnt_cd] || @[cust_seq]
	#end
	#if (${cust_nm} != '') 
                    AND	    VB.CONSIGNEE_NAME LIKE   @[cust_nm] || '%'
	#end 
--3.'NTFY'
#elseif (${cust_tp_cd} == 'N') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	    SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	    VB.NTFY LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
                    AND	    VB.NTFY_NAME LIKE   @[cust_nm] || '%'
	#end 
--4.'ANFY'
#elseif (${cust_tp_cd} == 'A') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	    SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	    VB.ANTY LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
                    AND	    VB.ANTY_NAME LIKE   @[cust_nm] || '%'
	#end 
--5.'FWDR'
#elseif (${cust_tp_cd} == 'F')
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	    SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	    VB.FFDR LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
                    AND	    VB.FFDR_NAME LIKE   @[cust_nm] || '%'
	#end 
#else
--6.'선택하지 않았을때..'
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	  	(    SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd]
                              OR SUBSTR(VB.CONSIGNEE,1,2)= @[cust_cnt_cd]
                              OR SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]
                              OR SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]
                              OR SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]
                            )
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND		(    VB.SHIPPER = @[cust_cnt_cd] || @[cust_seq]
                              OR VB.CONSIGNEE = @[cust_cnt_cd] || @[cust_seq]
                              OR VB.NTFY = @[cust_cnt_cd]|| @[cust_seq]
                              OR VB.ANTY = @[cust_cnt_cd]|| @[cust_seq]
                              OR VB.FFDR = @[cust_cnt_cd]|| @[cust_seq]
                            )
	#end
	#if (${cust_nm} != '') 
                    AND		(    VB.SHPR_NAME = @[cust_nm]
                              OR VB.CONSIGNEE_NAME = @[cust_nm]
                              OR VB.NTFY_NAME = @[cust_nm]
                              OR VB.ANTY_NAME = @[cust_nm]
                              OR VB.FFDR_NAME = @[cust_nm]
                            )
	#end
#end  
                  ) T
          GROUP BY VVD_CD, TRD_CD, SUB_TRD_CD, RLANE_CD, CNTR_TPSZ_CD

          UNION ALL
          SELECT  VVD_CD
				, TRD_CD
                , SUB_TRD_CD
                , RLANE_CD
                , CNTR_TPSZ_CD_MV CNTR_TPSZ_CD_MV
                , 0 BKG_QTY
                , SUM(DECODE(CNMV_STS_CD ,'OP',NVL(CNTR_VOL_QTY,0),0)) OP
                , SUM(DECODE(CNMV_STS_CD ,'OC',NVL(CNTR_VOL_QTY,0) ,0)) OC
                , SUM(DECODE(CNMV_STS_CD ,'EN',NVL(CNTR_VOL_QTY,0) ,DECODE(CNMV_STS_CD,'TN',NVL(CNTR_VOL_QTY,0),0))) ETN
                , SUM(DECODE(CNMV_STS_CD ,'CY',NVL(CNTR_VOL_QTY,0) ,0)) CY
                , SUM(DECODE(CNMV_STS_CD ,'VL',NVL(CNTR_VOL_QTY,0) ,0)) VL
                , SUM(DECODE(CNMV_STS_CD ,'MT',NVL(CNTR_VOL_QTY,0) ,0)) MT
                , SUM(DECODE(CNMV_STS_CD ,'OT',NVL(CNTR_VOL_QTY,0) ,0)) OT
                , SUM(NVL(CNTR_VOL_QTY,0)) TTL
          FROM    (
                    SELECT  DISTINCT VB.TRUNK_VVD
						  , VB.KEY_VSL_CD||VB.KEY_SKD_VOY_NO||VB.KEY_SKD_DIR_CD AS VVD_CD
                          , BVD.TRD_CD
                          , BVD.SUB_TRD_CD
                          , BVD.RLANE_CD
                          , VB.BKG_NO
                          , VB.BKG_STS_CD
                          , VB.BKG_CGO_TP_CD
                          , VB.POR_CD
                          , VB.POD_CD
                          , VB.POL_CD
                          , B.RCV_TERM_CD
                          , B.DE_TERM_CD
                          , B.CNTR_NO
                          , B.CNTR_TPSZ_CD CNTR_TPSZ_CD_MV
                          , B.CNTR_VOL_QTY
                          , CASE WHEN B.CNMV_STS_CD IN ('OP', 'OC', 'EN', 'TN', 'CY','VL','MT') THEN B.CNMV_STS_CD ELSE 'OT' END CNMV_STS_CD
#if (${chk_dup_vvd} != '') 
                          , (
                              SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(ORG_YD_CD,1,5),'CNHKG','HKGCN',SUBSTR(ORG_YD_CD,1,5)),1,2)
                              FROM    CTM_MOVEMENT  
                              WHERE   CNTR_NO = B.CNTR_NO
                              AND     BKG_NO =BK.BKG_NO
                              AND     NVL(TRNK_VSL_CD,'SMXX') NOT IN('SMXX','SMZZ')
                              AND     CNMV_EVNT_DT = (
                                                       SELECT  MAX(CNMV_EVNT_DT)
                                                       FROM    CTM_MOVEMENT
                                                       WHERE   CNTR_NO = B.CNTR_NO
                                                       AND     BKG_NO =BK.BKG_NO
                                                       AND     MVMT_STS_CD ='OC'
                                                     )
                              AND     MVMT_STS_CD ='OC'
                              AND     ROWNUM =1
                            ) CRN_VVD_CNT                        
                          , (
                              SELECT  TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(CTM.ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(CTM.ORG_YD_CD, 1, 5)), 1, 2)
                              FROM    CTM_MOVEMENT CTM
                                    , BKG_BOOKING BB
                                    , BKG_CONTAINER BC
                              WHERE   CTM.BKG_NO = BB.BKG_NO
                              AND     CTM.BKG_NO = BC.BKG_NO
                              AND     CTM.CNTR_NO = BC.CNTR_NO
							  AND	  CTM.BKG_NO <> BK.BKG_NO
                              AND     CTM.CNTR_NO = B.CNTR_NO
                              AND     CTM.BKG_CGO_TP_CD ='F'
                              AND     NVL(CTM.TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
                              AND     CTM.CNMV_CYC_NO = (
                                                          SELECT  MAX(CNMV_CYC_NO) - 1
                                                          FROM    CTM_MOVEMENT
                                                          WHERE   CNTR_NO = B.CNTR_NO
                                                          AND     BKG_NO = BK.BKG_NO
                                                          AND     MVMT_STS_CD ='OC'
                                                          AND     NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
                                                        )
                              AND    CTM.CNMV_EVNT_DT < (
                                                          SELECT  MAX(CNMV_EVNT_DT)
                                                          FROM    CTM_MOVEMENT
                                                          WHERE   CNTR_NO = B.CNTR_NO
                                                          AND     BKG_NO = BK.BKG_NO
                                                          AND     MVMT_STS_CD ='OC'
                                                          AND     NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
                                                      )
                              AND    CTM.CNMV_EVNT_DT >= (
                                                          SELECT  MAX(CNMV_EVNT_DT) - 30
                                                          FROM    CTM_MOVEMENT
                                                          WHERE   CNTR_NO = B.CNTR_NO
                                                          AND     BKG_NO = BK.BKG_NO
                                                          AND     MVMT_STS_CD ='OC'
                                                          AND     NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
                                                       )
                              AND    CTM.MVMT_STS_CD IN ('OC','OP')
                              AND    BB.BKG_STS_CD <> 'X'
                              AND    ROWNUM = 1
                            ) PRE_VVD_CNT
#end
                    FROM    BKG_WORK_V VB
                          , VSK_VSL_PORT_SKD V
                          , BKG_CONTAINER B
                          , BKG_BOOKING BK
                          , CTM_MOVEMENT MOVE
                          , BKG_VVD_DATE BVD
                    WHERE   V.VSL_CD(+) = VB.KEY_VSL_CD
                    AND     V.SKD_VOY_NO(+) = VB.KEY_SKD_VOY_NO
                    AND     V.SKD_DIR_CD(+) = VB.KEY_SKD_DIR_CD
                    AND     (DECODE(VB.PRE_1_POL_CD, NULL, VB.TRUNK_POL, VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+))
                    AND     VB.BKG_NO = BK.BKG_NO
                    AND     VB.BKG_NO = B.BKG_NO(+)
                    AND     B.CNTR_NO = MOVE.CNTR_NO(+)
                    AND     B.CNMV_YR = MOVE.CNMV_YR(+)
                    AND     B.CNMV_ID_NO = MOVE.CNMV_ID_NO(+)
                    AND     VB.BKG_STS_CD IN ('F','W','A')
                    AND     VB.BKG_NO = BVD.BKG_NO(+)
        
#if (${vvd_cd} != '') 
                    AND     VB.KEY_VSL_CD = SUBSTR(@[vvd_cd],1,4)
                    AND     VB.KEY_SKD_VOY_NO = SUBSTR(@[vvd_cd],5,4)
                    AND     VB.KEY_SKD_DIR_CD =  SUBSTR(@[vvd_cd],9,1)
#end

#if (${trd_cd} != '')
                    AND     BVD.TRD_CD = @[trd_cd]
#end

#if (${sub_trd_cd} != '') 
                    AND     BVD.SUB_TRD_CD = @[sub_trd_cd]
#end

#if (${rlane_cd} != '') 
                    AND     BVD.RLANE_CD = @[rlane_cd]
#end

#if (${ofc_inc_sub} == 'Y') 
                   AND      VB.BKG_OFC_CD IN (
                                                SELECT  OFC_CD  
                                                FROM    MDM_ORGANIZATION MO
                                                START WITH MO.OFC_CD IN ( 
                                                                          #if(${bkg_ofc_cd}=='')
                                                                            VB.BKG_OFC_CD
                                                                          #else
                                                                               #foreach( ${key} in ${r_bkgOfcCd}) 
                                                                                   #if($velocityCount < $r_bkgOfcCd.size()) 
                                                                                       '${key}', 
                                                                                   #else 
                                                                                       '${key}'
                                                                                   #end 
                                                                               #end
                                                                          #end
                                                                         )
                                                CONNECT BY PRIOR MO.OFC_CD = MO.PRNT_OFC_CD
                                             )
#else 
       #if (${bkg_ofc_cd} != '') 
                   AND      VB.BKG_OFC_CD IN ( 

                        #foreach( ${key} in ${r_bkgOfcCd}) 
                          #if($velocityCount < $r_bkgOfcCd.size()) 
                             '${key}', 
                          #else 
                             '${key}'
                          #end 
                        #end 
                            )
       #end
#end

#if (${period_flg} == 'B') 

	#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') 
	                   AND      VB.BKG_CRE_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_fr} != '') 
	                   AND      VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_to} != '') 
	                   AND      VB.BKG_CRE_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')
	#end

#elseif (${period_flg} == 'E') 

	#if (${bkg_dt_fr} != '' || ${bkg_dt_fr} != '') 
	                   AND      V.VPS_ETA_DT BETWEEN TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') AND TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_fr} != '') 
	                   AND      V.VPS_ETA_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999
	#elseif (${bkg_dt_to} != '') 
	                   AND      V.VPS_ETA_DT >= TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD')
	#end
	
#end

#if (${bkg_no} != '') 
                    AND    VB.BKG_NO = @[bkg_no]
#end
#if (${pol_cd} != '') 
                    AND    VB.KEY_POL_CD  LIKE RTRIM(@[pol_cd]) || '%'
#end
#if (${por_cd} != '') 
                    AND    VB.POR_CD LIKE RTRIM(@[por_cd]) || '%'
#end

#if (${rcv_term_cd} != '') 
                    AND    B.RCV_TERM_CD = @[rcv_term_cd]
#end
#if (${de_term_cd} != '') 
                    AND    VB.DE_TERM_CD = @[de_term_cd]
#end
#if (${org_yd_cd} != '') 
                    AND    B.ORG_YD_CD LIKE  @[org_yd_cd] || '%'
#end


#if (${chk_lt_type} == 'L') 
                    AND    VB.KEY_POL_CD = VB.POL_CD	--L/T Local  
#elseif (${chk_lt_type} == 'T') 
                    AND    VB.KEY_POL_CD <> VB.POL_CD	--T/S
#end

#if (${cntr_cfm_flg} != '') 
                    AND    B.CNTR_CFM_FLG = @[cntr_cfm_flg]  --Booking Container의 Tab의 Confirm 정보 
#end

#if (${bkg_sts_cd} != '') 
                    AND    VB.BKG_STS_CD = @[bkg_sts_cd]  	--예약 현황 
#end

#if (${pre_1_vvd} != '') 
                    AND    VB.PRE_1_VVD LIKE @[pre_1_vvd] || '%'	--pre_vvd
#end

#if (${pre_1_pol_cd} != '') 
                    AND    VB.PRE_1_POL_CD = @[pre_1_pol_cd]		--pre_pol       
#end

#if (${xter_bkg_rqst_cd} != '') 
                    AND    VB.XTER_BKG_RQST_CD = @[xter_bkg_rqst_cd]	--BKG Kind 
#end

#if (${cnmv_sts_cd} == 'Y') 
                    AND    B.CNMV_STS_CD = 'OC'	--O/C Status    Container Status가 OC인 항목 조회
#elseif  (${cnmv_sts_cd} == 'N') 
                    AND    B.CNMV_STS_CD != 'OC'
#end


#if (${bkg_cgo_tp_cd} != '') 
                    AND    BK.BKG_CGO_TP_CD = @[bkg_cgo_tp_cd]	 --화물 종류All, Full, Empty로 구분 (Cargo Type 코드 참고)
#end

#if (${dest_trns_svc_mod_cd} != '') 
                    AND    VB.DEST_TRNS_SVC_MOD_CD = @[dest_trns_svc_mod_cd]	--Service Mode
#end

--------------------------------------------------------------------------
--1.'SHPR'
#if (${cust_tp_cd} == 'S') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	   SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd] 
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	   VB.SHIPPER LIKE @[cust_cnt_cd] || @[cust_seq] || '%'
	#end 
	#if (${cust_nm} != '') 
                    AND	   VB.SHPR_NAME LIKE   @[cust_nm] || '%'
	#end
--2.'CNEE'
#elseif (${cust_tp_cd} == 'C') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	   SUBSTR(VB.CONSIGNEE,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	   VB.CONSIGNEE LIKE @[cust_cnt_cd] || @[cust_seq]
	#end
	#if (${cust_nm} != '') 
                    AND	   VB.CONSIGNEE_NAME LIKE   @[cust_nm] || '%'
	#end 
--3.'NTFY'
#elseif (${cust_tp_cd} == 'N') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	   SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	   VB.NTFY LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
                    AND	   VB.NTFY_NAME LIKE   @[cust_nm] || '%'
	#end 
--4.'ANFY'
#elseif (${cust_tp_cd} == 'A') 
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	   SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	   VB.ANTY LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
                    AND	   VB.ANTY_NAME LIKE   @[cust_nm] || '%'
	#end 
--5.'FWDR'
#elseif (${cust_tp_cd} == 'F')
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	   SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]
	#end 
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	   VB.FFDR LIKE @[cust_cnt_cd] || @[cust_seq]
	#end 
	#if (${cust_nm} != '') 
                    AND	   VB.FFDR_NAME LIKE   @[cust_nm] || '%'
	#end 
#else
--6.'선택하지 않았을때..'
	#if (${cust_cnt_cd} != '' && ${cust_seq} == '') 
                    AND	   (    SUBSTR(VB.SHIPPER,1,2) = @[cust_cnt_cd]
                             OR SUBSTR(VB.CONSIGNEE,1,2)= @[cust_cnt_cd]
                             OR SUBSTR(VB.NTFY,1,2) = @[cust_cnt_cd]
                             OR SUBSTR(VB.ANTY,1,2) = @[cust_cnt_cd]
                             OR SUBSTR(VB.FFDR,1,2) = @[cust_cnt_cd]
                           )
	#end
	#if (${cust_cnt_cd} != '' && ${cust_seq} != '') 
                    AND	   (    VB.SHIPPER = @[cust_cnt_cd] || @[cust_seq]
                             OR VB.CONSIGNEE = @[cust_cnt_cd] || @[cust_seq]
                             OR VB.NTFY = @[cust_cnt_cd]|| @[cust_seq]
                             OR VB.ANTY = @[cust_cnt_cd]|| @[cust_seq]
                             OR VB.FFDR = @[cust_cnt_cd]|| @[cust_seq]
                           )
	#end
	#if (${cust_nm} != '') 
                    AND	   (    VB.SHPR_NAME = @[cust_nm]
                             OR	VB.CONSIGNEE_NAME = @[cust_nm]
                             OR VB.NTFY_NAME = @[cust_nm]
                             OR VB.ANTY_NAME = @[cust_nm]
                             OR VB.FFDR_NAME = @[cust_nm]
                           )		
	#end
#end
        
                  ) T
        
#if (${chk_dup_vvd} != '') 
          WHERE   DECODE(CRN_VVD_CNT,NULL,'',DECODE(PRE_VVD_CNT,NULL,'',DECODE(SUBSTR(CRN_VVD_CNT,-2),SUBSTR(PRE_VVD_CNT,-2),'D',''))) = @[chk_dup_vvd]
#end

          GROUP BY VVD_CD, TRD_CD, SUB_TRD_CD, RLANE_CD, CNTR_TPSZ_CD_MV
        ) SUB1
WHERE   SUB1.CNTR_TPSZ_CD_MV IS NOT NULL
GROUP BY SUB1.VVD_CD, SUB1.TRD_CD, SUB1.SUB_TRD_CD, SUB1.RLANE_CD, SUB1.CNTR_TPSZ_CD_MV			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="sub_trd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="bkg_dt_fr" type="12" value="" out="N"/>
				<param name="bkg_dt_to" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="rcv_term_cd" type="12" value="" out="N"/>
				<param name="de_term_cd" type="12" value="" out="N"/>
				<param name="bkg_sts_cd" type="12" value="" out="N"/>
				<param name="pre_1_vvd" type="12" value="" out="N"/>
				<param name="pre_1_pol_cd" type="12" value="" out="N"/>
				<param name="xter_bkg_rqst_cd" type="12" value="" out="N"/>
				<param name="bkg_cgo_tp_cd" type="12" value="" out="N"/>
				<param name="dest_trns_svc_mod_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="org_yd_cd" type="12" value="" out="N"/>
				<param name="cntr_cfm_flg" type="12" value="" out="N"/>
				<param name="chk_dup_vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
