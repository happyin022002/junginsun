<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="DailyForecastInquiryDBDAOSpcFcastOfcPolDelMapgVORSQL">
			<desc><![CDATA[* 2014.11.14 신자영 [CHM-201432770] T/S Booking Report 개선 ]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (

    SELECT @[year]        AS YR         ,
           @[week]        AS WK         ,
           @[duration]    AS DUR        ,
           @[lane]        AS TLANE      ,
           @[vvd]         AS VVD        ,            
           @[rhq_cd]      AS RHQ_CD     ,
           @[ofc_cd]      AS OFC_CD     ,
           @[ts_conti]    AS TS_CONTI   , 
           @[pol1]        AS TS_PORT    ,
           @[del]         AS DEL       
      FROM DUAL
) 
, WEEKS AS (
    SELECT 
          PRD.COST_YR  ,
          PRD.COST_WK  ,
          P.TLANE      ,
          P.VVD        ,
          P.OFC_CD     ,
          p.RHQ_CD     ,
          P.TS_CONTI   ,
          P.TS_PORT    ,
          P.DEL        ,
          MIN(PRD.SLS_FM_DT) OVER() AS SLS_FM_DT,
          MAX(PRD.SLS_TO_DT) OVER() AS SLS_TO_DT
     FROM MAS_WK_PRD PRD,
          PARAMS     P
	WHERE P.VVD IS NULL 
	  AND PRD.COST_YR||PRD.COST_WK >= P.YR||P.WK
	  AND ROWNUM <= P.DUR
)
-- 해당 port에 들어가는 BOOKING LIST
, BKG_BASE AS(
SELECT /*+ INDEX(PRD XPKMAS_WK_PRD)*/
       DISTINCT
       B.BKG_NO AS BKG_NO,
       B.VSL_CD AS VSL_CD,
       B.SKD_VOY_NO AS SKD_VOY_NO,
       B.SKD_DIR_CD AS SKD_DIR_CD,
       COA.COST_YR, -- DEL 기준 
       COA.COST_WK, 
--       CMV.RLANE_CD,
       P.RHQ_CD,
       B.POL_CD,
       B.POD_CD
    FROM VSK_VSL_PORT_SKD A, 
       BKG_VVD B, 
       --BKG_VVD TS_CHECK,
       BKG_BOOKING BKG,
       WEEKS WK,
       PARAMS P,
       MAS_WK_PRD COA
    WHERE B.BKG_NO = BKG.BKG_NO
      AND A.VSL_CD       = B.VSL_CD
      AND A.SKD_VOY_NO   = B.SKD_VOY_NO
      AND A.SKD_DIR_CD   = B.SKD_DIR_CD
      AND BKG.DEL_CD     = P.DEL
      AND B.POD_CD       = P.DEL --BKG_VVD중 DEL을 CALLING 배 찾기
      AND A.VPS_PORT_CD  = P.DEL -- DEL CALLING ETB를 위한 SKD 조회 
      AND TO_CHAR(A.VPS_ETB_DT, 'YYYYMMDD') BETWEEN WK.SLS_FM_DT AND  WK.SLS_TO_DT -- DEL CALLING 주차 가져오기 
      AND TO_CHAR(A.VPS_ETB_DT, 'YYYYMMDD') BETWEEN COA.SLS_FM_DT AND  COA.SLS_TO_DT
      AND A.CLPT_IND_SEQ = 1
)

    SELECT 
           Z.SLS_OFC_CD,
--           O.OFC_APLY_TO_YRWK,
--           O.OFC_CD,
           YRWK,
           --RHQ_CD ,                     
           PRE_VVD1,
           DECODE(PRE_VVD1,'',PRE_LANE1,NVL(PRE_LANE1, 'FDR'))  AS PRE_LANE1,
           PRE_PORT1,   
           PRE_VVD1_ETB,
           T_VVD,
           T_LANE,
           T_PORT T_POD,   
           T_VVD_ETB,
           POST_VVD2,
           DECODE(POST_VVD2,'',POST_LANE2,NVL(POST_LANE2, 'FDR'))  AS POST_LANE2,
           POST_PORT2,  
           POST_VVD2_ETB,
           POST_VVD3,
           DECODE(POST_VVD3,'',POST_LANE3,NVL(POST_LANE3, 'FDR'))  AS POST_LANE3,
           POST_PORT3,  
           POST_VVD3_ETB,         
           POST_VVD4,
           DECODE(POST_VVD4,'',POST_LANE4,NVL(POST_LANE4, 'FDR'))  AS POST_LANE4,
           --POST_PORT4,                                                     
           POL_CD,
           POD_CD,
           DEL_CD,  
           DEL_ETB, 
--           O.N4TH_PRNT_OFC_CD AS SLS_OFC_CD, 
           SLS_OFC_CD,
           TLANE,                   
           VVD,
           BKG_TTL_QTY    ,
           BKG_TTL_WGT    ,
           BKG_20FT_QTY   ,
           BKG_40FT_QTY   ,
           BKG_40FT_HC_QTY,
           BKG_45FT_HC_QTY,
           --BKG_53FT_QTY   ,
           BKG_RF20_QTY   ,
           BKG_RF40_QTY   ,
           BKG_DG_QTY,
           BKG_AK_QTY,
           7 AS LVL
           
      FROM (
               SELECT
                      YRWK,
                      --RHQ_CD ,                     
                      PRE_VVD1,
                      PRE_LANE1,
                      PRE_PORT1,
                      PRE_VVD1_ETB,
                      T_VVD,
                      T_LANE,
                      T_PORT,  
                      T_VVD_ETB, 
                      POST_VVD2,
                      POST_LANE2,
                      POST_PORT2,
                      POST_VVD2_ETB,
                      POST_VVD3,
                      POST_LANE3,
                      POST_PORT3, 
                      POST_VVD3_ETB, 
                      POST_VVD4,
                      POST_LANE4,
                      --POST_PORT4,                                                     
                      POL_CD,
                      POD_CD,
                      DEL_CD,      
                      DEL_ETB,                 
                      OB_SLS_OFC_CD AS SLS_OFC_CD,  
                      TLANE,      
                      VVD,
                     
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0))) AS BKG_TTL_QTY    ,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0))) AS BKG_20FT_QTY   ,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0))) AS BKG_40FT_QTY   ,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0))) AS BKG_40FT_HC_QTY,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0))) AS BKG_45FT_HC_QTY,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0))) AS BKG_53FT_QTY   ,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0))) AS BKG_RF20_QTY   ,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))) AS BKG_RF40_QTY   ,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 113,14), 0))) AS BKG_DG_QTY,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 127,14), 0))) AS BKG_AK_QTY,
                      SUM(TO_NUMBER(NVL(SUBSTR(VAL, 141, 14), 0))) AS BKG_TTL_WGT
                 FROM (
			SELECT BKG_NO,
                    	      YRWK,
                              RHQ_CD ,
                              --RLANE_CD,
                              --VSL_PRE_PST_CD,
                              VVD,
                              TLANE,
                              MAX(DECODE(VSL_PRE_PST_CD,'S',TS_VVD,''))  AS PRE_VVD1,
                              MAX(DECODE(VSL_PRE_PST_CD,'S',TS_LANE,'')) AS PRE_LANE1,
                              MAX(DECODE(VSL_PRE_PST_CD,'S',TS_PORT,'')) AS PRE_PORT1,  
                              MAX(DECODE(VSL_PRE_PST_CD,'S',POD_ETB_DT,'')) AS PRE_VVD1_ETB,  
                    
                              MAX(DECODE(VSL_PRE_PST_CD,'T',TS_VVD,''))  AS T_VVD,
                              MAX(DECODE(VSL_PRE_PST_CD,'T',TS_LANE,'')) AS T_LANE,
                              MAX(DECODE(VSL_PRE_PST_CD,'T',TS_PORT,'')) AS T_PORT,  
                              MAX(DECODE(VSL_PRE_PST_CD,'T',POD_ETB_DT,'')) AS T_VVD_ETB,  
                    
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,1,TS_VVD,''), ''))  AS POST_VVD2,
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,1,TS_LANE,''), '')) AS POST_LANE2,
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,1,DECODE(TS_PORT,POD_CD,'',TS_PORT),''), '')) AS POST_PORT2, 
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,1,DECODE(TS_PORT,POD_CD,'',POL_ETB_DT),''), '')) AS POST_VVD2_ETB,  
                              
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,2,TS_VVD,''), ''))  AS POST_VVD3,
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,2,TS_LANE,''), '')) AS POST_LANE3,
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,2,DECODE(TS_PORT,POD_CD,'',TS_PORT),''), '')) AS POST_PORT3,  
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,2,DECODE(TS_PORT,POD_CD,'',POL_ETB_DT),''), '')) AS POST_VVD3_ETB,
                              
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,3,TS_VVD,''), ''))  AS POST_VVD4,
                              MAX(DECODE(VSL_PRE_PST_CD, 'U', DECODE(TS_VVD_SEQ,3,TS_LANE,''), '')) AS POST_LANE4,
                              --MAX(DECODE(TS_VVD_SEQ,4,DECODE(TS_PORT,POD_CD,'',TS_PORT),'')) AS POST_PORT4,                                                     
                              POL_CD,
                              POD_CD,
                              DEL_CD,  
                              DEL_ETB,
                              --POL_ETB_DT,                               
                              OB_SLS_OFC_CD,
                              --OFC_CD,
                              MAX(VAL) AS VAL
                              --TS_CONTI
                         FROM (
                     		SELECT BKG_NO,
                		      COST_YR||COST_WK AS YRWK,
                                      RHQ_CD ,
                                      VSL_PRE_PST_CD,
                                      VVD,
                                      TLANE,
                                      TS_VVD,
                                      TS_LANE,
                                      CALL_PORT,
                                      POL_ETB_DT,
                                      TS_PORT,
                                      POD_ETB_DT,
                                      POL_CD,
                                      POD_CD,
                                      DEL_CD,  
                                      DEL_ETB,                             
                                      OB_SLS_OFC_CD,
--                                      OFC_CD,
                                      VAL,
--                                      TS_CONTI,
                                      ROW_NUMBER() OVER(PARTITION BY BKG_NO, VSL_PRE_PST_CD  ORDER BY POL_ETB_DT) AS TS_VVD_SEQ
                                 FROM (
                                        SELECT
                                               B.BKG_NO,
                                               BASE.RHQ_CD ,
--                                               BASE.RLANE_CD,
                                               BASE.COST_YR,
                                               BASE.COST_WK,
                                               B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS VVD,
                                               B.SLAN_CD AS TLANE,
                                               BV.VSL_PRE_PST_CD,
                                               BV.VSL_SEQ,
                                               BV.VSL_CD||BV.SKD_VOY_NO||BV.SKD_DIR_CD AS TS_VVD,
                                               BV.SLAN_CD AS TS_LANE,
                                               BV.POL_CD AS CALL_PORT, 
                                               BV.POD_CD AS TS_PORT,                                     
                                               B.POL_CD,
                                               B.POD_CD,
                                               B.DEL_CD,    
                                               CASE WHEN BV.VSL_CD IS NULL AND BV.POD_CD IS NOT NULL THEN
                                                    TO_CHAR(BV.CRE_DT , 'YYYYMMDD')
                                               ELSE   
                                               (SELECT TO_CHAR(VPS_ETB_DT , 'YYYYMMDD')
                                                  FROM VSK_VSL_PORT_SKD
                                                 WHERE VSL_CD       = BV.VSL_CD
                                                   AND SKD_VOY_NO   = BV.SKD_VOY_NO
                                                   AND SKD_DIR_CD   = BV.SKD_DIR_CD
                                                   AND VPS_PORT_CD  = BV.POL_CD
                                                   AND CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
                                                   AND 'S' <> NVL(SKD_CNG_STS_CD, 'X')) 
                                               END AS POL_ETB_DT,   
                                               CASE WHEN BV.VSL_CD IS NULL AND BV.POD_CD IS NOT NULL THEN
                                                    TO_CHAR(BV.CRE_DT , 'YYYYMMDD')
                                               ELSE   
                                               (SELECT TO_CHAR(VPS_ETB_DT , 'YYYYMMDD')
                                                  FROM VSK_VSL_PORT_SKD
                                                 WHERE VSL_CD       = BV.VSL_CD
                                                   AND SKD_VOY_NO   = BV.SKD_VOY_NO
                                                   AND SKD_DIR_CD   = BV.SKD_DIR_CD
                                                   AND VPS_PORT_CD  = BV.POD_CD
                                                   AND CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
                                                   AND 'S' <> NVL(SKD_CNG_STS_CD, 'X')) 
                                               END AS POD_ETB_DT,                                

                                               (SELECT TO_CHAR(VPS_ETB_DT , 'YYYYMMDD')
                                                  FROM VSK_VSL_PORT_SKD SKD , 
                                                       BKG_VVD DEL
                                                 WHERE 1 =1 
                                                   AND BV.BKG_NO    = DEL.BKG_NO
                                                   AND SKD.VSL_CD       = DEL.VSL_CD
                                                   AND SKD.SKD_VOY_NO   = DEL.SKD_VOY_NO
                                                   AND SKD.SKD_DIR_CD   = DEL.SKD_DIR_CD
                                                   AND SKD.VPS_PORT_CD  = DEL.POD_CD
                                                   AND B.DEL_CD     = DEL.POD_CD
                                                   AND CLPT_IND_SEQ = DEL.POD_CLPT_IND_SEQ
                                                   AND 'S' <> NVL(SKD_CNG_STS_CD, 'X'))  AS DEL_ETB,

                                               (SELECT O.N4TH_PRNT_OFC_CD 
                                                  FROM SPC_OFC_LVL O
                                                WHERE O.OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) 
                                                AND O.N4TH_PRNT_OFC_CD LIKE null||'%' 
                                                AND O.N2ND_PRNT_OFC_CD LIKE null||'%'
                                                AND BASE.COST_YR||BASE.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK) 
                                                 AS OB_SLS_OFC_CD, 
                                               -- LEVEL 정리
--                                               SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) AS OB_SLS_OFC_CD,
--                                               V.OFC_CD,
                                               (
                                                 SELECT    TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                										|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                        || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0), 0)), 'FM0000000000.000')
                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 0, Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY), 0)), 'FM0000000000.000')
                                                        
                                                        || TO_CHAR(SUM(Q.DCGO_QTY),    'FM0000000000.000') -- DG
                                                        || TO_CHAR(SUM(Q.AWK_CGO_QTY), 'FM0000000000.000') -- AW
                                                        
                                                        || TO_CHAR((R.ACT_WGT * DECODE(R.ACT_WGT,'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                                                                                   FROM MDM_CNTR_TP_SZ TS
                                                                                                                                                  WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                                                   FROM BKG_QUANTITY Q
                                                  WHERE B.BKG_NO = Q.BKG_NO
                                               ) VAL
--                                               ,V.TS_CONTI
                                          FROM BKG_VVD     BV, -- PRE배 중 TRUNK 직전 1개를 제외한 모든 배 (TRUNK 도 제외)
                                               BKG_VVD     TRUNK,
                                               BKG_BOOKING B ,
                                               BKG_BL_DOC  R , 
                                               BKG_BASE    BASE
                                         WHERE BASE.BKG_NO        = B.BKG_NO  
                                           AND B.BKG_NO           = R.BKG_NO 
                                           AND BASE.BKG_NO        = TRUNK.BKG_NO
                                           AND TRUNK.VSL_PRE_PST_CD  = 'T'
                                           AND BV.BKG_NO          = BASE.BKG_NO
                                           AND (BV.VSL_PRE_PST_CD = 'U' OR BV.VSL_PRE_PST_CD = 'T'
                                                OR (BV.VSL_PRE_PST_CD = 'S' AND BV.VSL_SEQ = (SELECT MAX(T.VSL_SEQ)
                                                                                                FROM BKG_VVD T
                                                                                               WHERE T.BKG_NO = BASE.BKG_NO
                                                                                                 AND T.VSL_PRE_PST_CD = 'S')))
                                                                                                 
                                           
                                           AND B.BKG_STS_CD    IN ('W','F')
                                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                                           AND B.SLAN_CD LIKE @[lane]||'%'
--                                           AND B.BKG_NO IN ('NKKB3B812500', 'SHCH3H213100') 
                                         
                                      )
                              )
                        GROUP BY BKG_NO,
                    	      YRWK,
                              RHQ_CD ,
                              VVD,  
                              TLANE,                                           
                              POL_CD,
                              POD_CD,
                              DEL_CD,        
                              DEL_ETB,                         
                              OB_SLS_OFC_CD
                     )
                 
            GROUP BY YRWK,
                     --RHQ_CD ,                     
                     PRE_VVD1,
                     PRE_LANE1,
                     PRE_PORT1, 
                     PRE_VVD1_ETB,
                     T_VVD,
                     T_LANE,
                     T_PORT,   
                     T_VVD_ETB,
                     POST_VVD2,
                     POST_LANE2,
                     POST_PORT2, 
                     POST_VVD2_ETB, 
                     POST_VVD3,
                     POST_LANE3,
                     POST_PORT3,
                     POST_VVD3_ETB,   
                     POST_VVD4,
                     POST_LANE4,
                     --POST_PORT4,                                                     
                     POL_CD,
                     POD_CD,
                     DEL_CD,  
                     DEL_ETB,
                     OB_SLS_OFC_CD,  
                     TLANE,                   
                     VVD
           ) Z,
			SPC_OFC_LVL O
     WHERE O.OFC_CD = Z.SLS_OFC_CD  
       AND O.N4TH_PRNT_OFC_CD LIKE @[ofc_cd]||'%' 
       AND O.N2ND_PRNT_OFC_CD LIKE @[rhq_cd]||'%'
       AND Z.YRWK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
--       AND DECODE(POST_VVD2,'',POST_LANE2,NVL(POST_LANE2, 'FDR')) IS NOT NULL
ORDER BY YRWK,
	 PRE_VVD1,
         POL_CD,
         POD_CD			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="ts_conti" type="12" value="" out="N"/>
				<param name="pol1" type="12" value="" out="N"/>
				<param name="del" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
