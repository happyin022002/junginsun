/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAOExcelDownSpaceUtilizationPortListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.05.19
*@LastModifier : 최성민
*@LastVersion : 1.0
* 2016.05.19 최성민
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI SUNGMIN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAOExcelDownSpaceUtilizationPortListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Excel Dwon List 조회 합니다.
	  * 2013.10.30 최윤성 [CHM-201327083-01] IPC Sector 판매 활성화 Tool 개발 - Space Utilization 화면 신규 개발
	  * 2014.01.13 김시몬 [선처리] SELSC/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가
	  * 2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완
	  * 2015.03.03 CHM-201534458 SQM QTA주가 변경 관련 적용 요청
	  * 2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL
	  * 2016.05.18 최성민 Double Callling Route(Port/Tmnl)에 대한 물량집계 및 병목상 Logic 보완 사항 요청
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAOExcelDownSpaceUtilizationPortListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sDate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("user_ofc",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("eDate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAOExcelDownSpaceUtilizationPortListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           SUBSTR(MV.SLS_YRMON, 1, 4) AS COST_YR" ).append("\n"); 
		query.append("          ,MV.COST_WK" ).append("\n"); 
		query.append("          ,DECODE(@[user_ofc], 'SZPDC', @[user_ofc], 'SHARC') AS OFC_CD" ).append("\n"); 
		query.append("          ,MV.RLANE_CD" ).append("\n"); 
		query.append("          ,MV.DIR_CD AS DIR_CD" ).append("\n"); 
		query.append("          ,VP.VSL_CD || VP.SKD_VOY_NO || VP.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("          ,VP.VSL_CD" ).append("\n"); 
		query.append("          ,VP.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,VP.SKD_DIR_CD" ).append("\n"); 
		query.append("          ,(" ).append("\n"); 
		query.append("              SELECT L.CONTI_CD" ).append("\n"); 
		query.append("                FROM MDM_LOCATION     L" ).append("\n"); 
		query.append("                    ,MDM_ORGANIZATION O" ).append("\n"); 
		query.append("               WHERE L.LOC_CD = O.LOC_CD" ).append("\n"); 
		query.append("                 AND O.OFC_CD = DECODE(@[user_ofc], 'SZPDC', @[user_ofc], 'SHARC')" ).append("\n"); 
		query.append("           ) AS OFC_CONTI" ).append("\n"); 
		query.append("          ,'2' AS STS" ).append("\n"); 
		query.append("          , CASE WHEN MV.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("              THEN CEIL(TO_NUMBER(SUBSTR(MV.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("              ELSE CEIL(TO_NUMBER(DECODE(MV.COST_WK,'00','01','53','52',MV.COST_WK))/13)||'Q'" ).append("\n"); 
		query.append("            END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("         , SUBSTR(MV.COST_YRMON, 1,4) AS BSE_YR" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT T1.VSL_CD" ).append("\n"); 
		query.append("                    ,T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,T1.VSL_SLAN_CD" ).append("\n"); 
		query.append("                    ,T2.CLPT_SEQ" ).append("\n"); 
		query.append("                    ,T2.VPS_PORT_CD AS POL_PORT" ).append("\n"); 
		query.append("                    ,T2.YD_CD       AS POL_YD_CD" ).append("\n"); 
		query.append("                    ,T2.VPS_ETA_DT  AS POL_ETA" ).append("\n"); 
		query.append("                    ,T2.VPS_ETB_DT  AS POL_ETB" ).append("\n"); 
		query.append("                    ,T2.VPS_ETD_DT  AS POL_ETD" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_PORT_CD) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_PORT" ).append("\n"); 
		query.append("                    ,LEAD(T2.YD_CD      ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_YD_CD" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_ETA_DT ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_ETA" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_ETB_DT ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_ETB" ).append("\n"); 
		query.append("                    ,LEAD(T2.PF_ETB_DT  ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_PF_ETB" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_ETD_DT ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_ETD" ).append("\n"); 
		query.append("                    ,NVL(T1.ACT_CRR_CD, T3.CRR_CD) AS CARRIER_CD" ).append("\n"); 
		query.append("                FROM VSK_VSL_SKD      T1" ).append("\n"); 
		query.append("                    ,VSK_VSL_PORT_SKD T2" ).append("\n"); 
		query.append("                    ,MDM_VSL_CNTR     T3" ).append("\n"); 
		query.append("               WHERE T1.VSL_CD      = T2.VSL_CD" ).append("\n"); 
		query.append("                 AND T1.SKD_VOY_NO  = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND T1.SKD_DIR_CD  = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND T1.VSL_CD      = T3.VSL_CD" ).append("\n"); 
		query.append("                 AND T2.VPS_ETA_DT  BETWEEN TO_DATE(@[sDate], 'YYYY-MM-DD') AND  TO_DATE(@[eDate], 'YYYY-MM-DD') + 60" ).append("\n"); 
		query.append("                 AND T2.VPS_PORT_CD IN (@[pol_cd], @[pod_cd])" ).append("\n"); 
		query.append("                 AND EXISTS (SELECT 'X'" ).append("\n"); 
		query.append("                               FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                              WHERE VSL_CD      = T1.VSL_CD" ).append("\n"); 
		query.append("                                AND SKD_VOY_NO  = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND SKD_DIR_CD  = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND VPS_PORT_CD       = @[pol_cd]" ).append("\n"); 
		query.append("                                AND TURN_PORT_IND_CD IN ('Y', 'N'))" ).append("\n"); 
		query.append("                 AND NVL(T2.SKD_CNG_STS_CD, 'X') <> 'S'" ).append("\n"); 
		query.append("           ) VP" ).append("\n"); 
		query.append("          ,MAS_MON_VVD  MV" ).append("\n"); 
		query.append("          ,MDM_REV_LANE RL" ).append("\n"); 
		query.append("     WHERE 1 = 1" ).append("\n"); 
		query.append("       AND VP.POL_PORT    = @[pol_cd]" ).append("\n"); 
		query.append("       AND VP.POD_PORT    = @[pod_cd]" ).append("\n"); 
		query.append("       AND VP.POL_ETA   BETWEEN TO_DATE(@[sDate], 'YYYY-MM-DD') AND  TO_DATE(@[eDate], 'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("       AND MV.RLANE_CD    = @[lane]" ).append("\n"); 
		query.append("       AND VP.VSL_CD      = MV.VSL_CD" ).append("\n"); 
		query.append("       AND VP.SKD_VOY_NO  = MV.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VP.SKD_DIR_CD  = MV.DIR_CD" ).append("\n"); 
		query.append("       AND VP.VSL_SLAN_CD = MV.SLAN_CD" ).append("\n"); 
		query.append("       AND MV.DELT_FLG    = 'N'" ).append("\n"); 
		query.append("       AND MV.RLANE_CD    = RL.RLANE_CD" ).append("\n"); 
		query.append("       AND SPC_GET_REP_TRD_FNC (MV.RLANE_CD) = RL.REP_TRD_CD" ).append("\n"); 
		query.append("       AND SPC_GET_REP_TRD_FNC (MV.RLANE_CD) = MV.TRD_CD" ).append("\n"); 
		query.append("       AND SPC_GET_REP_SUB_TRD_FNC(MV.RLANE_CD) = MV.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND RL.VSL_TP_CD   = 'C' " ).append("\n"); 
		query.append("       AND MV.RLANE_CD IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", EGYPT_OFFICE AS (" ).append("\n"); 
		query.append("    SELECT A1.OFC_CD" ).append("\n"); 
		query.append("      FROM MDM_ORGANIZATION A1," ).append("\n"); 
		query.append("           MDM_LOCATION     A2" ).append("\n"); 
		query.append("     WHERE A2.CNT_CD   = 'EG'" ).append("\n"); 
		query.append("       AND A1.DELT_FLG = 'N'" ).append("\n"); 
		query.append("       AND A2.DELT_FLG = 'N'" ).append("\n"); 
		query.append("       AND A1.OFC_CD   = A2.SLS_OFC_CD" ).append("\n"); 
		query.append("  GROUP BY OFC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REP_VVDS AS (" ).append("\n"); 
		query.append("    SELECT P.VVD," ).append("\n"); 
		query.append("           V.TRD_CD     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.SUB_TRD_CD AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD," ).append("\n"); 
		query.append("           V.DIR_CD  ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("           V.COST_WK             ," ).append("\n"); 
		query.append("           V.VSL_CD              ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO          ," ).append("\n"); 
		query.append("           V.DIR_CD SKD_DIR_CD   ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           P.OFC_CD              ," ).append("\n"); 
		query.append("           P.OFC_CONTI           ," ).append("\n"); 
		query.append("           P.STS                 ," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT NVL(MAX(CO.CTRL_LVL_CD), 'L')" ).append("\n"); 
		query.append("                FROM SPC_ALOC_CTRL_OPT CO" ).append("\n"); 
		query.append("               WHERE CO.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("                 AND CO.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND CO.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("                 AND CO.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND CO.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("           ) AS CTRL_LVL" ).append("\n"); 
		query.append("           , BSE_QTR_CD" ).append("\n"); 
		query.append("           , BSE_YR" ).append("\n"); 
		query.append("      FROM MAS_MON_VVD V," ).append("\n"); 
		query.append("           PARAMS      P" ).append("\n"); 
		query.append("     WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("       AND V.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("       AND V.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("       AND V.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND V.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                                                                 FROM MAS_MON_VVD N" ).append("\n"); 
		query.append("                                                                WHERE N.RLANE_CD   = V.RLANE_CD -- 2012.12.07 SLANE_CD를 RLANE_CD로 변경" ).append("\n"); 
		query.append("                                                                  AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                  AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("                                                                  AND N.DELT_FLG   = 'N'))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT V.VVD," ).append("\n"); 
		query.append("           V.REP_TRD_CD    ," ).append("\n"); 
		query.append("           V.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           V.RLANE_CD      ," ).append("\n"); 
		query.append("           V.DIR_CD        ," ).append("\n"); 
		query.append("           V.COST_YR       ," ).append("\n"); 
		query.append("           V.COST_MON      ," ).append("\n"); 
		query.append("           V.COST_WK       ," ).append("\n"); 
		query.append("           V.VSL_CD        ," ).append("\n"); 
		query.append("           V.SKD_VOY_NO    ," ).append("\n"); 
		query.append("           V.SKD_DIR_CD    ," ).append("\n"); 
		query.append("           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD," ).append("\n"); 
		query.append("           VPS.CALL_YD_IND_SEQ," ).append("\n"); 
		query.append("           VPS.VPS_PORT_CD," ).append("\n"); 
		query.append("           VPS.CLPT_SEQ         AS PORT_SEQ," ).append("\n"); 
		query.append("           VPS.TURN_PORT_IND_CD AS PORT_IND," ).append("\n"); 
		query.append("           SPC_CONTI_CONV_FNC(L.CONTI_CD, V.RLANE_CD, V.DIR_CD) AS CONTI_CD," ).append("\n"); 
		query.append("           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD)), -1, 'Y', 'N') AS PORT_PAST," ).append("\n"); 
		query.append("           VPS.VPS_ETA_DT AS ETA_DT," ).append("\n"); 
		query.append("           VPS.VPS_ETD_DT AS ETD_DT," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_CD      ," ).append("\n"); 
		query.append("           V.LST_LODG_PORT_ETD_DT  ," ).append("\n"); 
		query.append("           V.OFC_CD                ," ).append("\n"); 
		query.append("           V.OFC_CONTI             ," ).append("\n"); 
		query.append("           V.STS                   ," ).append("\n"); 
		query.append("           DECODE(VPS.SKD_CNG_STS_CD, 'S', 1, 0) AS SKIPPED," ).append("\n"); 
		query.append("           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY V.VVD, NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MAX_SEQ," ).append("\n"); 
		query.append("           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY V.VVD, NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MIN_SEQ," ).append("\n"); 
		query.append("           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("           COUNT(*) OVER (PARTITION BY V.VVD, NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT" ).append("\n"); 
		query.append("           , BSE_QTR_CD" ).append("\n"); 
		query.append("           , BSE_YR" ).append("\n"); 
		query.append("      FROM MDM_LOCATION     L  ," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD VPS," ).append("\n"); 
		query.append("           REP_VVDS         V" ).append("\n"); 
		query.append("     WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_POL_POD AS (" ).append("\n"); 
		query.append("    SELECT VVD," ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           POL_PAST            ," ).append("\n"); 
		query.append("           POL_ETA_DT          ," ).append("\n"); 
		query.append("           POL_ETD_DT          ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POD_CONTI           ," ).append("\n"); 
		query.append("           POD_PAST            ," ).append("\n"); 
		query.append("           POD_ETA_DT          ," ).append("\n"); 
		query.append("           POD_ETD_DT          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS                 ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           LD_PORT             ," ).append("\n"); 
		query.append("           PL_PORT_CNT         ," ).append("\n"); 
		query.append("           PD_PORT_CNT         ," ).append("\n"); 
		query.append("           PL_PD_PORT_CNT" ).append("\n"); 
		query.append("           , BSE_QTR_CD" ).append("\n"); 
		query.append("           , BSE_YR" ).append("\n"); 
		query.append("           , MAX(PL_PORT_CNT) OVER (PARTITION BY VVD, POL_CD) AS MAX_POL_PORT_SEQ" ).append("\n"); 
		query.append("           , MAX(PD_PORT_CNT) OVER (PARTITION BY VVD, POD_CD) AS MAX_POD_PORT_SEQ" ).append("\n"); 
		query.append("           , POL_YD_SEQ" ).append("\n"); 
		query.append("           , POD_YD_SEQ" ).append("\n"); 
		query.append("           , PL_VPS_PORT_CD" ).append("\n"); 
		query.append("           , PD_VPS_PORT_CD" ).append("\n"); 
		query.append("           , PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("           , PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT VVD," ).append("\n"); 
		query.append("                     REP_TRD_CD          ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                     RLANE_CD            ," ).append("\n"); 
		query.append("                     DIR_CD              ," ).append("\n"); 
		query.append("                     TRD_CD              ," ).append("\n"); 
		query.append("                     SUB_TRD_CD          ," ).append("\n"); 
		query.append("                     COST_YR             ," ).append("\n"); 
		query.append("                     COST_MON            ," ).append("\n"); 
		query.append("                     COST_WK             ," ).append("\n"); 
		query.append("                     VSL_CD              ," ).append("\n"); 
		query.append("                     SKD_VOY_NO          ," ).append("\n"); 
		query.append("                     SKD_DIR_CD          ," ).append("\n"); 
		query.append("                     POL_CD,POL_SEQ      ," ).append("\n"); 
		query.append("                     POL_CONTI           ," ).append("\n"); 
		query.append("                     POL_PAST            ," ).append("\n"); 
		query.append("                     POL_ETA_DT          ," ).append("\n"); 
		query.append("                     POL_ETD_DT          ," ).append("\n"); 
		query.append("                     POD_CD              ," ).append("\n"); 
		query.append("                     POD_SEQ             ," ).append("\n"); 
		query.append("                     POD_CONTI           ," ).append("\n"); 
		query.append("                     POD_PAST            ," ).append("\n"); 
		query.append("                     POD_ETA_DT          ," ).append("\n"); 
		query.append("                     POD_ETD_DT          ," ).append("\n"); 
		query.append("                     IOC_CD              ," ).append("\n"); 
		query.append("                     PAST                ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     OFC_CD              ," ).append("\n"); 
		query.append("                     OFC_CONTI           ," ).append("\n"); 
		query.append("                     STS                 ," ).append("\n"); 
		query.append("                     POL_SKIP            ," ).append("\n"); 
		query.append("                     POD_SKIP            ," ).append("\n"); 
		query.append("                     LD_PORT             ," ).append("\n"); 
		query.append("                     PL_PORT_CNT         ," ).append("\n"); 
		query.append("                     PD_PORT_CNT         ," ).append("\n"); 
		query.append("                     PL_PD_PORT_CNT      , " ).append("\n"); 
		query.append("                     MAX(PL_PD_PORT_CNT) OVER (PARTITION BY VVD,POL_CD,POD_CD ORDER BY POL_CD,POD_CD) AS PL_PD_PORT_MAX" ).append("\n"); 
		query.append("                     , BSE_QTR_CD" ).append("\n"); 
		query.append("                     , BSE_YR" ).append("\n"); 
		query.append("                     , POL_YD_SEQ" ).append("\n"); 
		query.append("                     , POD_YD_SEQ" ).append("\n"); 
		query.append("                     , PL_VPS_PORT_CD" ).append("\n"); 
		query.append("                     , PD_VPS_PORT_CD" ).append("\n"); 
		query.append("                     , PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                     , PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT PL.VVD," ).append("\n"); 
		query.append("                               PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               PL.RLANE_CD      ," ).append("\n"); 
		query.append("                               PL.DIR_CD        ," ).append("\n"); 
		query.append("                               DRL.TRD_CD       ," ).append("\n"); 
		query.append("                               DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                               PL.COST_YR       ," ).append("\n"); 
		query.append("                               PL.COST_MON      ," ).append("\n"); 
		query.append("                               PL.COST_WK       ," ).append("\n"); 
		query.append("                               PL.VSL_CD        ," ).append("\n"); 
		query.append("                               PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                               PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                               PL.PORT_CD         AS POL_CD    ," ).append("\n"); 
		query.append("                               MAX(PL.PORT_SEQ)   AS POL_SEQ   ," ).append("\n"); 
		query.append("                               PL.CONTI_CD        AS POL_CONTI ," ).append("\n"); 
		query.append("                               MIN(PL.PORT_PAST)  AS POL_PAST  ," ).append("\n"); 
		query.append("                               PL.ETA_DT          AS POL_ETA_DT," ).append("\n"); 
		query.append("                               PL.ETD_DT          AS POL_ETD_DT," ).append("\n"); 
		query.append("                               PD.PORT_CD         AS POD_CD    ," ).append("\n"); 
		query.append("                               --MIN(PD.PORT_SEQ) AS POD_SEQ   ," ).append("\n"); 
		query.append("                               (CASE" ).append("\n"); 
		query.append("                                     WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)" ).append("\n"); 
		query.append("                                     ELSE CASE" ).append("\n"); 
		query.append("                                     	  	WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)" ).append("\n"); 
		query.append("                                          END" ).append("\n"); 
		query.append("                                 END) AS POD_SEQ ," ).append("\n"); 
		query.append("                               --MAX(PL.MAX_SEQ) ," ).append("\n"); 
		query.append("                               --MAX(PL.PORT_CNT)," ).append("\n"); 
		query.append("                               PD.CONTI_CD       AS POD_CONTI ," ).append("\n"); 
		query.append("                               MIN(PD.PORT_PAST) AS POD_PAST  ," ).append("\n"); 
		query.append("                               PD.ETA_DT         AS POD_ETA_DT," ).append("\n"); 
		query.append("                               PD.ETD_DT         AS POD_ETD_DT," ).append("\n"); 
		query.append("                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD," ).append("\n"); 
		query.append("                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               PL.OFC_CD              ," ).append("\n"); 
		query.append("                               PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                               PL.STS                 ," ).append("\n"); 
		query.append("                               PL.SKIPPED  AS POL_SKIP," ).append("\n"); 
		query.append("                               PD.SKIPPED  AS POD_SKIP," ).append("\n"); 
		query.append("                               SUBSTR(( SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)" ).append("\n"); 
		query.append("                                          FROM VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                                         WHERE S1.SKIPPED <> 1" ).append("\n"); 
		query.append("                                           AND S1.VVD = PL.VVD), 4) AS LD_PORT," ).append("\n"); 
		query.append("                               PL.PORT_CNT AS PL_PORT_CNT," ).append("\n"); 
		query.append("                               PD.PORT_CNT AS PD_PORT_CNT," ).append("\n"); 
		query.append("                               ROW_NUMBER()OVER (PARTITION BY PL.VVD,PL.PORT_CD,PD.PORT_CD ORDER BY PL.PORT_CD,PD.PORT_CD) AS PL_PD_PORT_CNT" ).append("\n"); 
		query.append("                               , PL.BSE_QTR_CD" ).append("\n"); 
		query.append("                               , PL.BSE_YR" ).append("\n"); 
		query.append("                               , PL.CALL_YD_IND_SEQ AS POL_YD_SEQ" ).append("\n"); 
		query.append("                               , PD.CALL_YD_IND_SEQ AS POD_YD_SEQ" ).append("\n"); 
		query.append("                               , PL.VPS_PORT_CD     AS PL_VPS_PORT_CD" ).append("\n"); 
		query.append("                               , PD.VPS_PORT_CD     AS PD_VPS_PORT_CD" ).append("\n"); 
		query.append("                               , PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                               , PD.CLPT_IND_SEQ    AS PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                          FROM MDM_DTL_REV_LANE DRL," ).append("\n"); 
		query.append("                               VSL_PORT_SKD     PD ," ).append("\n"); 
		query.append("                               VSL_PORT_SKD     PL" ).append("\n"); 
		query.append("                         WHERE DRL.RLANE_CD        = PL.RLANE_CD" ).append("\n"); 
		query.append("                           AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD" ).append("\n"); 
		query.append("                           AND DRL.FM_CONTI_CD     = PL.CONTI_CD" ).append("\n"); 
		query.append("                           AND DRL.TO_CONTI_CD     = PD.CONTI_CD" ).append("\n"); 
		query.append("                           AND PD.VVD = PL.VVD" ).append("\n"); 
		query.append("                           AND PD.REP_TRD_CD       = PL.REP_TRD_CD" ).append("\n"); 
		query.append("                           AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                           AND PD.RLANE_CD         = PL.RLANE_CD" ).append("\n"); 
		query.append("                           AND PD.VSL_CD           = PL.VSL_CD " ).append("\n"); 
		query.append("                           AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND PD.PORT_CD         <> PL.PORT_CD" ).append("\n"); 
		query.append("                           AND PD.PORT_SEQ         > PL.PORT_SEQ" ).append("\n"); 
		query.append("                           AND (    PL.PORT_SEQ = DECODE(PD.CONTI_CD, PL.CONTI_CD, PL.MIN_SEQ, PL.MAX_SEQ)   --  단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두" ).append("\n"); 
		query.append("                                 OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING" ).append("\n"); 
		query.append("                      GROUP BY PL.VVD," ).append("\n"); 
		query.append("                               PL.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               PL.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               PL.RLANE_CD      ," ).append("\n"); 
		query.append("                               PL.DIR_CD        ," ).append("\n"); 
		query.append("                               DRL.TRD_CD       ," ).append("\n"); 
		query.append("                               DRL.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                               PL.COST_YR       ," ).append("\n"); 
		query.append("                               PL.COST_MON      ," ).append("\n"); 
		query.append("                               PL.COST_WK       ," ).append("\n"); 
		query.append("                               PL.VSL_CD        ," ).append("\n"); 
		query.append("                               PL.SKD_VOY_NO    ," ).append("\n"); 
		query.append("                               PL.SKD_DIR_CD    ," ).append("\n"); 
		query.append("                               PL.PORT_CD       ," ).append("\n"); 
		query.append("                               PL.CONTI_CD      ," ).append("\n"); 
		query.append("                               PD.PORT_CD       ," ).append("\n"); 
		query.append("                               PD.CONTI_CD      ," ).append("\n"); 
		query.append("                               PL.SKIPPED       ," ).append("\n"); 
		query.append("                               PD.SKIPPED       ," ).append("\n"); 
		query.append("                               PL.ETA_DT        ," ).append("\n"); 
		query.append("                               PL.ETD_DT        ," ).append("\n"); 
		query.append("                               PD.ETA_DT        ," ).append("\n"); 
		query.append("                               PD.ETD_DT        ," ).append("\n"); 
		query.append("                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')           ," ).append("\n"); 
		query.append("                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y')," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               PL.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               PL.OFC_CD              ," ).append("\n"); 
		query.append("                               PL.OFC_CONTI           ," ).append("\n"); 
		query.append("                               PL.STS                 ," ).append("\n"); 
		query.append("                               PL.CLPT_IND_SEQ        ," ).append("\n"); 
		query.append("                               PL.PORT_CNT            ," ).append("\n"); 
		query.append("                               PD.PORT_CNT" ).append("\n"); 
		query.append("                               , PL.BSE_QTR_CD" ).append("\n"); 
		query.append("                               , PL.BSE_YR" ).append("\n"); 
		query.append("                              , PL.CALL_YD_IND_SEQ " ).append("\n"); 
		query.append("                              , PD.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("                              , PL.VPS_PORT_CD" ).append("\n"); 
		query.append("                              , PD.VPS_PORT_CD" ).append("\n"); 
		query.append("                              , PL.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                              , PD.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("     WHERE A.PL_PD_PORT_CNT = PL_PD_PORT_MAX" ).append("\n"); 
		query.append("     --WHERE A.PD_PORT_CNT = '1'" ).append("\n"); 
		query.append("        --OR ( A.PD_PORT_CNT  = '2' AND PL_PD_PORT_CNT = '2' )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           VVD," ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           RLANE_CD            ," ).append("\n"); 
		query.append("           DIR_CD              ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_MON            ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           VSL_CD              ," ).append("\n"); 
		query.append("           SKD_VOY_NO          ," ).append("\n"); 
		query.append("           SKD_DIR_CD          ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           STS" ).append("\n"); 
		query.append("           , BSE_QTR_CD" ).append("\n"); 
		query.append("           , BSE_YR" ).append("\n"); 
		query.append("      FROM VVD_POL_POD VPP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    --BOOKING" ).append("\n"); 
		query.append("    SELECT VVD," ).append("\n"); 
		query.append("           REP_TRD_CD          ," ).append("\n"); 
		query.append("           REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("           TRD_CD              ," ).append("\n"); 
		query.append("           SUB_TRD_CD          ," ).append("\n"); 
		query.append("		   RLANE_CD			   ," ).append("\n"); 
		query.append("           BASE_RHQ_CD         ," ).append("\n"); 
		query.append("           -- conversion된 Office들이 BKG에 있는경우처리(ex:JKTSC)" ).append("\n"); 
		query.append("           SPC_SCR_OFC_CONV_FNC(SLS_OFC_CD) AS SLS_OFC_CD," ).append("\n"); 
		query.append("           COST_YR             ," ).append("\n"); 
		query.append("           COST_WK             ," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POL_CONTI           ," ).append("\n"); 
		query.append("           OFC_CONTI           ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           PAST                ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           BKG_STS_CD          ," ).append("\n"); 
		query.append("           (BKG_TTL_QTY)       AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("           (BKG_20FT_QTY)      AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("           (BKG_40FT_QTY)      AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("           (BKG_40FT_HC_QTY)   AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("           (BKG_45FT_HC_QTY)   AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("           (BKG_53FT_QTY)      AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("           (BKG_RF_QTY)        AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("           (BKG_TTL_WGT)       AS BKG_TTL_WGT    ," ).append("\n"); 
		query.append("           CM_OP		       ," ).append("\n"); 
		query.append("           CM_OC		       ," ).append("\n"); 
		query.append("           CM_VL		       " ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT VVD," ).append("\n"); 
		query.append("                     REP_TRD_CD          ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                     TRD_CD              ," ).append("\n"); 
		query.append("                     SUB_TRD_CD          ," ).append("\n"); 
		query.append("				     RLANE_CD			 ," ).append("\n"); 
		query.append("                     BASE_RHQ_CD         ," ).append("\n"); 
		query.append("                     SLS_OFC_CD          ," ).append("\n"); 
		query.append("                     COST_YR             ," ).append("\n"); 
		query.append("                     COST_WK             ," ).append("\n"); 
		query.append("                     IOC_CD              ," ).append("\n"); 
		query.append("                     POL_CD              ," ).append("\n"); 
		query.append("                     POD_CD              ," ).append("\n"); 
		query.append("                     POL_SEQ             ," ).append("\n"); 
		query.append("                     POD_SEQ             ," ).append("\n"); 
		query.append("                     POL_CONTI           ," ).append("\n"); 
		query.append("                     OFC_CONTI           ," ).append("\n"); 
		query.append("                     POL_SKIP            ," ).append("\n"); 
		query.append("                     POD_SKIP            ," ).append("\n"); 
		query.append("                     PAST                ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     BKG_STS_CD          ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_TTL_WGT    ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(CM_VAL,  1, 10), 0)) AS CM_OP	      ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(CM_VAL, 11, 10), 0)) AS CM_OC	      ," ).append("\n"); 
		query.append("                     TO_NUMBER(NVL(SUBSTR(CM_VAL, 21, 10), 0)) AS CM_VL	      " ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT VPP.VVD," ).append("\n"); 
		query.append("                               VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               VPP.TRD_CD        ," ).append("\n"); 
		query.append("                               VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("							   VPP.RLANE_CD		 ," ).append("\n"); 
		query.append("                               VPP.OFC_CD                                      AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                               SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)           AS SLS_OFC_CD ," ).append("\n"); 
		query.append("                               VPP.COST_YR       ," ).append("\n"); 
		query.append("                               VPP.COST_WK       ," ).append("\n"); 
		query.append("                               DECODE(BV.VSL_PRE_PST_CD, 'T', VPP.IOC_CD, 'T') AS IOC_CD     ," ).append("\n"); 
		query.append("                               VPP.POL_CD              ," ).append("\n"); 
		query.append("                               VPP.POD_CD              ," ).append("\n"); 
		query.append("                               VPP.POL_SEQ             ," ).append("\n"); 
		query.append("                               VPP.POD_SEQ             ," ).append("\n"); 
		query.append("                               VPP.POL_CONTI           ," ).append("\n"); 
		query.append("                               VPP.OFC_CONTI           ," ).append("\n"); 
		query.append("                               VPP.POL_SKIP            ," ).append("\n"); 
		query.append("                               VPP.POD_SKIP            ," ).append("\n"); 
		query.append("                               VPP.PAST                ," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               B.BKG_STS_CD            ," ).append("\n"); 
		query.append("                               (" ).append("\n"); 
		query.append("                                  SELECT" ).append("\n"); 
		query.append("                                            TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                         || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))" ).append("\n"); 
		query.append("                                                                 + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                           FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                          WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                    FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                   WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                                     AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                               ) AS VAL," ).append("\n"); 
		query.append("							   SPC_GET_OB_MVMT_FNC(B.BKG_NO, VPP.POL_PAST) AS CM_VAL" ).append("\n"); 
		query.append("                          FROM SPC_OFC_LVL O  ," ).append("\n"); 
		query.append("                               BKG_BOOKING B  ," ).append("\n"); 
		query.append("                               BKG_VVD     BV ," ).append("\n"); 
		query.append("                               VVD_POL_POD VPP," ).append("\n"); 
		query.append("                               BKG_BL_DOC  D" ).append("\n"); 
		query.append("                         WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                           AND O.OFC_CD         = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)" ).append("\n"); 
		query.append("                           AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                           AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("                           AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                           AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                           AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1))" ).append("\n"); 
		query.append("                           AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1)) " ).append("\n"); 
		query.append("                               " ).append("\n"); 
		query.append("                           AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALL_DATA AS (" ).append("\n"); 
		query.append("    SELECT VVD," ).append("\n"); 
		query.append("           IOC_CD     ," ).append("\n"); 
		query.append("           BASE_RHQ_CD," ).append("\n"); 
		query.append("           RHQ_CD     ," ).append("\n"); 
		query.append("           AREA_CD    ," ).append("\n"); 
		query.append("           OFC_CD     ," ).append("\n"); 
		query.append("           POL_CD     ," ).append("\n"); 
		query.append("           POD_CD     ," ).append("\n"); 
		query.append("           POL_SEQ    ," ).append("\n"); 
		query.append("           POD_SEQ    ," ).append("\n"); 
		query.append("           POL_SKIP   ," ).append("\n"); 
		query.append("           POD_SKIP   ," ).append("\n"); 
		query.append("           MAX(REP_TRD_CD)     AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           MAX(REP_SUB_TRD_CD) AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           MAX(TRD_CD)         AS TRD_CD        ," ).append("\n"); 
		query.append("           MAX(SUB_TRD_CD)     AS SUB_TRD_CD    ," ).append("\n"); 
		query.append("           SUM(BKG_QUOTA)      AS BKG_QUOTA     ," ).append("\n"); 
		query.append("           SUM(BKG_QTA_CMB)    AS BKG_QTA_CMB   ," ).append("\n"); 
		query.append("           SUM(FC_TEU)         AS FC_TEU        ," ).append("\n"); 
		query.append("           SUM(FC_HC)          AS FC_HC         ," ).append("\n"); 
		query.append("           SUM(FC_45)          AS FC_45         ," ).append("\n"); 
		query.append("           SUM(FC_53)          AS FC_53         ," ).append("\n"); 
		query.append("           SUM(FC_RF)          AS FC_RF         ," ).append("\n"); 
		query.append("           SUM(FC_WGT)         AS FC_WGT        ," ).append("\n"); 
		query.append("           SUM(UG_TEU)         AS UG_TEU        ," ).append("\n"); 
		query.append("           SUM(UG_HC)          AS UG_HC         ," ).append("\n"); 
		query.append("           SUM(UG_45)          AS UG_45         ," ).append("\n"); 
		query.append("           SUM(UG_53)          AS UG_53         ," ).append("\n"); 
		query.append("           SUM(UG_RF)          AS UG_RF         ," ).append("\n"); 
		query.append("           SUM(UG_WGT)         AS UG_WGT        ," ).append("\n"); 
		query.append("           SUM(MR_TEU)         AS MR_TEU        ," ).append("\n"); 
		query.append("           SUM(MR_HC)          AS MR_HC         ," ).append("\n"); 
		query.append("           SUM(MR_45)          AS MR_45         ," ).append("\n"); 
		query.append("           SUM(MR_53)          AS MR_53         ," ).append("\n"); 
		query.append("           SUM(MR_RF)          AS MR_RF         ," ).append("\n"); 
		query.append("           SUM(MR_WGT)         AS MR_WGT        ," ).append("\n"); 
		query.append("           SUM(AP_TEU)         AS AP_TEU        ," ).append("\n"); 
		query.append("           SUM(AP_HC)          AS AP_HC         ," ).append("\n"); 
		query.append("           SUM(AP_45)          AS AP_45         ," ).append("\n"); 
		query.append("           SUM(AP_53)          AS AP_53         ," ).append("\n"); 
		query.append("           SUM(AP_RF)          AS AP_RF         ," ).append("\n"); 
		query.append("           SUM(AP_WGT)         AS AP_WGT        ," ).append("\n"); 
		query.append("           SUM(BK_TEU)         AS BK_TEU        ," ).append("\n"); 
		query.append("           SUM(BK_20)          AS BK_20         ," ).append("\n"); 
		query.append("           SUM(BK_40)          AS BK_40         ," ).append("\n"); 
		query.append("           SUM(BK_HC)          AS BK_HC         ," ).append("\n"); 
		query.append("           SUM(BK_45)          AS BK_45         ," ).append("\n"); 
		query.append("           SUM(BK_53)          AS BK_53         ," ).append("\n"); 
		query.append("           SUM(BK_RF)          AS BK_RF         ," ).append("\n"); 
		query.append("           SUM(BK_WGT)         AS BK_WGT        ," ).append("\n"); 
		query.append("           SUM(BT_TEU)         AS BT_TEU        ," ).append("\n"); 
		query.append("           SUM(BT_20)          AS BT_20         ," ).append("\n"); 
		query.append("           SUM(BT_40)          AS BT_40         ," ).append("\n"); 
		query.append("           SUM(BT_HC)          AS BT_HC         ," ).append("\n"); 
		query.append("           SUM(BT_45)          AS BT_45         ," ).append("\n"); 
		query.append("           SUM(BT_53)          AS BT_53         ," ).append("\n"); 
		query.append("           SUM(BT_RF)          AS BT_RF         ," ).append("\n"); 
		query.append("           SUM(BT_WGT)         AS BT_WGT        ," ).append("\n"); 
		query.append("           SUM(CM_OP)          AS CM_OP         ,   " ).append("\n"); 
		query.append("           SUM(CM_OC)          AS CM_OC         ,   " ).append("\n"); 
		query.append("           SUM(CM_VL)          AS CM_VL         ,   " ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           SUM(GT_TEU)         AS GT_TEU        ," ).append("\n"); 
		query.append("           SUM(GT_HC)          AS GT_HC         ," ).append("\n"); 
		query.append("           SUM(GT_45)          AS GT_45         ," ).append("\n"); 
		query.append("           SUM(GT_53)          AS GT_53         ," ).append("\n"); 
		query.append("           SUM(GT_RF)          AS GT_RF         ," ).append("\n"); 
		query.append("           SUM(GT_WGT)         AS GT_WGT        ," ).append("\n"); 
		query.append("           DECODE(POD_CD, '0000000', DECODE(SUM(UG_WGT), 0, MAX(CFM_FLG), MIN(CFM_FLG))) AS CFM_FLG," ).append("\n"); 
		query.append("           MAX(PAST)           AS PAST          ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT                 ," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD                     ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'A', 1, 0))                  AS AP_MD                ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'A', 0, 1))                  AS OTH_MD               ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'Q', 0, 1))                  AS NQTA_MD              ," ).append("\n"); 
		query.append("           SUM(DECODE(FLG, 'V', 0, 1))                  AS NCFM_MD              ," ).append("\n"); 
		query.append("           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_RMK))     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_POL_RMK)) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_POD_RMK)) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              --Load Quota (Port)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("              --Load Quota (Office)" ).append("\n"); 
		query.append("              SELECT 2   AS DIV," ).append("\n"); 
		query.append("                     'Q' AS FLG," ).append("\n"); 
		query.append("                     VPP.VVD," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.IOC_CD        ," ).append("\n"); 
		query.append("                     VPP.OFC_CD AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     O.N2ND_PRNT_OFC_CD AS RHQ_CD         ," ).append("\n"); 
		query.append("                     MQ.AQ_CD   AS AREA_CD    ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)" ).append("\n"); 
		query.append("                          FROM SPC_RGN_OFC_CONV ROC" ).append("\n"); 
		query.append("                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD" ).append("\n"); 
		query.append("                     ) AS OFC_CD," ).append("\n"); 
		query.append("                     '0000000'  AS POL_CD   ," ).append("\n"); 
		query.append("                     '0000000'  AS POD_CD   ," ).append("\n"); 
		query.append("                     0          AS POL_SEQ  ," ).append("\n"); 
		query.append("                     0          AS POD_SEQ  ," ).append("\n"); 
		query.append("                     NULL       AS POL_SKIP ," ).append("\n"); 
		query.append("                     NULL       AS POD_SKIP ," ).append("\n"); 
		query.append("                     MQ.LOD_QTY AS BKG_QUOTA," ).append("\n"); 
		query.append("                     MQ.LOD_QTY * (MQ.GRS_RPB_REV - MQ.PA_CM_UC_AMT) AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     0 AS FC_TEU ," ).append("\n"); 
		query.append("                     0 AS FC_HC  ," ).append("\n"); 
		query.append("                     0 AS FC_45  ," ).append("\n"); 
		query.append("                     0 AS FC_53  ," ).append("\n"); 
		query.append("                     0 AS FC_RF  ," ).append("\n"); 
		query.append("                     0 AS FC_WGT ," ).append("\n"); 
		query.append("                     0 AS UG_TEU ," ).append("\n"); 
		query.append("                     0 AS UG_HC  ," ).append("\n"); 
		query.append("                     0 AS UG_45  ," ).append("\n"); 
		query.append("                     0 AS UG_53  ," ).append("\n"); 
		query.append("                     0 AS UG_RF  ," ).append("\n"); 
		query.append("                     0 AS UG_WGT ," ).append("\n"); 
		query.append("                     0 AS MR_TEU ," ).append("\n"); 
		query.append("                     0 AS MR_HC  ," ).append("\n"); 
		query.append("                     0 AS MR_45  ," ).append("\n"); 
		query.append("                     0 AS MR_RF  ," ).append("\n"); 
		query.append("                     0 AS MR_53  ," ).append("\n"); 
		query.append("                     0 AS MR_WGT ," ).append("\n"); 
		query.append("                     0 AS AP_TEU ," ).append("\n"); 
		query.append("                     0 AS AP_HC  ," ).append("\n"); 
		query.append("                     0 AS AP_45  ," ).append("\n"); 
		query.append("                     0 AS AP_53  ," ).append("\n"); 
		query.append("                     0 AS AP_RF  ," ).append("\n"); 
		query.append("                     0 AS AP_WGT ," ).append("\n"); 
		query.append("                     0 AS BK_TEU ," ).append("\n"); 
		query.append("                     0 AS BK_20  ," ).append("\n"); 
		query.append("                     0 AS BK_40  ," ).append("\n"); 
		query.append("                     0 AS BK_HC  ," ).append("\n"); 
		query.append("                     0 AS BK_45  ," ).append("\n"); 
		query.append("                     0 AS BK_53  ," ).append("\n"); 
		query.append("                     0 AS BK_RF  ," ).append("\n"); 
		query.append("                     0 AS BK_WGT ," ).append("\n"); 
		query.append("                     0 AS BT_TEU ," ).append("\n"); 
		query.append("                     0 AS BT_20  ," ).append("\n"); 
		query.append("                     0 AS BT_40  ," ).append("\n"); 
		query.append("                     0 AS BT_HC  ," ).append("\n"); 
		query.append("                     0 AS BT_45  ," ).append("\n"); 
		query.append("                     0 AS BT_53  ," ).append("\n"); 
		query.append("                     0 AS BT_RF  ," ).append("\n"); 
		query.append("                     0 AS BT_WGT ," ).append("\n"); 
		query.append("                     0 AS CM_OP  ,   " ).append("\n"); 
		query.append("                     0 AS CM_OC  ,   " ).append("\n"); 
		query.append("                     0 AS CM_VL  ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     0 AS GT_TEU ," ).append("\n"); 
		query.append("                     0 AS GT_HC  ," ).append("\n"); 
		query.append("                     0 AS GT_45  ," ).append("\n"); 
		query.append("                     0 AS GT_53  ," ).append("\n"); 
		query.append("                     0 AS GT_RF  ," ).append("\n"); 
		query.append("                     0 AS GT_WGT ," ).append("\n"); 
		query.append("                     NULL AS PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT     ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD         ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SQM_CFM_QTA      MQ ," ).append("\n"); 
		query.append("                     SQM_QTA_RLSE_VER MQR," ).append("\n"); 
		query.append("                     VVDS             VPP," ).append("\n"); 
		query.append("                     SPC_OFC_LVL      O" ).append("\n"); 
		query.append("               WHERE 1 = 1" ).append("\n"); 
		query.append("                 AND MQR.BSE_YR           = VPP.BSE_YR" ).append("\n"); 
		query.append("                 --AND MQR.BSE_QTR_CD       = CEIL(TO_NUMBER(DECODE(VPP.COST_WK,'00','01','53','52',VPP.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(VPP.COST_MON)/3)||'Q' " ).append("\n"); 
		query.append("                 AND MQR.BSE_QTR_CD      = VPP.BSE_QTR_CD	" ).append("\n"); 
		query.append("                 AND MQR.SQM_VER_STS_CD   = 'R'" ).append("\n"); 
		query.append("                 AND MQR.BSE_TP_CD        = 'Q' -- 분기 20131205추가" ).append("\n"); 
		query.append("                 AND MQ.QTA_RLSE_VER_NO   = MQR.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                 AND MQ.BSE_TP_CD         = MQR.BSE_TP_CD -- 분기 20131205추가 " ).append("\n"); 
		query.append("                 AND MQ.BSE_YR            = MQR.BSE_YR" ).append("\n"); 
		query.append("                 AND MQ.BSE_QTR_CD        = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                 AND MQ.QTA_TGT_CD        = 'D'" ).append("\n"); 
		query.append("                 AND MQ.OFC_VW_CD         = 'L'  --" ).append("\n"); 
		query.append("                 AND MQ.TRD_CD            = VPP.TRD_CD" ).append("\n"); 
		query.append("                 AND MQ.RLANE_CD          = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND MQ.DIR_CD            = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND MQ.VSL_CD            = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND MQ.SKD_VOY_NO        = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND MQ.SKD_DIR_CD        = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                 --AND MQ.RGN_OFC_CD        = O.OFC_CD" ).append("\n"); 
		query.append("                 AND (" ).append("\n"); 
		query.append("                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)" ).append("\n"); 
		query.append("                          FROM SPC_RGN_OFC_CONV ROC" ).append("\n"); 
		query.append("                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD" ).append("\n"); 
		query.append("                     ) = O.OFC_CD" ).append("\n"); 
		query.append("                 AND (    O.N2ND_PRNT_OFC_CD = CASE" ).append("\n"); 
		query.append("                                           WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN ( SELECT OFC_CD" ).append("\n"); 
		query.append("                                                                                                FROM EGYPT_OFFICE ) THEN 'HAMRU'" ).append("\n"); 
		query.append("										   WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD" ).append("\n"); 
		query.append("                                                                                                                    ELSE VPP.OFC_CD" ).append("\n"); 
		query.append("                                       END" ).append("\n"); 
		query.append("                       OR O.N2ND_PRNT_OFC_CD = 'SINRS')" ).append("\n"); 
		query.append("                 AND MQ.LOD_QTY > 0 -- QTA데이터가 0인 경우는 제외시킨다." ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Forecast" ).append("\n"); 
		query.append("              SELECT 3   AS DIV," ).append("\n"); 
		query.append("                     'F' AS FLG," ).append("\n"); 
		query.append("                     VPP.VVD," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     F.IOC_TS_CD  AS IOC_CD     ," ).append("\n"); 
		query.append("                     VPP.OFC_CD   AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     F.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                     F.SLS_AQ_CD  AS AREA_CD    ," ).append("\n"); 
		query.append("                     DECODE(IOC_TS_CD, 'T', F.SLS_RGN_OFC_CD, F.SLS_RGN_OFC_CD) AS OFC_CD," ).append("\n"); 
		query.append("                     VPP.POL_CD  ," ).append("\n"); 
		query.append("                     VPP.POD_CD  ," ).append("\n"); 
		query.append("--                     F.POL_YD_CD ," ).append("\n"); 
		query.append("--                     F.POD_YD_CD ," ).append("\n"); 
		query.append("                     VPP.POL_SEQ ," ).append("\n"); 
		query.append("                     VPP.POD_SEQ ," ).append("\n"); 
		query.append("                     VPP.POL_SKIP," ).append("\n"); 
		query.append("                     VPP.POD_SKIP," ).append("\n"); 
		query.append("                     0                 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0                 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     F.CFM_TTL_QTY     AS FC_TEU   ," ).append("\n"); 
		query.append("                     F.CFM_40FT_HC_QTY AS FC_HC    ," ).append("\n"); 
		query.append("                     F.CFM_45FT_HC_QTY AS FC_45    ," ).append("\n"); 
		query.append("                     F.CFM_53FT_QTY    AS FC_53    ," ).append("\n"); 
		query.append("                     F.CFM_RF_QTY      AS FC_RF    ," ).append("\n"); 
		query.append("                     F.CFM_TTL_WGT     AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU," ).append("\n"); 
		query.append("                     0 AS UG_HC ," ).append("\n"); 
		query.append("                     0 AS UG_45 ," ).append("\n"); 
		query.append("                     0 AS UG_53 ," ).append("\n"); 
		query.append("                     0 AS UG_RF ," ).append("\n"); 
		query.append("                     0 AS UG_WGT," ).append("\n"); 
		query.append("                     0 AS MR_TEU," ).append("\n"); 
		query.append("                     0 AS MR_HC ," ).append("\n"); 
		query.append("                     0 AS MR_45 ," ).append("\n"); 
		query.append("                     0 AS MR_53 ," ).append("\n"); 
		query.append("                     0 AS MR_RF ," ).append("\n"); 
		query.append("                     0 AS MR_WGT," ).append("\n"); 
		query.append("                     0 AS AP_TEU," ).append("\n"); 
		query.append("                     0 AS AP_HC ," ).append("\n"); 
		query.append("                     0 AS AP_45 ," ).append("\n"); 
		query.append("                     0 AS AP_53 ," ).append("\n"); 
		query.append("                     0 AS AP_RF ," ).append("\n"); 
		query.append("                     0 AS AP_WGT," ).append("\n"); 
		query.append("                     0 AS BK_TEU," ).append("\n"); 
		query.append("                     0 AS BK_20 ," ).append("\n"); 
		query.append("                     0 AS BK_40 ," ).append("\n"); 
		query.append("                     0 AS BK_HC ," ).append("\n"); 
		query.append("                     0 AS BK_45 ," ).append("\n"); 
		query.append("                     0 AS BK_53 ," ).append("\n"); 
		query.append("                     0 AS BK_RF ," ).append("\n"); 
		query.append("                     0 AS BK_WGT," ).append("\n"); 
		query.append("                     0 AS BT_TEU," ).append("\n"); 
		query.append("                     0 AS BT_20 ," ).append("\n"); 
		query.append("                     0 AS BT_40 ," ).append("\n"); 
		query.append("                     0 AS BT_HC ," ).append("\n"); 
		query.append("                     0 AS BT_45 ," ).append("\n"); 
		query.append("                     0 AS BT_53 ," ).append("\n"); 
		query.append("                     0 AS BT_RF ," ).append("\n"); 
		query.append("                     0 AS BT_WGT," ).append("\n"); 
		query.append("                     0 AS CM_OP ,   " ).append("\n"); 
		query.append("                     0 AS CM_OC ,   " ).append("\n"); 
		query.append("                     0 AS CM_VL ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     VPP.PAST AS PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT     ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD         ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SPC_DLY_FCAST_CUST F  ," ).append("\n"); 
		query.append("                     VVD_POL_POD        VPP" ).append("\n"); 
		query.append("               WHERE F.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND F.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND F.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND F.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND F.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND F.POL_YD_CD  = VPP.POL_CD" ).append("\n"); 
		query.append("                 AND F.POD_YD_CD  = VPP.POD_CD" ).append("\n"); 
		query.append("                 AND F.POL_YD_IND_SEQ = VPP.POL_YD_SEQ" ).append("\n"); 
		query.append("                 AND F.POD_YD_IND_SEQ = VPP.POD_YD_SEQ" ).append("\n"); 
		query.append("                 AND (    VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                       OR F.SLS_RHQ_CD  = VPP.OFC_CD" ).append("\n"); 
		query.append("                       OR F.SLS_RHQ_CD  = 'SINRS' " ).append("\n"); 
		query.append("					   OR VPP.RLANE_CD = 'WAFIE' )" ).append("\n"); 
		query.append("                 AND VPP.PAST = 'N'" ).append("\n"); 
		query.append("                 -- teu, hc, 45fc, wt" ).append("\n"); 
		query.append("                 AND NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) + NVL(F.CFM_RF_QTY,0) > 0" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Model Result(Trunk)" ).append("\n"); 
		query.append("              SELECT 4   AS DIV    ," ).append("\n"); 
		query.append("                     'M' AS FLG    ," ).append("\n"); 
		query.append("                     VVD," ).append("\n"); 
		query.append("                     REP_TRD_CD    ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     TRD_CD        ," ).append("\n"); 
		query.append("                     SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     IOC_CD        ," ).append("\n"); 
		query.append("                     BASE_RHQ_CD   ," ).append("\n"); 
		query.append("                     RHQ_CD        ," ).append("\n"); 
		query.append("                     AREA_CD       ," ).append("\n"); 
		query.append("                     OFC_CD        ," ).append("\n"); 
		query.append("                     POL_CD        ," ).append("\n"); 
		query.append("                     POD_CD        ," ).append("\n"); 
		query.append("                     POL_SEQ       ," ).append("\n"); 
		query.append("                     POD_SEQ       ," ).append("\n"); 
		query.append("                     POL_SKIP      ," ).append("\n"); 
		query.append("                     POD_SKIP      ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     0 AS FC_TEU   ," ).append("\n"); 
		query.append("                     0 AS FC_HC    ," ).append("\n"); 
		query.append("                     0 AS FC_45    ," ).append("\n"); 
		query.append("                     0 AS FC_53    ," ).append("\n"); 
		query.append("                     0 AS FC_RF    ," ).append("\n"); 
		query.append("                     0 AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU   ," ).append("\n"); 
		query.append("                     0 AS UG_HC    ," ).append("\n"); 
		query.append("                     0 AS UG_45    ," ).append("\n"); 
		query.append("                     0 AS UG_53    ," ).append("\n"); 
		query.append("                     0 AS UG_RF    ," ).append("\n"); 
		query.append("                     0 AS UG_WGT   ," ).append("\n"); 
		query.append("                     DECODE(SZ,   2, 1, 2) * QTY     AS MR_TEU," ).append("\n"); 
		query.append("                     DECODE(SZ,   5, QTY, 0)         AS MR_HC ," ).append("\n"); 
		query.append("                     DECODE(SZ,   7, QTY, 0)         AS MR_45 ," ).append("\n"); 
		query.append("                     DECODE(SZ, 'W', QTY, 0) + DECODE(SZ, 'X', QTY, 0) AS MR_53 ," ).append("\n"); 
		query.append("                     DECODE(TP, 'R', QTY, 0)         AS MR_RF ," ).append("\n"); 
		query.append("                     WGT * DECODE(SZ, 2, 1, 2) * QTY AS MR_WGT," ).append("\n"); 
		query.append("                     0 AS AP_TEU," ).append("\n"); 
		query.append("                     0 AS AP_HC ," ).append("\n"); 
		query.append("                     0 AS AP_45 ," ).append("\n"); 
		query.append("                     0 AS AP_53 ," ).append("\n"); 
		query.append("                     0 AS AP_RF ," ).append("\n"); 
		query.append("                     0 AS AP_WGT," ).append("\n"); 
		query.append("                     0 AS BK_TEU," ).append("\n"); 
		query.append("                     0 AS BK_20 ," ).append("\n"); 
		query.append("                     0 AS BK_40 ," ).append("\n"); 
		query.append("                     0 AS BK_HC ," ).append("\n"); 
		query.append("                     0 AS BK_45 ," ).append("\n"); 
		query.append("                     0 AS BK_53 ," ).append("\n"); 
		query.append("                     0 AS BK_RF ," ).append("\n"); 
		query.append("                     0 AS BK_WGT," ).append("\n"); 
		query.append("                     0 AS BT_TEU," ).append("\n"); 
		query.append("                     0 AS BT_20 ," ).append("\n"); 
		query.append("                     0 AS BT_40 ," ).append("\n"); 
		query.append("                     0 AS BT_HC ," ).append("\n"); 
		query.append("                     0 AS BT_45 ," ).append("\n"); 
		query.append("                     0 AS BT_53 ," ).append("\n"); 
		query.append("                     0 AS BT_RF ," ).append("\n"); 
		query.append("                     0 AS BT_WGT," ).append("\n"); 
		query.append("                     0 AS CM_OP ,   " ).append("\n"); 
		query.append("                     0 AS CM_OC ,   " ).append("\n"); 
		query.append("                     0 AS CM_VL ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     PAST       ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_ETD_DT         ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_CD             ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT VPP.VVD," ).append("\n"); 
		query.append("                               VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               VPP.TRD_CD        ," ).append("\n"); 
		query.append("                               VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                               VPP.OFC_CD        AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                               MR.SLS_RHQ_CD     AS RHQ_CD     ," ).append("\n"); 
		query.append("                               MR.SLS_AQ_CD      AS AREA_CD    ," ).append("\n"); 
		query.append("                               VPP.IOC_CD        ," ).append("\n"); 
		query.append("                               MR.SLS_RGN_OFC_CD AS OFC_CD     ," ).append("\n"); 
		query.append("                               VPP.POL_CD        ," ).append("\n"); 
		query.append("                               VPP.POD_CD        ," ).append("\n"); 
		query.append("                               VPP.POL_SEQ       ," ).append("\n"); 
		query.append("                               VPP.POD_SEQ       ," ).append("\n"); 
		query.append("                               VPP.POL_SKIP      ," ).append("\n"); 
		query.append("                               VPP.POD_SKIP      ," ).append("\n"); 
		query.append("                               SPC_GET_CNTR_TP_FNC(MR.FCAST_CNTR_TPSZ_CD) AS SZ," ).append("\n"); 
		query.append("                               SPC_GET_CNTR_TP_FNC(MR.FCAST_CNTR_TPSZ_CD) AS TP," ).append("\n"); 
		query.append("                               MR.MDL_ALOC_QTY   AS QTY," ).append("\n"); 
		query.append("                               MR.CNTR_WGT       AS WGT," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               VPP.PAST" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_TRNS MR ," ).append("\n"); 
		query.append("                                   VVD_POL_POD        VPP" ).append("\n"); 
		query.append("                             WHERE MR.MDL_ALOC_QTY + MR.CNTR_WGT > 0" ).append("\n"); 
		query.append("                               AND MR.RLANE_CD       = VPP.RLANE_CD" ).append("\n"); 
		query.append("                               AND MR.DIR_CD         = VPP.DIR_CD" ).append("\n"); 
		query.append("                               AND MR.VSL_CD         = VPP.VSL_CD" ).append("\n"); 
		query.append("                               AND MR.SKD_VOY_NO     = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND MR.SKD_DIR_CD     = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND DECODE(SUBSTR(MR.TRNK_POL_YD_CD, 6, 2), '00', SUBSTR(MR.TRNK_POL_YD_CD, 1, 5), SUBSTR(MR.TRNK_POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(MR.TRNK_POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                               AND DECODE(SUBSTR(MR.TRNK_POD_YD_CD, 6, 2), '00', SUBSTR(MR.TRNK_POD_YD_CD, 1, 5), SUBSTR(MR.TRNK_POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(MR.TRNK_POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("                               AND (VPP.POL_CONTI     = VPP.OFC_CONTI OR VPP.RLANE_CD = 'WAFIE'  " ).append("\n"); 
		query.append("                                    OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Model Result(TS)" ).append("\n"); 
		query.append("              SELECT 5   AS DIV    ," ).append("\n"); 
		query.append("                     'M' AS FLG    ," ).append("\n"); 
		query.append("                     VVD," ).append("\n"); 
		query.append("                     REP_TRD_CD    ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     TRD_CD        ," ).append("\n"); 
		query.append("                     SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     IOC_CD        ," ).append("\n"); 
		query.append("                     BASE_RHQ_CD   ," ).append("\n"); 
		query.append("                     RHQ_CD        ," ).append("\n"); 
		query.append("                     DECODE(RLANE_CD, 'WAFIE', AREA_CD, DECODE(BASE_RHQ_CD, RHQ_CD, AREA_CD, RHQ_CD)) AS AREA_CD," ).append("\n"); 
		query.append("                     DECODE(RLANE_CD, 'WAFIE', OFC_CD,  DECODE(BASE_RHQ_CD, RHQ_CD, OFC_CD, RHQ_CD))  AS OFC_CD ," ).append("\n"); 
		query.append("                     POL_CD        ," ).append("\n"); 
		query.append("                     POD_CD        ," ).append("\n"); 
		query.append("                     POL_SEQ       ," ).append("\n"); 
		query.append("                     POD_SEQ       ," ).append("\n"); 
		query.append("                     POL_SKIP      ," ).append("\n"); 
		query.append("                     POD_SKIP      ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     0 AS FC_TEU   ," ).append("\n"); 
		query.append("                     0 AS FC_HC    ," ).append("\n"); 
		query.append("                     0 AS FC_45    ," ).append("\n"); 
		query.append("                     0 AS FC_53    ," ).append("\n"); 
		query.append("                     0 AS FC_RF    ," ).append("\n"); 
		query.append("                     0 AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU   ," ).append("\n"); 
		query.append("                     0 AS UG_HC    ," ).append("\n"); 
		query.append("                     0 AS UG_45    ," ).append("\n"); 
		query.append("                     0 AS UG_53    ," ).append("\n"); 
		query.append("                     0 AS UG_RF    ," ).append("\n"); 
		query.append("                     0 AS UG_WGT   ," ).append("\n"); 
		query.append("                     DECODE(SZ,   2, 1, 2) * QTY     AS MR_TEU," ).append("\n"); 
		query.append("                     DECODE(SZ,   5, QTY, 0)         AS MR_HC ," ).append("\n"); 
		query.append("                     DECODE(SZ,   7, QTY, 0)         AS MR_45 ," ).append("\n"); 
		query.append("                     DECODE(SZ, 'W', QTY, 0) + DECODE(SZ, 'X', QTY, 0) AS MR_53 ," ).append("\n"); 
		query.append("                     DECODE(TP, 'R', QTY, 0)         AS MR_RF ," ).append("\n"); 
		query.append("                     WGT * DECODE(SZ, 2, 1, 2) * QTY AS MR_WGT," ).append("\n"); 
		query.append("                     0 AS AP_TEU," ).append("\n"); 
		query.append("                     0 AS AP_HC ," ).append("\n"); 
		query.append("                     0 AS AP_45 ," ).append("\n"); 
		query.append("                     0 AS AP_53 ," ).append("\n"); 
		query.append("                     0 AS AP_RF ," ).append("\n"); 
		query.append("                     0 AS AP_WGT," ).append("\n"); 
		query.append("                     0 AS BK_TEU," ).append("\n"); 
		query.append("                     0 AS BK_20 ," ).append("\n"); 
		query.append("                     0 AS BK_40 ," ).append("\n"); 
		query.append("                     0 AS BK_HC ," ).append("\n"); 
		query.append("                     0 AS BK_45 ," ).append("\n"); 
		query.append("                     0 AS BK_53 ," ).append("\n"); 
		query.append("                     0 AS BK_RF ," ).append("\n"); 
		query.append("                     0 AS BK_WGT," ).append("\n"); 
		query.append("                     0 AS BT_TEU," ).append("\n"); 
		query.append("                     0 AS BT_20 ," ).append("\n"); 
		query.append("                     0 AS BT_40 ," ).append("\n"); 
		query.append("                     0 AS BT_HC ," ).append("\n"); 
		query.append("                     0 AS BT_45 ," ).append("\n"); 
		query.append("                     0 AS BT_53 ," ).append("\n"); 
		query.append("                     0 AS BT_RF ," ).append("\n"); 
		query.append("                     0 AS BT_WGT," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     0 AS CM_OP ,   " ).append("\n"); 
		query.append("                     0 AS CM_OC ,   " ).append("\n"); 
		query.append("                     0 AS CM_VL ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     PAST       ," ).append("\n"); 
		query.append("                     LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT VPP.VVD," ).append("\n"); 
		query.append("                               VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                               VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                               VPP.TRD_CD        ," ).append("\n"); 
		query.append("                               VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("							   VPP.RLANE_CD		 ," ).append("\n"); 
		query.append("                               VPP.OFC_CD    AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                               MR.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                               MR.SLS_AQ_CD  AS AREA_CD    ," ).append("\n"); 
		query.append("                               'T'           AS IOC_CD     ," ).append("\n"); 
		query.append("                               DECODE(VPP.OFC_CD, MR.SLS_RHQ_CD, MR.SLS_RGN_OFC_CD, MR.SLS_RHQ_CD) AS OFC_CD," ).append("\n"); 
		query.append("                               VPP.POL_CD  ," ).append("\n"); 
		query.append("                               VPP.POD_CD  ," ).append("\n"); 
		query.append("                               VPP.POL_SEQ ," ).append("\n"); 
		query.append("                               VPP.POD_SEQ ," ).append("\n"); 
		query.append("                               VPP.POL_SKIP," ).append("\n"); 
		query.append("                               VPP.POD_SKIP," ).append("\n"); 
		query.append("                               SPC_GET_CNTR_TP_FNC(MR.FCAST_CNTR_TPSZ_CD) AS SZ," ).append("\n"); 
		query.append("                               SPC_GET_CNTR_TP_FNC(MR.FCAST_CNTR_TPSZ_CD) AS TP," ).append("\n"); 
		query.append("                               MR.MDL_ALOC_QTY AS QTY  ," ).append("\n"); 
		query.append("                               MR.CNTR_WGT     AS WGT  ," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                               VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                               VPP.PAST" ).append("\n"); 
		query.append("                          FROM SPC_DLY_FCAST_TRNS      MR ," ).append("\n"); 
		query.append("                               SPC_DLY_FCAST_TRNS_ROUT MRR," ).append("\n"); 
		query.append("                               VVD_POL_POD             VPP" ).append("\n"); 
		query.append("                         WHERE MR.MDL_ALOC_QTY + MR.CNTR_WGT > 0" ).append("\n"); 
		query.append("                           AND MR.SLS_FCAST_NO     = MRR.SLS_FCAST_NO" ).append("\n"); 
		query.append("                           AND MR.ALTN_FCAST_SEQ   = MRR.ALTN_FCAST_SEQ" ).append("\n"); 
		query.append("                           AND MRR.RLANE_CD        = VPP.RLANE_CD" ).append("\n"); 
		query.append("                           AND MRR.DIR_CD          = VPP.DIR_CD" ).append("\n"); 
		query.append("                           AND MRR.VSL_CD          = VPP.VSL_CD" ).append("\n"); 
		query.append("                           AND MRR.SKD_VOY_NO      = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND MRR.SKD_DIR_CD      = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND DECODE(SUBSTR(MRR.POL_YD_CD, 6, 2), '00', SUBSTR(MRR.POL_YD_CD, 1, 5), SUBSTR(MRR.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(MRR.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                           AND DECODE(SUBSTR(MRR.POD_YD_CD, 6, 2), '00', SUBSTR(MRR.POD_YD_CD, 1, 5), SUBSTR(MRR.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(MRR.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("                           AND MRR.VSL_PRE_PST_CD IN ('S', 'U')" ).append("\n"); 
		query.append("                           AND (VPP.POL_CONTI     = VPP.OFC_CONTI OR VPP.RLANE_CD = 'WAFIE' " ).append("\n"); 
		query.append("                                OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Allocation" ).append("\n"); 
		query.append("              SELECT 6   AS DIV," ).append("\n"); 
		query.append("                     'A' AS FLG," ).append("\n"); 
		query.append("                     VPP.VVD," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     DECODE(A.TS_FLG, 'Y', 'T', A.IOC_CD)||DECODE(A.MNL_FLG, 'Y', 'T', '') AS IOC_CD," ).append("\n"); 
		query.append("                     VPP.OFC_CD   AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     A.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_AQ_CD     , DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_AQ_CD     , DECODE(A.RLANE_CD, 'WAFIE', A.SLS_AQ_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_AQ_CD))))      AS AREA_CD," ).append("\n"); 
		query.append("                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD)))) AS OFC_CD ," ).append("\n"); 
		query.append("                     VPP.POL_CD    ," ).append("\n"); 
		query.append("                     VPP.POD_CD    ," ).append("\n"); 
		query.append("--                     A.POL_YD_CD   ," ).append("\n"); 
		query.append("--                     A.POD_YD_CD   ," ).append("\n"); 
		query.append("                     VPP.POL_SEQ   ," ).append("\n"); 
		query.append("                     VPP.POD_SEQ   ," ).append("\n"); 
		query.append("                     VPP.POL_SKIP  ," ).append("\n"); 
		query.append("                     VPP.POD_SKIP  ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     0 AS FC_TEU   ," ).append("\n"); 
		query.append("                     0 AS FC_HC    ," ).append("\n"); 
		query.append("                     0 AS FC_45    ," ).append("\n"); 
		query.append("                     0 AS FC_53    ," ).append("\n"); 
		query.append("                     0 AS FC_RF    ," ).append("\n"); 
		query.append("                     0 AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU   ," ).append("\n"); 
		query.append("                     0 AS UG_HC    ," ).append("\n"); 
		query.append("                     0 AS UG_45    ," ).append("\n"); 
		query.append("                     0 AS UG_53    ," ).append("\n"); 
		query.append("                     0 AS UG_RF    ," ).append("\n"); 
		query.append("                     0 AS UG_WGT   ," ).append("\n"); 
		query.append("                     0 AS MR_TEU   ," ).append("\n"); 
		query.append("                     0 AS MR_HC    ," ).append("\n"); 
		query.append("                     0 AS MR_45    ," ).append("\n"); 
		query.append("                     0 AS MR_53    ," ).append("\n"); 
		query.append("                     0 AS MR_RF    ," ).append("\n"); 
		query.append("                     0 AS MR_WGT   ," ).append("\n"); 
		query.append("                     A.ASGN_TTL_QTY     AS AP_TEU," ).append("\n"); 
		query.append("                     A.ASGN_40FT_HC_QTY AS AP_HC ," ).append("\n"); 
		query.append("                     A.ASGN_45FT_HC_QTY AS AP_45 ," ).append("\n"); 
		query.append("                     A.ASGN_53FT_QTY    AS AP_53 ," ).append("\n"); 
		query.append("                     A.ASGN_RF_QTY      AS AP_RF ," ).append("\n"); 
		query.append("                     A.ASGN_TTL_WGT     AS AP_WGT," ).append("\n"); 
		query.append("                     0 AS BK_TEU," ).append("\n"); 
		query.append("                     0 AS BK_20 ," ).append("\n"); 
		query.append("                     0 AS BK_40 ," ).append("\n"); 
		query.append("                     0 AS BK_HC ," ).append("\n"); 
		query.append("                     0 AS BK_45 ," ).append("\n"); 
		query.append("                     0 AS BK_53 ," ).append("\n"); 
		query.append("                     0 AS BK_RF ," ).append("\n"); 
		query.append("                     0 AS BK_WGT," ).append("\n"); 
		query.append("                     0 AS BT_TEU," ).append("\n"); 
		query.append("                     0 AS BT_20 ," ).append("\n"); 
		query.append("                     0 AS BT_40 ," ).append("\n"); 
		query.append("                     0 AS BT_HC ," ).append("\n"); 
		query.append("                     0 AS BT_45 ," ).append("\n"); 
		query.append("                     0 AS BT_53 ," ).append("\n"); 
		query.append("                     0 AS BT_RF ," ).append("\n"); 
		query.append("                     0 AS BT_WGT," ).append("\n"); 
		query.append("                     0 AS CM_OP ,   " ).append("\n"); 
		query.append("                     0 AS CM_OC ,   " ).append("\n"); 
		query.append("                     0 AS CM_VL ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     VPP.PAST AS PAST," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     NULL                    AS CFM_FLG              ," ).append("\n"); 
		query.append("                     A.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     A.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     A.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SPC_ALOC_POL_POD A  ," ).append("\n"); 
		query.append("                     VVD_POL_POD      VPP" ).append("\n"); 
		query.append("               WHERE A.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND A.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND A.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND A.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND A.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND A.POL_YD_CD  = VPP.POL_CD" ).append("\n"); 
		query.append("                 AND A.POD_YD_CD  = VPP.POD_CD" ).append("\n"); 
		query.append("                 AND A.POL_YD_IND_SEQ = VPP.POL_YD_SEQ" ).append("\n"); 
		query.append("                 AND A.POD_YD_IND_SEQ = VPP.POD_YD_SEQ" ).append("\n"); 
		query.append("                 AND (   (     VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                           AND (   (     A.TS_FLG     = 'N'" ).append("\n"); 
		query.append("                                     AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                                 OR A.SLS_RGN_OFC_CD IS NULL )" ).append("\n"); 
		query.append("                         ) " ).append("\n"); 
		query.append("					  OR VPP.RLANE_CD = 'WAFIE'  " ).append("\n"); 
		query.append("                      OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA')" ).append("\n"); 
		query.append("                      OR" ).append("\n"); 
		query.append("                         (     A.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                      OR (     A.SLS_RHQ_CD = 'SINRS'" ).append("\n"); 
		query.append("                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                  #if (${user_ofc} != 'SELCTY' && ${user_ofc} != 'SELCDO')                                  " ).append("\n"); 
		query.append("                  AND DECODE(@[user_ofc],VPP.OFC_CD, A.SLS_RHQ_CD,DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD))))) = @[user_ofc]" ).append("\n"); 
		query.append("                  #end" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Booking" ).append("\n"); 
		query.append("              SELECT 7   AS DIV," ).append("\n"); 
		query.append("                     'B' AS FLG," ).append("\n"); 
		query.append("                     VVD," ).append("\n"); 
		query.append("                     REP_TRD_CD    ," ).append("\n"); 
		query.append("                     REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     TRD_CD        ," ).append("\n"); 
		query.append("                     SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     B.IOC_CD      ," ).append("\n"); 
		query.append("                     B.BASE_RHQ_CD ," ).append("\n"); 
		query.append("                     O.N2ND_PRNT_OFC_CD AS RHQ_CD," ).append("\n"); 
		query.append("                     DECODE(B.IOC_CD, 'T', DECODE(O.N2ND_PRNT_OFC_CD, 'SINRS', O.N3RD_PRNT_OFC_CD, B.BASE_RHQ_CD, O.N3RD_PRNT_OFC_CD, DECODE(B.RLANE_CD, 'WAFIE', O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)), O.N3RD_PRNT_OFC_CD) AS AREA_CD," ).append("\n"); 
		query.append("                     DECODE(B.IOC_CD, 'T', DECODE(O.N2ND_PRNT_OFC_CD, 'SINRS', O.N4TH_PRNT_OFC_CD, B.BASE_RHQ_CD, O.N4TH_PRNT_OFC_CD, DECODE(B.RLANE_CD, 'WAFIE', O.N4TH_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)), O.N4TH_PRNT_OFC_CD) AS OFC_CD ," ).append("\n"); 
		query.append("                     B.POL_CD      ," ).append("\n"); 
		query.append("                     B.POD_CD      ," ).append("\n"); 
		query.append("                     B.POL_SEQ     ," ).append("\n"); 
		query.append("                     B.POD_SEQ     ," ).append("\n"); 
		query.append("                     POL_SKIP      ," ).append("\n"); 
		query.append("                     POD_SKIP      ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_TTL_QTY))     AS FC_TEU," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_40FT_HC_QTY)) AS FC_HC ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_45FT_HC_QTY)) AS FC_45 ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_53FT_QTY))    AS FC_53 ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_RF_QTY))      AS FC_RF ," ).append("\n"); 
		query.append("                     DECODE(B.PAST, 'N', 0, (B.BKG_TTL_WGT))     AS FC_WGT," ).append("\n"); 
		query.append("                     0 AS UG_TEU," ).append("\n"); 
		query.append("                     0 AS UG_HC ," ).append("\n"); 
		query.append("                     0 AS UG_45 ," ).append("\n"); 
		query.append("                     0 AS UG_53 ," ).append("\n"); 
		query.append("                     0 AS UG_RF ," ).append("\n"); 
		query.append("                     0 AS UG_WGT," ).append("\n"); 
		query.append("                     0 AS MR_TEU," ).append("\n"); 
		query.append("                     0 AS MR_HC ," ).append("\n"); 
		query.append("                     0 AS MR_45 ," ).append("\n"); 
		query.append("                     0 AS MR_53 ," ).append("\n"); 
		query.append("                     0 AS MR_RF ," ).append("\n"); 
		query.append("                     0 AS MR_WGT," ).append("\n"); 
		query.append("                     0 AS AP_TEU," ).append("\n"); 
		query.append("                     0 AS AP_HC ," ).append("\n"); 
		query.append("                     0 AS AP_45 ," ).append("\n"); 
		query.append("                     0 AS AP_53 ," ).append("\n"); 
		query.append("                     0 AS AP_RF ," ).append("\n"); 
		query.append("                     0 AS AP_WGT," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_TTL_QTY))     AS BK_TEU," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_20FT_QTY))    AS BK_20 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_40FT_QTY))    AS BK_40 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_40FT_HC_QTY)) AS BK_HC ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_45FT_HC_QTY)) AS BK_45 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_53FT_QTY))    AS BK_53 ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_RF_QTY))      AS BK_RF ," ).append("\n"); 
		query.append("                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_TTL_WGT))     AS BK_WGT," ).append("\n"); 
		query.append("                     (B.BKG_TTL_QTY)     AS BT_TEU," ).append("\n"); 
		query.append("                     (B.BKG_20FT_QTY)    AS BT_20 ," ).append("\n"); 
		query.append("                     (B.BKG_40FT_QTY)    AS BT_40 ," ).append("\n"); 
		query.append("                     (B.BKG_40FT_HC_QTY) AS BT_HC ," ).append("\n"); 
		query.append("                     (B.BKG_45FT_HC_QTY) AS BT_45 ," ).append("\n"); 
		query.append("                     (B.BKG_53FT_QTY)    AS BT_53 ," ).append("\n"); 
		query.append("                     (B.BKG_RF_QTY)      AS BT_RF ," ).append("\n"); 
		query.append("                     (B.BKG_TTL_WGT)     AS BT_WGT," ).append("\n"); 
		query.append("                     B.CM_OP   ,   " ).append("\n"); 
		query.append("                     B.CM_OC   ,   " ).append("\n"); 
		query.append("                     B.CM_VL   ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     0 AS GT_TEU," ).append("\n"); 
		query.append("                     0 AS GT_HC ," ).append("\n"); 
		query.append("                     0 AS GT_45 ," ).append("\n"); 
		query.append("                     0 AS GT_53 ," ).append("\n"); 
		query.append("                     0 AS GT_RF ," ).append("\n"); 
		query.append("                     0 AS GT_WGT," ).append("\n"); 
		query.append("                     B.PAST," ).append("\n"); 
		query.append("                     B.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                     B.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SPC_OFC_LVL O," ).append("\n"); 
		query.append("                     BKG_DATA    B" ).append("\n"); 
		query.append("               WHERE (B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0)" ).append("\n"); 
		query.append("                 AND O.OFC_CD = B.SLS_OFC_CD" ).append("\n"); 
		query.append("                 AND B.COST_YR || B.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                 AND (    B.POL_CONTI        = B.OFC_CONTI" ).append("\n"); 
		query.append("                       OR O.N2ND_PRNT_OFC_CD = B.BASE_RHQ_CD" ).append("\n"); 
		query.append("                       OR O.N2ND_PRNT_OFC_CD = 'SINRS'" ).append("\n"); 
		query.append("					   OR B.RLANE_CD = 'WAFIE' )" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              --Space Gurantee" ).append("\n"); 
		query.append("              SELECT  8  AS DIV," ).append("\n"); 
		query.append("                     'G' AS FLG," ).append("\n"); 
		query.append("                     VPP.VVD," ).append("\n"); 
		query.append("                     VPP.REP_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("                     VPP.TRD_CD        ," ).append("\n"); 
		query.append("                     VPP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     VPP.IOC_CD        ," ).append("\n"); 
		query.append("                     VPP.OFC_CD          AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                     OV.N2ND_PRNT_OFC_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                     OV.N3RD_PRNT_OFC_CD AS AREA_CD    ," ).append("\n"); 
		query.append("                     OV.N4TH_PRNT_OFC_CD AS OFC_CD     ," ).append("\n"); 
		query.append("                     VPP.POL_CD    ," ).append("\n"); 
		query.append("                     VPP.POD_CD    ," ).append("\n"); 
		query.append("                     VPP.POL_SEQ   ," ).append("\n"); 
		query.append("                     VPP.POD_SEQ   ," ).append("\n"); 
		query.append("                     VPP.POL_SKIP  ," ).append("\n"); 
		query.append("                     VPP.POD_SKIP  ," ).append("\n"); 
		query.append("                     0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                     0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                     0 AS FC_TEU   ," ).append("\n"); 
		query.append("                     0 AS FC_HC    ," ).append("\n"); 
		query.append("                     0 AS FC_45    ," ).append("\n"); 
		query.append("                     0 AS FC_53    ," ).append("\n"); 
		query.append("                     0 AS FC_RF    ," ).append("\n"); 
		query.append("                     0 AS FC_WGT   ," ).append("\n"); 
		query.append("                     0 AS UG_TEU   ," ).append("\n"); 
		query.append("                     0 AS UG_HC    ," ).append("\n"); 
		query.append("                     0 AS UG_45    ," ).append("\n"); 
		query.append("                     0 AS UG_53    ," ).append("\n"); 
		query.append("                     0 AS UG_RF    ," ).append("\n"); 
		query.append("                     0 AS UG_WGT   ," ).append("\n"); 
		query.append("                     0 AS MR_TEU   ," ).append("\n"); 
		query.append("                     0 AS MR_HC    ," ).append("\n"); 
		query.append("                     0 AS MR_45    ," ).append("\n"); 
		query.append("                     0 AS MR_53    ," ).append("\n"); 
		query.append("                     0 AS MR_RF    ," ).append("\n"); 
		query.append("                     0 AS MR_WGT   ," ).append("\n"); 
		query.append("                     0 AS AP_TEU   ," ).append("\n"); 
		query.append("                     0 AS AP_HC    ," ).append("\n"); 
		query.append("                     0 AS AP_45    ," ).append("\n"); 
		query.append("                     0 AS AP_53    ," ).append("\n"); 
		query.append("                     0 AS AP_RF    ," ).append("\n"); 
		query.append("                     0 AS AP_WGT   ," ).append("\n"); 
		query.append("                     0 AS BK_TEU   ," ).append("\n"); 
		query.append("                     0 AS BK_20    ," ).append("\n"); 
		query.append("                     0 AS BK_40    ," ).append("\n"); 
		query.append("                     0 AS BK_HC    ," ).append("\n"); 
		query.append("                     0 AS BK_45    ," ).append("\n"); 
		query.append("                     0 AS BK_53    ," ).append("\n"); 
		query.append("                     0 AS BK_RF    ," ).append("\n"); 
		query.append("                     0 AS BK_WGT   ," ).append("\n"); 
		query.append("                     0 AS BT_TEU   ," ).append("\n"); 
		query.append("                     0 AS BT_20    ," ).append("\n"); 
		query.append("                     0 AS BT_40    ," ).append("\n"); 
		query.append("                     0 AS BT_HC    ," ).append("\n"); 
		query.append("                     0 AS BT_45    ," ).append("\n"); 
		query.append("                     0 AS BT_53    ," ).append("\n"); 
		query.append("                     0 AS BT_RF    ," ).append("\n"); 
		query.append("                     0 AS BT_WGT   ," ).append("\n"); 
		query.append("                     0 AS CM_OP	   ,   " ).append("\n"); 
		query.append("                     0 AS CM_OC    ,   " ).append("\n"); 
		query.append("                     0 AS CM_VL    ,   " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     G.BKG_AVAL_TTL_QTY     AS GT_TEU," ).append("\n"); 
		query.append("                     G.BKG_AVAL_40FT_HC_QTY AS GT_HC ," ).append("\n"); 
		query.append("                     G.BKG_AVAL_45FT_HC_QTY AS GT_45 ," ).append("\n"); 
		query.append("                     G.BKG_AVAL_53FT_QTY    AS GT_53 ," ).append("\n"); 
		query.append("                     G.BKG_AVAL_RF_QTY      AS GT_RF ," ).append("\n"); 
		query.append("                     G.BKG_AVAL_TTL_WGT     AS GT_WGT," ).append("\n"); 
		query.append("                     VPP.PAST               AS PAST  ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_ETD_DT        ," ).append("\n"); 
		query.append("                     VPP.LST_LODG_PORT_CD            ," ).append("\n"); 
		query.append("                     NULL AS CFM_FLG                 ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_RMK       ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POL_RMK   ," ).append("\n"); 
		query.append("                     NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                FROM SPC_OFC_LVL   OV ," ).append("\n"); 
		query.append("                     SPC_ALOC_GNTE G  ," ).append("\n"); 
		query.append("                     VVD_POL_POD   VPP" ).append("\n"); 
		query.append("               WHERE G.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                 AND G.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                 AND G.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                 AND G.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND G.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND SUBSTR(G.POL_YD_CD, 1, LENGTH(VPP.POL_CD)) = VPP.POL_CD" ).append("\n"); 
		query.append("                 AND SUBSTR(G.POD_YD_CD, 1, LENGTH(VPP.POD_CD)) = VPP.POD_CD" ).append("\n"); 
		query.append("                 AND OV.OFC_CD    = G.SLS_OFC_CD" ).append("\n"); 
		query.append("                 AND VPP.COST_YR || VPP.COST_WK BETWEEN OV.OFC_APLY_FM_YRWK AND OV.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                 AND (    VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                       OR VPP.OFC_CD    = OV.N2ND_PRNT_OFC_CD" ).append("\n"); 
		query.append("					   OR VPP.RLANE_CD = 'WAFIE' " ).append("\n"); 
		query.append("                       OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )" ).append("\n"); 
		query.append("               UNION ALL" ).append("\n"); 
		query.append("               --EQ Booking" ).append("\n"); 
		query.append("               SELECT 9    AS DIV," ).append("\n"); 
		query.append("                      'EB' AS FLG," ).append("\n"); 
		query.append("                      VVD," ).append("\n"); 
		query.append("                      REP_TRD_CD       ," ).append("\n"); 
		query.append("                      REP_SUB_TRD_CD   ," ).append("\n"); 
		query.append("                      TRD_CD           ," ).append("\n"); 
		query.append("                      SUB_TRD_CD       ," ).append("\n"); 
		query.append("                      IOC_CD           ," ).append("\n"); 
		query.append("                      BASE_RHQ_CD      ," ).append("\n"); 
		query.append("                      'NULL' AS RHQ_CD ," ).append("\n"); 
		query.append("                      NULL   AS AREA_CD," ).append("\n"); 
		query.append("                      'NULL' AS OFC_CD ," ).append("\n"); 
		query.append("                      POL_CD           ," ).append("\n"); 
		query.append("                      POD_CD           ," ).append("\n"); 
		query.append("                      POL_SEQ          ," ).append("\n"); 
		query.append("                      POD_SEQ          ," ).append("\n"); 
		query.append("                      POL_SKIP         ," ).append("\n"); 
		query.append("                      POD_SKIP         ," ).append("\n"); 
		query.append("                      0 AS BKG_QUOTA   ," ).append("\n"); 
		query.append("                      0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                      0 AS FC_TEU      ," ).append("\n"); 
		query.append("                      0 AS FC_HC       ," ).append("\n"); 
		query.append("                      0 AS FC_45       ," ).append("\n"); 
		query.append("                      0 AS FC_53       ," ).append("\n"); 
		query.append("                      0 AS FC_RF       ," ).append("\n"); 
		query.append("                      0 AS FC_WGT      ," ).append("\n"); 
		query.append("                      0 AS UG_TEU      ," ).append("\n"); 
		query.append("                      0 AS UG_HC       ," ).append("\n"); 
		query.append("                      0 AS UG_45       ," ).append("\n"); 
		query.append("                      0 AS UG_53       ," ).append("\n"); 
		query.append("                      0 AS UG_RF       ," ).append("\n"); 
		query.append("                      0 AS UG_WGT      ," ).append("\n"); 
		query.append("                      0 AS MR_TEU      ," ).append("\n"); 
		query.append("                      0 AS MR_HC       ," ).append("\n"); 
		query.append("                      0 AS MR_45       ," ).append("\n"); 
		query.append("                      0 AS MR_53       ," ).append("\n"); 
		query.append("                      0 AS MR_RF       ," ).append("\n"); 
		query.append("                      0 AS MR_WGT      ," ).append("\n"); 
		query.append("                      0 AS AP_TEU      ," ).append("\n"); 
		query.append("                      0 AS AP_HC       ," ).append("\n"); 
		query.append("                      0 AS AP_45       ," ).append("\n"); 
		query.append("                      0 AS AP_53       ," ).append("\n"); 
		query.append("                      0 AS AP_RF       ," ).append("\n"); 
		query.append("                      0 AS AP_WGT      ," ).append("\n"); 
		query.append("                      (BKG_TTL_QTY)     AS BK_TEU," ).append("\n"); 
		query.append("                      (BKG_20FT_QTY)    AS BK_20 ," ).append("\n"); 
		query.append("                      (BKG_40FT_QTY)    AS BK_40 ," ).append("\n"); 
		query.append("                      (BKG_40FT_HC_QTY) AS BK_HC ," ).append("\n"); 
		query.append("                      (BKG_45FT_HC_QTY) AS BK_45 ," ).append("\n"); 
		query.append("                      (BKG_53FT_QTY)    AS BK_53 ," ).append("\n"); 
		query.append("                      (BKG_RF_QTY)      AS BK_RF ," ).append("\n"); 
		query.append("                      0                 AS BK_WGT," ).append("\n"); 
		query.append("                      (BKG_TTL_QTY)     AS BT_TEU," ).append("\n"); 
		query.append("                      (BKG_20FT_QTY)    AS BT_20 ," ).append("\n"); 
		query.append("                      (BKG_40FT_QTY)    AS BT_40 ," ).append("\n"); 
		query.append("                      (BKG_40FT_HC_QTY) AS BT_HC ," ).append("\n"); 
		query.append("                      (BKG_45FT_HC_QTY) AS BT_45 ," ).append("\n"); 
		query.append("                      (BKG_53FT_QTY)    AS BT_53 ," ).append("\n"); 
		query.append("                      (BKG_RF_QTY)      AS BT_RF ," ).append("\n"); 
		query.append("                      0                 AS BT_WGT," ).append("\n"); 
		query.append("                      CM_OP,   " ).append("\n"); 
		query.append("                      CM_OC,   " ).append("\n"); 
		query.append("                      CM_VL,   " ).append("\n"); 
		query.append("                      " ).append("\n"); 
		query.append("                      0 AS GT_TEU," ).append("\n"); 
		query.append("                      0 AS GT_HC ," ).append("\n"); 
		query.append("                      0 AS GT_45 ," ).append("\n"); 
		query.append("                      0 AS GT_53 ," ).append("\n"); 
		query.append("                      0 AS GT_RF ," ).append("\n"); 
		query.append("                      0 AS GT_WGT," ).append("\n"); 
		query.append("                      PAST       ," ).append("\n"); 
		query.append("                      LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                      LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                      NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                 FROM (" ).append("\n"); 
		query.append("                         SELECT VVD," ).append("\n"); 
		query.append("                                REP_TRD_CD          ," ).append("\n"); 
		query.append("                                REP_SUB_TRD_CD      ," ).append("\n"); 
		query.append("                                TRD_CD              ," ).append("\n"); 
		query.append("                                SUB_TRD_CD          ," ).append("\n"); 
		query.append("                                IOC_CD              ," ).append("\n"); 
		query.append("                                BASE_RHQ_CD         ," ).append("\n"); 
		query.append("                                POL_CD              ," ).append("\n"); 
		query.append("                                POD_CD              ," ).append("\n"); 
		query.append("                                POL_SEQ             ," ).append("\n"); 
		query.append("                                POD_SEQ             ," ).append("\n"); 
		query.append("                                POL_SKIP            ," ).append("\n"); 
		query.append("                                POD_SKIP            ," ).append("\n"); 
		query.append("                                PAST                ," ).append("\n"); 
		query.append("                                LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(CM_VAL,  1, 10), 0)) AS CM_OP	     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(CM_VAL, 11, 10), 0)) AS CM_OC	     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                TO_NUMBER(NVL(SUBSTR(CM_VAL, 21, 10), 0)) AS CM_VL" ).append("\n"); 
		query.append("                           FROM (" ).append("\n"); 
		query.append("                                   SELECT VPP.VVD," ).append("\n"); 
		query.append("                                          VPP.REP_TRD_CD           ," ).append("\n"); 
		query.append("                                          VPP.REP_SUB_TRD_CD       ," ).append("\n"); 
		query.append("                                          VPP.TRD_CD               ," ).append("\n"); 
		query.append("                                          VPP.SUB_TRD_CD           ," ).append("\n"); 
		query.append("                                          'E'        AS IOC_CD     ," ).append("\n"); 
		query.append("                                          VPP.OFC_CD AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                                          VPP.POL_CD               ," ).append("\n"); 
		query.append("                                          VPP.POD_CD               ," ).append("\n"); 
		query.append("                                          VPP.POL_SEQ              ," ).append("\n"); 
		query.append("                                          VPP.POD_SEQ              ," ).append("\n"); 
		query.append("                                          VPP.POL_SKIP             ," ).append("\n"); 
		query.append("                                          VPP.POD_SKIP             ," ).append("\n"); 
		query.append("                                          VPP.PAST                 ," ).append("\n"); 
		query.append("                                          VPP.LST_LODG_PORT_ETD_DT ," ).append("\n"); 
		query.append("                                          VPP.LST_LODG_PORT_CD     ," ).append("\n"); 
		query.append("                                          (" ).append("\n"); 
		query.append("                                             SELECT" ).append("\n"); 
		query.append("                                                       TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2)*Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                               FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                              WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                                                AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                          ) AS VAL," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									      SPC_GET_OB_MVMT_FNC(B.BKG_NO, VPP.POL_PAST) AS CM_VAL" ).append("\n"); 
		query.append("                                     FROM BKG_BOOKING B  ," ).append("\n"); 
		query.append("                                          BKG_VVD     BV ," ).append("\n"); 
		query.append("                                          VVD_POL_POD VPP" ).append("\n"); 
		query.append("                                    WHERE B.BKG_STS_CD   IN ('W', 'F')" ).append("\n"); 
		query.append("                                      AND B.BKG_CGO_TP_CD = 'P'" ).append("\n"); 
		query.append("                                      AND B.BKG_NO        = BV.BKG_NO" ).append("\n"); 
		query.append("                                      AND BV.VSL_CD       = VPP.VSL_CD" ).append("\n"); 
		query.append("                                      AND BV.SKD_VOY_NO   = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND BV.SKD_DIR_CD   = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1))" ).append("\n"); 
		query.append("                                      AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1)) " ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                      )" ).append("\n"); 
		query.append("               UNION ALL" ).append("\n"); 
		query.append("               --Space Usage" ).append("\n"); 
		query.append("               SELECT 11              AS DIV," ).append("\n"); 
		query.append("                      'U'||SU.CFM_FLG AS FLG," ).append("\n"); 
		query.append("                      VPP.VVD," ).append("\n"); 
		query.append("                      VPP.REP_TRD_CD        ," ).append("\n"); 
		query.append("                      VPP.REP_SUB_TRD_CD    ," ).append("\n"); 
		query.append("                      VPP.TRD_CD            ," ).append("\n"); 
		query.append("                      VPP.SUB_TRD_CD        ," ).append("\n"); 
		query.append("                      DECODE(SU.TS_FLG, 'Y', 'T', SU.IOC_CD) AS IOC_CD," ).append("\n"); 
		query.append("                      VPP.OFC_CD    AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                      SU.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_AQ_CD     , DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_AQ_CD, SU.SLS_RHQ_CD)), SU.SLS_AQ_CD)      AS AREA_CD," ).append("\n"); 
		query.append("                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_RGN_OFC_CD, DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_RGN_OFC_CD, SU.SLS_RHQ_CD)), SU.SLS_RGN_OFC_CD) AS OFC_CD ," ).append("\n"); 
		query.append("                      VPP.POL_CD    ," ).append("\n"); 
		query.append("                      VPP.POD_CD    ," ).append("\n"); 
		query.append("                      VPP.POL_SEQ   ," ).append("\n"); 
		query.append("                      VPP.POD_SEQ   ," ).append("\n"); 
		query.append("                      VPP.POL_SKIP  ," ).append("\n"); 
		query.append("                      VPP.POD_SKIP  ," ).append("\n"); 
		query.append("                      0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                      0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                      0 AS FC_TEU   ," ).append("\n"); 
		query.append("                      0 AS FC_HC    ," ).append("\n"); 
		query.append("                      0 AS FC_45    ," ).append("\n"); 
		query.append("                      0 AS FC_53    ," ).append("\n"); 
		query.append("                      0 AS FC_RF    ," ).append("\n"); 
		query.append("                      0 AS FC_WGT   ," ).append("\n"); 
		query.append("                      SU.USD_BKG_TTL_QTY     AS UG_TEU," ).append("\n"); 
		query.append("                      SU.USD_BKG_40FT_HC_QTY AS UG_HC ," ).append("\n"); 
		query.append("                      SU.USD_BKG_45FT_HC_QTY AS UG_45 ," ).append("\n"); 
		query.append("                      SU.USD_BKG_53FT_QTY    AS UG_53 ," ).append("\n"); 
		query.append("                      SU.USD_BKG_RF_QTY      AS UG_RF ," ).append("\n"); 
		query.append("                      SU.USD_BKG_TTL_WGT     AS UG_WGT," ).append("\n"); 
		query.append("                      0 AS MR_TEU," ).append("\n"); 
		query.append("                      0 AS MR_HC ," ).append("\n"); 
		query.append("                      0 AS MR_45 ," ).append("\n"); 
		query.append("                      0 AS MR_53 ," ).append("\n"); 
		query.append("                      0 AS MR_RF ," ).append("\n"); 
		query.append("                      0 AS MR_WGT," ).append("\n"); 
		query.append("                      0 AS AP_TEU," ).append("\n"); 
		query.append("                      0 AS AP_HC ," ).append("\n"); 
		query.append("                      0 AS AP_45 ," ).append("\n"); 
		query.append("                      0 AS AP_53 ," ).append("\n"); 
		query.append("                      0 AS AP_RF ," ).append("\n"); 
		query.append("                      0 AS AP_WGT," ).append("\n"); 
		query.append("                      0 AS BK_TEU," ).append("\n"); 
		query.append("                      0 AS BK_20 ," ).append("\n"); 
		query.append("                      0 AS BK_40 ," ).append("\n"); 
		query.append("                      0 AS BK_HC ," ).append("\n"); 
		query.append("                      0 AS BK_45 ," ).append("\n"); 
		query.append("                      0 AS BK_53 ," ).append("\n"); 
		query.append("                      0 AS BK_RF ," ).append("\n"); 
		query.append("                      0 AS BK_WGT," ).append("\n"); 
		query.append("                      0 AS BT_TEU," ).append("\n"); 
		query.append("                      0 AS BT_20 ," ).append("\n"); 
		query.append("                      0 AS BT_40 ," ).append("\n"); 
		query.append("                      0 AS BT_HC ," ).append("\n"); 
		query.append("                      0 AS BT_45 ," ).append("\n"); 
		query.append("                      0 AS BT_53 ," ).append("\n"); 
		query.append("                      0 AS BT_RF ," ).append("\n"); 
		query.append("                      0 AS BT_WGT," ).append("\n"); 
		query.append("                      0 AS CM_OP ,   " ).append("\n"); 
		query.append("                      0 AS CM_OC ,   " ).append("\n"); 
		query.append("                      0 AS CM_VL ,   " ).append("\n"); 
		query.append("                      " ).append("\n"); 
		query.append("                      0 AS GT_TEU," ).append("\n"); 
		query.append("                      0 AS GT_HC ," ).append("\n"); 
		query.append("                      0 AS GT_45 ," ).append("\n"); 
		query.append("                      0 AS GT_53 ," ).append("\n"); 
		query.append("                      0 AS GT_RF ," ).append("\n"); 
		query.append("                      0 AS GT_WGT," ).append("\n"); 
		query.append("                      VPP.PAST AS PAST," ).append("\n"); 
		query.append("                      VPP.LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                      VPP.LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("                      NULL AS CFM_FLG              ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                 FROM SPC_SPC_USG SU ," ).append("\n"); 
		query.append("                      VVD_POL_POD VPP" ).append("\n"); 
		query.append("                WHERE SU.USD_BKG_TTL_QTY + SU.USD_BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("                  AND SU.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                  AND SU.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                  AND SU.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                  AND SU.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND SU.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(SU.POL_YD_CD, 1, 5), SUBSTR(SU.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)" ).append("\n"); 
		query.append("                  AND DECODE(SUBSTR(SU.POD_YD_CD, 6, 2), '00', SUBSTR(SU.POD_YD_CD, 1, 5), SUBSTR(SU.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(SU.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)" ).append("\n"); 
		query.append("                  AND (    VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                        OR SU.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("					    OR VPP.RLANE_CD = 'WAFIE' " ).append("\n"); 
		query.append("                        OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )" ).append("\n"); 
		query.append("               UNION ALL" ).append("\n"); 
		query.append("               --Space Usage" ).append("\n"); 
		query.append("               SELECT 12            AS DIV        ," ).append("\n"); 
		query.append("                      'V'           AS FLG        ," ).append("\n"); 
		query.append("                      VPP.VVD," ).append("\n"); 
		query.append("                      VPP.REP_TRD_CD              ," ).append("\n"); 
		query.append("                      VPP.REP_SUB_TRD_CD          ," ).append("\n"); 
		query.append("                      NULL          AS TRD_CD     ," ).append("\n"); 
		query.append("                      NULL          AS SUB_TRD_CD ," ).append("\n"); 
		query.append("                      DECODE(SU.TS_FLG, 'Y', 'T', SU.IOC_CD) AS IOC_CD," ).append("\n"); 
		query.append("                      VPP.OFC_CD    AS BASE_RHQ_CD," ).append("\n"); 
		query.append("                      SU.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_AQ_CD     , DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_AQ_CD, SU.SLS_RHQ_CD)), SU.SLS_AQ_CD)      AS AREA_CD," ).append("\n"); 
		query.append("                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_RGN_OFC_CD, DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_RGN_OFC_CD, SU.SLS_RHQ_CD)), SU.SLS_RGN_OFC_CD) AS OFC_CD ," ).append("\n"); 
		query.append("                      VPP.PORT_CD   AS POL_CD     ," ).append("\n"); 
		query.append("                      '0000000'     AS POD_CD     ," ).append("\n"); 
		query.append("                      VPP.PORT_SEQ  AS POL_SEQ    ," ).append("\n"); 
		query.append("                      0             AS POD_SEQ    ," ).append("\n"); 
		query.append("                      VPP.SKIPPED   AS POL_SKIP   ," ).append("\n"); 
		query.append("                      NULL          AS POD_SKIP   ," ).append("\n"); 
		query.append("                      0 AS BKG_QUOTA," ).append("\n"); 
		query.append("                      0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("                      0 AS FC_TEU   ," ).append("\n"); 
		query.append("                      0 AS FC_HC    ," ).append("\n"); 
		query.append("                      0 AS FC_45    ," ).append("\n"); 
		query.append("                      0 AS FC_53    ," ).append("\n"); 
		query.append("                      0 AS FC_RF    ," ).append("\n"); 
		query.append("                      0 AS FC_WGT   ," ).append("\n"); 
		query.append("                      SU.USD_BKG_TTL_QTY     AS UG_TEU," ).append("\n"); 
		query.append("                      SU.USD_BKG_40FT_HC_QTY AS UG_HC ," ).append("\n"); 
		query.append("                      SU.USD_BKG_45FT_HC_QTY AS UG_45 ," ).append("\n"); 
		query.append("                      SU.USD_BKG_53FT_QTY    AS UG_53 ," ).append("\n"); 
		query.append("                      SU.USD_BKG_RF_QTY      AS UG_RF ," ).append("\n"); 
		query.append("                      SU.USD_BKG_TTL_WGT     AS UG_WGT," ).append("\n"); 
		query.append("                      0 AS MR_TEU," ).append("\n"); 
		query.append("                      0 AS MR_HC ," ).append("\n"); 
		query.append("                      0 AS MR_45 ," ).append("\n"); 
		query.append("                      0 AS MR_53 ," ).append("\n"); 
		query.append("                      0 AS MR_RF ," ).append("\n"); 
		query.append("                      0 AS MR_WGT," ).append("\n"); 
		query.append("                      0 AS AP_TEU," ).append("\n"); 
		query.append("                      0 AS AP_HC ," ).append("\n"); 
		query.append("                      0 AS AP_45 ," ).append("\n"); 
		query.append("                      0 AS AP_53 ," ).append("\n"); 
		query.append("                      0 AS AP_RF ," ).append("\n"); 
		query.append("                      0 AS AP_WGT," ).append("\n"); 
		query.append("                      0 AS BK_TEU," ).append("\n"); 
		query.append("                      0 AS BK_20 ," ).append("\n"); 
		query.append("                      0 AS BK_40 ," ).append("\n"); 
		query.append("                      0 AS BK_HC ," ).append("\n"); 
		query.append("                      0 AS BK_45 ," ).append("\n"); 
		query.append("                      0 AS BK_53 ," ).append("\n"); 
		query.append("                      0 AS BK_RF ," ).append("\n"); 
		query.append("                      0 AS BK_WGT," ).append("\n"); 
		query.append("                      0 AS BT_TEU," ).append("\n"); 
		query.append("                      0 AS BT_20 ," ).append("\n"); 
		query.append("                      0 AS BT_40 ," ).append("\n"); 
		query.append("                      0 AS BT_HC ," ).append("\n"); 
		query.append("                      0 AS BT_45 ," ).append("\n"); 
		query.append("                      0 AS BT_53 ," ).append("\n"); 
		query.append("                      0 AS BT_RF ," ).append("\n"); 
		query.append("                      0 AS BT_WGT," ).append("\n"); 
		query.append("                      0 AS CM_OP ,   " ).append("\n"); 
		query.append("                      0 AS CM_OC ,   " ).append("\n"); 
		query.append("                      0 AS CM_VL ,   " ).append("\n"); 
		query.append("                      " ).append("\n"); 
		query.append("                      0 AS GT_TEU," ).append("\n"); 
		query.append("                      0 AS GT_HC ," ).append("\n"); 
		query.append("                      0 AS GT_45 ," ).append("\n"); 
		query.append("                      0 AS GT_53 ," ).append("\n"); 
		query.append("                      0 AS GT_RF ," ).append("\n"); 
		query.append("                      0 AS GT_WGT," ).append("\n"); 
		query.append("                      VPP.PORT_PAST AS PAST        ," ).append("\n"); 
		query.append("                      VPP.LST_LODG_PORT_ETD_DT     ," ).append("\n"); 
		query.append("                      VPP.LST_LODG_PORT_CD         ," ).append("\n"); 
		query.append("                      SU.CFM_FLG                   ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("                      NULL AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                 FROM SPC_SPC_USG  SU ," ).append("\n"); 
		query.append("                      VSL_PORT_SKD VPP" ).append("\n"); 
		query.append("                WHERE SU.USD_BKG_TTL_QTY + SU.USD_BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("                  AND SU.RLANE_CD   = VPP.RLANE_CD" ).append("\n"); 
		query.append("                  AND SU.DIR_CD     = VPP.DIR_CD" ).append("\n"); 
		query.append("                  AND SU.VSL_CD     = VPP.VSL_CD" ).append("\n"); 
		query.append("                  AND SU.SKD_VOY_NO = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND SU.SKD_DIR_CD = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(SU.POL_YD_CD, 1, 5), SUBSTR(SU.POL_YD_CD, 1, LENGTH(VPP.PORT_CD))) = DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.PORT_CD, 1, 5), VPP.PORT_CD)" ).append("\n"); 
		query.append("                  AND SU.POD_YD_CD  = '0000000'" ).append("\n"); 
		query.append("                  AND (    VPP.CONTI_CD  = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                        OR SU.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("						OR VPP.RLANE_CD = 'WAFIE' " ).append("\n"); 
		query.append("                        OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("  GROUP BY " ).append("\n"); 
		query.append("           VVD," ).append("\n"); 
		query.append("           IOC_CD              ," ).append("\n"); 
		query.append("           BASE_RHQ_CD         ," ).append("\n"); 
		query.append("           RHQ_CD              ," ).append("\n"); 
		query.append("           AREA_CD             ," ).append("\n"); 
		query.append("           OFC_CD              ," ).append("\n"); 
		query.append("           POL_CD              ," ).append("\n"); 
		query.append("           POL_SEQ             ," ).append("\n"); 
		query.append("           POD_CD              ," ).append("\n"); 
		query.append("           POD_SEQ             ," ).append("\n"); 
		query.append("           POL_SKIP            ," ).append("\n"); 
		query.append("           POD_SKIP            ," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD" ).append("\n"); 
		query.append("    HAVING SUBSTR(IOC_CD, 2, 1)        = 'T'" ).append("\n"); 
		query.append("        OR SUM(DECODE(FLG, 'A', 1, 0)) = 0" ).append("\n"); 
		query.append("        OR SUM(DECODE(FLG, 'A', 0, 1)) > 0" ).append("\n"); 
		query.append("        OR SUM(AP_TEU)                 > 0" ).append("\n"); 
		query.append("        OR SUM(AP_WGT)                 > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", HRCH_DATA AS (" ).append("\n"); 
		query.append("    SELECT VVD," ).append("\n"); 
		query.append("           IOC_CD     ," ).append("\n"); 
		query.append("           BASE_RHQ_CD," ).append("\n"); 
		query.append("           RHQ_CD     ," ).append("\n"); 
		query.append("           AREA_CD    ," ).append("\n"); 
		query.append("           CASE" ).append("\n"); 
		query.append("           		WHEN RHQ_CD IS NOT NULL AND AREA_CD IS NULL AND OFC_CD IS NULL AND POL_CD IS NULL AND POD_CD IS NULL THEN 'Y'" ).append("\n"); 
		query.append("            	ELSE 'N'" ).append("\n"); 
		query.append("           END AS FLG ," ).append("\n"); 
		query.append("           OFC_CD     ," ).append("\n"); 
		query.append("           POL_CD     ," ).append("\n"); 
		query.append("           POD_CD     ," ).append("\n"); 
		query.append("           POL_SEQ    ," ).append("\n"); 
		query.append("           POD_SEQ    ," ).append("\n"); 
		query.append("           MAX(POL_SKIP)          AS POL_SKIP      ," ).append("\n"); 
		query.append("           MAX(POD_SKIP)          AS POD_SKIP      ," ).append("\n"); 
		query.append("           MAX(REP_TRD_CD)        AS REP_TRD_CD    ," ).append("\n"); 
		query.append("           MAX(REP_SUB_TRD_CD)    AS REP_SUB_TRD_CD," ).append("\n"); 
		query.append("           MAX(TRD_CD)            AS TRD_CD        ," ).append("\n"); 
		query.append("           MAX(SUB_TRD_CD)        AS SUB_TRD_CD    ," ).append("\n"); 
		query.append("           SUM(BKG_QUOTA)         AS BKG_QUOTA     ," ).append("\n"); 
		query.append("           SUM(BKG_QTA_CMB)/DECODE(SUM(BKG_QUOTA), 0, 1, SUM(BKG_QUOTA)) AS BKG_QTA_CMB," ).append("\n"); 
		query.append("           SUM(FC_TEU)            AS FC_TEU        ," ).append("\n"); 
		query.append("           SUM(FC_HC)             AS FC_HC         ," ).append("\n"); 
		query.append("           SUM(FC_45)             AS FC_45         ," ).append("\n"); 
		query.append("           SUM(FC_53)             AS FC_53         ," ).append("\n"); 
		query.append("           SUM(FC_RF)             AS FC_RF         ," ).append("\n"); 
		query.append("           SUM(FC_WGT)            AS FC_WGT        ," ).append("\n"); 
		query.append("           SUM(UG_TEU)            AS UG_TEU        ," ).append("\n"); 
		query.append("           SUM(UG_HC)             AS UG_HC         ," ).append("\n"); 
		query.append("           SUM(UG_45)             AS UG_45         ," ).append("\n"); 
		query.append("           SUM(UG_53)             AS UG_53         ," ).append("\n"); 
		query.append("           SUM(UG_RF)             AS UG_RF         ," ).append("\n"); 
		query.append("           SUM(UG_WGT)            AS UG_WGT        ," ).append("\n"); 
		query.append("           SUM(MR_TEU)            AS MR_TEU        ," ).append("\n"); 
		query.append("           SUM(MR_HC)             AS MR_HC         ," ).append("\n"); 
		query.append("           SUM(MR_45)             AS MR_45         ," ).append("\n"); 
		query.append("           SUM(MR_53)             AS MR_53         ," ).append("\n"); 
		query.append("           SUM(MR_RF)             AS MR_RF         ," ).append("\n"); 
		query.append("           SUM(MR_WGT)            AS MR_WGT        ," ).append("\n"); 
		query.append("           SUM(AP_TEU)            AS AP_TEU        ," ).append("\n"); 
		query.append("           SUM(AP_HC)             AS AP_HC         ," ).append("\n"); 
		query.append("           SUM(AP_45)             AS AP_45         ," ).append("\n"); 
		query.append("           SUM(AP_53)             AS AP_53         ," ).append("\n"); 
		query.append("           SUM(AP_RF)             AS AP_RF         ," ).append("\n"); 
		query.append("           SUM(AP_WGT)            AS AP_WGT        ," ).append("\n"); 
		query.append("           SUM(BK_TEU)            AS BK_TEU        ," ).append("\n"); 
		query.append("           SUM(BK_20)             AS BK_20         ," ).append("\n"); 
		query.append("           SUM(BK_40)             AS BK_40         ," ).append("\n"); 
		query.append("           SUM(BK_HC)             AS BK_HC         ," ).append("\n"); 
		query.append("           SUM(BK_45)             AS BK_45         ," ).append("\n"); 
		query.append("           SUM(BK_53)             AS BK_53         ," ).append("\n"); 
		query.append("           SUM(BK_RF)             AS BK_RF         ," ).append("\n"); 
		query.append("           SUM(BK_WGT)            AS BK_WGT        ," ).append("\n"); 
		query.append("           SUM(BT_TEU)            AS BT_TEU        ," ).append("\n"); 
		query.append("           SUM(BT_20)             AS BT_20         ," ).append("\n"); 
		query.append("           SUM(BT_40)             AS BT_40         ," ).append("\n"); 
		query.append("           SUM(BT_HC)             AS BT_HC         ," ).append("\n"); 
		query.append("           SUM(BT_45)             AS BT_45         ," ).append("\n"); 
		query.append("           SUM(BT_53)             AS BT_53         ," ).append("\n"); 
		query.append("           SUM(BT_RF)             AS BT_RF         ," ).append("\n"); 
		query.append("           SUM(BT_WGT)            AS BT_WGT        ," ).append("\n"); 
		query.append("           SUM(CM_OP)         	  AS CM_OP         ,   " ).append("\n"); 
		query.append("           SUM(CM_OC)         	  AS CM_OC         ,   " ).append("\n"); 
		query.append("           SUM(CM_VL)         	  AS CM_VL         ,   " ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           SUM(GT_TEU)            AS GT_TEU        ," ).append("\n"); 
		query.append("           SUM(GT_HC)             AS GT_HC         ," ).append("\n"); 
		query.append("           SUM(GT_45)             AS GT_45         ," ).append("\n"); 
		query.append("           SUM(GT_53)             AS GT_53         ," ).append("\n"); 
		query.append("           SUM(GT_RF)             AS GT_RF         ," ).append("\n"); 
		query.append("           SUM(GT_WGT)            AS GT_WGT        ," ).append("\n"); 
		query.append("           SUM(AP_MD)             AS AP_MD         ," ).append("\n"); 
		query.append("           NVL(MAX(CFM_FLG), 'N') AS CFM_FLG       ," ).append("\n"); 
		query.append("           COUNT(DISTINCT DECODE(POD_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD||POD_CD))) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD))), 0) AS CHILD_CNT," ).append("\n"); 
		query.append("           COUNT(DISTINCT DECODE(POD_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD||POD_CD))) AS LEAF_CNT," ).append("\n"); 
		query.append("           DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD))), 0) AS POD_CNT," ).append("\n"); 
		query.append("           DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1) AS LVL," ).append("\n"); 
		query.append("           MIN(PAST) AS PAST," ).append("\n"); 
		query.append("           LST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("           LST_LODG_PORT_CD    ," ).append("\n"); 
		query.append("           SUM(NQTA_MD) AS NQTA_MD," ).append("\n"); 
		query.append("           SUM(NCFM_MD) AS NCFM_MD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT CTRL_LVL" ).append("\n"); 
		query.append("                FROM REP_VVDS V" ).append("\n"); 
		query.append("               WHERE V.VVD = A.VVD" ).append("\n"); 
		query.append("           ) AS CTRL_LVL," ).append("\n"); 
		query.append("           MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("           MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("           MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("      FROM ALL_DATA A" ).append("\n"); 
		query.append("-- OFC_CD가 SHARC,SINRS,SZPDC 인경우  2009/01월부터 적용" ).append("\n"); 
		query.append("  GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                           (VVD, IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ, LST_LODG_PORT_ETD_DT, LST_LODG_PORT_CD)," ).append("\n"); 
		query.append("                           (VVD, IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, POL_CD, POL_SEQ)," ).append("\n"); 
		query.append("                           (VVD, IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD)," ).append("\n"); 
		query.append("                           (VVD, IOC_CD, BASE_RHQ_CD, RHQ_CD)," ).append("\n"); 
		query.append("                           (VVD, IOC_CD, BASE_RHQ_CD)" ).append("\n"); 
		query.append("                         )" ).append("\n"); 
		query.append("order by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("-- 주차별 CMB " ).append("\n"); 
		query.append(", WK_CMB AS ( -- 확인 완료" ).append("\n"); 
		query.append("    SELECT T.RNUM       ," ).append("\n"); 
		query.append("           BAR.COST_YRWK," ).append("\n"); 
		query.append("           P.VVD," ).append("\n"); 
		query.append("           BAR.SLS_OFC_CD," ).append("\n"); 
		query.append("           BAR.TS_FLG," ).append("\n"); 
		query.append("           BAR.IOC_CD," ).append("\n"); 
		query.append("           BAR.POL_YD_CD," ).append("\n"); 
		query.append("           BAR.POD_YD_CD," ).append("\n"); 
		query.append("           SUM(BAR.BKG_REV) AS BKG_REV, NVL(SUM(BAR.DMDT_COM_AMT),0) AS DMDT_COM_AMT," ).append("\n"); 
		query.append("           SUM(BAR.ESTM_CM_COST_AMT) AS ESTM_CM_COST_AMT," ).append("\n"); 
		query.append("           SUM(BAR.BKG_TTL_QTY) AS BKG_TTL_QTY," ).append("\n"); 
		query.append("           SUM(BAR.USD_BKG_TTL_WGT) AS BKG_TTL_WGT" ).append("\n"); 
		query.append("      FROM SPC_BKG_AVG_REV BAR," ).append("\n"); 
		query.append("           REP_VVDS        P  ," ).append("\n"); 
		query.append("           (SELECT DISTINCT DENSE_RANK() OVER (ORDER BY COST_YRWK) AS RNUM," ).append("\n"); 
		query.append("                   COST_YRWK" ).append("\n"); 
		query.append("              FROM SPC_BKG_AVG_REV" ).append("\n"); 
		query.append("           ) T" ).append("\n"); 
		query.append("     WHERE BAR.COST_YRWK   = T.COST_YRWK" ).append("\n"); 
		query.append("       AND BAR.OFC_KND_CD IN ('1', '2', '3')" ).append("\n"); 
		query.append("       AND BAR.RLANE_CD    = P.RLANE_CD" ).append("\n"); 
		query.append("       AND BAR.DIR_CD      = P.DIR_CD" ).append("\n"); 
		query.append("#if (${lane} != 'WAFIE')" ).append("\n"); 
		query.append("       AND BAR.TRD_CD NOT IN ('IES', 'IMS')" ).append("\n"); 
		query.append("#end " ).append("\n"); 
		query.append("     GROUP BY  T.RNUM        ," ).append("\n"); 
		query.append("               BAR.COST_YRWK," ).append("\n"); 
		query.append("               P.VVD," ).append("\n"); 
		query.append("               BAR.SLS_OFC_CD," ).append("\n"); 
		query.append("               BAR.TS_FLG," ).append("\n"); 
		query.append("               BAR.IOC_CD," ).append("\n"); 
		query.append("               BAR.POL_YD_CD," ).append("\n"); 
		query.append("               BAR.POD_YD_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("  SELECT VVD," ).append("\n"); 
		query.append("         DECODE(IOC_CD, 'O', 'OCN', 'I', 'IPC', 'T', 'T/S', 'E', 'EQ', 'OT', 'T-OCN', 'IT', 'T-IPC', 'TT', 'T-T/S') AS IOC_CD," ).append("\n"); 
		query.append("#if (${lane} == 'WAFIE')" ).append("\n"); 
		query.append("         CASE WHEN DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, OFC_CD) = '+' AND" ).append("\n"); 
		query.append("                   POL_CD = '+' AND" ).append("\n"); 
		query.append("                   POD_CD = '+' THEN" ).append("\n"); 
		query.append("                   'TTL'" ).append("\n"); 
		query.append("              ELSE" ).append("\n"); 
		query.append("                   NVL(AREA_CD, DECODE(RHQ_CD, 'NULL', '', RHQ_CD)" ).append("\n"); 
		query.append("              END AS AREA_CD," ).append("\n"); 
		query.append("         " ).append("\n"); 
		query.append("         DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, OFC_CD) AS OFC_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("         CASE WHEN DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, DECODE(RHQ_CD, 'SINRS', OFC_CD, DECODE(IOC_CD, 'T', '', 'TT', '', OFC_CD))) = '+' AND" ).append("\n"); 
		query.append("                   POL_CD = '+' AND" ).append("\n"); 
		query.append("                   POD_CD = '+' THEN" ).append("\n"); 
		query.append("                   'TTL'" ).append("\n"); 
		query.append("              ELSE" ).append("\n"); 
		query.append("                   DECODE(SUBSTR(IOC_CD, 1, 1), 'T', RHQ_CD, NVL(AREA_CD, DECODE(RHQ_CD, 'NULL', '', RHQ_CD)))" ).append("\n"); 
		query.append("              END AS AREA_CD," ).append("\n"); 
		query.append("         " ).append("\n"); 
		query.append("         DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, DECODE(RHQ_CD, 'SINRS', OFC_CD, DECODE(IOC_CD, 'T', '', 'TT', '', OFC_CD))) AS OFC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("	     POL_CD  ," ).append("\n"); 
		query.append("         POD_CD  ," ).append("\n"); 
		query.append("         BKG_QUOTA             AS QTA_LOAD," ).append("\n"); 
		query.append("         ROUND(BKG_QTA_CMB, 0) AS QTA_CMB," ).append("\n"); 
		query.append("         NVL(CMB, 0)           AS CMB_TEU," ).append("\n"); 
		query.append("         NVL(CMB_WGT, 0)       AS CMB_WGT," ).append("\n"); 
		query.append("         FC_TTL_TEU AS FORECAST_TOTAL_TEU," ).append("\n"); 
		query.append("         FC_WGT     AS FORECAST_WGT," ).append("\n"); 
		query.append("         AP_TEU     AS ALLOCATION_TOTAL_TEU," ).append("\n"); 
		query.append("         AP_WGT     AS ALLOCATION_WGT," ).append("\n"); 
		query.append("         BK_TEU     AS BOOKING_TOTAL_TEU," ).append("\n"); 
		query.append("         BK_WGT     AS BOOKING_WGT" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("      SELECT VVD," ).append("\n"); 
		query.append("             DECODE(IOC_CD, 'E', 0, 1) * DECODE(NQTA_MD * NCFM_MD, 0, 0, 1) * DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE(CTRL_LVL, 'O', 1, 'L', 2, 'D', 3), 3), LVL, 1, 0) AS EDIT," ).append("\n"); 
		query.append("             REP_TRD_CD    ," ).append("\n"); 
		query.append("             REP_SUB_TRD_CD," ).append("\n"); 
		query.append("             TRD_CD        ," ).append("\n"); 
		query.append("             SUB_TRD_CD    ," ).append("\n"); 
		query.append("             IOC_CD AS IOC_CD," ).append("\n"); 
		query.append("             BASE_RHQ_CD," ).append("\n"); 
		query.append("             RHQ_CD     ," ).append("\n"); 
		query.append("             AREA_CD," ).append("\n"); 
		query.append("             OFC_CD ," ).append("\n"); 
		query.append("             NVL(POL_CD, '+') AS POL_CD ," ).append("\n"); 
		query.append("             NVL(POD_CD, '+') AS POD_CD ," ).append("\n"); 
		query.append("             NVL(POL_SEQ, -1) AS POL_SEQ," ).append("\n"); 
		query.append("             NVL(POD_SEQ, -1) AS POD_SEQ," ).append("\n"); 
		query.append("             DECODE(SIGN(LVL - 1), 1, POL_SKIP, 0) AS POL_SKIP," ).append("\n"); 
		query.append("             DECODE(LVL, 3, POD_SKIP, 0)           AS POD_SKIP," ).append("\n"); 
		query.append("             BKG_QUOTA," ).append("\n"); 
		query.append("             BKG_QTA_CMB," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("             ) AS CMB," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("             ) AS CMB_WGT,             " ).append("\n"); 
		query.append("             -- 주차별 CMB" ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 1" ).append("\n"); 
		query.append("             ) AS CMB1," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 1" ).append("\n"); 
		query.append("             ) AS CMB_WGT1," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 2" ).append("\n"); 
		query.append("             ) AS CMB2," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 2" ).append("\n"); 
		query.append("             ) AS CMB_WGT2," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 3" ).append("\n"); 
		query.append("             ) AS CMB3," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 3" ).append("\n"); 
		query.append("             ) AS CMB_WGT3," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 4" ).append("\n"); 
		query.append("             ) AS CMB4," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))" ).append("\n"); 
		query.append("                  FROM WK_CMB BAR" ).append("\n"); 
		query.append("                 WHERE BAR.VVD = Z.VVD" ).append("\n"); 
		query.append("                   AND BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')" ).append("\n"); 
		query.append("                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')" ).append("\n"); 
		query.append("                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')" ).append("\n"); 
		query.append("                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')" ).append("\n"); 
		query.append("                   AND Z.IOC_CD       <> 'E'" ).append("\n"); 
		query.append("                   AND BAR.RNUM = 4" ).append("\n"); 
		query.append("             ) AS CMB_WGT4," ).append("\n"); 
		query.append("             --fc_ttl_teu값 추가(TEU + HC*2 + 45FT*2), fcast = 1(Fcast+BKG), 2(Fcast Only), 3(BKG only)" ).append("\n"); 
		query.append("             (DECODE('2', '3', NVL(FC_TEU, 0)" ).append("\n"); 
		query.append("                             , '2', NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2" ).append("\n"); 
		query.append("                             , '1', DECODE(PAST, 'Y', NVL(FC_TEU, 0)" ).append("\n"); 
		query.append("                                                    , NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2))" ).append("\n"); 
		query.append("             ) AS FC_TTL_TEU," ).append("\n"); 
		query.append("             FC_TEU   ," ).append("\n"); 
		query.append("             FC_HC    ," ).append("\n"); 
		query.append("             FC_45    ," ).append("\n"); 
		query.append("             FC_53    ," ).append("\n"); 
		query.append("             FC_RF    ," ).append("\n"); 
		query.append("             FC_WGT   ," ).append("\n"); 
		query.append("             UG_TEU   ," ).append("\n"); 
		query.append("             UG_HC    ," ).append("\n"); 
		query.append("             UG_45    ," ).append("\n"); 
		query.append("             UG_53    ," ).append("\n"); 
		query.append("             UG_RF    ," ).append("\n"); 
		query.append("             UG_WGT   ," ).append("\n"); 
		query.append("             MR_TEU   ," ).append("\n"); 
		query.append("             MR_HC    ," ).append("\n"); 
		query.append("             MR_45    ," ).append("\n"); 
		query.append("             MR_53    ," ).append("\n"); 
		query.append("             MR_RF    ," ).append("\n"); 
		query.append("             MR_WGT   ," ).append("\n"); 
		query.append("             AP_TEU   ," ).append("\n"); 
		query.append("             AP_HC    ," ).append("\n"); 
		query.append("             AP_45    ," ).append("\n"); 
		query.append("             AP_53    ," ).append("\n"); 
		query.append("             AP_RF    ," ).append("\n"); 
		query.append("             AP_WGT   ," ).append("\n"); 
		query.append("             BK_TEU   ," ).append("\n"); 
		query.append("             BK_20    ," ).append("\n"); 
		query.append("             BK_40    ," ).append("\n"); 
		query.append("             BK_HC    ," ).append("\n"); 
		query.append("             BK_45    ," ).append("\n"); 
		query.append("             BK_53    ," ).append("\n"); 
		query.append("             BK_RF    ," ).append("\n"); 
		query.append("             BK_WGT   ," ).append("\n"); 
		query.append("             BT_TEU   ," ).append("\n"); 
		query.append("             BT_20    ," ).append("\n"); 
		query.append("             BT_40    ," ).append("\n"); 
		query.append("             BT_HC    ," ).append("\n"); 
		query.append("             BT_45    ," ).append("\n"); 
		query.append("             BT_53    ," ).append("\n"); 
		query.append("             BT_RF    ," ).append("\n"); 
		query.append("             BT_WGT   ," ).append("\n"); 
		query.append("             CM_OP	  ,   " ).append("\n"); 
		query.append("             CM_OC	  ,   " ).append("\n"); 
		query.append("             CM_VL    ,                " ).append("\n"); 
		query.append("             GT_TEU   ," ).append("\n"); 
		query.append("             GT_HC    ," ).append("\n"); 
		query.append("             GT_45    ," ).append("\n"); 
		query.append("             GT_53    ," ).append("\n"); 
		query.append("             GT_RF    ," ).append("\n"); 
		query.append("             GT_WGT   ," ).append("\n"); 
		query.append("             AP_MD    ," ).append("\n"); 
		query.append("             CFM_FLG  ," ).append("\n"); 
		query.append("             CHILD_CNT," ).append("\n"); 
		query.append("             LEAF_CNT ," ).append("\n"); 
		query.append("             POD_CNT  ," ).append("\n"); 
		query.append("             LVL      ," ).append("\n"); 
		query.append("             PAST     ," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("               CASE" ).append("\n"); 
		query.append("                    WHEN POL_CD IS NULL AND POD_CD IS NULL  AND LVL <> 0 THEN SPC_CTRL_ALOC_RMK" ).append("\n"); 
		query.append("                                                                         ELSE NULL" ).append("\n"); 
		query.append("                END" ).append("\n"); 
		query.append("             ) AS SPC_CTRL_ALOC_RMK," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("               CASE" ).append("\n"); 
		query.append("                    WHEN POL_CD IS NOT NULL AND POD_CD IS NULL THEN SPC_CTRL_ALOC_POL_RMK " ).append("\n"); 
		query.append("                                                               ELSE NULL" ).append("\n"); 
		query.append("                END" ).append("\n"); 
		query.append("             ) AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("               CASE" ).append("\n"); 
		query.append("                    WHEN POD_CD IS NOT NULL THEN SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("                                            ELSE NULL" ).append("\n"); 
		query.append("                END" ).append("\n"); 
		query.append("             ) AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("        FROM HRCH_DATA Z" ).append("\n"); 
		query.append("       WHERE ( LVL < 2 OR (NQTA_MD > 0 AND NCFM_MD > 0) )" ).append("\n"); 
		query.append("		 AND FLG = 'N'" ).append("\n"); 
		query.append("       UNION ALL   " ).append("\n"); 
		query.append("        --Allocation" ).append("\n"); 
		query.append("      SELECT DISTINCT" ).append("\n"); 
		query.append("             P.VVD," ).append("\n"); 
		query.append("             0 EDIT," ).append("\n"); 
		query.append("             A.REP_TRD_CD    ," ).append("\n"); 
		query.append("             A.REP_SUB_TRD_CD," ).append("\n"); 
		query.append("             A.TRD_CD        ," ).append("\n"); 
		query.append("             A.SUB_TRD_CD    ," ).append("\n"); 
		query.append("             DECODE(A.TS_FLG, 'Y', 'T', A.IOC_CD)||DECODE(A.MNL_FLG, 'Y', 'T', '') AS IOC_CD," ).append("\n"); 
		query.append("             P.OFC_CD   AS BASE_RHQ_CD," ).append("\n"); 
		query.append("             A.SLS_RHQ_CD AS RHQ_CD     ," ).append("\n"); 
		query.append("             A.SLS_RHQ_CD AS AREA_CD," ).append("\n"); 
		query.append("             A.SLS_RHQ_CD AS OFC_CD ," ).append("\n"); 
		query.append("             NULL  POL_CD  ," ).append("\n"); 
		query.append("             NULL  POD_CD  ," ).append("\n"); 
		query.append("             -1 POL_SEQ   ," ).append("\n"); 
		query.append("             -1 POD_SEQ   ," ).append("\n"); 
		query.append("             0 POL_SKIP  ," ).append("\n"); 
		query.append("             0 POD_SKIP  ," ).append("\n"); 
		query.append("             0 AS BKG_QUOTA," ).append("\n"); 
		query.append("             0 AS BKG_QTA_CMB," ).append("\n"); 
		query.append("             NULL AS CMB," ).append("\n"); 
		query.append("             NULL AS CMB_WGT," ).append("\n"); 
		query.append("             NULL AS CMB1," ).append("\n"); 
		query.append("             NULL AS CMB_WGT1," ).append("\n"); 
		query.append("             NULL AS CMB2," ).append("\n"); 
		query.append("             NULL AS CMB_WGT2," ).append("\n"); 
		query.append("             NULL AS CMB3," ).append("\n"); 
		query.append("             NULL AS CMB_WGT3," ).append("\n"); 
		query.append("             NULL AS CMB4," ).append("\n"); 
		query.append("             NULL AS CMB_WGT4," ).append("\n"); 
		query.append("             --fc_ttl_teu값 추가(TEU + HC*2 + 45FT*2), fcast = 1(Fcast+BKG), 2(Fcast Only), 3(BKG only)" ).append("\n"); 
		query.append("             (DECODE('2', '3', NVL(C.FC_TEU, 0)" ).append("\n"); 
		query.append("                             , '2', NVL(C.FC_TEU, 0) + NVL(C.FC_HC, 0) * 2 + NVL(C.FC_45, 0) * 2 + NVL(C.FC_53, 0) * 2" ).append("\n"); 
		query.append("                             , '1', DECODE(C.PAST, 'Y', NVL(C.FC_TEU, 0)" ).append("\n"); 
		query.append("                                                      , NVL(C.FC_TEU, 0) + NVL(C.FC_HC, 0) * 2 + NVL(C.FC_45, 0) * 2 + NVL(C.FC_53, 0) * 2))" ).append("\n"); 
		query.append("             ) AS FC_TTL_TEU," ).append("\n"); 
		query.append("             C.FC_TEU   	," ).append("\n"); 
		query.append("             C.FC_HC    	," ).append("\n"); 
		query.append("             C.FC_45    	," ).append("\n"); 
		query.append("             C.FC_53    	," ).append("\n"); 
		query.append("             C.FC_RF    	," ).append("\n"); 
		query.append("             C.FC_WGT   	," ).append("\n"); 
		query.append("             0 AS UG_TEU   ," ).append("\n"); 
		query.append("             0 AS UG_HC    ," ).append("\n"); 
		query.append("             0 AS UG_45    ," ).append("\n"); 
		query.append("             0 AS UG_53    ," ).append("\n"); 
		query.append("             0 AS UG_RF    ," ).append("\n"); 
		query.append("             0 AS UG_WGT   ," ).append("\n"); 
		query.append("             0 AS MR_TEU   ," ).append("\n"); 
		query.append("             0 AS MR_HC    ," ).append("\n"); 
		query.append("             0 AS MR_45    ," ).append("\n"); 
		query.append("             0 AS MR_53    ," ).append("\n"); 
		query.append("             0 AS MR_RF    ," ).append("\n"); 
		query.append("             0 AS MR_WGT   ," ).append("\n"); 
		query.append("             A.ASGN_TTL_QTY     AS AP_TEU," ).append("\n"); 
		query.append("             A.ASGN_40FT_HC_QTY AS AP_HC ," ).append("\n"); 
		query.append("             A.ASGN_45FT_HC_QTY AS AP_45 ," ).append("\n"); 
		query.append("             A.ASGN_53FT_QTY    AS AP_53 ," ).append("\n"); 
		query.append("             A.ASGN_RF_QTY      AS AP_RF ," ).append("\n"); 
		query.append("             A.ASGN_TTL_WGT     AS AP_WGT," ).append("\n"); 
		query.append("           	 C.BK_TEU," ).append("\n"); 
		query.append("             C.BK_20 ," ).append("\n"); 
		query.append("             C.BK_40 ," ).append("\n"); 
		query.append("             C.BK_HC ," ).append("\n"); 
		query.append("             C.BK_45 ," ).append("\n"); 
		query.append("             C.BK_53 ," ).append("\n"); 
		query.append("             C.BK_RF ," ).append("\n"); 
		query.append("             C.BK_WGT," ).append("\n"); 
		query.append("             C.BT_TEU," ).append("\n"); 
		query.append("             C.BT_20 ," ).append("\n"); 
		query.append("             C.BT_40 ," ).append("\n"); 
		query.append("             C.BT_HC ," ).append("\n"); 
		query.append("             C.BT_45 ," ).append("\n"); 
		query.append("             C.BT_53 ," ).append("\n"); 
		query.append("             C.BT_RF ," ).append("\n"); 
		query.append("             C.BT_WGT," ).append("\n"); 
		query.append("             0 AS CM_OP,   " ).append("\n"); 
		query.append("             0 AS CM_OC,   " ).append("\n"); 
		query.append("             0 AS CM_VL,   " ).append("\n"); 
		query.append("             " ).append("\n"); 
		query.append("             0 AS GT_TEU," ).append("\n"); 
		query.append("             0 AS GT_HC ," ).append("\n"); 
		query.append("             0 AS GT_45 ," ).append("\n"); 
		query.append("             0 AS GT_53 ," ).append("\n"); 
		query.append("             0 AS GT_RF ," ).append("\n"); 
		query.append("             0 AS GT_WGT," ).append("\n"); 
		query.append("             1 AS AP_MD," ).append("\n"); 
		query.append("             'N' AS CFM_FLG              ," ).append("\n"); 
		query.append("             0 CHILD_CNT," ).append("\n"); 
		query.append("             0 LEAF_CNT," ).append("\n"); 
		query.append("             0 POD_CNT, " ).append("\n"); 
		query.append("             1 LVL," ).append("\n"); 
		query.append("             'N' AS PAST," ).append("\n"); 
		query.append("             A.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ," ).append("\n"); 
		query.append("             A.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK," ).append("\n"); 
		query.append("             A.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK" ).append("\n"); 
		query.append("        FROM SPC_ALOC_POL_POD A  ," ).append("\n"); 
		query.append("             PARAMS      P," ).append("\n"); 
		query.append("             (SELECT VVD, TRD_CD, SUB_TRD_CD, RHQ_CD, " ).append("\n"); 
		query.append("					 DECODE(IOC_CD, 'T', 'Y', 'TT', 'Y', 'N') AS TS_FLG, DECODE(IOC_CD, 'O', 'O', 'OT', 'O', 'I') AS IOC_CD, PAST," ).append("\n"); 
		query.append("                     FC_TEU, FC_HC, FC_45, FC_53, FC_RF, FC_WGT," ).append("\n"); 
		query.append("                     BK_TEU, BK_20, BK_40, BK_HC, BK_45, BK_53, BK_RF, BK_WGT,                       " ).append("\n"); 
		query.append("                     BT_TEU, BT_20, BT_40, BT_HC, BT_45, BT_53, BT_RF, BT_WGT" ).append("\n"); 
		query.append("                FROM HRCH_DATA" ).append("\n"); 
		query.append("               WHERE FLG = 'Y') C" ).append("\n"); 
		query.append("       WHERE A.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("         AND A.DIR_CD     = P.DIR_CD" ).append("\n"); 
		query.append("         AND A.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("         AND A.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("         AND A.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("         AND A.SLS_OFC_CD IN ('HAMRU', 'NYCRA')" ).append("\n"); 
		query.append("         AND P.RLANE_CD   = 'WAFIE'" ).append("\n"); 
		query.append("         AND A.TRD_CD     = C.TRD_CD(+)" ).append("\n"); 
		query.append("         AND A.SUB_TRD_CD = C.SUB_TRD_CD(+)" ).append("\n"); 
		query.append("         AND A.SLS_RHQ_CD = C.RHQ_CD(+)" ).append("\n"); 
		query.append("         AND A.TS_FLG     = C.TS_FLG(+)" ).append("\n"); 
		query.append("         AND A.IOC_CD     = C.IOC_CD(+)" ).append("\n"); 
		query.append("         AND A.VSL_CD || A.SKD_VOY_NO || A.SKD_DIR_CD = C.VVD(+)" ).append("\n"); 
		query.append("     ) Z" ).append("\n"); 
		query.append("ORDER BY VVD," ).append("\n"); 
		query.append("         DECODE(Z.IOC_CD, 'O', 1, 'I', 2, 'E', 3, 'T', 4, 'OT', 5, 'IT', 6, 'TT', 7)," ).append("\n"); 
		query.append("         DECODE(Z.RHQ_CD, NULL, 9, Z.BASE_RHQ_CD, 1, 'SINRS', 2, 3)," ).append("\n"); 
		query.append("         NVL(Z.RHQ_CD , 'A')," ).append("\n"); 
		query.append("         DECODE(Z.AREA_CD, NULL, 'B', Z.RHQ_CD, 'A', Z.AREA_CD)," ).append("\n"); 
		query.append("         DECODE(Z.OFC_CD , NULL, 'B', Z.RHQ_CD, 'A', Z.OFC_CD)," ).append("\n"); 
		query.append("         NVL(Z.POL_SEQ,  -1)," ).append("\n"); 
		query.append("         NVL(Z.POD_SEQ,  -1)" ).append("\n"); 

	}
}