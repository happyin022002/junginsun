<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EBookingReceiptDBDAOSearchXterSIXptImpLicListRSQL">
			<desc><![CDATA[alps의 export/import licens no를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT  MST.BKG_NO
       , 'O' IO_BND_CD
       , '' XPT_IMP_SEQ
       , CASE WHEN XX.XPT_LIC_NO IS NOT NULL THEN 'KR'
              WHEN AES.AES_INLND_TRNS_NO IS NOT NULL OR AES.AES_PTA_NO1 IS NOT NULL OR AES.AES_PTA_NO2 IS NOT NULL 
                OR AES.AES_PTU_NO IS NOT NULL OR AES.AES_DWN_NO IS NOT NULL OR AES.AES_EXPT_CTNT IS NOT NULL THEN 'US'
              WHEN SH.MX_TAX_ID IS NOT NULL OR CN.MX_TAX_ID IS NOT NULL OR NF.MX_TAX_ID IS NOT NULL THEN 'MX'
              WHEN SH.TR_TAX_ID IS NOT NULL OR CN.TR_TAX_ID IS NOT NULL OR NF.TR_TAX_ID IS NOT NULL THEN 'TR'
              WHEN SH.IL_TAX_ID IS NOT NULL OR CN.IL_TAX_ID IS NOT NULL OR NF.IL_TAX_ID IS NOT NULL THEN 'IL'
              WHEN SH.LB_TAX_ID IS NOT NULL OR CN.LB_TAX_ID IS NOT NULL OR NF.LB_TAX_ID IS NOT NULL THEN 'LB'
              WHEN SH.BRZ_TAX_ID IS NOT NULL OR CN.BRZ_TAX_ID IS NOT NULL OR NF.BRZ_TAX_ID IS NOT NULL THEN 'BR'
              WHEN CAED.CAED_CTNT1 IS NOT NULL OR CAED.CAED_CTNT2 IS NOT NULL OR CAED.CAED_CTNT3 IS NOT NULL 
                OR CAED.G7_EDI_CTNT1 IS NOT NULL OR CAED.G7_EDI_CTNT2 IS NOT NULL 
                OR CAED.SMRY_RPT_CTNT1 IS NOT NULL OR CAED.SMRY_RPT_CTNT2 IS NOT NULL
                OR CAED.B13A_CTNT1 IS NOT NULL OR CAED.B13A_CTNT2 IS NOT NULL 
                OR CAED.NON_DECL_CTNT IS NOT NULL OR CAED.MNL_INP_CTNT IS NOT NULL
                OR CAED.INLND_TZ_CGO_CTNT IS NOT NULL THEN 'CA'
              ELSE  '' END CNT_CD
       , NVL(XX.XPT_LIC_NO, '') XPT_LIC_NO
       , '' TS_REF_NO
       , NVL(DECODE(XX.CGO_DIVD_FLG, 'Y', XX.DIVD_PCK_QTY, XX.PCK_QTY ) ,'') PCK_QTY
       , NVL(DECODE(XX.CGO_DIVD_FLG, 'Y', XX.DIVD_PCK_TP_CD, XX.PCK_TP_CD ), '') PCK_TP_CD
       , NVL(DECODE(XX.CGO_DIVD_FLG, 'Y', XX.DIVD_WGT, XX.CNTR_WGT ) ,'') MF_WGT
       , NVL(DECODE(SUBSTR(DECODE(XX.CGO_DIVD_FLG, 'Y', XX.DIVD_WGT_UT_CD, XX.WGT_UT_CD ),1,1), 'K', 'KGS', DECODE(XX.CGO_DIVD_FLG, 'Y', XX.DIVD_WGT_UT_CD, XX.WGT_UT_CD ) ), '') WGT_UT_CD
       , NVL(XX.CGO_DIVD_FLG,'') DIVD_FLG
       , NVL(XX.DIVD_SEQ, '') DIVD_SEQ
       , '' DIVD_PCK_QTY
       , '' DIVD_PCK_TP_CD
       , '' DIVD_WGT
       , '' DIVD_WGT_UT_CD
       , NVL(XX.STY_ID, '') SAM_PCK_ID
       , NVL(XX.SAM_PCK_QTY ,'') SAM_PCK_QTY
       , NVL(XX.SAM_PCK_TP_CD, '') SAM_PCK_TP_CD
       , CASE WHEN AES.AES_INLND_TRNS_NO IS NOT NULL THEN 'AE'
              WHEN AES.AES_PTA_NO1 IS NOT NULL OR AES.AES_PTA_NO2 IS NOT NULL THEN 'PA'
              WHEN AES.AES_PTU_NO IS NOT NULL THEN 'PU' 
              WHEN AES.AES_DWN_NO IS NOT NULL THEN 'DN'
              WHEN AES.AES_EXPT_CTNT IS NOT NULL THEN 'EX'
              ELSE ''
                END AES_TP_CD
       , '' AES_INLND_TRNS_PFX_CTNT
       , NVL(AES.AES_INLND_TRNS_NO, '') AES_INLND_TRNS_NO
       , '' AES_PTA_PFX_CTNT
       , NVL(AES.AES_PTA_NO1 ,'') AES_PTA_NO1
       , NVL(AES.AES_PTA_NO2 ,'') AES_PTA_NO2
       , TO_CHAR(NVL(AES.AES_PTA_DT, ''),'MM-DD-YYYY') AES_PTA_DT
       , '' AES_PTU_PFX_CTNT
       , NVL(AES.AES_PTU_NO,'') AES_PTU_NO
       , TO_CHAR(NVL(AES.AES_PTU_DT,''),'MM-DD-YYYY') AES_PTU_DT
       , '' AES_DWN_PFX_CTNT
       , NVL(AES.AES_DWN_NO, '') AES_DWN_NO
       , TO_CHAR(NVL(AES.AES_DWN_DT,''),'MM-DD-YYYY') AES_DWN_DT
       , NVL(AES.AES_EXPT_ID, '') AES_EXPT_ID
       , NVL(AES.AES_EXPT_CTNT, '') AES_EXPT_CTNT
       , CASE WHEN CAED.CAED_CTNT1 IS NOT NULL OR CAED.CAED_CTNT2 IS NOT NULL OR CAED.CAED_CTNT3 IS NOT NULL THEN 'CE'
              WHEN CAED.G7_EDI_CTNT1 IS NOT NULL OR CAED.G7_EDI_CTNT2 IS NOT NULL THEN 'G7'
              WHEN CAED.SMRY_RPT_CTNT1 IS NOT NULL OR CAED.SMRY_RPT_CTNT2 IS NOT NULL THEN 'SM'
              WHEN CAED.B13A_CTNT1 IS NOT NULL OR CAED.B13A_CTNT2 IS NOT NULL THEN 'EX'              
              WHEN CAED.INLND_TZ_CGO_CTNT IS NOT NULL THEN 'IT' 
              WHEN CAED.MNL_INP_CTNT IS NOT NULL OR CAED.NON_DECL_CTNT IS NOT NULL THEN 'ND'
              ELSE ''
              END CAED_TP_CD
       , ''CAED_PFX_CTNT
       , CAED.CAED_CTNT1
			||decode(nvl(CAED.CAED_CTNT2, 'x'), 'x', '', '-'||CAED.CAED_CTNT2)
			||decode(nvl(CAED.CAED_CTNT3, 'x'), 'x', '', '-'||CAED.CAED_CTNT3)CAED_CTNT
       , '' G7_EDI_PFX_CTNT
       , CAED.G7_EDI_CTNT1
			||decode(nvl(CAED.G7_EDI_CTNT2, 'x'), 'x', '', '-'||CAED.G7_EDI_CTNT2)
             G7_EDI_CTNT
       , '' B13A_XPT_PFX_CTNT
       , TO_CHAR(CAED.B13A_DT, 'MM-DD-YYYY')
			||decode(nvl(CAED.B13A_CTNT1, 'x'), 'x', '', '-'||CAED.B13A_CTNT1)
			||decode(nvl(CAED.B13A_CTNT2, 'x'), 'x', '', '-'||CAED.B13A_CTNT2)
             B13A_XPT_CTNT
       , '' MF_SMRY_RPT_PFX_CTNT
       , NVL( CAED.SMRY_RPT_CTNT1
			||decode(nvl(CAED.SMRY_RPT_CTNT2, 'x'), 'x', '', '-'||CAED.SMRY_RPT_CTNT2) ,'') MF_SMRY_RPT_NO
       , '' CGO_CTRL_PFX_CTNT
       , NVL(CAED.INLND_TZ_CGO_CTNT, '') CGO_CTRL_NO
       , '' NDR_REF_PFX_CTNT
       , NVL(CAED.NON_DECL_CTNT, '' ) NDR_REF_ID
       , NVL(CAED.MNL_INP_CTNT ,'') NDR_REF_CTNT
	   , NVL(SH.MX_TAX_ID , '') MX_SHPR_TAX_ID
	   , NVL(CN.MX_TAX_ID , '') MX_CNEE_TAX_ID
	   , NVL(NF.MX_TAX_ID , '') MX_NTFY_TAX_ID
	   , NVL(SH.TR_TAX_ID , '') TR_SHPR_TAX_ID
       , NVL(CN.TR_TAX_ID , '') TR_CNEE_TAX_ID
       , NVL(NF.TR_TAX_ID , '') TR_NTFY_TAX_ID
	   , NVL(SH.IL_TAX_ID , '') IL_SHPR_TAX_ID
       , NVL(CN.IL_TAX_ID , '') IL_CNEE_TAX_ID
       , NVL(NF.IL_TAX_ID , '') IL_NTFY_TAX_ID
	   , NVL(SH.LB_TAX_ID , '') LB_SHPR_TAX_ID
       , NVL(CN.LB_TAX_ID , '') LB_CNEE_TAX_ID
       , NVL(NF.LB_TAX_ID , '') LB_NTFY_TAX_ID
       , NVL(SH.BRZ_TAX_ID, '') BR_SHPR_TAX_ID    -- Brazil 추가 
       , NVL(CN.BRZ_TAX_ID, '') BR_CNEE_TAX_ID    -- Brazil 추가 
       , NVL(NF.BRZ_TAX_ID, '') BR_NTFY_TAX_ID    -- Brazil 추가 
       , '' BRZ_DECL_NO    -- Brazil 추가 
       , '' SHPR_TAX_CPY_DESC_FLG 
       , '' CNEE_TAX_CPY_DESC_FLG
       , '' NTFY_TAX_CPY_DESC_FLG
       , '' BRZ_DECL_CPY_DESC_FLG 
	   , NVL(AES.VIN_CTNT, '') VIN_CTNT
  FROM BKG_XTER_RQST_MST MST
     , BKG_XTER_AES AES
     , BKG_XTER_CAED CAED
     , BKG_XTER_CUST SH
     , BKG_XTER_CUST CN
     , BKG_XTER_CUST NF
     , BKG_XTER_XPT_LIC_NO XX
 WHERE MST.XTER_SNDR_ID  = @[xter_sndr_id]
   AND MST.XTER_RQST_NO  = @[xter_rqst_no]
   AND MST.XTER_RQST_SEQ = @[xter_rqst_seq]
   AND MST.XTER_SNDR_ID  = AES.XTER_SNDR_ID  (+)
   AND MST.XTER_RQST_NO  = AES.XTER_RQST_NO  (+)
   AND MST.XTER_RQST_SEQ = AES.XTER_RQST_SEQ (+) 
   AND MST.XTER_SNDR_ID  = CAED.XTER_SNDR_ID (+)
   AND MST.XTER_RQST_NO  = CAED.XTER_RQST_NO (+)
   AND MST.XTER_RQST_SEQ = CAED.XTER_RQST_SEQ(+)  
   AND MST.XTER_SNDR_ID  = SH.XTER_SNDR_ID   (+)
   AND MST.XTER_RQST_NO  = SH.XTER_RQST_NO   (+)
   AND MST.XTER_RQST_SEQ = SH.XTER_RQST_SEQ  (+) 
   AND SH.XTER_CUST_TP_CD(+) = 'S'
   AND MST.XTER_SNDR_ID  = CN.XTER_SNDR_ID   (+)
   AND MST.XTER_RQST_NO  = CN.XTER_RQST_NO   (+)
   AND MST.XTER_RQST_SEQ = CN.XTER_RQST_SEQ  (+) 
   AND CN.XTER_CUST_TP_CD(+) = 'C'
   AND MST.XTER_SNDR_ID  = NF.XTER_SNDR_ID   (+)
   AND MST.XTER_RQST_NO  = NF.XTER_RQST_NO   (+)
   AND MST.XTER_RQST_SEQ = NF.XTER_RQST_SEQ  (+)
   AND NF.XTER_CUST_TP_CD(+) = 'N' 
   AND MST.XTER_SNDR_ID  = XX.XTER_SNDR_ID   (+)
   AND MST.XTER_RQST_NO  = XX.XTER_RQST_NO   (+)
   AND MST.XTER_RQST_SEQ = XX.XTER_RQST_SEQ  (+)
   AND NVL(XX.CNT_CD(+),'KR') ='KR'
   AND CASE WHEN XX.XPT_LIC_NO IS NOT NULL THEN 'KR'
              WHEN AES.AES_INLND_TRNS_NO IS NOT NULL OR AES.AES_PTA_NO1 IS NOT NULL OR AES.AES_PTA_NO2 IS NOT NULL 
                OR AES.AES_PTU_NO IS NOT NULL OR AES.AES_DWN_NO IS NOT NULL OR AES.AES_EXPT_CTNT IS NOT NULL THEN 'US'
              WHEN SH.MX_TAX_ID IS NOT NULL OR CN.MX_TAX_ID IS NOT NULL OR NF.MX_TAX_ID IS NOT NULL THEN 'MX'
              WHEN SH.TR_TAX_ID IS NOT NULL OR CN.TR_TAX_ID IS NOT NULL OR NF.TR_TAX_ID IS NOT NULL THEN 'TR'
              WHEN SH.IL_TAX_ID IS NOT NULL OR CN.IL_TAX_ID IS NOT NULL OR NF.IL_TAX_ID IS NOT NULL THEN 'IL'
              WHEN SH.LB_TAX_ID IS NOT NULL OR CN.LB_TAX_ID IS NOT NULL OR NF.LB_TAX_ID IS NOT NULL THEN 'LB'
              WHEN SH.BRZ_TAX_ID IS NOT NULL OR CN.BRZ_TAX_ID IS NOT NULL OR NF.BRZ_TAX_ID IS NOT NULL THEN 'BR'
              WHEN CAED.CAED_CTNT1 IS NOT NULL OR CAED.CAED_CTNT2 IS NOT NULL OR CAED.CAED_CTNT3 IS NOT NULL 
                OR CAED.G7_EDI_CTNT1 IS NOT NULL OR CAED.G7_EDI_CTNT2 IS NOT NULL 
                OR CAED.SMRY_RPT_CTNT1 IS NOT NULL OR CAED.SMRY_RPT_CTNT2 IS NOT NULL
                OR CAED.B13A_CTNT1 IS NOT NULL OR CAED.B13A_CTNT2 IS NOT NULL 
                OR CAED.NON_DECL_CTNT IS NOT NULL OR CAED.MNL_INP_CTNT IS NOT NULL
                OR CAED.INLND_TZ_CGO_CTNT IS NOT NULL THEN 'CA'
              ELSE '' END IS NOT NULL			]]></sql>
			<params>
				<param name="xter_sndr_id" type="12" value="" out="N"/>
				<param name="xter_rqst_no" type="12" value="" out="N"/>
				<param name="xter_rqst_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
