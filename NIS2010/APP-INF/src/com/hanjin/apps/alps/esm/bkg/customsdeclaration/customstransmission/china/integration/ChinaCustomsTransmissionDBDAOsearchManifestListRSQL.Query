<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChinaCustomsTransmissionDBDAOsearchManifestListRSQL">
			<desc><![CDATA[ChinaBlInfoListVO]]></desc>
			<sql><![CDATA[
WITH EDI_INFO AS (
    SELECT  * FROM (
        SELECT  /*+ USE_HASH(B) */ DISTINCT
                DENSE_RANK() OVER(PARTITION BY BL.BL_NO ORDER BY SLOG.MF_SND_DT DESC) AS RNUM,
                BL.BL_NO,
                SLOG.MF_SND_DT,
                SLOG.EDI_REF_ID
        FROM    BKG_CSTMS_CHN_SND_LOG_BL BL,
                BKG_CSTMS_CHN_SND_LOG SLOG,
                BKG_CSTMS_CHN_BL B
        WHERE   SLOG.CHN_MF_SND_IND_CD  = @[trans_mode]
        AND     SLOG.VSL_CD 	 = SUBSTR(@[vvd],1,4)
        AND     SLOG.SKD_VOY_NO  = SUBSTR(@[vvd],5,4)
        AND     SLOG.SKD_DIR_CD  = SUBSTR(@[vvd],9,1) 
        AND     BL.EDI_REF_ID    = SLOG.EDI_REF_ID
        AND     BL.BL_NO 	 	 = B.BL_NO
    )
    WHERE   RNUM = 1 
)
SELECT  INFO.BKG_NO,
        INFO.BL_NO,
        INFO.POL_CD,
        INFO.POD_CD,
        INFO.BKG_POL_CD,
        INFO.BKG_POD_CD,
        INFO.DEL_CD,
        INFO.PCK_QTY,
        INFO.PCK_TP_CD,
        INFO.ACT_WGT,
        INFO.WGT_UT_CD,
        MIN(DECODE(TRIM(SEAL.SEAL_NO),NULL,'N','Y')) SEAL_NO_FLG,
		MIN(DECODE(TRIM(SEAL.SEAL_KND_CD), NULL, 'N', 'Y')) SEAL_KND_FLG,
        MIN(DECODE(SUBSTR(CNTR.CNTR_TPSZ_CD,1,1),'F','Y','A','Y',DECODE(TRIM(SEAL.SEAL_PTY_TP_CD),NULL,'N','Y'))) SEALER_CD_FLG,
        INFO.SHPR_NM,
        INFO.SHPR_ADDR,
		INFO.SHPR_CNT,
		INFO.SHPR_ST_PO,
		INFO.SHPR_FAX,
		INFO.SHPR_EML,
		INFO.SHPR_PHN,
        INFO.SHPR_RGST_NO,
        INFO.CNEE_NM,
        INFO.CNEE_ADDR,
		INFO.CNEE_CNT,
		INFO.CNEE_ST_PO,
		INFO.CNEE_FAX,
		INFO.CNEE_EML,
		INFO.CNEE_PHN,
        INFO.CNEE_RGST_NO,    
        INFO.NTFY_NM,
        INFO.NTFY_ADDR,
		INFO.NTFY_CNT,
		INFO.NTFY_ST_PO,
		INFO.NTFY_FAX,
		INFO.NTFY_EML,
		INFO.NTFY_PHN,
        INFO.NTFY_RGST_NO,        
        INFO.BKG_CGO_TP_CD,
        INFO.TR,
        INFO.DCGO_FLG, 
        INFO.RC_FLG,
        INFO.CNTR_CNT,
        --SUM(DECODE(CNTR.CNTR_NO,NULL,0,1)) CNTR_CNT,
        DECODE(SLOG.TRSM_MSG_TP_ID,'9','Original','0','Original','5','Change','3','Delete') TRSM_MSG_TP_ID,
        TO_CHAR(SLOG.MF_SND_DT, 'YYYYMMDDHH24MISS') MF_SND_DT,
		-- VSL Info
		'' AS CALL_SGN_NO,
		'' AS PRE_PORT,
		'' AS NXT_PORT,
		'' AS VPS_ETA_DT,
		'' AS VPS_ETD_DT,
		'' AS VPS_ETB_DT,
		'' AS VSL_ENG_NM,
		'' AS SND_DATE,
		'' AS ETA_FLG,
		'' AS ETD_FLG,
		-- 조회 조건
		@[vvd] 			 AS VVD,
		@[bkg_cgo_tp_cd] AS BKG_CGO_TP_CD, 
		@[loc_cd] 		 AS LOC_CD,
		@[trans_mode] 	 AS TRANS_MODE,
		-- 총 개수
		'' AS TOTAL,
		INFO.MEA_QTY,		
        MIN(DECODE(DG.BL_NO,NULL,' ', DECODE(TRIM(DG.CNTC_PSON_NM),NULL,'N','Y'))) CNTC_PSON_NM,
        MIN(DECODE(DG.BL_NO,NULL,' ', DECODE(TRIM(DG.CNTC_PSON_TELCM_NO),NULL,'N','Y'))) CNTC_PSON_TELCM_NO,
        MIN(DECODE(DG.BL_NO,NULL,' ', DECODE(TRIM(DG.IMDG_UN_NO),NULL,'N','Y'))) IMDG_UN_NO,
        INFO.FRT_TERM_CD,
        INFO.RCV_TERM_CD,
        INFO.DE_TERM_CD,
		MIN(DECODE(TRIM(TO_CHAR(MK.BL_MK_DESC)),NULL,'N','Y')) BL_MK_DESC,
		MIN(DECODE(TRIM(CM.PCK_QTY),0,'N',NULL,'N','Y')) CM_PCK_QTY,
		MIN(DECODE(TRIM(CM.PCK_TP_CD),NULL,'N','Y')) CM_PCK_TP_CD,
		MIN(DECODE(TRIM(CM.CNTR_MF_WGT),0,'N',NULL,'N','Y')) CM_CNTR_MF_WGT
  FROM (
            SELECT  B.CHN_MF_SND_IND_CD,
                    (select count(cntr_no) from BKG_CSTMS_CHN_CNTR cc where cc.CHN_MF_SND_IND_CD = @[trans_mode] and b.bkg_no = cc.bl_no group by cc.bl_no) CNTR_CNT,
                    B.BL_NO  BL_NO,
                    B.BKG_NO BKG_NO,
                    B.POL_CD POL_CD,
                    B.POD_CD POD_CD,
                    B.BKG_POL_CD BKG_POL_CD,
                    B.BKG_POD_CD BKG_POD_CD,
                    B.DEL_CD DEL_CD,
                    DECODE(NVL(B.PCK_QTY,0),0,'N','Y') PCK_QTY,
                    DECODE(B.PCK_TP_CD,NULL,'N','Y') PCK_TP_CD,
                    DECODE(NVL(B.ACT_WGT,0),0,'N','Y') ACT_WGT,
                    DECODE(B.WGT_UT_CD,NULL,'N','Y') WGT_UT_CD,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_NM)), 0, 'N',NULL,'N', 'Y')) SHPR_NM,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_ADDR)), 0, 'N',NULL,'N', 'Y')) SHPR_ADDR,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CNT_CD)), 0, 'N',NULL,'N', 'Y')) SHPR_CNT,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CHN_CSTMS_ST_NM)), 0, 'N',NULL,'N', 'Y')) SHPR_ST_PO,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_FAX_NO)),   0, CASE WHEN LENGTH(TRIM(S.CUST_EML)) <> 0
													   									  	    OR LENGTH(TRIM(S.CUST_PHN_NO)) <> 0
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																				  ,NULL, CASE WHEN LENGTH(TRIM(S.CUST_EML)) <> 0
													   									  	    OR LENGTH(TRIM(S.CUST_PHN_NO)) <> 0
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																					   , 'Y'
													  )
						  ) SHPR_FAX,		
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_EML)),   0, CASE WHEN LENGTH(TRIM(S.CUST_FAX_NO)) <> 0
													   									     OR LENGTH(TRIM(S.CUST_PHN_NO)) <> 0
                                                     								       THEN '-'
																						   ELSE 'N'
																					   END
																			   ,NULL, CASE WHEN LENGTH(TRIM(S.CUST_FAX_NO)) <> 0
													   									  	 OR LENGTH(TRIM(S.CUST_PHN_NO)) <> 0
                                                     								       THEN '-'
																						   ELSE 'N'
																					   END
																					, 'Y'
													  )
						  ) SHPR_EML,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.CUST_PHN_NO)),   0, CASE WHEN LENGTH(TRIM(S.CUST_FAX_NO)) <> 0
													   									        OR LENGTH(TRIM(S.CUST_EML)) <> 0
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																			      ,NULL, CASE WHEN LENGTH(TRIM(S.CUST_FAX_NO)) <> 0
													   									  	    OR LENGTH(TRIM(S.CUST_EML)) <> 0
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																					   , 'Y'
													  )
						  ) SHPR_PHN,
                    DECODE(S.BKG_CUST_TP_CD,'S',DECODE(LENGTH(TRIM(S.RGST_NO)), 0, 'N',NULL,'N', 'Y')) SHPR_RGST_NO,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_NM)), 0, 'N',NULL,'N', 'Y')) CNEE_NM,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_ADDR)), 0, 'N',NULL,'N', 'Y')) CNEE_ADDR,
					DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CNT_CD)),    0, DECODE(C.CUST_ADDR,'TO ORDER','-'
																												  ,'N'
																						   )
																			 , NULL, DECODE(C.CUST_ADDR,'TO ORDER','-'
																												  ,'N'
																						   )
																				   , 'Y'
													  )
						  ) CNEE_CNT,
					DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CHN_CSTMS_ST_NM)),    0, DECODE(C.CUST_ADDR,'TO ORDER','-'
																												           ,'N'
																							        )
																				      , NULL, DECODE(C.CUST_ADDR,'TO ORDER','-'
																												           ,'N'
																							        )
																				            , 'Y'
													  )
						  ) CNEE_ST_PO,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_FAX_NO)),   0, CASE WHEN LENGTH(TRIM(C.CUST_EML)) <> 0
													   									  	    OR LENGTH(TRIM(C.CUST_PHN_NO)) <> 0
																							    OR C.CUST_ADDR = 'TO ORDER'
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																				  ,NULL, CASE WHEN LENGTH(TRIM(C.CUST_EML)) <> 0
													   									  	    OR LENGTH(TRIM(C.CUST_PHN_NO)) <> 0
																							    OR C.CUST_ADDR = 'TO ORDER'
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																					   , 'Y'
													  )
						  ) CNEE_FAX,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_EML)),   0, CASE WHEN LENGTH(TRIM(C.CUST_FAX_NO)) <> 0
													   									  	 OR LENGTH(TRIM(C.CUST_PHN_NO)) <> 0
																							 OR C.CUST_ADDR = 'TO ORDER'
                                                     								       THEN '-'
																						   ELSE 'N'
																					   END
																			   ,NULL, CASE WHEN LENGTH(TRIM(C.CUST_FAX_NO)) <> 0
													   									  	 OR LENGTH(TRIM(C.CUST_PHN_NO)) <> 0
																							 OR C.CUST_ADDR = 'TO ORDER'
                                                     								       THEN '-'
																						   ELSE 'N'
																					   END
																					 , 'Y'
													  )
						  ) CNEE_EML,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.CUST_PHN_NO)),   0, CASE WHEN LENGTH(TRIM(C.CUST_FAX_NO)) <> 0
													   									        OR LENGTH(TRIM(C.CUST_EML)) <> 0
																							    OR C.CUST_ADDR = 'TO ORDER'
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																			      ,NULL, CASE WHEN LENGTH(TRIM(C.CUST_FAX_NO)) <> 0
													   									  	    OR LENGTH(TRIM(C.CUST_EML)) <> 0
																							    OR C.CUST_ADDR = 'TO ORDER'
                                                     								          THEN '-'
																						      ELSE 'N'
																					      END
																					   , 'Y'
													  )
						  ) CNEE_PHN,
                    DECODE(C.BKG_CUST_TP_CD,'C',DECODE(LENGTH(TRIM(C.RGST_NO)),    0, DECODE(C.CUST_ADDR,'TO ORDER','-'
																										           ,'N'
																							)
																			  , NULL, DECODE(C.CUST_ADDR,'TO ORDER','-'
																										           ,'N'
																							)
																			        , 'Y'
													  )
						  ) CNEE_RGST_NO,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_NM)), 0, 'N',NULL,'N', 'Y')) NTFY_NM,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_ADDR)), 0, 'N',NULL,'N', 'Y')) NTFY_ADDR,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CNT_CD)),   0, DECODE(C.CUST_ADDR, 'TO ORDER','N'
																											      ,'-'
																						  )
																			 ,NULL, DECODE(C.CUST_ADDR, 'TO ORDER','N'
																												  ,'-'
																						  )
																				  , 'Y'
													  )
						  ) NTFY_CNT,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CHN_CSTMS_ST_NM)),   0, DECODE(C.CUST_ADDR, 'TO ORDER','N'
																													       ,'-'
																							       )
																				      ,NULL, DECODE(C.CUST_ADDR, 'TO ORDER','N'
																													       ,'-'
																							       )
																				           , 'Y'
													  )
						  ) NTFY_ST_PO,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_FAX_NO)),    0, CASE WHEN LENGTH(TRIM(N.CUST_EML)) <> 0
													   									         OR LENGTH(TRIM(N.CUST_PHN_NO)) <> 0
																							     OR C.CUST_ADDR <> 'TO ORDER'
                                                     								           THEN '-'
																						       ELSE 'N'
																					       END
																				  , NULL, CASE WHEN LENGTH(TRIM(N.CUST_EML)) <> 0
													   									         OR LENGTH(TRIM(N.CUST_PHN_NO)) <> 0
																							     OR C.CUST_ADDR <> 'TO ORDER'
                                                     								           THEN '-'
																						       ELSE 'N'
																					       END
																				        , 'Y'
													  )
						  ) NTFY_FAX,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_EML)),    0, CASE WHEN LENGTH(TRIM(N.CUST_FAX_NO)) <> 0
													   									      OR LENGTH(TRIM(N.CUST_PHN_NO)) <> 0
																							  OR C.CUST_ADDR <> 'TO ORDER'
                                                     								        THEN '-'
																						    ELSE 'N'
																					    END
																			   , NULL, CASE WHEN LENGTH(TRIM(N.CUST_FAX_NO)) <> 0
													   									      OR LENGTH(TRIM(N.CUST_PHN_NO)) <> 0
																							  OR C.CUST_ADDR <> 'TO ORDER'
                                                     								        THEN '-'
																						    ELSE 'N'
																					    END
																				     , 'Y'
													  )
					      ) NTFY_EML,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.CUST_PHN_NO)),    0, CASE WHEN LENGTH(TRIM(N.CUST_FAX_NO)) <> 0
													   									         OR LENGTH(TRIM(N.CUST_EML)) <> 0
																							     OR C.CUST_ADDR <> 'TO ORDER'
                                                     								           THEN '-'
																						       ELSE 'N'
																					       END
																			      , NULL, CASE WHEN LENGTH(TRIM(N.CUST_FAX_NO)) <> 0
													   									         OR LENGTH(TRIM(N.CUST_EML)) <> 0
																							     OR C.CUST_ADDR <> 'TO ORDER'
                                                     								           THEN '-'
																						       ELSE 'N'
																					       END
																				        , 'Y'
													  )
						  ) NTFY_PHN,
                    DECODE(N.BKG_CUST_TP_CD,'N',DECODE(LENGTH(TRIM(N.RGST_NO)),   0, DECODE(C.CUST_ADDR,'TO ORDER','N'
																												  ,'-'
																						   )
																			  ,NULL, DECODE(C.CUST_ADDR,'TO ORDER','N'
																												  ,'-'
																						   )
																				   , 'Y'
													  )
						  ) NTFY_RGST_NO,                
                    B.BKG_CGO_TP_CD,
                    DECODE(@[trans_mode], 'D', DECODE(B.POD_CD, @[loc_cd], 'I', 'T'), DECODE(B.POL_CD, @[loc_cd], 'E', 'R')) TR,
                    DECODE(B.DCGO_FLG,'N','N','Y') DCGO_FLG, 
                    DECODE(B.RC_FLG,'N','N','Y') RC_FLG,
                    EDI_INFO.EDI_REF_ID,
					DECODE(NVL(B.MEAS_QTY,0),0,'N','Y') MEA_QTY,
                    DECODE(B.FRT_TERM_CD,NULL,'N','Y') FRT_TERM_CD,
                    DECODE(B.RCV_TERM_CD,NULL,'N','Y') RCV_TERM_CD,
                    DECODE(B.DE_TERM_CD,NULL,'N','Y') DE_TERM_CD
            FROM    BKG_CSTMS_CHN_BL B,
                    BKG_CSTMS_CHN_CUST S, 
                    BKG_CSTMS_CHN_CUST C, 
                    BKG_CSTMS_CHN_CUST N,
                	EDI_INFO
            WHERE   B.VSL_CD           =    SUBSTR(@[vvd],1,4)
            AND     B.SKD_VOY_NO       =    SUBSTR(@[vvd],5,4)
            AND     B.SKD_DIR_CD       =    SUBSTR(@[vvd],9,1)
            AND     B.CHN_MF_SND_IND_CD =   @[trans_mode]
            AND     DECODE(B.BKG_CGO_TP_CD,'P','P','F') LIKE @[bkg_cgo_tp_cd]||'%'
            AND     DECODE(@[trans_mode],'D',B.BKG_POD_CD,'O',B.BKG_POL_CD, B.BKG_POL_CD) = @[loc_cd]
            AND     B.CHN_MF_SND_IND_CD =    S.CHN_MF_SND_IND_CD(+)
            AND     B.CHN_MF_SND_IND_CD =    C.CHN_MF_SND_IND_CD(+)
            AND     B.CHN_MF_SND_IND_CD =    N.CHN_MF_SND_IND_CD(+)
            AND     B.BL_NO             =    S.BL_NO(+)
            AND     B.BL_NO             =    C.BL_NO(+)
            AND     B.BL_NO             =    N.BL_NO(+)
            AND     S.BKG_CUST_TP_CD(+) =    'S'
            AND     C.BKG_CUST_TP_CD(+) =    'C'
            AND     N.BKG_CUST_TP_CD(+) =    'N' 
        	AND     B.BL_NO             =    EDI_INFO.BL_NO(+)
       ) INFO, 
         BKG_CSTMS_CHN_CNTR CNTR,
         BKG_CSTMS_SEAL_NO SEAL,
		 BKG_CSTMS_CHN_DG_CGO DG,
		 BKG_CSTMS_CHN_MK MK,
		 BKG_CNTR_MF_DESC CM,
         BKG_CSTMS_CHN_SND_LOG SLOG
   WHERE INFO.BL_NO         	= CNTR.BL_NO(+)
     AND INFO.CHN_MF_SND_IND_CD = CNTR.CHN_MF_SND_IND_CD(+)
     AND CNTR.BL_NO         	= SEAL.BL_NO(+)
     AND CNTR.CNTR_NO        	= SEAL.CNTR_NO(+)
     AND SEAL.CNT_CD(+)         = 'CN'
     AND SEAL.CSTMS_DIV_ID(+)   = 'CTM'
     AND SEAL.SEAL_NO_SEQ(+) 	= 1   -- 2014.06.24 적용 seal number 1개이상 있는 경우존재
	 AND INFO.EDI_REF_ID     	= SLOG.EDI_REF_ID(+)
	 AND INFO.CHN_MF_SND_IND_CD = DG.CHN_MF_SND_IND_CD(+)
     AND INFO.BL_NO 			= DG.BL_NO(+)
	 AND INFO.CHN_MF_SND_IND_CD = MK.CHN_MF_SND_IND_CD(+)
     AND INFO.BL_NO 			= MK.BL_NO(+)
	 AND CNTR.BL_NO				= CM.BKG_NO(+)
	 AND CNTR.CNTR_NO			= CM.CNTR_NO(+)
#if (${trans_type} == 'local') 
	 AND INFO.TR IN ('E','I')
#elseif (${trans_type} == 'ts') 
	 AND INFO.TR IN ('R','T')
#end
GROUP BY INFO.BL_NO,
         INFO.BKG_NO,
         INFO.POL_CD,
         INFO.POD_CD,
         INFO.BKG_POL_CD,
         INFO.BKG_POD_CD,
         INFO.DEL_CD,
         INFO.PCK_QTY,
         INFO.PCK_TP_CD,
         INFO.ACT_WGT,
         INFO.WGT_UT_CD,
         INFO.SHPR_NM,
         INFO.SHPR_ADDR,
		 INFO.SHPR_CNT,
		 INFO.SHPR_ST_PO,
		 INFO.SHPR_FAX,
		 INFO.SHPR_EML,
		 INFO.SHPR_PHN,
         INFO.SHPR_RGST_NO,
         INFO.CNEE_NM,
         INFO.CNEE_ADDR,
		 INFO.CNEE_CNT,
		 INFO.CNEE_ST_PO,
		 INFO.CNEE_FAX,
		 INFO.CNEE_EML,
		 INFO.CNEE_PHN,
         INFO.CNEE_RGST_NO,         
         INFO.NTFY_NM,
         INFO.NTFY_ADDR,
		 INFO.NTFY_CNT,
		 INFO.NTFY_ST_PO,
		 INFO.NTFY_FAX,
		 INFO.NTFY_EML,
		 INFO.NTFY_PHN,
         INFO.NTFY_RGST_NO,       
         INFO.BKG_CGO_TP_CD,
         INFO.TR,
         INFO.DCGO_FLG, 
         INFO.RC_FLG,
         SLOG.TRSM_MSG_TP_ID,
         SLOG.MF_SND_DT, 
		 INFO.CNTR_CNT,
		 INFO.MEA_QTY,
         INFO.FRT_TERM_CD,
         INFO.RCV_TERM_CD,
         INFO.DE_TERM_CD
ORDER BY INFO.BL_NO			]]></sql>
			<params>
				<param name="trans_mode" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="bkg_cgo_tp_cd" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
