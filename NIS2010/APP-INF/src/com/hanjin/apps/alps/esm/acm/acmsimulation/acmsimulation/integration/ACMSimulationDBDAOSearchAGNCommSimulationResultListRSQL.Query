<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ACMSimulationDBDAOSearchAGNCommSimulationResultListRSQL">
			<desc><![CDATA[Simulation한 결과를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT A.BKG_NO,
       B.BL_NO,
       A.IO_BND_CD,
       B.REV_VVD_CD,
       MAX(DECODE(A.AC_VSL_CD, 'CNTC', '', A.AC_VSL_CD||A.AC_SKD_VOY_NO||A.AC_SKD_DIR_CD||A.AC_REV_DIR_CD)) AS COMM_VVD,
       A.AC_RLANE_CD,
       TO_CHAR(TO_DATE(A.SAIL_ARR_DT, 'YYYYMMDD'), 'YYYY-MM-DD') AS SAIL_ARR_DT,
       A.AC_OCCR_INFO_CD,
       MAX(A.AC_SEQ) AS AC_SEQ,
       MAX(C.BKG_STS_CD) AS BKG_STS_CD,
       (ACM_JOIN_FNC(CURSOR(SELECT CNTR_TPSZ_CD || 'x' || OP_CNTR_QTY
		FROM BKG_QUANTITY
	    WHERE BKG_NO = A.BKG_NO))) CNTR_QTY,
       DECODE(MAX(NVL(A.REV_DIV_CD,'A')),'A',' ',MAX(NVL(A.REV_DIV_CD,'A'))) AS REV_DIV_CD,
--       SUM(A.CRNT_REV_AMT) AS CRNT_REV_AMT,
--       SUM(A.DDCT_CHG_AMT) AS DDCT_CHG_AMT,
--       SUM(A.DDCT_TRSP_AMT) AS DDCT_TRSP_AMT,
--       SUM(A.DDCT_SPCL_CMPN_AMT) AS DDCT_SPCL_CMPN_AMT,
--       SUM(A.CRNT_REV_AMT - A.DDCT_CHG_AMT - A.DDCT_TRSP_AMT - A.DDCT_SPCL_CMPN_AMT) AS POST_REV_AMT,
        B.TRD_CD,
    	(SELECT SUB_TRD_CD
        FROM  MAS_BKG_EXPN_DTL_WK DW
        WHERE DW.BKG_NO    = A.BKG_NO
        AND ROWNUM = 1) AS SUB_TRD_CD ,
       (SELECT NVL(SUM(CRNT_REV_AMT ),0)
        FROM  ACM_AGN_COMM AC 
        WHERE AC.BKG_NO    = A.BKG_NO 
        AND   AC.AGN_CD    = A.AGN_CD 
        AND   AC.IO_BND_CD = A.IO_BND_CD 
        AND   AC.AC_SEQ    = A.AC_SEQ AND AC_TP_CD = 'G') AS CRNT_REV_AMT ,
       (SELECT NVL(SUM(DDCT_CHG_AMT ),0)
        FROM  ACM_AGN_COMM AC 
        WHERE AC.BKG_NO    = A.BKG_NO 
        AND   AC.AGN_CD    = A.AGN_CD 
        AND   AC.IO_BND_CD = A.IO_BND_CD 
        AND   AC.AC_SEQ    = A.AC_SEQ AND AC_TP_CD = 'G') AS DDCT_CHG_AMT ,
       (SELECT NVL(SUM(DDCT_TRSP_AMT ),0)
        FROM  ACM_AGN_COMM AC 
        WHERE AC.BKG_NO    = A.BKG_NO 
        AND   AC.AGN_CD    = A.AGN_CD 
        AND   AC.IO_BND_CD = A.IO_BND_CD 
        AND   AC.AC_SEQ    = A.AC_SEQ AND AC_TP_CD = 'G') AS DDCT_TRSP_AMT ,
       (SELECT NVL(SUM(DDCT_SPCL_CMPN_AMT),0)
        FROM  ACM_AGN_COMM AC 
        WHERE AC.BKG_NO    = A.BKG_NO 
        AND   AC.AGN_CD    = A.AGN_CD 
        AND   AC.IO_BND_CD = A.IO_BND_CD 
        AND   AC.AC_SEQ    = A.AC_SEQ AND AC_TP_CD = 'G') AS DDCT_SPCL_CMPN_AMT ,
       (SELECT NVL(SUM(CRNT_REV_AMT - DDCT_CHG_AMT - DDCT_TRSP_AMT - DDCT_SPCL_CMPN_AMT),0)
        FROM  ACM_AGN_COMM AC 
        WHERE AC.BKG_NO    = A.BKG_NO 
        AND   AC.AGN_CD    = A.AGN_CD 
        AND   AC.IO_BND_CD = A.IO_BND_CD 
        AND   AC.AC_SEQ    = A.AC_SEQ AND AC_TP_CD = 'G') AS POST_REV_AMT ,

       SUM(DECODE(SIGN(INSTR('GKHSC', A.AC_TP_CD)), 1, A.PPD_AMT, 0)) AS PPD_AMT,
       SUM(DECODE(A.AC_TP_CD, 'G', A.IF_AMT, 0)) AS GENERAL_AMT,
       SUM(DECODE(A.AC_TP_CD, 'K', A.IF_AMT, 0)) AS BROG_AMT,
       SUM(DECODE(A.AC_TP_CD, 'H', A.IF_AMT, 0)) AS CHF_AMT,
       SUM(DECODE(A.AC_TP_CD, 'S', A.IF_AMT, 0)) AS TS_AMT,
       SUM(DECODE(A.AC_TP_CD, 'C', A.IF_AMT, 0)) AS CROSS_AMT,
       SUM(DECODE(SIGN(INSTR('GKHSC', A.AC_TP_CD)), 1, A.IF_AMT, 0)) AS USD_AMT,
       MAX(PAY_XCH_RT) AS PAY_XCH_RT,
       A.CURR_CD,
       SUM(DECODE(SIGN(INSTR('GKHSC', A.AC_TP_CD)), 1, PAY_IF_AMT, 0)) AS PAY_IF_AMT,
       A.AC_STS_CD,
       TO_CHAR(A.CRE_DT, 'YYYY-MM-DD') AS CRE_DT,
       TO_CHAR(A.CRE_DT, 'HH24:MI') AS CRE_TM,
       D.BDR_FLG,       
       CASE WHEN A.AC_STS_CD = 'CE' THEN MAX(A.AC_PROC_DESC)
            ELSE (SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_VAL_CTNT = A.AC_STS_CD AND INTG_CD_ID = 'CD03095')
       END AS AC_PROC_DESC,
       A.AGN_CD,
       A.XCH_RT_APLY_LVL,
       MAX(B.POL_CD) AS POL_CD,
       MAX(B.POR_CD) AS POR_CD,
       MAX(B.POD_CD) AS POD_CD,
       MAX(B.DEL_CD) AS DEL_CD
  FROM ACM_SIM_COMM A,
       ACM_SIM_BKG_INFO B,
       BKG_BOOKING C,
       BKG_BL_DOC D
 WHERE 1 = 1
   AND A.AGN_CD = @[agn_cd]
   AND A.AC_STS_CD <> 'CZ' --> Zero Amt 는  화면에는 보여주지 않는다. 
   AND A.BKG_NO = C.BKG_NO(+)
   AND A.BKG_NO = B.BKG_NO
   AND A.SIM_NO = B.SIM_NO
   AND A.BKG_NO = D.BKG_NO
   AND A.SIM_NO = @[sim_no]
/* Display bookings before BDR */
#if (${bdr_flg} != 'Y')
   AND D.BDR_FLG = 'Y'
#end
/* Display Advanced Bookings */
#if (${bkg_sts_cd} != 'A')
   AND C.BKG_STS_CD <> 'A'
#end
 GROUP BY B.BL_NO,
          A.BKG_NO,
          A.IO_BND_CD,
          B.REV_VVD_CD,
          A.AC_RLANE_CD,
          A.SAIL_ARR_DT,
          A.AC_OCCR_INFO_CD,
          B.TRD_CD,
          A.AC_SEQ,
          B.BKG_STS_CD,
--          A.REV_DIV_CD,
          A.CURR_CD,
          A.AC_STS_CD,
--          A.CRE_DT,
          TO_CHAR(A.CRE_DT, 'YYYY-MM-DD'),
          TO_CHAR(A.CRE_DT, 'HH24:MI'),
          D.BDR_FLG,
--          A.AC_PROC_DESC,
          A.AR_OFC_CD,
          A.AGN_CD,
          A.XCH_RT_APLY_LVL
 ORDER BY 1, 2, 3, 4, 5, 6
			]]></sql>
			<params>
				<param name="agn_cd" type="12" value="" out="N"/>
				<param name="sim_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
