<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOSearchPortTariffListRSQL">
			<desc><![CDATA[History-----------------------------------------------
2010.05.06 이행지 [CHM-201003663] Port tariff vessel class 변경
2010.05.20 이행지 M:2010-05, W:2010-18  => M:2010-07,W:2010-27 부터 VSL_CLSS_CAPA 적용하도록
2010.06.23 이행지 M:2010-07, W:2010-27  => M:2010-08,W:2010-31 부터 VSL_CLSS_CAPA 적용하도록
2010.07.29 이윤정 M:2010-08, W:2010-31  => M:2010-10,W:2010-40 부터 VSL_CLSS_CAPA 적용하도록[CHM-201005034]
2010.09.27 이행지 [CHM-201006114-01] VSL_CLSS_CAPA 적용삭제 
2015.01.23 김시몬 [CHM-201533657] PM1,IMU 팬듈럼 Lane에 대해 100% Ratio적용, 운항통과료 100% Ratio적용
2015.02.24 김시몬 TTL_EXP2(PSO_COST_ORG_AMT)를 구할 때 PORT_ORG_AMT를 이용하여 TTL_EXP 로직 적용하도록 수정
2015.02.25 김시몬 하나의 월에 2개 주차로 동일 S.LANE /VVD가 존재할 경우 MAX 주차것으로 보여준다(2배로 보이지 않게)
2015.04.01 김시몬 SLANE/DIR/VVD별 Haul bnd가 2개이상 존재하여 MAX 처리추가
2015.04.01 김시몬 [관리회계개선TF] PSG LANE 팬듈럼 처리 추가]]></desc>
			<sql><![CDATA[
SELECT 0 AS CHK_FLAG
      , COST_STS
      , COST_YRMON
      , COST_WK
      , SLAN_CD
      , VSL_CD
      , SKD_VOY_NO
      , SKD_DIR_CD
	  , HUL_BND_CD
      , PSO_MAX_SEQ
      --, SUM(PORT_ORG_AMT) PSO_COST_ORG_AMT
      , SUM(TTL_EXP2)     AS PSO_COST_ORG_AMT
      , SUM(PORT_ADD_AMT) PSO_COST_ADD_AMT
      , SUM(TTL_EXP) PSO_COST_TTL_AMT
      , SUM(PSO_TTL_EXP) PSO_COST_PSO_TTL_AMT
      , (SELECT SUM(NVL(B.PORT_USD_AMT, 0)+NVL(B.CNL_USD_AMT, 0))
           FROM MAS_MON_VVD  A, 
                MAS_PORT_TRF B
          WHERE A.COST_YRMON||A.COST_WK = AA.PRE_VVD_SEQ
            AND A.VSL_CD = AA.VSL_CD
            AND A.DIR_CD = AA.SKD_DIR_CD
            AND A.VSL_cD = B.VSL_CD
            AND A.SKD_VOY_NO = B.SKD_VOY_NO
            AND A.DIR_CD = B.SKD_DIR_CD
            AND A.SUB_TRD_CD != 'IP'
       ) PRE_VVD_AMT   
       
   FROM (
#if (${f_yrtype} == 'W')           
         SELECT ( CASE WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) <> 0
                       THEN 'C' 
                       --VVD에 전체에 대해서 하나라도 MAS DATA가 있는 경우
                       WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD)= 0
                            AND MAX(NVL( A.INV_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0
                       THEN 'N'
                       --해당 VVD에 대한 데이터가 MAS, PSO 둘다 모두 한 건도 없는 경우
                       ELSE DECODE(LAST_VALUE (A.SRC_PSO_BZTP_CD IGNORE NULLS) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD, A.WRK_DT, A.WRK_SEQ ), 1, 'T', 2, 'E')
                       --MAS는 없고 PSO쪽만 있는 경우 WRK_DT나 WRK SEQ로 별로 가져와야 함
                       END) COST_STS
              , A.SLS_YRMON AS COST_YRMON
              , A.COST_WK
#else 
         SELECT ( CASE WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) <> 0
                       THEN 'C' 
                       --VVD에 전체에 대해서 하나라도 MAS DATA가 있는 경우
                       WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD)= 0
                            AND MAX(NVL( A.INV_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0
                       THEN 'N'
                       --해당 VVD에 대한 데이터가 MAS, PSO 둘다 모두 한 건도 없는 경우
                       ELSE DECODE(LAST_VALUE (A.SRC_PSO_BZTP_CD IGNORE NULLS) OVER (PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD, A.WRK_DT, A.WRK_SEQ ), 1, 'T', 2, 'E')
                       --MAS는 없고 PSO쪽만 있는 경우 WRK_DT나 WRK SEQ로 별로 가져와야 함
                       END) COST_STS
              , A.COST_YRMON AS COST_YRMON
              , '' AS COST_WK
#end

              , A.SLAN_CD
              , A.VSL_CD
              , A.SKD_VOY_NO
              , A.DIR_CD AS SKD_DIR_CD
			  , MAX(A.HUL_BND_CD) AS HUL_BND_CD
              , A.TML_CD
              , A.YD_CD
              , A.WRK_DT
              , A.WRK_SEQ
                --, A.LST_WRK_DT
                --, A.LST_WRK_SEQ
              , MAX(A.LST_WRK_DT|| A.LST_WRK_SEQ) PSO_MAX_SEQ
              , A.INV_USD_AMT * A.PORT_RTO INV_USD_AMT
              , A.CNL_USD_AMT
              , A.PORT_USD_AMT
              , A.PORT_ADD_AMT
              , A.PORT_ORG_AMT
#if (${f_yrtype} == 'W')  
              , ( CASE WHEN MAX(NVL(A.INV_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0 -- MIN MAX로 변경 20150401
#else
              , ( CASE WHEN MAX(NVL(A.INV_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0 -- MIN MAX로 변경 20150401
#end                        

                       -- VVD별 WORK DATE/SEQ 별로 PSO 금액중 하나라도 ADD CALL 인 것을 찾아야 함
                       THEN 0
                       ELSE SUM( ( CASE WHEN SUBSTR(A.YD_CD, 1, 5) IN ('EGSUZ', 'PAPAC') THEN 0 ELSE NVL(A.INV_USD_AMT, 0) * A.PORT_RTO END) --PSO_PORT_AMT
                                +( CASE WHEN SUBSTR(A.YD_CD, 1, 5) IN ('EGSUZ', 'PAPAC') THEN NVL(A.INV_USD_AMT, 0) ELSE 0 END) --PSO_CNL_AMT
                                ) END) PSO_TTL_EXP
#if (${f_yrtype} == 'W')
              , ( CASE WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0 -- MIN MAX로 변경 20150401
#else
              , ( CASE WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0 -- MIN MAX로 변경 20150401
#end
                       -- VVD별로 MAS 쪽에 YARD 하나라도 누락인 것을 찾아야함.
                       THEN 0 
                       ELSE SUM(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) END) TTL_EXP

#if (${f_yrtype} == 'W')
              , ( CASE WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.SLS_YRMON, A.COST_WK, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0  -- MIN MAX로 변경 20150401
#else
              , ( CASE WHEN MAX(NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0)) OVER (PARTITION BY A.COST_YRMON, A.SLAN_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) = 0  -- MIN MAX로 변경 20150401
#end
                       -- VVD별로 MAS 쪽에 YARD 하나라도 누락인 것을 찾아야함.
                       THEN 0 
                       ELSE SUM(NVL(A.PORT_ORG_AMT, 0)) END) TTL_EXP2
                       
              , MAX(PRE_VVD_SEQ) PRE_VVD_SEQ
           FROM (SELECT A1.COST_YRMON
                      , A1.SLS_YRMON
                      , A1.COST_WK
                      , A1.SLAN_CD
                      , A1.VSL_CD
                      , A1.SKD_VOY_NO
                      , A1.DIR_CD
				      , (SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03217' AND INTG_CD_VAL_CTNT = A3.HUL_BND_CD) HUL_BND_CD
                      , A5.TML_CD
                      , A4.YD_CD
                      , A6.WRK_DT
                      , A6.WRK_SEQ
                      , LAST_VALUE (A6.WRK_DT IGNORE NULLS) OVER (PARTITION BY A1.VSL_CD, A1.SKD_VOY_NO, A1.DIR_CD ORDER BY A6.WRK_DT, A6.WRK_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED
                        FOLLOWING) LST_WRK_DT
                      , LAST_VALUE (A6.WRK_SEQ IGNORE NULLS) OVER (PARTITION BY A1.VSL_CD, A1.SKD_VOY_NO, A1.DIR_CD ORDER BY A6.WRK_DT, A6.WRK_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED
                        FOLLOWING) LST_WRK_SEQ
                      , A6.INV_USD_AMT
                      , CASE WHEN A4.TURN_PORT_FLG = 'N' AND A4.TURN_PORT_IND_CD = 'N' THEN 1 
                             WHEN A1.SLAN_CD IN ('IMU','PM1','PSG','HPM','CPM') THEN 1
                             ELSE 0.5
                        END PORT_RTO
                      , A5.PORT_USD_AMT
                      , A5.CNL_USD_AMT
                      , A5.PORT_ORG_AMT
                      , (NVL(A5.CHN_PORT_ADD_AMT, 0) + NVL(A5.ITA_PORT_ADD_AMT, 0)) PORT_ADD_AMT
                      , A6.SRC_PSO_BZTP_CD
                      , (SELECT MIN(COST_YRMON||COST_WK) KEEP(DENSE_RANK LAST ORDER BY COST_YRMON, COST_WK)
                           FROM MAS_MON_VVD A,
                                MAS_VSL_RGST B
                          WHERE A.SLAN_CD = A1.SLAN_CD
                            AND A.VSL_CD = A1.VSL_CD
                            AND A.DIR_CD = A1.DIR_CD
                            AND SUBSTR(COST_YRMON, 1, 4)||COST_WK < SUBSTR(A1.COST_YRMON, 1, 4)||A1.COST_WK
                            AND A.DELT_FLG = 'N'
                            AND A.SUB_TRD_CD <> 'IP'
                            AND A.VSL_CD   = B.VSL_CD
                            AND B.VOP_CD   = 'SML'
                            AND TO_CHAR(A.N1ST_LODG_PORT_ETD_DT, 'YYYYMMDD') 
                                 BETWEEN NVL(TO_CHAR(B.VSL_APLY_FM_DT, 'YYYYMMDD'), '19000101') 
                                     AND NVL(TO_CHAR(B.VSL_APLY_TO_DT, 'YYYYMMDD'), '99991231')) PRE_VVD_SEQ
                  FROM (
                        SELECT COST_YRMON,SLS_YRMON,COST_WK,TRD_CD,RLANE_CD,SLAN_CD,IOC_CD,VSL_CD,SKD_VOY_NO,DIR_CD,N1ST_LODG_PORT_ETD_DT
                          FROM MAS_MON_VVD A
                         WHERE 1=1
#if (${f_yrtype} == 'W')
                           AND SLS_YRMON  LIKE @[f_year] || '%'
                           AND COST_WK         = @[f_fm_wk]
#else
                           AND COST_YRMON      = @[f_year]||@[f_fm_mon]
#end
#if (${f_selslane} != '')
                           AND SLAN_CD         = @[f_selslane]
#end
#if (${f_selrlane} != '')
                           AND RLANE_CD        = @[f_selrlane]
#end
                           AND VSL_CD          = nvl(@[f_vsl_cd],     VSL_CD)
                           AND SKD_VOY_NO      = nvl(@[f_skd_voy_no], SKD_VOY_NO)
                           AND DIR_CD          = nvl(@[f_dir_cd],     DIR_CD)                    
                    
                           AND SUB_TRD_CD    != 'IP'
                           AND NVL(DELT_FLG, 'N') = 'N'
                           AND (COST_YRMON,SLAN_CD,IOC_CD,VSL_CD,SKD_VOY_NO,DIR_CD,COST_WK) 
                                  IN (SELECT COST_YRMON,SLAN_CD,IOC_CD,VSL_CD,SKD_VOY_NO,DIR_CD,MAX(COST_WK)
                                        FROM MAS_MON_VVD
                                       WHERE 1=1
#if (${f_yrtype} == 'W')
                                         AND SLS_YRMON  LIKE @[f_year] || '%'
                                         AND COST_WK         = @[f_fm_wk]
#else
                                         AND COST_YRMON      = @[f_year]||@[f_fm_mon]
#end
#if (${f_selslane} != '')
                                         AND SLAN_CD         = @[f_selslane]
#end
#if (${f_selrlane} != '')
                                         AND RLANE_CD        = @[f_selrlane]
#end
                                         AND VSL_CD          = nvl(@[f_vsl_cd],     VSL_CD)
                                         AND SKD_VOY_NO      = nvl(@[f_skd_voy_no], SKD_VOY_NO)
                                         AND DIR_CD          = nvl(@[f_dir_cd],     DIR_CD)     
                                         AND SUB_TRD_CD    != 'IP'
                                         AND NVL(DELT_FLG, 'N') = 'N'
                                       GROUP BY COST_YRMON,SLAN_CD,IOC_CD,VSL_CD,SKD_VOY_NO,DIR_CD
                                     )                   
                        ) A1
                      , MAS_VSL_RGST A2
                      , MAS_LANE_RGST A3
                      , VSK_VSL_PORT_SKD A4
                      , MAS_PORT_TRF A5
                      , PSO_TGT_VVD_EXPN A6
                  WHERE NVL(A3.DELT_FLG, 'N') = 'N'
                    AND A1.VSL_CD          = A2.VSL_CD
                    AND A2.VOP_CD          = 'SML'
                    AND A1.TRD_CD          = A3.TRD_CD
                    AND A1.RLANE_CD        = A3.RLANE_CD
                    AND A1.IOC_CD          = A3.IOC_CD
                    AND A1.DIR_CD          = A3.DIR_CD
                    AND A3.TRD_CD         <> 'COM'
                    AND A3.VSL_LANE_TP_CD IN ('JO', 'SC')
                    AND TO_CHAR(A1.N1ST_LODG_PORT_ETD_DT, 'YYYYMMDD') 
                        BETWEEN NVL(TO_CHAR(A2.VSL_APLY_FM_DT, 'YYYYMMDD'), '19000101') 
                            AND NVL(TO_CHAR(A2.VSL_APLY_TO_DT, 'YYYYMMDD'), '99991231')
                    AND A1.VSL_CD                    = A4.VSL_CD
                    AND A1.SKD_VOY_NO                = A4.SKD_VOY_NO
                    AND A1.DIR_CD                    = A4.SKD_DIR_CD
                    AND A1.SLAN_CD                   = A4.SLAN_CD
                    AND NVL(A4.SKD_CNG_STS_CD, 'N') <> 'S'
                    AND A4.SLAN_CD                   = A5.SLAN_CD(+)
                    AND A4.VSL_CD                    = A5.VSL_CD(+)
                    AND A4.SKD_VOY_NO                = A5.SKD_VOY_NO(+)
                    AND A4.SKD_DIR_CD                = A5.SKD_DIR_CD(+)
                    AND A4.YD_CD                     = A5.TML_CD(+)
                    AND A4.VSL_CD                    = A6.VSL_CD(+)
                    AND A4.SKD_VOY_NO                = A6.SKD_VOY_NO(+)
                    AND A4.SKD_DIR_CD                = A6.SKD_DIR_CD(+)
                    AND A4.YD_CD                     = A6.YD_CD(+)
                    AND A6.PSO_BZTP_CD(+)            = '7'
                ) A
          WHERE (A.WRK_DT IS NULL OR A.WRK_DT||A.WRK_SEQ = A.LST_WRK_DT||A.LST_WRK_SEQ)
       GROUP BY ( CASE WHEN NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0) <> 0 THEN 'C'
                       WHEN NVL(A.PORT_USD_AMT, 0)+NVL(A.CNL_USD_AMT, 0) = 0 AND NVL(A.INV_USD_AMT, 0) = 0 THEN 'N'
                       ELSE DECODE(A.SRC_PSO_BZTP_CD, 1, 'T', 2, 'E') END)
#if (${f_yrtype} == 'W')
              , A.SLS_YRMON
              , A.COST_WK
#else
              , A.COST_YRMON  
#end      
              , A.SLAN_CD
              , A.VSL_CD
              , A.SKD_VOY_NO
              , A.DIR_CD
              , A.PORT_ADD_AMT
              , A.PORT_ORG_AMT
              , A.PORT_USD_AMT
              , A.PORT_RTO
              , A.CNL_USD_AMT
              , A.TML_CD
              , A.YD_CD
              , A.WRK_DT
              , A.WRK_SEQ
              , A.INV_USD_AMT
              , A.SRC_PSO_BZTP_CD
        ) AA
  WHERE COST_STS IS NOT NULL
GROUP BY COST_STS
      , COST_YRMON
      , COST_WK
      , SLAN_CD
      , VSL_CD
      , SKD_VOY_NO
      , SKD_DIR_CD
      , HUL_BND_CD
      , PSO_MAX_SEQ
      , PRE_VVD_SEQ
ORDER BY COST_YRMON
      , COST_WK
      , SLAN_CD
      , VSL_CD
      , SKD_VOY_NO	  
      , SKD_DIR_CD
	  , HUL_BND_CD
      , PSO_MAX_SEQ			]]></sql>
			<params>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_selslane" type="12" value="" out="N"/>
				<param name="f_selrlane" type="12" value="" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
