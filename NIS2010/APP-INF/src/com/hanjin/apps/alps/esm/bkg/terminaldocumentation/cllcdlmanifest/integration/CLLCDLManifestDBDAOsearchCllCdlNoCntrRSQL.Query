<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CLLCDLManifestDBDAOsearchCllCdlNoCntrRSQL">
			<desc><![CDATA[searchCllCdlNoCntr
2013.02.19 장인호 [CHM-201322723] Tare Weight 보완]]></desc>
			<sql><![CDATA[
SELECT 
  QT.CNTR_NO,
  QT.TP CNTR_TPSZ_CD,
  QT.CNTR_SEAL_NO,
  QT.CNTR_WGT,
  --ROUND((round(nvl(QT.ACT_WGT,0) * decode(substr(QT.TP,2,1),'2',1,2) / QT.TOT) + 
   --decode(substr(QT.TP,2,1),'2',NVL(QT.CNTR_VOL_QTY,1)*2500,NVL(QT.CNTR_VOL_QTY,1)*4000))/1000) E_CNTR_WGT,

  --2013.02.19 장인호 추가 
  ROUND((round(nvl(QT.ACT_WGT,0) * decode(substr(QT.TP,2,1),'2',1,2) / QT.TOT) + 
   NVL(QT.CNTR_VOL_QTY,1)*decode(nvl(mst_tare,0), 0, decode(nvl(mdm_tare,0), 0, 2500, mdm_tare), mst_tare))/1000) E_CNTR_WGT,
  QT.PCK_QTY,
  QT.BKG_NO,
  QT.BL_NO,
  QT.BKG_POR POR_CD,
  QT.BKG_POL A_POL_CD,
  QT.BKG_POD A_POD_CD,
  QT.BKG_DEL DEL_CD,
  QT.BLCK_STWG_CD BLCK_STWG_CD,
  QT.RCV_TERM_CD,
  QT.DE_TERM_CD,
  QT.TS_CD,
  QT.FM BKG_CGO_TP_CD,
  QT.HOT_DE_FLG,
  QT.P_VVD VVD_CD,
  QT.CUST_NM,
  QT.SOC_FLG,
  QT.STWG_CD STWG_CD,
  QT.BLCK_STWG_HUB_LOC_CD,
  QT.HAMO_TRF_CD,
  ROWNUM SEQ,
  QT.CNTR_NO CNTR_NO2,   
  QT.PCK_TP_CD,
  QT.POR_NOD_CD,
  QT.POL_NOD_CD,
  QT.POD_NOD_CD,
  QT.DEL_NOD_CD,
  QT.CUST_TO_ORD_FLG,
  QT.POL_CD,
  QT.POL_YD_CD,
  QT.POD_CD,
  QT.POD_YD_CD,
  QT.MEAS_QTY,	
  QT.PRCT_FLG,
  QT.DG DCGO_FLG,
  QT.RF RC_FLG,
  QT.AK AWK_CGO_FLG,
  QT.ORG_YD_CD,
  QT.CNMV_EVNT_DT,
  QT.PREVVD1, 
  QT.PREVVD2, 
  QT.PREVVD3, 
  QT.PREVVD4,
  QT.TRUNKVVD, 
  QT.POSTVVD1, 
  QT.POSTVVD2, 
  QT.POSTVVD3, 
  QT.POSTVVD4,
  QT.PRE1POL, 
  QT.PRE2POL, 
  QT.PRE3POL, 
  QT.PRE4POL, 
  QT.POST1POL, 
  QT.POST2POL, 
  QT.POST3POL, 
  QT.POST4POL,
  QT.A_CNTR_WGT,
  QT.RD_CGO_FLG,
  QT.CSTMS_DESC
FROM ( 
       SELECT 
         NVL(QT.CNTR_NO,'T.B.N.'||ROWNUM) CNTR_NO,
         QT.TP,
         QT.BKG_NO,
         QT.BL_NO,
         QT.RCV_TERM_CD,
         QT.DE_TERM_CD,
         QT.CNTR_SEAL_NO,
         QT.CNTR_WGT,
         QT.ACT_WGT,
         QT.PCK_QTY,
         QT.CNTR_VOL_QTY,
         QT.TOT,
         QT.BKG_POR,
         QT.BKG_POL,
         QT.BKG_POD,
         QT.BKG_DEL,
         QT.FM,
         QT.DG,
         QT.RF,
         QT.AK,
         QT.SLAN_CD,
         QT.SKD_DIR_CD,
         QT.POL_CD,
         QT.PRCT_FLG,
         QT.STWG_CD,
         QT.BLCK_STWG_CD,
         QT.HOT_DE_FLG,
         QT.P_VVD,
         QT.CUST_NM,
         QT.SOC_FLG,
         QT.BLCK_STWG_HUB_LOC_CD,
         QT.HAMO_TRF_CD,
         QT.PCK_TP_CD,
         QT.POR_NOD_CD,
         QT.POL_NOD_CD,
         QT.POD_NOD_CD,
         QT.DEL_NOD_CD,
         QT.CUST_TO_ORD_FLG,
         QT.POL_YD_CD,
         QT.POD_CD,
         QT.POD_YD_CD,
         QT.MEAS_QTY,	
         QT.ORG_YD_CD,
         QT.CNMV_EVNT_DT,
         QT.PREVVD1, 
         QT.PREVVD2, 
         QT.PREVVD3, 
         QT.PREVVD4,
         QT.TRUNKVVD, 
         QT.POSTVVD1, 
         QT.POSTVVD2, 
         QT.POSTVVD3, 
         QT.POSTVVD4,
         QT.PRE1POL, 
         QT.PRE2POL, 
         QT.PRE3POL, 
         QT.PRE4POL, 
         QT.POST1POL, 
         QT.POST2POL, 
         QT.POST3POL, 
         QT.POST4POL,
         QT.A_CNTR_WGT,
         QT.TS_CD,
		 QT.RD_CGO_FLG,

		 --2013.02.19 장인호 추가
      (
        select max(nvl(spec.tare_wgt, 0)) mst_wgt
        from mst_container mst,
          mst_cntr_spec spec
        where mst.cntr_no = QT.CNTR_NO
          and mst.cntr_spec_no = spec.cntr_spec_no ) mst_tare,
      (
        select max(nvl(mdm.CNTR_TPSZ_TARE_WGT, 0)) mdm_wgt
        from mdm_cntr_tp_sz mdm
        where mdm.cntr_tpsz_cd = QT.TP ) mdm_tare

       , QT.CSTMS_DESC
       FROM ( 
          WITH COPY_T AS ( 
          SELECT ROWNUM NO
            FROM BKG_BOOKING
           WHERE ROWNUM<=1000 
           )
          SELECT 
            BKG_NO,
            BL_NO,
            CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CNTR_NO END CNTR_NO,
            RCV_TERM_CD,
            DE_TERM_CD,
            CNTR_SEAL_NO,
            CNTR_WGT,
            ACT_WGT,
            PCK_QTY,
            PCK_TP_CD,
            CNTR_VOL_QTY,
            TOT,
            BKG_POR,
            BKG_POL,
            BKG_POD,
            BKG_DEL,
            POR_NOD_CD,
            POL_NOD_CD,
            POD_NOD_CD,
            DEL_NOD_CD,
            POL_CD,
            POL_YD_CD,
            POD_CD,
            POD_YD_CD,
            MEAS_QTY,
            CUST_TO_ORD_FLG,
            TP,
            FM,
            NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CDG END,DG) DG,
            NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CRF END,RF) RF,
            NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CAK END,AK) AK,
            SLAN_CD ,
            SKD_DIR_CD ,
            PRCT_FLG,
            BLCK_STWG_HUB_LOC_CD,
            HAMO_TRF_CD,
            STWG_CD,
            A_CNTR_WGT,
            BLCK_STWG_CD,
            HOT_DE_FLG,
            P_VVD,
            CUST_NM,
            SOC_FLG,
            ORG_YD_CD,
            CNMV_EVNT_DT,
            PREVVD1, 
            PREVVD2, 
            PREVVD3, 
            PREVVD4,
            TRUNKVVD, 
            POSTVVD1, 
            POSTVVD2, 
            POSTVVD3, 
            POSTVVD4,
            PRE1POL, 
            PRE2POL, 
            PRE3POL, 
            PRE4POL, 
            POST1POL, 
            POST2POL, 
            POST3POL, 
            POST4POL,
            TS_CD,
			RD_CGO_FLG,
            CSTMS_DESC
          FROM ( 
            SELECT 
              BKG_NO,
              BL_NO,
              CNTR_SEAL_NO,
              CNTR_WGT,
              A_CNTR_WGT,
              ACT_WGT,
              PCK_QTY,
              PCK_TP_CD,
              CNTR_VOL_QTY,
              TOT,
              BKG_POR,
              BKG_POL,
              BKG_POD,
              BKG_DEL,
              POR_NOD_CD,
              POL_NOD_CD,
              POD_NOD_CD,
              DEL_NOD_CD,
              CUST_TO_ORD_FLG,
              TP,
              FM,
              DG,
              RF,
              AK,
              CNTR_QTY,
              SLAN_CD,
              SKD_DIR_CD,
              PRCT_FLG,
              STWG_CD,
              BLCK_STWG_CD,
              HOT_DE_FLG,
              P_VVD,
              BLCK_STWG_HUB_LOC_CD,
              HAMO_TRF_CD,
              CUST_NM,
              SOC_FLG,
              CNTR_NO,
              RCV_TERM_CD,
              DE_TERM_CD,
              POL_CD,
              POL_YD_CD,
              POD_CD,
              POD_YD_CD,
              MEAS_QTY,
              ORG_YD_CD,
              CNMV_EVNT_DT,
              PREVVD1, 
              PREVVD2, 
              PREVVD3, 
              PREVVD4,
              TRUNKVVD, 
              POSTVVD1, 
              POSTVVD2, 
              POSTVVD3, 
              POSTVVD4,
              PRE1POL, 
              PRE2POL, 
              PRE3POL, 
              PRE4POL, 
              POST1POL, 
              POST2POL, 
              POST3POL, 
              POST4POL,
              CDG,
              CRF,
              CAK,
              TS_CD,
			  RD_CGO_FLG,
              ROW_NUMBER() OVER (PARTITION BY BKG_NO, TP ORDER BY CNTR_NO) RN,
              COUNT(CNTR_NO) OVER (PARTITION BY BKG_NO, TP ) CNT,
              CSTMS_DESC
            FROM ( 
              SELECT 
                QTY.BKG_NO  BKG_NO,
                BKG.BL_NO||BKG.BL_TP_CD BL_NO,
               (  SELECT MIN(NVL(CNTR_SEAL_NO,'')) 
                  FROM BKG_CNTR_SEAL_NO SEAL 
                  WHERE CNTR.BKG_NO = SEAL.BKG_NO(+) 
                  AND CNTR.CNTR_NO = SEAL.CNTR_NO(+)
                  AND SEAL.CNTR_SEAL_SEQ = 1
               ) CNTR_SEAL_NO,
                ROUND(CNTR.CNTR_WGT/1000,0) CNTR_WGT,
                MAX(ROUND(CNTR.CNTR_WGT,0)) A_CNTR_WGT,
                DOC.ACT_WGT,
                CNTR.PCK_QTY,
                CNTR.PCK_TP_CD,
                CNTR.CNTR_VOL_QTY,
               (  SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,2,1),'2',1,2)) TOT 
                  FROM BKG_CONTAINER BC
                  WHERE BC.BKG_NO = BKG.BKG_NO
               ) TOT,
                BKG.POR_CD  BKG_POR,
                BKG.POL_CD  BKG_POL,
                BKG.POD_CD  BKG_POD,
                BKG.DEL_CD  BKG_DEL,
                SUBSTR(BKG.POR_NOD_CD,6,2) POR_NOD_CD,
                SUBSTR(BKG.POL_NOD_CD,6,2) POL_NOD_CD,
                SUBSTR(BKG.POD_NOD_CD,6,2) POD_NOD_CD,
                SUBSTR(BKG.DEL_NOD_CD,6,2) DEL_NOD_CD,
                VVD.POL_CD POL_CD,
                SUBSTR(VVD.POL_YD_CD,6,2) POL_YD_CD,
                VVD.POD_CD POD_CD,
                SUBSTR(VVD.POD_YD_CD,6,2) POD_YD_CD,
                BKG.CUST_TO_ORD_FLG,
                VVD.POD_CD  POD,
                QTY.CNTR_TPSZ_CD TP,
                NVL(BKG.BKG_CGO_TP_CD,' ') FM,
                BKG.DCGO_FLG     DG,
                BKG.RC_FLG  RF,
                BKG.AWK_CGO_FLG  AK,
                QTY.OP_CNTR_QTY  CNTR_QTY,
                VVD.SLAN_CD      SLAN_CD,
                VVD.SKD_DIR_CD   SKD_DIR_CD,
                PVVD.VSL_CD||PVVD.SKD_VOY_NO||PVVD.SKD_DIR_CD P_VVD,
                REPLACE(TRANSLATE(NVL(BCS.CUST_NM,' '),CHR(13)||CHR(10),' '),'''',' ') CUST_NM ,
                BKG.PRCT_FLG     PRCT_FLG,
                BKG.STWG_CD      STWG_CD,
                BKG.BLCK_STWG_CD      BLCK_STWG_CD,
                HOT_DE_FLG,
                '' BLCK_STWG_HUB_LOC_CD,
                CNTR.CNTR_NO     CNTR_NO,
                CNTR.DCGO_FLG    CDG,
                CNTR.RC_FLG      CRF,
                CNTR.AWK_CGO_FLG CAK,
                CNTR.MEAS_QTY*1000 MEAS_QTY,          
                NVL(CM.HAMO_TRF_CD,CM.CMDT_HS_CD) HAMO_TRF_CD,	
                CNTR.SOC_FLG,
                CNTR.RCV_TERM_CD,
                CNTR.DE_TERM_CD,
                (SELECT	/*+ INDEX_DESC(CTM_MOVEMENT XAK12CTM_MOVEMENT) */
                	nvl(ORG_YD_CD,' ') ORG_YD_CD
                 FROM	CTM_MOVEMENT
                 WHERE	CNTR_NO = CNTR.CNTR_NO
                 AND MVMT_STS_CD = 'OC'
                 AND	CNMV_YR = to_char(sysdate,'YYYY')
                 AND ROWNUM = 1
                ) ORG_YD_CD,
                (SELECT	/*+ INDEX_DESC(CTM_MOVEMENT XAK12CTM_MOVEMENT) */
                	to_char(CNMV_EVNT_DT,'YYYY-MM-DD HH24:MI:SS') CNMV_EVNT_DT
                 FROM	CTM_MOVEMENT
                 WHERE	CNTR_NO = CNTR.CNTR_NO
                 AND MVMT_STS_CD = 'OC'
                 AND	CNMV_YR = to_char(sysdate,'YYYY')
                 AND ROWNUM = 1
                ) CNMV_EVNT_DT,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'1',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) PREVVD1,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'2',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) PREVVD2,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'3',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) PREVVD3,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'4',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) PREVVD4,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'1',BKGVVD.POL_CD))) PRE1POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'2',BKGVVD.POL_CD))) PRE2POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'3',BKGVVD.POL_CD))) PRE3POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'S',DECODE(BKGVVD.VSL_SEQ,'4',BKGVVD.POL_CD))) PRE4POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'T',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD)) TRUNKVVD,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'1',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) POSTVVD1,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'2',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) POSTVVD2,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'3',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) POSTVVD3,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'4',BKGVVD.VSL_CD||BKGVVD.SKD_VOY_NO||BKGVVD.SKD_DIR_CD))) POSTVVD4,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'1',BKGVVD.POL_CD))) POST1POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'2',BKGVVD.POL_CD))) POST2POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'3',BKGVVD.POL_CD))) POST3POL,
                MAX(DECODE(BKGVVD.VSL_PRE_PST_CD,'U',DECODE(BKGVVD.VSL_SEQ,'4',BKGVVD.POL_CD))) POST4POL,
                DECODE(BKG.POL_CD,VVD.POL_CD,'L','T') TS_CD,
				MAX(CNTR.RD_CGO_FLG) RD_CGO_FLG,
                MAX(DOC.CSTMS_DESC) CSTMS_DESC
              FROM BKG_VVD  VVD, 
                   BKG_VVD BKGVVD,  
                   BKG_VVD PVVD, 
                   BKG_BOOKING   BKG, 
                   BKG_BL_DOC    DOC, 
                   BKG_QUANTITY  QTY, 
                   --TRS_BLCK_STWG_DEST TBSD, 
                   BKG_CNTR_MF_DESC CM,
                   BKG_CONTAINER CNTR,
                   BKG_CUSTOMER BCS
             WHERE VVD.VSL_CD     = SUBSTR(@[in_vvd_cd],1,4)
               AND VVD.SKD_VOY_NO = SUBSTR(@[in_vvd_cd],5,4)
               AND VVD.SKD_DIR_CD = SUBSTR(@[in_vvd_cd],9,1)
               AND VVD.POL_CD = @[in_pol_cd]
		#if (${in_pol_yd_cd} != '' ) 
               AND SUBSTR(VVD.POL_YD_CD,6,2) = @[in_pol_yd_cd]
		#end
		#if (${in_pod_cd} != '' ) 
               AND VVD.POD_CD LIKE @[in_pod_cd]||'%'
		#end
		#if (${in_pod_yd_cd} != '' ) 
               AND SUBSTR(VVD.POD_YD_CD,6,2) = @[in_pod_yd_cd]
		#end
		#if (${pol_split_no} != '')  -- Add. 2015.02.09.  CHM-201533845 
			   AND NVL(VVD.POL_CLPT_IND_SEQ,'1') = @[pol_split_no] 
		#end
		#if (${pod_split_no} != '')  -- Add. 2015.02.09.  CHM-201533845 
			   AND NVL(VVD.POD_CLPT_IND_SEQ,'1') = @[pod_split_no]
		#end
		#if (${in_pol_ts} != '' ) 
               AND DECODE(BKG.POL_CD,VVD.POL_CD,'L','T') = @[in_pol_ts]
		#end
               AND VVD.BKG_NO = BKG.BKG_NO
               AND BKG.BKG_STS_CD  <> 'X'
               AND BKG.BKG_NO  = DOC.BKG_NO
               AND BKG.BKG_NO  = QTY.BKG_NO
               AND QTY.CNTR_TPSZ_CD NOT LIKE 'Q%'
               AND QTY.BKG_NO  = CNTR.BKG_NO(+)
               AND QTY.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD(+) 
               --AND BKG.POD_CD = TBSD.BLCK_STWG_PORT_LOC_CD (+)
               --AND BKG.DEL_CD = TBSD.BLCK_STWG_DEST_LOC_CD (+)
               AND VVD.BKG_NO = PVVD.BKG_NO (+)
               AND PVVD.POD_CD (+) = @[in_pol_cd]
			   AND PVVD.VSL_PRE_PST_CD(+) || PVVD.VSL_SEQ(+) < VVD.VSL_PRE_PST_CD || VVD.VSL_SEQ
               AND CNTR.BKG_NO = CM.BKG_NO (+)	
               AND CNTR.CNTR_NO = CM.CNTR_NO (+)	
               AND CM.CNTR_MF_SEQ (+) = 1	
               AND BKG.BKG_NO = BKGVVD.BKG_NO
               AND BKG.BKG_NO = BCS.BKG_NO
               AND BCS.BKG_CUST_TP_CD = 'S'
	#if (${in_ofc_cd_type} == 'B' ) 
		#if (${in_ofc_cd} != '' ) 
			AND BKG.BKG_OFC_CD = @[in_ofc_cd]
		#end
	#else 
		#if (${in_ofc_cd} != '' ) 
			AND BKG.OB_SLS_OFC_CD = @[in_ofc_cd]
		#end
	#end
	#if (${in_bkg_sts_cd} == 'A' )
		AND NVL(BKG.BKG_STS_CD,' ') NOT IN ('X','A')
	#else
		#if (${in_bkg_sts_cd} != '' ) 
			AND BKG.BKG_STS_CD = @[in_bkg_sts_cd]
		#end
	#end
	#if (${in_bkg_cgo_tp_cd} != '' && ${in_bkg_cgo_tp_cd} != 'A' ) 
		AND BKG.BKG_CGO_TP_CD IN (${in_bkg_cgo_tp_cd})
	#end
	#if (${in_cntr_cfm_flg} != '' ) 
		AND CNTR.CNTR_CFM_FLG = @[in_cntr_cfm_flg]
	#end
	#if (${in_cntr_tpsz_cd} != '' ) 
		AND CNTR.CNTR_TPSZ_CD IN (${in_cntr_tpsz_cd})
	#end
	#if (${in_por_cd} != '' ) 
		AND BKG.POR_CD LIKE @[in_por_cd]||'%'
	#end
	#if (${in_del_cd} != '' ) 
		AND BKG.DEL_CD LIKE @[in_del_cd]||'%'
	#end
	#if (${in_rcv_term_cd} != '' ) 
		AND CNTR.RCV_TERM_CD IN (${in_rcv_term_cd})
	#end
	#if (${in_de_term_cd} != '' ) 
		AND CNTR.DE_TERM_CD IN (${in_de_term_cd})
	#end
	#if (${in_org_trns_svd_mod_cd} != '' ) 
		AND BKG.ORG_TRNS_SVC_MOD_CD IN (${in_org_trns_svd_mod_cd})
	#end
	#if (${in_dest_trns_svc_mod_cd} != '' ) 
		AND BKG.DEST_TRNS_SVC_MOD_CD IN (${in_dest_trns_svc_mod_cd})
	#end
	#if (${in_dcgo_flg} == '' && ${in_rc_flg} == '' && ${in_awk_cgo_flg} == '' && ${in_bb_cgo_flg} == '' && ${in_stwg_cd} == '' && ${in_hot_de_flg} == '' && ${in_rd_cgo_flg} == '' && ${in_soc_flg} == '' && ${in_prct_flg} == '' )
		AND '1' = '1'
	#else
		AND ( '1' = '2' 
		#if (${in_dcgo_flg} != '' ) 
			OR CNTR.DCGO_FLG = @[in_dcgo_flg]
		#end
		#if (${in_rc_flg} != '' ) 
			OR CNTR.RC_FLG = @[in_rc_flg]
		#end
		#if (${in_awk_cgo_flg} != '' ) 
			OR CNTR.AWK_CGO_FLG = @[in_awk_cgo_flg]
		#end
		#if (${in_bb_cgo_flg} != '' ) 
			OR CNTR.BB_CGO_FLG = @[in_bb_cgo_flg]
		#end
		#if (${in_stwg_cd} != '' ) 
			OR BKG.STWG_CD IS NOT NULL
		#end
		#if (${in_hot_de_flg} != '' ) 
			OR BKG.HOT_DE_FLG = @[in_hot_de_flg]
		#end
		#if (${in_rd_cgo_flg} != '' ) 
			OR CNTR.RD_CGO_FLG = @[in_rd_cgo_flg]
		#end
		#if (${in_soc_flg} != '' ) 
			OR CNTR.SOC_FLG = @[in_soc_flg]
		#end
		#if (${in_prct_flg} != '' ) 
			OR BKG.PRCT_FLG = @[in_prct_flg]
		#end
		)
	#end
	#if (${in_scc_cd} != '' ) 
		AND MDM.SCC_CD = @[in_scc_cd]
	#end
             GROUP BY QTY.BKG_NO,
                      QTY.CNTR_TPSZ_CD,
                      QTY.OP_CNTR_QTY,
                      BKG.BKG_NO,
                      BKG.BL_NO,
                      BKG.BL_TP_CD,
                      BKG.POR_CD,
                      BKG.POL_CD,
                      BKG.POD_CD,
                      BKG.DEL_CD,
                      BKG.POR_NOD_CD,
                      BKG.POL_NOD_CD,
                      BKG.POD_NOD_CD,
                      BKG.DEL_NOD_CD,
                      BKG.CUST_TO_ORD_FLG,
                      BKG.BKG_CGO_TP_CD,
                      BKG.DCGO_FLG,
                      BKG.RC_FLG,
                      BKG.PRCT_FLG,
                      BKG.STWG_CD,
                      BKG.HOT_DE_FLG,
                      BKG.AWK_CGO_FLG,
                      BKG.BLCK_STWG_CD,
                      BCS.CUST_NM,
                      DOC.ACT_WGT,
                      VVD.POL_CD,
                      VVD.POD_CD,
                      VVD.POL_YD_CD,
                      VVD.POD_YD_CD,
                      VVD.SLAN_CD,
                      VVD.SKD_DIR_CD,
                      CNTR.BKG_NO,
                      CNTR.CNTR_WGT,
                      CNTR.PCK_QTY,
                      CNTR.PCK_TP_CD,
                      CNTR.CNTR_VOL_QTY,
                      CNTR.SOC_FLG,
                      CNTR.RCV_TERM_CD,
                      CNTR.DE_TERM_CD,
                      CNTR.CNTR_NO,
                      CNTR.DCGO_FLG,
                      CNTR.RC_FLG,
                      CNTR.AWK_CGO_FLG,
                      CNTR.MEAS_QTY,
                      PVVD.VSL_CD,
                      PVVD.SKD_VOY_NO,
                      PVVD.SKD_DIR_CD,
                      CM.HAMO_TRF_CD,CM.CMDT_HS_CD
                      --TBSD.BLCK_STWG_HUB_LOC_CD

           ) 
        )      QTY, 
        COPY_T C
       WHERE 
             -- CNTR_QTY >= RN AND
             DECODE(QTY.RN,1,CNTR_QTY - DECODE(QTY.CNT,0,0,QTY.CNT-1)) >= C.NO(+) 
     )    QT, 
     MDM_CNTR_TP_SZ TP
    WHERE QT.TP = TP.CNTR_TPSZ_CD(+) 
	#if (${in_order_by_type} == '' ) 
		ORDER BY POL_CD, POD_CD, CNTR_NO, BKG_NO
	#else 
		ORDER BY ${in_order_by_type}
	#end
  )  QT			]]></sql>
			<params>
				<param name="in_vvd_cd" type="12" value="" out="N"/>
				<param name="in_pol_cd" type="12" value="" out="N"/>
				<param name="in_pol_yd_cd" type="12" value="" out="N"/>
				<param name="in_pod_cd" type="12" value="" out="N"/>
				<param name="in_pod_yd_cd" type="12" value="" out="N"/>
				<param name="pol_split_no" type="12" value="" out="N"/>
				<param name="pod_split_no" type="12" value="" out="N"/>
				<param name="in_pol_ts" type="12" value="" out="N"/>
				<param name="in_ofc_cd" type="12" value="" out="N"/>
				<param name="in_bkg_sts_cd" type="12" value="" out="N"/>
				<param name="in_cntr_cfm_flg" type="12" value="" out="N"/>
				<param name="in_por_cd" type="12" value="" out="N"/>
				<param name="in_del_cd" type="12" value="" out="N"/>
				<param name="in_dcgo_flg" type="12" value="" out="N"/>
				<param name="in_rc_flg" type="12" value="" out="N"/>
				<param name="in_awk_cgo_flg" type="12" value="" out="N"/>
				<param name="in_bb_cgo_flg" type="12" value="" out="N"/>
				<param name="in_hot_de_flg" type="12" value="" out="N"/>
				<param name="in_rd_cgo_flg" type="12" value="" out="N"/>
				<param name="in_soc_flg" type="12" value="" out="N"/>
				<param name="in_prct_flg" type="12" value="" out="N"/>
				<param name="in_scc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
