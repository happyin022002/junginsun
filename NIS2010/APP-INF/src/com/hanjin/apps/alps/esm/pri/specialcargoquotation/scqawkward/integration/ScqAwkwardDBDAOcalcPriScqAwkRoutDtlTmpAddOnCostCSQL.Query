<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ScqAwkwardDBDAOcalcPriScqAwkRoutDtlTmpAddOnCostCSQL">
			<desc><![CDATA[PRI_SCQ_AWK_ROUT_DTL_TMP 의 POL - T/S1, T/S Last - POD 구간 - Cargo 별 
Add - On Cost 계산 및 결과 생성]]></desc>
			<sql><![CDATA[
INSERT INTO PRI_SCQ_AWK_ROUT_DTL_TMP
(       SCQ_RQST_NO
    ,   SCQ_VER_NO
    ,   ROUT_SEQ
    ,   ROUT_COST_SEQ
    ,   ROUT_COST_DTL_SEQ
    ,   COST_TP_CD
    ,   FM_YD_CD
    ,   TO_YD_CD
    ,   CGO_SEQ
    ,   CNTR_QTY
    ,   USD_AMT
    ,   SPCL_CGO_REF_SEQ
    ,   CRE_USR_ID
    ,   CRE_DT
    ,   UPD_USR_ID
    ,   UPD_DT
)    
WITH
ROUT_CS AS (
        SELECT
                DECODE ( ROUT_TP_CD, 'L', N_ROUT_SEQ, 'P', B_ROUT_SEQ ) AS ROUT_SEQ
            ,   'N' AS ROUT_TP_CD
            ,   ROUT_TP_CD AS ORG_ROUT_TP_CD
            ,   DECODE ( ROUT_TP_CD, 'L', N_ROUT_TP_SEQ, 'P', B_ROUT_TP_SEQ ) AS ROUT_TP_SEQ
            ,   DECODE ( ROUT_TP_CD, 'L', OB_YD_CD, 'P', B_OB_YD_CD ) AS IB_YD_CD
            ,   DECODE ( ROUT_TP_CD, 'L', N_IB_YD_CD, 'P', IB_YD_CD ) AS OB_YD_CD
        FROM
            (   SELECT  ROUT_SEQ,
                        ROUT_TP_CD,
                        IB_YD_CD,
                        OB_YD_CD,
                        LEAD ( ROUT_SEQ ) OVER ( ORDER BY ROUT_SEQ ) N_ROUT_SEQ,
                        LAG ( ROUT_SEQ ) OVER ( ORDER BY ROUT_SEQ ) B_ROUT_SEQ,
                        LEAD ( ROUT_TP_CD ) OVER ( ORDER BY ROUT_SEQ ) N_ROUT_TP_CD,
                        LAG ( ROUT_TP_CD ) OVER ( ORDER BY ROUT_SEQ ) B_ROUT_TP_CD,
                        LEAD ( ROUT_TP_SEQ ) OVER ( ORDER BY ROUT_SEQ ) N_ROUT_TP_SEQ,
                        LAG ( ROUT_TP_SEQ ) OVER ( ORDER BY ROUT_SEQ ) B_ROUT_TP_SEQ,
                        LEAD ( IB_YD_CD ) OVER ( ORDER BY ROUT_SEQ ) N_IB_YD_CD,
                        LEAD ( OB_YD_CD ) OVER ( ORDER BY ROUT_SEQ ) N_OB_YD_CD,
                        LAG ( IB_YD_CD ) OVER ( ORDER BY ROUT_SEQ ) B_IB_YD_CD,
                        LAG ( OB_YD_CD ) OVER ( ORDER BY ROUT_SEQ ) B_OB_YD_CD
                FROM    PRI_SCQ_AWK_ROUT_TMP A
                WHERE   A.SCQ_RQST_NO = @[scq_rqst_no]
                AND     A.SCQ_VER_NO = @[scq_ver_no_tmp] )
        WHERE (  ROUT_TP_CD = 'L' AND N_ROUT_TP_CD = 'N' )
        OR    (  ROUT_TP_CD = 'P' AND B_ROUT_TP_CD = 'N' )
)           
, ROUT_PRIORITY_LIST AS (
    SELECT  B.ROUT_SEQ, B.ROUT_TP_CD, B.ORG_ROUT_TP_CD
        ,   B.IB_YD_CD, B.OB_YD_CD
        ,   A.FM_LOC_CD, A.FM_NOD_YD_NO
        ,   A.TO_LOC_CD, A.TO_NOD_YD_NO
        ,   A.COND_NO
        ,   MAX ( A.TML_AWK_ADON_VER_NO ) AS MAX_VER_NO
        ,   CASE WHEN LENGTH ( B.IB_YD_CD ) = 7 AND LENGTH ( B.OB_YD_CD ) = 7 THEN
                CASE WHEN A.FM_NOD_YD_NO <> ' ' AND A.TO_NOD_YD_NO <> ' ' THEN 4
                     WHEN A.FM_NOD_YD_NO <> ' ' AND A.TO_NOD_YD_NO = ' ' THEN 3
                     WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO <> ' ' THEN 2
                     WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO = ' ' THEN 1 ELSE 0 END 
            WHEN LENGTH ( B.IB_YD_CD ) = 5 AND LENGTH ( B.OB_YD_CD ) = 7 THEN 
                CASE WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO <> ' ' THEN 1 ELSE 0 END          
            WHEN LENGTH ( B.IB_YD_CD ) = 7 AND LENGTH ( B.OB_YD_CD ) = 5 THEN 
                CASE WHEN A.FM_NOD_YD_NO <> ' ' AND A.TO_NOD_YD_NO = ' ' THEN 1 ELSE 0 END          
            WHEN LENGTH ( B.IB_YD_CD ) = 5 AND LENGTH ( B.OB_YD_CD ) = 5 THEN 
                CASE WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO = ' ' THEN 1 ELSE 0 END  
            ELSE 0 END AS PRIORITY  
        ,   MAX ( CASE WHEN LENGTH ( B.IB_YD_CD ) = 7 AND LENGTH ( B.OB_YD_CD ) = 7 THEN
                CASE WHEN A.FM_NOD_YD_NO <> ' ' AND A.TO_NOD_YD_NO <> ' ' THEN 4
                     WHEN A.FM_NOD_YD_NO <> ' ' AND A.TO_NOD_YD_NO = ' ' THEN 3
                     WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO <> ' ' THEN 2
                     WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO = ' ' THEN 1 ELSE 0 END 
            WHEN LENGTH ( B.IB_YD_CD ) = 5 AND LENGTH ( B.OB_YD_CD ) = 7 THEN 
                CASE WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO <> ' ' THEN 1 ELSE 0 END          
            WHEN LENGTH ( B.IB_YD_CD ) = 7 AND LENGTH ( B.OB_YD_CD ) = 5 THEN 
                CASE WHEN A.FM_NOD_YD_NO <> ' ' AND A.TO_NOD_YD_NO = ' ' THEN 1 ELSE 0 END          
            WHEN LENGTH ( B.IB_YD_CD ) = 5 AND LENGTH ( B.OB_YD_CD ) = 5 THEN 
                CASE WHEN A.FM_NOD_YD_NO = ' ' AND A.TO_NOD_YD_NO = ' ' THEN 1 ELSE 0 END  
            ELSE 0 END ) OVER ( PARTITION BY B.ROUT_SEQ, B.ORG_ROUT_TP_CD ) AS MAX_PRIORITY
    FROM    TES_AWK_CGO_ADON_HDR A, ROUT_CS B
    WHERE   A.FM_LOC_CD = SUBSTR ( B.IB_YD_CD, 1, 5 ) AND ( A.FM_NOD_YD_NO = ' ' OR  A.FM_NOD_YD_NO = SUBSTR ( B.IB_YD_CD, 6, 2 ) )
    AND     A.TO_LOC_CD = SUBSTR ( B.OB_YD_CD, 1, 5 ) AND ( A.TO_NOD_YD_NO = ' ' OR  A.TO_NOD_YD_NO = SUBSTR ( B.OB_YD_CD, 6, 2 ) )
--  AND     A.COND_NO <> '0'
    GROUP   BY B.ROUT_SEQ, B.ROUT_TP_CD, B.ORG_ROUT_TP_CD, B.IB_YD_CD, B.OB_YD_CD, A.FM_LOC_CD, A.FM_NOD_YD_NO, A.TO_LOC_CD, A.TO_NOD_YD_NO, A.COND_NO

)
, MAX_COND_LIST AS (
    SELECT  A.ROUT_SEQ, A.ROUT_TP_CD, A.ORG_ROUT_TP_CD, A.IB_YD_CD, A.OB_YD_CD
        ,   A.FM_LOC_CD, A.FM_NOD_YD_NO, A.TO_LOC_CD, A.TO_NOD_YD_NO, A.COND_NO, A.MAX_VER_NO
    FROM    ROUT_PRIORITY_LIST A
    WHERE   A.PRIORITY = A.MAX_PRIORITY
)
,  DIST_COND_LIST AS (
    SELECT DISTINCT  COND_NO FROM MAX_COND_LIST     
)   
, CGO_COND_CHK_LIST AS ( 
    SELECT  A.CGO_SEQ, A.CNTR_TPSZ_CD, A.CNTR_QTY, B.COND_NO
        ,   PRI_SCQ_CGO_COND_CHK_FNC ( B.COND_NO, @[scq_rqst_no], @[scq_ver_no_tmp], A.CGO_SEQ ) COND_CHK_RSLT
    FROM    PRI_SCQ_AWK_CGO_TMP A, DIST_COND_LIST B
    WHERE   A.SCQ_RQST_NO = @[scq_rqst_no]
    AND     A.SCQ_VER_NO  = @[scq_ver_no_tmp] 
    
)
, MAX_AMT_LIST AS (
    SELECT
            A.ROUT_SEQ, A.ROUT_TP_CD, A.ORG_ROUT_TP_CD, A.IB_YD_CD, A.OB_YD_CD
        ,   A.FM_LOC_CD, A.FM_NOD_YD_NO, A.TO_LOC_CD, A.TO_NOD_YD_NO
        ,   B.CGO_SEQ, B.CNTR_QTY
        ,   C.USD_AMT, C.SPCL_CGO_REF_SEQ
        ,   MAX ( C.USD_AMT ) OVER ( PARTITION BY A.ROUT_SEQ, A.ROUT_TP_CD, A.ORG_ROUT_TP_CD, A.IB_YD_CD, A.OB_YD_CD, B.CGO_SEQ ) AS MAX_USD_AMT
        ,   A.COND_NO, A.MAX_VER_NO
    FROM    MAX_COND_LIST A
        ,   CGO_COND_CHK_LIST B
        ,   TES_AWK_CGO_ADON_TP_SZ C
    WHERE   A.COND_NO = B.COND_NO 
    AND     B.COND_CHK_RSLT = 1   
    AND     A.FM_LOC_CD = C.FM_LOC_CD
    AND     A.FM_NOD_YD_NO = C.FM_NOD_YD_NO
    AND     A.TO_LOC_CD = C.TO_LOC_CD
    AND     A.TO_NOD_YD_NO = C.TO_NOD_YD_NO
    AND     A.FM_LOC_CD = C.FM_LOC_CD
    AND     A.FM_LOC_CD = C.FM_LOC_CD
    AND     A.COND_NO = C.COND_NO
    AND     A.MAX_VER_NO = C.TML_AWK_ADON_VER_NO    
    AND     C.CNTR_SZ_CD = DECODE ( SIGN ( INSTR ( B.CNTR_TPSZ_CD, '2' ) ), 1, '2', '4' )
    
)
SELECT  @[scq_rqst_no], @[scq_ver_no_tmp], A.ROUT_SEQ
    ,   PRI_SCQ_AWK_COST_SEQ_FNC ( A.ROUT_TP_CD, 'A', '' ) AS ROUT_COST_SEQ
    ,   ROW_NUMBER ( ) OVER ( PARTITION BY A.ROUT_SEQ  ORDER BY A.ORG_ROUT_TP_CD, A.CGO_SEQ ) AS ROUT_COST_DTL_SEQ
    ,   'A' AS COST_TP_CD, A.FM_LOC_CD||A.FM_NOD_YD_NO AS FM_YD_CD, A.TO_LOC_CD||A.TO_NOD_YD_NO AS TO_YD_CD, A.CGO_SEQ, A.CNTR_QTY, A.USD_AMT
    ,   MAX ( A.SPCL_CGO_REF_SEQ )  AS MAX_SPCL_CGO_REF_SEQ
    ,   @[cre_usr_id], SYSDATE, @[cre_usr_id], SYSDATE
FROM     MAX_AMT_LIST A
WHERE    A.USD_AMT = A.MAX_USD_AMT
GROUP   BY A.ROUT_SEQ, A.ROUT_TP_CD, A.ORG_ROUT_TP_CD,  A.FM_LOC_CD, A.FM_NOD_YD_NO, A.TO_LOC_CD, A.TO_NOD_YD_NO, A.CGO_SEQ, A.CNTR_QTY, A.USD_AMT
ORDER   BY A.ROUT_SEQ, A.ROUT_TP_CD, A.ORG_ROUT_TP_CD,  A.FM_LOC_CD, A.FM_NOD_YD_NO, A.TO_LOC_CD, A.TO_NOD_YD_NO, A.CGO_SEQ			]]></sql>
			<params>
				<param name="scq_rqst_no" type="12" value="" out="N"/>
				<param name="scq_ver_no_tmp" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
