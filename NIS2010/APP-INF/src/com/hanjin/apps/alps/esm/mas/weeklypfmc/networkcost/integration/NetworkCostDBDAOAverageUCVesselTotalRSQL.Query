<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOAverageUCVesselTotalRSQL">
			<desc><![CDATA[Average U/C_Vessel Pooling1 (OP Fixed cost) 의 sheetObjects[10] -> Total 탭의 결과조회]]></desc>
			<sql><![CDATA[
SELECT COST_YRMON,		
       DECODE(LVL,1,VSL_CD,'XXXX') AS VSL_CD,		
       VSL_CLSS_CAPA,		
       NVL(MAX(DECODE(LVL,1,CRE_AMT,AVG_CRE_AMT)),0) AS CRE_AMT,		
       NVL(MAX(DECODE(LVL,1,INS_AMT,AVG_INS_AMT)),0) AS INS_AMT,		
       NVL(MAX(DECODE(LVL,1,STO_AMT,AVG_STO_AMT)),0) AS STO_AMT,		
       NVL(MAX(DECODE(LVL,1,LUB_AMT,AVG_LUB_AMT)),0) AS LUB_AMT,		
       NVL(MAX(DECODE(LVL,1,MNR_AMT,AVG_MNR_AMT)),0) AS MNR_AMT,		
       NVL(MAX(DECODE(LVL,1,DEP_AMT,AVG_DEP_AMT)),0) AS DEP_AMT,		
       NVL(MAX(DECODE(LVL,1,TEL_AMT,AVG_TEL_AMT)),0) AS TEL_AMT,		
       NVL(MAX(DECODE(LVL,1,VSL_AMT,AVG_VSL_AMT)),0) AS VSL_AMT,		
       NVL(MAX(DECODE(LVL,1,OTR_AMT,AVG_OTR_AMT)),0) AS OTR_AMT,		
       NVL(MAX(DECODE(LVL,1,TIM_AMT,AVG_TIM_AMT)),0) AS TIM_AMT,		
       NVL(MAX(DECODE(LVL,1,TTL_AMT,AVG_TTL_AMT)),0) AS TTL_AMT		
  FROM (		
        SELECT COST_YRMON,		
               VSL_CD,		
               VSL_CLSS_CAPA, 		
               CRE_AMT, --CREW EXPENSE		
               AVG(DECODE(CRE_AMT,0,NULL,CRE_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_CRE_AMT,		
               INS_AMT, --INSURANCE		
               AVG(DECODE(INS_AMT,0,NULL,INS_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_INS_AMT,		
               STO_AMT, --STORE SUPPLY EXP		
               AVG(DECODE(STO_AMT,0,NULL,STO_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_STO_AMT,		
               LUB_AMT, --LUBRICANT EXP		
               AVG(DECODE(LUB_AMT,0,NULL,LUB_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_LUB_AMT,		
               MNR_AMT, --VESSEL M&R		
               AVG(DECODE(MNR_AMT,0,NULL,MNR_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_MNR_AMT,		
               DEP_AMT, --DEPRECIATIONS		
               AVG(DECODE(DEP_AMT,0,NULL,DEP_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_DEP_AMT,		
               TEL_AMT, --TELECOM EXP		
               AVG(DECODE(TEL_AMT,0,NULL,TEL_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_TEL_AMT,		
               VSL_AMT, --VESSEL INTEREST		
               AVG(DECODE(VSL_AMT,0,NULL,VSL_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_VSL_AMT,		
               OTR_AMT, --OTHER OPERATION EXP		
               AVG(DECODE(OTR_AMT,0,NULL,OTR_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_OTR_AMT,		
               TIM_AMT, --TIME CHARTERAGE		
               AVG(DECODE(TIM_AMT,0,NULL,TIM_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_TIM_AMT,		
               TTL_AMT,		
               AVG(DECODE(TTL_AMT,0,NULL,TTL_AMT)) OVER(PARTITION BY COST_YRMON,VSL_CLSS_CAPA) AS AVG_TTL_AMT,		
               LVL		
          FROM (		
                SELECT 		
                       COST_YRMON,		
                       VSL_CD,		
                       VSL_CLSS_CAPA, 		
                       NVL(SUM(CRE_AMT),0) AS CRE_AMT, --CREW EXPENSE		
                       NVL(SUM(INS_AMT),0) AS INS_AMT, --INSURANCE		
                       NVL(SUM(STO_AMT),0) AS STO_AMT, --STORE SUPPLY EXP		
                       NVL(SUM(LUB_AMT),0) AS LUB_AMT, --LUBRICANT EXP		
                       NVL(SUM(MNR_AMT),0) AS MNR_AMT, --VESSEL M&R		
                       NVL(SUM(DEP_AMT),0) AS DEP_AMT, --DEPRECIATIONS		
                       NVL(SUM(TEL_AMT),0) AS TEL_AMT, --TELECOM EXP		
                       NVL(SUM(VSL_AMT),0) AS VSL_AMT, --VESSEL INTEREST		
                       NVL(SUM(OTR_AMT),0) AS OTR_AMT, --OTHER OPERATION EXP		
                       NVL(SUM(TIM_AMT),0) AS TIM_AMT,  --TIME CHARTERAGE		
                       NVL(SUM(cre_amt),0) + NVL(SUM(ins_amt),0) +		
                       NVL(SUM(sto_amt),0) + NVL(SUM(lub_amt),0) +		
                       NVL(SUM(MNR_AMT),0) + NVL(SUM(dep_amt),0) +		
                       NVL(SUM(tel_amt),0) + NVL(SUM(vsl_amt),0) +		
                       NVL(SUM(otr_amt),0) + NVL(SUM(TIM_AMT),0) AS TTL_AMT,                       		
                       1 AS FLG1		
                  FROM (		
                        SELECT		
                              COST_YRMON,		
                		      VSL_CD,
                              VSL_CLSS_CAPA, 		
                              DECODE(STND_COST_CD,'54100000',DHIR_AMT,0) AS CRE_AMT, --CREW EXPENSE		
                              DECODE(STND_COST_CD,'54250000',DHIR_AMT,0) AS INS_AMT, --INSURANCE		
                              DECODE(STND_COST_CD,'54200000',DHIR_AMT,0) AS STO_AMT, --STORE SUPPLY EXP		
                              DECODE(STND_COST_CD,'54300000',DHIR_AMT,0) AS LUB_AMT, --LUBRICANT EXP		
                              DECODE(STND_COST_CD,'54150000',DHIR_AMT,0) AS MNR_AMT, --VESSEL M&R		
                              DECODE(STND_COST_CD,'54450000',DHIR_AMT,0) AS DEP_AMT, --DEPRECIATIONS		
                              DECODE(STND_COST_CD,'54180000',DHIR_AMT,0) AS TEL_AMT, --TELECOM EXP		
                              DECODE(STND_COST_CD,'72100000',DHIR_AMT,0) AS VSL_AMT, --VESSEL INTEREST		
                              DECODE(STND_COST_CD,'54550000',DHIR_AMT,0) AS OTR_AMT, --OTHER OPERATION EXP		
                              DECODE(STND_COST_CD,'54350000',DHIR_AMT,0) AS TIM_AMT  --TIME CHARTERAGE		
                          FROM MAS_POOL_VSL_DLY_HIR		
                         WHERE COST_YRMON BETWEEN @[f_fmyearmonth] AND @[f_toyearmonth] -- 변수 처리		
                           AND VSL_CD     != 'XXXX'		
                   	   )	
                 GROUP BY COST_YRMON,VSL_CD,VSL_CLSS_CAPA		
               ) A,		
               (SELECT ROWNUM LVL, 1 AS FLG2 FROM MAS_POOL_VSL_DLY_HIR WHERE ROWNUM < 3) B		
         WHERE A.FLG1 = B.FLG2		
       )		
 GROUP BY COST_YRMON,		
       DECODE(LVL,1,VSL_CD,'XXXX'),		
       VSL_CLSS_CAPA,		
       LVL		
 ORDER BY COST_YRMON,		
       VSL_CLSS_CAPA,		
       DECODE(LVL,1,VSL_CD,'XXXX')			]]></sql>
			<params>
				<param name="f_fmyearmonth" type="12" value="" out="N"/>
				<param name="f_toyearmonth" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
