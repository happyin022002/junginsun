<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOSearchUnmatchBLSettlementListRSQL">
			<desc><![CDATA[Unmatch BL Settelement Report 조회

[CHM-201539496] Error B/L Settlement Report 보완요청
KPI2항목 추가 : Error건중에 RDN이 발행된 건은 건수에서 제외 ]]></desc>
			<sql><![CDATA[
SELECT RCT_RHQ_CD, BKG_OFC_CD,
       S_B_CNT, S_B_STL_PRD,
       S_A_CNT, S_A_STL_PRD,
       S_M_CNT, S_M_STL_PRD,
       S_O_CNT, S_O_STL_PRD,
       S_C_CNT, S_C_STL_PRD,
       BL_S_CNT, BL_S_STL_PRD, BL_S_AVG_STL_PRD,
       BL_U_CNT, BL_U_STL_PRD, BL_U_AVG_STL_PRD,
       TTL_BL_CNT, TTL_STL_PRD, TTL_AVG_STL_PRD,
       KPI_MORE_THAN6, KPI_LESS_THAN6,
       KPI2_MORE_THAN6, KPI2_LESS_THAN6
FROM(
        SELECT RCT_RHQ_CD,
               BKG_OFC_CD,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'B',1,0),0))  S_B_CNT   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'B',STL_PRD,0),0))  S_B_STL_PRD   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'A',1,0),0))  S_A_CNT   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'A',STL_PRD,0),0))  S_A_STL_PRD   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'M',1,0),0))  S_M_CNT   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'M',STL_PRD,0),0))  S_M_STL_PRD   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'O',1,0),0))  S_O_CNT   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'O',STL_PRD,0),0))  S_O_STL_PRD   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'C',1,0),0))  S_C_CNT   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(REV_AUD_STL_KND_CD,'C',STL_PRD,0),0))  S_C_STL_PRD   ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(BKG_NO,NULL,0,1),0))     BL_S_CNT  ,
               SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(BKG_NO,NULL,0,STL_PRD),0))     BL_S_STL_PRD  ,
               CASE WHEN SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(BKG_NO,NULL,0,1),0)) = 0 THEN 0
                    ELSE ROUND(SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(BKG_NO,NULL,0,STL_PRD),0)) / SUM(DECODE(REV_AUD_STS_CD,'S',DECODE(BKG_NO,NULL,0,1),0)),2)
               END BL_S_AVG_STL_PRD,
               SUM(DECODE(REV_AUD_STS_CD,'U',DECODE(BKG_NO,NULL,0,1),0))     BL_U_CNT  ,
               SUM(DECODE(REV_AUD_STS_CD,'U',DECODE(BKG_NO,NULL,0,STL_PRD),0))     BL_U_STL_PRD  ,
               CASE WHEN SUM(DECODE(REV_AUD_STS_CD,'U',DECODE(BKG_NO,NULL,0,1),0)) = 0 THEN 0
                    ELSE ROUND(SUM(DECODE(REV_AUD_STS_CD,'U',DECODE(BKG_NO,NULL,0,STL_PRD),0)) / SUM(DECODE(REV_AUD_STS_CD,'U',DECODE(BKG_NO,NULL,0,1),0)) ,2)
               END BL_U_AVG_STL_PRD,
               COUNT(BKG_NO) TTL_BL_CNT,
               SUM(STL_PRD) TTL_STL_PRD,
               ROUND(SUM(STL_PRD) / COUNT(BKG_NO),2) TTL_AVG_STL_PRD,
               SUM(DECODE(SIGN(STL_PRD-6), 1,1,0)) KPI_MORE_THAN6,
               SUM(DECODE(SIGN(STL_PRD-6),-1,1,0,1,0)) KPI_LESS_THAN6,
               SUM(DECODE(RDN_FLG,'N',DECODE(SIGN(STL_PRD-6), 1,1,0),0)) KPI2_MORE_THAN6,
               SUM(DECODE(RDN_FLG,'N',DECODE(SIGN(STL_PRD-6),-1,1,0,1,0),0))KPI2_LESS_THAN6
        FROM (
                  SELECT  UB.BKG_NO,
                          (
                            SELECT  A.OFC_CD
                            FROM    MDM_ORGANIZATION A
                            WHERE   A.OFC_TP_CD = 'HQ'
                            START   WITH A.OFC_CD = BK.BKG_OFC_CD
                            CONNECT BY PRIOR A.PRNT_OFC_CD = A.OFC_CD
                          ) RCT_RHQ_CD,
                          BK.BKG_OFC_CD,
                          UB.REV_AUD_STS_CD,
                          UB.REV_AUD_STL_KND_CD,
                          CASE WHEN NVL(BB.BDR_FLG, 'N') = 'N' 
                                    THEN 0
                               WHEN UB.REV_AUD_STS_CD = 'S' AND UB.STL_DT < BB.BDR_DT
                                    THEN 0
                               WHEN UB.REV_AUD_STS_CD = 'S' AND UB.N1ST_UMCH_FND_DT < BB.BDR_DT 
                                    THEN TRUNC(UB.STL_DT) - TRUNC(BB.BDR_DT)
                               WHEN UB.REV_AUD_STS_CD = 'S' AND UB.N1ST_UMCH_FND_DT > BB.BDR_DT
                                    THEN TRUNC(UB.STL_DT) - TRUNC(UB.N1ST_UMCH_FND_DT)
                               WHEN UB.REV_AUD_STS_CD = 'U' AND UB.N1ST_UMCH_FND_DT < BB.BDR_DT
                                    THEN TRUNC(SYSDATE) - TRUNC(BB.BDR_DT)
                               WHEN UB.REV_AUD_STS_CD = 'U' AND UB.N1ST_UMCH_FND_DT > BB.BDR_DT
                                    THEN TRUNC(SYSDATE) - TRUNC(UB.N1ST_UMCH_FND_DT)
                          END STL_PRD,
                          (
                          SELECT  MAX(DECODE(AUTO_RAT_CD, 'A', 'A', 'I', 'A', 'M'))
                          FROM    BKG_CHG_RT  A
                          WHERE   A.BKG_NO    = UB.BKG_NO
                          ) AUTO_RAT_FLG ,
                          NVL((SELECT  'Y'
                               FROM    BKG_REV_DR_NOTE  A
                               WHERE   A.BKG_NO    = UB.BKG_NO
                               AND     ROWNUM = 1
                               ),'N') RDN_FLG
                  FROM    BKG_REV_UMCH_BKG  UB
                        , BKG_BOOKING       BK
                        , BKG_RATE          BR
#if (${date_type} == 'L')
                        , VSK_VSL_PORT_SKD  VSKD
                        , BKG_VVD           BVVD
#end
                        , BKG_BL_DOC        BB
                  WHERE   BK.BKG_NO       = UB.BKG_NO
                  AND     BR.BKG_NO       = BK.BKG_NO
                  AND     BB.BKG_NO       = BK.BKG_NO
        		  AND     BK.BKG_CGO_TP_CD = 'F' 
                  AND EXISTS ( SELECT  'Y'
                           FROM    BKG_REV_UMCH_ITM ITM
                           WHERE   ITM.BKG_NO = UB.BKG_NO
                           AND     ITM.UMCH_BKG_SEQ = UB.UMCH_BKG_SEQ
                           AND     ITM.UMCH_BKG_SEQ = ( SELECT MAX(UMCH_BKG_SEQ) FROM BKG_REV_UMCH_ITM WHERE BKG_NO = ITM.BKG_NO ) 
                           AND     ROWNUM = 1
                         )
#if (${date_type} == 'L')
        		  AND     VSKD.VPS_ETD_DT BETWEEN TO_DATE(@[rt_aply_dt_from], 'YYYY-MM-DD') AND TO_DATE(@[rt_aply_dt_to], 'YYYY-MM-DD') + 0.99999
        		  AND     BVVD.VSL_CD           = VSKD.VSL_CD   -- Join의 방향성 때문에 Duration인 경우와 아닌 경우를 분리함
        		  AND     BVVD.SKD_VOY_NO       = VSKD.SKD_VOY_NO
        		  AND     BVVD.SKD_DIR_CD       = VSKD.SKD_DIR_CD
        		  AND     BVVD.POL_CD           = VSKD.VPS_PORT_CD
        		  AND     BVVD.POL_CLPT_IND_SEQ = VSKD.CLPT_IND_SEQ
        		  AND     BK.BKG_NO = BVVD.BKG_NO
        		  AND     BK.POL_CD = BVVD.POL_CD
#else 
 #if (${rt_aply_dt_from} != '' && ${rt_aply_dt_to} != '')
        		  AND     UB.N1ST_UMCH_FND_DT >= TO_DATE(@[rt_aply_dt_from],'YYYY/MM/DD')
                  AND     UB.N1ST_UMCH_FND_DT <= TO_DATE(@[rt_aply_dt_to],'YYYY/MM/DD') + 0.99999
 #end
#end

#if (${bkg_ofc_cd} != '')
        		  AND     BK.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${bkg_ctrt_tp_cd} != '')
        		  AND     BR.BKG_CTRT_TP_CD = @[bkg_ctrt_tp_cd]
#end
                  )
        WHERE RCT_RHQ_CD IS NOT NULL
#if (${rct_rhq_cd} != '')
        AND     RCT_RHQ_CD    = @[rct_rhq_cd]
#end
#if (${auto_rat_flg} != '')
        AND     AUTO_RAT_FLG  = @[auto_rat_flg]
#end
        GROUP BY (RCT_RHQ_CD,
               BKG_OFC_CD)
)
WHERE BKG_OFC_CD IS NOT NULL
ORDER BY RCT_RHQ_CD, BKG_OFC_CD			]]></sql>
			<params>
				<param name="rt_aply_dt_from" type="12" value="" out="N"/>
				<param name="rt_aply_dt_to" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="bkg_ctrt_tp_cd" type="12" value="" out="N"/>
				<param name="rct_rhq_cd" type="12" value="" out="N"/>
				<param name="auto_rat_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
