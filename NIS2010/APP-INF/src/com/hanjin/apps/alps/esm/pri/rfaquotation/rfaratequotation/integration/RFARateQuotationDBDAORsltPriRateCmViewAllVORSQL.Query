<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RFARateQuotationDBDAORsltPriRateCmViewAllVORSQL">
			<desc><![CDATA[   S/C Quotation/Proposal 시점, CM/OP View All 팝업 화면]]></desc>
			<sql><![CDATA[
/*VO에 pfmc_unit 을 추가해야 한다.*/
WITH VW_PRI_RQ_RT_CMDT  AS (
	SELECT 	 CMDT.QTTN_NO,CMDT.QTTN_VER_NO
		,CMDT.CMDT_HDR_SEQ 
		,SUBSTR(MAX(SYS_CONNECT_BY_PATH(PRC_CMDT_DEF_CD , '; ')),3) AS PRC_CMDT_DEF_CD 
	FROM (
		SELECT QTTN_NO,QTTN_VER_NO
			 ,CMDT_HDR_SEQ
			,CMDT_SEQ,PRC_CMDT_DEF_CD
			,ROW_NUMBER() OVER(PARTITION BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
						ORDER BY PRC_CMDT_TP_CD DESC,QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,CMDT_SEQ) AS RN
		FROM PRI_RQ_RT_CMDT 
		WHERE QTTN_NO = @[qttn_no]
			AND QTTN_VER_NO = @[qttn_ver_no]
	) CMDT
	START WITH RN = 1 
	CONNECT BY PRIOR CMDT.CMDT_HDR_SEQ = CMDT.CMDT_HDR_SEQ 
		AND PRIOR  CMDT.RN = CMDT.RN - 1
	GROUP BY CMDT.QTTN_NO
		,CMDT.QTTN_VER_NO
		,CMDT.CMDT_HDR_SEQ
),
VW_PRI_RQ_RT_ROUT_PNT_ORI AS (
 	SELECT  ROUT_PNT.QTTN_NO,ROUT_PNT.QTTN_VER_NO
		,ROUT_PNT.CMDT_HDR_SEQ, ROUT_PNT.ROUT_SEQ
		,ROUT_PNT.ORG_DEST_TP_CD
		, SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_CD || DECODE(TERM_NM,'','','(' || TERM_NM || ')') , '; ')),3) AS ROUT_PNT_LOC_DEF_CD 
	FROM (
		SELECT QTTN_NO,QTTN_VER_NO	
			,CMDT_HDR_SEQ
			,ROUT_SEQ ,ROUT_PNT_LOC_DEF_CD
			,ORG_DEST_TP_CD
			,ROW_NUMBER() OVER(PARTITION BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_SEQ
							,ORG_DEST_TP_CD
						ORDER BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_PNT_SEQ) AS RN
			,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CODE WHERE CODE.INTG_CD_ID = 'CD02070' AND INTG_CD_VAL_CTNT = RCV_DE_TERM_CD) as TERM_NM 
		FROM PRI_RQ_RT_ROUT_PNT 
		WHERE QTTN_NO = @[qttn_no]
			AND QTTN_VER_NO = @[qttn_ver_no]
			AND ORG_DEST_TP_CD = 'O'
			
	) ROUT_PNT
	START WITH RN = 1 
	CONNECT BY PRIOR ROUT_PNT.ROUT_SEQ = ROUT_PNT.ROUT_SEQ 
		AND PRIOR ROUT_PNT.ORG_DEST_TP_CD = ROUT_PNT.ORG_DEST_TP_CD 
		AND PRIOR ROUT_PNT.CMDT_HDR_SEQ = ROUT_PNT.CMDT_HDR_SEQ
		AND PRIOR  ROUT_PNT.RN = ROUT_PNT.RN - 1
	GROUP BY ROUT_PNT.QTTN_NO
		,ROUT_PNT.QTTN_VER_NO
		,ROUT_PNT.CMDT_HDR_SEQ
		,ROUT_PNT.ROUT_SEQ
		,ROUT_PNT.ORG_DEST_TP_CD
 ),
 VW_PRI_RQ_RT_ROUT_PNT_DEST AS (
 	SELECT  ROUT_PNT.QTTN_NO,ROUT_PNT.QTTN_VER_NO
		,ROUT_PNT.CMDT_HDR_SEQ, ROUT_PNT.ROUT_SEQ
		,ROUT_PNT.ORG_DEST_TP_CD
		, SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_CD || DECODE(TERM_NM,'','','(' || TERM_NM || ')') , '; ')),3) AS ROUT_PNT_LOC_DEF_CD 
	FROM (
		SELECT QTTN_NO,QTTN_VER_NO	
			,CMDT_HDR_SEQ
			,ROUT_SEQ ,ROUT_PNT_LOC_DEF_CD
			,ORG_DEST_TP_CD
			,ROW_NUMBER() OVER(PARTITION BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_SEQ
							,ORG_DEST_TP_CD
						ORDER BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_PNT_SEQ) AS RN
			,(SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL CODE WHERE CODE.INTG_CD_ID = 'CD02070' AND INTG_CD_VAL_CTNT = RCV_DE_TERM_CD) as TERM_NM 
		FROM PRI_RQ_RT_ROUT_PNT 
		WHERE QTTN_NO = @[qttn_no]
			AND QTTN_VER_NO = @[qttn_ver_no]
			AND ORG_DEST_TP_CD = 'D'
	) ROUT_PNT
	START WITH RN = 1 
	CONNECT BY PRIOR ROUT_PNT.ROUT_SEQ = ROUT_PNT.ROUT_SEQ 
		AND PRIOR ROUT_PNT.ORG_DEST_TP_CD = ROUT_PNT.ORG_DEST_TP_CD 
		AND PRIOR ROUT_PNT.CMDT_HDR_SEQ = ROUT_PNT.CMDT_HDR_SEQ
		AND PRIOR  ROUT_PNT.RN = ROUT_PNT.RN - 1
	GROUP BY ROUT_PNT.QTTN_NO
		,ROUT_PNT.QTTN_VER_NO
		,ROUT_PNT.CMDT_HDR_SEQ
		,ROUT_PNT.ROUT_SEQ
		,ROUT_PNT.ORG_DEST_TP_CD
),
VW_PRI_RQ_RT_ROUT_VIA_ORI AS (
	SELECT 	 ROUT_VIA.QTTN_NO,ROUT_VIA.QTTN_VER_NO
		,ROUT_VIA.CMDT_HDR_SEQ, ROUT_VIA.ROUT_SEQ
		,ROUT_VIA.ORG_DEST_TP_CD
		,SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD , '; ')),3) AS ROUT_VIA_PORT_DEF_CD 
	FROM (
		SELECT QTTN_NO,QTTN_VER_NO
			,CMDT_HDR_SEQ
			,ROUT_SEQ,ROUT_VIA_PORT_DEF_CD
			,ORG_DEST_TP_CD
			,ROW_NUMBER() OVER(PARTITION BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_SEQ
							,ORG_DEST_TP_CD
						ORDER BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_VIA_SEQ) AS RN
		FROM PRI_RQ_RT_ROUT_VIA 
		WHERE QTTN_NO = @[qttn_no]
			AND QTTN_VER_NO = @[qttn_ver_no]
			AND ORG_DEST_TP_CD = 'O'
	) ROUT_VIA
	START WITH RN = 1 
	CONNECT BY PRIOR ROUT_VIA.ROUT_SEQ = ROUT_VIA.ROUT_SEQ 
		AND PRIOR ROUT_VIA.ORG_DEST_TP_CD = ROUT_VIA.ORG_DEST_TP_CD 
		AND PRIOR ROUT_VIA.CMDT_HDR_SEQ = ROUT_VIA.CMDT_HDR_SEQ
		AND PRIOR  ROUT_VIA.RN = ROUT_VIA.RN - 1
	GROUP BY ROUT_VIA.QTTN_NO
		,ROUT_VIA.QTTN_VER_NO
		,ROUT_VIA.CMDT_HDR_SEQ
		,ROUT_VIA.ROUT_SEQ
		,ROUT_VIA.ORG_DEST_TP_CD

),
VW_PRI_RQ_RT_ROUT_VIA_DEST AS (
	SELECT 	 ROUT_VIA.QTTN_NO,ROUT_VIA.QTTN_VER_NO
		,ROUT_VIA.CMDT_HDR_SEQ, ROUT_VIA.ROUT_SEQ
		,ROUT_VIA.ORG_DEST_TP_CD
		,SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD , '; ')),3) AS ROUT_VIA_PORT_DEF_CD 
	FROM (
		SELECT QTTN_NO,QTTN_VER_NO
			,CMDT_HDR_SEQ
			,ROUT_SEQ,ROUT_VIA_PORT_DEF_CD
			,ORG_DEST_TP_CD
			,ROW_NUMBER() OVER(PARTITION BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_SEQ
							,ORG_DEST_TP_CD
						ORDER BY QTTN_NO
							,QTTN_VER_NO
							,CMDT_HDR_SEQ
							,ROUT_VIA_SEQ) AS RN
		FROM PRI_RQ_RT_ROUT_VIA 
		WHERE QTTN_NO = @[qttn_no]
			AND QTTN_VER_NO = @[qttn_ver_no]
			AND ORG_DEST_TP_CD = 'D'
	) ROUT_VIA
	START WITH RN = 1 
	CONNECT BY PRIOR ROUT_VIA.ROUT_SEQ = ROUT_VIA.ROUT_SEQ 
		AND PRIOR ROUT_VIA.ORG_DEST_TP_CD = ROUT_VIA.ORG_DEST_TP_CD 
		AND PRIOR ROUT_VIA.CMDT_HDR_SEQ = ROUT_VIA.CMDT_HDR_SEQ
		AND PRIOR  ROUT_VIA.RN = ROUT_VIA.RN - 1
	GROUP BY ROUT_VIA.QTTN_NO
		,ROUT_VIA.QTTN_VER_NO
		,ROUT_VIA.CMDT_HDR_SEQ
		,ROUT_VIA.ROUT_SEQ
		,ROUT_VIA.ORG_DEST_TP_CD

) ,
VW_PRI_ROUT AS (
	SELECT 	QTTN_NO	,QTTN_VER_NO ,CMDT_HDR_SEQ ,ROUT_SEQ
		,	MAX(DECODE(TP_CD,1,DEF_CD,NULL))  AS ORI_ROUT_PNT_LOC_DEF_CD
		,	MAX(DECODE(TP_CD,2,DEF_CD,NULL))  AS DST_ROUT_PNT_LOC_DEF_CD
		,	MAX(DECODE(TP_CD,3,DEF_CD,NULL))  AS ORI_ROUT_VIA_PORT_DEF_CD
		,	MAX(DECODE(TP_CD,4,DEF_CD,NULL))  AS DST_ROUT_VIA_PORT_DEF_CD
	FROM (
		SELECT 
			QTTN_NO
			,QTTN_VER_NO
			,CMDT_HDR_SEQ
			,ROUT_SEQ
			,ORG_DEST_TP_CD
			,ROUT_PNT_LOC_DEF_CD AS DEF_CD
			, 1 AS TP_CD
		FROM 	VW_PRI_RQ_RT_ROUT_PNT_ORI
		UNION ALL
		SELECT 
			QTTN_NO
			,QTTN_VER_NO
			,CMDT_HDR_SEQ
			,ROUT_SEQ
			,ORG_DEST_TP_CD
			,ROUT_PNT_LOC_DEF_CD
			, 2 AS TP_CD
		FROM 	VW_PRI_RQ_RT_ROUT_PNT_DEST
		UNION ALL
		SELECT 
			QTTN_NO
			,QTTN_VER_NO
			,CMDT_HDR_SEQ
			,ROUT_SEQ
			,ORG_DEST_TP_CD
			,ROUT_VIA_PORT_DEF_CD
			, 3 AS TP_CD
		FROM 	VW_PRI_RQ_RT_ROUT_VIA_ORI
		UNION ALL
		SELECT 
			QTTN_NO
			,QTTN_VER_NO
			,CMDT_HDR_SEQ
			,ROUT_SEQ
			,ORG_DEST_TP_CD
			,ROUT_VIA_PORT_DEF_CD
			, 4 AS TP_CD
		FROM 	VW_PRI_RQ_RT_ROUT_VIA_DEST
	)
	GROUP BY QTTN_NO ,QTTN_VER_NO ,CMDT_HDR_SEQ ,ROUT_SEQ
)
SELECT QTTN_NO,QTTN_VER_NO,CMDT_HDR_SEQ,ROUT_SEQ
	,PRC_CMDT_DEF_CD
	,ORI_ROUT_PNT_LOC_DEF_CD
	,DST_ROUT_PNT_LOC_DEF_CD
	,ORI_ROUT_VIA_PORT_DEF_CD
	,DST_ROUT_VIA_PORT_DEF_CD
	,PRS_PRE_LOD_QTY --Previous - PFMC
	,DECODE(TOT_PRE_TOT_QTY,0,0,TO_CHAR(ROUND(PRS_PRE_LOD_QTY / TOT_PRE_TOT_QTY * 100,2),'990.99')) || '%'  AS PRE_SHARE  --Previous - Share(%) - 해당 Route Performance의 전체 Performance대비 Share
	,PRS_PRE_RESPB_CMPB_AMT -- Previous - CMPB
	,PRS_PRE_LOD_QTY * PRS_PRE_RESPB_CMPB_AMT AS PRE_CM-- Previous - CM - PRS_PRE_LOD_QTY * PRS_PRE_RESPB_CMPB_AMT
	,PRS_ESTM_LOD_QTY -- Estimate - PFMC
	,DECODE(TOT_ESTM_TOT_QTY,0,0, TO_CHAR(ROUND(PRS_ESTM_LOD_QTY / TOT_ESTM_TOT_QTY * 100 ,2),'990.99')) || '%' AS ESTM_SHARE -- Estimate - Share(%)  -- 해당 Route Performance의 전체 Performance대비 Share
	,PRS_ESTM_RESPB_CMPB_AMT -- Estimate - CMPB
	,PRS_ESTM_LOD_QTY * PRS_ESTM_RESPB_CMPB_AMT  AS ESTM_CM -- Estimate - CM  -- PRS_ESTM_LOD_QTY * PRS_ESTM_RESPB_CMPB_AMT
	,PRS_PRE_RESPB_OPB_AMT -- Previous - OPB
	,PRS_PRE_LOD_QTY *  PRS_PRE_RESPB_OPB_AMT AS PRE_OP-- Previous - OP  -- PRS_PRE_LOD_QTY * PRS_PRE_RESPB_OPB_AMT
	,PRS_ESTM_LOD_QTY   -- Estimate - PFMC
	,PRS_ESTM_RESPB_CMPB_AMT  -- Estimate - CMPB
	,PRS_ESTM_RESPB_OPB_AMT -- Estimate - OPB
	,PRS_ESTM_LOD_QTY *  PRS_ESTM_RESPB_OPB_AMT AS ESTM_OP -- Estimate - OP -- PRS_ESTM_LOD_QTY * PRS_ESTM_RESPB_OPB_AMT
	,PRS_RAT_UT_CD
	,CNTR_SZ_CD
	,PRS_ESTM_LOD_QTY AS ORI_PRS_ESTM_LOD_QTY 
FROM (
	SELECT CR.QTTN_NO,CR.QTTN_VER_NO,CR.CMDT_HDR_SEQ,CR.ROUT_SEQ
		,C.PRC_CMDT_DEF_CD
		,ROUT.ORI_ROUT_PNT_LOC_DEF_CD
		,ROUT.DST_ROUT_PNT_LOC_DEF_CD
		,ROUT.ORI_ROUT_VIA_PORT_DEF_CD
		,ROUT.DST_ROUT_VIA_PORT_DEF_CD
		,CR.PRS_PRE_LOD_QTY / DECODE(@[pfmc_unit],'FEU',2,'TEU',1) AS  PRS_PRE_LOD_QTY--Previous - PFMC
		,CR.PRS_PRE_RESPB_CMPB_AMT * DECODE(@[pfmc_unit],'FEU',2,'TEU',1) AS PRS_PRE_RESPB_CMPB_AMT-- Previous - CMPB
		,CR.PRS_ESTM_LOD_QTY / DECODE(@[pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_LOD_QTY-- Estimate - PFMC
		,DECODE(U.CNTR_SZ_CD,'2',CR.PRS_ESTM_RESPB_CMPB_AMT,CR.PRS_ESTM_RESPB_CMPB_AMT/2) * DECODE(@[pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_RESPB_CMPB_AMT-- Estimate - CMPB
		,CR.PRS_PRE_RESPB_OPB_AMT * DECODE(@[pfmc_unit],'FEU',2,'TEU',1) AS PRS_PRE_RESPB_OPB_AMT-- Previous - OPB
		,DECODE(U.CNTR_SZ_CD,'2',CR.PRS_ESTM_RESPB_OPB_AMT,CR.PRS_ESTM_RESPB_OPB_AMT/2) * DECODE(@[pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_RESPB_OPB_AMT-- Estimate - OPB
		,SUM(CR.PRS_PRE_LOD_QTY/DECODE(@[pfmc_unit],'FEU',2,'TEU',1))  OVER( PARTITION BY CR.QTTN_NO,CR.QTTN_VER_NO) AS TOT_PRE_TOT_QTY
		,SUM(CR.PRS_ESTM_LOD_QTY/DECODE(@[pfmc_unit],'FEU',2,'TEU',1)) OVER( PARTITION BY CR.QTTN_NO,CR.QTTN_VER_NO) AS TOT_ESTM_TOT_QTY
		,CR.PRS_RAT_UT_CD
		,U.CNTR_SZ_CD

	FROM PRI_RQ_RT_CMDT_HDR H
		, VW_PRI_RQ_RT_CMDT C
		, VW_PRI_ROUT ROUT
		, PRI_RQ_RT_CMDT_ROUT CR
		, PRI_RAT_UT U
	WHERE H.QTTN_NO = C.QTTN_NO
		AND H.QTTN_VER_NO = C.QTTN_VER_NO
		AND H.CMDT_HDR_SEQ = C.CMDT_HDR_SEQ
		AND H.QTTN_NO = ROUT.QTTN_NO
		AND H.QTTN_VER_NO = ROUT.QTTN_VER_NO
		AND H.CMDT_HDR_SEQ = ROUT.CMDT_HDR_SEQ

		AND ROUT.QTTN_NO = CR.QTTN_NO(+)
		AND ROUT.QTTN_VER_NO = CR.QTTN_VER_NO(+)
		AND ROUT.CMDT_HDR_SEQ = CR.CMDT_HDR_SEQ(+)
		AND ROUT.ROUT_SEQ = CR.ROUT_SEQ(+)
		AND CR.PRS_RAT_UT_CD = U.RAT_UT_CD(+)
		AND H.QTTN_NO = @[qttn_no]
		AND H.QTTN_VER_NO = @[qttn_ver_no]
)			]]></sql>
			<params>
				<param name="qttn_no" type="12" value="" out="N"/>
				<param name="qttn_ver_no" type="12" value="" out="N"/>
				<param name="pfmc_unit" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
