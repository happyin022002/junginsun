<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCRateQuotationDBDAOPriSqRtGlineMappingCostDetailVOUSQL">
			<desc><![CDATA[pri_sq_rt를 일괄 조정한다.]]></desc>
			<sql><![CDATA[
MERGE INTO PRI_SQ_RT A 
USING (
        SELECT  QTTN_NO, QTTN_VER_NO
               ,GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ, RT_SEQ, CMPB_AMT       
          FROM  (
                SELECT  MN.QTTN_NO, MN.QTTN_VER_NO
                       ,RATE.GEN_SPCL_RT_TP_CD, RATE.CMDT_HDR_SEQ, RATE.ROUT_SEQ, RATE.RT_SEQ, MAPG.MAPG_SCRE, MAPG.CURR_CD, MAPG.CMPB_AMT
                       ,ROW_NUMBER() OVER (PARTITION BY MN.QTTN_NO, MN.QTTN_VER_NO
                       						,RATE.GEN_SPCL_RT_TP_CD, RATE.CMDT_HDR_SEQ, RATE.ROUT_SEQ, RATE.RT_SEQ 
                       				ORDER BY MAPG.MAPG_SCRE DESC, MAPG.CURR_CD, MAPG.CMPB_AMT DESC) AS ROW_NUMBER
                  FROM  PRI_SQ_MN            MN
		               ,PRI_CMPB_GLINE_MN GLINE_MN
                       ,(SELECT MAX(GLINE_MN.EFF_DT) AS EFF_DT
                          FROM  PRI_SQ_MN     MN
                               ,PRI_CMPB_GLINE_MN GLINE_MN
                         WHERE  MN.QTTN_NO      = @[qttn_no]      
                           AND  MN.QTTN_VER_NO  = @[qttn_ver_no] 
                           AND  MN.SVC_SCP_CD   = GLINE_MN.SVC_SCP_CD
                           AND  GLINE_MN.EFF_DT <= MN.EFF_DT
                           AND  GLINE_MN.EXP_DT >= MN.EFF_DT
                           AND  GLINE_MN.CFM_FLG = 'Y' ) MAX_DT
                       ,PRI_SQ_RT        RATE
                       ,PRI_SQ_RT_USD_ROUT_CS  ROUT
                       ,PRI_PRS_USD_ROUT_CS_INFO   ROUT_INFO 
                       ,PRI_CMPB_GLINE_MAPG  MAPG
                       ,(SELECT DISTINCT A.QTTN_NO, A.QTTN_VER_NO, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.CMDT_SEQ, 
                       		  DECODE(A.PRC_CMDT_TP_CD, 'G', C.PRC_CMDT_DEF_CD, A.PRC_CMDT_DEF_CD )AS CMDT_CD
                         FROM PRI_SQ_RT_CMDT A
                		        LEFT OUTER JOIN  PRI_SQ_GRP_CMDT B
                        		    ON (  A.QTTN_NO     = B.QTTN_NO
                		              AND A.QTTN_VER_NO    = B.QTTN_VER_NO
                		              AND A.PRC_CMDT_DEF_CD = B.PRC_GRP_CMDT_CD
                        		       )
                		        LEFT OUTER JOIN PRI_SQ_GRP_CMDT_DTL C
                        		    ON (  B.QTTN_NO     = C.QTTN_NO
                              		  AND B.QTTN_VER_NO    = C.QTTN_VER_NO
                		              AND B.GRP_CMDT_SEQ = C.GRP_CMDT_SEQ
                		              )
                        WHERE A.QTTN_NO = @[qttn_no]
                          AND A.QTTN_VER_NO =  @[qttn_ver_no] 
                          AND A.GEN_SPCL_RT_TP_CD = @[gen_spcl_rt_tp_cd]
                       ) CMDT                               
                 WHERE  MN.QTTN_NO      = @[qttn_no]
                   AND  MN.QTTN_VER_NO     =  @[qttn_ver_no] 
                   AND  MN.QTTN_NO      = ROUT.QTTN_NO
                   AND  MN.QTTN_VER_NO     = ROUT.QTTN_VER_NO
                   AND  ROUT.USD_ROUT_CS_SEL_FLG = 'Y'
                   AND  MN.SVC_SCP_CD   = GLINE_MN.SVC_SCP_CD
                   AND  GLINE_MN.EFF_DT = MAX_DT.EFF_DT
                   AND  MN.SVC_SCP_CD   = MAPG.SVC_SCP_CD 
                   AND  GLINE_MN.GLINE_SEQ  = MAPG.GLINE_SEQ  
                   AND  DECODE(MN.PRC_CUST_TP_CD, 'A', 'B', 'I', 'B', 'O', 'B', MN.PRC_CUST_TP_CD)
                   							= DECODE(MAPG.PRS_CUST_TP_CD, 'M', MN.PRC_CUST_TP_CD, MAPG.PRS_CUST_TP_CD)
                   AND  MN.CUST_CNT_CD    = DECODE(MAPG.CUST_CNT_CD, NULL, MN.CUST_CNT_CD, MAPG.CUST_CNT_CD)
                   AND  MN.CUST_SEQ       = DECODE(MAPG.CUST_SEQ, NULL, MN.CUST_SEQ, MAPG.CUST_SEQ)
                   AND  MN.QTTN_NO      = RATE.QTTN_NO
                   AND  MN.QTTN_VER_NO     = RATE.QTTN_VER_NO
                   AND  RATE.GEN_SPCL_RT_TP_CD = @[gen_spcl_rt_tp_cd]
                   AND  RATE.CMDT_HDR_SEQ = @[cmdt_hdr_seq]
                   AND  RATE.ROUT_SEQ = @[rout_seq]
                   AND  RATE.RT_SEQ = @[rt_seq]
                   AND  RATE.GEN_SPCL_RT_TP_CD = ROUT.GEN_SPCL_RT_TP_CD
                   AND  RATE.CMDT_HDR_SEQ   = ROUT.CMDT_HDR_SEQ
                   AND  RATE.ROUT_SEQ       = ROUT.ROUT_SEQ
                   AND  RATE.RT_SEQ         = ROUT.RT_SEQ
                   AND  RATE.VSL_SLAN_CD  = MAPG.VSL_SLAN_CD
                   AND  ROUT.ROUT_CS_NO = ROUT_INFO.ROUT_CS_NO
                   AND  ROUT.ROUT_CS_SRC_DT = ROUT_INFO.ROUT_CS_SRC_DT
                   AND  NVL(MAPG.ORG_LOC_DEF_CD, ROUT_INFO.POR_CD) 
                                = DECODE(MAPG.ORG_LOC_TP_CD, 'C', (SELECT CNT_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.POR_CD)
                                                           , 'R', (SELECT RGN_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.POR_CD)
                                                           , ROUT_INFO.POR_CD )
                   AND  NVL(MAPG.DEST_LOC_DEF_CD, ROUT_INFO.DEL_CD) 
                                = DECODE(MAPG.DEST_LOC_TP_CD, 'C', (SELECT CNT_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.DEL_CD)
                                                           , 'R', (SELECT RGN_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.DEL_CD)
                                                           , ROUT_INFO.DEL_CD )
                   AND  NVL(MAPG.ORG_VIA_PORT_DEF_CD, NVL(ROUT_INFO.POL_CD, 'X')) 
                                = DECODE(MAPG.ORG_VIA_PORT_TP_CD, 'C', (SELECT CNT_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.POL_CD)
                                                           , 'R', (SELECT RGN_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.POL_CD)
                                                           , NVL(ROUT_INFO.POL_CD, 'X') )
                   AND  NVL(MAPG.DEST_VIA_PORT_DEF_CD, NVL(ROUT_INFO.POD_CD, 'X')) 
                                = DECODE(MAPG.DEST_VIA_PORT_TP_CD, 'C', (SELECT CNT_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.POD_CD)
                                                           , 'R', (SELECT RGN_CD FROM MDM_LOCATION WHERE LOC_CD = ROUT_INFO.POD_CD)
                                                           , NVL(ROUT_INFO.POD_CD, 'X') )
                   AND  ROUT_INFO.BKG_RCV_TERM_CD = DECODE(MAPG.RCV_TERM_CD, NULL, ROUT_INFO.BKG_RCV_TERM_CD, MAPG.RCV_TERM_CD)
                   AND  ROUT_INFO.BKG_DE_TERM_CD  = DECODE(MAPG.DE_TERM_CD, NULL, ROUT_INFO.BKG_DE_TERM_CD, MAPG.DE_TERM_CD )
                   AND  MAPG.MQC_RNG_FM_QTY <= MN.ESTM_MQC_QTY
                   AND  MAPG.MQC_RNG_TO_QTY >= MN.ESTM_MQC_QTY
                   AND  RATE.RAT_UT_CD      = DECODE(MAPG.RAT_UT_CD, NULL, RATE.RAT_UT_CD, MAPG.RAT_UT_CD)
                   AND  RATE.PRC_CGO_TP_CD  = DECODE(MAPG.PRC_CGO_TP_CD, NULL, RATE.PRC_CGO_TP_CD, MAPG.PRC_CGO_TP_CD)          
                   AND  MN.QTTN_NO      = CMDT.QTTN_NO
                   AND  MN.QTTN_VER_NO     = CMDT.QTTN_VER_NO
                   AND  RATE.GEN_SPCL_RT_TP_CD = CMDT.GEN_SPCL_RT_TP_CD
                   AND  RATE.CMDT_HDR_SEQ   = CMDT.CMDT_HDR_SEQ
                   AND  CMDT.CMDT_CD        = DECODE(MAPG.PRC_CMDT_DEF_CD, NULL, CMDT.CMDT_CD, MAPG.PRC_CMDT_DEF_CD )
                )
         WHERE ROW_NUMBER = 1
    ) B
ON (
   A.QTTN_NO = B.QTTN_NO
   AND  A.QTTN_VER_NO = B.QTTN_VER_NO
   AND  A.GEN_SPCL_RT_TP_CD = B.GEN_SPCL_RT_TP_CD
   AND  A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ
   AND  A.ROUT_SEQ = B.ROUT_SEQ
   AND  A.RT_SEQ = B.RT_SEQ
)
WHEN MATCHED THEN
UPDATE SET A.PRS_GID_CMPB_AMT = B.CMPB_AMT
			]]></sql>
			<params>
				<param name="qttn_no" type="12" value="" out="N"/>
				<param name="qttn_ver_no" type="12" value="" out="N"/>
				<param name="gen_spcl_rt_tp_cd" type="12" value="" out="N"/>
				<param name="cmdt_hdr_seq" type="2" value="" out="N"/>
				<param name="rout_seq" type="12" value="" out="N"/>
				<param name="rt_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
