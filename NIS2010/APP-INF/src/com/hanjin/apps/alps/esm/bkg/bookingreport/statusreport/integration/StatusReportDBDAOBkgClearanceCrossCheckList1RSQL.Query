<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusReportDBDAOBkgClearanceCrossCheckList1RSQL">
			<desc><![CDATA[StatusReportDBDAOBkgClearanceCrossCheckList1RSQL



]]></desc>
			<sql><![CDATA[
#if ($vvd_arr.size() > 1) 
SELECT * 
FROM   ( 
          SELECT DENSE_RANK() OVER( ORDER BY BKG_NO) DENSE_RANK,DENSE_RANK() OVER( ORDER BY BKG_NO) DENSE_RANK2
                ,BKG_NO       ,BL_NO        ,OB_SLS_OFC_CD  ,OB_SREP_CD	,CTRT_OFC_CD
                ,DECODE(STWG_CD||BLCK_STWG_CD,'OLBPLBP',DECODE(LBP_FLG,'Y','LBP',''),BLCK_STWG_CD) BLCK_STWG_CD
           	    ,BKG_STS_CD ,BKG_CGO_TP_CD  ,QTY_BKG    ,QTY_CNTR
                ,CNTR_CFM_FLG ,CNTR_NO      ,SZ
                ,VOL          ,SEAL         ,FIRM           ,ST         ,CM             ,SHIPPER    ,CONSIGNEE     ,FFDR        ,FF         ,MD
                ,AES          ,ENTR_CLSS_TP_CD AS CUST_TP   ,TAX_ID     ,DECODE((SELECT  CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = KEY_POL_CD),'M','Y','N') AES_YN
                ,EL_NO, DDE   ,PEB, CAED    ,POD_CD         ,DEL_CD 
                ,RCV_TERM_CD  ,DE_TERM_CD   ,CHARGE         ,APPRVAL    ,PKG            ,WEIGHT     ,MEASUERE      ,SPECIAL_D   ,SPECIAL_R  ,SPECIAL_A
                ,SPECIAL_B    ,BDR          ,ISSUE          ,RECEIVING  ,VIA            ,TOTAL_BKG  ,TOTAL_BL      
                ,TRIM(TOTAL_BKG_F) TOTAL_BKG_F              ,TRIM(TOTAL_BKG_T) TOTAL_BKG_T          ,TRIM(TOTAL_CTRL_F) TOTAL_CTRL_F        ,TRIM(TOTAL_CTRL_T) TOTAL_CTRL_T
                ,TOTAL_CFM    ,TOTAL_VL     ,TOTAL_CM       ,TOTAL_MD   ,TOTAL_CHARGE   ,TOTAL_APPRVAL             ,TOTAL_ISSUE ,TOTAL_RECEIVING    ,ROWNUM RNUM 
                ,CTR_RNUM     ,'' ROWS_PER_PAGE             ,'' CURR_PAGE               ,COUNT(1) OVER() TOTAL_CNT ,'' P_NO_GOOD
                ,COUNT(BKG_NO) OVER(PARTITION BY BKG_NO) ROWS_PER_BKG
                ,SHIPPER_CODE
                ,POR
                ,POL
                ,POD
                ,DEL
                ,POR_NOD_CD
                ,DEL_NOD_CD
                ,BROKER
                ,BKG_OFC_NO
                ,HITCHMENT_YN
                ,TVVD
                ,KEY_VVD
                ,DPCS_I, DPCS_R, DPCS_Q, DPCS_F, DPCS_STS
	  		    ,DPCS_TTL, DPCS_INPUT, DPCS_RATE, DPCS_QA, DPCS_BL_PROOF, STATUS_COMPLETE, STATUS_PENDING, STATUS_OPEN
	  		    ,DECODE(CNTR_CHECK,'D',PRE_BKG_NO,CNTR_CHECK) CNTR_CHECK
                ,CNTR_WGT
                ,MEAS_QTY
                ,WGT_UT_CD
                ,SI_READY_FLG
                ,EVENT_YARD
                , EVENT_DT
				, EVNT_USR_ID CNTR_CFM_ID
                ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18
                ,VGM_CNT_TARGET, TOTAL_VGM_CNT
                ,COUNT(CNTR_NO) OVER() TOTAL_CNTR_CNT
                ,NVL(COUNT(CNTR_NO) OVER() - TOTAL_VGM_CNT,0) TOTAL_NO_VGM_CNT
                ,VGM_VRFY_SIG_CTNT
                ,VGM_MZD_TP_CD
          FROM (
				    SELECT 
                            BKG_NO,
                            BL_NO,
                            OB_SLS_OFC_CD,
							OB_SREP_CD,
							CTRT_OFC_CD,
							BLCK_STWG_CD,
							STWG_CD,
                            BKG_STS_CD,
                            BKG_CGO_TP_CD,
                            QTY_BKG,
                            QTY_CNTR,
                            CNTR_CFM_FLG,
                            CNTR_NO,
                            LBP_FLG,
                            SZ,
                            VOL,
                            SEAL,
                            FIRM,
                            ST,
                            CM,
                            SHIPPER,
                            CONSIGNEE,
                            FFDR,
                            FF,
                            MD,
                            AES,
                            ENTR_CLSS_TP_CD,
                            TAX_ID,
                            EL_NO,
                            DDE,
                            PEB,
                            CAED,
                            KEY_POL_CD,
                            POD_CD,
                            DEL_CD,
                            RCV_TERM_CD,
                            DE_TERM_CD,
                            CHARGE,
                            APPRVAL,
                            PKG,
                            WEIGHT,
                            MEASUERE,
                            SPECIAL_D,
                            SPECIAL_R,
                            SPECIAL_A,
                            SPECIAL_B,
                            BDR,
                            ISSUE,
                            RECEIVING,
                            VIA,
                            COUNT(DISTINCT BKG_NO) OVER() TOTAL_BKG,
                            COUNT(DISTINCT BL_NO) OVER() TOTAL_BL,
                            TO_CHAR(SUM(DECODE(RNUM,1,TOTAL_BKG_F,0)) OVER() ,'99990.99')||' F' TOTAL_BKG_F,
                            TO_CHAR(SUM(DECODE(RNUM,1,TOTAL_BKG_T,0)) OVER() ,'99990.99')||' T' TOTAL_BKG_T,
                            TO_CHAR(SUM(DECODE(CTR_RNUM,1,DECODE(SUBSTR(SZ,-1),'2',0,VOL))) OVER() ,'99990.99')||' F'TOTAL_CTRL_F,
                            TO_CHAR(SUM(DECODE(CTR_RNUM,1,DECODE(SUBSTR(SZ,-1),'2',VOL,0))) OVER() ,'99990.99')||' T' TOTAL_CTRL_T,

                            COUNT(DECODE(CTR_RNUM,1,DECODE(CNTR_CFM_FLG,'N',1,NULL) )) OVER()  TOTAL_CFM,
                            COUNT(DECODE(CTR_RNUM,1,DECODE(ST,'VL',NULL,1) )) OVER()  TOTAL_VL,
                            COUNT(DECODE(CTR_RNUM,1,DECODE(CM,'Y',NULL,'F',NULL,1) )) OVER()  TOTAL_CM,

                            COUNT(DECODE(RNUM,1,DECODE(MD,'N',1,NULL) )) OVER() TOTAL_MD,
                            COUNT(DECODE(RNUM,1,DECODE(CHARGE,'N',1,NULL) )) OVER() TOTAL_CHARGE,
                            COUNT(DECODE(RNUM,1,DECODE(APPRVAL,'N',1,NULL) )) OVER() TOTAL_APPRVAL,
                            COUNT(DECODE(RNUM,1,DECODE(ISSUE,'N',1,NULL) )) OVER() TOTAL_ISSUE,
                            COUNT(DECODE(RNUM,1,DECODE(RECEIVING,'N',1,NULL) )) OVER() TOTAL_RECEIVING,

                            RNUM,
                            CTR_RNUM
                            ,SHIPPER_CODE
                            ,POR
                            ,POL
                            ,POD
                            ,DEL
                            ,POR_NOD_CD
                            ,DEL_NOD_CD
                            ,BROKER
                            ,BKG_OFC_NO
                            ,HITCHMENT_YN
                            ,TVVD
                            ,DPCS_I, DPCS_R, DPCS_Q, DPCS_F, DPCS_STS, KEY_VVD,
                            COUNT(DECODE(RNUM,1,DECODE(DBKG_NO,NULL,NULL,1),NULL)) OVER() DPCS_TTL,    	  		    	  		
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_I,'Y',1,NULL) )) OVER() DPCS_INPUT,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_R,'Y',1,NULL) )) OVER() DPCS_RATE,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_Q,'Y',1,NULL) )) OVER() DPCS_QA,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_F,'Y',1,NULL) )) OVER() DPCS_BL_PROOF,

                            COUNT(DECODE(RNUM,1,DECODE(DPCS_STS,'Y',1,NULL) )) OVER() STATUS_COMPLETE,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_STS,'P',1,NULL) )) OVER() STATUS_PENDING,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_STS,'W',1,NULL) )) OVER() STATUS_OPEN,
                            DECODE(ADV_SHTG_CD,NULL,CNTR_CHECK,ADV_SHTG_CD) CNTR_CHECK
						    ,PRE_BKG_NO
                            ,CNTR_WGT
                            ,MEAS_QTY
                            ,WGT_UT_CD
							,SI_READY_FLG
        					,ORG_YD_CD EVENT_YARD
        					,CNMV_EVNT_DT EVENT_DT
                            , EVNT_USR_ID 
                            ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18
                            ,VGM_CNT_TARGET,  SUM(VGM_CNT_TARGET) OVER() TOTAL_VGM_CNT
                            ,VGM_VRFY_SIG_CTNT
                            ,VGM_MZD_TP_CD
                    FROM (
                            SELECT 
                                    BKG_NO,
                                    BL_NO,
                                    OB_SLS_OFC_CD,
									OB_SREP_CD,
									CTRT_OFC_CD,
									BLCK_STWG_CD,
									STWG_CD,
                                    BKG_STS_CD,
                                    BKG_CGO_TP_CD,
                                    QTY_BKG,
                                    TOTAL_BKG_T,
                                    TOTAL_BKG_F,
                                    QTY_CNTR,
                                    NVL(CNTR_CFM_FLG,'N') AS CNTR_CFM_FLG,
                                    CNTR_NO,
                                    LBP_FLG,
                                    SZ,
                                    VOL,
                                    SEAL,
                                    FIRM,
                                    NVL(ST,'N') AS ST,
                                    NVL(CM,'N') AS CM,
                                    SHIPPER,
                                    CONSIGNEE,
                                    FFDR,
                                    FF,
                                    NVL(MD,'N') AS MD,
                                    AES,
                                    ENTR_CLSS_TP_CD,
                                    TAX_ID,
                                    EL_NO,
                                    DDE,
                                    PEB,
                                    CAED,
                                    KEY_POL_CD,
                                    POD_CD,
                                    DEL_CD,
                                    RCV_TERM_CD,
                                    DE_TERM_CD,
                                    NVL(CHARGE,'N') AS CHARGE,
                                    APPRVAL,
                                    PKG,
                                    WEIGHT,
                                    MEASUERE,
                                    SPECIAL_D,
                                    SPECIAL_R,
                                    SPECIAL_A,
                                    SPECIAL_B,
                                    BDR,
                                    NVL(ISSUE,'N') AS ISSUE,
                                    NVL(RECEIVING,'N') AS RECEIVING,
                                    VIA,
                                    ROW_NUMBER() OVER (PARTITION BY BKG_NO,CNTR_NO  ORDER BY BKG_NO,CNTR_NO) AS CTR_RNUM,
                                    ROW_NUMBER() OVER (PARTITION BY BKG_NO  ORDER BY BKG_NO ) AS RNUM
                                   ,SHIPPER_CODE
                                   ,POR
                                   ,POL
                                   ,POD
                                   ,DEL
                                   ,POR_NOD_CD
                                   ,DEL_NOD_CD
                                   ,BROKER
                                   ,BKG_OFC_NO
                                   ,HITCHMENT_YN
                                   ,TVVD
                                   ,DBKG_NO, NVL(BL_DOC_INP_FLG,'N') AS DPCS_I, NVL(BL_RT_FLG,'N') AS DPCS_R, NVL(BL_AUD_FLG,'N') AS DPCS_Q, NVL(BL_DRFT_FAX_OUT_FLG,'N') AS DPCS_F, NVL(SR_WRK_STS_CD,'N') AS DPCS_STS
                                   ,KEY_VVD
                                   ,ADV_SHTG_CD
                                   ,DECODE(CRN_VVD_CNT,NULL,'',
                                    DECODE(PRE_VVD_CNT,NULL,'',
                                    DECODE(SUBSTR(CRN_VVD_CNT,-2),SUBSTR(PRE_VVD_CNT,-2),'D',''))) CNTR_CHECK
								   ,PRE_BKG_NO
                                   ,CNTR_WGT
                                   ,MEAS_QTY
                                   ,WGT_UT_CD
								   ,nvl(SI_READY_FLG,'N') SI_READY_FLG
            					   ,ORG_YD_CD
            					   ,CNMV_EVNT_DT
                                   , EVNT_USR_ID 
                                   ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18
                                   ,VGM_CNT_TARGET
                                   ,VGM_VRFY_SIG_CTNT
                                   ,VGM_MZD_TP_CD
							FROM   (
								        SELECT /*+ NO_MERGE(DPCS) USE_HASH(DPCS) */
                                                VB.BKG_NO,
                                                VB.BL_NO,
                                                VB.OB_SLS_OFC_CD,/*Sales Office*/
												VB.OB_SREP_CD,
												BKG.CTRT_OFC_CD, /*Ctrt Office Code */
												BKG.BLCK_STWG_CD,
												BKG.STWG_CD,
                                                VB.BKG_STS_CD,/*status1*/ 
                                                VB.BKG_CGO_TP_CD,/*Status2*/
                                                BKG_JOIN_FNC( CURSOR(SELECT CNTR_TPSZ_CD||'-'||ltrim(TO_CHAR(NVL(OP_CNTR_QTY, 0),'99990.99'))
                                                                                         FROM BKG_QTY_DTL
                                                                                         WHERE BKG_NO = VB.BKG_NO                                                     
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
                                                                                         ORDER BY CNTR_TPSZ_CD
                                                                         )
                                                ) QTY_BKG,/*QTY-BKG*/
                                                         
                                                (SELECT NVL(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',NVL(OP_CNTR_QTY, 0))),0)
                                                                                         FROM BKG_QTY_DTL
                                                                                         WHERE BKG_NO = VB.BKG_NO
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
																						 #if (${p_awk_cgo_flg} != '')
                                                                                              AND AWK_CGO_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_rc_flg} != '')
                                                                                              AND RC_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_dcgo_flg} != '')
                                                                                              AND DCGO_FLG = 'Y'
																						 #end
                                                ) TOTAL_BKG_T,/*TOTAL_BKG_T*/
                                                 
                                                (SELECT NVL(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',NULL,NVL(OP_CNTR_QTY, 0))),0)
                                                                                         FROM BKG_QTY_DTL
                                                                                         WHERE BKG_NO = VB.BKG_NO
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
																						 #if (${p_awk_cgo_flg} != '')
                                                                                              AND AWK_CGO_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_rc_flg} != '')
                                                                                              AND RC_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_dcgo_flg} != '')
                                                                                              AND DCGO_FLG = 'Y'
																						 #end
                                                ) TOTAL_BKG_F,/*TOTAL_BKG_F*/
                                                         
                                                BKG_JOIN_FNC( CURSOR(SELECT  CNTR_TPSZ_CD||'-'||ltrim(TO_CHAR(NVL(sum(CNTR_VOL_QTY), 0),'99990.99'))
                                                                                         FROM    BKG_CONTAINER
                                                                                         WHERE BKG_NO = VB.BKG_NO
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
                                                                                         GROUP BY CNTR_TPSZ_CD
                                                                                         ORDER BY CNTR_TPSZ_CD
                                                                     )
                                                ) QTY_CNTR,/*QTY-CNTR*/
                                                         
                                                (SELECT 'Y' FROM BKG_DOC_PROC_SKD K
                                                 WHERE K.BKG_NO = VB.BKG_NO
                                                 AND BKG_DOC_PROC_TP_CD ='CNTCFM'
                                                 AND DOC_PERF_DELT_FLG ='N' 
                                                ) AS CNTR_CFM_FLG, /*Final Confirm*/

                  	                           (
                                                SELECT EVNT_USR_ID
                                                FROM BKG_DOC_PROC_SKD K
                                                WHERE K.BKG_NO = VB.BKG_NO
                                                AND BKG_DOC_PROC_TP_CD ='CNTCFM'
                                                AND DOC_PERF_DELT_FLG ='N' ) AS EVNT_USR_ID, /*Final Confirm ID*/

                                                B.CNTR_NO CNTR_NO,/*NO.*/
                                                B.LBP_FLG,
                                                B.CNTR_TPSZ_CD SZ, /*SZ*/
                          						B.ORG_YD_CD,
                          						--TO_CHAR(B.CNMV_EVNT_DT, 'YYYY-MM-DD HH24:MI') CNMV_EVNT_DT,
																								(SELECT TO_CHAR(M.CNMV_DT, 'YYYY-MM-DD HH24:MI') FROM MST_CONTAINER M
        																				WHERE M.CNTR_NO = B.CNTR_NO) CNMV_EVNT_DT,
                                                nvl(B.CNTR_VOL_QTY,0) VOL, /*Vol*/
                                                B.MF_CFM_FLG FIRM,  /*Firm*/
                                                --B.CNMV_STS_CD ST, /*ST*/
												( SELECT /*+ INDEX_DESC(A XPKCTM_MOVEMENT) */  MVMT_STS_CD
												  FROM CTM_MOVEMENT A
												  WHERE CNTR_NO = B.CNTR_NO
												  AND CNMV_YR = B.CNMV_YR
												  AND CNMV_CYC_NO = B.CNMV_CYC_NO
												  AND ROWNUM = 1 )  ST, /*ST*/
															
                                            
                                                NVL( (SELECT DECODE(MF_CFM_FLG,'Y','F','Y') 
                                                            FROM BKG_CONTAINER CNTR, BKG_CNTR_MF_DESC MF
                                                            WHERE CNTR.BKG_NO = VB.BKG_NO 
                                                              AND CNTR.BKG_NO = MF.BKG_NO
                                                              AND CNTR.CNTR_NO = MF.CNTR_NO
                                                              AND ROWNUM = 1)
                                                        ,'N') CM, /*CM*/

                                                NVL( (SELECT 'Y' 
                                                            FROM BKG_CNTR_SEAL_NO 
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                              AND CNTR_NO = B.CNTR_NO
                                                              AND CNTR_SEAL_NO IS NOT NULL 
                                                              AND ROWNUM = 1)
                                                        ,'N') SEAL, /*SEAL*/
                                                
                                                DECODE(VB.BKG_CUST_TP_CD,'S',REPLACE(VB.CUST_NM,chr(13)||chr(10),' ')) SHIPPER,/*Shipper*/
                                                DECODE(VB.C_BKG_CUST_TP_CD,'C',REPLACE(VB.C_CUST_NM,chr(13)||chr(10),' ')) CONSIGNEE,/*CONSIGNEE*/
                                                DECODE(VB.F_BKG_CUST_TP_CD,'F',REPLACE(VB.F_CUST_NM,chr(13)||chr(10),' ')) FFDR,/*F/Forwarder*/
                                                
                                                NVL( (SELECT DECODE(CUST_CNT_CD,NULL,'N','Y')
                                                            FROM BKG_CUSTOMER 
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                            AND   BKG_CUST_TP_CD = 'F'
                                                            AND ROWNUM = 1)
                                                        ,'N') FF,/*FF*/
                                                
                                                NVL( (SELECT 'Y'
                                                            FROM BKG_BL_MK_DESC
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                            AND ROWNUM = 1)
                                                        ,'N') MD, /*M/D*/
                                                        
                                                (SELECT AES_TP_CD
                                                 FROM   BKG_XPT_IMP_LIC
                                                 WHERE  BKG_NO = VB.BKG_NO
                                                 AND    IO_BND_CD = 'O'
                                                 AND    CNT_CD = 'US'
                                                 AND    ROWNUM <= 1
                                                ) AES, /*AES*/

                                                NVL((SELECT ENTR_CLSS_TP_CD
                                                 FROM   BKG_XPT_IMP_LIC
                                                 WHERE  BKG_NO = VB.BKG_NO
                                                 AND    IO_BND_CD = 'O'
                                                 AND    CNT_CD = 'US'
                                                 AND    ROWNUM <= 1),'G'
                                                ) ENTR_CLSS_TP_CD, /*US TYPE*/

                                                NVL(( SELECT 'Y' 
                                                            FROM BKG_XPT_IMP_LIC
                                                            WHERE 1=1 
                                                            AND BKG_NO = VB.BKG_NO
                                                            AND ROWNUM = 1
                                                           ),'N') TAX_ID, /*MX*/

                                                NVL( (SELECT 'Y'
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND XPT_LIC_NO IS NOT NULL
                                                     AND IO_BND_CD= 'O'
                                                     AND ROWNUM =1 ),'N') EL_NO /*E/L*/,
                                                NVL( (SELECT 'Y'	
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND BRZ_DECL_NO IS NOT NULL
                                                     AND IO_BND_CD ='O'
                                                     AND ROWNUM =1 ),'N') DDE ,
                                                NVL( (SELECT 'Y' 
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND ID_DECL_CD IS NOT NULL
                                                     AND IO_BND_CD ='O'
                                                     AND ROWNUM =1),'N') PEB,
                                                (SELECT CAED_TP_CD
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND CNT_CD = 'CA'
                                                     AND ROWNUM =1
                                                ) CAED,
                                                KEY_POL_CD,
                                                VB.POD_CD,/*POD*/
                                                VB.DEL_CD,/*DEL*/
                                                B.RCV_TERM_CD ,/*SCV-R*/
                                                B.DE_TERM_CD ,/*SCV-D*/
                                                
                                                NVL( (SELECT DECODE(BKG_RATE_RESULT_FNC(VB.BKG_NO),'F','Y','N') FROM DUAL)
                                                        ,'N') CHARGE, /*Charge*/
                                                        
                                                NVL( (SELECT DECODE(RT_APLY_DT,NULL,'N','Y')
                                                            FROM BKG_RATE
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                            AND ROWNUM = 1)
                                                        ,'N') APPRVAL, /*Apprval*/
                                                
                                                (SELECT DECODE(DOC.PCK_QTY,0,'N',DECODE(DOC.PCK_QTY,SUM(CNTR.PCK_QTY),'Y','E'))
                                                 FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
                                                 WHERE 1=1
                                                 AND VB.BKG_NO = DOC.BKG_NO
                                                 AND DOC.BKG_NO = CNTR.BKG_NO
                                                 GROUP BY DOC.PCK_QTY
                                                ) PKG,
                                                (SELECT DECODE(DOC.ACT_WGT,0,'N',DECODE(DOC.ACT_WGT,SUM(CNTR.CNTR_WGT),'Y','E'))
                                                  FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
                                                  WHERE 1=1
                                                  AND VB.BKG_NO = DOC.BKG_NO
                                                  AND DOC.BKG_NO = CNTR.BKG_NO
                                                  GROUP BY DOC.ACT_WGT
                                                ) WEIGHT,
                                                (SELECT DECODE(DOC.MEAS_QTY,0,'N',DECODE(DOC.MEAS_QTY,SUM(CNTR.MEAS_QTY),'Y','E'))
                                                   FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
                                                   WHERE 1=1
                                                   AND VB.BKG_NO = DOC.BKG_NO
                                                   AND DOC.BKG_NO = CNTR.BKG_NO
                                                   GROUP BY DOC.MEAS_QTY
                                                ) MEASUERE,
                                                VB.DCGO_FLG SPECIAL_D,/*Special_D*/
                                                VB.RC_FLG SPECIAL_R,/*Special_R*/
                                                VB.AWK_CGO_FLG SPECIAL_A, /*Special_A*/
                                                VB.BB_CGO_FLG SPECIAL_B, /*Special_B*/
                                                DOC.BDR_FLG BDR,/*BDR*/
                                                
                                                NVL((SELECT NVL(BKG.BL_TP_CD,'B')
                                                 FROM BKG_BL_ISS
                                                 WHERE BKG_NO = VB.BKG_NO
                                                 AND OBL_ISS_FLG = 'Y'
                                                 AND ROWNUM = 1),'N') ISSUE, /*BL_ISSUE*/
                                                
                                                VB.SI_FLG RECEIVING,/*SI_RECEIVING*/
                                                VB.XTER_SI_CD VIA/*SI_VIA*/
                                                ,(SELECT MIN(VPS_ETD_DT)
                                                  FROM BKG_VVD BV, VSK_VSL_PORT_SKD V
                                                  WHERE BV.BKG_NO = VB.BKG_NO
                                                  AND  BV.VSL_CD = V.VSL_CD
                                                  AND  BV.SKD_VOY_NO = V.SKD_VOY_NO
                                                  AND  BV.SKD_DIR_CD = V.SKD_DIR_CD
                                                  AND  BV.POL_CD = V.VPS_PORT_CD
                                                  AND  BV.POL_YD_CD = V.YD_CD
                                                  ) SA_DT
                                                --combine 관련 추가
                                                ,DECODE(VB.BKG_CUST_TP_CD, 'S', VB.CUST_CNT_CD) AS SHIPPER_CODE
                                                ,BKG.POR_CD AS POR
                                                ,BKG.POL_CD AS POL
                                                ,BKG.POD_CD AS POD
                                                ,BKG.DEL_CD AS DEL
                                                ,BKG.POR_NOD_CD
                                                ,BKG.DEL_NOD_CD
                                                ,DECODE(VB.BKG_CUST_TP_CD, 'B', VB.CUST_CNT_CD) AS BROKER
                                                ,BKG.BKG_OFC_CD AS BKG_OFC_NO
                                                ,BKG.HCMT_CMB_FLG AS HITCHMENT_YN
                                                ,BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS TVVD
                                                ,DPCS.BKG_NO DBKG_NO, DPCS.SR_CRNT_INFO_CD, DPCS.BL_DOC_INP_FLG, DPCS.BL_RT_FLG, DPCS.BL_AUD_FLG, DPCS.BL_DRFT_FAX_OUT_FLG, DPCS.SR_WRK_STS_CD
                                                ,VB.KEY_VSL_CD||VB.KEY_SKD_VOY_NO||VB.KEY_SKD_DIR_CD AS KEY_VVD
												,B.ADV_SHTG_CD
                                                ,(SELECT '('||AA.CNMV_YR||':'||AA.CNMV_ID_NO||':'||AA.CNMV_SEQ||')'||TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD|| SUBSTR(DECODE(SUBSTR(ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(ORG_YD_CD, 1, 5)), 1, 2)
					                              FROM CTM_MOVEMENT AA
					                              WHERE CNTR_NO = B.CNTR_NO
					                               AND BKG_NO =BKG.BKG_NO
					                               AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
					                               AND CNMV_EVNT_DT = (SELECT MAX(CNMV_EVNT_DT)
					                                                     FROM CTM_MOVEMENT
                    					                                WHERE CNTR_NO = B.CNTR_NO
                                        					              AND BKG_NO =BKG.BKG_NO
					                                                      AND MVMT_STS_CD  IN ('OC','OP'))
                    					           AND MVMT_STS_CD IN ('OC','OP')
					                               AND  NOT EXISTS ( SELECT   'Y' FROM BKG_CONTAINER 
					                                                 WHERE BKG_NO  = BKG.BKG_NO
					                                                 AND   CNTR_NO = B.CNTR_NO
					                                                 AND   CNTR_PRT_FLG ='Y')
					                               AND ROWNUM =1 ) CRN_VVD_CNT,                               
					                               
					                           (SELECT '('||CTM.CNMV_YR||':'||CTM.CNMV_ID_NO||':'||CTM.CNMV_SEQ||')'||TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(CTM.ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(CTM.ORG_YD_CD, 1, 5)), 1, 2)
					                              FROM CTM_MOVEMENT CTM ,
					                                   BKG_BOOKING BB ,
					                                   BKG_CONTAINER BC
					                             WHERE CTM.BKG_NO = BB.BKG_NO
					                               AND CTM.BKG_NO = BC.BKG_NO
					                               AND CTM.CNTR_NO = BC.CNTR_NO
					                               AND CTM.BKG_NO <> BKG.BKG_NO
					                               AND CTM.CNTR_NO = B.CNTR_NO
					                               AND CTM.BKG_CGO_TP_CD ='F'
					                               AND NVL(CTM.TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')                               
					                               AND  NOT EXISTS ( SELECT CTM2.CNMV_CYC_NO
					                                                       FROM CTM_MOVEMENT CTM2
					                                                       WHERE CTM2.CNTR_NO = CTM.CNTR_NO
					                                                         AND CTM2.CNMV_CYC_NO = CTM.CNMV_CYC_NO
					                                                         AND CTM2.MVMT_STS_CD  IN ('ID','IC')
					                                                         AND ROWNUM =1) 
					                               AND  NOT EXISTS ( SELECT BKG_NO FROM BKG_BOOKING 
					                                                  WHERE BKG_NO = BKG.BKG_NO AND BL_NO_TP <> '0')
					                                AND  NOT EXISTS ( SELECT   'Y' FROM BKG_CONTAINER 
					                                                 WHERE BKG_NO  = BKG.BKG_NO
					                                                 AND   CNTR_NO = B.CNTR_NO
					                                                 AND   CNTR_PRT_FLG ='Y')                       
					                               AND CTM.CNMV_CYC_NO > (SELECT MAX(CNMV_CYC_NO) - 3
					                                                        FROM CTM_MOVEMENT
					                                                       WHERE CNTR_NO = B.CNTR_NO
					                                                         AND BKG_NO = BKG.BKG_NO
					                                                         AND MVMT_STS_CD  IN ('OC','OP')
					                                                         AND BKG_NO IS NOT NULL                                        
					                                                         AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ'))
					                               AND CTM.CNMV_EVNT_DT < (SELECT MAX(CNMV_EVNT_DT) + 30
					                                                         FROM CTM_MOVEMENT
					                                                        WHERE CNTR_NO = B.CNTR_NO
					                                                          AND BKG_NO = BKG.BKG_NO
					                                                          AND MVMT_STS_CD  IN ('OC','OP')
					                                                          AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
					                                                          AND BKG_NO IS NOT NULL )
					                               AND CTM.CNMV_EVNT_DT >= (SELECT MAX(CNMV_EVNT_DT) - 30
					                                                          FROM CTM_MOVEMENT
					                                                         WHERE CNTR_NO = B.CNTR_NO
					                                                           AND BKG_NO = BKG.BKG_NO
					                                                           AND MVMT_STS_CD IN ('OC','OP')
					                                                           AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ') 
					                                                           AND BKG_NO IS NOT NULL)
					                               AND CTM.MVMT_STS_CD IN ('OC','OP')
					                               AND BB.BKG_STS_CD  = 'F'
					                               AND ROWNUM = 1 
					                               ) PRE_VVD_CNT ,                               
					                             (SELECT CTM.BKG_NO PRE_BKG_NO
					                              FROM CTM_MOVEMENT CTM ,
					                                   BKG_BOOKING BB ,
					                                   BKG_CONTAINER BC
					                             WHERE CTM.BKG_NO = BB.BKG_NO
					                               AND CTM.BKG_NO = BC.BKG_NO
					                               AND CTM.CNTR_NO = BC.CNTR_NO
					                               AND CTM.BKG_NO <> BKG.BKG_NO
					                               AND CTM.CNTR_NO = B.CNTR_NO
					                               AND CTM.BKG_CGO_TP_CD ='F'
					                               AND NVL(CTM.TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
					                               AND  NOT EXISTS ( SELECT CTM2.CNMV_CYC_NO
					                                                       FROM CTM_MOVEMENT CTM2
					                                                       WHERE CTM2.CNTR_NO = CTM.CNTR_NO
					                                                         AND CTM2.CNMV_CYC_NO = CTM.CNMV_CYC_NO
					                                                         AND CTM2.MVMT_STS_CD  IN ('ID','IC')
					                                                         AND CTM2.BKG_NO IS NOT NULL
					                                                         AND ROWNUM =1) 
					                               AND  NOT EXISTS ( SELECT BKG_NO FROM BKG_BOOKING 
					                                                  WHERE BKG_NO = BKG.BKG_NO AND BL_NO_TP <> '0'
					                                                   AND ROWNUM =1)  /* MEMO BL 제외*/
					                                AND  NOT EXISTS ( SELECT   'Y' FROM BKG_CONTAINER 
					                                                 WHERE BKG_NO  = BKG.BKG_NO
					                                                 AND   CNTR_NO = B.CNTR_NO
					                                                 AND   CNTR_PRT_FLG ='Y')                    
					                               AND CTM.CNMV_CYC_NO > (SELECT MAX(CNMV_CYC_NO) - 3
					                                                        FROM CTM_MOVEMENT
					                                                       WHERE CNTR_NO = B.CNTR_NO
					                                                         AND BKG_NO = BKG.BKG_NO
					                                                         AND MVMT_STS_CD  IN ('OC','OP')
					                                                         AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ')
					                                                         AND BKG_NO IS NOT NULL)
					                               AND CTM.CNMV_EVNT_DT >= (SELECT MAX(CNMV_EVNT_DT) - 30
					                                                          FROM CTM_MOVEMENT
					                                                         WHERE CNTR_NO = B.CNTR_NO
					                                                           AND BKG_NO = BKG.BKG_NO
					                                                           AND MVMT_STS_CD IN ('OC','OP')
					                                                           AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ')
					                                                           AND BKG_NO IS NOT NULL)
					                               AND CTM.MVMT_STS_CD IN ('OC','OP')
					                               AND BB.BKG_STS_CD ='F'
					                               AND ROWNUM =1
					                               ) PRE_BKG_NO
                                                ,B.CNTR_WGT
                                                ,B.MEAS_QTY
                                                ,B.WGT_UT_CD
												,(SELECT 'Y' 
                                                    FROM BKG_DOC_PROC_SKD BDPS
                                                   WHERE BDPS.BKG_NO = BKG.BKG_NO
                                                     AND BKG_DOC_PROC_TP_CD = 'SI_RDY'
                                                     AND DOC_PERF_DELT_FLG = 'N'
													 AND ROWNUM =1) SI_READY_FLG
                                                ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18
                                                --,DECODE(VGM_WGT_UT_CD , NULL ,0, DECODE(VGM_WGT, NULL, 0, 1) ) VGM_CNT_TARGET
                                                ,(CASE WHEN NVL(VGM_WGT,0) > 0 AND NVL(VGM_WGT_UT_CD,'X') != 'X' AND NVL(VGM_VRFY_SIG_CTNT,'X') != 'X' 
                                                       THEN 1
                                                       ELSE 0 
                                                  END) VGM_CNT_TARGET  
                                                ,VGM_VRFY_SIG_CTNT
                                                ,VGM_MZD_TP_CD
                                        FROM    BKG_CNTR_MANIFEST_V VB,
                                                BKG_CONTAINER B ,
                                                BKG_BL_DOC DOC
                                                --combine 관련 추가
                                                ,BKG_BOOKING BKG
                                                 --DPCS 추가
                                                ,(SELECT B.BKG_NO, SR_CRNT_INFO_CD,BL_DOC_INP_FLG,BL_RT_FLG,BL_AUD_FLG,BL_DRFT_FAX_OUT_FLG,SR_WRK_STS_CD
                                                   FROM  BKG_SR_CRNT_RQST B
                                                  WHERE  (B.BKG_NO, B.MAX_HIS_SEQ) IN ( SELECT A.BKG_NO, MAX(MAX_HIS_SEQ) 
                                                                                        FROM BKG_SR_CRNT_RQST A, BKG_CNTR_MANIFEST_V B 
                                                                                        WHERE SR_CRNT_STS_CD  != 'XX'  
                                                                                           AND A.BKG_NO(+) = B.BKG_NO 
    #if(${vvd_arr} != '')
                                                                                           AND (B.KEY_VSL_CD, B.KEY_SKD_VOY_NO, B.KEY_SKD_DIR_CD ) IN (
        #foreach($vvd_str IN ${vvd_arr})
            #if($velocityCount < $vvd_arr.size()) 
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1)),
    #else
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1))
                                                                                                      )
            #end
        #end
    #end
                                                                                        GROUP BY A.BKG_NO)
                                                ) DPCS
    #if (${p_del_conti} != '')
                                                , MDM_LOCATION MDM
    #end
                                                , MAS_RGST_BKG MAS
                                        WHERE   NVL(VB.BKG_STS_CD,'Z') <> 'X'
                                        AND     VB.BKG_NO       = B.BKG_NO(+)
                                        AND     VB.BKG_NO       = DOC.BKG_NO(+)
                                        --combine 관련 추가
                                        AND BKG.BKG_NO = VB.BKG_NO
                                        /*VVD*/
    #if(${vvd_arr} != '')
                                        AND (VB.KEY_VSL_CD, VB.KEY_SKD_VOY_NO, VB.KEY_SKD_DIR_CD ) IN (
        #foreach($vvd_str IN ${vvd_arr})
            #if($velocityCount < $vvd_arr.size())
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1)),
		    #else
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1))
                                                                                                      )
            #end
        #end
    #end

                                        AND     VB.BKG_NO = DPCS.BKG_NO(+)         -- DPCS 추가
																				

    #if (${p_pol_cd} != '') 
                                        /*POL*/
                                        AND     VB.KEY_POL_CD    LIKE '%'||@[p_pol_cd]||'%'
    #end

    #if (${p_pol_yd_cd} != '')
                                        /*POL YARD*/
                                        AND     SUBSTR(VB.POL_YD_CD,-2) = @[p_pol_yd_cd]
    #end
									 

    #if (${p_pol_lt} == 'LC') 
                                        /*POL L/T*/
                                        AND     VB.KEY_POL_CD  = VB.POL_CD /*POL의 L/T의 콤보박스의 LOCAL선택시*/
    #end

    #if (${p_pol_lt} == 'TS') 
                                        AND     VB.KEY_POL_CD  != VB.POL_CD/*POL의 L/T의 콤보박스의 TS선택시*/
    #end

																				
    #if (${p_por_cd} != '')
                                        /*POR*/
                                        AND     VB.POR_CD LIKE '%'||@[p_por_cd]||'%'
    #end

    #if (${p_apod_cd} != '')
                                        /*A/POD*/
                                        AND     VB.KEY_POD_CD LIKE '%'||@[p_apod_cd]||'%'
    #end


    #if (${p_apod_lt} == 'LC')
                                        /*APOD L/T*/
                                        AND     VB.KEY_POD_CD  = DOC.POD_CD /*A(Actual)/POD의 L/T의 콤보박스의 LOCAL선택시*/
    #end

    #if (${p_apod_lt} == 'TS') 
                                        AND     VB.KEY_POD_CD  != DOC.POD_CD /*A/POD의 L/T의 콤보박스의 TS선택시*/
    #end

    #if (${p_del_cd} != '')
                                        /*DEL*/
                                        AND     VB.DEL_CD LIKE '%'||@[p_del_cd]||'%'
    #end

    #if (${p_eq_type} != '')
                                        /*E/Q_TYPE*/
                                        AND B.CNTR_TPSZ_CD = @[p_eq_type]
    #end

    #if (${p_rcv_term_cd} != '')
                                        /*R/D R*/
                                        AND VB.RCV_TERM_CD = @[p_rcv_term_cd]
    #end


    #if (${p_de_term_cd} != '')
                                        /*R/D D*/
                                        AND VB.DE_TERM_CD= @[p_de_term_cd]
    #end
																			 
/*BKG OFFICE*/
    #if (${p_bkg_ofc_cd} != '')
/*SUB*/
        #if (${p_ofc_cd} != '')
                                        AND VB.BKG_OFC_CD IN (SELECT            OFC_CD 
                                                              FROM              MDM_ORGANIZATION A 
                                                              START WITH        A.OFC_CD LIKE '%'||@[p_bkg_ofc_cd]||'%'
                                                              CONNECT BY PRIOR  A.OFC_CD = A.PRNT_OFC_CD
                                                             )
        #else  
                                        AND VB.BKG_OFC_CD LIKE '%'||@[p_bkg_ofc_cd]||'%'
        #end
    #end
																									
    #if (${p_doc_usr_id} != '') 
                                        /*BKG STF*/
                                        AND UPPER(VB.DOC_USR_ID) LIKE '%'||UPPER(@[p_doc_usr_id])||'%'
    #end
/*Sales Office*/						
    #if (${p_ob_sls_ofc_cd} != '') 
/*SUB*/
        #if (${l_ofc_sub} != '')
                                        AND VB.OB_SLS_OFC_CD IN (SELECT            OFC_CD 
                                                              FROM              MDM_ORGANIZATION A 
                                                              START WITH        A.OFC_CD LIKE '%'||@[p_ob_sls_ofc_cd]||'%'
                                                              CONNECT BY PRIOR  A.OFC_CD = A.PRNT_OFC_CD
                                                             )
        #else  
                                        AND VB.OB_SLS_OFC_CD LIKE '%'||@[p_ob_sls_ofc_cd]||'%'
        #end
    #end          

    #if (${p_ob_srep_cd} != '') 
                                        /*Sales Rep*/
                                        AND VB.OB_SREP_CD LIKE '%'||@[p_ob_srep_cd]||'%'
    #end

/*CTRT Office*/
    #if (${p_ctrt_ofc_cd} != '') 
/*SUB*/
        #if (${c_ofc_sub} != '')
                                        AND BKG.CTRT_OFC_CD IN (SELECT            OFC_CD 
                                                              FROM              MDM_ORGANIZATION A 
                                                              START WITH        A.OFC_CD LIKE '%'||@[p_ctrt_ofc_cd]||'%'
                                                              CONNECT BY PRIOR  A.OFC_CD = A.PRNT_OFC_CD
                                                             )
        #else  
                                        AND BKG.CTRT_OFC_CD LIKE '%'||@[p_ctrt_ofc_cd]||'%'
        #end
    #end          

    #if (${p_ctrt_srep_cd} != '') 
                                        /*Sales Rep*/
                                        AND BKG.CTRT_SREP_CD LIKE '%'||@[p_ctrt_srep_cd]||'%'
    #end 

    #if (${p_bkg_sts_cd} != '') 
                                        /*BKG Status*/
                                        AND VB.BKG_STS_CD LIKE '%'||@[p_bkg_sts_cd]||'%'
    #end

    #if (${p_cnmv_sts_cd} == 'AP') 
                                        /*Cargo Status*/
                                        AND VB.BKG_CGO_TP_CD <> 'P'
    #elseif (${p_cnmv_sts_cd} != 'A') 
                                        AND VB.BKG_CGO_TP_CD = @[p_cnmv_sts_cd]
    #end
										AND     bkg.BKG_NO = MAS.BKG_NO
    #if (${p_zone_cd} == 'OCN') 
                                        /*Zone OCN*/
                                        --AND (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POL_CD) <> (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POD_CD)			
										AND     MAS.IOC_CD = 'O'
    #end

    #if (${p_zone_cd} == 'IPT') 
                                        /*Zone IPT*/
                                        --AND (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POL_CD) = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POD_CD)			
										AND     MAS.IOC_CD = 'I'
    #end

    #if (${p_del_conti} != '') 
                                        /*DEL CONTINENT*/
                                        AND DOC.DEL_CD = MDM.LOC_CD
                                        AND MDM.CONTI_CD = @[p_del_conti]
    #end


    #if (${p_dcgo_flg} !='' || ${p_rc_flg} != ''||${p_awk_cgo_flg} != ''||${p_bb_cgo_flg} != ''||${p_soc_cgo_flg} != '')
                                        /*Special Cargo DANGER*/
                                        AND (1 = 2
        #if (${p_dcgo_flg} != '') 
                                            OR VB.DCGO_FLG = 'Y'
        #end
        
        #if (${p_rc_flg} != '') 
                                            /*Special Cargo REEFER*/
                                            OR VB.RC_FLG = 'Y'				
        #end

        #if (${p_awk_cgo_flg} != '')
                                            /*Special Cargo AWKWARD*/
                                            OR VB.AWK_CGO_FLG = 'Y'
        #end

        #if (${p_bb_cgo_flg} != '') 
                                            /*Special Cargo BREAK BULK*/
                                            OR VB.BB_CGO_FLG = 'Y'
        #end

        #if (${p_soc_cgo_flg} != '') 
                                            /*Special Cargo SOC*/
                                            OR VB.SOC_FLG = 'Y'
        #end
                                            )
    #end

#if (${p_awk_cgo_flg} != '')
    AND B.AWK_CGO_FLG(+) = 'Y'
#end
#if (${p_rc_flg} != '')
    AND B.RC_FLG(+) = 'Y'
#end
#if (${p_dcgo_flg} != '')
    AND B.DCGO_FLG(+) = 'Y'
#end

    #if (${p_bdr_flg} != '') 
                                        /*BDR Status*/
                                        AND DOC.BDR_FLG = @[p_bdr_flg] --YN
    #end

    #if (${p_si_flg} != '') 
                                        /*SI_FLG*/
                                        AND VB.SI_FLG = @[p_si_flg] --YN
    #end

    #if (${p_obl_iss_ofc_cd} != '') 
                                        /*B/L Office*/
                                        AND   EXISTS  ( SELECT 'Y'
                                                        FROM   BKG_BL_ISS
                                                        WHERE  BKG_NO = VB.BKG_NO
                                                        AND    OBL_ISS_OFC_CD LIKE '%'||@[p_obl_iss_ofc_cd]||'%'
                                                      )
    #end
                                        /* Customer */
                                        AND EXISTS (SELECT 'Y' 
                                                    FROM BKG_CUSTOMER Z
                                                    WHERE 1=1
                                                    AND Z.BKG_NO = VB.BKG_NO
    #if (${p_bkg_cust_tp_cd} !='')
                                                    /*CUSTOMER TP CD*/
                                                    AND Z.BKG_CUST_TP_CD = @[p_bkg_cust_tp_cd]
    #end

    #if (${p_cust_cnt_cd} !='')
                                                    /*CUSTOMER CODE COUNTRY --KR*/
                                                    AND Z.CUST_CNT_CD =@[p_cust_cnt_cd]
    #end

    #if (${p_cust_seq} !='')
                                                    /*CUSTOMER SEQ --001*/
                                                    AND Z.CUST_SEQ =@[p_cust_seq]
    #end

    #if (${p_cust_nm} != '')
                                                    /*CUSTOMER Name*/
                                                    AND UPPER(Z.CUST_NM) LIKE '%'||UPPER(@[p_cust_nm])||'%'
    #end

    #if (${sc_no} != '')
                                                    /*CUSTOMER Name*/
                                                    AND BKG.SC_NO = @[sc_no]
    #end

    #if (${p_si_ready_flg} != '')
                                                    /*BL Ready Flag*/
                                                    AND EXISTS (SELECT 'X' 
                                                                  FROM BKG_DOC_PROC_SKD BDPS
                                                                 WHERE BDPS.BKG_NO = BKG.BKG_NO
                                                                   AND BKG_DOC_PROC_TP_CD = 'SI_RDY'
                                                                   AND DOC_PERF_DELT_FLG = 'N')
    #end 
                                                   )
	#if ($blck_stwg_arr.size() > 0)
						AND BKG.STWG_CD IN (
								#foreach($blck_stwg_cd IN ${blck_stwg_arr})
									#if($velocityCount < $blck_stwg_arr.size()) '$blck_stwg_cd' ,
									#else 								   		'$blck_stwg_cd'
									#end
								#end
						)
	#end

    -------------------------------------------------------------------------------
	#if(${vgm_flg} =='Y')
													AND NVL(VGM_WGT,0) > 0
													AND NVL(VGM_WGT_UT_CD,'X') != 'X'
													AND NVL(VGM_VRFY_SIG_CTNT,'X') != 'X'
	#elseif(${vgm_flg} =='I')
													AND NVL(VGM_WGT,0) > 0
													AND NVL(VGM_VRFY_SIG_CTNT,'X') = 'X'
	#elseif(${vgm_flg} =='N')
													AND NVL(B.VGM_WGT,0) = 0
	#end
    -------------------------------------------------------------------------------

                                   )
                            WHERE 1=1
    #if (${entr_clss_tp_cd} != '')
	    #if (${entr_clss_tp_cd} == 'GE')
                            AND   ENTR_CLSS_TP_CD = 'G'
	    #elseif (${entr_clss_tp_cd} == 'IE')
                            AND   ENTR_CLSS_TP_CD IN ('IE','TE')
	    #end
    #end

    #if(${BL} !='' || ${CFC} != '' || ${CMC} != '' || ${MD} != '' || ${VLC} != ''|| ${IS} != '' || ${RC} != '')
                            AND (1 = 2 
        #if (${BL} != '') 
                                OR   NVL(CHARGE,'N') = 'N'       /*UN RATE BL       */
        #end

        #if (${CFC} != '') 
                                OR   NVL(CNTR_CFM_FLG,'N') = 'N' /*UN CONFIRM CNTR  */
        #end

        #if (${CMC} != '') 
                                OR   NVL(CM,'N') = 'N'            /*NON CM           */
        #end

        #if (${MD} != '') 
                                OR   NVL(MD,'N') = 'N'           /*NON MD           */
        #end

        #if (${VLC} != '') 
                                OR   NVL(ST,'N') <> 'VL'         /*NON VL           */ 
        #end

        #if (${IS} != '') 
                                OR   NVL(ISSUE,'N') = 'N'         /*NON ISSUE           */ 
        #end

        #if (${RC} != '') 
                                OR   NVL(RECEIVING,'N')  = 'N'   /*NON SR Received BL */
        #end
                                )
    #end
    #if (${pol_etd_fr_dt} != '' && ${pol_etd_to_dt} != '') 
                         AND SA_DT >= TO_DATE(@[pol_etd_fr_dt],'YYYY-MM-DD')
                         AND SA_DT < TO_DATE(@[pol_etd_to_dt],'YYYY-MM-DD') + 1
    #end
                         )
                ORDER BY  BKG_NO,CNTR_NO
              )
      )
WHERE RNUM BETWEEN NVL(@[rows_per_page],50) * (NVL(@[curr_page],1) - 1) + 1
AND     NVL(@[rows_per_page],50) *  NVL(@[curr_page],1)

    #if (${chk_dup_vvd} != '')
AND   CNTR_CHECK = @[chk_dup_vvd]
    #end
----------------------------------------------------------------------------------------------------------------------------------------
#else

SELECT DENSE_RANK   ,DENSE_RANK2
      ,BKG_NO       ,BL_NO          ,OB_SLS_OFC_CD      ,OB_SREP_CD		,CTRT_OFC_CD
      ,DECODE(STWG_CD||BLCK_STWG_CD,'OLBPLBP',DECODE(LBP_FLG,'Y','LBP',''),BLCK_STWG_CD) BLCK_STWG_CD	
      ,BKG_STS_CD     ,BKG_CGO_TP_CD  ,QTY_BKG    ,QTY_CNTR
      ,CNTR_CFM_FLG ,CNTR_NO        ,SZ
      ,VOL          ,SEAL           ,FIRM               ,ST             ,CM             ,SHIPPER    ,CONSIGNEE      ,FFDR       ,FF         ,MD            
      ,AES, CUST_TP ,TAX_ID         ,AES_YN             ,EL_NO          ,DDE            ,PEB        ,CAED           ,POD_CD     ,DEL_CD 
      ,RCV_TERM_CD  ,DE_TERM_CD     ,CHARGE             ,APPRVAL        ,PKG            ,WEIGHT     ,MEASUERE       ,SPECIAL_D  ,SPECIAL_R  ,SPECIAL_A
      ,SPECIAL_B    ,BDR            ,ISSUE              ,RECEIVING      ,VIA
      ,COUNT(DISTINCT BKG_NO) OVER() TOTAL_BKG
      ,COUNT(DISTINCT BL_NO) OVER() TOTAL_BL
      ,TOTAL_BKG_F ||' F' AS TOTAL_BKG_F
      ,TOTAL_BKG_T ||' T' AS TOTAL_BKG_T
      ,TOTAL_CTRL_F||' F' AS TOTAL_CTRL_F
      ,TOTAL_CTRL_T||' T' AS TOTAL_CTRL_T
      ,TOTAL_CFM
      ,TOTAL_VL
      ,TOTAL_CM
      ,TOTAL_MD
      ,TOTAL_CHARGE
      ,TOTAL_APPRVAL
      ,TOTAL_ISSUE
      ,TOTAL_RECEIVING
      ,RNUM 
      ,CTR_RNUM
      ,ROWS_PER_PAGE
      ,CURR_PAGE
      ,TOTAL_CNT
      ,P_NO_GOOD
      ,ROWS_PER_BKG
      ,SHIPPER_CODE
      ,POR
      ,POL
      ,POD
      ,DEL
      ,POR_NOD_CD
      ,DEL_NOD_CD
      ,BROKER
      ,BKG_OFC_NO
      ,HITCHMENT_YN
      ,TVVD
      ,KEY_VVD
      ,DPCS_I
      ,DPCS_R
      ,DPCS_Q
      ,DPCS_F
      ,DPCS_STS
      ,DPCS_TTL
      ,DPCS_INPUT
      ,DPCS_RATE
      ,DPCS_QA
      ,DPCS_BL_PROOF
      ,STATUS_COMPLETE
      ,STATUS_PENDING
      ,STATUS_OPEN
      ,CNTR_CHECK
      ,CNTR_WGT
      ,MEAS_QTY
      , WGT_UT_CD
      , SI_READY_FLG
      , EVENT_YARD
      , EVENT_DT	  
      , EVNT_USR_ID CNTR_CFM_ID
      ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18
      ,VGM_CNT_TARGET, TOTAL_VGM_CNT
      ,COUNT(CNTR_NO) OVER() TOTAL_CNTR_CNT
      ,NVL(COUNT(CNTR_NO) OVER() - TOTAL_VGM_CNT,0) TOTAL_NO_VGM_CNT
      ,VGM_VRFY_SIG_CTNT
      ,VGM_MZD_TP_CD
FROM   ( 
          SELECT DENSE_RANK() OVER( ORDER BY BKG_NO) DENSE_RANK,DENSE_RANK() OVER( ORDER BY BKG_NO) DENSE_RANK2
                ,BKG_NO         ,BL_NO          ,OB_SLS_OFC_CD  ,OB_SREP_CD		,CTRT_OFC_CD		,BLCK_STWG_CD, STWG_CD		,BKG_STS_CD     ,BKG_CGO_TP_CD      ,QTY_BKG        ,QTY_CNTR
                ,CNTR_CFM_FLG   ,CNTR_NO        ,LBP_FLG ,SZ
                ,VOL            ,SEAL           ,FIRM           ,ST             ,CM                 ,SHIPPER		,CONSIGNEE      ,FFDR         ,FF           ,MD           ,AES
                ,ENTR_CLSS_TP_CD AS CUST_TP     ,TAX_ID
                ,DECODE((SELECT  CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = KEY_POL_CD),'M','Y','N') AES_YN, EL_NO   ,DDE            ,PEB, CAED    ,POD_CD       ,DEL_CD 
                ,RCV_TERM_CD    ,DE_TERM_CD     ,CHARGE         ,APPRVAL        ,PKG                ,WEIGHT         ,MEASUERE       ,SPECIAL_D    ,SPECIAL_R    ,SPECIAL_A
                ,SPECIAL_B      ,BDR            ,ISSUE          ,RECEIVING      ,VIA                ,TOTAL_BKG      ,TOTAL_BL      
                ,TRIM(TOTAL_BKG_F) TOTAL_BKG_F  ,TRIM(TOTAL_BKG_T) TOTAL_BKG_T  ,TRIM(TOTAL_CTRL_F) TOTAL_CTRL_F    ,TRIM(TOTAL_CTRL_T) TOTAL_CTRL_T 
                ,TOTAL_CFM      ,TOTAL_VL       ,TOTAL_CM       ,TOTAL_MD       ,TOTAL_CHARGE       ,TOTAL_APPRVAL  ,TOTAL_ISSUE    ,TOTAL_RECEIVING            ,ROWNUM RNUM 
                ,CTR_RNUM       ,'' ROWS_PER_PAGE               ,'' CURR_PAGE   ,COUNT(1) OVER() TOTAL_CNT          ,'' P_NO_GOOD
                ,COUNT(BKG_NO) OVER(PARTITION BY BKG_NO) ROWS_PER_BKG
                ,SHIPPER_CODE
                ,POR
                ,POL
                ,POD
                ,DEL
                ,POR_NOD_CD
                ,DEL_NOD_CD
                ,BROKER
                ,BKG_OFC_NO
                ,HITCHMENT_YN
                ,TVVD
                ,KEY_VVD
                ,DPCS_I, DPCS_R, DPCS_Q, DPCS_F, DPCS_STS
	  		    ,DPCS_TTL, DPCS_INPUT, DPCS_RATE, DPCS_QA, DPCS_BL_PROOF, STATUS_COMPLETE, STATUS_PENDING, STATUS_OPEN
	  		    ,DECODE(CNTR_CHECK,'D',PRE_BKG_NO,CNTR_CHECK) CNTR_CHECK
                ,CNTR_WGT
                ,MEAS_QTY
                ,WGT_UT_CD
				,NVL(SI_READY_FLG,'N') SI_READY_FLG
        		,ORG_YD_CD EVENT_YARD
        		,CNMV_EVNT_DT EVENT_DT	
                , EVNT_USR_ID 
                ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18	
 		        ,VGM_CNT_TARGET, TOTAL_VGM_CNT
                ,VGM_VRFY_SIG_CTNT
                ,VGM_MZD_TP_CD
          FROM (
				    SELECT 
                            BKG_NO,
                            BL_NO,
                            OB_SLS_OFC_CD,
							OB_SREP_CD,
							CTRT_OFC_CD,
							BLCK_STWG_CD,
							STWG_CD,
                            BKG_STS_CD,
                            BKG_CGO_TP_CD,
                            QTY_BKG,
                            QTY_CNTR,
                            CNTR_CFM_FLG,
                            CNTR_NO,
                            LBP_FLG,
                            SZ,
                            VOL,
                            SEAL,
                            FIRM,
                            ST,
                            CM,
                            SHIPPER,
                            CONSIGNEE,
                            FFDR,
                            FF,
                            MD,
                            AES,
                            ENTR_CLSS_TP_CD,
                            TAX_ID,
                            EL_NO,
                            DDE,
                            PEB,
                            CAED,
                            KEY_POL_CD,
                            POD_CD,
                            DEL_CD,
                            RCV_TERM_CD,
                            DE_TERM_CD,
                            CHARGE,
                            APPRVAL,
                            PKG,
                            WEIGHT,
                            MEASUERE,
                            SPECIAL_D,
                            SPECIAL_R,
                            SPECIAL_A,
                            SPECIAL_B,
                            BDR,
                            ISSUE,
                            RECEIVING,
                            VIA,
                            COUNT(DISTINCT BKG_NO) OVER() TOTAL_BKG,
                            COUNT(DISTINCT BL_NO) OVER() TOTAL_BL,
                            TO_CHAR(SUM(DECODE(RNUM,1,TOTAL_BKG_F,0)) OVER() ,'99990.99') TOTAL_BKG_F,
                            TO_CHAR(SUM(DECODE(RNUM,1,TOTAL_BKG_T,0)) OVER() ,'99990.99') TOTAL_BKG_T,
                            TO_CHAR(SUM(DECODE(CTR_RNUM,1,DECODE(SUBSTR(SZ,-1),'2',0,VOL))) OVER() ,'99990.99') TOTAL_CTRL_F,
                            TO_CHAR(SUM(DECODE(CTR_RNUM,1,DECODE(SUBSTR(SZ,-1),'2',VOL,0))) OVER() ,'99990.99') TOTAL_CTRL_T,

                            COUNT(DECODE(CTR_RNUM,1,DECODE(CNTR_CFM_FLG,'N',1,NULL) )) OVER()  TOTAL_CFM,
                            COUNT(DECODE(CTR_RNUM,1,DECODE(ST,'VL',NULL,1) )) OVER()  TOTAL_VL,
                            COUNT(DECODE(CTR_RNUM,1,DECODE(CM,'Y',NULL,'F',NULL,1) )) OVER()  TOTAL_CM,

                            COUNT(DECODE(RNUM,1,DECODE(MD,'N',1,NULL) )) OVER() TOTAL_MD,
                            COUNT(DECODE(RNUM,1,DECODE(CHARGE,'N',1,NULL) )) OVER() TOTAL_CHARGE,
                            COUNT(DECODE(RNUM,1,DECODE(APPRVAL,'N',1,NULL) )) OVER() TOTAL_APPRVAL,
                            COUNT(DECODE(RNUM,1,DECODE(ISSUE,'N',1,NULL) )) OVER() TOTAL_ISSUE,
                            COUNT(DECODE(RNUM,1,DECODE(RECEIVING,'N',1,NULL) )) OVER() TOTAL_RECEIVING,

                            RNUM,
                            CTR_RNUM
                            ,SHIPPER_CODE
                            ,POR
                            ,POL
                            ,POD
                            ,DEL
                            ,POR_NOD_CD
                            ,DEL_NOD_CD
                            ,BROKER
                            ,BKG_OFC_NO
                            ,HITCHMENT_YN
                            ,TVVD
                            ,DPCS_I, DPCS_R, DPCS_Q, DPCS_F, DPCS_STS, KEY_VVD,
                            COUNT(DECODE(RNUM,1,DECODE(DBKG_NO,NULL,NULL,1),NULL)) OVER() DPCS_TTL,    	  		    	  		
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_I,'Y',1,NULL) )) OVER() DPCS_INPUT,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_R,'Y',1,NULL) )) OVER() DPCS_RATE,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_Q,'Y',1,NULL) )) OVER() DPCS_QA,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_F,'Y',1,NULL) )) OVER() DPCS_BL_PROOF,

                            COUNT(DECODE(RNUM,1,DECODE(DPCS_STS,'Y',1,NULL) )) OVER() STATUS_COMPLETE,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_STS,'P',1,NULL) )) OVER() STATUS_PENDING,
                            COUNT(DECODE(RNUM,1,DECODE(DPCS_STS,'W',1,NULL) )) OVER() STATUS_OPEN,
                            DECODE(ADV_SHTG_CD,NULL,CNTR_CHECK,ADV_SHTG_CD) CNTR_CHECK
						    ,PRE_BKG_NO
                            ,CNTR_WGT
                            ,MEAS_QTY
                            ,WGT_UT_CD
							,SI_READY_FLG
            				,ORG_YD_CD
            				,CNMV_EVNT_DT
                            , EVNT_USR_ID 
                            ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18	
                            ,VGM_CNT_TARGET,  SUM(VGM_CNT_TARGET) OVER() TOTAL_VGM_CNT						
                            ,VGM_VRFY_SIG_CTNT
                            ,VGM_MZD_TP_CD
                    FROM (
                            SELECT 
                                    BKG_NO,
                                    BL_NO,
                                    OB_SLS_OFC_CD,
									OB_SREP_CD,
									CTRT_OFC_CD,
									BLCK_STWG_CD,
									STWG_CD,
                                    BKG_STS_CD,
                                    BKG_CGO_TP_CD,
                                    QTY_BKG,
                                    TOTAL_BKG_T,
                                    TOTAL_BKG_F,
                                    QTY_CNTR,
                                    NVL(CNTR_CFM_FLG,'N') AS CNTR_CFM_FLG,
                                    CNTR_NO,
                                    LBP_FLG,
                                    SZ,
                                    VOL,
                                    SEAL,
                                    FIRM,
                                    NVL(ST,'N') AS ST,
                                    NVL(CM,'N') AS CM,
                                    SHIPPER,
                                    CONSIGNEE,
                                    FFDR,
                                    FF,
                                    NVL(MD,'N') AS MD,
                                    AES,
                                    ENTR_CLSS_TP_CD,
                                    TAX_ID,
                                    EL_NO,
                                    DDE,
                                    PEB,
                                    CAED,
                                    KEY_POL_CD,
                                    POD_CD,
                                    DEL_CD,
                                    RCV_TERM_CD,
                                    DE_TERM_CD,
                                    NVL(CHARGE,'N') AS CHARGE,
                                    APPRVAL,
                                    PKG,
                                    WEIGHT,
                                    MEASUERE,
                                    SPECIAL_D,
                                    SPECIAL_R,
                                    SPECIAL_A,
                                    SPECIAL_B,
                                    BDR,
                                    NVL(ISSUE,'N') AS ISSUE,
                                    NVL(RECEIVING,'N') AS RECEIVING,
                                    VIA,
                                    ROW_NUMBER() OVER (PARTITION BY BKG_NO,CNTR_NO  ORDER BY BKG_NO,CNTR_NO) AS CTR_RNUM,
                                    ROW_NUMBER() OVER (PARTITION BY BKG_NO  ORDER BY BKG_NO ) AS RNUM
                                   ,SHIPPER_CODE
                                   ,POR
                                   ,POL
                                   ,POD
                                   ,DEL
                                   ,POR_NOD_CD
                                   ,DEL_NOD_CD
                                   ,BROKER
                                   ,BKG_OFC_NO
                                   ,HITCHMENT_YN
                                   ,TVVD
                                   ,DBKG_NO, NVL(BL_DOC_INP_FLG,'N') AS DPCS_I, NVL(BL_RT_FLG,'N') AS DPCS_R, NVL(BL_AUD_FLG,'N') AS DPCS_Q, NVL(BL_DRFT_FAX_OUT_FLG,'N') AS DPCS_F, NVL(SR_WRK_STS_CD,'N') AS DPCS_STS
                                   ,KEY_VVD
                                   ,ADV_SHTG_CD
                                   ,DECODE(CRN_VVD_CNT,NULL,'',
                                    DECODE(PRE_VVD_CNT,NULL,'',
                                    DECODE(SUBSTR(CRN_VVD_CNT,-2),SUBSTR(PRE_VVD_CNT,-2),'D',''))) CNTR_CHECK
								   ,PRE_BKG_NO
                                   ,CNTR_WGT
                                   ,MEAS_QTY
                                   ,WGT_UT_CD
								   ,SI_READY_FLG
            					   ,ORG_YD_CD
            					   ,CNMV_EVNT_DT	
                                   , EVNT_USR_ID 	
                                   ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18	
                                   ,VGM_CNT_TARGET	
                                   ,VGM_VRFY_SIG_CTNT
                                   ,VGM_MZD_TP_CD				   
							FROM   (
								        SELECT /*+ NO_MERGE(DPCS) USE_HASH(DPCS) */  
                                                VB.BKG_NO,
                                                VB.BL_NO,
                                                VB.OB_SLS_OFC_CD,/*Sales Office*/
												VB.OB_SREP_CD,
												BKG.CTRT_OFC_CD, /*Ctrt Office Code */
												BKG.BLCK_STWG_CD,
												BKG.STWG_CD,
                                                VB.BKG_STS_CD,/*status1*/ 
                                                VB.BKG_CGO_TP_CD,/*Status2*/
                                                BKG_JOIN_FNC( CURSOR(SELECT CNTR_TPSZ_CD||'-'||ltrim(TO_CHAR(NVL(OP_CNTR_QTY, 0),'99990.99'))
                                                                                         FROM BKG_QTY_DTL
                                                                                         WHERE BKG_NO = VB.BKG_NO                                                     
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
                                                                                         ORDER BY CNTR_TPSZ_CD
                                                                         )
                                                ) QTY_BKG,/*QTY-BKG*/
                                                         
                                                (SELECT NVL(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',NVL(OP_CNTR_QTY, 0))),0)
                                                                                         FROM BKG_QTY_DTL
                                                                                         WHERE BKG_NO = VB.BKG_NO
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
																						 #if (${p_awk_cgo_flg} != '')
                                                                                              AND AWK_CGO_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_rc_flg} != '')
                                                                                              AND RC_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_dcgo_flg} != '')
                                                                                              AND DCGO_FLG = 'Y'
																						 #end
                                                ) TOTAL_BKG_T,/*TOTAL_BKG_T*/
                                                 
                                                (SELECT NVL(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD,-1),'2',NULL,NVL(OP_CNTR_QTY, 0))),0)
                                                                                         FROM BKG_QTY_DTL
                                                                                         WHERE BKG_NO = VB.BKG_NO
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
																						 #if (${p_awk_cgo_flg} != '')
                                                                                              AND AWK_CGO_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_rc_flg} != '')
                                                                                              AND RC_FLG = 'Y'
                                                                                         #end
                                                                                         #if (${p_dcgo_flg} != '')
                                                                                              AND DCGO_FLG = 'Y'
																						 #end
                                                ) TOTAL_BKG_F,/*TOTAL_BKG_F*/
                                                         
                                                BKG_JOIN_FNC( CURSOR(SELECT  CNTR_TPSZ_CD||'-'||ltrim(TO_CHAR(NVL(sum(CNTR_VOL_QTY), 0),'99990.99'))
                                                                                         FROM    BKG_CONTAINER
                                                                                         WHERE BKG_NO = VB.BKG_NO
                                                                                         AND   CNTR_TPSZ_CD IS NOT NULL
                                                                                         GROUP BY CNTR_TPSZ_CD
                                                                                         ORDER BY CNTR_TPSZ_CD
                                                                     )
                                                ) QTY_CNTR,/*QTY-CNTR*/
                                                         
                                                (SELECT 'Y' FROM BKG_DOC_PROC_SKD K
                                                 WHERE K.BKG_NO = VB.BKG_NO
                                                 AND BKG_DOC_PROC_TP_CD ='CNTCFM'
                                                 AND DOC_PERF_DELT_FLG ='N' 
                                                ) AS CNTR_CFM_FLG, /*Final Confirm*/

                                                (SELECT EVNT_USR_ID FROM BKG_DOC_PROC_SKD K
                                                 WHERE K.BKG_NO = VB.BKG_NO
                                                 AND BKG_DOC_PROC_TP_CD ='CNTCFM'
                                                 AND DOC_PERF_DELT_FLG ='N' 
                                                ) AS EVNT_USR_ID, /*Final Confirm ID*/

                                                B.CNTR_NO CNTR_NO,/*NO.*/
                                                B.LBP_FLG,
                                                B.CNTR_TPSZ_CD SZ, /*SZ*/
                                                nvl(B.CNTR_VOL_QTY,0) VOL, /*Vol*/
                                                B.MF_CFM_FLG FIRM,  /*Firm*/
                                               --B.CNMV_STS_CD ST, /*ST*/
											    ( SELECT /*+ INDEX_DESC(A XPKCTM_MOVEMENT) */  MVMT_STS_CD
												  FROM CTM_MOVEMENT A
												  WHERE CNTR_NO = B.CNTR_NO
												  AND CNMV_YR = B.CNMV_YR
												  AND CNMV_CYC_NO = B.CNMV_CYC_NO
												  AND ROWNUM = 1 )  ST, /*ST*/
                                            
                                                NVL( (SELECT DECODE(MF_CFM_FLG,'Y','F','Y') 
                                                            FROM BKG_CONTAINER CNTR, BKG_CNTR_MF_DESC MF
                                                            WHERE CNTR.BKG_NO = VB.BKG_NO 
                                                              AND CNTR.BKG_NO = MF.BKG_NO
                                                              AND CNTR.CNTR_NO = MF.CNTR_NO
                                                              AND ROWNUM = 1)
                                                        ,'N') CM, /*CM*/

                                                NVL( (SELECT 'Y' 
                                                            FROM BKG_CNTR_SEAL_NO 
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                              AND CNTR_NO = B.CNTR_NO
                                                              AND CNTR_SEAL_NO IS NOT NULL 
                                                              AND ROWNUM = 1)
                                                        ,'N') SEAL, /*SEAL*/
                                                
                                                DECODE(VB.BKG_CUST_TP_CD,'S',REPLACE(VB.CUST_NM,chr(13)||chr(10),' ')) SHIPPER,/*Shipper*/
                                                DECODE(VB.C_BKG_CUST_TP_CD,'C',REPLACE(VB.C_CUST_NM,chr(13)||chr(10),' ')) CONSIGNEE,/*CONSIGNEE*/
                                                DECODE(VB.F_BKG_CUST_TP_CD,'F',REPLACE(VB.F_CUST_NM,chr(13)||chr(10),' ')) FFDR,/*F/Forwarder*/
                                                
                                                NVL( (SELECT DECODE(CUST_CNT_CD,NULL,'N','Y')
                                                            FROM BKG_CUSTOMER 
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                            AND   BKG_CUST_TP_CD = 'F'
                                                            AND ROWNUM = 1)
                                                        ,'N') FF,/*FF*/
                                                
                                                NVL( (SELECT 'Y'
                                                            FROM BKG_BL_MK_DESC
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                            AND ROWNUM = 1)
                                                        ,'N') MD, /*M/D*/
                                                        
                                                (SELECT AES_TP_CD
                                                 FROM   BKG_XPT_IMP_LIC
                                                 WHERE  BKG_NO = VB.BKG_NO
                                                 AND    IO_BND_CD = 'O'
                                                 AND    CNT_CD = 'US'
                                                 AND    ROWNUM <= 1
                                                ) AES, /*AES*/

                                                NVL((SELECT ENTR_CLSS_TP_CD
                                                 FROM   BKG_XPT_IMP_LIC
                                                 WHERE  BKG_NO = VB.BKG_NO
                                                 AND    IO_BND_CD = 'O'
                                                 AND    CNT_CD = 'US'
                                                 AND    ROWNUM <= 1),'G'
                                                ) ENTR_CLSS_TP_CD, /*US TYPE*/

                                                NVL(( SELECT 'Y' 
                                                            FROM BKG_XPT_IMP_LIC
                                                            WHERE 1=1 
                                                            AND BKG_NO = VB.BKG_NO
                                                            AND ROWNUM = 1
                                                           ),'N') TAX_ID, /*MX*/

                                                NVL( (SELECT 'Y'
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND XPT_LIC_NO IS NOT NULL
                                                     AND IO_BND_CD= 'O'
                                                     AND ROWNUM =1 ),'N') EL_NO /*E/L*/,
                                                NVL( (SELECT 'Y'	
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND BRZ_DECL_NO IS NOT NULL
                                                     AND IO_BND_CD ='O'
                                                     AND ROWNUM =1 ),'N') DDE ,
                                                NVL( (SELECT 'Y' 
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND ID_DECL_CD IS NOT NULL
                                                     AND IO_BND_CD ='O'
                                                     AND ROWNUM =1),'N') PEB,
                                                (SELECT CAED_TP_CD
                                                     FROM BKG_XPT_IMP_LIC
                                                     WHERE BKG_NO = VB.BKG_NO
                                                     AND CNT_CD = 'CA'
                                                     AND ROWNUM =1
                                                ) CAED,
                                                KEY_POL_CD,
                                                VB.POD_CD,/*POD*/
                                                VB.DEL_CD,/*DEL*/
                                                B.RCV_TERM_CD ,/*SCV-R*/
                                                B.DE_TERM_CD ,/*SCV-D*/
                                                
                                                NVL( (SELECT DECODE(BKG_RATE_RESULT_FNC(VB.BKG_NO),'F','Y','N') FROM DUAL)
                                                        ,'N') CHARGE, /*Charge*/
                                                        
                                                NVL( (SELECT DECODE(RT_APLY_DT,NULL,'N','Y')
                                                            FROM BKG_RATE
                                                            WHERE BKG_NO = VB.BKG_NO 
                                                            AND ROWNUM = 1)
                                                        ,'N') APPRVAL, /*Apprval*/
                                                
                                                (SELECT DECODE(DOC.PCK_QTY,0,'N',DECODE(DOC.PCK_QTY,SUM(CNTR.PCK_QTY),'Y','E'))
                                                 FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
                                                 WHERE 1=1
                                                 AND VB.BKG_NO = DOC.BKG_NO
                                                 AND DOC.BKG_NO = CNTR.BKG_NO
                                                 GROUP BY DOC.PCK_QTY
                                                ) PKG,
                                                (SELECT DECODE(DOC.ACT_WGT,0,'N',DECODE(DOC.ACT_WGT,SUM(CNTR.CNTR_WGT),'Y','E'))
                                                  FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
                                                  WHERE 1=1
                                                  AND VB.BKG_NO = DOC.BKG_NO
                                                  AND DOC.BKG_NO = CNTR.BKG_NO
                                                  GROUP BY DOC.ACT_WGT
                                                ) WEIGHT,
                                                (SELECT DECODE(DOC.MEAS_QTY,0,'N',DECODE(DOC.MEAS_QTY,SUM(CNTR.MEAS_QTY),'Y','E'))
                                                   FROM BKG_BL_DOC DOC, BKG_CONTAINER CNTR
                                                   WHERE 1=1
                                                   AND VB.BKG_NO = DOC.BKG_NO
                                                   AND DOC.BKG_NO = CNTR.BKG_NO
                                                   GROUP BY DOC.MEAS_QTY
                                                ) MEASUERE,
                                                VB.DCGO_FLG SPECIAL_D,/*Special_D*/
                                                VB.RC_FLG SPECIAL_R,/*Special_R*/
                                                VB.AWK_CGO_FLG SPECIAL_A, /*Special_A*/
                                                VB.BB_CGO_FLG SPECIAL_B, /*Special_B*/
                                                DOC.BDR_FLG BDR,/*BDR*/
                                                
                                                NVL((SELECT NVL(BKG.BL_TP_CD,'B')
                                                 FROM BKG_BL_ISS
                                                 WHERE BKG_NO = VB.BKG_NO
                                                 AND OBL_ISS_FLG = 'Y'
                                                 AND ROWNUM = 1),'N') ISSUE, /*BL_ISSUE*/
                                                
                                                VB.SI_FLG RECEIVING,/*SI_RECEIVING*/
                                                VB.XTER_SI_CD VIA/*SI_VIA*/
                                                ,(SELECT MIN(VPS_ETD_DT)
                                                  FROM BKG_VVD BV, VSK_VSL_PORT_SKD V
                                                  WHERE BV.BKG_NO = VB.BKG_NO
                                                  AND  BV.VSL_CD = V.VSL_CD
                                                  AND  BV.SKD_VOY_NO = V.SKD_VOY_NO
                                                  AND  BV.SKD_DIR_CD = V.SKD_DIR_CD
                                                  AND  BV.POL_CD = V.VPS_PORT_CD
                                                  AND  BV.POL_YD_CD = V.YD_CD
                                                  ) SA_DT
                                                --combine 관련 추가
                                                ,DECODE(VB.BKG_CUST_TP_CD, 'S', VB.CUST_CNT_CD) AS SHIPPER_CODE
                                                ,BKG.POR_CD AS POR
                                                ,BKG.POL_CD AS POL
                                                ,BKG.POD_CD AS POD
                                                ,BKG.DEL_CD AS DEL
                                                ,BKG.POR_NOD_CD
                                                ,BKG.DEL_NOD_CD
                                                ,DECODE(VB.BKG_CUST_TP_CD, 'B', VB.CUST_CNT_CD) AS BROKER
                                                ,BKG.BKG_OFC_CD AS BKG_OFC_NO
                                                ,BKG.HCMT_CMB_FLG AS HITCHMENT_YN
                                                ,BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS TVVD
                                                ,DPCS.BKG_NO DBKG_NO, DPCS.SR_CRNT_INFO_CD, DPCS.BL_DOC_INP_FLG, DPCS.BL_RT_FLG, DPCS.BL_AUD_FLG, DPCS.BL_DRFT_FAX_OUT_FLG, DPCS.SR_WRK_STS_CD
                                                ,VB.KEY_VSL_CD||VB.KEY_SKD_VOY_NO||VB.KEY_SKD_DIR_CD AS KEY_VVD
                                                ,B.ADV_SHTG_CD
                                                ,(SELECT '('||AA.CNMV_YR||':'||AA.CNMV_ID_NO||':'||AA.CNMV_SEQ||')'||TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD|| SUBSTR(DECODE(SUBSTR(ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(ORG_YD_CD, 1, 5)), 1, 2)
					                              FROM CTM_MOVEMENT AA
					                             WHERE CNTR_NO = B.CNTR_NO
					                               AND BKG_NO =BKG.BKG_NO
					                               AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
					                               AND CNMV_EVNT_DT = (SELECT MAX(CNMV_EVNT_DT)
					                                                     FROM CTM_MOVEMENT
                    					                                WHERE CNTR_NO = B.CNTR_NO
                                        					              AND BKG_NO =BKG.BKG_NO
					                                                      AND MVMT_STS_CD  IN ('OC','OP'))
                    					           AND MVMT_STS_CD IN ('OC','OP')
					                               AND  NOT EXISTS ( SELECT   'Y' FROM BKG_CONTAINER 
					                                                 WHERE BKG_NO  = BKG.BKG_NO
					                                                 AND   CNTR_NO = B.CNTR_NO
					                                                 AND   CNTR_PRT_FLG ='Y')
					                               AND ROWNUM =1 ) CRN_VVD_CNT,                               
					                               
					                           (SELECT '('||CTM.CNMV_YR||':'||CTM.CNMV_ID_NO||':'||CTM.CNMV_SEQ||')'||TRNK_VSL_CD||TRNK_SKD_VOY_NO||TRNK_SKD_DIR_CD||SUBSTR(DECODE(SUBSTR(CTM.ORG_YD_CD, 1, 5), 'CNHKG', 'HKGCN', SUBSTR(CTM.ORG_YD_CD, 1, 5)), 1, 2)
					                              FROM CTM_MOVEMENT CTM ,
					                                   BKG_BOOKING BB ,
					                                   BKG_CONTAINER BC
					                             WHERE CTM.BKG_NO = BB.BKG_NO
					                               AND CTM.BKG_NO = BC.BKG_NO
					                               AND CTM.CNTR_NO = BC.CNTR_NO
					                               AND CTM.BKG_NO <> BKG.BKG_NO
					                               AND CTM.CNTR_NO = B.CNTR_NO
					                               AND CTM.BKG_CGO_TP_CD ='F'
					                               AND NVL(CTM.TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')                               
					                               AND  NOT EXISTS ( SELECT CTM2.CNMV_CYC_NO
					                                                       FROM CTM_MOVEMENT CTM2
					                                                       WHERE CTM2.CNTR_NO = CTM.CNTR_NO
					                                                         AND CTM2.CNMV_CYC_NO = CTM.CNMV_CYC_NO
					                                                         AND CTM2.MVMT_STS_CD  IN ('ID','IC')
					                                                         AND ROWNUM =1) 
					                               AND  NOT EXISTS ( SELECT BKG_NO FROM BKG_BOOKING 
					                                                  WHERE BKG_NO = BKG.BKG_NO AND BL_NO_TP <> '0')
					                                AND  NOT EXISTS ( SELECT   'Y' FROM BKG_CONTAINER 
					                                                 WHERE BKG_NO  = BKG.BKG_NO
					                                                 AND   CNTR_NO = B.CNTR_NO
					                                                 AND   CNTR_PRT_FLG ='Y')                       
					                               AND CTM.CNMV_CYC_NO > (SELECT MAX(CNMV_CYC_NO) - 3
					                                                        FROM CTM_MOVEMENT
					                                                       WHERE CNTR_NO = B.CNTR_NO
					                                                         AND BKG_NO = BKG.BKG_NO
					                                                         AND MVMT_STS_CD  IN ('OC','OP')
					                                                         AND BKG_NO IS NOT NULL                                        
					                                                         AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ'))
					                               AND CTM.CNMV_EVNT_DT < (SELECT MAX(CNMV_EVNT_DT) + 30
					                                                         FROM CTM_MOVEMENT
					                                                        WHERE CNTR_NO = B.CNTR_NO
					                                                          AND BKG_NO = BKG.BKG_NO
					                                                          AND MVMT_STS_CD  IN ('OC','OP')
					                                                          AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
					                                                          AND BKG_NO IS NOT NULL )
					                               AND CTM.CNMV_EVNT_DT >= (SELECT MAX(CNMV_EVNT_DT) - 30
					                                                          FROM CTM_MOVEMENT
					                                                         WHERE CNTR_NO = B.CNTR_NO
					                                                           AND BKG_NO = BKG.BKG_NO
					                                                           AND MVMT_STS_CD IN ('OC','OP')
					                                                           AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ') 
					                                                           AND BKG_NO IS NOT NULL)
					                               AND CTM.MVMT_STS_CD IN ('OC','OP')
					                               AND BB.BKG_STS_CD  = 'F'
					                               AND ROWNUM = 1 
					                               ) PRE_VVD_CNT ,                               
					                             (SELECT CTM.BKG_NO PRE_BKG_NO
					                              FROM CTM_MOVEMENT CTM ,
					                                   BKG_BOOKING BB ,
					                                   BKG_CONTAINER BC
					                             WHERE CTM.BKG_NO = BB.BKG_NO
					                               AND CTM.BKG_NO = BC.BKG_NO
					                               AND CTM.CNTR_NO = BC.CNTR_NO
					                               AND CTM.BKG_NO <> BKG.BKG_NO
					                               AND CTM.CNTR_NO = B.CNTR_NO
					                               AND CTM.BKG_CGO_TP_CD ='F'
					                               AND NVL(CTM.TRNK_VSL_CD, 'SMXX') NOT IN('SMXX','SMZZ')
					                                AND  NOT EXISTS ( SELECT CTM2.CNMV_CYC_NO
					                                                       FROM CTM_MOVEMENT CTM2
					                                                       WHERE CTM2.CNTR_NO = CTM.CNTR_NO
					                                                         AND CTM2.CNMV_CYC_NO = CTM.CNMV_CYC_NO
					                                                         AND CTM2.MVMT_STS_CD  IN ('ID','IC')
					                                                         AND CTM2.BKG_NO IS NOT NULL
					                                                         AND ROWNUM =1) 
					                               AND  NOT EXISTS ( SELECT BKG_NO FROM BKG_BOOKING 
					                                                  WHERE BKG_NO = BKG.BKG_NO AND BL_NO_TP <> '0'
					                                                   AND ROWNUM =1)  /* MEMO BL 제외*/
					                                AND  NOT EXISTS ( SELECT   'Y' FROM BKG_CONTAINER 
					                                                 WHERE BKG_NO  = BKG.BKG_NO
					                                                 AND   CNTR_NO = B.CNTR_NO
					                                                 AND   CNTR_PRT_FLG ='Y')                    
					                               AND CTM.CNMV_CYC_NO > (SELECT MAX(CNMV_CYC_NO) - 3
					                                                        FROM CTM_MOVEMENT
					                                                       WHERE CNTR_NO = B.CNTR_NO
					                                                         AND BKG_NO = BKG.BKG_NO
					                                                         AND MVMT_STS_CD  IN ('OC','OP')
					                                                         AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ')
					                                                         AND BKG_NO IS NOT NULL)
					                               AND CTM.CNMV_EVNT_DT >= (SELECT MAX(CNMV_EVNT_DT) - 30
					                                                          FROM CTM_MOVEMENT
					                                                         WHERE CNTR_NO = B.CNTR_NO
					                                                           AND BKG_NO = BKG.BKG_NO
					                                                           AND MVMT_STS_CD IN ('OC','OP')
					                                                           AND NVL(TRNK_VSL_CD, 'SMXX') NOT IN('SMXX', 'SMZZ')
					                                                           AND BKG_NO IS NOT NULL)
					                               AND CTM.MVMT_STS_CD IN ('OC','OP')
					                               AND BB.BKG_STS_CD ='F'
					                               AND ROWNUM =1
					                               ) PRE_BKG_NO
                                                ,B.CNTR_WGT
                                                ,B.MEAS_QTY
                                                ,B.WGT_UT_CD
												,(SELECT 'Y' 
                                                    FROM BKG_DOC_PROC_SKD BDPS
                                                   WHERE BDPS.BKG_NO = BKG.BKG_NO
                                                     AND BKG_DOC_PROC_TP_CD = 'SI_RDY'
                                                     AND DOC_PERF_DELT_FLG = 'N'
													 AND ROWNUM =1) SI_READY_FLG
												,B.ORG_YD_CD
												--,TO_CHAR(B.CNMV_EVNT_DT, 'YYYY-MM-DD HH24:MI') CNMV_EVNT_DT
												,(SELECT TO_CHAR(M.CNMV_DT, 'YYYY-MM-DD HH24:MI') FROM MST_CONTAINER M
        								 WHERE M.CNTR_NO = B.CNTR_NO) CNMV_EVNT_DT												
                                                ,VGM_WGT,VGM_WGT_UT_CD -----------------------2016-04-18
                                                --,DECODE(VGM_WGT_UT_CD , NULL ,0, DECODE(VGM_WGT, NULL, 0, 1) ) VGM_CNT_TARGET
                                                ,(CASE WHEN NVL(VGM_WGT,0) > 0 AND NVL(VGM_WGT_UT_CD,'X') != 'X' AND NVL(VGM_VRFY_SIG_CTNT,'X') != 'X' 
                                                       THEN 1
                                                       ELSE 0 
                                                  END) VGM_CNT_TARGET
                                                ,VGM_VRFY_SIG_CTNT
                                                ,VGM_MZD_TP_CD
                                        FROM    BKG_CNTR_MANIFEST_V VB,
                                                BKG_CONTAINER B ,
                                                BKG_BL_DOC DOC
                                                --combine 관련 추가
                                                ,BKG_BOOKING BKG
                                                 --DPCS 추가
                                                ,(SELECT B.BKG_NO, SR_CRNT_INFO_CD,BL_DOC_INP_FLG,BL_RT_FLG,BL_AUD_FLG,BL_DRFT_FAX_OUT_FLG,SR_WRK_STS_CD
                                                   FROM  BKG_SR_CRNT_RQST B
                                                  WHERE  (B.BKG_NO, B.MAX_HIS_SEQ) IN ( SELECT A.BKG_NO, MAX(MAX_HIS_SEQ) 
                                                                                        FROM BKG_SR_CRNT_RQST A, BKG_CNTR_MANIFEST_V B 
                                                                                        WHERE SR_CRNT_STS_CD  != 'XX'  
                                                                                           AND A.BKG_NO(+) = B.BKG_NO 
    #if(${vvd_arr} != '')
                                                                                           AND (B.KEY_VSL_CD, B.KEY_SKD_VOY_NO, B.KEY_SKD_DIR_CD ) IN (
        #foreach($vvd_str IN ${vvd_arr})
            #if($velocityCount < $vvd_arr.size()) 
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1)),
    #else
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1))
                                                                                                      )
            #end
        #end
    #end
                                                                                        GROUP BY A.BKG_NO)
                                                ) DPCS
    #if (${p_del_conti} != '')
                                                , MDM_LOCATION MDM
    #end
                                                , MAS_RGST_BKG MAS
                                        WHERE   NVL(VB.BKG_STS_CD,'Z') <> 'X'
                                        AND     VB.BKG_NO       = B.BKG_NO(+)
                                        AND     VB.BKG_NO       = DOC.BKG_NO(+)
                                        --combine 관련 추가
                                        AND BKG.BKG_NO = VB.BKG_NO
                                        /*VVD*/
    #if(${vvd_arr} != '')
                                        AND (VB.KEY_VSL_CD, VB.KEY_SKD_VOY_NO, VB.KEY_SKD_DIR_CD ) IN (
        #foreach($vvd_str IN ${vvd_arr})
            #if($velocityCount < $vvd_arr.size())
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1)),
		    #else
                                                                                               (SUBSTR('$vvd_str',1,4),SUBSTR('$vvd_str',5,4),SUBSTR('$vvd_str',9,1))
                                                                                                      )
            #end
        #end
    #end

                                        AND     VB.BKG_NO = DPCS.BKG_NO(+)         -- DPCS 추가
																				

    #if (${p_pol_cd} != '') 
                                        /*POL*/
                                        AND     VB.KEY_POL_CD    LIKE '%'||@[p_pol_cd]||'%'
    #end

    #if (${p_pol_yd_cd} != '')
                                        /*POL YARD*/
                                        AND     SUBSTR(VB.POL_YD_CD,-2) = @[p_pol_yd_cd]
    #end
									 

    #if (${p_pol_lt} == 'LC') 
                                        /*POL L/T*/
                                        AND     VB.KEY_POL_CD  = VB.POL_CD /*POL의 L/T의 콤보박스의 LOCAL선택시*/
    #end

    #if (${p_pol_lt} == 'TS') 
                                        AND     VB.KEY_POL_CD  != VB.POL_CD/*POL의 L/T의 콤보박스의 TS선택시*/
    #end

																				
    #if (${p_por_cd} != '')
                                        /*POR*/
                                        AND     VB.POR_CD LIKE '%'||@[p_por_cd]||'%'
    #end

    #if (${p_apod_cd} != '')
                                        /*A/POD*/
                                        AND     VB.KEY_POD_CD LIKE '%'||@[p_apod_cd]||'%'
    #end


    #if (${p_apod_lt} == 'LC')
                                        /*APOD L/T*/
                                        AND     VB.KEY_POD_CD  = DOC.POD_CD /*A(Actual)/POD의 L/T의 콤보박스의 LOCAL선택시*/
    #end

    #if (${p_apod_lt} == 'TS') 
                                        AND     VB.KEY_POD_CD  != DOC.POD_CD /*A/POD의 L/T의 콤보박스의 TS선택시*/
    #end

    #if (${p_del_cd} != '')
                                        /*DEL*/
                                        AND     VB.DEL_CD LIKE '%'||@[p_del_cd]||'%'
    #end

    #if (${p_eq_type} != '')
                                        /*E/Q_TYPE*/
                                        AND B.CNTR_TPSZ_CD = @[p_eq_type]
    #end

    #if (${p_rcv_term_cd} != '')
                                        /*R/D R*/
                                        AND VB.RCV_TERM_CD = @[p_rcv_term_cd]
    #end


    #if (${p_de_term_cd} != '')
                                        /*R/D D*/
                                        AND VB.DE_TERM_CD= @[p_de_term_cd]
    #end
																			 
/*BKG OFFICE*/
    #if (${p_bkg_ofc_cd} != '')
/*SUB*/
        #if (${p_ofc_cd} != '')
                                        AND VB.BKG_OFC_CD IN (SELECT            OFC_CD 
                                                              FROM              MDM_ORGANIZATION A 
                                                              START WITH        A.OFC_CD LIKE '%'||@[p_bkg_ofc_cd]||'%'
                                                              CONNECT BY PRIOR  A.OFC_CD = A.PRNT_OFC_CD
                                                             )
        #else  
                                        AND VB.BKG_OFC_CD LIKE '%'||@[p_bkg_ofc_cd]||'%'
        #end
    #end
																									
    #if (${p_doc_usr_id} != '') 
                                        /*BKG STF*/
                                        AND UPPER(VB.DOC_USR_ID) LIKE '%'||UPPER(@[p_doc_usr_id])||'%'
    #end

 /*Sales Office*/													
    #if (${p_ob_sls_ofc_cd} != '') 
/*SUB*/
        #if (${l_ofc_sub} != '')
                                        AND VB.OB_SLS_OFC_CD IN (SELECT            OFC_CD 
                                                              FROM              MDM_ORGANIZATION A 
                                                              START WITH        A.OFC_CD LIKE '%'||@[p_ob_sls_ofc_cd]||'%'
                                                              CONNECT BY PRIOR  A.OFC_CD = A.PRNT_OFC_CD
                                                             )
        #else  
                                        AND VB.OB_SLS_OFC_CD LIKE '%'||@[p_ob_sls_ofc_cd]||'%'
        #end
    #end          

    #if (${p_ob_srep_cd} != '') 
                                        /*Sales Rep*/
                                        AND VB.OB_SREP_CD LIKE '%'||@[p_ob_srep_cd]||'%'
    #end
/*CTRT Office*/
    #if (${p_ctrt_ofc_cd} != '') 
/*SUB*/
        #if (${c_ofc_sub} != '')
                                        AND BKG.CTRT_OFC_CD IN (SELECT            OFC_CD 
                                                              FROM              MDM_ORGANIZATION A 
                                                              START WITH        A.OFC_CD LIKE '%'||@[p_ctrt_ofc_cd]||'%'
                                                              CONNECT BY PRIOR  A.OFC_CD = A.PRNT_OFC_CD
                                                             )
        #else  
                                        AND BKG.CTRT_OFC_CD LIKE '%'||@[p_ctrt_ofc_cd]||'%'
        #end
    #end          

    #if (${p_ctrt_srep_cd} != '') 
                                        /*CTRT Sales Rep*/
                                        AND BKG.CTRT_SREP_CD LIKE '%'||@[p_ctrt_srep_cd]||'%'
    #end   

    #if (${p_bkg_sts_cd} != '') 
                                        /*BKG Status*/
                                        AND VB.BKG_STS_CD LIKE '%'||@[p_bkg_sts_cd]||'%'
    #end

    #if (${p_cnmv_sts_cd} == 'AP') 
                                        /*Cargo Status*/
                                        AND VB.BKG_CGO_TP_CD <> 'P'
    #elseif (${p_cnmv_sts_cd} != 'A') 
                                        AND VB.BKG_CGO_TP_CD = @[p_cnmv_sts_cd]
    #end
									    AND     bkg.BKG_NO = MAS.BKG_NO
    #if (${p_zone_cd} == 'OCN') 
                                        /*Zone OCN*/
                                        --AND (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POL_CD) <> (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POD_CD)			
										AND     MAS.IOC_CD = 'O'
    #end

    #if (${p_zone_cd} == 'IPT') 
                                        /*Zone IPT*/
                                        --AND (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POL_CD) = (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = VB.POD_CD)			
										AND     MAS.IOC_CD = 'I'
    #end

    #if (${p_del_conti} != '') 
                                        /*DEL CONTINENT*/
                                        AND DOC.DEL_CD = MDM.LOC_CD
                                        AND MDM.CONTI_CD = @[p_del_conti]
    #end


    #if (${p_dcgo_flg} !='' || ${p_rc_flg} != ''||${p_awk_cgo_flg} != ''||${p_bb_cgo_flg} != ''||${p_soc_cgo_flg} != '')
                                        /*Special Cargo DANGER*/
                                        AND (1 = 2

        #if (${p_dcgo_flg} != '') 
                                            OR VB.DCGO_FLG = 'Y'
        #end
        
        #if (${p_rc_flg} != '') 
                                            /*Special Cargo REEFER*/
                                            OR VB.RC_FLG = 'Y'				
        #end

        #if (${p_awk_cgo_flg} != '')
                                            /*Special Cargo AWKWARD*/
                                            OR VB.AWK_CGO_FLG = 'Y'
        #end

        #if (${p_bb_cgo_flg} != '') 
                                            /*Special Cargo BREAK BULK*/
                                            OR VB.BB_CGO_FLG = 'Y'
        #end

        #if (${p_soc_cgo_flg} != '') 
                                            /*Special Cargo SOC*/
                                            OR VB.SOC_FLG = 'Y'
        #end
                                            )
    #end

#if (${p_awk_cgo_flg} != '')
    AND B.AWK_CGO_FLG(+) = 'Y'
#end
#if (${p_rc_flg} != '')
    AND B.RC_FLG(+) = 'Y'
#end
#if (${p_dcgo_flg} != '')
    AND B.DCGO_FLG(+) = 'Y'
#end

    #if (${p_bdr_flg} != '') 
                                        /*BDR Status*/
                                        AND DOC.BDR_FLG = @[p_bdr_flg] --YN
    #end

    #if (${p_si_flg} != '') 
                                        /*SI_FLG*/
                                        AND VB.SI_FLG = @[p_si_flg] --YN
    #end

    #if (${p_obl_iss_ofc_cd} != '') 
                                        /*B/L Office*/
                                        AND   EXISTS  ( SELECT 'Y'
                                                        FROM   BKG_BL_ISS
                                                        WHERE  BKG_NO = VB.BKG_NO
                                                        AND    OBL_ISS_OFC_CD LIKE '%'||@[p_obl_iss_ofc_cd]||'%'
                                                      )
    #end
                                        /* Customer */
                                        AND EXISTS (SELECT 'Y' 
                                                    FROM BKG_CUSTOMER Z
                                                    WHERE 1=1
                                                    AND Z.BKG_NO = VB.BKG_NO
    #if (${p_bkg_cust_tp_cd} !='')
                                                    /*CUSTOMER TP CD*/
                                                    AND Z.BKG_CUST_TP_CD = @[p_bkg_cust_tp_cd]
    #end

    #if (${p_cust_cnt_cd} !='')
                                                    /*CUSTOMER CODE COUNTRY --KR*/
                                                    AND Z.CUST_CNT_CD =@[p_cust_cnt_cd]
    #end

    #if (${p_cust_seq} !='')
                                                    /*CUSTOMER SEQ --001*/
                                                    AND Z.CUST_SEQ =@[p_cust_seq]
    #end

    #if (${p_cust_nm} != '')
                                                    /*CUSTOMER Name*/
                                                    AND UPPER(Z.CUST_NM) LIKE '%'||UPPER(@[p_cust_nm])||'%'
    #end

    #if (${sc_no} != '')
                                                    /*CUSTOMER Name*/
                                                    AND BKG.SC_NO = @[sc_no]
    #end

    #if (${p_si_ready_flg} != '')
                                                    /*BL Ready Flag*/
                                                    AND EXISTS (SELECT 'X' 
                                                                  FROM BKG_DOC_PROC_SKD BDPS
                                                                 WHERE BDPS.BKG_NO = BKG.BKG_NO
                                                                   AND BKG_DOC_PROC_TP_CD = 'SI_RDY'
                                                                   AND DOC_PERF_DELT_FLG = 'N')
    #end  

                                                   )
	#if ($blck_stwg_arr.size() > 0)
						AND BKG.BLCK_STWG_CD IN (
								#foreach($blck_stwg_cd IN ${blck_stwg_arr})
									#if($velocityCount < $blck_stwg_arr.size()) '$blck_stwg_cd' ,
									#else 								   		'$blck_stwg_cd'
									#end
								#end
						)
	#end
    -------------------------------------------------------------------------------
	#if(${vgm_flg} =='Y')
													AND NVL(VGM_WGT,0) > 0
													AND NVL(VGM_WGT_UT_CD,'X') != 'X'
													AND NVL(VGM_VRFY_SIG_CTNT,'X') != 'X'
	#elseif(${vgm_flg} =='I')
													AND NVL(VGM_WGT,0) > 0
													AND NVL(VGM_VRFY_SIG_CTNT,'X') = 'X'
	#elseif(${vgm_flg} =='N')
													AND NVL(B.VGM_WGT,0) = 0
	#end
    -------------------------------------------------------------------------------
                                   )
                            WHERE 1=1
    #if (${entr_clss_tp_cd} != '')
	    #if (${entr_clss_tp_cd} == 'GE')
                            AND   ENTR_CLSS_TP_CD = 'G'
	    #elseif (${entr_clss_tp_cd} == 'IE')
                            AND   ENTR_CLSS_TP_CD IN ('IE','TE')
	    #end
    #end

    #if(${BL} !='' || ${CFC} != '' || ${CMC} != '' || ${MD} != '' || ${VLC} != ''|| ${IS} != '' || ${RC} != '')
                            AND (1 = 2 
        #if (${BL} != '') 
                                OR   NVL(CHARGE,'N') = 'N'       /*UN RATE BL       */
        #end

        #if (${CFC} != '') 
                                OR   NVL(CNTR_CFM_FLG,'N') = 'N' /*UN CONFIRM CNTR  */
        #end

        #if (${CMC} != '') 
                                OR   NVL(CM,'N') = 'N'            /*NON CM           */
        #end

        #if (${MD} != '') 
                                OR   NVL(MD,'N') = 'N'           /*NON MD           */
        #end

        #if (${VLC} != '') 
                                OR   NVL(ST,'N') <> 'VL'         /*NON VL           */ 
        #end

        #if (${IS} != '') 
                                OR   NVL(ISSUE,'N') = 'N'         /*NON ISSUE           */ 
        #end

        #if (${RC} != '') 
                                OR   NVL(RECEIVING,'N')  = 'N'   /*NON SR Received BL */
        #end
                                )
    #end
    #if (${pol_etd_fr_dt} != '' && ${pol_etd_to_dt} != '') 
                         AND SA_DT >= TO_DATE(@[pol_etd_fr_dt],'YYYY-MM-DD')
                         AND SA_DT < TO_DATE(@[pol_etd_to_dt],'YYYY-MM-DD') + 1
    #end
                         )
                ORDER BY  BKG_NO,CNTR_NO
              )
      )
WHERE RNUM BETWEEN NVL(@[rows_per_page],50) * (NVL(@[curr_page],1) - 1) + 1
AND     NVL(@[rows_per_page],50) *  NVL(@[curr_page],1)

    #if (${chk_dup_vvd} != '')
AND   CNTR_CHECK = @[chk_dup_vvd]
    #end

#end			]]></sql>
			<params>
				<param name="p_pol_cd" type="12" value="" out="N"/>
				<param name="p_pol_yd_cd" type="12" value="" out="N"/>
				<param name="p_por_cd" type="12" value="" out="N"/>
				<param name="p_apod_cd" type="12" value="" out="N"/>
				<param name="p_del_cd" type="12" value="" out="N"/>
				<param name="p_eq_type" type="12" value="" out="N"/>
				<param name="p_rcv_term_cd" type="12" value="" out="N"/>
				<param name="p_de_term_cd" type="12" value="" out="N"/>
				<param name="p_bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="p_doc_usr_id" type="12" value="" out="N"/>
				<param name="p_ob_sls_ofc_cd" type="12" value="" out="N"/>
				<param name="p_ob_srep_cd" type="12" value="" out="N"/>
				<param name="p_ctrt_ofc_cd" type="12" value="" out="N"/>
				<param name="p_ctrt_srep_cd" type="12" value="" out="N"/>
				<param name="p_bkg_sts_cd" type="12" value="" out="N"/>
				<param name="p_cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="p_del_conti" type="12" value="" out="N"/>
				<param name="p_bdr_flg" type="12" value="" out="N"/>
				<param name="p_si_flg" type="12" value="" out="N"/>
				<param name="p_obl_iss_ofc_cd" type="12" value="" out="N"/>
				<param name="p_bkg_cust_tp_cd" type="12" value="" out="N"/>
				<param name="p_cust_cnt_cd" type="12" value="" out="N"/>
				<param name="p_cust_seq" type="12" value="" out="N"/>
				<param name="p_cust_nm" type="12" value="" out="N"/>
				<param name="sc_no" type="12" value="" out="N"/>
				<param name="pol_etd_fr_dt" type="12" value="" out="N"/>
				<param name="pol_etd_to_dt" type="12" value="" out="N"/>
				<param name="rows_per_page" type="12" value="" out="N"/>
				<param name="curr_page" type="12" value="" out="N"/>
				<param name="chk_dup_vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
