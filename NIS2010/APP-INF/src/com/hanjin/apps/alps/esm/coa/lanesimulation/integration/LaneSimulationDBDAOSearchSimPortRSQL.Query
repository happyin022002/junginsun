<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LaneSimulationDBDAOSearchSimPortRSQL">
			<desc><![CDATA[port 조회]]></desc>
			<sql><![CDATA[
SELECT B1.SLAN_CD 
               ,B2.SECT_NO 
               ,B2.TRD_CD 
               ,B2.RLANE_CD 
               ,B1.SKD_DIR_CD 
               ,B1.TML_CD 
               ,B1.SEQ 
               ,B1.TURN_PORT_IND_CD 
               ,B2.FM_CNT 
               ,B2.TO_CNT 
               ,ROW_NUMBER() OVER (PARTITION BY B1.SECT_NO ORDER BY B1.SECT_NO,B1.SEQ ) NUM
           FROM (
                        SELECT @[f_slan_cd] SLAN_CD 
                              ,TML_CD 
                              ,B1.SKD_DIR_CD 
                              ,B1.SECT_NO 
                              ,ROW_NUMBER() OVER (ORDER BY B1.SECT_NO,B1.PORT_SEQ) SEQ 
                              ,ROW_NUMBER() OVER (PARTITION BY B1.SECT_NO ORDER BY B1.PORT_SEQ) PORT_SEQ 
                              ,B1.PORT_DYS 
                              ,B1.SEA_DYS 
                              ,B1.IOC_CD 
                              ,B1.TURN_PORT_IND_CD 
                              ,B1.CONTI_CD FM_CONTI_CD 
                              ,NVL(LEAD(B1.CONTI_CD) OVER(PARTITION BY B1.SKD_DIR_CD ORDER BY B1.SECT_NO,B1.PORT_SEQ),' ') TO_CONTI_CD 
                              ,COUNT(DISTINCT B1.CONTI_CD) OVER() PNDLM_CNT 
                          FROM ( 
                                 SELECT /*+ LEADING(A1 A2 A4 A3) USE_NL(A1 A2) USE_HASH(A2) */
                                        DISTINCT 
                                        DECODE(A3.NUM, 1, SUBSTR(A1.TML_CD,1,5) 
                                                     , 2, SUBSTR(A1.TML_CD,1,5) 
                                               ) TML_CD 
                                       ,DECODE(A3.NUM, 1, DECODE(A1.TURN_PORT_IND_CD, 'Y', DECODE(A1.SKD_DIR_CD,'E','W','E') , A1.SKD_DIR_CD) 
                                                     , 2, A1.SKD_DIR_CD 
                                               ) SKD_DIR_CD 
                                       ,DECODE(A3.NUM, 1, DECODE(A1.TURN_PORT_IND_CD, 'Y', A1.PORT_SEQ+MAX(A1.PORT_SEQ)OVER(), A1.PORT_SEQ) 
                                                     , 2, A1.PORT_SEQ 
                                               ) PORT_SEQ 
                                       ,DECODE(A3.NUM, 1, DECODE(A1.TURN_PORT_IND_CD, 'Y', A4.OTR_SECT, A4.SECT_NO) 
                                                     , 2, A4.SECT_NO 
                                               ) SECT_NO 
                                       ,A1.PORT_DYS 
                                       ,A1.SEA_DYS 
                                       ,A4.IOC_CD 
                                       ,A1.TURN_PORT_IND_CD 
                                       ,DECODE(@[f_slan_cd],'INX',DECODE(A2.CONTI_CD,'F','A',A2.CONTI_CD)  
                                                    ,'RES',DECODE(A2.CONTI_CD,'F','A',A2.CONTI_CD) 
                                                    ,DECODE(A2.CONTI_CD,'F','E',A2.CONTI_CD) 
                                               ) CONTI_CD 
                                   FROM COA_SIM_TML_INFO A1 
                                       ,( 
                                         SELECT SECT_NO 
                                               ,NVL(LEAD(SECT_NO) OVER(ORDER BY SECT_NO) -- NEXT ROW의 SECTION NUMBER 조회 
                                                   ,LAG(SECT_NO,1,0) OVER(ORDER BY SECT_NO) -- PREVIOUS ROW의 SECTION NUMBER 조회 
                                                   ) OTR_SECT -- E/B, W/B 각각 서로의 SECTION NUMBER 정보를 조회 
                                               ,SKD_DIR_CD 
                                               ,IOC_CD 
                                           FROM( -- E/B, W/B 의 SECTION NUMBER의 최소값을 구한다. 
                                                 SELECT MIN(SECT_NO) SECT_NO 
                                                       ,SKD_DIR_CD 
                                                       ,IOC_CD 
                                                   FROM COA_SIM_SVC_LANE 
                                                  WHERE SIM_DT = @[f_sim_dt]
                                                    AND SIM_NO = @[f_sim_no]
                                                  GROUP BY SKD_DIR_CD,IOC_CD 
                                                ) 
                                         ) A4 
                                       ,MDM_LOCATION A2 
                                       ,(SELECT CPY_NO NUM FROM COM_CPY_NO WHERE CPY_NO BETWEEN 1 AND 2) A3 
                                  WHERE 1=1 
                                    AND A1.SKD_DIR_CD = A4.SKD_DIR_CD 
                                    AND substr(A1.TML_CD,1,5) = A2.LOC_CD 
                                    AND A1.VSL_DBL_CALL_SEQ = '1' 
                                    AND A1.SIM_DT = @[f_sim_dt]
                                    AND A1.SIM_NO = @[f_sim_no]
                                 ) B1 
                          ORDER BY B1.SECT_NO, B1.PORT_SEQ 
                       ) B1 
               ,( -- TRAD, RLANE, BOUND 별 포트정보 
                         SELECT DISTINCT 
                                A2.SECT_NO 
                               ,A2.TRD_CD 
                               ,A2.RLANE_CD 
                               ,A1.SKD_DIR_CD 
                               ,CASE WHEN A1.IOC_CD = 'O' THEN LAG(A1.SEQ+1,1,1) OVER(ORDER BY A1.SECT_NO, A1.SEQ) 
                                     WHEN A1.IOC_CD = 'I' THEN MIN(A1.SEQ) OVER(PARTITION BY  A1.SKD_DIR_CD)
                                END FM_CNT 
                               ,CASE WHEN A1.IOC_CD = 'O' THEN LEAD(A1.SEQ,1) OVER(ORDER BY A1.SECT_NO, A1.SEQ) 
                                     WHEN A1.IOC_CD = 'I' THEN MAX(A1.SEQ) OVER(PARTITION BY A1.SKD_DIR_CD) 
                               END TO_CNT 
                           FROM (
                        SELECT @[f_slan_cd] SLAN_CD 
                              ,TML_CD 
                              ,B1.SKD_DIR_CD 
                              ,B1.SECT_NO 
                              ,ROW_NUMBER() OVER (ORDER BY B1.SECT_NO,B1.PORT_SEQ) SEQ 
                              ,ROW_NUMBER() OVER (PARTITION BY B1.SECT_NO ORDER BY B1.PORT_SEQ) PORT_SEQ 
                              ,B1.PORT_DYS 
                              ,B1.SEA_DYS 
                              ,B1.IOC_CD 
                              ,B1.TURN_PORT_IND_CD 
                              ,B1.CONTI_CD FM_CONTI_CD 
                              ,NVL(LEAD(B1.CONTI_CD) OVER(PARTITION BY B1.SKD_DIR_CD ORDER BY B1.SECT_NO,B1.PORT_SEQ),' ') TO_CONTI_CD 
                              ,COUNT(DISTINCT B1.CONTI_CD) OVER() PNDLM_CNT 
                          FROM ( 
                                 SELECT /*+ LEADING(A1 A2 A4 A3) USE_NL(A1 A2) USE_HASH(A2) */
                                        DISTINCT 
                                        DECODE(A3.NUM, 1, SUBSTR(A1.TML_CD,1,5) 
                                                     , 2, SUBSTR(A1.TML_CD,1,5) 
                                               ) TML_CD 
                                       ,DECODE(A3.NUM, 1, DECODE(A1.TURN_PORT_IND_CD, 'Y', DECODE(A1.SKD_DIR_CD,'E','W','E') , A1.SKD_DIR_CD) 
                                                     , 2, A1.SKD_DIR_CD 
                                               ) SKD_DIR_CD 
                                       ,DECODE(A3.NUM, 1, DECODE(A1.TURN_PORT_IND_CD, 'Y', A1.PORT_SEQ+MAX(A1.PORT_SEQ)OVER(), A1.PORT_SEQ) 
                                                     , 2, A1.PORT_SEQ 
                                               ) PORT_SEQ 
                                       ,DECODE(A3.NUM, 1, DECODE(A1.TURN_PORT_IND_CD, 'Y', A4.OTR_SECT, A4.SECT_NO) 
                                                     , 2, A4.SECT_NO 
                                               ) SECT_NO 
                                       ,A1.PORT_DYS 
                                       ,A1.SEA_DYS 
                                       ,A4.IOC_CD 
                                       ,A1.TURN_PORT_IND_CD 
                                       ,DECODE(@[f_slan_cd],'INX',DECODE(A2.CONTI_CD,'F','A',A2.CONTI_CD)  
                                                    ,'RES',DECODE(A2.CONTI_CD,'F','A',A2.CONTI_CD) 
                                                    ,DECODE(A2.CONTI_CD,'F','E',A2.CONTI_CD) 
                                               ) CONTI_CD 
                                   FROM COA_SIM_TML_INFO A1 
                                       ,( 
                                         SELECT SECT_NO 
                                               ,NVL(LEAD(SECT_NO) OVER(ORDER BY SECT_NO) -- NEXT ROW의 SECTION NUMBER 조회 
                                                   ,LAG(SECT_NO,1,0) OVER(ORDER BY SECT_NO) -- PREVIOUS ROW의 SECTION NUMBER 조회 
                                                   ) OTR_SECT -- E/B, W/B 각각 서로의 SECTION NUMBER 정보를 조회 
                                               ,SKD_DIR_CD 
                                               ,IOC_CD 
                                           FROM( -- E/B, W/B 의 SECTION NUMBER의 최소값을 구한다. 
                                                 SELECT MIN(SECT_NO) SECT_NO 
                                                       ,SKD_DIR_CD 
                                                       ,IOC_CD 
                                                   FROM COA_SIM_SVC_LANE 
                                                  WHERE SIM_DT = @[f_sim_dt]
                                                    AND SIM_NO = @[f_sim_no]
                                                  GROUP BY SKD_DIR_CD,IOC_CD 
                                                ) 
                                         ) A4 
                                       ,MDM_LOCATION A2 
                                       ,(SELECT CPY_NO NUM FROM COM_CPY_NO WHERE CPY_NO BETWEEN 1 AND 2) A3 
                                  WHERE 1=1 
                                    AND A1.SKD_DIR_CD = A4.SKD_DIR_CD 
                                    AND substr(A1.TML_CD,1,5) = A2.LOC_CD 
                                    AND A1.VSL_DBL_CALL_SEQ = '1' 
                                    AND A1.SIM_DT = @[f_sim_dt]
                                    AND A1.SIM_NO = @[f_sim_no]
                                 ) B1 
                          ORDER BY B1.SECT_NO, B1.PORT_SEQ 
                       ) A1 
                               ,(
                       SELECT DISTINCT 
                              A1.TRD_CD 
                             ,A1.RLANE_CD 
                             ,A1.VSL_SLAN_DIR_CD SKD_DIR_CD 
                             ,DECODE(@[f_slan_cd],'INX', DECODE(A1.FM_CONTI_CD,'F','A',A1.FM_CONTI_CD)  
                                                 ,'RES', DECODE(A1.FM_CONTI_CD,'F','A',A1.FM_CONTI_CD) 
                                                 ,DECODE(A1.FM_CONTI_CD,'F','E',A1.FM_CONTI_CD) 
                                     ) FM_CONTI_CD 
                             ,DECODE(@[f_slan_cd],'INX', DECODE(A1.TO_CONTI_CD,'F','A',A1.TO_CONTI_CD)  
                                                 ,'RES', DECODE(A1.TO_CONTI_CD,'F','A',A1.TO_CONTI_CD) 
                                                 ,DECODE(A1.TO_CONTI_CD,'F','E',A1.TO_CONTI_CD) 
                                     ) TO_CONTI_CD 
                             ,A2.SECT_NO 
                        FROM ( 
                              SELECT RLANE_CD, VSL_SLAN_DIR_CD, IOC_CD, FM_CONTI_CD, TO_CONTI_CD, TRD_CD, SUB_TRD_CD 
                                FROM MDM_DTL_REV_LANE 
                               WHERE DELT_FLG        = 'N' 
                               UNION ALL 
                              SELECT RLANE_CD, SKD_DIR_CD, IOC_CD, FM_CONTI_CD, TO_CONTI_CD, TRD_CD, SUB_TRD_CD 
                                FROM COA_SIM_DTL_REV_LANE 
                             ) A1 
                             ,COA_SIM_SVC_LANE A2 
                        WHERE 1=1 
                          AND A1.TRD_CD          = A2.TRD_CD 
                          AND A1.RLANE_CD        = A2.RLANE_CD 
                          AND A1.VSL_SLAN_DIR_CD = A2.SKD_DIR_CD 
                          AND A1.IOC_CD          = A2.IOC_CD 
                          AND A2.SIM_DT          = @[f_sim_dt]
                          AND A2.SIM_NO          = @[f_sim_no]
                      ) A2 
                          WHERE 1=1 
                            AND A1.SKD_DIR_CD  = A2.SKD_DIR_CD(+) 
                            AND A1.FM_CONTI_CD = A2.FM_CONTI_CD(+) 
                            AND A1.TO_CONTI_CD = A2.TO_CONTI_CD(+) 
                            AND ((A1.FM_CONTI_CD <> A1.TO_CONTI_CD AND A1.IOC_CD = 'O') 
                             OR  (A1.IOC_CD = 'I')) 
                        ) B2 
          WHERE 1=1 
            AND B1.SEQ      BETWEEN FM_CNT AND TO_CNT 
            AND B2.TRD_CD   IS NOT NULL 
            AND B2.SECT_NO  = NVL(@[f_sect_no],B2.SECT_NO) 
          ORDER BY B2.SECT_NO, B2.FM_CNT,B1.SEQ			]]></sql>
			<params>
				<param name="f_slan_cd" type="12" value="CAX" out="Y"/>
				<param name="f_sim_dt" type="12" value="20090413" out="Y"/>
				<param name="f_sim_no" type="12" value="001" out="Y"/>
				<param name="f_sect_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
