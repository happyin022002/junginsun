<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BSAYearlyPlanDBDAOSearchSlotCostListRSQL">
			<desc><![CDATA[Slot Price 조회 쿼리
Hsitory--------------------------------------------------
2011.07.20 이행지 [CHM-201112101-01] curr_cd 컬럼 추가에 따른 쿼리수정]]></desc>
			<sql><![CDATA[
SELECT 
      RANK() OVER (ORDER BY A.TRD_CD||A.RLANE_CD||A.DIR_CD||A.BSA_SLT_COST_TP_CD) GRP,
	  MAX(A.SLT_PRC_SEQ) OVER(PARTITION BY A.TRD_CD||A.RLANE_CD||A.DIR_CD||A.BSA_SLT_COST_TP_CD) MAXSEQ, 
	  A.TRD_CD, 
	  A.RLANE_CD, 
	  A.DIR_CD,
	  A.CURR_CD,
	  A.BSA_SLT_COST_TP_CD, 
	  A.SLT_PRC_SEQ, 
	  A.VVD_CD, 
	  A.BSA_SLT_PRC_FM_DT, 
	  A.BSA_SLT_PRC_TO_DT, 
	  A.HJS_BFR_SUB_CAPA, 
	  A.SUB_CHTR_BSA_CAPA, 
	  A.CRS_CHTR_BSA_CAPA, 
	  SUM(CASE WHEN A.HJS_BFR_SUB_CAPA = 0  AND C.SRC_BZC_CAPA > 0 THEN 1 ELSE 0 END) AS BZC_FLG, 
	  SUM(CASE WHEN A.SUB_CHTR_BSA_CAPA = 0 AND C.SRC_SUB_CAPA > 0 THEN 1 ELSE 0 END) AS SUB_FLG, 
	  SUM(CASE WHEN A.CRS_CHTR_BSA_CAPA = 0 AND C.SRC_CRS_CAPA > 0 THEN 1 ELSE 0 END) AS CRS_FLG
	  #set($count = 0) 
	  #foreach( ${keys} in ${keyList}) 
	    ,MAX(CASE WHEN B.BSA_OP_JB_CD = '${keys.bsaOpJbCd}' AND B.CRR_CD ='${keys.crrCd}'
           		 THEN B.SLT_PRC_CAPA ELSE 0 END) AS SLT_PRC_CAPA$count
	   	,SUM(CASE WHEN B.BSA_OP_JB_CD = '${keys.bsaOpJbCd}' AND B.CRR_CD ='${keys.crrCd}'
		                          AND ((B.SLT_PRC_CAPA = 0 AND C.CRR_BSA_CAPA$count > 0) 
				                    --OR (B.SLT_PRC_CAPA > 0 AND C.CRR_BSA_CAPA$count = 0)
                                      ) 
				 THEN 1 ELSE 0 END) AS CAPA_FLG$count  				
	       	#set($count = $count + 1)
	  #end
			--예) ,SUM(CASE WHEN b.bsa_op_jb_cd = '001' AND b.crr_cd ='ACL' THEN b.slt_prc_capa ELSE 0 END) AS slt_prc_capa0 
			--예) ,SUM(CASE WHEN b.bsa_op_jb_cd='001' AND b.crr_cd ='ACL' AND ((b.slt_prc_capa = 0 AND c.crr_bsa_capa0 > 0) OR (b.slt_prc_capa > 0 AND c.crr_bsa_capa0 = 0)) THEN 1 ELSE 0 END ) AS flg0 
FROM    
    BSA_BUD_SLT_PRC     A 
   ,BSA_BUD_SLT_PRC_CRR B 
   ,(SELECT  
          MIN(K.BSA_FM_DT) AS BSA_FM_DT 
         ,MAX(K.BSA_TO_DT) AS BSA_TO_DT 
         ,K.TRD_CD 
         ,K.RLANE_CD 
         ,K.DIR_CD 
         ,SUM(DECODE(K.VOP_CD,'OTH',K.HJS_BSA_BFR_SUB_CAPA,0)) AS SRC_BZC_CAPA 
         ,SUM(DECODE(K.BSA_OP_JB_CD,'003',K.CRR_BSA_CAPA,0)) AS SRC_SUB_CAPA 
         ,SUM(DECODE(K.BSA_OP_JB_CD,'005',K.CRR_BSA_CAPA,0)) AS SRC_CRS_CAPA 
        #set($count = 0) 
        #foreach( ${keys} in ${keyList}) 
	       ,SUM(CASE WHEN K.BSA_OP_JB_CD = '${keys.bsaOpJbCd}' AND K.CRR_CD ='${keys.crrCd}'
                   THEN K.CRR_BSA_CAPA ELSE 0 END) AS CRR_BSA_CAPA$count				
          #set($count = $count + 1)
        #end
        --예),SUM(CASE WHEN k.bsa_op_jb_cd = '001' AND k.crr_cd ='ACL' THEN k.crr_bsa_capa ELSE 0 END) AS crr_bsa_capa0 
      FROM    
          (SELECT  
                 Z.BSA_FM_DT 
                ,Z.BSA_TO_DT 
                ,Z.TRD_CD 
                ,Z.VOP_CD 
                ,Z.RLANE_CD 
                ,Z.DIR_CD 
                ,Z.BSA_OP_JB_CD /* 003,005일때는 선사와 상관없이 Lane,Dir별로 있는지 Check */ 
                ,Z.CRR_CD 
                ,MAX(Z.HJS_BSA_BFR_SUB_CAPA) AS HJS_BSA_BFR_SUB_CAPA /* J OTHER,SC일 경우 */ 
                ,SUM(Z.CRR_BSA_CAPA) AS CRR_BSA_CAPA 
           FROM    
                (SELECT  
                        X.BSA_FM_DT 
                       ,X.BSA_TO_DT 
                       ,X.TRD_CD 
                       ,X.VOP_CD 
                       ,X.RLANE_CD 
                       ,X.DIR_CD 
                       ,Y.BSA_OP_JB_CD 
                       ,Y.CRR_CD 
                       ,X.HJS_BSA_BFR_SUB_CAPA 
                       ,Y.CRR_BSA_CAPA 
                FROM    BSA_BUD_JNT_OP_BZC      X 
                       ,BSA_BUD_JNT_OP_CRR_CAPA Y 
                WHERE   X.BSA_SEQ   = Y.BSA_SEQ 
                AND     X.RLANE_CD  = Y.RLANE_CD 
                AND     X.DIR_CD    = Y.DIR_CD 
                AND     X.TRD_CD    = Y.TRD_CD 
                AND     X.VOP_CD    = Y.VOP_CD 
                AND     X.VSL_CAPA  = Y.VSL_CAPA 
                AND     Y.BSA_OP_CD = 'J' 
                AND     Y.BSA_OP_JB_CD IN ('001','002','003','004','005') 
                UNION ALL 
                SELECT  
                       X.BSA_FM_DT 
                       ,X.BSA_TO_DT 
                       ,X.TRD_CD 
                       ,'OTH' AS VOP_CD 
                       ,X.RLANE_CD 
                       ,X.DIR_CD 
                       ,Y.BSA_OP_JB_CD 
                       ,Y.CRR_CD 
                       ,X.HJS_BSA_BFR_SUB_CAPA 
                       ,Y.CRR_BSA_CAPA 
                FROM    BSA_BUD_SLT_CHTR_BZC      X 
                       ,BSA_BUD_SLT_CHTR_CRR_CAPA Y 
                WHERE   X.BSA_SEQ   = Y.BSA_SEQ 
                AND     X.RLANE_CD  = Y.RLANE_CD 
                AND     X.DIR_CD    = Y.DIR_CD 
                AND     X.TRD_CD    = Y.TRD_CD 
                AND     X.VSL_SEQ   = Y.VSL_SEQ 
                AND     Y.BSA_OP_CD = 'S' 
                AND     Y.BSA_OP_JB_CD IN ('002','003','004','005') 
               ) Z 
           GROUP BY 
                   Z.BSA_FM_DT 
                  ,Z.BSA_TO_DT 
                  ,Z.TRD_CD 
                  ,Z.VOP_CD 
                  ,Z.RLANE_CD 
                  ,Z.DIR_CD 
                  ,Z.BSA_OP_JB_CD 
                  ,Z.CRR_CD 
          ) K 
        GROUP BY 
--		          K.BSA_FM_DT 
--		         ,K.BSA_TO_DT 
                K.TRD_CD 
               ,K.RLANE_CD 
               ,K.DIR_CD 		  
       ) C 
WHERE   A.TRD_CD             = B.TRD_CD 
AND     A.RLANE_CD           = B.RLANE_CD 
AND     A.DIR_CD             = B.DIR_CD 
AND     A.BSA_SLT_COST_TP_CD = B.BSA_SLT_COST_TP_CD 
AND     A.SLT_PRC_SEQ        = B.SLT_PRC_SEQ 
AND     B.BSA_SLT_PRC_FM_DT <= C.BSA_FM_DT (+) 
AND     B.BSA_SLT_PRC_TO_DT >= C.BSA_TO_DT (+) 
AND     B.TRD_CD             = C.TRD_CD (+) 
AND     B.RLANE_CD           = C.RLANE_CD (+) 
AND     B.DIR_CD             = C.DIR_CD (+) 
AND     A.BSA_SLT_PRC_TO_DT >= @[txtsdate] 
#if (${cobtrade} !='') 
  AND     A.TRD_CD   = @[cobtrade] 
#end
#if (${coblane}!='') 
  AND     A.RLANE_CD = @[coblane] 
#end
#if (${cobdir}!='') 
  AND     A.DIR_CD   = @[cobdir] 
#end
#if (${cobcurr}!='') 
  AND     A.CURR_CD  = @[cobcurr] 
#end
#if (${rdotype}!='') 
  AND     A.BSA_SLT_COST_TP_CD = @[rdotype] 
#end
GROUP BY 
       A.TRD_CD, 
       A.RLANE_CD, 
       A.DIR_CD, 
       A.CURR_CD, 
       A.BSA_SLT_COST_TP_CD, 
       A.SLT_PRC_SEQ, 
       A.VVD_CD, 
       A.BSA_SLT_PRC_FM_DT, 
       A.BSA_SLT_PRC_TO_DT, 
       A.HJS_BFR_SUB_CAPA, 
       A.SUB_CHTR_BSA_CAPA, 
       A.CRS_CHTR_BSA_CAPA 
ORDER BY 
       A.TRD_CD, 
       A.RLANE_CD, 
       A.DIR_CD, 
       A.SLT_PRC_SEQ, 
       A.BSA_SLT_PRC_FM_DT, 
       A.BSA_SLT_COST_TP_CD,  
       A.BSA_SLT_PRC_TO_DT			]]></sql>
			<params>
				<param name="txtsdate" type="12" value="" out="N"/>
				<param name="cobtrade" type="12" value="" out="N"/>
				<param name="coblane" type="12" value="" out="N"/>
				<param name="cobdir" type="12" value="" out="N"/>
				<param name="cobcurr" type="12" value="" out="N"/>
				<param name="rdotype" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
