<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="QtaAdjustmentDBDAOUpdateCfmQtaSyncUSQL">
			<desc><![CDATA[IAS Sector Salse 데이터를 OverAll에 적용한다.

* 2015.06.15 김용습 [CHM-201536164] 주간 MAS Open에 따른 타모듈 프로그램 적용 요청
2016.04.22 CHM-201641278 [SQM] IAS Trade 판매목표 수립 Portion 연결 시스템 수정 요청 CSR]]></desc>
			<sql><![CDATA[
INSERT INTO SQM_CFM_QTA(QTA_RLSE_VER_NO, BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, QTA_TGT_CD, TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RGN_OFC_CD, RHQ_CD, AQ_CD, CONV_DIR_CD, LOD_QTY, GRS_RPB_REV, PA_CM_UC_AMT, RA_CM_UC_AMT, SQM_CNG_TP_CD, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT )
SELECT A1.QTA_RLSE_VER_NO
      ,A1.BSE_TP_CD
      ,A1.BSE_YR
      ,A1.BSE_QTR_CD
      ,A1.OFC_VW_CD
      ,'D' AS QTA_TGT_CD
      ,A1.TRD_CD
      ,A1.RLANE_CD
      ,A1.DIR_CD
      ,A1.VSL_CD
      ,A1.SKD_VOY_NO
      ,A1.SKD_DIR_CD
      ,A1.RGN_OFC_CD
      ,A1.RHQ_CD
      ,A1.AQ_CD
      ,NVL(A2.CONV_DIR_CD, A1.DIR_CD)
      ,SUM(A1.LOD_QTY) AS LOD_QTY
      ,ROUND(DECODE(SUM(A1.LOD_QTY), 0, 0, SUM(A1.LOD_QTY*A1.GRS_RPB_REV)/SUM(A1.LOD_QTY))) AS GRS_RPB_REV
      ,ROUND(DECODE(SUM(A1.LOD_QTY), 0, 0, SUM(A1.LOD_QTY*A1.PA_CM_UC_AMT)/SUM(A1.LOD_QTY))) AS PA_CM_UC_AMT
      ,ROUND(DECODE(SUM(A1.LOD_QTY), 0, 0, SUM(A1.LOD_QTY*A1.RA_CM_UC_AMT)/SUM(A1.LOD_QTY))) AS RA_CM_UC_AMT
      ,'M' AS SQM_CNG_TP_CD
      ,@[usr_id] AS CRE_USR_ID
      ,SYSDATE AS CRE_DT
      ,@[usr_id] AS  UPD_USR_ID
      ,SYSDATE AS UPD_DT
   FROM SQM_SCTR_CFM_QTA A1
       ,SQM_DIR_CONV A2
  WHERE 1=1
    AND A1.BSE_TP_CD       = A2.BSE_TP_CD(+)
    AND A1.BSE_YR          = A2.BSE_YR(+)
    AND A1.BSE_QTR_CD      = A2.BSE_QTR_CD(+)
    AND A1.TRD_CD          = A2.TRD_CD(+)
    AND A1.RLANE_CD        = A2.RLANE_CD(+)
    AND A1.DIR_CD          = A2.DIR_CD(+)
    
    AND A1.QTA_RLSE_VER_NO = SUBSTR(@[bse_yr],-2) ||@[bse_qtr_cd]||'02'
    AND A1.BSE_TP_CD       = @[bse_tp_cd]
    AND A1.BSE_YR          = @[bse_yr]
    AND A1.BSE_QTR_CD      = @[bse_qtr_cd]
    AND A1.RLANE_CD        = @[rlane_cd]
    AND A1.DIR_CD          = @[dir_cd]
    AND A1.VSL_CD          = SUBSTR(NVL(@[mas_vvd],@[vvd]),1,4) -- 신규입력시, QTA=0일 경우동시 사용을 위해
    AND A1.SKD_VOY_NO      = SUBSTR(NVL(@[mas_vvd],@[vvd]),5,4)
    AND A1.SKD_DIR_CD      = SUBSTR(NVL(@[mas_vvd],@[vvd]),9,1)

	AND (@[bse_yr]||@[bse_qtr_cd] IN ('20161Q', '20162Q') OR @[bse_yr] < '2016') --2016 2Q까지만 작동하게 함. 2016 3Q부터 IAS는 OVERALL, SECTOR 이원화하여 관리

  GROUP BY A1.QTA_RLSE_VER_NO
          ,A1.BSE_TP_CD
          ,A1.BSE_YR
          ,A1.BSE_QTR_CD
          ,A1.OFC_VW_CD
          ,A1.TRD_CD
          ,A1.RLANE_CD
          ,A1.DIR_CD
          ,A1.VSL_CD
          ,A1.SKD_VOY_NO
          ,A1.SKD_DIR_CD
          ,A1.RGN_OFC_CD
          ,A1.RHQ_CD
          ,A1.AQ_CD
          ,A2.CONV_DIR_CD			]]></sql>
			<params>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="bse_yr" type="12" value="" out="N"/>
				<param name="bse_qtr_cd" type="12" value="" out="N"/>
				<param name="bse_tp_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="mas_vvd" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
