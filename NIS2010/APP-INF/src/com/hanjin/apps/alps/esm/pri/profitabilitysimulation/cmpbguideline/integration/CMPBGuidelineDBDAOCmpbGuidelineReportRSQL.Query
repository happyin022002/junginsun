<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CMPBGuidelineDBDAOCmpbGuidelineReportRSQL">
			<desc><![CDATA[Gline Report]]></desc>
			<sql><![CDATA[
WITH VW_PRI_CMPB_GLINE_MN AS (
	SELECT  SVC_SCP_CD
		, CRE_OFC_CD
		, GLINE_SEQ
		, EFF_DT                    	
		, EXP_DT  
		, ROWNUM AS NUM
	FROM   PRI_CMPB_GLINE_MN
	WHERE   1=1

		AND   SVC_SCP_CD = @[svc_scp_cd]
		AND   (TO_CHAR(EFF_DT,'YYYY-MM-DD') >= @[eff_dt]
						OR TO_CHAR(EXP_DT, 'YYYY-MM-DD') >= @[eff_dt])
		#if (${exp_dt} != '')
			AND (TO_CHAR(EFF_DT, 'YYYY-MM-DD') BETWEEN @[eff_dt] AND @[exp_dt]
						OR (TO_CHAR(EFF_DT, 'YYYY-MM-DD') <= @[eff_dt] AND TO_CHAR(EXP_DT, 'YYYY-MM-DD') >= @[exp_dt]))
			AND TO_CHAR(EXP_DT, 'YYYY-MM-DD') BETWEEN @[eff_dt] AND @[exp_dt]
		#end
		AND  CFM_FLG = 'Y'	
		-----------------------------------------------------------------
		--   Creation Office 로 조회 한다. 
		-----------------------------------------------------------------
		#if (${cre_ofc_cd_in} != '') 
			AND   CRE_OFC_CD = @[cre_ofc_cd_in]
		#end
)
SELECT 
	MN.PRS_CUST_TP_NM  --CUSTOMER TYPE NAME
	,       MN.VSL_SLAN_CD                                               	--SVC_LANE
	,       MN.PRC_CMDT_DEF_CD                                           	--COMMODITY
	,       MN.ORG_ROUT_PNT_LOC_DEF_CD            	--ORIGIN PNT
	,       MN.ORG_ROUT_VIA_PORT_DEF_CD          	--ORIGIN VIA
	,       MN.DEST_ROUT_VIA_PORT_DEF_CD         	--DEST VIA
	,       MN.DEST_ROUT_PNT_LOC_DEF_CD           	--DEST PNT
	,       MN.RAT_UT_CD                                                 	--PER
	,       MN.PRC_CGO_TP_CD                                             	--CARGO
	,       MN.CURR_CD                                                 		--CURR
	,       MN.CMPB_AMT                                                  	--AMT
	,       MN.CRE_OFC_CD                                                	--OFFICE
	,       MN.MQC_RNG_FM_QTY                                            	--MQC FROM
	,       MN.MQC_RNG_TO_QTY                                            	--MQC TO
	,       MN.EFF_DT                    	--EFF_DT
	,       MN.EXP_DT                    	--EXP_DT
	,       MN.CMPB_SEQ  
	,	MN.SVC_SCP_CD
	,	MN.PRS_CUST_TP_CD
	,	MN.GLINE_SEQ
	,	MN.BSE_SEQ
	,	MN.CMDT_MAP_SCORE
	,	MN.ORI_MAP_SCORE
	,	MN.DEST_MAP_SCORE
	,	MN.UT_MAP_SCORE
	,	MN.CGO_MAP_SCORE
	,	RK
FROM (
	SELECT 
		MN.PRS_CUST_TP_NM  --CUSTOMER TYPE NAME
		,       MN.VSL_SLAN_CD                                               	--SVC_LANE
		,       MN.PRC_CMDT_DEF_CD                                           	--COMMODITY
		,       MN.ORG_ROUT_PNT_LOC_DEF_CD            	--ORIGIN PNT
		,       MN.ORG_ROUT_VIA_PORT_DEF_CD          	--ORIGIN VIA
		,       MN.DEST_ROUT_VIA_PORT_DEF_CD         	--DEST VIA
		,       MN.DEST_ROUT_PNT_LOC_DEF_CD           	--DEST PNT
		,       MN.RAT_UT_CD                                                 	--PER
		,       MN.PRC_CGO_TP_CD                                             	--CARGO
		,       MN.CURR_CD                                                 		--CURR
		,       MN.CMPB_AMT                                                  	--AMT
		,       MN.CRE_OFC_CD                                                	--OFFICE
		,       MN.MQC_RNG_FM_QTY                                            	--MQC FROM
		,       MN.MQC_RNG_TO_QTY                                            	--MQC TO
		,       MN.EFF_DT                    	--EFF_DT
		,       MN.EXP_DT                    	--EXP_DT
		,       MN.CMPB_SEQ  
		,	MN.SVC_SCP_CD
		,	MN.PRS_CUST_TP_CD
		,	MN.GLINE_SEQ
		,	MN.BSE_SEQ
		,	MN.CMDT_MAP_SCORE
		,	MN.ORI_MAP_SCORE
		,	MN.DEST_MAP_SCORE
		,	MN.UT_MAP_SCORE
		,	MN.CGO_MAP_SCORE
		, RANK() OVER (--PARTITION BY MN.SVC_SCP_CD, MN.CRE_OFC_CD, MN.GLINE_SEQ, MN.PRS_CUST_TP_CD, MN.BSE_SEQ,       MN.MQC_RNG_FM_QTY ,       MN.MQC_RNG_TO_QTY 
				ORDER BY   ( CMDT_MAP_SCORE + ORI_MAP_SCORE + DEST_MAP_SCORE + UT_MAP_SCORE  + CGO_MAP_SCORE +CUST_TP_SCORE )  DESC ) RK
	FROM (
		SELECT  
		       (
			       SELECT DECODE(INTG_CD_VAL_DESC,'BOTH','',INTG_CD_VAL_DESC)                        
				FROM   COM_INTG_CD_DTL
				WHERE  INTG_CD_ID = 'CD02085'
				AND    INTG_CD_VAL_CTNT = A1.PRS_CUST_TP_CD
			) AS PRS_CUST_TP_NM  --CUSTOMER TYPE NAME
			,       B1.VSL_SLAN_CD                                               	--SVC_LANE
			,       C1.PRC_CMDT_DEF_CD                                           	--COMMODITY
			,       D1.ROUT_PNT_LOC_DEF_CD AS ORG_ROUT_PNT_LOC_DEF_CD            	--ORIGIN PNT
			,       E1.ROUT_VIA_PORT_DEF_CD AS ORG_ROUT_VIA_PORT_DEF_CD          	--ORIGIN VIA
			,       F1.ROUT_VIA_PORT_DEF_CD AS DEST_ROUT_VIA_PORT_DEF_CD         	--DEST VIA
			,       G1.ROUT_PNT_LOC_DEF_CD AS DEST_ROUT_PNT_LOC_DEF_CD           	--DEST PNT
			,       A1.RAT_UT_CD                                                 	--PER
			,       A1.PRC_CGO_TP_CD                                             	--CARGO
			,       A1.CURR_CD                                                 		--CURR
			,       A1.CMPB_AMT                                                  	--AMT
			,       A1.CRE_OFC_CD                                                	--OFFICE
			,       A1.MQC_RNG_FM_QTY                                            	--MQC FROM
			,       A1.MQC_RNG_TO_QTY                                            	--MQC TO
			,       TO_CHAR(H1.EFF_DT,'YYYY-MM-DD') AS EFF_DT                    	--EFF_DT
			,       TO_CHAR(H1.EXP_DT,'YYYY-MM-DD') AS EXP_DT                    	--EXP_DT
			,       A1.CMPB_SEQ  
			,	A1.SVC_SCP_CD
			,	A1.PRS_CUST_TP_CD
			,	A1.GLINE_SEQ
			,	A1.BSE_SEQ
		#if (${prc_cmdt_def_cd} != '')
			,	CMDT.MAP_SCORE AS CMDT_MAP_SCORE
		#else
			, 0 AS CMDT_MAP_SCORE
		#end 
		#if (${origin_cd} != '')
			,	ORI.MAP_SCORE AS ORI_MAP_SCORE
		#else
			, 0 AS ORI_MAP_SCORE
		#end 
		#if (${dest_cd} != '')
			,	DEST.MAP_SCORE AS DEST_MAP_SCORE
		#else
			, 0 AS DEST_MAP_SCORE
		#end
		#if (${rat_ut_cd} != '') 
				,  DECODE( TRIM(A1.RAT_UT_CD),NULL,0,2)  AS UT_MAP_SCORE
		#else
				, 0  AS UT_MAP_SCORE
		#end
		#if (${prc_cgo_tp_cd} != '')
				, DECODE(TRIM(A1.PRC_CGO_TP_CD),NULL,0,2)     AS CGO_MAP_SCORE
		#else
				, 0  AS CGO_MAP_SCORE
		#end

		#if (${prs_cust_tp_cd_in} != '' && ${prs_cust_tp_cd_in} != 'M') 
				, DECODE( A1.PRS_CUST_TP_CD, 'M',0,1000)  AS CUST_TP_SCORE
		#else
				, 0 AS CUST_TP_SCORE
		#end
		FROM       
			PRI_CMPB_GLINE_AMT A1
			, VW_PRI_CMPB_GLINE_MN H1
			, (
				--SVC_LANE
				SELECT  SVC_SCP_CD
				,       CRE_OFC_CD
				,       GLINE_SEQ
				,       PRS_CUST_TP_CD
				,       BSE_SEQ
				,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(VSL_SLAN_CD, '; ')),3) AS VSL_SLAN_CD
				FROM    (
						SELECT  A.SVC_SCP_CD
						,       A.CRE_OFC_CD
						,       A.GLINE_SEQ
						,       A.PRS_CUST_TP_CD
						,       A.BSE_SEQ
						,       A.VSL_SLAN_CD
						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							ORDER BY A.VSL_SLAN_CD, A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ ) AS RN
						FROM    PRI_CMPB_GLINE_SVC_LANE A
							, VW_PRI_CMPB_GLINE_MN C
						WHERE   1=1
							AND A.SVC_SCP_CD = C.SVC_SCP_CD
							AND	A.SVC_SCP_CD = C.SVC_SCP_CD
							AND	A.CRE_OFC_CD = C.CRE_OFC_CD
							AND	A.GLINE_SEQ = C.GLINE_SEQ
							AND C.NUM > 0
							-----------------------------------------------------------------
							--   SVC Lane으로 조회 한다. 
							-----------------------------------------------------------------
							#if (${vsl_slan_cd} != '') 
								AND EXISTS (
									SELECT 'F'
									FROM PRI_CMPB_GLINE_SVC_LANE F_LANE
									WHERE F_LANE.SVC_SCP_CD = A.SVC_SCP_CD
										AND F_LANE.CRE_OFC_CD = A.CRE_OFC_CD
										AND F_LANE.GLINE_SEQ = A.GLINE_SEQ
										AND F_LANE.PRS_CUST_TP_CD  = A.PRS_CUST_TP_CD
										AND F_LANE.BSE_SEQ = A.BSE_SEQ
										AND F_LANE.VSL_SLAN_CD IN  (${vsl_slan_cd})
								)	
							#end
					)
				START WITH RN = 1
				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ
					       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD
				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD
						   AND PRIOR GLINE_SEQ = GLINE_SEQ
				       AND PRIOR RN = RN - 1
				GROUP BY SVC_SCP_CD
				,        CRE_OFC_CD
				,        GLINE_SEQ
				,        PRS_CUST_TP_CD
				,        BSE_SEQ
			) B1
			, (
				--COMMODITY
				SELECT  SVC_SCP_CD
				,       CRE_OFC_CD
				,       GLINE_SEQ
				,       PRS_CUST_TP_CD
				,       BSE_SEQ
				,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(PRC_CMDT_DEF_CD, '; ')),3) AS PRC_CMDT_DEF_CD
				FROM    (
					SELECT  A.SVC_SCP_CD
					,       A.CRE_OFC_CD
					,       A.GLINE_SEQ
					,       A.PRS_CUST_TP_CD
					,       A.BSE_SEQ
					,       A.CMDT_SEQ
					,       A.PRC_CMDT_TP_CD
					,       A.PRC_CMDT_DEF_CD
					,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
						ORDER BY DECODE(A.PRC_CMDT_TP_CD, 'G','1','R','2','C','3'),  A.PRC_CMDT_DEF_CD,
									A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.CMDT_SEQ) AS RN
					FROM    PRI_CMPB_GLINE_CMDT A
						, VW_PRI_CMPB_GLINE_MN C
					WHERE   1=1
					AND   A.SVC_SCP_CD = C.SVC_SCP_CD
					AND	A.CRE_OFC_CD = C.CRE_OFC_CD
					AND	A.GLINE_SEQ = C.GLINE_SEQ
					AND C.NUM > 0
					)
				START WITH RN = 1
				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ
					       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD
				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD
						   AND PRIOR GLINE_SEQ = GLINE_SEQ
				       AND PRIOR RN = RN - 1
				GROUP BY SVC_SCP_CD
					,       CRE_OFC_CD
					,       GLINE_SEQ
					,       PRS_CUST_TP_CD
					,       BSE_SEQ
			) C1
			, (
				--ORIGIN POINT
				SELECT  SVC_SCP_CD
					,       CRE_OFC_CD
					,       GLINE_SEQ
					,       PRS_CUST_TP_CD
					,       BSE_SEQ
					,       ORG_DEST_TP_CD
					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_CD, '; ')),3) AS ROUT_PNT_LOC_DEF_CD
				FROM    (
					SELECT  A.SVC_SCP_CD
						,       A.CRE_OFC_CD
						,       A.GLINE_SEQ
						,       A.PRS_CUST_TP_CD
						,       A.BSE_SEQ
						,       A.ORG_DEST_TP_CD
						,       (A.ROUT_PNT_LOC_DEF_CD || DECODE(NVL(B.INTG_CD_VAL_DESC,''),'','','(' || B.INTG_CD_VAL_DESC || ')')) AS ROUT_PNT_LOC_DEF_CD
						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD
							ORDER BY DECODE(A.ROUT_PNT_LOC_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_PNT_LOC_DEF_CD,
										A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN
					FROM    PRI_CMPB_GLINE_ROUT_PNT A
						,       COM_INTG_CD_DTL B
						,	VW_PRI_CMPB_GLINE_MN C
					WHERE   1=1
						AND   A.ORG_DEST_TP_CD = 'O'
						AND   B.INTG_CD_ID(+) = 'CD02138'
						AND   A.RCV_DE_TERM_CD = B.INTG_CD_VAL_CTNT(+)
						AND    A.SVC_SCP_CD = C.SVC_SCP_CD
						AND	A.CRE_OFC_CD = C.CRE_OFC_CD
						AND	A.GLINE_SEQ = C.GLINE_SEQ	
						AND C.NUM > 0
					)
				START WITH RN = 1
				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ
					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD
				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD
				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD
						   AND PRIOR GLINE_SEQ = GLINE_SEQ
				       AND PRIOR RN = RN - 1
				GROUP BY SVC_SCP_CD
				,        CRE_OFC_CD
				,        GLINE_SEQ
				,        PRS_CUST_TP_CD
				,        BSE_SEQ
				,        ORG_DEST_TP_CD
			) D1
			, (
				--ORIGIN VIA
				SELECT  SVC_SCP_CD
					,       CRE_OFC_CD
					,       GLINE_SEQ
					,       PRS_CUST_TP_CD
					,       BSE_SEQ
					,       ORG_DEST_TP_CD
					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD, '; ')),3) AS ROUT_VIA_PORT_DEF_CD
				FROM    (
					SELECT  A.SVC_SCP_CD
						,       A.CRE_OFC_CD
						,       A.GLINE_SEQ
						,       A.PRS_CUST_TP_CD
						,       A.BSE_SEQ
						,       A.ORG_DEST_TP_CD
						,       A.ROUT_VIA_PORT_DEF_CD
						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD
							ORDER BY DECODE(A.ROUT_VIA_PORT_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_VIA_PORT_DEF_CD,
									A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN
					FROM    PRI_CMPB_GLINE_ROUT_VIA A
						, VW_PRI_CMPB_GLINE_MN C
					WHERE   1=1
						AND   A.ORG_DEST_TP_CD = 'O'
						AND A.SVC_SCP_CD = C.SVC_SCP_CD
						AND	A.CRE_OFC_CD = C.CRE_OFC_CD
						AND	A.GLINE_SEQ = C.GLINE_SEQ	
						AND C.NUM > 0 
					)
				START WITH RN = 1
				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ
					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD
				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD
				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD
						   AND PRIOR GLINE_SEQ = GLINE_SEQ
				       AND PRIOR RN = RN - 1
				GROUP BY SVC_SCP_CD
				,        CRE_OFC_CD
				,        GLINE_SEQ
				,        PRS_CUST_TP_CD
				,        BSE_SEQ
				,        ORG_DEST_TP_CD
			) E1
			, (
				--DEST VIA
				SELECT  SVC_SCP_CD
					,       CRE_OFC_CD
					,       GLINE_SEQ
					,       PRS_CUST_TP_CD
					,       BSE_SEQ
					,       ORG_DEST_TP_CD
					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD, '; ')),3) AS ROUT_VIA_PORT_DEF_CD
				FROM    (
					SELECT  A.SVC_SCP_CD
						,       A.CRE_OFC_CD
						,       A.GLINE_SEQ
						,       A.PRS_CUST_TP_CD
						,       A.BSE_SEQ
						,       A.ORG_DEST_TP_CD
						,       A.ROUT_VIA_PORT_DEF_CD
						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD
							ORDER BY DECODE(A.ROUT_VIA_PORT_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_VIA_PORT_DEF_CD,
										A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN
					FROM    PRI_CMPB_GLINE_ROUT_VIA A
						, VW_PRI_CMPB_GLINE_MN C
					WHERE   1=1
						AND   A.ORG_DEST_TP_CD = 'D'
						AND A.SVC_SCP_CD = C.SVC_SCP_CD
						AND	A.CRE_OFC_CD = C.CRE_OFC_CD
						AND	A.GLINE_SEQ = C.GLINE_SEQ	
						AND C.NUM > 0
					)
				START WITH RN = 1
				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ
					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD
				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD
				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD
						   AND PRIOR GLINE_SEQ = GLINE_SEQ
				       AND PRIOR RN = RN - 1
				GROUP BY SVC_SCP_CD
					,        CRE_OFC_CD
					,        GLINE_SEQ
					,        PRS_CUST_TP_CD
					,        BSE_SEQ
					,        ORG_DEST_TP_CD
			) F1
			, (
				--DEST POINT
				SELECT  SVC_SCP_CD
					,       CRE_OFC_CD
					,       GLINE_SEQ
					,       PRS_CUST_TP_CD
					,       BSE_SEQ
					,       ORG_DEST_TP_CD
					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_CD, '; ')),3) AS ROUT_PNT_LOC_DEF_CD
				FROM    (
					SELECT  A.SVC_SCP_CD
					,       A.CRE_OFC_CD
					,       A.GLINE_SEQ
					,       A.PRS_CUST_TP_CD
					,       A.BSE_SEQ
					,       A.ORG_DEST_TP_CD
					,       A.ROUT_PNT_SEQ
					,       (A.ROUT_PNT_LOC_DEF_CD || DECODE(NVL(B.INTG_CD_VAL_DESC,''),'','','(' || B.INTG_CD_VAL_DESC || ')')) AS ROUT_PNT_LOC_DEF_CD
					,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD
						ORDER BY DECODE(A.ROUT_PNT_LOC_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_PNT_LOC_DEF_CD,
									A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN
					FROM    PRI_CMPB_GLINE_ROUT_PNT A
						, COM_INTG_CD_DTL B
						, VW_PRI_CMPB_GLINE_MN C
					WHERE   1=1
					AND   A.ORG_DEST_TP_CD = 'D'
					AND   B.INTG_CD_ID(+) = 'CD02139'
					AND   A.RCV_DE_TERM_CD = B.INTG_CD_VAL_CTNT(+)
					
					AND A.SVC_SCP_CD = C.SVC_SCP_CD
					AND	A.CRE_OFC_CD = C.CRE_OFC_CD
					AND	A.GLINE_SEQ = C.GLINE_SEQ	
					AND C.NUM > 0 
				)
				START WITH RN = 1
				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ
					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD
				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD
				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD
						   AND PRIOR GLINE_SEQ = GLINE_SEQ
				       AND PRIOR RN = RN - 1
				GROUP BY SVC_SCP_CD
					,        CRE_OFC_CD
					,        GLINE_SEQ
					,        PRS_CUST_TP_CD
					,        BSE_SEQ
					,        ORG_DEST_TP_CD
			) G1
			-----------------------------------------------------------------------------------------------------------
			-- COMMODITY 일때
			-----------------------------------------------------------------------------------------------------------
		#if (${prc_cmdt_def_cd} != '')
			, (
				-- MAPPING된 데이터
				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE
				FROM (
					SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE
					    , RANK() OVER (PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							   ORDER BY  map_score DESC) RK
					FROM (
						-- REP. COMMODITY, COMMODIFY 일때
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							, DECODE(A.PRC_CMDT_TP_CD,'R',4,'C',6,0)  AS MAP_SCORE
						FROM 	PRI_CMPB_GLINE_CMDT A
							, VW_PRI_CMPB_GLINE_MN C
						WHERE 	1=1
							AND  A.PRC_CMDT_DEF_CD = @[prc_cmdt_def_cd]
							AND  A.PRC_CMDT_TP_CD IN ('R','C')
							AND  A.SVC_SCP_CD = C.SVC_SCP_CD
							AND  A.CRE_OFC_CD = C.CRE_OFC_CD
							AND  A.GLINE_SEQ = C.GLINE_SEQ
						UNION ALL	
						-- GROUP COMMODITY일때
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ  
							, DECODE(B.PRC_CMDT_TP_CD,'R',4,'C',6,0)  AS MAP_SCORE
						FROM 	PRI_CMPB_GLINE_CMDT A
							, PRI_CMPB_GRP_CMDT D  
							, PRI_CMPB_GRP_CMDT_DTL B  
							, VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.SVC_SCP_CD = B.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = B.CRE_OFC_CD
						   AND  A.GLINE_SEQ = B.GLINE_SEQ
						   AND	A.PRC_CMDT_TP_CD = 'G' 
						   AND  B.PRC_CMDT_DEF_CD = @[prc_cmdt_def_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						   AND  A.SVC_SCP_CD = D.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = D.CRE_OFC_CD
						   AND  A.GLINE_SEQ = D.GLINE_SEQ
						   AND  D.GRP_CMDT_SEQ = B.GRP_CMDT_SEQ
						   AND  A.PRC_CMDT_DEF_CD = D.PRC_GRP_CMDT_CD
					) A
				) A
				WHERE A.RK = 1
				-- NULL을 위한 데이터
				UNION ALL
				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ , 0 AS MAP_SCORE
				FROM 
				(	
					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ  
					FROM 	PRI_CMPB_GLINE_BSE A
					,       VW_PRI_CMPB_GLINE_MN C	
					WHERE 	1=1
					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
					   AND  A.GLINE_SEQ = C.GLINE_SEQ
					MINUS
					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ
					FROM 	PRI_CMPB_GLINE_CMDT A
					,       VW_PRI_CMPB_GLINE_MN C	
					WHERE 	1=1
					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
					   AND  A.GLINE_SEQ = C.GLINE_SEQ
				) A
			) CMDT 
		#end
			-----------------------------------------------------------------------------------------------------------
			-- ORIGIN 일때
			-----------------------------------------------------------------------------------------------------------
		#if (${origin_cd} != '')
			, (
				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, MAP_SCORE
				FROM (
					SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE
					    , RANK() OVER (PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							   ORDER BY  map_score DESC) RK
					FROM (
						-- PRI_CMPB_GLINE_ROUT_PNT에 Location Code가 있는경우
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							,DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,       VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.ORG_DEST_TP_CD = 'O'		
					#if (${r_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])
					#end
						   AND	A.ROUT_PNT_LOC_TP_CD = 'L' 
						   AND	A.ROUT_PNT_LOC_DEF_CD = @[origin_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						UNION ALL
						-- PRI_CMPB_GLINE_ROUT_PNT에 Group Code가 있는경우
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							, DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score 
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,	PRI_CMPB_GRP_LOC_DTL B
						,       VW_PRI_CMPB_GLINE_MN C	
						,       PRI_CMPB_GRP_LOC D 
						WHERE 	1=1
						   AND  A.SVC_SCP_CD = B.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = B.CRE_OFC_CD
						   AND  A.GLINE_SEQ = B.GLINE_SEQ	
						   AND  A.ORG_DEST_TP_CD = 'O'	
					#if (${r_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])
					#end
						   AND	A.ROUT_PNT_LOC_TP_CD = 'G' 
						   AND  B.LOC_CD = @[origin_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						   AND  A.SVC_SCP_CD = D.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = D.CRE_OFC_CD
						   AND  A.GLINE_SEQ = D.GLINE_SEQ
						   AND  D.GRP_LOC_SEQ = B.GRP_LOC_SEQ
						   AND  A.ROUT_PNT_LOC_DEF_CD = D.PRC_GRP_LOC_CD
						UNION ALL
						-- PRI_CMPB_GLINE_ROUT_PNT에 Region Code가 있는경우 
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ 
							,DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 4 AS map_score
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,       MDM_LOCATION LOC
						,       VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.ORG_DEST_TP_CD = 'O'	
					#if (${r_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])
					#end
						   AND  A.ROUT_PNT_LOC_DEF_CD = LOC.RGN_CD
						   AND  A.ROUT_PNT_LOC_TP_CD = 'R' 
						   AND  LOC.LOC_CD = @[origin_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						UNION ALL
						-- PRI_CMPB_GLINE_ROUT_PNT에 Country Code가 있는경우 
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ 
							, DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 2 AS map_score 
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,	MDM_LOCATION B
						,       VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.ORG_DEST_TP_CD = 'O'		 
					#if (${r_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])
					#end
						   AND  A.ROUT_PNT_LOC_DEF_CD = B.CNT_CD
						   AND  A.ROUT_PNT_LOC_TP_CD = 'C' 
						   AND  B.LOC_CD = @[origin_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
				 
					) A
				) A
				WHERE A.RK = 1
				-- NULL을 위한 데이터
				UNION ALL
				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ , 0 AS MAP_SCORE
				FROM 
				(	
										 
					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ
					FROM 	PRI_CMPB_GLINE_BSE A
					,       VW_PRI_CMPB_GLINE_MN C	
					WHERE 	1=1
					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
					   AND  A.GLINE_SEQ = C.GLINE_SEQ
					MINUS
					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ
					FROM 	PRI_CMPB_GLINE_ROUT_PNT A
					,       VW_PRI_CMPB_GLINE_MN C	
					WHERE 	1=1
					    AND  A.ORG_DEST_TP_CD = 'O'		 
					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
					   AND  A.GLINE_SEQ = C.GLINE_SEQ
				) A

			) ORI 
		#end
			-----------------------------------------------------------------------------------------------------------
			-- DEST 일때
			-----------------------------------------------------------------------------------------------------------
		#if (${dest_cd} != '')
			, (
				-- MAPPING된 데이터
				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, MAP_SCORE
				FROM (
					SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE
					    , RANK() OVER (PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							   ORDER BY  map_score DESC) RK
					FROM (
						-- PRI_CMPB_GLINE_ROUT_PNT에 Location Code가 있는경우
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							,DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,       VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.ORG_DEST_TP_CD = 'D'		
					#if (${d_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])
					#end
						   AND	A.ROUT_PNT_LOC_TP_CD = 'L' 
						   AND	A.ROUT_PNT_LOC_DEF_CD =  @[dest_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						UNION ALL
						-- PRI_CMPB_GLINE_ROUT_PNT에 Group Code가 있는경우
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ
							, DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score 
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,	PRI_CMPB_GRP_LOC_DTL B
						,       VW_PRI_CMPB_GLINE_MN C	
						,       PRI_CMPB_GRP_LOC D 
						WHERE 	1=1
						   AND  A.SVC_SCP_CD = B.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = B.CRE_OFC_CD
						   AND  A.GLINE_SEQ = B.GLINE_SEQ	
						   AND  A.ORG_DEST_TP_CD = 'D'	
					#if (${d_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])
					#end
						   AND	A.ROUT_PNT_LOC_TP_CD = 'G' 
						   AND  B.LOC_CD =  @[dest_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						   AND  A.SVC_SCP_CD = D.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = D.CRE_OFC_CD
						   AND  A.GLINE_SEQ = D.GLINE_SEQ
						   AND  D.GRP_LOC_SEQ = B.GRP_LOC_SEQ
						   AND  A.ROUT_PNT_LOC_DEF_CD = D.PRC_GRP_LOC_CD
						UNION ALL
						-- PRI_CMPB_GLINE_ROUT_PNT에 Region Code가 있는경우 
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ 
							,DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 4 AS map_score
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,       MDM_LOCATION LOC
						,       VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.ORG_DEST_TP_CD = 'D'	
					#if (${d_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])
					#end
						   AND  A.ROUT_PNT_LOC_DEF_CD = LOC.RGN_CD
						   AND  A.ROUT_PNT_LOC_TP_CD = 'R' 
						   AND  LOC.LOC_CD =  @[dest_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
						UNION ALL
						-- PRI_CMPB_GLINE_ROUT_PNT에 Country Code가 있는경우 
						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ 
							, DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 2 AS map_score 
						FROM 	PRI_CMPB_GLINE_ROUT_PNT A
						,	MDM_LOCATION B
						,       VW_PRI_CMPB_GLINE_MN C	
						WHERE 	1=1
						   AND  A.ORG_DEST_TP_CD = 'D'		
					#if (${d_rcv_de_term_cd} != '') 
						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])
					#end
						   AND  A.ROUT_PNT_LOC_DEF_CD = B.CNT_CD
						   AND  A.ROUT_PNT_LOC_TP_CD = 'C' 
						   AND  B.LOC_CD =  @[dest_cd]
						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
						   AND  A.GLINE_SEQ = C.GLINE_SEQ
				 
					) A
				) A
				WHERE A.RK = 1
				-- NULL을 위한 데이터
				UNION ALL
				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ , 0 AS MAP_SCORE
				FROM 
				(	
										 
					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ
					FROM 	PRI_CMPB_GLINE_BSE A
					,       VW_PRI_CMPB_GLINE_MN C	
					WHERE 	1=1
					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
					   AND  A.GLINE_SEQ = C.GLINE_SEQ
					MINUS
					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ
					FROM 	PRI_CMPB_GLINE_ROUT_PNT A
					,       VW_PRI_CMPB_GLINE_MN C	
					WHERE 	1=1
					    AND  A.ORG_DEST_TP_CD = 'D'		 
					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD
					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD
					   AND  A.GLINE_SEQ = C.GLINE_SEQ
				) A
			) DEST
		#end
		WHERE   A1.SVC_SCP_CD = H1.SVC_SCP_CD
			AND     A1.CRE_OFC_CD = H1.CRE_OFC_CD
			AND     A1.GLINE_SEQ = H1.GLINE_SEQ

			AND     A1.SVC_SCP_CD = B1.SVC_SCP_CD
			AND     A1.CRE_OFC_CD = B1.CRE_OFC_CD
			AND     A1.GLINE_SEQ = B1.GLINE_SEQ
			AND     A1.PRS_CUST_TP_CD = B1.PRS_CUST_TP_CD
			AND     A1.BSE_SEQ = B1.BSE_SEQ
#if (${prc_cmdt_def_cd} != '')
			AND     A1.SVC_SCP_CD = CMDT.SVC_SCP_CD
			AND     A1.CRE_OFC_CD = CMDT.CRE_OFC_CD
			AND     A1.GLINE_SEQ = CMDT.GLINE_SEQ
			AND     A1.PRS_CUST_TP_CD = CMDT.PRS_CUST_TP_CD
			AND     A1.BSE_SEQ = CMDT.BSE_SEQ
#end
#if (${origin_cd} != '')
			AND     A1.SVC_SCP_CD = ORI.SVC_SCP_CD
			AND     A1.CRE_OFC_CD = ORI.CRE_OFC_CD
			AND     A1.GLINE_SEQ = ORI.GLINE_SEQ
			AND     A1.PRS_CUST_TP_CD = ORI.PRS_CUST_TP_CD
			AND     A1.BSE_SEQ = ORI.BSE_SEQ
#end
#if (${dest_cd} != '')
			AND     A1.SVC_SCP_CD = DEST.SVC_SCP_CD
			AND     A1.CRE_OFC_CD = DEST.CRE_OFC_CD
			AND     A1.GLINE_SEQ = DEST.GLINE_SEQ
			AND     A1.PRS_CUST_TP_CD = DEST.PRS_CUST_TP_CD
			AND     A1.BSE_SEQ = DEST.BSE_SEQ
#end
			AND     A1.SVC_SCP_CD = C1.SVC_SCP_CD(+)
			AND     A1.CRE_OFC_CD = C1.CRE_OFC_CD(+)
			AND     A1.GLINE_SEQ = C1.GLINE_SEQ(+)
			AND     A1.PRS_CUST_TP_CD = C1.PRS_CUST_TP_CD(+)
			AND     A1.BSE_SEQ = C1.BSE_SEQ(+)
			AND     A1.SVC_SCP_CD = D1.SVC_SCP_CD(+)
			AND     A1.CRE_OFC_CD = D1.CRE_OFC_CD(+)
			AND     A1.GLINE_SEQ = D1.GLINE_SEQ(+)
			AND     A1.PRS_CUST_TP_CD = D1.PRS_CUST_TP_CD(+)
			AND     A1.BSE_SEQ = D1.BSE_SEQ(+)
			AND     A1.SVC_SCP_CD = E1.SVC_SCP_CD(+)
			AND     A1.CRE_OFC_CD = E1.CRE_OFC_CD(+)
			AND     A1.GLINE_SEQ = E1.GLINE_SEQ(+)
			AND     A1.PRS_CUST_TP_CD = E1.PRS_CUST_TP_CD(+)
			AND     A1.BSE_SEQ = E1.BSE_SEQ(+)
			AND     A1.SVC_SCP_CD = F1.SVC_SCP_CD(+)
			AND     A1.CRE_OFC_CD = F1.CRE_OFC_CD(+)
			AND     A1.GLINE_SEQ = F1.GLINE_SEQ(+)
			AND     A1.PRS_CUST_TP_CD = F1.PRS_CUST_TP_CD(+)
			AND     A1.BSE_SEQ = F1.BSE_SEQ(+)
			AND     A1.SVC_SCP_CD = G1.SVC_SCP_CD(+)
			AND     A1.CRE_OFC_CD = G1.CRE_OFC_CD(+)
			AND     A1.GLINE_SEQ = G1.GLINE_SEQ(+)
			AND     A1.PRS_CUST_TP_CD = G1.PRS_CUST_TP_CD(+)
			AND     A1.BSE_SEQ = G1.BSE_SEQ(+)
			-----------------------------------------------------------------
			--   Customer Type 로 조회 한다. 
			-----------------------------------------------------------------
			#if (${prs_cust_tp_cd_in} != '' && ${prs_cust_tp_cd_in} != 'M') 
				AND A1.PRS_CUST_TP_CD IN ('M', @[prs_cust_tp_cd_in] )
			#end

			AND H1.NUM > 0
			-----------------------------------------------------------------
			--  PER Type 로 조회 한다. 
			-----------------------------------------------------------------
			#if (${rat_ut_cd} != '') 
				AND	(A1.RAT_UT_CD IN (${rat_ut_cd}) OR A1.RAT_UT_CD IS NULL OR RTRIM(LTRIM(A1.RAT_UT_CD)) = '')
			#end
			-----------------------------------------------------------------
			--  CARGO Type 로 조회 한다. 
			-----------------------------------------------------------------
			#if (${prc_cgo_tp_cd} != '') 	
				AND	(A1.PRC_CGO_TP_CD = @[prc_cgo_tp_cd] OR A1.PRC_CGO_TP_CD IS NULL OR RTRIM(LTRIM(A1.PRC_CGO_TP_CD)) = '')
			#end	
	) MN
) MN
WHERE RK = 1
ORDER BY MN.PRS_CUST_TP_CD
	,        MN.CRE_OFC_CD
	,	 MN.EFF_DT
	,	 MN.EXP_DT
	,        MN.BSE_SEQ
	,        MN.CMPB_SEQ			]]></sql>
			<params>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="eff_dt" type="12" value="" out="N"/>
				<param name="exp_dt" type="12" value="" out="N"/>
				<param name="cre_ofc_cd_in" type="12" value="" out="N"/>
				<param name="prc_cmdt_def_cd" type="12" value="" out="N"/>
				<param name="r_rcv_de_term_cd" type="12" value="" out="N"/>
				<param name="origin_cd" type="12" value="" out="N"/>
				<param name="d_rcv_de_term_cd" type="12" value="" out="N"/>
				<param name="dest_cd" type="12" value="" out="N"/>
				<param name="prs_cust_tp_cd_in" type="12" value="" out="N"/>
				<param name="prc_cgo_tp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
