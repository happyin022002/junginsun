<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MultiDimensionRPTDBDAOSearchPlAdjustmentTradeListRSQL">
			<desc><![CDATA[MultiDimensionRPTDBDAOSearchPlAdjustmentTradeListRSQL]]></desc>
			<sql><![CDATA[
SELECT DECODE(GROUPING(RPT_ITM_DESC), 1, '1', '2') AS LV
      ,MIN(SEQ) AS SEQ
      ,DECODE(RPT_ITM_DESC, NULL, SGRP_COST_CD_DESC, RPT_ITM_DESC) AS ITM_DESC
      ,STND_COST_CD
      ,SGRP_COST_CD_DESC
      ,RPT_ITM_DESC
      ,RPT_ITM_COLR_FLG
    #foreach($key in ${allcols}) 
      ,SUM(HH_AMT$velocityCount) AS HH_AMT$velocityCount
      ,SUM(BH_AMT$velocityCount) AS BH_AMT$velocityCount
      ,SUM(DIR_M_AMT$velocityCount) AS DIR_M_AMT$velocityCount
      ,SUM(TRD_AMT$velocityCount)   AS TRD_AMT$velocityCount
	#end
      ,SUM (COM_AMT)   AS COM_AMT
      ,SUM (TTL_AMT)   AS TTL_AMT
      ,COUNT(1) AS CNT
FROM (
        SELECT C2.RPT_DP_SEQ AS SEQ
              ,C2.SGRP_COST_CD
              ,C2.STND_COST_CD
              ,C2.SGRP_COST_CD_DESC
              ,C2.RPT_ITM_DESC
              ,C2.RPT_ITM_COLR_FLG
      #foreach($key in ${allcols})
              ,SUM(CASE WHEN C2.TRD_CD = '$key' AND C2.HUL_BND_CD = 'HH' AND C2.STND_COST_CD != 'RPB00000' AND C2.STND_COST_CD != 'LOADFACT' 
                        THEN NVL(C1.AMT, 0)
                        WHEN C2.TRD_CD = '$key' AND C2.HUL_BND_CD = 'HH' AND (C2.STND_COST_CD = 'RPB00000' OR C2.STND_COST_CD = 'LOADFACT') 
                        THEN 1
                        ELSE 0 END) *
                  (CASE WHEN C2.STND_COST_CD = 'RPB00000' THEN DECODE(MAX(C1.LOAD), 0, 0, MAX(C1.REV_AMT)/MAX(C1.LOAD))
                        WHEN C2.STND_COST_CD = 'LOADFACT' THEN DECODE(MAX(C1.BSA_CAPA), 0, 0, MAX(C1.LOAD)/MAX(C1.BSA_CAPA) * 100)
                        ELSE 1 END) AS HH_AMT$velocityCount
                        
              ,SUM(CASE WHEN C2.TRD_CD = '$key' AND C2.HUL_BND_CD = 'BH' AND C2.STND_COST_CD != 'RPB00000' AND C2.STND_COST_CD != 'LOADFACT' 
                        THEN NVL(C1.AMT, 0)
                        WHEN C2.TRD_CD = '$key' AND C2.HUL_BND_CD = 'BH' AND (C2.STND_COST_CD = 'RPB00000' OR C2.STND_COST_CD = 'LOADFACT') 
                        THEN 1
                        ELSE 0 END) *
                  (CASE WHEN C2.STND_COST_CD = 'RPB00000' THEN DECODE(MAX(C1.LOAD), 0, 0, MAX(C1.REV_AMT)/MAX(C1.LOAD))
                        WHEN C2.STND_COST_CD = 'LOADFACT' THEN DECODE(MAX(C1.BSA_CAPA), 0, 0, MAX(C1.LOAD)/MAX(C1.BSA_CAPA) * 100)
                        ELSE 1 END) AS BH_AMT$velocityCount
                        
              ,SUM(CASE WHEN C2.TRD_CD = '$key' AND C2.HUL_BND_CD = 'M' AND C2.STND_COST_CD != 'RPB00000' AND C2.STND_COST_CD != 'LOADFACT' 
                        THEN NVL(C1.AMT, 0)
                        WHEN C2.TRD_CD = '$key' AND C2.HUL_BND_CD = 'M' AND (C2.STND_COST_CD = 'RPB00000' OR C2.STND_COST_CD = 'LOADFACT') 
                        THEN 1
                        ELSE 0 END) *
                  (CASE WHEN C2.STND_COST_CD = 'RPB00000' THEN DECODE(MAX(C1.LOAD), 0, 0, MAX(C1.REV_AMT)/MAX(C1.LOAD))
                        WHEN C2.STND_COST_CD = 'LOADFACT' THEN DECODE(MAX(C1.BSA_CAPA), 0, 0, MAX(C1.LOAD)/MAX(C1.BSA_CAPA) * 100)
                        ELSE 1 END) AS DIR_M_AMT$velocityCount
                        
              ,SUM(CASE WHEN C2.TRD_CD = '$key' AND C2.STND_COST_CD != 'RPB00000' AND C2.STND_COST_CD != 'LOADFACT' 
                        THEN NVL(C1.AMT, 0)
                        WHEN C2.TRD_CD = '$key' AND (C2.STND_COST_CD = 'RPB00000' OR C2.STND_COST_CD = 'LOADFACT') 
                        THEN 1
                        ELSE 0 END) *
                  (CASE WHEN C2.STND_COST_CD = 'RPB00000' THEN DECODE(MAX(C1.LOAD), 0, 0, MAX(C1.REV_AMT)/MAX(C1.LOAD))
                        WHEN C2.STND_COST_CD = 'LOADFACT' THEN DECODE(MAX(C1.BSA_CAPA), 0, 0, MAX(C1.LOAD)/MAX(C1.BSA_CAPA) * 100)
                        ELSE 1 END) AS TRD_AMT$velocityCount
      #end
              ,SUM(CASE WHEN C2.TRD_CD = 'COM' AND C2.STND_COST_CD != 'RPB00000' AND C2.STND_COST_CD != 'LOADFACT' 
                        THEN NVL(C1.AMT, 0)
                        WHEN C2.TRD_CD = 'COM' AND (C2.STND_COST_CD = 'RPB00000' OR C2.STND_COST_CD = 'LOADFACT') 
                        THEN 1
                        ELSE 0 END) *
                  (CASE WHEN C2.STND_COST_CD = 'RPB00000' THEN DECODE(MAX(C1.LOAD), 0, 0, MAX(C1.REV_AMT)/MAX(C1.LOAD))
                        WHEN C2.STND_COST_CD = 'LOADFACT' THEN DECODE(MAX(C1.BSA_CAPA), 0, 0, MAX(C1.LOAD)/MAX(C1.BSA_CAPA) * 100)
                        ELSE 1 END) AS COM_AMT
                        
              ,SUM(CASE WHEN C2.STND_COST_CD != 'RPB00000' AND C2.STND_COST_CD != 'LOADFACT' 
                        THEN NVL(C1.AMT, 0)
                        WHEN C2.STND_COST_CD = 'RPB00000' OR C2.STND_COST_CD = 'LOADFACT' 
                        THEN 1
                        ELSE 0 END) *
                  (CASE WHEN C2.STND_COST_CD = 'RPB00000' THEN DECODE(MAX(C1.LOAD), 0, 0, MAX(C1.REV_AMT)/MAX(C1.LOAD))
                        WHEN C2.STND_COST_CD = 'LOADFACT' THEN DECODE(MAX(C1.BSA_CAPA), 0, 0, MAX(C1.LOAD)/MAX(C1.BSA_CAPA) * 100)
                        ELSE 1 END) AS TTL_AMT
        FROM (
                SELECT DISTINCT A.TRD_CD
                      ,A.HUL_BND_CD
                      ,B.STND_COST_CD
                      ,SUM(NVL(DECODE(A.PL_DESC, 'Week', A.ESTM_PL_AMT, 'Month', A.ACCT_AMT), 0)) OVER(PARTITION BY A.TRD_CD, A.HUL_BND_CD, B.STND_COST_CD) AS AMT
                      ,SUM(DECODE(B.STND_COST_CD,'LOAD0000',NVL(DECODE(A.PL_DESC, 'Week', A.ESTM_PL_AMT, 'Month', A.ACCT_AMT), 0),0)) OVER(PARTITION BY A.TRD_CD, A.HUL_BND_CD) AS LOAD
                      ,SUM(DECODE(B.STND_COST_CD,'BSA00000',NVL(DECODE(A.PL_DESC, 'Week', A.ESTM_PL_AMT, 'Month', A.ACCT_AMT), 0),0)) OVER(PARTITION BY A.TRD_CD, A.HUL_BND_CD) AS BSA_CAPA
                      ,SUM(DECODE(B.STND_COST_CD,'REVENUE0',NVL(DECODE(A.PL_DESC, 'Week', A.ESTM_PL_AMT, 'Month', A.ACCT_AMT), 0),0)) OVER(PARTITION BY A.TRD_CD, A.HUL_BND_CD) AS REV_AMT
                FROM MAS_PFIT_ADJ A, MAS_PFIT_LSS_RPT_ITM B
                WHERE 1=1
                  AND A.STND_COST_CD = B.STND_COST_CD
                  AND B.RPT_VW_CD = 'P'
               #if(${f_chkprd} =='M')
                  AND A.REV_YRMON    BETWEEN @[f_year]||@[f_fm_mon] AND @[f_year]||@[f_to_mon]
               #elseif (${f_chkprd} =='W')
                  AND A.SLS_YRMON     LIKE @[f_year]||@[f_sls_mon]||'%'
                  AND A.COST_WK       BETWEEN @[f_fm_wk] AND @[f_to_wk]
               #end
               #if(${f_trd_cd} !='')
                  AND A.TRD_CD    = @[f_trd_cd]
               #end
               #if(${f_rlane_cd} !='')
                  AND A.RLANE_CD  = @[f_rlane_cd]
               #end
               #if(${f_dir_cd} !='')
                  AND A.SKD_DIR_CD = @[f_dir_cd] 
               #end
               #if(${f_vsl_cd} !='')
                  AND A.VSL_CD    = @[f_vsl_cd]
               #end
               #if(${f_skd_voy_no} !='')
                  AND A.SKD_VOY_NO = @[f_skd_voy_no]
               #end
               #if(${f_skd_dir_cd} !='')
                  AND A.SKD_DIR_CD = @[f_skd_dir_cd]
               #end
               #if(${f_sub_trd_cd} !='')
                  AND A.SUB_TRD_CD = @[f_sub_trd_cd]
               #end
               #if(${f_trd_dir_cd} !='')
                  AND A.HUL_BND_CD = @[f_trd_dir_cd]
               #end
                  AND (B.STND_COST_TP_CD IN ('S','C','O') OR B.STND_COST_CD IN ('OPCTOTAL','OPB00000','BOPTOTAL','BOPB0000'))
                
                UNION ALL
                
                SELECT DISTINCT 'COM' AS TRD_CD
                      ,'M' HUL_BND_CD
                      ,A1.STND_COST_CD
                      ,SUM(NVL(A1.TTL_AMT, 0)) OVER(PARTITION BY A1.STND_COST_CD) AS AMT
                      ,SUM(DECODE(A1.STND_COST_CD,'LOAD0000',NVL(A1.TTL_AMT, 0),0)) OVER() AS LOAD
                      ,SUM(DECODE(A1.STND_COST_CD,'BSA00000',NVL(A1.TTL_AMT, 0),0)) OVER() AS BSA_CAPA
                      ,SUM(DECODE(A1.STND_COST_CD,'REVENUE0',NVL(A1.TTL_AMT, 0),0)) OVER() AS REV_AMT
                 FROM MAS_MNL_DTL_COST A1
                WHERE 1 = 1
               #if(${f_chkprd} =='M')
                  AND A1.COST_YRMON    BETWEEN @[f_year]||@[f_fm_mon] AND @[f_year]||@[f_to_mon]
               #elseif (${f_chkprd} =='W')
                  AND A1.COST_YRMON    LIKE @[f_year]||'%'
                  AND A1.COST_WK       BETWEEN @[f_fm_wk] AND @[f_to_wk]
               #end
               #if(${f_trd_cd} !='')
                  AND 'COM'    = @[f_trd_cd]
               #end
               #if(${f_rlane_cd} !='')
                  AND A1.RLANE_CD  = @[f_rlane_cd]
               #end
               #if(${f_dir_cd} !='')
                  AND 'M'    = @[f_dir_cd]
               #end
               #if(${f_vsl_cd} !='')
                  AND 'CNTC'    = @[f_vsl_cd]
               #end
               #if(${f_skd_voy_no} !='')
                  AND SUBSTR(A1.COST_YRMON,3,2)||A1.COST_WK    = @[f_skd_voy_no]
               #end
               #if(${f_skd_dir_cd} !='')
                  AND 'M' = @[f_skd_dir_cd]
               #end
               #if(${f_sub_trd_cd} !='')
                  AND 'OT' = @[f_sub_trd_cd]
               #end
            ) C1,
            (
              SELECT A1.TRD_CD 
					,A2.SGRP_COST_CD 
					,A2.STND_COST_CD 
					,A2.RPT_VW_CD 
					,A1.HUL_BND_CD
					,A2.SGRP_COST_CD_DESC
					,A2.RPT_ITM_DESC
					,A2.RPT_DP_SEQ
					,A2.RPT_ITM_COLR_FLG
				FROM (
					 SELECT DISTINCT TRD_CD, HUL_BND_CD FROM MAS_LANE_RGST WHERE DELT_FLG = 'N' UNION ALL
                     SELECT DISTINCT TRD_CD, 'M' HUL_BND_CD FROM MAS_LANE_RGST WHERE DELT_FLG = 'N' UNION ALL
                     SELECT DISTINCT 'COM' TRD_CD, 'M' HUL_BND_CD FROM DUAL
					 ) A1
					,MAS_PFIT_LSS_RPT_ITM A2
				WHERE A2.RPT_VW_CD = 'P'
                  AND (A2.STND_COST_TP_CD IN ('S','C','O') OR A2.STND_COST_CD IN ('OPCTOTAL','OPB00000','BOPTOTAL','BOPB0000'))
            ) C2
        WHERE C1.STND_COST_CD(+) = C2.STND_COST_CD
          AND C1.TRD_CD(+)       = C2.TRD_CD
          AND C1.HUL_BND_CD(+)   = C2.HUL_BND_CD
        GROUP BY C2.RPT_DP_SEQ
              ,C2.STND_COST_CD
              ,C2.SGRP_COST_CD
              ,C2.RPT_ITM_DESC
              ,C2.SGRP_COST_CD_DESC
              ,C2.RPT_ITM_COLR_FLG
        ORDER BY SEQ
      )
WHERE 1=1
GROUP BY GROUPING SETS ((SGRP_COST_CD_DESC), (STND_COST_CD, SGRP_COST_CD_DESC, RPT_ITM_DESC, RPT_ITM_COLR_FLG))
ORDER BY SEQ, LV			]]></sql>
			<params>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_sls_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
				<param name="f_skd_dir_cd" type="12" value="" out="N"/>
				<param name="f_sub_trd_cd" type="12" value="" out="N"/>
				<param name="f_trd_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
