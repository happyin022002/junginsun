<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ScqAwkwardDBDAOSearchOceanRouteYDListRSQL">
			<desc><![CDATA[입력된 POL, POD 기준의 Ocean Route 와 
각 Port 별 Yard 를 Proformer Schedule 및 TES 의 Main Yard 정보를 조회하여 가져온다.]]></desc>
			<sql><![CDATA[
SELECT ORG_LOC_CD, DEST_LOC_CD, ROUT_SEQ
   ,   N1ST_POL_CD POL1, N1ST_POD_CD POD1, N1ST_LANE_CD LANE1, N1ST_SKD_DIR_CD DIR1, N1ST_LANE_FDR_FLG FDR_FLG1
   ,   (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N1ST_LANE_CD) SVC_TP1
   ,   N2ND_POL_CD POL2, N2ND_POD_CD POD2, N2ND_LANE_CD LANE2, N2ND_SKD_DIR_CD DIR2, N2ND_LANE_FDR_FLG FDR_FLG2
   ,   (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N2ND_LANE_CD) SVC_TP2
   ,   N3RD_POL_CD POL3, N3RD_POD_CD POD3, N3RD_LANE_CD LANE3, N3RD_SKD_DIR_CD DIR3, N3RD_LANE_FDR_FLG FDR_FLG3
   ,   (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N3RD_LANE_CD) SVC_TP3
   ,   N4TH_POL_CD POL4, N4TH_POD_CD POD4, N4TH_LANE_CD LANE4, N4TH_SKD_DIR_CD DIR4, N4TH_LANE_FDR_FLG FDR_FLG4
   ,   (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N4TH_LANE_CD) SVC_TP4
   ,   OCN_ROUT_PRIO_CD PRIO, OCN_ROUT_USR_RMK RMK
   ,   (N1ST_TZTM_HRS + N2ND_TZTM_HRS + N3RD_TZTM_HRS + N4TH_TZTM_HRS) TZTM_HRS
   ,   ltrim(to_char(trunc((N1ST_TZTM_HRS + N2ND_TZTM_HRS + N3RD_TZTM_HRS + N4TH_TZTM_HRS)/24),'00'))||ltrim(to_char(mod((N1ST_TZTM_HRS + N2ND_TZTM_HRS + N3RD_TZTM_HRS + N4TH_TZTM_HRS),24  ),'00')) fmt_tztm_hrs 
   ,   N1ST_TZTM_HRS, N2ND_TZTM_HRS, N3RD_TZTM_HRS, N4TH_TZTM_HRS
   ,   (N1ST_STAY_TM_HRS + N2ND_STAY_TM_HRS + N3RD_STAY_TM_HRS) ST_HRS
   ,   ltrim(to_char(trunc((N1ST_STAY_TM_HRS + N2ND_STAY_TM_HRS + N3RD_STAY_TM_HRS)/24),'00'))||ltrim(to_char(mod((N1ST_STAY_TM_HRS + N2ND_STAY_TM_HRS + N3RD_STAY_TM_HRS),24  ),'00')) fmt_st_hrs 
   ,   N1ST_STAY_TM_HRS/24 N1ST_STAY_TM_HRS, N2ND_STAY_TM_HRS/24 N2ND_STAY_TM_HRS, N3RD_STAY_TM_HRS/24 N3RD_STAY_TM_HRS
   ,   TS_IND_CD, NVL(FDR_USD_FLG, 'N') F_USED
   ,   LNK_KNT LNK_CNT, UPD_IND_CD, TO_CHAR(A.CRE_DT, 'YYYY-MM-DD') C_DATE, A.CRE_USR_ID C_USER
   ,   TO_CHAR(A.OCN_ROUT_UPD_DT, 'YYYY-MM-DD') U_DATE, A.UPD_USR_ID U_USER
   ,   DECODE(UPD_IND_CD, 'G', 1, 'S', 2, 'T', 3, 'A', 4, 'V', 5, 'N', 6, 'D', 7) ord 
   ,   OCN_ROUT_TMP_FLG ,TO_CHAR(OCN_ROUT_TMP_EXP_DT, 'YYYY-MM-DD')OCN_ROUT_TMP_EXP_DT
   ,   OCN_ROUT_TMP_RMK s_route_note
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N1ST_LANE_CD, A.N1ST_POL_CD, A.N1ST_SKD_DIR_CD, A.N1ST_POD_CD, 'O' ) AS POL1_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N1ST_LANE_CD, A.N1ST_POD_CD, A.N1ST_SKD_DIR_CD, A.N1ST_POL_CD, 'D' ) AS POD1_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N2ND_LANE_CD, A.N2ND_POL_CD, A.N2ND_SKD_DIR_CD, A.N2ND_POD_CD, 'O' ) AS POL2_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N2ND_LANE_CD, A.N2ND_POD_CD, A.N2ND_SKD_DIR_CD, A.N2ND_POL_CD, 'D' ) AS POD2_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N3RD_LANE_CD, A.N3RD_POL_CD, A.N3RD_SKD_DIR_CD, A.N3RD_POD_CD, 'O' ) AS POL3_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N3RD_LANE_CD, A.N3RD_POD_CD, A.N3RD_SKD_DIR_CD, A.N3RD_POL_CD, 'D' ) AS POD3_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N4TH_LANE_CD, A.N4TH_POL_CD, A.N4TH_SKD_DIR_CD, A.N4TH_POD_CD, 'O' ) AS POL4_YD
   ,   PRI_SCQ_YD_MATCH_FNC ( A.N4TH_LANE_CD, A.N4TH_POD_CD, A.N4TH_SKD_DIR_CD, A.N4TH_POL_CD, 'D' ) AS POD4_YD
FROM   PRD_OCN_ROUT A
WHERE  ORG_LOC_CD   = @[pol_port_cd]                   
  AND  DEST_LOC_CD  = @[pod_port_cd]
  AND  ( UPD_IND_CD   IN ('C', 'U', 'S', 'T', 'A', 'V','G')                                          
		 OR 
		 UPD_IND_CD = 'N' --AND TS_IND_CD = 'D' , not used 일 경우 화면상 수정을 위해  ..
        ) 	
 order by ORD, U_DATE DESC			]]></sql>
			<params>
				<param name="pol_port_cd" type="12" value="" out="N"/>
				<param name="pod_port_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
