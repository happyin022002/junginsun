<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CommonDBDAOSearchListRSQL">
			<desc><![CDATA[2010.08.23 최윤성 [CHM-201005492-01] RDR 실적 Summary 기능 개발 - Operator List 쿼리 추가
2010.12.30 최윤성 [CHM-201008093-01] Office Level Table 생성
 - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체
2013.01.24 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
2013.06.25 진마리아 [선처리] CRM Customer Flag 정보 개편에 따른 작업
2014.01.03 진마리아 [SRM-201341166] Yield Group의 확대
2017.1.23 SM상선 전환에 따른 소스변경]]></desc>
			<sql><![CDATA[
#if (${methodname} == 'searchTradeComboList')

/* Trade List를  가져 온다 */
   SELECT B.TRD_CD,
          TRD_NM
     FROM (
             SELECT DISTINCT
                    B.TRD_CD
               FROM MDM_REV_LANE     A,
                    MDM_DTL_REV_LANE B,
                    MDM_VSL_SVC_LANE C
              WHERE A.RLANE_CD    = B.RLANE_CD
                AND A.VSL_TP_CD   = 'C'
#if (${isRepTrade} == 'true')
                /* Rep Trade 경우 추가 option 조건 */
                AND A.REP_TRD_CD  = B.TRD_CD
#end
                AND B.DELT_FLG   IN ('N', @[del])
                AND B.TRD_CD     <> 'COM'
                AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
                AND DECODE(C.VSL_SVC_TP_CD, 'I', C.CO_CD, '1') = DECODE(C.VSL_SVC_TP_CD, 'I', 'H', '1')
                AND C.VSL_SVC_TP_CD <> 'O'
         ) A,
         MDM_TRADE B
   WHERE A.TRD_CD = B.TRD_CD
ORDER BY B.TRD_CD

#elseif (${methodname} == 'searchSubTradeComboList')

/* Sub Trade List를  가져 온다 */
   SELECT A.TRD_CD    ,
          B.SUB_TRD_CD,
          NVL(B.SUB_TRD_NM, ( SELECT T.TRD_NM
                                FROM MDM_TRADE T
                               WHERE T.TRD_CD = A.TRD_CD)
          ) AS SUB_TRD_NM
     FROM (
             SELECT DISTINCT
                    B.TRD_CD  ,
                    SUB_TRD_CD
               FROM MDM_REV_LANE     A,
                    MDM_DTL_REV_LANE B,
                    MDM_VSL_SVC_LANE C
              WHERE A.RLANE_CD = B.RLANE_CD
                AND A.VSL_TP_CD  = 'C'
#if (${isRepTrade} == 'true')
                AND A.REP_TRD_CD = B.TRD_CD  /* REP TRADE 경우 추가 OPTION 조건 */
#end
                AND B.DELT_FLG   IN ('N', @[del])
                AND B.TRD_CD     <> 'COM'
                AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
                AND DECODE(C.VSL_SVC_TP_CD, 'I', C.CO_CD, '1') = DECODE(C.VSL_SVC_TP_CD, 'I', 'H', '1')
                AND C.VSL_SVC_TP_CD <> 'O'
          ) A,
          MDM_SUB_TRD B
    WHERE 1=1
#if (${isall} == 'true')
      AND A.SUB_TRD_CD = B.SUB_TRD_CD(+)
#else
      AND A.SUB_TRD_CD = B.SUB_TRD_CD
#end
 ORDER BY A.TRD_CD    ,
          B.SUB_TRD_CD

#elseif (${methodname} == 'searchRLaneComboList')

/* Lane List를  가져 온다 */
  SELECT DISTINCT
         B.TRD_CD    ,
         B.SUB_TRD_CD,
         A.RLANE_CD  ,
         A.RLANE_NM
    FROM MDM_REV_LANE     A,
         MDM_DTL_REV_LANE B,
         MDM_VSL_SVC_LANE C
#if(${isPus} == 'true')
         , (SELECT DISTINCT P.VSL_SLAN_CD, P.SKD_DIR_CD
              FROM VSK_PF_SKD S,
                   VSK_PF_SKD_DTL P,
                   VSK_VSL_SKD V
             WHERE S.SLAN_STND_FLG = 'Y'
               AND S.VSL_SLAN_CD = P.VSL_SLAN_CD
               AND S.PF_SVC_TP_CD = P.PF_SVC_TP_CD
               AND P.PORT_CD = 'KRPUS'
               AND TURN_PORT_IND_CD <> 'F'
               AND V.VSL_SLAN_CD = S.VSL_SLAN_CD
               AND V.PF_SKD_TP_CD = S.PF_SVC_TP_CD
               AND V.SKD_STS_CD <> 'CLO') P
#end
   WHERE A.RLANE_CD     = B.RLANE_CD
     AND A.VSL_TP_CD    = 'C'
#if (${ipc} != 'true')
     AND A.REP_TRD_CD   = B.TRD_CD
#end
     AND B.DELT_FLG   IN ('N', @[del])
     AND B.TRD_CD     <> 'COM'
     AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
     AND DECODE(C.VSL_SVC_TP_CD, 'I', C.CO_CD, '1') = DECODE(C.VSL_SVC_TP_CD, 'I', 'H', '1')
     AND C.VSL_SVC_TP_CD <> 'O'
#if (${locTrdCd} != '')
	 AND B.TRD_CD     IN (@[locTrdCd]) 
#end
#if (${locSubTrdCd} != '')
	 AND B.SUB_TRD_CD  IN (@[locSubTrdCd]) 
#end
#if(${isPus} == 'true')
     AND A.VSL_SLAN_CD = P.VSL_SLAN_CD
     AND B.VSL_SLAN_DIR_CD = P.SKD_DIR_CD
     AND B.FM_CONTI_CD = 'A'
     AND B.TO_CONTI_CD IN ('E', 'M')
     AND EXISTS (SELECT 'A' 
                   FROM MAS_MON_VVD M
                  WHERE SUBSTR(M.SLS_YRMON, 1, 4) = TO_CHAR(SYSDATE, 'YYYY')
                    AND CEIL(TO_NUMBER(SUBSTR(M.SLS_YRMON, 5, 2)) / 3)||'Q' = CEIL(TO_NUMBER(TO_CHAR(SYSDATE, 'MM')) / 3)||'Q'
                    AND M.DELT_FLG = 'N'
                    AND M.TRD_CD = B.TRD_CD
                    AND M.RLANE_CD = B.RLANE_CD)
#end
ORDER BY B.TRD_CD    ,
         B.SUB_TRD_CD,
         A.RLANE_CD

#elseif (${methodname} == 'searchVesselSizeList')

/* VesselSize List를  가져 온다 */
  SELECT DISTINCT
#if (${lane} != '')
         C.CNTR_VSL_CLSS_CAPA AS CODE,
         TO_CHAR(C.CNTR_VSL_CLSS_CAPA, 'FM9,990') AS TEXT
#else
         C.CNTR_VSL_CLSS_CAPA AS CODE,
         V.RLANE_CD||'|'||C.CNTR_VSL_CLSS_CAPA AS TEXT
#end
    FROM MDM_VSL_CNTR C,
         MAS_MON_VVD  V
   WHERE V.VSL_CD   = C.VSL_CD
#if (${lane} != '')
     AND V.RLANE_CD = @[lane]
#end
ORDER BY C.CNTR_VSL_CLSS_CAPA

#elseif (${methodname} == 'searchCustAbbrNmList')

/* Customer List를  가져 온다 */
SELECT A.CUST_CNT_CD || TRIM(TO_CHAR(A.CUST_SEQ, '000009')) AS CODE,
       DECODE(A.CUST_ABBR_NM, NULL, A.CUST_LGL_ENG_NM, A.CUST_ABBR_NM) || '|' || B.CUST_GRP_NM AS TEXT
  FROM MDM_CUSTOMER      A,
       MDM_CUST_PERF_GRP B
 WHERE A.CUST_GRP_ID = B.CUST_GRP_ID(+)
   AND A.CUST_CNT_CD = @[custCntCd]
   AND A.CUST_SEQ    = @[custSeq]
   AND A.DELT_FLG    = 'N'
   AND B.DELT_FLG(+) = 'N'

#elseif (${methodname} == 'searchOfficeList')

/* Salse Office List를  가져 온다 */
SELECT OFC_CD     AS CODE,
       OFC_ENG_NM AS TEXT
  FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY OFC_CD ASC) AS NO,
                 OFC_CD    ,
                 OFC_ENG_NM,
                 OFC_KND_CD,
                 LOC_CD
            FROM MDM_ORGANIZATION
           WHERE OFC_CD LIKE @[ofcCd]
             AND NVL(DELT_FLG, 'N') <> 'Y'
       ) A
 WHERE NO BETWEEN 1 AND 50

#elseif (${methodname} == 'searchVVDList')

/* VVD List를  가져 온다 */
SELECT VVD     AS CODE,
       SLAN_CD AS TEXT
  FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY SLAN_CD, VSL_CD||SKD_VOY_NO||SKD_DIR_CD, TO_NUMBER(CLPT_SEQ)) AS NO,
                 SLAN_CD,
                 VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS VVD,
                 VPS_PORT_CD,
                 VPS_ETA_DT ,
                 VPS_ETD_DT
            FROM VSK_VSL_PORT_SKD
           WHERE 1=1
             AND VSL_CD || SKD_VOY_NO || SKD_DIR_CD = @[vvdCd]
             AND 'SML' LIKE '%SML%'
             AND NVL(SKD_CNG_STS_CD, ' ') <> 'S'
             AND CLPT_IND_SEQ = '1'
       ) A
 WHERE NO BETWEEN 1 AND 50

#elseif (${methodname} == 'searchCommonCodeList')

/* Common Code List를  가져 온다 */
  SELECT INTG_CD_VAL_CTNT    AS CODE,
         INTG_CD_VAL_DP_DESC AS TEXT
    FROM COM_INTG_CD_DTL
   WHERE INTG_CD_ID = @[code]
ORDER BY INTG_CD_VAL_DP_SEQ

#elseif (${methodname} == 'searchRHQComboList')

/* RHQ List를  가져 온다 */
  SELECT T.OFC_CD    ,
         T.OFC_ENG_NM
    FROM SPC_OFC_LVL T,
         MAS_WK_PRD  W
   WHERE T.OFC_LVL = 2
     AND W.COST_YR || W.COST_WK BETWEEN T.OFC_APLY_FM_YRWK AND T.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
     AND T.DELT_FLG IN ('N', @[del])
ORDER BY 1

#elseif (${methodname} == 'searchAQComboList')

/* AQ List를  가져 온다 */
  SELECT V.OFC_CD    ,
         V.OFC_ENG_NM
#if (${module} == 'saq')
    FROM SAQ_ORGANIZATION_V V
   WHERE V.LVL = 3
#else
    FROM SPC_OFC_LVL V,
         MAS_WK_PRD  W
   WHERE V.OFC_LVL = 3
     AND W.COST_YR || W.COST_WK BETWEEN V.OFC_APLY_FM_YRWK AND V.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
#end
#if (${rhq} != '')
     AND V.N2ND_PRNT_OFC_CD = @[rhq]
#end
#if (${module} != 'saq')
     AND V.DELT_FLG IN ('N', @[del])
#end
ORDER BY 1

#elseif (${methodname} == 'searchRgnOfcComboList')

/* Rgn Office List를  가져 온다 */
  SELECT V.OFC_CD    ,
         V.OFC_ENG_NM
#if (${module} == 'saq')
    FROM SAQ_ORGANIZATION_V V
   WHERE V.LVL = 4
#else
    FROM SPC_OFC_LVL V,
         MAS_WK_PRD  W
   WHERE V.OFC_LVL = 4
     AND W.COST_YR || W.COST_WK BETWEEN V.OFC_APLY_FM_YRWK AND V.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
#end
#if (${rhq} != '')
     AND (V.N2ND_PRNT_OFC_CD = @[rhq] OR V.N3RD_PRNT_OFC_CD = @[rhq])
#end
#if (${module} != 'saq')
     AND V.DELT_FLG IN ('N', @[del])
#end
ORDER BY 1

#elseif (${methodname} == 'searchKAMerComboList')

/* GAMer List를  가져 온다 */
  SELECT DISTINCT
         V.KEY_ACCT_MGR_USR_ID AS CD,
         V.KEY_ACCT_MGR_USR_NM AS NM
    FROM MDM_CUSTOMER V
   WHERE V.KEY_ACCT_FLG = 'Y'
     AND V.DELT_FLG    IN ('N', @[del])
ORDER BY 1

#elseif (${methodname} == 'searchTargetGroupComboList')

/* Targer Group List를  가져 온다 */
  SELECT A.SAQ_TGT_GRP_CD   AS GRP_CD  ,
         A.SAQ_TGT_GRP_DESC AS GRP_DESC
    FROM SAQ_TGT_GRP A
   WHERE A.DELT_FLG IN ('N', @[del])
#if (${ofc} != '')
     AND A.OFC_CD = @[ofc]
#end
ORDER BY A.SAQ_TGT_GRP_CD  ,
         A.SAQ_TGT_GRP_DESC

#elseif (${methodname} == 'searchChildOfficeList')

/* Child Office List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd] AS OFC_CD, --이미 OFFICE CONVERSION이 이루어진 OFFICE
           SPC_SCR_OFC_CONV_FNC(@[loginUsrOfcCd], '') AS USR_OFC_CD, --로그인 USER의 ORIGINAL OFFICE
           TO_NUMBER(@[lvl])         AS LVL,
           TO_NUMBER(NVL(@[inc], 0)) AS INC
      FROM DUAL
)
, PARAMS_CNV AS (
    SELECT NVL(P.OFC_CD, P.USR_OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC
      FROM PARAMS P
)
, PARAMS_OFC AS (
    SELECT DECODE(SIGN(P.LVL - O.OFC_LVL), -1, DECODE(P.LVL, 1, O.N1ST_PRNT_OFC_CD,
                                                             2, O.N2ND_PRNT_OFC_CD,
                                                             3, O.N3RD_PRNT_OFC_CD,
                                                             4, O.N4TH_PRNT_OFC_CD,
                                                             5, O.N5TH_PRNT_OFC_CD,
                                                             6, O.N6TH_PRNT_OFC_CD,
                                                             7, O.N7TH_PRNT_OFC_CD), P.OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC       ,
           O.OFC_LVL   ,
           LEAST(P.LVL, O.OFC_LVL) AS F_LVL
      FROM SPC_OFC_LVL O,
           PARAMS_CNV  P,
           MAS_WK_PRD  W
     WHERE O.OFC_CD = P.OFC_CD
       AND O.OFC_LVL IS NOT NULL
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT O.OFC_CD AS  CODE,
         O.OFC_ENG_NM ||'~'|| ( SELECT DECODE(O.OFC_CD, DECODE(P.LVL, 2, OI.N2ND_PRNT_OFC_CD,
                                                                      3, OI.N3RD_PRNT_OFC_CD,
                                                                      4, OI.N4TH_PRNT_OFC_CD,
                                                                      5, OI.N5TH_PRNT_OFC_CD,
                                                                      6, OI.N6TH_PRNT_OFC_CD), 1, P.USR_OFC_CD, 1, 0)
                                  FROM SPC_OFC_LVL OI,
                                       MAS_WK_PRD  W
                                 WHERE OI.OFC_CD = P.USR_OFC_CD
                                   AND W.COST_YR || W.COST_WK BETWEEN OI.OFC_APLY_FM_YRWK AND OI.OFC_APLY_TO_YRWK
                                   AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
                              ) AS TEXT
    FROM SPC_OFC_LVL O,
         PARAMS_OFC  P,
         MAS_WK_PRD  W
   WHERE (
              (     DECODE(P.F_LVL, 1, O.N1ST_PRNT_OFC_CD,
                                    2, O.N2ND_PRNT_OFC_CD,
                                    3, O.N3RD_PRNT_OFC_CD,
                                    4, O.N4TH_PRNT_OFC_CD,
                                    5, O.N5TH_PRNT_OFC_CD,
                                    6, O.N6TH_PRNT_OFC_CD,
                                    7, O.N7TH_PRNT_OFC_CD) = P.OFC_CD
                AND O.OFC_LVL = P.LVL
              )
           OR ( O.OFC_CD = P.OFC_CD AND P.INC = '1')
         )
     AND O.DELT_FLG = 'N'
     AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
ORDER BY DECODE(O.OFC_CD, P.OFC_CD, 0, 1),
         O.OFC_CD

#elseif (${methodname} == 'searchChildTeamOfficeList')

/* Child Team Office List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd] AS OFC_CD, -- 이미 OFFICE CONVERSION이 이루어진 OFFICE
           SPC_SCR_OFC_CONV_FNC(@[loginUsrOfcCd], '') AS USR_OFC_CD, -- 로그인 USER의 ORIGINAL OFFICE
           TO_NUMBER(@[lvl])         AS LVL,
           TO_NUMBER(NVL(@[inc], 0)) AS INC
      FROM DUAL
)
, PARAMS_CNV AS (
    SELECT NVL(P.OFC_CD, P.USR_OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC
      FROM PARAMS P
)
, PARAMS_OFC AS (
    SELECT DECODE(SIGN(P.LVL - O.OFC_LVL), -1, DECODE(P.LVL, 1, O.N1ST_PRNT_OFC_CD,
                                                             2, O.N2ND_PRNT_OFC_CD,
                                                             3, O.N3RD_PRNT_OFC_CD,
                                                             4, O.N4TH_PRNT_OFC_CD,
                                                             5, O.N5TH_PRNT_OFC_CD,
                                                             6, O.N6TH_PRNT_OFC_CD,
                                                             7, O.N7TH_PRNT_OFC_CD), P.OFC_CD) AS OFC_CD,
           P.USR_OFC_CD,
           P.LVL       ,
           P.INC       ,
           O.OFC_LVL   ,
           LEAST(P.LVL, O.OFC_LVL) AS F_LVL
      FROM SPC_OFC_LVL O,
           PARAMS_CNV  P,
           MAS_WK_PRD  W
     WHERE O.OFC_CD = P.OFC_CD
       AND O.OFC_LVL IS NOT NULL
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT O.OFC_CD AS CODE,
         (O.OFC_ENG_NM ||'~'|| ( SELECT DECODE(O.OFC_CD, DECODE(P.LVL, 2, OI.N2ND_PRNT_OFC_CD,
                                                                       3, OI.N3RD_PRNT_OFC_CD,
                                                                       4, OI.N4TH_PRNT_OFC_CD,
                                                                       5, OI.N5TH_PRNT_OFC_CD,
                                                                       6, OI.N6TH_PRNT_OFC_CD), 1, P.USR_OFC_CD, 1, 0)
                                   FROM SPC_OFC_LVL OI,
                                        MAS_WK_PRD  W
                                  WHERE OI.OFC_CD = P.USR_OFC_CD
                                    AND W.COST_YR || W.COST_WK BETWEEN OI.OFC_APLY_FM_YRWK AND OI.OFC_APLY_TO_YRWK
                                    AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
                               )
         ) AS TEXT
    FROM SPC_OFC_LVL O,
         PARAMS_OFC  P,
         MAS_WK_PRD  W
   WHERE (
              (     DECODE(P.F_LVL, 1, O.N1ST_PRNT_OFC_CD,
                                    2, O.N2ND_PRNT_OFC_CD,
                                    3, O.N3RD_PRNT_OFC_CD,
                                    4, O.N4TH_PRNT_OFC_CD,
                                    5, O.N5TH_PRNT_OFC_CD,
                                    6, O.N6TH_PRNT_OFC_CD,
                                    7, O.N7TH_PRNT_OFC_CD) = P.OFC_CD
                AND O.OFC_LVL = P.LVL )
           OR (     O.OFC_CD  = P.OFC_CD
                AND P.INC     = '1'   )
         )
     AND O.DELT_FLG = 'N'
     AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
     AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
#if (${ofcCd} != 'SELSC')
ORDER BY DECODE(O.OFC_CD, P.OFC_CD, 0, 1),
         O.OFC_CD
#end
#if (${ofcCd} == 'SELSC')
     AND O.OFC_CD <> 'SELSC'
  UNION ALL
  SELECT SLS_REP_OFC_TEAM_CD AS CODE,
         O.OFC_ENG_NM
    FROM SPC_SLS_REP_TEAM_IF SI,
         MDM_ORGANIZATION    O
   WHERE SLS_REP_OFC_TEAM_CD IS NOT NULL
     AND SLS_REP_OFC_TEAM_CD = O.OFC_CD
GROUP BY SLS_REP_OFC_TEAM_CD,
         O.OFC_ENG_NM
#end

#elseif (${methodname} == 'searchSalesRepList')

/* Sales Rep List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd]         AS OFC_CD,
           @[lvl]           AS LVL   ,
           @[loginUsrOfcCd] AS USR_ID
    FROM DUAL
)
, OFFICES AS (
    SELECT O.OFC_CD,
           O.OFC_ENG_NM AS OFC_NM,
           O.OFC_LVL    AS LVL   ,
           P.USR_ID
      FROM SPC_OFC_LVL O,
           PARAMS      P,
           MAS_WK_PRD  W
     WHERE (
                (P.LVL = 1 AND O.N1ST_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 2 AND O.N2ND_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 3 AND O.N3RD_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 4 AND O.N4TH_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 5 AND (O.N5TH_PRNT_OFC_CD = P.OFC_CD OR (O.N4TH_PRNT_OFC_CD = P.OFC_CD AND O.OFC_LVL = 4)))
             OR (P.LVL = 6 AND O.N6TH_PRNT_OFC_CD = P.OFC_CD)
           )
       AND O.DELT_FLG = 'N'
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT SR.SREP_CD AS CODE,
         SR.SREP_NM ||'~'|| O.OFC_CD ||'~'|| O.OFC_NM ||'~'|| DECODE(UPPER(O.USR_ID), UPPER(SR.EMPE_CD), 1, 0) AS TEXT
    FROM MDM_SLS_REP SR,
         OFFICES     O
   WHERE SR.OFC_CD      = O.OFC_CD
     AND SR.SREP_STS_CD = 'N'
ORDER BY O.LVL     ,
         O.OFC_CD  ,
         SR.SREP_CD

#elseif (${methodname} == 'searchTeamSalesRepList')

/* Team Sales Rep List를  가져 온다 */
WITH PARAMS AS (
    SELECT @[ofcCd]         AS OFC_CD,
           @[lvl]           AS LVL   ,
           @[loginUsrOfcCd] AS USR_ID
      FROM DUAL
)
, OFFICES AS (
    SELECT O.OFC_CD,
           O.OFC_ENG_NM AS OFC_NM,
           O.OFC_LVL    AS LVL   ,
           P.USR_ID
      FROM SPC_OFC_LVL O,
           PARAMS      P,
           MAS_WK_PRD  W
     WHERE (
                (P.LVL = 1 AND O.N1ST_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 2 AND O.N2ND_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 3 AND O.N3RD_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 4 AND O.N4TH_PRNT_OFC_CD = P.OFC_CD)
             OR (P.LVL = 5 AND (O.N5TH_PRNT_OFC_CD = P.OFC_CD OR (O.N4TH_PRNT_OFC_CD = P.OFC_CD AND O.OFC_LVL = 4)))
             OR (P.LVL = 6 AND O.N6TH_PRNT_OFC_CD = P.OFC_CD)
           )
       AND O.DELT_FLG = 'N'
       AND W.COST_YR || W.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
       AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT
)
  SELECT SR.SREP_CD AS CODE,
         SR.SREP_NM || '~' || O.OFC_CD || '~' || O.OFC_NM || '~' || DECODE(UPPER(O.USR_ID), UPPER(SR.EMPE_CD), 1, 0) AS TEXT
    FROM MDM_SLS_REP SR,
         OFFICES     O
   WHERE SR.OFC_CD      = O.OFC_CD
     AND SR.SREP_STS_CD = 'N'
#if (${ofcCd} == 'PUSBS')
ORDER BY O.LVL   ,
         O.OFC_CD,
         SR.SREP_CD
#elseif (${ofcCd} == 'KWJBS')
ORDER BY O.LVL   ,
         O.OFC_CD,
         SR.SREP_CD
#else
  UNION ALL
  SELECT SI.SREP_USR_ID AS CODE,
         SR.SREP_NM || '~' || O.OFC_CD || '~' || O.OFC_ENG_NM || '~' || '0' AS TEXT
    FROM SPC_SLS_REP_TEAM_IF SI,
         MDM_ORGANIZATION    O ,
         MDM_SLS_REP         SR,
         PARAMS              P
   WHERE SLS_REP_OFC_TEAM_CD IS NOT NULL
     AND SI.SLS_REP_OFC_TEAM_CD = P.OFC_CD
     AND SI.SLS_REP_OFC_TEAM_CD = O.OFC_CD
     AND SI.SREP_USR_ID         = SR.SREP_CD
#end

#elseif (${methodname} == 'searchPortList')

/* Port List를  가져 온다 */
SELECT A.LOC_CD CODE,
       A.LOC_NM TEXT
  FROM MDM_LOCATION A
 WHERE A.LOC_CD LIKE @[portCd]
   AND NVL(A.PORT_INLND_CD, 'N') = 'Y'

#elseif (${methodname} == 'searchYardList')

/* Yard List를  가져 온다 */
SELECT YD_CD AS CODE,
       YD_NM AS TEXT
  FROM MDM_YARD
 WHERE 1=1
#if (${ofcCd} != '')
   AND OFC_CD = @[ofcCd]
#end
   AND YD_CD LIKE UPPER(@[yardCd])||'%'
   AND NVL(DELT_FLG, 'N') <> 'Y'

#elseif (${methodname} == 'searchOperatorList')

/* Operator List를  가져 온다 */
  SELECT DISTINCT
         OPR_CD AS CODE,
         OPR_CD AS TEXT
    FROM RDR_SUMMARY
ORDER BY OPR_CD

#elseif (${methodname} == 'searchWeekComboList')

/* Week List를  가져 온다 */
  SELECT COST_WK AS CODE,
         COST_WK AS TEXT
    FROM MAS_WK_PRD
   WHERE COST_YR = @[year]
ORDER BY COST_WK

#elseif (${methodname} == 'searchCurrWeekList')

/* 현재 Week 를  가져 온다 */
SELECT COST_WK AS CODE,
       COST_WK AS TEXT
  FROM MAS_WK_PRD
 WHERE @[date] BETWEEN SLS_FM_DT AND SLS_TO_DT

#elseif (${methodname} == 'searchSeasonList')

/* Season 를  가져 온다 */
  SELECT DISTINCT
         COST_YRWK AS CODE,
--         COST_YRWK AS TEXT
         CASE WHEN PERF_ST_YRWK IS NULL THEN NULL
              ELSE PERF_ST_YRWK||' ~ '||PERF_END_YRWK
          END AS TEXT
    FROM SPC_MDL_VER_MST
   WHERE COST_YRWK <> '200001'
     AND TRD_CD = @[trade]
ORDER BY COST_YRWK

#elseif (${methodname} == 'searchSeasonVersionList')

/* Season Version 를  가져 온다 */
  SELECT VER_SEQ AS CODE,
--         DECODE(CFM_FLG, 'Y', 'Confirmed', 'Not Confirmed') AS TEXT
         CASE WHEN CFM_FLG = 'Y' THEN 'Confirmed|'||VER_ST_YRWK||' ~ '||VER_END_YRWK || '|'|| PRI_UTILS_PKG.JOIN_ROWS_VAR_FUNC( CURSOR( SELECT SUBSTR(EXPT_YRWK,3,6) FROM SPC_MDL_EXPT_WK W WHERE W.TRD_CD = M.TRD_CD AND W.COST_YRWK=M.COST_YRWK AND W.VER_SEQ=M.VER_SEQ ),',' ) ||'|'|| TO_CHAR(UPD_DT,'YY-MM-DD HH24:MI')
              ELSE 'Not Confirmed|||'
          END AS TEXT
    FROM SPC_MDL_VER_MST M
   WHERE TRD_CD    = @[trade]
     AND COST_YRWK = @[season]
ORDER BY VER_SEQ

#elseif (${methodname} == 'searchCtrtOfficeList')

/* CONTRACT OFFICE LIST 조회 */
    SELECT DISTINCT
         M.OFC_CD      AS CODE,
         M.OFC_ENG_NM  AS TEXT
    FROM SPC_OFC_LVL M
   WHERE DELT_FLG    = 'N'
     AND @[year]||@[week] BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK
     AND OFC_LVL     = @[lvl]
#if(${ofcCd} != '')     
    CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD
    START WITH OFC_CD = @[ofcCd]
#end
   UNION
  SELECT DISTINCT 
         O.OFC_CD     AS CODE,
         O.OFC_ENG_NM AS TEXT
    FROM MDM_ORGANIZATION  O,
         MDM_CUSTOMER      C,
         SPC_MDL_CUST_CTRL S
   WHERE O.OFC_CD      = C.OFC_CD
     AND C.CUST_CNT_CD = S.CUST_CNT_CD
     AND C.CUST_SEQ    = S.CUST_SEQ
     AND C.DELT_FLG    = 'N'
     AND O.DELT_FLG    = 'N'
     AND (S.COST_YRWK, S.VER_SEQ) IN (SELECT /*+ INDEX_DESC (V XPKSPC_MDL_VER_MST) */
                                            DISTINCT V.COST_YRWK, V.VER_SEQ
                                       FROM SPC_MDL_VER_MST V,
                                            (SELECT /*+INDEX(P XPKMAS_WK_PRD) */
                                                    COST_YR||COST_WK AS COST_WK
                                               FROM MAS_WK_PRD
                                              WHERE COST_YR  = @[year]
                                                AND COST_WK >= @[week]
                                                AND ROWNUM  <= @[duration] ) W
                                      WHERE W.COST_WK BETWEEN V.VER_ST_YRWK AND V.VER_END_YRWK
                                        AND TRD_CD  = @[trade]
                                        AND CFM_FLG = 'Y' )
#if(${ofcCd} != '')
     AND O.OFC_CD     = @[ofcCd]
#end
  ORDER BY CODE

#elseif (${methodname} == 'searchCtrtSalesRepList')

/* MODEL 에서 지정한 CUSTOMER LIST 로 해당 S.REP 가져오기 */
  SELECT DISTINCT
         R.SREP_CD AS CODE,
         S.SREP_NM AS TEXT
    FROM BKG_CUST_SLS_REP R,
         MDM_SLS_REP      S
   WHERE R.SREP_CD               = S.SREP_CD
     AND NVL(SREP_STS_CD, 'N')   = 'N'
     AND R.DELT_FLG              = 'N'
     AND S.OFC_CD                = @[ofcCd]
     AND (CUST_CNT_CD, CUST_SEQ) IN (SELECT CUST_CNT_CD, CUST_SEQ
                                       FROM SPC_MDL_CUST_CTRL C
                                      WHERE DELT_FLG = 'N'
                                        AND (C.COST_YRWK, C.VER_SEQ) IN (SELECT /*+ INDEX_DESC (V XPKSPC_MDL_VER_MST) */
                                                                                DISTINCT V.COST_YRWK, V.VER_SEQ
                                                                           FROM SPC_MDL_VER_MST V,
                                                                                (SELECT /*+INDEX(P XPKMAS_WK_PRD) */
                                                                                        COST_YR||COST_WK AS COST_WK
                                                                                   FROM MAS_WK_PRD
                                                                                  WHERE COST_YR  = @[year]
                                                                                    AND COST_WK >= @[week]
                                                                                    AND ROWNUM  <= @[duration] ) W
                                                                          WHERE W.COST_WK BETWEEN V.VER_ST_YRWK AND V.VER_END_YRWK
                                                                            AND TRD_CD  = @[trade]
                                                                            AND CFM_FLG = 'Y' )
                                    )
   UNION ALL 
  -- KAMer 찾기위해 Office Level이 4Level 이상인 Office 소속 S.REP을 찾는다.
  SELECT DISTINCT
         R.SREP_CD AS CODE,
         S.SREP_NM AS TEXT
    FROM BKG_CUST_SLS_REP R,
         MDM_SLS_REP      S
   WHERE R.SREP_CD               = S.SREP_CD
     AND NVL(SREP_STS_CD, 'N')   = 'N'
     AND R.DELT_FLG              = 'N'
     AND S.OFC_CD                IN (SELECT OFC_CD
                                       FROM SPC_OFC_LVL
                                      WHERE TO_CHAR(SYSDATE, 'YYYYWW') BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK
                                        AND (OFC_LVL < 4 OR OFC_CD = 'NYCRAS')
                                        AND DELT_FLG = 'N')
     AND (CUST_CNT_CD, CUST_SEQ) IN (SELECT C.CUST_CNT_CD, C.CUST_SEQ
                                       FROM SPC_MDL_CUST_CTRL C,
                                            MDM_CUSTOMER      MC
                                      WHERE C.DELT_FLG = 'N'
                                        AND C.CUST_CNT_CD = MC.CUST_CNT_CD
                                        AND C.CUST_SEQ    = MC.CUST_SEQ
                                        AND MC.DELT_FLG   = 'N'
                                        AND MC.OFC_CD     = @[ofcCd]
                                        AND (C.COST_YRWK, C.VER_SEQ) IN (SELECT /*+ INDEX_DESC (V XPKSPC_MDL_VER_MST) */
                                                                                DISTINCT V.COST_YRWK, V.VER_SEQ
                                                                           FROM SPC_MDL_VER_MST V,
                                                                                (SELECT /*+INDEX(P XPKMAS_WK_PRD) */
                                                                                        COST_YR||COST_WK AS COST_WK
                                                                                   FROM MAS_WK_PRD
                                                                                  WHERE COST_YR  = @[year]
                                                                                    AND COST_WK >= @[week]
                                                                                    AND ROWNUM  <= @[duration] ) W
                                                                          WHERE W.COST_WK BETWEEN V.VER_ST_YRWK AND V.VER_END_YRWK
                                                                            AND TRD_CD  = @[trade]
                                                                            AND CFM_FLG = 'Y' )
                                    )
ORDER BY TEXT

#elseif (${methodname} == 'searchAccountList')

/* Account List 를  가져 온다 */
  SELECT DISTINCT 
#if(${grp} == 'Y')
         C.CUST_GRP_ID AS CODE,
         G.CUST_GRP_NM AS TEXT
#else
         C.CUST_CNT_CD||TO_CHAR(C.CUST_SEQ, 'FM000000') AS CODE,
         M.CUST_LGL_ENG_NM AS TEXT
#end
    FROM SPC_MDL_CUST_CTRL C,
         MDM_CUSTOMER      M
#if(${grp} == 'Y')
        ,MDM_CUST_PERF_GRP G
#end
   WHERE C.DELT_FLG    = 'N'
     AND C.CUST_CNT_CD = M.CUST_CNT_CD
     AND C.CUST_SEQ    = M.CUST_SEQ
     AND M.DELT_FLG    = 'N'

#if(${grp} == 'Y')
     AND C.CUST_GRP_ID = G.CUST_GRP_ID
     AND G.DELT_FLG    = 'N'
#end
#if(${ofcCd} != '')
     AND M.OFC_CD      = @[ofcCd]
#end
#if (${season} != '' && ${version} != '') 
     AND C.COST_YRWK   = @[season]
     AND C.VER_SEQ     = @[version]

#if (${acctClss} == 'CC') 
     AND (NVL(M.NEW_KEY_ACCT_FLG,'N') = 'Y' OR NVL(M.GLO_ACCT_FLG,'N') = 'Y')
#elseif (${acctClss} == 'RC')
     AND NVL(M.RGN_ACCT_FLG,'N') = 'Y'
#elseif (${acctClss} == 'LC')
     AND 'Y' NOT IN (NVL(M.NEW_KEY_ACCT_FLG,'N'), NVL(M.GLO_ACCT_FLG,'N'), NVL(M.RGN_ACCT_FLG, 'N'))
#end

#elseif (${season} != '')
     AND C.COST_YRWK   = @[season]
#else
     AND (C.COST_YRWK, C.VER_SEQ) IN (SELECT /*+ INDEX_DESC (V XPKSPC_MDL_VER_MST) */
                                             V.COST_YRWK, V.VER_SEQ
                                        FROM SPC_MDL_VER_MST V,
                                             (SELECT /*+INDEX(P XPKMAS_WK_PRD) */
                                                     COST_YR||COST_WK AS COST_WK
                                                FROM MAS_WK_PRD
                                               WHERE COST_YR  = @[year]
                                                 AND COST_WK >= @[week]
                                                 AND ROWNUM  <= @[duration] ) W
                                       WHERE W.COST_WK BETWEEN V.VER_ST_YRWK AND V.VER_END_YRWK
                                         AND TRD_CD  = @[trade]
                                         AND CFM_FLG = 'Y')
#end
#if(${trade} != '')
      AND NVL(TRD_CD, @[trade]) = @[trade]
#end
#if(${srepCd} != '')
      AND (C.CUST_CNT_CD, C.CUST_SEQ) IN (SELECT B.CUST_CNT_CD, B.CUST_SEQ
                                            FROM BKG_CUST_SLS_REP B
                                           WHERE B.SREP_CD = @[srepCd]
                                             AND B.DELT_FLG = 'N')
--  UNION
--  SELECT DISTINCT  -- 20130424 추가
--         C.CUST_CNT_CD||TO_CHAR(C.CUST_SEQ, 'FM000000') AS CODE,
--         M.CUST_LGL_ENG_NM AS TEXT
--    FROM SPC_SLS_REP_CUST C,
--         MDM_CUSTOMER     M
--   WHERE C.DELT_FLG    = 'N'
--     AND C.CUST_CNT_CD = M.CUST_CNT_CD
--     AND C.CUST_SEQ    = M.CUST_SEQ
--     AND M.DELT_FLG    = 'N'
--     AND C.SREP_CD     = [srepCd]
#end

ORDER BY 2

#elseif (${methodname} == 'searchNSmpAccountList')
/* Non SMP Account List 를  가져 온다 */
WITH MAS_MON_VVD_LV AS(
      SELECT M.TRD_CD    ,
             M.SUB_TRD_CD,
             M.RLANE_CD  ,
             M.DIR_CD    ,
             M.IOC_CD    ,
             SUBSTR(M.SLS_YRMON, 1, 4) AS COST_YR,
             M.COST_WK   ,
             M.VSL_CD    ,
             M.SKD_VOY_NO,
             M.DIR_CD        AS SKD_DIR_CD,
             C.RHQ_CD        AS RHQ_CD    ,
             P.WK_DAY    
        FROM MAS_MON_VVD     M,
             (
                SELECT /*+ INDEX (P XPKMAS_WK_PRD) */
                       P.COST_YR||P.COST_WK AS COST_YRWK,
                       P.SLS_FM_DT ||'~'|| P.SLS_TO_DT AS WK_DAY,
                       ROWNUM               AS RNUM
                  FROM MAS_WK_PRD P
                 WHERE P.COST_YR||P.COST_WK >= @[year]||@[week]
                   AND ROWNUM               <= @[duration]
             ) P,
             (
                SELECT DISTINCT
                       SUBSTR(AA
                        ,INSTR(AA,',',1,LEVEL)+1
                         ,INSTR(AA,',',1,LEVEL+1) - INSTR(AA,',',1,LEVEL) -1
                       ) RHQ_CD
                  FROM (SELECT ','||@[rhq]||',' AA FROM DUAL)
                       CONNECT BY LEVEL <= LENGTH(AA) - LENGTH(REPLACE(AA,','))-1
             ) C
       WHERE SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK = P.COST_YRWK
         AND (M.DELT_FLG IS NULL OR M.DELT_FLG = 'N')
         AND M.TRD_CD = @[trade]
)

SELECT DISTINCT  
       F.CUST_CNT_CD||TO_CHAR(F.CUST_SEQ, 'FM000000') AS CODE,
       M.CUST_LGL_ENG_NM AS TEXT
  FROM MAS_MON_VVD_LV    V,
       SPC_DLY_FCAST_CUST F,
       MDM_CUSTOMER M
 WHERE 1=1
   AND F.TRD_CD     = V.TRD_CD
   AND F.SUB_TRD_CD = V.SUB_TRD_CD
   AND F.RLANE_CD   = V.RLANE_CD
   AND F.DIR_CD     = V.DIR_CD
   AND F.IOC_CD     = V.IOC_CD
   AND F.VSL_CD     = V.VSL_CD
   AND F.SKD_VOY_NO = V.SKD_VOY_NO
   AND F.SKD_DIR_CD = V.SKD_DIR_CD
   AND F.SLS_RHQ_CD = V.RHQ_CD
   AND F.CUST_CNT_CD <> 'XX'
   AND F.CUST_SEQ    <> '999999'
   AND F.CUST_CNT_CD = M.CUST_CNT_CD
   AND F.CUST_SEQ    = M.CUST_SEQ
   AND M.DELT_FLG    = 'N'
 ORDER BY 2

#elseif (${methodname} == 'searchTradeAccountList')

/* Trade Account List 를  가져 온다 */
  SELECT DISTINCT 
#if(${grp} == 'Y')
         C.CUST_GRP_ID AS CODE,
         G.CUST_GRP_NM AS TEXT
#else
         C.CUST_CNT_CD||TO_CHAR(C.CUST_SEQ, 'FM000000') AS CODE,
         M.CUST_LGL_ENG_NM AS TEXT
#end
    FROM SPC_MDL_CUST_CTRL C,
         MDM_CUSTOMER      M
#if(${grp} == 'Y')
        ,MDM_CUST_PERF_GRP G
#end
   WHERE C.DELT_FLG    = 'N'
     AND C.CUST_CNT_CD = M.CUST_CNT_CD
     AND C.CUST_SEQ    = M.CUST_SEQ
     AND M.DELT_FLG    = 'N'

#if(${grp} == 'Y')
     AND C.CUST_GRP_ID = G.CUST_GRP_ID
     AND G.DELT_FLG    = 'N'
#end
     AND (C.COST_YRWK, C.VER_SEQ) IN (SELECT /*+ INDEX_DESC (V XPKSPC_MDL_VER_MST) */
                                             DISTINCT 
                                             DECODE(Q.DIR_CD, '', V.COST_YRWK, '200001') AS COST_YRWK, 
                                             DECODE(Q.DIR_CD, '', V.VER_SEQ  ,        1) AS VER_SEQ
                                        FROM SPC_MDL_VER_MST V,
                                             (SELECT /*+INDEX(P XPKMAS_WK_PRD) */
                                                     COST_YR||COST_WK AS COST_WK
                                                FROM MAS_WK_PRD
                                               WHERE COST_YR  = @[year]
                                                 AND COST_WK >= @[week]
                                                 AND ROWNUM  <= @[duration] ) W,
                                             MAS_MON_VVD     MV,
                                             SPC_HD_HUL_MST  Q
                                       WHERE W.COST_WK BETWEEN V.VER_ST_YRWK AND V.VER_END_YRWK
                                         AND CFM_FLG = 'Y'
                                         AND SUBSTR(MV.SLS_YRMON, 1, 4)||MV.COST_WK = W.COST_WK
                                         AND MV.DELT_FLG   = 'N'
                                         AND MV.TRD_CD     = @[trade]
                                         AND Q.TRD_CD  (+) = MV.TRD_CD
                                         AND Q.RLANE_CD(+) = MV.RLANE_CD
                                         AND Q.DIR_CD  (+) = MV.DIR_CD)
      AND NVL(TRD_CD, @[trade]) = @[trade]
#if(${srepCd} != '')
  UNION
  SELECT DISTINCT  -- 20130424 추가
         C.CUST_CNT_CD||TO_CHAR(C.CUST_SEQ, 'FM000000') AS CODE,
         M.CUST_LGL_ENG_NM AS TEXT
    FROM SPC_SLS_REP_CUST C,
         MDM_CUSTOMER     M
   WHERE C.DELT_FLG    = 'N'
     AND C.CUST_CNT_CD = M.CUST_CNT_CD
     AND C.CUST_SEQ    = M.CUST_SEQ
     AND M.DELT_FLG    = 'N'
     AND C.SREP_CD     = @[srepCd]
#end

ORDER BY 2

#elseif (${methodname} == 'searchCheckOfficeCodeList')

/* Office Code 유무를 확인 */

	SELECT 'X' AS TEXT,
           'X' AS CODE
	  FROM DUAL
	 WHERE EXISTS ( SELECT '1'
	                  FROM MDM_ORGANIZATION
	                 WHERE OFC_CD = @[ofcCd] ) 


#elseif (${methodname} == 'searchCheckVVDList')

	/* VVD 확인 */
	SELECT MV.TRD_CD AS CODE,
           SUBSTR(MV.SLS_YRMON, 1, 4)||MV.COST_WK || '~' || DECODE(Q.DIR_CD, NULL, 'N', 'Y') AS TEXT
      FROM MAS_MON_VVD     MV,
           SPC_HD_HUL_MST  Q
     WHERE MV.DELT_FLG     = 'N'
       AND MV.VSL_cD       = @[vslCd]
       AND MV.SKD_VOY_NO   = @[skdVoyNo]
       AND MV.DIR_CD       = @[skdDirCd]
       AND MV.IOC_CD       = DECODE(@[iocCd], 'T', 'I', @[iocCd])
       AND Q.TRD_CD(+)     = MV.TRD_CD
       AND Q.RLANE_CD(+)   = MV.RLANE_CD
       AND Q.DIR_CD(+)     = MV.DIR_CD

#elseif (${methodname} == 'searchCheckAcctGroupOptList')

	/* 해당 항차별 Account Group Control Option 확인 */
	SELECT NVL(ACCT_GRP_CTRL_FLG, 'N') AS TEXT,
           NVL(ACCT_GRP_CTRL_FLG, 'N') AS CODE
      FROM SPC_ALOC_CTRL_OPT
     WHERE VSL_cD       = @[vslCd]
       AND SKD_VOY_NO   = @[skdVoyNo]
       AND DIR_CD       = @[skdDirCd]

#elseif (${methodname} == 'searchCustGrpList')

	/* 해당 Season의 customer grp list */
	SELECT CUST_CTRL_CD AS CODE,
           NVL(CUST_CTRL_DESC, ' ') AS TEXT
      FROM SPC_MDL_CUST_CTRL_GRP
     WHERE TRD_CD       = @[trdCd]
       AND COST_YRWK    = @[costYrwk]
       AND CUST_CTRL_CD <> 'C'

#elseif (${methodname} == 'searchSvcLaneComboList')

	/* 해당 Season의 customer grp list */
	SELECT DISTINCT VSL_SLAN_CD AS SLAN_CD,   
                VSL_SLAN_NM AS SLAN_NM
	FROM MDM_VSL_SVC_LANE
	WHERE VSL_TP_CD = 'C'
	AND DELT_FLG  = 'N'
	AND VSL_SVC_TP_CD <> 'O'
	ORDER BY VSL_SLAN_CD
#end			]]></sql>
			<params>
				<param name="del" type="12" value="" out="N"/>
				<param name="locTrdCd" type="12" value="" out="N"/>
				<param name="locSubTrdCd" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="custCntCd" type="12" value="" out="N"/>
				<param name="custSeq" type="12" value="" out="N"/>
				<param name="ofcCd" type="12" value="" out="N"/>
				<param name="vvdCd" type="12" value="" out="N"/>
				<param name="code" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="ofc" type="12" value="" out="N"/>
				<param name="loginUsrOfcCd" type="12" value="" out="N"/>
				<param name="lvl" type="12" value="" out="N"/>
				<param name="inc" type="12" value="" out="N"/>
				<param name="portCd" type="12" value="" out="N"/>
				<param name="yardCd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="date" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="season" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="version" type="12" value="" out="N"/>
				<param name="srepCd" type="12" value="" out="N"/>
				<param name="vslCd" type="12" value="" out="N"/>
				<param name="skdVoyNo" type="12" value="" out="N"/>
				<param name="skdDirCd" type="12" value="" out="N"/>
				<param name="iocCd" type="12" value="" out="N"/>
				<param name="trdCd" type="12" value="" out="N"/>
				<param name="costYrwk" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
