/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : CMSummaryDBDAORsltPrsAmendmentSummaryRevenueDetailVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.06.25
*@LastModifier : 
*@LastVersion : 1.0
* 2015.06.25 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmsummary.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CMSummaryDBDAORsltPrsAmendmentSummaryRevenueDetailVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 2015.06.26 CHM-201536492 Split05-주간 MAS Open에 따른 타모듈 프로그램 적용 요청
	  * </pre>
	  */
	public CMSummaryDBDAORsltPrsAmendmentSummaryRevenueDetailVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_prop_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("c_sls_fm_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("c_sls_to_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("r_to_yrwk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ctrt_eff_wk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_prop_apro_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_sub_trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ori_rout_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_dest_rout_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_smr_exp_yr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_sls_fm_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_prop_srep_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("r_sls_to_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_sls_to_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_smr_eff_wk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_smr_eff_yr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ctrt_eff_yr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_pfmc_unit",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("r_sls_fm_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ctrt_exp_wk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ctrt_exp_yr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_smr_exp_wk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("r_fm_yrwk",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmsummary.integration").append("\n"); 
		query.append("FileName : CMSummaryDBDAORsltPrsAmendmentSummaryRevenueDetailVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VW_CONTRACT_DT_LIST AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		COST_YR || SUBSTR(SLS_TO_DT, 5, 2) AS COST_YRMON, COST_WK" ).append("\n"); 
		query.append("	FROM MAS_WK_PRD" ).append("\n"); 
		query.append("	WHERE (COST_YR || COST_WK) >=(@[frm_ctrt_eff_yr]  || @[frm_ctrt_eff_wk]) AND (COST_YR || COST_WK) <=(@[frm_ctrt_exp_yr] ||  @[frm_ctrt_exp_wk])" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_SUMMARY_WEEK AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */ SLS_FM_YRWK, SLS_FM_DT, SLS_TO_YRWK, SLS_TO_DT, WK_TP" ).append("\n"); 
		query.append("		, (SELECT COUNT(*) FROM MAS_WK_PRD PRD WHERE (    PRD.COST_YR || PRD.COST_WK >= MN.SLS_FM_YRWK AND PRD.COST_YR || PRD.COST_WK <= MN.SLS_TO_YRWK )) + DECODE(WK_TP, 1, 1, 0) AS TOT_WK" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("		SELECT   MIN(COST_YR || COST_WK) AS SLS_FM_YRWK, MIN(SLS_FM_DT) AS SLS_FM_DT ,MAX(COST_YR || COST_WK) AS SLS_TO_YRWK, MAX(SLS_TO_DT) AS SLS_TO_DT, WK_TP" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT COST_YR, COST_WK, SLS_FM_DT, SLS_TO_DT" ).append("\n"); 
		query.append("				,CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= SLS_FM_DT" ).append("\n"); 
		query.append("				THEN 0" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > SLS_TO_DT" ).append("\n"); 
		query.append("				THEN -1" ).append("\n"); 
		query.append("				ELSE 1" ).append("\n"); 
		query.append("                               END AS WK_TP" ).append("\n"); 
		query.append("			FROM MAS_WK_PRD" ).append("\n"); 
		query.append("			WHERE ( COST_YR || COST_WK >=(@[frm_smr_eff_yr] ||  @[frm_smr_eff_wk]) AND COST_YR || COST_WK <=(@[frm_smr_exp_yr] || @[frm_smr_exp_wk]))" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY WK_TP " ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_RFA_KEY_LIST AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE LEADING(HDR SMRY @V0 SR_CST_DTL) USE_NL(HDR SMRY SR_CST_DTL) */" ).append("\n"); 
		query.append("		--HDR.RFA_NO, PKEY.PROP_NO, PKEY.AMDT_SEQ, SR_CST_DTL.PRS_YRMON, SR_CST_DTL.PRS_WK" ).append("\n"); 
		query.append("		HDR.RFA_NO, HDR.PROP_NO, HDR.AMDT_SEQ, SR_CST_DTL.PRS_YRMON, SR_CST_DTL.PRS_WK" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRC_CTRT_TP_CD, SR_CST_DTL.PRC_CTRT_NO, SR_CST_DTL.SVC_SCP_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.VSL_SLAN_DIR_CD, SR_CST_DTL.TRD_CD, SR_CST_DTL.SUB_TRD_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.RLANE_CD, SR_CST_DTL.PRC_CGO_TP_CD, SR_CST_DTL.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.ORG_LOC_DEF_CD, SR_CST_DTL.DEST_LOC_TP_CD, SR_CST_DTL.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.TEU_FRT_REV, SR_CST_DTL.PRS_RESPB_CM_UC_AMT, SR_CST_DTL.PRS_PFIT_CM_UC_AMT" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRS_RESPB_OPFIT_UC_AMT, SR_CST_DTL.PRS_CRNT_LOD_QTY" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRS_RESPB_CMPB_AMT, SR_CST_DTL.PRS_PFIT_CMPB_AMT" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRS_RESPB_OPB_AMT, SCG.CHG_CD, SCG.SCG_AMT" ).append("\n"); 
		query.append("	FROM --PRI_RP_HDR HDR, VW_RFA_PROP_KEY PKEY" ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("			SELECT /*+ ORDERED USE_HASH(DUR DUR) INDEX_FFS(DUR XAK1PRI_RP_DUR) CACHE(DUR) CACHE(HDR) */" ).append("\n"); 
		query.append("			       HDR.RFA_NO, DUR.PROP_NO, DUR.AMDT_SEQ, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT" ).append("\n"); 
		query.append("			       ,ROW_NUMBER() OVER (PARTITION BY HDR.RFA_NO, DUR.PROP_NO ORDER BY DUR.AMDT_SEQ DESC) RN " ).append("\n"); 
		query.append("			--FROM VW_CONTRACT_DT CDT, PRI_RP_HDR HDR, PRI_RP_DUR DUR" ).append("\n"); 
		query.append("			FROM PRI_RP_DUR DUR, PRI_RP_HDR HDR" ).append("\n"); 
		query.append("			WHERE HDR.RFA_NO IS NOT NULL" ).append("\n"); 
		query.append("				AND HDR.PROP_NO  = DUR.PROP_NO" ).append("\n"); 
		query.append("				AND DUR.CTRT_EFF_DT >= TO_DATE(@[c_sls_fm_dt],'YYYYMMDD') AND DUR.CTRT_EXP_DT < TO_DATE(@[c_sls_to_dt],'YYYYMMDD') + 1         " ).append("\n"); 
		query.append("		) HDR" ).append("\n"); 
		query.append("		, PRI_PRS_CTRT_SMRY SMRY" ).append("\n"); 
		query.append("		,PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL, PRI_PRS_CTRT_SMRY_SCG_DTL SCG" ).append("\n"); 
		query.append("		--WHERE HDR.PROP_NO = PKEY.PROP_NO" ).append("\n"); 
		query.append("	WHERE HDR.RN = 1" ).append("\n"); 
		query.append("		AND HDR.RFA_NO = SMRY.PRC_CTRT_NO" ).append("\n"); 
		query.append("		AND SMRY.PRC_CTRT_TP_CD = 'R'" ).append("\n"); 
		query.append("		--AND (SMRY.PRS_YRMON, SMRY.PRS_WK) IN(SELECT COST_YRMON, COST_WK FROM VW_CONTRACT_DT_LIST)" ).append("\n"); 
		query.append("		AND (SMRY.PRS_YRMON, SMRY.PRS_WK) IN (SELECT /*+ QB_NAME(V0) */ COST_YRMON, COST_WK FROM VW_CONTRACT_DT_LIST WHERE COST_YRMON IS NOT NULL AND COST_WK IS NOT NULL)" ).append("\n"); 
		query.append("		AND SMRY.PRS_YRMON = SR_CST_DTL.PRS_YRMON" ).append("\n"); 
		query.append("		AND SMRY.PRS_WK = SR_CST_DTL.PRS_WK" ).append("\n"); 
		query.append("		AND SMRY.PRC_CTRT_TP_CD = SR_CST_DTL.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("		AND SMRY.PRC_CTRT_NO = SR_CST_DTL.PRC_CTRT_NO" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRS_YRMON = SCG.PRS_YRMON" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRS_WK = SCG.PRS_WK" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRC_CTRT_TP_CD = SCG.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRC_CTRT_NO = SCG.PRC_CTRT_NO" ).append("\n"); 
		query.append("		AND SR_CST_DTL.SVC_SCP_CD = SCG.SVC_SCP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.VSL_SLAN_DIR_CD = SCG.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.TRD_CD = SCG.TRD_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.SUB_TRD_CD = SCG.SUB_TRD_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.RLANE_CD = SCG.RLANE_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRC_CGO_TP_CD = SCG.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.ORG_LOC_TP_CD = SCG.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.ORG_LOC_DEF_CD = SCG.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.DEST_LOC_TP_CD = SCG.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.DEST_LOC_DEF_CD = SCG.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		AND HDR.RFA_NO IS NOT NULL" ).append("\n"); 
		query.append("		AND SR_CST_DTL.TRD_CD = @[frm_trd_cd]" ).append("\n"); 
		query.append("		AND SR_CST_DTL.VSL_SLAN_DIR_CD = @[frm_dir_cd]" ).append("\n"); 
		query.append("		#if(${frm_sub_trd_cd} != '')" ).append("\n"); 
		query.append("			AND SR_CST_DTL.SUB_TRD_CD = @[frm_sub_trd_cd]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		#if(${frm_rlane_cd} != '')" ).append("\n"); 
		query.append("			AND SR_CST_DTL.RLANE_CD IN (" ).append("\n"); 
		query.append("			#foreach( ${key} in ${rlane_list}) " ).append("\n"); 
		query.append("				#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("					UNION ALL" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("				SELECT " ).append("\n"); 
		query.append("						 '$key' " ).append("\n"); 
		query.append("				FROM DUAL" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			 " ).append("\n"); 
		query.append("		#if(${frm_customer_type} == 'B')" ).append("\n"); 
		query.append("					AND SMRY.PRS_CUST_TP_CD IN ('I','A','O')" ).append("\n"); 
		query.append("		#elseif(${frm_customer_type} == 'N')" ).append("\n"); 
		query.append("					AND SMRY.PRS_CUST_TP_CD IN ('N')" ).append("\n"); 
		query.append("		#else " ).append("\n"); 
		query.append("				AND SMRY.PRS_CUST_TP_CD IN ('I','A','O','N')" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_prop_ofc_cd} != '')" ).append("\n"); 
		query.append("					AND SMRY.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_prop_srep_cd} != '')" ).append("\n"); 
		query.append("					AND SMRY.RESPB_SREP_CD = @[frm_prop_srep_cd]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_prop_apro_ofc_cd} != '')" ).append("\n"); 
		query.append("					AND SMRY.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if( $cust_list.size() != 0 ) " ).append("\n"); 
		query.append("			AND (SMRY.CUST_CNT_CD , SMRY.CUST_SEQ) IN (" ).append("\n"); 
		query.append("			#foreach( ${key} in ${cust_list}) " ).append("\n"); 
		query.append("				#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("					UNION ALL" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("				SELECT " ).append("\n"); 
		query.append("						substr('$key',1,2),substr('$key',3)" ).append("\n"); 
		query.append("				FROM DUAL" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("		#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'R' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_RFA_CONTRACT_KEY AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */ DISTINCT RFA_NO, PROP_NO, AMDT_SEQ" ).append("\n"); 
		query.append("	FROM VW_RFA_KEY_LIST" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_RFA_TOT_WEEK_PER_RFA_NO AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */  PROP_NO, AMDT_SEQ, RFA_NO" ).append("\n"); 
		query.append("		, ACTUAL_WK_CNT" ).append("\n"); 
		query.append("		, DECODE(ESTIMATE_WK_CNT, 1, 0, ESTIMATE_WK_CNT) AS ESTIMATE_WK_CNT" ).append("\n"); 
		query.append("		, REFER_WK_CNT" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("		SELECT  KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.RFA_NO" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT " ).append("\n"); 
		query.append("				THEN 0" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT AND PRD.SLS_TO_DT >= @[s_sls_fm_dt]  " ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS ACTUAL_WK_CNT" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT " ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT " ).append("\n"); 
		query.append("				THEN 0" ).append("\n"); 
		query.append("				WHEN PRD.SLS_TO_DT <= @[s_sls_to_dt]  " ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS ESTIMATE_WK_CNT" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT " ).append("\n"); 
		query.append("				THEN 0" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT AND PRD.SLS_FM_DT >=  @[r_sls_fm_dt] AND PRD.SLS_FM_DT <= @[r_sls_to_dt] " ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS REFER_WK_CNT" ).append("\n"); 
		query.append("                 FROM PRI_RP_DUR DUR" ).append("\n"); 
		query.append("			, VW_RFA_CONTRACT_KEY KLIST" ).append("\n"); 
		query.append("			, MAS_WK_PRD PRD" ).append("\n"); 
		query.append("--                       , VW_SUMMARY_DT SDT" ).append("\n"); 
		query.append("--                       , VW_REFERENCE_DT RDT" ).append("\n"); 
		query.append("                 WHERE DUR.PROP_NO = KLIST.PROP_NO" ).append("\n"); 
		query.append("			AND DUR.AMDT_SEQ = KLIST.AMDT_SEQ" ).append("\n"); 
		query.append("			AND (  " ).append("\n"); 
		query.append("				(	TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("					AND TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT" ).append("\n"); 
		query.append("				) OR (    " ).append("\n"); 
		query.append("					TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("					AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT" ).append("\n"); 
		query.append("				) OR (    " ).append("\n"); 
		query.append("					TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("					AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_TO_DT" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("			AND PRD.COST_YR||COST_WK BETWEEN (@[frm_ctrt_eff_yr] || @[frm_ctrt_eff_wk]) AND (@[frm_ctrt_exp_yr] || @[frm_ctrt_exp_wk])" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'R' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("              GROUP BY KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.RFA_NO" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_RFA_ACTUAL_VALUE AS (" ).append("\n"); 
		query.append("	SELECT   /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		SUM(LOAD / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD" ).append("\n"); 
		query.append("		, PRC_CTRT_NO" ).append("\n"); 
		query.append("		, RFA_NO" ).append("\n"); 
		query.append("		, MAX(WEEK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("		, SUM(G_REV * LOAD) AS G_REV" ).append("\n"); 
		query.append("		, SUM(OFT_SURCHARGE * LOAD) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("		, SUM(BUC_SURCHARGE * LOAD) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("		, SUM(IFC_SURCHARGE * LOAD) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("		, SUM(PSC_SURCHARGE * LOAD) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("		, SUM(OTHERS_SURCHARGE * LOAD) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT   CKEY.RFA_NO" ).append("\n"); 
		query.append("			, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("			, MAX(CKEY.PRS_CRNT_LOD_QTY) AS LOAD" ).append("\n"); 
		query.append("                        , MAX(WK_PER_SC.ACTUAL_WK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("			, SUM(SCG_AMT) AS G_REV" ).append("\n"); 
		query.append("                        , SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('OFT') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("                                ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("                        , SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('BUC', 'BAF', 'FRC') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("                                ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("                        , SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('IFC', 'IFM', 'IFR') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("                                ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("                        , SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('PSC', 'PSS') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("                                ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("                        , SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD NOT IN ('OFT', 'BUC', 'BAF', 'FRC', 'IFC', 'IFM', 'IFR', 'PSC', 'PSS') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("                                ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM VW_RFA_KEY_LIST CKEY" ).append("\n"); 
		query.append("			, VW_SUMMARY_WEEK WK" ).append("\n"); 
		query.append("			,VW_RFA_TOT_WEEK_PER_RFA_NO WK_PER_SC" ).append("\n"); 
		query.append("		WHERE CKEY.RFA_NO = WK_PER_SC.RFA_NO" ).append("\n"); 
		query.append("			AND WK.WK_TP = -1" ).append("\n"); 
		query.append("			AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= WK.SLS_FM_YRWK" ).append("\n"); 
		query.append("			AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= WK.SLS_TO_YRWK" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- origin" ).append("\n"); 
		query.append("		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- DEST" ).append("\n"); 
		query.append("		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- BY CARGO TYPE" ).append("\n"); 
		query.append("#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'R' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("                GROUP BY CKEY.RFA_NO" ).append("\n"); 
		query.append("			, CKEY.PRS_YRMON" ).append("\n"); 
		query.append("			, CKEY.PRS_WK" ).append("\n"); 
		query.append("			, CKEY.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("                        , CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("			, CKEY.SVC_SCP_CD" ).append("\n"); 
		query.append("			, CKEY.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("			, CKEY.TRD_CD" ).append("\n"); 
		query.append("                        , CKEY.SUB_TRD_CD" ).append("\n"); 
		query.append("			, CKEY.RLANE_CD" ).append("\n"); 
		query.append("			, CKEY.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("			, CKEY.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("                        , CKEY.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			, CKEY.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			, CKEY.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append("	GROUP BY RFA_NO, PRC_CTRT_NO" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_RFA_EST_ACT_1ST_VALUE AS (" ).append("\n"); 
		query.append("     SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD" ).append("\n"); 
		query.append("		, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV" ).append("\n"); 
		query.append("		, MN.OFT_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS OFT_SURCHARGE" ).append("\n"); 
		query.append("		, MN.BUC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS BUC_SURCHARGE" ).append("\n"); 
		query.append("		, MN.IFC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS IFC_SURCHARGE" ).append("\n"); 
		query.append("		, MN.PSC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS PSC_SURCHARGE" ).append("\n"); 
		query.append("		, MN.OTHERS_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		, MN.WEEK_CNT" ).append("\n"); 
		query.append("		, MN.TOT_WK" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("		SELECT   SUM(LOAD / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD" ).append("\n"); 
		query.append("			, PRC_CTRT_NO" ).append("\n"); 
		query.append("			, RFA_NO" ).append("\n"); 
		query.append("			, MAX(WEEK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("			, MAX(TOT_WK) AS TOT_WK" ).append("\n"); 
		query.append("			, SUM(G_REV * LOAD) AS G_REV" ).append("\n"); 
		query.append("			, SUM(OFT_SURCHARGE * LOAD) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(BUC_SURCHARGE * LOAD) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(IFC_SURCHARGE * LOAD) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(PSC_SURCHARGE * LOAD) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(OTHERS_SURCHARGE * LOAD) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT  /*+ ORDERED USE_MERGE(CKEY WK) USE_HASH(WK_PER_SC) */" ).append("\n"); 
		query.append("				CKEY.RFA_NO, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, MAX(CKEY.PRS_CRNT_LOD_QTY) AS LOAD" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.REFER_WK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK" ).append("\n"); 
		query.append("				, SUM(SCG_AMT) AS G_REV" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('OFT') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('BUC', 'BAF', 'FRC') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('IFC', 'IFM', 'IFR') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('PSC', 'PSS') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD NOT IN ('OFT', 'BUC', 'BAF', 'FRC' ,'IFC', 'IFM', 'IFR', 'PSC'	 ,'PSS') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("			FROM VW_RFA_KEY_LIST CKEY--, VW_REFERENCE_WEEK WK" ).append("\n"); 
		query.append("				,VW_RFA_TOT_WEEK_PER_RFA_NO WK_PER_SC" ).append("\n"); 
		query.append("			WHERE (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >=  @[r_fm_yrwk]" ).append("\n"); 
		query.append("				AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <=  @[r_to_yrwk]" ).append("\n"); 
		query.append("				AND CKEY.RFA_NO = WK_PER_SC.RFA_NO" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- origin" ).append("\n"); 
		query.append("		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- DEST" ).append("\n"); 
		query.append("		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- BY CARGO TYPE" ).append("\n"); 
		query.append("#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'R' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			GROUP BY CKEY.RFA_NO" ).append("\n"); 
		query.append("				, CKEY.PRS_YRMON" ).append("\n"); 
		query.append("				, CKEY.PRS_WK" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, CKEY.SVC_SCP_CD" ).append("\n"); 
		query.append("				, CKEY.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("				, CKEY.TRD_CD" ).append("\n"); 
		query.append("				, CKEY.SUB_TRD_CD" ).append("\n"); 
		query.append("				, CKEY.RLANE_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY RFA_NO, PRC_CTRT_NO" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_RFA_EST_ACT_2ND_VALUE AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		MN.PRC_CTRT_NO" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.LOAD / MN.WEEK_CNT * MN.TOT_WK) AS LOAD" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.G_REV / MN.WEEK_CNT * MN.TOT_WK) AS G_REV" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.OFT_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.BUC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.IFC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.PSC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE( MN.WEEK_CNT,0,0,MN.OTHERS_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		, MN.WEEK_CNT" ).append("\n"); 
		query.append("		, MN.TOT_WK" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT   SUM(LOAD / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD" ).append("\n"); 
		query.append("			, PRC_CTRT_NO" ).append("\n"); 
		query.append("			, RFA_NO" ).append("\n"); 
		query.append("			, MAX(WEEK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("			, MAX(TOT_WK) AS TOT_WK" ).append("\n"); 
		query.append("			, SUM(G_REV * LOAD) AS G_REV" ).append("\n"); 
		query.append("			, SUM(OFT_SURCHARGE * LOAD) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(BUC_SURCHARGE * LOAD) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(IFC_SURCHARGE * LOAD) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(PSC_SURCHARGE * LOAD) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(OTHERS_SURCHARGE * LOAD) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT   /*+ ORDERED SWAP_JOIN_INPUTS(@V1) USE_HASH(CKEY WK_PER_SC) */" ).append("\n"); 
		query.append("				CKEY.RFA_NO" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, MAX(CKEY.PRS_CRNT_LOD_QTY) AS LOAD" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.ACTUAL_WK_CNT + WK_PER_SC.ESTIMATE_WK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK" ).append("\n"); 
		query.append("				, SUM(SCG_AMT) AS G_REV" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('OFT') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('BUC', 'BAF', 'FRC') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('IFC', 'IFM', 'IFR') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('PSC', 'PSS') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("				,SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD NOT IN	('OFT', 'BUC', 'BAF', 'FRC' ,'IFC', 'IFM', 'IFR', 'PSC'	,'PSS')	THEN" ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("			FROM VW_RFA_KEY_LIST CKEY" ).append("\n"); 
		query.append("				, VW_RFA_TOT_WEEK_PER_RFA_NO WK_PER_SC" ).append("\n"); 
		query.append("			WHERE NOT EXISTS( SELECT /*+ QB_NAME(V1) */ 'F'	FROM VW_RFA_EST_ACT_1ST_VALUE V1 WHERE V1.PRC_CTRT_NO = CKEY.PRC_CTRT_NO)" ).append("\n"); 
		query.append("				AND CKEY.RFA_NO = WK_PER_SC.RFA_NO" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- origin" ).append("\n"); 
		query.append("		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- DEST" ).append("\n"); 
		query.append("		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- BY CARGO TYPE" ).append("\n"); 
		query.append("#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'R' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			GROUP BY CKEY.RFA_NO" ).append("\n"); 
		query.append("				, CKEY.PRS_YRMON" ).append("\n"); 
		query.append("				, CKEY.PRS_WK" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, CKEY.SVC_SCP_CD" ).append("\n"); 
		query.append("				, CKEY.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("				, CKEY.TRD_CD" ).append("\n"); 
		query.append("				, CKEY.SUB_TRD_CD" ).append("\n"); 
		query.append("				, CKEY.RLANE_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY RFA_NO, PRC_CTRT_NO" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(" -----------------------------------------" ).append("\n"); 
		query.append(" -- 이하 SC" ).append("\n"); 
		query.append("-- 기준이 되는 PROP_NO를 조회" ).append("\n"); 
		query.append(",VW_PROP_KEY AS (" ).append("\n"); 
		query.append("	SELECT   /*+ MATERIALIZE */ DUR.PROP_NO, MAX(DUR.AMDT_SEQ) AS AMDT_SEQ" ).append("\n"); 
		query.append("	FROM PRI_SP_DUR DUR" ).append("\n"); 
		query.append("	WHERE CTRT_EFF_DT >= TO_DATE(@[c_sls_fm_dt],'YYYYMMDD')" ).append("\n"); 
		query.append("		AND CTRT_EXP_DT < TO_DATE(@[c_sls_to_dt],'YYYYMMDD') + 1" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'S' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("	GROUP BY DUR.PROP_NO" ).append("\n"); 
		query.append(" )" ).append("\n"); 
		query.append(",VW_KEY_LIST AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE LEADING(PKEY HDR SMRY @V0 SR_CST_DTL) USE_NL(HDR PKEY SMRY SR_CST_DTL) */" ).append("\n"); 
		query.append("		HDR.SC_NO, PKEY.PROP_NO, PKEY.AMDT_SEQ, SR_CST_DTL.PRS_YRMON, SR_CST_DTL.PRS_WK" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRC_CTRT_TP_CD, SR_CST_DTL.PRC_CTRT_NO, SR_CST_DTL.SVC_SCP_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.VSL_SLAN_DIR_CD, SR_CST_DTL.TRD_CD, SR_CST_DTL.SUB_TRD_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.RLANE_CD, SR_CST_DTL.PRC_CGO_TP_CD, SR_CST_DTL.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.ORG_LOC_DEF_CD, SR_CST_DTL.DEST_LOC_TP_CD, SR_CST_DTL.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		,SR_CST_DTL.TEU_FRT_REV, SR_CST_DTL.PRS_RESPB_CM_UC_AMT, SR_CST_DTL.PRS_PFIT_CM_UC_AMT" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRS_RESPB_OPFIT_UC_AMT, SR_CST_DTL.PRS_CRNT_LOD_QTY" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRS_RESPB_CMPB_AMT, SR_CST_DTL.PRS_PFIT_CMPB_AMT" ).append("\n"); 
		query.append("		,SR_CST_DTL.PRS_RESPB_OPB_AMT, SCG.CHG_CD, SCG.SCG_AMT" ).append("\n"); 
		query.append("	FROM VW_PROP_KEY PKEY, PRI_SP_HDR HDR" ).append("\n"); 
		query.append("		, PRI_PRS_CTRT_SMRY SMRY" ).append("\n"); 
		query.append("		, PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL" ).append("\n"); 
		query.append("		, PRI_PRS_CTRT_SMRY_SCG_DTL SCG" ).append("\n"); 
		query.append("	WHERE HDR.PROP_NO = PKEY.PROP_NO" ).append("\n"); 
		query.append("		AND HDR.SC_NO = SMRY.PRC_CTRT_NO" ).append("\n"); 
		query.append("		AND SMRY.PRC_CTRT_TP_CD = 'S'" ).append("\n"); 
		query.append("		AND (SMRY.PRS_YRMON, SMRY.PRS_WK) IN(SELECT /*+ QB_NAME(V0) */ COST_YRMON, COST_WK FROM VW_CONTRACT_DT_LIST WHERE COST_YRMON IS NOT NULL AND COST_WK IS NOT NULL)" ).append("\n"); 
		query.append("		AND SMRY.PRS_YRMON = SR_CST_DTL.PRS_YRMON" ).append("\n"); 
		query.append("		AND SMRY.PRS_WK = SR_CST_DTL.PRS_WK" ).append("\n"); 
		query.append("		AND SMRY.PRC_CTRT_TP_CD = SR_CST_DTL.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("		AND SMRY.PRC_CTRT_NO = SR_CST_DTL.PRC_CTRT_NO" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRS_YRMON = SCG.PRS_YRMON" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRS_WK = SCG.PRS_WK" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRC_CTRT_TP_CD = SCG.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRC_CTRT_NO = SCG.PRC_CTRT_NO" ).append("\n"); 
		query.append("		AND SR_CST_DTL.SVC_SCP_CD = SCG.SVC_SCP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.VSL_SLAN_DIR_CD = SCG.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.TRD_CD = SCG.TRD_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.SUB_TRD_CD = SCG.SUB_TRD_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.RLANE_CD = SCG.RLANE_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.PRC_CGO_TP_CD = SCG.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.ORG_LOC_TP_CD = SCG.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.ORG_LOC_DEF_CD = SCG.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.DEST_LOC_TP_CD = SCG.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("		AND SR_CST_DTL.DEST_LOC_DEF_CD = SCG.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		AND HDR.SC_NO IS NOT NULL" ).append("\n"); 
		query.append("		AND SR_CST_DTL.TRD_CD = @[frm_trd_cd]" ).append("\n"); 
		query.append("		AND SR_CST_DTL.VSL_SLAN_DIR_CD = @[frm_dir_cd]" ).append("\n"); 
		query.append("		#if(${frm_sub_trd_cd} != '')" ).append("\n"); 
		query.append("			AND SR_CST_DTL.SUB_TRD_CD = @[frm_sub_trd_cd]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		#if(${frm_rlane_cd} != '')" ).append("\n"); 
		query.append("			AND SR_CST_DTL.RLANE_CD IN (" ).append("\n"); 
		query.append("			#foreach( ${key} in ${rlane_list}) " ).append("\n"); 
		query.append("				#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("					UNION ALL" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("				SELECT " ).append("\n"); 
		query.append("						 '$key' " ).append("\n"); 
		query.append("				FROM DUAL" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			 " ).append("\n"); 
		query.append("		#if(${frm_customer_type} == 'B')" ).append("\n"); 
		query.append("					AND SMRY.PRS_CUST_TP_CD IN ('I','A','O')" ).append("\n"); 
		query.append("		#elseif(${frm_customer_type} == 'N')" ).append("\n"); 
		query.append("					AND SMRY.PRS_CUST_TP_CD IN ('N')" ).append("\n"); 
		query.append("		#else " ).append("\n"); 
		query.append("				AND SMRY.PRS_CUST_TP_CD IN ('I','A','O','N')" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_prop_ofc_cd} != '')" ).append("\n"); 
		query.append("					AND SMRY.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_prop_srep_cd} != '')" ).append("\n"); 
		query.append("					AND SMRY.RESPB_SREP_CD = @[frm_prop_srep_cd]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${frm_prop_apro_ofc_cd} != '')" ).append("\n"); 
		query.append("					AND SMRY.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if( $cust_list.size() != 0 ) " ).append("\n"); 
		query.append("			AND (SMRY.CUST_CNT_CD , SMRY.CUST_SEQ) IN (" ).append("\n"); 
		query.append("			#foreach( ${key} in ${cust_list}) " ).append("\n"); 
		query.append("				#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("					UNION ALL" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("				SELECT " ).append("\n"); 
		query.append("						substr('$key',1,2),substr('$key',3)" ).append("\n"); 
		query.append("				FROM DUAL" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("		#end " ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'S' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_CONTRACT_KEY AS (" ).append("\n"); 
		query.append("     SELECT /*+ MATERIALIZE */  DISTINCT SC_NO, PROP_NO, AMDT_SEQ" ).append("\n"); 
		query.append("        FROM VW_KEY_LIST" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_TOT_WEEK_PER_SC_NO AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		PROP_NO, AMDT_SEQ, SC_NO, ACTUAL_WK_CNT" ).append("\n"); 
		query.append("		,DECODE(ESTIMATE_WK_CNT, 1, 0, ESTIMATE_WK_CNT) AS ESTIMATE_WK_CNT" ).append("\n"); 
		query.append("		, REFER_WK_CNT" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT   KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.SC_NO" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT " ).append("\n"); 
		query.append("				THEN 0" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT AND PRD.SLS_TO_DT >= @[s_sls_fm_dt] " ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS ACTUAL_WK_CNT" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT THEN 0 " ).append("\n"); 
		query.append("				WHEN PRD.SLS_TO_DT <= @[s_sls_to_dt]" ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS ESTIMATE_WK_CNT" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("				THEN 0" ).append("\n"); 
		query.append("				WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT AND PRD.SLS_FM_DT >= @[r_sls_fm_dt] AND PRD.SLS_FM_DT <= @[r_sls_to_dt] " ).append("\n"); 
		query.append("				THEN 1" ).append("\n"); 
		query.append("				ELSE 0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS REFER_WK_CNT" ).append("\n"); 
		query.append("		FROM PRI_SP_DUR DUR" ).append("\n"); 
		query.append("			, VW_CONTRACT_KEY KLIST" ).append("\n"); 
		query.append("			, MAS_WK_PRD PRD" ).append("\n"); 
		query.append("		--                       , VW_SUMMARY_DT SDT" ).append("\n"); 
		query.append("		--                       , VW_REFERENCE_DT RDT" ).append("\n"); 
		query.append("		WHERE DUR.PROP_NO = KLIST.PROP_NO" ).append("\n"); 
		query.append("			AND DUR.AMDT_SEQ = KLIST.AMDT_SEQ" ).append("\n"); 
		query.append("			AND (  " ).append("\n"); 
		query.append("				(    " ).append("\n"); 
		query.append("					TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("					AND TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT" ).append("\n"); 
		query.append("				) OR (    " ).append("\n"); 
		query.append("					TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("					AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT" ).append("\n"); 
		query.append("				) OR (    " ).append("\n"); 
		query.append("					TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_FM_DT" ).append("\n"); 
		query.append("					AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_TO_DT" ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("			AND PRD.COST_YR||COST_WK BETWEEN (@[frm_ctrt_eff_yr] || @[frm_ctrt_eff_wk]) AND (@[frm_ctrt_exp_yr] || @[frm_ctrt_exp_wk])" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'S' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		GROUP BY KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.SC_NO" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_ACTUAL_VALUE AS (" ).append("\n"); 
		query.append("	SELECT   /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		SUM(LOAD / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD" ).append("\n"); 
		query.append("		, PRC_CTRT_NO" ).append("\n"); 
		query.append("		, SC_NO" ).append("\n"); 
		query.append("		,MAX(WEEK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("		, SUM(G_REV * LOAD) AS G_REV" ).append("\n"); 
		query.append("		,SUM(OFT_SURCHARGE * LOAD) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("		,SUM(BUC_SURCHARGE * LOAD) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("		,SUM(IFC_SURCHARGE * LOAD) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("		,SUM(PSC_SURCHARGE * LOAD) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("		,SUM(OTHERS_SURCHARGE * LOAD) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT   /*+ USE_HASH(CKEY WK WK_PER_SC)*/" ).append("\n"); 
		query.append("			CKEY.SC_NO, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("			, MAX(CKEY.PRS_CRNT_LOD_QTY) AS LOAD" ).append("\n"); 
		query.append("			, MAX(WK_PER_SC.ACTUAL_WK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("			, SUM(SCG_AMT) AS G_REV" ).append("\n"); 
		query.append("			, SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('OFT') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("				ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('BUC', 'BAF', 'FRC') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("				ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('IFC', 'IFM', 'IFR') THEN" ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("				ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD IN('PSC', 'PSS') THEN " ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("				ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("			,SUM(" ).append("\n"); 
		query.append("				CASE WHEN CHG_CD NOT IN ('OFT', 'BUC', 'BAF', 'FRC', 'IFC', 'IFM', 'IFR', 'PSC', 'PSS')	THEN" ).append("\n"); 
		query.append("					SCG_AMT" ).append("\n"); 
		query.append("				ELSE " ).append("\n"); 
		query.append("					0" ).append("\n"); 
		query.append("				END" ).append("\n"); 
		query.append("			) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM VW_KEY_LIST CKEY" ).append("\n"); 
		query.append("			, VW_SUMMARY_WEEK WK" ).append("\n"); 
		query.append("			, VW_TOT_WEEK_PER_SC_NO WK_PER_SC" ).append("\n"); 
		query.append("		WHERE CKEY.SC_NO = WK_PER_SC.SC_NO" ).append("\n"); 
		query.append("			AND WK.WK_TP = -1" ).append("\n"); 
		query.append("			AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= WK.SLS_FM_YRWK" ).append("\n"); 
		query.append("			AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= WK.SLS_TO_YRWK" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- origin" ).append("\n"); 
		query.append("		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- DEST" ).append("\n"); 
		query.append("		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- BY CARGO TYPE" ).append("\n"); 
		query.append("#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'S' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		GROUP BY CKEY.SC_NO" ).append("\n"); 
		query.append("			, CKEY.PRS_YRMON" ).append("\n"); 
		query.append("			, CKEY.PRS_WK" ).append("\n"); 
		query.append("			, CKEY.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("			, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("			, CKEY.SVC_SCP_CD" ).append("\n"); 
		query.append("			, CKEY.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("			, CKEY.TRD_CD" ).append("\n"); 
		query.append("			, CKEY.SUB_TRD_CD" ).append("\n"); 
		query.append("			, CKEY.RLANE_CD" ).append("\n"); 
		query.append("			, CKEY.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("			, CKEY.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("			, CKEY.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			, CKEY.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			, CKEY.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append("	GROUP BY SC_NO, PRC_CTRT_NO" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_EST_ACT_1ST_VALUE AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD" ).append("\n"); 
		query.append("		, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV" ).append("\n"); 
		query.append("		, MN.OFT_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS OFT_SURCHARGE" ).append("\n"); 
		query.append("		, MN.BUC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS BUC_SURCHARGE" ).append("\n"); 
		query.append("		, MN.IFC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS IFC_SURCHARGE" ).append("\n"); 
		query.append("		, MN.PSC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS PSC_SURCHARGE" ).append("\n"); 
		query.append("		, MN.OTHERS_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		, MN.WEEK_CNT" ).append("\n"); 
		query.append("		, MN.TOT_WK" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT   SUM(LOAD / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD" ).append("\n"); 
		query.append("			, PRC_CTRT_NO" ).append("\n"); 
		query.append("			, SC_NO" ).append("\n"); 
		query.append("			, MAX(WEEK_CNT) AS WEEK_CNT, MAX(TOT_WK) AS TOT_WK" ).append("\n"); 
		query.append("			, SUM(G_REV * LOAD) AS G_REV" ).append("\n"); 
		query.append("			, SUM(OFT_SURCHARGE * LOAD) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(BUC_SURCHARGE * LOAD) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(IFC_SURCHARGE * LOAD) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(PSC_SURCHARGE * LOAD) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(OTHERS_SURCHARGE * LOAD) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT   /*+USE_HASH(CKEY WK WK_PER_SC)*/" ).append("\n"); 
		query.append("				CKEY.SC_NO" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, MAX(CKEY.PRS_CRNT_LOD_QTY) AS LOAD" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.REFER_WK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK" ).append("\n"); 
		query.append("				, SUM(SCG_AMT) AS G_REV" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('OFT') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('BUC', 'BAF', 'FRC') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('IFC', 'IFM', 'IFR') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('PSC', 'PSS') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD NOT IN	('OFT', 'BUC', 'BAF', 'FRC','IFC', 'IFM', 'IFR', 'PSC','PSS') THEN" ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("			FROM VW_KEY_LIST CKEY " ).append("\n"); 
		query.append("			,VW_TOT_WEEK_PER_SC_NO WK_PER_SC" ).append("\n"); 
		query.append("			WHERE (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= @[r_fm_yrwk] AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= @[r_to_yrwk]" ).append("\n"); 
		query.append("				AND CKEY.SC_NO = WK_PER_SC.SC_NO" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- origin" ).append("\n"); 
		query.append("		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- DEST" ).append("\n"); 
		query.append("		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- BY CARGO TYPE" ).append("\n"); 
		query.append("#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'S' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			GROUP BY CKEY.SC_NO" ).append("\n"); 
		query.append("				, CKEY.PRS_YRMON" ).append("\n"); 
		query.append("				, CKEY.PRS_WK" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, CKEY.SVC_SCP_CD" ).append("\n"); 
		query.append("				, CKEY.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("				, CKEY.TRD_CD" ).append("\n"); 
		query.append("				, CKEY.SUB_TRD_CD" ).append("\n"); 
		query.append("				, CKEY.RLANE_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY SC_NO, PRC_CTRT_NO" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",VW_EST_ACT_2ND_VALUE AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		MN.PRC_CTRT_NO" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.LOAD / MN.WEEK_CNT * MN.TOT_WK) AS LOAD" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.G_REV / MN.WEEK_CNT * MN.TOT_WK) AS G_REV" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.OFT_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.BUC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.IFC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.PSC_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("		, DECODE(MN.WEEK_CNT,0,0,MN.OTHERS_SURCHARGE / MN.WEEK_CNT * MN.TOT_WK) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		, MN.WEEK_CNT" ).append("\n"); 
		query.append("		, MN.TOT_WK" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT   SUM(LOAD / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD" ).append("\n"); 
		query.append("			, PRC_CTRT_NO" ).append("\n"); 
		query.append("			, SC_NO" ).append("\n"); 
		query.append("			, MAX(WEEK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("			, MAX(TOT_WK) AS TOT_WK" ).append("\n"); 
		query.append("			, SUM(G_REV * LOAD) AS G_REV" ).append("\n"); 
		query.append("			, SUM(OFT_SURCHARGE * LOAD) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(BUC_SURCHARGE * LOAD) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(IFC_SURCHARGE * LOAD) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(PSC_SURCHARGE * LOAD) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("			, SUM(OTHERS_SURCHARGE * LOAD) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT   /*+ ORDERED SWAP_JOIN_INPUTS(@V1) USE_HASH(CKEY WK_PER_SC) */" ).append("\n"); 
		query.append("				CKEY.SC_NO" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, MAX(CKEY.PRS_CRNT_LOD_QTY) AS LOAD" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.ACTUAL_WK_CNT + WK_PER_SC.ESTIMATE_WK_CNT) AS WEEK_CNT" ).append("\n"); 
		query.append("				, MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK" ).append("\n"); 
		query.append("				, SUM(SCG_AMT) AS G_REV" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('OFT') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OFT_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('BUC', 'BAF', 'FRC') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS BUC_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('IFC', 'IFM', 'IFR') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS IFC_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD IN('PSC', 'PSS') THEN " ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS PSC_SURCHARGE" ).append("\n"); 
		query.append("				, SUM(" ).append("\n"); 
		query.append("					CASE WHEN CHG_CD NOT IN	('OFT', 'BUC', 'BAF', 'FRC','IFC', 'IFM', 'IFR', 'PSC','PSS') THEN" ).append("\n"); 
		query.append("						SCG_AMT" ).append("\n"); 
		query.append("					ELSE " ).append("\n"); 
		query.append("						0" ).append("\n"); 
		query.append("					END" ).append("\n"); 
		query.append("				) AS OTHERS_SURCHARGE" ).append("\n"); 
		query.append("			FROM VW_KEY_LIST CKEY" ).append("\n"); 
		query.append("				, VW_TOT_WEEK_PER_SC_NO WK_PER_SC" ).append("\n"); 
		query.append("			WHERE NOT EXISTS(SELECT /*+ QB_NAME(V1) */ 'F' FROM VW_EST_ACT_1ST_VALUE V1 WHERE V1.PRC_CTRT_NO = CKEY.PRC_CTRT_NO)" ).append("\n"); 
		query.append("				AND CKEY.SC_NO = WK_PER_SC.SC_NO" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- origin" ).append("\n"); 
		query.append("		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("		-- DEST" ).append("\n"); 
		query.append("		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- BY CARGO TYPE" ).append("\n"); 
		query.append("#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("		#if(${frm_contract_type} == 'B' || ${frm_contract_type} == 'S' )" ).append("\n"); 
		query.append("			AND 1=1" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND 1=0" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			GROUP BY CKEY.SC_NO" ).append("\n"); 
		query.append("				, CKEY.PRS_YRMON" ).append("\n"); 
		query.append("				, CKEY.PRS_WK" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_TP_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CTRT_NO" ).append("\n"); 
		query.append("				, CKEY.SVC_SCP_CD" ).append("\n"); 
		query.append("				, CKEY.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("				, CKEY.TRD_CD" ).append("\n"); 
		query.append("				, CKEY.SUB_TRD_CD" ).append("\n"); 
		query.append("				, CKEY.RLANE_CD" ).append("\n"); 
		query.append("				, CKEY.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_TP_CD" ).append("\n"); 
		query.append("				, CKEY.DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY SC_NO, PRC_CTRT_NO" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT   'SC' AS CONTRACT_NM" ).append("\n"); 
		query.append("	, A_SC_NO" ).append("\n"); 
		query.append("	, E1_SC_NO" ).append("\n"); 
		query.append("	, E2_SC_NO" ).append("\n"); 
		query.append("	, A1_LOAD" ).append("\n"); 
		query.append("	, A1_G_REV" ).append("\n"); 
		query.append("	, A1_OFT_SURCHARGE" ).append("\n"); 
		query.append("        , A1_BUC_SURCHARGE" ).append("\n"); 
		query.append("	, A1_IFC_SURCHARGE" ).append("\n"); 
		query.append("	, A1_PSC_SURCHARGE" ).append("\n"); 
		query.append("	, A1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("	, A1_WEEK_CNT" ).append("\n"); 
		query.append("        , E1_LOAD" ).append("\n"); 
		query.append("	, E1_G_REV" ).append("\n"); 
		query.append("	, E1_OFT_SURCHARGE" ).append("\n"); 
		query.append("	, E1_BUC_SURCHARGE" ).append("\n"); 
		query.append("	, E1_IFC_SURCHARGE" ).append("\n"); 
		query.append("	, E1_PSC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("	, E1_LOAD + A1_LOAD AS SUM_LOAD" ).append("\n"); 
		query.append("	, E1_G_REV + A1_G_REV AS SUM_G_REV" ).append("\n"); 
		query.append("        , E1_OFT_SURCHARGE + A1_OFT_SURCHARGE AS SUM_OFT_SURCHARGE" ).append("\n"); 
		query.append("        , E1_BUC_SURCHARGE + A1_BUC_SURCHARGE AS SUM_BUC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_IFC_SURCHARGE + A1_IFC_SURCHARGE AS SUM_IFC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_PSC_SURCHARGE + A1_PSC_SURCHARGE AS SUM_PSC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_OTHERS_SURCHARGE + A1_OTHERS_SURCHARGE AS SUM_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("        , C.CUST_CNT_CD || TO_CHAR(C.CUST_SEQ, 'FM000000') || ' - ' || C.CTRT_PTY_NM AS CUST_NM" ).append("\n"); 
		query.append("        , M.PROP_OFC_CD" ).append("\n"); 
		query.append("	,  ( " ).append("\n"); 
		query.append("		       CASE WHEN Q.CNTR_LOD_UT_CD = 'F' AND @[frm_pfmc_unit] = 'TEU' THEN " ).append("\n"); 
		query.append("			   Q.FNL_MQC_QTY * 2" ).append("\n"); 
		query.append("		       WHEN Q.CNTR_LOD_UT_CD = 'T' AND @[frm_pfmc_unit] = 'FEU' THEN" ).append("\n"); 
		query.append("			   Q.FNL_MQC_QTY /2" ).append("\n"); 
		query.append("		       ELSE Q.FNL_MQC_QTY" ).append("\n"); 
		query.append("		       END" ).append("\n"); 
		query.append("	)  AS MQC_QTY" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("		SELECT CKEY.SC_NO" ).append("\n"); 
		query.append("			, CKEY.PROP_NO" ).append("\n"); 
		query.append("			, CKEY.AMDT_SEQ" ).append("\n"); 
		query.append("			, CKEY.SC_NO AS A_SC_NO" ).append("\n"); 
		query.append("			, EST_1ST.PRC_CTRT_NO AS E1_SC_NO" ).append("\n"); 
		query.append("			, EST_2ND.PRC_CTRT_NO AS E2_SC_NO" ).append("\n"); 
		query.append("			, AVALUE.LOAD AS A1_LOAD" ).append("\n"); 
		query.append("			, AVALUE.G_REV AS A1_G_REV" ).append("\n"); 
		query.append("			, AVALUE.OFT_SURCHARGE AS A1_OFT_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.BUC_SURCHARGE AS A1_BUC_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.IFC_SURCHARGE AS A1_IFC_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.PSC_SURCHARGE AS A1_PSC_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.OTHERS_SURCHARGE AS A1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.WEEK_CNT AS A1_WEEK_CNT" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.LOAD, EST_1ST.LOAD) AS E1_LOAD" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.G_REV, EST_1ST.G_REV) AS E1_G_REV" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.OFT_SURCHARGE, EST_1ST.OFT_SURCHARGE) AS E1_OFT_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.BUC_SURCHARGE, EST_1ST.BUC_SURCHARGE) AS E1_BUC_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.IFC_SURCHARGE, EST_1ST.IFC_SURCHARGE) AS E1_IFC_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.PSC_SURCHARGE, EST_1ST.PSC_SURCHARGE) AS E1_PSC_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.OTHERS_SURCHARGE, EST_1ST.OTHERS_SURCHARGE) AS E1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM VW_CONTRACT_KEY CKEY" ).append("\n"); 
		query.append("			, VW_ACTUAL_VALUE AVALUE" ).append("\n"); 
		query.append("			, VW_EST_ACT_1ST_VALUE EST_1ST" ).append("\n"); 
		query.append("			, VW_EST_ACT_2ND_VALUE EST_2ND" ).append("\n"); 
		query.append("		WHERE CKEY.SC_NO = AVALUE.SC_NO(+)" ).append("\n"); 
		query.append("			AND CKEY.SC_NO = EST_1ST.PRC_CTRT_NO(+)" ).append("\n"); 
		query.append("			AND CKEY.SC_NO = EST_2ND.PRC_CTRT_NO(+)" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append("        ,PRI_SP_MN M" ).append("\n"); 
		query.append("        ,PRI_SP_CTRT_PTY C" ).append("\n"); 
		query.append("        ,PRI_SP_MQC Q" ).append("\n"); 
		query.append("WHERE MN.PROP_NO = M.PROP_NO" ).append("\n"); 
		query.append("	AND MN.AMDT_SEQ = M.AMDT_SEQ" ).append("\n"); 
		query.append("	AND M.PROP_NO = C.PROP_NO" ).append("\n"); 
		query.append("	AND M.AMDT_SEQ = C.AMDT_SEQ" ).append("\n"); 
		query.append("	AND M.PROP_NO = Q.PROP_NO(+)" ).append("\n"); 
		query.append("	AND M.AMDT_SEQ = Q.AMDT_SEQ(+)" ).append("\n"); 
		query.append("	AND C.PRC_CTRT_PTY_TP_CD = 'C'" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT   'RFA' AS CONTRACT_NM" ).append("\n"); 
		query.append("	, A_SC_NO" ).append("\n"); 
		query.append("	, E1_SC_NO" ).append("\n"); 
		query.append("	, E2_SC_NO" ).append("\n"); 
		query.append("	, A1_LOAD" ).append("\n"); 
		query.append("	, A1_G_REV" ).append("\n"); 
		query.append("	, A1_OFT_SURCHARGE" ).append("\n"); 
		query.append("        , A1_BUC_SURCHARGE" ).append("\n"); 
		query.append("	, A1_IFC_SURCHARGE" ).append("\n"); 
		query.append("	, A1_PSC_SURCHARGE" ).append("\n"); 
		query.append("	, A1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("	, A1_WEEK_CNT" ).append("\n"); 
		query.append("        , E1_LOAD" ).append("\n"); 
		query.append("	, E1_G_REV" ).append("\n"); 
		query.append("	, E1_OFT_SURCHARGE" ).append("\n"); 
		query.append("	, E1_BUC_SURCHARGE" ).append("\n"); 
		query.append("	, E1_IFC_SURCHARGE" ).append("\n"); 
		query.append("	, E1_PSC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("	, E1_LOAD + A1_LOAD AS SUM_LOAD" ).append("\n"); 
		query.append("	, E1_G_REV + A1_G_REV AS SUM_G_REV" ).append("\n"); 
		query.append("        , E1_OFT_SURCHARGE + A1_OFT_SURCHARGE AS SUM_OFT_SURCHARGE" ).append("\n"); 
		query.append("        , E1_BUC_SURCHARGE + A1_BUC_SURCHARGE AS SUM_BUC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_IFC_SURCHARGE + A1_IFC_SURCHARGE AS SUM_IFC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_PSC_SURCHARGE + A1_PSC_SURCHARGE AS SUM_PSC_SURCHARGE" ).append("\n"); 
		query.append("        , E1_OTHERS_SURCHARGE + A1_OTHERS_SURCHARGE AS SUM_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("        , M.CTRT_CUST_CNT_CD || TO_CHAR(M.CTRT_CUST_SEQ, 'FM000000') || ' - ' || CUST.CUST_LGL_ENG_NM AS CUST_NM" ).append("\n"); 
		query.append("        , M.PROP_OFC_CD" ).append("\n"); 
		query.append("		, (" ).append("\n"); 
		query.append("			CASE WHEN M.CNTR_LOD_UT_CD = 'F' AND @[frm_pfmc_unit] = 'TEU' THEN" ).append("\n"); 
		query.append("			M.TGT_MVC_QTY * 2" ).append("\n"); 
		query.append("			WHEN M.CNTR_LOD_UT_CD = 'T' AND @[frm_pfmc_unit] = 'FEU' THEN" ).append("\n"); 
		query.append("			M.TGT_MVC_QTY /2" ).append("\n"); 
		query.append("			ELSE M.TGT_MVC_QTY" ).append("\n"); 
		query.append("			END" ).append("\n"); 
		query.append("		)  AS MQC_QTY" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("		SELECT CKEY.RFA_NO AS SC_NO" ).append("\n"); 
		query.append("			, CKEY.PROP_NO" ).append("\n"); 
		query.append("			, CKEY.AMDT_SEQ" ).append("\n"); 
		query.append("			, CKEY.RFA_NO AS A_SC_NO" ).append("\n"); 
		query.append("			, EST_1ST.PRC_CTRT_NO AS E1_SC_NO" ).append("\n"); 
		query.append("			, EST_2ND.PRC_CTRT_NO AS E2_SC_NO" ).append("\n"); 
		query.append("			, AVALUE.LOAD AS A1_LOAD" ).append("\n"); 
		query.append("			, AVALUE.G_REV AS A1_G_REV" ).append("\n"); 
		query.append("			, AVALUE.OFT_SURCHARGE AS A1_OFT_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.BUC_SURCHARGE AS A1_BUC_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.IFC_SURCHARGE AS A1_IFC_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.PSC_SURCHARGE AS A1_PSC_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.OTHERS_SURCHARGE AS A1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("			, AVALUE.WEEK_CNT AS A1_WEEK_CNT" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.LOAD, EST_1ST.LOAD) AS E1_LOAD" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.G_REV, EST_1ST.G_REV) AS E1_G_REV" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.OFT_SURCHARGE, EST_1ST.OFT_SURCHARGE) AS E1_OFT_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.BUC_SURCHARGE, EST_1ST.BUC_SURCHARGE) AS E1_BUC_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.IFC_SURCHARGE, EST_1ST.IFC_SURCHARGE) AS E1_IFC_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.PSC_SURCHARGE, EST_1ST.PSC_SURCHARGE) AS E1_PSC_SURCHARGE" ).append("\n"); 
		query.append("			, DECODE(EST_1ST.PRC_CTRT_NO, NULL, EST_2ND.OTHERS_SURCHARGE, EST_1ST.OTHERS_SURCHARGE) AS E1_OTHERS_SURCHARGE" ).append("\n"); 
		query.append("		FROM VW_RFA_CONTRACT_KEY CKEY" ).append("\n"); 
		query.append("			, VW_RFA_ACTUAL_VALUE AVALUE" ).append("\n"); 
		query.append("			, VW_RFA_EST_ACT_1ST_VALUE EST_1ST" ).append("\n"); 
		query.append("			, VW_RFA_EST_ACT_2ND_VALUE EST_2ND" ).append("\n"); 
		query.append("		WHERE CKEY.RFA_NO = AVALUE.RFA_NO(+)" ).append("\n"); 
		query.append("			AND CKEY.RFA_NO = EST_1ST.PRC_CTRT_NO(+)" ).append("\n"); 
		query.append("			AND CKEY.RFA_NO = EST_2ND.PRC_CTRT_NO(+)" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append("        ,PRI_RP_MN M" ).append("\n"); 
		query.append("        ,MDM_CUSTOMER CUST" ).append("\n"); 
		query.append("WHERE MN.PROP_NO = M.PROP_NO" ).append("\n"); 
		query.append("	AND MN.AMDT_SEQ = M.AMDT_SEQ" ).append("\n"); 
		query.append("	AND CUST.CUST_CNT_CD = M.CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("	AND CUST.CUST_SEQ = M.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("ORDER BY CONTRACT_NM DESC, PROP_OFC_CD, A_SC_NO, CUST_NM" ).append("\n"); 

	}
}