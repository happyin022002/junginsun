<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkDistributionDBDAOSearchFixCostDistNewListRSQL">
			<desc><![CDATA[TS Allocation 2 에서만 사용]]></desc>
			<sql><![CDATA[
-- T/S Allocation 2
 SELECT M_COST_YRMON
      , M_COST_WK
      , M_TRD_CD
      , M_RLANE_CD
      , M_IOC_CD
      , M_HUL_BND_CD
      , M_VVD_CD
      , RNUM
      , DECODE(RNUM, 1, FNL_HJS_BSA_CAPA) AS FNL_HJS_BSA_CAPA
      , DECODE(RNUM, 1, SUM(M_TS_UC_AMT) OVER (PARTITION BY  M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD)) AS M_TS_UC_AMT
      , DECODE(RNUM, 1, M_HJS_SLS_AMT) AS M_HJS_SLS_AMT
      , D_COST_YRMON
      , D_COST_WK
      , D_TRD_CD
      , DD_TRD_CD
      , NVL(
        (SELECT DISTINCT (BSA_CMMT_RTO) / 100
           FROM MAS_LANE_TS_BSA_CMMT
          WHERE COST_YRMON    = M_COST_YRMON
            AND FM_TRD_CD     = M_TRD_CD
            AND FM_RLANE_CD   = M_RLANE_CD
            AND FM_IOC_CD     = M_IOC_CD
            AND FM_HUL_BND_CD = M_HUL_BND_CD
            AND TO_TRD_CD     = D_TRD_CD
            AND TO_HUL_BND_CD = DECODE(D_TRD_CD,'IAS','HH',D_HUL_BND_CD)
        ), 0) AS D_BSA_CMMT_RTO
      , D_RLANE_CD
      , D_IOC_CD
      , D_HUL_BND_CD
      , D_VVD_CD
      , D_LOCL_TS_STS_CD
      , D_TS_QTY
      , SUM(D_TS_QTY) OVER (PARTITION BY M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_HUL_BND_CD, M_VVD_CD) AS VVD_TTL_QTY
      , D_TS_RTO
      , D_FX_COST_DTRB_AMT
      , D_CMMT_QTY
      , D_CMMT_BSE_COST_RTO
      , D_CMMT_BSE_COST_AMT
      , D_CMMT_ADD_COST_AMT
      , SUM(M_TS_UC_AMT) OVER (PARTITION BY  M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD) * D_TS_QTY AS TO_LANE_INIT_AMT
      , D_CMMT_BSE_COST_AMT - (SUM(M_TS_UC_AMT) OVER (PARTITION BY  M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD) * D_TS_QTY) AS TO_TRD_OTR_INIT_AMT
      , D_CMMT_BSE_COST_AMT AS TO_INIT_TTL_AMT
      , SUM(ADJ_LANE_FNL_AMT) OVER (PARTITION BY  M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD, D_TRD_CD, D_RLANE_CD, D_IOC_CD, D_VVD_CD) ADJ_LANE_FNL_AMT
      , SUM(ADJ_TRD_OTR_FNL_AMT) OVER (PARTITION BY  M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD, D_TRD_CD, D_RLANE_CD, D_IOC_CD, D_VVD_CD) ADJ_TRD_OTR_FNL_AMT
      , SUM(ADJ_FNL_AMT) OVER (PARTITION BY  M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD, D_TRD_CD, D_RLANE_CD, D_IOC_CD, D_VVD_CD) ADJ_FNL_AMT
      , CASE WHEN SUM(D_TS_QTY) OVER (PARTITION BY M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_HUL_BND_CD, M_VVD_CD) >= FNL_HJS_BSA_CAPA 
                  AND FNL_HJS_BSA_CAPA > 0
             THEN 'L/F > 100%' ELSE '' END AS ADJ_REMARK
   FROM
        (SELECT M_COST_YRMON
              , M_COST_WK
              , M_TRD_CD
              , M_RLANE_CD
              , M_IOC_CD
              , M_HUL_BND_CD
              , M_VVD_CD
              , FNL_HJS_BSA_CAPA
              , SUM(M_TS_UC_AMT) M_TS_UC_AMT
              , ROW_NUMBER() OVER(PARTITION BY M_TRD_CD, M_RLANE_CD, M_IOC_CD, M_VVD_CD  
                                  ORDER BY DECODE(SUM(M_TS_UC_AMT),0,NULL, SUM(M_TS_UC_AMT)) NULLS LAST, D_TRD_CD, D_RLANE_CD, D_VVD_CD) AS RNUM
              , D_COST_YRMON
              , D_COST_WK
              , D_TRD_CD
              , DD_TRD_CD
              , D_RLANE_CD
              , D_IOC_CD
              , D_HUL_BND_CD
              , D_VVD_CD
              , D_LOCL_TS_STS_CD
              , MAX(D_TS_QTY) AS D_TS_QTY
              , MAX(D_TS_RTO) AS D_TS_RTO
              , SUM(D_FX_COST_DTRB_AMT) AS D_FX_COST_DTRB_AMT
              , MAX(D_CMMT_QTY) AS D_CMMT_QTY
              , MAX(D_CMMT_BSE_COST_RTO) AS D_CMMT_BSE_COST_RTO
              , SUM(D_CMMT_BSE_COST_AMT) AS D_CMMT_BSE_COST_AMT
              , SUM(D_CMMT_ADD_COST_AMT) AS D_CMMT_ADD_COST_AMT
              , SUM(ADJ_LANE_FNL_AMT) AS ADJ_LANE_FNL_AMT
              , SUM(ADJ_TRD_OTR_FNL_AMT) AS ADJ_TRD_OTR_FNL_AMT
              , SUM(ADJ_FNL_AMT) AS ADJ_FNL_AMT
              , MAX(M_HJS_SLS_AMT) M_HJS_SLS_AMT                      
        FROM (
                 SELECT A.COST_YRMON AS M_COST_YRMON
                      , A.COST_WK AS M_COST_WK
                      , A.TRD_CD AS M_TRD_CD
                      , A.RLANE_CD AS M_RLANE_CD
                      , A.IOC_CD AS M_IOC_CD
                      , E.HUL_BND_CD AS M_HUL_BND_CD
                      , (A.VSL_CD || A.SKD_VOY_NO || A.DIR_CD) AS M_VVD_CD
                      , NVL(B.FNL_HJS_BSA_CAPA, 0) FNL_HJS_BSA_CAPA

					#if (${f_op_view} == 'OP4')
                      , NVL(B.N4TH_TS_UC_AMT, 0) AS M_TS_UC_AMT
                      , D.COST_YRMON AS D_COST_YRMON
                      , D.COST_WK AS D_COST_WK
                      , B.TO_TRD_CD AS D_TRD_CD
                      , B.TO_TRD_CD AS DD_TRD_CD
                      , B.TO_RLANE_CD AS D_RLANE_CD
                      , B.TO_IOC_CD AS D_IOC_CD
                      , F.HUL_BND_CD AS D_HUL_BND_CD
                      , B.TO_VSL_CD||B.TO_SKD_VOY_NO||B.TO_SKD_DIR_CD AS D_VVD_CD
                      , B.LOCL_TS_STS_CD AS D_LOCL_TS_STS_CD                    
                      , NVL(C.TS_QTY, 0) AS D_TS_QTY
                      , NVL(C.TS_RTO, 0) AS D_TS_RTO
                      , NVL(B.N4TH_FX_COST_DTRB_AMT, 0) AS D_FX_COST_DTRB_AMT
                      , NVL(B.CMMT_QTY, 0) AS D_CMMT_QTY
                      , NVL(B.N4TH_CMMT_BSE_COST_RTO, 0) AS D_CMMT_BSE_COST_RTO
                      , NVL(B.N4TH_CMMT_BSE_COST_AMT, 0) AS D_CMMT_BSE_COST_AMT
                      , NVL(B.N4TH_CMMT_ADD_COST_AMT, 0) AS D_CMMT_ADD_COST_AMT
                      , NVL(B.N6TH_ADJ_LANE_FNL_AMT, 0) AS ADJ_LANE_FNL_AMT
                      , NVL(B.N6TH_ADJ_OTR_FNL_AMT, 0) AS ADJ_TRD_OTR_FNL_AMT
                      , NVL(B.N6TH_ADJ_FNL_AMT, 0) AS ADJ_FNL_AMT     
                      , SUM(DECODE('', B.STND_COST_CD, B.N4TH_FX_COST_DTRB_AMT, '', B.N4TH_FX_COST_DTRB_AMT,0)) 
                                OVER (PARTITION BY A.TRD_CD, A.RLANE_CD, A.IOC_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) M_HJS_SLS_AMT
					#else
                      , NVL(B.TS_UC_AMT, 0) AS M_TS_UC_AMT
                      , D.COST_YRMON AS D_COST_YRMON
                      , D.COST_WK AS D_COST_WK
                      , B.TO_TRD_CD AS D_TRD_CD
                      , B.TO_TRD_CD AS DD_TRD_CD
                      , B.TO_RLANE_CD AS D_RLANE_CD
                      , B.TO_IOC_CD AS D_IOC_CD
                      , F.HUL_BND_CD AS D_HUL_BND_CD
                      , B.TO_VSL_CD||B.TO_SKD_VOY_NO||B.TO_SKD_DIR_CD AS D_VVD_CD
                      , B.LOCL_TS_STS_CD AS D_LOCL_TS_STS_CD                    
                      , NVL(C.TS_QTY, 0) AS D_TS_QTY
                      , NVL(C.TS_RTO, 0) AS D_TS_RTO
                      , NVL(B.FX_COST_DTRB_AMT, 0) AS D_FX_COST_DTRB_AMT
                      , NVL(B.CMMT_QTY, 0) AS D_CMMT_QTY
                      , NVL(B.CMMT_BSE_COST_RTO, 0) AS D_CMMT_BSE_COST_RTO
                      , NVL(B.CMMT_BSE_COST_AMT, 0) AS D_CMMT_BSE_COST_AMT
                      , NVL(B.CMMT_ADD_COST_AMT, 0) AS D_CMMT_ADD_COST_AMT
                      , NVL(B.ADJ_LANE_FNL_AMT, 0) AS ADJ_LANE_FNL_AMT
                      , NVL(B.ADJ_TRD_OTR_FNL_AMT, 0) AS ADJ_TRD_OTR_FNL_AMT
                      , NVL(B.ADJ_FNL_AMT, 0) AS ADJ_FNL_AMT     
                      , SUM(DECODE(NVL(@[f_selcost],''), B.STND_COST_CD, B.FX_COST_DTRB_AMT, '', B.FX_COST_DTRB_AMT,0)) 
                                OVER (PARTITION BY A.TRD_CD, A.RLANE_CD, A.IOC_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD) M_HJS_SLS_AMT

					#end

                   FROM MAS_MON_VVD A
                      , MAS_FX_AMT_DTRB B
                      , MAS_LANE_TS_QTY C
                      , MAS_MON_VVD D
                      , MAS_LANE_RGST E
                      , MAS_LANE_RGST F
                  WHERE A.TRD_CD             = B.FM_TRD_CD
                    AND A.RLANE_CD           = B.FM_RLANE_CD
                    AND A.IOC_CD             = B.FM_IOC_CD
                    AND A.VSL_CD             = B.FM_VSL_CD
                    AND A.SKD_VOY_NO         = B.FM_SKD_VOY_NO
                    AND A.DIR_CD             = B.FM_SKD_DIR_CD
                    AND B.FM_TRD_CD          = C.FM_TRD_CD
                    AND B.FM_RLANE_CD        = C.FM_RLANE_CD
                    AND B.FM_IOC_CD          = C.FM_IOC_CD
                    AND B.FM_VSL_CD          = C.FM_VSL_CD
                    AND B.FM_SKD_VOY_NO      = C.FM_SKD_VOY_NO
                    AND B.FM_SKD_DIR_CD      = C.FM_SKD_DIR_CD
                    AND B.TO_TRD_CD          = C.TO_TRD_CD
                    AND B.TO_RLANE_CD        = C.TO_RLANE_CD
                    AND B.TO_IOC_CD          = C.TO_IOC_CD
                    AND B.TO_VSL_CD          = C.TO_VSL_CD
                    AND B.TO_SKD_VOY_NO      = C.TO_SKD_VOY_NO
                    AND B.TO_SKD_DIR_CD      = C.TO_SKD_DIR_CD
                    AND B.TO_TRD_CD          = D.TRD_CD(+)
                    AND B.TO_RLANE_CD        = D.RLANE_CD(+)
                    AND B.TO_IOC_CD          = D.IOC_CD(+)
                    AND B.TO_VSL_CD          = D.VSL_CD(+)
                    AND B.TO_SKD_VOY_NO      = D.SKD_VOY_NO(+)
                    AND B.TO_SKD_DIR_CD      = D.DIR_CD(+)
                    AND A.RLANE_CD           = E.RLANE_CD
                    AND A.DIR_CD             = E.DIR_CD
                    AND A.TRD_CD             = E.TRD_CD
                    AND A.IOC_CD             = E.IOC_CD
                    AND D.RLANE_CD           = F.RLANE_CD(+)
                    AND D.DIR_CD             = F.DIR_CD(+)
                    AND D.TRD_CD             = F.TRD_CD(+)
                    AND D.IOC_CD             = F.IOC_CD(+)
                    AND NVL(A.DELT_FLG, 'N') = 'N'

				#if (${f_seltrade} != '')
                    AND A.TRD_CD 	= @[f_seltrade]
				#end
				#if (${f_selrlane} != '')
                    AND A.RLANE_CD 	= @[f_selrlane]
				#end
				#if (${f_selioc} != '')
                    AND A.IOC_CD 	= @[f_selioc]
				#end
				#if (${f_vsl_cd} != '')
                    AND A.VSL_CD 	= @[f_vsl_cd]
				#end
				#if (${f_skd_voy_no} != '')
                    AND A.SKD_VOY_NO = @[f_skd_voy_no]
				#end
				#if (${f_dir_cd} != '')
                    AND A.DIR_CD 	= @[f_dir_cd]
				#end
				#if (${f_selcost} != '')
                    AND B.STND_COST_CD = @[f_selcost]
				#end
		
				#if (${f_chkprd} == 'M')
		    		#if (${f_fm_mon} != '')
                    AND A.COST_YRMON BETWEEN @[f_year] || @[f_fm_mon] AND @[f_year] || @[f_to_mon]
		    		#else
                    AND A.COST_YRMON like @[f_year] || '%'
		    		#end
				#elseif (${f_chkprd} == 'W')
                    AND A.SLS_YRMON LIKE @[f_year]||'%'
		    		#if (${f_fm_wk} != '')
                    AND A.COST_WK BETWEEN @[f_fm_wk] AND @[f_to_wk]
		    		#end
				#end

                    AND NVL(DTRB_STEP_CD, 'BZC') = 'CMT'
                    AND STND_COST_CD NOT IN ('43102011', '54600000' )
            )
       GROUP BY M_COST_YRMON
              , M_COST_WK
              , M_TRD_CD
              , M_RLANE_CD
              , M_IOC_CD
              , M_HUL_BND_CD
              , M_VVD_CD
              , FNL_HJS_BSA_CAPA
              , D_COST_YRMON
              , D_COST_WK
              , D_TRD_CD
              , DD_TRD_CD
              , D_RLANE_CD
              , D_IOC_CD
              , D_HUL_BND_CD
              , D_VVD_CD
              , D_LOCL_TS_STS_CD
        )

ORDER BY M_TRD_CD
      , M_RLANE_CD
      , M_IOC_CD
      , M_HUL_BND_CD
      , M_VVD_CD
      , RNUM

			]]></sql>
			<params>
				<param name="f_selcost" type="12" value="" out="N"/>
				<param name="f_seltrade" type="12" value="" out="N"/>
				<param name="f_selrlane" type="12" value="" out="N"/>
				<param name="f_selioc" type="12" value="" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
