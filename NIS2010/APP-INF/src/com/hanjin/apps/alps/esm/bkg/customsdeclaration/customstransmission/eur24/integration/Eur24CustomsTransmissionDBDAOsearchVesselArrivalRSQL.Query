<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="Eur24CustomsTransmissionDBDAOsearchVesselArrivalRSQL">
			<desc><![CDATA[세관에 신고할 대상 Vessel Arrival 정보 데이터를 조회한다.

return VO : Eur24VesselArrivalVO 만듬]]></desc>
			<sql><![CDATA[
SELECT 'BKG'||TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') DOC_NO,
  EUR.CVY_REF_NO CALL_REF_NO,
(SELECT B.MSG_ACPT_REF_NO
   FROM BKG_CSTMS_ADV_EUR_SND A, BKG_CSTMS_ADV_EUR_RCV B
  WHERE A.EUR_EDI_MSG_TP_ID = '347'
    AND A.VSL_CD = SUBSTR(@[vvd], 1, 4)
    AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
    AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
    AND A.MSG_SND_NO = B.MSG_RCV_NO
    AND B.EUR_EDI_MSG_TP_ID = 'A'
    --AND B.EUR_CSTMS_ACK_CD = '348'
    AND B.ACK_RCV_STS_CD = 'A'
    AND B.MSG_ACPT_REF_NO IS NOT NULL
    AND ROWNUM = 1
) AS CUSTOMS_REF,
  EUR.VSL_CD,
  EUR.SKD_VOY_NO,
  EUR.SKD_DIR_CD,
 
#if (${p_type} != 'FI') 
  EUR.VSL_CD||EUR.SKD_VOY_NO||EUR.SKD_DIR_CD||'.'||(
    SELECT TRIM(TO_CHAR(COUNT(VSL_CD) + 1, '000'))
    FROM BKG_CSTMS_ADV_EUR_SND
    WHERE VSL_CD||SKD_VOY_NO||SKD_DIR_CD = @[vvd]
      AND EUR_EDI_MSG_TP_ID = 'ARN')||'.3470' TRADE_REF_NO,
#else 
  EUR.VSL_CD||EUR.SKD_VOY_NO||EUR.SKD_DIR_CD||'.'||(
    SELECT TRIM(TO_CHAR(COUNT(VSL_CD) + 1, '000'))
    FROM BKG_CSTMS_ADV_EUR_SND
    WHERE VSL_CD||SKD_VOY_NO||SKD_DIR_CD = @[vvd]
      AND EUR_EDI_MSG_TP_ID = '347')||'.347' TRADE_REF_NO,
#end

  '1' PURPOSE_OF_CALL,
  EUR.VSL_CD||EUR.SKD_VOY_NO||EUR.SKD_DIR_CD CRN,
  '1' TRANS_MODE,
  '8' TRANS_TYPE_CD,
  VSL.LLOYD_NO LLOYD_NO,
  VSL.VSL_ENG_NM VSL_NAME,
  EUR.N1ST_CLPT_CD ORIGINAL_PORT,
  SUBSTR(EUR.CSTMS_PORT_CD, 1, 2) TRANS_NATION,
  
  CASE WHEN XXX.CSTMS_ESTM_ARR_DT IS NOT NULL
       THEN DECODE(VSL.CRR_CD, 'UAC', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', 'HPL', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', 'MSK', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', 'EGL', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDDHH24')||'0000')
	   ELSE DECODE(VSL.CRR_CD, 'UAC', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', 'HPL', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', 'MSK', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', 'EGL', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDDHH24')||'0000')
  END AS ETA,
  
  CASE WHEN XXX.CSTMS_ESTM_ARR_DT IS NOT NULL
       THEN DECODE(VSL.CRR_CD, 'UAC', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', 'HPL', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', 'MSK', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', 'EGL', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDD')|| '120000', TO_CHAR(XXX.CSTMS_ESTM_ARR_DT, 'YYYYMMDDHH24')||'0000')
	   ELSE 
       		CASE WHEN VSK.SLAN_CD = 'TLS'
            	 THEN
                	CASE WHEN TO_CHAR(VSK.INIT_ETA_DT,'D') = '6'
                    	 THEN
                        	TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '050000'
                     	 ELSE   
                        	TO_CHAR(TRUNC(VSK.INIT_ETA_DT, 'IW') + 4, 'YYYYMMDD') || '050000' -- 월요일 기준
                	END
                    
                 WHEN VSK.SLAN_CD = 'RFS' AND VSK.SKD_DIR_CD = 'N'
                 THEN
                      CASE WHEN TO_CHAR(VSK.INIT_ETA_DT,'D') = '5'
                           THEN TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '040000'
                           ELSE TO_CHAR(TRUNC(VSK.INIT_ETA_DT, 'D') + 4, 'YYYYMMDD') || '040000' -- 일요일 기준
                      END
                 
                 WHEN VSK.SLAN_CD = 'RFS' AND VSK.SKD_DIR_CD = 'S'
                 THEN
                      CASE WHEN TO_CHAR(VSK.INIT_ETA_DT,'D') = '1'
                           THEN TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '040000'
                           ELSE TO_CHAR(TRUNC(VSK.INIT_ETA_DT, 'D'), 'YYYYMMDD') || '040000'
                      END

                 WHEN VSK.SLAN_CD = 'WA2'
                 THEN
                      CASE WHEN TO_CHAR(VSK.INIT_ETA_DT,'D') = '6'
                           THEN TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000'
                           ELSE TO_CHAR(TRUNC(VSK.INIT_ETA_DT, 'IW') + 4, 'YYYYMMDD') || '120000'
                      END
                      
                 WHEN VSK.SLAN_CD = 'WAF'
                 THEN
                      CASE WHEN TO_CHAR(VSK.INIT_ETA_DT,'D') = '3'
                           THEN TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000'
                           ELSE TO_CHAR(TRUNC(VSK.INIT_ETA_DT, 'IW') + 1, 'YYYYMMDD') || '120000'
                      END
                 
                 ELSE 
                	DECODE(VSL.CRR_CD, 'UAC', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', 'HPL', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', 'MSK', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', 'EGL', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')|| '120000', TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDDHH24')||'0000')
        	END
  END AS ETA_EU,

--TO_CHAR(VSK.INIT_ETA_DT, 'YYYYMMDD')||'000000' ETA_EU,
--2010-12-09 수정
  TO_CHAR(NVL(ACT.ACT_ARR_DT, VSK.VPS_ETA_DT), 'YYYYMMDD')||'000000' ATA,
  TO_CHAR(EUR.ETD_DT, 'YYYYMMDDHH24MISS') ETD,
  TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC ('KRPUS', SYSDATE, 'FIKTK'), 'YYYYMMDDHH24MISS') AS DTM_PRESENTATION,

  (SELECT A.EUR_CSTMS_OFC_ID
    FROM BKG_CSTMS_EUR_CD_STUP A
    WHERE A.PORT_CD = EUR.CSTMS_PORT_CD
      AND DECODE(A.TML_CD, 'ALL' , EUR.CSTMS_YD_CD, A.TML_CD)= EUR.CSTMS_YD_CD
      AND ROWNUM=1) FIRST_OFFICE,

  (SELECT D.EUR_CSTMS_OFC_ID
     FROM ( SELECT DISTINCT CSTMS_PORT_CD, CSTMS_YD_CD
              FROM BKG_CSTMS_EUR_BL A, VSK_VSL_PORT_SKD B
             WHERE 1=1
               AND A.VSL_CD= B.VSL_CD(+)
               AND A.SKD_VOY_NO = B.SKD_VOY_NO(+)
               AND A.SKD_DIR_CD = B.SKD_DIR_CD(+)
               AND A.CSTMS_PORT_CD = B.VPS_PORT_CD(+) 
               AND NVL(A.CSTMS_CLPT_IND_SEQ, '1') = B.CLPT_IND_SEQ(+)
               AND A.VSL_CD = SUBSTR(@[vvd], 1, 4)
               AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
               AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1) 
          ) C
        , BKG_CSTMS_EUR_CD_STUP D
    WHERE 1=1
      AND D.PORT_CD = C.CSTMS_PORT_CD
      AND DECODE(D.TML_CD, 'ALL' , C.CSTMS_YD_CD, D.TML_CD) = C.CSTMS_YD_CD
      AND ROWNUM=1 
  ) AS FIRST_OFFICE_ENS ,


  'NLRTM' POSITION_OF_SHIP,
  EUR.LST_CLPT_CD PREV_PORT,
  DECODE(SUBSTR(EUR.N1ST_CLPT_CD, 1, 2), 'NL', 'NLRTM', '') ARRIVAL_PORT,
  EUR.NXT_CLPT_CD NEXT_PORT,
  VSL.RGST_NO CERT_REG_NO,
  TO_CHAR(VSL.RGST_DT, 'YYYYMMDD') CERT_REG_DT,
  VSL.RGST_PORT_CD CERT_REG_LOC,
  EUR.GRS_RGST_TONG_WGT GROSS_TON,
  EUR.NET_RGST_TONG_WGT NET_TON,
  VSL.CRW_KNT NO_OF_CREW,
  '' NO_OF_PASSENGER,


#if (${p_type} != 'FI')
	'' AS ITEM_COUNT_TOTAL,
	'' AS PKG_COUNT_TOTAL,
#else 
  (SELECT COUNT(1)
     FROM BKG_CSTMS_EUR_BL EB, BKG_CSTMS_EUR_CNTR_MF CM, BKG_VVD BV, BKG_BOOKING BK
    WHERE 1=1
      AND EB.VSL_CD = SUBSTR(@[vvd], 1, 4)
      AND EB.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
      AND EB.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
      AND EB.POD_CD = @[cstms_port_cd]

      AND EB.VSL_CD = CM.VSL_CD
      AND EB.SKD_VOY_NO = CM.SKD_VOY_NO
      AND EB.SKD_DIR_CD = CM.SKD_DIR_CD
      AND EB.BL_NO = CM.BL_NO
      AND EB.CSTMS_PORT_CD = CM.CSTMS_PORT_CD
      
      AND EB.BL_NO = BK.BKG_NO
      AND BK.BKG_NO = BV.BKG_NO
      AND EB.VSL_CD = BV.VSL_CD
      AND EB.SKD_VOY_NO = BV.SKD_VOY_NO
      AND EB.SKD_DIR_CD = BV.SKD_DIR_CD
      AND EB.POD_CD = BV.POD_CD
      AND BK.BKG_STS_CD <> 'X'
      AND EB.MVMT_REF_NO IS NOT NULL
      ) AS ITEM_COUNT_TOTAL,


  (SELECT SUM(EB.PCK_QTY) 
     FROM BKG_CSTMS_EUR_BL EB, BKG_VVD BV, BKG_BOOKING BK
    WHERE 1=1 
      AND EB.VSL_CD = SUBSTR(@[vvd], 1, 4)
      AND EB.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
      AND EB.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)  
      AND EB.POD_CD = @[cstms_port_cd] 
      
      AND EB.BL_NO = BK.BKG_NO
      AND BK.BKG_NO = BV.BKG_NO
      AND EB.VSL_CD = BV.VSL_CD
      AND EB.SKD_VOY_NO = BV.SKD_VOY_NO
      AND EB.SKD_DIR_CD = BV.SKD_DIR_CD
      AND EB.POD_CD = BV.POD_CD
       
      AND BK.BKG_STS_CD <> 'X'

  ) AS PKG_COUNT_TOTAL,
#end

  '' AS UNLOAD_IND,
  EUR.CSTMS_PORT_CD AS UNLOAD_LOC,

  EUR.CSTMS_PORT_CD,
  STUP.CNTC_NM PT_CON_NAME,
  STUP.CNTC_PSN_NM PT_CON_CMPY,
  STUP.CNTC_EML PT_EM_NO,
  STUP.CNTC_PHN_NO PT_TEL_NO,
  STUP.CNTC_FAX_NO PT_FAX_NO
FROM MDM_VSL_CNTR VSL,
  BKG_CSTMS_EUR_VSL EUR,
  VSK_VSL_PORT_SKD VSK,
  VSK_ACT_PORT_SKD ACT,
  (
    SELECT CNTC_NM,
      CNTC_PSN_NM,
      CNTC_EML,
      CNTC_PHN_NO,
      CNTC_FAX_NO
    FROM BKG_CSTMS_EUR_CD_STUP A,
      BKG_CSTMS_EUR_VSL B
    WHERE B.CSTMS_PORT_CD = @[cstms_port_cd]
      AND B.CSTMS_PORT_CD = A.PORT_CD
      AND B.VSL_CD = SUBSTR(@[vvd], 1, 4)
      AND B.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
      AND B.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
      AND A.TML_CD IN ('ALL', B.CSTMS_YD_CD )
      AND ROWNUM = 1 ) STUP
      ,(SELECT T1.CSTMS_ESTM_ARR_DT
          FROM ( SELECT K.CSTMS_ESTM_ARR_DT
                   FROM BKG_CSTMS_EUR_BL K 
                  WHERE K.CSTMS_ESTM_ARR_DT IS NOT NULL
                    AND K.VSL_CD   = SUBSTR(@[vvd], 1, 4)
                    AND K.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
                    AND K.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
                    AND K.CSTMS_PORT_CD = @[cstms_port_cd]
                    AND ROWNUM = 1
               ) T1 RIGHT OUTER JOIN dual
            ON T1.CSTMS_ESTM_ARR_DT IS NOT NULL
      ) XXX
WHERE EUR.VSL_CD = SUBSTR(@[vvd], 1, 4)
  AND EUR.VSL_CD = VSL.VSL_CD
  AND EUR.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
  AND EUR.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
  AND EUR.CSTMS_PORT_CD = @[cstms_port_cd]
  AND EUR.VSL_CD = VSK.VSL_CD(+)
  AND EUR.SKD_VOY_NO = VSK.SKD_VOY_NO(+)
  AND EUR.SKD_DIR_CD = VSK.SKD_DIR_CD(+)
  AND EUR.CSTMS_PORT_CD = VSK.VPS_PORT_CD(+)
  AND VSK.CLPT_IND_SEQ = NVL(@[cstms_port_clpt_ind_seq],'1')
  AND VSK.VSL_CD = ACT.VSL_CD(+)
  AND VSK.SKD_VOY_NO = ACT.SKD_VOY_NO(+)
  AND VSK.SKD_DIR_CD = ACT.SKD_DIR_CD(+)
  AND VSK.VPS_PORT_CD = ACT.VPS_PORT_CD(+)
  AND VSK.CLPT_IND_SEQ = ACT.CLPT_IND_SEQ(+)			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="cstms_port_cd" type="12" value="" out="N"/>
				<param name="cstms_port_clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
