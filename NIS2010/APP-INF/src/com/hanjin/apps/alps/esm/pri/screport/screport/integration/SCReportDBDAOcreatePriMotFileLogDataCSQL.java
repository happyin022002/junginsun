/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SCReportDBDAOcreatePriMotFileLogDataCSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.01
*@LastModifier : 
*@LastVersion : 1.0
* 2016.08.01 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.screport.screport.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SCReportDBDAOcreatePriMotFileLogDataCSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 일자별 대상 BKG 을 가져와 해당 일자의 데이터를 생성한다.
	  * -  중복 제거 이전 
	  * 
	  * PRI_MOT_FILE_RT_LOG
	  * PRI_MOT_FILE_RT_LOG_DTL
	  * * 2013.08.29 송호진 [CHM-201431591] MOT Filing 양식 변경 - O.EIC, O.SLF 추가
	  * * 2016.01.13 [CHM-201539514] SSE Agreement Filing 상 Surcharge 추가 요청 Request By SELCMA / Kim GyungUk -- OBS, BCC, BLR, LBP, CTC, LSI 추가
	  * * 2016.01.27 [CHM-201639832] SSE Agreement Filing 상 Data download 기준일 변경 Reqyest by SELCMA / Kim GyungUk
	  * * 2016.08.01 [CHM-201642687] MOT/SSE Filing Report > Filing List Inquiry (Surcharge 추가 요청) / Kim GyungUk
	  *   
	  * </pre>
	  */
	public SCReportDBDAOcreatePriMotFileLogDataCSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("test_exec_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("exec_dt",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.screport.screport.integration").append("\n"); 
		query.append("FileName : SCReportDBDAOcreatePriMotFileLogDataCSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("INSERT ALL " ).append("\n"); 
		query.append("WHEN    SCG_SEQ = 1 THEN" ).append("\n"); 
		query.append("INTO PRI_MOT_FILE_RT_LOG " ).append("\n"); 
		query.append("( BAT_EXE_DT, MOT_FILE_RT_LOG_SEQ, BKG_NO, BKG_SRC_TP_CD, CTRT_NO, CTRT_HLD_NM, ACT_CUST_NM, MOT_FILE_LANE_CD, MOT_FILE_ORG_CD, MOT_FILE_DEST_CD, MOT_FILE_CNTR_TP_CD, " ).append("\n"); 
		query.append("MOT_FILE_CMDT_TP_CD, MOT_FILE_CNTR_SZ_CD, MQC_QTY, MOT_FILE_RT_AMT, CTRT_EFF_DT, CTRT_EXP_DT, MOT_FILE_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT, " ).append("\n"); 
		query.append("SHPR_CNT_CD, SHPR_SEQ, BKG_DIR_CALL_FLG, MOT_FILE_TS_PORT_CD, MOT_FILE_PRE_RLY_PORT_CD, MOT_FILE_PST_RLY_PORT_CD, MOT_FILE_IB_PORT_CD, MOT_FILE_DE_TERM_CD )" ).append("\n"); 
		query.append("VALUES ( BAT_EXE_DT, MOT_FILE_RT_SEQ, BKG_NO, IND, CTRT_NO, CTRT_HLDR, ACT_CUST, MOT_FILE_LANE_CD, MOT_FILE_OLOC_CD, MOT_FILE_DLOC_CD, MF_RAT_UT_CD, " ).append("\n"); 
		query.append("BKG_CGO_CATE, SZ, MQC_QTY, OFT_AMT, CTRT_EFF_DT, CTRT_EXP_DT, NULL, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE, SHPR_CNT_CD, SHPR_SEQ, BKG_DIR_CALL_FLG, MOT_FILE_TS_PORT_CD," ).append("\n"); 
		query.append("MOT_FILE_PRE_RLY_PORT_CD, MOT_FILE_PST_RLY_PORT_CD, MOT_FILE_IB_PORT_CD, MOT_FILE_DE_TERM_CD  )" ).append("\n"); 
		query.append("WHEN    SCG_SEQ > 1 THEN" ).append("\n"); 
		query.append("INTO PRI_MOT_FILE_RT_LOG_DTL" ).append("\n"); 
		query.append("( BAT_EXE_DT, MOT_FILE_RT_LOG_SEQ, SCG_SEQ, CHG_CD, RAT_UT_CD, MOT_FILE_CHG_AMT, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT )" ).append("\n"); 
		query.append("VALUES ( BAT_EXE_DT, MOT_FILE_RT_SEQ, SCG_SEQ - 1, CHG_CD, RAT_UT_CD, RT_AMT, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WITH BKG_NO_LIST AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		    SELECT 'V' AS IND, X.BKG_NO FROM (  " ).append("\n"); 
		query.append("		       SELECT  C.VPS_ETD_DT AS VPS_ETD_DT" ).append("\n"); 
		query.append("		             , A.BKG_NO" ).append("\n"); 
		query.append("		             , B.VSL_PRE_PST_CD AS B_VSL_PRE_PST_CD" ).append("\n"); 
		query.append("		             , B.VSL_SEQ        AS B_VSL_SEQ" ).append("\n"); 
		query.append("		             , D.VSL_PRE_PST_CD AS D_VSL_PRE_PST_CD" ).append("\n"); 
		query.append("		             , D.VSL_SEQ        AS D_VSL_SEQ" ).append("\n"); 
		query.append("		             , ROW_NUMBER() OVER(PARTITION BY D.BKG_NO" ).append("\n"); 
		query.append("		                 ORDER BY D.VSL_PRE_PST_CD, D.VSL_SEQ) AS ROW_RANK" ).append("\n"); 
		query.append("		          FROM BKG_BOOKING A" ).append("\n"); 
		query.append("		             , BKG_VVD B" ).append("\n"); 
		query.append("		             , VSK_VSL_PORT_SKD C" ).append("\n"); 
		query.append("		             , BKG_VVD D" ).append("\n"); 
		query.append("		             , PRI_MOT_FILE_LOC_PPT OL -- 파일링 대상 Origin인지 체크" ).append("\n"); 
		query.append("		             , PRI_MOT_FILE_LOC_PPT DL -- 파일링 대상 Dest 인지 체크" ).append("\n"); 
		query.append("		         WHERE 1 = 1" ).append("\n"); 
		query.append("		           AND A.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("		           AND B.VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("		           AND B.SKD_VOY_NO = C.SKD_VOY_NO" ).append("\n"); 
		query.append("		           AND B.SKD_DIR_CD = C.SKD_DIR_CD" ).append("\n"); 
		query.append("		           AND B.POL_CD = C.VPS_PORT_CD" ).append("\n"); 
		query.append("		           AND B.POL_CLPT_IND_SEQ = C.CLPT_IND_SEQ" ).append("\n"); 
		query.append("		           AND B.POL_YD_CD = C.YD_CD" ).append("\n"); 
		query.append("		           AND A.RCV_TERM_CD = 'Y'" ).append("\n"); 
		query.append("		           AND A.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("		           AND  C.VPS_ETD_DT BETWEEN TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 1 AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 1 + 0.99999 -- 0.99999 는 23시 59분 59초를 의미 " ).append("\n"); 
		query.append("		           AND B.BKG_NO = D.BKG_NO" ).append("\n"); 
		query.append("		           AND OL.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("		           AND OL.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("		           AND OL.LOC_CD = A.POR_CD" ).append("\n"); 
		query.append("		           AND DL.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("		           AND DL.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("		           AND DL.LOC_CD = A.DEL_CD" ).append("\n"); 
		query.append("		    ) X" ).append("\n"); 
		query.append("		    WHERE ROW_RANK = 1" ).append("\n"); 
		query.append("		     AND B_VSL_PRE_PST_CD = D_VSL_PRE_PST_CD" ).append("\n"); 
		query.append("		     AND B_VSL_SEQ  = D_VSL_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("            SELECT  /*+ ORDERED USE_NL */" ).append("\n"); 
		query.append("                    'C' AS IND, A.BKG_NO" ).append("\n"); 
		query.append("            FROM    BKG_CORRECTION A" ).append("\n"); 
		query.append("                ,   BKG_BOOKING B" ).append("\n"); 
		query.append("                ,   PRI_MOT_FILE_LOC_PPT OL" ).append("\n"); 
		query.append("                ,   PRI_MOT_FILE_LOC_PPT DL        " ).append("\n"); 
		query.append("            WHERE   A.CORR_NO NOT   IN ( '0000000001', 'TMP0000001' )" ).append("\n"); 
		query.append("            AND     A.CORR_CXL_FLG  = 'N'" ).append("\n"); 
		query.append("            AND     A.CORR_GDT      BETWEEN TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) - 1 + 9/24 AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 9/24        " ).append("\n"); 
		query.append("            AND     A.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            AND     B.RCV_TERM_CD = 'Y'" ).append("\n"); 
		query.append("            --AND     B.DE_TERM_CD = 'Y'" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            AND     OL.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("            AND     OL.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("            AND     OL.LOC_CD = B.POR_CD" ).append("\n"); 
		query.append("            AND     DL.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("            AND     DL.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("            AND     DL.LOC_CD = B.DEL_CD" ).append("\n"); 
		query.append("            AND     B.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("            AND     B.BKG_CGO_TP_CD <> 'P'" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("            SELECT  /*+ ORDERED USE_NL */" ).append("\n"); 
		query.append("                    'B' AS IND, B.BKG_NO" ).append("\n"); 
		query.append("            FROM    BKG_BL_DOC D" ).append("\n"); 
		query.append("                ,   BKG_BOOKING B" ).append("\n"); 
		query.append("                ,   PRI_MOT_FILE_LOC_PPT OL" ).append("\n"); 
		query.append("                ,   PRI_MOT_FILE_LOC_PPT DL" ).append("\n"); 
		query.append("            WHERE   D.BDR_DT BETWEEN TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) - (1 + 0.99999) AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 1 -- 0.99999 는 23시 59분 59초를 의미 " ).append("\n"); 
		query.append("            AND     D.BKG_NO = B.BKG_NO" ).append("\n"); 
		query.append("            AND     D.BDR_DT BETWEEN GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL', TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) - 1, B.POL_CD ) AND GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL', TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ), B.POL_CD ) " ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            AND     B.RCV_TERM_CD = 'Y'" ).append("\n"); 
		query.append("            --AND     B.DE_TERM_CD = 'Y'" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            AND     OL.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("            AND     OL.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("            AND     OL.LOC_CD = B.POR_CD" ).append("\n"); 
		query.append("            AND     DL.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("            AND     DL.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("            AND     DL.LOC_CD = B.DEL_CD" ).append("\n"); 
		query.append("            AND     B.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("            AND     B.BKG_CGO_TP_CD <> 'P'" ).append("\n"); 
		query.append("         -- AND     ROWNUM < 5" ).append("\n"); 
		query.append("   " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append(") , BKG_INFO_LIST AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT  BL.IND" ).append("\n"); 
		query.append("        ,   BL.BKG_NO" ).append("\n"); 
		query.append("        ,   DECODE ( BR.BKG_CTRT_TP_CD, 'R', BK.RFA_NO, 'S', BK.SC_NO, 'T', BK.TAA_NO ) AS CTRT_NO" ).append("\n"); 
		query.append("        ,   BR.RT_APLY_DT" ).append("\n"); 
		query.append("        ,   BK.POR_CD" ).append("\n"); 
		query.append("        ,   BK.POD_CD" ).append("\n"); 
		query.append("        ,   BK.DEL_CD" ).append("\n"); 
		query.append("        ,   BK.DE_TERM_CD" ).append("\n"); 
		query.append("        ,   BK.SVC_SCP_CD AS BKG_SVC_SCP_CD" ).append("\n"); 
		query.append("        ,   CASE WHEN MC.REP_IMDG_LVL_CD = '5' THEN 'CH'" ).append("\n"); 
		query.append("                 WHEN MC.REP_IMDG_LVL_CD IN ( '2','3','4','6','8','9','P' ) THEN 'HZ'" ).append("\n"); 
		query.append("                 ELSE 'GC' END AS BKG_CGO_CATE" ).append("\n"); 
		query.append("        ,   BC.CUST_CNT_CD AS SHPR_CNT_CD" ).append("\n"); 
		query.append("        ,   BC.CUST_SEQ AS SHPR_SEQ" ).append("\n"); 
		query.append("        ,   BC.CUST_NM   AS CTRT_HLDR     " ).append("\n"); 
		query.append("        ,   AC.CUST_LGL_ENG_NM AS ACT_CUST" ).append("\n"); 
		query.append("        ,   CASE WHEN BK.PRE_RLY_PORT_CD IS NOT NULL OR BK.PST_RLY_PORT_CD IS NOT NULL THEN 'N' ELSE 'Y' END AS BKG_DIR_CALL_FLG       " ).append("\n"); 
		query.append("        ,   '' AS BKG_TS_PORT_CD" ).append("\n"); 
		query.append("        ,   BK.PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("        ,   BK.PST_RLY_PORT_CD                 " ).append("\n"); 
		query.append("    FROM    BKG_NO_LIST BL" ).append("\n"); 
		query.append("        ,   BKG_BOOKING BK" ).append("\n"); 
		query.append("        ,   BKG_RATE BR" ).append("\n"); 
		query.append("        ,   BKG_CUSTOMER BC" ).append("\n"); 
		query.append("        ,   MDM_COMMODITY MC" ).append("\n"); 
		query.append("        ,   MDM_CUSTOMER  AC" ).append("\n"); 
		query.append("    WHERE   BL.BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("    AND     BL.BKG_NO = BR.BKG_NO(+)" ).append("\n"); 
		query.append("    AND     BL.BKG_NO = BC.BKG_NO(+)" ).append("\n"); 
		query.append("    AND     BR.BKG_CTRT_TP_CD(+) IS NOT NULL" ).append("\n"); 
		query.append("    AND     BC.BKG_CUST_TP_CD(+) = 'S'        " ).append("\n"); 
		query.append("    AND     BK.CMDT_CD = MC.CMDT_CD (+)    " ).append("\n"); 
		query.append("    AND     BK.AGMT_ACT_CNT_CD = AC.CUST_CNT_CD(+)" ).append("\n"); 
		query.append("    AND     BK.AGMT_ACT_CUST_SEQ = AC.CUST_SEQ(+)        " ).append("\n"); 
		query.append("    AND " ).append("\n"); 
		query.append("        (   " ).append("\n"); 
		query.append("                ( BR.BKG_CTRT_TP_CD = 'R' AND EXISTS ( SELECT 1 FROM PRI_RP_HDR  X WHERE X.RFA_NO = BK.RFA_NO AND ROWNUM = 1 ) )" ).append("\n"); 
		query.append("            OR  ( BR.BKG_CTRT_TP_CD = 'S' AND EXISTS ( SELECT 1 FROM PRI_SP_HDR  X WHERE X.SC_NO  = BK.SC_NO  AND ROWNUM = 1 ) )" ).append("\n"); 
		query.append("            OR  ( BR.BKG_CTRT_TP_CD = 'T' AND EXISTS ( SELECT 1 FROM PRI_TAA_HDR X WHERE X.TAA_NO = BK.TAA_NO AND ROWNUM = 1 ) )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("),  CTRT_INFO_LIST AS (" ).append("\n"); 
		query.append("  " ).append("\n"); 
		query.append("    SELECT  DISTINCT SS.CTRT_NO, SS.RT_APLY_DT, SS.PROP_NO, SS.AMDT_SEQ, SS.SVC_SCP_CD" ).append("\n"); 
		query.append("        ,   SD.CTRT_EFF_DT" ).append("\n"); 
		query.append("        ,   SD.CTRT_EXP_DT" ).append("\n"); 
		query.append("        ,   SM.CNTR_LOD_UT_CD AS MQC_UT" ).append("\n"); 
		query.append("        ,   SM.FNL_MQC_QTY AS MQC_QTY" ).append("\n"); 
		query.append("    FROM    " ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("                SELECT  DISTINCT" ).append("\n"); 
		query.append("                        A.CTRT_NO" ).append("\n"); 
		query.append("                   ,    A.RT_APLY_DT" ).append("\n"); 
		query.append("                   ,    C.PROP_NO" ).append("\n"); 
		query.append("                   ,    C.AMDT_SEQ" ).append("\n"); 
		query.append("                   ,    A.BKG_SVC_SCP_CD AS SVC_SCP_CD" ).append("\n"); 
		query.append("                FROM    BKG_INFO_LIST A" ).append("\n"); 
		query.append("                    ,   PRI_SP_HDR B" ).append("\n"); 
		query.append("                    ,   PRI_SP_MN C   " ).append("\n"); 
		query.append("                WHERE   LENGTH ( A.CTRT_NO ) <= 9 " ).append("\n"); 
		query.append("                AND     A.CTRT_NO = B.SC_NO" ).append("\n"); 
		query.append("                AND     B.PROP_NO = C.PROP_NO" ).append("\n"); 
		query.append("                AND     C.AMDT_SEQ = ( SELECT MAX ( M.AMDT_SEQ ) FROM PRI_SP_MN M WHERE M.PROP_NO = C.PROP_NO AND TO_DATE ( @[exec_dt],'YYYY-MM-DD' ) BETWEEN M.EFF_DT AND M.EXP_DT AND M.PROP_STS_CD = 'F' )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            ) SS                       " ).append("\n"); 
		query.append("        ,   PRI_SP_DUR SD" ).append("\n"); 
		query.append("        ,   PRI_SP_MQC SM" ).append("\n"); 
		query.append("    WHERE   SS.PROP_NO = SD.PROP_NO" ).append("\n"); 
		query.append("    AND     SS.AMDT_SEQ = SD.AMDT_SEQ" ).append("\n"); 
		query.append("    AND     SS.PROP_NO = SM.PROP_NO" ).append("\n"); 
		query.append("    AND     SS.AMDT_SEQ = SM.AMDT_SEQ" ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    SELECT  DISTINCT RS.CTRT_NO, RS.RT_APLY_DT, RS.PROP_NO, RS.AMDT_SEQ, RS.SVC_SCP_CD" ).append("\n"); 
		query.append("        ,   SD.CTRT_EFF_DT" ).append("\n"); 
		query.append("        ,   SD.CTRT_EXP_DT" ).append("\n"); 
		query.append("        ,   NULL" ).append("\n"); 
		query.append("        ,   NULL" ).append("\n"); 
		query.append("    FROM    " ).append("\n"); 
		query.append("            (           " ).append("\n"); 
		query.append("                SELECT  DISTINCT" ).append("\n"); 
		query.append("                        A.CTRT_NO" ).append("\n"); 
		query.append("                    ,   A.RT_APLY_DT" ).append("\n"); 
		query.append("                    ,   C.PROP_NO" ).append("\n"); 
		query.append("                    ,   C.AMDT_SEQ" ).append("\n"); 
		query.append("                    ,   A.BKG_SVC_SCP_CD AS SVC_SCP_CD" ).append("\n"); 
		query.append("                FROM    BKG_INFO_LIST A" ).append("\n"); 
		query.append("                    ,   PRI_RP_HDR B" ).append("\n"); 
		query.append("                    ,   PRI_RP_MN C   " ).append("\n"); 
		query.append("                WHERE   LENGTH ( A.CTRT_NO ) >= 10" ).append("\n"); 
		query.append("                AND     SUBSTR ( A.CTRT_NO, 6, 1 ) = 'A'" ).append("\n"); 
		query.append("                AND     A.CTRT_NO = B.RFA_NO" ).append("\n"); 
		query.append("                AND     B.PROP_NO = C.PROP_NO" ).append("\n"); 
		query.append("                AND     C.AMDT_SEQ = ( SELECT MAX ( M.AMDT_SEQ ) FROM PRI_RP_MN M WHERE M.PROP_NO = C.PROP_NO AND TO_DATE ( @[exec_dt],'YYYY-MM-DD' ) BETWEEN M.EFF_DT AND M.EXP_DT AND M.PROP_STS_CD = 'A' )" ).append("\n"); 
		query.append("            ) RS                       " ).append("\n"); 
		query.append("        ,   PRI_RP_MN  RM" ).append("\n"); 
		query.append("        ,   PRI_RP_DUR SD" ).append("\n"); 
		query.append("    WHERE   RS.PROP_NO = RM.PROP_NO" ).append("\n"); 
		query.append("    AND     RS.AMDT_SEQ = RM.AMDT_SEQ" ).append("\n"); 
		query.append("    AND     RS.PROP_NO = SD.PROP_NO" ).append("\n"); 
		query.append("    AND     RS.AMDT_SEQ = SD.AMDT_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    SELECT  DISTINCT TS.CTRT_NO, TS.RT_APLY_DT, TS.TAA_PROP_NO, TS.AMDT_SEQ, TS.SVC_SCP_CD" ).append("\n"); 
		query.append("        ,   TM.EFF_DT AS CTRT_EFF_DT" ).append("\n"); 
		query.append("        ,   TM.EXP_DT AS CTRT_EXP_DT" ).append("\n"); 
		query.append("        ,   NULL" ).append("\n"); 
		query.append("        ,   NULL" ).append("\n"); 
		query.append("    FROM    PRI_TAA_MN      TM" ).append("\n"); 
		query.append("        ,   ( " ).append("\n"); 
		query.append("                SELECT  DISTINCT" ).append("\n"); 
		query.append("                        A.CTRT_NO" ).append("\n"); 
		query.append("                   ,    A.RT_APLY_DT" ).append("\n"); 
		query.append("                   ,    C.TAA_PROP_NO" ).append("\n"); 
		query.append("                   ,    C.AMDT_SEQ" ).append("\n"); 
		query.append("                   ,    C.SVC_SCP_CD " ).append("\n"); 
		query.append("                FROM    BKG_INFO_LIST A" ).append("\n"); 
		query.append("                    ,   PRI_TAA_HDR B" ).append("\n"); 
		query.append("                    ,   PRI_TAA_MN C   " ).append("\n"); 
		query.append("                WHERE   LENGTH ( A.CTRT_NO ) >= 10" ).append("\n"); 
		query.append("                AND     SUBSTR ( A.CTRT_NO, 6, 1 ) = 'T'" ).append("\n"); 
		query.append("                AND     A.CTRT_NO = B.TAA_NO" ).append("\n"); 
		query.append("                AND     B.TAA_PROP_NO = C.TAA_PROP_NO" ).append("\n"); 
		query.append("                AND     C.AMDT_SEQ = ( SELECT MAX ( M.AMDT_SEQ ) FROM PRI_TAA_MN M WHERE M.TAA_PROP_NO = C.TAA_PROP_NO AND TO_DATE ( @[exec_dt],'YYYY-MM-DD' ) BETWEEN M.EFF_DT AND M.EXP_DT AND M.CFM_FLG = 'Y' )" ).append("\n"); 
		query.append("                AND     C.SVC_SCP_CD = A.BKG_SVC_SCP_CD" ).append("\n"); 
		query.append("            ) TS" ).append("\n"); 
		query.append("    WHERE   TS.TAA_PROP_NO = TM.TAA_PROP_NO" ).append("\n"); 
		query.append("    AND     TS.AMDT_SEQ = TM.AMDT_SEQ" ).append("\n"); 
		query.append("    AND     TS.SVC_SCP_CD = TM.SVC_SCP_CD" ).append("\n"); 
		query.append("   " ).append("\n"); 
		query.append(") , BKG_TPSZ  AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT  " ).append("\n"); 
		query.append("            T1.BKG_NO" ).append("\n"); 
		query.append("        ,   T1.CNTR_TPSZ_KNT" ).append("\n"); 
		query.append("        ,   T1.TTL_CNTR_QTY" ).append("\n"); 
		query.append("        ,   T1.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        ,   T1.CGO_TP_CD" ).append("\n"); 
		query.append("        ,   T1.CNTR_QTY" ).append("\n"); 
		query.append("        , (   SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = T1.CNTR_TPSZ_CD ) CNTR_SZ_CD" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT  QD.BKG_NO                   ," ).append("\n"); 
		query.append("                    COUNT(1) OVER ()  CNTR_TPSZ_KNT ," ).append("\n"); 
		query.append("                    ( SELECT SUM(OP_CNTR_QTY) FROM BKG_QUANTITY A WHERE A.BKG_NO = QD.BKG_NO ) TTL_CNTR_QTY ," ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN QD.CNTR_TPSZ_CD LIKE 'R%' AND QD.DRY_CGO_FLG = 'Y' -- RD 인 경우만 예외처리" ).append("\n"); 
		query.append("                      THEN QD.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                    ELSE NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("                    END CNTR_TPSZ_CD            ," ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  QD.DCGO_FLG    = 'Y' THEN 'DG'" ).append("\n"); 
		query.append("                    WHEN  QD.AWK_CGO_FLG = 'Y' THEN 'AK'" ).append("\n"); 
		query.append("                    WHEN  QD.RC_FLG      = 'Y' THEN 'RF'" ).append("\n"); 
		query.append("                    WHEN  QD.BB_CGO_FLG  = 'Y' THEN 'BB'" ).append("\n"); 
		query.append("                    ELSE  'DR'" ).append("\n"); 
		query.append("                    END CGO_TP_CD               ," ).append("\n"); 
		query.append("                    SUM(QD.OP_CNTR_QTY) CNTR_QTY" ).append("\n"); 
		query.append("            FROM    BKG_QTY_DTL QD" ).append("\n"); 
		query.append("                ,   ( SELECT	DISTINCT BKG_NO FROM  BKG_NO_LIST ) BL" ).append("\n"); 
		query.append("            WHERE   QD.BKG_NO       = BL.BKG_NO -- 'TAQE21197400'" ).append("\n"); 
		query.append("            AND     QD.CNTR_TPSZ_CD NOT LIKE 'Q%'" ).append("\n"); 
		query.append("            GROUP BY" ).append("\n"); 
		query.append("                    QD.BKG_NO                   ," ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN QD.CNTR_TPSZ_CD LIKE 'R%' AND QD.DRY_CGO_FLG = 'Y'" ).append("\n"); 
		query.append("                      THEN QD.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                    ELSE NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)" ).append("\n"); 
		query.append("                    END                         ," ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  QD.DCGO_FLG    = 'Y' THEN 'DG'" ).append("\n"); 
		query.append("                    WHEN  QD.AWK_CGO_FLG = 'Y' THEN 'AK'" ).append("\n"); 
		query.append("                    WHEN  QD.RC_FLG      = 'Y' THEN 'RF'" ).append("\n"); 
		query.append("                    WHEN  QD.BB_CGO_FLG  = 'Y' THEN 'BB'" ).append("\n"); 
		query.append("                    ELSE  'DR'" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("            ) T1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("), BKG_RT  AS (" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    SELECT  RT.BKG_NO       ," ).append("\n"); 
		query.append("            RT.RT_SEQ       ," ).append("\n"); 
		query.append("            RT.CGO_CATE_CD  ," ).append("\n"); 
		query.append("            RT.CHG_CD       ," ).append("\n"); 
		query.append("            RT.RAT_UT_CD    ," ).append("\n"); 
		query.append("            RT.RAT_AS_QTY   ," ).append("\n"); 
		query.append("            RT.CHG_UT_AMT   ," ).append("\n"); 
		query.append("            RT.CHG_AMT      ," ).append("\n"); 
		query.append("            ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD )  RAT_SZ_CD" ).append("\n"); 
		query.append("    FROM    BKG_CHG_RT  RT" ).append("\n"); 
		query.append("        ,   ( SELECT DISTINCT BKG_NO FROM BKG_NO_LIST ) BL" ).append("\n"); 
		query.append("    WHERE   RT.BKG_NO = BL.BKG_NO -- 'TAQE21197400'" ).append("\n"); 
		query.append("    AND     RT.FRT_INCL_XCLD_DIV_CD <> 'I'" ).append("\n"); 
		query.append("    AND     RT.CHG_CD   IN" ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("            'OFT'," ).append("\n"); 
		query.append("            'BAF'," ).append("\n"); 
		query.append("            'BUC'," ).append("\n"); 
		query.append("            'EFS'," ).append("\n"); 
		query.append("            'FAF'," ).append("\n"); 
		query.append("            'FRC'," ).append("\n"); 
		query.append("            'CAF'," ).append("\n"); 
		query.append("            'CCA'," ).append("\n"); 
		query.append("            'OTH'," ).append("\n"); 
		query.append("            'CYR'," ).append("\n"); 
		query.append("            'ORC'," ).append("\n"); 
		query.append("            'DTH'," ).append("\n"); 
		query.append("            'APS'," ).append("\n"); 
		query.append("            'CSR'," ).append("\n"); 
		query.append("            'PCC'," ).append("\n"); 
		query.append("            'PCS'," ).append("\n"); 
		query.append("            'STF'," ).append("\n"); 
		query.append("            'ACT'," ).append("\n"); 
		query.append("            'DDC'," ).append("\n"); 
		query.append("            'DDF'," ).append("\n"); 
		query.append("            'NFC'," ).append("\n"); 
		query.append("            'ENS'," ).append("\n"); 
		query.append("            'CMR'," ).append("\n"); 
		query.append("            'CMS'," ).append("\n"); 
		query.append("            'DHC'," ).append("\n"); 
		query.append("            'DHF'," ).append("\n"); 
		query.append("            'NMS'," ).append("\n"); 
		query.append("            'RPT'," ).append("\n"); 
		query.append("            'SLF'," ).append("\n"); 
		query.append("            'EIC'," ).append("\n"); 
		query.append("            'TSC'," ).append("\n"); 
		query.append("            'DIS'," ).append("\n"); 
		query.append("            'GOH'," ).append("\n"); 
		query.append("            'WSC'," ).append("\n"); 
		query.append("            'PSC'," ).append("\n"); 
		query.append("            -- [CHM-201539514] 이하 CHG 추가 요청 Request By SELCMA / Kim GyungUk" ).append("\n"); 
		query.append("            'OBS'," ).append("\n"); 
		query.append("            'BCC'," ).append("\n"); 
		query.append("            'BLR'," ).append("\n"); 
		query.append("            'LBP'," ).append("\n"); 
		query.append("            'CTC'," ).append("\n"); 
		query.append("            'LSI'," ).append("\n"); 
		query.append("			-- [CHM-201642687] MOT/SSE Filing Report > Filing List Inquiry (Surcharge 추가 요청) / Kim GyungUk" ).append("\n"); 
		query.append("			'OCP'," ).append("\n"); 
		query.append("			'DCS'" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("), RT_TPSZ_MTCH  AS (" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    SELECT  T2.BKG_NO  ," ).append("\n"); 
		query.append("            T2.CNTR_TPSZ_CD, " ).append("\n"); 
		query.append("            T2.CNTR_QTY, -- 필요한 칼럼 추가해야 함" ).append("\n"); 
		query.append("            T2.CNTR_TPSZ_KNT," ).append("\n"); 
		query.append("            T2.TTL_CNTR_QTY," ).append("\n"); 
		query.append("            T2.CGO_TP_CD," ).append("\n"); 
		query.append("            T2.CNTR_SZ_CD," ).append("\n"); 
		query.append("            T1.BKG_NO       AS RT_BKG_NO," ).append("\n"); 
		query.append("            T1.RT_SEQ       ," ).append("\n"); 
		query.append("            T1.CGO_CATE_CD  ," ).append("\n"); 
		query.append("            T1.CHG_CD       ," ).append("\n"); 
		query.append("            T1.RAT_UT_CD    ," ).append("\n"); 
		query.append("            T1.RAT_AS_QTY   ," ).append("\n"); 
		query.append("            T1.CHG_UT_AMT   ," ).append("\n"); 
		query.append("            T1.CHG_AMT      ," ).append("\n"); 
		query.append("            T1.RAT_SZ_CD    ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("            WHEN  T1.RAT_UT_CD = T2.CNTR_TPSZ_CD  THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  95" ).append("\n"); 
		query.append("                    ELSE  90" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD AND" ).append("\n"); 
		query.append("                    NVL(" ).append("\n"); 
		query.append("                      (" ).append("\n"); 
		query.append("                      SELECT  'Y'" ).append("\n"); 
		query.append("                      FROM    BKG_RT      A" ).append("\n"); 
		query.append("                      WHERE   A.BKG_NO      = T1.BKG_NO" ).append("\n"); 
		query.append("                      AND     A.CHG_CD      = T1.CHG_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      AND     ROWNUM        = 1" ).append("\n"); 
		query.append("                      ), 'N') = 'N' THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  85" ).append("\n"); 
		query.append("                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  80" ).append("\n"); 
		query.append("                    ELSE  75" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  70" ).append("\n"); 
		query.append("                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  65" ).append("\n"); 
		query.append("                    ELSE  60" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_UT_CD = 'BX' AND" ).append("\n"); 
		query.append("                    NVL(" ).append("\n"); 
		query.append("                      (" ).append("\n"); 
		query.append("                      SELECT  'Y'" ).append("\n"); 
		query.append("                      FROM    BKG_RT  A" ).append("\n"); 
		query.append("                      WHERE   A.BKG_NO      = T1.BKG_NO" ).append("\n"); 
		query.append("                      AND     A.CHG_CD      = T1.CHG_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      AND     ROWNUM        = 1" ).append("\n"); 
		query.append("                      ), 'N') = 'N' AND" ).append("\n"); 
		query.append("                    NVL(" ).append("\n"); 
		query.append("                      (" ).append("\n"); 
		query.append("                      SELECT  'Y'" ).append("\n"); 
		query.append("                      FROM    BKG_RT  A" ).append("\n"); 
		query.append("                      WHERE   A.BKG_NO      = T1.BKG_NO" ).append("\n"); 
		query.append("                      AND     A.CHG_CD      = T1.CHG_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )" ).append("\n"); 
		query.append("                      AND     ROWNUM        = 1" ).append("\n"); 
		query.append("                      ), 'N') = 'N' THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  55" ).append("\n"); 
		query.append("                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  50" ).append("\n"); 
		query.append("                    ELSE  45" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_UT_CD = 'BX' THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  40" ).append("\n"); 
		query.append("                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  35" ).append("\n"); 
		query.append("                    ELSE  30" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_UT_CD = 'BL' AND" ).append("\n"); 
		query.append("                    NVL(" ).append("\n"); 
		query.append("                      (" ).append("\n"); 
		query.append("                      SELECT  'Y'" ).append("\n"); 
		query.append("                      FROM    BKG_RT  A" ).append("\n"); 
		query.append("                      WHERE   A.BKG_NO      = T1.BKG_NO" ).append("\n"); 
		query.append("                      AND     A.CHG_CD      = T1.CHG_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      AND     ROWNUM        = 1" ).append("\n"); 
		query.append("                      ), 'N') = 'N' AND" ).append("\n"); 
		query.append("                    NVL(" ).append("\n"); 
		query.append("                      (" ).append("\n"); 
		query.append("                      SELECT  'Y'" ).append("\n"); 
		query.append("                      FROM    BKG_RT  A" ).append("\n"); 
		query.append("                      WHERE   A.BKG_NO      = T1.BKG_NO" ).append("\n"); 
		query.append("                      AND     A.CHG_CD      = T1.CHG_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD" ).append("\n"); 
		query.append("                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )" ).append("\n"); 
		query.append("                      AND     ROWNUM        = 1" ).append("\n"); 
		query.append("                      ), 'N') = 'N' THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100" ).append("\n"); 
		query.append("                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  25" ).append("\n"); 
		query.append("                    ELSE  20" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_UT_CD = 'BL' THEN" ).append("\n"); 
		query.append("                    CASE" ).append("\n"); 
		query.append("                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100" ).append("\n"); 
		query.append("                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100" ).append("\n"); 
		query.append("                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  15" ).append("\n"); 
		query.append("                    ELSE  10" ).append("\n"); 
		query.append("                    END" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            WHEN  T1.RAT_UT_CD = 'PC' THEN  100" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("            ELSE  1" ).append("\n"); 
		query.append("            END MTCH_IND" ).append("\n"); 
		query.append("    FROM    BKG_RT    T1  ," ).append("\n"); 
		query.append("            BKG_TPSZ  T2" ).append("\n"); 
		query.append("    WHERE   T1.BKG_NO(+) = T2.BKG_NO            " ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("), BKG_CHG_LIST AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT  T1.BKG_NO" ).append("\n"); 
		query.append("        ,   T1.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        ,   T1.CGO_TP_CD" ).append("\n"); 
		query.append("        ,   T1.CHG_CD" ).append("\n"); 
		query.append("        ,   MAX ( T1.RAT_UT_CD ) AS RAT_UT_CD" ).append("\n"); 
		query.append("        ,   SUM ( T1.CHG_UT_AMT ) AS RT_AMT" ).append("\n"); 
		query.append("    FROM    RT_TPSZ_MTCH  T1" ).append("\n"); 
		query.append("    WHERE   NOT EXISTS  (" ).append("\n"); 
		query.append("                        SELECT  'X'" ).append("\n"); 
		query.append("                        FROM    RT_TPSZ_MTCH  T2" ).append("\n"); 
		query.append("                        WHERE   T2.BKG_NO   = T1.BKG_NO" ).append("\n"); 
		query.append("                        AND     T2.RT_SEQ   = T1.RT_SEQ" ).append("\n"); 
		query.append("                        AND     T2.MTCH_IND > T1.MTCH_IND" ).append("\n"); 
		query.append("                        )" ).append("\n"); 
		query.append("    GROUP   BY  " ).append("\n"); 
		query.append("            T1.BKG_NO" ).append("\n"); 
		query.append("        ,   T1.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        ,   T1.CGO_TP_CD" ).append("\n"); 
		query.append("        ,   T1.CHG_CD" ).append("\n"); 
		query.append("    ORDER   BY         " ).append("\n"); 
		query.append("            T1.BKG_NO" ).append("\n"); 
		query.append("        ,   T1.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        ,   T1.CGO_TP_CD" ).append("\n"); 
		query.append("        ,   T1.CHG_CD" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append(")                             " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT  DISTINCT" ).append("\n"); 
		query.append("            TO_DATE ( @[exec_dt], 'YYYY-MM-DD' ) AS BAT_EXE_DT" ).append("\n"); 
		query.append("        ,   DENSE_RANK () OVER ( ORDER BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD ) AS MOT_FILE_RT_SEQ" ).append("\n"); 
		query.append("        ,   RANK () OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD  ORDER BY  DECODE ( T1.CHG_CD, 'OFT', '000', '111' ), T1.CHG_CD  ) AS SCG_SEQ" ).append("\n"); 
		query.append("        ,   BL.BKG_NO" ).append("\n"); 
		query.append("        ,   BL.IND" ).append("\n"); 
		query.append("        ,   BL.SHPR_CNT_CD" ).append("\n"); 
		query.append("        ,   BL.SHPR_SEQ" ).append("\n"); 
		query.append("        ,   BL.CTRT_NO" ).append("\n"); 
		query.append("        ,   BL.CTRT_HLDR" ).append("\n"); 
		query.append("        ,   BL.ACT_CUST" ).append("\n"); 
		query.append("        ,   DL.MOT_FILE_LANE_CD" ).append("\n"); 
		query.append("        ,   OL.MOT_FILE_LOC_CD AS MOT_FILE_OLOC_CD" ).append("\n"); 
		query.append("        ,   DL.MOT_FILE_LOC_CD AS MOT_FILE_DLOC_CD" ).append("\n"); 
		query.append("        ,   NVL ( PL.MOT_FILE_LOC_CD, BL.POD_CD ) AS MOT_FILE_IB_PORT_CD" ).append("\n"); 
		query.append("        ,   DECODE ( BL.DE_TERM_CD, 'D','DO','CY' ) AS MOT_FILE_DE_TERM_CD" ).append("\n"); 
		query.append("        ,   BL.BKG_CGO_CATE" ).append("\n"); 
		query.append("        ,   BL.BKG_DIR_CALL_FLG" ).append("\n"); 
		query.append("        ,   '' AS MOT_FILE_TS_PORT_CD" ).append("\n"); 
		query.append("        ,   NVL ( ( SELECT X.MOT_FILE_LOC_CD FROM PRI_MOT_FILE_LOC_PPT X WHERE X.LOC_CD = BL.PRE_RLY_PORT_CD ), BL.PRE_RLY_PORT_CD ) AS MOT_FILE_PRE_RLY_PORT_CD" ).append("\n"); 
		query.append("        ,   NVL ( ( SELECT X.MOT_FILE_LOC_CD FROM PRI_MOT_FILE_LOC_PPT X WHERE X.LOC_CD = BL.PST_RLY_PORT_CD ), BL.PST_RLY_PORT_CD ) AS MOT_FILE_PST_RLY_PORT_CD" ).append("\n"); 
		query.append("        ,   RM.MOT_FILE_CNTR_TP_CD AS MF_RAT_UT_CD" ).append("\n"); 
		query.append("        ,   SUBSTR ( CS.CNTR_SZ_DESC, 1, 2 ) AS SZ " ).append("\n"); 
		query.append("        ,   CL.MQC_QTY" ).append("\n"); 
		query.append("        ,   CL.CTRT_EFF_DT" ).append("\n"); 
		query.append("        ,   CL.CTRT_EXP_DT" ).append("\n"); 
		query.append("        ,   T1.CHG_CD" ).append("\n"); 
		query.append("        ,   T1.RAT_UT_CD" ).append("\n"); 
		query.append("        ,   T1.RT_AMT" ).append("\n"); 
		query.append("        ,   SUM ( DECODE ( T1.CHG_CD, 'OFT',T1.RT_AMT, 0 ) ) OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD  ) AS OFT_AMT " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("    FROM    BKG_CHG_LIST  T1" ).append("\n"); 
		query.append("        ,   BKG_INFO_LIST BL" ).append("\n"); 
		query.append("        ,   CTRT_INFO_LIST CL" ).append("\n"); 
		query.append("        ,   PRI_MOT_FILE_LOC_PPT OL" ).append("\n"); 
		query.append("        ,   PRI_MOT_FILE_LOC_PPT DL" ).append("\n"); 
		query.append("        ,   PRI_MOT_FILE_LOC_PPT PL" ).append("\n"); 
		query.append("        ,   PRI_MOT_FILE_RAT_UT_MAPG RM" ).append("\n"); 
		query.append("        ,   MDM_CNTR_TP_SZ  TS" ).append("\n"); 
		query.append("        ,   MDM_CNTR_SZ  CS" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("    WHERE   BL.BKG_NO = T1.BKG_NO(+)" ).append("\n"); 
		query.append("    AND     BL.CTRT_NO = CL.CTRT_NO(+)" ).append("\n"); 
		query.append("    AND     NVL ( BL.RT_APLY_DT, SYSDATE ) = NVL ( CL.RT_APLY_DT, SYSDATE ) " ).append("\n"); 
		query.append("    AND     BL.POR_CD = OL.LOC_CD" ).append("\n"); 
		query.append("    AND     BL.DEL_CD = DL.LOC_CD" ).append("\n"); 
		query.append("    AND     BL.POD_CD = PL.LOC_CD(+)" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    AND     T1.CNTR_TPSZ_CD = RM.RAT_UT_CD(+)" ).append("\n"); 
		query.append("    AND     T1.CNTR_TPSZ_CD = TS.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("    AND     TS.CNTR_SZ_CD   = CS.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ORDER   BY 2, 3, 4, 5, 6, 7, 8, 9" ).append("\n"); 

	}
}