<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCReportDBDAOcreatePriMotFileLogDataCSQL">
			<desc><![CDATA[일자별 대상 BKG 을 가져와 해당 일자의 데이터를 생성한다.
-  중복 제거 이전 

PRI_MOT_FILE_RT_LOG
PRI_MOT_FILE_RT_LOG_DTL
* 2013.08.29 송호진 [CHM-201431591] MOT Filing 양식 변경 - O.EIC, O.SLF 추가
* 2016.01.13 [CHM-201539514] SSE Agreement Filing 상 Surcharge 추가 요청 Request By SELCMA / Kim GyungUk -- OBS, BCC, BLR, LBP, CTC, LSI 추가
* 2016.01.27 [CHM-201639832] SSE Agreement Filing 상 Data download 기준일 변경 Reqyest by SELCMA / Kim GyungUk
* 2016.08.01 [CHM-201642687] MOT/SSE Filing Report > Filing List Inquiry (Surcharge 추가 요청) / Kim GyungUk
  
]]></desc>
			<sql><![CDATA[
INSERT ALL 
WHEN    SCG_SEQ = 1 THEN
INTO PRI_MOT_FILE_RT_LOG 
( BAT_EXE_DT, MOT_FILE_RT_LOG_SEQ, BKG_NO, BKG_SRC_TP_CD, CTRT_NO, CTRT_HLD_NM, ACT_CUST_NM, MOT_FILE_LANE_CD, MOT_FILE_ORG_CD, MOT_FILE_DEST_CD, MOT_FILE_CNTR_TP_CD, 
MOT_FILE_CMDT_TP_CD, MOT_FILE_CNTR_SZ_CD, MQC_QTY, MOT_FILE_RT_AMT, CTRT_EFF_DT, CTRT_EXP_DT, MOT_FILE_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT, 
SHPR_CNT_CD, SHPR_SEQ, BKG_DIR_CALL_FLG, MOT_FILE_TS_PORT_CD, MOT_FILE_PRE_RLY_PORT_CD, MOT_FILE_PST_RLY_PORT_CD, MOT_FILE_IB_PORT_CD, MOT_FILE_DE_TERM_CD )
VALUES ( BAT_EXE_DT, MOT_FILE_RT_SEQ, BKG_NO, IND, CTRT_NO, CTRT_HLDR, ACT_CUST, MOT_FILE_LANE_CD, MOT_FILE_OLOC_CD, MOT_FILE_DLOC_CD, MF_RAT_UT_CD, 
BKG_CGO_CATE, SZ, MQC_QTY, OFT_AMT, CTRT_EFF_DT, CTRT_EXP_DT, NULL, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE, SHPR_CNT_CD, SHPR_SEQ, BKG_DIR_CALL_FLG, MOT_FILE_TS_PORT_CD,
MOT_FILE_PRE_RLY_PORT_CD, MOT_FILE_PST_RLY_PORT_CD, MOT_FILE_IB_PORT_CD, MOT_FILE_DE_TERM_CD  )
WHEN    SCG_SEQ > 1 THEN
INTO PRI_MOT_FILE_RT_LOG_DTL
( BAT_EXE_DT, MOT_FILE_RT_LOG_SEQ, SCG_SEQ, CHG_CD, RAT_UT_CD, MOT_FILE_CHG_AMT, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT )
VALUES ( BAT_EXE_DT, MOT_FILE_RT_SEQ, SCG_SEQ - 1, CHG_CD, RAT_UT_CD, RT_AMT, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE )


WITH BKG_NO_LIST AS (

		    SELECT 'V' AS IND, X.BKG_NO FROM (  
		       SELECT  C.VPS_ETD_DT AS VPS_ETD_DT
		             , A.BKG_NO
		             , B.VSL_PRE_PST_CD AS B_VSL_PRE_PST_CD
		             , B.VSL_SEQ        AS B_VSL_SEQ
		             , D.VSL_PRE_PST_CD AS D_VSL_PRE_PST_CD
		             , D.VSL_SEQ        AS D_VSL_SEQ
		             , ROW_NUMBER() OVER(PARTITION BY D.BKG_NO
		                 ORDER BY D.VSL_PRE_PST_CD, D.VSL_SEQ) AS ROW_RANK
		          FROM BKG_BOOKING A
		             , BKG_VVD B
		             , VSK_VSL_PORT_SKD C
		             , BKG_VVD D
		             , PRI_MOT_FILE_LOC_PPT OL -- 파일링 대상 Origin인지 체크
		             , PRI_MOT_FILE_LOC_PPT DL -- 파일링 대상 Dest 인지 체크
		         WHERE 1 = 1
		           AND A.BKG_NO = B.BKG_NO
		           AND B.VSL_CD = C.VSL_CD
		           AND B.SKD_VOY_NO = C.SKD_VOY_NO
		           AND B.SKD_DIR_CD = C.SKD_DIR_CD
		           AND B.POL_CD = C.VPS_PORT_CD
		           AND B.POL_CLPT_IND_SEQ = C.CLPT_IND_SEQ
		           AND B.POL_YD_CD = C.YD_CD
		           AND A.RCV_TERM_CD = 'Y'
		           AND A.BKG_STS_CD <> 'X'
		           AND  C.VPS_ETD_DT BETWEEN TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 1 AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 1 + 0.99999 -- 0.99999 는 23시 59분 59초를 의미 
		           AND B.BKG_NO = D.BKG_NO
		           AND OL.ORG_DEST_TP_CD = 'O'
		           AND OL.FILE_USE_ONY_FLG = 'Y'
		           AND OL.LOC_CD = A.POR_CD
		           AND DL.ORG_DEST_TP_CD = 'D'
		           AND DL.FILE_USE_ONY_FLG = 'Y'
		           AND DL.LOC_CD = A.DEL_CD
		    ) X
		    WHERE ROW_RANK = 1
		     AND B_VSL_PRE_PST_CD = D_VSL_PRE_PST_CD
		     AND B_VSL_SEQ  = D_VSL_SEQ

        
            UNION ALL
          
            SELECT  /*+ ORDERED USE_NL */
                    'C' AS IND, A.BKG_NO
            FROM    BKG_CORRECTION A
                ,   BKG_BOOKING B
                ,   PRI_MOT_FILE_LOC_PPT OL
                ,   PRI_MOT_FILE_LOC_PPT DL        
            WHERE   A.CORR_NO NOT   IN ( '0000000001', 'TMP0000001' )
            AND     A.CORR_CXL_FLG  = 'N'
            AND     A.CORR_GDT      BETWEEN TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) - 1 + 9/24 AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 9/24        
            AND     A.BKG_NO = B.BKG_NO
            
            AND     B.RCV_TERM_CD = 'Y'
            --AND     B.DE_TERM_CD = 'Y'
            
            AND     OL.ORG_DEST_TP_CD = 'O'
            AND     OL.FILE_USE_ONY_FLG = 'Y'
            AND     OL.LOC_CD = B.POR_CD
            AND     DL.ORG_DEST_TP_CD = 'D'
            AND     DL.FILE_USE_ONY_FLG = 'Y'
            AND     DL.LOC_CD = B.DEL_CD
            AND     B.BKG_STS_CD <> 'X'
            AND     B.BKG_CGO_TP_CD <> 'P'
        
            UNION ALL
          
            SELECT  /*+ ORDERED USE_NL */
                    'B' AS IND, B.BKG_NO
            FROM    BKG_BL_DOC D
                ,   BKG_BOOKING B
                ,   PRI_MOT_FILE_LOC_PPT OL
                ,   PRI_MOT_FILE_LOC_PPT DL
            WHERE   D.BDR_DT BETWEEN TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) - (1 + 0.99999) AND TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) + 1 -- 0.99999 는 23시 59분 59초를 의미 
            AND     D.BKG_NO = B.BKG_NO
            AND     D.BDR_DT BETWEEN GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL', TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ) - 1, B.POL_CD ) AND GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL', TO_DATE ( @[test_exec_dt],'YYYY-MM-DD' ), B.POL_CD ) 
            
            AND     B.RCV_TERM_CD = 'Y'
            --AND     B.DE_TERM_CD = 'Y'
            
            AND     OL.ORG_DEST_TP_CD = 'O'
            AND     OL.FILE_USE_ONY_FLG = 'Y'
            AND     OL.LOC_CD = B.POR_CD
            AND     DL.ORG_DEST_TP_CD = 'D'
            AND     DL.FILE_USE_ONY_FLG = 'Y'
            AND     DL.LOC_CD = B.DEL_CD
            AND     B.BKG_STS_CD <> 'X'
            AND     B.BKG_CGO_TP_CD <> 'P'
         -- AND     ROWNUM < 5
   
    
) , BKG_INFO_LIST AS (

    SELECT  BL.IND
        ,   BL.BKG_NO
        ,   DECODE ( BR.BKG_CTRT_TP_CD, 'R', BK.RFA_NO, 'S', BK.SC_NO, 'T', BK.TAA_NO ) AS CTRT_NO
        ,   BR.RT_APLY_DT
        ,   BK.POR_CD
        ,   BK.POD_CD
        ,   BK.DEL_CD
        ,   BK.DE_TERM_CD
        ,   BK.SVC_SCP_CD AS BKG_SVC_SCP_CD
        ,   CASE WHEN MC.REP_IMDG_LVL_CD = '5' THEN 'CH'
                 WHEN MC.REP_IMDG_LVL_CD IN ( '2','3','4','6','8','9','P' ) THEN 'HZ'
                 ELSE 'GC' END AS BKG_CGO_CATE
        ,   BC.CUST_CNT_CD AS SHPR_CNT_CD
        ,   BC.CUST_SEQ AS SHPR_SEQ
        ,   BC.CUST_NM   AS CTRT_HLDR     
        ,   AC.CUST_LGL_ENG_NM AS ACT_CUST
        ,   CASE WHEN BK.PRE_RLY_PORT_CD IS NOT NULL OR BK.PST_RLY_PORT_CD IS NOT NULL THEN 'N' ELSE 'Y' END AS BKG_DIR_CALL_FLG       
        ,   '' AS BKG_TS_PORT_CD
        ,   BK.PRE_RLY_PORT_CD
        ,   BK.PST_RLY_PORT_CD                 
    FROM    BKG_NO_LIST BL
        ,   BKG_BOOKING BK
        ,   BKG_RATE BR
        ,   BKG_CUSTOMER BC
        ,   MDM_COMMODITY MC
        ,   MDM_CUSTOMER  AC
    WHERE   BL.BKG_NO = BK.BKG_NO
    AND     BL.BKG_NO = BR.BKG_NO(+)
    AND     BL.BKG_NO = BC.BKG_NO(+)
    AND     BR.BKG_CTRT_TP_CD(+) IS NOT NULL
    AND     BC.BKG_CUST_TP_CD(+) = 'S'        
    AND     BK.CMDT_CD = MC.CMDT_CD (+)    
    AND     BK.AGMT_ACT_CNT_CD = AC.CUST_CNT_CD(+)
    AND     BK.AGMT_ACT_CUST_SEQ = AC.CUST_SEQ(+)        
    AND 
        (   
                ( BR.BKG_CTRT_TP_CD = 'R' AND EXISTS ( SELECT 1 FROM PRI_RP_HDR  X WHERE X.RFA_NO = BK.RFA_NO AND ROWNUM = 1 ) )
            OR  ( BR.BKG_CTRT_TP_CD = 'S' AND EXISTS ( SELECT 1 FROM PRI_SP_HDR  X WHERE X.SC_NO  = BK.SC_NO  AND ROWNUM = 1 ) )
            OR  ( BR.BKG_CTRT_TP_CD = 'T' AND EXISTS ( SELECT 1 FROM PRI_TAA_HDR X WHERE X.TAA_NO = BK.TAA_NO AND ROWNUM = 1 ) )
        )
        
),  CTRT_INFO_LIST AS (
  
    SELECT  DISTINCT SS.CTRT_NO, SS.RT_APLY_DT, SS.PROP_NO, SS.AMDT_SEQ, SS.SVC_SCP_CD
        ,   SD.CTRT_EFF_DT
        ,   SD.CTRT_EXP_DT
        ,   SM.CNTR_LOD_UT_CD AS MQC_UT
        ,   SM.FNL_MQC_QTY AS MQC_QTY
    FROM    
            (
            
                SELECT  DISTINCT
                        A.CTRT_NO
                   ,    A.RT_APLY_DT
                   ,    C.PROP_NO
                   ,    C.AMDT_SEQ
                   ,    A.BKG_SVC_SCP_CD AS SVC_SCP_CD
                FROM    BKG_INFO_LIST A
                    ,   PRI_SP_HDR B
                    ,   PRI_SP_MN C   
                WHERE   LENGTH ( A.CTRT_NO ) <= 9 
                AND     A.CTRT_NO = B.SC_NO
                AND     B.PROP_NO = C.PROP_NO
                AND     C.AMDT_SEQ = ( SELECT MAX ( M.AMDT_SEQ ) FROM PRI_SP_MN M WHERE M.PROP_NO = C.PROP_NO AND TO_DATE ( @[exec_dt],'YYYY-MM-DD' ) BETWEEN M.EFF_DT AND M.EXP_DT AND M.PROP_STS_CD = 'F' )

            ) SS                       
        ,   PRI_SP_DUR SD
        ,   PRI_SP_MQC SM
    WHERE   SS.PROP_NO = SD.PROP_NO
    AND     SS.AMDT_SEQ = SD.AMDT_SEQ
    AND     SS.PROP_NO = SM.PROP_NO
    AND     SS.AMDT_SEQ = SM.AMDT_SEQ
                    
    UNION ALL
    
    SELECT  DISTINCT RS.CTRT_NO, RS.RT_APLY_DT, RS.PROP_NO, RS.AMDT_SEQ, RS.SVC_SCP_CD
        ,   SD.CTRT_EFF_DT
        ,   SD.CTRT_EXP_DT
        ,   NULL
        ,   NULL
    FROM    
            (           
                SELECT  DISTINCT
                        A.CTRT_NO
                    ,   A.RT_APLY_DT
                    ,   C.PROP_NO
                    ,   C.AMDT_SEQ
                    ,   A.BKG_SVC_SCP_CD AS SVC_SCP_CD
                FROM    BKG_INFO_LIST A
                    ,   PRI_RP_HDR B
                    ,   PRI_RP_MN C   
                WHERE   LENGTH ( A.CTRT_NO ) >= 10
                AND     SUBSTR ( A.CTRT_NO, 6, 1 ) = 'A'
                AND     A.CTRT_NO = B.RFA_NO
                AND     B.PROP_NO = C.PROP_NO
                AND     C.AMDT_SEQ = ( SELECT MAX ( M.AMDT_SEQ ) FROM PRI_RP_MN M WHERE M.PROP_NO = C.PROP_NO AND TO_DATE ( @[exec_dt],'YYYY-MM-DD' ) BETWEEN M.EFF_DT AND M.EXP_DT AND M.PROP_STS_CD = 'A' )
            ) RS                       
        ,   PRI_RP_MN  RM
        ,   PRI_RP_DUR SD
    WHERE   RS.PROP_NO = RM.PROP_NO
    AND     RS.AMDT_SEQ = RM.AMDT_SEQ
    AND     RS.PROP_NO = SD.PROP_NO
    AND     RS.AMDT_SEQ = SD.AMDT_SEQ

    UNION ALL
    
    SELECT  DISTINCT TS.CTRT_NO, TS.RT_APLY_DT, TS.TAA_PROP_NO, TS.AMDT_SEQ, TS.SVC_SCP_CD
        ,   TM.EFF_DT AS CTRT_EFF_DT
        ,   TM.EXP_DT AS CTRT_EXP_DT
        ,   NULL
        ,   NULL
    FROM    PRI_TAA_MN      TM
        ,   ( 
                SELECT  DISTINCT
                        A.CTRT_NO
                   ,    A.RT_APLY_DT
                   ,    C.TAA_PROP_NO
                   ,    C.AMDT_SEQ
                   ,    C.SVC_SCP_CD 
                FROM    BKG_INFO_LIST A
                    ,   PRI_TAA_HDR B
                    ,   PRI_TAA_MN C   
                WHERE   LENGTH ( A.CTRT_NO ) >= 10
                AND     SUBSTR ( A.CTRT_NO, 6, 1 ) = 'T'
                AND     A.CTRT_NO = B.TAA_NO
                AND     B.TAA_PROP_NO = C.TAA_PROP_NO
                AND     C.AMDT_SEQ = ( SELECT MAX ( M.AMDT_SEQ ) FROM PRI_TAA_MN M WHERE M.TAA_PROP_NO = C.TAA_PROP_NO AND TO_DATE ( @[exec_dt],'YYYY-MM-DD' ) BETWEEN M.EFF_DT AND M.EXP_DT AND M.CFM_FLG = 'Y' )
                AND     C.SVC_SCP_CD = A.BKG_SVC_SCP_CD
            ) TS
    WHERE   TS.TAA_PROP_NO = TM.TAA_PROP_NO
    AND     TS.AMDT_SEQ = TM.AMDT_SEQ
    AND     TS.SVC_SCP_CD = TM.SVC_SCP_CD
   
) , BKG_TPSZ  AS (

    SELECT  
            T1.BKG_NO
        ,   T1.CNTR_TPSZ_KNT
        ,   T1.TTL_CNTR_QTY
        ,   T1.CNTR_TPSZ_CD
        ,   T1.CGO_TP_CD
        ,   T1.CNTR_QTY
        , (   SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = T1.CNTR_TPSZ_CD ) CNTR_SZ_CD
    FROM
        (
            SELECT  QD.BKG_NO                   ,
                    COUNT(1) OVER ()  CNTR_TPSZ_KNT ,
                    ( SELECT SUM(OP_CNTR_QTY) FROM BKG_QUANTITY A WHERE A.BKG_NO = QD.BKG_NO ) TTL_CNTR_QTY ,
                    CASE
                    WHEN QD.CNTR_TPSZ_CD LIKE 'R%' AND QD.DRY_CGO_FLG = 'Y' -- RD 인 경우만 예외처리
                      THEN QD.CNTR_TPSZ_CD
                    ELSE NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)
                    END CNTR_TPSZ_CD            ,
                    CASE
                    WHEN  QD.DCGO_FLG    = 'Y' THEN 'DG'
                    WHEN  QD.AWK_CGO_FLG = 'Y' THEN 'AK'
                    WHEN  QD.RC_FLG      = 'Y' THEN 'RF'
                    WHEN  QD.BB_CGO_FLG  = 'Y' THEN 'BB'
                    ELSE  'DR'
                    END CGO_TP_CD               ,
                    SUM(QD.OP_CNTR_QTY) CNTR_QTY
            FROM    BKG_QTY_DTL QD
                ,   ( SELECT	DISTINCT BKG_NO FROM  BKG_NO_LIST ) BL
            WHERE   QD.BKG_NO       = BL.BKG_NO -- 'TAQE21197400'
            AND     QD.CNTR_TPSZ_CD NOT LIKE 'Q%'
            GROUP BY
                    QD.BKG_NO                   ,
                    CASE
                    WHEN QD.CNTR_TPSZ_CD LIKE 'R%' AND QD.DRY_CGO_FLG = 'Y'
                      THEN QD.CNTR_TPSZ_CD
                    ELSE NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)
                    END                         ,
                    CASE
                    WHEN  QD.DCGO_FLG    = 'Y' THEN 'DG'
                    WHEN  QD.AWK_CGO_FLG = 'Y' THEN 'AK'
                    WHEN  QD.RC_FLG      = 'Y' THEN 'RF'
                    WHEN  QD.BB_CGO_FLG  = 'Y' THEN 'BB'
                    ELSE  'DR'
                    END
            ) T1
        
), BKG_RT  AS (
    
    SELECT  RT.BKG_NO       ,
            RT.RT_SEQ       ,
            RT.CGO_CATE_CD  ,
            RT.CHG_CD       ,
            RT.RAT_UT_CD    ,
            RT.RAT_AS_QTY   ,
            RT.CHG_UT_AMT   ,
            RT.CHG_AMT      ,
            ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD )  RAT_SZ_CD
    FROM    BKG_CHG_RT  RT
        ,   ( SELECT DISTINCT BKG_NO FROM BKG_NO_LIST ) BL
    WHERE   RT.BKG_NO = BL.BKG_NO -- 'TAQE21197400'
    AND     RT.FRT_INCL_XCLD_DIV_CD <> 'I'
    AND     RT.CHG_CD   IN
            (
            'OFT',
            'BAF',
            'BUC',
            'EFS',
            'FAF',
            'FRC',
            'CAF',
            'CCA',
            'OTH',
            'CYR',
            'ORC',
            'DTH',
            'APS',
            'CSR',
            'PCC',
            'PCS',
            'STF',
            'ACT',
            'DDC',
            'DDF',
            'NFC',
            'ENS',
            'CMR',
            'CMS',
            'DHC',
            'DHF',
            'NMS',
            'RPT',
            'SLF',
            'EIC',
            'TSC',
            'DIS',
            'GOH',
            'WSC',
            'PSC',
            -- [CHM-201539514] 이하 CHG 추가 요청 Request By SELCMA / Kim GyungUk
            'OBS',
            'BCC',
            'BLR',
            'LBP',
            'CTC',
            'LSI',
			-- [CHM-201642687] MOT/SSE Filing Report > Filing List Inquiry (Surcharge 추가 요청) / Kim GyungUk
			'OCP',
			'DCS'
            )

), RT_TPSZ_MTCH  AS (
    
    SELECT  T2.BKG_NO  ,
            T2.CNTR_TPSZ_CD, 
            T2.CNTR_QTY, -- 필요한 칼럼 추가해야 함
            T2.CNTR_TPSZ_KNT,
            T2.TTL_CNTR_QTY,
            T2.CGO_TP_CD,
            T2.CNTR_SZ_CD,
            T1.BKG_NO       AS RT_BKG_NO,
            T1.RT_SEQ       ,
            T1.CGO_CATE_CD  ,
            T1.CHG_CD       ,
            T1.RAT_UT_CD    ,
            T1.RAT_AS_QTY   ,
            T1.CHG_UT_AMT   ,
            T1.CHG_AMT      ,
            T1.RAT_SZ_CD    ,
        CASE
            WHEN  T1.RAT_UT_CD = T2.CNTR_TPSZ_CD  THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  100
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  95
                    ELSE  90
                    END
    
            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT      A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  85
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  80
                    ELSE  75
                    END
    
            WHEN  T1.RAT_SZ_CD  = T2.CNTR_SZ_CD THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  70
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  65
                    ELSE  60
                    END
    
            WHEN  T1.RAT_UT_CD = 'BX' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD
                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  55
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  50
                    ELSE  45
                    END
    
            WHEN  T1.RAT_UT_CD = 'BX' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.RAT_AS_QTY   = T2.CNTR_TPSZ_KNT AND T1.CGO_CATE_CD = T2.CGO_TP_CD  THEN  40
                    WHEN  T1.CGO_CATE_CD  = T2.CGO_TP_CD      THEN  35
                    ELSE  30
                    END
    
            WHEN  T1.RAT_UT_CD = 'BL' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_UT_CD   = T2.CNTR_TPSZ_CD
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' AND
                    NVL(
                      (
                      SELECT  'Y'
                      FROM    BKG_RT  A
                      WHERE   A.BKG_NO      = T1.BKG_NO
                      AND     A.CHG_CD      = T1.CHG_CD
                      AND     A.RAT_SZ_CD   = T2.CNTR_SZ_CD
                      AND     A.RAT_UT_CD   IN ( '20', '40', '45', '53' )
                      AND     ROWNUM        = 1
                      ), 'N') = 'N' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100
                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  25
                    ELSE  20
                    END
    
            WHEN  T1.RAT_UT_CD = 'BL' THEN
                    CASE
                    WHEN  T1.RAT_AS_QTY   = T2.TTL_CNTR_QTY   THEN  100
                    WHEN  T1.CHG_CD       <> 'OFT'            THEN  100
                    WHEN  T2.CGO_TP_CD    IN ( 'AK', 'BB' )   THEN  15
                    ELSE  10
                    END
    
            WHEN  T1.RAT_UT_CD = 'PC' THEN  100
    
            ELSE  1
            END MTCH_IND
    FROM    BKG_RT    T1  ,
            BKG_TPSZ  T2
    WHERE   T1.BKG_NO(+) = T2.BKG_NO            
            
), BKG_CHG_LIST AS (

    SELECT  T1.BKG_NO
        ,   T1.CNTR_TPSZ_CD
        ,   T1.CGO_TP_CD
        ,   T1.CHG_CD
        ,   MAX ( T1.RAT_UT_CD ) AS RAT_UT_CD
        ,   SUM ( T1.CHG_UT_AMT ) AS RT_AMT
    FROM    RT_TPSZ_MTCH  T1
    WHERE   NOT EXISTS  (
                        SELECT  'X'
                        FROM    RT_TPSZ_MTCH  T2
                        WHERE   T2.BKG_NO   = T1.BKG_NO
                        AND     T2.RT_SEQ   = T1.RT_SEQ
                        AND     T2.MTCH_IND > T1.MTCH_IND
                        )
    GROUP   BY  
            T1.BKG_NO
        ,   T1.CNTR_TPSZ_CD
        ,   T1.CGO_TP_CD
        ,   T1.CHG_CD
    ORDER   BY         
            T1.BKG_NO
        ,   T1.CNTR_TPSZ_CD
        ,   T1.CGO_TP_CD
        ,   T1.CHG_CD
        
)                             

    SELECT  DISTINCT
            TO_DATE ( @[exec_dt], 'YYYY-MM-DD' ) AS BAT_EXE_DT
        ,   DENSE_RANK () OVER ( ORDER BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD ) AS MOT_FILE_RT_SEQ
        ,   RANK () OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD  ORDER BY  DECODE ( T1.CHG_CD, 'OFT', '000', '111' ), T1.CHG_CD  ) AS SCG_SEQ
        ,   BL.BKG_NO
        ,   BL.IND
        ,   BL.SHPR_CNT_CD
        ,   BL.SHPR_SEQ
        ,   BL.CTRT_NO
        ,   BL.CTRT_HLDR
        ,   BL.ACT_CUST
        ,   DL.MOT_FILE_LANE_CD
        ,   OL.MOT_FILE_LOC_CD AS MOT_FILE_OLOC_CD
        ,   DL.MOT_FILE_LOC_CD AS MOT_FILE_DLOC_CD
        ,   NVL ( PL.MOT_FILE_LOC_CD, BL.POD_CD ) AS MOT_FILE_IB_PORT_CD
        ,   DECODE ( BL.DE_TERM_CD, 'D','DO','CY' ) AS MOT_FILE_DE_TERM_CD
        ,   BL.BKG_CGO_CATE
        ,   BL.BKG_DIR_CALL_FLG
        ,   '' AS MOT_FILE_TS_PORT_CD
        ,   NVL ( ( SELECT X.MOT_FILE_LOC_CD FROM PRI_MOT_FILE_LOC_PPT X WHERE X.LOC_CD = BL.PRE_RLY_PORT_CD ), BL.PRE_RLY_PORT_CD ) AS MOT_FILE_PRE_RLY_PORT_CD
        ,   NVL ( ( SELECT X.MOT_FILE_LOC_CD FROM PRI_MOT_FILE_LOC_PPT X WHERE X.LOC_CD = BL.PST_RLY_PORT_CD ), BL.PST_RLY_PORT_CD ) AS MOT_FILE_PST_RLY_PORT_CD
        ,   RM.MOT_FILE_CNTR_TP_CD AS MF_RAT_UT_CD
        ,   SUBSTR ( CS.CNTR_SZ_DESC, 1, 2 ) AS SZ 
        ,   CL.MQC_QTY
        ,   CL.CTRT_EFF_DT
        ,   CL.CTRT_EXP_DT
        ,   T1.CHG_CD
        ,   T1.RAT_UT_CD
        ,   T1.RT_AMT
        ,   SUM ( DECODE ( T1.CHG_CD, 'OFT',T1.RT_AMT, 0 ) ) OVER ( PARTITION BY BL.IND, BL.BKG_NO, T1.CNTR_TPSZ_CD, T1.CGO_TP_CD  ) AS OFT_AMT 
        
    FROM    BKG_CHG_LIST  T1
        ,   BKG_INFO_LIST BL
        ,   CTRT_INFO_LIST CL
        ,   PRI_MOT_FILE_LOC_PPT OL
        ,   PRI_MOT_FILE_LOC_PPT DL
        ,   PRI_MOT_FILE_LOC_PPT PL
        ,   PRI_MOT_FILE_RAT_UT_MAPG RM
        ,   MDM_CNTR_TP_SZ  TS
        ,   MDM_CNTR_SZ  CS
        
    WHERE   BL.BKG_NO = T1.BKG_NO(+)
    AND     BL.CTRT_NO = CL.CTRT_NO(+)
    AND     NVL ( BL.RT_APLY_DT, SYSDATE ) = NVL ( CL.RT_APLY_DT, SYSDATE ) 
    AND     BL.POR_CD = OL.LOC_CD
    AND     BL.DEL_CD = DL.LOC_CD
    AND     BL.POD_CD = PL.LOC_CD(+)
    
    AND     T1.CNTR_TPSZ_CD = RM.RAT_UT_CD(+)
    AND     T1.CNTR_TPSZ_CD = TS.CNTR_TPSZ_CD(+)
    AND     TS.CNTR_SZ_CD   = CS.CNTR_SZ_CD(+)
    
    ORDER   BY 2, 3, 4, 5, 6, 7, 8, 9			]]></sql>
			<params>
				<param name="test_exec_dt" type="12" value="" out="N"/>
				<param name="exec_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
