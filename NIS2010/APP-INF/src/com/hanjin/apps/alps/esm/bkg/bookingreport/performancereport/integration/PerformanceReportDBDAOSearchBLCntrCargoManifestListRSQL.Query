<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PerformanceReportDBDAOSearchBLCntrCargoManifestListRSQL">
			<desc><![CDATA[PerformanceReportDBDAOSearchBLCntrCargoManifestListRSQL]]></desc>
			<sql><![CDATA[
SELECT 
       BL_NO,
       BKG_NO, 
       BL_TP,
       CNTR_NO,
       CNTR_TPSZ_CD,
       SEAL_NO,
       PCK_QTY, PCK_TP_CD,
       CNTR_WGT,
       MEAS_QTY,
	   CSTMS_DESC,
       POR_CD,
       POL_CD,
       POD_CD,
       DEL_CD,  
       S_CD,        
       S_NM, 
       S_AD,
       C_CD,  
       C_NM, 
       C_AD,
       N_NM, 
       N_AD,
       PRE_POST_VVD ,
       PRE_POST_POL_CD ,
       PRE_POST_POL_YD_CD ,
       PRE_POST_POD_CD ,
       PRE_POST_POD_YD_CD ,
       PRE_POST
		/* ofc_cd가 CMBBA인 경우와  BOMBA & BOMSC인 경우에  MK_DESC, CMDT_DESC 컬럼을 추가함 2017.04.20 */
	   , CASE WHEN @[ofc_cd] in('CMBBA', 'BOMBA','BOMSC') 
			THEN (SELECT BD.MK_DESC FROM BKG_BL_MK_DESC BD WHERE BD.BKG_NO = Y.BKG_NO)
			ELSE TO_CLOB('') 
       END MK_DESC
	   , CASE WHEN @[ofc_cd] in('CMBBA', 'BOMBA','BOMSC') 
			THEN (SELECT BD.CMDT_DESC FROM BKG_BL_MK_DESC BD WHERE BD.BKG_NO = Y.BKG_NO)
			ELSE TO_CLOB('')
       END CMDT_DESC 
FROM(
SELECT 
       X.BL_NO,
       X.BKG_NO, 
       X.BL_TP,
       BC.CNTR_NO,
       BC.CNTR_TPSZ_CD,
       BKG_JOIN_FNC(CURSOR( SELECT CNTR_SEAL_NO 
                            FROM BKG_CNTR_SEAL_NO 
                            WHERE BKG_NO = BC.BKG_NO 
                            AND CNTR_NO = BC.CNTR_NO)) SEAL_NO,
       BC.PCK_QTY, BC.PCK_TP_CD,
       BC.CNTR_WGT,
       BC.MEAS_QTY,
       BD.CSTMS_DESC, 
       X.POR_CD,
       X.POL_CD,
       X.POD_CD,
       X.DEL_CD,  
       S.CUST_CNT_CD||LPAD(S.CUST_SEQ, 6, '0') S_CD,        
       S.CUST_NM S_NM, 
       S.CUST_ADDR S_AD,
       C.CUST_CNT_CD||LPAD(C.CUST_SEQ, 6, '0') C_CD,  
       C.CUST_NM C_NM, 
       C.CUST_ADDR C_AD,
       N.CUST_NM N_NM, 
       N.CUST_ADDR N_AD,
       BKG_GET_TOKEN_FNC(X.PRE_POST, 2) PRE_POST_VVD ,
       BKG_GET_TOKEN_FNC(X.PRE_POST, 3) PRE_POST_POL_CD ,
       BKG_GET_TOKEN_FNC(X.PRE_POST, 4) PRE_POST_POL_YD_CD ,
       BKG_GET_TOKEN_FNC(X.PRE_POST, 5) PRE_POST_POD_CD ,
       BKG_GET_TOKEN_FNC(X.PRE_POST, 6) PRE_POST_POD_YD_CD ,
       X.PRE_POST
FROM (
    SELECT 
      B.BL_NO,
      B.BKG_NO,
      B.POR_CD,
      B.POL_CD,
      B.POD_CD,
      B.DEL_CD,
      DECODE(B.BL_TP_CD, 'W', 'Sea Waybill', 'Original Bill') BL_TP,
      DECODE(@[mode_type], 'I', (
            SELECT MIN('I'||VSL_PRE_PST_CD||VSL_SEQ||','||VSL_CD||SKD_VOY_NO||SKD_DIR_CD||','||POL_CD||','||SUBSTR(POL_YD_CD, 6)||','||POD_CD ||','||SUBSTR(POD_YD_CD, 6))
                           FROM BKG_VVD
                WHERE BKG_NO = A.BKG_NO
                  AND POL_cd = A.POD_CD
                  AND VSL_PRE_PST_CD||VSL_SEQ > (
                                                    SELECT VSL_PRE_PST_CD||VSL_SEQ
                                                    FROM BKG_VVD
                                                    WHERE BKG_NO = A.BKG_NO
                                                      AND VSL_CD = A.VSL_CD
                                                      AND SKD_VOY_NO = A.SKD_VOY_NO
                                                      AND SKD_DIR_CD = A.SKD_DIR_CD
                                                      AND POD_cd = A.POD_CD
                                                 )
                GROUP BY VSL_CD||SKD_VOY_NO||SKD_DIR_CD, POL_CD, POD_CD) , 
                                                (
                                                    SELECT 'O'||','||VSL_CD||SKD_VOY_NO||SKD_DIR_CD||','||POL_CD||','||SUBSTR(POL_YD_CD, 6)||','||POD_CD ||','||SUBSTR(POD_YD_CD, 6)
                                                    FROM BKG_VVD
                                                    WHERE BKG_NO = A.BKG_NO
                                                      AND POD_CD = A.POL_CD
                                                      AND VSL_PRE_PST_CD||VSL_SEQ < (
                                                                                        SELECT VSL_PRE_PST_CD||VSL_SEQ
                                                                                        FROM BKG_VVD
                                                                                        WHERE BKG_NO = A.BKG_NO
                                                                                          AND VSL_CD = A.VSL_CD
                                                                                          AND SKD_VOY_NO = A.SKD_VOY_NO
                                                                                          AND SKD_DIR_CD = A.SKD_DIR_CD
                                                                                          AND POL_cd = A.POL_CD) 
                                                   )
             ) AS PRE_POST
 
    FROM BKG_VVD A, BKG_BOOKING B
    WHERE A.bkg_no = B.bkg_no
      AND B.BKG_STS_CD NOT IN ('X','S') 
       /* vvd_cd */
      #if(${vvd_cd} != '' ) 
      AND    A.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
      AND    A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
      AND    A.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1) 
      #end
      
      /* pol_cd */
      #if(${pol_cd} != '' )                       
      AND    A.POL_CD = @[pol_cd]
      #end
      
      /* pol_yd_cd */
      #if(${pol_yd_cd} != '' )                       
      AND    SUBSTR(A.POL_YD_CD,6) = @[pol_yd_cd]
      #end
      
   	  /* pod_cd */
      #if(${pod_cd} != '' ) 
      AND A.POD_CD = @[pod_cd] 
      #end

      /* pod_yd_cd */
      #if(${pod_yd_cd} != '' ) 
      AND SUBSTR(A.POD_YD_CD,6) = @[pod_yd_cd]
      #end
      
      /* CARGO TYPE */
      #if(${cargo_type} != 'ALL' ) 
      AND    B.BKG_CGO_TP_CD = @[cargo_type] 
      #end

      /* CARGO_ROUTE */
      #if(${cargo_route} != 'ALL' ) 
      AND DECODE(B.POL_CD,A.POL_CD,'L','T') = @[cargo_route] 
      #end
      
      /* br_por_cd */
      #if(${br_por_cd} != '' ) 
      AND B.POR_CD LIKE @[br_por_cd] ||'%'
      #end

      /* br_pol_cd */
      #if(${br_pol_cd} != '' ) 
      AND B.POL_CD LIKE  @[br_pol_cd] ||'%'
      #end
      
      /* br_pod_cd */
      #if(${br_pod_cd} != '' ) 
      AND B.POD_CD LIKE  @[br_pod_cd] ||'%'
      #end

      /* br_del_cd */
      #if(${br_del_cd} != '' ) 
      AND B.DEL_CD LIKE  @[br_del_cd] ||'%'
      #end
      ) X, 
      BKG_BL_DOC BD,
      BKG_CONTAINER  BC,
      BKG_CUSTOMER   S,
      BKG_CUSTOMER   C,
      BKG_CUSTOMER   N
WHERE 1 = 1
AND S.BKG_NO(+) = X.BKG_NO
AND S.BKG_CUST_TP_CD(+) = 'S'
AND C.BKG_NO(+) = X.BKG_NO
AND C.BKG_CUST_TP_CD(+) = 'C'
AND N.BKG_NO(+) = X.BKG_NO
AND N.BKG_CUST_TP_CD(+) = 'N'
AND X.BKG_NO = BC.BKG_NO
AND X.BKG_NO = BD.BKG_NO

/* fdr_vvd_cd */
#if(${fdr_vvd_cd} != '' ) 
AND BKG_GET_TOKEN_FNC(X.PRE_POST, 2) = @[fdr_vvd_cd] 
#end

/* fdr_pol_cd */
#if(${fdr_pol_cd} != '' ) 
AND  BKG_GET_TOKEN_FNC(X.PRE_POST, 3)  = @[fdr_pol_cd] 
#end

/* fdr_pol_yd_cd */
#if(${fdr_pol_yd_cd} != '' ) 
AND BKG_GET_TOKEN_FNC(X.PRE_POST, 4) = @[fdr_pol_yd_cd] 
#end

/* fdr_pod_cd */
#if(${fdr_pod_cd} != '' ) 
AND BKG_GET_TOKEN_FNC(X.PRE_POST, 5) = @[fdr_pod_cd] 
#end

/* fdr_pod_yd_cd */
#if(${fdr_pod_yd_cd} != '' ) 
AND BKG_GET_TOKEN_FNC(X.PRE_POST, 6) = @[fdr_pod_yd_cd] 
#end
)Y			]]></sql>
			<params>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="mode_type" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pol_yd_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pod_yd_cd" type="12" value="" out="N"/>
				<param name="cargo_type" type="12" value="" out="N"/>
				<param name="cargo_route" type="12" value="" out="N"/>
				<param name="br_por_cd" type="12" value="" out="N"/>
				<param name="br_pol_cd" type="12" value="" out="N"/>
				<param name="br_pod_cd" type="12" value="" out="N"/>
				<param name="br_del_cd" type="12" value="" out="N"/>
				<param name="fdr_vvd_cd" type="12" value="" out="N"/>
				<param name="fdr_pol_cd" type="12" value="" out="N"/>
				<param name="fdr_pol_yd_cd" type="12" value="" out="N"/>
				<param name="fdr_pod_cd" type="12" value="" out="N"/>
				<param name="fdr_pod_yd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
