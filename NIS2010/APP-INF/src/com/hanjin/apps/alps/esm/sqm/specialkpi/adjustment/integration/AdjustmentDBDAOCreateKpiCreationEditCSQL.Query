<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AdjustmentDBDAOCreateKpiCreationEditCSQL">
			<desc><![CDATA[CreateKpiCreationEdit]]></desc>
			<sql><![CDATA[
INSERT INTO SQM_SPCL_CFM_QTA (
         BSE_TP_CD
        ,BSE_YR
        ,BSE_QTR_CD
        ,SPCL_TGT_CD
        ,TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,VSL_CD
        ,SKD_VOY_NO
        ,SKD_DIR_CD
        ,RGN_OFC_CD
        ,RHQ_CD
        ,AQ_CD
        ,CONV_DIR_CD
        ,LOD_QTY
        ,GRS_RPB_REV
        ,PA_CM_UC_AMT
        ,RA_CM_UC_AMT
        ,SQM_CNG_TP_CD
        ,CRE_USR_ID
        ,CRE_DT
        ,UPD_USR_ID
        ,UPD_DT
)
  SELECT C1.BSE_TP_CD
        ,C1.BSE_YR
        ,C1.BSE_QTR_CD
        ,C1.SPCL_TGT_CD
        ,C1.TRD_CD
        ,C1.RLANE_CD
        ,C1.DIR_CD
        ,C1.VSL_CD
        ,C1.SKD_VOY_NO
        ,C1.SKD_DIR_CD
        ,C1.RGN_OFC_CD
        ,C1.RHQ_CD
        ,C1.AQ_CD
        ,C1.CONV_DIR_CD
        ,DECODE(C1.VVD_RNK, 1, C1.LOD_QTY + C1.DIFF_LOD, C1.LOD_QTY) AS LOD_QTY
        ,RHQ_RPB as REV_RPB
        ,C1.PA_CM_UC_AMT
        ,C1.RA_CM_UC_AMT
        ,'I' AS SQM_CNG_TP_CD
        ,@[usr_id] AS CRE_USR_ID
        ,SYSDATE   AS CRE_DT
        ,@[usr_id] AS UPD_USR_ID
        ,SYSDATE   AS UPD_DT
    FROM (
            SELECT B2.BSE_TP_CD
                  ,B2.BSE_YR
                 ,B2.BSE_QTR_CD
                  ,B2.SPCL_TGT_CD
                  ,B2.TRD_CD
                  ,B2.RLANE_CD
                  ,B2.DIR_CD
                  ,B1.VSL_CD
                  ,B1.SKD_VOY_NO
                  ,B1.SKD_DIR_CD
                  ,B2.RGN_OFC_CD
                  ,B2.RHQ_CD
                  ,NVL((SELECT N3RD_PRNT_OFC_CD
                      FROM SQM_ORGANIZATION_V V
                     WHERE V.OFC_CD = B2.RGN_OFC_CD),'') AS AQ_CD
                  ,B2.CONV_DIR_CD
                  ,B1.BSE_WK
                  ,DECODE(LOD_RNK, 1, B2.OFC_LOD + B2.DIFF_LOD, B2.OFC_LOD) AS OFC_LOD
                  ,DECODE(B1.VVD_CNT, 0, 0, FLOOR(DECODE(LOD_RNK, 1, B2.OFC_LOD + B2.DIFF_LOD, B2.OFC_LOD)/B1.VVD_CNT)) AS LOD_QTY
                  ,ROUND(DECODE(B1.VVD_CNT, 0, 0, MOD(DECODE(LOD_RNK, 1, B2.OFC_LOD + B2.DIFF_LOD, B2.OFC_LOD), B1.VVD_CNT))) AS DIFF_LOD
                  ,B2.PA_CM_UC_AMT
                  ,B2.RA_CM_UC_AMT
                  ,B1.VVD_CNT
                  ,B1.VVD_RNK
                  ,B2.OFC_LOD AS OFC_LOD_ORG
                  ,B2.RHQ_LOD
                  ,B2.RHQ_REV
                  ,b2.RHQ_RPB
              FROM (
                      SELECT BSE_TP_CD
                            ,BSE_YR
                            ,BSE_QTR_CD
                            ,TRD_CD
                            ,RLANE_CD
                            ,DIR_CD
                            ,VSL_CD
                            ,SKD_VOY_NO
                            ,SKD_DIR_CD
                            ,BSE_MON
                            ,BSE_WK
                            ,SUB_TRD_CD
                            ,IOC_CD
                            ,FNL_BSA_CAPA
                            ,COUNT(*) OVER (PARTITION BY BSE_TP_CD,BSE_YR,BSE_QTR_CD,TRD_CD,RLANE_CD,DIR_CD) AS VVD_CNT
                            ,DENSE_RANK() OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, TRD_CD, RLANE_CD, DIR_CD ORDER BY BSE_WK, VSL_CD, SKD_VOY_NO) AS VVD_RNK
                        FROM SQM_SPCL_TGT_VVD
                       WHERE 1=1
                         AND BSE_TP_CD  = @[f_bse_tp_cd]  -- Q, Y 필수
                         AND BSE_YR     = @[f_bse_yr]     -- 필수
#if(${f_bse_tp_cd} == 'Q')
                         AND BSE_QTR_CD = @[f_bse_qtr_cd] -- Quartely일때 필수
#end
                   ) B1
                  ,(
                      SELECT A2.BSE_TP_CD
                            ,A2.BSE_YR
                            ,A2.BSE_QTR_CD
                            ,A2.SPCL_TGT_CD
                            ,A2.TRD_CD
                            ,A2.RLANE_CD
                            ,A2.DIR_CD
                            ,A2.CONV_DIR_CD
                            ,A2.RGN_OFC_CD
                            ,A2.RHQ_CD
                            ,NVL(ROUND(A1.RHQ_LOD * A2.LOD_POTN_RTO/100),0) AS OFC_LOD
                            ,A2.PA_CM_UC_AMT
                            ,A2.RA_CM_UC_AMT
                            ,A1.RHQ_LOD
                            ,A1.RHQ_REV
                            ,A1.RHQ_RPB
                            ,NVL(A1.RHQ_LOD - SUM(ROUND(A1.RHQ_LOD * A2.LOD_POTN_RTO/100)) OVER (PARTITION BY A2.BSE_TP_CD, A2.BSE_YR, A2.BSE_QTR_CD, A2.TRD_CD, A2.RLANE_CD, A2.DIR_CD, A2.RHQ_CD),0)     AS DIFF_LOD
                            ,ROW_NUMBER() OVER (PARTITION BY A2.BSE_TP_CD, A2.BSE_YR, A2.BSE_QTR_CD, A2.TRD_CD, A2.RLANE_CD, A2.DIR_CD, A2.RHQ_CD ORDER BY A2.LOD_POTN_RTO DESC, A2.RGN_OFC_CD) AS LOD_RNK
                            ,A2.LOD_POTN_RTO/100 AS LOD_POTN_RTO
                            ,A2.REV_POTN_RTO/100 AS REV_POTN_RTO
                        FROM (
                              SELECT BSE_TP_CD
                                    ,BSE_YR
                                    ,BSE_QTR_CD
                                    ,SPCL_TGT_CD
                                    ,TRD_CD
                                    ,RLANE_CD
                                    ,DIR_CD
                                    ,RHQ_CD
                                    ,LOD_QTY AS RHQ_LOD
                                    ,LOD_QTY * GRS_RPB_REV  AS RHQ_REV
                                    ,GRS_RPB_REV AS RHQ_RPB
                                FROM SQM_SPCL_LOD_REV
                               WHERE 1=1
                                 AND BSE_TP_CD   = @[f_bse_tp_cd]  -- Q, Y 필수
                                 AND BSE_YR      = @[f_bse_yr]     -- 필수
#if(${f_bse_tp_cd} == 'Q')
                                 AND BSE_QTR_CD  = @[f_bse_qtr_cd]   -- Quartely일때 필수
#end
                                 AND SPCL_TGT_CD = @[f_spcl_tgt_cd]  -- S, R 필수 
                             )  A1
                            ,SQM_SPCL_LANE_OFC_COST A2
                       WHERE 1=1
                         AND A2.BSE_TP_CD   = A1.BSE_TP_CD   (+)
                         AND A2.BSE_YR      = A1.BSE_YR      (+)
                         AND A2.BSE_QTR_CD  = A1.BSE_QTR_CD  (+)
                         AND A2.SPCL_TGT_CD = A1.SPCL_TGT_CD (+)
                         AND A2.TRD_CD      = A1.TRD_CD      (+)
                         AND A2.RLANE_CD    = A1.RLANE_CD    (+)
                         AND A2.DIR_CD      = A1.DIR_CD      (+)
                         AND A2.RHQ_CD      = A1.RHQ_CD      (+)
                         AND A2.BSE_TP_CD   = @[f_bse_tp_cd]  -- Q, Y 필수
                         AND A2.BSE_YR      = @[f_bse_yr]     -- 필수
#if(${f_bse_tp_cd} == 'Q')
                         AND A2.BSE_QTR_CD  = @[f_bse_qtr_cd]   -- Quartely일때 필수
#end
                         AND A2.SPCL_TGT_CD = @[f_spcl_tgt_cd]  -- S, R 필수
                    ORDER BY BSE_QTR_CD
                            ,TRD_CD
                            ,RLANE_CD
                            ,DIR_CD
                            ,RHQ_CD
                            ,RGN_OFC_CD
                   ) B2
             WHERE 1=1
               AND B2.BSE_TP_CD  = B1.BSE_TP_CD
               AND B2.BSE_YR     = B1.BSE_YR
               AND B2.BSE_QTR_CD = B1.BSE_QTR_CD
               AND B2.TRD_CD     = B1.TRD_CD
               AND B2.RLANE_CD   = B1.RLANE_CD
               AND B2.DIR_CD     = B1.DIR_CD
         ) C1
ORDER BY BSE_QTR_CD
        ,TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,RHQ_CD
        ,RGN_OFC_CD
        ,BSE_WK			]]></sql>
			<params>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="f_spcl_tgt_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
