<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PlanningDBDAOCreateQtaLoadRevForSectorCSQL">
			<desc><![CDATA[[QTA Set up for IAS Sector by Head Office] 의 데이터를 [생성]한다

CHM-201639851 2016.01.28 Basic Data Creation for IAS Secotr 화면의 Creation 로직 변경
2016.04.22 CHM-201641278 [SQM] IAS Trade 판매목표 수립 Portion 연결 시스템 수정 요청 CSR]]></desc>
			<sql><![CDATA[
INSERT INTO SQM_SCTR_LOD_REV(BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, RLANE_CD, DIR_CD, FNL_BSA_CAPA, PF_GRP_CD, RGN_OFC_CD, POL_CD, POD_CD, TRD_CD, SUB_TRD_CD, RHQ_CD, GID_LOD_QTY, GID_GRS_RPB_REV, LOD_QTY, GRS_RPB_REV, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT )
 SELECT IF1.BSE_TP_CD
      , IF1.BSE_YR
      , IF1.BSE_QTR_CD
      , IF1.OFC_VW_CD
      , IF1.RLANE_CD
      , IF1.DIR_CD
      , IF1.FNL_BSA_CAPA
      , IF1.PF_GRP_CD
      , IF1.RGN_OFC_CD
      , IF1.POL_CD
      , IF1.POD_CD
      , IF1.TRD_CD
      , IF1.SUB_TRD_CD
      , IF1.RHQ_CD
      , IF1.GID_LOD_QTY
      , IF1.GID_GRS_RPB_REV
      , NVL(DECODE(PRE1.LOD_QTY,    0,PRE2.PRE_LOD_QTY,     PRE1.LOD_QTY), 0)     AS LOD_QTY
      , NVL(DECODE(PRE1.GRS_RPB_REV,0,PRE2.PRE_GRS_RPB_REV, PRE1.GRS_RPB_REV), 0) AS GRS_RPB_REV
      , @[f_usr_id]             AS CRE_USR_ID
      , SYSDATE                 AS CRE_DT
      , @[f_usr_id]             AS UPD_USR_ID
      , SYSDATE                 AS UPD_DT
   FROM (
           SELECT C1.BSE_TP_CD
                , C1.BSE_YR
                , C1.BSE_QTR_CD
                , C1.OFC_VW_CD
                , C1.RLANE_CD
                , C1.DIR_CD
                , C3.BSA_CAPA AS FNL_BSA_CAPA
                , C1.PF_GRP_CD
                , C1.RGN_OFC_CD
                , C1.POL_CD
                , C1.POD_CD
                , C1.TRD_CD
                , C1.SUB_TRD_CD
                , C1.RHQ_CD
                , NVL(C2.LOD_QTY, 0) AS GID_LOD_QTY
                , ROUND(DECODE(NVL(C2.LOD_QTY, 0), 0, 0, C2.GRS_TTL_REV/C2.LOD_QTY)) AS GID_GRS_RPB_REV
                , ROW_NUMBER() OVER (PARTITION BY C1.BSE_TP_CD, C1.BSE_YR, C1.BSE_QTR_CD, C1.OFC_VW_CD, C1.RLANE_CD, C1.DIR_CD, C1.PF_GRP_CD, C1.RGN_OFC_CD, C1.POL_CD, C1.POD_CD ORDER BY C3.BSA_CAPA DESC) BSA_RANK
             FROM SQM_SCTR_LANE_OFC C1
                , SQM_SCTR_PERF_IF C2
                , ( 
                   SELECT DISTINCT B1.DIR_CD
                        , B1.RLANE_CD
                        , B1.BSA_CAPA
                        , B1.PF_GRP_CD
                     FROM (
                           SELECT A1.DIR_CD
                                , A1.RLANE_CD
                                , A1.FNL_BSA_CAPA
                                , A1.PF_GRP_CD
                                , MAX(A2.RANGE_BSA)+9 AS BSA_CAPA
                             FROM ( 
                                   SELECT DISTINCT S1.RLANE_CD
                                        , S1.DIR_CD
                                        , S1.FNL_BSA_CAPA
                                        , S2.PF_GRP_CD
                                     FROM SQM_QTA_TGT_VVD S1
                                        , SQM_SCTR_PF_GRP S2
                                    WHERE 1 = 1
                                      AND S1.BSE_TP_CD    = S2.BSE_TP_CD
                                      AND S1.BSE_YR       = S2.BSE_YR
                                      AND S1.BSE_QTR_CD   = S2.BSE_QTR_CD
                                      AND S1.TRD_CD       = S2.TRD_CD
                                      AND S1.RLANE_CD     = S2.RLANE_CD
                                      AND S1.PF_SVC_TP_CD = S2.PF_SVC_TP_CD
                                      AND S1.BSE_TP_CD    = @[f_bse_tp_cd]
                                      AND S1.BSE_YR       = @[f_bse_yr]
                                      AND S1.BSE_QTR_CD   = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
                                      AND S1.TRD_CD       = 'IAS'
                                 ORDER BY DIR_CD
                                        , RLANE_CD
                                        , FNL_BSA_CAPA DESC
                                  ) A1
                                , ( 
                                   SELECT DISTINCT RLANE_CD
                                        , DIR_CD
                                        , FNL_BSA_CAPA
                                        , FNL_BSA_CAPA - 9 AS RANGE_BSA
                                     FROM SQM_QTA_TGT_VVD
                                    WHERE BSE_TP_CD  = @[f_bse_tp_cd]
                                      AND BSE_YR     = @[f_bse_yr]
                                      AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
                                      AND TRD_CD     = 'IAS'
                                 ORDER BY DIR_CD
                                        , RLANE_CD
                                        , FNL_BSA_CAPA DESC
                                  ) A2
                            WHERE 1 = 1
                              AND A1.DIR_CD        = A2.DIR_CD
                              AND A1.RLANE_CD      = A2.RLANE_CD
                              AND A1.FNL_BSA_CAPA >= A2.RANGE_BSA
                         GROUP BY A1.DIR_CD
                                , A1.RLANE_CD
                                , A1.FNL_BSA_CAPA
                                , A1.PF_GRP_CD
                         ORDER BY A1.DIR_CD
                                , A1.RLANE_CD
                                , A1.FNL_BSA_CAPA DESC
                          ) B1
                  ) C3
            WHERE 1 = 1
              AND C1.BSE_TP_CD  = C2.BSE_TP_CD(+)
              AND C1.BSE_YR     = C2.BSE_YR(+)
              AND C1.BSE_QTR_CD = C2.BSE_QTR_CD(+)
              AND C1.OFC_VW_CD  = C2.OFC_VW_CD(+)
              AND C1.RLANE_CD   = C2.RLANE_CD(+)
              AND C1.DIR_CD     = C2.DIR_CD(+)
              AND C1.RGN_OFC_CD = C2.RGN_OFC_CD(+)
              AND C1.POL_CD     = C2.POL_CD(+)
              AND C1.POD_CD     = C2.POD_CD(+)
              AND C1.RLANE_CD   = C3.RLANE_CD
              AND C1.DIR_CD     = C3.DIR_CD
              AND C1.PF_GRP_CD  = C3.PF_GRP_CD
              AND C1.BSE_TP_CD  = @[f_bse_tp_cd]
              AND C1.BSE_YR     = @[f_bse_yr]
              AND C1.BSE_QTR_CD = DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd])
          ) IF1
          , SQM_SCTR_LOD_REV PRE1
          , (
         SELECT BSE_TP_CD
              , @[f_bse_yr] BSE_YR
              , DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd]) BSE_QTR_CD
              , OFC_VW_CD
              , RLANE_CD
              , DIR_CD
              , PF_GRP_CD
              , RGN_OFC_CD
              , POL_CD
              , POD_CD
              , LOD_QTY AS PRE_LOD_QTY
              , GRS_RPB_REV AS PRE_GRS_RPB_REV
              , ROW_NUMBER() OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, RLANE_CD, DIR_CD, PF_GRP_CD, RGN_OFC_CD, POL_CD, POD_CD ORDER BY FNL_BSA_CAPA DESC) BSA_RANK
              , COUNT(*) OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, RLANE_CD, DIR_CD, PF_GRP_CD, RGN_OFC_CD, POL_CD, POD_CD ) MAX_BSA_RANK
           FROM SQM_SCTR_LOD_REV R1
          WHERE BSE_TP_CD = @[f_bse_tp_cd]
            AND BSE_YR    = TO_CHAR(ADD_MONTHS(TO_DATE(@[f_bse_yr]||DECODE(SUBSTR(DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd]), 0, 1), '1', '01', '2','04', '3', '07', '4', '10','1'), 'YYYYMM'), -2), 'YYYY')
            AND BSE_QTR_CD= TO_CHAR(ADD_MONTHS(TO_DATE(@[f_bse_yr]||DECODE(SUBSTR(DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd]), 0, 1), '1', '01', '2','04', '3', '07', '4', '10','1'), 'YYYYMM'), -2), 'Q')||'Q'
--            AND OFC_VW_CD   = 'L'
--            AND SUB_TRD_CD  = 'IA'
--            AND RLANE_CD    = 'AUSIA'
--            AND POL_CD = 'SGSIN'
--            AND POD_CD = 'AUBNE'
--            AND RGN_OFC_CD = 'BKKSC'
                                                                                                  
        UNION ALL
         -- FNL_BSA_CAPA기준으로 가장작은 숫자에 해당하는 RANK에 10개를 만들어준다. 지난 분기보다 현재분기에 FNL_BSA_CAPA 갯수가 더 많을 수 있으므로
         SELECT A.BSE_TP_CD
              , A.BSE_YR
              , A.BSE_QTR_CD
              , A.OFC_VW_CD
              , A.RLANE_CD
              , A.DIR_CD
              , A.PF_GRP_CD
              , A.RGN_OFC_CD
              , A.POL_CD
              , A.POD_CD
              , A.PRE_LOD_QTY
              , A.PRE_GRS_RPB_REV
              , B.BSA_RANK + A.MAX_BSA_RANK AS BSA_RANK
              , A.MAX_BSA_RANK
           FROM
                (SELECT BSE_TP_CD
                      , @[f_bse_yr] BSE_YR
                      , DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd]) BSE_QTR_CD
                      , OFC_VW_CD
                      , RLANE_CD
                      , DIR_CD
                      , PF_GRP_CD
                      , RGN_OFC_CD
                      , POL_CD
                      , POD_CD
                      , MIN(LOD_QTY) KEEP (DENSE_RANK FIRST ORDER BY FNL_BSA_CAPA) AS PRE_LOD_QTY -- FNL_BSA_CAPA 기준으로 가장 큰숫자부터 RANK 정렬
                      , MIN(GRS_RPB_REV) KEEP (DENSE_RANK FIRST ORDER BY FNL_BSA_CAPA) AS PRE_GRS_RPB_REV
                      , COUNT(*) AS MAX_BSA_RANK
                   FROM SQM_SCTR_LOD_REV R1
                  WHERE BSE_TP_CD = @[f_bse_tp_cd]
                    AND BSE_YR    = TO_CHAR(ADD_MONTHS(TO_DATE(@[f_bse_yr]||DECODE(SUBSTR(DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd]), 0, 1), '1', '01', '2', '04', '3', '07', '4', '10','1'), 'YYYYMM'), -2), 'YYYY')
                    AND BSE_QTR_CD= TO_CHAR(ADD_MONTHS(TO_DATE(@[f_bse_yr]||DECODE(SUBSTR(DECODE(@[f_bse_tp_cd], 'Y', '00', @[f_bse_qtr_cd]), 0, 1), '1', '01', '2','04', '3', '07', '4', '10', '1'), 'YYYYMM'), -2), 'Q')||'Q'
--                    AND OFC_VW_CD   = 'L'
--                    AND SUB_TRD_CD  = 'IA'
--                    AND RLANE_CD    = 'AUSIA'
                    GROUP BY BSE_TP_CD
                      , BSE_YR
                      , BSE_QTR_CD
                      , OFC_VW_CD
                      , RLANE_CD
                      , DIR_CD
                      , PF_GRP_CD
                      , RGN_OFC_CD
                      , POL_CD
                      , POD_CD
                ) A
              , (SELECT LEVEL AS BSA_RANK FROM DUAL CONNECT BY LEVEL < 10) B
        ) PRE2
  WHERE PRE1.BSE_TP_CD(+)    = IF1.BSE_TP_CD
    AND PRE1.BSE_YR(+)       = IF1.BSE_YR
    AND PRE1.BSE_QTR_CD(+)   = IF1.BSE_QTR_CD
    AND PRE1.OFC_VW_CD(+)    = IF1.OFC_VW_CD
    AND PRE1.RLANE_CD(+)     = IF1.RLANE_CD
    AND PRE1.DIR_CD(+)       = IF1.DIR_CD
    AND PRE1.FNL_BSA_CAPA(+) = IF1.FNL_BSA_CAPA
    AND PRE1.PF_GRP_CD(+)    = IF1.PF_GRP_CD
    AND PRE1.RGN_OFC_CD(+)   = IF1.RGN_OFC_CD
    AND PRE1.POL_CD(+)       = IF1.POL_CD
    AND PRE1.POD_CD(+)       = IF1.POD_CD  
        
    AND PRE2.BSE_TP_CD(+)    = IF1.BSE_TP_CD
    AND PRE2.BSE_YR(+)       = IF1.BSE_YR
    AND PRE2.BSE_QTR_CD(+)   = IF1.BSE_QTR_CD
    AND PRE2.OFC_VW_CD(+)    = IF1.OFC_VW_CD
    AND PRE2.RLANE_CD(+)     = IF1.RLANE_CD
    AND PRE2.DIR_CD(+)       = IF1.DIR_CD
    AND PRE2.BSA_RANK(+)     = IF1.BSA_RANK
    AND PRE2.PF_GRP_CD(+)    = IF1.PF_GRP_CD
    AND PRE2.RGN_OFC_CD(+)   = IF1.RGN_OFC_CD
    AND PRE2.POL_CD(+)       = IF1.POL_CD
    AND PRE2.POD_CD(+)       = IF1.POD_CD			]]></sql>
			<params>
				<param name="f_usr_id" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
