<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTCostDBDAOSearchMTCostDetailListRSQL">
			<desc><![CDATA[Route별 MT Cost Detail 조회]]></desc>
			<sql><![CDATA[
#if(${f_ecc_cd} != 'USHOF') 

SELECT COST_YRMON
      , ECC_CD
      , CNTR_TPSZ_CD
      , ORI_DEST_CD
#if(${f_excl_sts} == '1') 
      , N1ST_YD_CD
      , LST_YD_CD
      , ROUT_SEQ
#end
      , TTL_CNTR_QTY
      , TTL_QTY
      , TTL_CNTR_RT
      , YD_CD1
      , YD_CD2
      , YD_CD3
      , YD_CD4
      , YD_CD5
      , YD_CD6
      , YD_CD7
      , YD_CD8
      , YD_CD9
      , YD_CD10
      , LST_YD_IN_CONTI
      , LST_MVMT_IN_CONTI
      , MTY_STVG_TTL_AMT1
      , MTY_STVG_TTL_AMT2
      , MTY_STVG_TTL_AMT3
      , MTY_STVG_TTL_AMT4
      , MTY_STVG_TTL_AMT5
      , MTY_STVG_TTL_AMT6
      , MTY_STVG_TTL_AMT7
      , MTY_STVG_TTL_AMT8
      , MTY_STVG_TTL_AMT9
      , MTY_STVG_TTL_AMT10
      , MTY_TRSP_TTL_AMT1
      , MTY_TRSP_TTL_AMT2
      , MTY_TRSP_TTL_AMT3
      , MTY_TRSP_TTL_AMT4
      , MTY_TRSP_TTL_AMT5
      , MTY_TRSP_TTL_AMT6
      , MTY_TRSP_TTL_AMT7
      , MTY_TRSP_TTL_AMT8
      , MTY_TRSP_TTL_AMT9
      , MTY_TRSP_TTL_AMT10
      , MTY_TTL_AMT
      , DECODE(TTL_QTY,0,0,SUM(MTY_TTL_AMT) OVER () / TTL_QTY) AS MTY_TTL_UC_AMT
   FROM
        (SELECT COST_YRMON
              , ECC_CD
              , CNTR_TPSZ_CD
              , ORI_DEST_CD
#if(${f_excl_sts} == '1') 
	#if(${f_cost_loc_grp_cd} == 'Y')
              , N1ST_YD_CD
              , LST_YD_CD
              , ROUT_SEQ
	#else
              , ROUT_N1ST_ECC_CD AS N1ST_YD_CD
              , ROUT_LST_ECC_CD  AS LST_YD_CD
              , 1 ROUT_SEQ
	#end
#end
              , SUM(TTL_CNTR_QTY) AS TTL_CNTR_QTY
              , MAX(TTL_QTY) TTL_QTY
              , DECODE(MAX(TTL_QTY), 0, 0, (SUM(TTL_CNTR_QTY) / MAX(TTL_QTY) * 100)) TTL_CNTR_RT
              , YD_CD1
              , YD_CD2
              , YD_CD3
              , YD_CD4
              , YD_CD5
              , YD_CD6
              , YD_CD7
              , YD_CD8
              , YD_CD9
              , YD_CD10
              , LST_YD_IN_CONTI
              , LST_MVMT_IN_CONTI
              , NVL(SUM(MTY_STVG_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT1
              , NVL(SUM(MTY_STVG_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT2
              , NVL(SUM(MTY_STVG_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT3
              , NVL(SUM(MTY_STVG_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT4
              , NVL(SUM(MTY_STVG_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT5
              , NVL(SUM(MTY_STVG_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT6
              , NVL(SUM(MTY_STVG_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT7
              , NVL(SUM(MTY_STVG_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT8
              , NVL(SUM(MTY_STVG_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT9
              , NVL(SUM(MTY_STVG_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT10
              , NVL(SUM(MTY_TRSP_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT1
              , NVL(SUM(MTY_TRSP_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT2
              , NVL(SUM(MTY_TRSP_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT3
              , NVL(SUM(MTY_TRSP_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT4
              , NVL(SUM(MTY_TRSP_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT5
              , NVL(SUM(MTY_TRSP_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT6
              , NVL(SUM(MTY_TRSP_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT7
              , NVL(SUM(MTY_TRSP_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT8
              , NVL(SUM(MTY_TRSP_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT9
              , NVL(SUM(MTY_TRSP_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT10
              , NVL(SUM(MTY_STVG_TTL_AMT1), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT2), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT3), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT4), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT5), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT6), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT7), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT8), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT9), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT10), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT1), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT2), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT3), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT4), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT5), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT6), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT7), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT8), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT9), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT10), 0) AS MTY_TTL_AMT
           FROM
                (SELECT COST_YRMON
                      , DECODE('O', @[f_ori_dest], ROUT_N1ST_ECC_CD, ROUT_LST_ECC_CD) AS ECC_CD
                      , ROUT_N1ST_ECC_CD
                      , ROUT_LST_ECC_CD
                      , CNTR_TPSZ_CD
                      , DECODE('O', @[f_ori_dest], 'Origin Based', 'Dest Based') AS ORI_DEST_CD
                      , ROUT_N1ST_YD_CD AS N1ST_YD_CD
                      , ROUT_LST_YD_CD AS LST_YD_CD
                      , ROUT_SEQ
                      , TTL_CNTR_QTY
                      , SUM(TTL_CNTR_QTY) OVER () TTL_QTY
                      , YD_CD1
                      , YD_CD2
                      , YD_CD3
                      , YD_CD4
                      , YD_CD5
                      , YD_CD6
                      , YD_CD7
                      , YD_CD8
                      , YD_CD9
                      , YD_CD10
                      , LST_YD_IN_CONTI
                      , LST_MVMT_IN_CONTI
                      , MTY_STVG_TTL_AMT1
                      , MTY_STVG_TTL_AMT2
                      , MTY_STVG_TTL_AMT3
                      , MTY_STVG_TTL_AMT4
                      , MTY_STVG_TTL_AMT5
                      , MTY_STVG_TTL_AMT6
                      , MTY_STVG_TTL_AMT7
                      , MTY_STVG_TTL_AMT8
                      , MTY_STVG_TTL_AMT9
                      , MTY_STVG_TTL_AMT10
                      , MTY_TRSP_TTL_AMT1
                      , MTY_TRSP_TTL_AMT2
                      , MTY_TRSP_TTL_AMT3
                      , MTY_TRSP_TTL_AMT4
                      , MTY_TRSP_TTL_AMT5
                      , MTY_TRSP_TTL_AMT6
                      , MTY_TRSP_TTL_AMT7
                      , MTY_TRSP_TTL_AMT8
                      , MTY_TRSP_TTL_AMT9
                      , MTY_TRSP_TTL_AMT10
                   FROM
                        (SELECT COST_YRMON
                              , CNTR_TPSZ_CD
                              , ROUT_N1ST_YD_CD
                              , ROUT_LST_YD_CD
                              , ROUT_SEQ
                              , MVMT_SEQ
                              , RNUM
                              , ROUT_N1ST_ECC_CD
                              , ROUT_LST_ECC_CD
                              , TTL_CNTR_QTY
                              , YD_CD YD_CD1
                              , LEAD(YD_CD, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD2
                              , LEAD(YD_CD, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD3
                              , LEAD(YD_CD, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD4
                              , LEAD(YD_CD, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD5
                              , LEAD(YD_CD, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD6
                              , LEAD(YD_CD, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD7
                              , LEAD(YD_CD, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD8
                              , LEAD(YD_CD, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD9
                              , LEAD(YD_CD, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD10
                              , MAX(LST_YD_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_YD_IN_CONTI
                              , MAX(LST_YD_MVMT_STS_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_MVMT_IN_CONTI
                              , MTY_STVG_TTL_AMT MTY_STVG_TTL_AMT1
                              , LEAD(MTY_STVG_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT2
                              , LEAD(MTY_STVG_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT3
                              , LEAD(MTY_STVG_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT4
                              , LEAD(MTY_STVG_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT5
                              , LEAD(MTY_STVG_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT6
                              , LEAD(MTY_STVG_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT7
                              , LEAD(MTY_STVG_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT8
                              , LEAD(MTY_STVG_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT9
                              , LEAD(MTY_STVG_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT10
                              , MTY_TRSP_TTL_AMT MTY_TRSP_TTL_AMT1
                              , LEAD(MTY_TRSP_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT2
                              , LEAD(MTY_TRSP_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT3
                              , LEAD(MTY_TRSP_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT4
                              , LEAD(MTY_TRSP_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT5
                              , LEAD(MTY_TRSP_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT6
                              , LEAD(MTY_TRSP_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT7
                              , LEAD(MTY_TRSP_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT8
                              , LEAD(MTY_TRSP_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT9
                              , LEAD(MTY_TRSP_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT10
                           FROM
                                (SELECT COST_YRMON
                                      , CNTR_TPSZ_CD
                                      , ROUT_N1ST_YD_CD
                                      , ROUT_LST_YD_CD
                                      , ROUT_SEQ
                                      , ROUT_N1ST_ECC_CD
                                      , ROUT_LST_ECC_CD
                                      , MVMT_SEQ
                                      , YD_CD
                                      , MAX(LST_YD_CD) AS LST_YD_CD
                                      , MAX(LST_YD_MVMT_STS_CD) LST_YD_MVMT_STS_CD
                                      , SUM(MTY_STVG_TTL_AMT) AS MTY_STVG_TTL_AMT
                                      , SUM(MTY_TRSP_TTL_AMT) AS MTY_TRSP_TTL_AMT
                                      , TTL_CNTR_QTY
                                      , ROW_NUMBER() OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY MVMT_SEQ) AS RNUM
                                   FROM
                                        (SELECT COST_YRMON
                                              , CNTR_TPSZ_CD
                                              , ROUT_N1ST_YD_CD
                                              , ROUT_LST_YD_CD
                                              , ROUT_SEQ
                                              , ROUT_N1ST_ECC_CD
                                              , ROUT_LST_ECC_CD
#if(${f_cost_loc_grp_cd} == 'Y')
                                              , MVMT_SEQ
                                              , YD_CD
                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_CD, NULL) AS LST_YD_CD
#else
                                              , CASE WHEN SUBSTR(YD_CD, 1, 5) = SUBSTR(ROUT_N1ST_YD_CD, 1, 5) 
                                                     THEN MIN(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))
                                                     ELSE MAX(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))
                                                END AS MVMT_SEQ
                                              , SUBSTR(YD_CD, 1, 5) AS YD_CD
                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], SUBSTR(LST_YD_CD, 1, 5), NULL) AS LST_YD_CD
#end
                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_MVMT_STS_CD, NULL) AS LST_YD_MVMT_STS_CD
                                              , ROUND(MTY_STVG_TTL_AMT, 2) AS MTY_STVG_TTL_AMT
                                              , ROUND(MTY_TRSP_TTL_AMT, 2) AS MTY_TRSP_TTL_AMT
                                              , (SELECT SUM(TTL_CNTR_QTY)
                                                   FROM COA_MTY_CNTR_ROUT_PERF
                                                  WHERE COST_YRMON       = A.COST_YRMON
                                                    AND CNTR_TPSZ_CD     = A.CNTR_TPSZ_CD
                                                    AND ROUT_N1ST_YD_CD  = A.ROUT_N1ST_YD_CD
                                                    AND ROUT_LST_YD_CD   = A.ROUT_LST_YD_CD
                                                    AND ROUT_SEQ         = A.ROUT_SEQ
                                                    AND CNTR_ORG_DEST_CD = A.CNTR_ORG_DEST_CD
                                                ) AS TTL_CNTR_QTY
                                           FROM COA_MTY_CNTR_ROUT_DTL A

                                          WHERE COST_YRMON = @[f_cost_yrmon] 
                                            AND CNTR_TPSZ_CD = @[f_cntr_tpsz_cd]
#if(${f_ori_dest} == 'O')
                                            AND ROUT_N1ST_ECC_CD = @[f_ecc_cd]
#else
                                            AND ROUT_LST_ECC_CD = @[f_ecc_cd]
#end
    
#if(${f_excl_sts} != '1')
                                            AND CNTR_ORG_DEST_CD = @[f_ori_dest]
#end
                                        )
                               GROUP BY COST_YRMON
                                      , CNTR_TPSZ_CD
                                      , ROUT_N1ST_YD_CD
                                      , ROUT_LST_YD_CD
                                      , ROUT_SEQ
                                      , MVMT_SEQ
                                      , ROUT_N1ST_ECC_CD
                                      , ROUT_LST_ECC_CD
                                      , YD_CD
                                      , TTL_CNTR_QTY
                               ORDER BY CNTR_TPSZ_CD
                                      , ROUT_N1ST_YD_CD
                                      , ROUT_LST_YD_CD
                                      , ROUT_SEQ
                                      , MVMT_SEQ
                                )
                        )
                  WHERE RNUM = 1
                )
       GROUP BY COST_YRMON
              , ECC_CD
              , CNTR_TPSZ_CD
              , ORI_DEST_CD
#if(${f_excl_sts} == '1') 
	#if(${f_cost_loc_grp_cd} == 'Y')
              , N1ST_YD_CD
              , LST_YD_CD
              , ROUT_SEQ
	#else
              , ROUT_N1ST_ECC_CD
              , ROUT_LST_ECC_CD
	#end
#end
              , YD_CD1
              , YD_CD2
              , YD_CD3
              , YD_CD4
              , YD_CD5
              , YD_CD6
              , YD_CD7
              , YD_CD8
              , YD_CD9
              , YD_CD10
              , LST_YD_IN_CONTI
              , LST_MVMT_IN_CONTI
        )
ORDER BY TTL_CNTR_QTY DESC


#else

SELECT COST_YRMON
      , 'USHOF' ECC_CD
      , CNTR_TPSZ_CD
      , ORI_DEST_CD
#if(${f_excl_sts} == '1') 
      , N1ST_YD_CD
      , LST_YD_CD
      , ROUT_SEQ
#end
      , TTL_CNTR_QTY
      , TTL_QTY
      , TTL_CNTR_RT
      , YD_CD1
      , YD_CD2
      , YD_CD3
      , YD_CD4
      , YD_CD5
      , YD_CD6
      , YD_CD7
      , YD_CD8
      , YD_CD9
      , YD_CD10
      , LST_YD_IN_CONTI
      , LST_MVMT_IN_CONTI
      , MTY_STVG_TTL_AMT1
      , MTY_STVG_TTL_AMT2
      , MTY_STVG_TTL_AMT3
      , MTY_STVG_TTL_AMT4
      , MTY_STVG_TTL_AMT5
      , MTY_STVG_TTL_AMT6
      , MTY_STVG_TTL_AMT7
      , MTY_STVG_TTL_AMT8
      , MTY_STVG_TTL_AMT9
      , MTY_STVG_TTL_AMT10
      , MTY_TRSP_TTL_AMT1
      , MTY_TRSP_TTL_AMT2
      , MTY_TRSP_TTL_AMT3
      , MTY_TRSP_TTL_AMT4
      , MTY_TRSP_TTL_AMT5
      , MTY_TRSP_TTL_AMT6
      , MTY_TRSP_TTL_AMT7
      , MTY_TRSP_TTL_AMT8
      , MTY_TRSP_TTL_AMT9
      , MTY_TRSP_TTL_AMT10
      , MTY_TTL_AMT
      , DECODE(TTL_QTY,0,0,SUM(MTY_TTL_AMT) OVER () / TTL_QTY) AS MTY_TTL_UC_AMT
   FROM
        (SELECT COST_YRMON
              , ECC_CD
              , CNTR_TPSZ_CD
              , ORI_DEST_CD
#if(${f_excl_sts} == '1') 
	#if(${f_cost_loc_grp_cd} == 'Y')
              , N1ST_YD_CD
              , LST_YD_CD
              , ROUT_SEQ
	#else
              , ROUT_N1ST_ECC_CD AS N1ST_YD_CD
              , ROUT_LST_ECC_CD  AS LST_YD_CD
              , 1 ROUT_SEQ
	#end
#end
              , SUM(TTL_CNTR_QTY) AS TTL_CNTR_QTY
              , MAX(TTL_QTY) TTL_QTY
              , DECODE(MAX(TTL_QTY), 0, 0, (SUM(TTL_CNTR_QTY) / MAX(TTL_QTY) * 100)) TTL_CNTR_RT
              , YD_CD1
              , YD_CD2
              , YD_CD3
              , YD_CD4
              , YD_CD5
              , YD_CD6
              , YD_CD7
              , YD_CD8
              , YD_CD9
              , YD_CD10
              , LST_YD_IN_CONTI
              , LST_MVMT_IN_CONTI
              , NVL(SUM(MTY_STVG_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT1
              , NVL(SUM(MTY_STVG_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT2
              , NVL(SUM(MTY_STVG_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT3
              , NVL(SUM(MTY_STVG_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT4
              , NVL(SUM(MTY_STVG_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT5
              , NVL(SUM(MTY_STVG_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT6
              , NVL(SUM(MTY_STVG_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT7
              , NVL(SUM(MTY_STVG_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT8
              , NVL(SUM(MTY_STVG_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT9
              , NVL(SUM(MTY_STVG_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT10
              , NVL(SUM(MTY_TRSP_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT1
              , NVL(SUM(MTY_TRSP_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT2
              , NVL(SUM(MTY_TRSP_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT3
              , NVL(SUM(MTY_TRSP_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT4
              , NVL(SUM(MTY_TRSP_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT5
              , NVL(SUM(MTY_TRSP_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT6
              , NVL(SUM(MTY_TRSP_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT7
              , NVL(SUM(MTY_TRSP_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT8
              , NVL(SUM(MTY_TRSP_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT9
              , NVL(SUM(MTY_TRSP_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT10
              , NVL(SUM(MTY_STVG_TTL_AMT1), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT2), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT3), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT4), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT5), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT6), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT7), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT8), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT9), 0) 
              + NVL(SUM(MTY_STVG_TTL_AMT10), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT1), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT2), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT3), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT4), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT5), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT6), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT7), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT8), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT9), 0) 
              + NVL(SUM(MTY_TRSP_TTL_AMT10), 0) AS MTY_TTL_AMT
           FROM
                (SELECT COST_YRMON
                      , DECODE('O', @[f_ori_dest], ROUT_N1ST_ECC_CD, ROUT_LST_ECC_CD) AS ECC_CD
                      , ROUT_N1ST_ECC_CD
                      , ROUT_LST_ECC_CD
                      , CNTR_TPSZ_CD
                      , DECODE('O', @[f_ori_dest], 'Origin Based', 'Dest Based') AS ORI_DEST_CD
                      , ROUT_N1ST_YD_CD AS N1ST_YD_CD
                      , ROUT_LST_YD_CD AS LST_YD_CD
                      , ROUT_SEQ
                      , TTL_CNTR_QTY
                      , SUM(TTL_CNTR_QTY) OVER () TTL_QTY
                      , YD_CD1
                      , YD_CD2
                      , YD_CD3
                      , YD_CD4
                      , YD_CD5
                      , YD_CD6
                      , YD_CD7
                      , YD_CD8
                      , YD_CD9
                      , YD_CD10
                      , LST_YD_IN_CONTI
                      , LST_MVMT_IN_CONTI
                      , MTY_STVG_TTL_AMT1
                      , MTY_STVG_TTL_AMT2
                      , MTY_STVG_TTL_AMT3
                      , MTY_STVG_TTL_AMT4
                      , MTY_STVG_TTL_AMT5
                      , MTY_STVG_TTL_AMT6
                      , MTY_STVG_TTL_AMT7
                      , MTY_STVG_TTL_AMT8
                      , MTY_STVG_TTL_AMT9
                      , MTY_STVG_TTL_AMT10
                      , MTY_TRSP_TTL_AMT1
                      , MTY_TRSP_TTL_AMT2
                      , MTY_TRSP_TTL_AMT3
                      , MTY_TRSP_TTL_AMT4
                      , MTY_TRSP_TTL_AMT5
                      , MTY_TRSP_TTL_AMT6
                      , MTY_TRSP_TTL_AMT7
                      , MTY_TRSP_TTL_AMT8
                      , MTY_TRSP_TTL_AMT9
                      , MTY_TRSP_TTL_AMT10
                   FROM
                        (SELECT COST_YRMON
                              , CNTR_TPSZ_CD
                              , ROUT_N1ST_YD_CD
                              , ROUT_LST_YD_CD
                              , ROUT_SEQ
                              , MVMT_SEQ
                              , RNUM
                              , ROUT_N1ST_ECC_CD
                              , ROUT_LST_ECC_CD
                              , TTL_CNTR_QTY
                              , YD_CD YD_CD1
                              , LEAD(YD_CD, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD2
                              , LEAD(YD_CD, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD3
                              , LEAD(YD_CD, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD4
                              , LEAD(YD_CD, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD5
                              , LEAD(YD_CD, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD6
                              , LEAD(YD_CD, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD7
                              , LEAD(YD_CD, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD8
                              , LEAD(YD_CD, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD9
                              , LEAD(YD_CD, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD10
                              , MAX(LST_YD_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_YD_IN_CONTI
                              , MAX(LST_YD_MVMT_STS_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_MVMT_IN_CONTI
                              , MTY_STVG_TTL_AMT MTY_STVG_TTL_AMT1
                              , LEAD(MTY_STVG_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT2
                              , LEAD(MTY_STVG_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT3
                              , LEAD(MTY_STVG_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT4
                              , LEAD(MTY_STVG_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT5
                              , LEAD(MTY_STVG_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT6
                              , LEAD(MTY_STVG_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT7
                              , LEAD(MTY_STVG_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT8
                              , LEAD(MTY_STVG_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT9
                              , LEAD(MTY_STVG_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT10
                              , MTY_TRSP_TTL_AMT MTY_TRSP_TTL_AMT1
                              , LEAD(MTY_TRSP_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT2
                              , LEAD(MTY_TRSP_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT3
                              , LEAD(MTY_TRSP_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT4
                              , LEAD(MTY_TRSP_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT5
                              , LEAD(MTY_TRSP_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT6
                              , LEAD(MTY_TRSP_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT7
                              , LEAD(MTY_TRSP_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT8
                              , LEAD(MTY_TRSP_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT9
                              , LEAD(MTY_TRSP_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT10
                           FROM
                                (SELECT COST_YRMON
                                      , CNTR_TPSZ_CD
                                      , ROUT_N1ST_YD_CD
                                      , ROUT_LST_YD_CD
                                      , ROUT_SEQ
                                      , ROUT_N1ST_ECC_CD
                                      , ROUT_LST_ECC_CD
                                      , MVMT_SEQ
                                      , YD_CD
                                      , MAX(LST_YD_CD) AS LST_YD_CD
                                      , MAX(LST_YD_MVMT_STS_CD) LST_YD_MVMT_STS_CD
                                      , SUM(MTY_STVG_TTL_AMT) AS MTY_STVG_TTL_AMT
                                      , SUM(MTY_TRSP_TTL_AMT) AS MTY_TRSP_TTL_AMT
                                      , TTL_CNTR_QTY
                                      , ROW_NUMBER() OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY MVMT_SEQ) AS RNUM
                                   FROM
                                        (SELECT COST_YRMON
                                              , CNTR_TPSZ_CD
                                              , ROUT_N1ST_YD_CD
                                              , ROUT_LST_YD_CD
                                              , ROUT_SEQ
                                              , ROUT_N1ST_ECC_CD
                                              , ROUT_LST_ECC_CD
#if(${f_cost_loc_grp_cd} == 'Y')
                                              , MVMT_SEQ
                                              , YD_CD
                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_CD, NULL) AS LST_YD_CD
#else
                                              , CASE WHEN SUBSTR(YD_CD, 1, 5) = SUBSTR(ROUT_N1ST_YD_CD, 1, 5) 
                                                     THEN MIN(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))
                                                     ELSE MAX(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))
                                                END AS MVMT_SEQ
                                              , SUBSTR(YD_CD, 1, 5) AS YD_CD
                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], SUBSTR(LST_YD_CD, 1, 5), NULL) AS LST_YD_CD
#end
                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_MVMT_STS_CD, NULL) AS LST_YD_MVMT_STS_CD
                                              , ROUND(MTY_STVG_TTL_AMT, 2) AS MTY_STVG_TTL_AMT
                                              , ROUND(MTY_TRSP_TTL_AMT, 2) AS MTY_TRSP_TTL_AMT
                                              , (SELECT SUM(TTL_CNTR_QTY)
                                                   FROM COA_MTY_CNTR_ROUT_PERF
                                                  WHERE COST_YRMON       = A.COST_YRMON
                                                    AND CNTR_TPSZ_CD     = A.CNTR_TPSZ_CD
                                                    AND ROUT_N1ST_YD_CD  = A.ROUT_N1ST_YD_CD
                                                    AND ROUT_LST_YD_CD   = A.ROUT_LST_YD_CD
                                                    AND ROUT_SEQ         = A.ROUT_SEQ
                                                    AND CNTR_ORG_DEST_CD = A.CNTR_ORG_DEST_CD
                                                ) AS TTL_CNTR_QTY
                                           FROM COA_MTY_CNTR_ROUT_DTL A

                                          WHERE COST_YRMON = @[f_cost_yrmon] 
                                            AND CNTR_TPSZ_CD = @[f_cntr_tpsz_cd]
#if(${f_ori_dest} == 'O')
                                            AND ROUT_N1ST_ECC_CD = 'USHOU'
#else
                                            AND ROUT_LST_ECC_CD = 'USHOU'
#end
    
#if(${f_excl_sts} != '1')
                                            AND CNTR_ORG_DEST_CD = @[f_ori_dest]
#end
                                        )
                               GROUP BY COST_YRMON
                                      , CNTR_TPSZ_CD
                                      , ROUT_N1ST_YD_CD
                                      , ROUT_LST_YD_CD
                                      , ROUT_SEQ
                                      , MVMT_SEQ
                                      , ROUT_N1ST_ECC_CD
                                      , ROUT_LST_ECC_CD
                                      , YD_CD
                                      , TTL_CNTR_QTY
                               ORDER BY CNTR_TPSZ_CD
                                      , ROUT_N1ST_YD_CD
                                      , ROUT_LST_YD_CD
                                      , ROUT_SEQ
                                      , MVMT_SEQ
                                )
                        )
                  WHERE RNUM = 1
           
--===============================================================================  
                    AND (COA_LOC_FNC(YD_CD2,'ECC') IN('USLGB','USLAX') 
                        OR COA_LOC_FNC(YD_CD3,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD4,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD5,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD6,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD7,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD8,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD9,'ECC') IN('USLGB','USLAX')
                        OR COA_LOC_FNC(YD_CD10,'ECC') IN('USLGB','USLAX') )
--===============================================================================  
                )
       GROUP BY COST_YRMON
              , ECC_CD
              , CNTR_TPSZ_CD
              , ORI_DEST_CD
#if(${f_excl_sts} == '1') 
	#if(${f_cost_loc_grp_cd} == 'Y')
              , N1ST_YD_CD
              , LST_YD_CD
              , ROUT_SEQ
	#else
              , ROUT_N1ST_ECC_CD
              , ROUT_LST_ECC_CD
	#end
#end
              , YD_CD1
              , YD_CD2
              , YD_CD3
              , YD_CD4
              , YD_CD5
              , YD_CD6
              , YD_CD7
              , YD_CD8
              , YD_CD9
              , YD_CD10
              , LST_YD_IN_CONTI
              , LST_MVMT_IN_CONTI
        )
ORDER BY TTL_CNTR_QTY DESC


#end			]]></sql>
			<params>
				<param name="f_ori_dest" type="12" value="" out="N"/>
				<param name="f_cost_yrmon" type="12" value="'201304'" out="N"/>
				<param name="f_cntr_tpsz_cd" type="12" value="D5" out="N"/>
				<param name="f_ecc_cd" type="12" value="CNFOC" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
