<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOSearchMultiRateBkgList1RSQL">
			<desc><![CDATA[Multi Rate BKG List for Audit(1) 조회]]></desc>
			<sql><![CDATA[
SELECT  B.BKG_NO								AS  BKG_NO,
        B.SGL_MLT_CD                            AS  SGL_MLT_CD,
        B.OFT_CNT								AS  OFT_CNT,
        B.TPSZ_CNT								AS  TPSZ_CNT,
        B.RCT_RHQ_CD							AS  RCT_RHQ_CD,
        B.BKG_OFC_CD                            AS  BKG_OFC_CD,
        B.SVC_SCP_CD                            AS  SVC_SCP_CD,
        B.RT_APLY_DT                            AS  RT_APLY_DT,
        B.BKG_CRE_DT                            AS  BKG_CRE_DT,
        B.VPS_ETD_DT                            AS  VPS_ETD_DT,
        B.BDR_FLG                               AS  BDR_FLG,
        B.CTRT_TP_CD                            AS  BKG_CTRT_TP_CD,
        B.CTRT_NO                               AS  CTRT_NO,
        B.CMDT_CD                               AS  CMDT_CD,
        B.CMDT_NM_0								AS  CMDT_NM,
        B.PRC_CGO_TP_CD							AS  PRC_CGO_TP_CD,
        B.POR_CD								AS  POR_CD,
        B.POL_CD								AS  POL_CD,
        B.POD_CD								AS  POD_CD,
        B.DEL_CD								AS  DEL_CD,
        B.T_VVD									AS  T_VVD,
        B.POR_POL_EQUALS						AS  POR_POL_EQUALS,
        B.POD_DEL_EQUALS						AS  POD_DEL_EQUALS,
        B.MULTI_CNTR							AS  MULTI_CNTR,
        B.PRC_RT_MTCH_PATT_CD_1					AS  PRC_RT_MTCH_PATT_CD_1,
        B.CMDT_NM_1								AS  CMDT_NM_1,
        B.RAT_UT_CD_1							AS  RAT_UT_CD_1,
        B.PRC_CGO_TP_CD_1						AS  PRC_CGO_TP_CD_1,
        B.CALC_FRT_RT_AMT_1						AS  FNL_FRT_RT_AMT_1,
        B.NOTE_CTNT_1							AS  NOTE_CTNT_1,
        B.PRC_RT_MTCH_PATT_CD_2					AS  PRC_RT_MTCH_PATT_CD_2,
        B.CMDT_NM_2								AS  CMDT_NM_2,
        B.RAT_UT_CD_2							AS  RAT_UT_CD_2,
        B.PRC_CGO_TP_CD_2						AS  PRC_CGO_TP_CD_2,
        B.CALC_FRT_RT_AMT_2						AS  FNL_FRT_RT_AMT_2,
        B.NOTE_CTNT_2							AS  NOTE_CTNT_2,
        B.RAT_AS_QTY							AS  RAT_AS_QTY,
        B.CHG_UT_AMT							AS  CHG_UT_AMT,
        CASE	SIGN(B.CHG_UT_AMT - B.CALC_FRT_RT_AMT_1)
            WHEN	1	THEN	'Plus'
            WHEN    0	THEN    'Zero'
            WHEN   -1	THEN    'Minus'
        END										AS  PLS_ZR_MNUS_CD_1,
        CASE	SIGN(B.CHG_UT_AMT - B.CALC_FRT_RT_AMT_2)
            WHEN    1	THEN    'Plus'
            WHEN    0	THEN    'Zero'
            WHEN   -1	THEN    'Minus'
        END										AS  PLS_ZR_MNUS_CD_2,
        CASE
            WHEN    B.CMDT_NM_0 IN  (SELECT CMDT_NM FROM BKG_REV_OCN_FRT_MLT_RAT WHERE BKG_NO = B.BKG_NO)
                THEN
                    CASE    SIGN(B.CHG_UT_AMT - (
                                                    SELECT  MAX(CALC_FRT_RT_AMT)
                                                    FROM    BKG_REV_OCN_FRT_MLT_RAT
                                                    WHERE   BKG_NO = B.BKG_NO
                                                    AND     CMDT_NM = B.CMDT_NM_0
                                                    AND     RAT_UT_CD IN (
                                                                            SELECT  RAT_UT_CD
                                                                            FROM    BKG_CHG_RT
                                                                            WHERE   BKG_NO = B.BKG_NO
                                                                            AND     CHG_CD = 'OFT'
                                                                            AND     CHG_UT_AMT = (
                                                                                                    SELECT  MAX(CHG_UT_AMT)
                                                                                                    FROM    BKG_CHG_RT
                                                                                                    WHERE   BKG_NO = B.BKG_NO
                                                                                                    AND     CHG_CD = 'OFT'))))
                        WHEN    1	THEN    'Plus'
                        WHEN    0	THEN    'Zero'
                        WHEN   -1	THEN    'Minus'
                    END
        END										AS  PLS_ZR_MNUS_CD_3,
		B.PSA_NO                                AS  PSA_NO,
        B.SM_PRIME                              AS  SM_PRIME,
		B.ACT_CUST								AS	ACT_CUST,
        B.USR_UPD_CTNT							AS  USR_UPD_CTNT,
		B.USR_INS_AMT							AS	USR_INS_AMT,
        B.USR_UPD_CFM_FLG						AS  USR_UPD_CFM_FLG,
        B.CFM_DT								AS  CFM_DT,
        B.UPD_DT								AS  UPD_DT,
        B.UPD_USR_ID							AS  UPD_USR_ID,
        COUNT(1) OVER (PARTITION	BY	1)		AS	BL_CNT,	
        ''										AS	DT_TYPE,			-- * DT_TYPE, FROM_DT, TO_DT :
        ''										AS	FROM_DT,			-- 	날짜 검색에 필요한 변수를 VO에 담기위해 SELECT 할 때 가져온다...
        ''										AS	TO_DT				-- 	안가져 오면 MultiRateBkgList1VO에 변수 추가 안됨.
FROM    (
            SELECT  A.RANK,
                    A.BKG_NO,
					CASE
                        WHEN    A.OFT_CNT = 1   THEN    'S'
                        WHEN    A.OFT_CNT >= 2
                            THEN
                                CASE
                                    WHEN    A.OFT_CNT > (SELECT COUNT(DISTINCT RAT_UT_CD||PRC_CGO_TP_CD) FROM BKG_REV_OCN_FRT_MLT_RAT WHERE BKG_NO = A.BKG_NO)  THEN    'M'
                                    WHEN    A.OFT_CNT = (SELECT COUNT(DISTINCT RAT_UT_CD||PRC_CGO_TP_CD) FROM BKG_REV_OCN_FRT_MLT_RAT WHERE BKG_NO = A.BKG_NO)  THEN    'S'
                                END
                    END                         AS  SGL_MLT_CD,
                    A.OFT_CNT,
                    A.TPSZ_CNT,
                    A.RCT_RHQ_CD,
                    A.BKG_OFC_CD,
                    A.SVC_SCP_CD,
                    A.RT_APLY_DT,
		            A.BKG_CRE_DT,
		            A.VPS_ETD_DT,
		            A.BDR_FLG,
                    A.CTRT_TP_CD,
                    A.CTRT_NO,
                    A.CMDT_CD,
                    A.CMDT_NM_0,
                    A.PRC_CGO_TP_CD,
                    A.POR_CD,
                    A.POL_CD,
                    A.POD_CD,
                    A.DEL_CD,
                    A.T_VVD,
                    A.POR_POL_EQUALS,
                    A.POD_DEL_EQUALS,
                    A.MULTI_CNTR,
                    A.PRC_RT_MTCH_PATT_CD_1,
                    A.CMDT_NM_1,
                    A.RAT_UT_CD_1,
                    A.PRC_CGO_TP_CD_1,
                    A.CALC_FRT_RT_AMT_1,
                    A.NOTE_CTNT_1,
                    A.PRC_RT_MTCH_PATT_CD_2,
                    A.CMDT_NM_2,
                    A.RAT_UT_CD_2,
                    A.PRC_CGO_TP_CD_2,
                    A.CALC_FRT_RT_AMT_2,
                    A.NOTE_CTNT_2,
		            A.RAT_AS_QTY,
                    CASE													-- 1st Per가 D7일 경우,
                        WHEN    A.RAT_UT_CD_1 = 'D7'						-- Charge 탭과 Auto-Rating의 Cargo Type이 맞지 않아
                            THEN											-- CGO_CATE_CD는 비교하지 않고...
                                (											-- 여러 개인 경우, 가장 큰 값 선택.
                                    SELECT  MAX(CHG_UT_AMT)
                                    FROM    BKG_CHG_RT
                                    WHERE   CHG_CD = 'OFT'
                                    AND     BKG_NO = A.BKG_NO
                                    AND     RAT_UT_CD = A.RAT_UT_CD_1)
                        ELSE
                                (
                                    SELECT  MAX(CHG_UT_AMT)
                                    FROM    BKG_CHG_RT
                                    WHERE   CHG_CD = 'OFT'
                                    AND     BKG_NO = A.BKG_NO
                                    AND     RAT_UT_CD = A.RAT_UT_CD_1
                                    AND     CGO_CATE_CD = A.PRC_CGO_TP_CD_1)
                    END	AS  CHG_UT_AMT,
					A.PSA_NO,
                    A.SM_PRIME,
					A.ACT_CUST,
                    A.USR_UPD_CTNT,
					A.USR_INS_AMT,
                    A.USR_UPD_CFM_FLG,
                    A.CFM_DT,
                    A.UPD_DT,
		            A.UPD_USR_ID
            FROM    (
			            SELECT  MR.RANK,
        			            BB.BKG_NO,
        			            (SELECT COUNT(BKG_NO) FROM BKG_QUANTITY WHERE BKG_NO = BB.BKG_NO)						AS	TPSZ_CNT,
        			            (SELECT COUNT(BKG_NO) FROM BKG_REV_OCN_FRT_MLT_RAT WHERE BKG_NO = BB.BKG_NO)        	AS	OFT_CNT,
        			            (
            		            	SELECT  A.OFC_CD
            		            	FROM    MDM_ORGANIZATION A
            		            	WHERE   A.OFC_TP_CD = 'HQ'
            		            	START   WITH A.OFC_CD = BB.BKG_OFC_CD
            		            	CONNECT BY PRIOR A.PRNT_OFC_CD = A.OFC_CD)											AS	RCT_RHQ_CD,
        			            BB.BKG_OFC_CD,
        			            BB.SVC_SCP_CD,
        			            TO_CHAR(BR.RT_APLY_DT, 'YYYY-MM-DD')													AS	RT_APLY_DT,
					            BB.BKG_CRE_DT,
					            (
                                    SELECT  DISTINCT (
                                        		SELECT  TO_CHAR(VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS')	ETD
                                        		FROM    VSK_VSL_PORT_SKD
                                        		WHERE   VSL_CD = VVD1.VSL_CD
                                        		AND     SKD_VOY_NO = VVD1.SKD_VOY_NO
                                        		AND     SKD_DIR_CD = VVD1.SKD_DIR_CD
                                        		AND     VPS_PORT_CD = VVD1.POL_CD
                                        		AND     CLPT_IND_SEQ = VVD1.POL_CLPT_IND_SEQ)	ETD_DT
                                    FROM    BKG_BOOKING		BK,
					            			BKG_VVD			VVD,
					            			BKG_VVD			VVD1,
					            			BKG_CONTAINER	CNTR,
					            			MDM_LOCATION	L
                                    WHERE   BK.BKG_NO = BB.BKG_NO
                                    AND     BK.BKG_NO = VVD.BKG_NO
                                    AND     BK.POD_CD = VVD.POD_CD
                                    AND     BK.BKG_NO = VVD1.BKG_NO
                                    AND     BK.POL_CD = VVD1.POL_CD
                                    AND     BK.BKG_NO = CNTR.BKG_NO(+)
                                    AND     BK.POR_CD = L.LOC_CD
                                    AND     L.DELT_FLG = 'N')															AS	VPS_ETD_DT,
					            DECODE(BD.BDR_FLG , 'N', 'N', 'Y', 'Y', 'N')											AS	BDR_FLG,
        			            DECODE(BR.BKG_CTRT_TP_CD, 'R', 'RFA', 'S', 'S/C', 'TAA')								AS	CTRT_TP_CD,
        			            DECODE(BR.BKG_CTRT_TP_CD, 'R', BB.RFA_NO, 'S', BB.SC_NO, BB.TAA_NO)						AS	CTRT_NO,
        			            BB.CMDT_CD,
        			            (SELECT CMDT_NM FROM MDM_COMMODITY WHERE CMDT_CD = BB.CMDT_CD AND DELT_FLG = 'N')		AS	CMDT_NM_0,
        			            BB.BKG_CGO_TP_CD,
        			            BB.POR_CD,
        			            BB.POL_CD,
        			            BB.POD_CD,
        			            BB.DEL_CD,
        			            BB.VSL_CD||BB.SKD_VOY_NO||BB.SKD_DIR_CD													AS	T_VVD,
					            DECODE(BB.POR_CD, BB.POL_CD, 'Y', 'N')													AS	POR_POL_EQUALS,
                                DECODE(BB.POD_CD, BB.DEL_CD, 'Y', 'N')													AS	POD_DEL_EQUALS,
        			            (
            		            	SELECT  DECODE(COUNT(DISTINCT CNTR_TPSZ_CD), 1, 'N', 'Y')
            		            	FROM    BKG_QTY_DTL 
            		            	WHERE   BKG_NO = BB.BKG_NO 
            		            	AND     CNTR_TPSZ_CD NOT LIKE 'Q%')													AS	MULTI_CNTR,
        			            MR.PRC_RT_MTCH_PATT_CD,
        			            MR.CMDT_NM,
        			            MR.RAT_UT_CD,
        			            MR.PRC_CGO_TP_CD,
        			            MR.CALC_FRT_RT_AMT,
        			            MR.NOTE_CTNT,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    MR.PRC_RT_MTCH_PATT_CD
            		            	WHEN    MR.RANK = 2 THEN    LAG(MR.PRC_RT_MTCH_PATT_CD) OVER(ORDER BY BB.BKG_NO, MR.CALC_FRT_RT_AMT DESC)
        			            END																						AS	PRC_RT_MTCH_PATT_CD_1,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    MR.CMDT_NM
            		            	WHEN    MR.RANK = 2 THEN    LAG(MR.CMDT_NM) OVER(ORDER BY BB.BKG_NO, MR.CALC_FRT_RT_AMT DESC)
        			            END																						AS	CMDT_NM_1,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    MR.RAT_UT_CD
            		            	WHEN    MR.RANK = 2 THEN    LAG(MR.RAT_UT_CD) OVER(ORDER BY BB.BKG_NO, MR.CALC_FRT_RT_AMT DESC)
        			            END																						AS	RAT_UT_CD_1,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    MR.PRC_CGO_TP_CD
            		            	WHEN    MR.RANK = 2 THEN    LAG(MR.PRC_CGO_TP_CD) OVER(ORDER BY BB.BKG_NO, MR.CALC_FRT_RT_AMT DESC)
        			            END																						AS	PRC_CGO_TP_CD_1,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    MR.CALC_FRT_RT_AMT
            		            	WHEN    MR.RANK = 2 THEN    LAG(MR.CALC_FRT_RT_AMT) OVER(ORDER BY BB.BKG_NO, MR.CALC_FRT_RT_AMT DESC)
        			            END																						AS	CALC_FRT_RT_AMT_1,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    MR.NOTE_CTNT
            		            	WHEN    MR.RANK = 2 THEN    LAG(MR.NOTE_CTNT) OVER(ORDER BY BB.BKG_NO, MR.CALC_FRT_RT_AMT DESC)
        			            END																						AS	NOTE_CTNT_1,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    NULL
            		            	WHEN    MR.RANK = 2 THEN    MR.PRC_RT_MTCH_PATT_CD
        			            END																						AS	PRC_RT_MTCH_PATT_CD_2,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    NULL
            		            	WHEN    MR.RANK = 2 THEN    MR.CMDT_NM
        			            END																						AS	CMDT_NM_2,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    NULL
            		            	WHEN    MR.RANK = 2 THEN    MR.RAT_UT_CD
        			            END																						AS	RAT_UT_CD_2,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    NULL
            		            	WHEN    MR.RANK = 2 THEN    MR.PRC_CGO_TP_CD
        			            END																						AS	PRC_CGO_TP_CD_2,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    NULL
            		            	WHEN    MR.RANK = 2 THEN    MR.CALC_FRT_RT_AMT
        			            END																						AS	CALC_FRT_RT_AMT_2,
        			            CASE
            		            	WHEN    MR.RANK = 1 THEN    NULL
            		            	WHEN    MR.RANK = 2 THEN    MR.NOTE_CTNT
        			            END																						AS	NOTE_CTNT_2,
					            MR.RAT_AS_QTY,
								CASE    SIGN((SELECT COUNT(DISTINCT PSA_NO) FROM BKG_DG_CGO WHERE BKG_NO = BB.BKG_NO AND CNTR_CGO_SEQ = '1') - 1)
                                    WHEN    0                                                                                                       -- 개수가 1개이면
                                        THEN    (SELECT DISTINCT PSA_NO FROM BKG_DG_CGO WHERE BKG_NO = BB.BKG_NO AND CNTR_CGO_SEQ = '1')
                                    WHEN    1                                                                                                       -- 개수가 2개 이상이면
                                        THEN    'M'
                                END                                                                                 	AS  PSA_NO,
                                CASE    (SELECT STWG_CD FROM BKG_BOOKING WHERE BKG_NO = BB.BKG_NO)
                                    WHEN    'OLBP'  THEN    'Y'
                                    ELSE                    'N'
                                END                                                                                 	AS  SM_PRIME,
								(SELECT AGMT_ACT_CNT_CD||AGMT_ACT_CUST_SEQ FROM BKG_BOOKING WHERE BKG_NO = BB.BKG_NO)   AS  ACT_CUST,
        			            MRU.USR_UPD_CTNT,
								MRU.USR_INS_AMT,
        			            MRU.USR_UPD_CFM_FLG,
        			            MRU.CFM_DT,
        			            MRU.UPD_DT,
					            MRU.UPD_USR_ID
            			FROM    BKG_BOOKING								BB,
								(
                                    SELECT  BKG_NO,
                                            RT_APLY_DT,
                                            BKG_CTRT_TP_CD
                                    FROM    BKG_RATE
									#if (${from_dt} != '' && ${to_dt} != '')
										#if (${dt_type} == 'APPL')
                                    		WHERE   1 = 1
                                    		AND     RT_APLY_DT >= TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                    		AND     RT_APLY_DT <= TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999
										#end
									#end
                                )                                       BR,
            					BKG_BL_DOC								BD,		-- BDR_FLG를 SELECT하기 위해 사용
                    			(
                        			SELECT  BKG_NO,
                                			DP_SEQ,
                                			OFT_CMB_SEQ,
                                			PRC_RT_MTCH_PATT_CD,
                                			RAT_UT_CD,
                                			PRC_CGO_TP_CD,
                                			RAT_AS_QTY,
                                			CURR_CD,
                                			CALC_FRT_RT_AMT,
                                			NOTE_CTNT,
                                			CMDT_NM,
                                			RANK()
            									OVER(
            											PARTITION	BY	BKG_NO
            											ORDER		BY	CALC_FRT_RT_AMT	DESC,
            															DP_SEQ			ASC)	AS	RANK
                        			FROM    BKG_REV_OCN_FRT_MLT_RAT)	MR,
                    			BKG_REV_OCN_FRT_MLT_RAT_USR				MRU
            			WHERE   BB.BKG_NO = BR.BKG_NO
            			AND     BB.BKG_NO = MR.BKG_NO
            			AND     BB.BKG_NO = MRU.BKG_NO
            			AND     BB.BKG_NO = BD.BKG_NO
						AND     (
            		            	SELECT  A.OFC_CD
            		            	FROM    MDM_ORGANIZATION A
            		            	WHERE   A.OFC_TP_CD = 'HQ'
            		            	START   WITH A.OFC_CD = BB.BKG_OFC_CD
            		            	CONNECT BY PRIOR A.PRNT_OFC_CD = A.OFC_CD) = @[rct_rhq_cd]
            )   A
)   B
WHERE   ((B.OFT_CNT = 1 AND B.RANK = 1)	OR	(B.OFT_CNT >= 2 AND B.RANK = 2))	-- OFT개수가 1개면 RANK = 1, 2개 이상이면 RANK = 2 SELECT
#if (${bkg_ofc_cd} != '')
	AND	B.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${from_dt} != '' && ${to_dt} != '')
	#if (${dt_type} == 'BKG')
		AND B.BKG_CRE_DT >= TO_DATE(@[from_dt], 'YYYY-MM-DD')
		AND B.BKG_CRE_DT <= TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999
	#elseif (${dt_type} == 'ETD')
		AND TO_DATE(B.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS') >= TO_DATE(@[from_dt], 'YYYY-MM-DD')
		AND TO_DATE(B.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI:SS') <= TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999
	#end
#end
#if (${svc_scp_cd} != '')
	AND B.SVC_SCP_CD = @[svc_scp_cd]
#end
#if (${t_vvd} != '')
	AND B.T_VVD LIKE '%'||@[t_vvd]||'%'
#end
#if (${bkg_ctrt_tp_cd} != '')
	AND B.CTRT_TP_CD = DECODE(@[bkg_ctrt_tp_cd], 'S', 'S/C',
												 'R', 'RFA',
													  'TAA')
#end
#if (${ctrt_no} != '')
	AND B.CTRT_NO = @[ctrt_no]
#end
#if (${por_cd} != '')
	AND B.POR_CD = @[por_cd]
#end
#if (${pol_cd} != '')
	AND B.POL_CD = @[pol_cd]
#end
#if (${pod_cd} != '')
	AND B.POD_CD = @[pod_cd]
#end
#if (${del_cd} != '')
	AND B.DEL_CD = @[del_cd]
#end
#if (${bdr_flg} != '')
	AND B.BDR_FLG = @[bdr_flg]
#end
#if (${por_pol_equals} != '')
	AND B.POR_POL_EQUALS = @[por_pol_equals]
#end
#if (${pod_del_equals} != '')
	AND B.POD_DEL_EQUALS = @[pod_del_equals]
#end
#if (${multi_cntr} != '')
	AND B.MULTI_CNTR = @[multi_cntr]
#end
#if (${sm_prime} != '')
	AND	B.SM_PRIME = @[sm_prime]
#end
#if (${usr_ins_amt} != '')
	AND	DECODE(B.USR_INS_AMT, NULL, 'N',
							  '',	'N',
									'Y') = @[usr_ins_amt]
#end
#if (${sgl_mlt_cd} != '')
	AND B.SGL_MLT_CD = @[sgl_mlt_cd]
#end
#if (${oft_cnt} != '')
	AND DECODE(B.OFT_CNT, 1, '1',
						  2, '2',
							 (DECODE(SIGN(B.OFT_CNT - 2), 1, 'Over 2'))) = @[oft_cnt]
#end
#if (${tpsz_cnt} != '')
	AND DECODE(B.TPSZ_CNT, 1, '1',
						   2, '2',
							  (DECODE(SIGN(B.TPSZ_CNT - 2), 1, 'Over 2'))) = @[tpsz_cnt]
#end
#if (${pls_zr_mnus_cd_1} != '')
	AND DECODE(SIGN(B.CHG_UT_AMT - B.CALC_FRT_RT_AMT_1), 1, 'Plus',
														 0, 'Zero',
														-1, 'Minus') = @[pls_zr_mnus_cd_1]
#end
#if (${pls_zr_mnus_cd_2} != '')
	AND DECODE(SIGN(B.CHG_UT_AMT - B.CALC_FRT_RT_AMT_2), 1, 'Plus',
														 0, 'Zero',
														-1, 'Minus') = @[pls_zr_mnus_cd_2]
#end
#if (${pls_zr_mnus_cd_3} != '')
	AND DECODE(B.CMDT_NM_0,	B.CMDT_NM_1, DECODE(SIGN(B.CHG_UT_AMT - B.CALC_FRT_RT_AMT_1), 1, 'Plus',
																						  0, 'Zero',
																						 -1, 'Minus'),
							B.CMDT_NM_2, DECODE(SIGN(B.CHG_UT_AMT - B.CALC_FRT_RT_AMT_2), 1, 'Plus',
																						  0, 'Zero',
																						 -1, 'Minus')) = @[pls_zr_mnus_cd_3]
#end
#if (${usr_upd_cfm_flg} != '')
	AND	B.USR_UPD_CFM_FLG = @[usr_upd_cfm_flg]
#end
ORDER	BY	B.BKG_NO			]]></sql>
			<params>
				<param name="from_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="rct_rhq_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="t_vvd" type="12" value="" out="N"/>
				<param name="bkg_ctrt_tp_cd" type="12" value="" out="N"/>
				<param name="ctrt_no" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="bdr_flg" type="12" value="" out="N"/>
				<param name="por_pol_equals" type="12" value="" out="N"/>
				<param name="pod_del_equals" type="12" value="" out="N"/>
				<param name="multi_cntr" type="12" value="" out="N"/>
				<param name="sm_prime" type="12" value="" out="N"/>
				<param name="usr_ins_amt" type="12" value="" out="N"/>
				<param name="sgl_mlt_cd" type="12" value="" out="N"/>
				<param name="oft_cnt" type="12" value="" out="N"/>
				<param name="tpsz_cnt" type="12" value="" out="N"/>
				<param name="pls_zr_mnus_cd_1" type="12" value="" out="N"/>
				<param name="pls_zr_mnus_cd_2" type="12" value="" out="N"/>
				<param name="pls_zr_mnus_cd_3" type="12" value="" out="N"/>
				<param name="usr_upd_cfm_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
