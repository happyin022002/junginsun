<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingReceiptDBDAOModifyCargoClosingTimeByReplanUSQL">
			<desc><![CDATA[cargo closing time을 계산하여 넣는다.]]></desc>
			<sql><![CDATA[
update bkg_clz_tm
   set CLZ_YD_CD = case when clz_tp_cd = 'F' then (SELECT ORG_NOD_CD
													 from prd_prod_ctl_rout_dtl dtl 
												        , prd_prod_ctl_mst mst 
												        , sce_cop_hdr cop 
													where dtl.PCTL_IO_BND_CD = 'O' 
													  and dtl.TRSP_MOD_CD    = 'RD' 
													  and mst.pctl_no        = dtl.pctl_no 
													  and mst.pctl_no        = cop.pctl_no 
													  and cop.bkg_no         = @[bkg_no]
													  and cop.COP_STS_CD     <> 'X'
													  and dtl.pctl_seq = (select min(fst.pctl_seq)
													                        from prd_prod_ctl_rout_dtl fst 
													                       where fst.pctl_no = mst.pctl_no 
													                         and fst.PCTL_IO_BND_CD = 'O'                         
													                         and fst.TRSP_MOD_CD = 'RD')
  													  and rownum = 1)
						WHEN CLZ_TP_CD = 'O' THEN (SELECT ORG_NOD_CD
													 from prd_prod_ctl_rout_dtl dtl 
												        , prd_prod_ctl_mst mst 
												        , sce_cop_hdr cop 
													where dtl.PCTL_IO_BND_CD = 'O' 
													  and dtl.TRSP_MOD_CD    = 'RD' 
													  and mst.pctl_no        = dtl.pctl_no 
													  and mst.pctl_no        = cop.pctl_no 
													  and cop.bkg_no         = @[bkg_no]  
													  and cop.COP_STS_CD     <> 'X'
													  and dtl.pctl_seq = (select min(fst.pctl_seq)
													                        from prd_prod_ctl_rout_dtl fst 
													                       where fst.pctl_no = mst.pctl_no 
													                         and fst.PCTL_IO_BND_CD = 'O'                         
													                         and fst.TRSP_MOD_CD = 'RD')
  													  and rownum = 1)
						WHEN CLZ_TP_CD = 'R' THEN (SELECT FULL_RTN_YD_CD FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
						WHEN CLZ_TP_CD = 'T' THEN (SELECT pol_nod_cd     FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
						WHEN CLZ_TP_CD = 'D' THEN (SELECT pol_nod_cd     FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
                        WHEN CLZ_TP_CD = 'V' THEN (SELECT pol_nod_cd     FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
						WHEN CLZ_TP_CD = 'E' THEN (SELECT pol_nod_cd     FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
						WHEN CLZ_TP_CD = 'M' THEN (SELECT mty_pkup_yd_cd FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
						WHEN CLZ_TP_CD = 'L' THEN (SELECT pol_cd         FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
						ELSE '' END
     , sys_set_dt = case 
#if (${from_dt} != 'N') 
                        when clz_tp_cd = 'F' then to_date(@[from_dt], 'yyyymmddhh24mi')
#else
						when clz_tp_cd = 'F' then sys_set_dt
#end
#if (${to_dt} != 'N')
                        when clz_tp_cd = 'O' then to_date(@[to_dt]  , 'yyyymmddhh24mi')
#else
						when clz_tp_cd = 'O' then sys_set_dt
#end
                        when clz_tp_cd = 'M' then (SELECT mty_pkup_dt FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no])
                        when clz_tp_cd = 'T' then (SELECT CASE WHEN 'KR' = (SELECT SUBSTR(POL_CD,1,2) FROM BKG_BOOKING WHERE BKG_NO =  @[bkg_no] ) THEN ETB -0.41667 
													 ELSE CCT
													 END CCT
													 FROM (select PRD_GET_CCT_FNC(skd.pol_nod_cd, SKD.SLAN_CD, SKD.SLAN_DIR_CD, SKD.CGO_TP_CD, SKD.VPS_ETB_DT, SKD.VPS_ETD_DT, SKD.VSL_CD||SKD.SKD_VOY_NO||SKD.SKD_DIR_CD) CCT, SKD.VPS_ETB_DT ETB
                                                     from (SELECT SKD.SLAN_CD SLAN_CD
                                                                 , VVD.SKD_DIR_CD SLAN_DIR_CD
                                                                 , CASE WHEN RC_FLG   = 'Y' THEN 'RF'
                                                                        WHEN DCGO_FLG = 'Y' THEN 'DG'
                                                                        WHEN DCGO_FLG = 'N' AND RC_FLG = 'N' AND AWK_CGO_FLG = 'N' AND BB_CGO_FLG = 'N' THEN 'DR'
                                                                        ELSE 'AL' END CGO_TP_CD
                                                                 , VPS_ETB_DT
                                                                 , VPS_ETD_DT
                                                                 , pol_nod_cd
                                                                 , VVD.VSL_CD
                                                                 , VVD.SKD_VOY_NO
                                                                 , VVD.SKD_DIR_CD
                                                               FROM BKG_BOOKING BK, BKG_VVD VVD, VSK_VSL_PORT_SKD SKD
                                                              WHERE BK.BKG_NO = VVD.BKG_NO
                                                                AND BK.POL_CD = VVD.POL_CD
                                                                AND VVD.VSL_PRE_PST_CD IN ('S', 'T')
																AND VVD.VSL_CD	   NOT IN ('HJXX','HJYY','HJZZ')
                                                                AND VVD.VSL_CD     = SKD.VSL_CD
                                                                AND VVD.SKD_VOY_NO = SKD.SKD_VOY_NO
                                                                AND VVD.SKD_DIR_CD = SKD.SKD_DIR_CD
                                                                AND VVD.POL_CD     = SKD.VPS_PORT_CD
                                                                AND NVL(VVD.POL_CLPT_IND_SEQ, 1) = SKD.CLPT_IND_SEQ
                                                                AND BK.BKG_NO      = @[bkg_no]) skd))
                         when clz_tp_cd = 'R' then DECODE(NVL(@[to_dt], 'N'), 'N', --RAIL TIME이 없는 경우 PRD 계산 로직
												   (SELECT DECODE(BK.FULL_RTN_YD_CD, BK.POL_NOD_CD, 
													--RETURN CY가 POL_NOD_CD가 같을 경우
													(select PRD_GET_CCT_FNC(skd.pol_nod_cd, SKD.SLAN_CD, SKD.SLAN_DIR_CD, SKD.CGO_TP_CD, SKD.VPS_ETB_DT, SKD.VPS_ETD_DT, SKD.VSL_CD||SKD.SKD_VOY_NO||SKD.SKD_DIR_CD)
                                                     from (SELECT SKD.SLAN_CD SLAN_CD
                                                                 , VVD.SKD_DIR_CD SLAN_DIR_CD
                                                                 , CASE WHEN RC_FLG   = 'Y' THEN 'RF'
                                                                        WHEN DCGO_FLG = 'Y' THEN 'DG'
                                                                        WHEN DCGO_FLG = 'N' AND RC_FLG = 'N' AND AWK_CGO_FLG = 'N' AND BB_CGO_FLG = 'N' THEN 'DR'
                                                                        ELSE 'AL' END CGO_TP_CD
                                                                 , VPS_ETB_DT
                                                                 , VPS_ETD_DT
                                                                 , pol_nod_cd
                                                                 , VVD.VSL_CD
                                                                 , VVD.SKD_VOY_NO
                                                                 , VVD.SKD_DIR_CD
                                                               FROM BKG_BOOKING BK, BKG_VVD VVD, VSK_VSL_PORT_SKD SKD
                                                              WHERE BK.BKG_NO = VVD.BKG_NO
                                                                AND BK.POL_CD = VVD.POL_CD
                                                                AND VVD.VSL_PRE_PST_CD IN ('S', 'T')
																AND VVD.VSL_CD	   NOT IN ('HJXX','HJYY','HJZZ')
                                                                AND VVD.VSL_CD     = SKD.VSL_CD
                                                                AND VVD.SKD_VOY_NO = SKD.SKD_VOY_NO
                                                                AND VVD.SKD_DIR_CD = SKD.SKD_DIR_CD
                                                                AND VVD.POL_CD     = SKD.VPS_PORT_CD
                                                                AND NVL(VVD.POL_CLPT_IND_SEQ, 1) = SKD.CLPT_IND_SEQ
                                                                AND BK.BKG_NO      = @[bkg_no]) skd),
													--RETURN CY가 POL_NOD_CD가 다를 경우
													(SELECT ARR_ST_DT -12/24
												      FROM PRD_PROD_CTL_ROUT_DTL DTL, BKG_BOOKING BK
												     WHERE DTL.PCTL_NO        = BK.PCTL_NO
													   AND DTL.ORG_NOD_CD     = BK.FULL_RTN_YD_CD
													   AND BK.BKG_NO          = @[bkg_no]
													   AND DTL.NOD_LNK_DIV_CD ='N'
													   AND DTL.MTY_YD_FLG <> 'Y'
													   AND ROWNUM = 1 )) FROM BKG_BOOKING BK WHERE BKG_NO = @[bkg_no])
													, to_date(@[to_dt], 'yyyymmddhh24mi')) --RAIL TO CCT
						 WHEN CLZ_TP_CD = 'D' THEN (SELECT BKG_GET_DCT_CUT_OFF_FNC(VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD, VVD.POL_CD, TO_CHAR(VVD.POL_CLPT_IND_SEQ), BK.POD_CD) 
													  FROM BKG_BOOKING BK, BKG_VVD VVD
													 WHERE BK.BKG_NO = VVD.BKG_NO
													   AND BK.BKG_NO = @[bkg_no]
													   AND VVD.VSL_PRE_PST_CD IN ('S','T')
													   AND BK.POL_CD = VVD.POL_CD
													   AND VVD.VSL_PRE_PST_CD||VVD.VSL_SEQ = (SELECT MIN(VVD2.VSL_PRE_PST_CD||VVD2.VSL_SEQ)
														                                        FROM BKG_VVD VVD2
														                                       WHERE VVD.BKG_NO = VVD2.BKG_NO
													                                             AND VVD.POL_CD = VVD2.POL_CD)
													)
                         WHEN CLZ_TP_CD = 'V' THEN (SELECT BKG_GET_VRFD_WGT_CUT_OFF_FNC(VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD, VVD.POL_CD, TO_CHAR(VVD.POL_CLPT_IND_SEQ), BK.POD_CD) 
													  FROM BKG_BOOKING BK, BKG_VVD VVD
													 WHERE BK.BKG_NO = VVD.BKG_NO
													   AND BK.BKG_NO = @[bkg_no]
													   AND VVD.VSL_PRE_PST_CD IN ('S','T')
													   AND BK.POL_NOD_CD = VVD.POL_YD_CD
													   AND VVD.VSL_PRE_PST_CD||VVD.VSL_SEQ = (SELECT MIN(VVD2.VSL_PRE_PST_CD||VVD2.VSL_SEQ)
														                                        FROM BKG_VVD VVD2
														                                       WHERE VVD.BKG_NO = VVD2.BKG_NO
													                                             AND VVD.POL_CD = VVD2.POL_CD)
                                                       AND  (SELECT VPS_ETD_DT
                                                               FROM VSK_VSL_PORT_SKD
                                                              WHERE VSL_CD = VVD.VSL_CD
                                                              AND SKD_VOY_NO= VVD.SKD_VOY_NO
                                                              AND SKD_DIR_CD= VVD.SKD_DIR_CD
                                                              AND VPS_PORT_CD = VVD.POL_CD
                                                              AND CLPT_IND_SEQ = VVD.POL_CLPT_IND_SEQ ) >=TO_DATE('20160701','YYYYMMDD')--7/1이후 출항부터 적용
													)
                         when clz_tp_cd = 'L' then (SELECT TO_DATE(PRD_GET_ERD_FNC(POR_CD, POL_CD, FIRST_VVD
                                                                                         , CASE WHEN RC_FLG   = 'Y' THEN 'RF'
                                                                                                WHEN DCGO_FLG = 'Y' THEN 'DG'
                                                                                                WHEN DCGO_FLG = 'N' AND RC_FLG = 'N' AND AWK_CGO_FLG = 'N' AND BB_CGO_FLG = 'N' THEN 'DR'
                                                                                                ELSE 'AL' END ),'YYYY-MM-DD HH24:MI') ERD 
                                                      FROM (SELECT BK.BKG_NO, BK.POR_CD, VVD.POL_CD, VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD FIRST_VVD
                                                                 , DCGO_FLG, RC_FLG, AWK_CGO_FLG, BB_CGO_FLG
                                                              FROM BKG_BOOKING BK, BKG_VVD VVD
                                                             WHERE BK.BKG_NO   = VVD.BKG_NO(+)
                                                               AND BK.BKG_NO   = @[bkg_no]
                                                               AND VVD.VSL_SEQ = (SELECT MIN(VSL_SEQ) 
                                                                                    FROM BKG_VVD 
                                                                                   WHERE BKG_NO = VVD.BKG_NO)
                                                           )
                                                   )
                    end 
     , SYS_SET_DT_DESC = case when clz_tp_cd = 'V' -- 첫VVD 없으면 VGM 계산설명 UPDATE
                               and (SELECT VVD.VSL_CD
								      FROM BKG_BOOKING BK, BKG_VVD VVD
								     WHERE BK.BKG_NO = VVD.BKG_NO
								       AND BK.BKG_NO = @[bkg_no]
								       AND VVD.VSL_PRE_PST_CD IN ('S','T')
								       AND BK.POL_NOD_CD = VVD.POL_YD_CD
								       AND VVD.VSL_PRE_PST_CD||VVD.VSL_SEQ = (SELECT MIN(VVD2.VSL_PRE_PST_CD||VVD2.VSL_SEQ)
								  				                                FROM BKG_VVD VVD2
													                           WHERE VVD.BKG_NO = VVD2.BKG_NO
													                             AND VVD.POL_CD = VVD2.POL_CD)
                                   ) IS NULL THEN ( SELECT SYS_SET_DESC
                                                      FROM ( SELECT CASE WHEN VGM_CLZ_TP_CD = 'B' THEN 'ETB '|| VGM_ITVAL_HRS || ' Hour'--ETB
                                                                         WHEN VGM_CLZ_TP_CD = 'D' THEN 'ETD '|| VGM_ITVAL_HRS || ' Hour' --ETD
                                                                         WHEN VGM_CLZ_TP_CD = 'A' THEN 'ETA '|| VGM_ITVAL_HRS || ' Hour' --ETA
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '1DA' THEN '1 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETA - 1
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '2DA' THEN '2 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETA - 2
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '3DA' THEN '3 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETA - 3
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '4DA' THEN '4 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETA - 4
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '1DB' THEN '1 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETB - 1 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '2DB' THEN '2 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETB - 2 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '3DB' THEN '3 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETB - 3 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '4DB' THEN '4 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETB - 4 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '1DD' THEN '1 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETD - 1 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '2DD' THEN '2 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETD - 2 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '3DD' THEN '3 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETD - 3 
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = '4DD' THEN '4 day before ETA '|| LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0) --ETD - 4
                                                                         WHEN VGM_CLZ_TP_CD = 'Y' AND VGM_CLZ_DY_CD = 'MON' OR VGM_CLZ_DY_CD = 'TUE' OR VGM_CLZ_DY_CD = 'WED' OR VGM_CLZ_DY_CD = 'THU' OR VGM_CLZ_DY_CD = 'FRI' 
                                                                             OR VGM_CLZ_DY_CD = 'SAT' OR VGM_CLZ_DY_CD = 'SUN' THEN VGM_CLZ_DY_CD || ' ' || LPAD(VGM_CLZ_DY_HRS/(60),2,0)||':'||LPAD(MOD(VGM_CLZ_DY_HRS,60),2,0)   
                                                                   END SYS_SET_DESC  
                                                                 , DECODE(CLZ_SET.YD_CD,       '*', 2, 1) ORD1
                                                                 --, DECODE(CLZ_SET.VVD_CD,      '*', 2, 1) ORD2
                                                                 , DECODE(CLZ_SET.VSL_SLAN_CD, '*', 2, 1) ORD3
                                                                 , DECODE(CLZ_SET.CONTI_CD,    '*', 2, 1) ORD4 
                                                                 , DECODE(CLZ_SET.DEST_CNT_CD, '*', 2, 1) ORD5  
                                                              FROM BKG_VRFD_WGT_CLZ_SET CLZ_SET 
                                                                 , BKG_BOOKING          BKG
                                                             WHERE BKG.BKG_NO          = @[bkg_no]
                                                               AND CLZ_SET.LOC_CD      = SUBSTR(BKG.POL_NOD_CD,1,5)
                                                               AND CLZ_SET.YD_CD       = DECODE(CLZ_SET.YD_CD, '*', CLZ_SET.YD_CD, BKG.POL_NOD_CD)
                                                               AND CLZ_SET.VSL_SLAN_CD = DECODE(CLZ_SET.VSL_SLAN_CD, '*', CLZ_SET.VSL_SLAN_CD, (SELECT VVD.SLAN_CD
								                                                                                                                  FROM BKG_BOOKING BK, BKG_VVD VVD
								                                                                                                                 WHERE BK.BKG_NO = VVD.BKG_NO
								                                                                                                                   AND BK.BKG_NO = @[bkg_no]
								                                                                                                                   AND VVD.VSL_PRE_PST_CD IN ('S','T')
								                                                                                                                   AND BK.POL_CD = VVD.POL_CD
                                                                                                                                                   AND ROWNUM = 1))
                                                               AND CLZ_SET.DEST_CNT_CD = DECODE(CLZ_SET.DEST_CNT_CD, '*', CLZ_SET.DEST_CNT_CD, SUBSTR(BKG.POD_NOD_CD, 1, 2))
                                                               --AND CLZ_SET.VVD_CD      = DECODE(CLZ_SET.VVD_CD, '*', CLZ_SET.VVD_CD, 'HCHU0004W')
                                                               AND CLZ_SET.CONTI_CD    = DECODE(CLZ_SET.CONTI_CD,    '*', CLZ_SET.CONTI_CD, (SELECT CONTI_CD FROM MDM_LOCATION WHERE LOC_CD = SUBSTR(BKG.POD_NOD_CD,1,5)))
                                                               AND CLZ_SET.DELT_FLG    = 'N'
                                                             ORDER BY ORD1, ORD3, ORD4, ORD5)
                                                     WHERE ROWNUM = 1
                                                    )
                              else NULL 
                    end
     , NTC_FLG = case when clz_tp_cd = 'F' 
                       and @[from_dt] IS NULL then 'N'
                      when clz_tp_cd = 'O' 
                       and @[to_dt] IS NULL then 'N'
                      else NTC_FLG
                 end                 
     , upd_dt = sysdate
     , upd_usr_id = NVL(@[usr_id], 'SYSTEM')
 where bkg_no = @[bkg_no]  
   and clz_tp_cd in ('O', 'F', 'T', 'R', 'D', 'V', 'E', 'M', 'L')			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="from_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
