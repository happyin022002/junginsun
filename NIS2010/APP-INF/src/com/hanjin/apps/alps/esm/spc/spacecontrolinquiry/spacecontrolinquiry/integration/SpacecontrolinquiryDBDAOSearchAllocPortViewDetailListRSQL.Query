<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchAllocPortViewDetailListRSQL">
			<desc><![CDATA[SpacecontrolinquiryDBDAOSearchAllocPortViewDetailListRSQL
2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청
2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
2017.1.23 SM상선 전환에 따른 소스변경]]></desc>
			<sql><![CDATA[
WITH MAS_MON_VVD_LV AS (
    SELECT B.TRD_CD    ,
           B.SUB_TRD_CD,
           B.RLANE_CD  ,
           B.DIR_CD    ,
           B.IOC_CD    ,
           B.COST_YR   ,
           B.COST_MON  ,
           B.NUM       ,
           B.COST_WK   ,
           B.VSL_CD    ,
           B.SKD_VOY_NO,
           B.SKD_DIR_CD,
           B.RHQ_CD    ,
           B.AQ_CD     ,
           B.RGN_OFC_CD,
           (
             SELECT DECODE(O.OFC_TP_CD, 'QT', O.PRNT_OFC_CD, DECODE(@[ofc_cd], 'ATLSA', 'NYCRA', 'SLSSC', 'NYCRA', 'PHXSA', 'NYCRA', O.OFC_CD))
               FROM SPC_OFC_LVL O  ,
                    COM_USER    COM
              WHERE COM.USR_ID = @[login_id]
                AND B.COST_YR || B.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                AND O.OFC_CD = SPC_SCR_OFC_CONV_FNC(DECODE(@[login_id], '09012001', 'ISTEM', '09014001','ISTEM',  COM.OFC_CD), @[ui_name])  
 	          -- Login Office가 ISTSC인 경우에는 Origin Office가 아닌 Login Office가 Loading Office와 일치할 경우 Alloc 이 조회될 수 있도록 수정 요청
           ) AS OFC_CD,
           B.POL_CD         ,
           B.BSA            ,
           B.LOD_SPL_CNG_FLG,
           B.PAST           ,
           (SELECT /*+ INDEX_DESC (M XPKSPC_MDL_VER_MST ) */
                   DECODE(HH_FLG, 'N', '200001-1', M.COST_YRWK||'-'||M.VER_SEQ)
              FROM SPC_MDL_VER_MST M
             WHERE B.COST_YR ||B.COST_WK BETWEEN M.VER_ST_YRWK AND M.VER_END_YRWK
               AND M.TRD_CD  = B.TRD_CD
               AND M.CFM_FLG = 'Y'
               AND ROWNUM    = 1
           ) AS SEASON,
           NVL(O.ACCT_GRP_CTRL_FLG, 'N') AS ACCT_FLG
           , B.BSE_QTR_CD
           , B.BSE_YR
      FROM (
              SELECT M.TRD_CD    ,
                     M.SUB_TRD_CD,
                     M.RLANE_CD  ,
                     M.DIR_CD    ,
                     M.IOC_CD    ,
                     SUBSTR(M.SLS_YRMON, 1, 4) AS COST_YR ,
                     SUBSTR(M.SLS_YRMON, 5)    AS COST_MON,
                     P.RNUM NUM       ,
                     M.COST_WK        ,
                     DECODE(@[trade], 'IAS', NVL(L.LOD_SPL_CNG_FLG,'N'), 'Y') AS LOD_SPL_CNG_FLG,
                     M.VSL_CD         ,
                     M.SKD_VOY_NO     ,
                     M.DIR_CD               AS SKD_DIR_CD,
                     C.RHQ_CD               AS RHQ_CD    ,
                     @[area]                AS AQ_CD     ,
                     @[sales_office]        AS RGN_OFC_CD,
                     @[pol_cd]              AS POL_CD    ,
                     NVL(B.CRR_BSA_CAPA, 0) AS BSA       ,
                     DECODE(SIGN(SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK - ( SELECT PRD.COST_YR||TO_CHAR(CEIL((TO_CHAR(SYSDATE, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 'FM00')
                                                                            FROM MAS_WK_PRD PRD
                                                                           WHERE PRD.COST_YR = TO_CHAR(SYSDATE, 'YYYY')
                                                                             AND PRD.COST_WK = '01')), -1, 'Y', 'N') AS PAST,
                     DECODE(H.DIR_CD, NULL, 'N', 'Y') AS HH_FLG
                    , CASE WHEN M.COST_YRMON >= '201501' 
                          THEN CEIL(TO_NUMBER(SUBSTR(M.COST_YRMON, -2))/3)||'Q' 
                          ELSE CEIL(TO_NUMBER(DECODE(M.COST_WK,'00','01','53','52',M.COST_WK))/13)||'Q'
                      END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청
                   , SUBSTR(M.COST_YRMON, 1,4) AS BSE_YR
                FROM MAS_MON_VVD     M,
                     MAS_LANE_RGST   L,
                     BSA_VVD_OTR_CRR B,
                     (
                        SELECT /*+ INDEX (P, XPKMAS_WK_PRD) */
                               P.COST_YR||P.COST_WK AS COST_YRWK,
                               ROWNUM               AS RNUM
                          FROM MAS_WK_PRD P
                         WHERE P.COST_YR||P.COST_WK = @[year]||@[week] --sycha 20140610 '=' 비교로 변경하고,  ROWNUM  <= duration 조건 삭제
                     ) P,
                     (
       				 SELECT DISTINCT
            			    SUBSTR(AA,
             					   INSTR(AA,',',1,LEVEL)+1,
               					   INSTR(AA,',',1,LEVEL+1) - INSTR(AA,',',1,LEVEL)
              					  -1
              					  ) RHQ_CD
         			   FROM (SELECT ','||@[rhq]||',' AA FROM DUAL)
          					  CONNECT BY LEVEL <= LENGTH(AA) - LENGTH(REPLACE(AA,','))-1
                     ) C,
                     SPC_HD_HUL_MST H
               WHERE SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK = P.COST_YRWK
                 AND (M.DELT_FLG IS NULL OR M.DELT_FLG = 'N')
       
#if (${trade} != '')
                 AND M.TRD_CD = @[trade]
#end

#if (${subtrade1} != '')
                 AND M.SUB_TRD_CD = @[subtrade1]
#end

#if (${bound} != '')
                 AND M.DIR_CD = (CASE 
									WHEN M.RLANE_CD IN ('AUSIA', 'CKAIA', 'WAXIA', 'AAZIA', 'QISIA', 'RUSIA', 'FOXIA') THEN
											DECODE(@[bound], 'E', 'W', 'W', 'E', @[bound])
									ELSE
										@[bound]
								END)
#end

                 AND B.BSA_OP_JB_CD(+) = '007'
                 AND B.CRR_CD      (+) = 'SML'
                 AND M.TRD_CD          = L.TRD_CD
                 AND M.RLANE_CD        = L.RLANE_CD
                 AND M.DIR_CD          = L.DIR_CD
                 AND M.IOC_CD          = L.IOC_CD
                 AND L.DELT_FLG        = 'N'
                 AND M.TRD_CD          = B.TRD_CD    (+)
                 AND M.RLANE_CD        = B.RLANE_CD  (+)
                 AND M.VSL_CD          = B.VSL_CD    (+)
                 AND M.SKD_VOY_NO      = B.SKD_VOY_NO(+)
                 AND M.DIR_CD          = B.SKD_DIR_CD(+)
                 AND M.TRD_CD          = H.TRD_CD    (+)
                 AND M.RLANE_CD        = H.RLANE_CD  (+)
                 AND M.DIR_CD          = H.DIR_CD    (+)
#if (${rlane1} != '')
                 AND M.RLANE_CD         IN ($rlane1)
#end
           ) B,
           SPC_ALOC_CTRL_OPT O
     WHERE B.TRD_CD     = O.REP_TRD_CD(+)
       AND B.RLANE_CD   = O.RLANE_CD  (+)
       AND B.DIR_CD     = O.DIR_CD    (+)
       AND B.VSL_CD     = O.VSL_CD    (+)
       AND B.SKD_VOY_NO = O.SKD_VOY_NO(+)
       AND B.SKD_DIR_CD = O.SKD_DIR_CD(+)
  ORDER BY B.VSL_CD    ,
           B.SKD_VOY_NO,
           B.DIR_CD
)
, QTA_DATA AS (
    SELECT 1 AS FLG    ,
           R.TRD_CD    ,
           R.DIR_CD    ,
           R.SUB_TRD_CD,
           R.RLANE_CD  ,
           NVL(( SELECT T2.CONV_RGN_OFC_CD
                   FROM SPC_RGN_OFC_CONV T2
                  WHERE T2.SLS_RGN_OFC_CD = R.OFC_CD), R.OFC_CD) AS OFC_CD,
           R.WK             ,
           R.NUM            ,
           R.VVD            ,
           R.BSA            ,
           R.LOD_SPL_CNG_FLG,
           R.ACCT_FLG       ,
           'C' AS CUST_CTRL_CD,
           ROUND(SUM(R.QTA_QTY)) AS QTA_QTY ,
           SUM(R.QTA_GREV)       AS QTA_GREV,
           SUM(R.QTA_CM)         AS QTA_CM  ,
           0 AS FCT_QTY ,
           0 AS FCT_GREV,
           0 AS FCT_CM  ,
           0 AS ALC_QTY ,
           0 AS ALC_GREV,
           0 AS ALC_CM  ,
           0 AS BKG_QTY ,
           0 AS BKG_GREV,
           0 AS BKG_CM
      FROM (
              SELECT MQ.TRD_CD     ,
                     A.SUB_TRD_CD  ,
                     MQ.RLANE_CD   ,
                     MQ.DIR_CD     ,
                     MQ.RGN_OFC_CD        AS OFC_CD,
                     A.COST_YR||A.COST_WK AS WK    ,
                     A.NUM,
                     MQ.VSL_CD||MQ.SKD_VOY_NO||MQ.SKD_DIR_CD AS VVD,
                     A.BSA            ,
                     A.LOD_SPL_CNG_FLG,
                     A.ACCT_FLG       ,
                     (MQ.LOD_QTY) AS QTA_QTY,
                     0 AS QTA_GREV,
                     0 AS QTA_CM
                FROM MAS_MON_VVD_LV   A  ,
                     SQM_CFM_QTA      MQ ,
                     SQM_QTA_RLSE_VER MQR,
                     SPC_OFC_LVL      O
               WHERE 1=1

#if (${rhq} != '')
                 AND A.RHQ_CD = O.N2ND_PRNT_OFC_CD
#end

#if (${area} != '')
                 AND A.AQ_CD = MQ.AQ_CD
#end

#if (${sales_office} != '')
                 AND A.RGN_OFC_CD = NVL(( SELECT O2.CONV_RGN_OFC_CD
                                            FROM SPC_RGN_OFC_CONV O2
                                           WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD), MQ.RGN_OFC_CD)
#end

#if (${pol_cd} != '')
                 AND A.POL_CD = '00000'
#end

                 AND MQR.BSE_YR          = A.BSE_YR
                 --AND MQR.BSE_QTR_CD      = CEIL(TO_NUMBER(DECODE(A.COST_WK,'00','01','53','52',A.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(A.COST_MON)/3)||'Q'
                 AND MQR.BSE_QTR_CD          = A.BSE_QTR_CD
                 AND MQR.SQM_VER_STS_CD  = 'R'
                 AND MQR.BSE_TP_CD       = 'Q' -- 분기 20131205추가
                 AND MQ.QTA_RLSE_VER_NO  = MQR.QTA_RLSE_VER_NO
                 AND MQ.BSE_TP_CD        = MQR.BSE_TP_CD -- 분기 20131205추가  
                 AND MQ.BSE_YR           = MQR.BSE_YR
                 AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD                 
                 AND MQ.QTA_TGT_CD       = 'D'
                 AND MQ.OFC_VW_CD        = 'L'  -- 20131205추가
                 AND MQ.TRD_CD           = A.TRD_CD
                 AND MQ.RLANE_CD         = A.RLANE_CD
                 AND MQ.DIR_CD           = A.SKD_DIR_CD
                 AND MQ.VSL_CD           = A.VSL_CD
                 AND MQ.SKD_VOY_NO       = A.SKD_VOY_NO
                 AND MQ.SKD_DIR_CD       = A.SKD_DIR_CD
                 AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                 --AND MQ.RGN_OFC_CD        = O.OFC_CD
                 AND NVL((SELECT O2.CONV_RGN_OFC_CD
                            FROM SPC_RGN_OFC_CONV O2
                           WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD), MQ.RGN_OFC_CD) = O.OFC_CD
           ) R
  GROUP BY R.TRD_CD         ,
           R.DIR_CD         ,
           R.SUB_TRD_CD     ,
           R.RLANE_CD       ,
           R.OFC_CD         ,
           R.WK             ,
           R.NUM            ,
           R.VVD            ,
           R.BSA            ,
           R.LOD_SPL_CNG_FLG,
           R.ACCT_FLG
    HAVING ROUND(SUM(R.QTA_QTY)) > 0
)
, FCT_DATA AS (
    SELECT 2 AS FLG         ,
           B.TRD_CD         ,
           B.DIR_CD         ,
           B.SUB_TRD_CD     ,
           B.RLANE_CD       ,
           B.OFC_CD         ,
           B.WK             ,
           B.NUM            ,
           B.VVD            ,
           B.BSA            ,
           B.LOD_SPL_CNG_FLG,
           B.ACCT_FLG       ,
           0 AS QTA_QTY ,
           0 AS QTA_GREV,
           0 AS QTA_CM  ,
           SUM(B.FCT_QTY) AS FCT_QTY,
           0 AS FCT_GREV,
           0 AS FCT_CM  ,
           0 AS ALC_QTY ,
           0 AS ALC_GREV,
           0 AS ALC_CM  ,
           0 AS BKG_QTY ,
           0 AS BKG_GREV,
           0 AS BKG_CM  ,
           MAX(B.PAST) AS PAST,
           B.CUST_CTRL_CD
      FROM (
              SELECT B.TRD_CD    ,
                     B.DIR_CD    ,
                     B.SUB_TRD_CD,
                     B.RLANE_CD  ,
                     B.SLS_RGN_OFC_CD     AS OFC_CD,
                     A.COST_YR||A.COST_WK AS WK    ,
                     A.NUM,
                     B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS VVD,
                     A.BSA            ,
                     A.LOD_SPL_CNG_FLG,
                     A.ACCT_FLG       ,
                     NVL(B.CFM_TTL_QTY, 0) + NVL(B.CFM_40FT_HC_QTY, 0) * 2 + NVL(B.CFM_45FT_HC_QTY, 0) * 2 + NVL(B.CFM_53FT_QTY, 0) * 2 AS FCT_QTY,
                     A.PAST,
                     NVL((SELECT CC.CUST_CTRL_CD
  				            FROM SPC_MDL_CUST_CTRL CC
  				           WHERE CC.TRD_CD      = A.TRD_CD
  				             AND CC.COST_YRWK   = SUBSTR(A.SEASON, 1, 6)
  				             AND CC.VER_SEQ     = SUBSTR(A.SEASON, 8)
  				             AND CC.CUST_CNT_CD = B.CUST_CNT_CD
  				             AND CC.CUST_SEQ    = B.CUST_SEQ
  				             AND NVL(CC.SC_NO, NVL(CC.RFA_NO,'X')) = NVL(B.SC_NO,NVL(B.RFA_NO,'X'))
  				             --AND DECODE(CC.TRD_CD, 'AES', NVL(CC.RFA_NO,'X'), NVL(CC.SC_NO,NVL(B.SC_NO,'X'))) = DECODE(CC.TRD_CD, 'AES', NVL(B.RFA_NO,'X'),NVL(B.SC_NO,'X'))
  				             AND ROWNUM = 1  -- TPS만 SC 있음
  		 		       ),'C') AS CUST_CTRL_CD
                FROM MAS_MON_VVD_LV     A,
                     SPC_DLY_FCAST_CUST B
               WHERE A.TRD_CD      = B.TRD_CD
                 AND A.RLANE_CD    = B.RLANE_CD
                 AND A.IOC_CD      = B.IOC_TS_CD
                 AND A.VSL_CD      = B.VSL_CD
                 AND A.SKD_VOY_NO  = B.SKD_VOY_NO
                 AND A.DIR_CD      = B.SKD_DIR_CD
                 AND A.DIR_CD      = B.DIR_CD

#if (${rhq} != '')
       AND ((     A.RHQ_CD = 'SHARC'
              AND EXISTS ( SELECT 1
                             FROM MDM_LOCATION L
                            WHERE SUBSTR(B.POL_YD_CD, 1, 5) = L.LOC_CD
                              AND SPC_CONTI_CONV_FNC(L.CONTI_CD,A.RLANE_CD,A.DIR_CD) = 'A')
                              AND A.RHQ_CD = B.SLS_RHQ_CD)  
             OR A.RHQ_CD = B.SLS_RHQ_CD)
#end

#if (${area} != '')
       AND B.SLS_RGN_OFC_CD IN ( SELECT O.OFC_CD
                                   FROM SPC_OFC_LVL O
                                  WHERE O.N3RD_PRNT_OFC_CD = A.AQ_CD
                                    AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK )
#end

#if (${sales_office} != '')
       AND A.RGN_OFC_CD = NVL(( SELECT T2.CONV_RGN_OFC_CD
                                  FROM SPC_RGN_OFC_CONV T2
                                 WHERE T2.SLS_RGN_OFC_CD = B.SLS_RGN_OFC_CD), B.SLS_RGN_OFC_CD )
#end

#if (${pol_cd} != '')
       AND A.POL_CD = B.POL_YD_CD
#end
	
           ) B
  GROUP BY B.TRD_CD         ,
           B.DIR_CD         ,
           B.SUB_TRD_CD     ,
           B.RLANE_CD       ,
           B.OFC_CD         ,
           B.WK             ,
           B.NUM            ,
           B.VVD            ,
           B.BSA            ,
           B.LOD_SPL_CNG_FLG,
           B.ACCT_FLG       ,
           B.CUST_CTRL_CD
   HAVING SUM(B.FCT_QTY) > 0
)
, ALC_DATA AS (
    SELECT 3 AS FLG    ,
           B.TRD_CD    ,
           B.DIR_CD    ,
           B.SUB_TRD_CD,
           B.RLANE_CD  ,
           B.SLS_RGN_OFC_CD     AS OFC_CD,
           A.COST_YR||A.COST_WK AS WK    ,
           A.NUM,
           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS VVD,
           A.BSA            ,
           A.LOD_SPL_CNG_FLG,
           A.ACCT_FLG       ,
           'C' AS CUST_CTRL_CD,
           0 AS QTA_QTY ,
           0 AS QTA_GREV,
           0 AS QTA_CM  ,
           0 AS FCT_QTY ,
           0 AS FCT_GREV,
           0 AS FCT_CM  ,
           SUM(B.ASGN_TTL_QTY) AS ALC_QTY,
           0 AS ALC_GREV,
           0 AS ALC_CM  ,
           0 AS BKG_QTY ,
           0 AS BKG_GREV,
           0 AS BKG_CM
      FROM MAS_MON_VVD_LV   A,
           SPC_ALOC_POL_POD B,
           VSK_VSL_PORT_SKD V
     WHERE A.TRD_CD     = B.TRD_CD
       AND A.RLANE_CD   = B.RLANE_CD
       AND A.IOC_CD     = B.IOC_CD
       AND A.VSL_CD     = B.VSL_CD
       AND A.SKD_VOY_NO = B.SKD_VOY_NO
       AND A.DIR_CD     = B.SKD_DIR_CD

#if (${rhq} != '')
       AND ((     A.RHQ_CD = 'SHARC'
              AND EXISTS ( SELECT 1
                             FROM MDM_LOCATION L
                            WHERE SUBSTR(B.POL_YD_CD, 1, 5) = L.LOC_CD
                              AND SPC_CONTI_CONV_FNC(L.CONTI_CD,A.RLANE_CD,A.DIR_CD) = 'A')
                              AND A.RHQ_CD = B.SLS_RHQ_CD) 
              OR A.RHQ_CD = B.SLS_RHQ_CD)
#end

#if (${area} != '')
       AND A.AQ_CD = B.SLS_AQ_CD
#end
#if (${sales_office} != '')
       AND A.RGN_OFC_CD = B.SLS_RGN_OFC_CD
#end

#if (${pol_cd} != '')
       AND A.POL_CD = B.POL_YD_CD
#end

       AND (    (A.OFC_CD IN ('SELCTY', 'SELCDO', 'SINRS', 'CLTCO'))
             OR (B.SLS_RHQ_CD = A.OFC_CD)
             OR (B.SLS_AQ_CD IN ( A.OFC_CD, DECODE(A.OFC_CD, 'SHADPI', 'SHADSA'), DECODE(A.OFC_CD, 'SHADSA', 'SHADPI')))
             OR (B.SLS_RGN_OFC_CD = A.OFC_CD))
       AND B.TS_FLG = 'N'
       AND SUBSTR(B.RLANE_CD, 1, 3) = V.SLAN_CD
       AND B.VSL_CD     = V.VSL_CD
       AND B.SKD_VOY_NO = V.SKD_VOY_NO
       AND B.DIR_CD     = V.SKD_DIR_CD
       AND B.POD_YD_CD  = V.YD_CD
       AND A.ACCT_FLG = 'N'
  GROUP BY B.TRD_CD    ,
           B.DIR_CD    ,
           B.SUB_TRD_CD,
           B.RLANE_CD  ,
           B.SLS_RGN_OFC_CD,
           A.COST_YR||A.COST_WK,
           A.NUM,
           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD,
           A.BSA,
           A.LOD_SPL_CNG_FLG,
           A.ACCT_FLG
    HAVING SUM(B.ASGN_TTL_QTY) > 0
)
, ALOC_CUST_DATA AS (
    SELECT 3 AS FLG    ,
           B.TRD_CD    ,
           B.DIR_CD    ,
           B.SUB_TRD_CD,
           B.RLANE_CD  ,


           B.SLS_RGN_OFC_CD     AS OFC_CD,
           A.COST_YR||A.COST_WK AS WK    ,
           A.NUM,
           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS VVD,
           A.BSA            ,
           A.LOD_SPL_CNG_FLG,
           A.ACCT_FLG       ,
           B.CUST_CTRL_CD   ,
           0 AS QTA_QTY ,
           0 AS QTA_GREV,
           0 AS QTA_CM  ,
           0 AS FCT_QTY ,
           0 AS FCT_GREV,
           0 AS FCT_CM  ,
           SUM(B.ASGN_TTL_QTY) AS ALC_QTY,
           0 AS ALC_GREV,
           0 AS ALC_CM  ,
           0 AS BKG_QTY ,
           0 AS BKG_GREV,
           0 AS BKG_CM
      FROM MAS_MON_VVD_LV        A,
           SPC_ALOC_CUST_POL_POD B,
           VSK_VSL_PORT_SKD      V
     WHERE A.TRD_CD     = B.TRD_CD
       AND A.RLANE_CD   = B.RLANE_CD
       AND A.IOC_CD     = B.IOC_CD
       AND A.VSL_CD     = B.VSL_CD
       AND A.SKD_VOY_NO = B.SKD_VOY_NO
       AND A.DIR_CD     = B.SKD_DIR_CD

#if (${rhq} != '')
       AND ((     A.RHQ_CD = 'SHARC'
              AND EXISTS ( SELECT 1
                             FROM MDM_LOCATION L
                            WHERE SUBSTR(B.POL_YD_CD, 1, 5) = L.LOC_CD
                              AND SPC_CONTI_CONV_FNC(L.CONTI_CD,A.RLANE_CD,A.DIR_CD) = 'A')
                              AND A.RHQ_CD = B.SLS_RHQ_CD) 
              OR A.RHQ_CD = B.SLS_RHQ_CD)
#end

#if (${area} != '')
       AND A.AQ_CD = B.SLS_AQ_CD
#end
#if (${sales_office} != '')
       AND A.RGN_OFC_CD = B.SLS_RGN_OFC_CD
#end

#if (${pol_cd} != '')
       AND A.POL_CD = B.POL_YD_CD
#end


       AND (    (A.OFC_CD IN ('SELCTY', 'SELCDO', 'SINRS', 'CLTCO'))
             OR (B.SLS_RHQ_CD = A.OFC_CD)
             OR (B.SLS_AQ_CD IN ( A.OFC_CD, DECODE(A.OFC_CD, 'SHADPI', 'SHADSA'), DECODE(A.OFC_CD, 'SHADSA', 'SHADPI')))
             OR (B.SLS_RGN_OFC_CD = A.OFC_CD))
       AND B.TS_FLG = 'N'
       AND SUBSTR(B.RLANE_CD, 1, 3) = V.SLAN_CD
       AND B.VSL_CD     = V.VSL_CD
       AND B.SKD_VOY_NO = V.SKD_VOY_NO
       AND B.DIR_CD     = V.SKD_DIR_CD
       AND B.POD_YD_CD  = V.YD_CD
       
       AND A.ACCT_FLG = 'Y'
  GROUP BY B.TRD_CD    ,
           B.DIR_CD    ,
           B.SUB_TRD_CD,
           B.RLANE_CD  ,


           B.SLS_RGN_OFC_CD,
           A.COST_YR||A.COST_WK,
           A.NUM,
           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD,
           A.BSA,
           A.LOD_SPL_CNG_FLG,
           A.ACCT_FLG       ,
           B.CUST_CTRL_CD
    HAVING SUM(B.ASGN_TTL_QTY) > 0
)
,RFA_BKG_DATA AS (
SELECT SHP_CUST_CD,
       POL_CD,
       POD_CD,
       RFA_NO,
       CUST_CTRL_CD
  FROM (
        SELECT 
               CUST_CD AS  SHP_CUST_CD,
               POL_CD,
               POD_CD,
               MAX(RFA_NO) OVER(PARTITION BY CUST_CD,POL_CD,POD_CD) AS RFA_NO, 
               CUST_CTRL_CD,             
               MIN(CUST_CTRL_CD) OVER(PARTITION BY CUST_CD,POL_CD,POD_CD) AS CUST_CTRL_CD_MIN               
          FROM (
                SELECT (SELECT CUST_CNT_CD||LPAD(CUST_SEQ,6,'0')
                          FROM BKG_CUSTOMER B
                         WHERE B.BKG_NO         = A.BKG_NO
                           AND B.BKG_CUST_TP_CD = 'S'
                           AND B.CUST_CNT_CD    = 'CN'
                       ) CUST_CD,
                       A.POL_CD,
                       A.POD_CD,                       
                       C.RFA_NO,
                       C.CUST_CTRL_CD
                  FROM BKG_BOOKING A,
                       (
                        SELECT RFA_NO,
                               CUST_CTRL_CD
                          FROM SPC_MDL_CUST_CTRL M,
                               MAS_MON_VVD_LV S
                         WHERE M.TRD_CD    = 'AES'
                           AND M.TRD_CD    = S.TRD_CD 
                           AND M.COST_YRWK = SUBSTR(S.SEASON, 1, 6)
                           AND M.VER_SEQ   = SUBSTR(S.SEASON, 8)
                           AND M.RFA_NO IS NOT NULL
                       ) C
                 WHERE A.RFA_NO = C.RFA_NO 
               )
         WHERE CUST_CD IS NOT NULL
        )
  WHERE CUST_CTRL_CD_MIN = CUST_CTRL_CD
 GROUP BY SHP_CUST_CD,
       POL_CD,
       POD_CD,
       RFA_NO,
       CUST_CTRL_CD
)
, BKG_DATA AS (
    SELECT 4 AS FLG         ,
           B.TRD_CD         ,
           B.DIR_CD         ,
           B.SUB_TRD_CD     ,
           B.RLANE_CD       ,
           B.OFC_CD         ,
           B.WK             ,
           B.NUM            ,
           B.VVD            ,
           B.BSA            ,
           B.LOD_SPL_CNG_FLG,
           B.ACCT_FLG       ,
           0 AS QTA_QTY ,
           0 AS QTA_GREV,
           0 AS QTA_CM  ,
           0 AS FCT_QTY ,
           0 AS FCT_GREV,
           0 AS FCT_CM  ,
           0 AS ALC_QTY ,
           0 AS ALC_GREV,
           0 AS ALC_CM  ,
           SUM(B.BKG_QTY) AS BKG_QTY,
           0 AS BKG_GREV,
           0 AS BKG_CM  ,
           MAX(B.PAST) AS PAST,
           B.CUST_CTRL_CD
      FROM (
            SELECT B.TRD_CD    ,
                   B.DIR_CD    ,
                   B.SUB_TRD_CD,
                   B.RLANE_CD  ,
                   B.OFC_CD,
                   B.WK    ,
                   B.NUM,
                   B.VVD,
                   B.BSA            ,
                   B.LOD_SPL_CNG_FLG,
                   B.ACCT_FLG       ,
                   B.BKG_QTY,
                   B.PAST,
                   CASE WHEN B.AES_FLG = 'Y' THEN                        
                        NVL(RD.CUST_CTRL_CD,'C')                         
                   ELSE
                        B.CUST_CTRL_CD
                   END AS CUST_CTRL_CD
             FROM (
                      SELECT A.TRD_CD    ,
                             A.DIR_CD    ,
                             A.SUB_TRD_CD,
                             A.RLANE_CD  ,
                             O.N4TH_PRNT_OFC_CD   AS OFC_CD,
                             A.COST_YR||A.COST_WK AS WK    ,
                             A.NUM,
                             A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS VVD,
                             A.BSA            ,
                             A.LOD_SPL_CNG_FLG,
                             A.ACCT_FLG       ,
                             ( SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY)
                                 FROM BKG_QUANTITY Q
                                WHERE B.BKG_NO = Q.BKG_NO
                               HAVING SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY) > 0
                             ) AS BKG_QTY,
                             A.PAST,
                             
                             CASE WHEN A.TRD_CD = 'AES' AND DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO) IS NULL AND BC.CUST_CNT_CD = 'CN' AND B.SC_NO IS NULL THEN
                                  'Y'                             
                             ELSE  
                                  'N'
                             END AS AES_FLG,
                             
                             BC.CUST_CNT_CD||LPAD(BC.CUST_SEQ,6,'0') AS SHP_CUST_CD, 
                             B.POL_CD AS BKG_POL_CD,
                             B.POD_CD AS BKG_POD_CD,
                     
                             NVL((SELECT CC.CUST_CTRL_CD
                                    FROM SPC_MDL_CUST_CTRL CC
                                   WHERE CC.TRD_CD      = A.TRD_CD
                                     AND CC.COST_YRWK   = SUBSTR(A.SEASON, 1, 6)
                                     AND CC.VER_SEQ     = SUBSTR(A.SEASON, 8)
                                     AND CC.CUST_CNT_CD = B.CTRT_CUST_CNT_CD
                                     AND CC.CUST_SEQ    = B.CTRT_CUST_SEQ
                                     AND NVL(CC.SC_NO, NVL(CC.RFA_NO,'X')) = NVL(SPC_GET_SMP_AMEND_FNC(CC.TRD_CD, CC.COST_YRWK, CC.VER_SEQ, B.SC_NO), NVL(SPC_GET_SMP_AMEND_FNC(CC.TRD_CD, CC.COST_YRWK, CC.VER_SEQ, DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO)),'X'))
                                     --AND DECODE(CC.TRD_CD, 'AES', NVL(CC.RFA_NO,'X'), NVL(CC.SC_NO,NVL(SPC_GET_SMP_AMEND_FNC(CC.TRD_CD, CC.COST_YRWK, CC.VER_SEQ, B.SC_NO),'X'))) = DECODE(CC.TRD_CD, 'AES', NVL(SPC_GET_SMP_AMEND_FNC(CC.TRD_CD, CC.COST_YRWK, CC.VER_SEQ, DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO)),'X'), NVL(SPC_GET_SMP_AMEND_FNC(CC.TRD_CD, CC.COST_YRWK, CC.VER_SEQ, B.SC_NO),'X'))
                                     AND ROWNUM = 1), 'C') AS CUST_CTRL_CD
 
                FROM SPC_OFC_LVL        O  ,
                     BKG_BOOKING        B  ,
                     MDM_DTL_REV_LANE   DRL,
                     MDM_REV_LANE       RL ,
                     MAS_MON_VVD_LV     A  ,
                     BKG_VVD            BV ,
                     BKG_CUSTOMER       BC  --20140304 추가
               WHERE O.OFC_CD         = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)
                 AND B.BKG_STS_CD    IN('W','F')
                 AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                 AND A.VSL_CD         = B.VSL_CD
                 AND A.SKD_VOY_NO     = B.SKD_VOY_NO
                 AND A.SKD_DIR_CD     = B.SKD_DIR_CD

#if (${rhq} != '' || ${area} != '' || ${sales_office} != '')
       AND (    (A.RHQ_CD = 'SHARC' AND A.AQ_CD IS NULL AND A.RGN_OFC_CD IS NULL) 
             OR EXISTS ( SELECT O.OFC_CD
                           FROM SPC_OFC_LVL O
                          WHERE O.OFC_TP_CD IN ('BB', 'BA', 'BS')
                            AND SPC_SCR_OFC_CONV_FNC(B.BKG_OFC_CD) = O.OFC_CD
						    AND A.RHQ_CD = O.N2ND_PRNT_OFC_CD
                            AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                     CONNECT BY NOCYCLE O.PRNT_OFC_CD = PRIOR O.OFC_CD
                             START WITH (A.RGN_OFC_CD IS NULL AND O.PRNT_OFC_CD = NVL(A.AQ_CD, A.RHQ_CD)) OR (O.OFC_CD = A.RGN_OFC_CD)))
#end

#if (${pol_cd} != '')
       AND A.POL_CD = NVL(B.PRE_RLY_PORT_CD, B.POL_CD)
#end
                 AND DRL.TRD_CD          = A.TRD_CD
                 AND DRL.RLANE_CD        = A.RLANE_CD
                 AND DRL.VSL_SLAN_DIR_CD = A.DIR_CD
                 AND DRL.IOC_CD          = A.IOC_CD
                 AND DRL.SUB_TRD_CD      = A.SUB_TRD_CD
                 AND DRL.DELT_FLG        = 'N'
                 AND DRL.RLANE_CD        = RL.RLANE_CD
                 AND DRL.FM_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)
                                              FROM MDM_LOCATION L
                                             WHERE L.LOC_CD = NVL(B.PRE_RLY_PORT_CD, B.POL_CD) )
                 AND DRL.TO_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)
                                              FROM MDM_LOCATION L
                                             WHERE L.LOC_CD = NVL(B.PST_RLY_PORT_CD, B.POD_CD) )
                 AND (    ((A.RHQ_CD = 'SHARC' AND A.AQ_CD IS NULL AND A.RGN_OFC_CD IS NULL AND  A.RHQ_CD = O.N2ND_PRNT_OFC_CD) AND DRL.FM_CONTI_CD = 'A')
                       OR A.RHQ_CD <> 'SHARC'
                       OR A.AQ_CD      IS NOT NULL
                       OR A.RGN_OFC_CD IS NOT NULL )
                 AND RL.RLANE_CD    = A.RLANE_CD
                 AND RL.VSL_SLAN_CD = B.SLAN_CD
                 AND RL.VSL_TP_CD   = 'C'
                 AND RL.DELT_FLG    = 'N'
                 AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                 
                 AND B.BKG_NO            = BV.BKG_NO
                 AND A.VSL_CD            = BV.VSL_CD
                 AND A.SKD_VOY_NO        = BV.SKD_VOY_NO
                 AND A.DIR_CD            = BV.SKD_DIR_CD
                 AND B.BKG_NO            = BC.BKG_NO  --20140304 추가
                 AND BC.BKG_CUST_TP_CD   = 'S'        --20140304 추가
             ) B, RFA_BKG_DATA RD
       WHERE B.SHP_CUST_CD = RD.SHP_CUST_CD(+) 
         AND B.BKG_POL_CD  = RD.POL_CD(+)
         AND B.BKG_POD_CD  = RD.POD_CD(+)
             
      ) B
GROUP BY B.TRD_CD         ,
         B.DIR_CD         ,
         B.SUB_TRD_CD     ,
         B.RLANE_CD       ,
         B.OFC_CD         ,
         B.WK             ,
         B.NUM            ,
         B.VVD            ,
         B.BSA            ,
         B.LOD_SPL_CNG_FLG,
         B.ACCT_FLG       ,
         B.CUST_CTRL_CD
  HAVING B.OFC_CD IS NOT NULL
)
, MDL_DATA AS (
    SELECT A.TRD_CD    ,
           A.DIR_CD    ,
           A.SUB_TRD_CD,
           A.RLANE_CD  ,
           M.SLS_RGN_OFC_CD AS OFC_CD,
           M.CUST_CTRL_CD,
           A.COST_YR||A.COST_WK AS WK,
           A.NUM,
           A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS VVD,
           A.BSA,
           A.LOD_SPL_CNG_FLG,
           A.ACCT_FLG       ,
           SUM(RLANE_ADJ_QTY) AS MDL_QTY
      FROM MAS_MON_VVD_LV        A,
           SPC_MDL_CUST_REV_LANE M
     WHERE M.COST_YRWK      = SUBSTR(A.SEASON, 1, 6)
       AND M.VER_SEQ        = SUBSTR(A.SEASON, 8)
       AND M.TRD_CD         = A.TRD_CD
       AND M.SUB_TRD_CD     = A.SUB_TRD_CD
       AND M.RLANE_CD       = A.RLANE_CD
       AND M.SLS_RHQ_CD     = A.RHQ_CD
#if (${sales_office} != '')
       AND M.SLS_RGN_OFC_CD = A.RGN_OFC_CD
#end
       AND A.ACCT_FLG       = 'Y'
  GROUP BY A.TRD_CD        ,
           A.DIR_CD        ,
           A.SUB_TRD_CD    ,
           A.RLANE_CD      ,
           M.SLS_RGN_OFC_CD,
           M.CUST_CTRL_CD  ,
           A.COST_YR||A.COST_WK,
           A.NUM,
           A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD,
           A.BSA,
           A.LOD_SPL_CNG_FLG,
           A.ACCT_FLG
    HAVING SUM(M.RLANE_ADJ_QTY)>0
)
, BASE_DATA AS(
    SELECT TRD_CD         ,
           DIR_CD         ,
           SUB_TRD_CD     ,
           RLANE_CD       ,
           OFC_CD         ,
           CUST_CTRL_CD   ,
           WK             ,
           NUM            ,
           VVD            ,
           DECODE(TRD_CD||LOD_SPL_CNG_FLG,'IASY',SUM(BKG_QTY),BSA) AS BSA,  -- 2013.03.28 수송량으로 BSA 대체
           LOD_SPL_CNG_FLG,
           ACCT_FLG       ,
           SUM(QTA_QTY)  AS QTA_QTY ,
           SUM(QTA_GREV) AS QTA_GREV,
           SUM(QTA_CM)   AS QTA_CM  ,
           SUM(FCT_QTY)  AS FCT_QTY ,
           SUM(FCT_GREV) AS FCT_GREV,
           SUM(FCT_CM)   AS FCT_CM  ,
           SUM(ALC_QTY)  AS ALC_QTY ,
           SUM(ALC_GREV) AS ALC_GREV,
           SUM(ALC_CM)   AS ALC_CM  ,
           SUM(BKG_QTY)  AS BKG_QTY ,
           SUM(BKG_GREV) AS BKG_GREV,
           SUM(BKG_CM)   AS BKG_CM  ,
           SUM(MDL_QTY)  AS MDL_QTY
      FROM (
              SELECT TRD_CD         ,
                     DIR_CD         ,
                     SUB_TRD_CD     ,
                     RLANE_CD       ,
                     OFC_CD         ,
                     CUST_CTRL_CD   ,
                     WK             ,
                     NUM            ,
                     VVD            ,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     QTA_QTY        ,
                     QTA_GREV       ,
                     QTA_CM         ,
                     FCT_QTY        ,
                     FCT_GREV       ,
                     FCT_CM         ,
                     ALC_QTY        ,
                     ALC_GREV       ,
                     ALC_CM         ,
                     BKG_QTY        ,
                     BKG_GREV       ,
                     BKG_CM         ,
                     0 AS MDL_QTY
                FROM QTA_DATA
              UNION ALL
              SELECT TRD_CD         ,
                     DIR_CD         ,
                     SUB_TRD_CD     ,
                     RLANE_CD       ,
                     OFC_CD         ,
                     CUST_CTRL_CD   ,
                     WK             ,
                     NUM            ,
                     VVD            ,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     QTA_QTY        ,
                     QTA_GREV       ,
                     QTA_CM         ,
                     DECODE(PAST, 'N', FCT_QTY , 0) AS FCT_QTY ,
                     DECODE(PAST, 'N', FCT_GREV, 0) AS FCT_GREV,
                     DECODE(PAST, 'N', FCT_CM  , 0) AS FCT_CM  ,
                     ALC_QTY ,
                     ALC_GREV,
                     ALC_CM  ,
                     BKG_QTY ,
                     BKG_GREV,
                     BKG_CM  ,
                     0 AS MDL_QTY
                FROM FCT_DATA
              UNION ALL
              SELECT TRD_CD         ,
                     DIR_CD         ,
                     SUB_TRD_CD     ,
                     RLANE_CD       ,
                     OFC_CD         ,
                     CUST_CTRL_CD   ,
                     WK             ,
                     NUM            ,
                     VVD            ,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     QTA_QTY        ,
                     QTA_GREV       ,
                     QTA_CM         ,
                     FCT_QTY        ,
                     FCT_GREV       ,
                     FCT_CM         ,
                     ALC_QTY        ,
                     ALC_GREV       ,
                     ALC_CM         ,
                     BKG_QTY        ,
                     BKG_GREV       ,
                     BKG_CM         ,
                     0 AS MDL_QTY
                FROM ALC_DATA
              UNION ALL
              SELECT TRD_CD         ,
                     DIR_CD         ,
                     SUB_TRD_CD     ,
                     RLANE_CD       ,
                     OFC_CD         ,
                     CUST_CTRL_CD   ,
                     WK             ,
                     NUM            ,
                     VVD            ,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     QTA_QTY        ,
                     QTA_GREV       ,
                     QTA_CM         ,
                     FCT_QTY        ,
                     FCT_GREV       ,
                     FCT_CM         ,
                     ALC_QTY        ,
                     ALC_GREV       ,
                     ALC_CM         ,
                     BKG_QTY        ,
                     BKG_GREV       ,
                     BKG_CM         ,
                     0 AS MDL_QTY
                FROM ALOC_CUST_DATA
              UNION ALL
              SELECT TRD_CD         ,
                     DIR_CD         ,
                     SUB_TRD_CD     ,
                     RLANE_CD       ,
                     OFC_CD         ,
                     CUST_CTRL_CD   ,
                     WK             ,
                     NUM            ,
                     VVD            ,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     QTA_QTY        ,
                     QTA_GREV       ,
                     QTA_CM         ,
                     DECODE(PAST, 'Y', BKG_QTY , 0) AS FCT_QTY ,
                     DECODE(PAST, 'Y', BKG_GREV, 0) AS FCT_GREV,
                     DECODE(PAST, 'Y', BKG_CM  , 0) AS FCT_CM  ,
                     ALC_QTY ,
                     ALC_GREV,
                     ALC_CM  ,
                     BKG_QTY ,
                     BKG_GREV,
                     BKG_CM    ,
                     0 AS MDL_QTY
                FROM BKG_DATA
              UNION ALL
              SELECT TRD_CD         ,
                     DIR_CD         ,
                     SUB_TRD_CD     ,
                     RLANE_CD       ,
                     OFC_CD         ,
                     CUST_CTRL_CD   ,
                     WK             ,
                     NUM            ,
                     VVD            ,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     0 AS QTA_QTY   ,
                     0 AS QTA_GREV  ,
                     0 AS QTA_CM    ,
                     0 AS FCT_QTY ,
                     0 AS FCT_GREV,
                     0 AS FCT_CM  ,
                     0 AS ALC_QTY ,
                     0 AS ALC_GREV,
                     0 AS ALC_CM  ,
                     0 AS BKG_QTY ,
                     0 AS BKG_GREV,
                     0 AS BKG_CM    ,
                     MDL_QTY
                FROM MDL_DATA

                -- BSA TO LOAD가 아닌 경우, BSA 정보 무조건 가져오도록 추가
              UNION ALL
              SELECT DISTINCT 
                     TRD_CD    ,
                     DIR_CD    ,
                     SUB_TRD_CD,
                     RLANE_CD  ,
                     'BSA' AS OFC_CD      ,
                     'C'   AS CUST_CTRL_CD,
                     COST_YR||COST_WK AS WK,
                     NUM       ,
                     VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD,
                     BSA            ,
                     LOD_SPL_CNG_FLG,
                     ACCT_FLG       ,
                     0 AS QTA_QTY   ,
                     0 AS QTA_GREV  ,
                     0 AS QTA_CM    ,
                     0 AS FCT_QTY   ,
                     0 AS FCT_GREV  ,
                     0 AS FCT_CM    ,
                     0 AS ALC_QTY   ,
                     0 AS ALC_GREV  ,
                     0 AS ALC_CM    ,
                     0 AS BKG_QTY   ,
                     0 AS BKG_GREV  ,
                     0 AS BKG_CM    ,
                     0 AS MDL_QTY
                FROM MAS_MON_VVD_LV
               WHERE LOD_SPL_CNG_FLG = 'N'
                 AND BSA > 0
           )
  GROUP BY TRD_CD         ,
           DIR_CD         ,
           SUB_TRD_CD     ,
           RLANE_CD       ,
           OFC_CD         ,
           CUST_CTRL_CD   ,
           WK             ,
           NUM            ,
           VVD            ,
           BSA            ,
           LOD_SPL_CNG_FLG,
           ACCT_FLG
)
--- sycha 20140610 summary 가 아닌 상세 조회용으로 변환
SELECT
    GRP_ID, -- 0:원데이터, 3:OFC_CD 합계,7:AQ_CD 합계, 15:DEST 합계,31:전체 합계 
    TRD_CD,
    DIR_CD,
    SUB_TRD_CD,
    OFC_CD,
    CUST_CTRL_CD,    
    VVD,
    RLANE_CD  ,
    DEST,
    AQ_CD,
    DECODE(CUST_CTRL_CD, NULL, QTA_QTY, 'C', (QTA_QTY-MDL_TTL_QTY), MDL_QTY) AS QTA_QTY,
    QTA_GREV,
    QTA_CM  ,        
    FCT_QTY,
    FCT_GREV,
    FCT_CM ,
    ALC_QTY ,
    ALC_GREV,
    ALC_CM  ,
    BKG_QTY ,
    BKG_GREV,
    BKG_CM ,
    MDL_QTY,   
    MDL_TTL_QTY,
    DECODE(CUST_CTRL_CD, NULL, PREF_QTY, 'C', ROUND(DECODE(QTA_QTY-MDL_TTL_QTY, 0, 0, FCT_QTY * 100 / (QTA_QTY-MDL_TTL_QTY)), 1), GPREF_QTY ) AS PREF_QTY,
    GPREF_QTY 
FROM (
    SELECT
        GRP_ID,
        TRD_CD,
        DIR_CD,
        SUB_TRD_CD,
        OFC_CD,
        CUST_CTRL_CD,    
        VVD,
        RLANE_CD  ,
        DEST,
        AQ_CD,
        QTA_QTY,
        QTA_GREV,
        QTA_CM  ,        
        FCT_QTY,
        FCT_GREV,
        FCT_CM ,
        ALC_QTY ,
        ALC_GREV,
        ALC_CM  ,
        BKG_QTY ,
        BKG_GREV,
        BKG_CM ,
        MDL_QTY,         
        MAX(MDL_QTY) OVER (PARTITION BY DEST, TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, AQ_CD, OFC_CD) AS MDL_TTL_QTY,
        ROUND(DECODE(QTA_QTY, 0, 0, FCT_QTY * 100 / QTA_QTY), 1) AS PREF_QTY,
        DECODE(CUST_CTRL_CD, NULL, 0, ROUND(DECODE(MDL_QTY, 0, 0, FCT_QTY * 100 / MDL_QTY), 1)) AS GPREF_QTY      
    FROM (
        SELECT
            GROUPING_ID(DEST, AQ_CD, OFC_CD, VVD, CUST_CTRL_CD) AS GRP_ID,
            TRD_CD,
            DIR_CD,
            SUB_TRD_CD,
            OFC_CD,
            CUST_CTRL_CD,
            VVD,
            RLANE_CD  ,
            DEST,
            AQ_CD,
            SUM(QTA_QTY) AS QTA_QTY,
            SUM(QTA_GREV) AS QTA_GREV,
            SUM(QTA_CM) AS QTA_CM  ,
            SUM(FCT_QTY) AS FCT_QTY,
            SUM(FCT_GREV) AS FCT_GREV,
            SUM(FCT_CM) AS FCT_CM ,
            SUM(ALC_QTY) AS ALC_QTY ,
            SUM(ALC_GREV) AS ALC_GREV,
            SUM(ALC_CM) AS ALC_CM  ,
            SUM(BKG_QTY) AS BKG_QTY ,
            SUM(BKG_GREV) AS BKG_GREV,
            SUM(BKG_CM) AS BKG_CM ,
            SUM(MDL_QTY) AS MDL_QTY           
        FROM (
            SELECT
                TRD_CD,
                DIR_CD,
                SUB_TRD_CD,
                OFC_CD,
                CUST_CTRL_CD,
                WK,
                VVD,
                RLANE_CD  ,
                LOD_SPL_CNG_FLG,
                ACCT_FLG,
		        NVL(SPC_GET_DEST_FNC(Z1.TRD_CD, Z1.SUB_TRD_CD, Z1.RLANE_CD), '-') AS DEST,
		                   DECODE(Z1.OFC_CD, 'BSA', 'BSA', ( 
		            #if(${check_area2} =='Y')
		                         SELECT SPC_RGN_OFC_CONV_FNC(NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD),Z1.OFC_CD)
		            #else
		                         SELECT NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)             
		            #end
		                         FROM SPC_OFC_LVL O
		                         WHERE O.OFC_CD = Z1.OFC_CD
		                         AND Z1.WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK )
		            ) AS AQ_CD,                
                QTA_QTY ,
                QTA_GREV,
                QTA_CM  ,
                FCT_QTY ,
                FCT_GREV,
                FCT_CM  ,
                ALC_QTY ,
                ALC_GREV,
                ALC_CM  ,
                BKG_QTY ,
                BKG_GREV,
                BKG_CM  ,
                MDL_QTY       
            FROM BASE_DATA Z1
            WHERE VVD IN (@[vvd1], @[vvd2])  -- sycha 20140610 항차 파라미터 추가
        ) Z2
        GROUP BY TRD_CD, DIR_CD, SUB_TRD_CD, RLANE_CD, ROLLUP(DEST, AQ_CD, OFC_CD, VVD, CUST_CTRL_CD )
    ) Z3
    WHERE GRP_ID != 1 AND GRP_ID != 31 -- VVD, CUST_CTRL_CD 그룹 합계 및 총계는 조회 불필요
) Z4			]]></sql>
			<params>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="login_id" type="12" value="" out="N"/>
				<param name="ui_name" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="area" type="12" value="" out="N"/>
				<param name="sales_office" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="subtrade1" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vvd1" type="12" value="" out="N"/>
				<param name="vvd2" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
