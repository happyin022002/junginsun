<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOSearchDiversionCAListRSQL">
			<desc><![CDATA[Merchant Request에 의한 Diversion C/A 목록을 조회한다]]></desc>
			<sql><![CDATA[
SELECT DENSE_RANK() OVER(ORDER BY BK.BKG_NO, BK.BL_NO) SEQ,
        (SELECT  OFC_CD 
         FROM MDM_ORGANIZATION 
         WHERE DELT_FLG = 'N' 
         AND OFC_TP_CD = 'HQ' 
         START WITH OFC_CD = BK.BKG_OFC_CD
         CONNECT BY PRIOR PRNT_OFC_CD = OFC_CD) RHQ_CD,
       BK.BKG_OFC_CD,
       BK.SVC_SCP_CD,
       BK.BL_NO||BK.BL_NO_TP||BK.BL_TP_CD BL_NO,
       BK.BKG_NO,
       BD.BDR_FLG,
       TO_CHAR(BR.RT_APLY_DT, 'YYYY-MM-DD')      AS RT_APLY_DT,   
       TO_CHAR(VV.VPS_ETD_DT, 'YYYY-MM-DD')      AS VPS_ETD_DT,       
       (SELECT INTG_CD_VAL_DP_DESC
        FROM COM_INTG_CD_DTL
        WHERE INTG_CD_ID ='CD01716'
        AND INTG_CD_VAL_CTNT = BR.BKG_CTRT_TP_CD) BKG_CTRT_TP_CD ,
       CASE WHEN BR.BKG_CTRT_TP_CD = 'R' THEN BK.RFA_NO
            WHEN BR.BKG_CTRT_TP_CD = 'S' THEN BK.SC_NO
            WHEN BR.BKG_CTRT_TP_CD = 'T' THEN BK.TAA_NO
       END CTRT_NO,
       NEW.CORR_NO NEW_CORR_NO,
       OLD.CORR_NO OLD_CORR_NO,
       RANK() OVER (PARTITION BY BK.BKG_NO ORDER BY NEW.CORR_DT) CA_SEQ,
       NRT.POR_CD NEW_POR_CD,
       NRT.POL_CD NEW_POL_CD,
       NRT.POD_CD NEW_POD_CD,
       NRT.DEL_CD NEW_DEL_CD,
       ORT.POR_CD OLD_POR_CD,
       ORT.POL_CD OLD_POL_CD,
       ORT.POD_CD OLD_POD_CD,
       ORT.DEL_CD OLD_DEL_CD,
       DVC.CURR_CD    DVC_CURR_CD,
       DVC.CHG_UT_AMT DVC_CHG_UT_AMT,
       DVC.RAT_AS_QTY DVC_RAT_AS_QTY,
       DVC.RAT_UT_CD  DVC_RAT_UT_CD,
       DVC.CHG_AMT    DVC_CHG_AMT,
       COUNT (DISTINCT BK.BKG_NO) OVER (PARTITION BY 1) BL_CNT,
--------------VO 작성용----------------
       '' date_type,
       '' fm_dt,
       '' to_dt
FROM BKG_BOOKING BK,
     BKG_RATE BR,
     BKG_BL_DOC BD,
     BKG_VVD BV, 
     VSK_VSL_PORT_SKD VV,
     BKG_CORRECTION NEW, 
     BKG_CORRECTION OLD,
     BKG_BKG_HIS NRT,
     BKG_BKG_HIS ORT,
     BKG_CHG_RT DVC,
    (SELECT	OFC_CD 
     FROM	MDM_ORGANIZATION A
 #if (${bkg_ofc_cd} != '') 
     WHERE	OFC_CD = @[bkg_ofc_cd]
 #end
     START WITH	A.OFC_CD = @[rhq_cd]
     CONNECT BY	PRIOR A.OFC_CD	= A.PRNT_OFC_CD  
     ) OG
WHERE 1=1
#if (${date_type} == 'B')
AND BK.BKG_CRE_DT BETWEEN TO_DATE(@[fm_dt],'YYYY-MM-DD') AND TO_DATE(@[to_dt],'YYYY-MM-DD') + 0.99999
#elseif (${date_type} == 'A')
AND BR.RT_APLY_DT BETWEEN TO_DATE(@[fm_dt],'YYYY-MM-DD') AND TO_DATE(@[to_dt],'YYYY-MM-DD') + 0.99999
#elseif (${date_type} == 'E')
AND VV.VPS_ETD_DT BETWEEN TO_DATE(@[fm_dt],'YYYY-MM-DD') AND TO_DATE(@[to_dt],'YYYY-MM-DD') + 0.99999
#end
AND BK.BKG_STS_CD <> 'X'
AND BK.BKG_CGO_TP_CD = 'F'
AND BK.BKG_NO = BR.BKG_NO
AND BK.BKG_NO = BD.BKG_NO
AND BK.BKG_NO = BV.BKG_NO
AND BK.POL_CD = BV.POL_CD
AND BV.VSL_CD = VV.VSL_CD
AND BV.SKD_VOY_NO = VV.SKD_VOY_NO
AND BV.SKD_DIR_CD = VV.SKD_DIR_CD
AND BV.POL_CD = VV.VPS_PORT_CD
AND BV.POL_YD_CD = VV.YD_CD
AND BV.POL_CLPT_IND_SEQ = VV.CLPT_IND_SEQ
AND BK.BKG_OFC_CD = OG.OFC_CD
AND BK.BKG_NO = NEW.BKG_NO
AND NEW.CA_RSN_CD = 'D'
AND NEW.BKG_NO = OLD.BKG_NO
AND NEW.CORR_DT > OLD.CORR_DT
AND OLD.CORR_DT = (SELECT MAX(CORR_DT)
                   FROM BKG_CORRECTION T
                   WHERE T.BKG_NO = OLD.BKG_NO
                   AND T.CORR_DT < NEW.CORR_DT)
AND NEW.BKG_NO = NRT.BKG_NO
AND NEW.CORR_NO = NRT.CORR_NO
AND OLD.BKG_NO = ORT.BKG_NO
AND OLD.CORR_NO = ORT.CORR_NO
AND BK.BKG_NO = DVC.BKG_NO(+)
AND DVC.CHG_CD(+) = 'DVC'
AND BK.SVC_SCP_CD = NVL(@[svc_scp_cd], BK.SVC_SCP_CD)
AND BR.BKG_CTRT_TP_CD = NVL(@[bkg_ctrt_tp_cd], BR.BKG_CTRT_TP_CD)
ORDER BY BK.BKG_NO, NEW.CORR_DT			]]></sql>
			<params>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="bkg_ctrt_tp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
