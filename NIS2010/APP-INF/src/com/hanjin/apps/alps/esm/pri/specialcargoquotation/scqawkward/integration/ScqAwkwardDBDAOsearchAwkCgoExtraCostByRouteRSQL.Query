<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ScqAwkwardDBDAOsearchAwkCgoExtraCostByRouteRSQL">
			<desc><![CDATA[PRI_SCQ_AWK_ROUT
PRI_SCQ_AWK_ROUT_COST
PRI_SCQ_AWK_YD_COST]]></desc>
			<sql><![CDATA[
SELECT SCQ_RQST_NO
     , SCQ_VER_NO
     , ROUT_SEQ
     , ROUT_TP_CD
     , ROUT_TP_SEQ
     , LANE_CD
     , IB_YD_CD
     , OB_YD_CD
     , SUM(DECODE(COST_TP_CD,'N',COST_AMT,'')) N_COST --NORMAL
     , SUM(DECODE(COST_TP_CD,'W',COST_AMT,'')) W_COST --WIRE
     , SUM(DECODE(COST_TP_CD,'G',COST_AMT,'')) G_COST --S GEAR
     , DECODE(SUM(DECODE(COST_TP_CD,'A',COST_AMT,'')),'',SUM(DECODE(COST_TP_CD,'T',COST_AMT,'')),'') T_COST --T/S PORT LOADING UNLOADING
     , SUM(DECODE(COST_TP_CD,'S',COST_AMT,'')) S_COST --SHUTTLE
     , SUM(DECODE(COST_TP_CD,'A',COST_AMT,'')) A_COST --ADD ON
     , SUM(CASE WHEN COST_TP_CD = 'N' AND COST_AMT = 0 THEN 1 ELSE 0 END ) N_COST_ZERO_EXIST
     , SUM(CASE WHEN COST_TP_CD = 'W' AND COST_AMT = 0 THEN 1 ELSE 0 END ) W_COST_ZERO_EXIST
     , SUM(CASE WHEN COST_TP_CD = 'G' AND COST_AMT = 0 THEN 1 ELSE 0 END ) G_COST_ZERO_EXIST
     , SUM(CASE WHEN COST_TP_CD = 'T' AND COST_AMT = 0 THEN 1 ELSE 0 END ) T_COST_ZERO_EXIST
     , SUM(CASE WHEN COST_TP_CD = 'S' AND COST_AMT = 0 THEN 1 ELSE 0 END ) S_COST_ZERO_EXIST
     , SUM(CASE WHEN COST_TP_CD = 'A' AND COST_AMT = 0 THEN 1 ELSE 0 END ) A_COST_ZERO_EXIST
  FROM (SELECT AWK.SCQ_RQST_NO                  
             , AWK.SCQ_VER_NO                   
             , AWK.ROUT_SEQ
             , AWK.ROUT_TP_CD
             , AWK.ROUT_TP_SEQ
             , AWK.LANE_CD
             , AWK.IB_YD_CD
             , AWK.OB_YD_CD
             , RT.ROUT_COST_SEQ COST_SEQ
             , RT.COST_AMT 
             , RT.COST_TP_CD
          FROM PRI_SCQ_AWK_ROUT AWK
             , PRI_SCQ_AWK_ROUT_SMRY RT
         WHERE AWK.SCQ_RQST_NO = @[scq_rqst_no]     
           AND AWK.SCQ_VER_NO = @[scq_ver_no] 
           AND AWK.SCQ_RQST_NO = RT.SCQ_RQST_NO(+)
           AND AWK.SCQ_VER_NO = RT.SCQ_VER_NO(+) 
           AND AWK.ROUT_SEQ = RT.ROUT_SEQ(+)
        
         UNION ALL
        
        SELECT AWK.SCQ_RQST_NO                  
             , AWK.SCQ_VER_NO                   
             , AWK.ROUT_SEQ
             , AWK.ROUT_TP_CD
             , AWK.ROUT_TP_SEQ
             , AWK.LANE_CD
             , AWK.IB_YD_CD
             , AWK.OB_YD_CD
             , YD.YD_COST_SEQ COST_SEQ  
             , YD.COST_AMT 
             , YD.COST_TP_CD
          FROM PRI_SCQ_AWK_ROUT AWK
             , PRI_SCQ_AWK_YD_SMRY YD
         WHERE AWK.SCQ_RQST_NO = @[scq_rqst_no]     
           AND AWK.SCQ_VER_NO = @[scq_ver_no] 
           AND AWK.SCQ_RQST_NO = YD.SCQ_RQST_NO(+)     
           AND AWK.SCQ_VER_NO = YD.SCQ_VER_NO(+)     
           AND AWK.ROUT_SEQ = YD.ROUT_SEQ(+)            
        )
GROUP BY SCQ_RQST_NO, SCQ_VER_NO, ROUT_SEQ, ROUT_TP_CD, ROUT_TP_SEQ, LANE_CD, IB_YD_CD,OB_YD_CD
ORDER BY SCQ_RQST_NO, SCQ_VER_NO, ROUT_SEQ, ROUT_TP_CD, ROUT_TP_SEQ, LANE_CD, IB_YD_CD,OB_YD_CD			]]></sql>
			<params>
				<param name="scq_rqst_no" type="12" value="" out="N"/>
				<param name="scq_ver_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
