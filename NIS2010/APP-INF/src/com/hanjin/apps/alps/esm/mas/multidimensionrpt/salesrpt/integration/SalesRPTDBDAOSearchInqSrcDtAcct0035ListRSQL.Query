<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SalesRPTDBDAOSearchInqSrcDtAcct0035ListRSQL">
			<desc><![CDATA[Inquiry by Source Data
2012.01.03 [CHM-201114896-01] 이석준  CM2(Own Feeder) 비용 반영
2012.01.03 [SRM-201224324]김종준 특수문자 에러 ,REPLACE(A2.SHPR_NM ,CHR(29),' ')   AS BL_SHPR_NM  처리
2012.07.18 [CHM-201219034] 이석준 [MAS] Inquiry by source data 계정 추가
2014.01.16 [CHM-201428540] 김수정 [MAS] Inquiry by Source Data 정보 추가 요청
2014.06.03 [CHM-201430312] 최덕우 [MAS] G.Customer Display 관련 일부 화면 로직 보완 수정
2015.03.20 [CHM-201534153] 김시몬 CM/OP계정 추가 및 변경에 따라 보완
2015.04.22 [CHM-201534153] 김시몬 OWNWAY SAVING 추가
2015.05.18 [CHM-201534153] 김시몬 데이터 모델에 따른 컬럼명 변경
2015.05.27 [CHM-201533978] 이윤정 COA 기능 추가 요청 CSR - RFA Type 추가
2015.05.14 [CHM-201535771] 손진환 [MAS] MAS RCV DT를 부킹 모듈 상에서 OC Status 발생 date를 바로 바라볼 수 있도록 로직 수정
2015.05.14 [CHM-201535424] 손진환 [MAS] MAS 상 Fixed Rate 반영
2015.05.21 [CHM-201536029] 손진환 [MAS] MAS 상 Fixed Rate 반영 요청 CSR
2015.07.06 [] 김시몬 CM Cost Total에서 DEMDET, MIS REV 제외
2015.07.20 [CHM-201536959] 손진환 [MAS] Inquiry by Source Data에서 Sub Trade 구분자 삽입 요청 CSR
2015.09.07 [CHM-201537826] 최덕우 ALPS MAS T.POL/T.POD 로직 수정 요청
2017.05.04 [CSR-688] 김동호 Customer Name 부분 Hex Code C2A0 Replace
2017.06.01 [CSR #1026] 김동호 CM(BKG) Total 추가
2017.08.03 [CSR #1531] 김동호 신규 장비비 계정으로 통합]]></desc>
			<sql><![CDATA[
#if(${f_excel} =='Y')
 SELECT 'R.MONTH'       AS COST_YRMON
        , 'S.MONTH'     AS SLS_YRMON
        , 'WEEK'        AS COST_WK
        , 'BKG NO'      AS BKG_NO
		, 'F_Index'  FX_RT_FLG
        , 'BL NO'       AS BL_NO
#if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO')
    	, 'TS MON'      AS TS_MON
        , 'TS WEEK'     AS TS_WK
    	, 'TS TRADE'    AS TS_TRD_CD
    	, 'TS LANE'     AS TS_RLANE_CD
        , 'T/S BND'     AS TS_BND
        , 'T/S VVD'     AS TS_VVD
    	, 'T/S TRADE DIR.'  AS TS_TRD_DIR
#end
        , 'TRADE'      AS TRD_CD
        , 'SUB TRADE'  AS SUB_TRD_CD
        , 'R.LANE'     AS RLANE_CD
        , 'IOC'        AS IOC_CD
        , 'REV VVD'    AS R_VVD
        , 'STATUS'     AS STATUS
        , 'DIR'        AS DIR_CD
    	, 'Trade Dir.' AS HUL_BND_CD
        , 'C.RHQ'      AS C_RHQ
        , 'C.AD'       AS C_AD 
        , 'C.OFC'      AS C_OFC
        , 'C.Region OFC' AS C_RGN_OFC
        , 'C.S.REP'      AS CSREP_CD
        , 'L.RHQ'        AS L_RHQ
        , 'L.AD'         AS L_AD
        , 'L.OFC'        AS L_OFC
        , 'L.Region OFC'   AS L_RGN_OFC
        , 'L.REP'      AS LREP_CD
        , 'BKG OFC'    AS BKG_OFC_CD
        , 'BKG STS'    AS BKG_STS_CD
        , 'USA MODE'   AS USA_MODE
    	, 'TRUNK POL'  AS TRNK_POL
    	, 'TRUNK POD'  AS TRNK_POD
        , 'BKG POR'    AS BKG_POR_CD
        , 'BKG POL'    AS BKG_POL_CD
        , 'BKG POD'    AS BKG_POD_CD
        , 'BKG DEL'    AS BKG_DEL_CD
        , 'RCV TERM'   AS BKG_RCV_TERM_CD
        , 'DEL TERM'   AS BKG_DE_TERM_CD
        , 'Customs Desc'  AS CSTMS_DESC
        , 'REP CMDT CD'   AS REP_CMDT_CD
        , 'REP CMDT DESC' AS REP_CMDT_NM
        , 'CMDT CD'       AS CMDT_CD
        , 'CMDT DESC'     AS CMDT_NM
        , 'IAS REGION'    AS IAS_RGN_CD
        , 'TRADE1'   AS N1ST_TRD_CD
        , 'TRADE2'   AS N2ND_TRD_CD
        , 'TRADE3'   AS N3RD_TRD_CD
        , 'TRADE4'   AS N4TH_TRD_CD
        , 'TRADE5'   AS N5TH_TRD_CD
        , 'LANE1'    AS N1ST_RLANE_CD
        , 'LANE2'    AS N2ND_RLANE_CD
        , 'LANE3'    AS N3RD_RLANE_CD
        , 'LANE4'    AS N4TH_RLANE_CD
        , 'LANE5'    AS N5TH_RLANE_CD
        , 'VVD1'     AS N1ST_FINC_VVD_CD
        , 'VVD2'     AS N2ND_FINC_VVD_CD
        , 'VVD3'     AS N3RD_FINC_VVD_CD
        , 'VVD4'     AS N4TH_FINC_VVD_CD
        , 'VVD5'     AS N5TH_FINC_VVD_CD
    	, 'T/S PORT'  AS TS_PORT
#if(${f_include_ts} =='Y')
        , 'T/S POL'   AS TS_POL
        , 'T/S POD'   AS TS_POD
#end
        , 'POL1'    AS N1ST_POL_CD
        , 'POL2'    AS N2ND_POL_CD
        , 'POL3'    AS N3RD_POL_CD
        , 'POL4'    AS N4TH_POL_CD
        , 'POL5'    AS N5TH_POL_CD
        , 'POD1'    AS N1ST_POD_CD
        , 'POD2'    AS N2ND_POD_CD
        , 'POD3'    AS N3RD_POD_CD
        , 'POD4'    AS N4TH_POD_CD
        , 'POD5'    AS N5TH_POD_CD
        , 'SC NO'   AS SC_NO
        , 'RFA NO'  AS RFA_NO
        , 'RFA TYPE'AS RFA_TP
        , 'Source'  AS MST_RFA_ROUT_ID
        , 'NVOCC'   AS NVOCC
        , 'CUST TP' AS CUST_TP
        , 'SC/RFC CUST CD'   AS SC_CUST_CD
        , 'SC/RFC CUST NM'   AS SC_CUST_NM
    	, 'G/Customer Code(Shipper)'  AS SHPR_CUST_ID
    	, 'G/Customer Name(Shipper)'  AS SHIPPER_NAME
        , 'G/Customer Type(C.Customer)'  AS AGMT_CUST_TP_CD
        , 'G/Customer Code(C.Customer)'  AS AGMT_CUST_ID
    	, 'G/Customer Name(C.Customer)'  AS AGMT_NAME
    	, 'A/Customer Code'  AS ACT_CUST_ID
    	, 'A/Customer Name'  AS ACT_CUST_NM
        , 'BKG SHPR_CD'   AS SHPR_CD
        , 'BKG SHPR_NM'   AS SHPR_NM
        , 'B/L SHPR NM'   AS BL_SHPR_NM
        , 'CNEE CD'     AS CNEE_CD
        , 'CNEE NM'     AS CNEE_NM
        , 'NOTIFY CD'   AS NTFY_CD
        , 'NOTIFY NM'   AS NTFY_NM
        , 'PRD CCT'     AS PPD_CCT
        , 'BL ON BOARD DT' AS BL_ONBOARD_DT
        , 'CGO RCV DT'     AS CGO_RCV_DT
        , 'SOC'     AS SOC
        , 'REV MT'  AS REV_MT
        , 'RF'      AS RF
        , 'DG'      AS DG
        , 'BB'      AS BB
        , 'AK'      AS AK
        , 'WEIGHT'  AS WEIGHT
        , 'UNIT'    AS UNIT
     
  #foreach($key in ${allcols}) 
        ,'FR_$key'  AS REV_$key
  #end 
  
        ,'FR_REV_TTL'   AS TOT_FR_REV_TPSZ
        ,'MISC_REV_TTL' AS TOT_MISC_REV_TPSZ
        ,'REV_TTL'      AS TOT_REV_TPSZ
  #foreach($key in ${allcols}) 
        ,'LOAD_$key' AS QTY_$key
  #end  
  
        ,'LOAD_TTL(TEU)'   AS TOT_QTY
        ,'Freight Revenue' AS FREIGTH_REV
        ,'Misc Operation Revenue' AS MISC_REV
        ,'CNTR DEM/DET'    AS DMDT_COST
    
        ,'Basic Stevedorage'      AS BASIC_STEVEDORAGE
        ,'Other CY Expense'       AS OTHER_CY_EXPENSE
        ,'T/S Stevedorage'        AS TS_STEVEDORAGE
        ,'On Dock CY Expense'     AS ON_DOCK_CY_EXPENSE
        ,'Cargo Handling Expense' AS CARGO_HANDLING_EXPENSE
        ,'Storage'                AS STORAGE
        ,'Misc Cargo Handling Expense'        AS MISC_CARGO_HANDLING_EXPENSE
        ,'Exclusive Terminal Additional Cost' AS EXCLUSIVE_TERMINAL_ADD_COST
        ,'Cargo Variable Volume Discount'     AS CARGO_VARIABLE_VOLUME_DISCOUNT
        ,'Rail Direct'   AS RAIL_DIRECT
        ,'Rail Truck'    AS RAIL_TRUCK
        ,'Truck Direct'  AS TRUCK_DIRCET
        ,'Water Direct'  AS WATER_DIRECT
        ,'Water Rail'    AS WATER_RAIL
        ,'Water Truck'   AS WATER_TRUCK
        ,'Other Transport Expense'  AS OTHER_TRANSPORT_EXPENSE
        ,'Carriers Haulage Service Charge '  AS CARRIERS_HAULAGE_SVG_CHG
    
  #if(${f_pro_vw} =='R')
        ,'Internal EQ Rental(EMU)_MT Repo Cost' AS INTERNAL_EQ_RENTAL_BASE
        ,'Internal EQ Rental(EMU)_EMU Credit'   AS INTERNAL_EQ_RENTAL_MT_SIM
  #elseif (${f_pro_vw} =='P')
        ,'Empty Terminal Expense'           AS EMPTH_TERMINAL_EXPENSE
        ,'Empty Transport Expense'          AS EMPTY_TRANSPORT_EXPENSE
  #end

        ,'US Domestic Saving Credit'        AS US_DOMESTIC_SAV_CREDIT
        ,'Ownway Saving'                    AS OWNWAY_SAV

        ,'Agent Commission'                 AS AGENT_COMMISSION
        
        --,'CNTR Short Term EQ Rental_Sea_MT' AS CNTR_SHORT_TERM_EQ_SEA
        --,'CNTR Long Term EQ Rental_Sea_MT'  AS CNTR_LONG_TERM_EQ_SEA
        --,'CNTR M&R Charge_Sea_MT'           AS CNTR_MR_CHARGE_SEA
        --,'CNTR Depreciation_Sea_MT'         AS CNTR_DEPRECIATION_SEA
        --,'CNTR Insurance_Sea_MT'            AS CNTR_INSURANCE_SEA
        
        --,'CNTR Short Term EQ Rental_Land'   AS CNTR_SHORT_TERM_EQ_LAND
        --,'CNTR Long Term EQ Rental_Land'    AS CNTR_LONG_TERM_EQ_LAND
        --,'CNTR M&R Charge_Land'             AS CNTR_MR_CHARGE_LAND
        --,'CNTR Depreciation_Land'           AS CNTR_DEPRECIATION_LAND
        --,'CNTR Insurance_Land'              AS CNTR_INSURANCE_LAND

        ,'CNTR EQ Rental'                   AS CNTR_RNTL_NORM_AMT
        ,'CNTR M&R Charge'                  AS CNTR_MNR_NORM_AMT
        ,'CNTR Depreciation'                AS CNTR_DPC_NORM_AMT
        ,'CNTR Insurance'                   AS CNTR_INSUR_NORM_AMT 
        
        ,'Chassis EQ Cost'                  AS CHASS_EQ_COST
        
  #if(${f_pro_vw} =='P')
        ,'CM Cost Total'      AS CM_COST_TOTAL
        ,'CM Total'           AS CM
        --,'CM(BKG) Total'      AS CM_BKG
  #elseif (${f_pro_vw} =='R')
        ,'BKG CM Cost Total'  AS CM_COST_TOTAL
        ,'BKG CM Total'       AS CM
        --,'CM(BKG) Total'      AS CM_BKG
  #end
  
  #if(${f_pro_lvl} =='O')
        ,'Port EXP'                  AS PORT_EXP
        ,'Canal Transit Fee'         AS CANAL_TRANSIT_FEE
        ,'Bunker'                    AS BUNKER
        ,'Crew EXP'                  AS CREW_EXP
        ,'Insurance'                 AS INSURANCE
        ,'Lubricant EXP'             AS LUBRICANT_EXP
        ,'Store Supply EXP'          AS STORE_SUPPLY_EXP
        ,'Vessel M&R'                AS VESSEL_MR
        ,'Depreciations'             AS DEPRECIATIONS
        ,'Telecom EXP'               AS TELECOM_EXP
        ,'Other Operation Fixed Exp' AS OTHER_OPERATION_FIXED_EXP
        ,'Time Charterage'           AS TIME_CHARTERAGE
        ,'Space Charterage'          AS SPACE_CHARTERAGE
        ,'General Expense'           AS GENERAL_EXPENSE
        ,'Vessel Interest'           AS VESSEL_INTEREST	
        
        ,'OP Cost Total' AS OP_COST
        ,'OP Total'      AS OP
  #end				
  FROM  DUAL 
  
  UNION ALL 
#end
				
SELECT  
       COST_YRMON  
      ,SLS_YRMON  
      ,COST_WK  
      ,BKG_NO
	  ,FX_RT_FLG
      ,BL_NO 
#if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO')
      ,TS_YRMON
      ,TS_WK
      ,TS_TRD_CD
      ,TS_RLANE_CD 
      ,TS_BND
      ,TS_VVD
      ,TS_TRD_DIR
#end
      ,TRD_CD  
      ,SUB_TRD_CD
      ,RLANE_CD  
      ,IOC_CD  
      ,R_VVD
#if(${f_include_ts} =='Y' && ${f_rlane_cd} == 'RBCCO' )
      ,CASE WHEN @[f_trd_cd]||@[f_rlane_cd] = TRD_CD||RLANE_CD AND MON_VVD = TRD_CD||RLANE_CD||R_VVD
    	   THEN 'L/C'
           ELSE 'T/S'
           END STATUS
#else
      ,CASE WHEN MON_VVD = TRD_CD||RLANE_CD||R_VVD
           THEN 'L/C'
           ELSE 'T/S'
           END STATUS
#end
      ,DIR_CD
      ,HUL_BND_CD
      ,C_RHQ 
      ,C_AD 
      ,C_OFC 
      ,C_RGN_OFC
      ,CSREP_CD 
      ,L_RHQ 
      ,L_AD 
      ,L_OFC 
      ,L_RGN_OFC
      ,LREP_CD  
      ,BKG_OFC_CD  
      ,BKG_STS_CD  
      ,USA_MODE
      ,TRNK_POL_CD
      ,TRNK_POD_CD 
      ,BKG_POR_CD  
      ,BKG_POL_CD  
      ,BKG_POD_CD  
      ,BKG_DEL_CD  
      ,BKG_RCV_TERM_CD  
      ,BKG_DE_TERM_CD  
      ,CSTMS_DESC
      ,REP_CMDT_CD  
      ,REP_CMDT_NM     
      ,CMDT_CD 
      ,CMDT_NM    
      ,MAS_GET_CD_NM_FNC('CD03218', IAS_RGN_CD) IAS_RGN_CD
  
      , SUBSTR(VVD_INFO,1,3) N1ST_TRD_CD
      , SUBSTR(VVD_INFO,29,3) N2ND_TRD_CD
      , SUBSTR(VVD_INFO,57,3) N3RD_TRD_CD
      , SUBSTR(VVD_INFO,85,3) N4TH_TRD_CD
      , SUBSTR(VVD_INFO,113,3) N5TH_TRD_CD
      , SUBSTR(VVD_INFO,5,5) N1ST_RLANE_CD
      , SUBSTR(VVD_INFO,33,5) N2ND_RLANE_CD
      , SUBSTR(VVD_INFO,61,5) N3RD_RLANE_CD
      , SUBSTR(VVD_INFO,89,5) N4TH_RLANE_CD
      , SUBSTR(VVD_INFO,117,5) N5TH_RLANE_CD
      , DECODE(SUBSTR(VVD_INFO,10,9),'XXXXXXXXX','',SUBSTR(VVD_INFO,10,9)) N1ST_FINC_VVD_CD
      , DECODE(SUBSTR(VVD_INFO,38,9),'XXXXXXXXX','',SUBSTR(VVD_INFO,38,9)) N2ND_FINC_VVD_CD
      , DECODE(SUBSTR(VVD_INFO,66,9),'XXXXXXXXX','',SUBSTR(VVD_INFO,66,9)) N3RD_FINC_VVD_CD
      , DECODE(SUBSTR(VVD_INFO,94,9),'XXXXXXXXX','',SUBSTR(VVD_INFO,94,9)) N4TH_FINC_VVD_CD
      , DECODE(SUBSTR(VVD_INFO,122,9),'XXXXXXXXX','',SUBSTR(VVD_INFO,122,9)) N5TH_FINC_VVD_CD
#if(${f_include_ts} == 'Y')
      , CASE WHEN SUBSTR(VVD_INFO,33,5) IS NULL THEN ''
    	ELSE DECODE(@[f_rlane_cd], SUBSTR(VVD_INFO,5,5), SUBSTR(VVD_INFO,24,5), SUBSTR(VVD_INFO,33,5), SUBSTR(VVD_INFO,47,5), SUBSTR(VVD_INFO,61,5), SUBSTR(VVD_INFO,75,5), SUBSTR(VVD_INFO,89,5), SUBSTR(VVD_INFO,103,5), SUBSTR(VVD_INFO,117,5),SUBSTR(VVD_INFO,131,5))
    	END TS_PORT
      , DECODE(@[f_rlane_cd], SUBSTR(VVD_INFO,5,5), SUBSTR(VVD_INFO,19,5), SUBSTR(VVD_INFO,33,5), SUBSTR(VVD_INFO,47,5), 
                              SUBSTR(VVD_INFO,61,5), SUBSTR(VVD_INFO,75,5), SUBSTR(VVD_INFO,89,5), SUBSTR(VVD_INFO,103,5), 
                              SUBSTR(VVD_INFO,117,5),SUBSTR(VVD_INFO,131,5)) TS_POL
      , DECODE(@[f_rlane_cd], SUBSTR(VVD_INFO,5,5), SUBSTR(VVD_INFO,24,5), SUBSTR(VVD_INFO,33,5), SUBSTR(VVD_INFO,52,5), 
                              SUBSTR(VVD_INFO,61,5), SUBSTR(VVD_INFO,80,5), SUBSTR(VVD_INFO,89,5), SUBSTR(VVD_INFO,108,5), 
                              SUBSTR(VVD_INFO,117,5),SUBSTR(VVD_INFO,136,5)) TS_POD
#else
    , '' TS_PORT
#end
      , SUBSTR(VVD_INFO,19,5) N1ST_POL_CD
      , SUBSTR(VVD_INFO,47,5) N2ND_POL_CD
      , SUBSTR(VVD_INFO,75,5) N3RD_POL_CD
      , SUBSTR(VVD_INFO,103,5) N4TH_POL_CD
      , SUBSTR(VVD_INFO,131,5) N5TH_POL_CD
      , SUBSTR(VVD_INFO,24,5) N1ST_POD_CD
      , SUBSTR(VVD_INFO,52,5) N2ND_POD_CD
      , SUBSTR(VVD_INFO,80,5) N3RD_POD_CD
      , SUBSTR(VVD_INFO,108,5) N4TH_POD_CD
      , SUBSTR(VVD_INFO,136,5) N5TH_POD_CD	
    
      ,SC_NO  
      ,RFA_NO  
      ,RFA_TP
      ,MST_RFA_ROUT_ID
      ,NVOCC
      ,CUST_TP  
      ,SC_CUST_CD  
      ,REPLACE(SC_CUST_NM, CHR(49824), CHR(32)) AS SC_CUST_NM
      
      ,SHPR_CUST_ID -- SHIPPER
      ,REPLACE(SHIPPER_NAME, CHR(49824), CHR(32)) AS SHIPPER_NAME -- SHIPPER
      ,AGMT_CUST_TP_CD
      ,AGMT_CUST_ID -- CONTRACT CUSTOMER
      ,REPLACE(AGMT_NAME, CHR(49824), CHR(32)) AS AGMT_NAME   -- CONTRACT CUSTOMER
      ,ACT_CUST_ID
      ,REPLACE(ACT_CUST_NM, CHR(49824), CHR(32)) AS ACT_CUST_NM
      ,SHPR_CD   
      ,REPLACE(SHPR_NM, CHR(49824), CHR(32)) AS SHPR_NM   
      ,REPLACE(BL_SHPR_NM, CHR(49824), CHR(32)) AS BL_SHPR_NM
      ,CNEE_CD  
      ,REPLACE(CNEE_NM, CHR(49824), CHR(32)) AS CNEE_NM
      ,NTFY_CD 
      ,REPLACE(NTFY_NM, CHR(49824), CHR(32)) AS CNEE_NM
      ,PPD_CCT 
      ,BL_ONBOARD_DT  
      ,CGO_RCV_DT  
      ,SOC 
      ,REV_MT 
      ,RF
      ,DG 
      ,BB  
      ,AK 
      ,WEIGHT 
      ,UNIT 
				
  #foreach($key in ${allcols}) 
      ,REV_$key
  #end
  
      ,TOT_FR_REV_TPSZ 
      ,TOT_MISC_REV_TPSZ 
      ,TOT_REV_TPSZ 
    		
  #foreach($key in ${allcols}) 
      ,QTY_$key
  #end
  
      ,TOT_QTY 
      ,FREIGTH_REV 
      ,MISC_REV 
      ,DMDT_COST 
      
      ,BASIC_STEVEDORAGE 
      ,OTHER_CY_EXPENSE 
      ,TS_STEVEDORAGE 
      ,ON_DOCK_CY_EXPENSE 
      ,CARGO_HANDLING_EXPENSE 
      ,STORAGE 
      ,MISC_CARGO_HANDLING_EXPENSE 
      ,EXCLUSIVE_TERMINAL_ADD_COST 
      ,CARGO_VARIABLE_VOLUME_DISCOUNT 
      ,RAIL_DIRECT 
      ,RAIL_TRUCK 
      ,TRUCK_DIRCET 
      ,WATER_DIRECT 
      ,WATER_RAIL 
      ,WATER_TRUCK 
      ,OTHER_TRANSPORT_EXPENSE 
      ,CARRIERS_HAULAGE_SVG_CHG
		
  #if(${f_pro_vw} =='R')
      ,INTERNAL_EQ_RENTAL_BASE 
      ,INTERNAL_EQ_RENTAL_MT_SIM 
  #elseif (${f_pro_vw} =='P')
      ,EMPTH_TERMINAL_EXPENSE 
      ,EMPTY_TRANSPORT_EXPENSE 
  #end

      ,US_DOMESTIC_SAV_CREDIT   
      ,OWNWAY_SAV 

      ,AGENT_COMMISSION
      
      --,CNTR_STRM_EQ_SEA_MT	
      --,CNTR_LTRM_EQ_SEA_MT
      --,CNTR_MNR_CHG_SEA_MT
      --,CNTR_DPC_SEA_MT
      --,CNTR_INSUR_SEA_MT
      
      --,CNTR_STRM_EQ_RLND
      --,CNTR_LTRM_EQ_RLND
      --,CNTR_MNR_CHG_LND
      --,CNTR_DPC_LND
      --,CNTR_INSUR_LND

      ,CNTR_RNTL_NORM_AMT
      ,CNTR_MNR_NORM_AMT
      ,CNTR_DPC_NORM_AMT
      ,CNTR_INSUR_NORM_AMT 	  
      ,CHSS_EQ_COST
    
      ,CM_COST_TOTAL 
      ,CM 
      --,CM_BKG
  
	    
  #if(${f_pro_lvl} =='O')
      -- OP계정
      ,PORT_EXPN_AMT
      ,CNL_TZ_AMT
      ,BNK_AMT
      ,CRW_AMT
      ,INSUR_AMT
      ,STO_SPL_EXPN_AMT
      ,LBRC_EXPN_AMT
      ,VSL_MNR_AMT
      ,DPC_AMT
      ,TELCM_AMT
      ,OTR_OP_FX_AMT
      ,TC_AMT
      ,SPC_CHTR_AMT
      ,GEN_EXPN_AMT
      ,VSL_INT_AMT  
    
      ,OP_COST_TOTAL  
      ,OP_TOTAL 
  #end	
	    
	    
	    
  FROM (	
        SELECT  
               A2.COST_YRMON  
              ,A2.SLS_YRMON  
              ,A2.COST_WK  
              ,A2.BKG_NO              AS BKG_NO  
			  ,NVL(MRB.FX_RT_FLG, 'N' ) AS FX_RT_FLG
              ,DECODE(SUBSTR(A2.BL_NO, 1, 4), 'KOSA', 'K' || A2.BKG_NO, A2.BL_NO || A2.BL_NO_TP || A2.BL_NO_CHK) AS BL_NO  
#if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO')
              ,V.COST_YRMON AS TS_YRMON
              ,V.COST_WK AS TS_WK
              ,V.TRD_CD AS TS_TRD_CD
              ,V.RLANE_CD AS TS_RLANE_CD
              ,V.DIR_CD AS TS_BND
              ,V.VSL_CD||V.SKD_VOY_NO||V.DIR_CD AS TS_VVD
              ,MAS_GET_CD_NM_FNC('CD03217',(SELECT HUL_BND_CD FROM MAS_LANE_RGST
            	WHERE RLANE_CD = V.RLANE_CD
            		AND TRD_CD = V.TRD_CD
            		AND DIR_CD = V.DIR_CD
            		AND IOC_CD = V.IOC_CD
               )) AS TS_TRD_DIR 

#else
              ,'' TS_WK
#end
              ,A2.TRD_CD  
              ,A2.SUB_TRD_CD
              ,A2.RLANE_CD  
              ,A2.IOC_CD  
              ,A2.VSL_CD || A2.SKD_VOY_NO || A2.DIR_CD  AS R_VVD  
              ,A2.DIR_CD
              ,MAS_GET_CD_NM_FNC('CD03217', R.HUL_BND_CD) AS HUL_BND_CD  
              ,A2.CTRT_HQ_OFC_CD                        AS C_RHQ 
              ,A2.CTRT_RGN_OFC_CD                       AS C_AD 
              ,A2.CTRT_OFC_CD                           AS C_OFC 
              ,(SELECT OFC_N5TH_LVL_CD FROM MAS_OFC_LVL
            	WHERE OFC_CD = A2.CTRT_OFC_CD
            		AND A2.COST_YRMON BETWEEN OFC_APLY_FM_YRMON AND OFC_APLY_TO_YRMON
            	) AS C_RGN_OFC 
              ,A2.CTRT_SREP_CD                          AS CSREP_CD 
              ,A2.RHQ_CD                                AS L_RHQ 
              ,A2.RGN_OFC_CD                            AS L_AD 
              ,A2.SLS_OFC_CD                            AS L_OFC 
              ,(SELECT OFC_N5TH_LVL_CD FROM MAS_OFC_LVL
            	WHERE OFC_CD = A2.SLS_OFC_CD
            		AND A2.COST_YRMON BETWEEN OFC_APLY_FM_YRMON AND OFC_APLY_TO_YRMON
            	) AS L_RGN_OFC 
              ,A2.SREP_CD                               AS LREP_CD  
              ,A2.BKG_OFC_CD  
              ,A2.BKG_STS_CD  
              ,A2.USA_BKG_MOD_CD                        AS USA_MODE
              ,A2.REV_POL_CD AS TRNK_POL_CD
              ,A2.REV_POD_CD AS TRNK_POD_CD 
              ,A2.BKG_POR_CD  
              ,A2.BKG_POL_CD  
              ,A2.BKG_POD_CD  
              ,A2.BKG_DEL_CD  
              ,A2.BKG_RCV_TERM_CD  
              ,A2.BKG_DE_TERM_CD              
              , ( SELECT CSTMS_DESC
                    FROM BKG_BL_DOC
                   WHERE BKG_NO = A2.BKG_NO) CSTMS_DESC    
              ,A2.REP_CMDT_CD  
              ,A5.REP_CMDT_NM     
              ,A2.CMDT_CD 
              ,A3.CMDT_NM  
              ,R.IAS_RGN_CD 
              ,A2.N1ST_TRD_CD  
              ,A2.N2ND_TRD_CD  
              ,A2.N3RD_TRD_CD  
              ,A2.N4TH_TRD_CD  
              ,A2.N1ST_RLANE_CD 
              ,A2.N2ND_RLANE_CD 
              ,A2.N3RD_RLANE_CD 
              ,A2.N4TH_RLANE_CD  
              ,A2.N1ST_FINC_VVD_CD 
              ,A2.N2ND_FINC_VVD_CD 
              ,A2.N3RD_FINC_VVD_CD 
              ,A2.N4TH_FINC_VVD_CD  
              ,A2.N1ST_POL_CD 
              ,A2.N2ND_POL_CD 
              ,A2.N3RD_POL_CD 
              ,A2.N4TH_POL_CD  
              ,A2.N1ST_POD_CD 
              ,A2.N2ND_POD_CD 
              ,A2.N3RD_POD_CD 
              ,A2.N4TH_POD_CD  
              ,A2.SC_NO  
              ,A2.RFA_NO  
              ,(
              	SELECT (SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03493' AND INTG_CD_VAL_CTNT = MN.RFA_CTRT_TP_CD) AS RFA_CTRT_TP_CD
              	FROM PRI_RP_MN MN
              		,PRI_RP_HDR HDR
              	WHERE HDR.PROP_NO 	 	= MN.PROP_NO
              	AND MN.AMDT_SEQ = ( SELECT /*+ INDEX_DESC(A XPKPRI_RP_MN)*/ AMDT_SEQ FROM PRI_RP_MN A WHERE MN.PROP_NO = PROP_NO AND ROWNUM = 1)
              	AND HDR.RFA_NO = A2.RFA_NO
              	AND ROWNUM = 1
               )RFA_TP
              ,(SELECT MST_RFA_ROUT_ID FROM BKG_RATE WHERE BKG_NO = A2.BKG_NO) AS MST_RFA_ROUT_ID
              ,A2.CUST_TP_CD                                           AS NVOCC 
              ,A2.AGMT_CUST_TP_CD                                      AS CUST_TP  
              ,A2.AGMT_CNT_CD || TO_CHAR(LPAD(DECODE(A2.AGMT_CUST_SEQ,0,'',A2.AGMT_CUST_SEQ),6,'0'))  AS SC_CUST_CD  
              ,(   
                SELECT CUST_LGL_ENG_NM   
                  FROM MDM_CUSTOMER B1   
                 WHERE A2.AGMT_CNT_CD   = B1.CUST_CNT_CD(+)   
                   AND A2.AGMT_CUST_SEQ = B1.CUST_SEQ(+)   
              ) AS SC_CUST_NM
  --,A2.CUST_GRP_ID
  --,A2.CUST_GRP_NM 
             ,(SELECT NVL(B1.CUST_GRP_ID, A2.SHPR_CNT_CD||A2.SHPR_CUST_SEQ) FROM MDM_CUSTOMER B1		-- SHIPPER
            		WHERE 1=1
            			AND A2.SHPR_CUST_SEQ = B1.CUST_SEQ(+)
            			AND A2.SHPR_CNT_CD = B1.CUST_CNT_CD(+)
            	) AS SHPR_CUST_ID
              ,(SELECT NVL(B2.CUST_GRP_NM, B1.CUST_LGL_ENG_NM) FROM MDM_CUSTOMER B1, MDM_CUST_PERF_GRP B2		-- SHIPPER
            		WHERE 1=1
            			AND A2.SHPR_CUST_SEQ = B1.CUST_SEQ(+)
            			AND A2.SHPR_CNT_CD = B1.CUST_CNT_CD(+)
            			AND B1.CUST_GRP_ID = B2.CUST_GRP_ID(+)
            	) AS SHIPPER_NAME
              ,A2.AGMT_PRC_CTRT_CUST_TP_CD AS AGMT_CUST_TP_CD
              ,(SELECT NVL(B1.CUST_GRP_ID, A2.AGMT_CNT_CD||A2.AGMT_CUST_SEQ) FROM MDM_CUSTOMER B1		-- CONTRACT CUSTOMER
            		WHERE 1=1
            			AND A2.AGMT_CUST_SEQ = B1.CUST_SEQ(+)
            			AND A2.AGMT_CNT_CD = B1.CUST_CNT_CD(+)
            	) AS AGMT_CUST_ID
              ,(SELECT NVL(B2.CUST_GRP_NM, B1.CUST_LGL_ENG_NM) FROM MDM_CUSTOMER B1, MDM_CUST_PERF_GRP B2			-- CONTRACT CUSTOMER
            		WHERE 1=1
            			AND A2.AGMT_CUST_SEQ = B1.CUST_SEQ(+)
            			AND A2.AGMT_CNT_CD = B1.CUST_CNT_CD(+)
            			AND B1.CUST_GRP_ID = B2.CUST_GRP_ID(+)
            	) AS AGMT_NAME
              ,A2.AGMT_ACT_CNT_CD || TO_CHAR(LPAD(DECODE(A2.AGMT_ACT_CUST_SEQ,0,'',A2.AGMT_ACT_CUST_SEQ),6,'0')) AS ACT_CUST_ID
              ,A2.ACT_CUST_NM AS ACT_CUST_NM 
              ,A2.SHPR_CNT_CD || TO_CHAR(LPAD(DECODE(A2.SHPR_CUST_SEQ,0,'',A2.SHPR_CUST_SEQ),6,'0'))      AS SHPR_CD   
              ,(   
                SELECT CUST_LGL_ENG_NM   
                  FROM MDM_CUSTOMER B1   
                 WHERE A2.SHPR_CNT_CD   = B1.CUST_CNT_CD(+)   
                   AND A2.SHPR_CUST_SEQ = B1.CUST_SEQ(+)   
              ) AS SHPR_NM   
              ,TRANSLATE(A2.SHPR_NM, CHR(29)||CHR(31)||CHR(30),' ')     AS BL_SHPR_NM  /* CHR(29)만 공백 나머지는 삭제 */
              ,A2.CNEE_CNT_CD || TO_CHAR(LPAD(DECODE(A2.CNEE_CUST_SEQ,0,'',A2.CNEE_CUST_SEQ),6,'0')) AS CNEE_CD  
              ,(   
                SELECT CUST_LGL_ENG_NM   
                  FROM MDM_CUSTOMER B1   
                 WHERE A2.CNEE_CNT_CD   = B1.CUST_CNT_CD(+)   
                   AND A2.CNEE_CUST_SEQ = B1.CUST_SEQ(+)   
              ) AS CNEE_NM  /*CNEE   */
              ,A2.NTFY_CNT_CD || TO_CHAR(LPAD(DECODE(A2.NTFY_CUST_SEQ,0,'',A2.NTFY_CUST_SEQ),6,'0')) AS NTFY_CD 
              ,(   
                SELECT CUST_LGL_ENG_NM   
                  FROM MDM_CUSTOMER B1   
                 WHERE A2.NTFY_CNT_CD   = B1.CUST_CNT_CD(+)   
                   AND A2.NTFY_CUST_SEQ = B1.CUST_SEQ(+)   
              ) AS NTFY_NM   /*NTFY*/   
              ,A2.OFT_TP_CD                                            AS PPD_CCT 
              ,TO_CHAR(A2.OBRD_DT,'YYYY-MM-DD')                        AS BL_ONBOARD_DT  
              ,TO_CHAR(MAX(C.CGO_RCV_DT),'YYYY-MM-DD')                    AS CGO_RCV_DT  
              ,A2.SOC_FLG                                              AS SOC 
              ,DECODE(A2.BKG_CGO_TP_CD, 'R', 'Y', 'N')                 AS REV_MT 
              ,NVL(A2.SPCL_RC_FLG, 'N')                                AS RF
              ,NVL(A2.SPCL_DG_CGO_FLG, 'N')                            AS DG 
              ,NVL(A2.SPCL_BB_CGO_FLG, 'N')                            AS BB  
              ,NVL(A2.SPCL_AWK_CGO_FLG, 'N')                           AS AK 
              ,TO_CHAR(A2.BKG_CGO_WGT)                                 AS WEIGHT 
              ,A2.BKG_WGT_TP_CD                                        AS UNIT 
				
  #foreach($key in ${allcols}) 
              ,TO_CHAR(SUM(DECODE(A2.SPCL_CNTR_TPSZ_CD, '$key',  A2.BKG_REV+A2.BKG_OFT_REV)))      AS REV_$key
  #end
  
              ,TO_CHAR(SUM(A2.BKG_REV+A2.BKG_OFT_REV))                                   AS TOT_FR_REV_TPSZ 
              ,TO_CHAR(SUM(A2.BKG_MISC_REV+A2.SCR_CHG_REV))                              AS TOT_MISC_REV_TPSZ 
              ,TO_CHAR(SUM(A2.BKG_REV+A2.BKG_OFT_REV+A2.BKG_MISC_REV+A2.SCR_CHG_REV))    AS TOT_REV_TPSZ 
		
  #foreach($key in ${allcols}) 
              ,TO_CHAR(SUM(DECODE(A2.SPCL_CNTR_TPSZ_CD, '$key',  A2.BKG_QTY)))                     AS QTY_$key
  #end
  
              ,TO_CHAR(SUM(DECODE(SUBSTR(A2.SPCL_CNTR_TPSZ_CD,-1),'2',A2.BKG_QTY, '3',A2.BKG_QTY, A2.BKG_QTY*2))) AS TOT_QTY 
              ,TO_CHAR(SUM(A2.BKG_REV+A2.BKG_OFT_REV))                                   AS FREIGTH_REV 
              ,TO_CHAR(SUM(A2.BKG_MISC_REV+A2.SCR_CHG_REV))                              AS MISC_REV 
            		
              ,TO_CHAR(SUM(A2.DMDT_COM_AMT))                                             AS DMDT_COST 
              ,TO_CHAR(SUM(A2.BZC_STVG_COM_AMT))            AS BASIC_STEVEDORAGE 
              ,TO_CHAR(SUM(A2.OTR_CY_HNDL_COM_AMT))         AS OTHER_CY_EXPENSE 
              ,TO_CHAR(SUM(A2.TS_STVG_COM_AMT))             AS TS_STEVEDORAGE 
              ,TO_CHAR(SUM(A2.DCK_CY_HNDL_COM_AMT))         AS ON_DOCK_CY_EXPENSE 
              ,TO_CHAR(SUM(A2.CGO_HNDL_COM_AMT))            AS CARGO_HANDLING_EXPENSE 
              ,TO_CHAR(SUM(A2.FCNTR_STO_COM_AMT))           AS STORAGE 
              ,TO_CHAR(SUM(A2.MISC_CGO_HNDL_COM_AMT))       AS MISC_CARGO_HANDLING_EXPENSE 
              ,TO_CHAR(SUM(A2.TML_COM_AMT))                 AS EXCLUSIVE_TERMINAL_ADD_COST 
              ,TO_CHAR(SUM(A2.CGO_VAR_VOL_DC_AMT))          AS CARGO_VARIABLE_VOLUME_DISCOUNT 
              ,TO_CHAR(SUM(A2.FULL_RAIL_DIR_COM_AMT))       AS RAIL_DIRECT 
              ,TO_CHAR(SUM(A2.FULL_RAIL_TRK_COM_AMT))       AS RAIL_TRUCK 
              ,TO_CHAR(SUM(A2.FULL_TRK_DIR_COM_AMT))        AS TRUCK_DIRCET 
              ,TO_CHAR(SUM(A2.FULL_WTR_DIR_COM_AMT))        AS WATER_DIRECT 
              ,TO_CHAR(SUM(A2.FULL_WTR_RAIL_COM_AMT))       AS WATER_RAIL 
              ,TO_CHAR(SUM(A2.FULL_WTR_TRK_COM_AMT))        AS WATER_TRUCK 
              ,TO_CHAR(SUM(A2.FULL_TRSP_COM_AMT))           AS OTHER_TRANSPORT_EXPENSE 
              ,TO_CHAR(SUM(A2.CRR_HLG_SVC_CHG_AMT))         AS CARRIERS_HAULAGE_SVG_CHG
            		
  #if(${f_pro_vw} =='R')
              ,TO_CHAR(SUM(A2.INTER_EQ_RNTL_BSE_AMT))       AS INTERNAL_EQ_RENTAL_BASE 
              ,TO_CHAR(SUM(A2.MTY_SIM_AMT))                 AS INTERNAL_EQ_RENTAL_MT_SIM 
  #elseif (${f_pro_vw} =='P')
              ,TO_CHAR(SUM(A2.MTY_STVG_PA_AMT))             AS EMPTH_TERMINAL_EXPENSE 
              ,TO_CHAR(SUM(A2.MTY_TRSP_PA_AMT))             AS EMPTY_TRANSPORT_EXPENSE 
  #end
		
              ,TO_CHAR(SUM(A2.AC_COM_AMT))                  AS AGENT_COMMISSION    
              
              --,TO_CHAR(SUM(A2.CNTR_LTERM_RNTL_LAND_AMT))    AS CNTR_LTRM_EQ_RLND
              --,TO_CHAR(SUM(A2.CNTR_STERM_RNTL_LAND_AMT))    AS CNTR_STRM_EQ_RLND
              --,TO_CHAR(SUM(A2.CNTR_MNR_LAND_AMT))           AS CNTR_MNR_CHG_LND
              --,TO_CHAR(SUM(A2.CNTR_DPC_LAND_AMT))           AS CNTR_DPC_LND
              --,TO_CHAR(SUM(A2.CNTR_INSUR_LAND_AMT))         AS CNTR_INSUR_LND
                
              --,TO_CHAR(SUM(A2.CNTR_LTERM_RNTL_OTR_AMT))     AS CNTR_LTRM_EQ_SEA_MT
              --,TO_CHAR(SUM(A2.CNTR_STERM_RNTL_OTR_AMT))     AS CNTR_STRM_EQ_SEA_MT
              --,TO_CHAR(SUM(A2.CNTR_MNR_OTR_AMT))            AS CNTR_MNR_CHG_SEA_MT
              --,TO_CHAR(SUM(A2.CNTR_DPC_OTR_AMT))            AS CNTR_DPC_SEA_MT
              --,TO_CHAR(SUM(A2.CNTR_INSUR_OTR_AMT))          AS CNTR_INSUR_SEA_MT

              
              ,TO_CHAR(SUM(A2.CNTR_LTERM_RNTL_LAND_AMT 
                            + A2.CNTR_STERM_RNTL_LAND_AMT 
                            + A2.CNTR_LTERM_RNTL_OTR_AMT 
                            + A2.CNTR_STERM_RNTL_OTR_AMT
                            + A2.CNTR_RNTL_NORM_AMT))       AS CNTR_RNTL_NORM_AMT
              ,TO_CHAR(SUM(A2.CNTR_MNR_LAND_AMT 
                            + A2.CNTR_MNR_OTR_AMT 
                            + A2.CNTR_MNR_NORM_AMT))        AS CNTR_MNR_NORM_AMT
              ,TO_CHAR(SUM(A2.CNTR_DPC_NORM_AMT
                            + A2.CNTR_DPC_LAND_AMT
                            + A2.CNTR_DPC_OTR_AMT))         AS CNTR_DPC_NORM_AMT
              ,TO_CHAR(SUM(A2.CNTR_INSUR_NORM_AMT
                            + A2.CNTR_INSUR_LAND_AMT
                            + A2.CNTR_INSUR_OTR_AMT))       AS CNTR_INSUR_NORM_AMT
              


              ,TO_CHAR(SUM(A2.CHSS_AMT))                    AS CHSS_EQ_COST
              
              ,TO_CHAR(SUM(A2.USA_DMST_SAV_CR_AMT))         AS US_DOMESTIC_SAV_CREDIT   
              ,TO_CHAR(SUM(A2.ONE_WY_SAV_PFIT_ANAL_AMT))    AS OWNWAY_SAV 
        
              ,TO_CHAR(SUM(DECODE(@[f_pro_vw],'P',A2.PA_CM_COST_TTL_AMT,'R',A2.RA_CM_COST_TTL_AMT)))   AS CM_COST_TOTAL 
              ,TO_CHAR(SUM(A2.BKG_REV+A2.BKG_OFT_REV+A2.BKG_MISC_REV+A2.SCR_CHG_REV+A2.DMDT_COM_AMT)  --DEMDET 추가 20150706
                - SUM(DECODE(@[f_pro_vw],'P',A2.PA_CM_COST_TTL_AMT,'R',A2.RA_CM_COST_TTL_AMT)))        AS CM 


	      ,TO_CHAR(SUM(A2.BKG_REV+A2.BKG_OFT_REV+A2.BKG_MISC_REV+A2.SCR_CHG_REV) -- CM(BKG)는 CM 계산에서 수입 DEM/DET, 비용 장비비 제외
                - SUM(DECODE(@[f_pro_vw],'P',A2.PA_CM_COST_TTL_AMT,'R',A2.RA_CM_COST_TTL_AMT)) 
                + SUM(NVL(A2.CNTR_STERM_RNTL_LAND_AMT, 0) + NVL(A2.CNTR_LTERM_RNTL_LAND_AMT, 0) + NVL(A2.CNTR_MNR_LAND_AMT, 0) 
                        + NVL(A2.CNTR_DPC_LAND_AMT, 0) + NVL(A2.CNTR_INSUR_LAND_AMT, 0) + NVL(A2.CNTR_STERM_RNTL_OTR_AMT, 0) 
                        + NVL(A2.CNTR_LTERM_RNTL_OTR_AMT, 0) + NVL(A2.CNTR_MNR_OTR_AMT, 0) + NVL(A2.CNTR_DPC_OTR_AMT, 0) 
                        + NVL(A2.CNTR_INSUR_OTR_AMT, 0) + NVL(A2.CHSS_AMT, 0) 
			+ NVL(A2.CNTR_RNTL_NORM_AMT, 0)
			+ NVL(A2.CNTR_MNR_NORM_AMT, 0)
			+ NVL(A2.CNTR_DPC_NORM_AMT, 0)
			+ NVL(A2.CNTR_INSUR_NORM_AMT, 0) ))        AS CM_BKG 
 
 
  #if(${f_pro_lvl} =='O' )

-- OP계정
              ,TO_CHAR(NVL(SUM(A6.PE_AMT),0))                                            AS PORT_EXPN_AMT
              ,TO_CHAR(NVL(SUM(A6.CNL_TZ_AMT),0))                                        AS CNL_TZ_AMT
              ,TO_CHAR(NVL(SUM(A6.BNK_AMT),0))                                           AS BNK_AMT
              ,TO_CHAR(NVL(SUM(A6.CRW_EXPN_AMT),0))                                      AS CRW_AMT
              ,TO_CHAR(NVL(SUM(A6.INSUR_AMT),0))                                         AS INSUR_AMT
              ,TO_CHAR(NVL(SUM(A6.STO_SPL_EXPN_AMT),0))                                  AS STO_SPL_EXPN_AMT
              ,TO_CHAR(NVL(SUM(A6.LBRC_EXPN_AMT),0))                                     AS LBRC_EXPN_AMT
              ,TO_CHAR(NVL(SUM(A6.VSL_MNR_AMT),0))                                       AS VSL_MNR_AMT
              ,TO_CHAR(NVL(SUM(A6.DPC_AMT),0))                                           AS DPC_AMT
              ,TO_CHAR(NVL(SUM(A6.TELCM_EXPN_AMT),0))                                    AS TELCM_AMT
              ,TO_CHAR(NVL(SUM(A6.OTR_OP_FX_AMT),0))                                     AS OTR_OP_FX_AMT
              ,TO_CHAR(NVL(SUM(A6.TC_AMT),0))                                            AS TC_AMT
              ,TO_CHAR(NVL(SUM(A6.SPC_CHRG_AMT),0))                                      AS SPC_CHTR_AMT
              ,TO_CHAR(NVL(SUM(A6.GEN_EXPN_AMT),0))                                      AS GEN_EXPN_AMT
              ,TO_CHAR(NVL(SUM(A6.VSL_INT_AMT),0))                                       AS VSL_INT_AMT 
                    
              ,TO_CHAR( NVL(SUM(A6.PA_OP_COST_TTL_AMT), 0))               AS OP_COST_TOTAL  -- 컬럼 추가되면 변경 20150323
                    
              ,TO_CHAR(SUM(A2.BKG_REV+A2.BKG_OFT_REV+A2.BKG_MISC_REV+A2.SCR_CHG_REV+A2.DMDT_COM_AMT) - NVL(SUM(A2.RA_CM_COST_TTL_AMT),0)  
                 - NVL(SUM(A6.PA_OP_COST_TTL_AMT), 0) -- 컬럼 DEMDET / OP 추가 변경 20150706
                     )   AS OP_TOTAL   
  #end
  
  #if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO' )
              ,V.TRD_CD||V.RLANE_CD||V.VSL_CD||V.SKD_VOY_NO||V.DIR_CD AS MON_VVD
  #else
              ,A2.TRD_CD||A2.RLANE_CD||A2.VSL_CD || A2.SKD_VOY_NO || A2.DIR_CD AS MON_VVD	
  #end
	
     	      ,MAS_PSG_TS_ARRAY_FNC(a2.n1st_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n1st_finc_vvd_cd,substr(A2.N1ST_RLANE_CD,1,3),SUBSTR (A2.n1st_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n1st_finc_vvd_cd,substr(A2.N1ST_RLANE_CD,1,3),SUBSTR (A2.n1st_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n1st_rlane_cd, SUBSTR (A2.n1st_finc_vvd_cd, 1, 9), A2.n1st_pol_cd, A2.n1st_pod_cd, --1
                              a2.n2nd_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n2nd_finc_vvd_cd,substr(A2.N2nd_RLANE_CD,1,3),SUBSTR (A2.n2nd_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n2nd_finc_vvd_cd,substr(A2.n2nd_RLANE_CD,1,3),SUBSTR (A2.n2nd_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n2nd_rlane_cd, SUBSTR (A2.n2nd_finc_vvd_cd, 1, 9), A2.n2nd_pol_cd, A2.n2nd_pod_cd, --2
                              a2.n3rd_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n3rd_finc_vvd_cd,substr(A2.n3rd_RLANE_CD,1,3),SUBSTR (A2.n3rd_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n3rd_finc_vvd_cd,substr(A2.n3rd_RLANE_CD,1,3),SUBSTR (A2.n3rd_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n3rd_rlane_cd, SUBSTR (A2.n3rd_finc_vvd_cd, 1, 9), A2.n3rd_pol_cd, A2.n3rd_pod_cd, --3
                              a2.n4th_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n4th_finc_vvd_cd,substr(A2.n4th_RLANE_CD,1,3),SUBSTR (A2.n4th_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n4th_finc_vvd_cd,substr(A2.n4th_RLANE_CD,1,3),SUBSTR (A2.n4th_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n4th_rlane_cd, SUBSTR (A2.n4th_finc_vvd_cd, 1, 9), A2.n4th_pol_cd, A2.n4th_pod_cd --4
                             ) vvd_info
	    
        FROM  
   #if(${f_chkprd} =='M')
             MAS_BKG_EXPN_DTL A2
   #elseif (${f_chkprd} =='W')
             MAS_BKG_EXPN_DTL_WK A2 
   #end
             ,MAS_BKG_OP_EXPN_DTL A6
   #if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO')
             ,MAS_MON_VVD V
             ,BKG_VVD B
   #end
			 ,MAS_RGST_BKG MRB
             ,MAS_OFC_LVL A4 
             ,MDM_COMMODITY A3    
             ,MDM_REP_CMDT A5
             ,MAS_LANE_RGST R
			 ,( SELECT BKG_NO, MAX(CGO_RCV_DT) AS CGO_RCV_DT  
                FROM BKG_CONTAINER GROUP BY BKG_NO ) C
       WHERE 1 = 1
  #if(${f_include_ts} =='Y' && ${f_chkprd} =='M' && ${f_rlane_cd} != 'RBCCO')
         AND V.COST_YRMON   = @[f_year]||@[f_mon]
         AND A2.COST_YRMON  BETWEEN A4.OFC_APLY_FM_YRMON AND A4.OFC_APLY_TO_YRMON
         AND NVL(V.delt_flg,'N') = 'N'
         AND V.VSL_CD       = B.VSL_CD
         AND V.SKD_VOY_NO   = B.SKD_VOY_NO
         AND V.DIR_CD       = B.SKD_DIR_CD
         AND B.BKG_NO       = A2.BKG_NO
  #elseif(${f_include_ts} =='Y' && ${f_chkprd} =='W' && ${f_rlane_cd} != 'RBCCO')
         AND SUBSTR(V.SLS_YRMON,1,4)||V.COST_WK BETWEEN @[f_year]||@[f_fm_wk] AND @[f_year]||@[f_to_wk]
         AND NVL(V.delt_flg,'N')   = 'N'
         AND V.VSL_CD       = B.VSL_CD
         AND V.SKD_VOY_NO   = B.SKD_VOY_NO
         AND V.DIR_CD       = B.SKD_DIR_CD
         AND B.BKG_NO       = A2.BKG_NO
    #if(${f_sls_mon} !='')
    	 AND V.SLS_YRMON    = @[f_year]||@[f_sls_mon]    
    #end
    
         AND A2.SLS_YRMON   BETWEEN A4.OFC_APLY_FM_YRMON AND A4.OFC_APLY_TO_YRMON
  #elseif((${f_include_ts} !='Y' && ${f_chkprd} =='M') || (${f_include_ts} =='Y' && ${f_chkprd} =='M' && ${f_rlane_cd} == 'RBCCO'))    
         AND A2.COST_YRMON  = @[f_year]||@[f_mon] 
         AND A2.COST_YRMON  BETWEEN A4.OFC_APLY_FM_YRMON AND A4.OFC_APLY_TO_YRMON
  #elseif ((${f_include_ts} !='Y' && ${f_chkprd} =='W') || (${f_include_ts} =='Y' && ${f_chkprd} =='W' && ${f_rlane_cd} == 'RBCCO'))  
    	 AND SUBSTR(A2.SLS_YRMON,1,4)||A2.COST_WK BETWEEN @[f_year]||@[f_fm_wk] AND @[f_year]||@[f_to_wk]
    	  
    #if(${f_sls_mon} !='')
    	 AND A2.SLS_YRMON   = @[f_year]||@[f_sls_mon]    
    #end 
    
         AND A2.SLS_YRMON     BETWEEN A4.OFC_APLY_FM_YRMON AND A4.OFC_APLY_TO_YRMON
  #end

		 AND MRB.BKG_NO = A2.BKG_NO

  #if(${f_fixed_rate} == 'Y')
	AND MRB.FX_RT_FLG = 'Y'
  #end
  #if(${f_ofc_vw} =='C')	
    	 AND A2.AGMT_SGN_OFC_CD = A4.OFC_CD
  #elseif (${f_ofc_vw} =='L')	
	     AND A2.SLS_OFC_CD = A4.OFC_CD
  #else
	     AND 1 = 0
  #end  
  
         AND A2.CMDT_CD       = A3.CMDT_CD(+)  
         AND A2.REP_CMDT_CD   = A5.REP_CMDT_CD(+) 
         AND NVL(A2.DELT_FLG, 'N') = 'N' 
         AND A2.BKG_STS_CD    IN ('F','S',DECODE(@[f_bkg_sts],'Y', 'W')) 
         AND A2.BKG_CGO_TP_CD <> 'P' 
         AND A2.BL_NO_TP      IN ('M','0')

         AND A2.RLANE_CD = R.RLANE_CD
         AND A2.DIR_CD = R.DIR_CD
         AND A2.IOC_CD = R.IOC_CD
         AND A2.TRD_CD = R.TRD_CD
         AND R.DELT_FLG = 'N' 	  
		
		 AND A2.BKG_NO = C.BKG_NO(+)

  #if(${f_ofc_cd} !='')
    #if(${f_excl_sts} =='')
         AND DECODE(@[f_ofc_lvl],'1',A4.OFC_N1ST_LVL_CD,'2',A4.OFC_N2ND_LVL_CD,'3',A4.OFC_N3RD_LVL_CD,'4',A4.OFC_N4TH_LVL_CD,'5',A4.OFC_N5TH_LVL_CD,'6',A4.OFC_N6TH_LVL_CD,'7',A4.OFC_N7TH_LVL_CD) = @[f_ofc_cd] 
    #else
         AND A4.OFC_CD = @[f_ofc_cd] 
    #end
  #end

  #if(${f_ofc_lvl}=='6' || ${f_ofc_lvl}=='7')
         AND A4.OFC_LVL = @[f_ofc_lvl]
  #else
         AND A4.OFC_LVL < '9'
  #end

#if(${f_include_ts} == 'Y' && ${f_rlane_cd} != 'RBCCO')
  #if(${f_vsl_cd} !='')
         AND V.VSL_CD  = @[f_vsl_cd] 
  #end  
  #if(${f_skd_voy_no} !='')
         AND V.SKD_VOY_NO     = @[f_skd_voy_no] 
  #end
  #if(${f_skd_dir_cd} !='')
         AND V.DIR_CD         = @[f_skd_dir_cd] 
  #end
  #if(${f_trd_cd} !='')
         AND V.TRD_CD         = @[f_trd_cd] 
  #end
  #if(${f_rlane_cd} !='')
         AND V.RLANE_CD       = @[f_rlane_cd] 
  #end
  #if(${f_ioc_cd} !='')
         AND V.IOC_CD         = @[f_ioc_cd] 
  #end
  #if(${f_dir_cd} !='')
         AND V.DIR_CD         = @[f_dir_cd] 
  #end
#elseif(${f_include_ts} == 'Y' && ${f_rlane_cd} == 'RBCCO')
	#if(${f_trd_cd} !='' && ${f_rlane_cd} !='')
         AND @[f_trd_cd]||@[f_rlane_cd] IN (A2.N1ST_TRD_CD||A2.N1ST_RLANE_CD, A2.N2ND_TRD_CD||A2.N2ND_RLANE_CD, A2.N3RD_TRD_CD||A2.N3RD_RLANE_CD, A2.N4TH_TRD_CD||A2.N4TH_RLANE_CD)
  	#end
#else
  #if(${f_vsl_cd} !='')
         AND A2.VSL_CD  = @[f_vsl_cd] 
  #end  
  #if(${f_skd_voy_no} !='')
         AND A2.SKD_VOY_NO     = @[f_skd_voy_no] 
  #end
  #if(${f_skd_dir_cd} !='')
         AND A2.DIR_CD         = @[f_skd_dir_cd] 
  #end
  #if(${f_trd_cd} !='')
         AND A2.TRD_CD         = @[f_trd_cd] 
  #end
  #if(${f_sub_trd_cd} !='')
         AND A2.SUB_TRD_CD         = @[f_sub_trd_cd] 
  #end
  #if(${f_rlane_cd} !='')
         AND A2.RLANE_CD       = @[f_rlane_cd] 
  #end
  #if(${f_ioc_cd} !='')
         AND A2.IOC_CD         = @[f_ioc_cd] 
  #end
  #if(${f_dir_cd} !='')
         AND A2.DIR_CD         = @[f_dir_cd] 
  #end
#end

  #if(${f_bkg_por_cd} !='')
         AND A2.BKG_POR_CD     LIKE @[f_bkg_por_cd] || '%' 
  #end
  #if(${f_rev_pol_cd} !='')
         AND A2.REV_POL_CD     LIKE @[f_rev_pol_cd] || '%' 
  #end
  #if(${f_rev_pod_cd} !='')
         AND A2.REV_POD_CD     LIKE @[f_rev_pod_cd] || '%' 
  #end
  #if(${f_bkg_del_cd} !='')
         AND A2.BKG_DEL_CD     LIKE @[f_bkg_del_cd] || '%' 
  #end
  #if(${f_shpr_cd} !='')
         AND A2.SHPR_CNT_CD||A2.SHPR_CUST_SEQ = @[f_shpr_cd] 
  #end
  #if(${f_sc_no} !='')
         AND A2.SC_NO          = @[f_sc_no] 
  #end
  #if(${f_rfa_no} !='')
         AND A2.RFA_NO         = @[f_rfa_no] 
  #end
  #if(${f_taa_no} !='')
         AND A2.TAA_NO         = @[f_taa_no] 
  #end
  #if(${f_rep_cmdt_cd} !='')
         AND A2.REP_CMDT_CD    = @[f_rep_cmdt_cd] 
  #end
  #if(${f_usa_bkg_mod_cd} !='')
         AND A2.USA_BKG_MOD_CD = @[f_usa_bkg_mod_cd] 
  #end	

  #if(${f_cntr_tpsz_cd} !='')
         AND A2.CNTR_TPSZ_CD NOT LIKE 'Q%' 
  #end

  #if(${f_hul_bnd_cd} !='')
    	 AND R.HUL_BND_CD = @[f_hul_bnd_cd]
  #end
    	 AND A2.BKG_NO         = A6.BKG_NO(+)
         AND A2.CNTR_TPSZ_CD   = A6.CNTR_TPSZ_CD(+)
         AND A2.COST_ROUT_NO   = A6.COST_ROUT_NO(+)
   	 
       GROUP BY 
               A2.COST_YRMON 
              ,A2.SLS_YRMON  
              ,A2.COST_WK 
              ,A2.BKG_NO 
			  ,MRB.FX_RT_FLG
              ,DECODE(SUBSTR(A2.BL_NO, 1, 4), 'KOSA', 'K' || A2.BKG_NO, A2.BL_NO || A2.BL_NO_TP || A2.BL_NO_CHK)   
#if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO')	
              ,V.COST_YRMON
              ,V.COST_WK
              ,V.TRD_CD
              ,V.RLANE_CD
              ,V.DIR_CD
              ,V.VSL_CD
              ,V.SKD_VOY_NO
              ,V.IOC_CD
#end
              ,A2.TRD_CD  
              ,A2.SUB_TRD_CD 
              ,A2.RLANE_CD  
              ,A2.IOC_CD  
              ,A2.VSL_CD || A2.SKD_VOY_NO || A2.DIR_CD  
              ,A2.DIR_CD
              ,MAS_GET_CD_NM_FNC('CD03217', R.HUL_BND_CD)
              ,A2.CTRT_HQ_OFC_CD  
              ,A2.CTRT_RGN_OFC_CD  
              ,A2.CTRT_OFC_CD 
              ,A2.CTRT_SREP_CD  
              ,A2.RHQ_CD  
              ,A2.RGN_OFC_CD  
              ,A2.SLS_OFC_CD  
              ,A2.SREP_CD 
              ,A2.BKG_OFC_CD   
              ,A2.BKG_STS_CD   
              ,A2.USA_BKG_MOD_CD
              ,A2.REV_POL_CD
              ,A2.REV_POD_CD 
              ,A2.BKG_POR_CD  
              ,A2.BKG_POL_CD  
              ,A2.BKG_POD_CD  
              ,A2.BKG_DEL_CD  
              ,A2.BKG_RCV_TERM_CD  
              ,A2.BKG_DE_TERM_CD  
              ,A2.REP_CMDT_CD /*4400*/  
              ,A5.REP_CMDT_NM  
              ,A2.CMDT_CD /*440906  */
              ,A3.CMDT_NM  
              ,R.IAS_RGN_CD 
              ,A2.N1ST_TRD_CD   
              ,A2.N2ND_TRD_CD   
              ,A2.N3RD_TRD_CD   
              ,A2.N4TH_TRD_CD   
              ,A2.N1ST_RLANE_CD  
              ,A2.N2ND_RLANE_CD  
              ,A2.N3RD_RLANE_CD  
              ,A2.N4TH_RLANE_CD  
              ,A2.N1ST_FINC_VVD_CD  
              ,A2.N2ND_FINC_VVD_CD  
              ,A2.N3RD_FINC_VVD_CD  
              ,A2.N4TH_FINC_VVD_CD  
              ,A2.N1ST_POL_CD  
              ,A2.N2ND_POL_CD  
              ,A2.N3RD_POL_CD  
              ,A2.N4TH_POL_CD  
              ,A2.N1ST_POD_CD  
              ,A2.N2ND_POD_CD  
              ,A2.N3RD_POD_CD  
              ,A2.N4TH_POD_CD   
              ,A2.SC_NO 
              ,A2.RFA_NO 
              ,A2.CUST_TP_CD  
              ,A2.AGMT_CUST_TP_CD  
              ,A2.AGMT_CNT_CD || TO_CHAR(LPAD(DECODE(A2.AGMT_CUST_SEQ,0,'',A2.AGMT_CUST_SEQ),6,'0'))   /* SC_CUSTOMER CD*/  
              ,A2.AGMT_CNT_CD   
              ,A2.AGMT_CUST_SEQ   
              ,A2.CUST_GRP_ID
              --,A2.CUST_GRP_NM 
              ,A2.AGMT_PRC_CTRT_CUST_TP_CD
              ,A2.AGMT_CUST_SEQ -- C.CUSTOMER
              ,A2.AGMT_CNT_CD   -- C.CUSTOMER  
              ,A2.AGMT_ACT_CNT_CD || TO_CHAR(LPAD(DECODE(A2.AGMT_ACT_CUST_SEQ,0,'',A2.AGMT_ACT_CUST_SEQ),6,'0')) /*ACT_CUSTOMER_CD */
              ,A2.ACT_CUST_NM
              ,A2.SHPR_CNT_CD || TO_CHAR(LPAD(DECODE(A2.SHPR_CUST_SEQ,0,'',A2.SHPR_CUST_SEQ),6,'0')) /* SHPR_CD*/
              ,A2.SHPR_CNT_CD   
              ,A2.SHPR_CUST_SEQ   
              ,A2.SHPR_NM /* BL_SHPR_NM*/ 
              ,A2.CNEE_CNT_CD || TO_CHAR(LPAD(DECODE(A2.CNEE_CUST_SEQ,0,'',A2.CNEE_CUST_SEQ),6,'0')) /* CNEE_CD*/
              ,A2.CNEE_CNT_CD   
              ,A2.CNEE_CUST_SEQ  
              ,A2.NTFY_CNT_CD || TO_CHAR(LPAD(DECODE(A2.NTFY_CUST_SEQ,0,'',A2.NTFY_CUST_SEQ),6,'0')) /* NTFY_CD */
              ,A2.NTFY_CNT_CD   
              ,A2.NTFY_CUST_SEQ   
              ,A2.OFT_TP_CD  /* PPD_CCT*/
              ,TO_CHAR(A2.OBRD_DT,'YYYY-MM-DD') /*BL_ONBOARD_DT */
              ,TO_CHAR(C.CGO_RCV_DT,'YYYY-MM-DD') /*CGO_RCV_DT */
              ,A2.SOC_FLG  
              ,DECODE(A2.BKG_CGO_TP_CD, 'R', 'Y', 'N')
              ,NVL(A2.SPCL_RC_FLG, 'N')  
              ,NVL(A2.SPCL_DG_CGO_FLG, 'N') 
              ,NVL(A2.SPCL_BB_CGO_FLG, 'N') 
              ,NVL(A2.SPCL_AWK_CGO_FLG, 'N')  
              ,TO_CHAR(A2.BKG_CGO_WGT) 
              ,A2.BKG_WGT_TP_CD
  #if(${f_include_ts} =='Y' && ${f_rlane_cd} != 'RBCCO' )
              ,V.TRD_CD||V.RLANE_CD||V.VSL_CD||V.SKD_VOY_NO||V.DIR_CD
  #else
              ,A2.TRD_CD||A2.RLANE_CD||A2.VSL_CD || A2.SKD_VOY_NO || A2.DIR_CD
  #end
              ,MAS_PSG_TS_ARRAY_FNC(a2.n1st_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n1st_finc_vvd_cd,substr(A2.N1ST_RLANE_CD,1,3),SUBSTR (A2.n1st_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n1st_finc_vvd_cd,substr(A2.N1ST_RLANE_CD,1,3),SUBSTR (A2.n1st_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n1st_rlane_cd, SUBSTR (A2.n1st_finc_vvd_cd, 1, 9), A2.n1st_pol_cd, A2.n1st_pod_cd, --1
                              a2.n2nd_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n2nd_finc_vvd_cd,substr(A2.N2nd_RLANE_CD,1,3),SUBSTR (A2.n2nd_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n2nd_finc_vvd_cd,substr(A2.n2nd_RLANE_CD,1,3),SUBSTR (A2.n2nd_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n2nd_rlane_cd, SUBSTR (A2.n2nd_finc_vvd_cd, 1, 9), A2.n2nd_pol_cd, A2.n2nd_pod_cd, --2
                              a2.n3rd_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n3rd_finc_vvd_cd,substr(A2.n3rd_RLANE_CD,1,3),SUBSTR (A2.n3rd_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n3rd_finc_vvd_cd,substr(A2.n3rd_RLANE_CD,1,3),SUBSTR (A2.n3rd_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n3rd_rlane_cd, SUBSTR (A2.n3rd_finc_vvd_cd, 1, 9), A2.n3rd_pol_cd, A2.n3rd_pod_cd, --3
                              a2.n4th_trd_cd,
                              DECODE (MAS_SLAN_CONTI_CONV_FNC(A2.n4th_finc_vvd_cd,substr(A2.n4th_RLANE_CD,1,3),SUBSTR (A2.n4th_ioc_conti_cd, 1, 1))
                                     ,MAS_SLAN_CONTI_CONV_FNC(A2.n4th_finc_vvd_cd,substr(A2.n4th_RLANE_CD,1,3),SUBSTR (A2.n4th_ioc_conti_cd, 2, 1)), 'I' ,'O'),
                              A2.n4th_rlane_cd, SUBSTR (A2.n4th_finc_vvd_cd, 1, 9), A2.n4th_pol_cd, A2.n4th_pod_cd --4
                             )
              ,A4.OFC_APLY_FM_YRMON
              ,A4.OFC_APLY_TO_YRMON         
       )
 WHERE 1=1
#if(${f_include_ts} =='Y')
   AND @[f_trd_cd]||@[f_rlane_cd] IN ((SUBSTR(VVD_INFO,1,3)||SUBSTR(VVD_INFO,5,5)), (SUBSTR(VVD_INFO,29,3)||SUBSTR(VVD_INFO,33,5)), (SUBSTR(VVD_INFO,57,3)||SUBSTR(VVD_INFO,61,5)), (SUBSTR(VVD_INFO,85,3)||SUBSTR(VVD_INFO,89,5)), (SUBSTR(VVD_INFO,113,3)||SUBSTR(VVD_INFO,117,5)))
#end			]]></sql>
			<params>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_pro_vw" type="12" value="" out="N"/>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_sls_mon" type="12" value="" out="N"/>
				<param name="f_bkg_sts" type="12" value="" out="N"/>
				<param name="f_ofc_lvl" type="12" value="" out="N"/>
				<param name="f_ofc_cd" type="12" value="" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
				<param name="f_skd_dir_cd" type="12" value="" out="N"/>
				<param name="f_ioc_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_sub_trd_cd" type="12" value="" out="N"/>
				<param name="f_bkg_por_cd" type="12" value="" out="N"/>
				<param name="f_rev_pol_cd" type="12" value="" out="N"/>
				<param name="f_rev_pod_cd" type="12" value="" out="N"/>
				<param name="f_bkg_del_cd" type="12" value="" out="N"/>
				<param name="f_shpr_cd" type="12" value="" out="N"/>
				<param name="f_sc_no" type="12" value="" out="N"/>
				<param name="f_rfa_no" type="12" value="" out="N"/>
				<param name="f_taa_no" type="12" value="" out="N"/>
				<param name="f_rep_cmdt_cd" type="12" value="" out="N"/>
				<param name="f_usa_bkg_mod_cd" type="12" value="" out="N"/>
				<param name="f_hul_bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
