/*=========================================================
*Copyright(c) 2014 CyberLogitec
*@FileName : MTCostDBDAOSearchMTCostDetailListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2014.09.03
*@LastModifier : 최성민
*@LastVersion : 1.0
* 2014.09.03 최성민
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.mas.stdunitcost.mtcost.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI SUNG MIN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MTCostDBDAOSearchMTCostDetailListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Route별 MT Cost Detail 조회
	  * </pre>
	  */
	public MTCostDBDAOSearchMTCostDetailListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("f_ori_dest",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("f_cntr_tpsz_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("f_ecc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("f_cost_yrmon",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.mas.stdunitcost.mtcost.integration").append("\n"); 
		query.append("FileName : MTCostDBDAOSearchMTCostDetailListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if(${f_ecc_cd} != 'USHOF') " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT COST_YRMON" ).append("\n"); 
		query.append("      , ECC_CD" ).append("\n"); 
		query.append("      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("      , ORI_DEST_CD" ).append("\n"); 
		query.append("#if(${f_excl_sts} == '1') " ).append("\n"); 
		query.append("      , N1ST_YD_CD" ).append("\n"); 
		query.append("      , LST_YD_CD" ).append("\n"); 
		query.append("      , ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("      , TTL_QTY" ).append("\n"); 
		query.append("      , TTL_CNTR_RT" ).append("\n"); 
		query.append("      , YD_CD1" ).append("\n"); 
		query.append("      , YD_CD2" ).append("\n"); 
		query.append("      , YD_CD3" ).append("\n"); 
		query.append("      , YD_CD4" ).append("\n"); 
		query.append("      , YD_CD5" ).append("\n"); 
		query.append("      , YD_CD6" ).append("\n"); 
		query.append("      , YD_CD7" ).append("\n"); 
		query.append("      , YD_CD8" ).append("\n"); 
		query.append("      , YD_CD9" ).append("\n"); 
		query.append("      , YD_CD10" ).append("\n"); 
		query.append("      , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("      , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("      , MTY_TTL_AMT" ).append("\n"); 
		query.append("      , DECODE(TTL_QTY,0,0,SUM(MTY_TTL_AMT) OVER () / TTL_QTY) AS MTY_TTL_UC_AMT" ).append("\n"); 
		query.append("   FROM" ).append("\n"); 
		query.append("        (SELECT COST_YRMON" ).append("\n"); 
		query.append("              , ECC_CD" ).append("\n"); 
		query.append("              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              , ORI_DEST_CD" ).append("\n"); 
		query.append("#if(${f_excl_sts} == '1') " ).append("\n"); 
		query.append("	#if(${f_cost_loc_grp_cd} == 'Y')" ).append("\n"); 
		query.append("              , N1ST_YD_CD" ).append("\n"); 
		query.append("              , LST_YD_CD" ).append("\n"); 
		query.append("              , ROUT_SEQ" ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("              , ROUT_N1ST_ECC_CD AS N1ST_YD_CD" ).append("\n"); 
		query.append("              , ROUT_LST_ECC_CD  AS LST_YD_CD" ).append("\n"); 
		query.append("              , 1 ROUT_SEQ" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("              , SUM(TTL_CNTR_QTY) AS TTL_CNTR_QTY" ).append("\n"); 
		query.append("              , MAX(TTL_QTY) TTL_QTY" ).append("\n"); 
		query.append("              , DECODE(MAX(TTL_QTY), 0, 0, (SUM(TTL_CNTR_QTY) / MAX(TTL_QTY) * 100)) TTL_CNTR_RT" ).append("\n"); 
		query.append("              , YD_CD1" ).append("\n"); 
		query.append("              , YD_CD2" ).append("\n"); 
		query.append("              , YD_CD3" ).append("\n"); 
		query.append("              , YD_CD4" ).append("\n"); 
		query.append("              , YD_CD5" ).append("\n"); 
		query.append("              , YD_CD6" ).append("\n"); 
		query.append("              , YD_CD7" ).append("\n"); 
		query.append("              , YD_CD8" ).append("\n"); 
		query.append("              , YD_CD9" ).append("\n"); 
		query.append("              , YD_CD10" ).append("\n"); 
		query.append("              , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("              , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT1), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT2), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT3), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT4), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT5), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT6), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT7), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT8), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT9), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT10), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT1), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT2), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT3), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT4), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT5), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT6), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT7), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT8), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT9), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT10), 0) AS MTY_TTL_AMT" ).append("\n"); 
		query.append("           FROM" ).append("\n"); 
		query.append("                (SELECT COST_YRMON" ).append("\n"); 
		query.append("                      , DECODE('O', @[f_ori_dest], ROUT_N1ST_ECC_CD, ROUT_LST_ECC_CD) AS ECC_CD" ).append("\n"); 
		query.append("                      , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                      , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      , DECODE('O', @[f_ori_dest], 'Origin Based', 'Dest Based') AS ORI_DEST_CD" ).append("\n"); 
		query.append("                      , ROUT_N1ST_YD_CD AS N1ST_YD_CD" ).append("\n"); 
		query.append("                      , ROUT_LST_YD_CD AS LST_YD_CD" ).append("\n"); 
		query.append("                      , ROUT_SEQ" ).append("\n"); 
		query.append("                      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                      , SUM(TTL_CNTR_QTY) OVER () TTL_QTY" ).append("\n"); 
		query.append("                      , YD_CD1" ).append("\n"); 
		query.append("                      , YD_CD2" ).append("\n"); 
		query.append("                      , YD_CD3" ).append("\n"); 
		query.append("                      , YD_CD4" ).append("\n"); 
		query.append("                      , YD_CD5" ).append("\n"); 
		query.append("                      , YD_CD6" ).append("\n"); 
		query.append("                      , YD_CD7" ).append("\n"); 
		query.append("                      , YD_CD8" ).append("\n"); 
		query.append("                      , YD_CD9" ).append("\n"); 
		query.append("                      , YD_CD10" ).append("\n"); 
		query.append("                      , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("                      , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("                   FROM" ).append("\n"); 
		query.append("                        (SELECT COST_YRMON" ).append("\n"); 
		query.append("                              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                              , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                              , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                              , ROUT_SEQ" ).append("\n"); 
		query.append("                              , MVMT_SEQ" ).append("\n"); 
		query.append("                              , RNUM" ).append("\n"); 
		query.append("                              , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                              , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                              , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                              , YD_CD YD_CD1" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD2" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD3" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD4" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD5" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD6" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD7" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD8" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD9" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD10" ).append("\n"); 
		query.append("                              , MAX(LST_YD_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_YD_IN_CONTI" ).append("\n"); 
		query.append("                              , MAX(LST_YD_MVMT_STS_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("                              , MTY_STVG_TTL_AMT MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("                              , MTY_TRSP_TTL_AMT MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("                           FROM" ).append("\n"); 
		query.append("                                (SELECT COST_YRMON" ).append("\n"); 
		query.append("                                      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_SEQ" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                                      , MVMT_SEQ" ).append("\n"); 
		query.append("                                      , YD_CD" ).append("\n"); 
		query.append("                                      , MAX(LST_YD_CD) AS LST_YD_CD" ).append("\n"); 
		query.append("                                      , MAX(LST_YD_MVMT_STS_CD) LST_YD_MVMT_STS_CD" ).append("\n"); 
		query.append("                                      , SUM(MTY_STVG_TTL_AMT) AS MTY_STVG_TTL_AMT" ).append("\n"); 
		query.append("                                      , SUM(MTY_TRSP_TTL_AMT) AS MTY_TRSP_TTL_AMT" ).append("\n"); 
		query.append("                                      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                                      , ROW_NUMBER() OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY MVMT_SEQ) AS RNUM" ).append("\n"); 
		query.append("                                   FROM" ).append("\n"); 
		query.append("                                        (SELECT COST_YRMON" ).append("\n"); 
		query.append("                                              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                              , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                              , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                              , ROUT_SEQ" ).append("\n"); 
		query.append("                                              , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                                              , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("#if(${f_cost_loc_grp_cd} == 'Y')" ).append("\n"); 
		query.append("                                              , MVMT_SEQ" ).append("\n"); 
		query.append("                                              , YD_CD" ).append("\n"); 
		query.append("                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_CD, NULL) AS LST_YD_CD" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                              , CASE WHEN SUBSTR(YD_CD, 1, 5) = SUBSTR(ROUT_N1ST_YD_CD, 1, 5) " ).append("\n"); 
		query.append("                                                     THEN MIN(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))" ).append("\n"); 
		query.append("                                                     ELSE MAX(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))" ).append("\n"); 
		query.append("                                                END AS MVMT_SEQ" ).append("\n"); 
		query.append("                                              , SUBSTR(YD_CD, 1, 5) AS YD_CD" ).append("\n"); 
		query.append("                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], SUBSTR(LST_YD_CD, 1, 5), NULL) AS LST_YD_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_MVMT_STS_CD, NULL) AS LST_YD_MVMT_STS_CD" ).append("\n"); 
		query.append("                                              , ROUND(MTY_STVG_TTL_AMT, 2) AS MTY_STVG_TTL_AMT" ).append("\n"); 
		query.append("                                              , ROUND(MTY_TRSP_TTL_AMT, 2) AS MTY_TRSP_TTL_AMT" ).append("\n"); 
		query.append("                                              , (SELECT SUM(TTL_CNTR_QTY)" ).append("\n"); 
		query.append("                                                   FROM MAS_MTY_CNTR_ROUT_PERF" ).append("\n"); 
		query.append("                                                  WHERE COST_YRMON       = A.COST_YRMON" ).append("\n"); 
		query.append("                                                    AND CNTR_TPSZ_CD     = A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                                    AND ROUT_N1ST_YD_CD  = A.ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                                    AND ROUT_LST_YD_CD   = A.ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                                    AND ROUT_SEQ         = A.ROUT_SEQ" ).append("\n"); 
		query.append("                                                    AND CNTR_ORG_DEST_CD = A.CNTR_ORG_DEST_CD" ).append("\n"); 
		query.append("                                                ) AS TTL_CNTR_QTY" ).append("\n"); 
		query.append("                                           FROM MAS_MTY_CNTR_ROUT_DTL A" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                          WHERE COST_YRMON = @[f_cost_yrmon] " ).append("\n"); 
		query.append("                                            AND CNTR_TPSZ_CD = @[f_cntr_tpsz_cd]" ).append("\n"); 
		query.append("#if(${f_ori_dest} == 'O')" ).append("\n"); 
		query.append("                                            AND ROUT_N1ST_ECC_CD = @[f_ecc_cd]" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                            AND ROUT_LST_ECC_CD = @[f_ecc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("#if(${f_excl_sts} != '1')" ).append("\n"); 
		query.append("                                            AND CNTR_ORG_DEST_CD = @[f_ori_dest]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                        )" ).append("\n"); 
		query.append("                               GROUP BY COST_YRMON" ).append("\n"); 
		query.append("                                      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_SEQ" ).append("\n"); 
		query.append("                                      , MVMT_SEQ" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                                      , YD_CD" ).append("\n"); 
		query.append("                                      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                               ORDER BY CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_SEQ" ).append("\n"); 
		query.append("                                      , MVMT_SEQ" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                        )" ).append("\n"); 
		query.append("                  WHERE RNUM = 1" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("       GROUP BY COST_YRMON" ).append("\n"); 
		query.append("              , ECC_CD" ).append("\n"); 
		query.append("              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              , ORI_DEST_CD" ).append("\n"); 
		query.append("#if(${f_excl_sts} == '1') " ).append("\n"); 
		query.append("	#if(${f_cost_loc_grp_cd} == 'Y')" ).append("\n"); 
		query.append("              , N1ST_YD_CD" ).append("\n"); 
		query.append("              , LST_YD_CD" ).append("\n"); 
		query.append("              , ROUT_SEQ" ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("              , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("              , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("              , YD_CD1" ).append("\n"); 
		query.append("              , YD_CD2" ).append("\n"); 
		query.append("              , YD_CD3" ).append("\n"); 
		query.append("              , YD_CD4" ).append("\n"); 
		query.append("              , YD_CD5" ).append("\n"); 
		query.append("              , YD_CD6" ).append("\n"); 
		query.append("              , YD_CD7" ).append("\n"); 
		query.append("              , YD_CD8" ).append("\n"); 
		query.append("              , YD_CD9" ).append("\n"); 
		query.append("              , YD_CD10" ).append("\n"); 
		query.append("              , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("              , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("ORDER BY TTL_CNTR_QTY DESC" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT COST_YRMON" ).append("\n"); 
		query.append("      , 'USHOF' ECC_CD" ).append("\n"); 
		query.append("      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("      , ORI_DEST_CD" ).append("\n"); 
		query.append("#if(${f_excl_sts} == '1') " ).append("\n"); 
		query.append("      , N1ST_YD_CD" ).append("\n"); 
		query.append("      , LST_YD_CD" ).append("\n"); 
		query.append("      , ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("      , TTL_QTY" ).append("\n"); 
		query.append("      , TTL_CNTR_RT" ).append("\n"); 
		query.append("      , YD_CD1" ).append("\n"); 
		query.append("      , YD_CD2" ).append("\n"); 
		query.append("      , YD_CD3" ).append("\n"); 
		query.append("      , YD_CD4" ).append("\n"); 
		query.append("      , YD_CD5" ).append("\n"); 
		query.append("      , YD_CD6" ).append("\n"); 
		query.append("      , YD_CD7" ).append("\n"); 
		query.append("      , YD_CD8" ).append("\n"); 
		query.append("      , YD_CD9" ).append("\n"); 
		query.append("      , YD_CD10" ).append("\n"); 
		query.append("      , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("      , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("      , MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("      , MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("      , MTY_TTL_AMT" ).append("\n"); 
		query.append("      , DECODE(TTL_QTY,0,0,SUM(MTY_TTL_AMT) OVER () / TTL_QTY) AS MTY_TTL_UC_AMT" ).append("\n"); 
		query.append("   FROM" ).append("\n"); 
		query.append("        (SELECT COST_YRMON" ).append("\n"); 
		query.append("              , ECC_CD" ).append("\n"); 
		query.append("              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              , ORI_DEST_CD" ).append("\n"); 
		query.append("#if(${f_excl_sts} == '1') " ).append("\n"); 
		query.append("	#if(${f_cost_loc_grp_cd} == 'Y')" ).append("\n"); 
		query.append("              , N1ST_YD_CD" ).append("\n"); 
		query.append("              , LST_YD_CD" ).append("\n"); 
		query.append("              , ROUT_SEQ" ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("              , ROUT_N1ST_ECC_CD AS N1ST_YD_CD" ).append("\n"); 
		query.append("              , ROUT_LST_ECC_CD  AS LST_YD_CD" ).append("\n"); 
		query.append("              , 1 ROUT_SEQ" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("              , SUM(TTL_CNTR_QTY) AS TTL_CNTR_QTY" ).append("\n"); 
		query.append("              , MAX(TTL_QTY) TTL_QTY" ).append("\n"); 
		query.append("              , DECODE(MAX(TTL_QTY), 0, 0, (SUM(TTL_CNTR_QTY) / MAX(TTL_QTY) * 100)) TTL_CNTR_RT" ).append("\n"); 
		query.append("              , YD_CD1" ).append("\n"); 
		query.append("              , YD_CD2" ).append("\n"); 
		query.append("              , YD_CD3" ).append("\n"); 
		query.append("              , YD_CD4" ).append("\n"); 
		query.append("              , YD_CD5" ).append("\n"); 
		query.append("              , YD_CD6" ).append("\n"); 
		query.append("              , YD_CD7" ).append("\n"); 
		query.append("              , YD_CD8" ).append("\n"); 
		query.append("              , YD_CD9" ).append("\n"); 
		query.append("              , YD_CD10" ).append("\n"); 
		query.append("              , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("              , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT1) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT2) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT3) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT4) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT5) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT6) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT7) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT8) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT9) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_TRSP_TTL_AMT10) / SUM(TTL_CNTR_QTY), 0) AS MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("              , NVL(SUM(MTY_STVG_TTL_AMT1), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT2), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT3), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT4), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT5), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT6), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT7), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT8), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT9), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_STVG_TTL_AMT10), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT1), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT2), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT3), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT4), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT5), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT6), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT7), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT8), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT9), 0) " ).append("\n"); 
		query.append("              + NVL(SUM(MTY_TRSP_TTL_AMT10), 0) AS MTY_TTL_AMT" ).append("\n"); 
		query.append("           FROM" ).append("\n"); 
		query.append("                (SELECT COST_YRMON" ).append("\n"); 
		query.append("                      , DECODE('O', @[f_ori_dest], ROUT_N1ST_ECC_CD, ROUT_LST_ECC_CD) AS ECC_CD" ).append("\n"); 
		query.append("                      , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                      , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      , DECODE('O', @[f_ori_dest], 'Origin Based', 'Dest Based') AS ORI_DEST_CD" ).append("\n"); 
		query.append("                      , ROUT_N1ST_YD_CD AS N1ST_YD_CD" ).append("\n"); 
		query.append("                      , ROUT_LST_YD_CD AS LST_YD_CD" ).append("\n"); 
		query.append("                      , ROUT_SEQ" ).append("\n"); 
		query.append("                      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                      , SUM(TTL_CNTR_QTY) OVER () TTL_QTY" ).append("\n"); 
		query.append("                      , YD_CD1" ).append("\n"); 
		query.append("                      , YD_CD2" ).append("\n"); 
		query.append("                      , YD_CD3" ).append("\n"); 
		query.append("                      , YD_CD4" ).append("\n"); 
		query.append("                      , YD_CD5" ).append("\n"); 
		query.append("                      , YD_CD6" ).append("\n"); 
		query.append("                      , YD_CD7" ).append("\n"); 
		query.append("                      , YD_CD8" ).append("\n"); 
		query.append("                      , YD_CD9" ).append("\n"); 
		query.append("                      , YD_CD10" ).append("\n"); 
		query.append("                      , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("                      , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("                      , MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("                      , MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("                   FROM" ).append("\n"); 
		query.append("                        (SELECT COST_YRMON" ).append("\n"); 
		query.append("                              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                              , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                              , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                              , ROUT_SEQ" ).append("\n"); 
		query.append("                              , MVMT_SEQ" ).append("\n"); 
		query.append("                              , RNUM" ).append("\n"); 
		query.append("                              , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                              , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                              , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                              , YD_CD YD_CD1" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD2" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD3" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD4" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD5" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD6" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD7" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD8" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD9" ).append("\n"); 
		query.append("                              , LEAD(YD_CD, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) YD_CD10" ).append("\n"); 
		query.append("                              , MAX(LST_YD_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_YD_IN_CONTI" ).append("\n"); 
		query.append("                              , MAX(LST_YD_MVMT_STS_CD) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ) AS LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("                              , MTY_STVG_TTL_AMT MTY_STVG_TTL_AMT1" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT2" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT3" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT4" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT5" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT6" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT7" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT8" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT9" ).append("\n"); 
		query.append("                              , LEAD(MTY_STVG_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_STVG_TTL_AMT10" ).append("\n"); 
		query.append("                              , MTY_TRSP_TTL_AMT MTY_TRSP_TTL_AMT1" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 1) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT2" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 2) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT3" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 3) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT4" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 4) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT5" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 5) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT6" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 6) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT7" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 7) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT8" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 8) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT9" ).append("\n"); 
		query.append("                              , LEAD(MTY_TRSP_TTL_AMT, 9) OVER ( PARTITION BY CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY RNUM ) MTY_TRSP_TTL_AMT10" ).append("\n"); 
		query.append("                           FROM" ).append("\n"); 
		query.append("                                (SELECT COST_YRMON" ).append("\n"); 
		query.append("                                      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_SEQ" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                                      , MVMT_SEQ" ).append("\n"); 
		query.append("                                      , YD_CD" ).append("\n"); 
		query.append("                                      , MAX(LST_YD_CD) AS LST_YD_CD" ).append("\n"); 
		query.append("                                      , MAX(LST_YD_MVMT_STS_CD) LST_YD_MVMT_STS_CD" ).append("\n"); 
		query.append("                                      , SUM(MTY_STVG_TTL_AMT) AS MTY_STVG_TTL_AMT" ).append("\n"); 
		query.append("                                      , SUM(MTY_TRSP_TTL_AMT) AS MTY_TRSP_TTL_AMT" ).append("\n"); 
		query.append("                                      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                                      , ROW_NUMBER() OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ ORDER BY MVMT_SEQ) AS RNUM" ).append("\n"); 
		query.append("                                   FROM" ).append("\n"); 
		query.append("                                        (SELECT COST_YRMON" ).append("\n"); 
		query.append("                                              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                              , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                              , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                              , ROUT_SEQ" ).append("\n"); 
		query.append("                                              , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                                              , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("#if(${f_cost_loc_grp_cd} == 'Y')" ).append("\n"); 
		query.append("                                              , MVMT_SEQ" ).append("\n"); 
		query.append("                                              , YD_CD" ).append("\n"); 
		query.append("                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_CD, NULL) AS LST_YD_CD" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                              , CASE WHEN SUBSTR(YD_CD, 1, 5) = SUBSTR(ROUT_N1ST_YD_CD, 1, 5) " ).append("\n"); 
		query.append("                                                     THEN MIN(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))" ).append("\n"); 
		query.append("                                                     ELSE MAX(MVMT_SEQ) OVER (PARTITION BY COST_YRMON, CNTR_TPSZ_CD, ROUT_N1ST_YD_CD, ROUT_LST_YD_CD, ROUT_SEQ, CNTR_ORG_DEST_CD, SUBSTR(YD_CD, 1, 5))" ).append("\n"); 
		query.append("                                                END AS MVMT_SEQ" ).append("\n"); 
		query.append("                                              , SUBSTR(YD_CD, 1, 5) AS YD_CD" ).append("\n"); 
		query.append("                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], SUBSTR(LST_YD_CD, 1, 5), NULL) AS LST_YD_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                              , DECODE(CNTR_ORG_DEST_CD, @[f_ori_dest], LST_YD_MVMT_STS_CD, NULL) AS LST_YD_MVMT_STS_CD" ).append("\n"); 
		query.append("                                              , ROUND(MTY_STVG_TTL_AMT, 2) AS MTY_STVG_TTL_AMT" ).append("\n"); 
		query.append("                                              , ROUND(MTY_TRSP_TTL_AMT, 2) AS MTY_TRSP_TTL_AMT" ).append("\n"); 
		query.append("                                              , (SELECT SUM(TTL_CNTR_QTY)" ).append("\n"); 
		query.append("                                                   FROM MAS_MTY_CNTR_ROUT_PERF" ).append("\n"); 
		query.append("                                                  WHERE COST_YRMON       = A.COST_YRMON" ).append("\n"); 
		query.append("                                                    AND CNTR_TPSZ_CD     = A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                                    AND ROUT_N1ST_YD_CD  = A.ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                                    AND ROUT_LST_YD_CD   = A.ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                                    AND ROUT_SEQ         = A.ROUT_SEQ" ).append("\n"); 
		query.append("                                                    AND CNTR_ORG_DEST_CD = A.CNTR_ORG_DEST_CD" ).append("\n"); 
		query.append("                                                ) AS TTL_CNTR_QTY" ).append("\n"); 
		query.append("                                           FROM MAS_MTY_CNTR_ROUT_DTL A" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                          WHERE COST_YRMON = @[f_cost_yrmon] " ).append("\n"); 
		query.append("                                            AND CNTR_TPSZ_CD = @[f_cntr_tpsz_cd]" ).append("\n"); 
		query.append("#if(${f_ori_dest} == 'O')" ).append("\n"); 
		query.append("                                            AND ROUT_N1ST_ECC_CD = 'USHOU'" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                            AND ROUT_LST_ECC_CD = 'USHOU'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("#if(${f_excl_sts} != '1')" ).append("\n"); 
		query.append("                                            AND CNTR_ORG_DEST_CD = @[f_ori_dest]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                        )" ).append("\n"); 
		query.append("                               GROUP BY COST_YRMON" ).append("\n"); 
		query.append("                                      , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_SEQ" ).append("\n"); 
		query.append("                                      , MVMT_SEQ" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("                                      , YD_CD" ).append("\n"); 
		query.append("                                      , TTL_CNTR_QTY" ).append("\n"); 
		query.append("                               ORDER BY CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      , ROUT_N1ST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_LST_YD_CD" ).append("\n"); 
		query.append("                                      , ROUT_SEQ" ).append("\n"); 
		query.append("                                      , MVMT_SEQ" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                        )" ).append("\n"); 
		query.append("                  WHERE RNUM = 1" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("--===============================================================================  " ).append("\n"); 
		query.append("                    AND (MAS_LOC_FNC(YD_CD2,'ECC') IN('USLGB','USLAX') " ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD3,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD4,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD5,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD6,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD7,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD8,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD9,'ECC') IN('USLGB','USLAX')" ).append("\n"); 
		query.append("                        OR MAS_LOC_FNC(YD_CD10,'ECC') IN('USLGB','USLAX') )" ).append("\n"); 
		query.append("--===============================================================================  " ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("       GROUP BY COST_YRMON" ).append("\n"); 
		query.append("              , ECC_CD" ).append("\n"); 
		query.append("              , CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              , ORI_DEST_CD" ).append("\n"); 
		query.append("#if(${f_excl_sts} == '1') " ).append("\n"); 
		query.append("	#if(${f_cost_loc_grp_cd} == 'Y')" ).append("\n"); 
		query.append("              , N1ST_YD_CD" ).append("\n"); 
		query.append("              , LST_YD_CD" ).append("\n"); 
		query.append("              , ROUT_SEQ" ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("              , ROUT_N1ST_ECC_CD" ).append("\n"); 
		query.append("              , ROUT_LST_ECC_CD" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("              , YD_CD1" ).append("\n"); 
		query.append("              , YD_CD2" ).append("\n"); 
		query.append("              , YD_CD3" ).append("\n"); 
		query.append("              , YD_CD4" ).append("\n"); 
		query.append("              , YD_CD5" ).append("\n"); 
		query.append("              , YD_CD6" ).append("\n"); 
		query.append("              , YD_CD7" ).append("\n"); 
		query.append("              , YD_CD8" ).append("\n"); 
		query.append("              , YD_CD9" ).append("\n"); 
		query.append("              , YD_CD10" ).append("\n"); 
		query.append("              , LST_YD_IN_CONTI" ).append("\n"); 
		query.append("              , LST_MVMT_IN_CONTI" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("ORDER BY TTL_CNTR_QTY DESC" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}