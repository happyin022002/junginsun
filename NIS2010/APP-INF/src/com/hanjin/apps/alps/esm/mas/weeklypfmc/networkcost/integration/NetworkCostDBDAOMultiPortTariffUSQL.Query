<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOMultiPortTariffUSQL">
			<desc><![CDATA[History----------------------------------
2010.05.06 이행지 CHM-201003663-Port tariff vessel class 변경
2010.05.20 이행지 M:2010-05, W:2010-18  => M:2010-07,W:2010-27 월 부터 VSL_CLSS_CAPA 적용하도록
2010.09.28 이행지 [CHM-201006114-01] VSL_CLSS_CAPA 적용삭제 
2015.01.28 김시몬 [관리회계개선TF] 팬듈럼은 100%로 산출, 운하통과료 100%로 산출
2015.03.09 김시몬 [관리회계개선TF] CN/IT 국가에 대한 ADD항비 관련 로직 추가
2015.04.01 김시몬 [관리회계개선TF] PSG LANE 팬듈럼 처리 추가]]></desc>
			<sql><![CDATA[
MERGE INTO MAS_PORT_TRF MAS
USING (select A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.YD_CD, 
              CASE WHEN B.TURN_PORT_FLG= 'N' AND B.TURN_PORT_IND_CD = 'N' THEN INV_USD_AMT
                   WHEN B.SLAN_CD IN ('IMU','PM1','PSG','HPM','CPM') THEN INV_USD_AMT
                   WHEN SUBSTR(A.YD_CD,1,5) IN ('EGSUZ','PAPAC') THEN INV_USD_AMT
                   ELSE INV_USD_AMT * 0.5
              END INV_USD_AMT,
              NVL((
                   SELECT WK_VSL_DTRB_AMT   
                     FROM MAS_PORT_ADD_TRF C
                    WHERE C.VSL_CD     = A.VSL_CD
                      AND C.SKD_VOY_NO = A.SKD_VOY_NO
                      AND C.SKD_DIR_CD = A.SKD_DIR_CD
                      AND C.CNT_CD     = 'CN'
                  ) * RATIO_TO_REPORT(INV_USD_AMT) OVER(PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD),0) AS CHN_PORT_ADD_AMT,
              NVL((
                   SELECT WK_VSL_DTRB_AMT
                     FROM MAS_PORT_ADD_TRF C
                    WHERE C.VSL_CD     = A.VSL_CD
                      AND C.SKD_VOY_NO = A.SKD_VOY_NO
                      AND C.SKD_DIR_CD = A.SKD_DIR_CD
                      AND C.CNT_CD     = 'IT'
                  ) * RATIO_TO_REPORT(INV_USD_AMT) OVER(PARTITION BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD),0) AS ITA_PORT_ADD_AMT              
        from PSO_TGT_VVD_EXPN A,
             VSK_VSL_PORT_SKD B
       where PSO_BZTP_CD = 7
         and A.VSL_CD     = @[vsl_cd]
         and A.skd_voy_no = @[skd_voy_no]
         and A.skd_dir_cd = @[skd_dir_cd]
         and A.wrk_dt     = substr(@[pso_max_seq],1,8)
         and A.wrk_seq    = substr(@[pso_max_seq],9)
         AND A.VSL_CD     = B.VSL_CD
         AND A.SKD_VOY_NO = B.SKD_VOY_NO
         AND A.SKD_DIR_CD = B.SKD_DIR_CD
         AND A.YD_CD      = B.YD_CD
         AND B.CLPT_SEQ   = (SELECT MIN(CLPT_SEQ) 
                               FROM VSK_VSL_PORT_SKD
                              WHERE VSL_CD = B.VSL_CD
                                AND SKD_VOY_NO = B.SKD_VOY_NO
                                AND SKD_DIR_CD = B.SKD_DIR_CD
                                AND YD_CD      = B.YD_CD
                                AND NVL(SKD_CNG_STS_CD, 'X') <> 'S')
      ) PSO
ON (MAS.VSL_CD = PSO.VSL_CD
 AND MAS.SKD_VOY_NO = PSO.SKD_VOY_NO
 AND MAS.SKD_DIR_CD = PSO.SKD_DIR_CD
 AND MAS.TML_CD     = PSO.YD_CD
 AND MAS.SLAN_CD    = @[slan_cd])
WHEN MATCHED THEN
    UPDATE SET 
    MAS.PORT_USD_AMT = (CASE WHEN SUBSTR(PSO.YD_CD,1,5) IN ('EGSUZ','PAPAC') THEN 0
                           ELSE NVL(PSO.INV_USD_AMT,0) + DECODE(NVL(MAS.CHN_PORT_ADD_AMT,0),0,NVL(PSO.CHN_PORT_ADD_AMT,0),NVL(MAS.CHN_PORT_ADD_AMT,0)) + DECODE(NVL(MAS.ITA_PORT_ADD_AMT,0),0,NVL(PSO.ITA_PORT_ADD_AMT,0),NVL(MAS.ITA_PORT_ADD_AMT,0))
                       END),
    MAS.CNL_USD_AMT  = (CASE WHEN SUBSTR(PSO.YD_CD,1,5) NOT IN ('EGSUZ','PAPAC') THEN 0
                             ELSE NVL(PSO.INV_USD_AMT,0) + DECODE(NVL(MAS.CHN_PORT_ADD_AMT,0),0,NVL(PSO.CHN_PORT_ADD_AMT,0),NVL(MAS.CHN_PORT_ADD_AMT,0)) + DECODE(NVL(MAS.ITA_PORT_ADD_AMT,0),0,NVL(PSO.ITA_PORT_ADD_AMT,0),NVL(MAS.ITA_PORT_ADD_AMT,0))
                        END),
    MAS.PORT_ORG_AMT     = NVL(PSO.INV_USD_AMT,0),
    MAS.CHN_PORT_ADD_AMT = DECODE(NVL(MAS.CHN_PORT_ADD_AMT,0),0,NVL(PSO.CHN_PORT_ADD_AMT,0),NVL(MAS.CHN_PORT_ADD_AMT,0)),
    MAS.ITA_PORT_ADD_AMT = DECODE(NVL(MAS.ITA_PORT_ADD_AMT,0),0,NVL(PSO.ITA_PORT_ADD_AMT,0),NVL(MAS.ITA_PORT_ADD_AMT,0)),
    MAS.UPD_USR_ID       = @[user_id],
    MAS.UPD_DT           = SYSDATE
WHEN NOT MATCHED THEN
INSERT (SLAN_CD,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,TML_CD,PORT_USD_AMT,CNL_USD_AMT,PORT_ORG_AMT,CRE_USR_ID,CRE_DT,UPD_USR_ID,UPD_DT,CHN_PORT_ADD_AMT,ITA_PORT_ADD_AMT) 
 VALUES(@[slan_cd],@[vsl_cd],@[skd_voy_no],@[skd_dir_cd],PSO.YD_CD,
        (CASE WHEN SUBSTR(PSO.YD_CD,1,5) IN ('EGSUZ','PAPAC') THEN 0
              ELSE NVL(PSO.INV_USD_AMT,0)
        END),
        (CASE WHEN SUBSTR(PSO.YD_CD,1,5) IN ('EGSUZ','PAPAC') THEN NVL(PSO.INV_USD_AMT,0)
              ELSE 0
        END),
        NVL(PSO.INV_USD_AMT,0),
        @[user_id],sysdate,@[user_id],sysdate, NVL(PSO.CHN_PORT_ADD_AMT,0),NVL(PSO.ITA_PORT_ADD_AMT,0)                                           
 )			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="pso_max_seq" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="user_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
