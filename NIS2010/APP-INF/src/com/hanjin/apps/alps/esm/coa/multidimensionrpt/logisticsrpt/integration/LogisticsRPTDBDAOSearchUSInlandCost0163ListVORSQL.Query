<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LogisticsRPTDBDAOSearchUSInlandCost0163ListVORSQL">
			<desc><![CDATA[PRD_INLND_ROUT_MST 테이블의 데이터 조회]]></desc>
			<sql><![CDATA[
WITH LOC AS (
         SELECT *
           FROM
                (SELECT ROUT_ORG_NOD_CD                     AS FM_NOD
                      , SUBSTR(ROUT_ORG_NOD_CD,1,5)         AS FM_LOC
                      , COA_LOC_FNC(ROUT_ORG_NOD_CD,'ECC')  AS FM_ECC
                      , COA_LOC_FNC(ROUT_ORG_NOD_CD,'LCC')  AS FM_LCC
                      , COA_LOC_FNC(ROUT_ORG_NOD_CD,'RCC')  AS FM_RCC
                      , HUB_NOD_CD                          AS HUB_NOD
                      , SUBSTR(HUB_NOD_CD,1,5)              AS HUB_LOC
                      , COA_LOC_FNC(HUB_NOD_CD,'ECC')       AS HUB_ECC
                      , COA_LOC_FNC(HUB_NOD_CD,'LCC')       AS HUB_LCC
                      , COA_LOC_FNC(HUB_NOD_CD,'RCC')       AS HUB_RCC
                      , ROUT_DEST_NOD_CD                    AS TO_NOD
                      , SUBSTR(ROUT_DEST_NOD_CD,1,5)        AS TO_LOC
                      , COA_LOC_FNC(ROUT_DEST_NOD_CD,'ECC') AS TO_ECC
                      , COA_LOC_FNC(ROUT_DEST_NOD_CD,'LCC') AS TO_LCC
                      , COA_LOC_FNC(ROUT_DEST_NOD_CD,'RCC') AS TO_RCC
                      , ROUT_SEQ
                      , @[f_inout] AS INOUT
                      , DECODE(NVL(HUB_NOD_CD,'X'),'X','N','Y') ISHUB
                   FROM PRD_INLND_ROUT_MST M
                      , PRD_NODE N
                      , PRD_NODE N1
                  WHERE ROUT_ORG_NOD_CD LIKE @[f_from] ||'%'
                    AND ROUT_DEST_NOD_CD LIKE @[f_to] ||'%'
                    AND PCTL_IO_BND_CD                = @[f_inout]
                    AND NVL(M.DELT_FLG,'N')           = 'N'
                    AND NVL(INLND_ROUT_BKG_FLG, 'N')  = 'Y'
                    AND M.ROUT_ORG_NOD_CD             = N.NOD_CD
                    AND M.ROUT_DEST_NOD_CD            = N1.NOD_CD
                    AND  'OK' =   (CASE   WHEN @[f_inout] = 'I'  AND N.NOD_TP_CD IN ('M','B') AND @[f_group] = 'Door' AND N1.NOD_TP_CD ='Z' THEN 'OK' 
                                          WHEN @[f_inout] = 'I'  AND N.NOD_TP_CD IN ('M','B') AND @[f_group] = 'CY' AND N1.NOD_TP_CD <> 'Z' THEN 'OK' 
                                          WHEN @[f_inout] = 'O'  AND N1.NOD_TP_CD IN ('M','B') AND @[f_group] = 'Door' AND N.NOD_TP_CD ='Z' THEN 'OK' 
                                          WHEN @[f_inout] = 'O'  AND N1.NOD_TP_CD IN ('M','B') AND @[f_group] = 'CY' AND N.NOD_TP_CD <>'Z' THEN 'OK' ELSE 'XX'
                                   END)
               ORDER BY PRIO_SEQ, ROUT_SEQ
                )
          WHERE ROWNUM = 1
        )
      ,LNK AS (
         SELECT LNK_FM_NOD_CD
              , LNK_TO_NOD_CD
              , CNTR_TPSZ_CD
              , FULL_MTY_CD
              , COA_COST_SRC_CD
              , COST_LOC_GRP_CD
              , STND_COST_USD_AMT
           FROM COA_LNK_AVG_STND_COST A1
              , LOC A2
          WHERE COST_YRMON = CASE WHEN COA_BZC_COST_YRMON_FNC('')<TO_CHAR(SYSDATE,'yyyymm') THEN COA_BZC_COST_YRMON_FNC('') 
                                  ELSE TO_CHAR(SYSDATE, 'yyyymm') END
            AND CNTR_TPSZ_CD  <> 'BOX'
            AND LNK_FM_NOD_CD IN (A2.FM_LOC
                                 ,A2.FM_ECC
                                 ,A2.FM_LCC
                                 ,A2.FM_RCC 
                                 ,A2.HUB_LOC
                                 ,A2.HUB_ECC
                                 ,A2.HUB_LCC
                                 ,A2.HUB_RCC 
                                 ,A2.TO_LOC
                                 ,A2.TO_ECC
                                 ,A2.TO_LCC
                                 ,A2.TO_RCC) 
            AND LNK_TO_NOD_CD IN (A2.FM_LOC
                                 ,A2.FM_ECC
                                 ,A2.FM_LCC
                                 ,A2.FM_RCC 
                                 ,A2.HUB_LOC
                                 ,A2.HUB_ECC
                                 ,A2.HUB_LCC
                                 ,A2.HUB_RCC 
                                 ,A2.TO_LOC
                                 ,A2.TO_ECC
                                 ,A2.TO_LCC
                                 ,A2.TO_RCC 
                                 ) 
            AND ((FULL_MTY_CD = 'F' AND COST_LOC_GRP_CD = 'C' AND COA_COST_SRC_CD IN ('TRLCRD','TRLCTD','TRDRTD','SCFURD','SCFUTD')) OR 
                 (FULL_MTY_CD = 'M' AND COA_COST_SRC_CD IN ('TRMTRD','TRMTTD','SMFURD','SMFUTD')) )
            AND (A1.CNTR_TPSZ_CD LIKE 'D%' )
      UNION ALL
         SELECT B1.LNK_FM_NOD_CD
              , B1.LNK_TO_NOD_CD
              , B2.CNTR_TPSZ_CD
              , B1.FULL_MTY_CD
              , B1.COA_COST_SRC_CD
              , B1.COST_LOC_GRP_CD
              , B1.STND_COST_USD_AMT
           FROM
                (SELECT LNK_FM_NOD_CD
                      , LNK_TO_NOD_CD
                      , CNTR_TPSZ_CD
                      , FULL_MTY_CD
                      , COA_COST_SRC_CD
                      , COST_LOC_GRP_CD
                      , STND_COST_USD_AMT
                   FROM COA_LNK_AVG_STND_COST A1
                      , LOC A2
                  WHERE COST_YRMON = CASE WHEN COA_BZC_COST_YRMON_FNC('')<TO_CHAR(SYSDATE,'yyyymm') 
                                          THEN COA_BZC_COST_YRMON_FNC('') ELSE TO_CHAR(SYSDATE,'yyyymm') END
                    AND CNTR_TPSZ_CD  <> 'BOX'
                    AND LNK_FM_NOD_CD IN (A2.FM_LOC
                                         ,A2.FM_ECC
                                         ,A2.FM_LCC
                                         ,A2.FM_RCC 
                                         ,A2.HUB_LOC
                                         ,A2.HUB_ECC
                                         ,A2.HUB_LCC
                                         ,A2.HUB_RCC 
                                         ,A2.TO_LOC
                                         ,A2.TO_ECC
                                         ,A2.TO_LCC
                                         ,A2.TO_RCC) 
                    AND LNK_TO_NOD_CD IN (A2.FM_LOC
                                         ,A2.FM_ECC
                                         ,A2.FM_LCC
                                         ,A2.FM_RCC 
                                         ,A2.HUB_LOC
                                         ,A2.HUB_ECC
                                         ,A2.HUB_LCC
                                         ,A2.HUB_RCC 
                                         ,A2.TO_LOC
                                         ,A2.TO_ECC
                                         ,A2.TO_LCC
                                         ,A2.TO_RCC 
                                         ) 
                    AND ((FULL_MTY_CD = 'F' AND COST_LOC_GRP_CD = 'C' AND COA_COST_SRC_CD IN ('TRLCRD','TRLCTD','TRDRTD','SCFURD','SCFUTD')) OR 
                         (FULL_MTY_CD = 'M' AND COA_COST_SRC_CD IN ('TRMTRD','TRMTTD','SMFURD','SMFUTD')) )
                    AND A1.CNTR_TPSZ_CD IN ( '20', '40' )
                ) B1
              ,( SELECT DISTINCT SPCL_CNTR_TPSZ_CD AS CNTR_TPSZ_CD
                   FROM COA_SPCL_REPO_CNTR_RGST
                  WHERE SPCL_CNTR_TPSZ_CD NOT IN ('Q2','Q4')
                    AND SPCL_CNTR_TPSZ_CD NOT LIKE 'RD_'
                    AND DELT_FLG = 'N'
                    AND SPCL_CNTR_TPSZ_CD LIKE 'D%'
                ) B2
          WHERE SUBSTR(B1.CNTR_TPSZ_CD,1,1) = DECODE(SUBSTR(B2.CNTR_TPSZ_CD,-1),'2','2','3','2','4')
        )
 SELECT BOUND
      , CNTR_TPSZ_CD
      , FM_LOC
      , HUB_LOC
      , TO_LOC
      , TTL_COST
      , R_AMT
      , T_AMT
      , M_AMT
      , R_RMK
      , T_RMK
      , M_RMK
  FROM
       (
          SELECT DECODE(@[f_inout],'I','I/B','O','O/B') AS BOUND
              , E1.CNTR_TPSZ_CD
              , E1.FM_LOC
              , E1.HUB_LOC
              , E1.TO_LOC
              , SUM(ROUND(NVL(DECODE(E1.HUB_LOC,NULL,0,E1.R_LOC_AMT),0),0)) --location 단가만 사용
                +SUM(CASE WHEN @[f_group] ='CY' AND DECODE(@[f_inout],'I',E1.TO_LOC,'O',E1.FM_LOC) = E1.HUB_LOC THEN 0
                         ELSE ROUND(NVL(E1.T_LOC_AMT,0),0)
                    END) --location 단가만 사용
                +SUM(CASE WHEN @[f_inout]  ='O' OR ( @[f_inout] = 'I' AND  @[f_group] ='Door' AND E1.HUB_LOC =NULL ) THEN 0
                         ELSE ROUND(NVL(COALESCE(E1.M_LOC_AMT,E1.M_ECC_AMT,E1.M_LCC_AMT,E1.M_US_AMT,E1.M_RCC_AMT),0),0)
                    END) --Mty는 level 관계 없음
                AS TTL_COST
              , SUM(ROUND(NVL(DECODE(E1.HUB_LOC,NULL,0,E1.R_LOC_AMT),0),0)) AS R_AMT
              , MIN(DECODE(E1.HUB_LOC,NULL,'Y',NVL(E1.R_TRLCRD_FLG,'N'))) OVER (PARTITION BY E1.FM_LOC, E1.HUB_LOC, E1.TO_LOC)  ||
                MIN(DECODE(E1.HUB_LOC,NULL,'Y',NVL(E1.R_SCFURD_FLG,'N'))) OVER (PARTITION BY E1.FM_LOC, E1.HUB_LOC, E1.TO_LOC)  || 
                MIN(CASE WHEN @[f_group] ='CY' AND DECODE(@[f_inout],'I',E1.TO_LOC,'O',E1.FM_LOC) = E1.HUB_LOC THEN 'Y'
                         ELSE NVL(E1.T_TRCK_FLG,'N')
                    END) OVER (PARTITION BY E1.FM_LOC, E1.HUB_LOC, E1.TO_LOC)  ||
                MIN(CASE WHEN @[f_group] ='CY' AND DECODE(@[f_inout],'I',E1.TO_LOC,'O',E1.FM_LOC) = E1.HUB_LOC THEN 'Y'
                         ELSE NVL(E1.T_SCFUTD_FLG,'N')
                    END) OVER (PARTITION BY E1.FM_LOC, E1.HUB_LOC, E1.TO_LOC) COST_CHECK 
              , SUM(CASE WHEN @[f_group] ='CY' AND DECODE(@[f_inout],'I',E1.TO_LOC,'O',E1.FM_LOC) = E1.HUB_LOC THEN 0
                         ELSE ROUND(NVL(E1.T_LOC_AMT,0),0)
                    END) AS T_AMT
              , SUM(CASE WHEN @[f_inout]  ='O' OR ( @[f_inout] = 'I' AND  @[f_group] ='Door' AND E1.HUB_LOC =NULL ) THEN 0
                         ELSE ROUND(NVL(COALESCE(E1.M_LOC_AMT,E1.M_ECC_AMT,E1.M_LCC_AMT,E1.M_US_AMT,E1.M_RCC_AMT),0),0)
                    END) AS M_AMT
              , MAX(CASE WHEN NVL(E1.R_LOC_AMT,0) <> 0 THEN 'Location' END) AS R_RMK 
              , MAX(CASE WHEN NVL(E1.T_LOC_AMT,0) <> 0 THEN 'Location' END) AS T_RMK 
              , MAX(CASE WHEN NVL(E1.M_LOC_AMT,0) <> 0 THEN 'Location' 
                         WHEN NVL(E1.M_ECC_AMT,0) <> 0 THEN 'ECC' 
                         WHEN NVL(E1.M_LCC_AMT,0) <> 0 THEN 'LCC' 
                         WHEN NVL(E1.M_US_AMT,0) <> 0 THEN '80% of Full' 
                         WHEN NVL(E1.M_RCC_AMT,0) <> 0 THEN 'RCC' END) AS M_RMK 
           FROM
                (SELECT D1.CNTR_TPSZ_CD
                      , D1.FM_LOC
                      , D1.HUB_LOC
                      , D1.TO_LOC
                        ---> ANALYTIC FUNCTION
                      , MAX(SUM(D1.R_LOC_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  AS R_LOC_AMT
                      , MAX(R_TRLCRD_FLG) AS R_TRLCRD_FLG
                      , MAX(R_SCFURD_FLG) AS R_SCFURD_FLG
                      , MAX(SUM(D1.T_LOC_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  AS T_LOC_AMT
                      , MAX(T_TRCK_FLG) AS T_TRCK_FLG
                      , MAX(T_SCFUTD_FLG ) AS T_SCFUTD_FLG
                      , MAX(SUM(D1.M_LOC_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  AS M_LOC_AMT
                      , MAX(SUM(D1.M_ECC_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  AS M_ECC_AMT
                      , MAX(SUM(D1.M_LCC_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  AS M_LCC_AMT
                      , MAX(SUM(D1.M_US_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)   AS M_US_AMT
                      , MAX(SUM(D1.M_RCC_AMT)) OVER (PARTITION BY D1.FM_LOC, D1.HUB_LOC, D1.TO_LOC ORDER BY D1.CNTR_TPSZ_CD ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)  AS M_RCC_AMT
                      , MAX(M_TRMT_FLG) AS M_TRMT_FLG
                      , MAX(M_SCMT_FLG) AS M_SCMT_FLG
                   FROM
                        (
                         SELECT A2.FM_LOC
                              , A2.HUB_LOC
                              , A2.TO_LOC
                              , A1.CNTR_TPSZ_CD
                              , SUM(STND_COST_USD_AMT)                       AS R_LOC_AMT
                              , MAX(DECODE(A1.COA_COST_SRC_CD,'TRLCRD','Y')) AS R_TRLCRD_FLG
                              , MAX(DECODE(A1.COA_COST_SRC_CD,'SCFURD','Y')) AS R_SCFURD_FLG
                              , NULL                                         AS T_LOC_AMT
                              , NULL                                         AS T_TRCK_FLG
                              , NULL                                         AS T_SCFUTD_FLG
                              , NULL                                         AS M_LOC_AMT
                              , NULL                                         AS M_ECC_AMT
                              , NULL                                         AS M_LCC_AMT
                              , NULL                                         AS M_US_AMT
                              , NULL                                         AS M_RCC_AMT
                              , NULL                                         AS M_TRMT_FLG
                              , NULL                                         AS M_SCMT_FLG
                           FROM LNK A1
                              , LOC A2
                          WHERE A1.FULL_MTY_CD = 'F'
                            AND A1.COA_COST_SRC_CD IN ('TRLCRD','SCFURD')
                            AND A1.LNK_FM_NOD_CD || A1.LNK_TO_NOD_CD 
                                IN ( CASE WHEN A2.ISHUB = 'Y' THEN DECODE(A2.INOUT,'I', A2.FM_LOC, 'O', A2.HUB_LOC) END 
                                  || CASE WHEN A2.ISHUB = 'Y' THEN DECODE(A2.INOUT,'I', A2.HUB_LOC,'O', A2.TO_LOC) END )
                       GROUP BY A2.FM_LOC
                              , A2.HUB_LOC
                              , A2.TO_LOC
                              , A1.CNTR_TPSZ_CD
                              
                      UNION ALL
                      
                         SELECT A2.FM_LOC
                              , A2.HUB_LOC
                              , A2.TO_LOC
                              , A1.CNTR_TPSZ_CD
                              , NULL                                                                   AS R_LOC_AMT
                              , NULL                                                                   AS R_TRLCRD_FLG
                              , NULL                                                                   AS R_SCFURD_FLG
                              , NULL                                                                   AS T_LOC_AMT
                              , NULL                                                                   AS T_TRCK_FLG
                              , NULL                                                                   AS T_SCFUTD_FLG
                              , NULL                                                                   AS M_LOC_AMT
                              , NULL                                                                   AS M_ECC_AMT
                              , NULL                                                                   AS M_LCC_AMT
                              , SUM(CASE WHEN A1.COST_LOC_GRP_CD = 'C' THEN STND_COST_USD_AMT END)*0.8 AS M_US_AMT
                              , NULL                                                                   AS M_RCC_AMT
                              , NULL                                                                   AS M_TRMT_FLG
                              , NULL                                                                   AS M_SCMT_FLG
                           FROM LNK A1
                              , LOC A2
                          WHERE A1.FULL_MTY_CD      = 'F'
                            AND A1.COA_COST_SRC_CD IN('TRLCRD', 'SCFURD')
                            AND A1.COST_LOC_GRP_CD  = 'C'
                            AND A1.LNK_FM_NOD_CD    = CASE WHEN A2.ISHUB = 'Y' AND A2.INOUT = 'I' THEN A2.HUB_LOC ELSE 'ZZ' END
                            AND A1.LNK_TO_NOD_CD    = CASE WHEN A2.ISHUB = 'Y' AND A2.INOUT = 'I' THEN A2.FM_LOC  ELSE 'ZZ' END
                       GROUP BY A2.FM_LOC
                              , A2.HUB_LOC
                              , A2.TO_LOC
                              , A1.CNTR_TPSZ_CD
                              
                      UNION ALL
                      
                         SELECT C1.FM_LOC
                              , C1.HUB_LOC
                              , C1.TO_LOC
                              , C1.CNTR_TPSZ_CD
                              , NULL              AS R_LOC_AMT
                              , NULL              AS R_TRLCRD_FLG
                              , NULL              AS R_SCFURD_FLG
                              , SUM(C1.T_LOC_AMT) AS T_LOC_AMT
                              , MAX(T_TRCK_FLG)   AS T_TRCK_FLG
                              , MAX(T_SCFUTD_FLG) AS T_SCFUTD_FLG
                              , NULL              AS M_LOC_AMT
                              , NULL              AS M_ECC_AMT
                              , NULL              AS M_LCC_AMT
                              , NULL              AS M_US_AMT
                              , NULL              AS M_RCC_AMT
                              , NULL              AS M_TRMT_FLG
                              , NULL              AS M_SCMT_FLG
                           FROM
                                (
                                 SELECT A2.FM_LOC
                                      , A2.HUB_LOC
                                      , A2.TO_LOC
                                      , A1.CNTR_TPSZ_CD
                                      , SUM(CASE WHEN A2.INOUT = 'I' AND @[f_group] = 'CY' AND A2.ISHUB = 'Y' AND A2.HUB_NOD = A2.TO_NOD THEN NULL 
                                                 WHEN A2.INOUT = 'O' AND @[f_group] = 'CY' AND A2.ISHUB = 'Y' AND A2.HUB_NOD = A2.FM_NOD THEN NULL 
                                                 ELSE STND_COST_USD_AMT END) AS T_LOC_AMT
                                      , MAX(DECODE(A1.COA_COST_SRC_CD,DECODE(@[f_group],'CY','TRLCTD','Door','TRDRTD'),'Y')) AS T_TRCK_FLG
                                      , NULL AS T_SCFUTD_FLG
                                   FROM LNK A1
                                      , LOC A2
                                  WHERE A1.FULL_MTY_CD = 'F'
                                    AND A1.COA_COST_SRC_CD = DECODE(@[f_group],'CY','TRLCTD','Door','TRDRTD')
                                    AND A1.LNK_FM_NOD_CD || A1.LNK_TO_NOD_CD 
                                        IN ( CASE WHEN A2.ISHUB = 'Y' THEN DECODE(A2.INOUT,'I', A2.HUB_LOC, 'O', A2.FM_LOC) WHEN A2.ISHUB = 'N' THEN A2.FM_LOC END
                                          || CASE WHEN A2.ISHUB = 'Y' THEN DECODE(A2.INOUT,'I', A2.TO_LOC, 'O', A2.HUB_LOC) WHEN A2.ISHUB = 'N' THEN A2.TO_LOC END )
                               GROUP BY A2.FM_LOC
                                      , A2.HUB_LOC
                                      , A2.TO_LOC
                                      , A1.CNTR_TPSZ_CD
                                      
                              UNION ALL
                              
                                 SELECT A2.FM_LOC
                                      , A2.HUB_LOC
                                      , A2.TO_LOC
                                      , A1.CNTR_TPSZ_CD
                                      , SUM(CASE WHEN A2.INOUT = 'I' AND @[f_group] = 'CY' AND A2.ISHUB = 'Y' AND A2.HUB_NOD = A2.TO_NOD THEN NULL 
                                                 WHEN A2.INOUT = 'O' AND @[f_group] = 'CY' AND A2.ISHUB = 'Y' AND A2.HUB_NOD = A2.FM_NOD THEN NULL 
                                                 ELSE STND_COST_USD_AMT END) AS T_LOC_AMT
                                      , NULL AS T_TRCK_FLG
                                      , MAX(DECODE(A1.COA_COST_SRC_CD,'SCFUTD','Y')) AS T_SCFUTD_FLG
                                   from LNK A1
                                      , LOC A2
                                  WHERE A1.FULL_MTY_CD = 'F'
                                    AND A1.COA_COST_SRC_CD = 'SCFUTD'
                                    AND A1.LNK_FM_NOD_CD || A1.LNK_TO_NOD_CD
                                        IN ( CASE WHEN A2.ISHUB = 'Y' THEN DECODE(A2.INOUT,'I', A2.HUB_LOC, 'O', A2.FM_LOC) WHEN A2.ISHUB = 'N' THEN A2.FM_LOC END
                                          || CASE WHEN A2.ISHUB = 'Y' THEN DECODE(A2.INOUT,'I', A2.TO_LOC, 'O', A2.HUB_LOC) WHEN A2.ISHUB = 'N' THEN A2.TO_LOC END)
                               GROUP BY A2.FM_LOC
                                      , A2.HUB_LOC
                                      , A2.TO_LOC
                                      , A1.CNTR_TPSZ_CD
                                ) C1
                       GROUP BY C1.FM_LOC
                              , C1.HUB_LOC
                              , C1.TO_LOC
                              , C1.CNTR_TPSZ_CD
                      UNION ALL
                         
						 SELECT FM_LOC
							  , HUB_LOC
							  , TO_LOC
							  , CNTR_TPSZ_CD
							  , NULL AS R_LOC_AMT
							  , NULL AS R_TRLCRD_FLG
							  , NULL AS R_SCFURD_FLG
							  , NULL AS T_LOC_AMT
							  , NULL AS T_TRCK_FLG
							  , NULL AS T_SCFUTD_FLG
							  , SUM(M_LOC_AMT)  AS M_LOC_AMT
							  , SUM(M_ECC_AMT)  AS M_ECC_AMT
							  , SUM(M_LCC_AMT)  AS M_LCC_AMT
							  , NULL AS M_US_AMT
							  , SUM(M_RCC_AMT)  AS M_RCC_AMT
							  , MAX(M_TRMT_FLG) AS M_TRMT_FLG
							  , MAX(M_SCMT_FLG) AS M_SCMT_FLG
						   FROM
								(SELECT A2.FM_LOC
									  , A2.HUB_LOC
									  , A2.TO_LOC
									  , A1.CNTR_TPSZ_CD
									  , (CASE WHEN A1.COST_LOC_GRP_CD = 'C' THEN A1. STND_COST_USD_AMT END)     AS M_LOC_AMT
									  , (CASE WHEN A1.COST_LOC_GRP_CD = 'E' THEN A1. STND_COST_USD_AMT END)     AS M_ECC_AMT
									  , (CASE WHEN A1.COST_LOC_GRP_CD = 'L' THEN A1. STND_COST_USD_AMT END)     AS M_LCC_AMT
									  , (CASE WHEN A1.COST_LOC_GRP_CD = 'R' THEN A1. STND_COST_USD_AMT END)     AS M_RCC_AMT
									  , DECODE(A1.COA_COST_SRC_CD,DECODE(A2.ISHUB,'Y', 'TRMTRD', 'TRMTTD'),'Y') AS M_TRMT_FLG
									  , DECODE(A1.COA_COST_SRC_CD,DECODE(A2.ISHUB,'Y', 'SMFURD', 'SMFUTD'),'Y') AS M_SCMT_FLG
								   FROM LNK A1
									  , LOC A2
								  WHERE A1.FULL_MTY_CD  = 'M'
									AND A1.COA_COST_SRC_CD IN (DECODE(A2.ISHUB,'Y', 'TRMTRD', 'TRMTTD'), DECODE(A2.ISHUB,'Y', 'SMFURD', 'SMFUTD'))
									AND A2.INOUT        = 'I'
									AND A1.COST_LOC_GRP_CD || A1.LNK_FM_NOD_CD||A1.LNK_TO_NOD_CD                                     
										IN ( 'C'|| CASE WHEN A2.ISHUB = 'Y' THEN A2.HUB_LOC  WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.TO_LOC  ELSE '' END 
												|| CASE WHEN A2.ISHUB = 'Y' THEN A2.FM_LOC   WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.FM_LOC ELSE ''  END 
										   ,'E' || CASE WHEN A2.ISHUB = 'Y' THEN A2.HUB_ECC  WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.TO_LOC  ELSE '' END 
												|| CASE WHEN A2.ISHUB = 'Y' THEN A2.FM_ECC   WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.FM_LOC  ELSE '' END 
										   ,'L' || CASE WHEN A2.ISHUB = 'Y' THEN A2.HUB_LCC  WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.TO_LOC  ELSE '' END 
												|| CASE WHEN A2.ISHUB = 'Y' THEN A2.FM_LCC   WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.FM_LOC ELSE ''  END 
										   ,'R' || CASE WHEN A2.ISHUB = 'Y' THEN A2.HUB_RCC  WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.TO_LOC ELSE ''  END 
												|| CASE WHEN A2.ISHUB = 'Y' THEN A2.FM_RCC   WHEN A2.ISHUB = 'N' AND @[f_group] = 'CY'  THEN A2.FM_LOC ELSE ''  END 
										 ) 
								)
					   GROUP BY FM_LOC
							  , HUB_LOC
							  , TO_LOC
							  , CNTR_TPSZ_CD
                           
                        ) D1
               GROUP BY D1.CNTR_TPSZ_CD
                      , D1.FM_LOC
                      , D1.HUB_LOC
                      , D1.TO_LOC
                ) E1
       GROUP BY E1.CNTR_TPSZ_CD
              , E1.FM_LOC
              , E1.HUB_LOC
              , E1.TO_LOC
              , E1.R_TRLCRD_FLG
              , E1.R_SCFURD_FLG
              , E1.T_TRCK_FLG
              , E1.T_SCFUTD_FLG
        )   
      WHERE COST_CHECK ='YYYY'			]]></sql>
			<params>
				<param name="f_inout" type="12" value="" out="N"/>
				<param name="f_from" type="12" value="" out="N"/>
				<param name="f_to" type="12" value="" out="N"/>
				<param name="f_group" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
