<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="QtaAdjustmentDBDAOCreatePotnAdjustmentCSQL">
			<desc><![CDATA[[QTA Adjustment by VVD]
[Portion Adjustment by Head Office]
[Portion Adjustment by RHQ] 에서 확정데이터를 [재생성] 합니다

* 2014.01.09 박은주 [CHM-201428372] SELBB, TYOBB 조직 LEVEL 변경 건
* 2014.09.11 이혜민 [CHM-201431936] 신규 Office Add시 Alloc받은 VVD에 상관없이 I로 insert가 되는 문제 수정
* 2015.02.27 이혜민 Creation시 Week 기준이던 것을 SLS_YR+BSE_WK 로 기준으로 변경
* 2015.06.15 김용습 [CHM-201536164] 주간 MAS Open에 따른 타모듈 프로그램 적용 요청
* 2015.08.10 김용습 [CHM-201536994] Split24-[그룹사 표준 코드 시행] SML 프로그램 대응 및 데이타 마이그레이션 작업 요청
2016.03.22 CHM-201640708 Office별 포션 자동 입력 로직 수정
2016.05.18 잘못된 주차 PORTION을 읽는 버그 수정
2016.06.15 SELCMI 예외처리로직 추가]]></desc>
			<sql><![CDATA[
INSERT INTO SQM_CFM_QTA (
     QTA_RLSE_VER_NO
    ,BSE_TP_CD
    ,BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,QTA_TGT_CD
    ,TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,VSL_CD
    ,SKD_VOY_NO
    ,SKD_DIR_CD
    ,RGN_OFC_CD
    ,RHQ_CD
    ,AQ_CD
    ,CONV_DIR_CD
    ,LOD_QTY
    ,GRS_RPB_REV
    ,PA_CM_UC_AMT
    ,RA_CM_UC_AMT
    ,SQM_CNG_TP_CD
    ,CRE_USR_ID
    ,CRE_DT
    ,UPD_USR_ID
    ,UPD_DT
) 
#if (${ibflag} == 'I')
SELECT Q.QTA_RLSE_VER_NO
      ,Q.BSE_TP_CD
      ,Q.BSE_YR
      ,Q.BSE_QTR_CD
      ,Q.OFC_VW_CD
      ,Q.QTA_TGT_CD
      ,Q.TRD_CD
      ,Q.RLANE_CD
      ,Q.DIR_CD
      ,SUBSTR(@[mas_vvd], 1, 4) AS VSL_CD    
      ,SUBSTR(@[mas_vvd], 5, 4) AS SKD_VOY_NO
      ,SUBSTR(@[mas_vvd], 9, 1) AS SKD_DIR_CD
      ,Q.RGN_OFC_CD
      ,Q.RHQ_CD
      ,Q.AQ_CD
      ,Q.CONV_DIR_CD
      ,Q.LOD_QTY
      ,Q.GRS_RPB_REV
      ,Q.PA_CM_UC_AMT
      ,Q.RA_CM_UC_AMT
      ,Q.SQM_CNG_TP_CD
      ,Q.CRE_USR_ID
      ,Q.CRE_DT
      ,Q.UPD_USR_ID
      ,Q.UPD_DT
  FROM (
#end
SELECT QTA_RLSE_VER_NO
,BSE_TP_CD 
,BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,QTA_TGT_CD
,TRD_CD
,RLANE_CD
,DIR_CD
,VSL_CD
,SKD_VOY_NO
,SKD_DIR_CD
,RGN_OFC_CD
,DECODE(BSE_YR||BSE_QTR_CD, '20141Q', DECODE(RGN_OFC_CD, 'SELSC', 'SELIB', 'TYOSC', 'TYOIB', RHQ_CD), RHQ_CD) AS RHQ_CD
,AQ_CD
,CONV_DIR_CD

--,RHQ_RNK
--,LOD_RNK
--,LOD_QTY
--,DECODE(LOD_QTY, 0,0, OFC_REV/LOD_QTY) AS GRS_RPB_REV
,CASE WHEN OLD_OFC_LOD = 0 AND LOD_RNK = 1 THEN LOD_QTY
      ELSE OLD_OFC_LOD END AS LOD_QTY
,CASE WHEN OLD_OFC_LOD = 0 AND LOD_RNK = 1 THEN NVL(TOTAL_REV*NVL(CFM_RATIO, NVL(PLAN_RATIO,0))/DECODE(LOD_QTY, 0, NULL, LOD_QTY), 0)
      ELSE DECODE(OLD_OFC_LOD, 0,0, NVL(OLD_OFC_REV/DECODE(OLD_OFC_LOD,0,NULL,OLD_OFC_LOD),0)) END AS GRS_RPB_REV
--,CASE WHEN LOD_QTY = 0 THEN 0
--	WHEN RHQ_RNK||LOD_RNK = '11' THEN GRS_RPB_REV - NVL(((SUM(LOD_QTY*GRS_RPB_REV) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) - ( SELECT AA.GRS_REV FROM SQM_CFM_TGT_VVD AA
--                                                                                            WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
--                                                                                            AND AA.BSE_TP_CD = Z.BSE_TP_CD
--                                                                                            AND AA.BSE_YR = Z.BSE_YR
--                                                                                            AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
--                                                                                            AND AA.TRD_CD = Z.TRD_CD
--                                                                                            AND AA.RLANE_CD = Z.RLANE_CD
--                                                                                            AND AA.DIR_CD = Z.DIR_CD
--                                                                                            AND AA.VSL_CD = Z.VSL_CD
--                                                                                            AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
--                                                                                            AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
--                                                                                            AND AA.QTA_TGT_CD = 'D'))/LOD_QTY),0)
--    ELSE GRS_RPB_REV END AS GRS_RPB_REV
,PA_CM_UC_AMT
,RA_CM_UC_AMT
,'I' AS SQM_CNG_TP_CD
,@[f_usr_id] AS CRE_USR_ID
,SYSDATE     AS CRE_DT
,@[f_usr_id] AS UPD_USR_ID
,SYSDATE     AS UPD_DT 
FROM
(
        SELECT QTA_RLSE_VER_NO
              ,BSE_TP_CD 
              ,BSE_YR
              ,BSE_QTR_CD
              ,OFC_VW_CD
              ,QTA_TGT_CD
              ,TRD_CD
              ,RLANE_CD
              ,DIR_CD
              ,VSL_CD
              ,SKD_VOY_NO
              ,SKD_DIR_CD
              ,RGN_OFC_CD
              ,DECODE(BSE_YR||BSE_QTR_CD, '20141Q', DECODE(RGN_OFC_CD, 'SELSC', 'SELIB', 'TYOSC', 'TYOIB', RHQ_CD), RHQ_CD) AS RHQ_CD
              ,AQ_CD
              ,CONV_DIR_CD
              
              ,RHQ_RNK
              ,LOD_RNK
              ,OLD_OFC_LOD
              ,OLD_OFC_REV
              ,TOTAL_REV
--              ,LOD_QTY
--              ,DECODE(LOD_QTY, 0,0, OFC_REV/LOD_QTY) AS GRS_RPB_REV

              ,(SELECT DISTINCT REV_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT K
                WHERE K.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
                    AND K.BSE_TP_CD = Z.BSE_TP_CD
                    AND K.BSE_YR = Z.BSE_YR
                    AND K.BSE_QTR_CD = Z.BSE_QTR_CD
                    AND K.OFC_VW_CD = Z.OFC_VW_CD
                    AND K.QTA_STEP_CD = '02'
                    AND K.TRD_CD = Z.TRD_CD
                    AND K.RLANE_CD = Z.RLANE_CD
                    AND K.DIR_CD = Z.DIR_CD
                    AND K.RHQ_CD = Z.RHQ_CD
                    AND K.RGN_OFC_CD = Z.RHQ_CD
                    AND ROWNUM < 2
                    AND VVD_WK BETWEEN SUBSTR(K.APLY_FM_YRWK, 5, 2) AND SUBSTR(K.APLY_TO_YRWK, 5, 2)) AS CFM_RATIO
                    
             ,(SELECT DISTINCT REV_POTN_RTO/100 FROM SQM_QTA_POTN_MGMT L
                WHERE L.BSE_TP_CD = Z.BSE_TP_CD
                    AND L.BSE_YR = Z.BSE_YR
                    AND L.BSE_QTR_CD = Z.BSE_QTR_CD
                    AND L.OFC_VW_CD = Z.OFC_VW_CD
                    AND L.QTA_STEP_CD = '02'
                    AND L.RHQ_CD = Z.RHQ_CD
                    AND L.RGN_OFC_CD = Z.RHQ_CD
                    AND L.TRD_CD = Z.TRD_CD
                    AND L.RLANE_CD = Z.RLANE_CD
                    AND L.DIR_CD = Z.DIR_CD
                    AND ROWNUM < 2) AS PLAN_RATIO
                    
            ,CASE WHEN RHQ_RNK||LOD_RNK = '11' THEN LOD_QTY - 
                                                    ((SUM(LOD_QTY) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD)) - 
                                                    (SELECT AA.LOD_QTY FROM SQM_CFM_TGT_VVD AA
                                                    WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
                                                    AND AA.BSE_TP_CD = Z.BSE_TP_CD
                                                    AND AA.BSE_YR = Z.BSE_YR
                                                    AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
                                                    AND AA.TRD_CD = Z.TRD_CD
                                                    AND AA.RLANE_CD = Z.RLANE_CD
                                                    AND AA.DIR_CD = Z.DIR_CD
                                                    AND AA.VSL_CD = Z.VSL_CD
                                                    AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
                                                    AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
                                                    AND AA.QTA_TGT_CD = 'D')) ELSE LOD_QTY END AS LOD_QTY

--            ,CASE WHEN RHQ_RNK||LOD_RNK = '11' THEN DECODE((LOD_QTY - 
--                                                    ((SUM(LOD_QTY) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD)) - 
--                                                    (SELECT AA.LOD_QTY FROM SQM_CFM_TGT_VVD AA
--                                                    WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
--                                                    AND AA.BSE_TP_CD = Z.BSE_TP_CD
--                                                    AND AA.BSE_YR = Z.BSE_YR
--                                                    AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
--                                                    AND AA.TRD_CD = Z.TRD_CD
--                                                    AND AA.RLANE_CD = Z.RLANE_CD
--                                                    AND AA.DIR_CD = Z.DIR_CD
--                                                    AND AA.VSL_CD = Z.VSL_CD
--                                                    AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
--                                                    AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
--                                                    AND AA.QTA_TGT_CD = 'D'))), 0,0, OFC_REV/(LOD_QTY - 
--                                                    ((SUM(LOD_QTY) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD)) - 
--                                                    (SELECT AA.LOD_QTY FROM SQM_CFM_TGT_VVD AA
--                                                    WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
--                                                    AND AA.BSE_TP_CD = Z.BSE_TP_CD
--                                                    AND AA.BSE_YR = Z.BSE_YR
--                                                    AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
--                                                    AND AA.TRD_CD = Z.TRD_CD
--                                                    AND AA.RLANE_CD = Z.RLANE_CD
--                                                    AND AA.DIR_CD = Z.DIR_CD
--                                                    AND AA.VSL_CD = Z.VSL_CD
--                                                    AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
--                                                    AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
--                                                    AND AA.QTA_TGT_CD = 'D')))) - DECODE((LOD_QTY - 
--                                                    ((SUM(LOD_QTY) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD)) - 
--                                                    (SELECT AA.LOD_QTY FROM SQM_CFM_TGT_VVD AA
--                                                    WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
--                                                    AND AA.BSE_TP_CD = Z.BSE_TP_CD
--                                                    AND AA.BSE_YR = Z.BSE_YR
--                                                    AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
--                                                    AND AA.TRD_CD = Z.TRD_CD
--                                                    AND AA.RLANE_CD = Z.RLANE_CD
--                                                    AND AA.DIR_CD = Z.DIR_CD
--                                                    AND AA.VSL_CD = Z.VSL_CD
--                                                    AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
--                                                    AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
--                                                    AND AA.QTA_TGT_CD = 'D'))),0,0,(SUM(OFC_REV) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD)
--                                                      - (SELECT AA.GRS_REV FROM SQM_CFM_TGT_VVD AA
--                                                                                            WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
--                                                                                            AND AA.BSE_TP_CD = Z.BSE_TP_CD
--                                                                                            AND AA.BSE_YR = Z.BSE_YR
--                                                                                            AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
--                                                                                            AND AA.TRD_CD = Z.TRD_CD
--                                                                                            AND AA.RLANE_CD = Z.RLANE_CD
--                                                                                            AND AA.DIR_CD = Z.DIR_CD
--                                                                                            AND AA.VSL_CD = Z.VSL_CD
--                                                                                            AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
--                                                                                            AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
--                                                                                            AND AA.QTA_TGT_CD = 'D'))/(LOD_QTY - 
--                                                    ((SUM(LOD_QTY) OVER (PARTITION BY OFC_VW_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD)) - 
--                                                    (SELECT AA.LOD_QTY FROM SQM_CFM_TGT_VVD AA
--                                                    WHERE AA.QTA_RLSE_VER_NO = Z.QTA_RLSE_VER_NO
--                                                    AND AA.BSE_TP_CD = Z.BSE_TP_CD
--                                                    AND AA.BSE_YR = Z.BSE_YR
--                                                    AND AA.BSE_QTR_CD = Z.BSE_QTR_CD
--                                                    AND AA.TRD_CD = Z.TRD_CD
--                                                    AND AA.RLANE_CD = Z.RLANE_CD
--                                                    AND AA.DIR_CD = Z.DIR_CD
--                                                    AND AA.VSL_CD = Z.VSL_CD
--                                                    AND AA.SKD_VOY_NO = Z.SKD_VOY_NO
--                                                    AND AA.SKD_DIR_CD = Z.SKD_DIR_CD
--                                                    AND AA.QTA_TGT_CD = 'D')))) ELSE DECODE((DECODE(OLD_OFC_LOD||LOD_RNK,'01',LOD_QTY,OLD_OFC_LOD)),0,0, NVL((OFC_REV/(DECODE(OLD_OFC_LOD||LOD_RNK,'01',LOD_QTY,OLD_OFC_LOD))),0)) END AS GRS_RPB_REV
              ,PA_CM_UC_AMT
              ,RA_CM_UC_AMT                     
          FROM (          
          
#if (${f_gubun} != 'RHQ' || ${f_gubun} == 'VVD')          
WITH RATIO AS
(
SELECT QTA_RLSE_VER_NO
, BSE_TP_CD
, BSE_QTR_CD
, OFC_VW_CD
, QTA_TGT_CD
, TRD_CD
, RLANE_CD
, DIR_CD
, BSE_WK
, VSL_CD
, SKD_VOY_NO
, SKD_DIR_CD
, NVL((100-SUM(LOAD_PORTION))/100, 0) AS LOAD_RATIO -- 지역 오피스까지 포션이 배부된 RHQ들의 총 포션의 합의 백분율(전체100에서 지역오피스 레벨까지 포션이 배부되지 않은 RHQ의 포션을 뺀 수치)
, NVL((100-SUM(REV_PORTION))/100, 0) AS REV_RATIO -- 지역 오피스까지 포션이 배부된 RHQ들의 총 포션의 합의 백분율(전체100에서 지역오피스 레벨까지 포션이 배부되지 않은 RHQ의 포션을 뺀 수치)
FROM
    (
    SELECT KK.QTA_RLSE_VER_NO
    , KK.BSE_TP_CD
    , KK.BSE_QTR_CD
    , KK.OFC_VW_CD
    , KK.QTA_TGT_CD
    , KK.TRD_CD
    , KK.RLANE_CD
    , KK.DIR_CD
    , KK.BSE_WK
    , KK.VSL_CD
    , KK.SKD_VOY_NO
    , KK.SKD_DIR_CD
    , KK.RHQ_CD
    , KK.OFC_LOD
    , KK.OFC_REV
    ,(SELECT CQP.LOD_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CQP 
    WHERE CQP.QTA_RLSE_VER_NO = KK.QTA_RLSE_VER_NO
    AND CQP.BSE_TP_CD = KK.BSE_TP_CD
    --AND CQP.BSE_YR = KK.BSE_YR
    AND CQP.BSE_QTR_CD = KK.BSE_QTR_CD
    AND CQP.OFC_VW_CD = KK.OFC_VW_CD
    AND CQP.QTA_STEP_CD = '02'
    AND CQP.TRD_CD = KK.TRD_CD
    AND CQP.RLANE_CD = KK.RLANE_CD
    AND CQP.DIR_CD = KK.DIR_CD
    AND CQP.RHQ_CD = KK.RHQ_CD
    AND CQP.RGN_OFC_CD = KK.RHQ_CD
    AND KK.BSE_WK BETWEEN SUBSTR(CQP.APLY_FM_YRWK, 5, 2) AND SUBSTR(CQP.APLY_TO_YRWK, 5, 2)) LOAD_PORTION
    ,(SELECT CQP.REV_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CQP 
    WHERE CQP.QTA_RLSE_VER_NO = KK.QTA_RLSE_VER_NO
    AND CQP.BSE_TP_CD = KK.BSE_TP_CD
    --AND CQP.BSE_YR = KK.BSE_YR
    AND CQP.BSE_QTR_CD = KK.BSE_QTR_CD
    AND CQP.OFC_VW_CD = KK.OFC_VW_CD
    AND CQP.QTA_STEP_CD = '02'
    AND CQP.TRD_CD = KK.TRD_CD
    AND CQP.RLANE_CD = KK.RLANE_CD
    AND CQP.DIR_CD = KK.DIR_CD
    AND CQP.RHQ_CD = KK.RHQ_CD
    AND CQP.RGN_OFC_CD = KK.RHQ_CD
    AND KK.BSE_WK BETWEEN SUBSTR(CQP.APLY_FM_YRWK, 5, 2) AND SUBSTR(CQP.APLY_TO_YRWK, 5, 2)) REV_PORTION
    FROM        
    (SELECT QTA_RLSE_VER_NO
    , BSE_TP_CD
    , BSE_QTR_CD
    , OFC_VW_CD
    , QTA_TGT_CD
    , TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_WK
    , VSL_CD
    , SKD_VOY_NO
    , SKD_DIR_CD
    , RHQ_CD
    , SUM(OFC_LOD) OFC_LOD
    , SUM(OFC_REV) OFC_REV
    FROM
    (
    SELECT SUBSTR(E1.BSE_YR,-2)||E1.BSE_QTR_CD||'02' AS QTA_RLSE_VER_NO
        ,E1.BSE_TP_CD
        ,E1.BSE_YR
        ,E1.BSE_QTR_CD
        ,E1.OFC_VW_CD
        ,E1.QTA_TGT_CD
        ,E1.TRD_CD
        ,E1.RLANE_CD
        ,E1.DIR_CD
        ,E1.BSE_WK
        ,E1.SLS_YRWK
        ,E1.SUB_TRD_CD
        ,E1.HUL_BND_CD
        ,E1.OB_DIV_CD
        ,E1.FNL_BSA_CAPA
        ,E1.VSL_CD
        ,E1.SKD_VOY_NO
        ,E1.SKD_DIR_CD
        ,E1.RGN_OFC_CD
        ,E1.RHQ_CD
        ,E1.CONV_DIR_CD
        ,(E1.RHQ_QTY - SUM(ROUND(E1.RHQ_QTY * NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO), 0)) OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.RHQ_CD)) AS RHQ_LOD_DIFF
        ,ROUND(E1.RHQ_QTY * (NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO)), 0) AS OFC_LOD
        ,DECODE(RHQ_QTY, 0, 0, RHQ_REV * NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO)) AS OFC_REV
        ,SUM(ROUND(E1.RHQ_QTY * (NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO)), 0)) OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.RHQ_CD) AS RHQ_LOD_SUM
        ,SUM(DECODE(RHQ_QTY, 0, 0, RHQ_REV * NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO))) OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.RHQ_CD) AS RHQ_REV_SUM
        ,E2.PA_CM_UC_AMT
        ,E2.RA_CM_UC_AMT
        ,NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO) AS OFC_LOD_RTO
        ,NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO) AS OFC_REV_RTO
        ,E1.RHQ_LOD_RTO
        ,E1.RHQ_REV_RTO
        ,E1.RHQ_RNK
        ,E1.RHQ_QTY
        ,E1.RHQ_REV
        ,E1.ORG_LOD
        ,E1.ORG_REV
        ,ROW_NUMBER() OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.RHQ_CD, E1.TRD_CD, E1.DIR_CD, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO ORDER BY NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO) DESC, E1.RGN_OFC_CD) AS LOD_RNK
        ,ROW_NUMBER() OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.RHQ_CD, E1.TRD_CD, E1.DIR_CD, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO ORDER BY NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO) DESC, E1.RGN_OFC_CD) AS REV_RNK
    FROM (
          SELECT D2.BSE_TP_CD
                ,D2.BSE_YR
                ,D2.BSE_QTR_CD
                ,D2.OFC_VW_CD
                ,D1.QTA_STEP_CD
                ,D2.TRD_CD
                ,D2.RLANE_CD
                ,D1.DIR_CD
                ,D2.SUB_TRD_CD
                ,D2.HUL_BND_CD
                ,D2.OB_DIV_CD
                ,D2.FNL_BSA_CAPA                                            
                ,D2.VSL_CD
                ,D2.SKD_VOY_NO
                ,D2.SKD_DIR_CD
                ,D2.BSE_WK
                ,D2.SLS_YRWK
                ,D1.RGN_OFC_CD
                ,D2.RHQ_CD
                ,D2.CONV_DIR_CD
                ,D1.OFC_LOD_RTO
                ,D1.OFC_REV_RTO
                ,D2.RHQ_QTY
                ,D2.RHQ_REV
                ,D2.QTA_TGT_CD
                ,D2.RHQ_RNK
                ,D2.RHQ_LOD_RTO
                ,D2.RHQ_REV_RTO
                ,D2.ORG_LOD
                ,D2.ORG_REV
            FROM (
                  SELECT A1.BSE_TP_CD
                        ,A1.BSE_YR
                        ,A1.BSE_QTR_CD
                        ,A1.OFC_VW_CD
                        ,NVL(A2.QTA_STEP_CD, DECODE(A1.OFC_VW_CD, 'L', '03', DECODE(A4.OB_DIV_CD, 'N', '04', 'O', '05'))) AS QTA_STEP_CD
                        ,A1.TRD_CD
                        ,A1.DIR_CD
                        ,NVL(A3.CONV_DIR_CD, A1.DIR_CD) AS CONV_DIR_CD
                        ,A1.RLANE_CD
                        ,A1.RHQ_CD
                        ,A1.RGN_OFC_CD
                        ,NVL(A2.LOD_POTN_RTO,0) / 100 AS OFC_LOD_RTO
                        ,NVL(A2.REV_POTN_RTO,0) / 100 AS OFC_REV_RTO
                    FROM SQM_QTA_LANE_OFC A1
                        ,SQM_QTA_POTN_MGMT A2
                        ,SQM_DIR_CONV A3
                        ,SQM_DAT_RLT A4
                   WHERE 1=1
                     AND A1.BSE_TP_CD   = A2.BSE_TP_CD(+)
                     AND A1.BSE_YR      = A2.BSE_YR(+)
                     AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD(+)
                     AND A1.OFC_VW_CD   = A2.OFC_VW_CD(+)
                     AND A1.TRD_CD      = A2.TRD_CD(+)
                     AND A1.DIR_CD      = A2.DIR_CD(+)
                     AND A1.RHQ_CD      = A2.RHQ_CD(+)
                     AND A1.RLANE_CD    = A2.RLANE_CD(+)
                     AND A1.RGN_OFC_CD  = A2.RGN_OFC_CD(+)
                     
                     AND A1.BSE_TP_CD   = A3.BSE_TP_CD(+)
                     AND A1.BSE_YR      = A3.BSE_YR(+)
                     AND A1.BSE_QTR_CD  = A3.BSE_QTR_CD(+)
                     AND A1.TRD_CD      = A3.TRD_CD(+)
                     AND A1.RLANE_CD    = A3.RLANE_CD(+)
                     AND A1.DIR_CD      = A3.DIR_CD(+)
                     
                     AND A1.BSE_TP_CD   = A4.BSE_TP_CD
                     AND A1.BSE_YR      = A4.BSE_YR
                     AND A1.BSE_QTR_CD  = A4.BSE_QTR_CD
                     AND A1.OFC_VW_CD   = A4.OFC_VW_CD
                     AND A1.TRD_CD      = A4.TRD_CD
                     AND A1.RLANE_CD    = DECODE(UPPER(A4.RLANE_CD),'ALL',A1.RLANE_CD, A4.RLANE_CD)
                     AND A1.RHQ_CD      = A4.RHQ_CD
                     AND NVL(A3.CONV_DIR_CD, A1.DIR_CD) = A4.CONV_DIR_CD

                     AND A1.BSE_TP_CD   = @[f_bse_tp_cd]
                     AND A1.BSE_YR      = @[f_bse_yr]
                     AND A1.BSE_QTR_CD  = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
    #if (${f_ofc_vw_cd} != '' && ${f_ofc_vw_cd} != 'All')
                     AND A1.OFC_VW_CD   = @[f_ofc_vw_cd]
    #end
    #if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                     AND A1.TRD_CD      = @[f_trd_cd]
    #end
    #if (${rlane_cd} != '' && ${rlane_cd} != 'All')
                     AND A1.RLANE_CD    = @[rlane_cd] -- Adjustment by VVD
    #end
    #if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                     AND A1.RLANE_CD    IN (${f_rlane_cd})-- Portion Adjustment by HO/RHQ
    #end
    #if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                     AND A1.DIR_CD      = @[f_dir_cd]
    #end
    #if (${f_click} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')
                     AND NVL(A3.CONV_DIR_CD, A1.DIR_CD) = @[f_conv_dir_cd]
    #end
                     AND A1.SQM_ACT_FLG = 'Y'
                     AND A2.QTA_STEP_CD(+) <> '02'
                  ) D1
                ,(
                  SELECT C1.BSE_TP_CD
                        ,C1.BSE_YR
                        ,C1.BSE_QTR_CD
                        ,C1.OFC_VW_CD
                        ,C1.QTA_TGT_CD
                        ,C1.TRD_CD
                        ,C1.SUB_TRD_CD
                        ,C1.HUL_BND_CD
                        ,C1.OB_DIV_CD
                        ,C1.FNL_BSA_CAPA
                        ,C1.RLANE_CD
                        ,C1.CONV_DIR_CD
                        ,C1.DIR_CD
                        ,C1.BSE_WK
                        ,C1.SLS_YRWK
                        ,C1.VSL_CD
                        ,C1.SKD_VOY_NO
                        ,C1.SKD_DIR_CD
                        ,C1.RHQ_CD
                        ,C1.LOAD_RNK AS RHQ_RNK
                        ,DECODE(C1.LOAD_RNK, '1', C1.RHQ_QTY + (C1.ORG_VVD_BSA - C1.SUM_RHQ_QTY), C1.RHQ_QTY) AS RHQ_QTY
                        ,C1.GRS_REV * C1.RHQ_REV_RTO AS RHQ_REV
                        ,C1.RHQ_REV_RTO
                        ,C1.RHQ_LOD_RTO
                        ,C1.ORG_VVD_BSA AS ORG_LOD
                        ,C1.GRS_REV AS ORG_REV
                   FROM (
                         SELECT B2.BSE_TP_CD
                               ,B2.BSE_YR
                               ,B2.BSE_QTR_CD
                               ,B2.OFC_VW_CD
                               ,B2.QTA_TGT_CD
                               ,B2.TRD_CD
                               ,B2.SUB_TRD_CD
                               ,B2.HUL_BND_CD
                               ,B2.OB_DIV_CD
                               ,B2.FNL_BSA_CAPA                                                           
                               ,B2.RLANE_CD
                               ,B2.CONV_DIR_CD
                               ,B2.DIR_CD
                               ,B2.BSE_WK
                               ,B2.SLS_YRWK
                               ,SUBSTR(B1.APLY_FM_YRWK,-2) AS APLY_FM_WK
                               ,SUBSTR(B1.APLY_TO_YRWK,-2) AS APLY_TO_WK
                               ,B1.APLY_FM_YRWK
                               ,B1.APLY_TO_YRWK
                               ,B2.VSL_CD
                               ,B2.SKD_VOY_NO
                               ,B2.SKD_DIR_CD
                               ,B2.RHQ_CD
                               ,NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO) /100 AS RHQ_LOD_RTO
                               ,NVL(B1.REV_POTN_RTO,B2.RHQ_REV_RTO) /100 AS RHQ_REV_RTO
                               ,B2.GRS_REV
                               -- RHQ 별 물량을 구하기
                               ,B2.LOD_QTY AS ORG_VVD_BSA
                               ,ROUND(B2.LOD_QTY * NVL(NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO),0)/100, 0) AS RHQ_QTY
                               ,SUM(ROUND(B2.LOD_QTY * NVL(NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO),0)/100, 0)) OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD) AS SUM_RHQ_QTY
                               ,ROW_NUMBER() OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD ORDER BY NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO) DESC, B1.RHQ_CD) LOAD_RNK
                           FROM SQM_CFM_QTA_POTN_MGMT B1
                               ,(
                                 SELECT DISTINCT 
                                        A1.BSE_TP_CD
                                       ,A1.BSE_YR
                                       ,A1.BSE_QTR_CD
                                       ,A5.OFC_VW_CD
                                       ,NVL(A2.QTA_STEP_CD, '02') AS QTA_STEP_CD
                                       ,A1.TRD_CD
                                       ,A1.SUB_TRD_CD
                                       ,A1.RLANE_CD
                                       ,A4.HUL_BND_CD
                                       ,A3.OB_DIV_CD
                                       ,A1.FNL_BSA_CAPA 
                                       ,A1.CONV_DIR_CD
                                       ,A1.DIR_CD
                                       ,A1.BSE_WK
                                       ,A1.SLS_YRMON
                                       ,SUBSTR(A1.SLS_YRMON,0,4)||A1.BSE_WK AS SLS_YRWK
                                       ,A1.VSL_CD
                                       ,A1.SKD_VOY_NO
                                       ,A1.SKD_DIR_CD
                                       ,A5.RHQ_CD
                                       ,NVL(A2.LOD_POTN_RTO, 0) AS RHQ_LOD_RTO
                                       ,NVL(A2.REV_POTN_RTO, 0) AS RHQ_REV_RTO
                                       ,A1.GRS_REV
                                       ,A1.LOD_QTY
                                       ,A1.QTA_TGT_CD
                                   FROM SQM_CFM_TGT_VVD A1
                                       ,SQM_QTA_LANE_OFC A5
                                       ,SQM_QTA_POTN_MGMT A2
                                       ,SQM_DAT_RLT A3
                                       ,MAS_LANE_RGST A4
                                  WHERE 1=1
                                    AND A1.BSE_TP_CD     = A5.BSE_TP_CD
                                    AND A1.BSE_YR        = A5.BSE_YR
                                    AND A1.BSE_QTR_CD    = A5.BSE_QTR_CD
                                    AND A1.TRD_CD        = A5.TRD_CD
                                    AND A1.RLANE_CD      = A5.RLANE_CD
                                    AND A1.DIR_CD        = A5.DIR_CD
                                    AND A5.SQM_ACT_FLG   = 'Y'
                                    
                                    AND A5.BSE_TP_CD     = A2.BSE_TP_CD(+)
                                    AND A5.BSE_YR        = A2.BSE_YR(+)
                                    AND A5.BSE_QTR_CD    = A2.BSE_QTR_CD(+)
                                    AND A5.OFC_VW_CD     = A2.OFC_VW_CD(+)
                                    AND A5.TRD_CD        = A2.TRD_CD(+)
                                    AND A5.RLANE_CD      = A2.RLANE_CD(+)
                                    AND A5.DIR_CD        = A2.DIR_CD(+)
                                    AND A5.RHQ_CD        = A2.RHQ_CD(+)

                                    AND A5.BSE_TP_CD     = A3.BSE_TP_CD
                                    AND A5.BSE_YR        = A3.BSE_YR
                                    AND A5.BSE_QTR_CD    = A3.BSE_QTR_CD
                                    AND A5.OFC_VW_CD     = A3.OFC_VW_CD
                                    AND A5.TRD_CD        = A3.TRD_CD
                                    AND A5.RLANE_CD      = DECODE(UPPER(A3.RLANE_CD),'ALL',A5.RLANE_CD, A3.RLANE_CD)
                                    AND A1.CONV_DIR_CD   = A3.CONV_DIR_CD
                                    AND A5.RHQ_CD        = A3.RHQ_CD

                                    AND A1.RLANE_CD      = A4.RLANE_CD
                                    AND A1.DIR_CD        = A4.DIR_CD
                                    AND A1.TRD_CD        = A4.TRD_CD
                                    AND A1.IOC_CD        = A4.IOC_CD

                                    AND A1.QTA_RLSE_VER_NO = (SELECT QTA_RLSE_VER_NO
                                                                FROM SQM_QTA_RLSE_VER
                                                               WHERE BSE_TP_CD  = @[f_bse_tp_cd]
                                                                 AND BSE_YR     = @[f_bse_yr]
                                                                 AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                                                                 AND SQM_VER_STS_CD = 'R'
                                                              )
                                    AND A1.BSE_TP_CD     = @[f_bse_tp_cd]
                                    AND A1.BSE_YR        = @[f_bse_yr]
                                    AND A1.BSE_QTR_CD    = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                                    AND A2.QTA_STEP_CD(+)= '02'
                                    AND A2.QTA_STEP_CD(+)= '02'
    #if (${f_ofc_vw_cd} != '' && ${f_ofc_vw_cd} != 'All')
                                    AND A5.OFC_VW_CD     = @[f_ofc_vw_cd]
    #end
                                    AND A1.QTA_TGT_CD    = 'D'
    #if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                                    AND A1.TRD_CD        = @[f_trd_cd]
    #end
    #if (${rlane_cd} != '' && ${rlane_cd} != 'All')
                                    AND A1.RLANE_CD      = @[rlane_cd] -- Adjustment by VVD
    #end
    #if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                                    AND A1.RLANE_CD      IN (${f_rlane_cd})-- Portion Adjustment by HO/RHQ
    #end
    #if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                                    AND A1.DIR_CD        = @[f_dir_cd]
    #end
    #if (${f_click} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')
                                    AND A1.CONV_DIR_CD   = @[f_conv_dir_cd]
    #end
    #if (${f_click} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
                                    AND A4.HUL_BND_CD    = @[f_trd_dir]
    #end
    #if (${mas_vvd} != '')
                                    AND A1.VSL_CD || A1.SKD_VOY_NO || A1.SKD_DIR_CD = @[mas_vvd]
    #end
                                 ) B2
                          WHERE 1=1
                            AND B2.BSE_TP_CD     = B1.BSE_TP_CD(+)
                            AND B2.BSE_YR        = B1.BSE_YR(+)
                            AND B2.BSE_QTR_CD    = B1.BSE_QTR_CD(+)
                            AND B2.OFC_VW_CD     = B1.OFC_VW_CD(+)
                            AND B2.QTA_STEP_CD   = B1.QTA_STEP_CD(+)
                            AND B2.TRD_CD        = B1.TRD_CD(+)
                            AND B2.RLANE_CD      = B1.RLANE_CD(+)
                            AND B2.DIR_CD        = B1.DIR_CD(+)
                            AND B2.RHQ_CD        = B1.RHQ_CD(+)
    --                                                                AND B2.BSE_WK        BETWEEN SUBSTR(B1.APLY_FM_YRWK(+),-2) AND SUBSTR(B1.APLY_TO_YRWK(+),-2)
                            AND B2.SLS_YRWK        BETWEEN B1.APLY_FM_YRWK(+) AND B1.APLY_TO_YRWK(+)
                          ORDER BY B2.OFC_VW_CD, B2.BSE_WK, B2.RHQ_CD
                         ) C1
                  ) D2
           WHERE 1=1
             AND D1.BSE_TP_CD   = D2.BSE_TP_CD
             AND D1.BSE_YR      = D2.BSE_YR
             AND D1.BSE_QTR_CD  = D2.BSE_QTR_CD
             AND D1.OFC_VW_CD   = D2.OFC_VW_CD
             AND D1.TRD_CD      = D2.TRD_CD
             AND D1.RLANE_CD    = D2.RLANE_CD
             AND D1.DIR_CD      = D2.DIR_CD
             AND D1.RHQ_CD      = D2.RHQ_CD
          ) E1
        ,SQM_QTA_LANE_OFC_COST E2
        ,SQM_CFM_QTA_POTN_MGMT E3
    WHERE 1=1
     AND E1.BSE_TP_CD   = E2.BSE_TP_CD
     AND E1.BSE_YR      = E2.BSE_YR
     AND E1.BSE_QTR_CD  = E2.BSE_QTR_CD
     AND E1.OFC_VW_CD   = E2.OFC_VW_CD
     AND E1.TRD_CD      = E2.TRD_CD
     AND E1.RLANE_CD    = E2.RLANE_CD
     AND E1.DIR_CD      = E2.DIR_CD
     AND E1.RHQ_CD      = E2.RHQ_CD
     AND E1.RGN_OFC_CD  = E2.RGN_OFC_CD

     AND E1.BSE_TP_CD     = E3.BSE_TP_CD(+)
     AND E1.BSE_YR        = E3.BSE_YR(+)
     AND E1.BSE_QTR_CD    = E3.BSE_QTR_CD(+)
     AND E1.OFC_VW_CD     = E3.OFC_VW_CD(+)
     AND E1.QTA_STEP_CD   = E3.QTA_STEP_CD(+)
     AND E1.TRD_CD        = E3.TRD_CD(+)
     AND E1.RLANE_CD      = E3.RLANE_CD(+)
     AND E1.DIR_CD        = E3.DIR_CD(+)
     AND E1.RHQ_CD        = E3.RHQ_CD(+)
     AND E1.RGN_OFC_CD    = E3.RGN_OFC_CD(+)
    --                                         AND E1.BSE_WK        BETWEEN SUBSTR(E3.APLY_FM_YRWK(+),-2) AND SUBSTR(E3.APLY_TO_YRWK(+),-2)
     AND E1.SLS_YRWK        BETWEEN E3.APLY_FM_YRWK(+) AND E3.APLY_TO_YRWK(+)
    )
    GROUP BY QTA_RLSE_VER_NO,BSE_TP_CD,BSE_QTR_CD,OFC_VW_CD,QTA_TGT_CD,TRD_CD,RLANE_CD,DIR_CD,BSE_WK,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,RHQ_CD
    ) KK
)
WHERE OFC_LOD = 0 OR OFC_REV = 0
GROUP BY QTA_RLSE_VER_NO, BSE_TP_CD, BSE_QTR_CD, OFC_VW_CD, QTA_TGT_CD, TRD_CD, RLANE_CD, DIR_CD, BSE_WK, VSL_CD, SKD_VOY_NO, SKD_DIR_CD
)
--WITH 끝

#end
              
                  SELECT QTA_RLSE_VER_NO
                        ,BSE_TP_CD 
                        ,BSE_YR
                        ,BSE_QTR_CD
                        ,OFC_VW_CD
                        ,QTA_TGT_CD
                        ,TRD_CD
                        ,RLANE_CD
                        ,DIR_CD
                        ,BSE_WK
                        ,SUB_TRD_CD
                        ,HUL_BND_CD
                        ,OB_DIV_CD
                        ,FNL_BSA_CAPA
                        ,VSL_CD
                        ,SKD_VOY_NO
                        ,SKD_DIR_CD
                        ,RGN_OFC_CD
                        ,RHQ_CD
                        ,AQ_CD
                        ,CONV_DIR_CD
                        
                        ,RHQ_RNK
                        ,LOD_RNK
                        ,OFC_LOD AS OLD_OFC_LOD
                        ,ORG_LOD
                        ,VVD_LOD_SUM
                        ,ORG_REV
                        ,VVD_REV_SUM
                        ,OFC_REV AS OLD_OFC_REV
                        ,BSE_WK AS VVD_WK
                        ,ORG_REV AS TOTAL_REV
                        
#if (${f_gubun} == 'RHQ')
                         -- RHQ에서 Creation할 경우 VVD 전체 물량에 대한 DIFF를 확인 할 수 없기 때문에 RHQ 전체 물량에 대한 DIFF까지만 처리한다.
                        ,OFC_LOD AS LOD_QTY
                        ,OFC_REV
#else
                         -- HO, adjustment by VVD에서 Creation 할 경우 VVD전체 물량에 대해서 RHQ에서 유실되는경우 보정하기 위해서
--                        ,DECODE(ROUND(ORG_LOD - VVD_LOD_SUM), 0, OFC_LOD, DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(ORG_LOD - VVD_LOD_SUM), OFC_LOD), OFC_LOD)) AS LOD_QTY
--                        ,DECODE((ORG_REV - VVD_REV_SUM), 0, OFC_REV, DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, OFC_REV + (ORG_REV - VVD_REV_SUM), OFC_REV), OFC_REV)) AS OFC_REV
                        --,DECODE((SELECT 'CFM PORTION EXIST' FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND ROWNUM < 2), NULL, OFC_LOD, DECODE(OFC_LOD, 0, DECODE((SELECT CP.LOD_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),0,0,DECODE(LOD_RNK, 1, NVL((OFC_LOD + ROUND(ORG_LOD - DECODE(OFC_LOD, 0, 0, VVD_LOD_SUM)))*NVL((SELECT DISTINCT CP.LOD_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),1),0), OFC_LOD)), DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, (OFC_LOD + ROUND(ORG_LOD - VVD_LOD_SUM))*NVL((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1), OFC_LOD*NVL((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1)), OFC_LOD*NVL((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1)))) AS LOD_QTY
                        --,DECODE((SELECT 'CFM PORTION EXIST' FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND ROWNUM < 2), NULL, OFC_REV, DECODE(OFC_REV, 0, DECODE((SELECT CP.REV_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),0,0,DECODE(LOD_RNK, 1, NVL((OFC_REV + (ORG_REV - DECODE(OFC_REV, 0, 0, VVD_REV_SUM)))*NVL((SELECT DISTINCT CP.REV_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),1),0), OFC_REV)), DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, (OFC_REV + (ORG_REV - VVD_REV_SUM))*NVL((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1), OFC_REV*NVL((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1)), OFC_REV*NVL((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1)))) AS OFC_REV
                        --,DECODE((SELECT 'CFM PORTION EXIST' FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND ROWNUM < 2), NULL, OFC_LOD, DECODE(OFC_LOD, 0, DECODE((SELECT CP.LOD_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),0,0,DECODE(LOD_RNK, 1, NVL((OFC_LOD + ROUND(ORG_LOD - DECODE(OFC_LOD, 0, 0, VVD_LOD_SUM)))*NVL((SELECT DISTINCT CP.LOD_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),1),0), OFC_LOD)), DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, (OFC_LOD + ROUND(ORG_LOD - VVD_LOD_SUM))*NVL((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1), OFC_LOD*NVL((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1)), OFC_LOD))) AS LOD_QTY
                        --,DECODE((SELECT 'CFM PORTION EXIST' FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND ROWNUM < 2), NULL, OFC_REV, DECODE(OFC_REV, 0, DECODE((SELECT CP.REV_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),0,0,DECODE(LOD_RNK, 1, NVL((OFC_REV + (ORG_REV - DECODE(OFC_REV, 0, 0, VVD_REV_SUM)))*NVL((SELECT DISTINCT CP.REV_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND ROWNUM < 2),1),0), OFC_REV)), DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, (OFC_REV + (ORG_REV - VVD_REV_SUM))*NVL((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1), OFC_REV*NVL((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),1)), OFC_REV))) AS OFC_REV

                        ,ROUND(DECODE((SELECT 'CFM PORTION EXIST' FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND (T.BSE_YR||T.BSE_WK BETWEEN CP.APLY_FM_YRWK AND CP.APLY_TO_YRWK) AND ROWNUM < 2), NULL, DECODE(ROUND(ORG_LOD - VVD_LOD_SUM), 0, OFC_LOD, DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(ORG_LOD - VVD_LOD_SUM), OFC_LOD), OFC_LOD)), 
                            DECODE(OFC_LOD, 0, DECODE((SELECT CP.LOD_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND (T.BSE_YR||T.BSE_WK BETWEEN CP.APLY_FM_YRWK AND CP.APLY_TO_YRWK) AND ROWNUM < 2),0,0,
                                DECODE(LOD_RNK, 1, DECODE(ROUND(ORG_LOD - VVD_LOD_SUM),0,OFC_LOD,NVL((OFC_LOD + ROUND(ORG_LOD - DECODE(OFC_LOD, 0, 0, VVD_LOD_SUM)))*NVL((SELECT DISTINCT CP.LOD_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND (T.BSE_YR||T.BSE_WK BETWEEN CP.APLY_FM_YRWK AND CP.APLY_TO_YRWK) AND ROWNUM < 2),1),0)), OFC_LOD)), 
                                    DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, (OFC_LOD + ROUND(ORG_LOD - VVD_LOD_SUM))*NVL(DECODE((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),0,(SELECT PLANNING.LOD_POTN_RTO/100 FROM SQM_QTA_POTN_MGMT PLANNING WHERE PLANNING.BSE_TP_CD = T.BSE_TP_CD AND PLANNING.BSE_YR = T.BSE_YR AND PLANNING.BSE_QTR_CD = T.BSE_QTR_CD AND PLANNING.OFC_VW_CD = T.OFC_VW_CD AND PLANNING.QTA_STEP_CD = '02' and PLANNING.RHQ_CD = T.RHQ_CD AND PLANNING.RGN_OFC_CD = T.RHQ_CD AND PLANNING.TRD_CD = T.TRD_CD AND PLANNING.RLANE_CD = T.RLANE_CD AND PLANNING.DIR_CD = T.DIR_CD),(SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD)),1), 
                                        OFC_LOD*NVL(DECODE((SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),0,(SELECT PLANNING.LOD_POTN_RTO/100 FROM SQM_QTA_POTN_MGMT PLANNING WHERE PLANNING.BSE_TP_CD = T.BSE_TP_CD AND PLANNING.BSE_YR = T.BSE_YR AND PLANNING.BSE_QTR_CD = T.BSE_QTR_CD AND PLANNING.OFC_VW_CD = T.OFC_VW_CD AND PLANNING.QTA_STEP_CD = '02' and PLANNING.RHQ_CD = T.RHQ_CD AND PLANNING.RGN_OFC_CD = T.RHQ_CD AND PLANNING.TRD_CD = T.TRD_CD AND PLANNING.RLANE_CD = T.RLANE_CD AND PLANNING.DIR_CD = T.DIR_CD),(SELECT R.LOAD_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD)),1)), 
                                           OFC_LOD)))) AS LOD_QTY
                                                
                        ,DECODE((SELECT 'CFM PORTION EXIST' FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND (T.BSE_YR||T.BSE_WK BETWEEN CP.APLY_FM_YRWK AND CP.APLY_TO_YRWK) AND ROWNUM < 2), NULL, DECODE((ORG_REV - VVD_REV_SUM), 0, OFC_REV, DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, OFC_REV + (ORG_REV - VVD_REV_SUM), OFC_REV), OFC_REV)), 
                            DECODE(OFC_REV, 0, DECODE((SELECT CP.REV_POTN_RTO FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND (T.BSE_YR||T.BSE_WK BETWEEN CP.APLY_FM_YRWK AND CP.APLY_TO_YRWK) AND ROWNUM < 2),0,0,
                                DECODE(LOD_RNK, 1, DECODE((ORG_REV - VVD_REV_SUM),0,OFC_REV,NVL((OFC_REV + (ORG_REV - DECODE(OFC_REV, 0, 0, VVD_REV_SUM)))*NVL((SELECT DISTINCT CP.REV_POTN_RTO/100 FROM SQM_CFM_QTA_POTN_MGMT CP WHERE CP.BSE_TP_CD = T.BSE_TP_CD AND CP.BSE_YR = T.BSE_YR AND CP.BSE_QTR_CD = T.BSE_QTR_CD AND CP.OFC_VW_CD = T.OFC_VW_CD AND CP.QTA_STEP_CD = '02' AND CP.TRD_CD = T.TRD_CD AND CP.RLANE_CD = T.RLANE_CD AND CP.DIR_CD = T.DIR_CD AND CP.RHQ_CD = T.RHQ_CD AND (T.BSE_YR||T.BSE_WK BETWEEN CP.APLY_FM_YRWK AND CP.APLY_TO_YRWK) AND ROWNUM < 2),1),0)), OFC_REV)), 
                                    DECODE(RHQ_RNK, 1, DECODE(LOD_RNK, 1, (OFC_REV + (ORG_REV - VVD_REV_SUM))*NVL(DECODE((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),0,(SELECT PLANNING.REV_POTN_RTO FROM SQM_QTA_POTN_MGMT PLANNING WHERE PLANNING.BSE_TP_CD = T.BSE_TP_CD AND PLANNING.BSE_YR = T.BSE_YR AND PLANNING.BSE_QTR_CD = T.BSE_QTR_CD AND PLANNING.OFC_VW_CD = T.OFC_VW_CD AND PLANNING.QTA_STEP_CD = '02' and PLANNING.RHQ_CD = T.RHQ_CD AND PLANNING.RGN_OFC_CD = T.RHQ_CD AND PLANNING.TRD_CD = T.TRD_CD AND PLANNING.RLANE_CD = T.RLANE_CD AND PLANNING.DIR_CD = T.DIR_CD),(SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD)),1), 
                                        OFC_REV*NVL(DECODE((SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD),(SELECT PLANNING.REV_POTN_RTO FROM SQM_QTA_POTN_MGMT PLANNING WHERE PLANNING.BSE_TP_CD = T.BSE_TP_CD AND PLANNING.BSE_YR = T.BSE_YR AND PLANNING.BSE_QTR_CD = T.BSE_QTR_CD AND PLANNING.OFC_VW_CD = T.OFC_VW_CD AND PLANNING.QTA_STEP_CD = '02' and PLANNING.RHQ_CD = T.RHQ_CD AND PLANNING.RGN_OFC_CD = T.RHQ_CD AND PLANNING.TRD_CD = T.TRD_CD AND PLANNING.RLANE_CD = T.RLANE_CD AND PLANNING.DIR_CD = T.DIR_CD),(SELECT R.REV_RATIO FROM RATIO R WHERE R.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO AND R.BSE_TP_CD = T.BSE_TP_CD AND R.BSE_QTR_CD = T.BSE_QTR_CD AND R.OFC_VW_CD = T.OFC_VW_CD AND R.QTA_TGT_CD = T.QTA_TGT_CD AND R.TRD_CD = T.TRD_CD AND R.RLANE_CD =T.RLANE_CD AND R.DIR_CD = T.DIR_CD AND R.BSE_WK = T.BSE_WK AND R.VSL_CD = T.VSL_CD AND R.SKD_VOY_NO = T.SKD_VOY_NO AND R.SKD_DIR_CD = T.SKD_DIR_CD)),1)), 
                                            OFC_REV))) AS OFC_REV

#end
                        ,PA_CM_UC_AMT
                        ,RA_CM_UC_AMT
                    FROM (
                            SELECT QTA_RLSE_VER_NO
                                  ,BSE_TP_CD
                                  ,BSE_YR
                                  ,BSE_QTR_CD
                                  ,OFC_VW_CD
                                  ,QTA_TGT_CD
                                  ,TRD_CD
                                  ,RLANE_CD
                                  ,DIR_CD
                                  ,BSE_WK
                                  ,SUB_TRD_CD
                                  ,HUL_BND_CD
                                  ,OB_DIV_CD
                                  ,FNL_BSA_CAPA
                                  ,VSL_CD
                                  ,SKD_VOY_NO
                                  ,SKD_DIR_CD
                                  ,RGN_OFC_CD
                                  ,RHQ_CD
                                  ,NVL(( SELECT V.N3RD_PRNT_OFC_CD
                                       FROM SQM_ORGANIZATION_V V
                                      WHERE V.OFC_CD   = RGN_OFC_CD
                                        AND V.DELT_FLG = 'N'
                                   ),'') AS AQ_CD
                                  ,CONV_DIR_CD
                                  ,ROW_NUMBER() OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, TRD_CD, RLANE_CD, CONV_DIR_CD, VSL_CD || SKD_VOY_NO || SKD_DIR_CD, RHQ_CD ORDER BY OFC_LOD DESC, RGN_OFC_CD) AS LOD_RNK
                                  ,OFC_LOD as old_ofc_cd
                                  ,ROUND(RHQ_QTY - RHQ_LOD_SUM) diff
                                  -- OFFICE 별 물량에 RHQ 별 DIFF가 존재할 경우 LOAD RNK가 1인 것에 물량을 가감한다.
                                  ,DECODE(OFC_LOD_RTO, 0, 0, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(RHQ_QTY - RHQ_LOD_SUM), OFC_LOD)) AS OFC_LOD
                                  ,SUM(DECODE(OFC_LOD_RTO, 0, 0, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(RHQ_QTY - RHQ_LOD_SUM), OFC_LOD))) OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, TRD_CD, RLANE_CD, CONV_DIR_CD, VSL_CD, SKD_VOY_NO, RHQ_CD) AS RHQ_LOD_SUM
                                  ,SUM(DECODE(OFC_LOD_RTO, 0, 0, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(RHQ_QTY - RHQ_LOD_SUM), OFC_LOD))) OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, TRD_CD, RLANE_CD, CONV_DIR_CD, VSL_CD, SKD_VOY_NO) AS VVD_LOD_SUM
                                  -- OFFICE 별 물량에 존재할 경우 RHQ 별 REV DIFF가 존재할 경우 REV RNK가 1인 것에 물량을 가감한다.
                                  ,DECODE(DECODE(OFC_LOD_RTO, 0, 0, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(RHQ_QTY - RHQ_LOD_SUM), OFC_LOD))
                                         ,0, 0
                                         ,DECODE(REV_RNK, 1, OFC_REV + (RHQ_REV - RHQ_REV_SUM), OFC_REV)) AS OFC_REV
                                  ,SUM(DECODE(DECODE(OFC_LOD_RTO, 0, 0, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(RHQ_QTY - RHQ_LOD_SUM), OFC_LOD))
                                             ,0, 0
                                             ,DECODE(REV_RNK, 1, OFC_REV + (RHQ_REV - RHQ_REV_SUM), OFC_REV))) OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, TRD_CD, RLANE_CD, CONV_DIR_CD, VSL_CD, SKD_VOY_NO, RHQ_CD) AS RHQ_REV_SUM
                                  ,SUM(DECODE(DECODE(OFC_LOD_RTO, 0, 0, DECODE(LOD_RNK, 1, OFC_LOD + ROUND(RHQ_QTY - RHQ_LOD_SUM), OFC_LOD))
                                             ,0, 0
                                             ,DECODE(REV_RNK, 1, OFC_REV + (RHQ_REV - RHQ_REV_SUM), OFC_REV))) OVER (PARTITION BY BSE_TP_CD, BSE_YR, BSE_QTR_CD, OFC_VW_CD, TRD_CD, RLANE_CD, CONV_DIR_CD, VSL_CD, SKD_VOY_NO) AS VVD_REV_SUM
                                  ,PA_CM_UC_AMT
                                  ,RA_CM_UC_AMT
                                  ,'I' AS SQM_CNG_TP_CD
                                  ,RHQ_RNK
                                  ,OFC_LOD_RTO
                                  ,OFC_REV_RTO
                                  ,RHQ_LOD_RTO
                                  ,RHQ_REV_RTO
                                  ,RHQ_QTY
                                  ,RHQ_REV AS ORG_RHQ_REV
                                  ,ORG_LOD
                                  ,ORG_REV 
                              FROM (
                                      SELECT SUBSTR(E1.BSE_YR,-2)||E1.BSE_QTR_CD||'02' AS QTA_RLSE_VER_NO
                                            ,E1.BSE_TP_CD
                                            ,E1.BSE_YR
                                            ,E1.BSE_QTR_CD
                                            ,E1.OFC_VW_CD
                                            ,E1.QTA_TGT_CD
                                            ,E1.TRD_CD
                                            ,E1.RLANE_CD
                                            ,E1.DIR_CD
                                            ,E1.BSE_WK
                                            ,E1.SLS_YRWK
                                            ,E1.SUB_TRD_CD
                                            ,E1.HUL_BND_CD
                                            ,E1.OB_DIV_CD
                                            ,E1.FNL_BSA_CAPA
                                            ,E1.VSL_CD
                                            ,E1.SKD_VOY_NO
                                            ,E1.SKD_DIR_CD
                                            ,E1.RGN_OFC_CD
                                            ,E1.RHQ_CD
                                            ,E1.CONV_DIR_CD
                                            ,(E1.RHQ_QTY - SUM(ROUND(E1.RHQ_QTY * NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO), 0)) OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.RHQ_CD)) AS RHQ_LOD_DIFF
                                            ,ROUND(E1.RHQ_QTY * (NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO)), 0) AS OFC_LOD
                                            ,DECODE(RHQ_QTY, 0, 0, RHQ_REV * NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO)) AS OFC_REV
                                            ,SUM(ROUND(E1.RHQ_QTY * (NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO)), 0)) OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.RHQ_CD) AS RHQ_LOD_SUM
                                            ,SUM(DECODE(RHQ_QTY, 0, 0, RHQ_REV * NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO))) OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.RHQ_CD) AS RHQ_REV_SUM
                                            ,E2.PA_CM_UC_AMT
                                            ,E2.RA_CM_UC_AMT
                                            ,NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO) AS OFC_LOD_RTO
                                            ,NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO) AS OFC_REV_RTO
                                            ,E1.RHQ_LOD_RTO
                                            ,E1.RHQ_REV_RTO
                                            ,E1.RHQ_RNK
                                            ,E1.RHQ_QTY
                                            ,E1.RHQ_REV
                                            ,E1.ORG_LOD
                                            ,E1.ORG_REV
                                            ,ROW_NUMBER() OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.RHQ_CD, E1.TRD_CD, E1.DIR_CD, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO ORDER BY NVL(E3.LOD_POTN_RTO / 100, E1.OFC_LOD_RTO) DESC, E1.RGN_OFC_CD) AS LOD_RNK
                                            ,ROW_NUMBER() OVER (PARTITION BY E1.BSE_TP_CD, E1.BSE_YR, E1.BSE_QTR_CD, E1.OFC_VW_CD, E1.RHQ_CD, E1.TRD_CD, E1.DIR_CD, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO ORDER BY NVL(E3.REV_POTN_RTO / 100, E1.OFC_REV_RTO) DESC, E1.RGN_OFC_CD) AS REV_RNK
                                        FROM (
                                              SELECT D2.BSE_TP_CD
                                                    ,D2.BSE_YR
                                                    ,D2.BSE_QTR_CD
                                                    ,D2.OFC_VW_CD
                                                    ,D1.QTA_STEP_CD
                                                    ,D2.TRD_CD
                                                    ,D2.RLANE_CD
                                                    ,D1.DIR_CD
                                                    ,D2.SUB_TRD_CD
                                                    ,D2.HUL_BND_CD
                                                    ,D2.OB_DIV_CD
                                                    ,D2.FNL_BSA_CAPA                                            
                                                    ,D2.VSL_CD
                                                    ,D2.SKD_VOY_NO
                                                    ,D2.SKD_DIR_CD
                                                    ,D2.BSE_WK
                                                    ,D2.SLS_YRWK
                                                    ,D1.RGN_OFC_CD
                                                    ,D2.RHQ_CD
                                                    ,D2.CONV_DIR_CD
                                                    ,D1.OFC_LOD_RTO
                                                    ,D1.OFC_REV_RTO
                                                    ,D2.RHQ_QTY
                                                    ,D2.RHQ_REV
                                                    ,D2.QTA_TGT_CD
                                                    ,D2.RHQ_RNK
                                                    ,D2.RHQ_LOD_RTO
                                                    ,D2.RHQ_REV_RTO
                                                    ,D2.ORG_LOD
                                                    ,D2.ORG_REV
                                                FROM (
                                                      SELECT A1.BSE_TP_CD
                                                            ,A1.BSE_YR
                                                            ,A1.BSE_QTR_CD
                                                            ,A1.OFC_VW_CD
                                                            ,NVL(A2.QTA_STEP_CD, DECODE(A1.OFC_VW_CD, 'L', '03', DECODE(A4.OB_DIV_CD, 'N', '04', 'O', '05'))) AS QTA_STEP_CD
                                                            ,A1.TRD_CD
                                                            ,A1.DIR_CD
                                                            ,NVL(A3.CONV_DIR_CD, A1.DIR_CD) AS CONV_DIR_CD
                                                            ,A1.RLANE_CD
                                                            ,A1.RHQ_CD
                                                            ,A1.RGN_OFC_CD
                                                            ,NVL(A2.LOD_POTN_RTO,0) / 100 AS OFC_LOD_RTO
                                                            ,NVL(A2.REV_POTN_RTO,0) / 100 AS OFC_REV_RTO
                                                        FROM SQM_QTA_LANE_OFC A1
                                                            ,SQM_QTA_POTN_MGMT A2
                                                            ,SQM_DIR_CONV A3
                                                            ,SQM_DAT_RLT A4
                                                       WHERE 1=1
                                                         AND A1.BSE_TP_CD   = A2.BSE_TP_CD(+)
                                                         AND A1.BSE_YR      = A2.BSE_YR(+)
                                                         AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD(+)
                                                         AND A1.OFC_VW_CD   = A2.OFC_VW_CD(+)
                                                         AND A1.TRD_CD      = A2.TRD_CD(+)
                                                         AND A1.DIR_CD      = A2.DIR_CD(+)
                                                         AND A1.RHQ_CD      = A2.RHQ_CD(+)
                                                         AND A1.RLANE_CD    = A2.RLANE_CD(+)
                                                         AND A1.RGN_OFC_CD  = A2.RGN_OFC_CD(+)
                                                         
                                                         AND A1.BSE_TP_CD   = A3.BSE_TP_CD(+)
                                                         AND A1.BSE_YR      = A3.BSE_YR(+)
                                                         AND A1.BSE_QTR_CD  = A3.BSE_QTR_CD(+)
                                                         AND A1.TRD_CD      = A3.TRD_CD(+)
                                                         AND A1.RLANE_CD    = A3.RLANE_CD(+)
                                                         AND A1.DIR_CD      = A3.DIR_CD(+)
                                                         
                                                         AND A1.BSE_TP_CD   = A4.BSE_TP_CD
                                                         AND A1.BSE_YR      = A4.BSE_YR
                                                         AND A1.BSE_QTR_CD  = A4.BSE_QTR_CD
                                                         AND A1.OFC_VW_CD   = A4.OFC_VW_CD
                                                         AND A1.TRD_CD      = A4.TRD_CD
                                                         AND A1.RLANE_CD    = DECODE(UPPER(A4.RLANE_CD),'ALL',A1.RLANE_CD, A4.RLANE_CD)
                                                         AND A1.RHQ_CD      = A4.RHQ_CD
                                                         AND NVL(A3.CONV_DIR_CD, A1.DIR_CD) = A4.CONV_DIR_CD
        
                                                         AND A1.BSE_TP_CD   = @[f_bse_tp_cd]
                                                         AND A1.BSE_YR      = @[f_bse_yr]
                                                         AND A1.BSE_QTR_CD  = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
#if (${f_gubun} == 'RHQ')
                                                         AND A1.RHQ_CD      = (SELECT CASE WHEN @[ofc_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A1.RHQ_CD
                                                                                      ELSE DECODE(@[ofc_cd], 'SELCMI', A1.RHQ_CD, @[ofc_cd])
                                                                                       END RHQ_CD
                                                                                 FROM DUAL)
#end
#if (${f_ofc_vw_cd} != '' && ${f_ofc_vw_cd} != 'All')
                                                         AND A1.OFC_VW_CD   = @[f_ofc_vw_cd]
#end
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                                                         AND A1.TRD_CD      = @[f_trd_cd]
#end
#if (${rlane_cd} != '' && ${rlane_cd} != 'All')
                                                         AND A1.RLANE_CD    = @[rlane_cd] -- Adjustment by VVD
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                                                         AND A1.RLANE_CD    IN (${f_rlane_cd})-- Portion Adjustment by HO/RHQ
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                                                         AND A1.DIR_CD      = @[f_dir_cd]
#end
#if (${f_click} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')
                                                         AND NVL(A3.CONV_DIR_CD, A1.DIR_CD) = @[f_conv_dir_cd]
#end
                                                         AND A1.SQM_ACT_FLG = 'Y'
                                                         AND A2.QTA_STEP_CD(+) <> '02'
                                                      ) D1
                                                    ,(
                                                      SELECT C1.BSE_TP_CD
                                                            ,C1.BSE_YR
                                                            ,C1.BSE_QTR_CD
                                                            ,C1.OFC_VW_CD
                                                            ,C1.QTA_TGT_CD
                                                            ,C1.TRD_CD
                                                            ,C1.SUB_TRD_CD
                                                            ,C1.HUL_BND_CD
                                                            ,C1.OB_DIV_CD
                                                            ,C1.FNL_BSA_CAPA
                                                            ,C1.RLANE_CD
                                                            ,C1.CONV_DIR_CD
                                                            ,C1.DIR_CD
                                                            ,C1.BSE_WK
                                                            ,C1.SLS_YRWK
                                                            ,C1.VSL_CD
                                                            ,C1.SKD_VOY_NO
                                                            ,C1.SKD_DIR_CD
                                                            ,C1.RHQ_CD
                                                            ,C1.LOAD_RNK AS RHQ_RNK
                                                            ,DECODE(C1.LOAD_RNK, '1', C1.RHQ_QTY + (C1.ORG_VVD_BSA - C1.SUM_RHQ_QTY), C1.RHQ_QTY) AS RHQ_QTY
                                                            ,C1.GRS_REV * C1.RHQ_REV_RTO AS RHQ_REV
                                                            ,C1.RHQ_REV_RTO
                                                            ,C1.RHQ_LOD_RTO
                                                            ,C1.ORG_VVD_BSA AS ORG_LOD
                                                            ,C1.GRS_REV AS ORG_REV
                                                       FROM (
                                                             SELECT B2.BSE_TP_CD
                                                                   ,B2.BSE_YR
                                                                   ,B2.BSE_QTR_CD
                                                                   ,B2.OFC_VW_CD
                                                                   ,B2.QTA_TGT_CD
                                                                   ,B2.TRD_CD
                                                                   ,B2.SUB_TRD_CD
                                                                   ,B2.HUL_BND_CD
                                                                   ,B2.OB_DIV_CD
                                                                   ,B2.FNL_BSA_CAPA                                                           
                                                                   ,B2.RLANE_CD
                                                                   ,B2.CONV_DIR_CD
                                                                   ,B2.DIR_CD
                                                                   ,B2.BSE_WK
                                                                   ,B2.SLS_YRWK
                                                                   ,SUBSTR(B1.APLY_FM_YRWK,-2) AS APLY_FM_WK
                                                                   ,SUBSTR(B1.APLY_TO_YRWK,-2) AS APLY_TO_WK
                                                                   ,B1.APLY_FM_YRWK
                                                                   ,B1.APLY_TO_YRWK
                                                                   ,B2.VSL_CD
                                                                   ,B2.SKD_VOY_NO
                                                                   ,B2.SKD_DIR_CD
                                                                   ,B2.RHQ_CD
                                                                   ,NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO) /100 AS RHQ_LOD_RTO
                                                                   ,NVL(B1.REV_POTN_RTO,B2.RHQ_REV_RTO) /100 AS RHQ_REV_RTO
                                                                   ,B2.GRS_REV
                                                                   -- RHQ 별 물량을 구하기
                                                                   ,B2.LOD_QTY AS ORG_VVD_BSA
                                                                   ,ROUND(B2.LOD_QTY * NVL(NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO),0)/100, 0) AS RHQ_QTY
                                                                   ,SUM(ROUND(B2.LOD_QTY * NVL(NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO),0)/100, 0)) OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD) AS SUM_RHQ_QTY
                                                                   ,ROW_NUMBER() OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD ORDER BY NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO) DESC, B1.RHQ_CD) LOAD_RNK
                                                               FROM SQM_CFM_QTA_POTN_MGMT B1
                                                                   ,(
                                                                     SELECT DISTINCT 
                                                                            A1.BSE_TP_CD
                                                                           ,A1.BSE_YR
                                                                           ,A1.BSE_QTR_CD
                                                                           ,A5.OFC_VW_CD
                                                                           ,NVL(A2.QTA_STEP_CD, '02') AS QTA_STEP_CD
                                                                           ,A1.TRD_CD
                                                                           ,A1.SUB_TRD_CD
                                                                           ,A1.RLANE_CD
                                                                           ,A4.HUL_BND_CD
                                                                           ,A3.OB_DIV_CD
                                                                           ,A1.FNL_BSA_CAPA 
                                                                           ,A1.CONV_DIR_CD
                                                                           ,A1.DIR_CD
                                                                           ,A1.BSE_WK
                                                                           ,A1.SLS_YRMON
                                                                           ,SUBSTR(A1.SLS_YRMON,0,4)||A1.BSE_WK AS SLS_YRWK
                                                                           ,A1.VSL_CD
                                                                           ,A1.SKD_VOY_NO
                                                                           ,A1.SKD_DIR_CD
                                                                           ,A5.RHQ_CD
                                                                           ,NVL(A2.LOD_POTN_RTO, 0) AS RHQ_LOD_RTO
                                                                           ,NVL(A2.REV_POTN_RTO, 0) AS RHQ_REV_RTO
                                                                           ,A1.GRS_REV
                                                                           ,A1.LOD_QTY
                                                                           ,A1.QTA_TGT_CD
                                                                       FROM SQM_CFM_TGT_VVD A1
                                                                           ,SQM_QTA_LANE_OFC A5
                                                                           ,SQM_QTA_POTN_MGMT A2
                                                                           ,SQM_DAT_RLT A3
                                                                           ,MAS_LANE_RGST A4
                                                                      WHERE 1=1
                                                                        AND A1.BSE_TP_CD     = A5.BSE_TP_CD
                                                                        AND A1.BSE_YR        = A5.BSE_YR
                                                                        AND A1.BSE_QTR_CD    = A5.BSE_QTR_CD
                                                                        AND A1.TRD_CD        = A5.TRD_CD
                                                                        AND A1.RLANE_CD      = A5.RLANE_CD
                                                                        AND A1.DIR_CD        = A5.DIR_CD
                                                                        AND A5.SQM_ACT_FLG   = 'Y'
                                                                        
                                                                        AND A5.BSE_TP_CD     = A2.BSE_TP_CD(+)
                                                                        AND A5.BSE_YR        = A2.BSE_YR(+)
                                                                        AND A5.BSE_QTR_CD    = A2.BSE_QTR_CD(+)
                                                                        AND A5.OFC_VW_CD     = A2.OFC_VW_CD(+)
                                                                        AND A5.TRD_CD        = A2.TRD_CD(+)
                                                                        AND A5.RLANE_CD      = A2.RLANE_CD(+)
                                                                        AND A5.DIR_CD        = A2.DIR_CD(+)
                                                                        AND A5.RHQ_CD        = A2.RHQ_CD(+)
        
                                                                        AND A5.BSE_TP_CD     = A3.BSE_TP_CD
                                                                        AND A5.BSE_YR        = A3.BSE_YR
                                                                        AND A5.BSE_QTR_CD    = A3.BSE_QTR_CD
                                                                        AND A5.OFC_VW_CD     = A3.OFC_VW_CD
                                                                        AND A5.TRD_CD        = A3.TRD_CD
                                                                        AND A5.RLANE_CD      = DECODE(UPPER(A3.RLANE_CD),'ALL',A5.RLANE_CD, A3.RLANE_CD)
                                                                        AND A1.CONV_DIR_CD   = A3.CONV_DIR_CD
                                                                        AND A5.RHQ_CD        = A3.RHQ_CD
        
                                                                        AND A1.RLANE_CD      = A4.RLANE_CD
                                                                        AND A1.DIR_CD        = A4.DIR_CD
                                                                        AND A1.TRD_CD        = A4.TRD_CD
                                                                        AND A1.IOC_CD        = A4.IOC_CD
        
                                                                        AND A1.QTA_RLSE_VER_NO = (SELECT QTA_RLSE_VER_NO
                                                                                                    FROM SQM_QTA_RLSE_VER
                                                                                                   WHERE BSE_TP_CD  = @[f_bse_tp_cd]
                                                                                                     AND BSE_YR     = @[f_bse_yr]
                                                                                                     AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                                                                                                     AND SQM_VER_STS_CD = 'R'
                                                                                                  )
                                                                        AND A1.BSE_TP_CD     = @[f_bse_tp_cd]
                                                                        AND A1.BSE_YR        = @[f_bse_yr]
                                                                        AND A1.BSE_QTR_CD    = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                                                                        AND A2.QTA_STEP_CD(+)= '02'
#if (${f_gubun} == 'HO')
                                                                        AND A3.TEAM_CD       = (SELECT CASE WHEN @[ofc_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A3.TEAM_CD
                                                                                                            ELSE @[ofc_cd]
                                                                                                       END TEAM_CD
                                                                                                FROM DUAL)
#end
#if (${f_ofc_vw_cd} != '' && ${f_ofc_vw_cd} != 'All')
                                                                        AND A5.OFC_VW_CD     = @[f_ofc_vw_cd]
#end
                                                                        AND A1.QTA_TGT_CD    = 'D'
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                                                                        AND A1.TRD_CD        = @[f_trd_cd]
#end
#if (${rlane_cd} != '' && ${rlane_cd} != 'All')
                                                                        AND A1.RLANE_CD      = @[rlane_cd] -- Adjustment by VVD
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                                                                        AND A1.RLANE_CD      IN (${f_rlane_cd})-- Portion Adjustment by HO/RHQ
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                                                                        AND A1.DIR_CD        = @[f_dir_cd]
#end
#if (${f_click} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')
                                                                        AND A1.CONV_DIR_CD   = @[f_conv_dir_cd]
#end
#if (${f_click} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
                                                                        AND A4.HUL_BND_CD    = @[f_trd_dir]
#end
#if (${mas_vvd} != '')
                                                                        AND A1.VSL_CD || A1.SKD_VOY_NO || A1.SKD_DIR_CD = @[mas_vvd]
#end
                                                                     ) B2
                                                              WHERE 1=1
                                                                AND B2.BSE_TP_CD     = B1.BSE_TP_CD(+)
                                                                AND B2.BSE_YR        = B1.BSE_YR(+)
                                                                AND B2.BSE_QTR_CD    = B1.BSE_QTR_CD(+)
                                                                AND B2.OFC_VW_CD     = B1.OFC_VW_CD(+)
                                                                AND B2.QTA_STEP_CD   = B1.QTA_STEP_CD(+)
                                                                AND B2.TRD_CD        = B1.TRD_CD(+)
                                                                AND B2.RLANE_CD      = B1.RLANE_CD(+)
                                                                AND B2.DIR_CD        = B1.DIR_CD(+)
                                                                AND B2.RHQ_CD        = B1.RHQ_CD(+)
--                                                                AND B2.BSE_WK        BETWEEN SUBSTR(B1.APLY_FM_YRWK(+),-2) AND SUBSTR(B1.APLY_TO_YRWK(+),-2)
                                                                AND B2.SLS_YRWK        BETWEEN B1.APLY_FM_YRWK(+) AND B1.APLY_TO_YRWK(+)
                                                              ORDER BY B2.OFC_VW_CD, B2.BSE_WK, B2.RHQ_CD
                                                             ) C1
                                                      ) D2
                                               WHERE 1=1
                                                 AND D1.BSE_TP_CD   = D2.BSE_TP_CD
                                                 AND D1.BSE_YR      = D2.BSE_YR
                                                 AND D1.BSE_QTR_CD  = D2.BSE_QTR_CD
                                                 AND D1.OFC_VW_CD   = D2.OFC_VW_CD
                                                 AND D1.TRD_CD      = D2.TRD_CD
                                                 AND D1.RLANE_CD    = D2.RLANE_CD
                                                 AND D1.DIR_CD      = D2.DIR_CD
                                                 AND D1.RHQ_CD      = D2.RHQ_CD
                                              ) E1
                                            ,SQM_QTA_LANE_OFC_COST E2
                                            ,SQM_CFM_QTA_POTN_MGMT E3
                                       WHERE 1=1
                                         AND E1.BSE_TP_CD   = E2.BSE_TP_CD
                                         AND E1.BSE_YR      = E2.BSE_YR
                                         AND E1.BSE_QTR_CD  = E2.BSE_QTR_CD
                                         AND E1.OFC_VW_CD   = E2.OFC_VW_CD
                                         AND E1.TRD_CD      = E2.TRD_CD
                                         AND E1.RLANE_CD    = E2.RLANE_CD
                                         AND E1.DIR_CD      = E2.DIR_CD
                                         AND E1.RHQ_CD      = E2.RHQ_CD
                                         AND E1.RGN_OFC_CD  = E2.RGN_OFC_CD
        
                                         AND E1.BSE_TP_CD     = E3.BSE_TP_CD(+)
                                         AND E1.BSE_YR        = E3.BSE_YR(+)
                                         AND E1.BSE_QTR_CD    = E3.BSE_QTR_CD(+)
                                         AND E1.OFC_VW_CD     = E3.OFC_VW_CD(+)
                                         AND E1.QTA_STEP_CD   = E3.QTA_STEP_CD(+)
                                         AND E1.TRD_CD        = E3.TRD_CD(+)
                                         AND E1.RLANE_CD      = E3.RLANE_CD(+)
                                         AND E1.DIR_CD        = E3.DIR_CD(+)
                                         AND E1.RHQ_CD        = E3.RHQ_CD(+)
                                         AND E1.RGN_OFC_CD    = E3.RGN_OFC_CD(+)
--                                         AND E1.BSE_WK        BETWEEN SUBSTR(E3.APLY_FM_YRWK(+),-2) AND SUBSTR(E3.APLY_TO_YRWK(+),-2)
                                         AND E1.SLS_YRWK        BETWEEN E3.APLY_FM_YRWK(+) AND E3.APLY_TO_YRWK(+)
        
                                       ORDER BY E1.OFC_VW_CD, E1.TRD_CD, E1.RLANE_CD, E1.CONV_DIR_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.RHQ_CD, E1.RGN_OFC_CD
                                   )
                         ) T
#if (${f_gubun} != '')
                   WHERE NOT EXISTS ( SELECT 'X'
                                        FROM SQM_CFM_QTA C
                                       WHERE C.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
                                         AND C.BSE_TP_CD       = T.BSE_TP_CD
                                         AND C.BSE_YR          = T.BSE_YR
                                         AND C.BSE_QTR_CD      = T.BSE_QTR_CD
                                         AND C.OFC_VW_CD       = T.OFC_VW_CD
                                         AND C.QTA_TGT_CD      = T.QTA_TGT_CD
                                         AND C.TRD_CD          = T.TRD_CD
                                         AND C.RLANE_CD        = T.RLANE_CD
                                         AND C.DIR_CD          = T.DIR_CD
                                         AND C.VSL_CD          = T.VSL_CD
                                         AND C.SKD_VOY_NO      = T.SKD_VOY_NO
                                         AND C.SKD_DIR_CD      = T.SKD_DIR_CD
										 AND C.RHQ_CD          = T.RHQ_CD
                                     )
#end              
               ) Z
)Z
WHERE Z.DIR_CD = Z.SKD_DIR_CD
#if (${ibflag} == 'I')
       ) Q
#end			]]></sql>
			<params>
				<param name="mas_vvd" type="12" value="" out="N"/>
				<param name="f_usr_id" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="f_ofc_vw_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_conv_dir_cd" type="12" value="" out="N"/>
				<param name="f_trd_dir" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
