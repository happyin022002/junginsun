/*=========================================================
*Copyright(c) 2013 CyberLogitec
*@FileName : PerformanceReportDBDAOSearchDPCSTurnTimeList1RSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2013.08.28
*@LastModifier : 
*@LastVersion : 1.0
* 2013.08.28 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.bkg.bookingreport.performancereport.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class PerformanceReportDBDAOSearchDPCSTurnTimeList1RSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 
	  * </pre>
	  */
	public PerformanceReportDBDAOSearchDPCSTurnTimeList1RSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dpcs_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("from_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pod_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.bkg.bookingreport.performancereport.integration").append("\n"); 
		query.append("FileName : PerformanceReportDBDAOSearchDPCSTurnTimeList1RSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${period} == 'OTH')" ).append("\n"); 
		query.append("SELECT BKG_NO," ).append("\n"); 
		query.append("       SR_AMD_TD," ).append("\n"); 
		query.append("       VVD_CD," ).append("\n"); 
		query.append("       BKG_OFC_CD," ).append("\n"); 
		query.append("       POL_CD," ).append("\n"); 
		query.append("       POD_CD," ).append("\n"); 
		query.append("       VIA," ).append("\n"); 
		query.append("       CM," ).append("\n"); 
		query.append("       HBL," ).append("\n"); 
		query.append("       AMD," ).append("\n"); 
		query.append("       ADD_VAL," ).append("\n"); 
		query.append("       RGN," ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '00' AS ORIGINAL_ACTUAL_DD, 	" ).append("\n"); 
		query.append("       '00' AS ORIGINAL_ACTUAL_HH,   " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_ACTUAL_MI,   " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_ACTUAL_SS,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS ORIGINAL_IDLE_DD,    	" ).append("\n"); 
		query.append("       '00' AS ORIGINAL_IDLE_HH,    " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_IDLE_MI,  " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_IDLE_SS,  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS ORIGINAL_TOTAL_DD,    " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_TOTAL_HH,  " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_TOTAL_MI,   " ).append("\n"); 
		query.append("       '00' AS ORIGINAL_TOTAL_SS,   " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '00' AS AMEND_ACTUAL_DD,   " ).append("\n"); 
		query.append("       '00' AS AMEND_ACTUAL_HH,   " ).append("\n"); 
		query.append("       '00' AS AMEND_ACTUAL_MI,  " ).append("\n"); 
		query.append("       '00' AS AMEND_ACTUAL_SS,    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS AMEND_IDLE_DD,    " ).append("\n"); 
		query.append("       '00' AS AMEND_IDLE_HH,    " ).append("\n"); 
		query.append("       '00' AS AMEND_IDLE_MI,    " ).append("\n"); 
		query.append("       '00' AS AMEND_IDLE_SS,    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS AMEND_TOTAL_DD,   " ).append("\n"); 
		query.append("       '00' AS AMEND_TOTAL_HH,   " ).append("\n"); 
		query.append("       '00' AS AMEND_TOTAL_MI,    " ).append("\n"); 
		query.append("       '00' AS AMEND_TOTAL_SS,    " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '00' AS TOTAL_ACTUAL_DD,    " ).append("\n"); 
		query.append("       '00' AS TOTAL_ACTUAL_HH,    " ).append("\n"); 
		query.append("       '00' AS TOTAL_ACTUAL_MI,   " ).append("\n"); 
		query.append("       '00' AS TOTAL_ACTUAL_SS,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS TOTAL_IDLE_DD,   " ).append("\n"); 
		query.append("       '00' AS TOTAL_IDLE_HH,   " ).append("\n"); 
		query.append("       '00' AS TOTAL_IDLE_MI,    " ).append("\n"); 
		query.append("       '00' AS TOTAL_IDLE_SS,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS TOTAL_TOTAL_DD,    " ).append("\n"); 
		query.append("       '00' AS TOTAL_TOTAL_HH,   " ).append("\n"); 
		query.append("       '00' AS TOTAL_TOTAL_MI,    " ).append("\n"); 
		query.append("       '00' AS TOTAL_TOTAL_SS,    " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '' AS SR_TRANS,   " ).append("\n"); 
		query.append("       '' AS SI_REC,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS SI_ELAPSED_DD,    " ).append("\n"); 
		query.append("       '00' AS SI_ELAPSED_HH,    " ).append("\n"); 
		query.append("       '00' AS SI_ELAPSED_MI,   " ).append("\n"); 
		query.append("       '00' AS SI_ELAPSED_SS,   " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '' AS IS_START, " ).append("\n"); 
		query.append("       '' AS IC_END,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS INPUT_ELAPSED_DD,   " ).append("\n"); 
		query.append("       '00' AS INPUT_ELAPSED_HH,   " ).append("\n"); 
		query.append("       '00' AS INPUT_ELAPSED_MI,    " ).append("\n"); 
		query.append("       '00' AS INPUT_ELAPSED_SS,   " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '' AS RS_START,   " ).append("\n"); 
		query.append("       '' AS RC_END,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS RATE_ELAPSED_DD, " ).append("\n"); 
		query.append("       '00' AS RATE_ELAPSED_HH, " ).append("\n"); 
		query.append("       '00' AS RATE_ELAPSED_MI, " ).append("\n"); 
		query.append("       '00' AS RATE_ELAPSED_SS, " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       '' AS QS_START,   " ).append("\n"); 
		query.append("       '' AS QC_END,  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '00' AS QA_ELAPSED_DD,  " ).append("\n"); 
		query.append("       '00' AS QA_ELAPSED_HH,  " ).append("\n"); 
		query.append("       '00' AS QA_ELAPSED_MI,   " ).append("\n"); 
		query.append("       '00' AS QA_ELAPSED_SS,  " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       SR_AMD_TP_CD,    -- SR_AMD_TP_CD" ).append("\n"); 
		query.append("       SR_NO,    -- SR_NO" ).append("\n"); 
		query.append("       PND_FLG,    -- PND_FLG" ).append("\n"); 
		query.append("       SR_KND_CD,    -- SR_KND_CD" ).append("\n"); 
		query.append("       SR_CRNT_INFO_CD,    -- SR_CRNT_INFO_CD" ).append("\n"); 
		query.append("       BL_DOC_INP_FLG,    -- BL_DOC_INP_FLG" ).append("\n"); 
		query.append("       BL_RT_FLG,    -- BL_RT_FLG" ).append("\n"); 
		query.append("       BL_AUD_FLG,    -- BL_AUD_FLG" ).append("\n"); 
		query.append("       BL_DRFT_FAX_OUT_FLG,    -- BL_DRFT_FAX_OUT_FLG" ).append("\n"); 
		query.append("       SR_WRK_STS_CD    -- SR_WRK_STS_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  FROM" ).append("\n"); 
		query.append("       (SELECT BKG.BKG_NO,    -- BKG NO" ).append("\n"); 
		query.append("               SCR.SR_CRNT_STS_CD,    -- STS" ).append("\n"); 
		query.append("               (SELECT INTG_CD_VAL_DESC" ).append("\n"); 
		query.append("                  FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                 WHERE INTG_CD_ID = 'CD01577'" ).append("\n"); 
		query.append("                   AND INTG_CD_VAL_CTNT = DECODE(SCR.SR_AMD_TP_CD, 'N', 'O', SCR.SR_AMD_TP_CD)" ).append("\n"); 
		query.append("                   AND ROWNUM = 1) AS SR_AMD_TD,    -- SR KIND" ).append("\n"); 
		query.append("               BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS VVD_CD,    -- T.VVD" ).append("\n"); 
		query.append("               BKG.BKG_OFC_CD,    -- BKG OFC." ).append("\n"); 
		query.append("               BKG.POL_CD,    -- POL" ).append("\n"); 
		query.append("               BKG.POD_CD,    -- POD" ).append("\n"); 
		query.append("               (SELECT INTG_CD_VAL_DP_DESC" ).append("\n"); 
		query.append("                  FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                 WHERE INTG_CD_ID = 'CD01581'" ).append("\n"); 
		query.append("                   AND INTG_CD_VAL_CTNT = SCR.SR_KND_CD" ).append("\n"); 
		query.append("                   AND ROWNUM = 1) AS VIA,    " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_CNTR_MF_DESC" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO) AS CM,  " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_HBL" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO) AS HBL,  " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_SR_CRNT_RQST" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_AMD_TP_CD = 'A') AS AMD,   " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_SR_CRNT_RQST" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_AMD_TP_CD = 'T') AS ADD_VAL,    " ).append("\n"); 
		query.append("               NVL((SELECT INTG_CD_VAL_DESC" ).append("\n"); 
		query.append("                      FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                     WHERE INTG_CD_ID = 'CD01603'" ).append("\n"); 
		query.append("                       AND INTG_CD_VAL_CTNT = (SELECT DISTINCT DECODE(RGN_OFC_CD, 'E', 'DE', 'J', 'JP', 'K', 'KR', 'N', 'US', 'S', 'PK', 'C', 'CN', 'XX')" ).append("\n"); 
		query.append("                                                 FROM BKG_EML_ACCT_STUP" ).append("\n"); 
		query.append("                                                WHERE BKG_OFC_CD = BKG.BKG_OFC_CD" ).append("\n"); 
		query.append("                                                  AND ROWNUM = 1))," ).append("\n"); 
		query.append("                   '('||BKG.BKG_OFC_CD||')') AS RGN,  " ).append("\n"); 
		query.append("               (SELECT SUM(SR_PROC_HRS)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_PROC_HRS is not null ) AS TOTAL_ACTUAL,    " ).append("\n"); 
		query.append("               ( SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   and SR_STS_CD <>  'XX' )" ).append("\n"); 
		query.append("                    - (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                     FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                     WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                       AND SR_STS_CD ='ST'" ).append("\n"); 
		query.append("                       )  AS TOTAL,    -- TOTAL" ).append("\n"); 
		query.append("               (SELECT SUM(SR_PROC_HRS)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_NO  =  (select  sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD = 'O' and bkg_no = bkg.bkg_no and rownum =1  )) AS ORIGINAL_ACTUAL, " ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("               ( SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   and SR_STS_CD <>  'XX'" ).append("\n"); 
		query.append("                   AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))" ).append("\n"); 
		query.append("                    - " ).append("\n"); 
		query.append("                   (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                     FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                     WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                       AND SR_STS_CD ='ST'" ).append("\n"); 
		query.append("                       AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )) AS ORIGINAL_TOTAL,       " ).append("\n"); 
		query.append("                (SELECT SUM(SR_PROC_HRS)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_NO  in  (select  distinct sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD <> 'O' and bkg_no = bkg.bkg_no   )) AS AMEND_ACTUAL,   " ).append("\n"); 
		query.append("               (SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                 FROM BKG_SR_HIS H " ).append("\n"); 
		query.append("                WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                  AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))" ).append("\n"); 
		query.append("                    - (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                       FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                       WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                       AND SR_STS_CD ='ST'" ).append("\n"); 
		query.append("                       AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )" ).append("\n"); 
		query.append("                       ) AS AMEND_TOTAL,  " ).append("\n"); 
		query.append("               (SELECT MIN(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE SR_KND_CD = SCR.SR_KND_CD" ).append("\n"); 
		query.append("                   AND SR_NO = SCR.SR_NO" ).append("\n"); 
		query.append("                   AND BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_STS_CD = 'ST') AS SR_TRANS,  " ).append("\n"); 
		query.append("               CASE" ).append("\n"); 
		query.append("                   WHEN TRIM(SCR.SR_KND_CD) = 'F' THEN" ).append("\n"); 
		query.append("                       (SELECT SR_TRNS_DT" ).append("\n"); 
		query.append("                          FROM BKG_SR_FAX" ).append("\n"); 
		query.append("                         WHERE SR_NO = SCR.SR_NO" ).append("\n"); 
		query.append("                           AND SR_KND_CD = 'F')" ).append("\n"); 
		query.append("                   ELSE" ).append("\n"); 
		query.append("                       (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                          FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                         WHERE SR_KND_CD = SCR.SR_KND_CD" ).append("\n"); 
		query.append("                           AND SR_NO = SCR.SR_NO" ).append("\n"); 
		query.append("                           AND BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                           AND SR_STS_CD = 'ST')" ).append("\n"); 
		query.append("               END AS SI_REC,   " ).append("\n"); 
		query.append("               '' AS IS_START,  " ).append("\n"); 
		query.append("               '' AS IC_END,   " ).append("\n"); 
		query.append("               '' AS RS_START,   " ).append("\n"); 
		query.append("               '' AS RC_END,  " ).append("\n"); 
		query.append("               '' AS QS_START,   " ).append("\n"); 
		query.append("               '' AS QC_END,  " ).append("\n"); 
		query.append("               SCR.SR_AMD_TP_CD," ).append("\n"); 
		query.append("               SCR.SR_NO," ).append("\n"); 
		query.append("               SCR.PND_FLG," ).append("\n"); 
		query.append("               SCR.SR_KND_CD," ).append("\n"); 
		query.append("               SCR.SR_CRNT_INFO_CD," ).append("\n"); 
		query.append("               SCR.BL_DOC_INP_FLG," ).append("\n"); 
		query.append("               SCR.BL_RT_FLG," ).append("\n"); 
		query.append("               SCR.BL_AUD_FLG," ).append("\n"); 
		query.append("               SCR.BL_DRFT_FAX_OUT_FLG," ).append("\n"); 
		query.append("               SCR.SR_WRK_STS_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("          FROM BKG_SR_CRNT_RQST SCR," ).append("\n"); 
		query.append("#if (${bkg_no} == '' && ${rgn_cd_d} != '')" ).append("\n"); 
		query.append("               BKG_EML_ACCT_STUP EAS," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("               BKG_BOOKING BKG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         WHERE 1 = 1" ).append("\n"); 
		query.append("#if (${bkg_no} == '')" ).append("\n"); 
		query.append("     #if (${from_dt} != '' && ${to_dt} != '')" ).append("\n"); 
		query.append("          #if (${period} == 'WRK')" ).append("\n"); 
		query.append("           /*    Working    */" ).append("\n"); 
		query.append("           AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                     AND TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("           AND (SCR.BL_DOC_INP_FLG  <> 'Y' OR SCR.BL_RT_FLG <> 'Y' OR SCR.BL_AUD_FLG <> 'Y')" ).append("\n"); 
		query.append("          #elseif (${period} == 'CPT')" ).append("\n"); 
		query.append("           /*    Complete    */" ).append("\n"); 
		query.append("           AND SCR.BL_AUD_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999" ).append("\n"); 
		query.append("           AND SCR.BL_DOC_INP_FLG  ='Y'" ).append("\n"); 
		query.append("           AND SCR.BL_RT_FLG ='Y'" ).append("\n"); 
		query.append("           AND SCR.BL_AUD_FLG ='Y'" ).append("\n"); 
		query.append("           #elseif (${period} == 'OTH')" ).append("\n"); 
		query.append("				   /*	 Other		*/" ).append("\n"); 
		query.append("                   AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999" ).append("\n"); 
		query.append("                   AND (SCR.BL_DOC_INP_FLG  = 'N' AND SCR.BL_RT_FLG = 'N' AND SCR.BL_AUD_FLG = 'N')" ).append("\n"); 
		query.append("          #end" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${dpcs_ofc_cd} != '')" ).append("\n"); 
		query.append("           AND SCR.DPCS_OFC_CD = @[dpcs_ofc_cd]" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${vvd_cd} != '')" ).append("\n"); 
		query.append("           AND BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD LIKE @[vvd_cd]||'%'" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${pol_cd} != '')" ).append("\n"); 
		query.append("           AND BKG.POL_CD LIKE @[pol_cd]||'%'" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${pod_cd} != '')" ).append("\n"); 
		query.append("           AND BKG.POD_CD LIKE @[pod_cd]||'%'" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${bkg_ofc_cd_d} != '')" ).append("\n"); 
		query.append("           AND BKG.BKG_OFC_CD IN (${bkg_ofc_cd_d})" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${rgn_cd_d} != '')" ).append("\n"); 
		query.append("           AND EAS.BKG_OFC_CD = BKG.BKG_OFC_CD" ).append("\n"); 
		query.append("           AND EAS.RGN_OFC_CD IN (${rgn_cd_d})" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("           AND SCR.BKG_NO LIKE @[bkg_no]||'%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           AND SCR.SR_CRNT_STS_CD <> 'XX'" ).append("\n"); 
		query.append("           AND BKG.BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("           AND BKG.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         GROUP BY BKG.BKG_NO," ).append("\n"); 
		query.append("                  BKG.BKG_OFC_CD," ).append("\n"); 
		query.append("                  BKG.POD_CD," ).append("\n"); 
		query.append("                  BKG.POL_CD," ).append("\n"); 
		query.append("                  BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD," ).append("\n"); 
		query.append("                  SCR.BKG_NO," ).append("\n"); 
		query.append("                  SCR.BL_AUD_HRS," ).append("\n"); 
		query.append("                  SCR.BL_DOC_INP_HRS," ).append("\n"); 
		query.append("                  SCR.BL_RT_HRS," ).append("\n"); 
		query.append("                  SCR.PND_HRS," ).append("\n"); 
		query.append("                  SCR.RTN_HRS," ).append("\n"); 
		query.append("                  SCR.RTN_TO_RTN_HRS," ).append("\n"); 
		query.append("                  SCR.SR_AMD_TP_CD," ).append("\n"); 
		query.append("                  SCR.SR_CRNT_STS_CD," ).append("\n"); 
		query.append("                  SCR.SR_KND_CD," ).append("\n"); 
		query.append("                  SCR.SR_NO," ).append("\n"); 
		query.append("                  SCR.PND_FLG," ).append("\n"); 
		query.append("                  SCR.SR_CRNT_INFO_CD," ).append("\n"); 
		query.append("                  SCR.BL_DOC_INP_FLG," ).append("\n"); 
		query.append("                  SCR.BL_RT_FLG," ).append("\n"); 
		query.append("                  SCR.BL_AUD_FLG," ).append("\n"); 
		query.append("                  SCR.BL_DRFT_FAX_OUT_FLG," ).append("\n"); 
		query.append("                  SCR.SR_WRK_STS_CD)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" ORDER BY BKG_NO" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("SELECT BKG_NO," ).append("\n"); 
		query.append("       SR_AMD_TD," ).append("\n"); 
		query.append("       VVD_CD," ).append("\n"); 
		query.append("       BKG_OFC_CD," ).append("\n"); 
		query.append("       POL_CD," ).append("\n"); 
		query.append("       POD_CD," ).append("\n"); 
		query.append("       VIA," ).append("\n"); 
		query.append("       CM," ).append("\n"); 
		query.append("       HBL," ).append("\n"); 
		query.append("       AMD," ).append("\n"); 
		query.append("       ADD_VAL," ).append("\n"); 
		query.append("       RGN," ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'DD'), '00') AS ORIGINAL_ACTUAL_DD, 	" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'HH'), '00') AS ORIGINAL_ACTUAL_HH,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'MM'), '00') AS ORIGINAL_ACTUAL_MI,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'SS'), '00') AS ORIGINAL_ACTUAL_SS,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'DD'), '00') AS ORIGINAL_IDLE_DD,    	" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'HH'), '00') AS ORIGINAL_IDLE_HH,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'MM'), '00') AS ORIGINAL_IDLE_MI,  " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'SS'), '00') AS ORIGINAL_IDLE_SS,  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'DD'), '00') AS ORIGINAL_TOTAL_DD,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'HH'), '00') AS ORIGINAL_TOTAL_HH,  " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'MM'), '00') AS ORIGINAL_TOTAL_MI,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'SS'), '00') AS ORIGINAL_TOTAL_SS,   " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'DD'), '00') AS AMEND_ACTUAL_DD,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'HH'), '00') AS AMEND_ACTUAL_HH,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'MM'), '00') AS AMEND_ACTUAL_MI,  " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'SS'), '00') AS AMEND_ACTUAL_SS,    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'DD'), '00') AS AMEND_IDLE_DD,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'HH'), '00') AS AMEND_IDLE_HH,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'MM'), '00') AS AMEND_IDLE_MI,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'SS'), '00') AS AMEND_IDLE_SS,    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'DD'), '00') AS AMEND_TOTAL_DD,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'HH'), '00') AS AMEND_TOTAL_HH,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'MM'), '00') AS AMEND_TOTAL_MI,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'SS'), '00') AS AMEND_TOTAL_SS,    " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'DD'), '00') AS TOTAL_ACTUAL_DD,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'HH'), '00') AS TOTAL_ACTUAL_HH,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'MM'), '00') AS TOTAL_ACTUAL_MI,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'SS'), '00') AS TOTAL_ACTUAL_SS,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'DD'), '00') AS TOTAL_IDLE_DD,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'HH'), '00') AS TOTAL_IDLE_HH,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'MM'), '00') AS TOTAL_IDLE_MI,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'SS'), '00') AS TOTAL_IDLE_SS,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'DD'), '00') AS TOTAL_TOTAL_DD,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'HH'), '00') AS TOTAL_TOTAL_HH,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'MM'), '00') AS TOTAL_TOTAL_MI,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'SS'), '00') AS TOTAL_TOTAL_SS,    " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       TO_CHAR(SR_TRANS, 'MM-DD HH24:MI:SS') AS SR_TRANS,   " ).append("\n"); 
		query.append("       TO_CHAR(SI_REC, 'MM-DD HH24:MI:SS') AS SI_REC,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'DD'), '00') AS SI_ELAPSED_DD,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'HH'), '00') AS SI_ELAPSED_HH,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'MM'), '00') AS SI_ELAPSED_MI,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'SS'), '00') AS SI_ELAPSED_SS,   " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       TO_CHAR(IS_START, 'MM-DD HH24:MI:SS') AS IS_START, " ).append("\n"); 
		query.append("       TO_CHAR(IC_END, 'MM-DD HH24:MI:SS') AS IC_END,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'DD'), '00') AS INPUT_ELAPSED_DD,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'HH'), '00') AS INPUT_ELAPSED_HH,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'MM'), '00') AS INPUT_ELAPSED_MI,    " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'SS'), '00') AS INPUT_ELAPSED_SS,   " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       TO_CHAR(RS_START, 'MM-DD HH24:MI:SS') AS RS_START,   " ).append("\n"); 
		query.append("       TO_CHAR(RC_END, 'MM-DD HH24:MI:SS') AS RC_END,   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'DD'), '00') AS RATE_ELAPSED_DD, " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'HH'), '00') AS RATE_ELAPSED_HH, " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'MM'), '00') AS RATE_ELAPSED_MI, " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'SS'), '00') AS RATE_ELAPSED_SS, " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       TO_CHAR(QS_START, 'MM-DD HH24:MI:SS') AS QS_START,   " ).append("\n"); 
		query.append("       TO_CHAR(QC_END, 'MM-DD HH24:MI:SS') AS QC_END,  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'DD'), '00') AS QA_ELAPSED_DD,  " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'HH'), '00') AS QA_ELAPSED_HH,  " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'MM'), '00') AS QA_ELAPSED_MI,   " ).append("\n"); 
		query.append("       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'SS'), '00') AS QA_ELAPSED_SS,  " ).append("\n"); 
		query.append("       ----" ).append("\n"); 
		query.append("       SR_AMD_TP_CD,    -- SR_AMD_TP_CD" ).append("\n"); 
		query.append("       SR_NO,    -- SR_NO" ).append("\n"); 
		query.append("       PND_FLG,    -- PND_FLG" ).append("\n"); 
		query.append("       SR_KND_CD,    -- SR_KND_CD" ).append("\n"); 
		query.append("       SR_CRNT_INFO_CD,    -- SR_CRNT_INFO_CD" ).append("\n"); 
		query.append("       BL_DOC_INP_FLG,    -- BL_DOC_INP_FLG" ).append("\n"); 
		query.append("       BL_RT_FLG,    -- BL_RT_FLG" ).append("\n"); 
		query.append("       BL_AUD_FLG,    -- BL_AUD_FLG" ).append("\n"); 
		query.append("       BL_DRFT_FAX_OUT_FLG,    -- BL_DRFT_FAX_OUT_FLG" ).append("\n"); 
		query.append("       SR_WRK_STS_CD    -- SR_WRK_STS_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  FROM" ).append("\n"); 
		query.append("       (SELECT BKG.BKG_NO,    -- BKG NO" ).append("\n"); 
		query.append("               SCR.SR_CRNT_STS_CD,    -- STS" ).append("\n"); 
		query.append("               (SELECT INTG_CD_VAL_DESC" ).append("\n"); 
		query.append("                  FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                 WHERE INTG_CD_ID = 'CD01577'" ).append("\n"); 
		query.append("                   AND INTG_CD_VAL_CTNT = DECODE(SCR.SR_AMD_TP_CD, 'N', 'O', SCR.SR_AMD_TP_CD)" ).append("\n"); 
		query.append("                   AND ROWNUM = 1) AS SR_AMD_TD,    -- SR KIND" ).append("\n"); 
		query.append("               BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS VVD_CD,    -- T.VVD" ).append("\n"); 
		query.append("               BKG.BKG_OFC_CD,    -- BKG OFC." ).append("\n"); 
		query.append("               BKG.POL_CD,    -- POL" ).append("\n"); 
		query.append("               BKG.POD_CD,    -- POD" ).append("\n"); 
		query.append("               (SELECT INTG_CD_VAL_DP_DESC" ).append("\n"); 
		query.append("                  FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                 WHERE INTG_CD_ID = 'CD01581'" ).append("\n"); 
		query.append("                   AND INTG_CD_VAL_CTNT = SCR.SR_KND_CD" ).append("\n"); 
		query.append("                   AND ROWNUM = 1) AS VIA,    " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_CNTR_MF_DESC" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO) AS CM,  " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_HBL" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO) AS HBL,  " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_SR_CRNT_RQST" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_AMD_TP_CD = 'A') AS AMD,   " ).append("\n"); 
		query.append("               (SELECT COUNT(*)" ).append("\n"); 
		query.append("                  FROM BKG_SR_CRNT_RQST" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_AMD_TP_CD = 'T') AS ADD_VAL,    " ).append("\n"); 
		query.append("               NVL((SELECT INTG_CD_VAL_DESC" ).append("\n"); 
		query.append("                      FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                     WHERE INTG_CD_ID = 'CD01603'" ).append("\n"); 
		query.append("                       AND INTG_CD_VAL_CTNT = (SELECT DISTINCT DECODE(RGN_OFC_CD, 'E', 'DE', 'J', 'JP', 'K', 'KR', 'N', 'US', 'S', 'PK', 'C', 'CN', 'XX')" ).append("\n"); 
		query.append("                                                 FROM BKG_EML_ACCT_STUP" ).append("\n"); 
		query.append("                                                WHERE BKG_OFC_CD = BKG.BKG_OFC_CD" ).append("\n"); 
		query.append("                                                  AND ROWNUM = 1))," ).append("\n"); 
		query.append("                   '('||BKG.BKG_OFC_CD||')') AS RGN,  " ).append("\n"); 
		query.append("               (SELECT SUM(SR_PROC_HRS)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_PROC_HRS is not null ) AS TOTAL_ACTUAL,    " ).append("\n"); 
		query.append("               ( SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   and SR_STS_CD <>  'XX' )" ).append("\n"); 
		query.append("                    - (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                     FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                     WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                       AND SR_STS_CD ='ST'" ).append("\n"); 
		query.append("                       )  AS TOTAL,    -- TOTAL" ).append("\n"); 
		query.append("               (SELECT SUM(SR_PROC_HRS)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_NO  =  (select  sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD = 'O' and bkg_no = bkg.bkg_no and rownum =1  )) AS ORIGINAL_ACTUAL, " ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("               ( SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   and SR_STS_CD <>  'XX'" ).append("\n"); 
		query.append("                   AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))" ).append("\n"); 
		query.append("                    - " ).append("\n"); 
		query.append("                   (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                     FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                     WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                       AND SR_STS_CD ='ST'" ).append("\n"); 
		query.append("                       AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )) AS ORIGINAL_TOTAL,       " ).append("\n"); 
		query.append("                (SELECT SUM(SR_PROC_HRS)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                 WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_NO  in  (select  distinct sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD <> 'O' and bkg_no = bkg.bkg_no   )) AS AMEND_ACTUAL,   " ).append("\n"); 
		query.append("               (SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                 FROM BKG_SR_HIS H " ).append("\n"); 
		query.append("                WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                  AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))" ).append("\n"); 
		query.append("                    - (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                       FROM BKG_SR_HIS H" ).append("\n"); 
		query.append("                       WHERE BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                       AND SR_STS_CD ='ST'" ).append("\n"); 
		query.append("                       AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )" ).append("\n"); 
		query.append("                       ) AS AMEND_TOTAL,  " ).append("\n"); 
		query.append("               (SELECT MIN(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE SR_KND_CD = SCR.SR_KND_CD" ).append("\n"); 
		query.append("                   AND SR_NO = SCR.SR_NO" ).append("\n"); 
		query.append("                   AND BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                   AND SR_STS_CD = 'ST') AS SR_TRANS,  " ).append("\n"); 
		query.append("               CASE" ).append("\n"); 
		query.append("                   WHEN TRIM(SCR.SR_KND_CD) = 'F' THEN" ).append("\n"); 
		query.append("                       (SELECT SR_TRNS_DT" ).append("\n"); 
		query.append("                          FROM BKG_SR_FAX" ).append("\n"); 
		query.append("                         WHERE SR_NO = SCR.SR_NO" ).append("\n"); 
		query.append("                           AND SR_KND_CD = 'F')" ).append("\n"); 
		query.append("                   ELSE" ).append("\n"); 
		query.append("                       (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                          FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                         WHERE SR_KND_CD = SCR.SR_KND_CD" ).append("\n"); 
		query.append("                           AND SR_NO = SCR.SR_NO" ).append("\n"); 
		query.append("                           AND BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("                           AND SR_STS_CD = 'ST')" ).append("\n"); 
		query.append("               END AS SI_REC,   " ).append("\n"); 
		query.append("               (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'ID') AS IS_START,  " ).append("\n"); 
		query.append("               (SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'ID') AS IC_END,   " ).append("\n"); 
		query.append("               (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'RD') AS RS_START,   " ).append("\n"); 
		query.append("                (SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'RD') AS RC_END,  " ).append("\n"); 
		query.append("               (SELECT MIN(SR_PROC_UPD_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'AD') AS QS_START,   " ).append("\n"); 
		query.append("                (SELECT MAX(ST_DT)" ).append("\n"); 
		query.append("                  FROM BKG_SR_HIS" ).append("\n"); 
		query.append("                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'AD') AS QC_END,  " ).append("\n"); 
		query.append("               SCR.SR_AMD_TP_CD," ).append("\n"); 
		query.append("               SCR.SR_NO," ).append("\n"); 
		query.append("               SCR.PND_FLG," ).append("\n"); 
		query.append("               SCR.SR_KND_CD," ).append("\n"); 
		query.append("               SCR.SR_CRNT_INFO_CD," ).append("\n"); 
		query.append("               SCR.BL_DOC_INP_FLG," ).append("\n"); 
		query.append("               SCR.BL_RT_FLG," ).append("\n"); 
		query.append("               SCR.BL_AUD_FLG," ).append("\n"); 
		query.append("               SCR.BL_DRFT_FAX_OUT_FLG," ).append("\n"); 
		query.append("               SCR.SR_WRK_STS_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("          FROM BKG_SR_CRNT_RQST SCR," ).append("\n"); 
		query.append("#if (${bkg_no} == '' && ${rgn_cd_d} != '')" ).append("\n"); 
		query.append("               BKG_EML_ACCT_STUP EAS," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("               BKG_BOOKING BKG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         WHERE 1 = 1" ).append("\n"); 
		query.append("#if (${bkg_no} == '')" ).append("\n"); 
		query.append("     #if (${from_dt} != '' && ${to_dt} != '')" ).append("\n"); 
		query.append("          #if (${period} == 'WRK')" ).append("\n"); 
		query.append("           /*    Working    */" ).append("\n"); 
		query.append("           AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                     AND TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("           AND (SCR.BL_DOC_INP_FLG  <> 'Y' OR SCR.BL_RT_FLG <> 'Y' OR SCR.BL_AUD_FLG <> 'Y')" ).append("\n"); 
		query.append("          #elseif (${period} == 'CPT')" ).append("\n"); 
		query.append("           /*    Complete    */" ).append("\n"); 
		query.append("           AND SCR.BL_AUD_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999" ).append("\n"); 
		query.append("           AND SCR.BL_DOC_INP_FLG  ='Y'" ).append("\n"); 
		query.append("           AND SCR.BL_RT_FLG ='Y'" ).append("\n"); 
		query.append("           AND SCR.BL_AUD_FLG ='Y'" ).append("\n"); 
		query.append("           #elseif (${period} == 'OTH')" ).append("\n"); 
		query.append("				   /*	 Other		*/" ).append("\n"); 
		query.append("                   AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999" ).append("\n"); 
		query.append("                   AND (SCR.BL_DOC_INP_FLG  = 'N' AND SCR.BL_RT_FLG = 'N' AND SCR.BL_AUD_FLG = 'N')" ).append("\n"); 
		query.append("          #end" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${dpcs_ofc_cd} != '')" ).append("\n"); 
		query.append("           AND SCR.DPCS_OFC_CD = @[dpcs_ofc_cd]" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${vvd_cd} != '')" ).append("\n"); 
		query.append("           AND BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD LIKE @[vvd_cd]||'%'" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${pol_cd} != '')" ).append("\n"); 
		query.append("           AND BKG.POL_CD LIKE @[pol_cd]||'%'" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${pod_cd} != '')" ).append("\n"); 
		query.append("           AND BKG.POD_CD LIKE @[pod_cd]||'%'" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${bkg_ofc_cd_d} != '')" ).append("\n"); 
		query.append("           AND BKG.BKG_OFC_CD IN (${bkg_ofc_cd_d})" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("     #if (${rgn_cd_d} != '')" ).append("\n"); 
		query.append("           AND EAS.BKG_OFC_CD = BKG.BKG_OFC_CD" ).append("\n"); 
		query.append("           AND EAS.RGN_OFC_CD IN (${rgn_cd_d})" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("           AND SCR.BKG_NO LIKE @[bkg_no]||'%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           AND SCR.SR_CRNT_STS_CD <> 'XX'" ).append("\n"); 
		query.append("           AND BKG.BKG_NO = SCR.BKG_NO" ).append("\n"); 
		query.append("           AND BKG.BKG_STS_CD <> 'X'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         GROUP BY BKG.BKG_NO," ).append("\n"); 
		query.append("                  BKG.BKG_OFC_CD," ).append("\n"); 
		query.append("                  BKG.POD_CD," ).append("\n"); 
		query.append("                  BKG.POL_CD," ).append("\n"); 
		query.append("                  BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD," ).append("\n"); 
		query.append("                  SCR.BKG_NO," ).append("\n"); 
		query.append("                  SCR.BL_AUD_HRS," ).append("\n"); 
		query.append("                  SCR.BL_DOC_INP_HRS," ).append("\n"); 
		query.append("                  SCR.BL_RT_HRS," ).append("\n"); 
		query.append("                  SCR.PND_HRS," ).append("\n"); 
		query.append("                  SCR.RTN_HRS," ).append("\n"); 
		query.append("                  SCR.RTN_TO_RTN_HRS," ).append("\n"); 
		query.append("                  SCR.SR_AMD_TP_CD," ).append("\n"); 
		query.append("                  SCR.SR_CRNT_STS_CD," ).append("\n"); 
		query.append("                  SCR.SR_KND_CD," ).append("\n"); 
		query.append("                  SCR.SR_NO," ).append("\n"); 
		query.append("                  SCR.PND_FLG," ).append("\n"); 
		query.append("                  SCR.SR_CRNT_INFO_CD," ).append("\n"); 
		query.append("                  SCR.BL_DOC_INP_FLG," ).append("\n"); 
		query.append("                  SCR.BL_RT_FLG," ).append("\n"); 
		query.append("                  SCR.BL_AUD_FLG," ).append("\n"); 
		query.append("                  SCR.BL_DRFT_FAX_OUT_FLG," ).append("\n"); 
		query.append("                  SCR.SR_WRK_STS_CD)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" ORDER BY BKG_NO" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}