/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAOSearchSpaceUtilizationPortListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.23
*@LastModifier : Arie
*@LastVersion : 1.0
* 2017.01.23 Arie
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author Arie
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAOSearchSpaceUtilizationPortListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Space Utilization Inquiry 화면을 Port 기준 조회 합니다.
	  * 2013.10.30 최윤성 [CHM-201327083-01] IPC Sector 판매 활성화 Tool 개발 - Space Utilization 화면 신규 개발
	  * 2014.01.13 김시몬 [선반영] BKG CMPB계산시 BKG_VVD의 Trunk VVD기준 pol, pod를 이용하여 구한다.
	  * 2014.01.16 김시몬 [선반영] BKG CMPB계산시 Office Profit기준 CM(RA_CM_COST_AMT)를 이용하여 구한다. 
	  * 2014.10.10 Arie IM [CHM-201432357] Space utilization inquiry 메뉴 로직 수정 - SPC01권한유저
	  * 2016.05.18 최성민 Double Callling Route(Port/Tmnl)에 대한 물량집계 및 병목상 Logic 보완 사항 요청
	  * 2017.1.23 SM상선 전환에 따른 소스변경
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAOSearchSpaceUtilizationPortListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("login_user_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("view_type11",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("eDate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sDate",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAOSearchSpaceUtilizationPortListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VSL_PORT AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           VP.VSL_CD" ).append("\n"); 
		query.append("          ,VP.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,VP.SKD_DIR_CD" ).append("\n"); 
		query.append("          ,VP.VSL_CD || VP.SKD_VOY_NO || VP.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("          ,MV.RLANE_CD" ).append("\n"); 
		query.append("          ,VP.VSL_SLAN_CD" ).append("\n"); 
		query.append("          ,VP.POL_PORT" ).append("\n"); 
		query.append("          ,VP.POL_YD_CD" ).append("\n"); 
		query.append("          ,DECODE(VP.POL_YD_CD, NULL, '', SUBSTR(VP.POL_YD_CD, 6, 2)) AS POL_TML_CD" ).append("\n"); 
		query.append("          ,TO_CHAR(VP.POL_ETA, 'YYYY-MM-DD HH24:MI') AS POL_ETA" ).append("\n"); 
		query.append("          ,TO_CHAR(VP.POL_ETD, 'YYYY-MM-DD HH24:MI') AS POL_ETD" ).append("\n"); 
		query.append("          ,VP.POD_PORT" ).append("\n"); 
		query.append("          ,VP.POD_YD_CD" ).append("\n"); 
		query.append("          ,DECODE(VP.POD_YD_CD, NULL, '', SUBSTR(VP.POD_YD_CD, 6, 2)) AS POD_TML_CD" ).append("\n"); 
		query.append("          ,TO_CHAR(VP.POD_ETA, 'YYYY-MM-DD HH24:MI') AS POD_ETA" ).append("\n"); 
		query.append("          ,TO_CHAR(VP.POD_ETD, 'YYYY-MM-DD HH24:MI') AS POD_ETD" ).append("\n"); 
		query.append("          ,VP.CARRIER_CD" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT T1.VSL_CD" ).append("\n"); 
		query.append("                    ,T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,T1.VSL_SLAN_CD" ).append("\n"); 
		query.append("                    ,T2.VPS_PORT_CD AS POL_PORT" ).append("\n"); 
		query.append("                    ,T2.YD_CD       AS POL_YD_CD" ).append("\n"); 
		query.append("                    ,T2.VPS_ETA_DT  AS POL_ETA" ).append("\n"); 
		query.append("                    ,T2.VPS_ETB_DT  AS POL_ETB" ).append("\n"); 
		query.append("                    ,T2.VPS_ETD_DT  AS POL_ETD" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_PORT_CD) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_PORT" ).append("\n"); 
		query.append("                    ,LEAD(T2.YD_CD      ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_YD_CD" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_ETA_DT ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_ETA" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_ETB_DT ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_ETB" ).append("\n"); 
		query.append("                    ,LEAD(T2.PF_ETB_DT  ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_PF_ETB" ).append("\n"); 
		query.append("                    ,LEAD(T2.VPS_ETD_DT ) OVER (PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, CLPT_SEQ) AS POD_ETD" ).append("\n"); 
		query.append("                    ,NVL(T1.ACT_CRR_CD, T3.CRR_CD) AS CARRIER_CD" ).append("\n"); 
		query.append("                FROM VSK_VSL_SKD      T1" ).append("\n"); 
		query.append("                    ,VSK_VSL_PORT_SKD T2" ).append("\n"); 
		query.append("                    ,MDM_VSL_CNTR     T3" ).append("\n"); 
		query.append("               WHERE T1.VSL_CD     = T2.VSL_CD" ).append("\n"); 
		query.append("                 AND T1.SKD_VOY_NO = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND T1.SKD_DIR_CD = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND T1.VSL_CD     = T3.VSL_CD" ).append("\n"); 
		query.append("                 AND T2.VPS_ETA_DT BETWEEN TO_DATE(@[sDate], 'YYYY-MM-DD') AND  TO_DATE(@[eDate], 'YYYY-MM-DD')  + 60" ).append("\n"); 
		query.append("                 AND T2.VPS_PORT_CD IN (@[pol_cd], @[pod_cd])" ).append("\n"); 
		query.append("                 AND EXISTS (SELECT 'X'" ).append("\n"); 
		query.append("                               FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                              WHERE VSL_CD            = T1.VSL_CD" ).append("\n"); 
		query.append("                                AND SKD_VOY_NO        = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND SKD_DIR_CD        = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND VPS_PORT_CD       = @[pol_cd]" ).append("\n"); 
		query.append("                                AND TURN_PORT_IND_CD IN ('Y', 'N'))" ).append("\n"); 
		query.append("                 AND NVL(T2.SKD_CNG_STS_CD, 'X') <> 'S'" ).append("\n"); 
		query.append("           ) VP" ).append("\n"); 
		query.append("          ,MAS_MON_VVD  MV" ).append("\n"); 
		query.append("          ,MDM_REV_LANE RL" ).append("\n"); 
		query.append("     WHERE 1 = 1" ).append("\n"); 
		query.append("       AND VP.POL_PORT    = @[pol_cd]" ).append("\n"); 
		query.append("       AND VP.POD_PORT    = @[pod_cd]" ).append("\n"); 
		query.append("       AND VP.POL_ETA   BETWEEN TO_DATE(@[sDate], 'YYYY-MM-DD') AND  TO_DATE(@[eDate], 'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("       AND MV.RLANE_CD    = NVL(@[lane],MV.RLANE_CD) " ).append("\n"); 
		query.append("       AND VP.VSL_CD      = MV.VSL_CD" ).append("\n"); 
		query.append("       AND VP.SKD_VOY_NO  = MV.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND VP.SKD_DIR_CD  = MV.DIR_CD" ).append("\n"); 
		query.append("       AND VP.VSL_SLAN_CD = MV.SLAN_CD" ).append("\n"); 
		query.append("       AND MV.DELT_FLG    = 'N'" ).append("\n"); 
		query.append("       AND MV.RLANE_CD    = RL.RLANE_CD" ).append("\n"); 
		query.append("       --AND RL.REP_TRD_CD  = SPC_GET_REP_TRD_FNC (MV.RLANE_CD)" ).append("\n"); 
		query.append("       AND RL.REP_TRD_CD  = SAQ_GET_REP_TRD_FNC (MV.RLANE_CD)" ).append("\n"); 
		query.append("       AND RL.VSL_TP_CD   = 'C' " ).append("\n"); 
		query.append("       AND MV.RLANE_CD IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PARAMS AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           RLANE_CD" ).append("\n"); 
		query.append("          ,VSL_CD" ).append("\n"); 
		query.append("          ,SKD_VOY_NO" ).append("\n"); 
		query.append("          ,SKD_DIR_CD" ).append("\n"); 
		query.append("          ,POL_PORT" ).append("\n"); 
		query.append("          ,POD_PORT" ).append("\n"); 
		query.append("      FROM VSL_PORT VP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", CUR_PORTS AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD" ).append("\n"); 
		query.append("          ,VSL_CD" ).append("\n"); 
		query.append("          ,SKD_VOY_NO" ).append("\n"); 
		query.append("          ,SKD_DIR_CD" ).append("\n"); 
		query.append("          ,VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS BASE_VVD" ).append("\n"); 
		query.append("          ,PORT_CD" ).append("\n"); 
		query.append("          ,YD_CD" ).append("\n"); 
		query.append("          ,CLPT_SEQ" ).append("\n"); 
		query.append("          ,CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,TURN_SKD_VOY_NO" ).append("\n"); 
		query.append("          ,TURN_SKD_DIR_CD" ).append("\n"); 
		query.append("          ,TURN_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,FLG" ).append("\n"); 
		query.append("          ,BSA" ).append("\n"); 
		query.append("          ,WGT_BSA" ).append("\n"); 
		query.append("          ,STS" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT P.RLANE_CD" ).append("\n"); 
		query.append("                    ,S1.VSL_CD" ).append("\n"); 
		query.append("                    ,S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,S1.VPS_PORT_CD AS PORT_CD" ).append("\n"); 
		query.append("                    ,S1.YD_CD" ).append("\n"); 
		query.append("                    ,S1.CLPT_SEQ" ).append("\n"); 
		query.append("                    ,S1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,S1.TURN_SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,S1.TURN_SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,S1.TURN_CLPT_IND_SEQ AS TURN_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,(" ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                            WHEN TRIM(S1.TURN_SKD_VOY_NO) IS NULL  THEN 2" ).append("\n"); 
		query.append("                            WHEN S1.TURN_PORT_IND_CD IN ('Y', 'N') THEN 1" ).append("\n"); 
		query.append("                                                                   ELSE 3" ).append("\n"); 
		query.append("                        END" ).append("\n"); 
		query.append("                     ) AS FLG" ).append("\n"); 
		query.append("                    ,(" ).append("\n"); 
		query.append("                        SELECT (" ).append("\n"); 
		query.append("                                  SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                                    FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                                         MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                                   WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                                     AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.BSA_OP_JB_CD(+) = '007'" ).append("\n"); 
		query.append("                                     AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                                     AND A.PORT_CD     (+) = NVL(SUBSTR(S1.YD_CD, 1, 5), S1.VPS_PORT_CD)" ).append("\n"); 
		query.append("                               ) AS BSA" ).append("\n"); 
		query.append("                          FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("                         WHERE C.RLANE_CD     = P.RLANE_CD" ).append("\n"); 
		query.append("                           AND C.VSL_CD       = P.VSL_CD" ).append("\n"); 
		query.append("                           AND C.SKD_VOY_NO   = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND C.SKD_DIR_CD   = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND C.BSA_OP_JB_CD = '007'" ).append("\n"); 
		query.append("                           AND C.CRR_CD       = 'SML'" ).append("\n"); 
		query.append("                     ) AS BSA" ).append("\n"); 
		query.append("                    ,(" ).append("\n"); 
		query.append("                        SELECT (" ).append("\n"); 
		query.append("                                  SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                                    FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                                         MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                                   WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                                     AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.BSA_OP_JB_CD(+) = '016'" ).append("\n"); 
		query.append("                                     AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                                     AND A.PORT_CD     (+) = NVL(SUBSTR(S1.YD_CD, 1, 5), S1.VPS_PORT_CD)" ).append("\n"); 
		query.append("                               ) AS BSA" ).append("\n"); 
		query.append("                          FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("                         WHERE C.RLANE_CD     = P.RLANE_CD" ).append("\n"); 
		query.append("                           AND C.VSL_CD       = P.VSL_CD" ).append("\n"); 
		query.append("                           AND C.SKD_VOY_NO   = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND C.SKD_DIR_CD   = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND C.BSA_OP_JB_CD = '009'" ).append("\n"); 
		query.append("                           AND C.CRR_CD       = 'SML'" ).append("\n"); 
		query.append("                     ) AS WGT_BSA" ).append("\n"); 
		query.append("                    ,1  AS STS" ).append("\n"); 
		query.append("                FROM VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                    ,PARAMS           P" ).append("\n"); 
		query.append("               WHERE (S1.SKD_CNG_STS_CD IS NULL OR S1.SKD_CNG_STS_CD <> 'S')" ).append("\n"); 
		query.append("                 AND S1.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("                 AND S1.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND S1.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND S1.VPS_PORT_CD NOT IN ('EGSUZ')" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_BASE AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD  " ).append("\n"); 
		query.append("          ,VSL_CD    " ).append("\n"); 
		query.append("          ,SKD_VOY_NO" ).append("\n"); 
		query.append("          ,SKD_DIR_CD" ).append("\n"); 
		query.append("          ,BASE_VVD" ).append("\n"); 
		query.append("          ,MAX(STS) AS STS" ).append("\n"); 
		query.append("          ,MIN(DECODE(FLG, '1', TURN_SKD_VOY_NO)) AS PRE_SKD_VOY_NO" ).append("\n"); 
		query.append("          ,MIN(DECODE(FLG, '1', TURN_SKD_DIR_CD)) AS PRE_SKD_DIR_CD" ).append("\n"); 
		query.append("          ,MIN(DECODE(FLG, '3', TURN_SKD_VOY_NO)) AS PST_SKD_VOY_NO" ).append("\n"); 
		query.append("          ,MIN(DECODE(FLG, '3', TURN_SKD_DIR_CD)) AS PST_SKD_DIR_CD" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT S1.RLANE_CD" ).append("\n"); 
		query.append("                    ,S1.VSL_CD" ).append("\n"); 
		query.append("                    ,S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,S1.BASE_VVD" ).append("\n"); 
		query.append("                    ,S1.TURN_SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,S1.TURN_SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,DECODE(S2.SKD_VOY_NO, NULL, '', S1.FLG) AS FLG" ).append("\n"); 
		query.append("                    ,S1.STS" ).append("\n"); 
		query.append("                FROM CUR_PORTS        S1," ).append("\n"); 
		query.append("                     VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("               WHERE S1.VSL_CD          = S2.VSL_CD    (+)" ).append("\n"); 
		query.append("                 AND S1.TURN_SKD_VOY_NO = S2.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                 AND S1.TURN_SKD_DIR_CD = S2.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                 AND S1.YD_CD           = S2.YD_CD     (+)" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("  GROUP BY RLANE_CD" ).append("\n"); 
		query.append("          ,VSL_CD" ).append("\n"); 
		query.append("          ,SKD_VOY_NO" ).append("\n"); 
		query.append("          ,SKD_DIR_CD" ).append("\n"); 
		query.append("          ,BASE_VVD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT B.RLANE_CD" ).append("\n"); 
		query.append("          ,B.BASE_VVD" ).append("\n"); 
		query.append("          ,(" ).append("\n"); 
		query.append("             DECODE(S1.SKD_VOY_NO||S1.SKD_DIR_CD, B.PRE_SKD_VOY_NO||B.PRE_SKD_DIR_CD, '1'," ).append("\n"); 
		query.append("                                                  B.SKD_VOY_NO||B.SKD_DIR_CD        , '2'," ).append("\n"); 
		query.append("                                                  B.PST_SKD_VOY_NO||B.PST_SKD_DIR_CD, '3'  )" ).append("\n"); 
		query.append("           ) AS TP" ).append("\n"); 
		query.append("          ,S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("          ,S1.VSL_CD" ).append("\n"); 
		query.append("          ,S1.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,S1.SKD_DIR_CD" ).append("\n"); 
		query.append("          ,S1.VPS_PORT_CD" ).append("\n"); 
		query.append("          ,S1.YD_CD" ).append("\n"); 
		query.append("          ,S1.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("          ,S1.CLPT_SEQ" ).append("\n"); 
		query.append("          ,S1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,S1.TURN_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,SPC_CONTI_CONV_FNC(LOC.CONTI_CD, B.RLANE_CD) AS PORT_CONTI" ).append("\n"); 
		query.append("          ,S1.TURN_PORT_IND_CD" ).append("\n"); 
		query.append("          ,NVL(S1.SKD_CNG_STS_CD, ' ') AS CNG_STS_CD" ).append("\n"); 
		query.append("          ,S1.TURN_SKD_VOY_NO" ).append("\n"); 
		query.append("          ,S1.TURN_SKD_DIR_CD" ).append("\n"); 
		query.append("          ,S1.VSL_CD||S1.TURN_SKD_VOY_NO||S1.TURN_SKD_DIR_CD AS TURN_VVD" ).append("\n"); 
		query.append("          ,B.PRE_SKD_VOY_NO" ).append("\n"); 
		query.append("          ,B.PRE_SKD_DIR_CD" ).append("\n"); 
		query.append("          ,B.PST_SKD_VOY_NO" ).append("\n"); 
		query.append("          ,B.PST_SKD_DIR_CD" ).append("\n"); 
		query.append("          --,(" ).append("\n"); 
		query.append("          --   SELECT PRD.COST_YR||LPAD(CEIL((TO_CHAR(S1.VPS_ETD_DT, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 2, '0')" ).append("\n"); 
		query.append("          --     FROM MAS_WK_PRD PRD" ).append("\n"); 
		query.append("          --    WHERE PRD.COST_YR = TO_CHAR(S1.VPS_ETD_DT, 'YYYY')" ).append("\n"); 
		query.append("          --      AND PRD.COST_WK = '01'" ).append("\n"); 
		query.append("          -- ) AS COST_YRWK" ).append("\n"); 
		query.append("          ,MAX(S1.CLPT_SEQ) OVER (PARTITION BY S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD||S1.YD_CD) AS MAX_SEQ" ).append("\n"); 
		query.append("          ,MIN(S1.CLPT_SEQ) OVER (PARTITION BY S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD||S1.YD_CD) AS MIN_SEQ" ).append("\n"); 
		query.append("          ,B.STS          " ).append("\n"); 
		query.append("      FROM MDM_LOCATION     LOC" ).append("\n"); 
		query.append("          ,VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("          ,VVD_BASE         B" ).append("\n"); 
		query.append("     WHERE LOC.LOC_CD = S1.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND S1.VSL_CD  = B.VSL_CD" ).append("\n"); 
		query.append("       AND ((S1.SKD_VOY_NO, S1.SKD_DIR_CD) IN ((B.SKD_VOY_NO, B.SKD_DIR_CD), (B.PRE_SKD_VOY_NO, B.PRE_SKD_DIR_CD), (B.PST_SKD_VOY_NO, B.PST_SKD_DIR_CD)))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SEQ AS (" ).append("\n"); 
		query.append("    SELECT TP" ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,BASE_VVD" ).append("\n"); 
		query.append("          ,RLANE_CD" ).append("\n"); 
		query.append("          ,VSL_CD" ).append("\n"); 
		query.append("          ,SKD_VOY_NO" ).append("\n"); 
		query.append("          ,SKD_DIR_CD" ).append("\n"); 
		query.append("          ,POL_CD" ).append("\n"); 
		query.append("          ,POD_CD" ).append("\n"); 
		query.append("          ,POL_SEQ" ).append("\n"); 
		query.append("          ,POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,POL_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,POD_SEQ" ).append("\n"); 
		query.append("          ,POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,POD_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,POL_CONTI" ).append("\n"); 
		query.append("          ,POD_CONTI" ).append("\n"); 
		query.append("          --,POL_YRWK" ).append("\n"); 
		query.append("          --,POD_YRWK" ).append("\n"); 
		query.append("          ,(SELECT ( DECODE(S1.STS, '1', CASE WHEN VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS_PORT_CD ) THEN 'Y'" ).append("\n"); 
		query.append("                                                                                                                                                 ELSE 'N'" ).append("\n"); 
		query.append("                                          END, '2', 'N', '3', 'Y'))" ).append("\n"); 
		query.append("               FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("              WHERE VSL_CD     = S1.VSL_CD" ).append("\n"); 
		query.append("                AND SKD_VOY_NO = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND SKD_DIR_CD = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND CLPT_SEQ   = S1.CLPT_SEQ" ).append("\n"); 
		query.append("           ) AS PAST" ).append("\n"); 
		query.append("          ,POL_YD_SEQ" ).append("\n"); 
		query.append("          ,POD_YD_SEQ" ).append("\n"); 
		query.append("          ,PL_VPS_PORT_CD" ).append("\n"); 
		query.append("          ,PD_VPS_PORT_CD" ).append("\n"); 
		query.append("          ,PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,MAX(POL_YD_SEQ) OVER (PARTITION BY VVD, POL_CD) AS MAX_POL_PORT_SEQ" ).append("\n"); 
		query.append("          ,MAX(POD_YD_SEQ) OVER (PARTITION BY VVD, POD_CD) AS MAX_POD_PORT_SEQ" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT S1.TP" ).append("\n"); 
		query.append("                    ,S1.BASE_VVD" ).append("\n"); 
		query.append("                    ,S1.RLANE_CD" ).append("\n"); 
		query.append("                    ,S1.VVD" ).append("\n"); 
		query.append("                    ,S1.VSL_CD" ).append("\n"); 
		query.append("                    ,S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                    ,S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                    ,S1.CLPT_SEQ" ).append("\n"); 
		query.append("                    ,S1.STS" ).append("\n"); 
		query.append("                    ,NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD" ).append("\n"); 
		query.append("                    ,NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD" ).append("\n"); 
		query.append("                    ,S1.CLPT_SEQ   AS POL_SEQ" ).append("\n"); 
		query.append("                    ,S1.TURN_PORT_IND_CD" ).append("\n"); 
		query.append("                    ,S1.CLPT_IND_SEQ AS POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,DECODE(S1.BASE_VVD, S1.TURN_VVD, S1.TURN_CLPT_IND_SEQ, S1.CLPT_IND_SEQ) AS POL_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("                    ,S2.CLPT_SEQ   AS POD_SEQ" ).append("\n"); 
		query.append("                    ,S2.TURN_PORT_IND_CD" ).append("\n"); 
		query.append("                    ,S2.CLPT_IND_SEQ AS POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,DECODE(S2.BASE_VVD, S2.TURN_VVD, S2.TURN_CLPT_IND_SEQ, S2.CLPT_IND_SEQ) AS POD_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("                    ,S1.PORT_CONTI AS POL_CONTI" ).append("\n"); 
		query.append("                    ,S2.PORT_CONTI AS POD_CONTI" ).append("\n"); 
		query.append("                    ,S1.CALL_YD_IND_SEQ AS POL_YD_SEQ" ).append("\n"); 
		query.append("                    ,S2.CALL_YD_IND_SEQ AS POD_YD_SEQ" ).append("\n"); 
		query.append("                    ,S1.VPS_PORT_CD     AS PL_VPS_PORT_CD" ).append("\n"); 
		query.append("                    ,S2.VPS_PORT_CD     AS PD_VPS_PORT_CD" ).append("\n"); 
		query.append("                    ,S1.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,S2.CLPT_IND_SEQ    AS PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                FROM PORT_SKD S1," ).append("\n"); 
		query.append("                     PORT_SKD S2" ).append("\n"); 
		query.append("               WHERE S1.VSL_CD     = S2.VSL_CD" ).append("\n"); 
		query.append("                 AND S1.SKD_VOY_NO = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND S1.SKD_DIR_CD = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND S1.CLPT_SEQ   < S2.CLPT_SEQ" ).append("\n"); 
		query.append("                 AND S1.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("                 AND S1.CNG_STS_CD <> 'S'" ).append("\n"); 
		query.append("                 AND ( S1.CLPT_SEQ = DECODE(S1.PORT_CONTI, S2.PORT_CONTI, S1.MIN_SEQ, S1.MAX_SEQ)" ).append("\n"); 
		query.append("                    OR S2.CLPT_SEQ < S1.MAX_SEQ )" ).append("\n"); 
		query.append("                 AND DECODE(S1.TP, 1, S2.TURN_VVD, 2, S1.VVD, 3, S1.TURN_VVD) = S1.BASE_VVD" ).append("\n"); 
		query.append("                 AND S1.BASE_VVD = S2.BASE_VVD" ).append("\n"); 
		query.append("                 AND S1.RLANE_CD = S2.RLANE_CD" ).append("\n"); 
		query.append("           ) S1" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_LD_PORT AS (" ).append("\n"); 
		query.append("    SELECT S1.BASE_VVD" ).append("\n"); 
		query.append("          ,S1.RLANE_CD" ).append("\n"); 
		query.append("          ,S1.VSL_CD" ).append("\n"); 
		query.append("          ,S1.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,S1.SKD_DIR_CD" ).append("\n"); 
		query.append("          ,SUBSTR(MAX(LTRIM(TO_CHAR(S1.POD_SEQ, 'FM000'))|| S1.POD_CD), 4) AS LD_PORT" ).append("\n"); 
		query.append("      FROM PORT_SEQ S1" ).append("\n"); 
		query.append("  GROUP BY S1.BASE_VVD" ).append("\n"); 
		query.append("          ,S1.RLANE_CD" ).append("\n"); 
		query.append("          ,S1.VSL_CD" ).append("\n"); 
		query.append("          ,S1.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,S1.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", COPY AS (" ).append("\n"); 
		query.append("    SELECT LEVEL SEQ" ).append("\n"); 
		query.append("      FROM DUAL" ).append("\n"); 
		query.append("CONNECT BY LEVEL <= 5" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT 2 AS SRC" ).append("\n"); 
		query.append("          ,Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,Z.TP" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append("          ,Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("          ,Z.QTY_TTL" ).append("\n"); 
		query.append("          ,Z.WGT_TTL" ).append("\n"); 
		query.append("      FROM (  " ).append("\n"); 
		query.append("              SELECT Z.BASE_VVD" ).append("\n"); 
		query.append("                    ,Z.RLANE_CD" ).append("\n"); 
		query.append("                    ,Z.TP" ).append("\n"); 
		query.append("                    ,Z.POL_CD" ).append("\n"); 
		query.append("                    ,Z.POL_SEQ" ).append("\n"); 
		query.append("                    ,Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,Z.POD_CD" ).append("\n"); 
		query.append("                    ,Z.POD_SEQ" ).append("\n"); 
		query.append("                    ,Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,Z.IOC_CD" ).append("\n"); 
		query.append("                    ,Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                    ,SUM(TO_NUMBER(NVL(SUBSTR(Z.VAL, 1, 14), 0))) AS QTY_TTL" ).append("\n"); 
		query.append("                    ,SUM(TO_NUMBER(NVL(SUBSTR(Z.VAL, 15)   , 0))) AS WGT_TTL" ).append("\n"); 
		query.append("               FROM (" ).append("\n"); 
		query.append("                       SELECT B.TP" ).append("\n"); 
		query.append("                             ,B.BASE_VVD" ).append("\n"); 
		query.append("                             ,B.RLANE_CD" ).append("\n"); 
		query.append("                             ,B.POL_CD" ).append("\n"); 
		query.append("                             ,B.POL_SEQ" ).append("\n"); 
		query.append("                             ,B.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                             ,B.POD_CD" ).append("\n"); 
		query.append("                             ,B.POD_SEQ" ).append("\n"); 
		query.append("                             ,B.POD_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             ,DECODE(BK.BKG_CGO_TP_CD, 'P', 'M', 'F') AS BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                             ,DECODE(BV.VSL_PRE_PST_CD, 'T', DECODE(B.POL_CONTI, B.POD_CONTI, 2, 1), 3) AS IOC_CD" ).append("\n"); 
		query.append("                             ,(" ).append("\n"); 
		query.append("                                 SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                        || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                                FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                               WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                   FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                  WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                    AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                              ) AS VAL" ).append("\n"); 
		query.append("                         FROM BKG_BOOKING BK" ).append("\n"); 
		query.append("                             ,BKG_VVD     BV" ).append("\n"); 
		query.append("                             ,PORT_SEQ    B" ).append("\n"); 
		query.append("                             ,VVD_LD_PORT LD" ).append("\n"); 
		query.append("                             ,BKG_BL_DOC  D" ).append("\n"); 
		query.append("                        WHERE BV.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                          AND BV.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND BV.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND BV.VSL_CD           = LD.VSL_CD" ).append("\n"); 
		query.append("                          AND BV.SKD_VOY_NO       = LD.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND BV.SKD_DIR_CD       = LD.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND B.BASE_VVD          = LD.BASE_VVD" ).append("\n"); 
		query.append("                          AND B.RLANE_CD          = LD.RLANE_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                          AND ((BV.POL_CD = B.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = B.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = B.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND B.MAX_POL_PORT_SEQ = 1))" ).append("\n"); 
		query.append("                          AND ((BV.POD_CD = B.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = B.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = B.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND B.MAX_POD_PORT_SEQ = 1))" ).append("\n"); 
		query.append("                                                   " ).append("\n"); 
		query.append("                          AND BK.BKG_NO           = BV.BKG_NO" ).append("\n"); 
		query.append("                          AND BK.BKG_STS_CD      IN ('F', 'W')" ).append("\n"); 
		query.append("                          AND BK.BKG_NO           = D.BKG_NO" ).append("\n"); 
		query.append("                    ) Z" ).append("\n"); 
		query.append("           GROUP BY Z.TP" ).append("\n"); 
		query.append("                   ,Z.BASE_VVD" ).append("\n"); 
		query.append("                   ,Z.RLANE_CD" ).append("\n"); 
		query.append("                   ,Z.POL_CD" ).append("\n"); 
		query.append("                   ,Z.POL_SEQ" ).append("\n"); 
		query.append("                   ,Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,Z.POD_CD" ).append("\n"); 
		query.append("                   ,Z.POD_SEQ" ).append("\n"); 
		query.append("                   ,Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,Z.IOC_CD" ).append("\n"); 
		query.append("                   ,Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("           ) Z" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALC_DATA AS (" ).append("\n"); 
		query.append("    SELECT 1 AS SRC" ).append("\n"); 
		query.append("          ,B.TP" ).append("\n"); 
		query.append("          ,B.BASE_VVD" ).append("\n"); 
		query.append("          ,B.RLANE_CD" ).append("\n"); 
		query.append("          ,B.POL_CD" ).append("\n"); 
		query.append("          ,B.POL_SEQ" ).append("\n"); 
		query.append("          ,B.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,B.POD_CD" ).append("\n"); 
		query.append("          ,B.POD_SEQ" ).append("\n"); 
		query.append("          ,B.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,DECODE(M.TS_FLG, 'Y', 3, DECODE(M.IOC_CD, 'I', 2, 'O', 1, 5)) AS IOC_CD" ).append("\n"); 
		query.append("          ,SUM(M.ASGN_TTL_QTY) AS QTY_TTL" ).append("\n"); 
		query.append("          ,SUM(M.ASGN_TTL_WGT) AS WGT_TTL" ).append("\n"); 
		query.append("      FROM SPC_ALOC_POL_POD M" ).append("\n"); 
		query.append("          ,PORT_SEQ         B" ).append("\n"); 
		query.append("          ,PARAMS           P" ).append("\n"); 
		query.append("     WHERE M.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("       AND M.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND M.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND M.POL_YD_CD = B.POL_CD" ).append("\n"); 
		query.append("       AND M.POD_YD_CD = B.POD_CD" ).append("\n"); 
		query.append("       AND M.POL_YD_IND_SEQ = B.POL_YD_SEQ" ).append("\n"); 
		query.append("       AND M.POD_YD_IND_SEQ = B.POD_YD_SEQ" ).append("\n"); 
		query.append("       AND M.RLANE_CD   LIKE DECODE(SUBSTR(P.RLANE_CD, 1, 3), 'PSG', 'PSG', P.RLANE_CD)||'%'	-- R.Lane 조건 추가" ).append("\n"); 
		query.append("       AND (M.TS_FLG = 'N' OR M.SLS_RHQ_CD = 'SHARC' OR M.SLS_RHQ_CD = 'SINRS' OR M.SLS_RGN_OFC_CD IS NULL)" ).append("\n"); 
		query.append("       AND B.BASE_VVD = P.VSL_CD||P.SKD_VOY_NO||P.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD = P.RLANE_CD" ).append("\n"); 
		query.append("  GROUP BY B.TP" ).append("\n"); 
		query.append("          ,B.BASE_VVD" ).append("\n"); 
		query.append("          ,B.RLANE_CD" ).append("\n"); 
		query.append("          ,B.POL_CD" ).append("\n"); 
		query.append("          ,B.POL_SEQ" ).append("\n"); 
		query.append("          ,B.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,B.POD_CD" ).append("\n"); 
		query.append("          ,B.POD_SEQ" ).append("\n"); 
		query.append("          ,B.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,DECODE(M.TS_FLG, 'Y', 3, DECODE(M.IOC_CD, 'I', 2, 'O', 1, 5))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", MT_DATA AS (" ).append("\n"); 
		query.append("    SELECT T.SEQ SRC" ).append("\n"); 
		query.append("          ,Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,Z.TP" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append("          ,SUM(Z.QTY_TTL) AS QTY_TTL" ).append("\n"); 
		query.append("          ,SUM(Z.WGT_TTL) AS WGT_TTL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT TP" ).append("\n"); 
		query.append("                    ,BASE_VVD" ).append("\n"); 
		query.append("                    ,RLANE_CD" ).append("\n"); 
		query.append("                    ,POL_CD" ).append("\n"); 
		query.append("                    ,POL_SEQ" ).append("\n"); 
		query.append("                    ,POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,POD_CD" ).append("\n"); 
		query.append("                    ,POD_SEQ" ).append("\n"); 
		query.append("                    ,POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,4 AS IOC_CD" ).append("\n"); 
		query.append("                    ,QTY_TTL" ).append("\n"); 
		query.append("                    ,WGT_TTL" ).append("\n"); 
		query.append("                FROM BKG_DATA" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'M'" ).append("\n"); 
		query.append("           ) Z" ).append("\n"); 
		query.append("          ,COPY T" ).append("\n"); 
		query.append("     WHERE T.SEQ <= 3" ).append("\n"); 
		query.append("  GROUP BY T.SEQ" ).append("\n"); 
		query.append("          ,Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,Z.TP" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALL_DATA AS (" ).append("\n"); 
		query.append("    SELECT Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,1 AS SRC" ).append("\n"); 
		query.append("          ,Z.TP" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,P.POL_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,P.POD_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append("           --SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_TTL), DECODE(Z.SRC, 1, Z.QTY_TTL))) AS QTY_TTL" ).append("\n"); 
		query.append("           -- 이미 지난경우는 BKG물량 사용, 나머지의 경우 OCEAN이고 이전항차와 겹치면 BKG물량, 나머지의 경우 ALLOCATION 물량" ).append("\n"); 
		query.append("          ,SUM(" ).append("\n"); 
		query.append("                 CASE" ).append("\n"); 
		query.append("                      WHEN P.PAST = 'Y'  " ).append("\n"); 
		query.append("                      THEN DECODE(Z.SRC, 2, Z.QTY_TTL, 0)" ).append("\n"); 
		query.append("                      ELSE DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_TTL, 0))" ).append("\n"); 
		query.append("                  END" ).append("\n"); 
		query.append("           ) AS QTY_TTL" ).append("\n"); 
		query.append("          ,SUM(" ).append("\n"); 
		query.append("                 CASE " ).append("\n"); 
		query.append("                      WHEN P.PAST = 'Y' " ).append("\n"); 
		query.append("                      THEN DECODE(Z.SRC, 2, Z.WGT_TTL,0)" ).append("\n"); 
		query.append("                      ELSE DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.WGT_TTL, 0), DECODE(Z.SRC, 1, Z.WGT_TTL, 0))" ).append("\n"); 
		query.append("                  END" ).append("\n"); 
		query.append("           ) AS WGT_TTL" ).append("\n"); 
		query.append("          ,MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT SRC" ).append("\n"); 
		query.append("                    ,BASE_VVD" ).append("\n"); 
		query.append("                    ,RLANE_CD" ).append("\n"); 
		query.append("                    ,TP" ).append("\n"); 
		query.append("                    ,POL_CD" ).append("\n"); 
		query.append("                    ,POL_SEQ" ).append("\n"); 
		query.append("                    ,POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,POD_CD" ).append("\n"); 
		query.append("                    ,POD_SEQ" ).append("\n"); 
		query.append("                    ,POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,IOC_CD" ).append("\n"); 
		query.append("                    ,QTY_TTL" ).append("\n"); 
		query.append("                    ,WGT_TTL" ).append("\n"); 
		query.append("                FROM ALC_DATA" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              SELECT SRC" ).append("\n"); 
		query.append("                    ,BASE_VVD" ).append("\n"); 
		query.append("                    ,RLANE_CD" ).append("\n"); 
		query.append("                    ,TP" ).append("\n"); 
		query.append("                    ,POL_CD" ).append("\n"); 
		query.append("                    ,POL_SEQ" ).append("\n"); 
		query.append("                    ,POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,POD_CD" ).append("\n"); 
		query.append("                    ,POD_SEQ" ).append("\n"); 
		query.append("                    ,POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    ,IOC_CD" ).append("\n"); 
		query.append("                    ,QTY_TTL" ).append("\n"); 
		query.append("                    ,WGT_TTL " ).append("\n"); 
		query.append("                FROM BKG_DATA" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("           ) Z" ).append("\n"); 
		query.append("          ,PORT_SEQ P" ).append("\n"); 
		query.append("     WHERE P.TP               = Z.TP" ).append("\n"); 
		query.append("       AND P.BASE_VVD         = Z.BASE_VVD" ).append("\n"); 
		query.append("       AND P.RLANE_CD         = Z.RLANE_CD" ).append("\n"); 
		query.append("       AND P.POL_CD           = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD           = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.TP" ).append("\n"); 
		query.append("          ,Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,P.POL_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,P.POD_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    UNION ALL  -- BKG 추가 20131211" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    SELECT Z.BASE_VVD," ).append("\n"); 
		query.append("           Z.RLANE_CD," ).append("\n"); 
		query.append("           Z.SRC    ," ).append("\n"); 
		query.append("           Z.TP     ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD ," ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL ," ).append("\n"); 
		query.append("           SUM(Z.WGT_TTL) AS WGT_TTL ," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM BKG_DATA Z," ).append("\n"); 
		query.append("           PORT_SEQ P" ).append("\n"); 
		query.append("     WHERE Z.BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("       AND P.BASE_VVD = Z.BASE_VVD" ).append("\n"); 
		query.append("       AND P.RLANE_CD = Z.RLANE_CD " ).append("\n"); 
		query.append("       AND P.TP       = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD   = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.BASE_VVD," ).append("\n"); 
		query.append("           Z.RLANE_CD," ).append("\n"); 
		query.append("           Z.SRC    ," ).append("\n"); 
		query.append("           Z.TP     ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,Z.SRC" ).append("\n"); 
		query.append("          ,Z.TP" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,P.POL_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,P.POD_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append("          ,SUM(Z.QTY_TTL) AS QTY_TTL" ).append("\n"); 
		query.append("          ,SUM(Z.WGT_TTL) AS WGT_TTL" ).append("\n"); 
		query.append("          ,MAX(P.PAST)    AS PAST" ).append("\n"); 
		query.append("      FROM MT_DATA  Z" ).append("\n"); 
		query.append("          ,PORT_SEQ P" ).append("\n"); 
		query.append("     WHERE P.TP               = Z.TP" ).append("\n"); 
		query.append("       AND P.BASE_VVD         = Z.BASE_VVD" ).append("\n"); 
		query.append("       AND P.RLANE_CD         = Z.RLANE_CD " ).append("\n"); 
		query.append("       AND P.POL_CD           = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD           = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,Z.SRC" ).append("\n"); 
		query.append("          ,Z.TP" ).append("\n"); 
		query.append("          ,Z.POL_CD" ).append("\n"); 
		query.append("          ,Z.POL_SEQ" ).append("\n"); 
		query.append("          ,P.POL_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.POD_CD" ).append("\n"); 
		query.append("          ,Z.POD_SEQ" ).append("\n"); 
		query.append("          ,P.POD_CLPT_IND_SEQ1" ).append("\n"); 
		query.append("          ,Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_MAP AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           P.BASE_VVD," ).append("\n"); 
		query.append("           P.RLANE_CD," ).append("\n"); 
		query.append("           C1.SEQ AS SRC   ," ).append("\n"); 
		query.append("           C2.SEQ AS IOC_CD," ).append("\n"); 
		query.append("           P.PORT_CD ," ).append("\n"); 
		query.append("           P.YD_CD   ," ).append("\n"); 
		query.append("           P.CLPT_SEQ," ).append("\n"); 
		query.append("           P.CLPT_IND_SEQ," ).append("\n"); 
		query.append("           P.FLG     ," ).append("\n"); 
		query.append("           P.BSA     ," ).append("\n"); 
		query.append("           P.WGT_BSA" ).append("\n"); 
		query.append("      FROM CUR_PORTS P ," ).append("\n"); 
		query.append("           COPY      C1," ).append("\n"); 
		query.append("           COPY      C2" ).append("\n"); 
		query.append("     WHERE C1.SEQ <= 2" ).append("\n"); 
		query.append("       AND C2.SEQ <= 5        " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", POL_POD AS (" ).append("\n"); 
		query.append("    SELECT BASE_VVD" ).append("\n"); 
		query.append("          ,RLANE_CD" ).append("\n"); 
		query.append("          ,MIN(CLPT_SEQ) AS FROM_SEQ" ).append("\n"); 
		query.append("          ,MAX(CLPT_SEQ) AS TO_SEQ" ).append("\n"); 
		query.append("      FROM CUR_PORTS A" ).append("\n"); 
		query.append("     WHERE CLPT_SEQ BETWEEN ( SELECT MIN(CLPT_SEQ)" ).append("\n"); 
		query.append("                                FROM CUR_PORTS B" ).append("\n"); 
		query.append("                               WHERE A.BASE_VVD = B.BASE_VVD" ).append("\n"); 
		query.append("                                 AND A.RLANE_CD = B.RLANE_CD" ).append("\n"); 
		query.append("                                 AND B.PORT_CD  = @[pol_cd] )" ).append("\n"); 
		query.append("                        AND ( SELECT MAX(CLPT_SEQ) - 1" ).append("\n"); 
		query.append("                                FROM CUR_PORTS B" ).append("\n"); 
		query.append("                               WHERE A.BASE_VVD = B.BASE_VVD" ).append("\n"); 
		query.append("                                 AND A.RLANE_CD = B.RLANE_CD" ).append("\n"); 
		query.append("                                 AND B.PORT_CD  = @[pod_cd] )" ).append("\n"); 
		query.append("  GROUP BY BASE_VVD" ).append("\n"); 
		query.append("          ,RLANE_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", LOAD_CAPA AS (" ).append("\n"); 
		query.append("    SELECT Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append("          ,NVL(MIN(LOAD_TEU_TTL),0) AS LOAD_TEU_TTL" ).append("\n"); 
		query.append("          ,NVL(MIN(LOAD_WGT_TTL),0) AS LOAD_WGT_TTL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT Z.BASE_VVD" ).append("\n"); 
		query.append("                    ,Z.RLANE_CD" ).append("\n"); 
		query.append("                    ,Z.SRC" ).append("\n"); 
		query.append("                    ,Z.IOC_CD" ).append("\n"); 
		query.append("                    ,Z.PORT_CD" ).append("\n"); 
		query.append("                    ,Z.PORT_SEQ" ).append("\n"); 
		query.append("                    ,Z.FLG" ).append("\n"); 
		query.append("                    ,NVL(Z.LOD_TTL,0) AS LOD_TTL" ).append("\n"); 
		query.append("                    ,NVL(Z.DIS_TTL,0) + NVL(Z.PRE_TTL,0) AS DIS_TTL" ).append("\n"); 
		query.append("                    ,SUM(NVL(Z.ON_TTL,0) + NVL(Z.LOD_TTL,0) - NVL(Z.DIS_TTL,0) - NVL(Z.PRE_TTL,0)) OVER (PARTITION BY Z.BASE_VVD, Z.RLANE_CD, Z.SRC, Z.IOC_CD ORDER BY Z.BASE_VVD, Z.RLANE_CD, PORT_SEQ) AS ON_TTL" ).append("\n"); 
		query.append("                    ,NVL(Z.BSA,0) - SUM(NVL(Z.ON_TTL,0) + NVL(Z.LOD_TTL,0) - NVL(Z.DIS_TTL,0) - NVL(Z.PRE_TTL,0)) OVER (PARTITION BY Z.BASE_VVD, Z.RLANE_CD,Z.SRC, Z.IOC_CD ORDER BY Z.BASE_VVD, Z.RLANE_CD, PORT_SEQ) AS LOAD_TEU_TTL" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                    ,NVL(Z.LOD_WGT_TTL,0) AS LOD_WGT_TTL " ).append("\n"); 
		query.append("                    ,NVL(Z.DIS_WGT_TTL,0) + NVL(Z.PRE_WGT_TTL,0) AS DIS_WGT_TTL" ).append("\n"); 
		query.append("                    ,SUM(NVL(Z.ON_WGT_TTL,0) + NVL(Z.LOD_WGT_TTL,0) - NVL(Z.DIS_WGT_TTL,0) - NVL(Z.PRE_WGT_TTL,0)) OVER (PARTITION BY Z.BASE_VVD, Z.RLANE_CD, Z.SRC, Z.IOC_CD ORDER BY Z.BASE_VVD, Z.RLANE_CD, PORT_SEQ) AS ON_WGT_TTL" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                    ,NVL(Z.WGT_BSA,0) - SUM(NVL(Z.ON_WGT_TTL,0) + NVL(Z.LOD_WGT_TTL,0) - NVL(Z.DIS_WGT_TTL,0) - NVL(Z.PRE_WGT_TTL,0)) OVER (PARTITION BY Z.BASE_VVD, Z.RLANE_CD, Z.SRC, Z.IOC_CD ORDER BY Z.BASE_VVD, Z.RLANE_CD, PORT_SEQ) AS LOAD_WGT_TTL" ).append("\n"); 
		query.append("                                     " ).append("\n"); 
		query.append("                    ,Z.PAST" ).append("\n"); 
		query.append("                    ,NVL(Z.BSA,0) AS BSA" ).append("\n"); 
		query.append("                    ,NVL(Z.WGT_BSA,0) AS WGT_BSA" ).append("\n"); 
		query.append("                    ,'' AS T" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT M.BASE_VVD" ).append("\n"); 
		query.append("                              ,M.RLANE_CD" ).append("\n"); 
		query.append("                              ,M.SRC" ).append("\n"); 
		query.append("                              ,M.IOC_CD" ).append("\n"); 
		query.append("                              ,NVL(NVL(M.YD_CD, M.PORT_CD), 'TOTAL') AS PORT_CD" ).append("\n"); 
		query.append("                              ,NVL(M.CLPT_SEQ, 0) AS PORT_SEQ" ).append("\n"); 
		query.append("                              ,M.FLG" ).append("\n"); 
		query.append("                              ,Z.PAST" ).append("\n"); 
		query.append("                              ,M.BSA" ).append("\n"); 
		query.append("                              ,M.WGT_BSA" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_TTL)) AS LOD_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_TTL)) AS DIS_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_TTL)) AS PRE_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_TTL), 0) AS ON_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_WGT_TTL)) AS LOD_WGT_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_WGT_TTL)) AS DIS_WGT_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_WGT_TTL)) AS PRE_WGT_TTL" ).append("\n"); 
		query.append("                              ,DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_WGT_TTL), 0) AS ON_WGT_TTL" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                  SELECT A.BASE_VVD" ).append("\n"); 
		query.append("                                        ,A.RLANE_CD" ).append("\n"); 
		query.append("                                        ,A.SRC" ).append("\n"); 
		query.append("                                        ,MIN(A.PAST) OVER (PARTITION BY A.BASE_VVD, A.RLANE_CD, A.SRC, A.IOC_CD, A.PORT_CD) AS PAST" ).append("\n"); 
		query.append("                                        ,A.IOC_CD" ).append("\n"); 
		query.append("                                        ,A.SEQ" ).append("\n"); 
		query.append("                                        ,A.PORT_CD" ).append("\n"); 
		query.append("                                        ,A.PORT_SEQ" ).append("\n"); 
		query.append("                                        ,A.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                        ,A.LOD_TTL" ).append("\n"); 
		query.append("                                        ,A.DIS_TTL" ).append("\n"); 
		query.append("                                        ,A.PRE_TTL" ).append("\n"); 
		query.append("                                        ,A.LOD_WGT_TTL" ).append("\n"); 
		query.append("                                        ,A.DIS_WGT_TTL" ).append("\n"); 
		query.append("                                        ,A.PRE_WGT_TTL" ).append("\n"); 
		query.append("                                        ,A.TP" ).append("\n"); 
		query.append("                                    FROM (    " ).append("\n"); 
		query.append("                                            SELECT A.SRC" ).append("\n"); 
		query.append("                                                  ,A.BASE_VVD" ).append("\n"); 
		query.append("                                                  ,A.RLANE_CD" ).append("\n"); 
		query.append("                                                  ,A.PAST" ).append("\n"); 
		query.append("                                                  ,Q.SEQ" ).append("\n"); 
		query.append("                                                  ,DECODE(T.SEQ, 2, 5, A.IOC_CD)                              AS IOC_CD" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 1, A.POL_CD , A.POD_CD)                      AS PORT_CD" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 1, A.POL_SEQ, A.POD_SEQ)                     AS PORT_SEQ" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 1, A.POL_CLPT_IND_SEQ1, A.POD_CLPT_IND_SEQ1) AS CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 1, A.QTY_TTL, 0)                             AS LOD_TTL -- OCEN이면 QTY 아니면 0" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_TTL), 0)       AS DIS_TTL -- IPC 이고 PRE 이면 0, TRUNK/POST 이면 QTY" ).append("\n"); 
		query.append("                                                  ,DECODE(A.TP, '1', A.QTY_TTL, 0)                            AS PRE_TTL -- PRE 이면 QTY 아니면 0" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 1, A.WGT_TTL, 0)                             AS LOD_WGT_TTL" ).append("\n"); 
		query.append("                                                  ,DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.WGT_TTL), 0)       AS DIS_WGT_TTL" ).append("\n"); 
		query.append("                                                  ,DECODE(A.TP, '1', A.WGT_TTL, 0)                            AS PRE_WGT_TTL" ).append("\n"); 
		query.append("                                                  ,A.TP" ).append("\n"); 
		query.append("                                                  ,'' AS T" ).append("\n"); 
		query.append("                                              FROM ALL_DATA A" ).append("\n"); 
		query.append("                                                  ,COPY     Q -- IOC오 묶기 위한것(1 ~ 5)" ).append("\n"); 
		query.append("                                                  ,COPY     T -- TOTAL 구하기 위한것(1,2 만 있음)" ).append("\n"); 
		query.append("                                             WHERE Q.SEQ IN (DECODE(A.TP, 1, '2', 2, '1'), DECODE(A.TP, 3, '1', 2, '2'))" ).append("\n"); 
		query.append("                                               AND T.SEQ <= 2" ).append("\n"); 
		query.append("                                               --AND A.SRC  = 1" ).append("\n"); 
		query.append("                                         ) A" ).append("\n"); 
		query.append("                               ) Z" ).append("\n"); 
		query.append("                              ,PORT_MAP M" ).append("\n"); 
		query.append("                         WHERE Z.SRC         (+) = M.SRC" ).append("\n"); 
		query.append("                           AND Z.BASE_VVD    (+) = M.BASE_VVD" ).append("\n"); 
		query.append("                           AND Z.IOC_CD      (+) = M.IOC_CD" ).append("\n"); 
		query.append("                           AND Z.PORT_CD     (+) = NVL(M.YD_CD, M.PORT_CD)" ).append("\n"); 
		query.append("                           AND Z.CLPT_IND_SEQ(+) = M.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                           AND Z.BASE_VVD    (+) = M.BASE_VVD" ).append("\n"); 
		query.append("                           AND Z.RLANE_CD    (+) = M.RLANE_CD" ).append("\n"); 
		query.append("                      GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                                               (M.BASE_VVD, M.RLANE_CD, M.SRC, M.IOC_CD, M.CLPT_SEQ, NVL(M.YD_CD, M.PORT_CD), M.FLG, Z.PAST, M.BSA, M.WGT_BSA)," ).append("\n"); 
		query.append("                                               (M.BASE_VVD, M.RLANE_CD, M.SRC, M.IOC_CD)" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("                      --ORDER BY M.BASE_VVD" ).append("\n"); 
		query.append("                      --        ,M.RLANE_CD" ).append("\n"); 
		query.append("                      --        ,M.SRC" ).append("\n"); 
		query.append("                      --        ,M.IOC_CD" ).append("\n"); 
		query.append("                      --        ,NVL(M.CLPT_SEQ, 0)" ).append("\n"); 
		query.append("                     ) Z" ).append("\n"); 
		query.append("           ) Z" ).append("\n"); 
		query.append("          ,POL_POD B" ).append("\n"); 
		query.append("     WHERE Z.IOC_CD   = 5" ).append("\n"); 
		query.append("       AND Z.SRC = NVL((SELECT 1  -- 20131211 추가" ).append("\n"); 
		query.append("                          FROM SPC_HD_HUL_MST HD" ).append("\n"); 
		query.append("                         WHERE HD.RLANE_CD = Z.RLANE_CD" ).append("\n"); 
		query.append("                           AND HD.DIR_CD   = SUBSTR(Z.BASE_VVD,9,1)" ).append("\n"); 
		query.append("                           AND ROWNUM      = 1" ).append("\n"); 
		query.append("                      ),2)" ).append("\n"); 
		query.append("       AND Z.BASE_VVD = B.BASE_VVD" ).append("\n"); 
		query.append("       AND Z.RLANE_CD = B.RLANE_CD" ).append("\n"); 
		query.append("       AND Z.PORT_SEQ > 0" ).append("\n"); 
		query.append("       AND Z.PORT_SEQ BETWEEN B.FROM_SEQ AND B.TO_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.BASE_VVD" ).append("\n"); 
		query.append("          ,Z.RLANE_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  SELECT NVL(Z.VVD,'TTL') AS VVD" ).append("\n"); 
		query.append("        ,Z.RLANE_CD" ).append("\n"); 
		query.append("        ,Z.POL_PORT" ).append("\n"); 
		query.append("        ,Z.POL_YD_CD" ).append("\n"); 
		query.append("        ,Z.POL_TML_CD" ).append("\n"); 
		query.append("        ,Z.POL_ETA" ).append("\n"); 
		query.append("        ,Z.POL_ETD" ).append("\n"); 
		query.append("        ,Z.POD_PORT" ).append("\n"); 
		query.append("        ,Z.POD_YD_CD" ).append("\n"); 
		query.append("        ,Z.POD_TML_CD" ).append("\n"); 
		query.append("        ,Z.POD_ETA" ).append("\n"); 
		query.append("        ,Z.POD_ETD" ).append("\n"); 
		query.append("        ,Z.CARRIER_CD" ).append("\n"); 
		query.append("        ,ROUND(NVL(SUM(LC.LOAD_TEU_TTL),0)) AS LOAD_TEU_TTL" ).append("\n"); 
		query.append("        ,ROUND(NVL(SUM(LC.LOAD_WGT_TTL),0)) AS LOAD_WGT_TTL" ).append("\n"); 
		query.append("        ,ROUND(NVL(AVG(Z.AVG_CMPB),0))      AS AVG_CMPB" ).append("\n"); 
		query.append("        ,@[view_type11]         AS VIEW_TYPE" ).append("\n"); 
		query.append("        ,MAX(R.IS_R01) IS_R01" ).append("\n"); 
		query.append("        ,MAX(R1.IS_R02) IS_R02" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT VP.VSL_CD" ).append("\n"); 
		query.append("                  ,VP.SKD_VOY_NO" ).append("\n"); 
		query.append("                  ,VP.SKD_DIR_CD" ).append("\n"); 
		query.append("                  ,VP.VSL_CD || VP.SKD_VOY_NO || VP.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("                  ,VP.RLANE_CD" ).append("\n"); 
		query.append("                  ,VP.POL_PORT" ).append("\n"); 
		query.append("                  ,VP.POL_YD_CD" ).append("\n"); 
		query.append("                  ,VP.POL_TML_CD" ).append("\n"); 
		query.append("                  ,VP.POL_ETA" ).append("\n"); 
		query.append("                  ,VP.POL_ETD" ).append("\n"); 
		query.append("                  ,VP.POD_PORT" ).append("\n"); 
		query.append("                  ,VP.POD_YD_CD" ).append("\n"); 
		query.append("                  ,VP.POD_TML_CD" ).append("\n"); 
		query.append("                  ,VP.POD_ETA" ).append("\n"); 
		query.append("                  ,VP.POD_ETD" ).append("\n"); 
		query.append("                  ,VP.CARRIER_CD" ).append("\n"); 
		query.append("                  ,Z.AVG_CMPB" ).append("\n"); 
		query.append("              FROM VSL_PORT VP" ).append("\n"); 
		query.append("                  ,(" ).append("\n"); 
		query.append("                      SELECT Z.TS_FLG" ).append("\n"); 
		query.append("                            ,Z.RLANE_CD" ).append("\n"); 
		query.append("                            ,Z.VSL_CD" ).append("\n"); 
		query.append("                            ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                            ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                            ,Z.POL_YD_CD" ).append("\n"); 
		query.append("                            ,Z.POD_YD_CD" ).append("\n"); 
		query.append("                            ,SUM(NVL(SUBSTR(Z.VAL,  1, 14), 0)) AS BKG_TTL_QTY" ).append("\n"); 
		query.append("                            ,SUM(NVL(SUBSTR(Z.VAL, 15, 14), 0)) AS BKG_TTL_WGT" ).append("\n"); 
		query.append("                            ,SUM(CM_COST)                       AS ESTM_CM_COST_AMT" ).append("\n"); 
		query.append("                            ,SUM(CM_COST) /SUM(NVL(SUBSTR(Z.VAL,  1, 14), 0)) AS AVG_CMPB" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT /*+ ORDERED NO_MERGE(VP)*/" ).append("\n"); 
		query.append("                                       VP.RLANE_CD AS RLANE_CD" ).append("\n"); 
		query.append("                                      ,VP.VSL_CD" ).append("\n"); 
		query.append("                                      ,VP.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      ,VP.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      ,Bv.POL_YD_CD  AS POL_YD_CD" ).append("\n"); 
		query.append("                                      ,Bv.POD_YD_CD  AS POD_YD_CD" ).append("\n"); 
		query.append("                                      ,DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG" ).append("\n"); 
		query.append("                                      ,(  SELECT    TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD, 2, 1), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                                 || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))" ).append("\n"); 
		query.append("                                                                       + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                 FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                            FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                           WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                                       ) AS VAL" ).append("\n"); 
		query.append("                                      ,(" ).append("\n"); 
		query.append("                                          SELECT --SUM(NVL(Q.BKG_REV,0) + NVL(Q.BKG_OFT_REV,0) + NVL(Q.BKG_MISC_REV,0) + NVL(Q.SCR_CHG_REV,0)) - NVL(SUM(Q.RA_CM_COST_AMT),0)" ).append("\n"); 
		query.append("												 SUM(NVL(Q.BKG_REV,0) + NVL(Q.BKG_OFT_REV,0) + NVL(Q.BKG_MISC_REV,0) + NVL(Q.SCR_CHG_REV,0) + NVL(Q.DMDT_COM_AMT, 0)) - NVL(SUM(Q.RA_CM_COST_TTL_AMT),0)" ).append("\n"); 
		query.append("                                            FROM MAS_BKG_EXPN_DTL Q --MAS_BKG_REV_DTL Q" ).append("\n"); 
		query.append("                                           WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                                       ) AS CM_COST" ).append("\n"); 
		query.append("                                  FROM VSL_PORT    VP" ).append("\n"); 
		query.append("                                      ,BKG_VVD     BV" ).append("\n"); 
		query.append("                                      ,BKG_BOOKING B" ).append("\n"); 
		query.append("                                      ,BKG_BL_DOC  D" ).append("\n"); 
		query.append("                                 WHERE 1 = 1" ).append("\n"); 
		query.append("                                   AND VP.POL_PORT      = BV.POL_CD" ).append("\n"); 
		query.append("                                   AND VP.POD_PORT      = BV.POD_CD" ).append("\n"); 
		query.append("                                   AND VP.POL_YD_CD     = BV.POL_YD_CD" ).append("\n"); 
		query.append("                                   AND VP.POD_YD_CD     = BV.POD_YD_CD" ).append("\n"); 
		query.append("                                   AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("                                   AND B.BKG_STS_CD    IN ('F')" ).append("\n"); 
		query.append("                                   AND B.BKG_CGO_TP_CD <> 'P'" ).append("\n"); 
		query.append("                                   AND BV.VSL_PRE_PST_CD = 'T' " ).append("\n"); 
		query.append("                                   AND VP.VSL_CD        = BV.VSL_CD" ).append("\n"); 
		query.append("                                   AND VP.SKD_VOY_NO    = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                                   AND VP.SKD_DIR_CD    = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                   AND VP.VSL_SLAN_CD   = BV.SLAN_CD" ).append("\n"); 
		query.append("                                   AND B.BKG_NO         = D.BKG_NO" ).append("\n"); 
		query.append("                             ) Z" ).append("\n"); 
		query.append("                    GROUP BY Z.TS_FLG" ).append("\n"); 
		query.append("                            ,Z.RLANE_CD" ).append("\n"); 
		query.append("                            ,Z.VSL_CD" ).append("\n"); 
		query.append("                            ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                            ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                            ,Z.POL_YD_CD" ).append("\n"); 
		query.append("                            ,Z.POD_YD_CD" ).append("\n"); 
		query.append("                   ) Z" ).append("\n"); 
		query.append("             WHERE VP.RLANE_CD   = Z.RLANE_CD   (+)" ).append("\n"); 
		query.append("               AND VP.VSL_CD     = Z.VSL_CD     (+)" ).append("\n"); 
		query.append("               AND VP.SKD_VOY_NO = Z.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("               AND VP.SKD_DIR_CD = Z.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("               AND VP.POL_YD_CD  = Z.POL_YD_CD  (+)" ).append("\n"); 
		query.append("               AND VP.POD_YD_CD  = Z.POD_YD_CD  (+)" ).append("\n"); 
		query.append("         ) Z" ).append("\n"); 
		query.append("        ,LOAD_CAPA LC" ).append("\n"); 
		query.append("        ,(SELECT CASE WHEN COUNT(*)>0 THEN 'Y' ELSE 'N' END IS_R01 FROM COM_USR_ROLE_MTCH WHERE USR_ID = NVL(@[login_user_id], 'XX') AND USR_ROLE_CD='SPC01') R" ).append("\n"); 
		query.append("        ,(SELECT CASE WHEN COUNT(*)>0 THEN 'Y' ELSE 'N' END IS_R02 FROM COM_USR_ROLE_MTCH WHERE USR_ID = NVL(@[login_user_id], 'XX') AND USR_ROLE_CD IN ('SPC01','SPC02','SPC04')) R1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("   WHERE Z.VVD      = LC.BASE_VVD (+)" ).append("\n"); 
		query.append("     AND Z.RLANE_CD = LC.RLANE_CD (+)" ).append("\n"); 
		query.append("   GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                             (Z.VVD,Z.RLANE_CD,Z.POL_PORT,Z.POL_YD_CD,Z.POL_TML_CD,Z.POL_ETA,Z.POL_ETD,Z.POD_PORT,Z.POD_YD_CD,Z.POD_TML_CD,Z.POD_ETA,Z.POD_ETD,Z.CARRIER_CD)," ).append("\n"); 
		query.append("                             ()" ).append("\n"); 
		query.append("                          ) " ).append("\n"); 
		query.append("   ORDER BY Z.POL_ETA" ).append("\n"); 

	}
}