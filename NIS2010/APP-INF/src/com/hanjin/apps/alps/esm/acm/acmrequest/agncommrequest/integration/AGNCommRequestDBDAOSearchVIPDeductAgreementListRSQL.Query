<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AGNCommRequestDBDAOSearchVIPDeductAgreementListRSQL">
			<desc><![CDATA[- Booking 정보에 부합하는 VIP Agreement 조회
- 2016.07.27 김상현 [CHM-201642499] ALPS > ACM VIP Agreement Creation 상 SC/RFA/TAA No. 추가 요청]]></desc>
			<sql><![CDATA[
WITH BKG_INFO AS (
  SELECT MAS_RGST.TRD_CD,
    MAS_RGST.DIR_CD,
    MAS_RGST.HUL_BND_CD,
    MAS_RGST.SUB_TRD_CD,
    POR.CONTI_CD AS POR_CNTI,
    POR.SCONTI_CD AS POR_SCNTI,
    POR.CNT_CD AS POR_CNT,
    POR.RGN_CD AS POR_RGN_CD,
    POR.LOC_CD AS POR_CD,
    POL.CONTI_CD AS POL_CNTI,
    POL.SCONTI_CD AS POL_SCNTI,
    POL.CNT_CD AS POL_CNT,
    POL.RGN_CD AS POL_RGN_CD,
    POL.LOC_CD AS POL_CD,
    POD.CONTI_CD AS POD_CNTI,
    POD.SCONTI_CD AS POD_SCNTI,
    POD.CNT_CD AS POD_CNT,
    POD.RGN_CD AS POD_RGN_CD,
    POD.LOC_CD AS POD_CD,
    DEL.CONTI_CD AS DEL_CNTI,
    DEL.SCONTI_CD AS DEL_SCNTI,
    DEL.CNT_CD AS DEL_CNT,
    DEL.RGN_CD AS DEL_RGN_CD,
    DEL.LOC_CD AS DEL_CD,
    CASE WHEN BKG.RFA_NO IS NOT NULL
           THEN (SELECT CUST.CUST_GRP_ID
                 FROM PRI_RP_MN PRI,
                   MDM_CUSTOMER CUST
                 WHERE PRI.PROP_NO = (SELECT PROP_NO FROM PRI_RP_HDR WHERE RFA_NO = BKG.RFA_NO)
                   AND BKG.BKG_CRE_DT BETWEEN PRI.EFF_DT AND PRI.EXP_DT
                   AND CUST.CUST_CNT_CD = PRI.CTRT_CUST_CNT_CD
                   AND CUST.CUST_SEQ = PRI.CTRT_CUST_SEQ
                   AND ROWNUM = 1
                )
         WHEN BKG.SC_NO IS NOT NULL
           THEN (SELECT CUST.CUST_GRP_ID
                 FROM PRI_SP_MN PRI,
                   MDM_CUSTOMER CUST
                 WHERE PRI.PROP_NO = (SELECT PROP_NO FROM PRI_SP_HDR WHERE SC_NO = BKG.SC_NO)
                   AND BKG.BKG_CRE_DT BETWEEN PRI.EFF_DT AND PRI.EXP_DT
                   AND CUST.CUST_CNT_CD = PRI.REAL_CUST_CNT_CD
                   AND CUST.CUST_SEQ = PRI.REAL_CUST_SEQ
                   AND ROWNUM = 1
                )
         WHEN BKG.TAA_NO IS NOT NULL
           THEN (SELECT CUST.CUST_GRP_ID
                 FROM PRI_TAA_MN PRI,
                   MDM_CUSTOMER CUST
                 WHERE PRI.TAA_PROP_NO = (SELECT TAA_PROP_NO FROM PRI_TAA_HDR WHERE TAA_NO = BKG.TAA_NO)
                   AND BKG.BKG_CRE_DT BETWEEN PRI.EFF_DT AND PRI.EXP_DT
                   AND CUST.CUST_CNT_CD = PRI.CTRT_CUST_CNT_CD
                   AND CUST.CUST_SEQ = PRI.CTRT_CUST_SEQ
                   AND ROWNUM = 1
                )
    END AS CUST_GRP_ID,
    BKG.SC_NO,
    BKG.RFA_NO,
    BKG.TAA_NO
  FROM BKG_BOOKING BKG,
    MAS_RGST_BKG MAS_BKG,
    MAS_LANE_RGST MAS_RGST,
    MDM_LOCATION POR,
    MDM_LOCATION POL,
    MDM_LOCATION POD,
    MDM_LOCATION DEL
  WHERE 1 = 1
    AND BKG.BKG_NO = @[bkg_no]
    AND MAS_BKG.BKG_NO = BKG.BKG_NO
    AND MAS_BKG.RLANE_CD = MAS_RGST.RLANE_CD
    AND MAS_BKG.DIR_CD = MAS_RGST.DIR_CD
    AND MAS_BKG.TRD_CD = MAS_RGST.TRD_CD
    AND MAS_BKG.IOC_CD = MAS_RGST.IOC_CD
    AND POR.LOC_CD = BKG.POR_CD
    AND POL.LOC_CD = BKG.POL_CD
    AND POD.LOC_CD = BKG.POD_CD
    AND DEL.LOC_CD = BKG.DEL_CD
    AND POR.DELT_FLG = 'N'
    AND POL.DELT_FLG = 'N'
    AND POD.DELT_FLG = 'N'
    AND DEL.DELT_FLG = 'N'
)

SELECT AGMT.CUST_GRP_ID,
  AGMT.AGMT_SEQ
FROM ACM_VIP_AGMT AGMT,
  BKG_INFO BKG
WHERE AGMT.DELT_FLG <> 'Y'
  AND @[sa_dt] BETWEEN AGMT.FM_EFF_DT AND AGMT.TO_EFF_DT
  AND AGMT.CUST_GRP_ID = BKG.CUST_GRP_ID
  AND NVL(AGMT.TRD_CD, '*') = DECODE(NVL(AGMT.TRD_CD, '*'), '*', '*', BKG.TRD_CD)
  AND NVL(AGMT.DIR_CD, '*') = DECODE(NVL(AGMT.DIR_CD, '*'), '*', '*', BKG.DIR_CD)
  AND NVL(AGMT.HUL_BND_CD, '*') = DECODE(NVL(AGMT.HUL_BND_CD, '*'), '*', '*', BKG.HUL_BND_CD)
  AND NVL(AGMT.SUB_TRD_CD, '*') = DECODE(NVL(AGMT.SUB_TRD_CD, '*'), '*', '*', BKG.SUB_TRD_CD)
  AND NVL(AGMT.POR_ROUT_CD, '*') = CASE AGMT.POR_GRP_TP_CD WHEN '1' THEN POR_CNTI
                                                           WHEN '2' THEN POR_SCNTI
                                                           WHEN '3' THEN POR_CNT
                                                           WHEN '4' THEN POR_RGN_CD
                                                           WHEN '5' THEN POR_CD
                                                           ELSE '*'
                                   END
  AND NVL(AGMT.POL_ROUT_CD, '*') = CASE AGMT.POL_GRP_TP_CD WHEN '1' THEN POL_CNTI
                                                           WHEN '2' THEN POL_SCNTI
                                                           WHEN '3' THEN POL_CNT
                                                           WHEN '4' THEN POL_RGN_CD
                                                           WHEN '5' THEN POL_CD
                                                           ELSE '*'
                                   END
  AND NVL(AGMT.POD_ROUT_CD, '*') = CASE AGMT.POD_GRP_TP_CD WHEN '1' THEN POD_CNTI
                                                           WHEN '2' THEN POD_SCNTI
                                                           WHEN '3' THEN POD_CNT
                                                           WHEN '4' THEN POD_RGN_CD
                                                           WHEN '5' THEN POD_CD
                                                           ELSE '*'
                                   END
  AND NVL(AGMT.DEL_ROUT_CD, '*') = CASE AGMT.DEL_GRP_TP_CD WHEN '1' THEN DEL_CNTI
                                                           WHEN '2' THEN DEL_SCNTI
                                                           WHEN '3' THEN DEL_CNT
                                                           WHEN '4' THEN DEL_RGN_CD
                                                           WHEN '5' THEN DEL_CD
                                                           ELSE '*'
                                   END
  -- RFA_NO - SC_NO - TAA_NO 순으로 비교해서 조회(Booking data에 SC_NO, RFA_NO, TAA_NO가 동시에 입력 된 경우도 있음).
  AND 1 = CASE WHEN NVL(AGMT.SC_NO, '*') = '*' AND NVL(AGMT.RFA_NO, '*') = '*' AND NVL(AGMT.TAA_NO, '*') = '*'
                 THEN 1
               WHEN NVL(AGMT.RFA_NO, '*') != '*' AND AGMT.RFA_NO = BKG.RFA_NO
                 THEN 1
               WHEN NVL(AGMT.SC_NO, '*') != '*' AND AGMT.SC_NO = BKG.SC_NO
                 THEN 1
               WHEN NVL(AGMT.TAA_NO, '*') != '*' AND AGMT.TAA_NO = BKG.TAA_NO
                 THEN 1
               ELSE 0
          END			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="sa_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
