/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAO021AllocPortViewList4ByOfficeRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.29
*@LastModifier : 
*@LastVersion : 1.0
* 2016.08.29 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAO021AllocPortViewList4ByOfficeRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Daily Forecast Status 화면 내 BKG Status(RHQ) 탭 조회- Office View
	  * 2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
	  * 2013.01.15 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
	  * 2013.02.22 김시몬[CHM-201323235-01] 제목 : WAX 노선 Dest. 반영 건
	  * 작업 내용 : WAX 노선은 Dest. 를 AU 로 집계되도록 보완, WAXIA 의 경우 Direction 변경(E=> W, W=> E)
	  * 2013.06.13 진마리아 SELCDO 팀코드 변경 (SELCTY)
	  * 2013.09.05 진마리아 [CHM-201326612] AAZ Direction Conversion
	  * 2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
	  * 2014.01.13 김시몬 [선처리] SELSC/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가
	  * 2014.01.23 김시몬 [선처리] '09014001','ISTEM' 로 ofc변경 처리
	  * 2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완
	  * 2014.12.16 박은주 [CHM-201433153] Daily FCST status 리포트 보완 요청(겹선) 
	  * 2015.03.03 박은주 CHM-201534458 SQM QTA주가 변경 관련 적용 요청
	  * 2015.06.17 이진서 CHM-201536450 BKG Status(RHQ) tab - Yard seq 실시간 인지 (POL/POD) 보완 조치
	  * 2015.08.07 Arie  MVMT 'EN' 기능 추가
	  * 2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
	  * 2016.05.27 이혜민 SELSC, TYOSC RHQ 독립분리
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAO021AllocPortViewList4ByOfficeRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("area",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("login_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ui_name",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rhq2",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sales_office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("port_div",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade1",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAO021AllocPortViewList4ByOfficeRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH MAS_MON_VVD_LV AS(" ).append("\n"); 
		query.append("    SELECT B.TRD_CD    ," ).append("\n"); 
		query.append("           B.SUB_TRD_CD," ).append("\n"); 
		query.append("           B.RLANE_CD  ," ).append("\n"); 
		query.append("           B.DIR_CD    ," ).append("\n"); 
		query.append("           B.IOC_CD    ," ).append("\n"); 
		query.append("           B.COST_YR   ," ).append("\n"); 
		query.append("           B.COST_MON  ," ).append("\n"); 
		query.append("           B.NUM       ," ).append("\n"); 
		query.append("           DENSE_RANK() OVER(PARTITION BY B.TRD_CD, B.RLANE_CD, B.DIR_CD, B.NUM ORDER BY B.DIR_CD, B.PORT_ETD) NUM_1," ).append("\n"); 
		query.append("           B.COST_WK   ," ).append("\n"); 
		query.append("           B.VSL_CD    ," ).append("\n"); 
		query.append("           B.SKD_VOY_NO," ).append("\n"); 
		query.append("           B.SKD_DIR_CD," ).append("\n"); 
		query.append("           B.RHQ_CD    ," ).append("\n"); 
		query.append("           B.AQ_CD     ," ).append("\n"); 
		query.append("           B.RGN_OFC_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             SELECT DECODE(O.OFC_TP_CD, 'QT', O.PRNT_OFC_CD, DECODE(@[ofc_cd], 'ATLSA', 'NYCRA', 'SLSSC', 'NYCRA', 'PHXSA', 'NYCRA', O.OFC_CD))  -- Login Office" ).append("\n"); 
		query.append("               FROM SPC_OFC_LVL O  ," ).append("\n"); 
		query.append("                    COM_USER    COM" ).append("\n"); 
		query.append("              WHERE COM.USR_ID = @[login_id]  -- Login ID" ).append("\n"); 
		query.append("                AND B.COST_YR || B.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                AND O.OFC_CD = SPC_SCR_OFC_CONV_FNC(DECODE(@[login_id], '09012001', 'ISTEM','09014001','ISTEM', COM.OFC_CD), @[ui_name])   -- UI Name" ).append("\n"); 
		query.append("           ) AS OFC_CD," ).append("\n"); 
		query.append("           B.POL_CD         ," ).append("\n"); 
		query.append("           B.BSA            ," ).append("\n"); 
		query.append("           B.LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("           B.PAST           ," ).append("\n"); 
		query.append("           B.PORT_DIV," ).append("\n"); 
		query.append("		   B.BSE_QTR_CD," ).append("\n"); 
		query.append("		   B.BSE_YR" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT M.TRD_CD    ," ).append("\n"); 
		query.append("                     M.SUB_TRD_CD," ).append("\n"); 
		query.append("                     M.RLANE_CD  ," ).append("\n"); 
		query.append("                     M.DIR_CD    ," ).append("\n"); 
		query.append("                     M.IOC_CD    ," ).append("\n"); 
		query.append("                     SUBSTR(M.SLS_YRMON, 1, 4) AS COST_YR ," ).append("\n"); 
		query.append("                     SUBSTR(M.SLS_YRMON, 5)    AS COST_MON," ).append("\n"); 
		query.append("                     P.RNUM NUM       ," ).append("\n"); 
		query.append("                     M.COST_WK        ," ).append("\n"); 
		query.append("                     DECODE(@[trade], 'IAS', L.LOD_SPL_CNG_FLG, 'Y') AS LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                     M.VSL_CD         ," ).append("\n"); 
		query.append("                     M.SKD_VOY_NO     ," ).append("\n"); 
		query.append("                     M.DIR_CD               AS SKD_DIR_CD," ).append("\n"); 
		query.append("                     C.RHQ_CD               AS RHQ_CD    ," ).append("\n"); 
		query.append("                     @[area]                AS AQ_CD     ," ).append("\n"); 
		query.append("                     @[sales_office]        AS RGN_OFC_CD," ).append("\n"); 
		query.append("                     @[pol_cd]              AS POL_CD    ," ).append("\n"); 
		query.append("                     @[port_div]            AS PORT_DIV  ,  -- Port Div(POL/POD/DEL)" ).append("\n"); 
		query.append("--                     NVL(B.CRR_BSA_CAPA, 0) AS BSA       ," ).append("\n"); 
		query.append("                     SPC_GET_WK_VVD_BSA_FNC('VOL' ,M.TRD_CD,M.RLANE_CD,M.DIR_CD,SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK,M.VSL_CD||M.SKD_VOY_NO||M.DIR_CD) AS BSA," ).append("\n"); 
		query.append("                     DECODE(SIGN(SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK - ( SELECT PRD.COST_YR||TO_CHAR(CEIL((TO_CHAR(SYSDATE, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 'FM00')" ).append("\n"); 
		query.append("                                                                            FROM MAS_WK_PRD PRD" ).append("\n"); 
		query.append("                                                                           WHERE PRD.COST_YR = TO_CHAR(SYSDATE, 'YYYY')" ).append("\n"); 
		query.append("                                                                             AND PRD.COST_WK = '01')), -1, 'Y', 'N') AS PAST" ).append("\n"); 
		query.append("                    ,TO_CHAR(M.LST_LODG_PORT_ETD_DT,'YYYYMMDD') AS PORT_ETD" ).append("\n"); 
		query.append("					, CASE WHEN M.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("                           THEN CEIL(TO_NUMBER(SUBSTR(M.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("                           ELSE CEIL(TO_NUMBER(DECODE(M.COST_WK,'00','01','53','52',M.COST_WK))/13)||'Q'" ).append("\n"); 
		query.append("                      END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청  " ).append("\n"); 
		query.append("                   , SUBSTR(M.COST_YRMON, 1,4) AS BSE_YR" ).append("\n"); 
		query.append("                FROM MAS_MON_VVD     M," ).append("\n"); 
		query.append("                     MAS_LANE_RGST   L," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT /*+ INDEX (P, XPKMAS_WK_PRD) */" ).append("\n"); 
		query.append("                               P.COST_YR||P.COST_WK AS COST_YRWK," ).append("\n"); 
		query.append("                               ROWNUM               AS RNUM" ).append("\n"); 
		query.append("                          FROM MAS_WK_PRD P" ).append("\n"); 
		query.append("                         WHERE P.COST_YR||P.COST_WK >= @[year]||@[week]     -- Year / Week" ).append("\n"); 
		query.append("                           AND ROWNUM               <= @[duration]          -- Duration" ).append("\n"); 
		query.append("                     ) P," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT DISTINCT" ).append("\n"); 
		query.append("                               SUBSTR(AA," ).append("\n"); 
		query.append("                                INSTR(AA,',',1,LEVEL)+1," ).append("\n"); 
		query.append("                                  INSTR(AA,',',1,LEVEL+1) - INSTR(AA,',',1,LEVEL)" ).append("\n"); 
		query.append("                                    -1" ).append("\n"); 
		query.append("                               ) RHQ_CD" ).append("\n"); 
		query.append("                          FROM (SELECT ','||@[rhq2]||',' AA FROM DUAL)      -- RHQ" ).append("\n"); 
		query.append("                    CONNECT BY LEVEL <= LENGTH(AA) - LENGTH(REPLACE(AA,','))-1" ).append("\n"); 
		query.append("                     ) C" ).append("\n"); 
		query.append("               WHERE SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK = P.COST_YRWK" ).append("\n"); 
		query.append("                 AND (M.DELT_FLG IS NULL OR M.DELT_FLG = 'N')" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("#if (${trade} != '')" ).append("\n"); 
		query.append("                 AND M.TRD_CD     = @[trade]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${subtrade1} != '')" ).append("\n"); 
		query.append("                 AND M.SUB_TRD_CD = @[subtrade1]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${bound} != '')" ).append("\n"); 
		query.append("                 AND M.DIR_CD = (CASE " ).append("\n"); 
		query.append("									WHEN M.RLANE_CD IN ('AUSIA', 'CKAIA', 'WAXIA', 'AAZIA', 'QISIA', 'RUSIA', 'FOXIA') THEN" ).append("\n"); 
		query.append("											DECODE(@[bound], 'E', 'W', 'W', 'E', @[bound])" ).append("\n"); 
		query.append("									ELSE" ).append("\n"); 
		query.append("										@[bound]" ).append("\n"); 
		query.append("								END)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                 " ).append("\n"); 
		query.append("                 AND M.TRD_CD   = L.TRD_CD" ).append("\n"); 
		query.append("                 AND M.RLANE_CD = L.RLANE_CD" ).append("\n"); 
		query.append("                 AND M.DIR_CD   = L.DIR_CD" ).append("\n"); 
		query.append("                 AND M.IOC_CD   = L.IOC_CD" ).append("\n"); 
		query.append("                 AND L.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                 " ).append("\n"); 
		query.append("#if (${rlane1} != '')" ).append("\n"); 
		query.append("                 AND M.RLANE_CD IN ($rlane1)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           ) B" ).append("\n"); 
		query.append("  ORDER BY B.VSL_CD    ," ).append("\n"); 
		query.append("           B.SKD_VOY_NO," ).append("\n"); 
		query.append("           B.DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", QTA_DATA AS (" ).append("\n"); 
		query.append("    SELECT 1 AS FLG    ," ).append("\n"); 
		query.append("           R.TRD_CD    ," ).append("\n"); 
		query.append("           R.DIR_CD    ," ).append("\n"); 
		query.append("           R.SUB_TRD_CD," ).append("\n"); 
		query.append("           R.RLANE_CD  ," ).append("\n"); 
		query.append("           NVL(( SELECT T2.CONV_RGN_OFC_CD" ).append("\n"); 
		query.append("                   FROM SPC_RGN_OFC_CONV T2" ).append("\n"); 
		query.append("                  WHERE T2.SLS_RGN_OFC_CD = R.OFC_CD), R.OFC_CD) AS OFC_CD," ).append("\n"); 
		query.append("           '0000000' AS PORT," ).append("\n"); 
		query.append("           R.WK             ," ).append("\n"); 
		query.append("           R.NUM            ," ).append("\n"); 
		query.append("           R.NUM_1," ).append("\n"); 
		query.append("           R.VVD            ," ).append("\n"); 
		query.append("           R.BSA            ," ).append("\n"); 
		query.append("           R.LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("           ROUND(SUM(R.QTA_QTY)) AS QTA_QTY ," ).append("\n"); 
		query.append("           SUM(R.QTA_GREV)       AS QTA_GREV," ).append("\n"); 
		query.append("           SUM(R.QTA_CM)         AS QTA_CM  ," ).append("\n"); 
		query.append("           0 AS ALC_QTY   ," ).append("\n"); 
		query.append("           0 AS ALC_RF_QTY," ).append("\n"); 
		query.append("           0 AS ALC_GREV  ," ).append("\n"); 
		query.append("           0 AS ALC_CM    ," ).append("\n"); 
		query.append("           0 AS BKG_QTY   ," ).append("\n"); 
		query.append("           0 AS BKG_20    ," ).append("\n"); 
		query.append("           0 AS BKG_40    ," ).append("\n"); 
		query.append("           0 AS BKG_D2    ," ).append("\n"); 
		query.append("           0 AS BKG_D4    ," ).append("\n"); 
		query.append("           0 AS BKG_HC    ," ).append("\n"); 
		query.append("           0 AS BKG_RD    ," ).append("\n"); 
		query.append("           0 AS BKG_45    ," ).append("\n"); 
		query.append("           0 AS BKG_53    ," ).append("\n"); 
		query.append("           0 AS BKG_RF    ," ).append("\n"); 
		query.append("           0 AS BKG_R2    ," ).append("\n"); 
		query.append("           0 AS BKG_R5    ," ).append("\n"); 
		query.append("--           0 AS CM_EN     ," ).append("\n"); 
		query.append("           0 AS CM_OP     ," ).append("\n"); 
		query.append("           0 AS CM_OC     ," ).append("\n"); 
		query.append("           0 AS CM_VL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT MQ.TRD_CD   ," ).append("\n"); 
		query.append("                     A.SUB_TRD_CD," ).append("\n"); 
		query.append("                     MQ.RLANE_CD ," ).append("\n"); 
		query.append("                     MQ.DIR_CD   ," ).append("\n"); 
		query.append("                     '0' AS POL_CD   ," ).append("\n"); 
		query.append("                     MQ.RGN_OFC_CD        AS OFC_CD," ).append("\n"); 
		query.append("                     A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("                     A.NUM," ).append("\n"); 
		query.append("                     A.NUM_1," ).append("\n"); 
		query.append("                     MQ.VSL_CD||MQ.SKD_VOY_NO||MQ.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                     A.BSA            ," ).append("\n"); 
		query.append("                     A.LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                     (MQ.LOD_QTY) AS QTA_QTY," ).append("\n"); 
		query.append("                     0 AS QTA_GREV," ).append("\n"); 
		query.append("                     0 AS QTA_CM" ).append("\n"); 
		query.append("                FROM MAS_MON_VVD_LV   A  ," ).append("\n"); 
		query.append("                     SQM_CFM_QTA      MQ ," ).append("\n"); 
		query.append("                     SQM_QTA_RLSE_VER MQR," ).append("\n"); 
		query.append("                     SPC_OFC_LVL      O" ).append("\n"); 
		query.append("               WHERE 1=1" ).append("\n"); 
		query.append("                 AND A.RHQ_CD = O.N2ND_PRNT_OFC_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${area} != '')" ).append("\n"); 
		query.append("                 AND A.AQ_CD = MQ.AQ_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${sales_office} != '')" ).append("\n"); 
		query.append("                 AND A.RGN_OFC_CD = NVL(( SELECT O2.CONV_RGN_OFC_CD" ).append("\n"); 
		query.append("                                            FROM SPC_RGN_OFC_CONV O2" ).append("\n"); 
		query.append("                                           WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD), MQ.RGN_OFC_CD)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pol_cd} != '')" ).append("\n"); 
		query.append("                 AND A.POL_CD = '00000'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                 AND MQ.BSE_YR            = A.BSE_YR" ).append("\n"); 
		query.append("                 --AND MQ.BSE_QTR_CD        = CEIL(TO_NUMBER(DECODE(A.COST_WK,'00','01','53','52',A.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(A.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("                 -- CHM-201534458 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("				 AND MQ.BSE_QTR_CD		  = A.BSE_QTR_CD	" ).append("\n"); 
		query.append("                 AND MQR.SQM_VER_STS_CD   = 'R'" ).append("\n"); 
		query.append("                 AND MQR.BSE_TP_CD        = 'Q' -- 분기 20131205추가" ).append("\n"); 
		query.append("                 AND MQR.QTA_RLSE_VER_NO  = MQ.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                 AND MQ.BSE_TP_CD         = MQR.BSE_TP_CD -- 분기 20131205추가" ).append("\n"); 
		query.append("                 AND MQR.BSE_YR           = MQ.BSE_YR" ).append("\n"); 
		query.append("                 AND MQR.BSE_QTR_CD       = MQ.BSE_QTR_CD" ).append("\n"); 
		query.append("                 AND MQ.QTA_TGT_CD        = 'D'" ).append("\n"); 
		query.append("                 AND MQ.OFC_VW_CD         = 'L'  --" ).append("\n"); 
		query.append("                 AND MQ.TRD_CD            = A.TRD_CD" ).append("\n"); 
		query.append("                 AND MQ.RLANE_CD          = A.RLANE_CD" ).append("\n"); 
		query.append("                 AND MQ.DIR_CD            = A.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND MQ.VSL_CD            = A.VSL_CD" ).append("\n"); 
		query.append("                 AND MQ.SKD_VOY_NO        = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND MQ.SKD_DIR_CD        = A.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                 --AND MQ.RGN_OFC_CD        = O.OFC_CD" ).append("\n"); 
		query.append("                 AND NVL(( SELECT O2.CONV_RGN_OFC_CD" ).append("\n"); 
		query.append("                             FROM SPC_RGN_OFC_CONV O2" ).append("\n"); 
		query.append("                            WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD), MQ.RGN_OFC_CD) = O.OFC_CD" ).append("\n"); 
		query.append("           ) R" ).append("\n"); 
		query.append("  GROUP BY R.TRD_CD         ," ).append("\n"); 
		query.append("           R.DIR_CD         ," ).append("\n"); 
		query.append("           R.SUB_TRD_CD     ," ).append("\n"); 
		query.append("           R.RLANE_CD       ," ).append("\n"); 
		query.append("           R.OFC_CD         ," ).append("\n"); 
		query.append("           R.WK             ," ).append("\n"); 
		query.append("           R.NUM            ," ).append("\n"); 
		query.append("           R.NUM_1," ).append("\n"); 
		query.append("           R.VVD            ," ).append("\n"); 
		query.append("           R.BSA            ," ).append("\n"); 
		query.append("           R.LOD_SPL_CNG_FLG" ).append("\n"); 
		query.append("    HAVING ROUND(SUM(R.QTA_QTY)) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", SKD_POL_POD AS(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("       DISTINCT VSL_CD" ).append("\n"); 
		query.append("     , SKD_VOY_NO" ).append("\n"); 
		query.append("     , SKD_DIR_CD" ).append("\n"); 
		query.append("     , RLANE_CD" ).append("\n"); 
		query.append("     , POL_CD" ).append("\n"); 
		query.append("     , POD_CD" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT V.VSL_CD" ).append("\n"); 
		query.append("         , V.SKD_VOY_NO" ).append("\n"); 
		query.append("         , V.SKD_DIR_CD" ).append("\n"); 
		query.append("         , V.RLANE_CD,S1.VPS_PORT_CD" ).append("\n"); 
		query.append("         , NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD" ).append("\n"); 
		query.append("         , NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD" ).append("\n"); 
		query.append("         , S1.CLPT_SEQ as PORT_SEQ1 " ).append("\n"); 
		query.append("         , S2.CLPT_SEQ as PORT_SEQ2 " ).append("\n"); 
		query.append("         , MAX(S1.CLPT_SEQ) OVER (PARTITION BY NVL(S1.YD_CD, S1.VPS_PORT_CD), S1.VSL_CD, S1.SKD_VOY_NO, S1.SKD_DIR_CD) AS MAX_SEQ1" ).append("\n"); 
		query.append("      FROM (SELECT DISTINCT RLANE_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD FROM MAS_MON_VVD_LV) V" ).append("\n"); 
		query.append("         , VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("         , VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("     WHERE S1.VSL_CD = V.VSL_CD" ).append("\n"); 
		query.append("       AND S1.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND S1.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND S1.VSL_CD = S2.VSL_CD" ).append("\n"); 
		query.append("       AND S1.SKD_VOY_NO = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND S1.SKD_DIR_CD = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND S1.CLPT_SEQ < S2.CLPT_SEQ" ).append("\n"); 
		query.append("       ) WHERE 1=1 " ).append("\n"); 
		query.append("       AND (PORT_SEQ1 = MAX_SEQ1 OR PORT_SEQ2 < MAX_SEQ1)" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append(", ALC_DATA AS (" ).append("\n"); 
		query.append("    SELECT 3 AS FLG    ," ).append("\n"); 
		query.append("           B.TRD_CD    ," ).append("\n"); 
		query.append("           B.DIR_CD    ," ).append("\n"); 
		query.append("           B.SUB_TRD_CD," ).append("\n"); 
		query.append("           B.RLANE_CD  ," ).append("\n"); 
		query.append("           B.SLS_RGN_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("           DECODE(A.PORT_DIV, 'POL', POL_YD_CD, POD_YD_CD) AS PORT," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           A.NUM_1," ).append("\n"); 
		query.append("           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("           A.BSA            ," ).append("\n"); 
		query.append("           A.LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("           0 AS QTA_QTY     ," ).append("\n"); 
		query.append("           0 AS QTA_GREV    ," ).append("\n"); 
		query.append("           0 AS QTA_CM      ," ).append("\n"); 
		query.append("           SUM(B.ASGN_TTL_QTY) AS ALC_QTY   ," ).append("\n"); 
		query.append("           SUM(B.ASGN_RF_QTY)  AS ALC_RF_QTY," ).append("\n"); 
		query.append("           0 AS ALC_GREV," ).append("\n"); 
		query.append("           0 AS ALC_CM  ," ).append("\n"); 
		query.append("           0 AS BKG_QTY ," ).append("\n"); 
		query.append("           0 AS BKG_20  ," ).append("\n"); 
		query.append("           0 AS BKG_40  ," ).append("\n"); 
		query.append("           0 AS BKG_D2    ," ).append("\n"); 
		query.append("           0 AS BKG_D4    ," ).append("\n"); 
		query.append("           0 AS BKG_HC    ," ).append("\n"); 
		query.append("           0 AS BKG_RD    ," ).append("\n"); 
		query.append("           0 AS BKG_45  ," ).append("\n"); 
		query.append("           0 AS BKG_53  ," ).append("\n"); 
		query.append("           0 AS BKG_RF  ," ).append("\n"); 
		query.append("           0 AS BKG_R2  ," ).append("\n"); 
		query.append("           0 AS BKG_R5  ," ).append("\n"); 
		query.append("--           0 AS CM_EN   ," ).append("\n"); 
		query.append("           0 AS CM_OP   ," ).append("\n"); 
		query.append("           0 AS CM_OC   ," ).append("\n"); 
		query.append("           0 AS CM_VL  " ).append("\n"); 
		query.append("      FROM MAS_MON_VVD_LV   A," ).append("\n"); 
		query.append("           SPC_ALOC_POL_POD B," ).append("\n"); 
		query.append("          -- VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("		   SKD_POL_POD V" ).append("\n"); 
		query.append("     WHERE A.TRD_CD     = B.TRD_CD" ).append("\n"); 
		query.append("       AND A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("       AND A.IOC_CD     = B.IOC_CD" ).append("\n"); 
		query.append("       AND A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("       AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND A.DIR_CD     = B.SKD_DIR_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rhq2} != '')" ).append("\n"); 
		query.append("       AND ((     A.RHQ_CD = 'SHARC'" ).append("\n"); 
		query.append("              AND EXISTS ( SELECT 1" ).append("\n"); 
		query.append("                             FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                            WHERE SUBSTR(B.POL_YD_CD, 1, 5) = L.LOC_CD" ).append("\n"); 
		query.append("                              AND SPC_CONTI_CONV_FNC(L.CONTI_CD,A.RLANE_CD,A.DIR_CD) = 'A')" ).append("\n"); 
		query.append("                              AND A.RHQ_CD = B.SLS_RHQ_CD) " ).append("\n"); 
		query.append("              OR A.RHQ_CD = B.SLS_RHQ_CD)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${area} != '')" ).append("\n"); 
		query.append("       AND A.AQ_CD = B.SLS_AQ_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${sales_office} != '')" ).append("\n"); 
		query.append("       AND A.RGN_OFC_CD = B.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pol_cd} != '')" ).append("\n"); 
		query.append("       AND A.POL_CD = SUBSTR(B.POL_YD_CD,1,5)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       AND (    (A.OFC_CD IN ('SELCTY', 'SELCDO', 'SINRS', 'CLTCO'))" ).append("\n"); 
		query.append("             OR (B.SLS_RHQ_CD = A.OFC_CD)" ).append("\n"); 
		query.append("             OR (B.SLS_AQ_CD IN ( A.OFC_CD, DECODE(A.OFC_CD, 'SHADPI', 'SHADSA'), DECODE(A.OFC_CD, 'SHADSA', 'SHADPI')))" ).append("\n"); 
		query.append("             OR (B.SLS_RGN_OFC_CD = A.OFC_CD))" ).append("\n"); 
		query.append("       AND B.TS_FLG = 'N'" ).append("\n"); 
		query.append("      -- AND SUBSTR(B.RLANE_CD, 1, 3) = V.SLAN_CD" ).append("\n"); 
		query.append("	   AND B.RLANE_CD = V.RLANE_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.DIR_CD     = V.SKD_DIR_CD" ).append("\n"); 
		query.append("      -- AND B.POD_YD_CD  = V.YD_CD" ).append("\n"); 
		query.append("	   AND DECODE(SUBSTR(B.POL_YD_CD, 6, 2), '00', SUBSTR(B.POL_YD_CD, 1, 5), SUBSTR(B.POL_YD_CD, 1, LENGTH(V.POL_CD))) = DECODE(SUBSTR(B.POL_YD_CD, 6, 2), '00', SUBSTR(V.POL_CD, 1, 5), V.POL_CD)" ).append("\n"); 
		query.append("       AND DECODE(SUBSTR(B.POD_YD_CD, 6, 2), '00', SUBSTR(B.POD_YD_CD, 1, 5), SUBSTR(B.POD_YD_CD, 1, LENGTH(V.POD_CD))) = DECODE(SUBSTR(B.POD_YD_CD, 6, 2), '00', SUBSTR(V.POD_CD, 1, 5), V.POD_CD)" ).append("\n"); 
		query.append("  GROUP BY B.TRD_CD        ," ).append("\n"); 
		query.append("           B.DIR_CD        ," ).append("\n"); 
		query.append("           B.SUB_TRD_CD    ," ).append("\n"); 
		query.append("           B.RLANE_CD      ," ).append("\n"); 
		query.append("           B.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("           DECODE(A.PORT_DIV, 'POL', POL_YD_CD, POD_YD_CD)," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           A.NUM_1," ).append("\n"); 
		query.append("           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD," ).append("\n"); 
		query.append("           A.BSA," ).append("\n"); 
		query.append("           A.LOD_SPL_CNG_FLG" ).append("\n"); 
		query.append("    HAVING SUM(B.ASGN_TTL_QTY) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT 4 AS FLG         ," ).append("\n"); 
		query.append("           A.TRD_CD         ," ).append("\n"); 
		query.append("           A.DIR_CD         ," ).append("\n"); 
		query.append("           A.SUB_TRD_CD     ," ).append("\n"); 
		query.append("           A.RLANE_CD       ," ).append("\n"); 
		query.append("           A.OFC_CD         ," ).append("\n"); 
		query.append("           A.PORT           ," ).append("\n"); 
		query.append("           A.WK             ," ).append("\n"); 
		query.append("           A.NUM            ," ).append("\n"); 
		query.append("           A.NUM_1," ).append("\n"); 
		query.append("           A.VVD            ," ).append("\n"); 
		query.append("           A.BSA            ," ).append("\n"); 
		query.append("           A.LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("           0 AS QTA_QTY     ," ).append("\n"); 
		query.append("           0 AS QTA_GREV    ," ).append("\n"); 
		query.append("           0 AS QTA_CM      ," ).append("\n"); 
		query.append("           0 AS ALC_QTY     ," ).append("\n"); 
		query.append("           0 AS ALC_RF_QTY  ," ).append("\n"); 
		query.append("           0 AS ALC_GREV    ," ).append("\n"); 
		query.append("           0 AS ALC_CM      ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,   1, 14), 0))) AS BKG_QTY," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  15, 14), 0))) AS BKG_20 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  29, 14), 0))) AS BKG_40 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  43, 14), 0))) AS BKG_D2 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  57, 14), 0))) AS BKG_D4 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  71, 14), 0))) AS BKG_HC ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  85, 14), 0))) AS BKG_RD ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   ,  99, 14), 0))) AS BKG_45 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   , 113, 14), 0))) AS BKG_53 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   , 127, 14), 0))) AS BKG_RF ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   , 141, 14), 0))) AS BKG_R2 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(VAL   , 155, 14), 0))) AS BKG_R5 ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,   1, 10), 0))) AS CM_OP  ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,  11, 10), 0))) AS CM_OC  ," ).append("\n"); 
		query.append("           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,  21, 10), 0))) AS CM_VL" ).append("\n"); 
		query.append("--           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,   1, 10), 0))) AS CM_EN  ," ).append("\n"); 
		query.append("--           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,  11, 10), 0))) AS CM_OP  ," ).append("\n"); 
		query.append("--           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,  21, 10), 0))) AS CM_OC  ," ).append("\n"); 
		query.append("--           SUM(TO_NUMBER(NVL(SUBSTR(CM_VAL,  31, 10), 0))) AS CM_VL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT " ).append("\n"); 
		query.append("                   A.TRD_CD    ," ).append("\n"); 
		query.append("                   A.DIR_CD    ," ).append("\n"); 
		query.append("                   A.SUB_TRD_CD," ).append("\n"); 
		query.append("                   A.RLANE_CD  ," ).append("\n"); 
		query.append("                   O.N4TH_PRNT_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                   DECODE(A.PORT_DIV, 'POL', NVL(BV.POL_YD_CD, B.POL_NOD_CD), 'POD', NVL(BV.POD_YD_CD, B.POD_NOD_CD), B.POD_NOD_CD) AS PORT," ).append("\n"); 
		query.append("                   A.COST_YR||A.COST_WK AS WK," ).append("\n"); 
		query.append("                   A.NUM," ).append("\n"); 
		query.append("                   A.NUM_1," ).append("\n"); 
		query.append("                   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                   A.BSA," ).append("\n"); 
		query.append("                   A.LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                   (" ).append("\n"); 
		query.append("                      SELECT" ).append("\n"); 
		query.append("                                TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'D2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'D4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(CASE WHEN Q.CNTR_TPSZ_CD LIKE 'R%' AND Q.EQ_SUBST_CNTR_TPSZ_CD LIKE 'D%' THEN Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'R2', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                             || TO_CHAR(SUM(CASE" ).append("\n"); 
		query.append("                    							WHEN SUBSTR(Q.CNTR_TPSZ_CD, 1, 1) = 'R' AND Q.CNTR_TPSZ_CD <> 'R2' " ).append("\n"); 
		query.append("													 THEN Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY" ).append("\n"); 
		query.append("                    						ELSE 0" ).append("\n"); 
		query.append("                  							END), 'FM0000000000.000')" ).append("\n"); 
		query.append("                        FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                       WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                         AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                   ) AS VAL," ).append("\n"); 
		query.append("                   SPC_GET_OB_MVMT_FNC(B.BKG_NO, (SELECT DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD)), -1, 'Y', 'N')" ).append("\n"); 
		query.append("                                                    FROM VSK_VSL_PORT_SKD VPS" ).append("\n"); 
		query.append("                                                   WHERE VPS.VSL_CD       = B.VSL_CD" ).append("\n"); 
		query.append("                                                     AND VPS.SKD_VOY_NO   = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                     AND VPS.SKD_DIR_CD   = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                     AND VPS.YD_CD        = NVL(BV.POL_YD_CD, B.POL_NOD_CD)" ).append("\n"); 
		query.append("                                                     AND VPS.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ )) AS CM_VAL," ).append("\n"); 
		query.append("                   A.PAST" ).append("\n"); 
		query.append("              FROM MAS_MON_VVD_LV     A," ).append("\n"); 
		query.append("                   BKG_BOOKING        B," ).append("\n"); 
		query.append("                   BKG_VVD            BV," ).append("\n"); 
		query.append("                   MDM_DTL_REV_LANE   DRL," ).append("\n"); 
		query.append("                   MDM_REV_LANE       RL," ).append("\n"); 
		query.append("                   SPC_OFC_LVL        O " ).append("\n"); 
		query.append("             WHERE B.VSL_CD          = A.VSL_CD" ).append("\n"); 
		query.append("               AND B.SKD_VOY_NO      = A.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND B.SKD_DIR_CD      = A.SKD_DIR_CD" ).append("\n"); 
		query.append("               and B.BKG_STS_CD     IN ('W','F')" ).append("\n"); 
		query.append("               AND B.BKG_CGO_TP_CD  IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("               AND BV.BKG_NO         = B.BKG_NO" ).append("\n"); 
		query.append("               AND BV.VSL_CD         = B.VSL_CD" ).append("\n"); 
		query.append("               AND BV.SKD_VOY_NO     = B.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND BV.SKD_DIR_CD     = B.SKD_DIR_CD " ).append("\n"); 
		query.append("               AND BV.VSL_PRE_PST_CD = 'T' " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${rhq2} != '' || ${area} != '' || ${sales_office} != '')" ).append("\n"); 
		query.append("               AND (    (A.RHQ_CD = 'SHARC' AND A.AQ_CD IS NULL AND A.RGN_OFC_CD IS NULL) " ).append("\n"); 
		query.append("                     OR EXISTS ( SELECT O.OFC_CD" ).append("\n"); 
		query.append("                                   FROM SPC_OFC_LVL O" ).append("\n"); 
		query.append("                                  WHERE O.OFC_TP_CD IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                                    AND SPC_SCR_OFC_CONV_FNC(B.BKG_OFC_CD) = O.OFC_CD" ).append("\n"); 
		query.append("                                    AND A.RHQ_CD = O.N2ND_PRNT_OFC_CD" ).append("\n"); 
		query.append("                                    AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                             CONNECT BY NOCYCLE O.PRNT_OFC_CD = PRIOR O.OFC_CD" ).append("\n"); 
		query.append("                                     START WITH (A.RGN_OFC_CD IS NULL AND (O.PRNT_OFC_CD = A.AQ_CD OR O.PRNT_OFC_CD = A.RHQ_CD)) OR (O.OFC_CD = A.RGN_OFC_CD)))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${pol_cd} != '')" ).append("\n"); 
		query.append("               AND A.POL_CD = NVL(B.PRE_RLY_PORT_CD, B.POL_CD)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("               AND DRL.RLANE_CD        = A.RLANE_CD" ).append("\n"); 
		query.append("               AND DRL.VSL_SLAN_DIR_CD = A.DIR_CD" ).append("\n"); 
		query.append("               AND DRL.IOC_CD          = A.IOC_CD" ).append("\n"); 
		query.append("               AND DRL.FM_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)" ).append("\n"); 
		query.append("                                            FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                                           WHERE L.LOC_CD = NVL(B.PRE_RLY_PORT_CD, B.POL_CD) )" ).append("\n"); 
		query.append("               AND DRL.TO_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)" ).append("\n"); 
		query.append("                                            FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                                           WHERE L.LOC_CD = NVL(B.PST_RLY_PORT_CD, B.POD_CD) )" ).append("\n"); 
		query.append("               AND (    ((A.RHQ_CD = 'SHARC' AND A.AQ_CD IS NULL AND A.RGN_OFC_CD IS NULL AND  A.RHQ_CD = O.N2ND_PRNT_OFC_CD) AND DRL.FM_CONTI_CD = 'A')" ).append("\n"); 
		query.append("                     OR A.RHQ_CD <> 'SHARC'" ).append("\n"); 
		query.append("                     OR A.AQ_CD      IS NOT NULL" ).append("\n"); 
		query.append("                     OR A.RGN_OFC_CD IS NOT NULL )" ).append("\n"); 
		query.append("               AND DRL.SUB_TRD_CD = A.SUB_TRD_CD" ).append("\n"); 
		query.append("               AND DRL.DELT_FLG   = 'N'" ).append("\n"); 
		query.append("               AND DRL.RLANE_CD   = RL.RLANE_CD" ).append("\n"); 
		query.append("               AND RL.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("               AND RL.VSL_SLAN_CD = B.SLAN_CD" ).append("\n"); 
		query.append("               AND RL.VSL_TP_CD   = 'C'" ).append("\n"); 
		query.append("               AND RL.DELT_FLG    = 'N'" ).append("\n"); 
		query.append("               and O.OFC_CD       = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)" ).append("\n"); 
		query.append("               AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("               AND O.N4TH_PRNT_OFC_CD IS NOT NULL" ).append("\n"); 
		query.append("           ) A" ).append("\n"); 
		query.append("  GROUP BY A.TRD_CD         ," ).append("\n"); 
		query.append("           A.DIR_CD         ," ).append("\n"); 
		query.append("           A.SUB_TRD_CD     ," ).append("\n"); 
		query.append("           A.RLANE_CD       ," ).append("\n"); 
		query.append("           A.OFC_CD         ," ).append("\n"); 
		query.append("           A.PORT           ," ).append("\n"); 
		query.append("           A.WK             ," ).append("\n"); 
		query.append("           A.NUM            ," ).append("\n"); 
		query.append("           A.NUM_1," ).append("\n"); 
		query.append("           A.VVD            ," ).append("\n"); 
		query.append("           A.BSA            ," ).append("\n"); 
		query.append("           A.LOD_SPL_CNG_FLG" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BASE_DATA AS(" ).append("\n"); 
		query.append("    SELECT TRD_CD" ).append("\n"); 
		query.append("          ,DIR_CD" ).append("\n"); 
		query.append("          ,SUB_TRD_CD" ).append("\n"); 
		query.append("          ,RLANE_CD" ).append("\n"); 
		query.append("          -- BSA 강제로 가져온 경우에는 BSA로 지정" ).append("\n"); 
		query.append("          ,DECODE(Z1.OFC_CD, 'BSA', 'BSA', (  SELECT NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)" ).append("\n"); 
		query.append("                                                FROM SPC_OFC_LVL O" ).append("\n"); 
		query.append("                                               WHERE O.OFC_CD = Z1.OFC_CD" ).append("\n"); 
		query.append("                                                 AND Z1.WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK )" ).append("\n"); 
		query.append("           ) AS AQ_CD" ).append("\n"); 
		query.append("          ,OFC_CD" ).append("\n"); 
		query.append("          ,WK" ).append("\n"); 
		query.append("          ,PORT" ).append("\n"); 
		query.append("          ,NUM" ).append("\n"); 
		query.append("#if(${checkVvd5} == 'Y')" ).append("\n"); 
		query.append("          ,DENSE_RANK() OVER(PARTITION BY TRD_CD, RLANE_CD, DIR_CD, NUM ORDER BY NUM_1) NUM_1 -- 누락되는 vvd 들이 존재해서 순번을 다시 만듬" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("          ,'' AS NUM_1" ).append("\n"); 
		query.append("#end          " ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,BSA" ).append("\n"); 
		query.append("          ,LOD_SPL_CNG_FLG" ).append("\n"); 
		query.append("          ,QTA_QTY" ).append("\n"); 
		query.append("          ,QTA_GREV" ).append("\n"); 
		query.append("          ,QTA_CM" ).append("\n"); 
		query.append("          ,ALC_QTY" ).append("\n"); 
		query.append("          ,ALC_RF_QTY" ).append("\n"); 
		query.append("          ,ALC_GREV" ).append("\n"); 
		query.append("          ,ALC_CM" ).append("\n"); 
		query.append("          ,BKG_QTY" ).append("\n"); 
		query.append("          ,BKG_20" ).append("\n"); 
		query.append("          ,BKG_40" ).append("\n"); 
		query.append("          ,BKG_D2" ).append("\n"); 
		query.append("          ,BKG_D4" ).append("\n"); 
		query.append("          ,BKG_HC" ).append("\n"); 
		query.append("          ,BKG_RD" ).append("\n"); 
		query.append("          ,BKG_45" ).append("\n"); 
		query.append("          ,BKG_53" ).append("\n"); 
		query.append("          ,BKG_RF" ).append("\n"); 
		query.append("          ,BKG_R2" ).append("\n"); 
		query.append("          ,BKG_R5" ).append("\n"); 
		query.append("--          ,CM_EN" ).append("\n"); 
		query.append("          ,CM_OP" ).append("\n"); 
		query.append("          ,CM_OC" ).append("\n"); 
		query.append("          ,CM_VL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT TRD_CD         ," ).append("\n"); 
		query.append("                   DIR_CD         ," ).append("\n"); 
		query.append("                   SUB_TRD_CD     ," ).append("\n"); 
		query.append("                   RLANE_CD       ," ).append("\n"); 
		query.append("                   OFC_CD         ," ).append("\n"); 
		query.append("                   WK             ," ).append("\n"); 
		query.append("                   PORT           ," ).append("\n"); 
		query.append("                   NUM            ," ).append("\n"); 
		query.append("                   NUM_1," ).append("\n"); 
		query.append("                   VVD            ," ).append("\n"); 
		query.append("                   BSA            ," ).append("\n"); 
		query.append("                   LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                   SUM(QTA_QTY)    AS QTA_QTY   ," ).append("\n"); 
		query.append("                   SUM(QTA_GREV)   AS QTA_GREV  ," ).append("\n"); 
		query.append("                   SUM(QTA_CM)     AS QTA_CM    ," ).append("\n"); 
		query.append("                   SUM(ALC_QTY)    AS ALC_QTY   ," ).append("\n"); 
		query.append("                   SUM(ALC_RF_QTY) AS ALC_RF_QTY," ).append("\n"); 
		query.append("                   SUM(ALC_GREV)   AS ALC_GREV  ," ).append("\n"); 
		query.append("                   SUM(ALC_CM)     AS ALC_CM    ," ).append("\n"); 
		query.append("                   SUM(BKG_QTY)    AS BKG_QTY   ," ).append("\n"); 
		query.append("                   SUM(BKG_20)     AS BKG_20    ," ).append("\n"); 
		query.append("                   SUM(BKG_40)     AS BKG_40    ," ).append("\n"); 
		query.append("                   SUM(BKG_D2)     AS BKG_D2    ," ).append("\n"); 
		query.append("                   SUM(BKG_D4)     AS BKG_D4    ," ).append("\n"); 
		query.append("                   SUM(BKG_HC)     AS BKG_HC    ," ).append("\n"); 
		query.append("                   SUM(BKG_RD)     AS BKG_RD    ," ).append("\n"); 
		query.append("                   SUM(BKG_45)     AS BKG_45    ," ).append("\n"); 
		query.append("                   SUM(BKG_53)     AS BKG_53    ," ).append("\n"); 
		query.append("                   SUM(BKG_RF)     AS BKG_RF    ," ).append("\n"); 
		query.append("                   SUM(BKG_R2)     AS BKG_R2    ," ).append("\n"); 
		query.append("                   SUM(BKG_R5)     AS BKG_R5    ," ).append("\n"); 
		query.append("--                   SUM(CM_EN)      AS CM_EN     ," ).append("\n"); 
		query.append("                   SUM(CM_OP)      AS CM_OP     ," ).append("\n"); 
		query.append("                   SUM(CM_OC)      AS CM_OC     ," ).append("\n"); 
		query.append("                   SUM(CM_VL)      AS CM_VL" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT TRD_CD         ," ).append("\n"); 
		query.append("                             DIR_CD         ," ).append("\n"); 
		query.append("                             SUB_TRD_CD     ," ).append("\n"); 
		query.append("                             RLANE_CD       ," ).append("\n"); 
		query.append("                             OFC_CD         ," ).append("\n"); 
		query.append("                             PORT           ," ).append("\n"); 
		query.append("                             WK             ," ).append("\n"); 
		query.append("                             NUM            ," ).append("\n"); 
		query.append("                             NUM_1," ).append("\n"); 
		query.append("                             VVD            ," ).append("\n"); 
		query.append("                             BSA            ," ).append("\n"); 
		query.append("                             LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                             QTA_QTY        ," ).append("\n"); 
		query.append("                             QTA_GREV       ," ).append("\n"); 
		query.append("                             QTA_CM         ," ).append("\n"); 
		query.append("                             ALC_QTY        ," ).append("\n"); 
		query.append("                             ALC_RF_QTY     ," ).append("\n"); 
		query.append("                             ALC_GREV       ," ).append("\n"); 
		query.append("                             ALC_CM         ," ).append("\n"); 
		query.append("                             BKG_QTY        ," ).append("\n"); 
		query.append("                             BKG_20         ," ).append("\n"); 
		query.append("                             BKG_40         ," ).append("\n"); 
		query.append("                             BKG_D2         ," ).append("\n"); 
		query.append("                             BKG_D4         ," ).append("\n"); 
		query.append("                             BKG_HC         ," ).append("\n"); 
		query.append("                             BKG_RD         ," ).append("\n"); 
		query.append("                             BKG_45         ," ).append("\n"); 
		query.append("                             BKG_53         ," ).append("\n"); 
		query.append("                             BKG_RF         ," ).append("\n"); 
		query.append("                             BKG_R2         ," ).append("\n"); 
		query.append("                             BKG_R5         ," ).append("\n"); 
		query.append("--                             CM_EN          ," ).append("\n"); 
		query.append("                             CM_OP          ," ).append("\n"); 
		query.append("                             CM_OC          ," ).append("\n"); 
		query.append("                             CM_VL" ).append("\n"); 
		query.append("                        FROM QTA_DATA" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT TRD_CD         ," ).append("\n"); 
		query.append("                             DIR_CD         ," ).append("\n"); 
		query.append("                             SUB_TRD_CD     ," ).append("\n"); 
		query.append("                             RLANE_CD       ," ).append("\n"); 
		query.append("                             OFC_CD         ," ).append("\n"); 
		query.append("                             PORT           ," ).append("\n"); 
		query.append("                             WK             ," ).append("\n"); 
		query.append("                             NUM            ," ).append("\n"); 
		query.append("                             NUM_1," ).append("\n"); 
		query.append("                             VVD            ," ).append("\n"); 
		query.append("                             BSA            ," ).append("\n"); 
		query.append("                             LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                             QTA_QTY        ," ).append("\n"); 
		query.append("                             QTA_GREV       ," ).append("\n"); 
		query.append("                             QTA_CM         ," ).append("\n"); 
		query.append("                             ALC_QTY        ," ).append("\n"); 
		query.append("                             ALC_RF_QTY     ," ).append("\n"); 
		query.append("                             ALC_GREV       ," ).append("\n"); 
		query.append("                             ALC_CM         ," ).append("\n"); 
		query.append("                             BKG_QTY        ," ).append("\n"); 
		query.append("                             BKG_20         ," ).append("\n"); 
		query.append("                             BKG_40         ," ).append("\n"); 
		query.append("                             BKG_D2         ," ).append("\n"); 
		query.append("                             BKG_D4         ," ).append("\n"); 
		query.append("                             BKG_HC         ," ).append("\n"); 
		query.append("                             BKG_RD         ," ).append("\n"); 
		query.append("                             BKG_45         ," ).append("\n"); 
		query.append("                             BKG_53         ," ).append("\n"); 
		query.append("                             BKG_RF         ," ).append("\n"); 
		query.append("                             BKG_R2         ," ).append("\n"); 
		query.append("                             BKG_R5         ," ).append("\n"); 
		query.append("--                             CM_EN          ," ).append("\n"); 
		query.append("                             CM_OP          ," ).append("\n"); 
		query.append("                             CM_OC          ," ).append("\n"); 
		query.append("                             CM_VL" ).append("\n"); 
		query.append("                        FROM ALC_DATA" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT TRD_CD         ," ).append("\n"); 
		query.append("                             DIR_CD         ," ).append("\n"); 
		query.append("                             SUB_TRD_CD     ," ).append("\n"); 
		query.append("                             RLANE_CD       ," ).append("\n"); 
		query.append("                             OFC_CD         ," ).append("\n"); 
		query.append("                             PORT           ," ).append("\n"); 
		query.append("                             WK             ," ).append("\n"); 
		query.append("                             NUM            ," ).append("\n"); 
		query.append("                             NUM_1," ).append("\n"); 
		query.append("                             VVD            ," ).append("\n"); 
		query.append("                             BSA            ," ).append("\n"); 
		query.append("                             LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                             QTA_QTY        ," ).append("\n"); 
		query.append("                             QTA_GREV       ," ).append("\n"); 
		query.append("                             QTA_CM         ," ).append("\n"); 
		query.append("                             ALC_QTY        ," ).append("\n"); 
		query.append("                             ALC_RF_QTY     ," ).append("\n"); 
		query.append("                             ALC_GREV       ," ).append("\n"); 
		query.append("                             ALC_CM         ," ).append("\n"); 
		query.append("                             BKG_QTY        ," ).append("\n"); 
		query.append("                             BKG_20         ," ).append("\n"); 
		query.append("                             BKG_40         ," ).append("\n"); 
		query.append("                             BKG_D2         ," ).append("\n"); 
		query.append("                             BKG_D4         ," ).append("\n"); 
		query.append("                             BKG_HC         ," ).append("\n"); 
		query.append("                             BKG_RD         ," ).append("\n"); 
		query.append("                             BKG_45         ," ).append("\n"); 
		query.append("                             BKG_53         ," ).append("\n"); 
		query.append("                             BKG_RF         ," ).append("\n"); 
		query.append("                             BKG_R2         ," ).append("\n"); 
		query.append("                             BKG_R5         ," ).append("\n"); 
		query.append("--                             CM_EN          ," ).append("\n"); 
		query.append("                             CM_OP          ," ).append("\n"); 
		query.append("                             CM_OC          ," ).append("\n"); 
		query.append("                             CM_VL" ).append("\n"); 
		query.append("                        FROM BKG_DATA" ).append("\n"); 
		query.append("                      -- BSA TO LOAD가 아닌 경우, BSA 정보 무조건 가져오도록 추가" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT DISTINCT" ).append("\n"); 
		query.append("                             TRD_CD    ," ).append("\n"); 
		query.append("                             DIR_CD    ," ).append("\n"); 
		query.append("                             SUB_TRD_CD," ).append("\n"); 
		query.append("                             RLANE_CD  ," ).append("\n"); 
		query.append("                             'BSA'            AS OFC_CD," ).append("\n"); 
		query.append("                             '0000000'        AS PORT  ," ).append("\n"); 
		query.append("                             COST_YR||COST_WK AS WK    ," ).append("\n"); 
		query.append("                             NUM            ," ).append("\n"); 
		query.append("                             NUM_1," ).append("\n"); 
		query.append("                             VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("                             BSA            ," ).append("\n"); 
		query.append("                             LOD_SPL_CNG_FLG," ).append("\n"); 
		query.append("                             0 AS QTA_QTY   ," ).append("\n"); 
		query.append("                             0 AS QTA_GREV  ," ).append("\n"); 
		query.append("                             0 AS QTA_CM    ," ).append("\n"); 
		query.append("                             0 AS ALC_QTY   ," ).append("\n"); 
		query.append("                             0 AS ALC_RF_QTY," ).append("\n"); 
		query.append("                             0 AS ALC_GREV  ," ).append("\n"); 
		query.append("                             0 AS ALC_CM    ," ).append("\n"); 
		query.append("                             0 AS BKG_QTY   ," ).append("\n"); 
		query.append("                             0 AS BKG_20    ," ).append("\n"); 
		query.append("                             0 AS BKG_40    ," ).append("\n"); 
		query.append("                             0 AS BKG_D2    ," ).append("\n"); 
		query.append("                             0 AS BKG_D4    ," ).append("\n"); 
		query.append("                             0 AS BKG_HC    ," ).append("\n"); 
		query.append("                             0 AS BKG_RD    ," ).append("\n"); 
		query.append("                             0 AS BKG_45    ," ).append("\n"); 
		query.append("                             0 AS BKG_53    ," ).append("\n"); 
		query.append("                             0 AS BKG_RF    ," ).append("\n"); 
		query.append("                             0 AS BKG_R2    ," ).append("\n"); 
		query.append("                             0 AS BKG_R5    ," ).append("\n"); 
		query.append("--                             0 AS CM_EN          ," ).append("\n"); 
		query.append("                             0 AS CM_OP     ," ).append("\n"); 
		query.append("                             0 AS CM_OC     ," ).append("\n"); 
		query.append("                             0 AS CM_VL" ).append("\n"); 
		query.append("                        FROM MAS_MON_VVD_LV" ).append("\n"); 
		query.append("                       WHERE LOD_SPL_CNG_FLG = 'N'" ).append("\n"); 
		query.append("                         AND BSA > 0" ).append("\n"); 
		query.append("                   )" ).append("\n"); 
		query.append("          GROUP BY TRD_CD         ," ).append("\n"); 
		query.append("                   DIR_CD         ," ).append("\n"); 
		query.append("                   SUB_TRD_CD     ," ).append("\n"); 
		query.append("                   RLANE_CD       ," ).append("\n"); 
		query.append("                   OFC_CD         ," ).append("\n"); 
		query.append("                   PORT           ," ).append("\n"); 
		query.append("                   WK             ," ).append("\n"); 
		query.append("                   NUM            ," ).append("\n"); 
		query.append("                   NUM_1," ).append("\n"); 
		query.append("                   VVD            ," ).append("\n"); 
		query.append("                   BSA            ," ).append("\n"); 
		query.append("                   LOD_SPL_CNG_FLG" ).append("\n"); 
		query.append("            ) Z1" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BASE_DATA1 AS (" ).append("\n"); 
		query.append("#if(${is_sha} == 'Y' || ${is_sel} == 'Y' || ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT 1 AS BSA_AVG ," ).append("\n"); 
		query.append("           Z1.TRD_CD    ," ).append("\n"); 
		query.append("           Z1.SUB_TRD_CD," ).append("\n"); 
		query.append("           SPC_GET_DEST_FNC(Z1.TRD_CD, Z1.SUB_TRD_CD, Z1.RLANE_CD) AS DEST," ).append("\n"); 
		query.append("           Z1.RLANE_CD  ," ).append("\n"); 
		query.append("           Z1.DIR_CD    ," ).append("\n"); 
		query.append("--           Z1.AQ_CD  ," ).append("\n"); 
		query.append("           DECODE(Z1.OFC_CD, 'SELSC', 'SELSC', 'TYOSC', 'TYOSC', Z1.AQ_CD) AQ_CD      ," ).append("\n"); 
		query.append("           Z1.OFC_CD ," ).append("\n"); 
		query.append("           Z1.PORT   ," ).append("\n"); 
		query.append("           Z1.NUM_1  ," ).append("\n"); 
		query.append("#set($primate = 'new_dur')" ).append("\n"); 
		query.append("#if(${duration} == '1')" ).append("\n"); 
		query.append("	#set($new_dur = ['1'])" ).append("\n"); 
		query.append("#elseif(${duration} == '2')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2'])" ).append("\n"); 
		query.append("#elseif(${duration} == '3')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3'])" ).append("\n"); 
		query.append("#elseif(${duration} == '4')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3','4'])" ).append("\n"); 
		query.append("#elseif(${duration} == '5')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3','4','5'])" ).append("\n"); 
		query.append("#elseif(${duration} == '6')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3','4','5','6'])" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( $key in $new_dur )" ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, NVL(Z1.BSA, 0), 0)) AS BSA${key} ," ).append("\n"); 
		query.append("#if(${checkVvd5} == 'Y')" ).append("\n"); 
		query.append("           MAX(DECODE(Z1.NUM, ${key}, Z1.VVD))            AS VVD${key}1," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("           MIN(DECODE(Z1.NUM, ${key}, Z1.VVD))            AS VVD${key}1," ).append("\n"); 
		query.append("#end            " ).append("\n"); 
		query.append("           MAX(DECODE(Z1.NUM, ${key}, Z1.VVD))            AS VVD${key}2," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.QTA_QTY, 0))     AS QTA${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.ALC_QTY, 0))     AS ALC${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.ALC_RF_QTY, 0))  AS ALC_RF${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_QTY, 0))     AS BKG${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_20, 0))      AS BKG_20${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_40, 0))      AS BKG_40${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_D2, 0))      AS BKG_D2${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_D4, 0))      AS BKG_D4${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_HC, 0))      AS BKG_HC${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_RD, 0))      AS BKG_RD${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_45, 0))      AS BKG_45${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_53, 0))      AS BKG_53${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_RF, 0))      AS BKG_RF${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_R2, 0))      AS BKG_R2${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_R5, 0))      AS BKG_R5${key}1," ).append("\n"); 
		query.append("--           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_EN, 0))       AS CM_EN${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_OP, 0))       AS CM_OP${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_OC, 0))       AS CM_OC${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_VL, 0))       AS CM_VL${key}1," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           ''" ).append("\n"); 
		query.append("      FROM BASE_DATA Z1" ).append("\n"); 
		query.append("      WHERE 1=1" ).append("\n"); 
		query.append("#if(${area} != '' && ${area} != 'null')" ).append("\n"); 
		query.append("	  AND Z1.AQ_CD = @[area]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${is_sha} == 'Y')" ).append("\n"); 
		query.append("#if(${is_sel} == 'Y' && ${is_tyo} == 'N')" ).append("\n"); 
		query.append("      AND Z1.OFC_CD <> 'TYOSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'N' && ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("      AND Z1.OFC_CD <> 'SELSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'N' && ${is_tyo} == 'N')" ).append("\n"); 
		query.append("      AND Z1.OFC_CD <> 'SELSC' AND Z1.OFC_CD <> 'TYOSC'" ).append("\n"); 
		query.append("#end	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${is_sha} == 'N')" ).append("\n"); 
		query.append("#if(${is_sel} == 'Y' && ${is_tyo} == 'N')" ).append("\n"); 
		query.append("      AND Z1.OFC_CD = 'SELSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'N' && ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("      AND Z1.OFC_CD = 'TYOSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'Y' && ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("      AND Z1.OFC_CD = 'SELSC' OR Z1.OFC_CD = 'TYOSC'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("  GROUP BY Z1.TRD_CD    ," ).append("\n"); 
		query.append("           Z1.SUB_TRD_CD," ).append("\n"); 
		query.append("           SPC_GET_DEST_FNC(Z1.TRD_CD, Z1.SUB_TRD_CD, Z1.RLANE_CD)," ).append("\n"); 
		query.append("           Z1.RLANE_CD  ," ).append("\n"); 
		query.append("           Z1.DIR_CD    ," ).append("\n"); 
		query.append("           DECODE(Z1.OFC_CD, 'SELSC', 'SELSC', 'TYOSC', 'TYOSC', Z1.AQ_CD)    ," ).append("\n"); 
		query.append("           Z1.OFC_CD    ," ).append("\n"); 
		query.append("           Z1.PORT      ," ).append("\n"); 
		query.append("           Z1.NUM_1" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(( ${is_sha} == 'N' && ${is_sel} == 'Y' ) || ( ${is_sha} == 'N' && ${is_tyo} == 'Y' ))" ).append("\n"); 
		query.append(" UNION ALL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${is_sha} == 'N')" ).append("\n"); 
		query.append("    SELECT 1 AS BSA_AVG ," ).append("\n"); 
		query.append("           Z1.TRD_CD    ," ).append("\n"); 
		query.append("           Z1.SUB_TRD_CD," ).append("\n"); 
		query.append("           SPC_GET_DEST_FNC(Z1.TRD_CD, Z1.SUB_TRD_CD, Z1.RLANE_CD) AS DEST," ).append("\n"); 
		query.append("           Z1.RLANE_CD  ," ).append("\n"); 
		query.append("           Z1.DIR_CD    ," ).append("\n"); 
		query.append("--           Z1.AQ_CD  ," ).append("\n"); 
		query.append("           DECODE(Z1.OFC_CD, 'SELSC', 'SELSC', 'TYOSC', 'TYOSC', Z1.AQ_CD) AQ_CD      ," ).append("\n"); 
		query.append("           Z1.OFC_CD ," ).append("\n"); 
		query.append("           Z1.PORT   ," ).append("\n"); 
		query.append("           Z1.NUM_1  ," ).append("\n"); 
		query.append("#set($primate = 'new_dur')" ).append("\n"); 
		query.append("#if(${duration} == '1')" ).append("\n"); 
		query.append("	#set($new_dur = ['1'])" ).append("\n"); 
		query.append("#elseif(${duration} == '2')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2'])" ).append("\n"); 
		query.append("#elseif(${duration} == '3')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3'])" ).append("\n"); 
		query.append("#elseif(${duration} == '4')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3','4'])" ).append("\n"); 
		query.append("#elseif(${duration} == '5')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3','4','5'])" ).append("\n"); 
		query.append("#elseif(${duration} == '6')" ).append("\n"); 
		query.append("	#set($new_dur = ['1','2','3','4','5','6'])" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( $key in $new_dur )" ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, NVL(Z1.BSA, 0), 0)) AS BSA${key} ," ).append("\n"); 
		query.append("#if(${checkVvd5} == 'Y')" ).append("\n"); 
		query.append("           MAX(DECODE(Z1.NUM, ${key}, Z1.VVD))            AS VVD${key}1," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("           MIN(DECODE(Z1.NUM, ${key}, Z1.VVD))            AS VVD${key}1," ).append("\n"); 
		query.append("#end            " ).append("\n"); 
		query.append("           MAX(DECODE(Z1.NUM, ${key}, Z1.VVD))            AS VVD${key}2," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.QTA_QTY, 0))     AS QTA${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.ALC_QTY, 0))     AS ALC${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.ALC_RF_QTY, 0))  AS ALC_RF${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_QTY, 0))     AS BKG${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_20, 0))      AS BKG_20${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_40, 0))      AS BKG_40${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_D2, 0))      AS BKG_D2${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_D4, 0))      AS BKG_D4${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_HC, 0))      AS BKG_HC${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_RD, 0))      AS BKG_RD${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_45, 0))      AS BKG_45${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_53, 0))      AS BKG_53${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_RF, 0))      AS BKG_RF${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_R2, 0))      AS BKG_R2${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.BKG_R5, 0))      AS BKG_R5${key}1," ).append("\n"); 
		query.append("--           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_EN, 0))       AS CM_EN${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_OP, 0))       AS CM_OP${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_OC, 0))       AS CM_OC${key}1," ).append("\n"); 
		query.append("           SUM(DECODE(Z1.NUM, ${key}, Z1.CM_VL, 0))       AS CM_VL${key}1," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           ''" ).append("\n"); 
		query.append("      FROM BASE_DATA Z1" ).append("\n"); 
		query.append("      WHERE 1=1" ).append("\n"); 
		query.append("      AND Z1.AQ_CD <> 'SHARC' AND Z1.AQ_CD <> 'SZPDC'" ).append("\n"); 
		query.append("#if(${area} != '' && ${area} != 'null')" ).append("\n"); 
		query.append("	  AND Z1.AQ_CD = @[area]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  GROUP BY Z1.TRD_CD    ," ).append("\n"); 
		query.append("           Z1.SUB_TRD_CD," ).append("\n"); 
		query.append("           SPC_GET_DEST_FNC(Z1.TRD_CD, Z1.SUB_TRD_CD, Z1.RLANE_CD)," ).append("\n"); 
		query.append("           Z1.RLANE_CD  ," ).append("\n"); 
		query.append("           Z1.DIR_CD    ," ).append("\n"); 
		query.append("           DECODE(Z1.OFC_CD, 'SELSC', 'SELSC', 'TYOSC', 'TYOSC', Z1.AQ_CD)    ," ).append("\n"); 
		query.append("           Z1.OFC_CD    ," ).append("\n"); 
		query.append("           Z1.PORT      ," ).append("\n"); 
		query.append("           Z1.NUM_1" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("  SELECT Z4.BSA_AVG   ,                   " ).append("\n"); 
		query.append("         Z4.TRD_CD    ," ).append("\n"); 
		query.append("         Z4.SUB_TRD_CD," ).append("\n"); 
		query.append("         Z4.RLANE_CD  ," ).append("\n"); 
		query.append("         Z4.DIR_CD    ," ).append("\n"); 
		query.append("         Z4.AQ_CD     ," ).append("\n"); 
		query.append("         Z4.OFC_CD    ," ).append("\n"); 
		query.append("         Z4.PORT1     ," ).append("\n"); 
		query.append("         Z4.CNT       ," ).append("\n"); 
		query.append("#foreach( $key in $new_dur )" ).append("\n"); 
		query.append("         Z4.VVD${key}   ," ).append("\n"); 
		query.append("         Z4.BSA${key}   ," ).append("\n"); 
		query.append("         Z4.QTA${key}1," ).append("\n"); 
		query.append("         Z4.ALC${key}1," ).append("\n"); 
		query.append("         Z4.ALC_RF${key}1," ).append("\n"); 
		query.append("         Z4.BKG${key}1, " ).append("\n"); 
		query.append("         Z4.BKG_20${key}1," ).append("\n"); 
		query.append("         Z4.BKG_40${key}1," ).append("\n"); 
		query.append("         Z4.BKG_D2${key}1," ).append("\n"); 
		query.append("         Z4.BKG_D4${key}1," ).append("\n"); 
		query.append("         Z4.BKG_HC${key}1," ).append("\n"); 
		query.append("         Z4.BKG_RD${key}1," ).append("\n"); 
		query.append("         Z4.BKG_45${key}1," ).append("\n"); 
		query.append("         Z4.BKG_53${key}1," ).append("\n"); 
		query.append("         Z4.BKG_RF${key}1," ).append("\n"); 
		query.append("         Z4.BKG_R2${key}1," ).append("\n"); 
		query.append("         Z4.BKG_R5${key}1," ).append("\n"); 
		query.append("--         Z4.CM_EN${key}1," ).append("\n"); 
		query.append("         Z4.CM_OP${key}1," ).append("\n"); 
		query.append("         Z4.CM_OC${key}1," ).append("\n"); 
		query.append("         Z4.CM_VL${key}1," ).append("\n"); 
		query.append("         Z4.PREF${key}1," ).append("\n"); 
		query.append("         Z4.PREF_RF${key}1," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("         '' AS T" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT Z3.BSA_AVG      ," ).append("\n"); 
		query.append("                   Z3.TRD_CD       ," ).append("\n"); 
		query.append("                   Z3.SUB_TRD_CD   ," ).append("\n"); 
		query.append("                   Z3.RLANE_CD     ," ).append("\n"); 
		query.append("                   Z3.DIR_CD       ," ).append("\n"); 
		query.append("                   Z3.AQ_CD        ," ).append("\n"); 
		query.append("                   Z3.OFC_CD       ," ).append("\n"); 
		query.append("                   Z3.PORT AS PORT1," ).append("\n"); 
		query.append("                   CASE " ).append("\n"); 
		query.append("                        WHEN RLANE_CD <> 'TOTAL' AND DIR_CD <> 'TOTAL' AND AQ_CD = '+' THEN CNT + CNT0" ).append("\n"); 
		query.append("                                                                                       ELSE CNT" ).append("\n"); 
		query.append("                   END AS CNT," ).append("\n"); 
		query.append("                   NUM_1," ).append("\n"); 
		query.append("#foreach( $key in $new_dur )" ).append("\n"); 
		query.append("                   Z3.VVD${key}," ).append("\n"); 
		query.append("                   Z3.BSA${key}," ).append("\n"); 
		query.append("                   Z3.QTA${key}1," ).append("\n"); 
		query.append("                   Z3.ALC${key}1," ).append("\n"); 
		query.append("                   Z3.ALC_RF${key}1," ).append("\n"); 
		query.append("                   Z3.BKG${key}1, " ).append("\n"); 
		query.append("                   Z3.BKG_20${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_40${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_D2${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_D4${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_HC${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_RD${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_45${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_53${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_RF${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_R2${key}1," ).append("\n"); 
		query.append("                   Z3.BKG_R5${key}1," ).append("\n"); 
		query.append("--                   Z3.CM_EN${key}1," ).append("\n"); 
		query.append("                   Z3.CM_OP${key}1," ).append("\n"); 
		query.append("                   Z3.CM_OC${key}1," ).append("\n"); 
		query.append("                   Z3.CM_VL${key}1," ).append("\n"); 
		query.append("                   ROUND(DECODE(Z3.ALC${key}1, 0, 0, Z3.BKG${key}1 * 100 / Z3.ALC${key}1), 1)||'%' AS PREF${key}1," ).append("\n"); 
		query.append("                   ROUND(DECODE(Z3.ALC_RF${key}1, 0, 0, Z3.BKG_RF${key}1 * 100 / Z3.ALC_RF${key}1), 1)||'%' AS PREF_RF${key}1," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                   '' AS T" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT NVL(( SELECT SUM(BSA) / COUNT(1) AS BSA" ).append("\n"); 
		query.append("                                     FROM MAS_MON_VVD_LV L" ).append("\n"); 
		query.append("                                    WHERE L.SUB_TRD_CD = Z2.SUB_TRD_CD" ).append("\n"); 
		query.append("                                      AND L.RLANE_CD   = Z2.RLANE_CD" ).append("\n"); 
		query.append("                                ), 0) AS BSA_AVG," ).append("\n"); 
		query.append("                             NVL(Z2.TRD_CD    , 'TOTAL') AS TRD_CD    ," ).append("\n"); 
		query.append("                             NVL(Z2.SUB_TRD_CD, 'TOTAL') AS SUB_TRD_CD," ).append("\n"); 
		query.append("                             NVL(Z2.RLANE_CD  , 'TOTAL') AS RLANE_CD  ," ).append("\n"); 
		query.append("                             NVL(Z2.DIR_CD    , 'TOTAL') AS DIR_CD    ," ).append("\n"); 
		query.append("                             NVL(Z2.AQ_CD     , '+')     AS AQ_CD     ," ).append("\n"); 
		query.append("                             NVL(Z2.OFC_CD    , '+')     AS OFC_CD    ," ).append("\n"); 
		query.append("                             NVL(Z2.PORT      , '+')     AS PORT      ," ).append("\n"); 
		query.append("#if(${checkVvd5} == 'Y')" ).append("\n"); 
		query.append("                             Z2.NUM_1 ," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                             '' NUM_1," ).append("\n"); 
		query.append("#end                             " ).append("\n"); 
		query.append("#foreach( $key in $new_dur )" ).append("\n"); 
		query.append("                             MAX(Z2.BSA${key})             AS BSA${key}," ).append("\n"); 
		query.append("                             MAX(DECODE((NVL(Z2.VVD${key}1, ' ')), (NVL(Z2.VVD${key}2, ' ')), Z2.VVD${key}1, Z2.VVD${key}2||'/'||Z2.VVD${key}1)) AS VVD${key}," ).append("\n"); 
		query.append("                             SUM(Z2.QTA${key}1)          AS QTA${key}1," ).append("\n"); 
		query.append("                             SUM(Z2.ALC${key}1)          AS ALC${key}1," ).append("\n"); 
		query.append("                             SUM(Z2.ALC_RF${key}1)       AS ALC_RF${key}1," ).append("\n"); 
		query.append("                             SUM(Z2.BKG${key}1)          AS BKG${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_20${key}1)          AS BKG_20${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_40${key}1)          AS BKG_40${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_D2${key}1)          AS BKG_D2${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_D4${key}1)          AS BKG_D4${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_HC${key}1)          AS BKG_HC${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_RD${key}1)          AS BKG_RD${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_45${key}1)          AS BKG_45${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_53${key}1)          AS BKG_53${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_RF${key}1)          AS BKG_RF${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_R2${key}1)          AS BKG_R2${key}1," ).append("\n"); 
		query.append("                             SUM(BKG_R5${key}1)          AS BKG_R5${key}1," ).append("\n"); 
		query.append("--                             SUM(CM_EN${key}1)           AS CM_EN${key}1," ).append("\n"); 
		query.append("                             SUM(CM_OP${key}1)           AS CM_OP${key}1," ).append("\n"); 
		query.append("                             SUM(CM_OC${key}1)           AS CM_OC${key}1," ).append("\n"); 
		query.append("                             SUM(CM_VL${key}1)           AS CM_VL${key}1," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             CASE" ).append("\n"); 
		query.append("                                  WHEN Z2.AQ_CD IS NULL OR (Z2.DIR_CD IS NOT NULL AND Z2.OFC_CD IS NOT NULL AND Z2.PORT IS NOT NULL) THEN COUNT(1) * CASE" ).append("\n"); 
		query.append("                                                                                                                                                          WHEN Z2.OFC_CD IS NOT NULL OR (Z2.RLANE_CD IS NULL AND Z2.DIR_CD IS NOT NULL) THEN -1" ).append("\n"); 
		query.append("                                                                                                                                                                                                                                        ELSE 1" ).append("\n"); 
		query.append("                                                                                                                                                      END" ).append("\n"); 
		query.append("                                                                                                                                     ELSE 0" ).append("\n"); 
		query.append("                              END AS CNT," ).append("\n"); 
		query.append("                             --PORT가 '0000000' 인 Count" ).append("\n"); 
		query.append("                             SUM(DECODE(Z2.PORT, '0000000', -1, 0)) AS CNT0" ).append("\n"); 
		query.append("                        FROM BASE_DATA1 Z2" ).append("\n"); 
		query.append("                    GROUP BY" ).append("\n"); 
		query.append("#if (${subtrade1} == '')" ).append("\n"); 
		query.append("                             Z2.TRD_CD," ).append("\n"); 
		query.append("                             CUBE(Z2.SUB_TRD_CD, Z2.RLANE_CD, Z2.DIR_CD, Z2.AQ_CD, Z2.OFC_CD, Z2.PORT " ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                             Z2.TRD_CD," ).append("\n"); 
		query.append("                             Z2.SUB_TRD_CD," ).append("\n"); 
		query.append("                             CUBE(Z2.RLANE_CD, Z2.DIR_CD, Z2.AQ_CD, Z2.OFC_CD, Z2.PORT " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${checkVvd5} == 'Y')" ).append("\n"); 
		query.append("                                  ,Z2.NUM_1" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                 )" ).append("\n"); 
		query.append("                     HAVING     (NOT (AQ_CD IS NULL AND OFC_CD IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT (RLANE_CD IS NOT NULL AND DIR_CD IS NULL))" ).append("\n"); 
		query.append("                            AND (NOT (SUB_TRD_CD IS NOT NULL AND RLANE_CD IS NULL AND DIR_CD IS NOT NULL AND AQ_CD IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT (SUB_TRD_CD IS NULL AND RLANE_CD IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT (SUB_TRD_CD IS NULL AND RLANE_CD IS NULL AND DIR_CD IS NOT NULL AND AQ_CD IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT NVL(PORT, 'X') = '0000000')" ).append("\n"); 
		query.append("                            AND (NOT (OFC_CD IS NULL AND PORT IS NOT NULL))" ).append("\n"); 
		query.append("#if(${checkVvd5} == 'Y')" ).append("\n"); 
		query.append("                            AND (NOT (TRD_CD IS NOT NULL AND SUB_TRD_CD IS NOT NULL AND RLANE_CD IS NOT NULL AND DIR_CD IS NOT NULL AND NUM_1 IS     NULL))" ).append("\n"); 
		query.append("                            AND (NOT (TRD_CD IS NOT NULL AND SUB_TRD_CD IS NOT NULL AND RLANE_CD IS     NULL AND DIR_CD IS NOT NULL AND NUM_1 IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT (TRD_CD IS NOT NULL AND SUB_TRD_CD IS NOT NULL AND RLANE_CD IS     NULL AND DIR_CD IS     NULL AND NUM_1 IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT (TRD_CD IS NOT NULL AND SUB_TRD_CD IS     NULL AND RLANE_CD IS     NULL AND DIR_CD IS NOT NULL AND NUM_1 IS NOT NULL))" ).append("\n"); 
		query.append("                            AND (NOT (TRD_CD IS NOT NULL AND SUB_TRD_CD IS     NULL AND RLANE_CD IS     NULL AND DIR_CD IS     NULL AND NUM_1 IS NOT NULL))" ).append("\n"); 
		query.append("#end " ).append("\n"); 
		query.append("                  ) Z3" ).append("\n"); 
		query.append("         ) Z4" ).append("\n"); 
		query.append("   WHERE Z4.AQ_CD <> 'BSA'" ).append("\n"); 
		query.append("ORDER BY DECODE(Z4.SUB_TRD_CD, 'TOTAL', '00', Z4.SUB_TRD_CD) DESC," ).append("\n"); 
		query.append("         Z4.BSA_AVG DESC," ).append("\n"); 
		query.append("         DECODE(Z4.RLANE_CD, 'TOTAL', 'ZZZZZ', Z4.RLANE_CD)," ).append("\n"); 
		query.append("         DECODE(Z4.DIR_CD  , 'TOTAL', DECODE(Z4.AQ_CD, '+', '0', '1'), Z4.DIR_CD)," ).append("\n"); 
		query.append("         NUM_1," ).append("\n"); 
		query.append("         DECODE(Z4.AQ_CD   , 'TOTAL', DECODE(Z4.RLANE_CD, 'TOTAL', 'ZZZZZ', '00000')," ).append("\n"); 
		query.append("         DECODE(Z4.AQ_CD   , NULL, '0', 'SELSC', '1', 'TYOSC', '2', 'SHADNC', '3', 'SZPDC','4','SHARC', '5', 'DXBME', '6', 'SINRS', '7','TAIWAN', '8','SHADKJ', '9', 'SINDSA', '10', 'SINDPI', '11', 'RUSIA', '12', Z4.AQ_CD))," ).append("\n"); 
		query.append("         DECODE(Z4.OFC_CD  , 'TOTAL', '00000', Z4.OFC_CD)," ).append("\n"); 
		query.append("         DECODE(Z4.PORT1   , 'TOTAL', '00000', Z4.PORT1)" ).append("\n"); 

	}
}