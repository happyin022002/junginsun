/*=========================================================
*Copyright(c) 2018 Hipluscard
*@FileName : ModelManageDBDAOModelListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2018.04.02
*@LastModifier : 송민석
*@LastVersion : 1.0
* 2018.04.02 송민석
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.modelmanage.modelmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author SONG Min Seok
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class ModelManageDBDAOModelListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
	  * --2014.08 이전 주석 쿼리안으로
	  * 2015.06.09 이혜민 쿼리튜닝 1) QTA Data에 힌트 추가 2) MAS_MON_VVD Index 타도록 수정
	  * 2015.06.24 이혜민 [CHM-201536449] SMP Load Guide Summary 오류 수정(RHQ Guide 물량을 delete된 노선을 0으로 만들어 결국 제외하고 가지고 오도록 수정)
	  * </pre>
	  */
	public ModelManageDBDAOModelListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("unit",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("season",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("view_type",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("version",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("incl_del",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.modelmanage.modelmanage.integration").append("\n"); 
		query.append("FileName : ModelManageDBDAOModelListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH SPC_MDL_CUST_CTRL_V AS(" ).append("\n"); 
		query.append("    SELECT DISTINCT " ).append("\n"); 
		query.append("           M.COST_YRWK    ," ).append("\n"); 
		query.append("           M.VER_SEQ      ," ).append("\n"); 
		query.append("           V.PERF_ST_YRWK ," ).append("\n"); 
		query.append("           V.PERF_END_YRWK," ).append("\n"); 
		query.append("           M.CUST_GRP_ID  ," ).append("\n"); 
		query.append("           M.CUST_CNT_CD  ," ).append("\n"); 
		query.append("           M.CUST_SEQ     ," ).append("\n"); 
		query.append("           M.SC_NO        ," ).append("\n"); 
		query.append("           M.RFA_NO       ," ).append("\n"); 
		query.append("           M.CUST_CTRL_CD ," ).append("\n"); 
		query.append("           M.WK_MQC_QTY   ," ).append("\n"); 
		query.append("           M.TRD_CD       ," ).append("\n"); 
		query.append("           V.CFM_FLG      ," ).append("\n"); 
		query.append("           (SELECT COUNT(1)" ).append("\n"); 
		query.append("              FROM MAS_WK_PRD CWP" ).append("\n"); 
		query.append("             WHERE CWP.COST_YR||CWP.COST_WK BETWEEN V.PERF_ST_YRWK AND V.PERF_END_YRWK) NUM" ).append("\n"); 
		query.append("      FROM SPC_MDL_CUST_CTRL M," ).append("\n"); 
		query.append("           SPC_MDL_VER_MST   V," ).append("\n"); 
		query.append("           MDM_CUSTOMER      C" ).append("\n"); 
		query.append("     WHERE M.TRD_CD = V.TRD_CD" ).append("\n"); 
		query.append("       AND M.COST_YRWK = V.COST_YRWK" ).append("\n"); 
		query.append("       AND M.VER_SEQ   = V.VER_SEQ" ).append("\n"); 
		query.append("       AND M.CUST_CNT_CD = C.CUST_CNT_CD" ).append("\n"); 
		query.append("       AND M.CUST_SEQ  = C.CUST_SEQ" ).append("\n"); 
		query.append("       AND M.DELT_FLG  = 'N'" ).append("\n"); 
		query.append("       AND C.DELT_FLG  = 'N'" ).append("\n"); 
		query.append("       AND M.TRD_CD    = @[trade]" ).append("\n"); 
		query.append("       AND M.COST_YRWK = @[season]" ).append("\n"); 
		query.append("       AND M.VER_SEQ   = @[version]" ).append("\n"); 
		query.append("#if (${acct_cd} != '') " ).append("\n"); 
		query.append("       AND M.CUST_CNT_CD||TRIM(TO_CHAR(M.CUST_SEQ, '000009')) IN ($acct_cd)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${acct_clss} == 'CC') " ).append("\n"); 
		query.append("       AND (NVL(C.NEW_KEY_ACCT_FLG,'N') = 'Y' OR NVL(C.GLO_ACCT_FLG,'N') = 'Y')" ).append("\n"); 
		query.append("#elseif (${acct_clss} == 'RC')" ).append("\n"); 
		query.append("       AND NVL(C.RGN_ACCT_FLG,'N') = 'Y'" ).append("\n"); 
		query.append("#elseif (${acct_clss} == 'LC')" ).append("\n"); 
		query.append("       AND 'Y' NOT IN (NVL(C.NEW_KEY_ACCT_FLG,'N'),  NVL(C.GLO_ACCT_FLG,'N'), NVL(C.RGN_ACCT_FLG, 'N'))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REV_SMPL_PFMC AS (" ).append("\n"); 
		query.append("    SELECT COST_YRWK   ," ).append("\n"); 
		query.append("           VER_SEQ       ," ).append("\n"); 
		query.append("           CUST_CNT_CD   ," ).append("\n"); 
		query.append("           CUST_SEQ      ," ).append("\n"); 
		query.append("           CTRT_OFC_CD   ," ).append("\n"); 
		query.append("           SC_NO         ," ).append("\n"); 
		query.append("           RFA_NO        ," ).append("\n"); 
		query.append("--           WK_MQC_QTY    ," ).append("\n"); 
		query.append("--           CUST_CTRL_CD  ," ).append("\n"); 
		query.append("           TRD_CD        ," ).append("\n"); 
		query.append("           SLS_RHQ_CD    ," ).append("\n"); 
		query.append("           SUB_TRD_CD    ," ).append("\n"); 
		query.append("           SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("           RLANE_CD      ," ).append("\n"); 
		query.append("           SUM(RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD)                                         AS SC_AVG_QTY      ," ).append("\n"); 
		query.append("           SUM(RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD, SLS_RHQ_CD, SUB_TRD_CD)                 AS STRD_AVG_TTL_QTY," ).append("\n"); 
		query.append("           SUM(RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD, SLS_RHQ_CD, SUB_TRD_CD, SLS_RGN_OFC_CD) AS STRD_AVG_QTY    ," ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("--           SUM(RLANE_CMPB * RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, SC_NO, WK_MQC_QTY, CUST_CTRL_CD, TRD_CD, SLS_RHQ_CD, SUB_TRD_CD, SLS_RGN_OFC_CD) AS STRD_CM         ," ).append("\n"); 
		query.append("           RLANE_QTY    ," ).append("\n"); 
		query.append("           RLANE_AVG_QTY--," ).append("\n"); 
		query.append("--           RLANE_CM     ," ).append("\n"); 
		query.append("--           RLANE_CMPB   ," ).append("\n"); 
		query.append("--           'N' AS CHK_FLG" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT V_COST_YRWK AS COST_YRWK," ).append("\n"); 
		query.append("                     VER_SEQ       ," ).append("\n"); 
		query.append("                     TRD_CD        ," ).append("\n"); 
		query.append("                     SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                     RLANE_CD      ," ).append("\n"); 
		query.append("                     SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                     CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                     CUST_CNT_CD   ," ).append("\n"); 
		query.append("                     CUST_SEQ      ," ).append("\n"); 
		query.append("                     SC_NO         ," ).append("\n"); 
		query.append("                     RFA_NO        ," ).append("\n"); 
		query.append("                     WK_MQC_QTY    ," ).append("\n"); 
		query.append("                     CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                     SUM(RLANE_CM)  AS RLANE_CM ," ).append("\n"); 
		query.append("                     SUM(RLANE_QTY) AS RLANE_QTY," ).append("\n"); 
		query.append("                     SUM(RLANE_CM) / SUM(RLANE_QTY) AS RLANE_CMPB   ," ).append("\n"); 
		query.append("                     ROUND((SUM(RLANE_QTY)/MAX(NUM)), 0)       AS RLANE_AVG_QTY -- AVG로 변경 20130629 신혜성차장요청" ).append("\n"); 
		query.append("                     --ROUND(AVG(RLANE_QTY), 0)       AS RLANE_AVG_QTY" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT V_COST_YRWK   ," ).append("\n"); 
		query.append("                               VER_SEQ       ," ).append("\n"); 
		query.append("                               TRD_CD        ," ).append("\n"); 
		query.append("                               SUB_TRD_CD    ," ).append("\n"); 
		query.append("                               SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                               RLANE_CD      ," ).append("\n"); 
		query.append("                               SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                               MAX(DECODE(COST_YRWK, MAX_COST_YRWK, CTRT_OFC_CD, '')) OVER (PARTITION BY TRD_CD, CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO) AS CTRT_OFC_CD," ).append("\n"); 
		query.append("                               CUST_CNT_CD   ," ).append("\n"); 
		query.append("                               CUST_SEQ      ," ).append("\n"); 
		query.append("                               SC_NO         ," ).append("\n"); 
		query.append("                               RFA_NO        ," ).append("\n"); 
		query.append("                               WK_MQC_QTY    ," ).append("\n"); 
		query.append("                               CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                               RLANE_CM      ," ).append("\n"); 
		query.append("                               RLANE_QTY     ," ).append("\n"); 
		query.append("                               NUM" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                  SELECT LV.COST_YRWK AS V_COST_YRWK," ).append("\n"); 
		query.append("                                         LV.VER_SEQ        ," ).append("\n"); 
		query.append("                                         MCP.COST_YRWK     ," ).append("\n"); 
		query.append("                                         MCP.TRD_CD        ," ).append("\n"); 
		query.append("                                         MCP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                         MCP.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                         MCP.RLANE_CD      ," ).append("\n"); 
		query.append("                                         MCP.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                         MCP.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_CNT_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_SEQ      ," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO)  AS SC_NO ," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO) AS RFA_NO," ).append("\n"); 
		query.append("                                         LV.CUST_CTRL_CD   ," ).append("\n"); 
		query.append("                                         LV.WK_MQC_QTY     ," ).append("\n"); 
		query.append("                                         SUM(MCP.RLANE_CMPB_AMT) AS RLANE_CM ," ).append("\n"); 
		query.append("                                         SUM(MCP.RLANE_BKG_QTY)  AS RLANE_QTY," ).append("\n"); 
		query.append("                                         MAX(MCP.COST_YRWK)      OVER (PARTITION BY MCP.TRD_CD,MCP.CUST_CNT_CD, MCP.CUST_SEQ, SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO), SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO)) AS MAX_COST_YRWK," ).append("\n"); 
		query.append("                                         MAX(LV.NUM) AS NUM " ).append("\n"); 
		query.append("                                    FROM SPC_MDL_CUST_PERF   MCP," ).append("\n"); 
		query.append("                                         SPC_MDL_CUST_CTRL_V LV " ).append("\n"); 
		query.append("                                   WHERE MCP.COST_YRWK   BETWEEN LV.PERF_ST_YRWK AND LV.PERF_END_YRWK" ).append("\n"); 
		query.append("                                     AND MCP.TRD_CD      = LV.TRD_CD" ).append("\n"); 
		query.append("                                     AND MCP.CUST_CNT_CD = LV.CUST_CNT_CD" ).append("\n"); 
		query.append("                                     AND MCP.CUST_SEQ    = LV.CUST_SEQ" ).append("\n"); 
		query.append("                                     AND NVL(SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO) , ' ') = NVL(LV.SC_NO , ' ')" ).append("\n"); 
		query.append("                                     AND NVL(SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO), ' ') = NVL(LV.RFA_NO, ' ')" ).append("\n"); 
		query.append("                                GROUP BY LV.COST_YRWK      ," ).append("\n"); 
		query.append("                                         LV.VER_SEQ        ," ).append("\n"); 
		query.append("                                         MCP.COST_YRWK     ," ).append("\n"); 
		query.append("                                         MCP.TRD_CD        ," ).append("\n"); 
		query.append("                                         MCP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                         MCP.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                         MCP.RLANE_CD      ," ).append("\n"); 
		query.append("                                         MCP.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                         MCP.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_CNT_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_SEQ      ," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO)," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO)," ).append("\n"); 
		query.append("                                         LV.CUST_CTRL_CD   ," ).append("\n"); 
		query.append("                                         LV.WK_MQC_QTY" ).append("\n"); 
		query.append("                               )" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           GROUP BY V_COST_YRWK   ," ).append("\n"); 
		query.append("                    VER_SEQ       ," ).append("\n"); 
		query.append("                    TRD_CD        ," ).append("\n"); 
		query.append("                    SUB_TRD_CD    ," ).append("\n"); 
		query.append("                    SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                    RLANE_CD      ," ).append("\n"); 
		query.append("                    SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                    CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                    CUST_CNT_CD   ," ).append("\n"); 
		query.append("                    CUST_SEQ      ," ).append("\n"); 
		query.append("                    SC_NO         ," ).append("\n"); 
		query.append("                    RFA_NO        ," ).append("\n"); 
		query.append("                    WK_MQC_QTY    ," ).append("\n"); 
		query.append("                    CUST_CTRL_CD " ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REV_PFMC AS (" ).append("\n"); 
		query.append("    SELECT COST_YRWK   ," ).append("\n"); 
		query.append("           VER_SEQ       ," ).append("\n"); 
		query.append("           CUST_CNT_CD   ," ).append("\n"); 
		query.append("           CUST_SEQ      ," ).append("\n"); 
		query.append("           CTRT_OFC_CD   ," ).append("\n"); 
		query.append("           SC_NO         ," ).append("\n"); 
		query.append("           RFA_NO        ," ).append("\n"); 
		query.append("           WK_MQC_QTY    ," ).append("\n"); 
		query.append("           CUST_CTRL_CD  ," ).append("\n"); 
		query.append("           TRD_CD        ," ).append("\n"); 
		query.append("           SLS_RHQ_CD    ," ).append("\n"); 
		query.append("           SUB_TRD_CD    ," ).append("\n"); 
		query.append("           SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("           RLANE_CD      ," ).append("\n"); 
		query.append("           SUM(RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD)                                                      AS SC_AVG_QTY      ," ).append("\n"); 
		query.append("           SUM(RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD, SLS_RHQ_CD, SUB_TRD_CD)                              AS STRD_AVG_TTL_QTY," ).append("\n"); 
		query.append("           SUM(RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD, SLS_RHQ_CD, SUB_TRD_CD, SLS_RGN_OFC_CD)              AS STRD_AVG_QTY    ," ).append("\n"); 
		query.append("           SUM(RLANE_CMPB * RLANE_AVG_QTY) OVER (PARTITION BY CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO, WK_MQC_QTY, CTRT_OFC_CD, CUST_CTRL_CD, TRD_CD, SLS_RHQ_CD, SUB_TRD_CD, SLS_RGN_OFC_CD) AS STRD_CM         ," ).append("\n"); 
		query.append("           RLANE_QTY    ," ).append("\n"); 
		query.append("           RLANE_AVG_QTY," ).append("\n"); 
		query.append("           RLANE_CM     ," ).append("\n"); 
		query.append("           RLANE_CMPB   ," ).append("\n"); 
		query.append("           'N' AS CHK_FLG" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT V_COST_YRWK AS COST_YRWK," ).append("\n"); 
		query.append("                     VER_SEQ       ," ).append("\n"); 
		query.append("                     TRD_CD        ," ).append("\n"); 
		query.append("                     SUB_TRD_CD    ," ).append("\n"); 
		query.append("                     SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                     RLANE_CD      ," ).append("\n"); 
		query.append("                     SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                     CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                     CUST_CNT_CD   ," ).append("\n"); 
		query.append("                     CUST_SEQ      ," ).append("\n"); 
		query.append("                     SC_NO         ," ).append("\n"); 
		query.append("                     RFA_NO        ," ).append("\n"); 
		query.append("                     WK_MQC_QTY    ," ).append("\n"); 
		query.append("                     CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                     SUM(RLANE_CM)  AS RLANE_CM ," ).append("\n"); 
		query.append("                     SUM(RLANE_QTY) AS RLANE_QTY," ).append("\n"); 
		query.append("                     SUM(RLANE_CM) / SUM(RLANE_QTY) AS RLANE_CMPB   ," ).append("\n"); 
		query.append("                     --ROUND((SUM(RLANE_QTY)/MAX(NUM)), 0)       AS RLANE_AVG_QTY -- AVG로 변경 20130629 신혜성차장요청" ).append("\n"); 
		query.append("                     ROUND(AVG(RLANE_QTY), 0)       AS RLANE_AVG_QTY" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT V_COST_YRWK   ," ).append("\n"); 
		query.append("                               VER_SEQ       ," ).append("\n"); 
		query.append("                               TRD_CD        ," ).append("\n"); 
		query.append("                               SUB_TRD_CD    ," ).append("\n"); 
		query.append("                               SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                               RLANE_CD      ," ).append("\n"); 
		query.append("                               SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                               MAX(DECODE(COST_YRWK, MAX_COST_YRWK, CTRT_OFC_CD, '')) OVER (PARTITION BY TRD_CD, CUST_CNT_CD, CUST_SEQ, RFA_NO, SC_NO) AS CTRT_OFC_CD," ).append("\n"); 
		query.append("                               CUST_CNT_CD   ," ).append("\n"); 
		query.append("                               CUST_SEQ      ," ).append("\n"); 
		query.append("                               SC_NO         ," ).append("\n"); 
		query.append("                               RFA_NO        ," ).append("\n"); 
		query.append("                               WK_MQC_QTY    ," ).append("\n"); 
		query.append("                               CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                               RLANE_CM      ," ).append("\n"); 
		query.append("                               RLANE_QTY     ," ).append("\n"); 
		query.append("                               NUM" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                  SELECT LV.COST_YRWK AS V_COST_YRWK," ).append("\n"); 
		query.append("                                         LV.VER_SEQ        ," ).append("\n"); 
		query.append("                                         MCP.COST_YRWK     ," ).append("\n"); 
		query.append("                                         MCP.TRD_CD        ," ).append("\n"); 
		query.append("                                         MCP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                         MCP.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                         MCP.RLANE_CD      ," ).append("\n"); 
		query.append("                                         MCP.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                         MCP.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_CNT_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_SEQ      ," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO)  AS SC_NO ," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO) AS RFA_NO," ).append("\n"); 
		query.append("                                         LV.CUST_CTRL_CD   ," ).append("\n"); 
		query.append("                                         LV.WK_MQC_QTY     ," ).append("\n"); 
		query.append("                                         SUM(MCP.RLANE_CMPB_AMT) AS RLANE_CM ," ).append("\n"); 
		query.append("                                         SUM(MCP.RLANE_BKG_QTY)  AS RLANE_QTY," ).append("\n"); 
		query.append("                                         MAX(MCP.COST_YRWK)      OVER (PARTITION BY MCP.TRD_CD,MCP.CUST_CNT_CD, MCP.CUST_SEQ, SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO), SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO)) AS MAX_COST_YRWK," ).append("\n"); 
		query.append("                                         MAX(LV.NUM) AS NUM " ).append("\n"); 
		query.append("                                    FROM SPC_MDL_CUST_PERF   MCP," ).append("\n"); 
		query.append("                                         SPC_MDL_CUST_CTRL_V LV " ).append("\n"); 
		query.append("                                   WHERE MCP.COST_YRWK   BETWEEN LV.PERF_ST_YRWK AND LV.PERF_END_YRWK" ).append("\n"); 
		query.append("                                     AND MCP.TRD_CD      = LV.TRD_CD" ).append("\n"); 
		query.append("                                     AND MCP.CUST_CNT_CD = LV.CUST_CNT_CD" ).append("\n"); 
		query.append("                                     AND MCP.CUST_SEQ    = LV.CUST_SEQ" ).append("\n"); 
		query.append("                                     AND NVL(SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO) , ' ') = NVL(LV.SC_NO , ' ')" ).append("\n"); 
		query.append("                                     AND NVL(SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO), ' ') = NVL(LV.RFA_NO, ' ')" ).append("\n"); 
		query.append("                                     --AND LV.CFM_FLG      = 'N'--2013.09.09" ).append("\n"); 
		query.append("                                GROUP BY LV.COST_YRWK      ," ).append("\n"); 
		query.append("                                         LV.VER_SEQ        ," ).append("\n"); 
		query.append("                                         MCP.COST_YRWK     ," ).append("\n"); 
		query.append("                                         MCP.TRD_CD        ," ).append("\n"); 
		query.append("                                         MCP.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                                         MCP.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                                         MCP.RLANE_CD      ," ).append("\n"); 
		query.append("                                         MCP.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                                         MCP.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_CNT_CD   ," ).append("\n"); 
		query.append("                                         MCP.CUST_SEQ      ," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.SC_NO)," ).append("\n"); 
		query.append("                                         SPC_GET_SMP_AMEND_FNC(MCP.TRD_CD, LV.COST_YRWK, LV.VER_SEQ, MCP.RFA_NO)," ).append("\n"); 
		query.append("                                         LV.CUST_CTRL_CD   ," ).append("\n"); 
		query.append("                                         LV.WK_MQC_QTY" ).append("\n"); 
		query.append("                               )" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           GROUP BY V_COST_YRWK   ," ).append("\n"); 
		query.append("                    VER_SEQ       ," ).append("\n"); 
		query.append("                    TRD_CD        ," ).append("\n"); 
		query.append("                    SUB_TRD_CD    ," ).append("\n"); 
		query.append("                    SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                    RLANE_CD      ," ).append("\n"); 
		query.append("                    SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                    CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                    CUST_CNT_CD   ," ).append("\n"); 
		query.append("                    CUST_SEQ      ," ).append("\n"); 
		query.append("                    SC_NO         ," ).append("\n"); 
		query.append("                    RFA_NO        ," ).append("\n"); 
		query.append("                    WK_MQC_QTY    ," ).append("\n"); 
		query.append("                    CUST_CTRL_CD " ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", REV_LANE AS (" ).append("\n"); 
		query.append("    SELECT RL.COST_YRWK     ," ).append("\n"); 
		query.append("           RL.VER_SEQ       ," ).append("\n"); 
		query.append("           RL.TRD_CD        ," ).append("\n"); 
		query.append("           RL.RLANE_CD      ," ).append("\n"); 
		query.append("           RL.SUB_TRD_CD    ," ).append("\n"); 
		query.append("           RL.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("           RL.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("           RL.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("           RL.CUST_CNT_CD   ," ).append("\n"); 
		query.append("           RL.CUST_SEQ      ," ).append("\n"); 
		query.append("           RL.SC_NO         ," ).append("\n"); 
		query.append("           RL.RFA_NO        ," ).append("\n"); 
		query.append("           LV.WK_MQC_QTY    ," ).append("\n"); 
		query.append("           LV.CUST_CTRL_CD  ," ).append("\n"); 
		query.append("           RL.CUST_BKG_QTY     AS STRD_TTL_QTY    ," ).append("\n"); 
		query.append("           RL.SUB_TRD_BKG_QTY  AS STRD_QTY        ," ).append("\n"); 
		query.append("           RL.RLANE_BKG_QTY    AS RLANE_QTY       ," ).append("\n"); 
		query.append("           RL.CUST_ADJ_QTY     AS STRD_ADJ_TTL_QTY," ).append("\n"); 
		query.append("           RL.SUB_TRD_ADJ_QTY  AS STRD_ADJ_QTY    ," ).append("\n"); 
		query.append("           RL.RLANE_ADJ_QTY    AS RLANE_ADJ_QTY   ," ).append("\n"); 
		query.append("           RL.SUB_TRD_CMPB_AMT AS STRD_CMPB       ," ).append("\n"); 
		query.append("           RL.RLANE_CMPB_AMT   AS RLANE_CMPB      ," ).append("\n"); 
		query.append("           'Y'                 AS CHK_FLG         ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           NVL((SELECT 'Y'" ).append("\n"); 
		query.append("                  FROM COM_USER         U," ).append("\n"); 
		query.append("                       MDM_ORGANIZATION M" ).append("\n"); 
		query.append("                 WHERE U.USR_ID   = RL.LANE_UPD_USR_ID" ).append("\n"); 
		query.append("                   AND U.OFC_CD   = M.OFC_CD" ).append("\n"); 
		query.append("                   AND M.OFC_KND_CD = 1" ).append("\n"); 
		query.append("                   AND U.OFC_CD <> 'SELCTY'--TEMP" ).append("\n"); 
		query.append("               ), 'N') AS LANE_HO," ).append("\n"); 
		query.append("           RL.SPC_CTRL_MDL_MNL_CD   AS O_ADD      ,--2013.02.22" ).append("\n"); 
		query.append("           RL.SPC_CTRL_MDL_MNL_RMK  AS R_RMK      ,--2013.02.22" ).append("\n"); 
		query.append("           RL.SPC_CTRL_MDL_RMK      AS SPC_CTRL_MDL_RMK," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           RL.DELT_FLG AS R_DELT_FLG              ,--2013.02.20" ).append("\n"); 
		query.append("           MAX(RL.DELT_FLG) OVER(PARTITION BY RL.COST_YRWK, RL.VER_SEQ, RL.CUST_CNT_CD, RL.CUST_SEQ, RL.CTRT_OFC_CD, RL.RFA_NO, RL.SC_NO, RL.SUB_TRD_CD, RL.SLS_RHQ_CD, RL.SLS_RGN_OFC_CD)  AS O_DELT_MAX_FLG,  --ofc level delt_flg" ).append("\n"); 
		query.append("           MIN(RL.DELT_FLG) OVER(PARTITION BY RL.COST_YRWK, RL.VER_SEQ, RL.CUST_CNT_CD, RL.CUST_SEQ, RL.CTRT_OFC_CD, RL.RFA_NO, RL.SC_NO, RL.SUB_TRD_CD, RL.SLS_RHQ_CD, RL.SLS_RGN_OFC_CD)  AS O_DELT_MIN_FLG,  --ofc level delt_flg" ).append("\n"); 
		query.append("           MAX(RL.DELT_FLG) OVER(PARTITION BY RL.COST_YRWK, RL.VER_SEQ, RL.CUST_CNT_CD, RL.CUST_SEQ, RL.CTRT_OFC_CD, RL.RFA_NO, RL.SC_NO, RL.SUB_TRD_CD, RL.SLS_RHQ_CD)  AS S_DELT_MAX_FLG,  --rhq level delt_flg" ).append("\n"); 
		query.append("           MIN(RL.DELT_FLG) OVER(PARTITION BY RL.COST_YRWK, RL.VER_SEQ, RL.CUST_CNT_CD, RL.CUST_SEQ, RL.CTRT_OFC_CD, RL.RFA_NO, RL.SC_NO, RL.SUB_TRD_CD, RL.SLS_RHQ_CD)  AS S_DELT_MIN_FLG   --rhq level delt_flg" ).append("\n"); 
		query.append("      FROM SPC_MDL_CUST_REV_LANE RL," ).append("\n"); 
		query.append("           SPC_MDL_CUST_CTRL_V   LV" ).append("\n"); 
		query.append("     WHERE RL.TRD_CD           = LV.TRD_CD" ).append("\n"); 
		query.append("       AND RL.COST_YRWK        = LV.COST_YRWK" ).append("\n"); 
		query.append("       AND RL.VER_SEQ          = LV.VER_SEQ" ).append("\n"); 
		query.append("       AND RL.CUST_CNT_CD      = LV.CUST_CNT_CD" ).append("\n"); 
		query.append("       AND RL.CUST_SEQ         = LV.CUST_SEQ" ).append("\n"); 
		query.append("       AND NVL(RL.SC_NO , ' ') = NVL(LV.SC_NO , NVL(RL.SC_NO, ' '))" ).append("\n"); 
		query.append("       AND NVL(RL.RFA_NO, ' ') = NVL(LV.RFA_NO, ' ')" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BASE_DATA AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT" ).append("\n"); 
		query.append("           COST_YRWK     ," ).append("\n"); 
		query.append("           VER_SEQ       ," ).append("\n"); 
		query.append("           CUST_CNT_CD   ," ).append("\n"); 
		query.append("           CUST_SEQ      ," ).append("\n"); 
		query.append("           CTRT_OFC_CD   ," ).append("\n"); 
		query.append("           SC_NO         ," ).append("\n"); 
		query.append("           RFA_NO        ," ).append("\n"); 
		query.append("           WK_MQC_QTY    ," ).append("\n"); 
		query.append("           MAX(CUST_CTRL_CD) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO) AS CUST_CTRL_CD," ).append("\n"); 
		query.append("           TRD_CD        ," ).append("\n"); 
		query.append("           SLS_RHQ_CD    ," ).append("\n"); 
		query.append("           SUB_TRD_CD    ," ).append("\n"); 
		query.append("           SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("		   --해당 level의 REV_LANE 데이터가 있으면 Y, REV_PFMC에만 데이터가 있으면 N" ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG1, 'Y', STRD_AVG_TTL_QTY, PF_STRD_AVG_TTL_QTY)) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD) AS CUST_QTY     ," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG1, 'Y', STRD_ADJ_TTL_QTY, PF_STRD_ADJ_TTL_QTY)) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD) AS CUST_ADJ_QTY ," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG2, 'Y', STRD_AVG_QTY    , PF_STRD_AVG_QTY))     OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD) AS STRD_AVG_QTY ," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG2, 'Y', STRD_ADJ_QTY    , PF_STRD_ADJ_QTY))     OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD) AS STRD_ADJ_QTY ," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG2, 'Y', STRD_CMPB       , PF_STRD_CMPB))        OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD) AS STRD_CMPB    ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           RLANE_CD      ," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG3, 'Y', DECODE(R_DELT_FLG,'Y',RLANE_AVG_QTY, PF_RLANE_AVG_QTY) , PF_RLANE_AVG_QTY))    OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS RLANE_AVG_QTY," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG3, 'Y', RLANE_ADJ_QTY   , PF_RLANE_ADJ_QTY))    OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS RLANE_ADJ_QTY," ).append("\n"); 
		query.append("           MAX(DECODE(CHK_FLG3, 'Y', DECODE(R_DELT_FLG,'Y',RLANE_CMPB, PF_RLANE_CMPB), PF_RLANE_CMPB))       OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS RLANE_CMPB   ," ).append("\n"); 
		query.append("           DECODE(SUM(RLANE_ADJ_QTY) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO),0,'N','Y') AS RLAN_FLAG,   -- 신규 추가 RHQ용" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           '' T," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           LANE_HO," ).append("\n"); 
		query.append("           DECODE(O_DELT_FLG, 'Y', 'Y', R_DELT_FLG) AS R_DELT_FLG, --2013.02.20" ).append("\n"); 
		query.append("           O_ADD, --2013.02.22" ).append("\n"); 
		query.append("           R_RMK, --2013.02.22" ).append("\n"); 
		query.append("           SPC_CTRL_MDL_RMK" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT COST_YRWK     ," ).append("\n"); 
		query.append("                   VER_SEQ       ," ).append("\n"); 
		query.append("                   CUST_CNT_CD   ," ).append("\n"); 
		query.append("                   CUST_SEQ      ," ).append("\n"); 
		query.append("                   CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                   SC_NO         ," ).append("\n"); 
		query.append("                   RFA_NO        ," ).append("\n"); 
		query.append("                   WK_MQC_QTY    ," ).append("\n"); 
		query.append("                   CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                   TRD_CD        ," ).append("\n"); 
		query.append("                   SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                   SUB_TRD_CD    ," ).append("\n"); 
		query.append("                   SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   -- sub trade 별" ).append("\n"); 
		query.append("                   STRD_AVG_TTL_QTY, " ).append("\n"); 
		query.append("                   PF_STRD_AVG_TTL_QTY," ).append("\n"); 
		query.append("                   STRD_ADJ_TTL_QTY, " ).append("\n"); 
		query.append("                   PF_STRD_ADJ_TTL_QTY," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   -- sub trade/office 별" ).append("\n"); 
		query.append("                   STRD_AVG_QTY    , " ).append("\n"); 
		query.append("                   PF_STRD_AVG_QTY," ).append("\n"); 
		query.append("                   STRD_ADJ_QTY    , " ).append("\n"); 
		query.append("                   PF_STRD_ADJ_QTY," ).append("\n"); 
		query.append("                   STRD_CMPB       , " ).append("\n"); 
		query.append("                   PF_STRD_CMPB," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   -- sub trade/office/lane 별" ).append("\n"); 
		query.append("                   RLANE_CD      ," ).append("\n"); 
		query.append("                   RLANE_AVG_QTY   , " ).append("\n"); 
		query.append("                   PF_RLANE_AVG_QTY," ).append("\n"); 
		query.append("                   RLANE_ADJ_QTY   , " ).append("\n"); 
		query.append("                   PF_RLANE_ADJ_QTY,           " ).append("\n"); 
		query.append("                   RLANE_CMPB      , " ).append("\n"); 
		query.append("                   PF_RLANE_CMPB," ).append("\n"); 
		query.append("                   MAX(CHK_FLG) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD) CHK_FLG1," ).append("\n"); 
		query.append("                   MAX(CHK_FLG) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD) CHK_FLG2," ).append("\n"); 
		query.append("                   MAX(CHK_FLG) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) CHK_FLG3," ).append("\n"); 
		query.append("                   CHK_FLG ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                   MAX(LANE_HO) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS LANE_HO  ,--2013.09.04" ).append("\n"); 
		query.append("                   MIN(O_DELT_FLG) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD) AS O_DELT_FLG," ).append("\n"); 
		query.append("                   MAX(R_DELT_FLG) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS R_DELT_FLG, --2013.02.20" ).append("\n"); 
		query.append("                   MAX(O_ADD)      OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD)           AS O_ADD, --2013.02.22" ).append("\n"); 
		query.append("                   MAX(R_RMK)      OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS R_RMK, --2013.02.22" ).append("\n"); 
		query.append("                   MAX(SPC_CTRL_MDL_RMK) OVER(PARTITION BY COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CTRT_OFC_CD, RFA_NO, SC_NO, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, RLANE_CD) AS SPC_CTRL_MDL_RMK  --2013.02.22" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                      SELECT CHK_FLG       ," ).append("\n"); 
		query.append("                             COST_YRWK     ," ).append("\n"); 
		query.append("                             VER_SEQ       ," ).append("\n"); 
		query.append("                             CUST_CNT_CD   ," ).append("\n"); 
		query.append("                             CUST_SEQ      ," ).append("\n"); 
		query.append("                             CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                             SC_NO         ," ).append("\n"); 
		query.append("                             RFA_NO        ," ).append("\n"); 
		query.append("                             WK_MQC_QTY    ," ).append("\n"); 
		query.append("                             CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                             TRD_CD        ," ).append("\n"); 
		query.append("                             SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             RLANE_CD      ," ).append("\n"); 
		query.append("                             SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             STRD_AVG_TTL_QTY                 AS PF_STRD_AVG_TTL_QTY," ).append("\n"); 
		query.append("                             0                                AS PF_STRD_ADJ_TTL_QTY," ).append("\n"); 
		query.append("                             STRD_AVG_QTY                     AS PF_STRD_AVG_QTY    ," ).append("\n"); 
		query.append("                             0                                AS PF_STRD_ADJ_QTY    ," ).append("\n"); 
		query.append("                             ROUND(DECODE(STRD_AVG_QTY, 0, 0,STRD_CM / STRD_AVG_QTY), 0) AS PF_STRD_CMPB       ," ).append("\n"); 
		query.append("                             RLANE_AVG_QTY                    AS PF_RLANE_AVG_QTY   ," ).append("\n"); 
		query.append("                             0                                AS PF_RLANE_ADJ_QTY   ," ).append("\n"); 
		query.append("                             ROUND(RLANE_CMPB, 0)             AS PF_RLANE_CMPB      ," ).append("\n"); 
		query.append("                             0                                AS STRD_AVG_TTL_QTY   ," ).append("\n"); 
		query.append("                             0                                AS STRD_ADJ_TTL_QTY   ," ).append("\n"); 
		query.append("                             0                                AS STRD_AVG_QTY       ," ).append("\n"); 
		query.append("                             0                                AS STRD_ADJ_QTY       ," ).append("\n"); 
		query.append("                             0                                AS STRD_CMPB          ," ).append("\n"); 
		query.append("                             0                                AS RLANE_AVG_QTY      ," ).append("\n"); 
		query.append("                             0                                AS RLANE_ADJ_QTY      ," ).append("\n"); 
		query.append("                             0                                AS RLANE_CMPB         ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                             'N'                              AS LANE_HO             ," ).append("\n"); 
		query.append("                             'N'                              AS R_DELT_FLG         ," ).append("\n"); 
		query.append("                             ''                               AS O_DELT_FLG ," ).append("\n"); 
		query.append("                             ''                               AS O_ADD,              --2013.02.22" ).append("\n"); 
		query.append("                             ''                               AS R_RMK,              --2013.02.22" ).append("\n"); 
		query.append("                             ''                               AS SPC_CTRL_MDL_RMK" ).append("\n"); 
		query.append("                        FROM REV_PFMC P" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                       WHERE (TRD_CD, COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, NVL(RFA_NO, ' '), NVL(SC_NO, ' '), SLS_RHQ_CD, SUB_TRD_CD, SLS_RGN_OFC_CD, RLANE_CD, CTRT_OFC_CD) " ).append("\n"); 
		query.append("                           NOT IN (SELECT TRD_CD, COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, NVL(RFA_NO, ' '), NVL(SC_NO, ' '), SLS_RHQ_CD, SUB_TRD_CD, SLS_RGN_OFC_CD, RLANE_CD, CTRT_OFC_CD" ).append("\n"); 
		query.append("                                     FROM REV_LANE L" ).append("\n"); 
		query.append("                                    WHERE 'Y' = DECODE(@[incl_del], 'Y', 'N', L.R_DELT_FLG)) " ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT A.CHK_FLG       ," ).append("\n"); 
		query.append("                             A.COST_YRWK     ," ).append("\n"); 
		query.append("                             A.VER_SEQ       ," ).append("\n"); 
		query.append("                             A.CUST_CNT_CD   ," ).append("\n"); 
		query.append("                             A.CUST_SEQ      ," ).append("\n"); 
		query.append("                             A.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                             A.SC_NO         ," ).append("\n"); 
		query.append("                             A.RFA_NO        ," ).append("\n"); 
		query.append("                             A.WK_MQC_QTY    ," ).append("\n"); 
		query.append("                             A.CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                             A.TRD_CD        ," ).append("\n"); 
		query.append("                             A.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                             A.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                             A.RLANE_CD      ," ).append("\n"); 
		query.append("                             A.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                             0                AS PF_STRD_AVG_TTL_QTY," ).append("\n"); 
		query.append("                             0                AS PF_STRD_ADJ_TTL_QTY," ).append("\n"); 
		query.append("                             0                AS PF_STRD_AVG_QTY    ," ).append("\n"); 
		query.append("                             0                AS PF_STRD_ADJ_QTY    ," ).append("\n"); 
		query.append("                             0                AS PF_STRD_CMPB       ," ).append("\n"); 
		query.append("                             0                AS PF_RLANE_AVG_QTY   ," ).append("\n"); 
		query.append("                             0                AS PF_RLANE_ADJ_QTY   ," ).append("\n"); 
		query.append("                             0                AS PF_RLANE_CMPB      , " ).append("\n"); 
		query.append("                             A.STRD_TTL_QTY   AS STRD_AVG_TTL_QTY   ," ).append("\n"); 
		query.append("                             DECODE(A.S_DELT_MIN_FLG, 'Y', 0, A.STRD_ADJ_TTL_QTY) AS STRD_ADJ_TTL_QTY," ).append("\n"); 
		query.append("                             A.STRD_QTY         AS STRD_AVG_QTY       ," ).append("\n"); 
		query.append("                             DECODE(A.O_DELT_MIN_FLG, 'Y', 0, A.STRD_ADJ_QTY)     AS STRD_ADJ_QTY," ).append("\n"); 
		query.append("                             NVL(ROUND(DECODE(B.STRD_AVG_QTY, 0, 0,B.STRD_CM / B.STRD_AVG_QTY), 0), A.STRD_CMPB) AS STRD_CMPB," ).append("\n"); 
		query.append("                             A.RLANE_QTY        AS RLANE_AVG_QTY      ," ).append("\n"); 
		query.append("                             A.RLANE_ADJ_QTY    AS RLANE_ADJ_QTY      ," ).append("\n"); 
		query.append("                             NVL(ROUND(B.RLANE_CMPB, 0), A.RLANE_CMPB) AS RLANE_CMPB," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                             LANE_HO        ," ).append("\n"); 
		query.append("                             R_DELT_FLG    , --2013.02.20" ).append("\n"); 
		query.append("                             R_DELT_FLG AS O_DELT_FLG ," ).append("\n"); 
		query.append("                             O_ADD         , --2013.02.22" ).append("\n"); 
		query.append("                             R_RMK         , --2013.02.22" ).append("\n"); 
		query.append("                             SPC_CTRL_MDL_RMK" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        FROM REV_LANE A" ).append("\n"); 
		query.append("                            ,REV_PFMC B" ).append("\n"); 
		query.append("                       WHERE A.COST_YRWK        = B.COST_YRWK      (+)" ).append("\n"); 
		query.append("                         AND A.VER_SEQ          = B.VER_SEQ        (+)" ).append("\n"); 
		query.append("                         AND A.TRD_CD           = B.TRD_CD         (+)" ).append("\n"); 
		query.append("                         AND A.RLANE_CD         = B.RLANE_CD       (+)" ).append("\n"); 
		query.append("                         AND A.SUB_TRD_CD       = B.SUB_TRD_CD     (+)" ).append("\n"); 
		query.append("                         AND A.SLS_RHQ_CD       = B.SLS_RHQ_CD     (+)" ).append("\n"); 
		query.append("                         AND A.SLS_RGN_OFC_CD   = B.SLS_RGN_OFC_CD (+)" ).append("\n"); 
		query.append("                         AND A.CTRT_OFC_CD      = B.CTRT_OFC_CD    (+)" ).append("\n"); 
		query.append("                         AND A.CUST_CNT_CD      = B.CUST_CNT_CD    (+)" ).append("\n"); 
		query.append("                         AND A.CUST_CTRL_CD     = B.CUST_CTRL_CD   (+)" ).append("\n"); 
		query.append("                         AND NVL(A.SC_NO , 'X') = NVL(B.SC_NO  (+), NVL(A.SC_NO, 'X'))" ).append("\n"); 
		query.append("                         AND NVL(A.RFA_NO, 'X') = NVL(B.RFA_NO (+), 'X')" ).append("\n"); 
		query.append("                   ) T" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           ) T" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", MAS_MON_VVD_LV AS(" ).append("\n"); 
		query.append("         SELECT M.TRD_CD" ).append("\n"); 
		query.append("              , M.SUB_TRD_CD" ).append("\n"); 
		query.append("              , M.RLANE_CD" ).append("\n"); 
		query.append("              , M.DIR_CD" ).append("\n"); 
		query.append("              , SUBSTR(M.SLS_YRMON, 1, 4)  AS COST_YR" ).append("\n"); 
		query.append("              , M.COST_WK" ).append("\n"); 
		query.append("              , SUBSTR(M.SLS_YRMON, 1, 4) || M.COST_WK       AS COST_YRWK" ).append("\n"); 
		query.append("              , TO_CHAR(M.N1ST_LODG_PORT_ETD_DT, 'YYYYMMDD') AS N1ST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("              , M.VSL_CD" ).append("\n"); 
		query.append("              , M.SKD_VOY_NO" ).append("\n"); 
		query.append("              , H.DIR_CD AS SKD_DIR_CD" ).append("\n"); 
		query.append("              , SUBSTR(M.COST_YRMON, 1, 4) AS BSE_YR" ).append("\n"); 
		query.append("              , CASE WHEN M.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("                     THEN CEIL(TO_NUMBER(SUBSTR(M.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("                     ELSE CEIL(TO_NUMBER(DECODE(M.COST_WK, '00', '01', '53', '52', M.COST_WK))/13)||'Q' " ).append("\n"); 
		query.append("                      END BSE_QTR_CD" ).append("\n"); 
		query.append("          FROM  MAS_MON_VVD M" ).append("\n"); 
		query.append("              , SPC_HD_HUL_MST H" ).append("\n"); 
		query.append("          WHERE SUBSTR(M.SLS_YRMON, 1, 4)||COST_WK LIKE TO_CHAR(SYSDATE, 'YYYY')||'%'" ).append("\n"); 
		query.append("            AND M.TRD_CD     = @[trade]" ).append("\n"); 
		query.append("            AND M.TRD_CD     = H.TRD_CD" ).append("\n"); 
		query.append("            AND M.SUB_TRD_CD = H.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND M.RLANE_CD   = H.RLANE_CD" ).append("\n"); 
		query.append("            AND M.DIR_CD     = H.DIR_CD" ).append("\n"); 
		query.append("            AND M.DELT_FLG   = 'N' " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", QTA AS (     " ).append("\n"); 
		query.append("            SELECT OFC_CD," ).append("\n"); 
		query.append("                   TRD_CD," ).append("\n"); 
		query.append("                   SUB_TRD_CD," ).append("\n"); 
		query.append("                   RLANE_CD," ).append("\n"); 
		query.append("                   ROUND(SUM(LOAD)) AS LOAD_QTA" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                   SELECT " ).append("\n"); 
		query.append("                          OFC_CD," ).append("\n"); 
		query.append("                          TRD_CD," ).append("\n"); 
		query.append("                          SUB_TRD_CD," ).append("\n"); 
		query.append("                          RLANE_CD," ).append("\n"); 
		query.append("                          COST_YRWK," ).append("\n"); 
		query.append("                          VSL_CD," ).append("\n"); 
		query.append("                          SKD_VOY_NO," ).append("\n"); 
		query.append("                          SKD_DIR_CD," ).append("\n"); 
		query.append("                          MAX_CNT," ).append("\n"); 
		query.append("                          SUM(LOD_QTY) OVER(PARTITION BY OFC_CD, TRD_CD, SUB_TRD_CD,RLANE_CD,COST_YRWK, VSL_CD,SKD_VOY_NO, SKD_DIR_CD)    AS LOAD," ).append("\n"); 
		query.append("                          RANK() OVER(PARTITION BY OFC_CD, TRD_CD, SUB_TRD_CD, RLANE_CD ORDER BY OFC_CD, TRD_CD, SUB_TRD_CD,RLANE_CD,MAX_CNT DESC, COST_YRWK ASC, N1ST_LODG_PORT_ETD_DT ASC) AS CNT" ).append("\n"); 
		query.append("                     FROM (     " ).append("\n"); 
		query.append("                           SELECT /*+ LEADING(B T1 C LV) */ " ).append("\n"); 
		query.append("                                  T2.SAQ_RGN_OFC_CD      AS OFC_CD," ).append("\n"); 
		query.append("                                  T1.TRD_CD," ).append("\n"); 
		query.append("                                  LV.SUB_TRD_CD," ).append("\n"); 
		query.append("                                  T1.RLANE_CD," ).append("\n"); 
		query.append("                                  LV.COST_YRWK," ).append("\n"); 
		query.append("                                  LV.N1ST_LODG_PORT_ETD_DT," ).append("\n"); 
		query.append("                                  T1.VSL_CD," ).append("\n"); 
		query.append("                                  T1.SKD_VOY_NO," ).append("\n"); 
		query.append("                                  T1.SKD_DIR_CD," ).append("\n"); 
		query.append("                                  T1.LOD_QTY," ).append("\n"); 
		query.append("                                  COUNT(1) OVER(PARTITION BY C.FNL_BSA_CAPA,C.DIR_CD) AS MAX_CNT  -- 동일 BSA가 가장 많은것 선택" ).append("\n"); 
		query.append("                             FROM SQM_CFM_QTA      T1 ," ).append("\n"); 
		query.append("                                  SQM_QTA_RLSE_VER MQR," ).append("\n"); 
		query.append("                                  MAS_MON_VVD_LV   LV," ).append("\n"); 
		query.append("                                  SQM_CFM_TGT_VVD  C," ).append("\n"); 
		query.append("                                  SPC_OFC_LVL      T2" ).append("\n"); 
		query.append("                            WHERE 1 = 1" ).append("\n"); 
		query.append("                              AND MQR.BSE_YR           = LV.BSE_YR" ).append("\n"); 
		query.append("                              AND MQR.BSE_QTR_CD       = LV.BSE_QTR_CD" ).append("\n"); 
		query.append("                              AND MQR.SQM_VER_STS_CD   = 'R' " ).append("\n"); 
		query.append("                              AND MQR.BSE_TP_CD        = 'Q'" ).append("\n"); 
		query.append("                              AND T1.QTA_RLSE_VER_NO   = MQR.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                              AND T1.BSE_TP_CD         = MQR.BSE_TP_CD" ).append("\n"); 
		query.append("                              AND T1.BSE_YR            = MQR.BSE_YR" ).append("\n"); 
		query.append("                              AND T1.BSE_QTR_CD        = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                              AND T1.QTA_TGT_CD        = 'D'" ).append("\n"); 
		query.append("                              AND T1.OFC_VW_CD         = 'L' " ).append("\n"); 
		query.append("                              AND SPC_SCR_OFC_CONV_FNC(T1.RGN_OFC_CD,'') = T2.OFC_CD" ).append("\n"); 
		query.append("                              AND LV.COST_YRWK BETWEEN T2.OFC_APLY_FM_YRWK AND T2.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                              AND T2.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("                              AND T1.TRD_CD           = LV.TRD_CD" ).append("\n"); 
		query.append("                              AND T1.RLANE_CD         = LV.RLANE_CD" ).append("\n"); 
		query.append("                              AND T1.DIR_CD           = LV.SKD_DIR_CD" ).append("\n"); 
		query.append("                              AND T1.VSL_CD           = LV.VSL_CD" ).append("\n"); 
		query.append("                              AND T1.SKD_VOY_NO       = LV.SKD_VOY_NO" ).append("\n"); 
		query.append("                              AND T1.SKD_DIR_CD       = LV.SKD_DIR_CD                               " ).append("\n"); 
		query.append("                              AND T1.QTA_RLSE_VER_NO  = C.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                              AND T1.BSE_TP_CD        = C.BSE_TP_CD -- 분기 20131205추가" ).append("\n"); 
		query.append("                              AND T1.BSE_YR           = C.BSE_YR" ).append("\n"); 
		query.append("                              AND T1.BSE_QTR_CD       = C.BSE_QTR_CD" ).append("\n"); 
		query.append("                              AND T1.QTA_TGT_CD       = C.QTA_TGT_CD" ).append("\n"); 
		query.append("                              AND T1.TRD_CD           = C.TRD_CD" ).append("\n"); 
		query.append("                              AND T1.RLANE_CD         = C.RLANE_CD" ).append("\n"); 
		query.append("                              AND T1.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                              AND T1.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                              AND T1.SKD_VOY_NO       = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                              AND T1.SKD_DIR_CD       = C.SKD_DIR_CD " ).append("\n"); 
		query.append("                              AND EXISTS (" ).append("\n"); 
		query.append("                                          SELECT 1                                    " ).append("\n"); 
		query.append("                                            FROM SPC_MDL_CUST_REV_LANE   MCP" ).append("\n"); 
		query.append("                                           WHERE MCP.COST_YRWK      = @[season]" ).append("\n"); 
		query.append("                                             AND MCP.VER_SEQ        = @[version]" ).append("\n"); 
		query.append("                                             AND MCP.TRD_CD         = LV.TRD_CD" ).append("\n"); 
		query.append("                                             AND MCP.SUB_TRD_CD     = LV.SUB_TRD_CD" ).append("\n"); 
		query.append("                                             AND MCP.RLANE_CD       = LV.RLANE_CD" ).append("\n"); 
		query.append("                                             AND MCP.SLS_RGN_OFC_CD = T2.SAQ_RGN_OFC_CD               " ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                              AND T1.LOD_QTY>0  " ).append("\n"); 
		query.append("                             )                        " ).append("\n"); 
		query.append("                   )" ).append("\n"); 
		query.append("             WHERE CNT = 1" ).append("\n"); 
		query.append("             GROUP BY OFC_CD," ).append("\n"); 
		query.append("                   TRD_CD," ).append("\n"); 
		query.append("                   SUB_TRD_CD," ).append("\n"); 
		query.append("                   RLANE_CD" ).append("\n"); 
		query.append("             HAVING ROUND(SUM(LOAD)) <> 0   " ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", RSLT AS (" ).append("\n"); 
		query.append("    SELECT COST_YRWK      ," ).append("\n"); 
		query.append("           VER_SEQ        ," ).append("\n"); 
		query.append("           CUST_CNT_CD    ," ).append("\n"); 
		query.append("           CUST_SEQ       ," ).append("\n"); 
		query.append("           CUST_LGL_ENG_NM," ).append("\n"); 
		query.append("           CUST_GRP_NM," ).append("\n"); 
		query.append("           ACCT_CLSS_CD," ).append("\n"); 
		query.append("           CTRT_OFC_CD    ," ).append("\n"); 
		query.append("           SC_NO     ," ).append("\n"); 
		query.append("           RFA_NO    ," ).append("\n"); 
		query.append("           WK_MQC_QTY  ," ).append("\n"); 
		query.append("           CUST_CTRL_CD," ).append("\n"); 
		query.append("           TRD_CD      ," ).append("\n"); 
		query.append("           SUB_TRD_CD," ).append("\n"); 
		query.append("           SLS_RHQ_CD," ).append("\n"); 
		query.append("           CUST_QTY    ," ).append("\n"); 
		query.append("           CUST_TTL_QTY    ," ).append("\n"); 
		query.append("           CUST_ADJ_QTY    ," ).append("\n"); 
		query.append("           CUST_ADJ_TTL_QTY    ," ).append("\n"); 
		query.append("           SLS_RGN_OFC_CD  ," ).append("\n"); 
		query.append("           STRD_QTY        ," ).append("\n"); 
		query.append("           STRD_TTL_QTY    ," ).append("\n"); 
		query.append("           STRD_PFMC_RATIO ," ).append("\n"); 
		query.append("           STRD_ADJ_QTY    ," ).append("\n"); 
		query.append("           STRD_ADJ_TTL_QTY    ," ).append("\n"); 
		query.append("           STRD_CMPB," ).append("\n"); 
		query.append("           RLANE_CD," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           LOAD_QTA,  -- 2013.03.14" ).append("\n"); 
		query.append("           LOAD_TTL_QTA," ).append("\n"); 
		query.append("           RLANE_QTY       ," ).append("\n"); 
		query.append("           RLANE_TTL_QTY," ).append("\n"); 
		query.append("           RLANE_PFMC_RATIO," ).append("\n"); 
		query.append("           RLANE_ADJ_QTY   ," ).append("\n"); 
		query.append("           RLANE_ADJ_TTL_QTY," ).append("\n"); 
		query.append("           RLANE_CMPB," ).append("\n"); 
		query.append("           DECODE(SLS_RGN_OFC_CD,'TTL','',O_ADD) AS O_ADD, -- 2013.02.22" ).append("\n"); 
		query.append("           DECODE(SLS_RGN_OFC_CD,'TTL','',R_RMK) AS R_RMK, -- 2013.02.22" ).append("\n"); 
		query.append("           DECODE(SLS_RGN_OFC_CD,'TTL','',SPC_CTRL_MDL_RMK) AS SPC_CTRL_MDL_RMK, -- 2013.02.22" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           (SELECT COUNT(*)" ).append("\n"); 
		query.append("              FROM SPC_MDL_CUST_REV_LANE T2" ).append("\n"); 
		query.append("             WHERE T2.TRD_CD           = T1.TRD_CD" ).append("\n"); 
		query.append("               AND T2.COST_YRWK        = T1.COST_YRWK" ).append("\n"); 
		query.append("               AND T2.VER_SEQ          = T1.VER_SEQ" ).append("\n"); 
		query.append("               AND T2.CUST_CNT_CD      = T1.CUST_CNT_CD" ).append("\n"); 
		query.append("               AND T2.CUST_SEQ         = T1.CUST_SEQ" ).append("\n"); 
		query.append("               AND NVL(T2.SC_NO , ' ') = NVL(T1.SC_NO , NVL(T2.SC_NO, ' '))" ).append("\n"); 
		query.append("               AND NVL(T2.RFA_NO, ' ') = NVL(T1.RFA_NO, ' ')" ).append("\n"); 
		query.append("               AND T2.CTRT_OFC_CD      = T1.CTRT_OFC_CD" ).append("\n"); 
		query.append("           ) AS REV_LANE_CUST_CNT," ).append("\n"); 
		query.append("           LANE_HO," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("           T," ).append("\n"); 
		query.append("           DELT_FLG" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("              SELECT COST_YRWK      ," ).append("\n"); 
		query.append("                     VER_SEQ        ," ).append("\n"); 
		query.append("                     CUST_CNT_CD    ," ).append("\n"); 
		query.append("                     CUST_SEQ       ," ).append("\n"); 
		query.append("                     CUST_LGL_ENG_NM," ).append("\n"); 
		query.append("                     NVL(CUST_GRP_NM, CUST_LGL_ENG_NM) AS CUST_GRP_NM," ).append("\n"); 
		query.append("                     ACCT_CLSS      AS ACCT_CLSS_CD," ).append("\n"); 
		query.append("                     CTRT_OFC_CD    ," ).append("\n"); 
		query.append("                     SC_NO          ," ).append("\n"); 
		query.append("                     RFA_NO         ," ).append("\n"); 
		query.append("                     MAX(WK_MQC_QTY) / DECODE(@[unit], 'T', 1, 2)  AS WK_MQC_QTY  ," ).append("\n"); 
		query.append("                     MAX(CUST_CTRL_CD) AS CUST_CTRL_CD," ).append("\n"); 
		query.append("                     MAX(TRD_CD)       AS TRD_CD      ," ).append("\n"); 
		query.append("                     SUB_TRD_CD," ).append("\n"); 
		query.append("                     SLS_RHQ_CD," ).append("\n"); 
		query.append("                     CUST_QTY     / DECODE(@[unit], 'T', 1, 2)                           AS CUST_QTY    ," ).append("\n"); 
		query.append("                     ROUND(SUM(CUST_QTY / CUST_CNT), 0)     / DECODE(@[unit], 'T', 1, 2) AS CUST_TTL_QTY    ," ).append("\n"); 
		query.append("                     CUST_ADJ_QTY / DECODE(@[unit], 'T', 1, 2)                           AS CUST_ADJ_QTY    ," ).append("\n"); 
		query.append("                     ROUND(SUM(CUST_ADJ_QTY / CUST_CNT), 0)     / DECODE(@[unit], 'T', 1, 2) AS CUST_ADJ_TTL_QTY    ," ).append("\n"); 
		query.append("                     NVL(SLS_RGN_OFC_CD, 'TTL')                                      AS SLS_RGN_OFC_CD  ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                     STRD_AVG_QTY / DECODE(@[unit], 'T', 1, 2)                           AS STRD_QTY        ," ).append("\n"); 
		query.append("                     ROUND(SUM(STRD_AVG_QTY / STRD_CNT), 0) / DECODE(@[unit], 'T', 1, 2) AS STRD_TTL_QTY    ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                     MAX(STRD_PFMC_RATIO)                                            AS STRD_PFMC_RATIO ," ).append("\n"); 
		query.append("                     MAX(STRD_ADJ_QTY) / DECODE(@[unit], 'T', 1, 2)                      AS STRD_ADJ_QTY    ," ).append("\n"); 
		query.append("                     ROUND(SUM(STRD_ADJ_QTY / STRD_CNT), 0)     / DECODE(@[unit], 'T', 1, 2) AS STRD_ADJ_TTL_QTY    ," ).append("\n"); 
		query.append("                     STRD_CMPB * DECODE(@[unit], 'T', 1, 2) AS STRD_CMPB," ).append("\n"); 
		query.append("                     RLANE_CD," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                     MAX(LOAD_QTA) AS LOAD_QTA, -- 2013.03.14" ).append("\n"); 
		query.append("                     ROUND(SUM(LOAD_QTA / RLANE_CNT), 0) / DECODE(@[unit], 'T', 1, 2)  AS LOAD_TTL_QTA," ).append("\n"); 
		query.append("                     MAX(RLANE_AVG_QTY) / DECODE(@[unit], 'T', 1, 2)                     AS RLANE_QTY       ," ).append("\n"); 
		query.append("                     ROUND(SUM(RLANE_AVG_QTY / RLANE_CNT), 0) / DECODE(@[unit], 'T', 1, 2) AS RLANE_TTL_QTY," ).append("\n"); 
		query.append("                     RLANE_PFMC_RATIO," ).append("\n"); 
		query.append("                     MAX(RLANE_ADJ_QTY) / DECODE(@[unit], 'T', 1, 2)                     AS RLANE_ADJ_QTY   ," ).append("\n"); 
		query.append("                     ROUND(SUM(RLANE_ADJ_QTY / RLANE_CNT), 0)     / DECODE(@[unit], 'T', 1, 2)  AS RLANE_ADJ_TTL_QTY," ).append("\n"); 
		query.append("                     RLANE_CMPB * DECODE(@[unit], 'T', 1, 2) AS RLANE_CMPB," ).append("\n"); 
		query.append("                     O_ADD, -- 2013.02.22" ).append("\n"); 
		query.append("                     R_RMK, -- 2013.02.22" ).append("\n"); 
		query.append("                     SPC_CTRL_MDL_RMK," ).append("\n"); 
		query.append("                     MAX(LANE_HO) AS LANE_HO," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                     DELT_FLG," ).append("\n"); 
		query.append("                     @[view_type] T" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                        SELECT DTL.COST_YRWK  ," ).append("\n"); 
		query.append("                               DTL.VER_SEQ    ," ).append("\n"); 
		query.append("                               DTL.CUST_CNT_CD," ).append("\n"); 
		query.append("                               DTL.CUST_SEQ   ," ).append("\n"); 
		query.append("                               (SELECT A.CUST_LGL_ENG_NM" ).append("\n"); 
		query.append("                                  FROM MDM_CUSTOMER A" ).append("\n"); 
		query.append("                                 WHERE A.CUST_CNT_CD = DTL.CUST_CNT_CD" ).append("\n"); 
		query.append("                                   AND A.CUST_SEQ    = DTL.CUST_SEQ" ).append("\n"); 
		query.append("                               ) AS CUST_LGL_ENG_NM," ).append("\n"); 
		query.append("                               (SELECT B.CUST_GRP_NM" ).append("\n"); 
		query.append("                                  FROM MDM_CUSTOMER      A," ).append("\n"); 
		query.append("                                       MDM_CUST_PERF_GRP B" ).append("\n"); 
		query.append("                                 WHERE A.CUST_CNT_CD = DTL.CUST_CNT_CD" ).append("\n"); 
		query.append("                                   AND A.CUST_SEQ    = DTL.CUST_SEQ" ).append("\n"); 
		query.append("                                   AND A.CUST_GRP_ID = B.CUST_GRP_ID " ).append("\n"); 
		query.append("                               ) AS CUST_GRP_NM," ).append("\n"); 
		query.append("/* ACCT_CLSS를 더이상 사용하지 않는다." ).append("\n"); 
		query.append("                               (SELECT CASE WHEN NVL(NEW_KEY_ACCT_FLG,'N') = 'Y' THEN 'CC'" ).append("\n"); 
		query.append("                                            WHEN NVL(GLO_ACCT_FLG,'N') = 'Y' THEN 'CC'" ).append("\n"); 
		query.append("                                            WHEN NVL(RGN_ACCT_FLG,'N') = 'Y' THEN 'RC'" ).append("\n"); 
		query.append("                                            ELSE 'LC'" ).append("\n"); 
		query.append("                                       END" ).append("\n"); 
		query.append("                                  FROM MDM_CUSTOMER A" ).append("\n"); 
		query.append("                                 WHERE A.CUST_CNT_CD = DTL.CUST_CNT_CD" ).append("\n"); 
		query.append("                                   AND A.CUST_SEQ    = DTL.CUST_SEQ" ).append("\n"); 
		query.append("                               ) AS ACCT_CLSS," ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("							    'XX' AS ACCT_CLSS," ).append("\n"); 
		query.append("                               DTL.CTRT_OFC_CD   ," ).append("\n"); 
		query.append("                               DTL.SC_NO         ," ).append("\n"); 
		query.append("                               DTL.RFA_NO        ," ).append("\n"); 
		query.append("                               DTL.WK_MQC_QTY    ," ).append("\n"); 
		query.append("                               DTL.CUST_QTY      ," ).append("\n"); 
		query.append("                               COUNT(1) OVER (PARTITION BY DTL.COST_YRWK, DTL.VER_SEQ, DTL.CUST_CNT_CD, DTL.CUST_SEQ, DTL.CTRT_OFC_CD, DTL.RFA_NO, DTL.SC_NO, DTL.WK_MQC_QTY, DTL.CUST_QTY, DTL.CUST_ADJ_QTY, DTL.CUST_CTRL_CD, DTL.TRD_CD, DTL.SUB_TRD_CD, DTL.SLS_RHQ_CD) AS CUST_CNT," ).append("\n"); 
		query.append("                               DTL.CUST_ADJ_QTY  ," ).append("\n"); 
		query.append("                               DTL.CUST_CTRL_CD  ," ).append("\n"); 
		query.append("                               DTL.TRD_CD        ," ).append("\n"); 
		query.append("                               DTL.SLS_RHQ_CD    ," ).append("\n"); 
		query.append("                               DTL.SUB_TRD_CD    ," ).append("\n"); 
		query.append("                               DTL.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("                               DTL.STRD_AVG_QTY  ," ).append("\n"); 
		query.append("                               ROUND((RATIO_TO_REPORT(DTL.STRD_AVG_QTY) OVER (PARTITION BY DTL.CUST_CNT_CD,DTL.CUST_SEQ, DTL.CTRT_OFC_CD, DTL.RFA_NO, DTL.SC_NO, DTL.SUB_TRD_CD, DTL.SLS_RHQ_CD)) * 100, 2) AS STRD_PFMC_RATIO," ).append("\n"); 
		query.append("                               COUNT(1) OVER (PARTITION BY DTL.COST_YRWK, DTL.VER_SEQ, DTL.CUST_CNT_CD, DTL.CUST_SEQ, DTL.CTRT_OFC_CD, DTL.RFA_NO, DTL.SC_NO, DTL.WK_MQC_QTY, DTL.CUST_QTY, DTL.CUST_ADJ_QTY, DTL.CUST_CTRL_CD, DTL.TRD_CD, DTL.SUB_TRD_CD, DTL.SLS_RHQ_CD, DTL.SLS_RGN_OFC_CD) AS STRD_CNT," ).append("\n"); 
		query.append("                               COUNT(1) OVER (PARTITION BY DTL.COST_YRWK, DTL.VER_SEQ, DTL.CUST_CNT_CD, DTL.CUST_SEQ, DTL.CTRT_OFC_CD, DTL.RFA_NO, DTL.SC_NO, DTL.WK_MQC_QTY, DTL.CUST_QTY, DTL.CUST_ADJ_QTY, DTL.CUST_CTRL_CD, DTL.TRD_CD, DTL.SUB_TRD_CD, DTL.SLS_RHQ_CD, DTL.SLS_RGN_OFC_CD, DTL.RLANE_CD) AS RLANE_CNT," ).append("\n"); 
		query.append("                               DTL.STRD_ADJ_QTY  ," ).append("\n"); 
		query.append("                               DTL.STRD_CMPB     ," ).append("\n"); 
		query.append("                               DTL.RLANE_CD      ," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                               NVL(Q.LOAD_QTA,0) AS LOAD_QTA," ).append("\n"); 
		query.append("                               DTL.RLANE_AVG_QTY ," ).append("\n"); 
		query.append("                               ROUND((RATIO_TO_REPORT(DTL.RLANE_AVG_QTY) OVER (PARTITION BY DTL.CUST_CNT_CD,DTL.CUST_SEQ, DTL.CTRT_OFC_CD, DTL.RFA_NO, DTL.SC_NO, DTL.SUB_TRD_CD, DTL.SLS_RHQ_CD, DTL.SLS_RGN_OFC_CD)) * 100, 2) AS RLANE_PFMC_RATIO," ).append("\n"); 
		query.append("                               DTL.RLANE_ADJ_QTY ," ).append("\n"); 
		query.append("                               DTL.RLANE_CMPB    ," ).append("\n"); 
		query.append("                               DTL.RLAN_FLAG,   -- 신규 추가 RHQ용" ).append("\n"); 
		query.append("                               LANE_HO        ,                " ).append("\n"); 
		query.append("                                '' T," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                               DTL.R_DELT_FLG AS DELT_FLG,--2013.02.20" ).append("\n"); 
		query.append("                               DTL.O_ADD,  --2013.02.22" ).append("\n"); 
		query.append("                               DTL.R_RMK,  --2013.02.22" ).append("\n"); 
		query.append("                               DTL.SPC_CTRL_MDL_RMK" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                          FROM BASE_DATA DTL," ).append("\n"); 
		query.append("                               QTA Q" ).append("\n"); 
		query.append("                         WHERE DTL.SLS_RGN_OFC_CD = Q.OFC_CD(+)" ).append("\n"); 
		query.append("                           AND DTL.TRD_CD         = Q.TRD_CD(+)" ).append("\n"); 
		query.append("                           AND DTL.SUB_TRD_CD     = Q.SUB_TRD_CD(+)" ).append("\n"); 
		query.append("                           AND DTL.RLANE_CD       = Q.RLANE_CD(+)" ).append("\n"); 
		query.append("    #if (${incl_del} != 'Y')" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                           AND DTL.R_DELT_FLG = 'N'--2013.02.20" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("            GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                                      (COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CUST_LGL_ENG_NM, CUST_GRP_NM, ACCT_CLSS, CTRT_OFC_CD, SC_NO, RFA_NO)," ).append("\n"); 
		query.append("                                      (COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CUST_LGL_ENG_NM, CUST_GRP_NM, ACCT_CLSS, CTRT_OFC_CD, SC_NO, RFA_NO, SUB_TRD_CD, SLS_RHQ_CD)," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                      (COST_YRWK, VER_SEQ, CUST_CNT_CD, CUST_SEQ, CUST_LGL_ENG_NM, CUST_GRP_NM, ACCT_CLSS, CTRT_OFC_CD, SC_NO, RFA_NO, WK_MQC_QTY, CUST_QTY, CUST_ADJ_QTY, CUST_CTRL_CD, TRD_CD, SUB_TRD_CD, SLS_RHQ_CD, SLS_RGN_OFC_CD, STRD_AVG_QTY, STRD_CMPB, RLANE_CD, RLANE_CMPB, RLANE_PFMC_RATIO, DELT_FLG, O_ADD, R_RMK, SPC_CTRL_MDL_RMK)" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("                                   )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      ) T1" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT COST_YRWK      ," ).append("\n"); 
		query.append("       VER_SEQ        ," ).append("\n"); 
		query.append("       CUST_CNT_CD    ," ).append("\n"); 
		query.append("       CUST_SEQ       ," ).append("\n"); 
		query.append("       CUST_LGL_ENG_NM," ).append("\n"); 
		query.append("       CUST_GRP_NM," ).append("\n"); 
		query.append("       ACCT_CLSS_CD," ).append("\n"); 
		query.append("       CTRT_OFC_CD    ," ).append("\n"); 
		query.append("       SC_NO     ," ).append("\n"); 
		query.append("       NVL(RFA_NO, SC_NO) AS RFA_NO," ).append("\n"); 
		query.append("       WK_MQC_QTY  ," ).append("\n"); 
		query.append("       CUST_CTRL_CD," ).append("\n"); 
		query.append("       TRD_CD      ," ).append("\n"); 
		query.append("       SUB_TRD_CD," ).append("\n"); 
		query.append("       SLS_RHQ_CD," ).append("\n"); 
		query.append("       CUST_QTY    ," ).append("\n"); 
		query.append("       CUST_TTL_QTY    ," ).append("\n"); 
		query.append("       (SELECT SUM(T2.RLANE_AVG_QTY)--DECODE(T1.SUB_TRD_CD, NULL, T2.SC_AVG_QTY, STRD_AVG_TTL_QTY) " ).append("\n"); 
		query.append("          FROM REV_SMPL_PFMC T2" ).append("\n"); 
		query.append("         WHERE T1.COST_YRWK        = T2.COST_YRWK" ).append("\n"); 
		query.append("           AND T1.VER_SEQ          = T2.VER_SEQ" ).append("\n"); 
		query.append("           AND T1.CUST_CNT_CD      = T2.CUST_CNT_CD" ).append("\n"); 
		query.append("           AND T1.CUST_SEQ         = T2.CUST_SEQ" ).append("\n"); 
		query.append("           AND NVL(T1.SC_NO , ' ') = NVL(T2.SC_NO , NVL(T1.SC_NO, ' '))" ).append("\n"); 
		query.append("           AND NVL(T1.RFA_NO, ' ') = NVL(T2.RFA_NO, ' ')" ).append("\n"); 
		query.append("           AND T1.TRD_CD           = T2.TRD_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SUB_TRD_CD, NULL, T2.SLS_RHQ_CD, T1.SLS_RHQ_CD) = T2.SLS_RHQ_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SUB_TRD_CD, NULL, T2.SUB_TRD_CD, T1.SUB_TRD_CD) = T2.SUB_TRD_CD" ).append("\n"); 
		query.append("           AND T1.CTRT_OFC_CD      = T2.CTRT_OFC_CD" ).append("\n"); 
		query.append("           AND SLS_RGN_OFC_CD IN (SELECT SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                                    FROM RSLT R" ).append("\n"); 
		query.append("                                   WHERE R.COST_YRWK        = T2.COST_YRWK" ).append("\n"); 
		query.append("                                     AND R.VER_SEQ          = T2.VER_SEQ" ).append("\n"); 
		query.append("                                     AND R.CUST_CNT_CD      = T2.CUST_CNT_CD" ).append("\n"); 
		query.append("                                     AND R.CUST_SEQ         = T2.CUST_SEQ" ).append("\n"); 
		query.append("                                     AND NVL(R.SC_NO , ' ') = NVL(T2.SC_NO , NVL(R.SC_NO, ' '))" ).append("\n"); 
		query.append("                                     AND NVL(R.RFA_NO, ' ') = NVL(T2.RFA_NO, ' ')" ).append("\n"); 
		query.append("                                     AND R.TRD_CD           = T2.TRD_CD" ).append("\n"); 
		query.append("                                     AND R.SUB_TRD_CD       = T2.SUB_TRD_CD" ).append("\n"); 
		query.append("                                     AND R.SLS_RHQ_CD       = T2.SLS_RHQ_CD" ).append("\n"); 
		query.append("                                     AND R.CTRT_OFC_CD      = T2.CTRT_OFC_CD)" ).append("\n"); 
		query.append("       ) AS SMPL_CUST_QTY," ).append("\n"); 
		query.append("       CUST_ADJ_QTY    ," ).append("\n"); 
		query.append("       CUST_ADJ_TTL_QTY    ," ).append("\n"); 
		query.append("       SLS_RGN_OFC_CD  ," ).append("\n"); 
		query.append("       STRD_QTY        ," ).append("\n"); 
		query.append("       STRD_TTL_QTY    ," ).append("\n"); 
		query.append("       (SELECT SUM(T2.RLANE_AVG_QTY)" ).append("\n"); 
		query.append("          FROM REV_SMPL_PFMC T2" ).append("\n"); 
		query.append("         WHERE T1.COST_YRWK        = T2.COST_YRWK" ).append("\n"); 
		query.append("           AND T1.VER_SEQ          = T2.VER_SEQ" ).append("\n"); 
		query.append("           AND T1.CUST_CNT_CD      = T2.CUST_CNT_CD" ).append("\n"); 
		query.append("           AND T1.CUST_SEQ         = T2.CUST_SEQ" ).append("\n"); 
		query.append("           AND NVL(T1.SC_NO , ' ') = NVL(T2.SC_NO , NVL(T1.SC_NO, ' '))" ).append("\n"); 
		query.append("           AND NVL(T1.RFA_NO, ' ') = NVL(T2.RFA_NO, ' ')" ).append("\n"); 
		query.append("           AND T1.TRD_CD           = T2.TRD_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SUB_TRD_CD, NULL, T2.SLS_RHQ_CD, T1.SLS_RHQ_CD) = T2.SLS_RHQ_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SUB_TRD_CD, NULL, T2.SUB_TRD_CD, T1.SUB_TRD_CD) = T2.SUB_TRD_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SLS_RGN_OFC_CD,'TTL',T2.SLS_RGN_OFC_CD,T1.SLS_RGN_OFC_CD) = T2.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           AND T1.CTRT_OFC_CD      = T2.CTRT_OFC_CD" ).append("\n"); 
		query.append("           AND SLS_RGN_OFC_CD IN (SELECT SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                                    FROM RSLT R" ).append("\n"); 
		query.append("                                   WHERE R.COST_YRWK        = T2.COST_YRWK" ).append("\n"); 
		query.append("                                     AND R.VER_SEQ          = T2.VER_SEQ" ).append("\n"); 
		query.append("                                     AND R.CUST_CNT_CD      = T2.CUST_CNT_CD" ).append("\n"); 
		query.append("                                     AND R.CUST_SEQ         = T2.CUST_SEQ" ).append("\n"); 
		query.append("                                     AND NVL(R.SC_NO , ' ') = NVL(T2.SC_NO , NVL(R.SC_NO, ' '))" ).append("\n"); 
		query.append("                                     AND NVL(R.RFA_NO, ' ') = NVL(T2.RFA_NO, ' ')" ).append("\n"); 
		query.append("                                     AND R.TRD_CD           = T2.TRD_CD" ).append("\n"); 
		query.append("                                     AND R.SUB_TRD_CD       = T2.SUB_TRD_CD" ).append("\n"); 
		query.append("                                     AND R.SLS_RHQ_CD       = T2.SLS_RHQ_CD" ).append("\n"); 
		query.append("                                     AND R.CTRT_OFC_CD      = T2.CTRT_OFC_CD)" ).append("\n"); 
		query.append("       ) AS SMPL_STRD_QTY," ).append("\n"); 
		query.append("       STRD_PFMC_RATIO ," ).append("\n"); 
		query.append("       STRD_ADJ_QTY    ," ).append("\n"); 
		query.append("       STRD_ADJ_TTL_QTY    ," ).append("\n"); 
		query.append("       STRD_CMPB," ).append("\n"); 
		query.append("       RLANE_CD," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("       LOAD_QTA," ).append("\n"); 
		query.append("       LOAD_TTL_QTA," ).append("\n"); 
		query.append("       RLANE_QTY       ," ).append("\n"); 
		query.append("       RLANE_TTL_QTY," ).append("\n"); 
		query.append("       (SELECT SUM(T2.RLANE_AVG_QTY)" ).append("\n"); 
		query.append("          FROM REV_SMPL_PFMC T2" ).append("\n"); 
		query.append("         WHERE T1.COST_YRWK        = T2.COST_YRWK" ).append("\n"); 
		query.append("           AND T1.VER_SEQ          = T2.VER_SEQ" ).append("\n"); 
		query.append("           AND T1.CUST_CNT_CD      = T2.CUST_CNT_CD" ).append("\n"); 
		query.append("           AND T1.CUST_SEQ         = T2.CUST_SEQ" ).append("\n"); 
		query.append("           AND NVL(T1.SC_NO , ' ') = NVL(T2.SC_NO , NVL(T1.SC_NO, ' '))" ).append("\n"); 
		query.append("           AND NVL(T1.RFA_NO, ' ') = NVL(T2.RFA_NO, ' ')" ).append("\n"); 
		query.append("           AND T1.TRD_CD           = T2.TRD_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SUB_TRD_CD, NULL, T2.SLS_RHQ_CD, T1.SLS_RHQ_CD) = T2.SLS_RHQ_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SUB_TRD_CD, NULL, T2.SUB_TRD_CD, T1.SUB_TRD_CD) = T2.SUB_TRD_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.SLS_RGN_OFC_CD, 'TTL', T2.SLS_RGN_OFC_CD,T1.SLS_RGN_OFC_CD) = T2.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           AND DECODE(T1.RLANE_CD, NULL, T2.RLANE_CD, T1.RLANE_CD) = T2.RLANE_CD" ).append("\n"); 
		query.append("           AND T1.CTRT_OFC_CD      = T2.CTRT_OFC_CD" ).append("\n"); 
		query.append("           AND (SLS_RGN_OFC_CD, RLANE_CD) IN (SELECT SLS_RGN_OFC_CD, RLANE_CD" ).append("\n"); 
		query.append("                                                FROM RSLT R" ).append("\n"); 
		query.append("                                               WHERE R.COST_YRWK        = T2.COST_YRWK" ).append("\n"); 
		query.append("                                                 AND R.VER_SEQ          = T2.VER_SEQ" ).append("\n"); 
		query.append("                                                 AND R.CUST_CNT_CD      = T2.CUST_CNT_CD" ).append("\n"); 
		query.append("                                                 AND R.CUST_SEQ         = T2.CUST_SEQ" ).append("\n"); 
		query.append("                                                 AND NVL(R.SC_NO , ' ') = NVL(T2.SC_NO , NVL(R.SC_NO, ' '))" ).append("\n"); 
		query.append("                                                 AND NVL(R.RFA_NO, ' ') = NVL(T2.RFA_NO, ' ')" ).append("\n"); 
		query.append("                                                 AND R.TRD_CD           = T2.TRD_CD" ).append("\n"); 
		query.append("                                                 AND R.SUB_TRD_CD       = T2.SUB_TRD_CD" ).append("\n"); 
		query.append("                                     			 AND R.SLS_RHQ_CD       = T2.SLS_RHQ_CD" ).append("\n"); 
		query.append("                                     			 AND R.CTRT_OFC_CD      = T2.CTRT_OFC_CD)" ).append("\n"); 
		query.append("       ) AS SMPL_RLANE_QTY," ).append("\n"); 
		query.append("       RLANE_PFMC_RATIO," ).append("\n"); 
		query.append("       RLANE_ADJ_QTY   ," ).append("\n"); 
		query.append("       RLANE_ADJ_TTL_QTY," ).append("\n"); 
		query.append("       RLANE_CMPB," ).append("\n"); 
		query.append("       O_ADD," ).append("\n"); 
		query.append("       R_RMK," ).append("\n"); 
		query.append("       SPC_CTRL_MDL_RMK," ).append("\n"); 
		query.append("       REV_LANE_CUST_CNT," ).append("\n"); 
		query.append("       LANE_HO," ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("       T," ).append("\n"); 
		query.append("       DELT_FLG," ).append("\n"); 
		query.append("       NVL2(SC_NO, 'SC', 'RFA') AS SC_RFA_FLG" ).append("\n"); 
		query.append("  FROM RSLT T1" ).append("\n"); 
		query.append(" ORDER BY COST_YRWK     ," ).append("\n"); 
		query.append("          VER_SEQ       ," ).append("\n"); 
		query.append("          DECODE(ACCT_CLSS_CD, 'CC', 1, 'RC', 2, 'LC', 3)," ).append("\n"); 
		query.append("          CUST_GRP_NM   ," ).append("\n"); 
		query.append("          CUST_LGL_ENG_NM," ).append("\n"); 
		query.append("          CTRT_OFC_CD   ," ).append("\n"); 
		query.append("          SC_NO         ," ).append("\n"); 
		query.append("          RFA_NO        ," ).append("\n"); 
		query.append("          SUB_TRD_CD    ," ).append("\n"); 
		query.append("          SLS_RHQ_CD    ," ).append("\n"); 
		query.append("          DECODE(SLS_RGN_OFC_CD, 'TTL', 'ZZZZZ', SLS_RGN_OFC_CD)" ).append("\n"); 
		query.append("          , RLANE_CD" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("2013.06.25 진마리아 [선처리] CRM Customer Flag 정보 개편에 따른 작업" ).append("\n"); 
		query.append("2013.06.29 김시몬 [CHM-201325016] PFMC AVG 기준 변경 수정" ).append("\n"); 
		query.append("2013.07.04 김시몬 [CHM-201325089] 하나의 LANE을 물고 있는 OFC에 대해 LANE삭제시" ).append("\n"); 
		query.append("                                                      SUB TRD/RHQ GUIDE 초기화가 안되어 잘못된 물량을 보여주는것 보완" ).append("\n"); 
		query.append("2013.07.05 김시몬 [CHM-201325631] 하나의 OFC/LANE에 대한 LANE삭제시 조회관련 오류로 긴급 형상 반영 요청" ).append("\n"); 
		query.append("2013.09.04 [Trouble Shooting] HO_FLG 로 인해 DISTINCT가 되지 않으면서 RATIO가 잘못 산출됨" ).append("\n"); 
		query.append("2013.09.09 [Trouble Shooting] PFMC AVG 컬럼 추가(1/N 한 값)" ).append("\n"); 
		query.append("2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경" ).append("\n"); 
		query.append("2014.02.04 [CHM-201428383-01] RFA 로직 추가" ).append("\n"); 
		query.append("2014.03.17 [CHM-20142960] SMP/Allocation control보완 요청 - SPC_GET_SMP_AMEND_FNC 적용" ).append("\n"); 
		query.append("2014.05.16 [CHM-201430353] SMP / AES 보완요청 - SC 입력 기능 추가" ).append("\n"); 
		query.append("2014.06.12 ofc CRUD 체크용 flag 추가" ).append("\n"); 
		query.append("2014.08.27 CMPB 계산시 FEU는 * 2를 해서 보여주도록 변경" ).append("\n"); 
		query.append("2018.04.02 CSR3462에 의해 수정됨(H/O,HRQ,L.OFC통합)" ).append("\n"); 
		query.append("*/" ).append("\n"); 

	}
}