<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceControlInquiryDBDAOSearchSpaceControlRDRSummaryDownRSQL">
			<desc><![CDATA[2010.08.25 최윤성 [CHM-201005492-01] RDR 실적 Summary 기능 개발 - 2010년 시스템 개발 계획
2010.12.20 이준범 [CHM-201005916-01] 정렬기준 변경
1) 검색조건 추가 : Lane 항목
2011.07.05 최윤성 [CHM-201111937-01] Space Utilization 화면 보완
 - Total Weight 항목 추가
2011.10.05 김종준 [CHM-201113755-01] 
	-IOC가 ‘O’인 경우에만 조회가 가능토록 되어있으나, WAFIE와 마찬가지로 NBSIM 노선의 경우,
	  Intra 노선이지만, Ocean 처럼 인식되어 데이터가 조회될 수 있도록 보완 요청]]></desc>
			<sql><![CDATA[
SELECT  OPERATOR,WEEK,TRADE,SUB_TRADE,LANE,VVD,BOUND
        ,DECODE(BSA,0,DECODE(B_BSA,0,C_BSA,B_BSA),-- RDR Alloc에 없으면 BSA MGMT 값 적용
                     DECODE(B_LAST_FLG,1,BSA,-1,B_BSA,0,C_BSA)) BSA -- RDR Alloc이 있으면 Update Date일자 비교하여 최근것을 적용
        ,FULL,MTY,TTL_LOAD,TTL_WGT,FULL_LF,TTL_LF 
  FROM (     
        SELECT OPERATOR,WEEK,TRADE,SUB_TRADE,LANE,VVD,BOUND,
               A.BSA,
               NVL(B.BSA_CAPA,0) B_BSA,
               NVL(C.BSA_CAPA,0) C_BSA,
               NVL(B.UPD_DT,TO_DATE('19900101','YYYYMMDD')) B_UPD_DT,
               NVL(C.UPD_DT,TO_DATE('19900101','YYYYMMDD')) C_UPD_DT,
               SIGN(NVL(A.UPD_DT,TO_DATE('19900101','YYYYMMDD')) - NVL(B.UPD_DT,TO_DATE('19900101','YYYYMMDD'))) B_LAST_FLG,
               SIGN(NVL(A.UPD_DT,TO_DATE('19900101','YYYYMMDD')) - NVL(C.UPD_DT,TO_DATE('19900101','YYYYMMDD'))) C_LAST_FLG,                             
               FULL,MTY,TTL_LOAD,TTL_WGT,FULL_LF,TTL_LF 
        FROM (
                SELECT Operator,  
                       Week, 
                       Trade,
                       Sub_Trade,
                       Lane,
                       VVD,
                       VSL_CD,SKD_VOY_NO,DIR_CD,
                       Bound,
                       BSA,
                       FULL,
                       EMPTY AS MTY,
                       (FULL + EMPTY) AS TTL_LOAD,
                       WGT AS TTL_WGT,
                       ROUND(DECODE(BSA, 0, 0, DECODE(FULL, 0, 0, FULL * 100 / BSA)), 1) || '%' AS FULL_LF,
                       ROUND(DECODE(BSA, 0, 0, DECODE((FULL + EMPTY), 0, 0, (FULL + EMPTY) * 100 / BSA)), 1) || '%' AS TTL_LF,
                       UPD_DT
                  FROM (
                        SELECT B.OPR_CD     AS Operator,  
                               M.COST_WK    AS Week, 
                               M.TRD_CD     AS Trade,
                               M.SUB_TRD_CD AS Sub_Trade,
                               M.RLANE_CD   AS Lane,
                               M.VSL_CD||M.SKD_VOY_NO||M.DIR_CD AS VVD,
                               M.VSL_CD,M.SKD_VOY_NO,M.DIR_CD,
                               M.DIR_CD AS Bound,
                               SUM(B.BSA) AS BSA,
                               SUM(B.FULL) AS FULL,
                               SUM(B.EMPTY) AS EMPTY,
                               SUM(B.WGT) AS WGT,
                               MAX(B.UPD_DT) AS UPD_DT
                          FROM MAS_MON_VVD M,
                               (
                                  SELECT A.VSL_CD,
                                         A.VOY_NO,
                                         A.DIR_CD,
                                         A.OPR_CD,
                                         A.REGION,
                                         NVL(B.BSA_SLOT, 0) AS BSA,
                                         SUM(DECODE(A.TYPE, 'F', A.SLOT_QTY, 0) + DECODE(A.TYPE, 'A', A.SLOT_QTY, 0)) AS FULL,
                                         SUM(DECODE(A.TYPE, 'E', A.SLOT_QTY, 0)) AS EMPTY,
                                         SUM(DECODE(A.TYPE, 'F', A.WEIGHT, 'A', A.WEIGHT, 'E', A.WEIGHT, 0)) AS WGT,
                                         MAX(B.UPDATE_TIME) UPD_DT
                                    FROM RDR_UTILIZE    A,
                                         RDR_ALLOCATION B
                                   WHERE A.VSL_CD = B.VSL_CD (+)
                                     AND A.VOY_NO = B.VOY_NO (+)
                                     AND A.DIR_CD = B.DIR_CD (+)
                                     AND A.OPR_CD = B.OPR_CD (+)
                                     AND A.REGION = B.REGION (+)
                #if (${rhq} == 'A')
                                      AND A.REGION IN ('A', 'D', 'E')
               #else
                   #if (${rhq} == 'M')
                                 AND A.REGION IN ('M', 'S')
                   #else
                                 AND A.REGION = @[rhq]
                   #end
                #end
        
                                GROUP BY A.REGION,
                                         A.VSL_CD,
                                         A.VOY_NO,
                                         A.DIR_CD,
                                         A.OPR_CD,
                                         NVL(B.BSA_SLOT, 0)
                               ) B,
                               (
                                  SELECT /*+ INDEX (P, XPKMAS_WK_PRD)*/
                                         P.COST_YR||P.COST_WK AS COST_YRWK,
                                         ROWNUM               AS RNUM
                                    FROM MAS_WK_PRD P
                               WHERE P.COST_YR||P.COST_WK >= @[year]||@[week]
                                 AND ROWNUM               <= @[duration]
                               ) P
                         WHERE SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK = P.COST_YRWK
                           AND (M.DELT_FLG IS NULL OR M.DELT_FLG = 'N')
                           
                    #if (${trade} != '')
                           AND M.TRD_CD     = @[trade]
                    #end
                    
                    #if (${bound} != '')
                           AND M.DIR_CD     = @[bound]
                    #end
                    
                    #if (${operator} != '')
                           AND B.OPR_CD     = @[operator]
                    #end
                    
                    #if (${rlane_cd} != '')
                           AND M.RLANE_CD   = @[rlane_cd]
                    #end
             		#if (${subtrade} != '')
                            AND M.SUB_TRD_CD     = @[subtrade]
                    #end
                           AND DECODE(M.RLANE_CD, 'WAFIE', 'O', 'NBSIM', 'O', M.IOC_CD)     = 'O'
                           AND M.VSL_CD     = B.VSL_CD
                           AND M.SKD_VOY_NO = B.VOY_NO
                           AND M.DIR_CD     = B.DIR_CD
        #if (${rhq} == 'A')
               AND B.REGION IN ('A', 'D',DECODE(M.RLANE_CD||M.DIR_CD,'AE1AEW','E','D'))
        #end
        #if (${rhq} =='E')
			   AND B.REGION = DECODE(M.RLANE_CD,'AE1AE',DECODE(M.DIR_CD,'E','E','XXX'),'E')
        #end                       
                   GROUP BY B.OPR_CD,
                            M.COST_WK,
                            M.TRD_CD,
                            M.SUB_TRD_CD,
                            M.RLANE_CD,
                            M.VSL_CD||M.SKD_VOY_NO||M.DIR_CD,
                            M.VSL_CD,M.SKD_VOY_NO,M.DIR_CD
                    )
                                     
                ) A,
                (
                select TRD_CD,SUB_TRD_CD,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,CRR_CD,
                       BSA_CAPA,UPD_DT
                  from SPC_BSA_MGMT
                 WHERE 1=1
                    #if (${trade} != '')
                           AND TRD_CD     = @[trade]
                    #end      
       				#if (${subtrade} != '')
                         AND SUB_TRD_CD     = @[subtrade]
                    #end
                    #if (${bound} != '')
                           AND SKD_DIR_CD     = @[bound]
                    #end       
                    #if (${operator} != '')
                           AND CRR_CD     = @[operator]
                    #end     
                ) B,
                (
                select DISTINCT TRD_CD,SUB_TRD_CD,VSL_CD,SKD_DIR_CD,CRR_CD,
                       FIRST_VALUE(BSA_CAPA) OVER(PARTITION BY TRD_CD,SUB_TRD_CD,VSL_CD,CRR_CD,SKD_DIR_CD ORDER BY BSA_SEQ DESC) BSA_CAPA,
                       FIRST_VALUE(UPD_DT) OVER(PARTITION BY TRD_CD,SUB_TRD_CD,VSL_CD,CRR_CD,SKD_DIR_CD ORDER BY BSA_SEQ DESC) UPD_DT
                  from SPC_BSA_MGMT
                  WHERE 1=1
                    #if (${trade} != '')
                           AND TRD_CD     = @[trade]
                    #end      
                    #if (${bound} != '')
                           AND SKD_DIR_CD     = @[bound]
                    #end       
     				#if (${subtrade} != '')
                         AND SUB_TRD_CD     = @[subtrade]
                    #end
                    #if (${operator} != '')
                           AND CRR_CD     = @[operator]
                    #end           
                ) C       
             WHERE A.TRADE        = B.TRD_CD(+)
               AND A.SUB_TRADE    = B.SUB_TRD_CD(+)
               AND A.VSL_CD       = B.VSL_CD(+)
               AND A.SKD_VOY_NO   = B.SKD_VOY_NO(+)
               AND A.DIR_CD       = B.SKD_DIR_CD(+)
               AND A.OPERATOR     = B.CRR_CD(+)
               AND A.TRADE        = C.TRD_CD(+)
               AND A.SUB_TRADE    = C.SUB_TRD_CD(+)
               AND A.VSL_CD       = C.VSL_CD(+)
               AND A.DIR_CD       = C.SKD_DIR_CD(+)   
               AND A.OPERATOR     = C.CRR_CD(+)
        )       
  ORDER BY WEEK   ,
           TRADE    ,
           SUB_TRADE,
           LANE ,
           VVD,
           BOUND,
           OPERATOR			]]></sql>
			<params>
				<param name="rhq" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="operator" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
