/*=========================================================
*Copyright(c) 2010 CyberLogitec
*@FileName : CMSummaryDBDAORsltPrsProposalSummaryChartTargetListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2010.05.03
*@LastModifier : 김효정
*@LastVersion : 1.0
* 2010.05.03 김효정
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmsummary.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CMSummaryDBDAORsltPrsProposalSummaryChartTargetListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * chart화면 grid에서 사용될 대상 목록을 조회한다.
	  * </pre>
	  */
	public CMSummaryDBDAORsltPrsProposalSummaryChartTargetListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ctrt_exp_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("grp_code",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_prop_srep_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ori_rout_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_prop_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ctrt_eff_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_pfmc_unit",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_svc_scp_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ori_loc_tp",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_dest_rout_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_prop_apro_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_dest_loc_tp",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmsummary.integration").append("\n"); 
		query.append("FileName : CMSummaryDBDAORsltPrsProposalSummaryChartTargetListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH " ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'R') " ).append("\n"); 
		query.append("VW_MAIN_NEW_SET AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */ MN.PROP_OFC_CD" ).append("\n"); 
		query.append("		, M_ORG.OFC_ENG_NM  AS PROP_OFC_NM--  AS PROP_OFC_NM -- REQUEST OFFICE" ).append("\n"); 
		query.append("		, NVL(MN.REAL_CUST_CNT_CD,PTY.CUST_CNT_CD ) AS CUST_CNT_CD" ).append("\n"); 
		query.append("		, NVL(MN.REAL_CUST_SEQ, PTY.CUST_SEQ ) AS CUST_SEQ" ).append("\n"); 
		query.append("		, MN.PROP_NO" ).append("\n"); 
		query.append("		, MN.AMDT_SEQ" ).append("\n"); 
		query.append("		, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT" ).append("\n"); 
		query.append("		, (TO_DATE(TO_CHAR(CTRT_EXP_DT,'YYYYMMDD'),'YYYYMMDD')- TO_DATE(TO_CHAR(CTRT_EFF_DT,'YYYYMMDD'),'YYYYMMDD')) / 7 AS WEEK_NEW -- WEEK(NEW)" ).append("\n"); 
		query.append("		, DECODE( MN.REAL_CUST_CNT_CD, NULL, PTY.CTRT_PTY_NM, (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = MN.REAL_CUST_CNT_CD AND CUST_SEQ =MN.REAL_CUST_SEQ  )) AS CTRT_PTY_NM -- CTRT_PTY_NM/ CUSTOMER NAME" ).append("\n"); 
		query.append("		, MAX(" ).append("\n"); 
		query.append("		CASE WHEN MQ.CNTR_LOD_UT_CD = 'F' AND @[frm_pfmc_unit] = 'TEU' THEN" ).append("\n"); 
		query.append("		MQ.PROP_MQC_QTY * 2" ).append("\n"); 
		query.append("		WHEN MQ.CNTR_LOD_UT_CD = 'T' AND @[frm_pfmc_unit] = 'FEU' THEN" ).append("\n"); 
		query.append("		MQ.PROP_MQC_QTY /2" ).append("\n"); 
		query.append("		ELSE MQ.PROP_MQC_QTY" ).append("\n"); 
		query.append("		END" ).append("\n"); 
		query.append("		) PROP_MQC_QTY  -- PROP_MQC_QTY		" ).append("\n"); 
		query.append("		, SCP_MN.SVC_SCP_CD" ).append("\n"); 
		query.append("		, MN.RESPB_SREP_CD  " ).append("\n"); 
		query.append("		,DECODE(CTP.PRC_CTRT_CUST_TP_CD,'N','NON-BCO','BCO')  PRC_CTRT_CUST_TP_NM" ).append("\n"); 
		query.append("		, MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("	FROM PRI_SP_MN MN" ).append("\n"); 
		query.append("		, PRI_SP_HDR HDR" ).append("\n"); 
		query.append("		, PRI_SP_CTRT_PTY PTY" ).append("\n"); 
		query.append("		, PRI_SP_MQC MQ" ).append("\n"); 
		query.append("		, PRI_SP_SCP_DUR DUR" ).append("\n"); 
		query.append("		, PRI_SP_SCP_MN SCP_MN" ).append("\n"); 
		query.append("		, MDM_ORGANIZATION M_ORG" ).append("\n"); 
		query.append("		, PRI_SP_CTRT_CUST_TP CTP" ).append("\n"); 
		query.append("	WHERE MN.PROP_OFC_CD = M_ORG.OFC_CD" ).append("\n"); 
		query.append("		AND MN.PROP_NO   = HDR.PROP_NO" ).append("\n"); 
		query.append("		AND MN.PROP_NO = PTY.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = PTY.AMDT_SEQ" ).append("\n"); 
		query.append("		AND PTY.PRC_CTRT_PTY_TP_CD = 'C'" ).append("\n"); 
		query.append("		AND MN.PROP_NO = MQ.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = MQ.AMDT_SEQ" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = 0" ).append("\n"); 
		query.append("		AND MN.PROP_NO = DUR.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = DUR.AMDT_SEQ" ).append("\n"); 
		query.append("		AND MN.PROP_NO = SCP_MN.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ" ).append("\n"); 
		query.append("		AND MN.PROP_NO = CTP.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = CTP.AMDT_SEQ" ).append("\n"); 
		query.append("		AND CTP.PRC_CTRT_PTY_TP_CD = 'C'" ).append("\n"); 
		query.append("		AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD" ).append("\n"); 
		query.append("		 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_customer_type} == 'B')" ).append("\n"); 
		query.append("				AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O')" ).append("\n"); 
		query.append("	#elseif(${frm_customer_type} == 'N')" ).append("\n"); 
		query.append("				AND CTP.PRC_CTRT_CUST_TP_CD IN ('N')" ).append("\n"); 
		query.append("	#else " ).append("\n"); 
		query.append("			AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_prop_ofc_cd} != '')" ).append("\n"); 
		query.append("				AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_prop_srep_cd} != '')" ).append("\n"); 
		query.append("				AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_prop_apro_ofc_cd} != '')" ).append("\n"); 
		query.append("				AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_ctrt_eff_dt} != '' )" ).append("\n"); 
		query.append("		AND DUR.CTRT_EFF_DT >= TO_DATE(@[frm_ctrt_eff_dt],'YYYY-MM-DD')" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if ( ${frm_ctrt_exp_dt} != '' )" ).append("\n"); 
		query.append("		AND DUR.CTRT_EXP_DT  <= TO_DATE(@[frm_ctrt_exp_dt],'YYYY-MM-DD') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_svc_scp_cd} != '' )" ).append("\n"); 
		query.append("				AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]" ).append("\n"); 
		query.append("				AND DUR.SVC_SCP_CD = @[frm_svc_scp_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("			-- STATUS" ).append("\n"); 
		query.append("	#if (${frm_status} == 'Q') " ).append("\n"); 
		query.append("				AND  MN.PROP_STS_CD IN ( 'I', 'Q', 'R' ) /* REQUESTED */" ).append("\n"); 
		query.append("	#elseif(${frm_status} == 'A') " ).append("\n"); 
		query.append("				AND  MN.PROP_STS_CD IN ( 'A' ,'F') /* APPROVED */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if( $cust_list.size() != 0 ) " ).append("\n"); 
		query.append("		AND (PTY.CUST_CNT_CD , PTY.CUST_SEQ) IN (" ).append("\n"); 
		query.append("		#foreach( ${key} in ${cust_list}) " ).append("\n"); 
		query.append("			#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			SELECT " ).append("\n"); 
		query.append("					substr('$key',1,2),substr('$key',3)" ).append("\n"); 
		query.append("			FROM DUAL" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		GROUP BY MN.PROP_OFC_CD,M_ORG.OFC_ENG_NM , MN.REAL_CUST_CNT_CD,PTY.CUST_CNT_CD,MN.REAL_CUST_SEQ, PTY.CUST_SEQ,PTY.CTRT_PTY_NM, MN.PROP_NO, MN.AMDT_SEQ, SCP_MN.SVC_SCP_CD, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT," ).append("\n"); 
		query.append("	         SCP_MN.SVC_SCP_CD, MN.RESPB_SREP_CD  ,DECODE(CTP.PRC_CTRT_CUST_TP_CD,'N','NON-BCO','BCO'), MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("VW_NEW_DATA AS (" ).append("\n"); 
		query.append("	SELECT  /*+ MATERIALIZE */   PROP_OFC_CD" ).append("\n"); 
		query.append("		, PROP_OFC_NM" ).append("\n"); 
		query.append("		, PROP_NO" ).append("\n"); 
		query.append("		, AMDT_SEQ" ).append("\n"); 
		query.append("		, CUST_CNT_CD" ).append("\n"); 
		query.append("		, CUST_SEQ" ).append("\n"); 
		query.append("		, CTRT_EFF_DT" ).append("\n"); 
		query.append("		, CTRT_EXP_DT" ).append("\n"); 
		query.append("		, WEEK_NEW      -- WEEK(NEW)" ).append("\n"); 
		query.append("		, CTRT_PTY_NM      -- CUSTOMER NAME" ).append("\n"); 
		query.append("		, PROP_MQC_QTY      -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("		, G_REV       -- GROSS REVENUE" ).append("\n"); 
		query.append("		, COST_NEW_CM_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, COST_NEW_CM_TRADE     -- COST(NEW)" ).append("\n"); 
		query.append("		, COST_NEW_OP_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, LOAD_NEW              -- LOAD(NEW)" ).append("\n"); 
		query.append("		, NEW_RESPB_CM_AMT -- OFFICE PROPIT/CM" ).append("\n"); 
		query.append("		, NEW_PFIT_CM_AMT -- TRADE PROPIT/CM" ).append("\n"); 
		query.append("		, NEW_RESPB_OP_AMT -- OP(NEW)" ).append("\n"); 
		query.append("		, CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB" ).append("\n"); 
		query.append("		, CMPB_NEW_TRADE -- TRADE PROPIT/CMPB" ).append("\n"); 
		query.append("		, OPB_NEW_OFFICE -- OPB(NEW)" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT" ).append("\n"); 
		query.append("			PROP_OFC_CD" ).append("\n"); 
		query.append("			, MAX(PROP_OFC_NM) AS PROP_OFC_NM -- REQUEST OFFICE" ).append("\n"); 
		query.append("			, PROP_NO" ).append("\n"); 
		query.append("			, AMDT_SEQ" ).append("\n"); 
		query.append("			, CUST_CNT_CD" ).append("\n"); 
		query.append("			, CUST_SEQ" ).append("\n"); 
		query.append("			, CTRT_EFF_DT, CTRT_EXP_DT" ).append("\n"); 
		query.append("			, MAX(WEEK_NEW) AS WEEK_NEW" ).append("\n"); 
		query.append("			, MAX(CTRT_PTY_NM) AS CTRT_PTY_NM        -- CUSTOMER NAME" ).append("\n"); 
		query.append("			, MAX(PROP_MQC_QTY) AS PROP_MQC_QTY        -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("			, SUM((PROP_FRT_RT_AMT + PRS_SCG_AMT) * PRS_ESTM_LOD_QTY_FOR_RATE) AS G_REV      -- GROSS REVENUE" ).append("\n"); 
		query.append("			, SUM(PRS_RESPB_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("			, SUM(PRS_PFIT_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("			, SUM(PRS_RESPB_OPFIT_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)" ).append("\n"); 
		query.append("			, SUM(PRS_ESTM_LOD_QTY) AS LOAD_NEW-- LOAD(NEW)" ).append("\n"); 
		query.append("			, SUM(ESTM_RESPB_CM_AMT) AS NEW_RESPB_CM_AMT    -- Office Profit -- CM(NEW)" ).append("\n"); 
		query.append("			, SUM(ESTM_PFIT_CM_AMT) AS NEW_PFIT_CM_AMT    -- Trade Profit -- CM(NEW)" ).append("\n"); 
		query.append("			, SUM(ESTM_RESPB_OP_AMT) AS NEW_RESPB_OP_AMT     --OP(NEW)" ).append("\n"); 
		query.append("			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0, SUM(ESTM_RESPB_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB" ).append("\n"); 
		query.append("			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0, SUM(ESTM_PFIT_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_TRADE -- TRADE PROPIT/CM" ).append("\n"); 
		query.append("			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0, SUM(ESTM_RESPB_OP_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS OPB_NEW_OFFICE  --OPB(NEW)" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT MN.PROP_OFC_CD" ).append("\n"); 
		query.append("				, MN.PROP_OFC_NM --  AS PROP_OFC_NM -- REQUEST OFFICE" ).append("\n"); 
		query.append("				, MN.CUST_CNT_CD" ).append("\n"); 
		query.append("				, MN.CUST_SEQ" ).append("\n"); 
		query.append("				, MN.PROP_NO" ).append("\n"); 
		query.append("				, MN.AMDT_SEQ" ).append("\n"); 
		query.append("				, MN.CTRT_EFF_DT, MN.CTRT_EXP_DT" ).append("\n"); 
		query.append("				, MN.CTRT_PTY_NM -- CTRT_PTY_NM        -- CUSTOMER NAME" ).append("\n"); 
		query.append("				, MN.PROP_MQC_QTY  -- PROP_MQC_QTY        -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("				, MN.WEEK_NEW" ).append("\n"); 
		query.append("				, RT.PROP_FRT_RT_AMT" ).append("\n"); 
		query.append("				, RT.PRS_SCG_AMT" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_CM_UC_AMT  -- COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("				, RT.PRS_PFIT_CM_UC_AMT  -- COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_OPFIT_UC_AMT  -- COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				, CMDT_ROUT.PRS_ESTM_LOD_QTY  / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_LOD_QTY -- LOAD(NEW)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'" ).append("\n"); 
		query.append("				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT  / 2" ).append("\n"); 
		query.append("				END  AS ESTM_RESPB_CM_AMT  -- AS CM_NEW_OFFICE" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'" ).append("\n"); 
		query.append("				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT  / 2" ).append("\n"); 
		query.append("				END  AS ESTM_PFIT_CM_AMT    --  CM_NEW_OP_TRADE" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'" ).append("\n"); 
		query.append("				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT  / 2" ).append("\n"); 
		query.append("				END  AS ESTM_RESPB_OP_AMT    --  CM_NEW_OP_TRADE" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' " ).append("\n"); 
		query.append("						THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  " ).append("\n"); 
		query.append("	       				ELSE	" ).append("\n"); 
		query.append("							 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2" ).append("\n"); 
		query.append("	       		  END  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  " ).append("\n"); 
		query.append("			FROM VW_MAIN_NEW_SET MN" ).append("\n"); 
		query.append("				, PRI_SP_SCP_RT_CMDT_ROUT CMDT_ROUT" ).append("\n"); 
		query.append("				, PRI_SP_SCP_RT RT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE(@[frm_ori_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_MAIN_NEW_SET MN_SET" ).append("\n"); 
		query.append("							, PRI_SP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("				) ORI_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE(@[frm_dest_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_MAIN_NEW_SET MN_SET" ).append("\n"); 
		query.append("							, PRI_SP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("				) DEST_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.GEN_SPCL_RT_TP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ" ).append("\n"); 
		query.append("					FROM VW_MAIN_NEW_SET MN_SET" ).append("\n"); 
		query.append("						, PRI_SP_SCP_RT RT" ).append("\n"); 
		query.append("					WHERE MN_SET.PROP_NO = RT.PROP_NO" ).append("\n"); 
		query.append("						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ" ).append("\n"); 
		query.append("						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD" ).append("\n"); 
		query.append("	#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("		AND (RT.VSL_SLAN_CD) IN (" ).append("\n"); 
		query.append("		#foreach( ${key} in ${slane_list}) " ).append("\n"); 
		query.append("			#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("				," ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("				'$key'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("				) SLANE" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			WHERE  MN.PROP_NO = CMDT_ROUT.PROP_NO" ).append("\n"); 
		query.append("				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = ORI_LOC.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = DEST_LOC.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = SLANE.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = RT.GEN_SPCL_RT_TP_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)" ).append("\n"); 
		query.append("				-- BY CARGO TYPE" ).append("\n"); 
		query.append("				#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY PROP_OFC_CD,CUST_CNT_CD,CUST_SEQ, PROP_NO, AMDT_SEQ, CTRT_EFF_DT, CTRT_EXP_DT" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("VW_RESULT AS (" ).append("\n"); 
		query.append("	SELECT" ).append("\n"); 
		query.append("		round(N.CMPB_NEW_OFFICE,2) as CMPB_NEW_OFFICE     -- OFFICE PROPIT/CM" ).append("\n"); 
		query.append("		, round(N.CMPB_NEW_TRADE,2) as  CMPB_NEW_TRADE   -- TRADE PROPIT/CM" ).append("\n"); 
		query.append("		, MN.RESPB_SREP_CD  " ).append("\n"); 
		query.append("		,MN.PROP_OFC_CD" ).append("\n"); 
		query.append("		, MN.PROP_OFC_NM" ).append("\n"); 
		query.append("		, MN.PROP_NO" ).append("\n"); 
		query.append("		, MN.AMDT_SEQ" ).append("\n"); 
		query.append("		, MN.CUST_CNT_CD" ).append("\n"); 
		query.append("		, MN.CUST_SEQ" ).append("\n"); 
		query.append("		, MN.CUST_CNT_CD || TO_CHAR(MN.CUST_SEQ,'FM000000' ) AS CUST_CD" ).append("\n"); 
		query.append("		, MN.PRC_CTRT_CUST_TP_NM" ).append("\n"); 
		query.append("		, MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("		, TO_CHAR(MN.CTRT_EFF_DT,'YYYYMMDD') AS CTRT_EFF_DT" ).append("\n"); 
		query.append("		, TO_CHAR(MN.CTRT_EXP_DT,'YYYYMMDD') AS CTRT_EXP_DT" ).append("\n"); 
		query.append("		, MN.WEEK_NEW      -- WEEK(NEW)" ).append("\n"); 
		query.append("		, MN.CTRT_PTY_NM      -- CUSTOMER NAME" ).append("\n"); 
		query.append("		, MN.PROP_MQC_QTY     -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("		, N.G_REV      -- GROSS REVENUE" ).append("\n"); 
		query.append("		, N.COST_NEW_CM_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, N.COST_NEW_CM_TRADE     -- COST(NEW)" ).append("\n"); 
		query.append("		, N.COST_NEW_OP_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, N.OPB_NEW_OFFICE  as OPB_NEW     -- OPB(NEW)" ).append("\n"); 
		query.append("		, N.LOAD_NEW      -- LOAD(NEW)" ).append("\n"); 
		query.append("		, N.NEW_RESPB_CM_AMT AS  CM_NEW_OFFICE" ).append("\n"); 
		query.append("		, N.NEW_PFIT_CM_AMT AS CM_NEW_TRADE" ).append("\n"); 
		query.append("		, N.NEW_RESPB_OP_AMT AS OP_NEW" ).append("\n"); 
		query.append("	FROM VW_MAIN_NEW_SET MN" ).append("\n"); 
		query.append("		,VW_NEW_DATA N" ).append("\n"); 
		query.append("	WHERE MN.PROP_NO = N.PROP_NO(+)" ).append("\n"); 
		query.append("		AND   MN.AMDT_SEQ = N.AMDT_SEQ(+)" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${frm_contract_type} == 'B') " ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'S') " ).append("\n"); 
		query.append("VW_RFA_MAIN_NEW_SET AS (" ).append("\n"); 
		query.append("	SELECT /*+ ORDERED USE_HASH(DUR SCP_MN) INDEX_FFS(SCP_MN XPKPRI_RP_SCP_MN)*/  MN.PROP_OFC_CD" ).append("\n"); 
		query.append("		, M_ORG.OFC_ENG_NM  AS PROP_OFC_NM--  AS PROP_OFC_NM -- REQUEST OFFICE" ).append("\n"); 
		query.append("		, MN.CTRT_CUST_CNT_CD AS CUST_CNT_CD" ).append("\n"); 
		query.append("		, MN.CTRT_CUST_SEQ AS CUST_SEQ" ).append("\n"); 
		query.append("		, MN.PROP_NO" ).append("\n"); 
		query.append("		, MN.AMDT_SEQ" ).append("\n"); 
		query.append("		, '' AS CTRT_PTY_NM  -- CUSTOMER NAME" ).append("\n"); 
		query.append("		, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT" ).append("\n"); 
		query.append("		, (TO_DATE(TO_CHAR(CTRT_EXP_DT,'YYYYMMDD'),'YYYYMMDD')- TO_DATE(TO_CHAR(CTRT_EFF_DT,'YYYYMMDD'),'YYYYMMDD')) / 7 AS WEEK_NEW -- WEEK(NEW)" ).append("\n"); 
		query.append("		, (" ).append("\n"); 
		query.append("			CASE WHEN MN.CNTR_LOD_UT_CD = 'F' AND 'TEU' = 'TEU' THEN" ).append("\n"); 
		query.append("			MN.TGT_MVC_QTY * 2" ).append("\n"); 
		query.append("			WHEN MN.CNTR_LOD_UT_CD = 'T' AND 'TEU' = 'FEU' THEN" ).append("\n"); 
		query.append("			MN.TGT_MVC_QTY /2" ).append("\n"); 
		query.append("			ELSE MN.TGT_MVC_QTY" ).append("\n"); 
		query.append("			END" ).append("\n"); 
		query.append("		) PROP_MQC_QTY  -- PROP_MQC_QTY	" ).append("\n"); 
		query.append("		, SCP_MN.SVC_SCP_CD" ).append("\n"); 
		query.append("		, MN.RESPB_SREP_CD" ).append("\n"); 
		query.append("		,DECODE( MN.PRC_CTRT_CUST_TP_CD,'N','NON-BCO','BCO')  PRC_CTRT_CUST_TP_NM" ).append("\n"); 
		query.append("		, MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("	FROM PRI_RP_SCP_DUR DUR" ).append("\n"); 
		query.append("		, PRI_RP_MN MN" ).append("\n"); 
		query.append("		, PRI_RP_SCP_MN SCP_MN" ).append("\n"); 
		query.append("		, MDM_ORGANIZATION M_ORG" ).append("\n"); 
		query.append("	WHERE MN.PROP_OFC_CD = M_ORG.OFC_CD" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = 0" ).append("\n"); 
		query.append("		AND MN.PROP_NO = DUR.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = DUR.AMDT_SEQ" ).append("\n"); 
		query.append("		AND MN.PROP_NO = SCP_MN.PROP_NO" ).append("\n"); 
		query.append("		AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ" ).append("\n"); 
		query.append("		AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD" ).append("\n"); 
		query.append("	#if(${frm_customer_type} == 'B')" ).append("\n"); 
		query.append("				AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O')" ).append("\n"); 
		query.append("	#elseif(${frm_customer_type} == 'N')" ).append("\n"); 
		query.append("				AND MN.PRC_CTRT_CUST_TP_CD IN ('N')" ).append("\n"); 
		query.append("	#else " ).append("\n"); 
		query.append("			AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_prop_ofc_cd} != '')" ).append("\n"); 
		query.append("				AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_prop_srep_cd} != '')" ).append("\n"); 
		query.append("				AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_prop_apro_ofc_cd} != '')" ).append("\n"); 
		query.append("				AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_ctrt_eff_dt} != '' )" ).append("\n"); 
		query.append("		AND DUR.CTRT_EFF_DT >= TO_DATE(@[frm_ctrt_eff_dt],'YYYY-MM-DD')" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if ( ${frm_ctrt_exp_dt} != '' )" ).append("\n"); 
		query.append("		AND DUR.CTRT_EXP_DT  <= TO_DATE(@[frm_ctrt_exp_dt],'YYYY-MM-DD') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if(${frm_svc_scp_cd} != '' )" ).append("\n"); 
		query.append("				AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]" ).append("\n"); 
		query.append("				AND DUR.SVC_SCP_CD = @[frm_svc_scp_cd]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("			-- STATUS" ).append("\n"); 
		query.append("	#if (${frm_status} == 'Q') " ).append("\n"); 
		query.append("				AND  MN.PROP_STS_CD IN ( 'I', 'Q', 'R' ) /* REQUESTED */" ).append("\n"); 
		query.append("	#elseif(${frm_status} == 'A') " ).append("\n"); 
		query.append("				AND  MN.PROP_STS_CD IN ( 'A' ) /* APPROVED */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if( $cust_list.size() != 0 ) " ).append("\n"); 
		query.append("		AND (MN.CTRT_CUST_CNT_CD ,MN.CTRT_CUST_SEQ) IN (" ).append("\n"); 
		query.append("		#foreach( ${key} in ${cust_list}) " ).append("\n"); 
		query.append("			#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			SELECT " ).append("\n"); 
		query.append("					substr('$key',1,2),substr('$key',3)" ).append("\n"); 
		query.append("			FROM DUAL" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("VW_RFA_NEW_DATA AS (" ).append("\n"); 
		query.append("	SELECT /*+ MATERIALIZE */" ).append("\n"); 
		query.append("		PROP_OFC_CD" ).append("\n"); 
		query.append("		, PROP_OFC_NM" ).append("\n"); 
		query.append("		, PROP_NO" ).append("\n"); 
		query.append("		, AMDT_SEQ" ).append("\n"); 
		query.append("		, CUST_CNT_CD" ).append("\n"); 
		query.append("		, CUST_SEQ" ).append("\n"); 
		query.append("		, CTRT_EFF_DT" ).append("\n"); 
		query.append("		, CTRT_EXP_DT" ).append("\n"); 
		query.append("		, WEEK_NEW      -- WEEK(NEW)" ).append("\n"); 
		query.append("		, CTRT_PTY_NM      -- CUSTOMER NAME" ).append("\n"); 
		query.append("		, PROP_MQC_QTY      -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("		, G_REV       -- GROSS REVENUE" ).append("\n"); 
		query.append("		, COST_NEW_CM_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, COST_NEW_CM_TRADE     -- COST(NEW)" ).append("\n"); 
		query.append("		, COST_NEW_OP_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, LOAD_NEW              -- LOAD(NEW)" ).append("\n"); 
		query.append("		, NEW_RESPB_CM_AMT -- OFFICE PROPIT/CM" ).append("\n"); 
		query.append("		, NEW_PFIT_CM_AMT -- TRADE PROPIT/CM" ).append("\n"); 
		query.append("		, NEW_RESPB_OP_AMT -- OP(NEW)" ).append("\n"); 
		query.append("		, CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB" ).append("\n"); 
		query.append("		, CMPB_NEW_TRADE -- TRADE PROPIT/CMPB" ).append("\n"); 
		query.append("		, OPB_NEW_OFFICE -- OPB(NEW)" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT" ).append("\n"); 
		query.append("			PROP_OFC_CD" ).append("\n"); 
		query.append("			, MAX(PROP_OFC_NM) AS PROP_OFC_NM -- REQUEST OFFICE" ).append("\n"); 
		query.append("			, PROP_NO" ).append("\n"); 
		query.append("			, AMDT_SEQ" ).append("\n"); 
		query.append("			, CUST_CNT_CD" ).append("\n"); 
		query.append("			, CUST_SEQ" ).append("\n"); 
		query.append("			, CTRT_EFF_DT, CTRT_EXP_DT" ).append("\n"); 
		query.append("			, MAX(WEEK_NEW) AS WEEK_NEW" ).append("\n"); 
		query.append("			, MAX(CTRT_PTY_NM) AS CTRT_PTY_NM        -- CUSTOMER NAME" ).append("\n"); 
		query.append("			, MAX(PROP_MQC_QTY) AS PROP_MQC_QTY        -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("			, SUM((PROP_FRT_RT_AMT + PRS_SCG_AMT)*PRS_ESTM_LOD_QTY_FOR_RATE) AS G_REV      -- GROSS REVENUE" ).append("\n"); 
		query.append("			, SUM(PRS_RESPB_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("			, SUM(PRS_PFIT_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("			, SUM(PRS_RESPB_OPFIT_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)" ).append("\n"); 
		query.append("			, SUM(PRS_ESTM_LOD_QTY) AS LOAD_NEW-- LOAD(NEW)" ).append("\n"); 
		query.append("			, SUM(ESTM_RESPB_CM_AMT) AS NEW_RESPB_CM_AMT    -- Office Profit -- CM(NEW)" ).append("\n"); 
		query.append("			, SUM(ESTM_PFIT_CM_AMT) AS NEW_PFIT_CM_AMT    -- Trade Profit -- CM(NEW)" ).append("\n"); 
		query.append("			, SUM(ESTM_RESPB_OP_AMT) AS NEW_RESPB_OP_AMT     --OP(NEW)" ).append("\n"); 
		query.append("			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0,SUM(ESTM_RESPB_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB" ).append("\n"); 
		query.append("			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0,SUM(ESTM_PFIT_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_TRADE -- TRADE PROPIT/CM" ).append("\n"); 
		query.append("			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0,SUM(ESTM_RESPB_OP_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS OPB_NEW_OFFICE  --OPB(NEW)" ).append("\n"); 
		query.append("		FROM (" ).append("\n"); 
		query.append("			SELECT MN.PROP_OFC_CD" ).append("\n"); 
		query.append("				, MN.PROP_OFC_NM --  AS PROP_OFC_NM -- REQUEST OFFICE" ).append("\n"); 
		query.append("				, MN.CUST_CNT_CD" ).append("\n"); 
		query.append("				, MN.CUST_SEQ" ).append("\n"); 
		query.append("				, MN.PROP_NO" ).append("\n"); 
		query.append("				, MN.AMDT_SEQ" ).append("\n"); 
		query.append("				, MN.CTRT_EFF_DT, MN.CTRT_EXP_DT" ).append("\n"); 
		query.append("				, MN.CTRT_PTY_NM -- CTRT_PTY_NM        -- CUSTOMER NAME" ).append("\n"); 
		query.append("				, MN.PROP_MQC_QTY  -- PROP_MQC_QTY        -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("				, MN.WEEK_NEW" ).append("\n"); 
		query.append("				, RT.PROP_FRT_RT_AMT" ).append("\n"); 
		query.append("				, RT.PRS_SCG_AMT" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_CM_UC_AMT  -- COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("				, RT.PRS_PFIT_CM_UC_AMT  -- COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_OPFIT_UC_AMT  -- COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				, CMDT_ROUT.PRS_ESTM_LOD_QTY  / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_LOD_QTY -- LOAD(NEW)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'" ).append("\n"); 
		query.append("				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT  / 2" ).append("\n"); 
		query.append("				END  AS ESTM_RESPB_CM_AMT  -- AS CM_NEW_OFFICE" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'" ).append("\n"); 
		query.append("				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT  / 2" ).append("\n"); 
		query.append("				END  AS ESTM_PFIT_CM_AMT    --  CM_NEW_OP_TRADE" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'" ).append("\n"); 
		query.append("				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT  / 2" ).append("\n"); 
		query.append("				END  AS ESTM_RESPB_OP_AMT    --  CM_NEW_OP_TRADE" ).append("\n"); 
		query.append("				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' " ).append("\n"); 
		query.append("						THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  " ).append("\n"); 
		query.append("	       				ELSE	" ).append("\n"); 
		query.append("							 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2" ).append("\n"); 
		query.append("	       		  END  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  " ).append("\n"); 
		query.append("			FROM VW_RFA_MAIN_NEW_SET MN" ).append("\n"); 
		query.append("				, PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT" ).append("\n"); 
		query.append("				, PRI_RP_SCP_RT RT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE( @[frm_ori_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_RFA_MAIN_NEW_SET MN_SET" ).append("\n"); 
		query.append("							, PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("				) ORI_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD,  CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE( @[frm_dest_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_RFA_MAIN_NEW_SET MN_SET" ).append("\n"); 
		query.append("							, PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("				) DEST_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ" ).append("\n"); 
		query.append("					FROM VW_RFA_MAIN_NEW_SET MN_SET" ).append("\n"); 
		query.append("						, PRI_RP_SCP_RT RT" ).append("\n"); 
		query.append("					WHERE MN_SET.PROP_NO = RT.PROP_NO" ).append("\n"); 
		query.append("						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ" ).append("\n"); 
		query.append("						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD" ).append("\n"); 
		query.append("	#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("		AND RT.VSL_SLAN_CD IN (" ).append("\n"); 
		query.append("		#foreach( ${key} in ${slane_list}) " ).append("\n"); 
		query.append("			#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("				," ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("				'$key'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("				) SLANE" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("			WHERE  MN.PROP_NO = CMDT_ROUT.PROP_NO" ).append("\n"); 
		query.append("				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)" ).append("\n"); 
		query.append("				-- BY CARGO TYPE" ).append("\n"); 
		query.append("				#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("		GROUP BY PROP_OFC_CD,CUST_CNT_CD,CUST_SEQ, PROP_NO, AMDT_SEQ, CTRT_EFF_DT, CTRT_EXP_DT" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("VW_RFA_RESULT AS (" ).append("\n"); 
		query.append("	SELECT" ).append("\n"); 
		query.append("		round(N.CMPB_NEW_OFFICE,2) as CMPB_NEW_OFFICE     -- OFFICE PROPIT/CM" ).append("\n"); 
		query.append("		, round(N.CMPB_NEW_TRADE,2) as  CMPB_NEW_TRADE   -- TRADE PROPIT/CM" ).append("\n"); 
		query.append("		, MN.RESPB_SREP_CD" ).append("\n"); 
		query.append("		,MN.PROP_OFC_CD" ).append("\n"); 
		query.append("		, MN.PROP_OFC_NM" ).append("\n"); 
		query.append("		, MN.PROP_NO" ).append("\n"); 
		query.append("		, MN.AMDT_SEQ" ).append("\n"); 
		query.append("		, MN.CUST_CNT_CD" ).append("\n"); 
		query.append("		, MN.CUST_SEQ" ).append("\n"); 
		query.append("		, MN.CUST_CNT_CD || TO_CHAR(MN.CUST_SEQ,'FM000000' ) AS CUST_CD" ).append("\n"); 
		query.append("		, MN.PRC_CTRT_CUST_TP_NM" ).append("\n"); 
		query.append("		, MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("		, TO_CHAR(MN.CTRT_EFF_DT,'YYYYMMDD') AS CTRT_EFF_DT" ).append("\n"); 
		query.append("		, TO_CHAR(MN.CTRT_EXP_DT,'YYYYMMDD') AS CTRT_EXP_DT" ).append("\n"); 
		query.append("		, MN.WEEK_NEW      -- WEEK(NEW)" ).append("\n"); 
		query.append("		, MN.CTRT_PTY_NM      -- CUSTOMER NAME" ).append("\n"); 
		query.append("		, MN.PROP_MQC_QTY     -- MQC( TARGET VVD )" ).append("\n"); 
		query.append("		, N.G_REV      -- GROSS REVENUE" ).append("\n"); 
		query.append("		, N.COST_NEW_CM_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, N.COST_NEW_CM_TRADE     -- COST(NEW)" ).append("\n"); 
		query.append("		, N.COST_NEW_OP_OFFICE     -- COST(NEW)" ).append("\n"); 
		query.append("		, N.OPB_NEW_OFFICE  as OPB_NEW     -- OPB(NEW)" ).append("\n"); 
		query.append("		, N.LOAD_NEW      -- LOAD(NEW)" ).append("\n"); 
		query.append("		, N.NEW_RESPB_CM_AMT AS  CM_NEW_OFFICE" ).append("\n"); 
		query.append("		, N.NEW_PFIT_CM_AMT AS CM_NEW_TRADE" ).append("\n"); 
		query.append("		, N.NEW_RESPB_OP_AMT AS OP_NEW" ).append("\n"); 
		query.append("	FROM VW_RFA_MAIN_NEW_SET MN" ).append("\n"); 
		query.append("		,VW_RFA_NEW_DATA N" ).append("\n"); 
		query.append("	WHERE MN.PROP_NO = N.PROP_NO(+)" ).append("\n"); 
		query.append("		AND   MN.AMDT_SEQ = N.AMDT_SEQ(+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("SELECT TARGET_CODE" ).append("\n"); 
		query.append("	, CODE_TP_CD" ).append("\n"); 
		query.append("	, TARGET_TP" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("	SELECT TARGET_CODE" ).append("\n"); 
		query.append("		, CASE WHEN @[grp_code] = 'PROP_OFC_CD' THEN" ).append("\n"); 
		query.append("				'A'" ).append("\n"); 
		query.append("				WHEN @[grp_code] = 'CUST_CD' THEN" ).append("\n"); 
		query.append("				'B'" ).append("\n"); 
		query.append("				WHEN @[grp_code] = 'RESPB_SREP_CD' THEN" ).append("\n"); 
		query.append("				'C'" ).append("\n"); 
		query.append("				ELSE" ).append("\n"); 
		query.append("				'D'" ).append("\n"); 
		query.append("		  END AS CODE_TP_CD" ).append("\n"); 
		query.append("		, ${new_data_col} AS NEW_VALUE" ).append("\n"); 
		query.append("		, RANK() OVER(ORDER BY  ${rank_order}  ) RN -- DESC 상위, ASC 하위" ).append("\n"); 
		query.append("		, COUNT(*) OVER () TOT_CNT" ).append("\n"); 
		query.append("		, TARGET_TP" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'R') " ).append("\n"); 
		query.append("		SELECT " ).append("\n"); 
		query.append("			${grp_code}  AS TARGET_CODE" ).append("\n"); 
		query.append("			,SUM(LOAD_NEW) AS LOAD_NEW" ).append("\n"); 
		query.append("			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(OPB_NEW * LOAD_NEW) / SUM(LOAD_NEW) )  AS OPB_NEW" ).append("\n"); 
		query.append("			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_OFFICE * LOAD_NEW) / SUM(LOAD_NEW) ) AS CMPB_NEW_OFFICE" ).append("\n"); 
		query.append("			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_TRADE * LOAD_NEW) / SUM(LOAD_NEW)) AS CMPB_NEW_TRADE" ).append("\n"); 
		query.append("			,SUM(CM_NEW_OFFICE) AS CM_NEW_OFFICE" ).append("\n"); 
		query.append("			,SUM(CM_NEW_TRADE) AS CM_NEW_TRADE" ).append("\n"); 
		query.append("			,SUM(OP_NEW) AS OP_NEW" ).append("\n"); 
		query.append("			,'S' AS TARGET_TP" ).append("\n"); 
		query.append("		FROM VW_RESULT " ).append("\n"); 
		query.append("		GROUP BY  ${grp_code}" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${frm_contract_type} == 'B') " ).append("\n"); 
		query.append("		UNION ALL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'S') " ).append("\n"); 
		query.append("		SELECT" ).append("\n"); 
		query.append("			${grp_code}  AS TARGET_CODE" ).append("\n"); 
		query.append("			,SUM(LOAD_NEW) AS LOAD_NEW" ).append("\n"); 
		query.append("			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(OPB_NEW * LOAD_NEW) / SUM(LOAD_NEW) )  AS OPB_NEW" ).append("\n"); 
		query.append("			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_OFFICE * LOAD_NEW) / SUM(LOAD_NEW) ) AS CMPB_NEW_OFFICE" ).append("\n"); 
		query.append("			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_TRADE * LOAD_NEW) / SUM(LOAD_NEW)) AS CMPB_NEW_TRADE" ).append("\n"); 
		query.append("			,SUM(CM_NEW_OFFICE) AS CM_NEW_OFFICE" ).append("\n"); 
		query.append("			,SUM(CM_NEW_TRADE) AS CM_NEW_TRADE" ).append("\n"); 
		query.append("			,SUM(OP_NEW) AS OP_NEW" ).append("\n"); 
		query.append("			,'R' AS TARGET_TP" ).append("\n"); 
		query.append("		FROM VW_RFA_RESULT" ).append("\n"); 
		query.append("		GROUP BY  ${grp_code}" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("	)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("WHERE RN <=  ${range_val}-- 보고싶은 RANGE" ).append("\n"); 
		query.append("ORDER BY  TARGET_CODE" ).append("\n"); 

	}
}