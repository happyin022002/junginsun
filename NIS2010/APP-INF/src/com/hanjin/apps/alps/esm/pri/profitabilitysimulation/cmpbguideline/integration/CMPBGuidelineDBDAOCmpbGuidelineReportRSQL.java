/*=========================================================
*Copyright(c) 2010 CyberLogitec
*@FileName : CMPBGuidelineDBDAOCmpbGuidelineReportRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2010.02.24
*@LastModifier : 송민석
*@LastVersion : 1.0
* 2010.02.24 송민석
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmpbguideline.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author SONG MIN SEOK
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CMPBGuidelineDBDAOCmpbGuidelineReportRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Gline Report
	  * </pre>
	  */
	public CMPBGuidelineDBDAOCmpbGuidelineReportRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("eff_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cre_ofc_cd_in",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("r_rcv_de_term_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("exp_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("d_rcv_de_term_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("prc_cmdt_def_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("origin_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dest_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("prs_cust_tp_cd_in",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("prc_cgo_tp_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("svc_scp_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmpbguideline.integration").append("\n"); 
		query.append("FileName : CMPBGuidelineDBDAOCmpbGuidelineReportRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VW_PRI_CMPB_GLINE_MN AS (" ).append("\n"); 
		query.append("	SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("		, CRE_OFC_CD" ).append("\n"); 
		query.append("		, GLINE_SEQ" ).append("\n"); 
		query.append("		, EFF_DT                    	" ).append("\n"); 
		query.append("		, EXP_DT  " ).append("\n"); 
		query.append("		, ROWNUM AS NUM" ).append("\n"); 
		query.append("	FROM   PRI_CMPB_GLINE_MN" ).append("\n"); 
		query.append("	WHERE   1=1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		AND   SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("		AND   (TO_CHAR(EFF_DT,'YYYY-MM-DD') >= @[eff_dt]" ).append("\n"); 
		query.append("						OR TO_CHAR(EXP_DT, 'YYYY-MM-DD') >= @[eff_dt])" ).append("\n"); 
		query.append("		#if (${exp_dt} != '')" ).append("\n"); 
		query.append("			AND (TO_CHAR(EFF_DT, 'YYYY-MM-DD') BETWEEN @[eff_dt] AND @[exp_dt]" ).append("\n"); 
		query.append("						OR (TO_CHAR(EFF_DT, 'YYYY-MM-DD') <= @[eff_dt] AND TO_CHAR(EXP_DT, 'YYYY-MM-DD') >= @[exp_dt]))" ).append("\n"); 
		query.append("			AND TO_CHAR(EXP_DT, 'YYYY-MM-DD') BETWEEN @[eff_dt] AND @[exp_dt]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		AND  CFM_FLG = 'Y'	" ).append("\n"); 
		query.append("		-----------------------------------------------------------------" ).append("\n"); 
		query.append("		--   Creation Office 로 조회 한다. " ).append("\n"); 
		query.append("		-----------------------------------------------------------------" ).append("\n"); 
		query.append("		#if (${cre_ofc_cd_in} != '') " ).append("\n"); 
		query.append("			AND   CRE_OFC_CD = @[cre_ofc_cd_in]" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	MN.PRS_CUST_TP_NM  --CUSTOMER TYPE NAME" ).append("\n"); 
		query.append("	,       MN.VSL_SLAN_CD                                               	--SVC_LANE" ).append("\n"); 
		query.append("	,       MN.PRC_CMDT_DEF_CD                                           	--COMMODITY" ).append("\n"); 
		query.append("	,       MN.ORG_ROUT_PNT_LOC_DEF_CD            	--ORIGIN PNT" ).append("\n"); 
		query.append("	,       MN.ORG_ROUT_VIA_PORT_DEF_CD          	--ORIGIN VIA" ).append("\n"); 
		query.append("	,       MN.DEST_ROUT_VIA_PORT_DEF_CD         	--DEST VIA" ).append("\n"); 
		query.append("	,       MN.DEST_ROUT_PNT_LOC_DEF_CD           	--DEST PNT" ).append("\n"); 
		query.append("	,       MN.RAT_UT_CD                                                 	--PER" ).append("\n"); 
		query.append("	,       MN.PRC_CGO_TP_CD                                             	--CARGO" ).append("\n"); 
		query.append("	,       MN.CURR_CD                                                 		--CURR" ).append("\n"); 
		query.append("	,       MN.CMPB_AMT                                                  	--AMT" ).append("\n"); 
		query.append("	,       MN.CRE_OFC_CD                                                	--OFFICE" ).append("\n"); 
		query.append("	,       MN.MQC_RNG_FM_QTY                                            	--MQC FROM" ).append("\n"); 
		query.append("	,       MN.MQC_RNG_TO_QTY                                            	--MQC TO" ).append("\n"); 
		query.append("	,       MN.EFF_DT                    	--EFF_DT" ).append("\n"); 
		query.append("	,       MN.EXP_DT                    	--EXP_DT" ).append("\n"); 
		query.append("	,       MN.CMPB_SEQ  " ).append("\n"); 
		query.append("	,	MN.SVC_SCP_CD" ).append("\n"); 
		query.append("	,	MN.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("	,	MN.GLINE_SEQ" ).append("\n"); 
		query.append("	,	MN.BSE_SEQ" ).append("\n"); 
		query.append("	,	MN.CMDT_MAP_SCORE" ).append("\n"); 
		query.append("	,	MN.ORI_MAP_SCORE" ).append("\n"); 
		query.append("	,	MN.DEST_MAP_SCORE" ).append("\n"); 
		query.append("	,	MN.UT_MAP_SCORE" ).append("\n"); 
		query.append("	,	MN.CGO_MAP_SCORE" ).append("\n"); 
		query.append("	,	RK" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("	SELECT " ).append("\n"); 
		query.append("		MN.PRS_CUST_TP_NM  --CUSTOMER TYPE NAME" ).append("\n"); 
		query.append("		,       MN.VSL_SLAN_CD                                               	--SVC_LANE" ).append("\n"); 
		query.append("		,       MN.PRC_CMDT_DEF_CD                                           	--COMMODITY" ).append("\n"); 
		query.append("		,       MN.ORG_ROUT_PNT_LOC_DEF_CD            	--ORIGIN PNT" ).append("\n"); 
		query.append("		,       MN.ORG_ROUT_VIA_PORT_DEF_CD          	--ORIGIN VIA" ).append("\n"); 
		query.append("		,       MN.DEST_ROUT_VIA_PORT_DEF_CD         	--DEST VIA" ).append("\n"); 
		query.append("		,       MN.DEST_ROUT_PNT_LOC_DEF_CD           	--DEST PNT" ).append("\n"); 
		query.append("		,       MN.RAT_UT_CD                                                 	--PER" ).append("\n"); 
		query.append("		,       MN.PRC_CGO_TP_CD                                             	--CARGO" ).append("\n"); 
		query.append("		,       MN.CURR_CD                                                 		--CURR" ).append("\n"); 
		query.append("		,       MN.CMPB_AMT                                                  	--AMT" ).append("\n"); 
		query.append("		,       MN.CRE_OFC_CD                                                	--OFFICE" ).append("\n"); 
		query.append("		,       MN.MQC_RNG_FM_QTY                                            	--MQC FROM" ).append("\n"); 
		query.append("		,       MN.MQC_RNG_TO_QTY                                            	--MQC TO" ).append("\n"); 
		query.append("		,       MN.EFF_DT                    	--EFF_DT" ).append("\n"); 
		query.append("		,       MN.EXP_DT                    	--EXP_DT" ).append("\n"); 
		query.append("		,       MN.CMPB_SEQ  " ).append("\n"); 
		query.append("		,	MN.SVC_SCP_CD" ).append("\n"); 
		query.append("		,	MN.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("		,	MN.GLINE_SEQ" ).append("\n"); 
		query.append("		,	MN.BSE_SEQ" ).append("\n"); 
		query.append("		,	MN.CMDT_MAP_SCORE" ).append("\n"); 
		query.append("		,	MN.ORI_MAP_SCORE" ).append("\n"); 
		query.append("		,	MN.DEST_MAP_SCORE" ).append("\n"); 
		query.append("		,	MN.UT_MAP_SCORE" ).append("\n"); 
		query.append("		,	MN.CGO_MAP_SCORE" ).append("\n"); 
		query.append("		, RANK() OVER (--PARTITION BY MN.SVC_SCP_CD, MN.CRE_OFC_CD, MN.GLINE_SEQ, MN.PRS_CUST_TP_CD, MN.BSE_SEQ,       MN.MQC_RNG_FM_QTY ,       MN.MQC_RNG_TO_QTY " ).append("\n"); 
		query.append("				ORDER BY   ( CMDT_MAP_SCORE + ORI_MAP_SCORE + DEST_MAP_SCORE + UT_MAP_SCORE  + CGO_MAP_SCORE +CUST_TP_SCORE )  DESC ) RK" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT  " ).append("\n"); 
		query.append("		       (" ).append("\n"); 
		query.append("			       SELECT DECODE(INTG_CD_VAL_DESC,'BOTH','',INTG_CD_VAL_DESC)                        " ).append("\n"); 
		query.append("				FROM   COM_INTG_CD_DTL" ).append("\n"); 
		query.append("				WHERE  INTG_CD_ID = 'CD02085'" ).append("\n"); 
		query.append("				AND    INTG_CD_VAL_CTNT = A1.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("			) AS PRS_CUST_TP_NM  --CUSTOMER TYPE NAME" ).append("\n"); 
		query.append("			,       B1.VSL_SLAN_CD                                               	--SVC_LANE" ).append("\n"); 
		query.append("			,       C1.PRC_CMDT_DEF_CD                                           	--COMMODITY" ).append("\n"); 
		query.append("			,       D1.ROUT_PNT_LOC_DEF_CD AS ORG_ROUT_PNT_LOC_DEF_CD            	--ORIGIN PNT" ).append("\n"); 
		query.append("			,       E1.ROUT_VIA_PORT_DEF_CD AS ORG_ROUT_VIA_PORT_DEF_CD          	--ORIGIN VIA" ).append("\n"); 
		query.append("			,       F1.ROUT_VIA_PORT_DEF_CD AS DEST_ROUT_VIA_PORT_DEF_CD         	--DEST VIA" ).append("\n"); 
		query.append("			,       G1.ROUT_PNT_LOC_DEF_CD AS DEST_ROUT_PNT_LOC_DEF_CD           	--DEST PNT" ).append("\n"); 
		query.append("			,       A1.RAT_UT_CD                                                 	--PER" ).append("\n"); 
		query.append("			,       A1.PRC_CGO_TP_CD                                             	--CARGO" ).append("\n"); 
		query.append("			,       A1.CURR_CD                                                 		--CURR" ).append("\n"); 
		query.append("			,       A1.CMPB_AMT                                                  	--AMT" ).append("\n"); 
		query.append("			,       A1.CRE_OFC_CD                                                	--OFFICE" ).append("\n"); 
		query.append("			,       A1.MQC_RNG_FM_QTY                                            	--MQC FROM" ).append("\n"); 
		query.append("			,       A1.MQC_RNG_TO_QTY                                            	--MQC TO" ).append("\n"); 
		query.append("			,       TO_CHAR(H1.EFF_DT,'YYYY-MM-DD') AS EFF_DT                    	--EFF_DT" ).append("\n"); 
		query.append("			,       TO_CHAR(H1.EXP_DT,'YYYY-MM-DD') AS EXP_DT                    	--EXP_DT" ).append("\n"); 
		query.append("			,       A1.CMPB_SEQ  " ).append("\n"); 
		query.append("			,	A1.SVC_SCP_CD" ).append("\n"); 
		query.append("			,	A1.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("			,	A1.GLINE_SEQ" ).append("\n"); 
		query.append("			,	A1.BSE_SEQ" ).append("\n"); 
		query.append("		#if (${prc_cmdt_def_cd} != '')" ).append("\n"); 
		query.append("			,	CMDT.MAP_SCORE AS CMDT_MAP_SCORE" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			, 0 AS CMDT_MAP_SCORE" ).append("\n"); 
		query.append("		#end " ).append("\n"); 
		query.append("		#if (${origin_cd} != '')" ).append("\n"); 
		query.append("			,	ORI.MAP_SCORE AS ORI_MAP_SCORE" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			, 0 AS ORI_MAP_SCORE" ).append("\n"); 
		query.append("		#end " ).append("\n"); 
		query.append("		#if (${dest_cd} != '')" ).append("\n"); 
		query.append("			,	DEST.MAP_SCORE AS DEST_MAP_SCORE" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			, 0 AS DEST_MAP_SCORE" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		#if (${rat_ut_cd} != '') " ).append("\n"); 
		query.append("				,  DECODE( TRIM(A1.RAT_UT_CD),NULL,0,2)  AS UT_MAP_SCORE" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("				, 0  AS UT_MAP_SCORE" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		#if (${prc_cgo_tp_cd} != '')" ).append("\n"); 
		query.append("				, DECODE(TRIM(A1.PRC_CGO_TP_CD),NULL,0,2)     AS CGO_MAP_SCORE" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("				, 0  AS CGO_MAP_SCORE" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if (${prs_cust_tp_cd_in} != '' && ${prs_cust_tp_cd_in} != 'M') " ).append("\n"); 
		query.append("				, DECODE( A1.PRS_CUST_TP_CD, 'M',0,1000)  AS CUST_TP_SCORE" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("				, 0 AS CUST_TP_SCORE" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		FROM       " ).append("\n"); 
		query.append("			PRI_CMPB_GLINE_AMT A1" ).append("\n"); 
		query.append("			, VW_PRI_CMPB_GLINE_MN H1" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				--SVC_LANE" ).append("\n"); 
		query.append("				SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("				,       CRE_OFC_CD" ).append("\n"); 
		query.append("				,       GLINE_SEQ" ).append("\n"); 
		query.append("				,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				,       BSE_SEQ" ).append("\n"); 
		query.append("				,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(VSL_SLAN_CD, '; ')),3) AS VSL_SLAN_CD" ).append("\n"); 
		query.append("				FROM    (" ).append("\n"); 
		query.append("						SELECT  A.SVC_SCP_CD" ).append("\n"); 
		query.append("						,       A.CRE_OFC_CD" ).append("\n"); 
		query.append("						,       A.GLINE_SEQ" ).append("\n"); 
		query.append("						,       A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("						,       A.BSE_SEQ" ).append("\n"); 
		query.append("						,       A.VSL_SLAN_CD" ).append("\n"); 
		query.append("						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							ORDER BY A.VSL_SLAN_CD, A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ ) AS RN" ).append("\n"); 
		query.append("						FROM    PRI_CMPB_GLINE_SVC_LANE A" ).append("\n"); 
		query.append("							, VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("						WHERE   1=1" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND	A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND	A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("							AND	A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("							AND C.NUM > 0" ).append("\n"); 
		query.append("							-----------------------------------------------------------------" ).append("\n"); 
		query.append("							--   SVC Lane으로 조회 한다. " ).append("\n"); 
		query.append("							-----------------------------------------------------------------" ).append("\n"); 
		query.append("							#if (${vsl_slan_cd} != '') " ).append("\n"); 
		query.append("								AND EXISTS (" ).append("\n"); 
		query.append("									SELECT 'F'" ).append("\n"); 
		query.append("									FROM PRI_CMPB_GLINE_SVC_LANE F_LANE" ).append("\n"); 
		query.append("									WHERE F_LANE.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("										AND F_LANE.CRE_OFC_CD = A.CRE_OFC_CD" ).append("\n"); 
		query.append("										AND F_LANE.GLINE_SEQ = A.GLINE_SEQ" ).append("\n"); 
		query.append("										AND F_LANE.PRS_CUST_TP_CD  = A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("										AND F_LANE.BSE_SEQ = A.BSE_SEQ" ).append("\n"); 
		query.append("										AND F_LANE.VSL_SLAN_CD IN  (${vsl_slan_cd})" ).append("\n"); 
		query.append("								)	" ).append("\n"); 
		query.append("							#end" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("				START WITH RN = 1" ).append("\n"); 
		query.append("				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ" ).append("\n"); 
		query.append("					       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND PRIOR GLINE_SEQ = GLINE_SEQ" ).append("\n"); 
		query.append("				       AND PRIOR RN = RN - 1" ).append("\n"); 
		query.append("				GROUP BY SVC_SCP_CD" ).append("\n"); 
		query.append("				,        CRE_OFC_CD" ).append("\n"); 
		query.append("				,        GLINE_SEQ" ).append("\n"); 
		query.append("				,        PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				,        BSE_SEQ" ).append("\n"); 
		query.append("			) B1" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				--COMMODITY" ).append("\n"); 
		query.append("				SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("				,       CRE_OFC_CD" ).append("\n"); 
		query.append("				,       GLINE_SEQ" ).append("\n"); 
		query.append("				,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				,       BSE_SEQ" ).append("\n"); 
		query.append("				,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(PRC_CMDT_DEF_CD, '; ')),3) AS PRC_CMDT_DEF_CD" ).append("\n"); 
		query.append("				FROM    (" ).append("\n"); 
		query.append("					SELECT  A.SVC_SCP_CD" ).append("\n"); 
		query.append("					,       A.CRE_OFC_CD" ).append("\n"); 
		query.append("					,       A.GLINE_SEQ" ).append("\n"); 
		query.append("					,       A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       A.BSE_SEQ" ).append("\n"); 
		query.append("					,       A.CMDT_SEQ" ).append("\n"); 
		query.append("					,       A.PRC_CMDT_TP_CD" ).append("\n"); 
		query.append("					,       A.PRC_CMDT_DEF_CD" ).append("\n"); 
		query.append("					,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("						ORDER BY DECODE(A.PRC_CMDT_TP_CD, 'G','1','R','2','C','3'),  A.PRC_CMDT_DEF_CD," ).append("\n"); 
		query.append("									A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.CMDT_SEQ) AS RN" ).append("\n"); 
		query.append("					FROM    PRI_CMPB_GLINE_CMDT A" ).append("\n"); 
		query.append("						, VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("					WHERE   1=1" ).append("\n"); 
		query.append("					AND   A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					AND	A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					AND	A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("					AND C.NUM > 0" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("				START WITH RN = 1" ).append("\n"); 
		query.append("				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ" ).append("\n"); 
		query.append("					       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND PRIOR GLINE_SEQ = GLINE_SEQ" ).append("\n"); 
		query.append("				       AND PRIOR RN = RN - 1" ).append("\n"); 
		query.append("				GROUP BY SVC_SCP_CD" ).append("\n"); 
		query.append("					,       CRE_OFC_CD" ).append("\n"); 
		query.append("					,       GLINE_SEQ" ).append("\n"); 
		query.append("					,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       BSE_SEQ" ).append("\n"); 
		query.append("			) C1" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				--ORIGIN POINT" ).append("\n"); 
		query.append("				SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("					,       CRE_OFC_CD" ).append("\n"); 
		query.append("					,       GLINE_SEQ" ).append("\n"); 
		query.append("					,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       BSE_SEQ" ).append("\n"); 
		query.append("					,       ORG_DEST_TP_CD" ).append("\n"); 
		query.append("					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_CD, '; ')),3) AS ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("				FROM    (" ).append("\n"); 
		query.append("					SELECT  A.SVC_SCP_CD" ).append("\n"); 
		query.append("						,       A.CRE_OFC_CD" ).append("\n"); 
		query.append("						,       A.GLINE_SEQ" ).append("\n"); 
		query.append("						,       A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("						,       A.BSE_SEQ" ).append("\n"); 
		query.append("						,       A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("						,       (A.ROUT_PNT_LOC_DEF_CD || DECODE(NVL(B.INTG_CD_VAL_DESC,''),'','','(' || B.INTG_CD_VAL_DESC || ')')) AS ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("							ORDER BY DECODE(A.ROUT_PNT_LOC_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_PNT_LOC_DEF_CD," ).append("\n"); 
		query.append("										A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN" ).append("\n"); 
		query.append("					FROM    PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,       COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("						,	VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("					WHERE   1=1" ).append("\n"); 
		query.append("						AND   A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("						AND   B.INTG_CD_ID(+) = 'CD02138'" ).append("\n"); 
		query.append("						AND   A.RCV_DE_TERM_CD = B.INTG_CD_VAL_CTNT(+)" ).append("\n"); 
		query.append("						AND    A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						AND	A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						AND	A.GLINE_SEQ = C.GLINE_SEQ	" ).append("\n"); 
		query.append("						AND C.NUM > 0" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("				START WITH RN = 1" ).append("\n"); 
		query.append("				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ" ).append("\n"); 
		query.append("					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND PRIOR GLINE_SEQ = GLINE_SEQ" ).append("\n"); 
		query.append("				       AND PRIOR RN = RN - 1" ).append("\n"); 
		query.append("				GROUP BY SVC_SCP_CD" ).append("\n"); 
		query.append("				,        CRE_OFC_CD" ).append("\n"); 
		query.append("				,        GLINE_SEQ" ).append("\n"); 
		query.append("				,        PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				,        BSE_SEQ" ).append("\n"); 
		query.append("				,        ORG_DEST_TP_CD" ).append("\n"); 
		query.append("			) D1" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				--ORIGIN VIA" ).append("\n"); 
		query.append("				SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("					,       CRE_OFC_CD" ).append("\n"); 
		query.append("					,       GLINE_SEQ" ).append("\n"); 
		query.append("					,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       BSE_SEQ" ).append("\n"); 
		query.append("					,       ORG_DEST_TP_CD" ).append("\n"); 
		query.append("					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD, '; ')),3) AS ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("				FROM    (" ).append("\n"); 
		query.append("					SELECT  A.SVC_SCP_CD" ).append("\n"); 
		query.append("						,       A.CRE_OFC_CD" ).append("\n"); 
		query.append("						,       A.GLINE_SEQ" ).append("\n"); 
		query.append("						,       A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("						,       A.BSE_SEQ" ).append("\n"); 
		query.append("						,       A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("						,       A.ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("							ORDER BY DECODE(A.ROUT_VIA_PORT_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_VIA_PORT_DEF_CD," ).append("\n"); 
		query.append("									A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN" ).append("\n"); 
		query.append("					FROM    PRI_CMPB_GLINE_ROUT_VIA A" ).append("\n"); 
		query.append("						, VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("					WHERE   1=1" ).append("\n"); 
		query.append("						AND   A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("						AND A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						AND	A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						AND	A.GLINE_SEQ = C.GLINE_SEQ	" ).append("\n"); 
		query.append("						AND C.NUM > 0 " ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("				START WITH RN = 1" ).append("\n"); 
		query.append("				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ" ).append("\n"); 
		query.append("					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND PRIOR GLINE_SEQ = GLINE_SEQ" ).append("\n"); 
		query.append("				       AND PRIOR RN = RN - 1" ).append("\n"); 
		query.append("				GROUP BY SVC_SCP_CD" ).append("\n"); 
		query.append("				,        CRE_OFC_CD" ).append("\n"); 
		query.append("				,        GLINE_SEQ" ).append("\n"); 
		query.append("				,        PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				,        BSE_SEQ" ).append("\n"); 
		query.append("				,        ORG_DEST_TP_CD" ).append("\n"); 
		query.append("			) E1" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				--DEST VIA" ).append("\n"); 
		query.append("				SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("					,       CRE_OFC_CD" ).append("\n"); 
		query.append("					,       GLINE_SEQ" ).append("\n"); 
		query.append("					,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       BSE_SEQ" ).append("\n"); 
		query.append("					,       ORG_DEST_TP_CD" ).append("\n"); 
		query.append("					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD, '; ')),3) AS ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("				FROM    (" ).append("\n"); 
		query.append("					SELECT  A.SVC_SCP_CD" ).append("\n"); 
		query.append("						,       A.CRE_OFC_CD" ).append("\n"); 
		query.append("						,       A.GLINE_SEQ" ).append("\n"); 
		query.append("						,       A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("						,       A.BSE_SEQ" ).append("\n"); 
		query.append("						,       A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("						,       A.ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("						,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("							ORDER BY DECODE(A.ROUT_VIA_PORT_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_VIA_PORT_DEF_CD," ).append("\n"); 
		query.append("										A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN" ).append("\n"); 
		query.append("					FROM    PRI_CMPB_GLINE_ROUT_VIA A" ).append("\n"); 
		query.append("						, VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("					WHERE   1=1" ).append("\n"); 
		query.append("						AND   A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("						AND A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						AND	A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						AND	A.GLINE_SEQ = C.GLINE_SEQ	" ).append("\n"); 
		query.append("						AND C.NUM > 0" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("				START WITH RN = 1" ).append("\n"); 
		query.append("				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ" ).append("\n"); 
		query.append("					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND PRIOR GLINE_SEQ = GLINE_SEQ" ).append("\n"); 
		query.append("				       AND PRIOR RN = RN - 1" ).append("\n"); 
		query.append("				GROUP BY SVC_SCP_CD" ).append("\n"); 
		query.append("					,        CRE_OFC_CD" ).append("\n"); 
		query.append("					,        GLINE_SEQ" ).append("\n"); 
		query.append("					,        PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,        BSE_SEQ" ).append("\n"); 
		query.append("					,        ORG_DEST_TP_CD" ).append("\n"); 
		query.append("			) F1" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				--DEST POINT" ).append("\n"); 
		query.append("				SELECT  SVC_SCP_CD" ).append("\n"); 
		query.append("					,       CRE_OFC_CD" ).append("\n"); 
		query.append("					,       GLINE_SEQ" ).append("\n"); 
		query.append("					,       PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       BSE_SEQ" ).append("\n"); 
		query.append("					,       ORG_DEST_TP_CD" ).append("\n"); 
		query.append("					,       SUBSTR(MAX(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_CD, '; ')),3) AS ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("				FROM    (" ).append("\n"); 
		query.append("					SELECT  A.SVC_SCP_CD" ).append("\n"); 
		query.append("					,       A.CRE_OFC_CD" ).append("\n"); 
		query.append("					,       A.GLINE_SEQ" ).append("\n"); 
		query.append("					,       A.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,       A.BSE_SEQ" ).append("\n"); 
		query.append("					,       A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("					,       A.ROUT_PNT_SEQ" ).append("\n"); 
		query.append("					,       (A.ROUT_PNT_LOC_DEF_CD || DECODE(NVL(B.INTG_CD_VAL_DESC,''),'','','(' || B.INTG_CD_VAL_DESC || ')')) AS ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("					,       ROW_NUMBER() OVER(PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("						ORDER BY DECODE(A.ROUT_PNT_LOC_TP_CD, 'C','1','R','2','G','3','L','4'),  A.ROUT_PNT_LOC_DEF_CD," ).append("\n"); 
		query.append("									A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ) AS RN" ).append("\n"); 
		query.append("					FROM    PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						, COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("						, VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("					WHERE   1=1" ).append("\n"); 
		query.append("					AND   A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("					AND   B.INTG_CD_ID(+) = 'CD02139'" ).append("\n"); 
		query.append("					AND   A.RCV_DE_TERM_CD = B.INTG_CD_VAL_CTNT(+)" ).append("\n"); 
		query.append("					" ).append("\n"); 
		query.append("					AND A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					AND	A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					AND	A.GLINE_SEQ = C.GLINE_SEQ	" ).append("\n"); 
		query.append("					AND C.NUM > 0 " ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("				START WITH RN = 1" ).append("\n"); 
		query.append("				CONNECT BY PRIOR BSE_SEQ = BSE_SEQ" ).append("\n"); 
		query.append("					       AND PRIOR ORG_DEST_TP_CD = ORG_DEST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR PRS_CUST_TP_CD = PRS_CUST_TP_CD" ).append("\n"); 
		query.append("				       AND PRIOR CRE_OFC_CD = CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND PRIOR GLINE_SEQ = GLINE_SEQ" ).append("\n"); 
		query.append("				       AND PRIOR RN = RN - 1" ).append("\n"); 
		query.append("				GROUP BY SVC_SCP_CD" ).append("\n"); 
		query.append("					,        CRE_OFC_CD" ).append("\n"); 
		query.append("					,        GLINE_SEQ" ).append("\n"); 
		query.append("					,        PRS_CUST_TP_CD" ).append("\n"); 
		query.append("					,        BSE_SEQ" ).append("\n"); 
		query.append("					,        ORG_DEST_TP_CD" ).append("\n"); 
		query.append("			) G1" ).append("\n"); 
		query.append("			-----------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("			-- COMMODITY 일때" ).append("\n"); 
		query.append("			-----------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		#if (${prc_cmdt_def_cd} != '')" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				-- MAPPING된 데이터" ).append("\n"); 
		query.append("				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE" ).append("\n"); 
		query.append("				FROM (" ).append("\n"); 
		query.append("					SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE" ).append("\n"); 
		query.append("					    , RANK() OVER (PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							   ORDER BY  map_score DESC) RK" ).append("\n"); 
		query.append("					FROM (" ).append("\n"); 
		query.append("						-- REP. COMMODITY, COMMODIFY 일때" ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							, DECODE(A.PRC_CMDT_TP_CD,'R',4,'C',6,0)  AS MAP_SCORE" ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_CMDT A" ).append("\n"); 
		query.append("							, VW_PRI_CMPB_GLINE_MN C" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("							AND  A.PRC_CMDT_DEF_CD = @[prc_cmdt_def_cd]" ).append("\n"); 
		query.append("							AND  A.PRC_CMDT_TP_CD IN ('R','C')" ).append("\n"); 
		query.append("							AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("							AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						UNION ALL	" ).append("\n"); 
		query.append("						-- GROUP COMMODITY일때" ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ  " ).append("\n"); 
		query.append("							, DECODE(B.PRC_CMDT_TP_CD,'R',4,'C',6,0)  AS MAP_SCORE" ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_CMDT A" ).append("\n"); 
		query.append("							, PRI_CMPB_GRP_CMDT D  " ).append("\n"); 
		query.append("							, PRI_CMPB_GRP_CMDT_DTL B  " ).append("\n"); 
		query.append("							, VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = B.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = B.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = B.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND	A.PRC_CMDT_TP_CD = 'G' " ).append("\n"); 
		query.append("						   AND  B.PRC_CMDT_DEF_CD = @[prc_cmdt_def_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = D.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = D.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = D.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND  D.GRP_CMDT_SEQ = B.GRP_CMDT_SEQ" ).append("\n"); 
		query.append("						   AND  A.PRC_CMDT_DEF_CD = D.PRC_GRP_CMDT_CD" ).append("\n"); 
		query.append("					) A" ).append("\n"); 
		query.append("				) A" ).append("\n"); 
		query.append("				WHERE A.RK = 1" ).append("\n"); 
		query.append("				-- NULL을 위한 데이터" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ , 0 AS MAP_SCORE" ).append("\n"); 
		query.append("				FROM " ).append("\n"); 
		query.append("				(	" ).append("\n"); 
		query.append("					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ  " ).append("\n"); 
		query.append("					FROM 	PRI_CMPB_GLINE_BSE A" ).append("\n"); 
		query.append("					,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("					WHERE 	1=1" ).append("\n"); 
		query.append("					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("					MINUS" ).append("\n"); 
		query.append("					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("					FROM 	PRI_CMPB_GLINE_CMDT A" ).append("\n"); 
		query.append("					,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("					WHERE 	1=1" ).append("\n"); 
		query.append("					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("				) A" ).append("\n"); 
		query.append("			) CMDT " ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			-----------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("			-- ORIGIN 일때" ).append("\n"); 
		query.append("			-----------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		#if (${origin_cd} != '')" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, MAP_SCORE" ).append("\n"); 
		query.append("				FROM (" ).append("\n"); 
		query.append("					SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE" ).append("\n"); 
		query.append("					    , RANK() OVER (PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							   ORDER BY  map_score DESC) RK" ).append("\n"); 
		query.append("					FROM (" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Location Code가 있는경우" ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							,DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score" ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'O'		" ).append("\n"); 
		query.append("					#if (${r_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND	A.ROUT_PNT_LOC_TP_CD = 'L' " ).append("\n"); 
		query.append("						   AND	A.ROUT_PNT_LOC_DEF_CD = @[origin_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						UNION ALL" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Group Code가 있는경우" ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							, DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score " ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,	PRI_CMPB_GRP_LOC_DTL B" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						,       PRI_CMPB_GRP_LOC D " ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = B.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = B.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = B.GLINE_SEQ	" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'O'	" ).append("\n"); 
		query.append("					#if (${r_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND	A.ROUT_PNT_LOC_TP_CD = 'G' " ).append("\n"); 
		query.append("						   AND  B.LOC_CD = @[origin_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = D.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = D.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = D.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND  D.GRP_LOC_SEQ = B.GRP_LOC_SEQ" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_DEF_CD = D.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("						UNION ALL" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Region Code가 있는경우 " ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ " ).append("\n"); 
		query.append("							,DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 4 AS map_score" ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,       MDM_LOCATION LOC" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'O'	" ).append("\n"); 
		query.append("					#if (${r_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_DEF_CD = LOC.RGN_CD" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_TP_CD = 'R' " ).append("\n"); 
		query.append("						   AND  LOC.LOC_CD = @[origin_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						UNION ALL" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Country Code가 있는경우 " ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ " ).append("\n"); 
		query.append("							, DECODE(LENGTH(@[r_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 2 AS map_score " ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,	MDM_LOCATION B" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'O'		 " ).append("\n"); 
		query.append("					#if (${r_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[r_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_DEF_CD = B.CNT_CD" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_TP_CD = 'C' " ).append("\n"); 
		query.append("						   AND  B.LOC_CD = @[origin_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("				 " ).append("\n"); 
		query.append("					) A" ).append("\n"); 
		query.append("				) A" ).append("\n"); 
		query.append("				WHERE A.RK = 1" ).append("\n"); 
		query.append("				-- NULL을 위한 데이터" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ , 0 AS MAP_SCORE" ).append("\n"); 
		query.append("				FROM " ).append("\n"); 
		query.append("				(	" ).append("\n"); 
		query.append("										 " ).append("\n"); 
		query.append("					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("					FROM 	PRI_CMPB_GLINE_BSE A" ).append("\n"); 
		query.append("					,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("					WHERE 	1=1" ).append("\n"); 
		query.append("					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("					MINUS" ).append("\n"); 
		query.append("					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("					FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("					,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("					WHERE 	1=1" ).append("\n"); 
		query.append("					    AND  A.ORG_DEST_TP_CD = 'O'		 " ).append("\n"); 
		query.append("					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("				) A" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			) ORI " ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("			-----------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("			-- DEST 일때" ).append("\n"); 
		query.append("			-----------------------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		#if (${dest_cd} != '')" ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				-- MAPPING된 데이터" ).append("\n"); 
		query.append("				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ, MAP_SCORE" ).append("\n"); 
		query.append("				FROM (" ).append("\n"); 
		query.append("					SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ,MAP_SCORE" ).append("\n"); 
		query.append("					    , RANK() OVER (PARTITION BY A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							   ORDER BY  map_score DESC) RK" ).append("\n"); 
		query.append("					FROM (" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Location Code가 있는경우" ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							,DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score" ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'D'		" ).append("\n"); 
		query.append("					#if (${d_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND	A.ROUT_PNT_LOC_TP_CD = 'L' " ).append("\n"); 
		query.append("						   AND	A.ROUT_PNT_LOC_DEF_CD =  @[dest_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						UNION ALL" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Group Code가 있는경우" ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("							, DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 6 AS map_score " ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,	PRI_CMPB_GRP_LOC_DTL B" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						,       PRI_CMPB_GRP_LOC D " ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = B.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = B.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = B.GLINE_SEQ	" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'D'	" ).append("\n"); 
		query.append("					#if (${d_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND	A.ROUT_PNT_LOC_TP_CD = 'G' " ).append("\n"); 
		query.append("						   AND  B.LOC_CD =  @[dest_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = D.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = D.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = D.GLINE_SEQ" ).append("\n"); 
		query.append("						   AND  D.GRP_LOC_SEQ = B.GRP_LOC_SEQ" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_DEF_CD = D.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("						UNION ALL" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Region Code가 있는경우 " ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ " ).append("\n"); 
		query.append("							,DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 4 AS map_score" ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,       MDM_LOCATION LOC" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'D'	" ).append("\n"); 
		query.append("					#if (${d_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_DEF_CD = LOC.RGN_CD" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_TP_CD = 'R' " ).append("\n"); 
		query.append("						   AND  LOC.LOC_CD =  @[dest_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("						UNION ALL" ).append("\n"); 
		query.append("						-- PRI_CMPB_GLINE_ROUT_PNT에 Country Code가 있는경우 " ).append("\n"); 
		query.append("						SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ, A.PRS_CUST_TP_CD, A.BSE_SEQ " ).append("\n"); 
		query.append("							, DECODE(LENGTH(@[d_rcv_de_term_cd]),0,0,DECODE(A.RCV_DE_TERM_CD,NULL,0,2) )   + 2 AS map_score " ).append("\n"); 
		query.append("						FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("						,	MDM_LOCATION B" ).append("\n"); 
		query.append("						,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("						WHERE 	1=1" ).append("\n"); 
		query.append("						   AND  A.ORG_DEST_TP_CD = 'D'		" ).append("\n"); 
		query.append("					#if (${d_rcv_de_term_cd} != '') " ).append("\n"); 
		query.append("						   AND  NVL( A.RCV_DE_TERM_CD,'NULL') = DECODE( A.RCV_DE_TERM_CD,NULL,'NULL',@[d_rcv_de_term_cd])" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_DEF_CD = B.CNT_CD" ).append("\n"); 
		query.append("						   AND  A.ROUT_PNT_LOC_TP_CD = 'C' " ).append("\n"); 
		query.append("						   AND  B.LOC_CD =  @[dest_cd]" ).append("\n"); 
		query.append("						   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("						   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("						   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("				 " ).append("\n"); 
		query.append("					) A" ).append("\n"); 
		query.append("				) A" ).append("\n"); 
		query.append("				WHERE A.RK = 1" ).append("\n"); 
		query.append("				-- NULL을 위한 데이터" ).append("\n"); 
		query.append("				UNION ALL" ).append("\n"); 
		query.append("				SELECT A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ , 0 AS MAP_SCORE" ).append("\n"); 
		query.append("				FROM " ).append("\n"); 
		query.append("				(	" ).append("\n"); 
		query.append("										 " ).append("\n"); 
		query.append("					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("					FROM 	PRI_CMPB_GLINE_BSE A" ).append("\n"); 
		query.append("					,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("					WHERE 	1=1" ).append("\n"); 
		query.append("					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("					MINUS" ).append("\n"); 
		query.append("					SELECT 	A.SVC_SCP_CD, A.CRE_OFC_CD, A.GLINE_SEQ,A.PRS_CUST_TP_CD, A.BSE_SEQ" ).append("\n"); 
		query.append("					FROM 	PRI_CMPB_GLINE_ROUT_PNT A" ).append("\n"); 
		query.append("					,       VW_PRI_CMPB_GLINE_MN C	" ).append("\n"); 
		query.append("					WHERE 	1=1" ).append("\n"); 
		query.append("					    AND  A.ORG_DEST_TP_CD = 'D'		 " ).append("\n"); 
		query.append("					   AND  A.SVC_SCP_CD = C.SVC_SCP_CD" ).append("\n"); 
		query.append("					   AND  A.CRE_OFC_CD = C.CRE_OFC_CD" ).append("\n"); 
		query.append("					   AND  A.GLINE_SEQ = C.GLINE_SEQ" ).append("\n"); 
		query.append("				) A" ).append("\n"); 
		query.append("			) DEST" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		WHERE   A1.SVC_SCP_CD = H1.SVC_SCP_CD" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = H1.CRE_OFC_CD" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = H1.GLINE_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = B1.SVC_SCP_CD" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = B1.CRE_OFC_CD" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = B1.GLINE_SEQ" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = B1.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = B1.BSE_SEQ" ).append("\n"); 
		query.append("#if (${prc_cmdt_def_cd} != '')" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = CMDT.SVC_SCP_CD" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = CMDT.CRE_OFC_CD" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = CMDT.GLINE_SEQ" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = CMDT.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = CMDT.BSE_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${origin_cd} != '')" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = ORI.SVC_SCP_CD" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = ORI.CRE_OFC_CD" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = ORI.GLINE_SEQ" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = ORI.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = ORI.BSE_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${dest_cd} != '')" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = DEST.SVC_SCP_CD" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = DEST.CRE_OFC_CD" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = DEST.GLINE_SEQ" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = DEST.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = DEST.BSE_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = C1.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = C1.CRE_OFC_CD(+)" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = C1.GLINE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = C1.PRS_CUST_TP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = C1.BSE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = D1.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = D1.CRE_OFC_CD(+)" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = D1.GLINE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = D1.PRS_CUST_TP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = D1.BSE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = E1.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = E1.CRE_OFC_CD(+)" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = E1.GLINE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = E1.PRS_CUST_TP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = E1.BSE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = F1.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = F1.CRE_OFC_CD(+)" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = F1.GLINE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = F1.PRS_CUST_TP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = F1.BSE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.SVC_SCP_CD = G1.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.CRE_OFC_CD = G1.CRE_OFC_CD(+)" ).append("\n"); 
		query.append("			AND     A1.GLINE_SEQ = G1.GLINE_SEQ(+)" ).append("\n"); 
		query.append("			AND     A1.PRS_CUST_TP_CD = G1.PRS_CUST_TP_CD(+)" ).append("\n"); 
		query.append("			AND     A1.BSE_SEQ = G1.BSE_SEQ(+)" ).append("\n"); 
		query.append("			-----------------------------------------------------------------" ).append("\n"); 
		query.append("			--   Customer Type 로 조회 한다. " ).append("\n"); 
		query.append("			-----------------------------------------------------------------" ).append("\n"); 
		query.append("			#if (${prs_cust_tp_cd_in} != '' && ${prs_cust_tp_cd_in} != 'M') " ).append("\n"); 
		query.append("				AND A1.PRS_CUST_TP_CD IN ('M', @[prs_cust_tp_cd_in] )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND H1.NUM > 0" ).append("\n"); 
		query.append("			-----------------------------------------------------------------" ).append("\n"); 
		query.append("			--  PER Type 로 조회 한다. " ).append("\n"); 
		query.append("			-----------------------------------------------------------------" ).append("\n"); 
		query.append("			#if (${rat_ut_cd} != '') " ).append("\n"); 
		query.append("				AND	(A1.RAT_UT_CD IN (${rat_ut_cd}) OR A1.RAT_UT_CD IS NULL OR RTRIM(LTRIM(A1.RAT_UT_CD)) = '')" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			-----------------------------------------------------------------" ).append("\n"); 
		query.append("			--  CARGO Type 로 조회 한다. " ).append("\n"); 
		query.append("			-----------------------------------------------------------------" ).append("\n"); 
		query.append("			#if (${prc_cgo_tp_cd} != '') 	" ).append("\n"); 
		query.append("				AND	(A1.PRC_CGO_TP_CD = @[prc_cgo_tp_cd] OR A1.PRC_CGO_TP_CD IS NULL OR RTRIM(LTRIM(A1.PRC_CGO_TP_CD)) = '')" ).append("\n"); 
		query.append("			#end	" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append(") MN" ).append("\n"); 
		query.append("WHERE RK = 1" ).append("\n"); 
		query.append("ORDER BY MN.PRS_CUST_TP_CD" ).append("\n"); 
		query.append("	,        MN.CRE_OFC_CD" ).append("\n"); 
		query.append("	,	 MN.EFF_DT" ).append("\n"); 
		query.append("	,	 MN.EXP_DT" ).append("\n"); 
		query.append("	,        MN.BSE_SEQ" ).append("\n"); 
		query.append("	,        MN.CMPB_SEQ" ).append("\n"); 

	}
}