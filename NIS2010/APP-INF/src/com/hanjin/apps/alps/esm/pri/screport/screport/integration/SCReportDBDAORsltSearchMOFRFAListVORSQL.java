/*=========================================================
*Copyright(c) 2017 Hipluscard
*@FileName : SCReportDBDAORsltSearchMOFRFAListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.12.27
*@LastModifier : 송민석
*@LastVersion : 1.0
* 2017.12.27 송민석
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.screport.screport.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author SONG Min Seok
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SCReportDBDAORsltSearchMOFRFAListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Korea MOF Filing (Formatted) RFA 데이터 조회
	  * </pre>
	  */
	public SCReportDBDAORsltSearchMOFRFAListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("apvl_ofc",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("f_exp_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("f_eff_dt",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.screport.screport.integration").append("\n"); 
		query.append("FileName : SCReportDBDAORsltSearchMOFRFAListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("-------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--RFA_LIST : 조건에 의해 조회된 모든 RFA" ).append("\n"); 
		query.append("--RFA_ROUT_LIST : 발생되는 모든 Route Case" ).append("\n"); 
		query.append("--USD_ROUT_CASE : 실제로 사용되는 Route Case" ).append("\n"); 
		query.append("--USD_ROUT_CASE_SCG : 이미 BATCH로 계산 끝난 SCG. 수동 입력한 데이터가 있을 수도 있어서 별도로 취급." ).append("\n"); 
		query.append("--ALL_ROUT_CASE : 위의 두 Route Case 합쳐 놓은 정보" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--> 이하 부터 기존 Calculate 테이블 & 수정" ).append("\n"); 
		query.append("--BQ : 발생하는 모든 Route Case" ).append("\n"); 
		query.append("--GL : GROUP LOACTION : 위에 ALL_ROUT_CASE에 포함하기 때문에 제거." ).append("\n"); 
		query.append("--NC : note conversion값 적용." ).append("\n"); 
		query.append("--C1 : CONVERSION SURCHARGE" ).append("\n"); 
		query.append("--G2 : NULL DUAL 테이블" ).append("\n"); 
		query.append("--S3 : TARIFF SURCHARGE" ).append("\n"); 
		query.append("--SG : G2와 S3를 C1과 Join" ).append("\n"); 
		query.append("--GS : BQ와 SG를 Join" ).append("\n"); 
		query.append("--FN : ACT charge code" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--> FLAG" ).append("\n"); 
		query.append("--ROUT_SCG_TP" ).append("\n"); 
		query.append("--1 : Route Case 테이블에 없어서 만든 케이스." ).append("\n"); 
		query.append("--2 : Calculate Batch에서 이미 SCG 계산된 케이스." ).append("\n"); 
		query.append("--3 : Route Case 테이블에 있으나 SCG는 적용안된 케이스." ).append("\n"); 
		query.append("-------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("WITH RFA_LIST AS (" ).append("\n"); 
		query.append("    SELECT RFA_NO                                       AS CTRT_NO" ).append("\n"); 
		query.append("         , MN.PROP_NO                                   AS PROP_NO" ).append("\n"); 
		query.append("         , MN.AMDT_SEQ                                  AS AMDT_SEQ" ).append("\n"); 
		query.append("         , CUST.CUST_LGL_ENG_NM                         AS CUST_NM" ).append("\n"); 
		query.append("         , PROP_OFC_CD                                  AS PROP_OFC_CD" ).append("\n"); 
		query.append("         , PROP_APRO_OFC_CD                             AS PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("         , MN.EFF_DT" ).append("\n"); 
		query.append("         , TO_CHAR(DUR.CTRT_EFF_DT, 'YYYY-MM-DD')       AS CTRT_EFF_DT" ).append("\n"); 
		query.append("         , TO_CHAR(DUR.CTRT_EXP_DT, 'YYYY-MM-DD')       AS CTRT_EXP_DT" ).append("\n"); 
		query.append("         , SVC_SCP_CD" ).append("\n"); 
		query.append("         , PRC_CTRT_CUST_TP_CD                          AS CUST_TP_CD" ).append("\n"); 
		query.append("      FROM PRI_RP_HDR               HDR" ).append("\n"); 
		query.append("         , PRI_RP_MN                MN" ).append("\n"); 
		query.append("         , PRI_RP_DUR               DUR" ).append("\n"); 
		query.append("         , PRI_RP_SCP_MN            SCP_MN" ).append("\n"); 
		query.append("         , MDM_CUSTOMER             CUST" ).append("\n"); 
		query.append("     WHERE 1 = 1" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND MN.PROP_NO               = HDR.PROP_NO" ).append("\n"); 
		query.append("       AND MN.PROP_NO               = DUR.PROP_NO" ).append("\n"); 
		query.append("       AND MN.AMDT_SEQ              = DUR.AMDT_SEQ" ).append("\n"); 
		query.append("       AND MN.PROP_NO               = SCP_MN.PROP_NO" ).append("\n"); 
		query.append("       AND MN.AMDT_SEQ              = SCP_MN.AMDT_SEQ" ).append("\n"); 
		query.append("       AND CUST.CUST_CNT_CD         = MN.CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("       AND CUST.CUST_SEQ            = MN.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("       AND CUST.CNTR_DIV_FLG        = 'Y'" ).append("\n"); 
		query.append("    ----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("    -- 기본 조건" ).append("\n"); 
		query.append("		-- 20171227 CSR #2877 - 정하나 과장님 요청으로 삭제 , 송민석" ).append("\n"); 
		query.append("       --AND CTRT_EXP_DT - CTRT_EFF_DT >= 90 -- 계약기간 90일 이상인 것만" ).append("\n"); 
		query.append("       AND MN.PROP_STS_CD            = 'A' -- Approved" ).append("\n"); 
		query.append("       AND RFA_CTRT_TP_CD            IN ('C', 'S', 'B') -- RFA Type 조건" ).append("\n"); 
		query.append("       AND PROP_OFC_CD               IN ('SELSC', 'PUSSC', 'PUSBS') -- R.OFC 조건" ).append("\n"); 
		query.append("    ----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- Date by" ).append("\n"); 
		query.append("#if( ${date_by} != '2')" ).append("\n"); 
		query.append("       AND PROP_APRO_DT BETWEEN TO_DATE(@[f_eff_dt],'YYYY-MM-DD') AND TO_DATE(@[f_exp_dt],'YYYY-MM-DD')+0.99999" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("       AND MN.EFF_DT              <= TO_DATE(@[f_exp_dt], 'YYYY-MM-DD') -- Effective Date(To)" ).append("\n"); 
		query.append("       AND MN.EXP_DT              >= TO_DATE(@[f_eff_dt], 'YYYY-MM-DD') -- Effective Date(From)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    -- Apvl Ofc" ).append("\n"); 
		query.append("#if( ${apvl_ofc} != '' )" ).append("\n"); 
		query.append("       AND MN.PROP_APRO_OFC_CD = @[apvl_ofc]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    -- Req. Office" ).append("\n"); 
		query.append("#if( ${prop_ofc_cd} != '' )" ).append("\n"); 
		query.append("       AND MN.PROP_OFC_CD IN (${prop_ofc_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    -- Req. Staff" ).append("\n"); 
		query.append("#if( ${prop_srep_cd} != '' )" ).append("\n"); 
		query.append("       AND MN.PROP_SREP_CD IN (${prop_srep_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    ----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("), RFA_ROUT_LIST AS (" ).append("\n"); 
		query.append("    SELECT CTRT_NO" ).append("\n"); 
		query.append("         , MN.PROP_NO" ).append("\n"); 
		query.append("         , MN.AMDT_SEQ" ).append("\n"); 
		query.append("         , MN.CUST_NM" ).append("\n"); 
		query.append("         , MN.PROP_OFC_CD" ).append("\n"); 
		query.append("         , MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("         , MN2.EFF_DT" ).append("\n"); 
		query.append("         , MN.CTRT_EFF_DT" ).append("\n"); 
		query.append("         , MN.CTRT_EXP_DT" ).append("\n"); 
		query.append("         , MN.SVC_SCP_CD" ).append("\n"); 
		query.append("         , RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("         , BLET_DP_SEQ" ).append("\n"); 
		query.append("         , RT.ROUT_SEQ" ).append("\n"); 
		query.append("         , RT.RT_SEQ" ).append("\n"); 
		query.append("         , MOF_LANE_CD" ).append("\n"); 
		query.append("         , ORI.LOC_CD           AS ORG_LOC_CD" ).append("\n"); 
		query.append("         , ORI.MOF_LOC_ID       AS MOF_ORG_LOC_CD" ).append("\n"); 
		query.append("         , DST.LOC_CD           AS DEST_LOC_CD" ).append("\n"); 
		query.append("         , DST.MOF_LOC_ID       AS MOF_DEST_LOC_CD" ).append("\n"); 
		query.append("         , RT.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("         , TP.MOF_ID            AS TYPE_CD" ).append("\n"); 
		query.append("         , RT.RAT_UT_CD" ).append("\n"); 
		query.append("         , SZ.MOF_ID            AS SIZE_CD" ).append("\n"); 
		query.append("         , RT.CURR_CD" ).append("\n"); 
		query.append("         , TRUNC(RT.FNL_FRT_RT_AMT / DECODE(NVL(USD_LOCL_XCH_RT,0), 0, 1, USD_LOCL_XCH_RT), 2) AS FNL_FRT_RT_AMT" ).append("\n"); 
		query.append("         , MN.CUST_TP_CD" ).append("\n"); 
		query.append("      FROM RFA_LIST                 MN" ).append("\n"); 
		query.append("         , PRI_RP_SCP_RT_CMDT_HDR   CMDT_HDR" ).append("\n"); 
		query.append("         , PRI_RP_SCP_RT_CMDT_ROUT  ROUT" ).append("\n"); 
		query.append("         , (" ).append("\n"); 
		query.append("           SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, A.LOC_CD, MOF_LOC_ID" ).append("\n"); 
		query.append("             FROM PRI_MOF_LANE_MAPG A, -- Base Table" ).append("\n"); 
		query.append("                  (" ).append("\n"); 
		query.append("                  SELECT DISTINCT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ," ).append("\n"); 
		query.append("                         DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) AS LOC_CD" ).append("\n"); 
		query.append("                    FROM RFA_LIST MN" ).append("\n"); 
		query.append("                       , PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("                         LEFT OUTER JOIN  PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("                             ON (  A.PROP_NO     = B.PROP_NO" ).append("\n"); 
		query.append("                             AND A.AMDT_SEQ    = B.AMDT_SEQ" ).append("\n"); 
		query.append("                             AND A.SVC_SCP_CD  = B.SVC_SCP_CD" ).append("\n"); 
		query.append("                             AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("                             AND B.ORG_DEST_TP_CD IN ('O', 'B')" ).append("\n"); 
		query.append("                             AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                         LEFT OUTER JOIN PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("                             ON (  B.PROP_NO     = C.PROP_NO" ).append("\n"); 
		query.append("                             AND B.AMDT_SEQ    = C.AMDT_SEQ" ).append("\n"); 
		query.append("                             AND B.SVC_SCP_CD  = C.SVC_SCP_CD" ).append("\n"); 
		query.append("                             AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                             AND C.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                   WHERE A.PROP_NO = MN.PROP_NO" ).append("\n"); 
		query.append("                     AND A.AMDT_SEQ = MN.AMDT_SEQ" ).append("\n"); 
		query.append("                     AND A.SVC_SCP_CD = MN.SVC_SCP_CD" ).append("\n"); 
		query.append("                     AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("                     AND A.ORG_DEST_TP_CD = 'O'    -- ORIGIN" ).append("\n"); 
		query.append("                     AND A.RCV_DE_TERM_CD = 'Y'    -- CY Only" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("            WHERE A.LOC_CD = B.LOC_CD" ).append("\n"); 
		query.append("              AND ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("              AND FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("              AND DELT_FLG = 'N'" ).append("\n"); 
		query.append("           ) ORI" ).append("\n"); 
		query.append("         , (" ).append("\n"); 
		query.append("           SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, A.LOC_CD" ).append("\n"); 
		query.append("                , MOF_LANE_CD, MOF_LOC_ID" ).append("\n"); 
		query.append("             FROM PRI_MOF_LANE_MAPG A, -- Base Table" ).append("\n"); 
		query.append("                  (" ).append("\n"); 
		query.append("                  SELECT DISTINCT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ," ).append("\n"); 
		query.append("                         DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) AS LOC_CD" ).append("\n"); 
		query.append("                    FROM RFA_LIST MN" ).append("\n"); 
		query.append("                       , PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("                         LEFT OUTER JOIN  PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("                             ON (  A.PROP_NO     = B.PROP_NO" ).append("\n"); 
		query.append("                             AND A.AMDT_SEQ    = B.AMDT_SEQ" ).append("\n"); 
		query.append("                             AND A.SVC_SCP_CD  = B.SVC_SCP_CD" ).append("\n"); 
		query.append("                             AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD" ).append("\n"); 
		query.append("                             AND B.ORG_DEST_TP_CD IN ('D', 'B') -- DEST, BOTH" ).append("\n"); 
		query.append("                             AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                         LEFT OUTER JOIN PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("                             ON (  B.PROP_NO     = C.PROP_NO" ).append("\n"); 
		query.append("                             AND B.AMDT_SEQ    = C.AMDT_SEQ" ).append("\n"); 
		query.append("                             AND B.SVC_SCP_CD  = C.SVC_SCP_CD" ).append("\n"); 
		query.append("                             AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                             AND C.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                   WHERE A.PROP_NO = MN.PROP_NO" ).append("\n"); 
		query.append("                     AND A.AMDT_SEQ = MN.AMDT_SEQ" ).append("\n"); 
		query.append("                     AND A.SVC_SCP_CD = MN.SVC_SCP_CD" ).append("\n"); 
		query.append("                     AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("                     AND A.ORG_DEST_TP_CD = 'D'    -- DEST" ).append("\n"); 
		query.append("                     AND A.RCV_DE_TERM_CD = 'Y'    -- CY Only" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("            WHERE A.LOC_CD = B.LOC_CD" ).append("\n"); 
		query.append("              AND ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("              AND FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("              AND DELT_FLG = 'N'" ).append("\n"); 
		query.append("           ) DST" ).append("\n"); 
		query.append("         , PRI_RP_SCP_RT RT" ).append("\n"); 
		query.append("         , GL_MON_XCH_RT XR" ).append("\n"); 
		query.append("         , PRI_MOF_MAPG TP" ).append("\n"); 
		query.append("         , PRI_MOF_MAPG SZ" ).append("\n"); 
		query.append("		, PRI_RP_MN                MN2" ).append("\n"); 
		query.append("     WHERE 1 = 1" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND MN.PROP_NO               = CMDT_HDR.PROP_NO" ).append("\n"); 
		query.append("       AND MN.AMDT_SEQ              = CMDT_HDR.AMDT_SEQ" ).append("\n"); 
		query.append("       AND MN.SVC_SCP_CD            = CMDT_HDR.SVC_SCP_CD" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND CMDT_HDR.PROP_NO         = ROUT.PROP_NO" ).append("\n"); 
		query.append("       AND CMDT_HDR.AMDT_SEQ        = ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("       AND CMDT_HDR.SVC_SCP_CD      = ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("       AND CMDT_HDR.CMDT_HDR_SEQ    = ROUT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("       AND FIC_RT_TP_CD             = 'G' -- Rate of Port (CY) only" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND ROUT.PROP_NO           = ORI.PROP_NO" ).append("\n"); 
		query.append("       AND ROUT.AMDT_SEQ          = ORI.AMDT_SEQ" ).append("\n"); 
		query.append("       AND ROUT.SVC_SCP_CD        = ORI.SVC_SCP_CD" ).append("\n"); 
		query.append("       AND ROUT.CMDT_HDR_SEQ      = ORI.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("       AND ROUT.ROUT_SEQ          = ORI.ROUT_SEQ" ).append("\n"); 
		query.append("       --------------------------------------- " ).append("\n"); 
		query.append("       AND ROUT.PROP_NO           = DST.PROP_NO" ).append("\n"); 
		query.append("       AND ROUT.AMDT_SEQ          = DST.AMDT_SEQ" ).append("\n"); 
		query.append("       AND ROUT.SVC_SCP_CD        = DST.SVC_SCP_CD" ).append("\n"); 
		query.append("       AND ROUT.CMDT_HDR_SEQ      = DST.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("       AND ROUT.ROUT_SEQ          = DST.ROUT_SEQ" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND ORI.PROP_NO      = RT.PROP_NO" ).append("\n"); 
		query.append("       AND ORI.AMDT_SEQ     = RT.AMDT_SEQ" ).append("\n"); 
		query.append("       AND ORI.SVC_SCP_CD   = RT.SVC_SCP_CD" ).append("\n"); 
		query.append("       AND ORI.CMDT_HDR_SEQ = RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("       AND ORI.ROUT_SEQ     = RT.ROUT_SEQ" ).append("\n"); 
		query.append("       AND RT.SRC_INFO_CD   <> 'AD'" ).append("\n"); 
		query.append("       AND RT.AMDT_SEQ = RT.N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND XR.ACCT_XCH_RT_YRMON = TO_CHAR(MN.EFF_DT , 'YYYYMM')" ).append("\n"); 
		query.append("       AND XR.ACCT_XCH_RT_LVL   = '1'" ).append("\n"); 
		query.append("       AND XR.CURR_CD           = RT.CURR_CD" ).append("\n"); 
		query.append("       ------------BASE TABLE-----------------" ).append("\n"); 
		query.append("       AND RT.PRC_CGO_TP_CD     = TP.HJS_ID -- TYPE" ).append("\n"); 
		query.append("       AND TP.MAPG_TP_CD        = 'TYPE'" ).append("\n"); 
		query.append("       AND TP.FILE_USE_ONY_FLG  = 'Y'" ).append("\n"); 
		query.append("       AND TP.DELT_FLG          = 'N'" ).append("\n"); 
		query.append("       AND RT.RAT_UT_CD         = SZ.HJS_ID -- SIZE" ).append("\n"); 
		query.append("       AND SZ.MAPG_TP_CD        = 'SIZE'" ).append("\n"); 
		query.append("       AND SZ.FILE_USE_ONY_FLG  = 'Y'" ).append("\n"); 
		query.append("       AND SZ.DELT_FLG          = 'N'" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND MN2.PROP_NO = MN.PROP_NO" ).append("\n"); 
		query.append("		AND MN2.AMDT_SEQ = RT.N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("), USD_ROUT_CASE AS (" ).append("\n"); 
		query.append("    SELECT T.* FROM (" ).append("\n"); 
		query.append("        SELECT A.PROP_NO" ).append("\n"); 
		query.append("              ,A.AMDT_SEQ" ).append("\n"); 
		query.append("              ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("              ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,BLET_DP_SEQ" ).append("\n"); 
		query.append("              ,A.ROUT_SEQ" ).append("\n"); 
		query.append("              ,A.RT_SEQ" ).append("\n"); 
		query.append("              ,D.ROUT_CS_NO" ).append("\n"); 
		query.append("              ,D.ROUT_CS_SRC_DT" ).append("\n"); 
		query.append("              ,D.POR_CD" ).append("\n"); 
		query.append("              ,D.POL_CD" ).append("\n"); 
		query.append("              ,D.N1ST_TS_PORT_CD" ).append("\n"); 
		query.append("              ,D.N2ND_TS_PORT_CD" ).append("\n"); 
		query.append("              ,D.N3RD_TS_PORT_CD" ).append("\n"); 
		query.append("              ,D.POD_CD" ).append("\n"); 
		query.append("              ,D.DEL_CD" ).append("\n"); 
		query.append("              ,D.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("              ,D.BKG_RCV_TERM_CD" ).append("\n"); 
		query.append("              ,D.BKG_DE_TERM_CD" ).append("\n"); 
		query.append("              ,D.N1ST_FINC_VVD_CD" ).append("\n"); 
		query.append("              ,D.N2ND_FINC_VVD_CD" ).append("\n"); 
		query.append("              ,D.N3RD_FINC_VVD_CD" ).append("\n"); 
		query.append("              ,D.N4TH_FINC_VVD_CD" ).append("\n"); 
		query.append("              ,D.N1ST_RLANE_CD" ).append("\n"); 
		query.append("              ,D.N2ND_RLANE_CD" ).append("\n"); 
		query.append("              ,D.N3RD_RLANE_CD" ).append("\n"); 
		query.append("              ,D.N4TH_RLANE_CD" ).append("\n"); 
		query.append("              ,D.TRSP_RAIL_DIR_KNT" ).append("\n"); 
		query.append("              ,A.USD_ROUT_CS_SEL_FLG" ).append("\n"); 
		query.append("              ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.RT_SEQ, " ).append("\n"); 
		query.append("                                              D.POR_CD, D.DEL_CD, A.ROUT_CS_SRC_DT ORDER BY D.TTL_TZTM_HRS, D.ROUT_CS_NO ) NUM" ).append("\n"); 
		query.append("         FROM  RFA_ROUT_LIST LST" ).append("\n"); 
		query.append("              ,PRI_RP_SCP_RT C" ).append("\n"); 
		query.append("              ,PRI_RP_SCP_RT_USD_ROUT_CS A" ).append("\n"); 
		query.append("              ,PRI_PRS_USD_ROUT_CS_INFO D" ).append("\n"); 
		query.append("             , PRI_MOF_LANE_MAPG ORI" ).append("\n"); 
		query.append("             , PRI_MOF_LANE_MAPG DEST" ).append("\n"); 
		query.append("             , PRI_MOF_MAPG TP" ).append("\n"); 
		query.append("             , PRI_MOF_MAPG SZ" ).append("\n"); 
		query.append("        WHERE  C.PROP_NO        = LST.PROP_NO" ).append("\n"); 
		query.append("          AND  C.AMDT_SEQ       = LST.AMDT_SEQ" ).append("\n"); 
		query.append("          AND  C.SVC_SCP_CD     = LST.SVC_SCP_CD" ).append("\n"); 
		query.append("          AND  C.SRC_INFO_CD    <> 'AD'" ).append("\n"); 
		query.append("          AND  C.PROP_NO        = A.PROP_NO" ).append("\n"); 
		query.append("          AND  C.AMDT_SEQ       = A.AMDT_SEQ" ).append("\n"); 
		query.append("          AND  C.SVC_SCP_CD     = A.SVC_SCP_CD" ).append("\n"); 
		query.append("          AND  C.CMDT_HDR_SEQ   = A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("          AND  C.ROUT_SEQ       = A.ROUT_SEQ" ).append("\n"); 
		query.append("          AND  C.RT_SEQ         = A.RT_SEQ" ).append("\n"); 
		query.append("	  AND  C.AMDT_SEQ = C.N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("          AND  A.ROUT_CS_NO     = D.ROUT_CS_NO" ).append("\n"); 
		query.append("          AND  A.ROUT_CS_SRC_DT = D.ROUT_CS_SRC_DT" ).append("\n"); 
		query.append("          ------------ BASE TABLE (LANE) -------------" ).append("\n"); 
		query.append("          AND  D.POR_CD                 = ORI.LOC_CD" ).append("\n"); 
		query.append("          AND  ORI.ORG_DEST_TP_CD       = 'O'" ).append("\n"); 
		query.append("          AND  ORI.FILE_USE_ONY_FLG     = 'Y'" ).append("\n"); 
		query.append("          AND  ORI.DELT_FLG             = 'N'" ).append("\n"); 
		query.append("          AND  D.DEL_CD                 = DEST.LOC_CD" ).append("\n"); 
		query.append("          AND  DEST.ORG_DEST_TP_CD      = 'D'" ).append("\n"); 
		query.append("          AND  DEST.FILE_USE_ONY_FLG    = 'Y'" ).append("\n"); 
		query.append("          AND  DEST.DELT_FLG            = 'N'" ).append("\n"); 
		query.append("          ------------ BASE TABLE (CNTR) -------------" ).append("\n"); 
		query.append("          AND C.PRC_CGO_TP_CD      = TP.HJS_ID -- TYPE" ).append("\n"); 
		query.append("          AND TP.MAPG_TP_CD        = 'TYPE'" ).append("\n"); 
		query.append("          AND TP.FILE_USE_ONY_FLG  = 'Y'" ).append("\n"); 
		query.append("          AND TP.DELT_FLG          = 'N'" ).append("\n"); 
		query.append("          AND C.RAT_UT_CD          = SZ.HJS_ID -- SIZE" ).append("\n"); 
		query.append("          AND SZ.MAPG_TP_CD        = 'SIZE'" ).append("\n"); 
		query.append("          AND SZ.FILE_USE_ONY_FLG  = 'Y'" ).append("\n"); 
		query.append("          AND SZ.DELT_FLG          = 'N'" ).append("\n"); 
		query.append("          --------------------------------------------" ).append("\n"); 
		query.append("    ) T" ).append("\n"); 
		query.append("    WHERE NUM = 1" ).append("\n"); 
		query.append("), ALL_ROUT_CASE AS (" ).append("\n"); 
		query.append("    SELECT CTRT_NO" ).append("\n"); 
		query.append("         , A.PROP_NO" ).append("\n"); 
		query.append("         , A.AMDT_SEQ" ).append("\n"); 
		query.append("         , A.CUST_NM" ).append("\n"); 
		query.append("         , A.PROP_OFC_CD" ).append("\n"); 
		query.append("         , A.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("         , A.EFF_DT" ).append("\n"); 
		query.append("         , A.CTRT_EFF_DT" ).append("\n"); 
		query.append("         , A.CTRT_EXP_DT" ).append("\n"); 
		query.append("         , A.SVC_SCP_CD" ).append("\n"); 
		query.append("         , A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("         , A.BLET_DP_SEQ" ).append("\n"); 
		query.append("         , A.ROUT_SEQ" ).append("\n"); 
		query.append("         , A.RT_SEQ" ).append("\n"); 
		query.append("         , A.MOF_LANE_CD" ).append("\n"); 
		query.append("         , A.MOF_ORG_LOC_CD" ).append("\n"); 
		query.append("         , A.MOF_DEST_LOC_CD" ).append("\n"); 
		query.append("         , A.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("         , A.TYPE_CD" ).append("\n"); 
		query.append("         , A.RAT_UT_CD" ).append("\n"); 
		query.append("         , A.SIZE_CD" ).append("\n"); 
		query.append("         , A.CURR_CD" ).append("\n"); 
		query.append("         , A.FNL_FRT_RT_AMT" ).append("\n"); 
		query.append("         , B.ROUT_CS_NO" ).append("\n"); 
		query.append("         , B.ROUT_CS_SRC_DT" ).append("\n"); 
		query.append("         , A.ORG_LOC_CD AS POR_CD" ).append("\n"); 
		query.append("         , DECODE(B.ROUT_CS_NO, NULL, A.ORG_LOC_CD, B.POL_CD) AS POL_CD -- ROUTE CASE에 값이 없는 경우 POR을 POL에 적용" ).append("\n"); 
		query.append("         , B.N1ST_TS_PORT_CD" ).append("\n"); 
		query.append("         , B.N2ND_TS_PORT_CD" ).append("\n"); 
		query.append("         , B.N3RD_TS_PORT_CD" ).append("\n"); 
		query.append("         , DECODE(B.ROUT_CS_NO, NULL, A.DEST_LOC_CD, B.POD_CD) AS POD_CD -- ROUTE CASE에 값이 없는 경우 DEL을 POD에 적용" ).append("\n"); 
		query.append("         , A.DEST_LOC_CD AS DEL_CD" ).append("\n"); 
		query.append("         , B.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("         , NVL(B.BKG_RCV_TERM_CD, 'Y') AS BKG_RCV_TERM_CD -- ROUTE CASE에 값이 없는 경우 무조건 CY Term으로 " ).append("\n"); 
		query.append("         , NVL(B.BKG_DE_TERM_CD, 'Y')  AS BKG_DE_TERM_CD -- ROUTE CASE에 값이 없는 경우 무조건 CY Term으로 " ).append("\n"); 
		query.append("         , B.N1ST_FINC_VVD_CD" ).append("\n"); 
		query.append("         , B.N2ND_FINC_VVD_CD" ).append("\n"); 
		query.append("         , B.N3RD_FINC_VVD_CD" ).append("\n"); 
		query.append("         , B.N4TH_FINC_VVD_CD" ).append("\n"); 
		query.append("         , B.N1ST_RLANE_CD" ).append("\n"); 
		query.append("         , B.N2ND_RLANE_CD" ).append("\n"); 
		query.append("         , B.N3RD_RLANE_CD" ).append("\n"); 
		query.append("         , B.N4TH_RLANE_CD" ).append("\n"); 
		query.append("         , B.TRSP_RAIL_DIR_KNT" ).append("\n"); 
		query.append("         , CUST_TP_CD" ).append("\n"); 
		query.append("         , CASE WHEN B.ROUT_CS_NO IS NULL      THEN '1' -- 없는 Route Case" ).append("\n"); 
		query.append("                WHEN USD_ROUT_CS_SEL_FLG = 'Y' THEN '2' -- Calculate Batch에서 계산한 값" ).append("\n"); 
		query.append("                ELSE '3'                                -- Route Case는 있으나 SCG는 계산안된 케이스" ).append("\n"); 
		query.append("           END AS ROUT_SCG_TP" ).append("\n"); 
		query.append("         , NVL(USD_ROUT_CS_SEL_FLG, 'E') AS USD_ROUT_CS_SEL_FLG" ).append("\n"); 
		query.append("      FROM RFA_ROUT_LIST A" ).append("\n"); 
		query.append("         , USD_ROUT_CASE B" ).append("\n"); 
		query.append("     WHERE A.PROP_NO        = B.PROP_NO(+)" ).append("\n"); 
		query.append("       AND A.AMDT_SEQ       = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("       AND A.SVC_SCP_CD     = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("       AND A.CMDT_HDR_SEQ   = B.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("       AND A.ROUT_SEQ       = B.ROUT_SEQ(+)" ).append("\n"); 
		query.append("       AND A.RT_SEQ         = B.RT_SEQ(+)" ).append("\n"); 
		query.append("       AND A.ORG_LOC_CD     = B.POR_CD(+)" ).append("\n"); 
		query.append("       AND A.DEST_LOC_CD    = B.DEL_CD(+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("-- 여기서 부터 기존 Calculate에서 가져온 소스" ).append("\n"); 
		query.append(",BQ AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    CTRT_TP_CD     ," ).append("\n"); 
		query.append("    CTRT_NO," ).append("\n"); 
		query.append("    PROP_NO       ," ).append("\n"); 
		query.append("    AMDT_SEQ      ," ).append("\n"); 
		query.append("    SVC_SCP_CD     ," ).append("\n"); 
		query.append("    CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("    BLET_DP_SEQ," ).append("\n"); 
		query.append("    ROUT_SEQ      ," ).append("\n"); 
		query.append("    RT_SEQ       ," ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    CUST_NM," ).append("\n"); 
		query.append("    PROP_OFC_CD," ).append("\n"); 
		query.append("    PROP_APRO_OFC_CD," ).append("\n"); 
		query.append("    EFF_DT," ).append("\n"); 
		query.append("    CTRT_EFF_DT," ).append("\n"); 
		query.append("    CTRT_EXP_DT," ).append("\n"); 
		query.append("    ROUT_SCG_TP," ).append("\n"); 
		query.append("    MOF_LANE_CD," ).append("\n"); 
		query.append("    MOF_ORG_LOC_CD," ).append("\n"); 
		query.append("    MOF_DEST_LOC_CD," ).append("\n"); 
		query.append("    TYPE_CD," ).append("\n"); 
		query.append("    SIZE_CD," ).append("\n"); 
		query.append("    USD_ROUT_CS_SEL_FLG," ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    CURR_CD		," ).append("\n"); 
		query.append("    FNL_FRT_RT_AMT   ," ).append("\n"); 
		query.append("    DIR_CALL_FLG    ," ).append("\n"); 
		query.append("    CTRT_CNTR_TPSZ_CD  ," ).append("\n"); 
		query.append("    CTRT_CNTR_SZ_CD   ," ).append("\n"); 
		query.append("    PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    POR_CD       ," ).append("\n"); 
		query.append("    POR_STE_CD     ," ).append("\n"); 
		query.append("    POR_RGN_CD     ," ).append("\n"); 
		query.append("    POR_CNT_CD     ," ).append("\n"); 
		query.append("    POR_CONTI_CD    ," ).append("\n"); 
		query.append("    POL_CD       ," ).append("\n"); 
		query.append("    POL_STE_CD     ," ).append("\n"); 
		query.append("    POL_RGN_CD     ," ).append("\n"); 
		query.append("    POL_CNT_CD     ," ).append("\n"); 
		query.append("    POL_CONTI_CD    ," ).append("\n"); 
		query.append("    POD_CD       ," ).append("\n"); 
		query.append("    POD_STE_CD     ," ).append("\n"); 
		query.append("    POD_RGN_CD     ," ).append("\n"); 
		query.append("    POD_CNT_CD     ," ).append("\n"); 
		query.append("    POD_CONTI_CD    ," ).append("\n"); 
		query.append("    DEL_CD       ," ).append("\n"); 
		query.append("    DEL_STE_CD     ," ).append("\n"); 
		query.append("    DEL_RGN_CD     ," ).append("\n"); 
		query.append("    DEL_CNT_CD     ," ).append("\n"); 
		query.append("    DEL_CONTI_CD    ," ).append("\n"); 
		query.append("    RCV_TERM_CD     ," ).append("\n"); 
		query.append("    DE_TERM_CD     ," ).append("\n"); 
		query.append("    N1ST_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N2ND_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N3RD_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N4TH_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N1ST_RLANE_CD    ," ).append("\n"); 
		query.append("    N2ND_RLANE_CD    ," ).append("\n"); 
		query.append("    N3RD_RLANE_CD    ," ).append("\n"); 
		query.append("    N4TH_RLANE_CD    ," ).append("\n"); 
		query.append("    N1ST_POL_CONTI_CD          ," ).append("\n"); 
		query.append("    N2ND_POL_CONTI_CD          ," ).append("\n"); 
		query.append("    N3RD_POL_CONTI_CD          ," ).append("\n"); 
		query.append("    N4TH_POL_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    N2ND_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    N3RD_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    N4TH_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    N1ST_POL_CD          ," ).append("\n"); 
		query.append("    N2ND_POL_CD          ," ).append("\n"); 
		query.append("    N3RD_POL_CD          ," ).append("\n"); 
		query.append("    N4TH_POL_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_POD_CD          ," ).append("\n"); 
		query.append("    N2ND_POD_CD          ," ).append("\n"); 
		query.append("    N3RD_POD_CD          ," ).append("\n"); 
		query.append("    N4TH_POD_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_TS_PORT_CD   ," ).append("\n"); 
		query.append("    N2ND_TS_PORT_CD   ," ).append("\n"); 
		query.append("    N3RD_TS_PORT_CD   ," ).append("\n"); 
		query.append("    CML_ZN_CD      ," ).append("\n"); 
		query.append("    USA_SVC_MOD_CD   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'TD' THEN 'T'" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'RD' THEN 'R'" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'WD' THEN  DECODE(POR_CD, POL_CD,'F', 'B')" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'TR' THEN 'A'" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'TW' THEN  DECODE(POR_CD, POL_CD,'E', 'U')" ).append("\n"); 
		query.append("    END ORG_TRNS_MOD_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'TD' THEN 'T'" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'RD' THEN 'R'" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'WD' THEN  DECODE(DEL_CD, POD_CD,'F', 'B')" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'TR' THEN 'A'" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'TW' THEN  DECODE(DEL_CD, POD_CD,'E', 'U')" ).append("\n"); 
		query.append("    END DEST_TRNS_MOD_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    PRD_RD_CNT," ).append("\n"); 
		query.append("    CUST_TP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM  (" ).append("\n"); 
		query.append("    SELECT ROWNUM BQ_SEQ     ," ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        'R' CTRT_TP_CD    ," ).append("\n"); 
		query.append("        CTRT_NO," ).append("\n"); 
		query.append("        PROP_NO      ," ).append("\n"); 
		query.append("        AMDT_SEQ      ," ).append("\n"); 
		query.append("        SVC_SCP_CD     ," ).append("\n"); 
		query.append("        CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("        BLET_DP_SEQ," ).append("\n"); 
		query.append("        ROUT_SEQ      ," ).append("\n"); 
		query.append("        RT_SEQ       ," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        CUST_NM," ).append("\n"); 
		query.append("        PROP_OFC_CD," ).append("\n"); 
		query.append("        PROP_APRO_OFC_CD," ).append("\n"); 
		query.append("        EFF_DT," ).append("\n"); 
		query.append("        CTRT_EFF_DT," ).append("\n"); 
		query.append("        CTRT_EXP_DT," ).append("\n"); 
		query.append("        ROUT_SCG_TP," ).append("\n"); 
		query.append("        MOF_LANE_CD," ).append("\n"); 
		query.append("        MOF_ORG_LOC_CD," ).append("\n"); 
		query.append("        MOF_DEST_LOC_CD," ).append("\n"); 
		query.append("        TYPE_CD," ).append("\n"); 
		query.append("        SIZE_CD," ).append("\n"); 
		query.append("        USD_ROUT_CS_SEL_FLG," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        CURR_CD		," ).append("\n"); 
		query.append("        FNL_FRT_RT_AMT  ," ).append("\n"); 
		query.append("        NULL DIR_CALL_FLG  ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN RAT_UT_CD = '20' THEN 'D2'" ).append("\n"); 
		query.append("        WHEN RAT_UT_CD = '40' THEN 'D4'" ).append("\n"); 
		query.append("        WHEN RAT_UT_CD = 'HC' THEN 'D5'" ).append("\n"); 
		query.append("        WHEN RAT_UT_CD = '45' THEN 'D7'" ).append("\n"); 
		query.append("        WHEN RAT_UT_CD = 'BL' THEN 'F4'" ).append("\n"); 
		query.append("        ELSE RAT_UT_CD" ).append("\n"); 
		query.append("        END CTRT_CNTR_TPSZ_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--        ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = CASE" ).append("\n"); 
		query.append("--                                         WHEN RAT_UT_CD = '20' THEN 'D2'" ).append("\n"); 
		query.append("--                                         WHEN RAT_UT_CD = '40' THEN 'D4'" ).append("\n"); 
		query.append("--                                         WHEN RAT_UT_CD = 'HC' THEN 'D5'" ).append("\n"); 
		query.append("--                                         WHEN RAT_UT_CD = '45' THEN 'D7'" ).append("\n"); 
		query.append("--                                         WHEN RAT_UT_CD = 'BL' THEN 'F4'" ).append("\n"); 
		query.append("--                                         ELSE RAT_UT_CD" ).append("\n"); 
		query.append("--                                         END ) CTRT_CNTR_SZ_CD ," ).append("\n"); 
		query.append("        RAT_UT_CD CTRT_CNTR_SZ_CD ," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        RC.PRC_CGO_TP_CD  ," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        RC.POR_CD              ," ).append("\n"); 
		query.append("        L1.CNT_CD||L1.STE_CD POR_STE_CD  ," ).append("\n"); 
		query.append("        L1.RGN_CD       POR_RGN_CD  ," ).append("\n"); 
		query.append("        L1.CNT_CD       POR_CNT_CD  ," ).append("\n"); 
		query.append("        L1.CONTI_CD      POR_CONTI_CD ," ).append("\n"); 
		query.append("        RC.POL_CD              ," ).append("\n"); 
		query.append("        L2.CNT_CD||L2.STE_CD POL_STE_CD  ," ).append("\n"); 
		query.append("        L2.RGN_CD       POL_RGN_CD  ," ).append("\n"); 
		query.append("        L2.CNT_CD       POL_CNT_CD  ," ).append("\n"); 
		query.append("        L2.CONTI_CD      POL_CONTI_CD ," ).append("\n"); 
		query.append("        RC.POD_CD              ," ).append("\n"); 
		query.append("        L3.CNT_CD||L3.STE_CD POD_STE_CD  ," ).append("\n"); 
		query.append("        L3.RGN_CD       POD_RGN_CD  ," ).append("\n"); 
		query.append("        L3.CNT_CD       POD_CNT_CD  ," ).append("\n"); 
		query.append("        L3.CONTI_CD      POD_CONTI_CD ," ).append("\n"); 
		query.append("        RC.DEL_CD              ," ).append("\n"); 
		query.append("        L4.CNT_CD||L4.STE_CD DEL_STE_CD  ," ).append("\n"); 
		query.append("        L4.RGN_CD       DEL_RGN_CD  ," ).append("\n"); 
		query.append("        L4.CNT_CD       DEL_CNT_CD  ," ).append("\n"); 
		query.append("        L4.CONTI_CD      DEL_CONTI_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        --------------- T : Tackle, I : Free In, N : Liner In, S : CFS ---------------" ).append("\n"); 
		query.append("        DECODE( RC.BKG_RCV_TERM_CD, 'T', 'Y', 'I', 'Y', 'N', 'Y', 'S', 'Y', RC.BKG_RCV_TERM_CD ) RCV_TERM_CD   ," ).append("\n"); 
		query.append("        --------------- T : Tackle, O : Free Out, U : Liner Out, S : CFS ---------------" ).append("\n"); 
		query.append("        DECODE( RC.BKG_DE_TERM_CD, 'T', 'Y', 'O', 'Y', 'U', 'Y', 'S', 'Y', RC.BKG_DE_TERM_CD ) DE_TERM_CD   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.N1ST_FINC_VVD_CD         ," ).append("\n"); 
		query.append("        RC.N2ND_FINC_VVD_CD         ," ).append("\n"); 
		query.append("        RC.N3RD_FINC_VVD_CD         ," ).append("\n"); 
		query.append("        RC.N4TH_FINC_VVD_CD         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.N1ST_RLANE_CD          ," ).append("\n"); 
		query.append("        RC.N2ND_RLANE_CD          ," ).append("\n"); 
		query.append("        RC.N3RD_RLANE_CD          ," ).append("\n"); 
		query.append("        RC.N4TH_RLANE_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.POL_CD)  				AS N1ST_POL_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N1ST_TS_PORT_CD) 		AS N2ND_POL_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N2ND_TS_PORT_CD) 		AS N3RD_POL_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N3RD_TS_PORT_CD) 		AS N4TH_POL_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD)) 				AS N1ST_POD_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N2ND_POD_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N3RD_POD_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)) AS N4TH_POD_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.POL_CD  				AS N1ST_POL_CD          ," ).append("\n"); 
		query.append("        RC.N1ST_TS_PORT_CD 		AS N2ND_POL_CD          ," ).append("\n"); 
		query.append("        RC.N2ND_TS_PORT_CD 		AS N3RD_POL_CD          ," ).append("\n"); 
		query.append("        RC.N3RD_TS_PORT_CD 		AS N4TH_POL_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD) 				                            AS N1ST_POD_CD          ," ).append("\n"); 
		query.append("        NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N2ND_POD_CD          ," ).append("\n"); 
		query.append("        NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N3RD_POD_CD          ," ).append("\n"); 
		query.append("        DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)                           AS N4TH_POD_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.N1ST_TS_PORT_CD         ," ).append("\n"); 
		query.append("        RC.N2ND_TS_PORT_CD         ," ).append("\n"); 
		query.append("        RC.N3RD_TS_PORT_CD         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'" ).append("\n"); 
		query.append("        ELSE 'NN'" ).append("\n"); 
		query.append("        END CML_ZN_CD   ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN L3.CNT_CD IN ( 'US', 'CA' ) AND RC.POD_CD = RC.DEL_CD AND RC.BKG_DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("        WHEN L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')" ).append("\n"); 
		query.append("        WHEN L2.CNT_CD IN ( 'US', 'CA' ) AND RC.POL_CD = RC.POR_CD AND RC.BKG_RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("        WHEN L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')" ).append("\n"); 
		query.append("        END  USA_SVC_MOD_CD , -- PO, LO, IP, ML, OT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        ( SELECT AC.ACT_GRP_CD FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND AC.N1ST_NOD_CD LIKE RC.POR_CD||'%' AND ROWNUM = 1 ) ORG_TRNS_MOD_CD ," ).append("\n"); 
		query.append("        ( SELECT AC.ACT_GRP_CD FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND COALESCE(AC.N4TH_NOD_CD, AC.N3RD_NOD_CD, AC.N2ND_NOD_CD) LIKE RC.DEL_CD||'%' AND ROWNUM = 1 ) DEST_TRNS_MOD_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NVL(RC.TRSP_RAIL_DIR_KNT, 0)	PRD_RD_CNT,	-- PRD에서  rail direct 갯수  " ).append("\n"); 
		query.append("        CUST_TP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    FROM  ALL_ROUT_CASE       RC ," ).append("\n"); 
		query.append("          MDM_LOCATION        L1 ," ).append("\n"); 
		query.append("          MDM_LOCATION        L2 ," ).append("\n"); 
		query.append("          MDM_LOCATION        L3 ," ).append("\n"); 
		query.append("          MDM_LOCATION        L4" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    WHERE  1 = 1" ).append("\n"); 
		query.append("    AND   L1.LOC_CD        = RC.POR_CD" ).append("\n"); 
		query.append("    AND   L2.LOC_CD(+)     = RC.POL_CD" ).append("\n"); 
		query.append("    AND   L3.LOC_CD(+)     = RC.POD_CD" ).append("\n"); 
		query.append("    AND   L4.LOC_CD        = RC.DEL_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("), USD_ROUT_CASE_SCG AS (" ).append("\n"); 
		query.append("    SELECT BQ_SEQ," ).append("\n"); 
		query.append("           BQ.PROP_NO," ).append("\n"); 
		query.append("           BQ.AMDT_SEQ," ).append("\n"); 
		query.append("           BQ.SVC_SCP_CD," ).append("\n"); 
		query.append("           BQ.CMDT_HDR_SEQ," ).append("\n"); 
		query.append("           BQ.ROUT_SEQ," ).append("\n"); 
		query.append("           BQ.RT_SEQ," ).append("\n"); 
		query.append("           BQ.POR_CD," ).append("\n"); 
		query.append("           BQ.DEL_CD," ).append("\n"); 
		query.append("           B.CHG_CD," ).append("\n"); 
		query.append("           B.BKG_RAT_UT_CD AS RAT_UT_CD," ).append("\n"); 
		query.append("           DECODE(MOF_ID, 'BAF', 'USD', B.CURR_CD) AS CURR_CD," ).append("\n"); 
		query.append("           -- BAF는 합산을 해야 하니 모두 USD로 치환" ).append("\n"); 
		query.append("           CASE WHEN C.MOF_ID = 'BAF' AND B.ADJ_FLG = 'Y'" ).append("\n"); 
		query.append("                     THEN B.ADJ_SCG_USD_AMT" ).append("\n"); 
		query.append("                WHEN C.MOF_ID = 'BAF' AND B.ADJ_FLG = 'N'" ).append("\n"); 
		query.append("                     THEN TRUNC(B.TRF_SCG_AMT / DECODE(NVL(USD_LOCL_XCH_RT,0), 0, 1, USD_LOCL_XCH_RT), 2)" ).append("\n"); 
		query.append("                ELSE ADJ_SCG_AMT" ).append("\n"); 
		query.append("           END AS SCG_AMT" ).append("\n"); 
		query.append("      FROM BQ" ).append("\n"); 
		query.append("         , PRI_RP_SCP_RT_SCG    B" ).append("\n"); 
		query.append("         , PRI_MOF_MAPG         C" ).append("\n"); 
		query.append("         , GL_MON_XCH_RT XR" ).append("\n"); 
		query.append("     WHERE BQ.PROP_NO        = B.PROP_NO" ).append("\n"); 
		query.append("       AND BQ.AMDT_SEQ       = B.AMDT_SEQ" ).append("\n"); 
		query.append("       AND BQ.SVC_SCP_CD     = B.SVC_SCP_CD" ).append("\n"); 
		query.append("       AND BQ.CMDT_HDR_SEQ   = B.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("       AND BQ.ROUT_SEQ       = B.ROUT_SEQ" ).append("\n"); 
		query.append("       AND BQ.RT_SEQ         = B.RT_SEQ" ).append("\n"); 
		query.append("       AND BQ.USD_ROUT_CS_SEL_FLG = 'Y'" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND XR.ACCT_XCH_RT_YRMON = TO_CHAR(BQ.EFF_DT , 'YYYYMM')" ).append("\n"); 
		query.append("       AND XR.ACCT_XCH_RT_LVL   = '1'" ).append("\n"); 
		query.append("       AND XR.CURR_CD           =  B.CURR_CD" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append("       AND B.CHG_CD             = C.HJS_ID" ).append("\n"); 
		query.append("       AND C.MAPG_TP_CD         = 'SCG'" ).append("\n"); 
		query.append("       AND C.FILE_USE_ONY_FLG   = 'Y'" ).append("\n"); 
		query.append("       AND C.DELT_FLG           = 'N'" ).append("\n"); 
		query.append("       ---------------------------------------" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("--GL AS (" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--GROUP LOCATION 을 SELECT 한다." ).append("\n"); 
		query.append("--S/C 의 경우는 NOTE CONVERSION 에서 사용하는 GROUP LOCATION ( 'EAST', 'WEST' ) 도 포함시킨다." ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("-- 사용하지 않기에 삭제." ).append("\n"); 
		query.append("--) ," ).append("\n"); 
		query.append("NC AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--BOOKING 에 해당하는 NOTE CONVERSION 을 SELECT 한다." ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("SELECT BQ.BQ_SEQ       ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_MAPG_ID ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_SEQ   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    NC.NOTE_CONV_TP_CD          ," ).append("\n"); 
		query.append("    (	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO	," ).append("\n"); 
		query.append("    NC.CHG_RULE_TP_CD           ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_CHG_CD         ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_RULE_CD        ," ).append("\n"); 
		query.append("    NC.RT_APPL_TP_CD            ," ).append("\n"); 
		query.append("    NC.RT_OP_CD                 ," ).append("\n"); 
		query.append("    NC.CURR_CD                  ," ).append("\n"); 
		query.append("    NC.FRT_RT_AMT               ," ).append("\n"); 
		query.append("    NC.PAY_TERM_CD              ," ).append("\n"); 
		query.append("    NC.BKG_RAT_UT_CD      ," ).append("\n"); 
		query.append("    NC.BKG_PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, NC.CHG_RULE_TP_CD, NC.NOTE_CONV_CHG_CD, NC.NOTE_CONV_RULE_CD, DECODE(NC.CHG_RULE_TP_CD, 'C', NC.BKG_RAT_UT_CD)" ).append("\n"); 
		query.append("              ORDER BY" ).append("\n"); 
		query.append("               ( SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) ," ).append("\n"); 
		query.append("                DECODE(BKG_POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                + DECODE(BKG_POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                + DECODE(BKG_POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                + DECODE(BKG_DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                + DECODE(BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, NULL, 4, 6)" ).append("\n"); 
		query.append("                + DECODE(BKG_PRC_CGO_TP_CD  , NULL, 0, 1)" ).append("\n"); 
		query.append("                + DECODE(BKG_SLAN_CD     , NULL, 0, 1)" ).append("\n"); 
		query.append("                + DECODE(BKG_VSL_CD      , NULL, 0, 1)" ).append("\n"); 
		query.append("                + DECODE(BKG_TS_PORT_DEF_CD  , NULL, 0, 1) DESC ," ).append("\n"); 
		query.append("               NC.FRT_RT_AMT     ," ).append("\n"); 
		query.append("               NC.NOTE_CONV_MAPG_ID ," ).append("\n"); 
		query.append("               NC.NOTE_CONV_SEQ" ).append("\n"); 
		query.append("              ) ROW_NUMBER ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    NULL CONV_RAT_UT_CD      ," ).append("\n"); 
		query.append("    NULL CONV_PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    NULL CONV_ORG_LOC_TP_CD        ," ).append("\n"); 
		query.append("    NULL CONV_ORG_LOC_DEF_CD       ," ).append("\n"); 
		query.append("    NULL CONV_ORG_VIA_LOC_TP_CD    ," ).append("\n"); 
		query.append("    NULL CONV_ORG_VIA_LOC_DEF_CD   ," ).append("\n"); 
		query.append("    NULL CONV_DEST_VIA_LOC_TP_CD   ," ).append("\n"); 
		query.append("    NULL CONV_DEST_VIA_LOC_DEF_CD ," ).append("\n"); 
		query.append("    NULL CONV_DEST_LOC_TP_CD     ," ).append("\n"); 
		query.append("    NULL CONV_DEST_LOC_DEF_CD      ," ).append("\n"); 
		query.append("    NULL CONV_PRC_RCV_TERM_CD      ," ).append("\n"); 
		query.append("    NULL CONV_PRC_DE_TERM_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM  BQ ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT NC.*" ).append("\n"); 
		query.append("    FROM  PRI_RFA_NOTE_CONV NC, RFA_LIST LST" ).append("\n"); 
		query.append("    WHERE  NC.PROP_NO  = LST.PROP_NO" ).append("\n"); 
		query.append("    AND   NC.AMDT_SEQ  = LST.AMDT_SEQ" ).append("\n"); 
		query.append("    AND   NC.SVC_SCP_CD = LST.SVC_SCP_CD" ).append("\n"); 
		query.append("-- 2010.02.24 NOTE 는 날짜 의미 없음. ( 김진철 과장 )" ).append("\n"); 
		query.append("--    AND   TO_DATE(SYSDATE) BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999  -- 0.99999 는 23시 59분 59초를 의미" ).append("\n"); 
		query.append("-----------------BASE TABLE----------------------" ).append("\n"); 
		query.append("    AND   NC.NOTE_CONV_CHG_CD IN (" ).append("\n"); 
		query.append("        SELECT HJS_ID" ).append("\n"); 
		query.append("          FROM PRI_MOF_MAPG" ).append("\n"); 
		query.append("         WHERE MAPG_TP_CD = 'SCG'" ).append("\n"); 
		query.append("           AND FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("           AND DELT_FLG = 'N'" ).append("\n"); 
		query.append("       )" ).append("\n"); 
		query.append("-----------------BASE TABLE----------------------" ).append("\n"); 
		query.append("    ) NC             ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    MDM_CHARGE        MC" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE  MC.CHG_CD(+)      = NC.NOTE_CONV_CHG_CD" ).append("\n"); 
		query.append("  AND  USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상." ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.NOTE_CONV_TP_CD  IN ( 'T', 'P' )" ).append("\n"); 
		query.append("    OR NC.NOTE_CONV_MAPG_ID IN" ).append("\n"); 
		query.append("      (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      SELECT CN.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("      FROM  PRI_RP_SCP_RT_CNOTE CN" ).append("\n"); 
		query.append("      WHERE  CN.PROP_NO      = BQ.PROP_NO" ).append("\n"); 
		query.append("      AND   CN.AMDT_SEQ      = BQ.AMDT_SEQ" ).append("\n"); 
		query.append("      AND   CN.SVC_SCP_CD     = BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("      AND   CN.CMDT_HDR_SEQ    = BQ.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("      AND   CN.SRC_INFO_CD(+)    <> 'AD'" ).append("\n"); 
		query.append("      UNION ALL" ).append("\n"); 
		query.append("      SELECT RN.NOTE_CONV_MAPG_ID" ).append("\n"); 
		query.append("      FROM  PRI_RP_SCP_RT_CMDT_RNOTE RN" ).append("\n"); 
		query.append("      WHERE  RN.PROP_NO      = BQ.PROP_NO" ).append("\n"); 
		query.append("      AND   RN.AMDT_SEQ      = BQ.AMDT_SEQ" ).append("\n"); 
		query.append("      AND   RN.SVC_SCP_CD     = BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("      AND   RN.CMDT_HDR_SEQ    = BQ.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("      AND   RN.ROUT_SEQ      = BQ.ROUT_SEQ" ).append("\n"); 
		query.append("      AND   RN.SRC_INFO_CD(+)    <> 'AD'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--NOT RULE CODE 는 SURCHARGE 에서만 사용되며," ).append("\n"); 
		query.append("--TYP RULE CODE 는 OFT 에 사용되는 것이 기본이지만, SURCHARGE 에서도 사용된다." ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.CHG_RULE_TP_CD   = 'C'" ).append("\n"); 
		query.append("    OR" ).append("\n"); 
		query.append("      (" ).append("\n"); 
		query.append("        NC.CHG_RULE_TP_CD   = 'R'" ).append("\n"); 
		query.append("      AND NC.NOTE_CONV_RULE_CD IN ( 'NOT', 'TYP' )" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< RATING UNIT >" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      (" ).append("\n"); 
		query.append("        NC.CHG_RULE_TP_CD  = 'C' ---- charge code 는  아래 C1 에서 처리함" ).append("\n"); 
		query.append("      AND NC.BKG_RAT_UT_CD  NOT IN ( 'MT', 'CM' )" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    OR (" ).append("\n"); 
		query.append("          NC.BKG_RAT_UT_CD IS NULL" ).append("\n"); 
		query.append("        OR NC.BKG_RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        OR NC.BKG_RAT_UT_CD IN ( 'BX', 'BL' )" ).append("\n"); 
		query.append("            OR" ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             NC.BKG_RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("          AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.BKG_RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("---- < CARGO TYPE >" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_PRC_CGO_TP_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_PRC_CGO_TP_CD IN BQ.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< ROUTE >" ).append("\n"); 
		query.append("--STANDARD NOTE 의 경우는 GROUP 을 사용하지 않으므로," ).append("\n"); 
		query.append("--STANDARD NOTE 를 위한 특별한 고려가 필요하지 않음." ).append("\n"); 
		query.append("-------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("---- POR --/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_POR_DEF_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_POR_DEF_CD = DECODE(NC.BKG_POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("---- POL --/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_POL_DEF_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_POL_DEF_CD = DECODE(NC.BKG_POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("---- POD --/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_POD_DEF_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_POD_DEF_CD = DECODE(NC.BKG_POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("---- DEL --/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_DEL_DEF_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_DEL_DEF_CD = DECODE(NC.BKG_DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< LANE & VVD >" ).append("\n"); 
		query.append("--TRUNK, T/S 구분없이 LANE 이나 VVD 가 존재하는지 여부로 판단한다." ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_SLAN_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_SLAN_Cd IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND   (  NC.BKG_VSL_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_VSL_CD||NC.BKG_SKD_VOY_NO||NC.BKG_SKD_DIR_CD IN ( BQ.N1ST_FINC_VVD_CD, BQ.N2ND_FINC_VVD_CD, BQ.N3RD_FINC_VVD_CD, BQ.N4TH_FINC_VVD_CD )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< T/S PORT >" ).append("\n"); 
		query.append("--T/S 가 발생하는 PORT 를 대상으로 한다." ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("AND   (" ).append("\n"); 
		query.append("      NC.BKG_TS_PORT_DEF_CD IS NULL" ).append("\n"); 
		query.append("    OR NC.BKG_TS_PORT_DEF_CD IN" ).append("\n"); 
		query.append("      (" ).append("\n"); 
		query.append("      SELECT DECODE(NC.BKG_TS_PORT_TP_CD, 'L', A.LOC_CD, 'T', A.CNT_CD||A.STE_CD, 'R', A.RGN_CD, 'C', A.CNT_CD)" ).append("\n"); 
		query.append("      FROM  MDM_LOCATION  A" ).append("\n"); 
		query.append("      WHERE  A.LOC_CD IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("NC_P AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--적용될 CONVERSION 이 같은 NOTE_CONV_TP_CD 에서 하나의 NOTE_CONV_RULE_CD 가 되도록 우선순위가 낮은 것을 제거한다." ).append("\n"); 
		query.append("--우선순위가 똑같은 경우에는 NOTE_CONV_MAPG_ID||LPAD(NOTE_CONV_SEQ, 6, '0') 가 적은 것을 우선한다." ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--'TYP' 1개의 RULE CODE 를 가진 BKG DATA 를 UNION ALL 로 추가한다." ).append("\n"); 
		query.append("--이 부분은 계약과 BKG 를 직접 비교하지 않고, NOTE CONV 와만 비교하도록 하기 위함이다." ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT NC.BQ_SEQ          ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_MAPG_ID    ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_SEQ      ," ).append("\n"); 
		query.append("    'C' BKG_CONV_TP_CD     ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_TP_CD     ," ).append("\n"); 
		query.append("    NC.CONV_TP_PRIO			," ).append("\n"); 
		query.append("    NC.CHG_RULE_TP_CD           ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_CHG_CD         ," ).append("\n"); 
		query.append("    NC.NOTE_CONV_RULE_CD    ," ).append("\n"); 
		query.append("    NC.CONV_RAT_UT_CD      ," ).append("\n"); 
		query.append("    ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.CONV_RAT_UT_CD ) CONV_RAT_UT_SZ_CD  ," ).append("\n"); 
		query.append("    NC.CONV_PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    NC.CONV_ORG_LOC_TP_CD    ," ).append("\n"); 
		query.append("    NC.CONV_ORG_LOC_DEF_CD   ," ).append("\n"); 
		query.append("    NC.CONV_ORG_VIA_LOC_TP_CD  ," ).append("\n"); 
		query.append("    NC.CONV_ORG_VIA_LOC_DEF_CD ," ).append("\n"); 
		query.append("    NC.CONV_DEST_VIA_LOC_TP_CD ," ).append("\n"); 
		query.append("    NC.CONV_DEST_VIA_LOC_DEF_CD ," ).append("\n"); 
		query.append("    NC.CONV_DEST_LOC_TP_CD   ," ).append("\n"); 
		query.append("    NC.CONV_DEST_LOC_DEF_CD   ," ).append("\n"); 
		query.append("    NC.CONV_PRC_RCV_TERM_CD   ," ).append("\n"); 
		query.append("    NC.CONV_PRC_DE_TERM_CD   ," ).append("\n"); 
		query.append("    NC.BKG_RAT_UT_CD      ," ).append("\n"); 
		query.append("    NC.BKG_PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    NC.RT_APPL_TP_CD      ," ).append("\n"); 
		query.append("    NC.RT_OP_CD         ," ).append("\n"); 
		query.append("    NC.CURR_CD         ," ).append("\n"); 
		query.append("    NC.FRT_RT_AMT        ," ).append("\n"); 
		query.append("    NC.PAY_TERM_CD" ).append("\n"); 
		query.append("FROM  NC" ).append("\n"); 
		query.append("WHERE  ROW_NUMBER = 1" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT BQ.BQ_SEQ                    ," ).append("\n"); 
		query.append("    NULL         NOTE_CONV_MAPG_ID     ," ).append("\n"); 
		query.append("    NULL         NOTE_CONV_SEQ       ," ).append("\n"); 
		query.append("    'B'          BKG_CONV_TP_CD      ," ).append("\n"); 
		query.append("    NULL         NOTE_CONV_TP_CD      ," ).append("\n"); 
		query.append("    0			 CONV_TP_PRIO			," ).append("\n"); 
		query.append("    'R'          CHG_RULE_TP_CD            ," ).append("\n"); 
		query.append("    NULL         NOTE_CONV_CHG_CD     ," ).append("\n"); 
		query.append("    RC.NOTE_CONV_RULE_CD NOTE_CONV_RULE_CD     ," ).append("\n"); 
		query.append("    BQ.CTRT_CNTR_TPSZ_CD CONV_RAT_UT_CD      ," ).append("\n"); 
		query.append("    ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD ) CONV_RAT_UT_SZ_CD  ," ).append("\n"); 
		query.append("    BQ.PRC_CGO_TP_CD   CONV_PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    'L'          CONV_ORG_LOC_TP_CD    ," ).append("\n"); 
		query.append("    BQ.POR_CD       CONV_ORG_LOC_DEF_CD    ," ).append("\n"); 
		query.append("    'L'          CONV_ORG_VIA_LOC_TP_CD  ," ).append("\n"); 
		query.append("    BQ.POL_CD       CONV_ORG_VIA_LOC_DEF_CD  ," ).append("\n"); 
		query.append("    'L'          CONV_DEST_VIA_LOC_TP_CD  ," ).append("\n"); 
		query.append("    BQ.POD_CD       CONV_DEST_VIA_LOC_DEF_CD ," ).append("\n"); 
		query.append("    'L'          CONV_DEST_LOC_TP_CD    ," ).append("\n"); 
		query.append("    BQ.DEL_CD       CONV_DEST_LOC_DEF_CD   ," ).append("\n"); 
		query.append("    BQ.RCV_TERM_CD    CONV_PRC_RCV_TERM_CD   ," ).append("\n"); 
		query.append("    BQ.DE_TERM_CD     CONV_PRC_DE_TERM_CD    ," ).append("\n"); 
		query.append("    BQ.CTRT_CNTR_TPSZ_CD BKG_RAT_UT_CD       ," ).append("\n"); 
		query.append("    BQ.PRC_CGO_TP_CD   BKG_PRC_CGO_TP_CD     ," ).append("\n"); 
		query.append("    NULL         RT_APPL_TP_CD       ," ).append("\n"); 
		query.append("    NULL         RT_OP_CD         ," ).append("\n"); 
		query.append("    NULL         CURR_CD          ," ).append("\n"); 
		query.append("    NULL         FRT_RT_AMT        ," ).append("\n"); 
		query.append("    NULL         PAY_TERM_CD" ).append("\n"); 
		query.append("FROM  BQ ," ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT 'TYP' NOTE_CONV_RULE_CD FROM DUAL" ).append("\n"); 
		query.append("    ) RC" ).append("\n"); 
		query.append("WHERE USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상." ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("C1 AS (" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< CONVERSION SURCHARGE >" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--S Subject        : Tariff Surcharge 를 적용하겠다." ).append("\n"); 
		query.append("--I Include        : Subjrect 와 동일 ( 단, 표시만 'I' )" ).append("\n"); 
		query.append("--F Fix Amount     : 고정 값" ).append("\n"); 
		query.append("--A Adjust Adjust  : Tariff Surcharge 에 계산 공식 적용 + - * /, Lower 는 더 낮은값, Higher 는 더 높은 값." ).append("\n"); 
		query.append("--N Not Applicable : Tariff Surcharge 도 적용하지 않겠다." ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--MTCH_PRIO 가 같은데.. CMDT 와 ROUT 만의 MTCH_PRIO 도 같으면 ERROR 로직 발생해야하는데.." ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT C1.BQ_SEQ       ," ).append("\n"); 
		query.append("    C1.SEL_TP_CD      ," ).append("\n"); 
		query.append("    C1.SEL_TP_PRIO     ," ).append("\n"); 
		query.append("    C1.SVC_SCP_CD   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    C1.CHG_CD       ," ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("	WHEN C1.RAT_UT_CD = 'PC' AND SP.FLT_PCT_TP_CD = 'P' THEN SP.FLT_PCT_TP_CD" ).append("\n"); 
		query.append("	ELSE 'F'" ).append("\n"); 
		query.append("	END	FLT_PCT_TP_CD				," ).append("\n"); 
		query.append("	CASE" ).append("\n"); 
		query.append("	WHEN C1.RAT_UT_CD = 'PC' AND SP.FLT_PCT_TP_CD = 'P' THEN SP.PCT_BSE_CD" ).append("\n"); 
		query.append("	ELSE NULL" ).append("\n"); 
		query.append("	END	PCT_BSE_CD					," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    C1.RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("    C1.RT_OP_CD      ," ).append("\n"); 
		query.append("    C1.CURR_CD             ," ).append("\n"); 
		query.append("    C1.FRT_RT_AMT     ," ).append("\n"); 
		query.append("    C1.TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("    C1.RAT_UT_CD      ," ).append("\n"); 
		query.append("    C1.PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    C1.RT_INCL_FLG" ).append("\n"); 
		query.append("FROM  (" ).append("\n"); 
		query.append("    SELECT C.BQ_SEQ       ," ).append("\n"); 
		query.append("        'C'        SEL_TP_CD      ," ).append("\n"); 
		query.append("        1          SEL_TP_PRIO     ," ).append("\n"); 
		query.append("        ROW_NUMBER() OVER ( PARTITION BY C.BQ_SEQ, C.NOTE_CONV_CHG_CD" ).append("\n"); 
		query.append("                  ORDER BY" ).append("\n"); 
		query.append("                   ( SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = C.NOTE_CONV_TP_CD ) ," ).append("\n"); 
		query.append("                   DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 10, 'C', 0)" ).append("\n"); 
		query.append("                   + DECODE(C.BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6) DESC" ).append("\n"); 
		query.append("                 ) ROW_NUMBER     ," ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        C.NOTE_CONV_CHG_CD CHG_CD       ," ).append("\n"); 
		query.append("        NULL        FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("        NULL        PCT_BSE_CD  ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        C.RT_APPL_TP_CD         ," ).append("\n"); 
		query.append("        C.RT_OP_CD              ," ).append("\n"); 
		query.append("        C.CURR_CD               ," ).append("\n"); 
		query.append("        BQ.SVC_SCP_CD           ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '+' THEN C.FRT_RT_AMT + C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '-' THEN C.FRT_RT_AMT - C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '*' THEN C.FRT_RT_AMT * C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '/' THEN C.FRT_RT_AMT / C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'B' THEN C.FRT_RT_AMT" ).append("\n"); 
		query.append("        END FRT_RT_AMT             ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("        C.BKG_RAT_UT_CD    RAT_UT_CD      ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        C.BKG_PRC_CGO_TP_CD  PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("        CASE WHEN C_NOT.RT_APPL_TP_CD = 'I' AND C.NOTE_CONV_CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )" ).append("\n"); 
		query.append("			 THEN 'Y' ELSE	DECODE(C.RT_APPL_TP_CD, 'I', 'Y', 'N')" ).append("\n"); 
		query.append("		END	RT_INCL_FLG	," ).append("\n"); 
		query.append("		DECODE(C_NOT.BKG_CONV_TP_CD, 'C', 'Y', 'N') NOT_RULE_FLG	" ).append("\n"); 
		query.append("    FROM  BQ     ," ).append("\n"); 
		query.append("        NC_P C   ," ).append("\n"); 
		query.append("        NC_P C_TYP, -- type --/" ).append("\n"); 
		query.append("        NC_P C_NOT  -- not --/" ).append("\n"); 
		query.append("    WHERE  C.BQ_SEQ        = BQ.BQ_SEQ" ).append("\n"); 
		query.append("    AND   C.CHG_RULE_TP_CD    = 'C'" ).append("\n"); 
		query.append("    AND   C_TYP.BQ_SEQ      = BQ.BQ_SEQ" ).append("\n"); 
		query.append("    AND   C_TYP.NOTE_CONV_RULE_CD = 'TYP'" ).append("\n"); 
		query.append("    AND   C_NOT.BQ_SEQ(+)      = C.BQ_SEQ" ).append("\n"); 
		query.append("    AND   C_NOT.NOTE_CONV_RULE_CD(+) = 'NOT'" ).append("\n"); 
		query.append("    AND   C_NOT.CONV_TP_PRIO(+) < C.CONV_TP_PRIO" ).append("\n"); 
		query.append("    AND   USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상." ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    -------- RATING UNIT --------/" ).append("\n"); 
		query.append("    AND     (" ).append("\n"); 
		query.append("			C.BKG_RAT_UT_CD	IS NULL" ).append("\n"); 
		query.append("              OR  C.BKG_RAT_UT_CD = C_TYP.CONV_RAT_UT_CD" ).append("\n"); 
		query.append("              OR C.BKG_RAT_UT_CD IN ( 'BX', 'BL', 'PC' )" ).append("\n"); 
		query.append("              OR" ).append("\n"); 
		query.append("              (" ).append("\n"); 
		query.append("                C.BKG_RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = C.BKG_RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ) C1 ," ).append("\n"); 
		query.append("     PRI_SCG_PRF	SP" ).append("\n"); 
		query.append("WHERE SP.SVC_SCP_CD(+)	= C1.SVC_SCP_CD		---- BKG_SVC_SCP_CD 를 사용한다." ).append("\n"); 
		query.append("AND	SP.CHG_CD(+)		= C1.CHG_CD" ).append("\n"); 
		query.append("AND C1.ROW_NUMBER = 1" ).append("\n"); 
		query.append("--------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--NOT RULE 적용" ).append("\n"); 
		query.append("-------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND	NOT	(" ).append("\n"); 
		query.append("			C1.NOT_RULE_FLG	= 'Y'" ).append("\n"); 
		query.append("		AND	C1.RT_INCL_FLG		= 'N'" ).append("\n"); 
		query.append("		AND	C1.CHG_CD			NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("G2 AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< GOH >" ).append("\n"); 
		query.append("--BAR TYPE 별 ROW 구분 있음." ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--TYPE RULE CODE 가 적용되기는 하지만, 운임 계산은 하지 않고, 계약서에 있는 운임을 그대로 사용한다." ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--- BKG Special Cargo 정보 중 Hanger 정보가 있고, S/C상에 해당하는 GOH 운임이 존재하는 경우 Rating" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT NULL BQ_SEQ       ," ).append("\n"); 
		query.append("    NULL SEL_TP_CD      ," ).append("\n"); 
		query.append("    NULL SEL_TP_PRIO     ," ).append("\n"); 
		query.append("    NULL CHG_CD       ," ).append("\n"); 
		query.append("    NULL FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    NULL PCT_BSE_CD     ," ).append("\n"); 
		query.append("    NULL RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("    NULL RT_OP_CD      ," ).append("\n"); 
		query.append("    NULL CURR_CD             ," ).append("\n"); 
		query.append("    NULL FRT_RT_AMT     ," ).append("\n"); 
		query.append("    NULL TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("    NULL RAT_UT_CD      ," ).append("\n"); 
		query.append("    NULL PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    NULL RT_INCL_FLG     ," ).append("\n"); 
		query.append("    NULL NOT_RULE_FLG" ).append("\n"); 
		query.append("FROM  DUAL" ).append("\n"); 
		query.append("WHERE  1 = 2" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("S3 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--< TARIFF SURCHARGE >" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    SEL_TP_CD      ," ).append("\n"); 
		query.append("    SEL_TP_PRIO     ," ).append("\n"); 
		query.append("    CHG_CD       ," ).append("\n"); 
		query.append("    FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    PCT_BSE_CD     ," ).append("\n"); 
		query.append("    RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("    RT_OP_CD      ," ).append("\n"); 
		query.append("    CURR_CD             ," ).append("\n"); 
		query.append("    FRT_RT_AMT     ," ).append("\n"); 
		query.append("    TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("    RAT_UT_CD      ," ).append("\n"); 
		query.append("    PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    RT_INCL_FLG     ," ).append("\n"); 
		query.append("    NOT_RULE_FLG" ).append("\n"); 
		query.append("FROM  (" ).append("\n"); 
		query.append("    SELECT BQ.BQ_SEQ         ," ).append("\n"); 
		query.append("        'S'  SEL_TP_CD      ," ).append("\n"); 
		query.append("        3    SEL_TP_PRIO     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, SP.CHG_CD" ).append("\n"); 
		query.append("                  ORDER BY" ).append("\n"); 
		query.append("                    DECODE(SR.POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 10, 'C', 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6)" ).append("\n"); 
		query.append("                    + DECODE(SR.PRC_CGO_TP_CD    , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.USA_SVC_MOD_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.ORG_TRSP_MOD_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.DEST_TRSP_MOD_CD  , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.PRC_RCV_TERM_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.PRC_DE_TERM_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.VSL_SLAN_CD     , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.TS_PORT_CD     , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.SUB_TRD_CD     , NULL, 0, 1) DESC," ).append("\n"); 
		query.append("                    NVL(SR.CTRT_DT, TO_DATE('19000101','YYYYMMDD')) DESC" ).append("\n"); 
		query.append("                 ) ROW_NUMBER ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SP.CHG_CD         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SP.FLT_PCT_TP_CD     ," ).append("\n"); 
		query.append("        SP.PCT_BSE_CD       ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NULL RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("        NULL RT_OP_CD      ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SR.CURR_CD        ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '+' THEN SR.SCG_AMT + C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '-' THEN SR.SCG_AMT - C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '*' THEN SR.SCG_AMT * C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '/' THEN SR.SCG_AMT / C_TYP.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C_TYP.BKG_CONV_TP_CD = 'B' THEN SR.SCG_AMT" ).append("\n"); 
		query.append("        END FRT_RT_AMT      ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("        SR.RAT_UT_CD       ," ).append("\n"); 
		query.append("        SR.PRC_CGO_TP_CD     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE WHEN C_NOT.RT_APPL_TP_CD = 'I' AND SP.CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )" ).append("\n"); 
		query.append("			 THEN 'Y' ELSE	'N'" ).append("\n"); 
		query.append("		END	RT_INCL_FLG	 ," ).append("\n"); 
		query.append("        DECODE(C_NOT.BKG_CONV_TP_CD, 'C', 'Y', 'N') NOT_RULE_FLG" ).append("\n"); 
		query.append("    FROM  BQ         ," ).append("\n"); 
		query.append("        PRI_SCG_PRF  SP  ," ).append("\n"); 
		query.append("        MDM_CHARGE  MC  ," ).append("\n"); 
		query.append("        PRI_SCG_RT  SR  ," ).append("\n"); 
		query.append("        NC_P     C_TYP ,     ---- RATING UNIT CONVERSION --/" ).append("\n"); 
		query.append("        NC_P     C_NOT" ).append("\n"); 
		query.append("    WHERE  SP.SVC_SCP_CD        = BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("    AND   MC.CHG_CD          = SP.CHG_CD" ).append("\n"); 
		query.append("    AND   MC.AUTO_RAT_FLG       = 'Y'" ).append("\n"); 
		query.append("    AND   SR.SVC_SCP_CD        = SP.SVC_SCP_CD" ).append("\n"); 
		query.append("    AND   SR.CHG_CD          = SP.CHG_CD" ).append("\n"); 
		query.append("    AND   BQ.EFF_DT      BETWEEN SR.EFF_DT AND SR.EXP_DT + 0.99999 ---- 0.99999 는 23시 59분 59초를 의미 --/" ).append("\n"); 
		query.append("    AND   SR.WDR_FLG         = 'N'" ).append("\n"); 
		query.append("    AND   SR.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("    AND   SR.SCG_RQST_PROC_CD = 'A' ---- [CHM-201641685]에 따른 컬럼 추가 반영 --/" ).append("\n"); 
		query.append("    AND   C_TYP.BQ_SEQ        = BQ.BQ_SEQ" ).append("\n"); 
		query.append("    AND   C_TYP.NOTE_CONV_RULE_CD   = 'TYP'" ).append("\n"); 
		query.append("    AND   C_NOT.BQ_SEQ(+)       = BQ.BQ_SEQ" ).append("\n"); 
		query.append("    AND   C_NOT.NOTE_CONV_RULE_CD(+) = 'NOT'" ).append("\n"); 
		query.append("    AND   USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상." ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("-----------------BASE TABLE----------------------" ).append("\n"); 
		query.append("    AND   SP.CHG_CD IN (" ).append("\n"); 
		query.append("        SELECT HJS_ID" ).append("\n"); 
		query.append("          FROM PRI_MOF_MAPG" ).append("\n"); 
		query.append("         WHERE MAPG_TP_CD = 'SCG'" ).append("\n"); 
		query.append("           AND FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("           AND DELT_FLG = 'N'" ).append("\n"); 
		query.append("       )" ).append("\n"); 
		query.append("-----------------BASE TABLE----------------------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("--R/D TERM CHECK ( MDM_CHARGE 의 R/D TERM CHECK 포함 )" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.PRC_RCV_TERM_CD = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_RCV_TERM_CD IS NULL )" ).append("\n"); 
		query.append("          AND BQ.RCV_TERM_CD IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.RCV_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.PRC_DE_TERM_CD  = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_DE_TERM_CD IS NULL )" ).append("\n"); 
		query.append("          AND BQ.DE_TERM_CD  IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.DE_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ---------------------- POR ---------------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.POR_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.POR_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.POR_DEF_CD  = DECODE(SR.POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.POR_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.POR_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ---------------------- POL ---------------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.POL_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.POL_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.POL_DEF_CD  = DECODE(SR.POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.POL_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.POL_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ---------------------- POD ---------------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.POD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.POD_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.POD_DEF_CD  = DECODE(SR.POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.POD_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.POD_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ---------------------- DEL ---------------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.DEL_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.DEL_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.DEL_DEF_CD  = DECODE(SR.DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.DEL_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.DEL_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ---------------------- SUB TRADE ----------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.SUB_TRD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.SUB_TRD_CD    IS NULL" ).append("\n"); 
		query.append("        OR SR.SUB_TRD_CD    IN" ).append("\n"); 
		query.append("          (" ).append("\n"); 
		query.append("          SELECT DL.SUB_TRD_CD" ).append("\n"); 
		query.append("          FROM   MDM_DTL_REV_LANE  DL" ).append("\n"); 
		query.append("          WHERE (DL.RLANE_CD, DL.VSL_SLAN_DIR_CD, DL.FM_CONTI_CD, DL.TO_CONTI_CD ) IN " ).append("\n"); 
		query.append("          		(SELECT BQ.N1ST_RLANE_CD, SUBSTR(BQ.N1ST_FINC_VVD_CD, 9,1), BQ.N1ST_POL_CONTI_CD, BQ.N1ST_POD_CONTI_CD  FROM DUAL  " ).append("\n"); 
		query.append("          		 UNION ALL" ).append("\n"); 
		query.append("          		 SELECT BQ.N2ND_RLANE_CD, SUBSTR(BQ.N2ND_FINC_VVD_CD, 9,1), BQ.N2ND_POL_CONTI_CD, BQ.N2ND_POD_CONTI_CD  FROM DUAL" ).append("\n"); 
		query.append("          		 UNION ALL" ).append("\n"); 
		query.append("          		 SELECT BQ.N3RD_RLANE_CD, SUBSTR(BQ.N3RD_FINC_VVD_CD, 9,1), BQ.N3RD_POL_CONTI_CD, BQ.N3RD_POD_CONTI_CD  FROM DUAL" ).append("\n"); 
		query.append("          		 UNION ALL" ).append("\n"); 
		query.append("          		 SELECT BQ.N4TH_RLANE_CD, SUBSTR(BQ.N4TH_FINC_VVD_CD, 9,1), BQ.N4TH_POL_CONTI_CD, BQ.N4TH_POD_CONTI_CD  FROM DUAL" ).append("\n"); 
		query.append("          		 ) " ).append("\n"); 
		query.append("          AND   DL.DELT_FLG     = 'N'" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ---------------------- LANE ---------------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.SLAN_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.VSL_SLAN_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.VSL_SLAN_CD IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ---------------------- T/S PORT ----------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.TS_PORT_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.TS_PORT_CD    IS NULL" ).append("\n"); 
		query.append("        OR SR.TS_PORT_CD    IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ----------------- ORG TRANS MODE ----------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.TRNS_MOD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.ORG_TRSP_MOD_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.ORG_TRSP_MOD_CD = BQ.ORG_TRNS_MOD_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ----------------- DEST TRANS MODE ----------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.TRNS_MOD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.DEST_TRSP_MOD_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.DEST_TRSP_MOD_CD = BQ.DEST_TRNS_MOD_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ----------------- USA SVC MODE ----------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.USA_SVC_MOD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.USA_SVC_MOD_CD    IS NULL" ).append("\n"); 
		query.append("        OR SR.USA_SVC_MOD_CD    = DECODE(SR.USA_SVC_MOD_CD, 'CZ', BQ.CML_ZN_CD, BQ.USA_SVC_MOD_CD )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- < CANAL >" ).append("\n"); 
		query.append("-- P : PAPAC" ).append("\n"); 
		query.append("-- S : EGSUC" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("    AND (" ).append("\n"); 
		query.append("          SP.CNL_TZ_FLG  = 'N'" ).append("\n"); 
		query.append("        OR SR.CNL_TZ_CD  IS NULL" ).append("\n"); 
		query.append("        OR EXISTS (" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N1ST_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N1ST_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N2ND_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N2ND_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N3RD_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N3RD_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N4TH_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N4TH_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         " ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ---------------------- CARGO TYPE ----------------------" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.PRC_CGO_TP_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.PRC_CGO_TP_CD = BQ.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("     AND     (" ).append("\n"); 
		query.append("            SP.CTRT_DT_USE_FLG = 'N'" ).append("\n"); 
		query.append("           OR  SR.CTRT_DT IS NULL" ).append("\n"); 
		query.append("           OR  SR.CTRT_DT <= (SELECT CTRT_EFF_DT " ).append("\n"); 
		query.append("                               FROM PRI_RP_DUR" ).append("\n"); 
		query.append("                              WHERE PROP_NO = BQ.PROP_NO" ).append("\n"); 
		query.append("                                AND AMDT_SEQ = BQ.AMDT_SEQ)" ).append("\n"); 
		query.append("             )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ---------------------- RATING UNIT ----------------------" ).append("\n"); 
		query.append("    AND     (" ).append("\n"); 
		query.append("          SR.RAT_UT_CD IN ( 'BL', 'BX', 'PC', 'RM' )" ).append("\n"); 
		query.append("        OR SR.RAT_UT_CD = C_TYP.CONV_RAT_UT_CD" ).append("\n"); 
		query.append("            OR (" ).append("\n"); 
		query.append("                SR.RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = SR.RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- < RT_APPL_TP_CD = 'N' (Not Applicable) >" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("    AND   NOT EXISTS (" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM  C1" ).append("\n"); 
		query.append("              WHERE  C1.BQ_SEQ     = BQ.BQ_SEQ" ).append("\n"); 
		query.append("              AND   C1.CHG_CD     = SP.CHG_CD" ).append("\n"); 
		query.append("              AND   C1.RT_APPL_TP_CD = 'N'" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- < GOH >" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("    AND   NOT EXISTS (" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM  G2" ).append("\n"); 
		query.append("              WHERE  G2.BQ_SEQ     = BQ.BQ_SEQ" ).append("\n"); 
		query.append("              AND   G2.CHG_CD     = SP.CHG_CD" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("WHERE  ROW_NUMBER = 1" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("SG AS (" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    SEL_TP_CD      ," ).append("\n"); 
		query.append("    SEL_TP_PRIO     ," ).append("\n"); 
		query.append("    CHG_CD       ," ).append("\n"); 
		query.append("    FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    PCT_BSE_CD     ," ).append("\n"); 
		query.append("    RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("    RT_OP_CD      ," ).append("\n"); 
		query.append("    CURR_CD             ," ).append("\n"); 
		query.append("    FRT_RT_AMT     ," ).append("\n"); 
		query.append("    SUR_RT_AMT," ).append("\n"); 
		query.append("    TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("    RAT_UT_CD      ," ).append("\n"); 
		query.append("    PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    RT_INCL_FLG" ).append("\n"); 
		query.append("FROM  (" ).append("\n"); 
		query.append("    SELECT SG.BQ_SEQ       ," ).append("\n"); 
		query.append("        SG.SEL_TP_CD     ," ).append("\n"); 
		query.append("        SG.SEL_TP_PRIO    ," ).append("\n"); 
		query.append("        SG.CHG_CD       ," ).append("\n"); 
		query.append("        SG.FLT_PCT_TP_CD   ," ).append("\n"); 
		query.append("        SG.PCT_BSE_CD     ," ).append("\n"); 
		query.append("        C1.RT_APPL_TP_CD   ," ).append("\n"); 
		query.append("        NULL RT_OP_CD    ," ).append("\n"); 
		query.append("        SG.CURR_CD           ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '+' THEN SG.FRT_RT_AMT + C1.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '-' THEN SG.FRT_RT_AMT - C1.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '*' THEN SG.FRT_RT_AMT * C1.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '/' THEN SG.FRT_RT_AMT / C1.FRT_RT_AMT" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '>' THEN GREATEST(SG.FRT_RT_AMT, C1.FRT_RT_AMT)" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '<' THEN LEAST(SG.FRT_RT_AMT, C1.FRT_RT_AMT)" ).append("\n"); 
		query.append("        WHEN C1.RT_APPL_TP_CD = 'F' AND SG.FRT_RT_AMT <> 0 THEN C1.FRT_RT_AMT" ).append("\n"); 
		query.append("        ELSE SG.FRT_RT_AMT" ).append("\n"); 
		query.append("        END FRT_RT_AMT    ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SG.FRT_RT_AMT AS SUR_RT_AMT," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SG.TYP_BKG_CONV_TP_CD ," ).append("\n"); 
		query.append("        SG.RAT_UT_CD     ," ).append("\n"); 
		query.append("        SG.PRC_CGO_TP_CD   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NVL(C1.RT_INCL_FLG, SG.RT_INCL_FLG) RT_INCL_FLG ," ).append("\n"); 
		query.append("        SG.NOT_RULE_FLG" ).append("\n"); 
		query.append("    FROM  (" ).append("\n"); 
		query.append("        SELECT * FROM G2" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT * FROM S3" ).append("\n"); 
		query.append("        ) SG ," ).append("\n"); 
		query.append("        (SELECT * FROM C1 WHERE NOT" ).append("\n"); 
		query.append("                                    (" ).append("\n"); 
		query.append("                                        CHG_CD  NOT IN ( SELECT CHG_CD FROM S3 WHERE S3.BQ_SEQ = C1.BQ_SEQ )" ).append("\n"); 
		query.append("                                    AND EXISTS  (" ).append("\n"); 
		query.append("                                                SELECT  'X'" ).append("\n"); 
		query.append("                                                FROM    PRI_SCG_PRF SP" ).append("\n"); 
		query.append("                                                WHERE   SP.SVC_SCP_CD = C1.SVC_SCP_CD " ).append("\n"); 
		query.append("                                                AND     SP.CHG_CD     = C1.CHG_CD" ).append("\n"); 
		query.append("                                                )" ).append("\n"); 
		query.append("                                    )" ).append("\n"); 
		query.append("        ) C1                                    " ).append("\n"); 
		query.append("    WHERE  C1.BQ_SEQ(+)    = SG.BQ_SEQ" ).append("\n"); 
		query.append("    AND   C1.CHG_CD(+)    = SG.CHG_CD" ).append("\n"); 
		query.append("    ) SG" ).append("\n"); 
		query.append("WHERE  " ).append("\n"); 
		query.append("  NOT (" ).append("\n"); 
		query.append("        SG.RT_APPL_TP_CD IS NULL " ).append("\n"); 
		query.append("      AND SG.NOT_RULE_FLG  = 'Y'" ).append("\n"); 
		query.append("      AND SG.RT_INCL_FLG  = 'N'" ).append("\n"); 
		query.append("      AND SG.CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- NOT RULE 적용" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("GS AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT BQ.BQ_SEQ       ," ).append("\n"); 
		query.append("    BQ.PROP_NO      ," ).append("\n"); 
		query.append("    BQ.AMDT_SEQ      ," ).append("\n"); 
		query.append("    BQ.SVC_SCP_CD     ," ).append("\n"); 
		query.append("    BQ.CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("    BQ.ROUT_SEQ      ," ).append("\n"); 
		query.append("    BQ.RT_SEQ       ," ).append("\n"); 
		query.append("    BQ.EFF_DT," ).append("\n"); 
		query.append("    BQ.POR_CD," ).append("\n"); 
		query.append("    BQ.DEL_CD," ).append("\n"); 
		query.append("    SG.RT_INCL_FLG ," ).append("\n"); 
		query.append("    SG.CHG_CD       ," ).append("\n"); 
		query.append("    SG.FLT_PCT_TP_CD   ," ).append("\n"); 
		query.append("    SG.PCT_BSE_CD     ," ).append("\n"); 
		query.append("    SG.CURR_CD      ," ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN SG.RAT_UT_CD = 'PC' THEN 0 -- 나중에 구해야 한다." ).append("\n"); 
		query.append("    WHEN SG.RT_INCL_FLG = 'Y' THEN 0 " ).append("\n"); 
		query.append("    ELSE SG.FRT_RT_AMT" ).append("\n"); 
		query.append("    END CHG_UT_AMT    ," ).append("\n"); 
		query.append("    SG.SUR_RT_AMT   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN SG.RAT_UT_CD = 'BL' THEN 1" ).append("\n"); 
		query.append("    WHEN SG.RAT_UT_CD = 'PC' THEN SG.FRT_RT_AMT" ).append("\n"); 
		query.append("    WHEN SG.RAT_UT_CD = 'RM' THEN BQ.PRD_RD_CNT" ).append("\n"); 
		query.append("    ELSE 1" ).append("\n"); 
		query.append("    END RAT_AS_QTY    ," ).append("\n"); 
		query.append("    SG.RAT_UT_CD     ," ).append("\n"); 
		query.append("    0 CHG_AMT       ," ).append("\n"); 
		query.append("    BQ.PRC_CGO_TP_CD CGO_TP_CD ," ).append("\n"); 
		query.append("    BQ.RCV_TERM_CD    ," ).append("\n"); 
		query.append("    BQ.DE_TERM_CD	," ).append("\n"); 
		query.append("    BQ.POR_CNT_CD   ," ).append("\n"); 
		query.append("    BQ.DEL_CNT_CD," ).append("\n"); 
		query.append("    USD_ROUT_CS_SEL_FLG" ).append("\n"); 
		query.append("FROM  BQ ," ).append("\n"); 
		query.append("    SG" ).append("\n"); 
		query.append("WHERE  SG.BQ_SEQ(+)  = BQ.BQ_SEQ" ).append("\n"); 
		query.append("  AND  SG.CHG_CD(+) NOT IN ( DECODE(BQ.CUST_TP_CD, 'N', 'XXX', 'NMS' )) ---- CUSTOMER TYPE 이 NVOCC 인 경우만 NMS 존재" ).append("\n"); 
		query.append("  AND  USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상." ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("FN AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- GENERAL SURCHARGE" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    PROP_NO       ," ).append("\n"); 
		query.append("    AMDT_SEQ      ," ).append("\n"); 
		query.append("    SVC_SCP_CD     ," ).append("\n"); 
		query.append("    CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("    ROUT_SEQ      ," ).append("\n"); 
		query.append("    RT_SEQ       ," ).append("\n"); 
		query.append("    EFF_DT," ).append("\n"); 
		query.append("    POR_CD," ).append("\n"); 
		query.append("    DEL_CD," ).append("\n"); 
		query.append("    RT_INCL_FLG ," ).append("\n"); 
		query.append("    CHG_CD       ," ).append("\n"); 
		query.append("    FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    PCT_BSE_CD     ," ).append("\n"); 
		query.append("    CURR_CD       ," ).append("\n"); 
		query.append("    CHG_UT_AMT     ," ).append("\n"); 
		query.append("    SUR_RT_AMT ," ).append("\n"); 
		query.append("    RAT_AS_QTY     ," ).append("\n"); 
		query.append("    RAT_UT_CD      ," ).append("\n"); 
		query.append("    CHG_UT_AMT * RAT_AS_QTY AS CHG_AMT ," ).append("\n"); 
		query.append("    CGO_TP_CD      ," ).append("\n"); 
		query.append("    RCV_TERM_CD     ," ).append("\n"); 
		query.append("    DE_TERM_CD		," ).append("\n"); 
		query.append("    POR_CNT_CD      ," ).append("\n"); 
		query.append("    DEL_CNT_CD" ).append("\n"); 
		query.append("FROM  GS" ).append("\n"); 
		query.append("----------------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("-- ACT CHG_CD 제거" ).append("\n"); 
		query.append("---------------------------------------------------------------------------------------------/" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT 'RFA'            AS CTRT_TYPE," ).append("\n"); 
		query.append("       CTRT_NO," ).append("\n"); 
		query.append("       CUST_NM," ).append("\n"); 
		query.append("       BQ.BQ_SEQ," ).append("\n"); 
		query.append("       BQ.PROP_NO," ).append("\n"); 
		query.append("       BQ.AMDT_SEQ," ).append("\n"); 
		query.append("       BQ.SVC_SCP_CD," ).append("\n"); 
		query.append("       BQ.CMDT_HDR_SEQ," ).append("\n"); 
		query.append("       BQ.BLET_DP_SEQ," ).append("\n"); 
		query.append("       BQ.ROUT_SEQ," ).append("\n"); 
		query.append("       BQ.RT_SEQ," ).append("\n"); 
		query.append("       MOF_LANE_CD," ).append("\n"); 
		query.append("       '1'              AS IN_OUT," ).append("\n"); 
		query.append("       BQ.POR_CD," ).append("\n"); 
		query.append("       MOF_ORG_LOC_CD," ).append("\n"); 
		query.append("       BQ.DEL_CD," ).append("\n"); 
		query.append("       MOF_DEST_LOC_CD," ).append("\n"); 
		query.append("       TYPE_CD," ).append("\n"); 
		query.append("       SIZE_CD," ).append("\n"); 
		query.append("       '5'              AS QTY, -- 5개 고정" ).append("\n"); 
		query.append("       CURR_CD," ).append("\n"); 
		query.append("       FNL_FRT_RT_AMT  AS OFT_AMT," ).append("\n"); 
		query.append("       CHG.BAF_CURR," ).append("\n"); 
		query.append("       CHG.BAF_AMT," ).append("\n"); 
		query.append("       CHG.CAF_CURR," ).append("\n"); 
		query.append("       CHG.CAF_AMT," ).append("\n"); 
		query.append("       CHG.OTH_CURR," ).append("\n"); 
		query.append("       CHG.OTH_AMT," ).append("\n"); 
		query.append("       CHG.DTH_CURR," ).append("\n"); 
		query.append("       CHG.DTH_AMT," ).append("\n"); 
		query.append("       PROP_OFC_CD," ).append("\n"); 
		query.append("       PROP_APRO_OFC_CD," ).append("\n"); 
		query.append("       TO_CHAR(EFF_DT, 'YYYY-MM-DD') AS EFF_DT," ).append("\n"); 
		query.append("       CTRT_EFF_DT," ).append("\n"); 
		query.append("       CTRT_EXP_DT," ).append("\n"); 
		query.append("       ROUT_SCG_TP" ).append("\n"); 
		query.append("  FROM BQ ," ).append("\n"); 
		query.append("   (" ).append("\n"); 
		query.append("    SELECT BQ_SEQ," ).append("\n"); 
		query.append("           PROP_NO," ).append("\n"); 
		query.append("           AMDT_SEQ," ).append("\n"); 
		query.append("           SVC_SCP_CD," ).append("\n"); 
		query.append("           CMDT_HDR_SEQ," ).append("\n"); 
		query.append("           ROUT_SEQ," ).append("\n"); 
		query.append("           RT_SEQ," ).append("\n"); 
		query.append("           POR_CD," ).append("\n"); 
		query.append("           DEL_CD," ).append("\n"); 
		query.append("           MAX(DECODE(CHG.MOF_ID, 'BAF',   CURR.MOF_ID))    AS BAF_CURR," ).append("\n"); 
		query.append("           SUM(DECODE(CHG.MOF_ID, 'BAF',   SCG_AMT))        AS BAF_AMT," ).append("\n"); 
		query.append("           MAX(DECODE(CHG.MOF_ID, 'CAF',   CURR.MOF_ID))    AS CAF_CURR," ).append("\n"); 
		query.append("           SUM(DECODE(CHG.MOF_ID, 'CAF',   SCG_AMT))        AS CAF_AMT," ).append("\n"); 
		query.append("           MAX(DECODE(CHG.MOF_ID, 'O/THC', CURR.MOF_ID))    AS OTH_CURR," ).append("\n"); 
		query.append("           SUM(DECODE(CHG.MOF_ID, 'O/THC', SCG_AMT))        AS OTH_AMT," ).append("\n"); 
		query.append("           MAX(DECODE(CHG.MOF_ID, 'D/THC', CURR.MOF_ID))    AS DTH_CURR," ).append("\n"); 
		query.append("           SUM(DECODE(CHG.MOF_ID, 'D/THC', SCG_AMT))        AS DTH_AMT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("        SELECT FN.BQ_SEQ," ).append("\n"); 
		query.append("            FN.PROP_NO      AS PROP_NO," ).append("\n"); 
		query.append("            FN.AMDT_SEQ     AS AMDT_SEQ," ).append("\n"); 
		query.append("            FN.SVC_SCP_CD   AS SVC_SCP_CD," ).append("\n"); 
		query.append("            FN.CMDT_HDR_SEQ AS CMDT_HDR_SEQ," ).append("\n"); 
		query.append("            FN.ROUT_SEQ     AS ROUT_SEQ," ).append("\n"); 
		query.append("            FN.RT_SEQ       AS RT_SEQ," ).append("\n"); 
		query.append("            FN.POR_CD       AS POR_CD," ).append("\n"); 
		query.append("            FN.DEL_CD       AS DEL_CD," ).append("\n"); 
		query.append("            FN.CHG_CD       AS CHG_CD," ).append("\n"); 
		query.append("            FN.RAT_UT_CD    AS RAT_UT_CD," ).append("\n"); 
		query.append("            NVL(FN.CURR_CD, 'USD')      AS CURR_CD," ).append("\n"); 
		query.append("            NVL(CASE" ).append("\n"); 
		query.append("            WHEN FN.RT_INCL_FLG = 'N' AND FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.SUR_RT_AMT / 100" ).append("\n"); 
		query.append("            ELSE FN.SUR_RT_AMT END, 0)             AS SCG_AMT" ).append("\n"); 
		query.append("        FROM  FN ," ).append("\n"); 
		query.append("          (" ).append("\n"); 
		query.append("            SELECT BQ_SEQ  ," ).append("\n"); 
		query.append("                CHG_CD    ," ).append("\n"); 
		query.append("                SUM(CHG_AMT) CHG_AMT" ).append("\n"); 
		query.append("            FROM  (" ).append("\n"); 
		query.append("                SELECT F1.BQ_SEQ ," ).append("\n"); 
		query.append("                    F1.CHG_CD    ," ).append("\n"); 
		query.append("                    F2.CHG_AMT CHG_AMT" ).append("\n"); 
		query.append("                FROM  FN F1 ," ).append("\n"); 
		query.append("                    FN F2" ).append("\n"); 
		query.append("                WHERE  F2.BQ_SEQ = F1.BQ_SEQ" ).append("\n"); 
		query.append("                AND   F2.CHG_CD    IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND F1.EFF_DT BETWEEN EFF_DT AND EXP_DT )" ).append("\n"); 
		query.append("                AND   F2.CURR_CD   = F1.CURR_CD" ).append("\n"); 
		query.append("                AND   (" ).append("\n"); 
		query.append("                      F1.CHG_CD  <> 'VTT'" ).append("\n"); 
		query.append("                    OR	F2.CHG_CD	NOT IN ( DECODE(F1.POR_CNT_CD, 'VN', 'DTH', 'XXX'), DECODE(F1.POR_CNT_CD, 'VN', 'DDC', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'OTH', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'ORC', 'XXX') )" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("                AND   F2.RAT_UT_CD  <> 'PC'" ).append("\n"); 
		query.append("                AND   F1.RAT_UT_CD  = 'PC'" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                SELECT F1.BQ_SEQ ," ).append("\n"); 
		query.append("                    F1.CHG_CD    ," ).append("\n"); 
		query.append("                    F2.FNL_FRT_RT_AMT CHG_AMT" ).append("\n"); 
		query.append("                FROM  FN F1 ," ).append("\n"); 
		query.append("                      BQ F2" ).append("\n"); 
		query.append("                WHERE  F2.BQ_SEQ = F1.BQ_SEQ" ).append("\n"); 
		query.append("                AND   'OFT'   IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND F1.EFF_DT BETWEEN EFF_DT AND EXP_DT )" ).append("\n"); 
		query.append("                AND   F2.CURR_CD   = F1.CURR_CD" ).append("\n"); 
		query.append("                AND   F2.CTRT_CNTR_TPSZ_CD <> 'PC'" ).append("\n"); 
		query.append("                AND   F1.RAT_UT_CD     = 'PC'" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("            GROUP BY" ).append("\n"); 
		query.append("                BQ_SEQ  ," ).append("\n"); 
		query.append("                CHG_CD" ).append("\n"); 
		query.append("            ) F1" ).append("\n"); 
		query.append("        WHERE F1.BQ_SEQ(+) = FN.BQ_SEQ" ).append("\n"); 
		query.append("        AND   F1.CHG_CD(+)  = FN.CHG_CD" ).append("\n"); 
		query.append("        AND  (CASE WHEN FN.SVC_SCP_CD IN ( 'ACW','MXW','TAE','TPW' ) AND FN.CHG_CD = 'CAF' THEN 'N'" ).append("\n"); 
		query.append("                   ELSE 'Y' END ) = 'Y'" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT *" ).append("\n"); 
		query.append("          FROM USD_ROUT_CASE_SCG" ).append("\n"); 
		query.append("          ) TBL," ).append("\n"); 
		query.append("          PRI_MOF_MAPG CHG," ).append("\n"); 
		query.append("          PRI_MOF_MAPG CURR" ).append("\n"); 
		query.append("    WHERE TBL.CHG_CD = CHG.HJS_ID" ).append("\n"); 
		query.append("      AND TBL.CURR_CD = CURR.HJS_ID" ).append("\n"); 
		query.append("      -----------------BASE TABLE----------------------" ).append("\n"); 
		query.append("      AND CHG.MAPG_TP_CD = 'SCG'" ).append("\n"); 
		query.append("      AND CHG.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("      AND CHG.DELT_FLG = 'N'" ).append("\n"); 
		query.append("      AND CURR.MAPG_TP_CD = 'CURR'" ).append("\n"); 
		query.append("      AND CURR.FILE_USE_ONY_FLG = 'Y'" ).append("\n"); 
		query.append("      AND CURR.DELT_FLG = 'N'" ).append("\n"); 
		query.append("      -----------------BASE TABLE----------------------" ).append("\n"); 
		query.append("    GROUP BY BQ_SEQ," ).append("\n"); 
		query.append("           PROP_NO," ).append("\n"); 
		query.append("           AMDT_SEQ," ).append("\n"); 
		query.append("           SVC_SCP_CD," ).append("\n"); 
		query.append("           CMDT_HDR_SEQ," ).append("\n"); 
		query.append("           ROUT_SEQ," ).append("\n"); 
		query.append("           RT_SEQ," ).append("\n"); 
		query.append("           POR_CD," ).append("\n"); 
		query.append("           DEL_CD" ).append("\n"); 
		query.append("   ) CHG" ).append("\n"); 
		query.append("WHERE CHG.BQ_SEQ(+) = BQ.BQ_SEQ" ).append("\n"); 
		query.append("ORDER BY CTRT_NO" ).append("\n"); 

	}
}