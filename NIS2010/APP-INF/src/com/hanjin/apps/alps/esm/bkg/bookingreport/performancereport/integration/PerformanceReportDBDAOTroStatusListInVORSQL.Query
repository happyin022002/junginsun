<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PerformanceReportDBDAOTroStatusListInVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT   ROWNUM RNUM
,	BKG_NO        
,	TRO_SEQ       
,	TRO_SUB_SEQ   
,	ACT_SHPR_NM   
,	CNTC_PSON_NM  
,	DOR_LOC_CD    
,	TEU_A         
,	TEU_B         
,	CNTR_TPSZ_CD  
,	TRO_QTY       
,	DOR_ARR_DT    
,	PKUP_LOC_CD   
,	RTN_LOC_CD    
,	RCV_TERM_CD   
,	RQST_DT       
,	DIFF_RMK      
,	POR_CD        
,	POL_CD        
,	POD_CD        
,	DEL_CD        
,	SLAN_CD       
,	VVD_CD        
,	EQ_CTRL_OFC_CD
,	BKG_OFC_CD    
,	OWNR_TRK_FLG  
,	CUST_CNT_CD   
,	CUST_SEQ      
,	PKUP_YD_CD    
,	DOC_USR_ID    
,	BKG_DT_FR     
,	BKG_DT_TO     
,	BKG_STS_CD    
,	TRO_DT_FR     
,	TRO_DT_TO     
,	PUP_DT_FR     
,	PUP_DT_TO     
,	BKG_STAFF     
,	DCGO_FLG      
,	AWK_CGO_FLG   
,	BB_CGO_FLG    
,	RD_CGO_FLG    
,	RC_FLG    
,	SO_FLG    
,	ZONE_CODE     
,	H_LINE_TYPE   
,	D_LINE_TYPE   
,	MDST          
,	IO_BND_CD     
,	D2            
,	D4            
,	D5            
,	D7            
,	D8            
,	D9            
,	DW            
,	DX            
,	R2            
,	R4            
,	R5            
,	F2            
,	F4            
,	F5            
,	O2            
,	O4            
,	O5            
,	S2            
,	S4            
,	T2            
,	T4            
,	A2            
,	A4
,	A5            
,	P2            
,	P4            
,	Z2            
,	Z4            
,	TOT_SUM       
,       STR  || (SELECT     'SubTotal : ' || BKG_JOIN_FNC(CURSOR(SELECT TROD2.CNTR_TPSZ_CD || '-'|| SUM(TROD2.TRO_QTY) TRO_QTY
                                                             FROM  BKG_BOOKING VB2
                                                               ,   BKG_TRO   TRO2
                                                               ,   BKG_TRO_DTL TROD2
                                                            WHERE  1=1
                                                            AND    TRO2.BKG_NO = TROD2.BKG_NO(+)
                                                            AND    TRO2.TRO_SEQ = TROD2.TRO_SEQ(+)
                                                            AND    TRO2.IO_BND_CD = TROD2.IO_BND_CD(+)
                                                            AND    TRO2.RTN_TRO_FLG = TROD2.RTN_TRO_FLG(+)
                                                            AND    VB2.BKG_NO = TRO2.BKG_NO(+)
                                                            AND    VB2.SLAN_CD = T.SLAN_CD
                                                            AND    VB2.VSL_CD  = T.VSL_CD  --CMLB0039E
                                                            AND    VB2.SKD_VOY_NO = T.SKD_VOY_NO
                                                            AND    VB2.SKD_DIR_CD =  T.SKD_DIR_CD
                                                            AND    TROD2.DOR_ARR_DT =  TO_DATE( T.DOR_ARR_DT,'YYYY-MM-DD')
                                                            AND    NVL(TROD2.PKUP_YD_CD,' ') =  NVL(T.PKUP_YD_CD,' ')
                                                            GROUP BY TROD2.CNTR_TPSZ_CD
                                                            ORDER BY TROD2.CNTR_TPSZ_CD
                                                           )
                                                    )
		FROM DUAL
       ) SUBGROUP_TITLE
,	CUST_NM
FROM	(

SELECT /*+ RULE */ 
		VB.BKG_NO
,	    TRO.TRO_SEQ
,	    TROD.TRO_SUB_SEQ                 
,	    TRO.ACT_SHPR_NM                    
, 	   	TRO.CNTC_PSON_NM || TRO.CNTC_PHN_NO CNTC_PSON_NM    
,	    TRO.DOR_LOC_CD                         
,	    SUM(DECODE(GREATEST(2,SUBSTR(BQ.CNTR_TPSZ_CD,2,1)),2,NVL(BQ.OP_CNTR_QTY,0),0)) TEU_A
, 	   	SUM(DECODE(GREATEST(2,SUBSTR(BQ.CNTR_TPSZ_CD,2,1)),2,0,NVL(BQ.OP_CNTR_QTY,0))) TEU_B
,	    TROD.CNTR_TPSZ_CD                                   
,	    TROD.TRO_QTY                                          
,	    TO_CHAR(TROD.DOR_ARR_DT,'YYYY-MM-DD')  DOR_ARR_DT       
,	    TROD.PKUP_YD_CD PKUP_LOC_CD      
,	    TROD.RTN_YD_CD  RTN_LOC_CD        
,	    TRO.RCV_TERM_CD                                       
,       TRO.SO_FLG                                            
,	    TO_CHAR(TRO.RQST_DT,'YYYY-MM-DD')  RQST_DT 
,	    Translate(NVL(TRO.DIFF_RMK,' '),chr(13)||chr(10),' ') DIFF_RMK                              
,	    VB.POR_CD
,	    VB.POL_CD
,	    VB.POD_CD
,	    VB.DEL_CD
,	    VB.SLAN_CD                                 
,	    VB.VSL_CD||VB.SKD_VOY_NO||VB.SKD_DIR_CD    VVD_CD
,      	VB.VSL_CD
,     	VB.SKD_VOY_NO
,      	VB.SKD_DIR_CD
,	    VB.EQ_CTRL_OFC_CD   --EQ OFFICE                      
,	    VB.BKG_OFC_CD                            
,	    TRO.OWNR_TRK_FLG   
,      ''   CUST_CNT_CD
,      ''   CUST_SEQ  
,	   ''   CUST_NM 
,      ''   PKUP_YD_CD
,      ''   DOC_USR_ID    --BKG Staff    
,	   ''   BKG_DT_FR
,	   ''   BKG_DT_TO
,	   ''   BKG_STS_CD  
,	   ''   TRO_DT_FR    
,	   ''   TRO_DT_TO  
,	   ''   PUP_DT_FR    
,	   ''   PUP_DT_TO  
,	   ''   BKG_STAFF    
,      ''   DCGO_FLG
,      '' 	AWK_CGO_FLG
,      '' 	BB_CGO_FLG
,      '' 	RD_CGO_FLG
,      '' 	RC_FLG
,	   ''   ZONE_CODE
,	   'H'   H_LINE_TYPE
,	   'D'   D_LINE_TYPE
,	   ''    MDST
,	   ''    IO_BND_CD
,      SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'D2',TROD.TRO_QTY)),0)) D2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'D4',TROD.TRO_QTY)),0)) D4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'D5',TROD.TRO_QTY)),0)) D5
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'D7',TROD.TRO_QTY)),0)) D7
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'D8',TROD.TRO_QTY)),0)) D8
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'D9',TROD.TRO_QTY)),0)) D9
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'DW',TROD.TRO_QTY)),0)) DW
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'DX',TROD.TRO_QTY)),0)) DX
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'R2',TROD.TRO_QTY)),0)) R2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'R4',TROD.TRO_QTY)),0)) R4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'R5',TROD.TRO_QTY)),0)) R5
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'F2',TROD.TRO_QTY)),0)) F2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'F4',TROD.TRO_QTY)),0)) F4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'F5',TROD.TRO_QTY)),0)) F5
,      SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'O2',TROD.TRO_QTY)),0)) O2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'O4',TROD.TRO_QTY)),0)) O4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'O5',TROD.TRO_QTY)),0)) O5
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'S2',TROD.TRO_QTY)),0)) S2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'S4',TROD.TRO_QTY)),0)) S4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'T2',TROD.TRO_QTY)),0)) T2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'T4',TROD.TRO_QTY)),0)) T4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'A2',TROD.TRO_QTY)),0)) A2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'A4',TROD.TRO_QTY)),0)) A4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'A5',TROD.TRO_QTY)),0)) A5
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'P2',TROD.TRO_QTY)),0)) P2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'P4',TROD.TRO_QTY)),0)) P4
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'Z2',TROD.TRO_QTY)),0)) Z2
,	   SUM(NVL(GREATEST(DECODE(BQ.CNTR_TPSZ_CD,'Z4',TROD.TRO_QTY)),0)) Z4


,	   '0' TOT_SUM
,    'Lane : ' || VB.SLAN_CD || '	Trunk VVD : ' || VB.VSL_CD||VB.SKD_VOY_NO||VB.SKD_DIR_CD || '	P/UP Date : ' || TO_CHAR(TROD.DOR_ARR_DT,'YYYY-MM-DD') || '	P/UP Yard : ' ||  TROD.PKUP_YD_CD STR

FROM	 (SELECT  /*+ ORDERED USE_NL(VB BC TRO) */
              VB.ROWID   BKG_RID,
              TRO.ROWID  TRO_RID
      FROM    BKG_BOOKING  VB,
              BKG_CUSTOMER BC,      
              BKG_TRO      TRO
      WHERE   VB.BKG_NO = TRO.BKG_NO(+)
      AND     VB.BKG_NO = BC.BKG_NO
      AND     BC.BKG_CUST_TP_CD = 'S'
#if (${bkg_dt_fr} != '') 
	  AND     VB.BKG_CRE_DT > TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') 
#end
#if (${bkg_dt_to} != '') 
	  AND 	  VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999     --BKG Date
#end
      AND     TRO.CXL_FLG    =  'N'
      AND     TRO.IO_BND_CD =   NVL(@[io_bnd_cd],'O')
#if (${vvd_cd} != '') 
	  AND   	VB.VSL_CD      =  SUBSTR(@[vvd_cd],1,4)
      AND   	VB.SKD_VOY_NO  =  SUBSTR(@[vvd_cd],5,4)
      AND   	VB.SKD_DIR_CD  =  SUBSTR(@[vvd_cd],9,1)
#end
       )  A
,		BKG_BOOKING VB 
,	     BKG_TRO   TRO 
,	     BKG_QUANTITY  BQ  
,	     BKG_TRO_DTL TROD 
,        MAS_RGST_BKG MAS
WHERE 	A.BKG_RID = VB.ROWID
AND     A.TRO_RID = TRO.ROWID
AND		TRO.BKG_NO = TROD.BKG_NO(+)
AND   	TRO.TRO_SEQ = TROD.TRO_SEQ(+)  
AND     TRO.IO_BND_CD = TROD.IO_BND_CD(+)
AND     TRO.RTN_TRO_FLG = TROD.RTN_TRO_FLG(+)
AND   	VB.BKG_NO   = BQ.BKG_NO
AND   	VB.BKG_NO = TRO.BKG_NO(+) 
AND   	TRO.CXL_FLG    =  'N'  

#if (${bkg_no} != '') 
AND   	VB.BKG_NO      =  @[bkg_no]
#end

#if (${io_bnd_cd} != '') 
AND     TRO.IO_BND_CD =   @[io_bnd_cd]
#end

#if (${bkg_sts_cd} != '') 
	--AND VB.BKG_STS_CD  IN (${bkg_sts_cd})
	AND VB.BKG_STS_CD  IN (SELECT * FROM table(BKG_SPLIT_FNC(@[bkg_sts_cd])))
#end 

#if (${vvd_cd} != '') 
AND   	VB.VSL_CD      =  SUBSTR(@[vvd_cd],1,4)
AND   	VB.SKD_VOY_NO  =  SUBSTR(@[vvd_cd],5,4)
AND   	VB.SKD_DIR_CD  =  SUBSTR(@[vvd_cd],9,1)
#end

--IPT : POR과 DEL이 같은 Continent 일 경우  OCN : POR과 DEL이 다른 Continent 일 경우
AND     VB.BKG_NO = MAS.BKG_NO
#if (${zone_code} != '') 
	#if (${zone_code} == 'I') 
--AND  SUBSTR(VB.ORG_SCONTI_CD,1,1) = SUBSTR(VB.DEST_SCONTI_CD,1,1)  --  IPT
AND     MAS.IOC_CD = 'I'
	#elseif (${zone_code} == 'O') 
--AND  SUBSTR(VB.ORG_SCONTI_CD,1,1) != SUBSTR(VB.DEST_SCONTI_CD,1,1)  -- OCN
AND     MAS.IOC_CD = 'O'
	#end
#end


AND   	EXISTS (SELECT 'X' FROM BKG_CUSTOMER BC 
				WHERE 	BC.BKG_NO  = VB.BKG_NO 
#if (${cust_cnt_cd} != '') 
				AND 	BC.CUST_CNT_CD = @[cust_cnt_cd] 
#end
#if (${cust_seq} != '') 				
				AND 	CUST_SEQ= @[cust_seq]
#end
#if (${cust_nm} != '') 
				AND 	CUST_NM like @[cust_nm] || '%'
#end

#if (${io_bnd_cd} == 'O') 
				AND BKG_CUST_TP_CD='S'
#elseif (${io_bnd_cd} == 'I') 
				AND BKG_CUST_TP_CD='C'
#end
				)
#if (${pkup_loc_cd} != '') 
	#if (${pkup_yd_cd} != '') 
		AND   	TROD.PKUP_YD_CD  = @[pkup_loc_cd] || NVL(@[pkup_yd_cd],'') 
    #else
		AND   	TROD.PKUP_LOC_CD  LIKE @[pkup_loc_cd] || '%'
    #end
#elseif (${pkup_yd_cd} != '') 
	AND   	TROD.PKUP_LOC_CD   LIKE NVL(@[pkup_loc_cd],'') ||  NVL(@[pkup_yd_cd],'')
#end

#if (${bkg_dt_fr} != '') 
AND   	VB.BKG_CRE_DT > TO_DATE(@[bkg_dt_fr],'YYYY-MM-DD') 
#end
#if (${bkg_dt_to} != '') 
AND 	VB.BKG_CRE_DT <= TO_DATE(@[bkg_dt_to],'YYYY-MM-DD') + 0.99999     --BKG Date
#end

#if (${tro_dt_fr} != '') 
AND   	TRO.RQST_DT >= TO_DATE(@[tro_dt_fr],'YYYY-MM-DD') 
#end

#if (${tro_dt_to} != '') 
AND   	TRO.RQST_DT <= TO_DATE(@[tro_dt_to],'YYYY-MM-DD') + 0.99999
#end

#if (${pup_dt_fr} != '') 
AND   	TROD.DOR_ARR_DT >= TO_DATE(@[pup_dt_fr],'YYYY-MM-DD') 
#end

#if (${pup_dt_to} != '') 
AND   	TROD.DOR_ARR_DT <= TO_DATE(@[pup_dt_to],'YYYY-MM-DD') + 0.99999
#end

#if (${bkg_ofc_cd} != '') 
AND   	VB.BKG_OFC_CD    = @[bkg_ofc_cd]
#end

#if (${slan_cd} != '') 
AND   	VB.SLAN_CD       = @[slan_cd]
#end


#if (${bkg_staff} != '') 
AND   	VB.DOC_USR_ID = @[bkg_staff]		--BKG Staff
#end

#if (${pol_cd} != '') 
AND   	VB.POL_CD        = @[pol_cd]
#end

#if (${eq_ctrl_ofc_cd} != '') 
AND   	VB.EQ_CTRL_OFC_CD = @[eq_ctrl_ofc_cd]  --EQ OFFICE
#end

#if(${dcgo_flg} !=''||${rc_flg} !=''||${awk_cgo_flg} !=''||${bb_cgo_flg} !=''||${so_flg} !='')
AND (1=2 
#if (${dcgo_flg} == 'DG')
	OR VB.DCGO_FLG ='Y' --Special DG   
#end
#if (${rc_flg} == 'RF') 
	OR VB.RC_FLG = 'Y'		--Special RF  
#end
#if (${awk_cgo_flg} == 'AK') 
	OR VB.AWK_CGO_FLG = 'Y'	--Special AK  
#end   
#if (${bb_cgo_flg} == 'BB') 
	OR VB.BB_CGO_FLG = 'Y'	--Special BB  
#end 
#if (${so_flg} == 'Y') 
	OR TRO.SO_FLG       = @[so_flg]
#end
)
#end

GROUP BY  'Lane : ' || VB.SLAN_CD || ' Trunk VVD : ' || VB.VSL_CD||VB.SKD_VOY_NO||VB.SKD_DIR_CD || ' P/UP Date : ' || TO_CHAR(TROD.DOR_ARR_DT,'YYYY-MM-DD') || ' P/UP Yard : ' || TROD.PKUP_YD_CD
,	    VB.SLAN_CD,VB.VSL_CD ,VB.SKD_VOY_NO,VB.SKD_DIR_CD,TROD.DOR_ARR_DT
,	    VB.BKG_NO

,	     TRO.TRO_SEQ
,	     TROD.TRO_SUB_SEQ                 
,	     TRO.ACT_SHPR_NM                    
, 	   	 TRO.CNTC_PSON_NM || TRO.CNTC_PHN_NO 
,	     TRO.DOR_LOC_CD                         
,	     TROD.CNTR_TPSZ_CD                                   
,	     TROD.TRO_QTY                                          
,	     TO_CHAR(TROD.DOR_ARR_DT,'YYYY-MM-DD')      
,	     TROD.PKUP_YD_CD 
,	     TROD.RTN_YD_CD 
,	     TRO.RCV_TERM_CD                                       
,      	 TRO.SO_FLG                                            
,	     TO_CHAR(TRO.RQST_DT,'YYYY-MM-DD') 
,	     Translate(NVL(TRO.DIFF_RMK,' '),chr(13)||chr(10),' ')                           
,	     VB.POR_CD
,	     VB.POL_CD
,	     VB.POD_CD
,	     VB.DEL_CD
,	     VB.SLAN_CD                                 
,	     VB.VSL_CD||VB.SKD_VOY_NO||VB.SKD_DIR_CD 
,	     VB.EQ_CTRL_OFC_CD                         
,	     VB.BKG_OFC_CD                            
,	     TRO.OWNR_TRK_FLG
ORDER BY 'Lane : ' || VB.SLAN_CD || ' Trunk VVD : ' || VB.VSL_CD||VB.SKD_VOY_NO||VB.SKD_DIR_CD || ' P/UP Date : ' || TO_CHAR(TROD.DOR_ARR_DT,'YYYY-MM-DD') || ' P/UP Yard : ' || TROD.PKUP_YD_CD
,	    VB.BKG_NO
,	     TRO.TRO_SEQ
,	     TROD.TRO_SUB_SEQ                 
,	     TRO.ACT_SHPR_NM                    
, 	   	 TRO.CNTC_PSON_NM || TRO.CNTC_PHN_NO 
,	     TRO.DOR_LOC_CD                         
,	     TROD.CNTR_TPSZ_CD  
) T			]]></sql>
			<params>
				<param name="bkg_dt_fr" type="12" value="" out="N"/>
				<param name="bkg_dt_to" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bkg_sts_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="pkup_loc_cd" type="12" value="" out="N"/>
				<param name="pkup_yd_cd" type="12" value="" out="N"/>
				<param name="tro_dt_fr" type="12" value="" out="N"/>
				<param name="tro_dt_to" type="12" value="" out="N"/>
				<param name="pup_dt_fr" type="12" value="" out="N"/>
				<param name="pup_dt_to" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="bkg_staff" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="eq_ctrl_ofc_cd" type="12" value="" out="N"/>
				<param name="so_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
