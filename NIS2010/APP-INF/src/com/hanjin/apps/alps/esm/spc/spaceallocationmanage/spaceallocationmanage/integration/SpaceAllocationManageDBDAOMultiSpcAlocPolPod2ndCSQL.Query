<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOMultiSpcAlocPolPod2ndCSQL">
			<desc><![CDATA[
 2012.08.29 전상화 [CHM-201219578-01] Control by HO / RHQ 화면에 Alloc Copy & Paste를 위한 삭제 
 2012.11.28 김시몬 [CHM-201219578-01] 대상 MAS_MON_VVD를 가져올때 RLANE_CD를 조건에 추가
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2014.08.12 [CHM-201431081] SPC Allocation Control Option 추가 보완 요청건]]></desc>
			<sql><![CDATA[
INSERT INTO SPC_ALOC_POL_POD (
    RLANE_CD            ,
    DIR_CD              ,
    VSL_CD              ,
    SKD_VOY_NO          ,
    SKD_DIR_CD          ,
    SLS_OFC_CD          ,
    POL_YD_CD           ,
    POD_YD_CD           ,
    TS_FLG              ,
    MNL_FLG             ,
    REP_TRD_CD          ,
    REP_SUB_TRD_CD      ,
    TRD_CD              ,
    SUB_TRD_CD          ,
    IOC_CD              ,
    SLS_RHQ_CD          ,
    SLS_AQ_CD           ,
    SLS_RGN_OFC_CD      ,
    ASGN_TTL_QTY        ,
    ASGN_20FT_QTY       ,
    ASGN_40FT_QTY       ,
    ASGN_40FT_HC_QTY    ,
    ASGN_45FT_HC_QTY    ,
    ASGN_53FT_QTY       ,
    ASGN_RF_QTY         ,
    --20140812 추가
    ASGN_20FT_DRY_QTY   ,
    ASGN_40FT_DRY_QTY   ,
    ASGN_RD_QTY         ,

    ASGN_TTL_WGT        ,
    MNL_ALOC_RMK        ,
    ALOC_USR_ID         ,
    ALOC_GDT            ,
    CRE_USR_ID          ,
    CRE_DT              ,
    UPD_USR_ID          ,
    UPD_DT              ,
    --20140812 추가
    CUST_CNT_CD         ,
    CUST_SEQ            ,
    CTRT_NO             ,
    USA_BKG_MOD_CD      ,
    DEST_LOC_CD 
)
           
(select   
    MAIN.RLANE_CD, 
    MAIN.DIR_CD              ,
   @[newVslVd] VSL_CD              ,
   @[newSkdVoyNo] SKD_VOY_NO          ,
   @[newSkdDirCd] SKD_DIR_CD          ,
    MAIN.SLS_OFC_CD          ,
    MAIN.POL_YD_CD           ,
    MAIN.POD_YD_CD           ,
    MAIN.TS_FLG              ,
    MAIN.MNL_FLG             ,
    MAIN.REP_TRD_CD          ,
    MAIN.REP_SUB_TRD_CD      ,
    MAIN.TRD_CD              ,
    MAIN.SUB_TRD_CD          ,
    MAIN.IOC_CD              ,
    MAIN.SLS_RHQ_CD          ,
    MAIN.SLS_AQ_CD           ,
    MAIN.SLS_RGN_OFC_CD      ,
    MAIN.ASGN_TTL_QTY        ,
    MAIN.ASGN_20FT_QTY       ,
    MAIN.ASGN_40FT_QTY       ,
    MAIN.ASGN_40FT_HC_QTY    ,
    MAIN.ASGN_45FT_HC_QTY    ,
    MAIN.ASGN_53FT_QTY       ,
    MAIN.ASGN_RF_QTY         ,
    --20140812 추가
    MAIN.ASGN_20FT_DRY_QTY   ,
    MAIN.ASGN_40FT_DRY_QTY   ,
    MAIN.ASGN_RD_QTY         ,    
    
    MAIN.ASGN_TTL_WGT        ,
    MAIN.MNL_ALOC_RMK        ,
    @[upd_usr_id]          ,
    CAST(SYS_EXTRACT_UTC(TO_TIMESTAMP(@[aloc_gdt], 'YYYY/MM/DD HH24:MI:SS')) AS DATE) AS ALOC_GDT,
    @[upd_usr_id]          ,
    SYSDATE AS CRE_DT              ,
    @[upd_usr_id]          ,
    SYSDATE AS UPD_DT,
    --20140812 추가
    MAIN.CUST_CNT_CD      ,
    MAIN.CUST_SEQ         ,
    MAIN.CTRT_NO          ,
    MAIN.USA_BKG_MOD_CD   ,
    MAIN.DEST_LOC_CD     
from (
 WITH BASE_KEY AS (
    SELECT          
           @[year]       AS YEAR      ,
           @[week]       AS WEEK      ,
           @[office]     AS RHQ_CD    ,
           @[lane]       AS RLANE_CD  ,
           @[bound]      AS DIR_CD    ,
           @[vsl_cd]      AS VSL_CD    ,
           @[skd_voy_no]  AS SKD_VOY_NO,
           @[skd_dir_cd]  AS SKD_DIR_CD,
           @[fcast]      AS FCAST     ,
           L.CONTI_CD    AS OFC_CONTI ,
           O.OFC_CD      AS OFC_CD
      FROM MDM_LOCATION     L,
           MDM_ORGANIZATION O
     WHERE L.LOC_CD = O.LOC_CD
       AND O.OFC_CD = @[office]
), 

BASE AS (
    SELECT B.YEAR,
           B.WEEK,
           SUBSTR(T.SLS_YRMON, 1, 4) AS COST_YR,
           SUBSTR(T.SLS_YRMON, 5)    AS MON    ,
           T.COST_WK   ,
           B.RHQ_CD    ,
           T.TRD_CD    ,
           B.RLANE_CD  ,
           B.DIR_CD    ,
           B.VSL_CD    ,
           B.SKD_VOY_NO,
           B.SKD_DIR_CD,
           B.FCAST     ,
           NVL((O.CTRL_PORT_FLG)   , 'N') AS POL_POD,
           NVL((O.CTRL_40FT_HC_FLG), 'N') AS HC40   ,
           NVL((O.CTRL_45FT_HC_FLG), 'N') AS HC45   ,
           NVL((O.CTRL_53FT_FLG)   , 'N') AS HC53   ,
           NVL((O.CTRL_RF_FLG)     , 'N') AS REEFER ,
           NVL((O.CTRL_WGT_FLG)    , 'N') AS WEIGHT ,
           NVL((O.CTRL_SPC_FLG)    , 'N') AS VOLUME ,
           B.OFC_CD   ,
           B.OFC_CONTI
      FROM MAS_MON_VVD       T,
           BASE_KEY          B,
           SPC_ALOC_CTRL_OPT O
     WHERE T.RLANE_CD      = B.RLANE_CD
       AND T.VSL_CD        = B.VSL_CD
       AND T.SKD_VOY_NO    = B.SKD_VOY_NO
       AND T.DIR_CD        = B.DIR_CD
       AND O.RLANE_CD  (+) = B.RLANE_CD
       AND O.DIR_CD    (+) = B.DIR_CD
       AND O.VSL_CD    (+) = B.VSL_CD
       AND O.SKD_VOY_NO(+) = B.SKD_VOY_NO
       AND O.SKD_DIR_CD(+) = B.SKD_DIR_CD
       AND T.TRD_CD        = SPC_GET_REP_TRD_FNC(B.RLANE_CD)
       AND SUBSTR(T.SLS_YRMON, 1, 4)||T.COST_WK = B.YEAR||B.WEEK
)
, REP_VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON,
           V.COST_WK   ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           P.OFC_CD   ,
           P.OFC_CONTI,
           '1' AS STS
      FROM MAS_MON_VVD V,
           BASE_KEY    P
     WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND V.RLANE_CD   = P.RLANE_CD
       AND V.VSL_CD     = P.VSL_CD
       AND V.SKD_VOY_NO = P.SKD_VOY_NO
       AND V.DIR_CD     = P.SKD_DIR_CD
       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1
                                                                 FROM MAS_MON_VVD N
                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)
                                                                  AND N.VSL_CD      = V.VSL_CD
                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO
                                                                  AND N.DIR_CD     = V.DIR_CD
                                                                  AND N.DELT_FLG   = 'N' ))
)
, PORT_SKD AS (
    SELECT V.VSL_CD       ,
           V.SKD_VOY_NO   ,
           V.SKD_DIR_CD   ,
           VPS.VPS_PORT_CD,
           VPS.YD_CD      ,
           VPS.CLPT_SEQ   ,
           VPS.CLPT_SEQ AS PORT_SEQ,
           VPS.VPS_ETD_DT ,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD), VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD) AS MAX_SEQ
      FROM MDM_LOCATION     L  ,
           VSK_VSL_PORT_SKD VPS,
           REP_VVDS         V
     WHERE L.LOC_CD       = VPS.VPS_PORT_CD
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
)
, VSL_PORT_SKD AS (
    SELECT RLANE_CD  ,
           DIR_CD    ,
           RHQ_CD    ,
           VSL_CD    ,
           SKD_VOY_NO,
           SKD_DIR_CD,
           COST_YR_WK,
           POL_CD    ,
           POD_CD    ,
 			SPC_CONTI_CONV_PORT_FNC(POL_CONTI, POD_CONTI, RLANE_CD, SUBSTR(POL_CD, 1, 5), SUBSTR(POD_CD, 1, 5)) AS POL_CONTI,
		    POD_CONTI,
           IOC_CD   ,
           POL_PAST ,
           PAST     ,
           POL_POD  ,
           HC40     ,
           HC45     ,
           HC53     ,
           REEFER   ,
           WEIGHT   ,
           VOLUME   ,
           OFC_CD   ,
           OFC_CONTI
      FROM (
              SELECT V.RLANE_CD  ,
                     V.DIR_CD    ,
                     V.RHQ_CD    ,
                     V.VSL_CD    ,
                     V.SKD_VOY_NO,
                     V.SKD_DIR_CD,
                     V.COST_YR||V.COST_WK          AS COST_YR_WK,
                     NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD    ,
                     NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD    ,
                     S1.CLPT_SEQ AS POL_SEQ,
                     S2.CLPT_SEQ AS POD_SEQ,
                     SPC_CONTI_CONV_FNC(L1.CONTI_CD, V.RLANE_CD,S1.SKD_DIR_CD)   AS POL_CONTI,
                     SPC_CONTI_CONV_FNC('',V.RLANE_CD,S2.SKD_DIR_CD,S2.VPS_PORT_CD) AS POD_CONTI,
                     SPC_GET_OCN_IPC_FNC(V.RLANE_CD, S1.VPS_PORT_CD, S2.VPS_PORT_CD) AS IOC_CD,
                     (CASE
                            WHEN S1.VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), S1.VPS_PORT_CD ) THEN 'Y'
                                                                                                                                     ELSE 'N'
                      END) AS POL_PAST,
                     (DECODE(V.FCAST, '1', CASE
                                                WHEN S1.VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), S1.VPS_PORT_CD ) THEN 'Y'
                                                                                                                                                         ELSE 'N'
                                            END, '2', 'N', '3', 'Y')
                     ) AS PAST,
                     POL_POD ,
                     HC40    ,
                     HC45    ,
                     HC53    ,
                     REEFER  ,
                     WEIGHT  ,
                     VOLUME  ,
                     V.OFC_CD,
                     V.OFC_CONTI
                FROM BASE         V ,
                     PORT_SKD     S1,
                     PORT_SKD     S2,
                     MDM_LOCATION L1
               WHERE S1.VSL_CD      = V.VSL_CD
                 AND S1.SKD_VOY_NO  = V.SKD_VOY_NO
                 AND S1.SKD_DIR_CD  = V.SKD_DIR_CD
                 AND S1.VSL_CD      = S2.VSL_CD
                 AND S1.SKD_VOY_NO  = S2.SKD_VOY_NO
                 AND S1.SKD_DIR_CD  = S2.SKD_DIR_CD
                 AND (    S1.PORT_SEQ = S1.MAX_SEQ   -- ????? CALLING ????? DOUBLE CALLING ????? ??????? PORT ??????? ?????
                       OR S2.PORT_SEQ < S1.MAX_SEQ ) -- DOUBLE CALLING PORT?? POD ?? LAST DOUBLE CALLING PORT ????? ????? ??????? FILTERING
                 AND S1.VPS_PORT_CD = L1.LOC_CD
              UNION ALL
              SELECT V.RLANE_CD  ,
                     V.DIR_CD    ,
                     V.RHQ_CD    ,
                     V.VSL_CD    ,
                     V.SKD_VOY_NO,
                     V.SKD_DIR_CD,
                     V.COST_YR||V.COST_WK AS COST_YR_WK,
                     '0000000' AS POL_CD   ,
                     '0000000' AS POD_CD   ,
                     0         AS POL_SEQ  ,
                     0         AS POD_SEQ  ,
                     ' '       AS POL_CONTI,
                     ''        AS POD_CONTI,
                     DECODE(SUBSTR(V.TRD_CD, 0, 1), 'I', 'I', 'O') AS IOC_CD,
                     ''        AS POL_PAST ,
                     DECODE(V.FCAST, '1', '', '2', 'N', '3', 'Y')  AS PAST  ,
                     POL_POD,
                     HC40   ,
                     HC45   ,
                     HC53    ,
                     REEFER ,
                     WEIGHT ,
                     VOLUME ,
                     OFC_CD ,
                     OFC_CONTI
                FROM BASE V
           ) Z
  
)

  SELECT 
         D.RLANE_CD,     D.DIR_CD ,    D.VSL_CD,         D.SKD_VOY_NO,  D.SKD_DIR_CD ,
         D.SLS_OFC_CD ,  D.POL_YD_CD,  D.POD_YD_CD ,     D.TS_FLG,      D.MNL_FLG,
         --20140812 추가
         D.CUST_CNT_CD,  D.CUST_SEQ, D.CTRT_NO, D.USA_BKG_MOD_CD, D.DEST_LOC_CD
    FROM SPC_ALOC_POL_POD D,
         VSL_PORT_SKD     B
   WHERE D.RLANE_CD   = B.RLANE_CD
     AND D.DIR_CD     = B.DIR_CD
     AND D.VSL_CD     = B.VSL_CD
     AND D.SKD_VOY_NO = B.SKD_VOY_NO
     AND D.SKD_DIR_CD = B.SKD_DIR_CD
     AND SUBSTR(D.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD
     AND SUBSTR(D.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD
     AND (D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI)
     AND D.TS_FLG     = 'N'
     AND D.SLS_OFC_CD = D.SLS_RGN_OFC_CD
 
 UNION ALL  
   
 SELECT
        D.RLANE_CD,     D.DIR_CD ,    D.VSL_CD,         D.SKD_VOY_NO,  D.SKD_DIR_CD ,
        D.SLS_OFC_CD ,  D.POL_YD_CD,  D.POD_YD_CD ,     D.TS_FLG,      D.MNL_FLG,
        --20140812 추가
        D.CUST_CNT_CD,  D.CUST_SEQ, D.CTRT_NO, D.USA_BKG_MOD_CD, D.DEST_LOC_CD
   FROM SPC_ALOC_POL_POD D,
        VSL_PORT_SKD     B
  WHERE D.RLANE_CD   = B.RLANE_CD
    AND D.DIR_CD     = B.DIR_CD
    AND D.VSL_CD     = B.VSL_CD
    AND D.SKD_VOY_NO = B.SKD_VOY_NO
    AND D.SKD_DIR_CD = B.SKD_DIR_CD
    AND SUBSTR(D.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD
    AND SUBSTR(D.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD
    AND B.POL_CONTI <> 'A'
    AND D.TS_FLG     = 'Y'
    AND D.SLS_OFC_CD = D.SLS_RGN_OFC_CD
    AND ((D.SLS_RHQ_CD = B.RHQ_CD OR B.OFC_CONTI = B.POL_CONTI )OR B.POL_CONTI = DECODE(B.RHQ_CD, 'NYCRA', 'M', 'E'))
 
 UNION ALL 
 
 select
        D.RLANE_CD,     D.DIR_CD ,    D.VSL_CD,         D.SKD_VOY_NO,  D.SKD_DIR_CD ,
        D.SLS_OFC_CD ,  D.POL_YD_CD,  D.POD_YD_CD ,     D.TS_FLG,      D.MNL_FLG,
        --20140812 추가
        D.CUST_CNT_CD,  D.CUST_SEQ, D.CTRT_NO, D.USA_BKG_MOD_CD, D.DEST_LOC_CD
   FROM SPC_ALOC_POL_POD D  ,
        BASE_KEY         P  
  WHERE D.RLANE_CD   = P.RLANE_CD
    AND D.DIR_CD     = P.DIR_CD
    AND D.VSL_CD     = P.VSL_CD
    AND D.SKD_VOY_NO = P.SKD_VOY_NO
    AND D.SKD_DIR_CD = P.SKD_DIR_CD         
    AND P.RLANE_CD   = 'WAFIE' 
   #if (${office} == 'HAMRU')
    AND D.SLS_OFC_CD in ('HAMRU', 'NYCRA')
   #else 
    AND D.SLS_OFC_CD = @[office]
   #end                  
    )  INFO, SPC_ALOC_POL_POD MAIN
 WHERE
       INFO.RLANE_CD    = MAIN.RLANE_CD    
   AND INFO.DIR_CD      = MAIN.DIR_CD
   AND INFO.VSL_CD      = MAIN.VSL_CD   
   AND INFO.SKD_VOY_NO  = MAIN.SKD_VOY_NO 
   AND INFO.SKD_DIR_CD  = MAIN.SKD_DIR_CD
   AND INFO.SLS_OFC_CD  = MAIN.SLS_OFC_CD
   AND INFO.POL_YD_CD   = MAIN.POL_YD_CD 
   AND INFO.POD_YD_CD   = MAIN.POD_YD_CD
   AND INFO.TS_FLG      = MAIN.TS_FLG
   AND INFO.MNL_FLG     = MAIN.MNL_FLG
   --20140812 추가
   AND INFO.CUST_CNT_CD    = MAIN.CUST_CNT_CD   
   AND INFO.CUST_SEQ       = MAIN.CUST_SEQ 
   AND INFO.CTRT_NO        = MAIN.CTRT_NO
   AND INFO.USA_BKG_MOD_CD = MAIN.USA_BKG_MOD_CD
   AND INFO.DEST_LOC_CD    = MAIN.DEST_LOC_CD
        )			]]></sql>
			<params>
				<param name="newVslVd" type="12" value="" out="N"/>
				<param name="newSkdVoyNo" type="12" value="" out="N"/>
				<param name="newSkdDirCd" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="aloc_gdt" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="office" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="fcast" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
