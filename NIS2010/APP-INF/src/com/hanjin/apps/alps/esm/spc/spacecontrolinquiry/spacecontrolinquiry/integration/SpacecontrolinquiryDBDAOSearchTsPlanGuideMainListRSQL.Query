<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchTsPlanGuideMainListRSQL">
			<desc><![CDATA[[T/S Plan & guide main list]을 [조회]합니다.

* 2016.07.14 [CHM-201642304] 이혜민 T/S Plan & Guide 기능 Logic 수정 ]]></desc>
			<sql><![CDATA[
WITH VSK_DATA_TMP AS (
SELECT DISTINCT 'VSK' AS FLG
			     , SPC_GET_REP_TRD_FNC(A1.RLANE_CD) AS REP_TRD_CD
				 , SPC_GET_REP_SUB_TRD_FNC(A1.RLANE_CD) AS REP_SUB_TRD_CD
				 , A1.RLANE_CD
				 , A1.DIR_CD
				 , A1.COST_WK
				 , A2.VSL_CD||A2.SKD_VOY_NO||A2.SKD_DIR_CD AS VVD_CD                                                                           
				 , A2.IRR_PORT_CD
				 , A2.IRR_YD_CD
				 , A2.SKD_CNG_STS_CD
				 , A2.SKD_CNG_RSN_CD
                 , A2.SKD_CNG_RSN_NM
				 , A2.PORT_SKP_TP_CD
				 , A2.TS_RMK
				 , '' AS USR_RMK
				 , A2.CRR_CD
				 , 'AUTO' AS CRE_USR_ID
				 , 'AUTO' AS UPD_USR_ID
				 , SYSDATE AS UPD_DT                                                 
			FROM MAS_MON_VVD A1, 
				 (
					--일반적인 Skip, Phase Out, Phase In
                    SELECT DISTINCT V2.SLAN_CD
                            , V2.VSL_CD
                            , V2.SKD_VOY_NO
                            , V2.SKD_DIR_CD
                            , V2.VPS_PORT_CD AS IRR_PORT_CD
                            , SUBSTR(V2.YD_CD, -2) AS IRR_YD_CD
                            , V2.SKD_CNG_STS_CD
                            , CASE WHEN V2.SKD_CNG_STS_CD = 'S'
                                   THEN (
                                            SELECT
                                                B.INTG_CD_VAL_CTNT AS CODE
                                             FROM COM_INTG_CD_DTL B
                                            WHERE B.INTG_CD_ID = 'CD01830'
                                              AND B.INTG_CD_VAL_CTNT = V2.PORT_SKP_RSN_CD
                                        )
                                    WHEN V2.SKD_CNG_STS_CD = 'O' OR V2.SKD_CNG_STS_CD = 'I'
                                    THEN (
                                            SELECT
                                                B.INTG_CD_VAL_CTNT AS CODE
                                             FROM COM_INTG_CD_DTL B
                                            WHERE B.INTG_CD_ID = 'CD01819'
                                              AND B.INTG_CD_VAL_CTNT = V2.PHS_IO_RSN_CD
                                        )
                                    END AS SKD_CNG_RSN_CD                            
                            , CASE WHEN V2.SKD_CNG_STS_CD = 'S'
                                   THEN (
                                            SELECT
                                                B.INTG_CD_VAL_DP_DESC AS NAME
                                             FROM COM_INTG_CD_DTL B
                                            WHERE B.INTG_CD_ID = 'CD01830'
                                              AND B.INTG_CD_VAL_CTNT = V2.PORT_SKP_RSN_CD
                                        )
                                    WHEN V2.SKD_CNG_STS_CD = 'O' OR V2.SKD_CNG_STS_CD = 'I'
                                    THEN (
                                            SELECT
                                                B.INTG_CD_VAL_DESC AS NAME
                                             FROM COM_INTG_CD_DTL B
                                            WHERE B.INTG_CD_ID = 'CD01819'
                                              AND B.INTG_CD_VAL_CTNT = V2.PHS_IO_RSN_CD
                                        )
                                    END AS SKD_CNG_RSN_NM
                            , DECODE(V2.PORT_SKP_TP_CD, 'F', 'Y', 'I', 'N') AS PORT_SKP_TP_CD
                            , DECODE(SKD_CNG_STS_CD, 'S', V2.VPS_RMK, 'O', V2.PHS_IO_RMK) AS TS_RMK 
                            , NVL(V1.ACT_CRR_CD, M.CRR_CD) AS CRR_CD 
                    FROM    VSK_VSL_SKD V1
                            , VSK_VSL_PORT_SKD V2
                            , MDM_VSL_CNTR M
                    WHERE   1=1
                    AND     V1.VSL_SLAN_CD = V2.SLAN_CD
                    AND     V1.VSL_CD      = V2.VSL_CD
                    AND     V1.SKD_VOY_NO  = V2.SKD_VOY_NO
                    AND     V1.SKD_DIR_CD  = V2.SKD_DIR_CD
                    AND     V1.VSL_CD      = M.VSL_CD
                    AND     NVL(V2.SKD_CNG_STS_CD, '*') IN ('S', 'O', 'I')
--                    AND     V2.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
                    AND     V2.VPS_PORT_CD NOT IN ('RUNJK','EGSUZ','PAPAC')

--                    UNION ALL     
--                    --Phase Out시 PF 스케줄상 Skip 된 뒷 Port : Skip(O)
--                    SELECT DISTINCT
--                            B1.VSL_SLAN_CD AS SLAN_CD
--                          , B1.VSL_CD
--                          , B1.SKD_VOY_NO
--                          , B1.SKD_DIR_CD
--                          , B2.PORT_CD AS IRR_PORT_CD
--                          , SUBSTR(B2.YD_CD, -2) AS IRR_YD_CD
--                          , 'K' AS SKD_CNG_STS_CD
--                          , '' AS SKD_CNG_RSN_CD
--                          , '' AS SKD_CNG_RSN_NM
--                          , 'X' AS PORT_SKP_TP_CD
--                          , '' AS TS_RMK
--                          , B1.CRR_CD
--                    FROM (
--                            SELECT A1.VSL_CD
--                                 , A1.SKD_VOY_NO
--                                 , A1.SKD_DIR_CD
--                                 , A1.VPS_PORT_CD
--                                 , A1.CLPT_IND_SEQ
--                                 , A1.CLPT_SEQ
--                                 , A1.YD_CD
--                                 , A1.VSL_SLAN_CD
--                                 , A1.SKD_CNG_STS_CD
--                                 , A1.PF_SVC_TP_CD
--                                 , A1.PF_PORT_ROTN_SEQ
--                                 , A1.REF_VSL_CD
--                                 , A1.REF_SKD_VOY_NO
--                                 , A1.REF_SKD_DIR_CD
--                                 , A1.REF_VPS_PORT_CD
--                                 , A1.REF_CLPT_IND_SEQ
--                                 , A1.REF_CLPT_SEQ
--                                 , A1.REF_YD_CD
--                                 , A1.REF_VSL_SLAN_CD
--                                 , A1.REF_PF_SVC_TP_CD
--                                 , A1.REF_PORT_ROTN_SEQ
--                                 , NVL(A3.ACT_CRR_CD, A4.CRR_CD) AS CRR_CD 
--                            FROM VSK_PHS_IO_HIS A1
--                                ,VSK_VSL_PORT_SKD A2
--                                ,VSK_VSL_SKD A3
--                                ,MDM_VSL_CNTR A4
--                            WHERE A1.VSL_CD       = A2.VSL_CD
--                            AND A1.SKD_VOY_NO     = A2.SKD_VOY_NO
--                            AND A1.SKD_DIR_CD     = A2.SKD_DIR_CD
--                            AND A1.VPS_PORT_CD    = A2.VPS_PORT_CD
--                            AND A1.CLPT_IND_SEQ   = A2.CLPT_IND_SEQ
--                            AND A1.SKD_CNG_STS_CD = A2.SKD_CNG_STS_CD
--                            AND A3.VSL_SLAN_CD    = A2.SLAN_CD
--                            AND A3.VSL_CD         = A2.VSL_CD
--                            AND A3.SKD_VOY_NO     = A2.SKD_VOY_NO
--                            AND A3.SKD_DIR_CD     = A2.SKD_DIR_CD
--                            AND A3.VSL_CD         = A4.VSL_CD
--                    ) B1, VSK_PF_SKD_DTL B2
--                    WHERE 1=1
--                    AND NVL(B1.REF_VSL_SLAN_CD,   B1.VSL_SLAN_CD)      = B2.VSL_SLAN_CD
--                    AND NVL(B1.REF_PF_SVC_TP_CD,  B1.PF_SVC_TP_CD)     = B2.PF_SVC_TP_CD
--                    AND NVL(B1.REF_SKD_DIR_CD,    B1.SKD_DIR_CD)       = B2.SKD_DIR_CD
--                    AND DECODE(B1.SKD_CNG_STS_CD,'O',NVL(B1.REF_PORT_ROTN_SEQ, B1.PF_PORT_ROTN_SEQ) ) < B2.PORT_ROTN_SEQ
--
--                    UNION ALL
--
--                    --Phase In시 PF 스케줄상 Skip 된 앞 Port : Skip(I)
--                    SELECT DISTINCT
--                            B1.VSL_SLAN_CD AS SLAN_CD
--                          , B1.VSL_CD
--                          , B1.SKD_VOY_NO
--                          , B1.SKD_DIR_CD
--                          , B2.PORT_CD AS IRR_PORT_CD
--                          , SUBSTR(B2.YD_CD, -2) AS IRR_YD_CD
--                          , 'P' AS SKD_CNG_STS_CD
--                          , '' AS SKD_CNG_RSN_CD
--                          , '' AS SKD_CNG_RSN_NM
--                          , 'X' AS PORT_SKP_TP_CD
--                          , '' AS TS_RMK
--                          , B1.CRR_CD
--                    FROM (
--                            SELECT A1.VSL_CD
--                                 , A1.SKD_VOY_NO
--                                 , A1.SKD_DIR_CD
--                                 , A1.VPS_PORT_CD
--                                 , A1.CLPT_IND_SEQ
--                                 , A1.CLPT_SEQ
--                                 , A1.YD_CD
--                                 , A1.VSL_SLAN_CD
--                                 , A1.SKD_CNG_STS_CD
--                                 , A1.PF_SVC_TP_CD
--                                 , A1.PF_PORT_ROTN_SEQ
--                                 , A1.REF_VSL_CD
--                                 , A1.REF_SKD_VOY_NO
--                                 , A1.REF_SKD_DIR_CD
--                                 , A1.REF_VPS_PORT_CD
--                                 , A1.REF_CLPT_IND_SEQ
--                                 , A1.REF_CLPT_SEQ
--                                 , A1.REF_YD_CD
--                                 , A1.REF_VSL_SLAN_CD
--                                 , A1.REF_PF_SVC_TP_CD
--                                 , A1.REF_PORT_ROTN_SEQ
--                                 , NVL(A3.ACT_CRR_CD, A4.CRR_CD) AS CRR_CD 
--                            FROM VSK_PHS_IO_HIS A1
--                                ,VSK_VSL_PORT_SKD A2
--                                ,VSK_VSL_SKD A3
--                                ,MDM_VSL_CNTR A4
--                            WHERE A1.VSL_CD       = A2.VSL_CD
--                            AND A1.SKD_VOY_NO     = A2.SKD_VOY_NO
--                            AND A1.SKD_DIR_CD     = A2.SKD_DIR_CD
--                            AND A1.VPS_PORT_CD    = A2.VPS_PORT_CD
--                            AND A1.CLPT_IND_SEQ   = A2.CLPT_IND_SEQ
--                            AND A1.SKD_CNG_STS_CD = A2.SKD_CNG_STS_CD
--                            AND A3.VSL_SLAN_CD    = A2.SLAN_CD
--                            AND A3.VSL_CD         = A2.VSL_CD
--                            AND A3.SKD_VOY_NO     = A2.SKD_VOY_NO
--                            AND A3.SKD_DIR_CD     = A2.SKD_DIR_CD
--                            AND A3.VSL_CD         = A4.VSL_CD
--                    ) B1, VSK_PF_SKD_DTL B2
--                    WHERE 1=1
--                    AND NVL(B1.REF_VSL_SLAN_CD,   B1.VSL_SLAN_CD)      = B2.VSL_SLAN_CD
--                    AND NVL(B1.REF_PF_SVC_TP_CD,  B1.PF_SVC_TP_CD)     = B2.PF_SVC_TP_CD
--                    AND NVL(B1.REF_SKD_DIR_CD,    B1.SKD_DIR_CD)       = B2.SKD_DIR_CD
--                    AND DECODE(B1.SKD_CNG_STS_CD,'I',NVL(B1.REF_PORT_ROTN_SEQ, B1.PF_PORT_ROTN_SEQ) ) > B2.PORT_ROTN_SEQ
				 ) A2
			WHERE A1.VSL_CD(+)     = A2.VSL_CD
			  AND A1.SKD_VOY_NO(+) = A2.SKD_VOY_NO
			  AND A1.DIR_CD(+)     = A2.SKD_DIR_CD
			  AND A1.DELT_FLG      = 'N'
			  AND A1.TRD_CD        = SPC_GET_REP_TRD_FNC(A1.RLANE_CD)
			  AND A1.SUB_TRD_CD    = SPC_GET_REP_SUB_TRD_FNC(A1.RLANE_CD)
			#if(${vvd} == '')  
			  AND SUBSTR(A1.SLS_YRMON, 1, 4)||A1.COST_WK IN
				(SELECT /*+ INDEX(D XPKMAS_WK_PRD)*/ D.COST_YR||D.COST_WK
				   FROM MAS_WK_PRD D
				  WHERE D.COST_YR||D.COST_WK >= @[year]||@[week]
					AND ROWNUM               <= TO_NUMBER(@[duration])
				)
			  AND SPC_GET_REP_TRD_FNC(A1.RLANE_CD)        = @[trade]
			  AND SPC_GET_REP_SUB_TRD_FNC(A1.RLANE_CD)    = @[subtrade]
			#if(${lane} != '')
			  AND A1.RLANE_CD                             = @[lane]
			#end
			#if(${bound} != '')
			  AND A1.DIR_CD                               = @[bound]
			#end
			#else
			  AND A2.VSL_CD     = SUBSTR(@[vvd], 1, 4)
			  AND A2.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
			  AND A2.SKD_DIR_CD = SUBSTR(@[vvd], 9, 1)
			#end
)
--VSK 데이터 중에서 SPC에 저장한 것 제외
, VSK_DATA AS (
SELECT B1.FLG
		 , B1.REP_TRD_CD
		 , B1.REP_SUB_TRD_CD
		 , B1.RLANE_CD
		 , B1.DIR_CD
		 , B1.COST_WK
		 , B1.VVD_CD                                                                           
		 , B1.IRR_PORT_CD
		 , B1.IRR_YD_CD
		 , B1.SKD_CNG_STS_CD
		 , B1.SKD_CNG_RSN_CD
         , B1.SKD_CNG_RSN_NM
		 , B1.PORT_SKP_TP_CD
		 , B1.TS_RMK
		 , B1.USR_RMK
		 , B1.CRR_CD
		 , B1.CRE_USR_ID
		 , B1.UPD_USR_ID
		 , B1.UPD_DT
         , B1.VVD_CD AS EXIST_FLG
	FROM VSK_DATA_TMP B1		  
	WHERE (B1.REP_TRD_CD, B1.REP_SUB_TRD_CD, B1.RLANE_CD, B1.VVD_CD, B1.IRR_PORT_CD, B1.IRR_YD_CD, B1.CRE_USR_ID) 
		NOT IN (SELECT REP_TRD_CD, REP_SUB_TRD_CD, RLANE_CD, VVD_CD, IRR_PORT_CD, IRR_YD_CD, CRE_USR_ID FROM SPC_TS_PLN_GID_MN) 


)

, SPC_DATA_TMP AS (
SELECT DISTINCT 'SPC' AS FLG
		      , A1.REP_TRD_CD
              , A1.REP_SUB_TRD_CD
              , A1.RLANE_CD
              , A1.DIR_CD
              , A2.COST_WK
              , A1.VVD_CD
              , A1.IRR_PORT_CD
              , A1.IRR_YD_CD
              , A1.SKD_CNG_STS_CD
              , CASE WHEN A1.SKD_CNG_STS_CD = 'S'
                               THEN (
                                        SELECT
                                            B.INTG_CD_VAL_CTNT AS CODE
                                         FROM COM_INTG_CD_DTL B
                                        WHERE B.INTG_CD_ID = 'CD01830'
                                          AND B.INTG_CD_VAL_CTNT = A1.PORT_SKP_RSN_CD
                                    )
                                WHEN A1.SKD_CNG_STS_CD = 'O'  OR A1.SKD_CNG_STS_CD = 'I'
                                THEN (
                                        SELECT
                                            B.INTG_CD_VAL_CTNT AS CODE
                                         FROM COM_INTG_CD_DTL B
                                        WHERE B.INTG_CD_ID = 'CD01819'
                                          AND B.INTG_CD_VAL_CTNT = A1.PHS_IO_RSN_CD
                                    )
                                END AS SKD_CNG_RSN_CD
              , CASE WHEN A1.SKD_CNG_STS_CD = 'S'
                               THEN (
                                        SELECT
                                            B.INTG_CD_VAL_DP_DESC AS NAME
                                         FROM COM_INTG_CD_DTL B
                                        WHERE B.INTG_CD_ID = 'CD01830'
                                          AND B.INTG_CD_VAL_CTNT = A1.PORT_SKP_RSN_CD
                                    )
                                WHEN A1.SKD_CNG_STS_CD = 'O' OR A1.SKD_CNG_STS_CD = 'I'
                                THEN (
                                        SELECT
                                            B.INTG_CD_VAL_DESC AS NAME
                                         FROM COM_INTG_CD_DTL B
                                        WHERE B.INTG_CD_ID = 'CD01819'
                                          AND B.INTG_CD_VAL_CTNT = A1.PHS_IO_RSN_CD
                                    )
                                END AS SKD_CNG_RSN_NM   
              , A1.PORT_SKP_TP_CD
              , A1.TS_RMK
              , A1.USR_RMK
              , A1.CRR_CD
              , A1.CRE_USR_ID
              , A1.UPD_USR_ID
              , A1.UPD_DT
        FROM  SPC_TS_PLN_GID_MN A1, MAS_MON_VVD A2    
        WHERE SUBSTR(A1.VVD_CD, 1, 4) = A2.VSL_CD
          AND SUBSTR(A1.VVD_CD, 5, 4) = A2.SKD_VOY_NO
          AND SUBSTR(A1.VVD_CD, 9, 1) = A2.DIR_CD
          AND A1.RLANE_CD   		  = A2.RLANE_CD
          AND A2.DELT_FLG      		  = 'N'
          AND A2.TRD_CD               = SPC_GET_REP_TRD_FNC(A2.RLANE_CD)
          AND A2.SUB_TRD_CD           = SPC_GET_REP_SUB_TRD_FNC(A2.RLANE_CD)
        #if(${vvd} == '')  
          AND SUBSTR(A2.SLS_YRMON, 1, 4)||A2.COST_WK IN
            (SELECT /*+ INDEX(D XPKMAS_WK_PRD)*/ D.COST_YR||D.COST_WK
               FROM MAS_WK_PRD D
              WHERE D.COST_YR||D.COST_WK >= @[year]||@[week]
                AND ROWNUM               <= TO_NUMBER(@[duration])
            )
          AND A1.REP_TRD_CD        = @[trade]
          AND A1.REP_SUB_TRD_CD    = @[subtrade]
        #if(${lane} != '')
          AND A1.RLANE_CD          = @[lane]
        #end
        #if(${bound} != '')
          AND A1.DIR_CD            = @[bound]
        #end
        #else
          AND A1.VVD_CD     = @[vvd]
        #end
)

--SPC 데이터 중에서 VSK에 없는 것 제외(VSK에서 들어와서 저장했다가 VSK에서 삭제된 것)
, SPC_DATA AS (
SELECT B1.FLG
		 , B1.REP_TRD_CD
		 , B1.REP_SUB_TRD_CD
		 , B1.RLANE_CD
		 , B1.DIR_CD
		 , B1.COST_WK
		 , B1.VVD_CD                                                                           
		 , B1.IRR_PORT_CD
		 , B1.IRR_YD_CD
		 , B1.SKD_CNG_STS_CD
		 , B1.SKD_CNG_RSN_CD
         , B1.SKD_CNG_RSN_NM
		 , B1.PORT_SKP_TP_CD
		 , B1.TS_RMK
		 , B1.USR_RMK
		 , B1.CRR_CD
		 , B1.CRE_USR_ID
		 , B1.UPD_USR_ID
		 , B1.UPD_DT
         , DECODE(B1.CRE_USR_ID, 'AUTO', NVL(B2.VVD_CD,'N'), B1.VVD_CD) AS EXIST_FLG
	FROM SPC_DATA_TMP B1, VSK_DATA_TMP B2
    WHERE B1.REP_TRD_CD     = B2.REP_TRD_CD(+)
    AND B1.REP_SUB_TRD_CD   = B2.REP_SUB_TRD_CD(+)
    AND B1.RLANE_CD         = B2.RLANE_CD(+)
    AND B1.VVD_CD           = B2.VVD_CD(+)
    AND B1.IRR_PORT_CD      = B2.IRR_PORT_CD(+)
    AND B1.IRR_YD_CD        = B2.IRR_YD_CD(+)


)
, ALL_DATA AS (
SELECT C1.FLG
      ,C1.REP_TRD_CD
      ,C1.REP_SUB_TRD_CD
      ,C1.RLANE_CD
      ,C1.DIR_CD
      ,C1.COST_WK
      ,C1.VVD_CD
      ,C1.IRR_PORT_CD
      ,C1.IRR_YD_CD
      ,C1.EXIST_FLG
      ,C1.SKD_CNG_STS_CD
      ,DECODE((SELECT COUNT(1)
          FROM SPC_TS_PLN_GID_DTL C2
         WHERE 1=1
           AND C1.REP_TRD_CD     = C2.REP_TRD_CD
           AND C1.REP_SUB_TRD_CD = C2.REP_SUB_TRD_CD
           AND C1.RLANE_CD       = C2.RLANE_CD
           AND C1.VVD_CD         = C2.VVD_CD
           AND C1.IRR_PORT_CD    = C2.IRR_PORT_CD
           AND C1.IRR_YD_CD      = C2.IRR_YD_CD
        ), 0, 'N', 'Y')  TS_PLN_GID_DTL
      ,C1.SKD_CNG_RSN_CD
      ,C1.SKD_CNG_RSN_NM
      ,NVL(C1.PORT_SKP_TP_CD, 'X') AS PORT_SKP_TP_CD
      ,C1.TS_RMK
      ,C1.USR_RMK
      ,C1.CRR_CD
      ,C1.CRE_USR_ID
      ,C1.UPD_USR_ID
      ,DECODE(C1.UPD_USR_ID, 'AUTO', '', TO_CHAR(C1.UPD_DT,'YYYY-MM-DD HH24:MM')) AS UPD_DT
FROM VSK_DATA C1   
UNION ALL
SELECT C2.FLG
      ,C2.REP_TRD_CD
      ,C2.REP_SUB_TRD_CD
      ,C2.RLANE_CD
      ,C2.DIR_CD
      ,C2.COST_WK
      ,C2.VVD_CD
      ,C2.IRR_PORT_CD
      ,C2.IRR_YD_CD
      ,C2.EXIST_FLG
      ,C2.SKD_CNG_STS_CD
      ,DECODE((SELECT COUNT(1)
          FROM SPC_TS_PLN_GID_DTL C3
         WHERE 1=1
           AND C2.REP_TRD_CD     = C3.REP_TRD_CD
           AND C2.REP_SUB_TRD_CD = C3.REP_SUB_TRD_CD
           AND C2.RLANE_CD       = C3.RLANE_CD
           AND C2.VVD_CD         = C3.VVD_CD
           AND C2.IRR_PORT_CD    = C3.IRR_PORT_CD
           AND C2.IRR_YD_CD      = C3.IRR_YD_CD
        ), 0, 'N', 'Y')  TS_PLN_GID_DTL
      ,C2.SKD_CNG_RSN_CD
      ,C2.SKD_CNG_RSN_NM
      ,C2.PORT_SKP_TP_CD
      ,C2.TS_RMK
      ,C2.USR_RMK
      ,C2.CRR_CD
      ,C2.CRE_USR_ID
      ,C2.UPD_USR_ID
      ,DECODE(C2.UPD_USR_ID, 'AUTO', '', TO_CHAR(C2.UPD_DT,'YYYY-MM-DD HH24:MM')) AS UPD_DT
FROM SPC_DATA C2  
)
SELECT D1.FLG
      ,D1.REP_TRD_CD
      ,D1.REP_SUB_TRD_CD
      ,D1.RLANE_CD
      ,D1.DIR_CD
      ,D1.COST_WK
      ,D1.VVD_CD
      ,D1.IRR_PORT_CD
      ,D1.IRR_YD_CD
      ,D1.EXIST_FLG
      ,D1.SKD_CNG_STS_CD
      ,D1.TS_PLN_GID_DTL
      ,D1.SKD_CNG_RSN_CD
      ,D1.SKD_CNG_RSN_NM
      ,D1.PORT_SKP_TP_CD
      ,D1.TS_RMK
      ,D1.USR_RMK
      ,D1.CRR_CD
      ,D1.CRE_USR_ID
      ,D1.UPD_USR_ID
      ,D1.UPD_DT
FROM ALL_DATA D1
ORDER BY D1.REP_TRD_CD
       , D1.REP_SUB_TRD_CD
       , D1.RLANE_CD
       , D1.DIR_CD
       , D1.COST_WK
       , D1.VVD_CD
       , D1.SKD_CNG_STS_CD
       , D1.IRR_PORT_CD
       , D1.IRR_YD_CD
       , D1.SKD_CNG_RSN_CD
       , D1.UPD_USR_ID DESC			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
