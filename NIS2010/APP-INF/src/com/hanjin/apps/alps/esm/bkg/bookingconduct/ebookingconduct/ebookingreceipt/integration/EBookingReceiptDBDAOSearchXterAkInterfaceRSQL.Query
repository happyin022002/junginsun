<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EBookingReceiptDBDAOSearchXterAkInterfaceRSQL">
			<desc><![CDATA[external request 처리를 위해 external rqst의 awkward cgo 정보를 조회한다.

2018.05.04 iylee Awkward Dimension 계산
CNTR_TP : F2','P2','F4','P4','A4','A5','F5','O5 이면 External 값으로 계산
CNTR_TP : S2','S4','O2','O4 Internal 값으로 계산]]></desc>
			<sql><![CDATA[
WITH AWK_DIM AS 
(SELECT 
	HRD_CDG_ID
,	HRD_CDG_ID_SEQ
,	ATTR_CTNT1
,	ATTR_CTNT2
,	ATTR_CTNT3
,	ATTR_CTNT4
,	ATTR_CTNT5
,	ATTR_CTNT6
,	ATTR_CTNT7
,	ATTR_CTNT8
,	ATTR_CTNT9
,	ATTR_CTNT10
FROM BKG_HRD_CDG_CTNT H
WHERE H.HRD_CDG_ID = 'AWK_CRITERIA')

SELECT AWK_CGO_SEQ,
       CNTR_NO,
       CNTR_TPSZ_CD,
       CMDT_CD,
       TTL_DIM_LEN,
       OVR_FWRD_LEN,
       OVR_FWRD_LEN AS OVR_BKWD_LEN,
       TTL_DIM_WDT,
       OVR_LF_LEN,
       OVR_LF_LEN AS OVR_RT_LEN,
       TTL_DIM_HGT,
       OVR_HGT,
       GRS_WGT,
       WGT_UT_CD,
       PCK_QTY,
       PCK_TP_CD,
       NET_WGT,
       STWG_RQST_DESC,
       CASE WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN > 0 AND OVR_RT_LEN > 0 AND OVR_HGT > 0 THEN 2.5
            WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN > 0 AND OVR_RT_LEN > 0 AND OVR_HGT = 0 THEN 1
            WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN > 0 AND OVR_RT_LEN = 0 AND OVR_HGT > 0 THEN 1.5
            WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN = 0 AND OVR_RT_LEN > 0 AND OVR_HGT > 0 THEN 1.5
            WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN > 0 AND OVR_RT_LEN = 0 AND OVR_HGT = 0 THEN 0.5
            WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN = 0 AND OVR_RT_LEN > 0 AND OVR_HGT = 0 THEN 0.5
            WHEN SUBSTR(CNTR_TPSZ_CD,2,1) = 2 AND OVR_LF_LEN = 0 AND OVR_RT_LEN = 0 AND OVR_HGT > 0 THEN 0.5
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN > 0 AND OVR_HGT > 0 THEN 5
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN > 0 AND OVR_HGT = 0 THEN 2
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN = 0 AND OVR_HGT > 0 THEN 3
            WHEN OVR_LF_LEN = 0 AND OVR_RT_LEN > 0 AND OVR_HGT > 0 THEN 3
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN = 0 AND OVR_HGT = 0 THEN 1
            WHEN OVR_LF_LEN = 0 AND OVR_RT_LEN > 0 AND OVR_HGT = 0 THEN 1
            WHEN OVR_LF_LEN = 0 AND OVR_RT_LEN = 0 AND OVR_HGT > 0 THEN 1
            ELSE 0
       END OVR_VOID_SLT_QTY,
       CASE WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN > 0 AND OVR_HGT > 0 THEN 'N'
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN > 0 AND OVR_HGT = 0 THEN 'N'
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN = 0 AND OVR_HGT > 0 THEN 'N'
            WHEN OVR_LF_LEN = 0 AND OVR_RT_LEN > 0 AND OVR_HGT > 0 THEN 'N'
            WHEN OVR_LF_LEN > 0 AND OVR_RT_LEN = 0 AND OVR_HGT = 0 THEN 'N'
            WHEN OVR_LF_LEN = 0 AND OVR_RT_LEN > 0 AND OVR_HGT = 0 THEN 'N'
            WHEN OVR_LF_LEN = 0 AND OVR_RT_LEN = 0 AND OVR_HGT > 0 THEN 'N'
            ELSE 'Y'
       END IN_GA_FLG,
       IBFLAG,
       AWK_DCGO_SEQ
FROM (
    SELECT AK.AWK_CGO_SEQ
            , '' CNTR_NO
            , AK.CNTR_TPSZ_CD
            , CASE WHEN AK.CMDT_CTNT IS NULL THEN M.CMDT_CD
                   WHEN AK.CMDT_CTNT = (SELECT MC.CMDT_CD FROM MDM_COMMODITY MC WHERE MC.CMDT_CD = AK.CMDT_CTNT)
                        THEN AK.CMDT_CTNT
                   ELSE NVL((SELECT MC.CMDT_CD FROM MDM_COMMODITY MC WHERE MC.CMDT_NM = AK.CMDT_CTNT), M.CMDT_CD)
              END CMDT_CD
            , AK.OVR_LEN TTL_DIM_LEN
            ,CASE WHEN AK.CNTR_TPSZ_CD IN ('F2','P2','F4','P4','A4','A5','F5','O5') AND ROUND((AK.OVR_LEN - AWK_DIM.ATTR_CTNT5)/2) > 0 THEN ROUND((AK.OVR_LEN - AWK_DIM.ATTR_CTNT5)/2) -- external
                 WHEN AK.CNTR_TPSZ_CD IN ('S2','S4','O2','O4') AND ROUND((AK.OVR_LEN - AWK_DIM.ATTR_CTNT2)/2) > 0 THEN ROUND((AK.OVR_LEN - AWK_DIM.ATTR_CTNT2)/2) -- internal
                 ELSE 0
            END OVR_FWRD_LEN
            , AK.OVR_WDT TTL_DIM_WDT
            ,CASE WHEN AK.CNTR_TPSZ_CD IN ('F2','P2','F4','P4','A4','A5','F5','O5') AND (AK.OVR_WDT - ATTR_CTNT6)/2 > 0 THEN ROUND((AK.OVR_WDT - ATTR_CTNT6)/2) -- external
                 WHEN AK.CNTR_TPSZ_CD IN ('S2','S4','O2','O4') AND ROUND((AK.OVR_WDT - AWK_DIM.ATTR_CTNT3)/2) > 0 THEN ROUND((AK.OVR_WDT - AWK_DIM.ATTR_CTNT3)/2) -- internal
                 ELSE 0
            END OVR_LF_LEN
            , AK.OVR_HGT TTL_DIM_HGT
            ,CASE WHEN AK.CNTR_TPSZ_CD IN ('F2','P2','F4','P4','A4','A5','F5','O5','S2','S4','O2','O4') AND AK.OVR_HGT - AWK_DIM.ATTR_CTNT4 > 0  THEN ROUND(AK.OVR_HGT - AWK_DIM.ATTR_CTNT4)
                ELSE 0
            END OVR_HGT
            , AK.GRS_WGT
            , AK.GRS_WGT_UT_CD WGT_UT_CD
            , AK.PCK_QTY
            , AK.PCK_TP_CD
            , AK.NET_WGT
            , replace(replace(AK.CGO_RMK,chr(10)||chr(13),' '),chr(10),' ') STWG_RQST_DESC
            , 'N' AS IN_GA_FLG
            , 'I' AS IBFLAG
            , '' AS AWK_DCGO_SEQ 
      FROM BKG_XTER_AWK_CGO AK, BKG_XTER_RQST_MST M, AWK_DIM
     WHERE AK.XTER_SNDR_ID = @[xter_sndr_id]
       AND AK.XTER_RQST_NO = @[xter_rqst_no]
       AND AK.XTER_RQST_SEQ= @[xter_rqst_seq]
       AND M.XTER_SNDR_ID = AK.XTER_SNDR_ID
       AND M.XTER_RQST_NO = AK.XTER_RQST_NO
       AND M.XTER_RQST_SEQ = AK.XTER_RQST_SEQ
	   AND AWK_DIM.ATTR_CTNT1 LIKE '%' || AK.CNTR_TPSZ_CD || '%'
    )			]]></sql>
			<params>
				<param name="xter_sndr_id" type="12" value="" out="N"/>
				<param name="xter_rqst_no" type="12" value="" out="N"/>
				<param name="xter_rqst_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
