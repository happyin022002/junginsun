/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.18
*@LastModifier : 최성민
*@LastVersion : 1.0
* 2016.08.18 최성민
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI SUNGMIN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.
	  * 2015.01.22 신자영 [선처리] 상단에서 ALOC인 경우에도 자동으로 row생성하는 부분 변경
	  * 2015.03.04 김성욱 [CHM-201534435] SQM QTA주가 변경 관련 적용 요청
	  * 2015.06.11 김성욱 [CHM-201535211] SPC BKG 연동
	  * 2015.07.24 Arie [CHM-201537010] Control Option Management 및 VVD별 EDIT기능 보완  - Sync/Desync 빼고 Yield Group, Fixed Edit 추가
	  * 2015.09.11 최성민 [CHM-201537981]  Yard인식에 따른 부킹 누락 보완 요청
	  * 2016.05.18 최성민 Double Callling Route(Port/Tmnl)에 대한 물량집계 및 병목상 Logic 보완 사항 요청
	  * 2016.07.05 CHM-201642241 VGM(BKG상 표시되는 또 다른 WGT 정보) 도입 관련 SPC 사항
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("all_pol",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("user_ofc",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("lane",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchSpaceAllocation0042MListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS AS" ).append("\n"); 
		query.append("(SELECT @[year]         AS YEAR" ).append("\n"); 
		query.append("      , @[week]         AS WEEK" ).append("\n"); 
		query.append("      , @[duration]     AS DURATION" ).append("\n"); 
		query.append("      , o.ofc_cd        AS OFC_CD" ).append("\n"); 
		query.append("      , @[trade]        AS TRD_CD" ).append("\n"); 
		query.append("      , @[subtrade]     AS SUB_TRD_CD" ).append("\n"); 
		query.append("      , @[lane]         AS RLANE_CD" ).append("\n"); 
		query.append("      , @[bound]        AS DIR_CD" ).append("\n"); 
		query.append("      , SUBSTR(@[vvd], 0, 4)    AS VSL_CD" ).append("\n"); 
		query.append("      , SUBSTR(@[vvd], 5, 4)    AS SKD_VOY_NO" ).append("\n"); 
		query.append("      , SUBSTR(@[vvd], 9)       AS SKD_DIR_CD" ).append("\n"); 
		query.append("      , l.conti_cd      AS OFC_CONTI" ).append("\n"); 
		query.append("      , @[fcast]        AS STS" ).append("\n"); 
		query.append("      , @[all_pol]      AS all_pol" ).append("\n"); 
		query.append("   FROM MDM_LOCATION L" ).append("\n"); 
		query.append("      , MDM_ORGANIZATION O" ).append("\n"); 
		query.append("  WHERE L.LOC_CD = O.LOC_CD " ).append("\n"); 
		query.append("#if (${user_ofc} == 'SZPDC')" ).append("\n"); 
		query.append("    AND O.OFC_CD = @[user_ofc] " ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("    #if (${office} == '')" ).append("\n"); 
		query.append("    AND O.OFC_CD = 'SHARC' " ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("    AND O.OFC_CD = @[office] " ).append("\n"); 
		query.append("    #end " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", REP_VVDS AS (" ).append("\n"); 
		query.append(" SELECT V.TRD_CD AS REP_TRD_CD" ).append("\n"); 
		query.append("      , V.SUB_TRD_CD AS REP_SUB_TRD_CD" ).append("\n"); 
		query.append("      , V.RLANE_CD" ).append("\n"); 
		query.append("      , V.DIR_CD" ).append("\n"); 
		query.append("      , SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR" ).append("\n"); 
		query.append("      , SUBSTR(V.SLS_YRMON, 5) AS COST_MON" ).append("\n"); 
		query.append("      , V.SLS_YRMON" ).append("\n"); 
		query.append("      , V.COST_WK" ).append("\n"); 
		query.append("      , V.VSL_CD" ).append("\n"); 
		query.append("      , V.SKD_VOY_NO" ).append("\n"); 
		query.append("      , V.DIR_CD SKD_DIR_CD" ).append("\n"); 
		query.append("      , V.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("      , V.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , P.OFC_CD" ).append("\n"); 
		query.append("      , P.OFC_CONTI" ).append("\n"); 
		query.append("      , P.STS" ).append("\n"); 
		query.append("      , (SELECT DECODE(NVL(MAX(CO.CTRL_LVL_CD), 'L'), 'O', DECODE(NVL(MAX(CO.CTRL_ACCT_FLG), 'N'), 'Y', 'A', DECODE(NVL(MAX(CO.CTRL_USA_SVC_MOD_FLG), 'N'), 'Y', 'U', 'O'))" ).append("\n"); 
		query.append("                        , NVL(MAX(CO.CTRL_LVL_CD), 'L'))" ).append("\n"); 
		query.append("           FROM SPC_ALOC_CTRL_OPT CO" ).append("\n"); 
		query.append("          WHERE CO.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("            AND CO.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND CO.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("            AND CO.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND CO.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("        ) AS CTRL_LVL" ).append("\n"); 
		query.append("      , DECODE(NVL(A.CTRL_LVL_CD, 'N'), 'T', NVL(DECODE(A.CTRL_ECC_FLG, 'Y', 'E', DECODE(A.CTRL_ECC_GRP_FLG, 'Y', 'G', 'N')), 'N'), 'N' )AS CTRL_DEST" ).append("\n"); 
		query.append("      , NVL(A.CTRL_DEST_LVL_CD, 'N') AS CTRL_DEST_LVL" ).append("\n"); 
		query.append("      , NVL(A.CTRL_USA_SVC_MOD_FLG, 'N') AS CTRL_USA" ).append("\n"); 
		query.append("      , NVL(A.CTRL_ACCT_FLG, 'N') AS CTRL_ACCOUNT" ).append("\n"); 
		query.append("      , NVL(A.CTRL_FX_RT_FLG, 'N') AS CTRL_FX_RT_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      , SUBSTR(V.COST_YRMON, 1, 4) AS BSE_YR" ).append("\n"); 
		query.append("      , CASE WHEN V.COST_YRMON >= '201501' THEN CEIL(TO_NUMBER(SUBSTR(V.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("             ELSE CEIL(TO_NUMBER(DECODE(V.COST_WK, '00', '01', '53', '52', V.COST_WK))/13)||'Q' END BSE_QTR_CD" ).append("\n"); 
		query.append("      , V.N1ST_LODG_PORT_ETD_DT AS FL_ETD_DT" ).append("\n"); 
		query.append("      , V.SLAN_CD" ).append("\n"); 
		query.append("   FROM MAS_MON_VVD V" ).append("\n"); 
		query.append("      , PARAMS P" ).append("\n"); 
		query.append("      , SPC_ALOC_CTRL_OPT A" ).append("\n"); 
		query.append("  WHERE V.TRD_CD        = SPC_GET_REP_TRD_FNC(V.RLANE_CD)" ).append("\n"); 
		query.append("    AND V.SUB_TRD_CD    = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD) " ).append("\n"); 
		query.append("#if(${vvd} == '')" ).append("\n"); 
		query.append("    AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK IN" ).append("\n"); 
		query.append("        (SELECT /*+ INDEX(D XPKMAS_WK_PRD)*/ D.COST_YR||D.COST_WK" ).append("\n"); 
		query.append("           FROM MAS_WK_PRD D" ).append("\n"); 
		query.append("          WHERE D.COST_YR||D.COST_WK >= P.YEAR||P.WEEK" ).append("\n"); 
		query.append("            AND ROWNUM               <= TO_NUMBER(P.DURATION)" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    AND V.TRD_CD        LIKE @[trade] || '%'" ).append("\n"); 
		query.append("    AND V.SUB_TRD_CD    LIKE @[subtrade]|| '%'" ).append("\n"); 
		query.append("    AND V.RLANE_CD      LIKE @[lane] || '%'" ).append("\n"); 
		query.append("    AND V.DIR_CD        LIKE @[bound] || '%' " ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("    AND V.VSL_CD        = P.VSL_CD" ).append("\n"); 
		query.append("    AND V.SKD_VOY_NO    = P.SKD_VOY_NO" ).append("\n"); 
		query.append("    AND V.DIR_CD        = P.SKD_DIR_CD " ).append("\n"); 
		query.append("    #if(${type} == 'Y')" ).append("\n"); 
		query.append("    AND V.RLANE_CD      = P.RLANE_CD " ).append("\n"); 
		query.append("    #end " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    AND (V.DELT_FLG IS NULL OR V.DELT_FLG   = 'N'" ).append("\n"); 
		query.append("     OR EXISTS" ).append("\n"); 
		query.append("        (SELECT 1" ).append("\n"); 
		query.append("           FROM MAS_MON_VVD N" ).append("\n"); 
		query.append("          WHERE N.RLANE_CD   = V.RLANE_CD -- 2012.12.07 SLANE_CD를 RLANE_CD로 변경" ).append("\n"); 
		query.append("            AND N.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("            AND N.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND N.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("            AND N.DELT_FLG   = 'N'" ).append("\n"); 
		query.append("        ))" ).append("\n"); 
		query.append("    AND A.RLANE_CD (+)  = V.RLANE_CD" ).append("\n"); 
		query.append("    AND A.DIR_CD (+)    = V.DIR_CD" ).append("\n"); 
		query.append("    AND A.VSL_CD (+)    = V.VSL_CD" ).append("\n"); 
		query.append("    AND A.SKD_VOY_NO(+) = V.SKD_VOY_NO" ).append("\n"); 
		query.append("    AND A.SKD_DIR_CD(+) = V.DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", VSL_PORT_SKD AS (" ).append("\n"); 
		query.append(" SELECT V.REP_TRD_CD" ).append("\n"); 
		query.append("      , V.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("      , V.RLANE_CD" ).append("\n"); 
		query.append("      , V.DIR_CD" ).append("\n"); 
		query.append("      , V.COST_YR" ).append("\n"); 
		query.append("      , V.COST_MON" ).append("\n"); 
		query.append("      , V.COST_WK" ).append("\n"); 
		query.append("      , V.VSL_CD" ).append("\n"); 
		query.append("      , V.SKD_VOY_NO" ).append("\n"); 
		query.append("      , V.SKD_DIR_CD" ).append("\n"); 
		query.append("      , VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("      , VPS.YD_CD AS PORT_CD" ).append("\n"); 
		query.append("      , VPS.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("      , VPS.CLPT_SEQ AS PORT_SEQ" ).append("\n"); 
		query.append("      , VPS.TURN_PORT_IND_CD AS PORT_IND" ).append("\n"); 
		query.append("      , SPC_CONTI_CONV_FNC(L.CONTI_CD, V.RLANE_CD, V.DIR_CD) AS CONTI_CD" ).append("\n"); 
		query.append("      , DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD)), -1, 'Y', 'N') AS PORT_PAST" ).append("\n"); 
		query.append("      , VPS.VPS_ETA_DT AS ETA_DT" ).append("\n"); 
		query.append("      , VPS.VPS_ETD_DT AS ETD_DT" ).append("\n"); 
		query.append("      , V.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("      , V.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , V.OFC_CD" ).append("\n"); 
		query.append("      , V.OFC_CONTI" ).append("\n"); 
		query.append("      , V.STS" ).append("\n"); 
		query.append("      , V.BSE_YR" ).append("\n"); 
		query.append("      , V.BSE_QTR_CD" ).append("\n"); 
		query.append("      , DECODE(VPS.SKD_CNG_STS_CD, 'S', 1, 0) AS SKIPPED" ).append("\n"); 
		query.append("      , MAX(VPS.CLPT_SEQ) OVER (PARTITION BY V.REP_TRD_CD, V.REP_SUB_TRD_CD, V.RLANE_CD, VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD, NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MAX_SEQ" ).append("\n"); 
		query.append("      , MIN(VPS.CLPT_SEQ) OVER (PARTITION BY V.REP_TRD_CD, V.REP_SUB_TRD_CD, V.RLANE_CD, VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD, NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MIN_SEQ" ).append("\n"); 
		query.append("      , VPS.CLPT_IND_SEQ AS CLPT_IND_SEQ" ).append("\n"); 
		query.append("      , COUNT(*) OVER (PARTITION BY V.REP_TRD_CD, V.REP_SUB_TRD_CD, V.RLANE_CD, VPS.VSL_CD, VPS.SKD_VOY_NO, VPS.SKD_DIR_CD, NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT" ).append("\n"); 
		query.append("      , V.SLAN_CD" ).append("\n"); 
		query.append("      , VPS.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("   FROM MDM_LOCATION L" ).append("\n"); 
		query.append("      , VSK_VSL_PORT_SKD VPS" ).append("\n"); 
		query.append("      , REP_VVDS V" ).append("\n"); 
		query.append("  WHERE L.LOC_CD       = VPS.VPS_PORT_CD" ).append("\n"); 
		query.append("    AND VPS.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("    AND VPS.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("    AND VPS.SKD_DIR_CD = V.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", VVD_POL_POD AS (" ).append("\n"); 
		query.append(" SELECT REP_TRD_CD" ).append("\n"); 
		query.append("      , REP_SUB_TRD_CD" ).append("\n"); 
		query.append("      , RLANE_CD" ).append("\n"); 
		query.append("      , DIR_CD" ).append("\n"); 
		query.append("      , TRD_CD" ).append("\n"); 
		query.append("      , SUB_TRD_CD" ).append("\n"); 
		query.append("      , COST_YR" ).append("\n"); 
		query.append("      , COST_MON" ).append("\n"); 
		query.append("      , COST_WK" ).append("\n"); 
		query.append("      , VSL_CD" ).append("\n"); 
		query.append("      , SKD_VOY_NO" ).append("\n"); 
		query.append("      , SKD_DIR_CD" ).append("\n"); 
		query.append("      , POL_CD" ).append("\n"); 
		query.append("      , POL_SEQ" ).append("\n"); 
		query.append("      , POL_CONTI" ).append("\n"); 
		query.append("      , POL_PAST" ).append("\n"); 
		query.append("      , POL_ETA_DT" ).append("\n"); 
		query.append("      , POL_ETD_DT" ).append("\n"); 
		query.append("      , POD_CD" ).append("\n"); 
		query.append("      , POD_SEQ" ).append("\n"); 
		query.append("      , POD_CONTI" ).append("\n"); 
		query.append("      , POD_PAST" ).append("\n"); 
		query.append("      , POD_ETA_DT" ).append("\n"); 
		query.append("      , POD_ETD_DT" ).append("\n"); 
		query.append("      , IOC_CD" ).append("\n"); 
		query.append("      , PAST" ).append("\n"); 
		query.append("      , LST_LODG_PORT_CD" ).append("\n"); 
		query.append("      , LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , OFC_CD" ).append("\n"); 
		query.append("      , OFC_CONTI" ).append("\n"); 
		query.append("      , STS" ).append("\n"); 
		query.append("      , POL_SKIP" ).append("\n"); 
		query.append("      , POD_SKIP" ).append("\n"); 
		query.append("      , LD_PORT" ).append("\n"); 
		query.append("      , PL_VPS_PORT_CD" ).append("\n"); 
		query.append("      , PD_VPS_PORT_CD" ).append("\n"); 
		query.append("      , PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("      , PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("      , PL_PORT_CNT" ).append("\n"); 
		query.append("      , PD_PORT_CNT" ).append("\n"); 
		query.append("      , PL_PD_PORT_CNT" ).append("\n"); 
		query.append("      , PL_SKD_CNG_STS_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      , BSE_YR" ).append("\n"); 
		query.append("      , BSE_QTR_CD" ).append("\n"); 
		query.append("      , MAX(PL_PORT_CNT) OVER (PARTITION BY POL_CD) AS MAX_POL_PORT_SEQ" ).append("\n"); 
		query.append("      , MAX(PD_PORT_CNT) OVER (PARTITION BY POD_CD) AS MAX_POD_PORT_SEQ" ).append("\n"); 
		query.append("      , POL_YD_SEQ" ).append("\n"); 
		query.append("      , POD_YD_SEQ" ).append("\n"); 
		query.append("   FROM" ).append("\n"); 
		query.append("        (SELECT REP_TRD_CD" ).append("\n"); 
		query.append("              , REP_SUB_TRD_CD" ).append("\n"); 
		query.append("              , RLANE_CD" ).append("\n"); 
		query.append("              , DIR_CD" ).append("\n"); 
		query.append("              , TRD_CD" ).append("\n"); 
		query.append("              , SUB_TRD_CD" ).append("\n"); 
		query.append("              , COST_YR" ).append("\n"); 
		query.append("              , COST_MON" ).append("\n"); 
		query.append("              , COST_WK" ).append("\n"); 
		query.append("              , VSL_CD" ).append("\n"); 
		query.append("              , SKD_VOY_NO" ).append("\n"); 
		query.append("              , SKD_DIR_CD" ).append("\n"); 
		query.append("              , POL_CD" ).append("\n"); 
		query.append("              , POL_SEQ" ).append("\n"); 
		query.append("              , POL_CONTI" ).append("\n"); 
		query.append("              , POL_PAST" ).append("\n"); 
		query.append("              , POL_ETA_DT" ).append("\n"); 
		query.append("              , POL_ETD_DT" ).append("\n"); 
		query.append("              , POD_CD" ).append("\n"); 
		query.append("              , POD_SEQ" ).append("\n"); 
		query.append("              , POD_CONTI" ).append("\n"); 
		query.append("              , POD_PAST" ).append("\n"); 
		query.append("              , POD_ETA_DT" ).append("\n"); 
		query.append("              , POD_ETD_DT" ).append("\n"); 
		query.append("              , IOC_CD" ).append("\n"); 
		query.append("              , PAST" ).append("\n"); 
		query.append("              , LST_LODG_PORT_CD" ).append("\n"); 
		query.append("              , LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("              , OFC_CD" ).append("\n"); 
		query.append("              , OFC_CONTI" ).append("\n"); 
		query.append("              , STS" ).append("\n"); 
		query.append("              , POL_SKIP" ).append("\n"); 
		query.append("              , POD_SKIP" ).append("\n"); 
		query.append("              , LD_PORT" ).append("\n"); 
		query.append("              , PL_PORT_CNT" ).append("\n"); 
		query.append("              , DECODE(SLAN_CD, 'IMU', '1', PD_PORT_CNT) AS PD_PORT_CNT" ).append("\n"); 
		query.append("              , PL_PD_PORT_CNT" ).append("\n"); 
		query.append("              , PL_VPS_PORT_CD" ).append("\n"); 
		query.append("              , PD_VPS_PORT_CD" ).append("\n"); 
		query.append("              , PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              , PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              , PL_SKD_CNG_STS_CD" ).append("\n"); 
		query.append("              , MAX(PL_PD_PORT_CNT) OVER (PARTITION BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_VPS_PORT_CD, PL_CLPT_IND_SEQ, PD_VPS_PORT_CD, PD_CLPT_IND_SEQ, POL_SEQ " ).append("\n"); 
		query.append("                                              ORDER BY RLANE_CD, TRD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, PL_VPS_PORT_CD, PL_CLPT_IND_SEQ, PD_VPS_PORT_CD, PD_CLPT_IND_SEQ ) AS PL_PD_PORT_MAX" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("              , BSE_YR" ).append("\n"); 
		query.append("              , BSE_QTR_CD" ).append("\n"); 
		query.append("              , POL_YD_SEQ" ).append("\n"); 
		query.append("              , POD_YD_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           FROM" ).append("\n"); 
		query.append("                (SELECT PL.REP_TRD_CD" ).append("\n"); 
		query.append("                      , PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                      , PL.RLANE_CD" ).append("\n"); 
		query.append("                      , PL.DIR_CD" ).append("\n"); 
		query.append("                      , DRL.TRD_CD" ).append("\n"); 
		query.append("                      , DRL.SUB_TRD_CD" ).append("\n"); 
		query.append("                      , PL.COST_YR" ).append("\n"); 
		query.append("                      , PL.COST_MON" ).append("\n"); 
		query.append("                      , PL.COST_WK" ).append("\n"); 
		query.append("                      , PL.VSL_CD" ).append("\n"); 
		query.append("                      , PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                      , PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                      , PL.PORT_CD AS POL_CD" ).append("\n"); 
		query.append("                      , MAX(PL.PORT_SEQ) AS POL_SEQ" ).append("\n"); 
		query.append("                      , PL.CONTI_CD AS POL_CONTI" ).append("\n"); 
		query.append("                      , MIN(PL.PORT_PAST) AS POL_PAST" ).append("\n"); 
		query.append("                      , PL.ETA_DT AS POL_ETA_DT" ).append("\n"); 
		query.append("                      , PL.ETD_DT AS POL_ETD_DT" ).append("\n"); 
		query.append("                      , PD.PORT_CD AS POD_CD" ).append("\n"); 
		query.append("                      , (CASE WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ) ELSE CASE WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) " ).append("\n"); 
		query.append("                              THEN MAX(PD.MAX_SEQ) END END ) AS POD_SEQ" ).append("\n"); 
		query.append("                      , PD.CONTI_CD AS POD_CONTI" ).append("\n"); 
		query.append("                      , MIN(PD.PORT_PAST) AS POD_PAST" ).append("\n"); 
		query.append("                      , PD.ETA_DT AS POD_ETA_DT" ).append("\n"); 
		query.append("                      , PD.ETD_DT AS POD_ETD_DT" ).append("\n"); 
		query.append("                      , DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O') AS IOC_CD" ).append("\n"); 
		query.append("                      , DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST" ).append("\n"); 
		query.append("                      , PL.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                      , PL.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                      , PL.OFC_CD" ).append("\n"); 
		query.append("                      , PL.OFC_CONTI" ).append("\n"); 
		query.append("                      , PL.STS" ).append("\n"); 
		query.append("                      , PL.SKIPPED AS POL_SKIP" ).append("\n"); 
		query.append("                      , PD.SKIPPED AS POD_SKIP" ).append("\n"); 
		query.append("                      , SUBSTR(" ).append("\n"); 
		query.append("                        (SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ, 'FM000'))|| S1.PORT_CD)" ).append("\n"); 
		query.append("                           FROM VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                          WHERE S1.SKIPPED <> 1" ).append("\n"); 
		query.append("                        ), 4) AS LD_PORT" ).append("\n"); 
		query.append("                      , PL.PORT_CNT AS PL_PORT_CNT" ).append("\n"); 
		query.append("                      , PD.PORT_CNT AS PD_PORT_CNT" ).append("\n"); 
		query.append("                      , PL.SLAN_CD" ).append("\n"); 
		query.append("                      , PL.VPS_PORT_CD AS PL_VPS_PORT_CD" ).append("\n"); 
		query.append("                      , PD.VPS_PORT_CD AS PD_VPS_PORT_CD" ).append("\n"); 
		query.append("                      , PL.CLPT_IND_SEQ AS PL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                      , PD.CLPT_IND_SEQ AS PD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                      , PL.SKD_CNG_STS_CD AS PL_SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                      , ROW_NUMBER()OVER (PARTITION BY PL.REP_TRD_CD, PL.RLANE_CD, PL.VSL_CD, PL.SKD_VOY_NO, PL.SKD_DIR_CD, PL.VPS_PORT_CD, PL.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                                     , PD.RLANE_CD, PD.VSL_CD, PD.SKD_VOY_NO, PD.SKD_DIR_CD, PD.REP_TRD_CD, PD.VPS_PORT_CD, PD.CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                              ORDER BY PL.REP_TRD_CD, PL.RLANE_CD, PL.VSL_CD, PL.SKD_VOY_NO, PL.SKD_DIR_CD, PL.VPS_PORT_CD, PL.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                                     , PD.RLANE_CD, PD.VSL_CD, PD.SKD_VOY_NO, PD.SKD_DIR_CD, PD.REP_TRD_CD, PD.VPS_PORT_CD, PD.CLPT_IND_SEQ) AS PL_PD_PORT_CNT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                      , PL.BSE_YR" ).append("\n"); 
		query.append("                      , PL.BSE_QTR_CD" ).append("\n"); 
		query.append("                      , PL.CALL_YD_IND_SEQ AS POL_YD_SEQ" ).append("\n"); 
		query.append("                      , PD.CALL_YD_IND_SEQ AS POD_YD_SEQ" ).append("\n"); 
		query.append("                   FROM MDM_DTL_REV_LANE DRL" ).append("\n"); 
		query.append("                      , VSL_PORT_SKD PD" ).append("\n"); 
		query.append("                      , VSL_PORT_SKD PL" ).append("\n"); 
		query.append("                  WHERE DRL.RLANE_CD        = PL.RLANE_CD" ).append("\n"); 
		query.append("                    AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD" ).append("\n"); 
		query.append("                    AND DRL.FM_CONTI_CD     = PL.CONTI_CD" ).append("\n"); 
		query.append("                    AND DRL.TO_CONTI_CD     = PD.CONTI_CD" ).append("\n"); 
		query.append("                    AND PD.REP_TRD_CD       = PL.REP_TRD_CD" ).append("\n"); 
		query.append("                    AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                    AND PD.RLANE_CD         = PL.RLANE_CD" ).append("\n"); 
		query.append("                    AND PD.VSL_CD           = PL.VSL_CD" ).append("\n"); 
		query.append("                    AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                    AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                    AND PD.PORT_CD         <> PL.PORT_CD" ).append("\n"); 
		query.append("                    AND PD.PORT_SEQ         > PL.PORT_SEQ" ).append("\n"); 
		query.append("                    AND ( PL.PORT_SEQ       = DECODE(PD.CONTI_CD, PL.CONTI_CD, PL.MIN_SEQ, PL.MAX_SEQ)" ).append("\n"); 
		query.append("                     OR PD.PORT_SEQ         < PL.MAX_SEQ )" ).append("\n"); 
		query.append("               GROUP BY PL.REP_TRD_CD" ).append("\n"); 
		query.append("                      , PL.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                      , PL.RLANE_CD" ).append("\n"); 
		query.append("                      , PL.DIR_CD" ).append("\n"); 
		query.append("                      , DRL.TRD_CD" ).append("\n"); 
		query.append("                      , DRL.SUB_TRD_CD" ).append("\n"); 
		query.append("                      , PL.COST_YR" ).append("\n"); 
		query.append("                      , PL.COST_MON" ).append("\n"); 
		query.append("                      , PL.COST_WK" ).append("\n"); 
		query.append("                      , PL.VSL_CD" ).append("\n"); 
		query.append("                      , PL.SKD_VOY_NO" ).append("\n"); 
		query.append("                      , PL.SKD_DIR_CD" ).append("\n"); 
		query.append("                      , PL.PORT_CD" ).append("\n"); 
		query.append("                      , PL.CONTI_CD" ).append("\n"); 
		query.append("                      , PD.PORT_CD" ).append("\n"); 
		query.append("                      , PD.CONTI_CD" ).append("\n"); 
		query.append("                      , PL.SKIPPED" ).append("\n"); 
		query.append("                      , PD.SKIPPED" ).append("\n"); 
		query.append("                      , PL.ETA_DT" ).append("\n"); 
		query.append("                      , PL.ETD_DT" ).append("\n"); 
		query.append("                      , PD.ETA_DT" ).append("\n"); 
		query.append("                      , PD.ETD_DT" ).append("\n"); 
		query.append("                      , DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')" ).append("\n"); 
		query.append("                      , DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y')" ).append("\n"); 
		query.append("                      , PL.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                      , PL.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                      , PL.OFC_CD" ).append("\n"); 
		query.append("                      , PL.OFC_CONTI" ).append("\n"); 
		query.append("                      , PL.STS" ).append("\n"); 
		query.append("                      , PL.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                      , PL.VPS_PORT_CD" ).append("\n"); 
		query.append("                      , PD.VPS_PORT_CD" ).append("\n"); 
		query.append("                      , PL.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                      , PD.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                      , PL.PORT_CNT" ).append("\n"); 
		query.append("                      , PD.PORT_CNT" ).append("\n"); 
		query.append("                      , PL.SLAN_CD" ).append("\n"); 
		query.append("                      , PD.REP_TRD_CD" ).append("\n"); 
		query.append("                      , PD.RLANE_CD" ).append("\n"); 
		query.append("                      , PD.VSL_CD" ).append("\n"); 
		query.append("                      , PD.SKD_VOY_NO" ).append("\n"); 
		query.append("                      , PD.SKD_DIR_CD" ).append("\n"); 
		query.append("                      , PL.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                      , PL.BSE_YR" ).append("\n"); 
		query.append("                      , PL.BSE_QTR_CD" ).append("\n"); 
		query.append("                      , PL.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("                      , PD.CALL_YD_IND_SEQ" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("        ) A" ).append("\n"); 
		query.append("  WHERE A.PL_PD_PORT_CNT = PL_PD_PORT_MAX" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append(" SELECT DISTINCT REP_TRD_CD" ).append("\n"); 
		query.append("      , REP_SUB_TRD_CD" ).append("\n"); 
		query.append("      , RLANE_CD" ).append("\n"); 
		query.append("      , DIR_CD" ).append("\n"); 
		query.append("      , TRD_CD" ).append("\n"); 
		query.append("      , SUB_TRD_CD" ).append("\n"); 
		query.append("      , COST_YR" ).append("\n"); 
		query.append("      , COST_MON" ).append("\n"); 
		query.append("      , COST_WK" ).append("\n"); 
		query.append("      , VSL_CD" ).append("\n"); 
		query.append("      , SKD_VOY_NO" ).append("\n"); 
		query.append("      , SKD_DIR_CD" ).append("\n"); 
		query.append("      , IOC_CD" ).append("\n"); 
		query.append("      , LST_LODG_PORT_CD" ).append("\n"); 
		query.append("      , LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , OFC_CD" ).append("\n"); 
		query.append("      , OFC_CONTI" ).append("\n"); 
		query.append("      , STS" ).append("\n"); 
		query.append("      , BSE_YR" ).append("\n"); 
		query.append("      , BSE_QTR_CD" ).append("\n"); 
		query.append("   FROM VVD_POL_POD VPP" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append(" SELECT REP_TRD_CD" ).append("\n"); 
		query.append("      , REP_SUB_TRD_CD" ).append("\n"); 
		query.append("      , RLANE_CD" ).append("\n"); 
		query.append("      , DIR_CD" ).append("\n"); 
		query.append("      , COST_YR" ).append("\n"); 
		query.append("      , COST_MON" ).append("\n"); 
		query.append("      , COST_WK" ).append("\n"); 
		query.append("      , VSL_CD" ).append("\n"); 
		query.append("      , SKD_VOY_NO" ).append("\n"); 
		query.append("      , SKD_DIR_CD" ).append("\n"); 
		query.append("      , POL_CD" ).append("\n"); 
		query.append("      , POD_CD" ).append("\n"); 
		query.append("      , POL_YD_CD" ).append("\n"); 
		query.append("      , POD_YD_CD" ).append("\n"); 
		query.append("      , IOC_CD" ).append("\n"); 
		query.append("      , TS_FLG" ).append("\n"); 
		query.append("      , PAST" ).append("\n"); 
		query.append("      , LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , LST_LODG_PORT_CD" ).append("\n"); 
		query.append("      , TO_NUMBER(NVL(SUBSTR(VAL, 1, 14), 0)) AS BKG_TTL_QTY" ).append("\n"); 
		query.append("      , TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_TTL_WGT,BKG_VOL_VGM,BKG_WGT_VGM" ).append("\n"); 
		query.append("      , OFC_CD" ).append("\n"); 
		query.append("      , BASE_RHQ_CD" ).append("\n"); 
		query.append("      , OFC_CONTI" ).append("\n"); 
		query.append("      , POL_CONTI" ).append("\n"); 
		query.append("      , SLS_OFC_CD" ).append("\n"); 
		query.append("      , TO_NUMBER(NVL(SUBSTR(CM_VAL, 1, 10), 0)) AS CM_OP" ).append("\n"); 
		query.append("      , TO_NUMBER(NVL(SUBSTR(CM_VAL, 11, 10), 0)) AS CM_OC" ).append("\n"); 
		query.append("      , TO_NUMBER(NVL(SUBSTR(CM_VAL, 21, 10), 0)) AS CM_VL" ).append("\n"); 
		query.append("      , ALOC_STS_CD" ).append("\n"); 
		query.append("   FROM" ).append("\n"); 
		query.append("        (SELECT VPP.REP_TRD_CD" ).append("\n"); 
		query.append("              , VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("              , VPP.RLANE_CD" ).append("\n"); 
		query.append("              , VPP.DIR_CD" ).append("\n"); 
		query.append("              , VPP.COST_YR" ).append("\n"); 
		query.append("              , VPP.COST_MON" ).append("\n"); 
		query.append("              , VPP.COST_WK" ).append("\n"); 
		query.append("              , VPP.VSL_CD" ).append("\n"); 
		query.append("              , VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("              , VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("              , DECODE(BV.VSL_PRE_PST_CD, 'T', VPP.IOC_CD, 'T') AS IOC_CD" ).append("\n"); 
		query.append("              , DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG" ).append("\n"); 
		query.append("              , VPP.PAST" ).append("\n"); 
		query.append("              , VPP.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("              , VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("              , (SELECT TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000') " ).append("\n"); 
		query.append("                        || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY *" ).append("\n"); 
		query.append("                        (SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                           FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                          WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                        )) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                   FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                  WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("                    AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                ) AS VAL" ).append("\n"); 
		query.append("              , BV.BKG_NO" ).append("\n"); 
		query.append("              , BV.POL_CD" ).append("\n"); 
		query.append("              , BV.POD_CD" ).append("\n"); 
		query.append("              , BV.POL_YD_CD" ).append("\n"); 
		query.append("              , BV.POD_YD_CD" ).append("\n"); 
		query.append("              , O.OFC_CD" ).append("\n"); 
		query.append("              , VPP.OFC_CD AS BASE_RHQ_CD" ).append("\n"); 
		query.append("              , SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) AS SLS_OFC_CD" ).append("\n"); 
		query.append("              , VPP.OFC_CONTI" ).append("\n"); 
		query.append("              , VPP.POL_CONTI" ).append("\n"); 
		query.append("              , SPC_GET_OB_MVMT_FNC(B.BKG_NO, VPP.POL_PAST) AS CM_VAL" ).append("\n"); 
		query.append("              , B.ALOC_STS_CD" ).append("\n"); 
		query.append("			  ,(" ).append("\n"); 
		query.append("				SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Z.CNTR_TPSZ_CD), '2', 1, 2)* Z.OP_CNTR_QTY) " ).append("\n"); 
		query.append("				FROM BKG_QUANTITY Z " ).append("\n"); 
		query.append("				WHERE Z.BKG_NO= B.BKG_NO AND OP_CNTR_QTY > 0 " ).append("\n"); 
		query.append("				AND EXISTS ( SELECT 1 FROM BKG_CONTAINER C WHERE C.BKG_NO= Z.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL )" ).append("\n"); 
		query.append("			   ) AS BKG_VOL_VGM	" ).append("\n"); 
		query.append("			  ,(SELECT SUM(NVL(Z.VGM_WGT,0) * DECODE(Z.VGM_WGT_UT_CD,'LBS',0.00045,0.001)) FROM BKG_CONTAINER Z WHERE Z.BKG_NO= B.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL) AS BKG_WGT_VGM" ).append("\n"); 
		query.append("           FROM SPC_OFC_LVL O" ).append("\n"); 
		query.append("              , BKG_BOOKING B" ).append("\n"); 
		query.append("              , BKG_VVD BV" ).append("\n"); 
		query.append("              , VVD_POL_POD VPP" ).append("\n"); 
		query.append("              , BKG_BL_DOC D" ).append("\n"); 
		query.append("          WHERE O.OFC_TP_CD IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("            AND O.OFC_CD     = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)" ).append("\n"); 
		query.append("            AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("            AND B.BKG_STS_CD    IN ('W', 'F')" ).append("\n"); 
		query.append("            AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("            AND B.BKG_NO         = BV.BKG_NO" ).append("\n"); 
		query.append("            AND BV.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("            AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("	    " ).append("\n"); 
		query.append("            AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ = VPP.MAX_POL_PORT_SEQ))" ).append("\n"); 
		query.append("            AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ = VPP.MAX_POD_PORT_SEQ)) " ).append("\n"); 
		query.append("                       " ).append("\n"); 
		query.append("            AND B.BKG_NO                    = D.BKG_NO " ).append("\n"); 
		query.append("        #if (${office} == '')" ).append("\n"); 
		query.append("            AND ( VPP.POL_CONTI             = VPP.OFC_CONTI" ).append("\n"); 
		query.append("             OR O.N2ND_PRNT_OFC_CD          = VPP.OFC_CD" ).append("\n"); 
		query.append("             OR O.N2ND_PRNT_OFC_CD          = 'SINRS'" ).append("\n"); 
		query.append("             OR VPP.RLANE_CD                = 'WAFIE' ) " ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("            AND ( VPP.POL_CONTI             = VPP.OFC_CONTI" ).append("\n"); 
		query.append("             OR O.N2ND_PRNT_OFC_CD          = VPP.OFC_CD" ).append("\n"); 
		query.append("             OR VPP.RLANE_CD                = 'WAFIE'" ).append("\n"); 
		query.append("             OR (VPP.OFC_CD                 = 'SINRS'" ).append("\n"); 
		query.append("            AND VPP.RLANE_CD                = 'WAXIA') ) " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(" SELECT Z.REP_TRD_CD AS TRD_CD" ).append("\n"); 
		query.append("      , Z.REP_SUB_TRD_CD AS SUB_TRD_CD" ).append("\n"); 
		query.append("      , Z.RLANE_CD" ).append("\n"); 
		query.append("      , Z.DIR_CD" ).append("\n"); 
		query.append("      , Z.COST_YR" ).append("\n"); 
		query.append("      , Z.COST_MON" ).append("\n"); 
		query.append("      , Z.COST_WK" ).append("\n"); 
		query.append("      , Z.VSL_CD" ).append("\n"); 
		query.append("      , Z.SKD_VOY_NO" ).append("\n"); 
		query.append("      , Z.SKD_DIR_CD" ).append("\n"); 
		query.append("      , Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('VOL', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_VOL" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('WGT', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS BSA_WGT" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('VOL_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_VOL" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('WGT_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_WGT" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('D5_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_HC" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('D7_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_45" ).append("\n"); 
		query.append("      , SPC_GET_WK_VVD_BSA_FNC('RF_LOD', Z.REP_TRD_CD, Z.RLANE_CD, Z.DIR_CD, Z.COST_YR||Z.COST_WK, Z.VSL_CD||Z.SKD_VOY_NO||Z.SKD_DIR_CD) AS LOD_RF" ).append("\n"); 
		query.append("      , QTA_OCN" ).append("\n"); 
		query.append("      , QTA_IPC" ).append("\n"); 
		query.append("      , FC_OCN_VOL" ).append("\n"); 
		query.append("      , FC_OCN_WGT" ).append("\n"); 
		query.append("      , FC_IPC_VOL" ).append("\n"); 
		query.append("      , FC_IPC_WGT" ).append("\n"); 
		query.append("      , FC_TS_VOL" ).append("\n"); 
		query.append("      , FC_TS_WGT" ).append("\n"); 
		query.append("      , AL_OCN_VOL" ).append("\n"); 
		query.append("      , AL_OCN_WGT" ).append("\n"); 
		query.append("      , AL_IPC_VOL" ).append("\n"); 
		query.append("      , AL_IPC_WGT" ).append("\n"); 
		query.append("      , AL_TS_VOL" ).append("\n"); 
		query.append("      , AL_TS_WGT" ).append("\n"); 
		query.append("      , BKG_OCN_VOL" ).append("\n"); 
		query.append("      , BKG_OCN_WGT, BKG_OCN_VOL_VGM, BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("      , BKG_IPC_VOL" ).append("\n"); 
		query.append("      , BKG_IPC_WGT, BKG_IPC_VOL_VGM, BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("      , BKG_TS_VOL" ).append("\n"); 
		query.append("      , BKG_TS_WGT, BKG_TS_VOL_VGM, BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("      , BKG_BS_VOL" ).append("\n"); 
		query.append("      , BKG_BS_WGT" ).append("\n"); 
		query.append("      , CM_OP" ).append("\n"); 
		query.append("      , CM_OC" ).append("\n"); 
		query.append("      , CM_VL" ).append("\n"); 
		query.append("      , Z.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , Z.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("      , NVL(C.CTRL_LVL_CD, 'L') AS CTRL_PORT_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_40FT_HC_FLG, 'N') AS CTRL_40FT_HC_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_45FT_HC_FLG, 'N') AS CTRL_45FT_HC_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_53FT_FLG, 'N') AS CTRL_53FT_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_RF_FLG, 'N') AS CTRL_RF_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_D2_FLG, 'N') AS CTRL_D2_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_D4_FLG, 'N') AS CTRL_D4_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_RD_FLG, 'N') AS CTRL_RD_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_ECC_FLG, 'N') AS CTRL_ECC_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_LOC_FLG, 'N') AS CTRL_LOC_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_USA_SVC_MOD_FLG, 'N') AS CTRL_USA_SVC_MOD_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_ACCT_FLG, 'N') AS CTRL_ACCT_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_DEST_LVL_CD, 'N') AS CTRL_DEST_LVL_CD" ).append("\n"); 
		query.append("      , NVL(C.CTRL_WGT_FLG, 'N') AS CTRL_WGT_FLG" ).append("\n"); 
		query.append("      , NVL(C.CTRL_SPC_FLG, 'N') AS CTRL_SPC_FLG" ).append("\n"); 
		query.append("      , NVL(C.ACCT_GRP_CTRL_FLG, 'N') AS ACCT" ).append("\n"); 
		query.append("      , NVL(C.CTRL_FX_RT_FLG, 'N') AS CTRL_FX_RT_FLG" ).append("\n"); 
		query.append("      , DECODE(C.RLANE_CD, NULL, 'I', 'R') AS IBFLAG" ).append("\n"); 
		query.append("   FROM" ).append("\n"); 
		query.append("        (SELECT REP_TRD_CD" ).append("\n"); 
		query.append("              , REP_SUB_TRD_CD" ).append("\n"); 
		query.append("              , RLANE_CD" ).append("\n"); 
		query.append("              , DIR_CD" ).append("\n"); 
		query.append("              , COST_YR" ).append("\n"); 
		query.append("              , COST_MON" ).append("\n"); 
		query.append("              , COST_WK" ).append("\n"); 
		query.append("              , VSL_CD" ).append("\n"); 
		query.append("              , SKD_VOY_NO" ).append("\n"); 
		query.append("              , SKD_DIR_CD" ).append("\n"); 
		query.append("              , SUM(QTA_OCN) AS QTA_OCN" ).append("\n"); 
		query.append("              , SUM(QTA_IPC) AS QTA_IPC" ).append("\n"); 
		query.append("              , SUM(FC_OCN_VOL) AS FC_OCN_VOL" ).append("\n"); 
		query.append("              , SUM(FC_OCN_WGT) AS FC_OCN_WGT" ).append("\n"); 
		query.append("              , SUM(FC_IPC_VOL) AS FC_IPC_VOL" ).append("\n"); 
		query.append("              , SUM(FC_IPC_WGT) AS FC_IPC_WGT" ).append("\n"); 
		query.append("              , SUM(FC_TS_VOL) AS FC_TS_VOL" ).append("\n"); 
		query.append("              , SUM(FC_TS_WGT) AS FC_TS_WGT" ).append("\n"); 
		query.append("              , SUM(AL_OCN_VOL) AS AL_OCN_VOL" ).append("\n"); 
		query.append("              , SUM(AL_OCN_WGT) AS AL_OCN_WGT" ).append("\n"); 
		query.append("              , SUM(AL_IPC_VOL) AS AL_IPC_VOL" ).append("\n"); 
		query.append("              , SUM(AL_IPC_WGT) AS AL_IPC_WGT" ).append("\n"); 
		query.append("              , SUM(AL_TS_VOL) AS AL_TS_VOL" ).append("\n"); 
		query.append("              , SUM(AL_TS_WGT) AS AL_TS_WGT" ).append("\n"); 
		query.append("              , SUM(BKG_OCN_VOL) AS BKG_OCN_VOL" ).append("\n"); 
		query.append("              , SUM(BKG_OCN_WGT) AS BKG_OCN_WGT" ).append("\n"); 
		query.append("              , SUM(BKG_IPC_VOL) AS BKG_IPC_VOL" ).append("\n"); 
		query.append("              , SUM(BKG_IPC_WGT) AS BKG_IPC_WGT" ).append("\n"); 
		query.append("              , SUM(BKG_TS_VOL) AS BKG_TS_VOL" ).append("\n"); 
		query.append("              , SUM(BKG_TS_WGT) AS BKG_TS_WGT" ).append("\n"); 
		query.append("              , SUM(BKG_BS_WGT) AS BKG_BS_WGT" ).append("\n"); 
		query.append("			  , SUM(BKG_OCN_VOL_VGM) AS BKG_OCN_VOL_VGM" ).append("\n"); 
		query.append("			  , SUM(BKG_OCN_WGT_VGM) AS BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("			  , SUM(BKG_IPC_VOL_VGM) AS BKG_IPC_VOL_VGM" ).append("\n"); 
		query.append("			  , SUM(BKG_IPC_WGT_VGM) AS BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("			  , SUM(BKG_TS_VOL_VGM) AS BKG_TS_VOL_VGM" ).append("\n"); 
		query.append("			  , SUM(BKG_TS_WGT_VGM) AS BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("              , --2014.04.15" ).append("\n"); 
		query.append("                SUM(BKG_BS_VOL) AS BKG_BS_VOL" ).append("\n"); 
		query.append("              , --2014.04.15" ).append("\n"); 
		query.append("                SUM(CM_OP) AS CM_OP" ).append("\n"); 
		query.append("              , SUM(CM_OC) AS CM_OC" ).append("\n"); 
		query.append("              , SUM(CM_VL) AS CM_VL" ).append("\n"); 
		query.append("              , LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("              , LST_LODG_PORT_CD" ).append("\n"); 
		query.append("           FROM" ).append("\n"); 
		query.append("                (SELECT A.REP_TRD_CD" ).append("\n"); 
		query.append("                      , A.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                      , A.RLANE_CD" ).append("\n"); 
		query.append("                      , A.DIR_CD" ).append("\n"); 
		query.append("                      , A.COST_YR" ).append("\n"); 
		query.append("                      , A.COST_MON" ).append("\n"); 
		query.append("                      , A.COST_WK" ).append("\n"); 
		query.append("                      , A.VSL_CD" ).append("\n"); 
		query.append("                      , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                      , A.SKD_DIR_CD" ).append("\n"); 
		query.append("                      , A.QTA_OCN" ).append("\n"); 
		query.append("                      , A.QTA_IPC" ).append("\n"); 
		query.append("                      , A.FC_OCN_VOL" ).append("\n"); 
		query.append("                      , A.FC_OCN_WGT" ).append("\n"); 
		query.append("                      , A.FC_IPC_VOL" ).append("\n"); 
		query.append("                      , A.FC_IPC_WGT" ).append("\n"); 
		query.append("                      , A.FC_TS_VOL" ).append("\n"); 
		query.append("                      , A.FC_TS_WGT" ).append("\n"); 
		query.append("                      , A.AL_OCN_VOL" ).append("\n"); 
		query.append("                      , A.AL_OCN_WGT" ).append("\n"); 
		query.append("                      , A.AL_IPC_VOL" ).append("\n"); 
		query.append("                      , A.AL_IPC_WGT" ).append("\n"); 
		query.append("                      , A.AL_TS_VOL" ).append("\n"); 
		query.append("                      , A.AL_TS_WGT" ).append("\n"); 
		query.append("                      , A.BKG_OCN_VOL" ).append("\n"); 
		query.append("                      , A.BKG_OCN_WGT, A.BKG_OCN_VOL_VGM, A.BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("                      , A.BKG_IPC_VOL" ).append("\n"); 
		query.append("                      , A.BKG_IPC_WGT, A.BKG_IPC_VOL_VGM, A.BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("                      , A.BKG_TS_VOL" ).append("\n"); 
		query.append("                      , A.BKG_TS_WGT, A.BKG_TS_VOL_VGM, A.BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("                      , A.BKG_BS_VOL" ).append("\n"); 
		query.append("                      , A.BKG_BS_WGT" ).append("\n"); 
		query.append("                      , A.CM_OP" ).append("\n"); 
		query.append("                      , A.CM_OC" ).append("\n"); 
		query.append("                      , A.CM_VL" ).append("\n"); 
		query.append("                      , A.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                      , A.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                      , A.OFC_CD" ).append("\n"); 
		query.append("                   FROM" ).append("\n"); 
		query.append("                        (" ).append("\n"); 
		query.append("                        --Load Quota (Office)" ).append("\n"); 
		query.append("                         SELECT 2 AS FLG" ).append("\n"); 
		query.append("                              , VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                              , VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                              , VPP.RLANE_CD" ).append("\n"); 
		query.append("                              , VPP.DIR_CD" ).append("\n"); 
		query.append("                              , VPP.COST_YR" ).append("\n"); 
		query.append("                              , VPP.COST_MON" ).append("\n"); 
		query.append("                              , VPP.COST_WK" ).append("\n"); 
		query.append("                              , VPP.VSL_CD" ).append("\n"); 
		query.append("                              , VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                              , VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                              , DECODE(VPP.IOC_CD, 'O', MQ.LOD_QTY) AS QTA_OCN" ).append("\n"); 
		query.append("                              , DECODE(VPP.IOC_CD, 'I', MQ.LOD_QTY) AS QTA_IPC" ).append("\n"); 
		query.append("                              , NULL AS FC_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS FC_OCN_WGT" ).append("\n"); 
		query.append("                              , NULL AS FC_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS FC_IPC_WGT" ).append("\n"); 
		query.append("                              , NULL AS FC_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS FC_TS_WGT" ).append("\n"); 
		query.append("                              , NULL AS AL_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS AL_OCN_WGT" ).append("\n"); 
		query.append("                              , NULL AS AL_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS AL_IPC_WGT" ).append("\n"); 
		query.append("                              , NULL AS AL_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS AL_TS_WGT" ).append("\n"); 
		query.append("                              , NULL AS BKG_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_OCN_WGT, NULL AS BKG_OCN_VOL_VGM, NULL AS BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_IPC_WGT, NULL AS BKG_IPC_VOL_VGM, NULL AS BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_TS_WGT, NULL AS BKG_TS_VOL_VGM, NULL AS BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_BS_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_BS_WGT" ).append("\n"); 
		query.append("                              , NULL AS CM_OP" ).append("\n"); 
		query.append("                              , NULL AS CM_OC" ).append("\n"); 
		query.append("                              , NULL AS CM_VL" ).append("\n"); 
		query.append("                              , VPP.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                              , VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                              , NVL(" ).append("\n"); 
		query.append("                                (SELECT O2.CONV_RGN_OFC_CD" ).append("\n"); 
		query.append("                                   FROM SPC_RGN_OFC_CONV O2" ).append("\n"); 
		query.append("                                  WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD" ).append("\n"); 
		query.append("                                ), MQ.RGN_OFC_CD) AS OFC_CD" ).append("\n"); 
		query.append("                           FROM SQM_CFM_QTA MQ" ).append("\n"); 
		query.append("                              , SQM_QTA_RLSE_VER MQR" ).append("\n"); 
		query.append("                              , VVDS VPP" ).append("\n"); 
		query.append("                              , SPC_OFC_LVL O" ).append("\n"); 
		query.append("                          WHERE 1          = 1" ).append("\n"); 
		query.append("                          --  AND MQR.BSE_YR = VPP.COST_YR" ).append("\n"); 
		query.append("                          -- SQM은 Revenue Month로 생성되고 있음." ).append("\n"); 
		query.append(" 	                        AND MQR.BSE_YR 		   = VPP.BSE_YR" ).append("\n"); 
		query.append("                            -- CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("                            AND MQR.BSE_QTR_CD 	   = VPP.BSE_QTR_CD" ).append("\n"); 
		query.append("                            AND MQR.SQM_VER_STS_CD = 'R'" ).append("\n"); 
		query.append("                            AND MQR.BSE_TP_CD      = 'Q'" ).append("\n"); 
		query.append("                            AND MQ.QTA_RLSE_VER_NO = MQR.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("                            AND MQ.BSE_TP_CD       = MQR.BSE_TP_CD" ).append("\n"); 
		query.append("                            AND MQ.BSE_YR          = MQR.BSE_YR" ).append("\n"); 
		query.append("                            AND MQ.BSE_QTR_CD      = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("                            AND MQ.QTA_TGT_CD      = 'D'" ).append("\n"); 
		query.append("                            AND MQ.OFC_VW_CD       = 'L'" ).append("\n"); 
		query.append("                            AND MQ.TRD_CD          = VPP.TRD_CD" ).append("\n"); 
		query.append("                            AND MQ.RLANE_CD        = VPP.RLANE_CD" ).append("\n"); 
		query.append("                            AND MQ.DIR_CD          = VPP.DIR_CD" ).append("\n"); 
		query.append("                            AND MQ.VSL_CD          = VPP.VSL_CD" ).append("\n"); 
		query.append("                            AND MQ.SKD_VOY_NO      = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND MQ.SKD_DIR_CD      = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                            AND NVL((SELECT O2.CONV_RGN_OFC_CD" ).append("\n"); 
		query.append("                                       FROM SPC_RGN_OFC_CONV O2" ).append("\n"); 
		query.append("                                      WHERE O2.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD ), MQ.RGN_OFC_CD) = O.OFC_CD " ).append("\n"); 
		query.append("                        #if (${office} == '')" ).append("\n"); 
		query.append("                            AND ( O.N2ND_PRNT_OFC_CD = " ).append("\n"); 
		query.append("                                        CASE WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN" ).append("\n"); 
		query.append("                                                (SELECT A1.OFC_CD" ).append("\n"); 
		query.append("                                                   FROM MDM_ORGANIZATION A1" ).append("\n"); 
		query.append("                                                      , MDM_LOCATION A2" ).append("\n"); 
		query.append("                                                  WHERE A2.CNT_CD = 'EG' " ).append("\n"); 
		query.append("                                                    AND A1.DELT_FLG = 'N' " ).append("\n"); 
		query.append("                                                    AND A2.DELT_FLG = 'N' " ).append("\n"); 
		query.append("                                                    AND A1.OFC_CD   = A2.SLS_OFC_CD" ).append("\n"); 
		query.append("                                                  GROUP BY OFC_CD" ).append("\n"); 
		query.append("                                                ) THEN 'HAMRU' " ).append("\n"); 
		query.append("                                             WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD " ).append("\n"); 
		query.append("                                             ELSE VPP.OFC_CD END" ).append("\n"); 
		query.append("                             OR O.N2ND_PRNT_OFC_CD = 'SINRS' ) " ).append("\n"); 
		query.append("                        #else" ).append("\n"); 
		query.append("                            AND ( O.N2ND_PRNT_OFC_CD = " ).append("\n"); 
		query.append("                                        CASE WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN(" ).append("\n"); 
		query.append("                                                (SELECT A1.OFC_CD" ).append("\n"); 
		query.append("                                                   FROM MDM_ORGANIZATION A1" ).append("\n"); 
		query.append("                                                      , MDM_LOCATION A2" ).append("\n"); 
		query.append("                                                  WHERE A2.CNT_CD = 'EG' " ).append("\n"); 
		query.append("                                                    AND A1.DELT_FLG = 'N' " ).append("\n"); 
		query.append("                                                    AND A2.DELT_FLG = 'N' " ).append("\n"); 
		query.append("                                                    AND A1.OFC_CD   = A2.SLS_OFC_CD" ).append("\n"); 
		query.append("                                                  GROUP BY OFC_CD" ).append("\n"); 
		query.append("                                                ) ) THEN 'HAMRU' " ).append("\n"); 
		query.append("                                             WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD " ).append("\n"); 
		query.append("                                             WHEN VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA' THEN O.N2ND_PRNT_OFC_CD " ).append("\n"); 
		query.append("                                             ELSE VPP.OFC_CD END ) " ).append("\n"); 
		query.append("                        #end" ).append("\n"); 
		query.append("                            AND MQ.LOD_QTY > 0" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                        --Forecast" ).append("\n"); 
		query.append("                         SELECT 3 AS FLG" ).append("\n"); 
		query.append("                              , VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                              , VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                              , VPP.RLANE_CD" ).append("\n"); 
		query.append("                              , VPP.DIR_CD" ).append("\n"); 
		query.append("                              , VPP.COST_YR" ).append("\n"); 
		query.append("                              , VPP.COST_MON" ).append("\n"); 
		query.append("                              , VPP.COST_WK" ).append("\n"); 
		query.append("                              , VPP.VSL_CD" ).append("\n"); 
		query.append("                              , VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                              , VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                              , NULL AS QTA_OCN" ).append("\n"); 
		query.append("                              , NULL AS QTA_IPC" ).append("\n"); 
		query.append("                              , DECODE(F.IOC_TS_CD, 'O', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_OCN_VOL" ).append("\n"); 
		query.append("                              , DECODE(F.IOC_TS_CD, 'O', F.CFM_TTL_WGT) AS FC_OCN_WGT" ).append("\n"); 
		query.append("                              , DECODE(F.IOC_TS_CD, 'I', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_IPC_VOL" ).append("\n"); 
		query.append("                              , DECODE(F.IOC_TS_CD, 'I', F.CFM_TTL_WGT) AS FC_IPC_WGT" ).append("\n"); 
		query.append("                              , DECODE(F.IOC_TS_CD, 'T', NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2) AS FC_TS_VOL" ).append("\n"); 
		query.append("                              , DECODE(F.IOC_TS_CD, 'T', F.CFM_TTL_WGT) AS FC_TS_WGT" ).append("\n"); 
		query.append("                              , NULL AS AL_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS AL_OCN_WGT" ).append("\n"); 
		query.append("                              , NULL AS AL_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS AL_IPC_WGT" ).append("\n"); 
		query.append("                              , NULL AS AL_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS AL_TS_WGT" ).append("\n"); 
		query.append("                              , NULL AS BKG_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_OCN_WGT, NULL AS BKG_OCN_VOL_VGM, NULL AS BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_IPC_WGT, NULL AS BKG_IPC_VOL_VGM, NULL AS BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_TS_WGT, NULL AS BKG_TS_VOL_VGM, NULL AS BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_BS_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_BS_WGT" ).append("\n"); 
		query.append("                              , NULL AS CM_OP" ).append("\n"); 
		query.append("                              , NULL AS CM_OC" ).append("\n"); 
		query.append("                              , NULL AS CM_VL" ).append("\n"); 
		query.append("                              , VPP.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                              , VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                              , F.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                           FROM SPC_DLY_FCAST_CUST F" ).append("\n"); 
		query.append("                              , VVD_POL_POD VPP" ).append("\n"); 
		query.append("                          WHERE F.RLANE_CD      = VPP.RLANE_CD" ).append("\n"); 
		query.append("                            AND F.DIR_CD        = VPP.DIR_CD" ).append("\n"); 
		query.append("                            AND F.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                            AND F.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND F.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("			    " ).append("\n"); 
		query.append("                            AND F.POL_YD_CD      = VPP.POL_CD" ).append("\n"); 
		query.append("                            AND F.POD_YD_CD      = VPP.POD_CD" ).append("\n"); 
		query.append("                            AND F.POL_YD_IND_SEQ = VPP.POL_YD_SEQ" ).append("\n"); 
		query.append("                            AND F.POD_YD_IND_SEQ = VPP.POD_YD_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        #if (${office} == '')" ).append("\n"); 
		query.append("                            AND ( VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                             OR F.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                             OR F.SLS_RHQ_CD = 'SINRS'" ).append("\n"); 
		query.append("                             OR VPP.RLANE_CD = 'WAFIE' ) " ).append("\n"); 
		query.append("                        #else" ).append("\n"); 
		query.append("                            AND ( VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                             OR F.SLS_RHQ_CD = VPP.OFC_CD" ).append("\n"); 
		query.append("                             OR VPP.RLANE_CD = 'WAFIE'" ).append("\n"); 
		query.append("                             OR (VPP.OFC_CD = 'SINRS'" ).append("\n"); 
		query.append("                            AND VPP.RLANE_CD = 'WAXIA') ) " ).append("\n"); 
		query.append("                        #end" ).append("\n"); 
		query.append("                            AND VPP.PAST = 'N'" ).append("\n"); 
		query.append("                            AND (NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) + NVL(F.CFM_RF_QTY, 0)) > 0" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                        --Allocation" ).append("\n"); 
		query.append("                         SELECT 4 AS FLG" ).append("\n"); 
		query.append("                              , VPP.REP_TRD_CD" ).append("\n"); 
		query.append("                              , VPP.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                              , VPP.RLANE_CD" ).append("\n"); 
		query.append("                              , VPP.DIR_CD" ).append("\n"); 
		query.append("                              , VPP.COST_YR" ).append("\n"); 
		query.append("                              , VPP.COST_MON" ).append("\n"); 
		query.append("                              , VPP.COST_WK" ).append("\n"); 
		query.append("                              , VPP.VSL_CD" ).append("\n"); 
		query.append("                              , VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                              , VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("                              , NULL AS QTA_OCN" ).append("\n"); 
		query.append("                              , NULL AS QTA_IPC" ).append("\n"); 
		query.append("                              , NULL AS FC_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS FC_OCN_WGT" ).append("\n"); 
		query.append("                              , NULL AS FC_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS FC_IPC_WGT" ).append("\n"); 
		query.append("                              , NULL AS FC_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS FC_TS_WGT" ).append("\n"); 
		query.append("                              , DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'O', A.ASGN_TTL_QTY)) AS AL_OCN_VOL" ).append("\n"); 
		query.append("                              , DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'O', A.ASGN_TTL_WGT)) AS AL_OCN_WGT" ).append("\n"); 
		query.append("                              , DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'I', A.ASGN_TTL_QTY)) AS AL_IPC_VOL" ).append("\n"); 
		query.append("                              , DECODE(A.TS_FLG, 'N', DECODE(A.IOC_CD, 'I', A.ASGN_TTL_WGT)) AS AL_IPC_WGT" ).append("\n"); 
		query.append("                              , DECODE(A.TS_FLG, 'Y', A.ASGN_TTL_QTY) AS AL_TS_VOL" ).append("\n"); 
		query.append("                              , DECODE(A.TS_FLG, 'Y', A.ASGN_TTL_WGT) AS AL_TS_WGT" ).append("\n"); 
		query.append("                              , NULL AS BKG_OCN_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_OCN_WGT, NULL AS BKG_OCN_VOL_VGM, NULL AS BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_IPC_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_IPC_WGT, NULL AS BKG_IPC_VOL_VGM, NULL AS BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_TS_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_TS_WGT, NULL AS BKG_TS_VOL_VGM, NULL AS BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("                              , NULL AS BKG_BS_VOL" ).append("\n"); 
		query.append("                              , NULL AS BKG_BS_WGT" ).append("\n"); 
		query.append("                              , NULL AS CM_OP" ).append("\n"); 
		query.append("                              , NULL AS CM_OC" ).append("\n"); 
		query.append("                              , NULL AS CM_VL" ).append("\n"); 
		query.append("                              , VPP.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                              , VPP.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                              , SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("                           FROM SPC_ALOC_POL_POD A" ).append("\n"); 
		query.append("                              , VVD_POL_POD VPP" ).append("\n"); 
		query.append("                          WHERE A.RLANE_CD      = VPP.RLANE_CD" ).append("\n"); 
		query.append("                            AND A.DIR_CD        = VPP.DIR_CD" ).append("\n"); 
		query.append("                            AND A.VSL_CD        = VPP.VSL_CD" ).append("\n"); 
		query.append("                            AND A.SKD_VOY_NO    = VPP.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND A.SKD_DIR_CD    = VPP.SKD_DIR_CD" ).append("\n"); 
		query.append("			    " ).append("\n"); 
		query.append("                            AND A.POL_YD_CD      = VPP.POL_CD" ).append("\n"); 
		query.append("                            AND A.POD_YD_CD      = VPP.POD_CD" ).append("\n"); 
		query.append("                            AND A.POL_YD_IND_SEQ = VPP.POL_YD_SEQ" ).append("\n"); 
		query.append("                            AND A.POD_YD_IND_SEQ = VPP.POD_YD_SEQ" ).append("\n"); 
		query.append("                 " ).append("\n"); 
		query.append("                            AND A.ASGN_TTL_QTY + A.ASGN_TTL_WGT >0" ).append("\n"); 
		query.append("                            AND ( ( VPP.POL_CONTI = VPP.OFC_CONTI" ).append("\n"); 
		query.append("                            AND ( ( A.SLS_OFC_CD  = A.SLS_RGN_OFC_CD ) OR A.SLS_RGN_OFC_CD IS NULL ) )" ).append("\n"); 
		query.append("                             OR VPP.RLANE_CD      = 'WAFIE'" ).append("\n"); 
		query.append("                             OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA')" ).append("\n"); 
		query.append("                             OR " ).append("\n"); 
		query.append("                        #if (${office} == '') " ).append("\n"); 
		query.append("                              ( A.SLS_RHQ_CD = VPP.OFC_CD AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                             OR ( A.SLS_RHQ_CD = 'SINRS' AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD ) ) " ).append("\n"); 
		query.append("                        #else " ).append("\n"); 
		query.append("                              ( A.SLS_RHQ_CD = VPP.OFC_CD AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )" ).append("\n"); 
		query.append("                                ) " ).append("\n"); 
		query.append("                        #end" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("                --Booking" ).append("\n"); 
		query.append("                 SELECT 5 AS FLG" ).append("\n"); 
		query.append("                      , B.REP_TRD_CD" ).append("\n"); 
		query.append("                      , B.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("                      , B.RLANE_CD" ).append("\n"); 
		query.append("                      , B.DIR_CD" ).append("\n"); 
		query.append("                      , B.COST_YR" ).append("\n"); 
		query.append("                      , B.COST_MON" ).append("\n"); 
		query.append("                      , B.COST_WK" ).append("\n"); 
		query.append("                      , B.VSL_CD" ).append("\n"); 
		query.append("                      , B.SKD_VOY_NO" ).append("\n"); 
		query.append("                      , B.SKD_DIR_CD" ).append("\n"); 
		query.append("                      , NULL AS QTA_OCN" ).append("\n"); 
		query.append("                      , NULL AS QTA_IPC" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD||B.PAST, 'OY', B.BKG_TTL_QTY) AS FC_OCN_VOL" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD||B.PAST, 'OY', B.BKG_TTL_WGT) AS FC_OCN_WGT" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD||B.PAST, 'IY', B.BKG_TTL_QTY) AS FC_IPC_VOL" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD||B.PAST, 'IY', B.BKG_TTL_WGT) AS FC_IPC_WGT" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD||B.PAST, 'TY', B.BKG_TTL_QTY) AS FC_TS_VOL" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD||B.PAST, 'TY', B.BKG_TTL_WGT) AS FC_TS_WGT" ).append("\n"); 
		query.append("                      , NULL AS AL_OCN_VOL" ).append("\n"); 
		query.append("                      , NULL AS AL_OCN_WGT" ).append("\n"); 
		query.append("                      , NULL AS AL_IPC_VOL" ).append("\n"); 
		query.append("                      , NULL AS AL_IPC_WGT" ).append("\n"); 
		query.append("                      , NULL AS AL_TS_VOL" ).append("\n"); 
		query.append("                      , NULL AS AL_TS_WGT" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD, 'O', B.BKG_TTL_QTY) AS BKG_OCN_VOL" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD, 'O', B.BKG_TTL_WGT) AS BKG_OCN_WGT" ).append("\n"); 
		query.append("					  , DECODE(B.IOC_CD, 'O', B.BKG_VOL_VGM) AS BKG_OCN_VOL_VGM" ).append("\n"); 
		query.append("					  , DECODE(B.IOC_CD, 'O', B.BKG_WGT_VGM) AS BKG_OCN_WGT_VGM" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD, 'I', B.BKG_TTL_QTY) AS BKG_IPC_VOL" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD, 'I', B.BKG_TTL_WGT) AS BKG_IPC_WGT" ).append("\n"); 
		query.append("					  , DECODE(B.IOC_CD, 'I', B.BKG_VOL_VGM) AS BKG_IPC_VOL_VGM" ).append("\n"); 
		query.append("					  , DECODE(B.IOC_CD, 'I', B.BKG_WGT_VGM) AS BKG_IPC_WGT_VGM" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD, 'T', B.BKG_TTL_QTY) AS BKG_TS_VOL" ).append("\n"); 
		query.append("                      , DECODE(B.IOC_CD, 'T', B.BKG_TTL_WGT) AS BKG_TS_WGT" ).append("\n"); 
		query.append("					  , DECODE(B.IOC_CD, 'T', B.BKG_VOL_VGM) AS BKG_TS_VOL_VGM" ).append("\n"); 
		query.append("					  , DECODE(B.IOC_CD, 'T', B.BKG_WGT_VGM) AS BKG_TS_WGT_VGM" ).append("\n"); 
		query.append("                      , DECODE(NVL(B.ALOC_STS_CD, 'X'), 'S', B.BKG_TTL_QTY, 'A', B.BKG_TTL_QTY) AS BKG_BS_VOL" ).append("\n"); 
		query.append("                      , DECODE(NVL(B.ALOC_STS_CD, 'X'), 'S', B.BKG_TTL_WGT, 'A', B.BKG_TTL_WGT) AS BKG_BS_WGT" ).append("\n"); 
		query.append("                      , CM_OP AS CM_OP" ).append("\n"); 
		query.append("                      , CM_OC AS CM_OC" ).append("\n"); 
		query.append("                      , CM_VL AS CM_VL" ).append("\n"); 
		query.append("                      , B.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("                      , B.LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                      , B.OFC_CD" ).append("\n"); 
		query.append("                   FROM BKG_DATA B" ).append("\n"); 
		query.append("                  WHERE B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0" ).append("\n"); 
		query.append("                ) A " ).append("\n"); 
		query.append("        #if (${office} == '') " ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("              , SPC_OFC_LVL O" ).append("\n"); 
		query.append("          WHERE SPC_SCR_OFC_CONV_FNC(A.OFC_CD) = O.OFC_CD" ).append("\n"); 
		query.append("            AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("            AND ( O.N2ND_PRNT_OFC_CD = DECODE(@[user_ofc], 'SZPDC', @[user_ofc], @[office])" ).append("\n"); 
		query.append("             OR O.N3RD_PRNT_OFC_CD   = DECODE(@[user_ofc], 'SZPDC', @[user_ofc], @[office])" ).append("\n"); 
		query.append("             OR (@[office] = 'SINRS' AND A.RLANE_CD = 'WAXIA') ) " ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("GROUP BY REP_TRD_CD" ).append("\n"); 
		query.append("      , REP_SUB_TRD_CD" ).append("\n"); 
		query.append("      , RLANE_CD" ).append("\n"); 
		query.append("      , DIR_CD" ).append("\n"); 
		query.append("      , COST_YR" ).append("\n"); 
		query.append("      , COST_MON" ).append("\n"); 
		query.append("      , COST_WK" ).append("\n"); 
		query.append("      , VSL_CD" ).append("\n"); 
		query.append("      , SKD_VOY_NO" ).append("\n"); 
		query.append("      , SKD_DIR_CD" ).append("\n"); 
		query.append("      , LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("      , LST_LODG_PORT_CD ) Z, SPC_ALOC_CTRL_OPT C " ).append("\n"); 
		query.append("WHERE C.RLANE_CD (+)    = Z.RLANE_CD " ).append("\n"); 
		query.append("  AND C.DIR_CD (+)      = Z.DIR_CD " ).append("\n"); 
		query.append("  AND C.VSL_CD (+)      = Z.VSL_CD " ).append("\n"); 
		query.append("  AND C.SKD_VOY_NO(+)   = Z.SKD_VOY_NO " ).append("\n"); 
		query.append("  AND C.SKD_DIR_CD(+)   = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("ORDER BY Z.REP_TRD_CD" ).append("\n"); 
		query.append("     , Z.REP_SUB_TRD_CD" ).append("\n"); 
		query.append("     , Z.RLANE_CD" ).append("\n"); 
		query.append("     , Z.LST_LODG_PORT_ETD_DT" ).append("\n"); 
		query.append("     , Z.DIR_CD" ).append("\n"); 
		query.append("     , Z.COST_YR" ).append("\n"); 
		query.append("     , Z.COST_MON" ).append("\n"); 
		query.append("     , Z.COST_WK" ).append("\n"); 
		query.append("     , Z.VSL_CD" ).append("\n"); 
		query.append("     , Z.SKD_VOY_NO" ).append("\n"); 
		query.append("     , Z.SKD_DIR_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다." ).append("\n"); 
		query.append("CHOI.Y.S - [프로젝트] Ticket ID : CHM-201004171 - 53FT 관련 필드 추가" ).append("\n"); 
		query.append("2011.01.04 최윤성 [CHM-201008093-01] Office Level Table 생성  - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체" ).append("\n"); 
		query.append("2011.04.04 이석준 [CHM-201109754-01] SFXEM Lane의 경우 SINRS도 조회될 수 있도록 수정" ).append("\n"); 
		query.append("2011.07.04 이석준 [CHM-201111880] control by HO 화면 보완 - IPC, TS 관련" ).append("\n"); 
		query.append("2011.08.12 이행지 [CHM-201112741-01] Control by HO/RHQ 화면 보완 2차 -WAFIE 로직 반영" ).append("\n"); 
		query.append("2011.12.12 김종준 [CHM-201115055-01] [SPC] SFXEM -> SFXIA 변경에 따른 로직 보완 -Control by HO/RHQ 로직 보완 - SFX의 경우, Service Lane으로 대상 존재 여부 확인 부분 제거" ).append("\n"); 
		query.append("2011.12.28 김종준 [CHM-201115346-01] QTA 데이터가 확정될때까지 2012년 대상항차부터 QTA 정보를 0으로 보여달라는 요청 원복" ).append("\n"); 
		query.append("2012.08.29 전상화 [CHM-201219745-01] Allocation Control by HO/RHQ - CNTR Movement 추가" ).append("\n"); 
		query.append("2012.12.07 김시몬 [CHM-201221639] 대상항차정보가져올때 SLANE_CD -> RLANE_CD로 변경 보완 -Control by HO/RHQ 로직 보완" ).append("\n"); 
		query.append("2013.01.08 최윤성 [CHM-201322381-01] WAXIA 노선 예외처리" ).append("\n"); 
		query.append("2013.01.23 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진" ).append("\n"); 
		query.append("2013.10.30 최윤성 [CHM-201327083-01] IPC Sector 판매 활성화 Tool 개발 - Space Utilization 화면에서 호출시 처리 로직 추가" ).append("\n"); 
		query.append("2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거" ).append("\n"); 
		query.append("2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경" ).append("\n"); 
		query.append("2014.01.13 김시몬 [선처리] SELSA/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가" ).append("\n"); 
		query.append("*/" ).append("\n"); 

	}
}