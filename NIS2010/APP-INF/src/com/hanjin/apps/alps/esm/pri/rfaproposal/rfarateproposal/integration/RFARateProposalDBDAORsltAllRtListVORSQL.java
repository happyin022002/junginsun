/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : RFARateProposalDBDAORsltAllRtListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.11.30
*@LastModifier : 
*@LastVersion : 1.0
* 2015.11.30 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.rfaproposal.rfarateproposal.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class RFARateProposalDBDAORsltAllRtListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Summary List
	  * * History
	  * 2015.10.28 [CHM-201538236] RFA module 승인 절차 간소화 및 기능 개선 Request by SELCMU/김현경
	  * </pre>
	  */
	public RFARateProposalDBDAORsltAllRtListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("prop_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.NUMERIC + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("amdt_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("svc_scp_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.rfaproposal.rfarateproposal.integration").append("\n"); 
		query.append("FileName : RFARateProposalDBDAORsltAllRtListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH ACPT_KEY_ROUT AS (" ).append("\n"); 
		query.append("  SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("    FROM (SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, B.ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT_CMDT A, PRI_RP_SCP_RT_CMDT_ROUT B" ).append("\n"); 
		query.append("           WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("             AND A.PROP_NO = B.PROP_NO" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = B.AMDT_SEQ" ).append("\n"); 
		query.append("             AND A.SVC_SCP_CD = B.SVC_SCP_CD" ).append("\n"); 
		query.append("             AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("          UNION ALL" ).append("\n"); 
		query.append("          SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, B.ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT_ACT_CUST A, PRI_RP_SCP_RT_CMDT_ROUT B" ).append("\n"); 
		query.append("           WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("             AND A.PROP_NO = B.PROP_NO" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = B.AMDT_SEQ" ).append("\n"); 
		query.append("             AND A.SVC_SCP_CD = B.SVC_SCP_CD" ).append("\n"); 
		query.append("             AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("          UNION ALL" ).append("\n"); 
		query.append("          SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, B.ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT_CNOTE A, PRI_RP_SCP_RT_CMDT_ROUT B" ).append("\n"); 
		query.append("           WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("             AND A.PROP_NO = B.PROP_NO" ).append("\n"); 
		query.append("             AND A.AMDT_SEQ = B.AMDT_SEQ" ).append("\n"); 
		query.append("             AND A.SVC_SCP_CD = B.SVC_SCP_CD" ).append("\n"); 
		query.append("             AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("          UNION ALL" ).append("\n"); 
		query.append("          SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT_ROUT_PNT" ).append("\n"); 
		query.append("           WHERE PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("          UNION ALL" ).append("\n"); 
		query.append("          SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT_ROUT_VIA" ).append("\n"); 
		query.append("           WHERE PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("          UNION ALL" ).append("\n"); 
		query.append("          SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT_CMDT_RNOTE" ).append("\n"); 
		query.append("           WHERE PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = N1ST_CMNC_AMDT_SEQ" ).append("\n"); 
		query.append("          UNION ALL" ).append("\n"); 
		query.append("          SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("            FROM PRI_RP_SCP_RT" ).append("\n"); 
		query.append("           WHERE PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("             AND SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("             AND AMDT_SEQ = N1ST_CMNC_AMDT_SEQ)" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("ACPT_KEY_HDR AS (" ).append("\n"); 
		query.append("  SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ FROM ACPT_KEY_ROUT" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT /*+ ORDERED */" ).append("\n"); 
		query.append("       A.PROP_NO" ).append("\n"); 
		query.append("      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("      ,A.BLET_DP_SEQ" ).append("\n"); 
		query.append("      ,REPLACE(B.PRC_CMDT_DEF_NM, '|||', ' / ' || CHR(13)) AS PRC_CMDT_DEF_NM" ).append("\n"); 
		query.append("      ,NVL(REPLACE(C.CUST_LGL_ENG_NM, '|||', ' / ' || CHR(13)), ' ') AS CUST_LGL_ENG_NM" ).append("\n"); 
		query.append("      ,NVL(REPLACE(D.CNOTE_CTNT, '|||', ' '), ' ') AS CNOTE_CTNT" ).append("\n"); 
		query.append("      ,E.ROUT_SEQ" ).append("\n"); 
		query.append("      ,REPLACE(F.ROUT_PNT_LOC_DEF_NM, '|||', CHR(13)) AS ORG_ROUT_PNT_LOC_DEF_NM" ).append("\n"); 
		query.append("      ,REPLACE(G.ROUT_VIA_PORT_DEF_CD, '|||', CHR(13)) AS ORG_ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("      ,REPLACE(H.ROUT_VIA_PORT_DEF_CD, '|||', CHR(13)) AS DEST_ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("      ,REPLACE(I.ROUT_PNT_LOC_DEF_NM, '|||', CHR(13)) AS DEST_ROUT_PNT_LOC_DEF_NM" ).append("\n"); 
		query.append("      ,REPLACE(J.RNOTE_CTNT, '|||', ' ') AS RNOTE_CTNT" ).append("\n"); 
		query.append("      ,REPLACE(K.RT_CTNT, '|||', CHR(13)) AS RT_CTNT" ).append("\n"); 
		query.append("      ,REPLACE(K.GRI_CTNT, '|||', CHR(13)) AS GRI_CTNT" ).append("\n"); 
		query.append("      ,A.FIC_RT_TP_CD" ).append("\n"); 
		query.append("  FROM PRI_RP_SCP_RT_CMDT_HDR A" ).append("\n"); 
		query.append("      ,ACPT_KEY_HDR AK" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(PRC_CMDT_DEF_NM || SRC_INFO_CD, '|||'), 4) AS PRC_CMDT_DEF_NM" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,DECODE(PRC_CMDT_TP_CD" ).append("\n"); 
		query.append("                             ,'G'" ).append("\n"); 
		query.append("                             ,(SELECT PRC_GRP_CMDT_DESC" ).append("\n"); 
		query.append("                                FROM PRI_RP_SCP_GRP_CMDT" ).append("\n"); 
		query.append("                               WHERE PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("                                 AND AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("                                 AND SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("                                 AND PRC_GRP_CMDT_CD = A.PRC_CMDT_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)" ).append("\n"); 
		query.append("                             ,'R'" ).append("\n"); 
		query.append("                             ,(SELECT REP_CMDT_NM" ).append("\n"); 
		query.append("                                FROM MDM_REP_CMDT" ).append("\n"); 
		query.append("                               WHERE REP_CMDT_CD = A.PRC_CMDT_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)" ).append("\n"); 
		query.append("                             ,'C'" ).append("\n"); 
		query.append("                             ,(SELECT CMDT_NM" ).append("\n"); 
		query.append("                                FROM MDM_COMMODITY" ).append("\n"); 
		query.append("                               WHERE CMDT_CD = A.PRC_CMDT_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)) AS PRC_CMDT_DEF_NM" ).append("\n"); 
		query.append("                      ,PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ ORDER BY DECODE(A.PRC_CMDT_TP_CD, 'G', '1', 'C', '2'), PRC_CMDT_DEF_CD) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_CMDT A, ACPT_KEY_HDR K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) B" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(CUST_LGL_ENG_NM || SRC_INFO_CD, '|||'), 4) AS CUST_LGL_ENG_NM" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,(SELECT CUST_LGL_ENG_NM" ).append("\n"); 
		query.append("                          FROM MDM_CUSTOMER" ).append("\n"); 
		query.append("                         WHERE CUST_CNT_CD = A.CUST_CNT_CD" ).append("\n"); 
		query.append("                           AND CUST_SEQ = A.CUST_SEQ" ).append("\n"); 
		query.append("                           AND ROWNUM = 1) AS CUST_LGL_ENG_NM" ).append("\n"); 
		query.append("                      ,PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ ORDER BY A.ACT_CUST_SEQ) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_ACT_CUST A, ACPT_KEY_HDR K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) C" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(NOTE_CTNT || SRC_INFO_CD, '|||'), 4) AS CNOTE_CTNT" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.NOTE_CTNT" ).append("\n"); 
		query.append("                      ,A.PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ ORDER BY A.CMDT_NOTE_SEQ) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_CNOTE A, ACPT_KEY_HDR K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) D" ).append("\n"); 
		query.append("      ,(SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("               ROWNUM, A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("          FROM PRI_RP_SCP_RT_CMDT_ROUT A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("         WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("           AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("           AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("           AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("           AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("           AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("           AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("           AND A.ROUT_SEQ = K.ROUT_SEQ) E" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,ROUT_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_NM || NVL2(RCV_DE_TERM_CD, '(' || RCV_DE_TERM_CD || ')', '') ||" ).append("\n"); 
		query.append("                                          SRC_INFO_CD" ).append("\n"); 
		query.append("                                         ,'|||')" ).append("\n"); 
		query.append("                     ,4) AS ROUT_PNT_LOC_DEF_NM" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.ROUT_SEQ" ).append("\n"); 
		query.append("                      ,A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("                      ,A.ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("                      ,DECODE(A.ROUT_PNT_LOC_TP_CD" ).append("\n"); 
		query.append("                             ,'G'" ).append("\n"); 
		query.append("                             ,(SELECT PRC_GRP_LOC_DESC" ).append("\n"); 
		query.append("                                FROM PRI_RP_SCP_GRP_LOC" ).append("\n"); 
		query.append("                               WHERE PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("                                 AND AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("                                 AND SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("                                 AND PRC_GRP_LOC_CD = A.ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)" ).append("\n"); 
		query.append("                             ,'L'" ).append("\n"); 
		query.append("                             ,(SELECT LOC_NM" ).append("\n"); 
		query.append("                                FROM MDM_LOCATION" ).append("\n"); 
		query.append("                               WHERE LOC_CD = A.ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)) AS ROUT_PNT_LOC_DEF_NM" ).append("\n"); 
		query.append("                      ,(SELECT INTG_CD_VAL_DP_DESC" ).append("\n"); 
		query.append("                          FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                         WHERE INTG_CD_ID = 'CD02070'" ).append("\n"); 
		query.append("                           AND INTG_CD_VAL_CTNT = A.RCV_DE_TERM_CD" ).append("\n"); 
		query.append("                           AND ROWNUM = 1) AS RCV_DE_TERM_CD" ).append("\n"); 
		query.append("                      ,A.PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD ORDER BY DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', '1', 'L', '2'), A.ROUT_PNT_LOC_DEF_CD) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_ROUT_PNT A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                   AND A.ROUT_SEQ = K.ROUT_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR ROUT_SEQ = ROUT_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) F" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,ROUT_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD || SRC_INFO_CD, '|||'), 4) AS ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.ROUT_SEQ" ).append("\n"); 
		query.append("                      ,A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("                      ,A.ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("                      ,A.PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD ORDER BY DECODE(A.ROUT_VIA_PORT_TP_CD, 'G', '1', 'L', '2'), A.ROUT_VIA_PORT_DEF_CD) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_ROUT_VIA A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                   AND A.ROUT_SEQ = K.ROUT_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR ROUT_SEQ = ROUT_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) G" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,ROUT_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(ROUT_VIA_PORT_DEF_CD || SRC_INFO_CD, '|||'), 4) AS ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.ROUT_SEQ" ).append("\n"); 
		query.append("                      ,A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("                      ,A.ROUT_VIA_PORT_DEF_CD" ).append("\n"); 
		query.append("                      ,A.PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD ORDER BY DECODE(A.ROUT_VIA_PORT_TP_CD, 'G', '1', 'L', '2'), A.ROUT_VIA_PORT_DEF_CD) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_ROUT_VIA A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                   AND A.ROUT_SEQ = K.ROUT_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR ROUT_SEQ = ROUT_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) H" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,ROUT_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(ROUT_PNT_LOC_DEF_NM || NVL2(RCV_DE_TERM_CD, '(' || RCV_DE_TERM_CD || ')', '') ||" ).append("\n"); 
		query.append("                                          SRC_INFO_CD" ).append("\n"); 
		query.append("                                         ,'|||')" ).append("\n"); 
		query.append("                     ,4) AS ROUT_PNT_LOC_DEF_NM" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.ROUT_SEQ" ).append("\n"); 
		query.append("                      ,A.ORG_DEST_TP_CD" ).append("\n"); 
		query.append("                      ,A.ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("                      ,DECODE(A.ROUT_PNT_LOC_TP_CD" ).append("\n"); 
		query.append("                             ,'G'" ).append("\n"); 
		query.append("                             ,(SELECT PRC_GRP_LOC_DESC" ).append("\n"); 
		query.append("                                FROM PRI_RP_SCP_GRP_LOC" ).append("\n"); 
		query.append("                               WHERE PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("                                 AND AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("                                 AND SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("                                 AND PRC_GRP_LOC_CD = A.ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)" ).append("\n"); 
		query.append("                             ,'L'" ).append("\n"); 
		query.append("                             ,(SELECT LOC_NM" ).append("\n"); 
		query.append("                                FROM MDM_LOCATION" ).append("\n"); 
		query.append("                               WHERE LOC_CD = A.ROUT_PNT_LOC_DEF_CD" ).append("\n"); 
		query.append("                                 AND ROWNUM = 1)) AS ROUT_PNT_LOC_DEF_NM" ).append("\n"); 
		query.append("                      ,(SELECT INTG_CD_VAL_DP_DESC" ).append("\n"); 
		query.append("                          FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                         WHERE INTG_CD_ID = 'CD02071'" ).append("\n"); 
		query.append("                           AND INTG_CD_VAL_CTNT = A.RCV_DE_TERM_CD" ).append("\n"); 
		query.append("                           AND ROWNUM = 1) AS RCV_DE_TERM_CD" ).append("\n"); 
		query.append("                      ,PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD ORDER BY DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', '1', 'L', '2'), A.ROUT_PNT_LOC_DEF_CD) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.ORG_DEST_TP_CD) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_ROUT_PNT A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                   AND A.ROUT_SEQ = K.ROUT_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR ROUT_SEQ = ROUT_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) I" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,ROUT_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(NOTE_CTNT || SRC_INFO_CD, '|||'), 4) AS RNOTE_CTNT" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.ROUT_SEQ" ).append("\n"); 
		query.append("                      ,A.NOTE_CTNT" ).append("\n"); 
		query.append("                      ,A.PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ ORDER BY A.ROUT_NOTE_SEQ) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT_CMDT_RNOTE A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                   AND A.ROUT_SEQ = K.ROUT_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR ROUT_SEQ = ROUT_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) J" ).append("\n"); 
		query.append("      ,(SELECT PROP_NO" ).append("\n"); 
		query.append("              ,AMDT_SEQ" ).append("\n"); 
		query.append("              ,SVC_SCP_CD" ).append("\n"); 
		query.append("              ,CMDT_HDR_SEQ" ).append("\n"); 
		query.append("              ,ROUT_SEQ" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(RAT_UT_CD || ' ' || PRC_CGO_TP_CD || ' ' || CURR_CD || ' ' ||" ).append("\n"); 
		query.append("                                          TO_CHAR(PROP_FRT_RT_AMT, '9,999,999.99') || '' || SRC_INFO_CD" ).append("\n"); 
		query.append("                                         ,'|||')" ).append("\n"); 
		query.append("                     ,4) AS RT_CTNT" ).append("\n"); 
		query.append("              ,SUBSTR(SYS_CONNECT_BY_PATH(DECODE(GRI_APPL_TP_CD, 'N', ' ', TO_CHAR(GRI_APPL_AMT, '9,999,999.99')), '|||')" ).append("\n"); 
		query.append("                     ,4) AS GRI_CTNT" ).append("\n"); 
		query.append("          FROM (SELECT /*+ LEADING(K) */" ).append("\n"); 
		query.append("                       A.PROP_NO" ).append("\n"); 
		query.append("                      ,A.AMDT_SEQ" ).append("\n"); 
		query.append("                      ,A.SVC_SCP_CD" ).append("\n"); 
		query.append("                      ,A.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                      ,A.ROUT_SEQ" ).append("\n"); 
		query.append("                      ,A.RAT_UT_CD" ).append("\n"); 
		query.append("                      ,A.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("                      ,A.CURR_CD" ).append("\n"); 
		query.append("                      ,A.PROP_FRT_RT_AMT" ).append("\n"); 
		query.append("                      ,A.PRC_PROG_STS_CD" ).append("\n"); 
		query.append("                      ,GRI_APPL_TP_CD" ).append("\n"); 
		query.append("                      ,GRI_APPL_AMT" ).append("\n"); 
		query.append("                      ,CASE" ).append("\n"); 
		query.append("                         WHEN A.AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND A.AMDT_SEQ > 0 THEN" ).append("\n"); 
		query.append("                          (SELECT '(' || INTG_CD_VAL_DP_DESC || ')'" ).append("\n"); 
		query.append("                             FROM COM_INTG_CD_DTL" ).append("\n"); 
		query.append("                            WHERE INTG_CD_ID = 'CD02198'" ).append("\n"); 
		query.append("                              AND INTG_CD_VAL_CTNT = A.SRC_INFO_CD" ).append("\n"); 
		query.append("                              AND ROWNUM = 1)" ).append("\n"); 
		query.append("                         ELSE" ).append("\n"); 
		query.append("                          ''" ).append("\n"); 
		query.append("                       END AS SRC_INFO_CD" ).append("\n"); 
		query.append("                      ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ ORDER BY A.RT_SEQ) AS RN" ).append("\n"); 
		query.append("                      ,COUNT(*) OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ) AS CNT" ).append("\n"); 
		query.append("                  FROM PRI_RP_SCP_RT A, ACPT_KEY_ROUT K" ).append("\n"); 
		query.append("                 WHERE A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("                   AND A.PROP_NO = K.PROP_NO" ).append("\n"); 
		query.append("                   AND A.AMDT_SEQ = K.AMDT_SEQ" ).append("\n"); 
		query.append("                   AND A.SVC_SCP_CD = K.SVC_SCP_CD" ).append("\n"); 
		query.append("                   AND A.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                   AND A.ROUT_SEQ = K.ROUT_SEQ)" ).append("\n"); 
		query.append("         WHERE LEVEL = CNT" ).append("\n"); 
		query.append("        CONNECT BY PRIOR CMDT_HDR_SEQ = CMDT_HDR_SEQ" ).append("\n"); 
		query.append("               AND PRIOR ROUT_SEQ = ROUT_SEQ" ).append("\n"); 
		query.append("               AND PRIOR RN = RN - 1) K" ).append("\n"); 
		query.append(" WHERE A.PROP_NO = B.PROP_NO(+)" ).append("\n"); 
		query.append("   AND A.AMDT_SEQ = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND A.SVC_SCP_CD = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND A.PROP_NO = C.PROP_NO(+)" ).append("\n"); 
		query.append("   AND A.AMDT_SEQ = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND A.SVC_SCP_CD = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND A.CMDT_HDR_SEQ = C.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND A.PROP_NO = D.PROP_NO(+)" ).append("\n"); 
		query.append("   AND A.AMDT_SEQ = D.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND A.SVC_SCP_CD = D.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND A.CMDT_HDR_SEQ = D.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND A.PROP_NO = E.PROP_NO(+)" ).append("\n"); 
		query.append("   AND A.AMDT_SEQ = E.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND A.SVC_SCP_CD = E.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND A.CMDT_HDR_SEQ = E.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.PROP_NO = F.PROP_NO(+)" ).append("\n"); 
		query.append("   AND E.AMDT_SEQ = F.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.SVC_SCP_CD = F.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND E.CMDT_HDR_SEQ = F.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.ROUT_SEQ = F.ROUT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.PROP_NO = G.PROP_NO(+)" ).append("\n"); 
		query.append("   AND E.AMDT_SEQ = G.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.SVC_SCP_CD = G.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND E.CMDT_HDR_SEQ = G.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.ROUT_SEQ = G.ROUT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.PROP_NO = H.PROP_NO(+)" ).append("\n"); 
		query.append("   AND E.AMDT_SEQ = H.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.SVC_SCP_CD = H.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND E.CMDT_HDR_SEQ = H.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.ROUT_SEQ = H.ROUT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.PROP_NO = I.PROP_NO(+)" ).append("\n"); 
		query.append("   AND E.AMDT_SEQ = I.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.SVC_SCP_CD = I.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND E.CMDT_HDR_SEQ = I.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.ROUT_SEQ = I.ROUT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.PROP_NO = J.PROP_NO(+)" ).append("\n"); 
		query.append("   AND E.AMDT_SEQ = J.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.SVC_SCP_CD = J.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND E.CMDT_HDR_SEQ = J.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.ROUT_SEQ = J.ROUT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.PROP_NO = K.PROP_NO(+)" ).append("\n"); 
		query.append("   AND E.AMDT_SEQ = K.AMDT_SEQ(+)" ).append("\n"); 
		query.append("   AND E.SVC_SCP_CD = K.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("   AND E.CMDT_HDR_SEQ = K.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("   AND E.ROUT_SEQ = K.ROUT_SEQ(+)" ).append("\n"); 
		query.append("   AND A.PROP_NO = AK.PROP_NO" ).append("\n"); 
		query.append("   AND A.AMDT_SEQ = AK.AMDT_SEQ" ).append("\n"); 
		query.append("   AND A.SVC_SCP_CD = AK.SVC_SCP_CD" ).append("\n"); 
		query.append("   AND A.CMDT_HDR_SEQ = AK.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("   AND A.PROP_NO = @[prop_no]" ).append("\n"); 
		query.append("   AND A.AMDT_SEQ = @[amdt_seq]" ).append("\n"); 
		query.append("   AND A.SVC_SCP_CD = @[svc_scp_cd]" ).append("\n"); 
		query.append("ORDER BY A.BLET_DP_SEQ" ).append("\n"); 

	}
}