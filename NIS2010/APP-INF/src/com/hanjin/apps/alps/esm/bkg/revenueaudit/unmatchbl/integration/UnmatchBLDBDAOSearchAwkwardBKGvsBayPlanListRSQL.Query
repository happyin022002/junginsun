<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOSearchAwkwardBKGvsBayPlanListRSQL">
			<desc><![CDATA[AK Application vs Bay Plan Discrepancy 조회]]></desc>
			<sql><![CDATA[
WITH
BK AS (
SELECT ( SELECT OFC_CD FROM MDM_ORGANIZATION WHERE OFC_TP_CD = 'HQ' CONNECT BY PRIOR PRNT_OFC_CD = OFC_CD START WITH OFC_CD = BK.BKG_OFC_CD ) BKG_RHQ_CD,
       BK.BKG_OFC_CD,
       BK.BKG_NO,
       BK.POR_CD,
       BK.POL_CD,
       BK.POD_CD,
       BK.DEL_CD,
      (SELECT INTG_CD_VAL_DP_DESC
       FROM COM_INTG_CD_DTL
       WHERE INTG_CD_ID ='CD01716'
       AND INTG_CD_VAL_CTNT = BR.BKG_CTRT_TP_CD) BKG_CTRT_TP_CD  ,
       CASE WHEN BR.BKG_CTRT_TP_CD = 'R' THEN BK.RFA_NO
            WHEN BR.BKG_CTRT_TP_CD = 'S' THEN BK.SC_NO
            WHEN BR.BKG_CTRT_TP_CD = 'T' THEN BK.TAA_NO
       END CTRT_NO
FROM BKG_BOOKING BK, BKG_RATE BR,
 #if (${search_date} == 'ETD')
     BKG_VVD BV, VSK_VSL_PORT_SKD V,
 #end
#if (${bkg_no} != '') 
    (SELECT	OFC_CD 
     FROM	MDM_ORGANIZATION A
     START WITH	A.OFC_CD = 'SELHO'
     CONNECT BY	PRIOR A.OFC_CD	= A.PRNT_OFC_CD  
     ) OG
WHERE BK.BKG_NO = @[bkg_no]
#else

    (SELECT	OFC_CD 
     FROM	MDM_ORGANIZATION A
 #if (${bkg_ofc_cd} != '') 
     WHERE	OFC_CD = @[bkg_ofc_cd]
 #end
     START WITH	A.OFC_CD = NVL(@[bkg_rhq_cd],'SELHO')
     CONNECT BY	PRIOR A.OFC_CD	= A.PRNT_OFC_CD  
     ) OG
 #if (${search_date} == 'ETD')
  WHERE BK.BKG_NO = BV.BKG_NO
  AND BK.POL_CD = BV.POL_CD
  AND V.VSL_CD = BV.VSL_CD
  AND V.SKD_VOY_NO = BV.SKD_VOY_NO
  AND V.SKD_DIR_CD = BV.SKD_DIR_CD
  AND V.VPS_PORT_CD = BV.POL_CD
  AND V.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
  AND V.VPS_ETD_DT BETWEEN TO_DATE(@[fm_dt],'YYYY-MM-DD') AND TO_DATE(@[to_dt],'YYYY-MM-DD') + 0.99999
 #elseif (${search_date} == 'APPL')
 WHERE BR.RT_APLY_DT BETWEEN TO_DATE(@[fm_dt],'YYYY-MM-DD') AND TO_DATE(@[to_dt],'YYYY-MM-DD') + 0.99999
 #else
 WHERE BK.BKG_CRE_DT BETWEEN TO_DATE(@[fm_dt],'YYYY-MM-DD') AND TO_DATE(@[to_dt],'YYYY-MM-DD') + 0.99999
 #end
 #if (${svc_scp_cd} != '') 
AND BK.SVC_SCP_CD   = @[svc_scp_cd]
 #end
 #if (${t_vvd} != '') 
AND BK.VSL_CD = SUBSTR(@[t_vvd], 1, 4)
AND BK.SKD_VOY_NO = SUBSTR(@[t_vvd], 5, 4)
AND BK.SKD_DIR_CD = SUBSTR(@[t_vvd], 9, 1)
 #end
 #if (${bkg_ctrt_tp_cd} != '') 
AND     CASE
             WHEN    BK.TAA_NO IS NOT NULL THEN  'T'
             WHEN    BK.RFA_NO IS NOT NULL THEN  'R'
             ELSE    'S'
        END                     = @[bkg_ctrt_tp_cd]
 #end

 #if (${ctrt_no} != '') 
AND     CASE
             WHEN    BK.TAA_NO IS NOT NULL THEN  BK.TAA_NO
             WHEN    BK.RFA_NO IS NOT NULL THEN  BK.RFA_NO
             ELSE    BK.SC_NO
        END                     LIKE @[ctrt_no] || '%'
 #end


 #if (${por_cd} != '') 
AND BK.POR_CD   = @[por_cd]
 #end
 #if (${pol_cd} != '') 
AND BK.POL_CD   = @[pol_cd]
 #end
 #if (${pod_cd} != '') 
AND BK.POD_CD   = @[pod_cd]
 #end
 #if (${del_cd} != '') 
AND BK.DEL_CD   = @[del_cd]
 #end
#end
AND BK.BKG_STS_CD <> 'X'
AND BK.BKG_CGO_TP_CD = 'F'
AND BK.AWK_CGO_FLG = 'Y'
AND NVL(BK.BL_NO_TP, 'N') <> '9'
AND NVL(BR.RT_BL_TP_CD, 'N') NOT IN ( 'C', 'B' )
AND BK.BKG_NO = BR.BKG_NO
AND OG.OFC_CD = BK.BKG_OFC_CD

)
,
BC AS(
SELECT DISTINCT 
       BK.BKG_NO, 
       BC.CNTR_NO,
       BC.CNTR_TPSZ_CD,
       (SELECT SUM(OVR_VOID_SLT_QTY) 
        FROM BKG_AWK_CGO 
        WHERE BKG_NO(+) = BC.BKG_NO 
        AND CNTR_TPSZ_CD(+) = BC.CNTR_TPSZ_CD
        AND CNTR_NO(+) = BC.CNTR_NO) VOID_SLT_QTY,
       BV.VSL_CD,
       BV.SKD_VOY_NO,
       BV.SKD_DIR_CD,
       BV.POL_CD,
       BV.POL_CLPT_IND_SEQ,
       BV.VSL_PRE_PST_CD, 
       BV.VSL_SEQ
FROM BK, BKG_CONTAINER BC, BKG_VVD BV
WHERE BK.BKG_NO = BC.BKG_NO
AND BK.BKG_NO = BV.BKG_NO
AND BC.AWK_CGO_FLG = 'Y'
#if (${cntr_tpsz_cd} != '')
AND BC.CNTR_TPSZ_CD IN ( #foreach(${key} in ${cntr_tpsz_cd_list} ) #if($velocityCount != 1) , #end '$key' #end )  -- MULTI
#end
)
,
BP AS(
SELECT BKG_NO, VSL_CD, VOY_NO, DIR_CD, POL, POD, CNTR_NO, SZTP, POSITION,
       SUM (CASE WHEN ACT_SLOT <> '' THEN TO_NUMBER(ACT_SLOT)
                 WHEN x * y * z > 0  THEN (x + 1) * (y + 1) * (z + 1) - s
                 WHEN x * y > 0      THEN (x + 1) * (y + 1) * s - s
                 WHEN x * z > 0      THEN (x + 1) * (z + 1) - 1 + x * (s - 1)
                 WHEN y * z > 0      THEN (y + 1) * (z + 1) - 1 + y * (s - 1)
                 WHEN x + y > 0      THEN (x + y + 1) * s - s
                 WHEN z > 0          THEN z
                 ELSE 0
             END / 2
             ) AS VOID_VOL
FROM(
        SELECT BC.BKG_NO,
               BP.VSL_CD,
               BP.VOY_NO,
               BP.DIR_CD,
               BP.POL_ISO AS POL, 
               BP.POD, 
               BP.ID CNTR_NO, 
               BP.SZTP,
               BP.BAY||'-'||BP.ROWW||'-'||BP.TIER POSITION,
               NVL (OVP_SLOT, 0) + NVL (OVS_SLOT, 0) AS X,
               NVL (OVH_SLOT, 0) AS Y,
               NVL (OVA_SLOT, 0) + NVL (OVF_SLOT, 0) AS Z,
               (2 - MOD (BAY, 2)) AS S,
               ACT_SLOT
        FROM BAY_PLAN BP, BC
        WHERE BC.VSL_CD = BP.VSL_CD
        AND BC.SKD_VOY_NO = BP.VOY_NO
        AND BC.SKD_DIR_CD = BP.DIR_CD
        AND BC.POL_CD = BP.PORT_CD
        AND BC.POL_CLPT_IND_SEQ = BP.CALL_IND
        AND BP.PLAN_TYPE = 'F'
        AND BC.POL_CD = BP.POL_ISO
        AND BC.CNTR_NO = BP.ID
        )
GROUP BY BKG_NO, VSL_CD, VOY_NO, DIR_CD, POL, POD, CNTR_NO, SZTP, POSITION
)
,
RDR AS(
SELECT BKG_NO, VSL_CD, VOY_NO, DIR_CD, POL, POD, CNTR_NO, SZTP, POSITION,
       SUM (CASE WHEN ACT_SLOT <> '' THEN TO_NUMBER(ACT_SLOT)
                 WHEN x * y * z > 0  THEN (x + 1) * (y + 1) * (z + 1) - s
                 WHEN x * y > 0      THEN (x + 1) * (y + 1) * s - s
                 WHEN x * z > 0      THEN (x + 1) * (z + 1) - 1 + x * (s - 1)
                 WHEN y * z > 0      THEN (y + 1) * (z + 1) - 1 + y * (s - 1)
                 WHEN x + y > 0      THEN (x + y + 1) * s - s
                 WHEN z > 0          THEN z
                 ELSE 0
             END / 2
             ) AS VOID_VOL
FROM(
        SELECT BC.BKG_NO,
               BP.VSL_CD,
               BP.VOY_NO,
               BP.DIR_CD,
               rdr.PORT_CD AS POL, 
               BP.POD, 
               BP.ID CNTR_NO, 
               BP.SZTP,
               BP.BAY||'-'||BP.ROWW||'-'||BP.TIER POSITION,
               NVL (OVP_SLOT, 0) + NVL (OVS_SLOT, 0) AS X,
               NVL (OVH_SLOT, 0) AS Y,
               NVL (OVA_SLOT, 0) + NVL (OVF_SLOT, 0) AS Z,
               (2 - MOD (BAY, 2)) AS S,
               ACT_SLOT
        FROM BAY_PLAN BP, RDR_HEADER RDR, BC 
        WHERE BC.VSL_CD = BP.VSL_CD
        AND BC.SKD_VOY_NO = BP.VOY_NO
        AND BC.SKD_DIR_CD = BP.DIR_CD
        AND rdr.PORT_CD = BP.PORT_CD
        AND BP.PLAN_TYPE = 'F'
        AND BC.POL_CD = BP.POL_ISO
        AND BC.CNTR_NO = BP.ID
        AND BC.VSL_CD = rdr.VSL_CD
        AND BC.SKD_VOY_NO = rdr.VOY_NO
        AND BC.SKD_DIR_CD = rdr.DIR_CD
        )
GROUP BY BKG_NO, VSL_CD, VOY_NO, DIR_CD, POL, POD, CNTR_NO, SZTP, POSITION
)
SELECT BK.BKG_RHQ_CD, 
       BK.BKG_OFC_CD,
       BK.BKG_NO,
       BK.BKG_CTRT_TP_CD,
       BK.CTRT_NO,
       BK.POR_CD,
       BK.POL_CD,
       BK.POD_CD,
       BK.DEL_CD,
       BC.CNTR_NO,
       BC.CNTR_TPSZ_CD,
       BC.VOID_SLT_QTY,
       BC.VSL_CD||BC.SKD_VOY_NO||BC.SKD_DIR_CD VVD,
       BP.POL, 
       BP.POD,
       BP.SZTP,
       BP.POSITION,
       BP.VOID_VOL,
       BC.VOID_SLT_QTY - BP.VOID_VOL VOID_DIFF,
-----------------------------------------------------
       RDR.VSL_CD||RDR.VOY_NO||RDR.DIR_CD RDR_VVD,
       RDR.POL RDR_POL, 
       RDR.POD RDR_POD,
       RDR.SZTP RDR_SZTP,
       RDR.POSITION RDR_POSITION,
       RDR.VOID_VOL RDR_VOID_VOL,
       BC.VOID_SLT_QTY - RDR.VOID_VOL RDR_VOID_DIFF,
       '' SEARCH_DATE,
       '' FM_DT,
       '' TO_DT,
       '' SVC_SCP_CD,
       '' T_VVD,
       '' BDR_FLG,
       '' CHARGE_FLG
FROM BK, BC, BP, RDR
WHERE BK.BKG_NO = BC.BKG_NO
AND BK.BKG_NO = BP.BKG_NO
AND BC.CNTR_NO = BP.CNTR_NO
AND BC.VSL_CD = BP.VSL_CD
AND BC.SKD_VOY_NO = BP.VOY_NO
AND BC.SKD_DIR_CD = BP.DIR_CD
AND BP.BKG_NO= RDR.BKG_NO(+)
AND BP.CNTR_NO = RDR.CNTR_NO(+)
AND BP.VSL_CD = RDR.VSL_CD(+)
AND BP.VOY_NO = RDR.VOY_NO(+)
AND BP.DIR_CD = RDR.DIR_CD(+)
ORDER BY BK.BKG_RHQ_CD, BK.BKG_OFC_CD, BK.BKG_NO, BC.CNTR_NO, BC.VSL_PRE_PST_CD, BC.VSL_SEQ			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="bkg_rhq_cd" type="12" value="" out="N"/>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="t_vvd" type="12" value="" out="N"/>
				<param name="bkg_ctrt_tp_cd" type="12" value="" out="N"/>
				<param name="ctrt_no" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
