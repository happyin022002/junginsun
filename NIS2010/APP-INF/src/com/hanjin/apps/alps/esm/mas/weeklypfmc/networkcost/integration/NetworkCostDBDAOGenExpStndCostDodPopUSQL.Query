<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOGenExpStndCostDodPopUSQL">
			<desc><![CDATA[General Expense Cost Modification의 수정 정보를 저장한다.
2015.03.18 컬럼 속성명 변경으로 수정(ADD_EXPN_AMT)
2015.07.03 신규 Lane인 경우 여기에서 넣을 수 있도록 Merge into로 변경]]></desc>
			<sql><![CDATA[
MERGE INTO MAS_STND_GEN_EXPN A1
  USING (
         SELECT  REPLACE(@[cost_yrmon],'-','') AS COST_YRMON
                ,@[trd_cd]                 AS TRD_CD
                ,@[rlane_cd]               AS RLANE_CD
                ,@[dir_cd]                 AS DIR_CD
                ,@[sub_trd_cd]             AS SUB_TRD_CD
                ,@[hul_bnd_cd]             AS HUL_BND_CD
                ,REPLACE(@[add_expn], ',') AS ADD_EXPN_AMT
                ,NVL((SELECT MAX(LANE_SUM_EXPN_AMT) FROM MAS_STND_GEN_EXPN 
                       WHERE COST_YRMON = REPLACE(@[cost_yrmon],'-','') AND TRD_CD = @[trd_cd] AND RLANE_CD = @[rlane_cd]
                    ),0) AS LANE_SUM_EXPN_AMT
                ,NVL((SELECT MAX(STRD_SUM_EXPN_AMT) FROM MAS_STND_GEN_EXPN 
                   WHERE COST_YRMON = REPLACE(@[cost_yrmon],'-','') AND TRD_CD = @[trd_cd] AND SUB_TRD_CD = @[sub_trd_cd]),0) AS STRD_SUM_EXPN_AMT  
                ,@[upd_usr_id] AS UPD_USR_ID             
           FROM DUAL
        ) A2
  ON (    A1.COST_YRMON     = A2.COST_YRMON
      AND A1.TRD_CD         = A2.TRD_CD
      AND A1.RLANE_CD       = A2.RLANE_CD
      AND A1.DIR_CD         = A2.DIR_CD
     )
  WHEN NOT MATCHED THEN
     INSERT(A1.COST_YRMON, A1.TRD_CD, A1.RLANE_CD, A1.DIR_CD, A1.SUB_TRD_CD
           ,A1.HUL_BND_CD, A1.EFF_FM_YRMON, A1.EFF_TO_YRMON, A1.ADD_EXPN_AMT, A1.GEN_EXPN_AMT, A1.GEN_EXPN_RTO
           ,A1.ADD_TTL_EXPN_AMT, A1.LANE_SUM_EXPN_AMT, A1.STRD_SUM_EXPN_AMT
           ,A1.CRE_USR_ID, A1.CRE_DT, A1.UPD_USR_ID, A1.UPD_DT)
     VALUES(A2.COST_YRMON, A2.TRD_CD, A2.RLANE_CD, A2.DIR_CD, A2.SUB_TRD_CD
           ,A2.HUL_BND_CD, A2.COST_YRMON, A2.COST_YRMON, A2.ADD_EXPN_AMT, 0, 0
           ,A2.ADD_EXPN_AMT, A2.LANE_SUM_EXPN_AMT, A2.STRD_SUM_EXPN_AMT
           ,A2.UPD_USR_ID, SYSDATE,A2.UPD_USR_ID, SYSDATE )
  WHEN MATCHED THEN
    UPDATE 
       SET A1.ADD_EXPN_AMT = A2.ADD_EXPN_AMT
    	 , A1.UPD_USR_ID   = A2.UPD_USR_ID
         , A1.UPD_DT       = SYSDATE			]]></sql>
			<params>
				<param name="cost_yrmon" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="sub_trd_cd" type="12" value="" out="N"/>
				<param name="hul_bnd_cd" type="12" value="" out="N"/>
				<param name="add_expn" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
