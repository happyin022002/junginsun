<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="WeeklyCMDBDAOMasEMUCreditListVORSQL">
			<desc><![CDATA[EMU CREDIT Container Type 별, Credit Ratio/Credit Amount, OP/DEL 별로 검색 조회]]></desc>
			<sql><![CDATA[
#if (${f_selclass} == 'RTO' ) 
-- DEL CREDIT RATIO
 SELECT A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
      , @[f_sts_cd] RULE_CD
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D2', A.EQ_REPO_CR_RTO * 100)) TPSZ_D2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D3', A.EQ_REPO_CR_RTO * 100)) TPSZ_D3_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D4', A.EQ_REPO_CR_RTO * 100)) TPSZ_D4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D5', A.EQ_REPO_CR_RTO * 100)) TPSZ_D5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D7', A.EQ_REPO_CR_RTO * 100)) TPSZ_D7_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R2', A.EQ_REPO_CR_RTO * 100)) TPSZ_R2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R5', A.EQ_REPO_CR_RTO * 100)) TPSZ_R5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R9', A.EQ_REPO_CR_RTO * 100)) TPSZ_R9_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F2', A.EQ_REPO_CR_RTO * 100)) TPSZ_F2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F4', A.EQ_REPO_CR_RTO * 100)) TPSZ_F4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F5', A.EQ_REPO_CR_RTO * 100)) TPSZ_F5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O2', A.EQ_REPO_CR_RTO * 100)) TPSZ_O2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O4', A.EQ_REPO_CR_RTO * 100)) TPSZ_O4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O5', A.EQ_REPO_CR_RTO * 100)) TPSZ_O5_RTO
   FROM MAS_CNTR_REPO_SHTG_INFO A
      , MAS_CNTR_REPO_ROUT_ECC B
      , (
         SELECT B.ECC_CD
              , B.RCC_CD
              , B.LCC_CD
              , C.CNT_CD
              , C.CNT_NM
              , D.CONTI_CD
              , D.CONTI_NM
           FROM MDM_LOCATION A
              , MDM_EQ_ORZ_CHT B
              , MDM_COUNTRY C
              , MDM_CONTINENT D
          WHERE A.SCC_CD   = B.SCC_CD
            AND A.CNT_CD   = C.CNT_CD
            AND A.CONTI_CD = D.CONTI_CD
            AND B.ECC_CD LIKE C.CNT_CD || '%'
            AND B.DELT_FLG ='N'
            AND A.DELT_FLG ='N'
        ) C
  WHERE A.COST_YRMON = B.COST_YRMON
    AND A.ECC_CD     = B.ECC_CD
    AND A.ECC_CD     = C.ECC_CD
    AND A.CNTR_TPSZ_CD LIKE B.CNTR_TPSZ_CD||'%'
    AND A.ECC_CD = C.ECC_CD
    AND A.CNTR_ORG_DEST_CD = DECODE(@[f_sts_cd],'DEL', 'D','O')  -- OP/DEL -> RATIO 일때는 DEL 동일
    AND B.DEL_REPO_FLG     = DECODE(@[f_sts_cd],'DEL', 'Y','N')  -- OP/DEL -> RATIO 일때는 DEL 동일

  	AND A.CNTR_TPSZ_CD IN (
  		 #foreach($key IN ${list_cntr_tpsz_cd})
  		  	#if($velocityCount < $list_cntr_tpsz_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  		)

#if (${f_group} == 'ECC') 
    AND A.ECC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CONTI') 
    AND C.CONTI_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CNT') 
    AND C.CNT_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'RCC') 
    AND C.RCC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'LCC') 
    AND C.LCC_CD LIKE @[f_loc_cd]||'%'
#end

    AND A.COST_YRMON = REPLACE(@[f_cost_yrmon],'-','')   -- MONTH
    AND A.EQ_REPO_CR_RTO > 0
  GROUP BY A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
  ORDER BY C.CONTI_NM
      , C.RCC_CD
      , C.CNT_NM
      , C.LCC_CD
      , A.ECC_CD

#elseif (${f_sts_cd} == 'DEL' && ${f_selclass} == 'AMT' ) 
 -- POD CREDIT AMOUNT : DRY
 SELECT A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
      , @[f_sts_cd] RULE_CD
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D2', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_D2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D4', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_D4_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D5', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_D5_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D7', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_D7_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R2', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_R2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R5', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_R5_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R9', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_R9_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F2', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_F2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F4', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_F4_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F5', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_F5_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O2', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_O2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O4', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_O4_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O5', NVL(A.SIM_STVG_UC_AMT, 0))) TPSZ_O5_AMT
      
   FROM MAS_MTY_ECC_UT_COST A
      , MAS_CNTR_REPO_ROUT_ECC B
      , (
         SELECT B.ECC_CD
              , B.RCC_CD
              , B.LCC_CD
              , C.CNT_CD
              , C.CNT_NM
              , D.CONTI_CD
              , D.CONTI_NM
           FROM MDM_LOCATION A
              , MDM_EQ_ORZ_CHT B
              , MDM_COUNTRY C
              , MDM_CONTINENT D
          WHERE A.SCC_CD   = B.SCC_CD
            AND A.CNT_CD   = C.CNT_CD
            AND A.CONTI_CD = D.CONTI_CD
            AND B.ECC_CD LIKE C.CNT_CD || '%'
            AND B.DELT_FLG ='N'
            AND A.DELT_FLG ='N'
        ) C
  WHERE A.COST_YRMON = B.COST_YRMON
    AND A.ECC_CD     = B.ECC_CD
    AND A.CNTR_TPSZ_CD LIKE B.CNTR_TPSZ_CD || '%'
    AND A.ECC_CD           = C.ECC_CD
    AND A.COST_YRMON       = REPLACE(@[f_cost_yrmon],'-','')
    AND A.CNTR_ORG_DEST_CD = 'D'
    AND A.COST_LOC_GRP_CD  = 'E'
    AND B.DEL_REPO_FLG     = 'Y'

#if (${f_group} == 'ECC') 
    AND A.ECC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CONTI') 
    AND C.CONTI_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CNT') 
    AND C.CNT_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'RCC') 
    AND C.RCC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'LCC') 
    AND C.LCC_CD LIKE @[f_loc_cd]||'%'
#end

  	AND A.CNTR_TPSZ_CD IN (
  		 #foreach($key IN ${list_cntr_tpsz_cd})
  		  	#if($velocityCount < $list_cntr_tpsz_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  		)
  
    AND NVL(A.SIM_STVG_UC_AMT, 0) > 0
GROUP BY A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
ORDER BY C.CONTI_NM
      , C.RCC_CD
      , C.CNT_NM
      , C.LCC_CD
      , A.ECC_CD

#elseif (${f_sts_cd} == 'OP' && ${f_selclass} == 'AMT' ) 

 -- OP CREDIT AMOUNT
 SELECT A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
      , @[f_sts_cd] RULE_CD
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D2', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_D2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D4', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_D4_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D5', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_D5_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D7', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_D7_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R2', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_R2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R5', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_R5_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R9', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_R9_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F2', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_F2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F4', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_F4_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F5', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_F5_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O2', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_O2_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O4', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_O4_AMT
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O5', NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0))) TPSZ_O5_AMT
   FROM MAS_MTY_ECC_UT_COST A
      , MAS_CNTR_REPO_ROUT_ECC B
      , (
         SELECT B.ECC_CD
              , B.RCC_CD
              , B.LCC_CD
              , C.CNT_CD
              , C.CNT_NM
              , D.CONTI_CD
              , D.CONTI_NM
           FROM MDM_LOCATION A
              , MDM_EQ_ORZ_CHT B
              , MDM_COUNTRY C
              , MDM_CONTINENT D
          WHERE A.SCC_CD   = B.SCC_CD
            AND A.CNT_CD   = C.CNT_CD
            AND A.CONTI_CD = D.CONTI_CD
            AND B.ECC_CD LIKE C.CNT_CD || '%'
            AND B.DELT_FLG ='N'
            AND A.DELT_FLG ='N'
        ) C
  WHERE A.COST_YRMON = B.COST_YRMON
    AND A.ECC_CD     = B.ECC_CD
    AND A.CNTR_TPSZ_CD LIKE B.CNTR_TPSZ_CD || '%'
    AND A.ECC_CD           = C.ECC_CD
    AND A.COST_YRMON       = REPLACE(@[f_cost_yrmon],'-','')
    AND A.CNTR_ORG_DEST_CD = 'O'
    AND A.COST_LOC_GRP_CD  = 'E'
    AND B.POR_REPO_FLG     = 'Y'

#if (${f_group} == 'ECC') 
    AND A.ECC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CONTI') 
    AND C.CONTI_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CNT') 
    AND C.CNT_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'RCC') 
    AND C.RCC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'LCC') 
    AND C.LCC_CD LIKE @[f_loc_cd]||'%'
#end

  	AND A.CNTR_TPSZ_CD IN (
  		 #foreach($key IN ${list_cntr_tpsz_cd})
  		  	#if($velocityCount < $list_cntr_tpsz_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  		)
  
    AND NVL(A.SIM_STVG_UC_AMT, 0) + NVL(A.SIM_TRSP_UC_AMT, 0) > 0
GROUP BY A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
ORDER BY C.CONTI_NM
      , C.RCC_CD
      , C.CNT_NM
      , C.LCC_CD
      , A.ECC_CD 


#elseif (${f_sts_cd} == 'DEL' && ${f_selclass} == 'TOT' ) 
-- CREDIT RATIO & AMOUNT
 SELECT A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
      , @[f_sts_cd] RULE_CD
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D2', A.EQ_REPO_CR_RTO * 100)) TPSZ_D2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D3', A.EQ_REPO_CR_RTO * 100)) TPSZ_D3_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D4', A.EQ_REPO_CR_RTO * 100)) TPSZ_D4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D5', A.EQ_REPO_CR_RTO * 100)) TPSZ_D5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D7', A.EQ_REPO_CR_RTO * 100)) TPSZ_D7_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R2', A.EQ_REPO_CR_RTO * 100)) TPSZ_R2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R5', A.EQ_REPO_CR_RTO * 100)) TPSZ_R5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R9', A.EQ_REPO_CR_RTO * 100)) TPSZ_R9_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F2', A.EQ_REPO_CR_RTO * 100)) TPSZ_F2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F4', A.EQ_REPO_CR_RTO * 100)) TPSZ_F4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F5', A.EQ_REPO_CR_RTO * 100)) TPSZ_F5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O2', A.EQ_REPO_CR_RTO * 100)) TPSZ_O2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O4', A.EQ_REPO_CR_RTO * 100)) TPSZ_O4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O5', A.EQ_REPO_CR_RTO * 100)) TPSZ_O5_RTO

      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D2', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_D2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D4', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_D4_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D5', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_D5_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D7', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_D7_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'R2', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_R2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'R5', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_R5_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'R9', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_R9_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'F2', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_F2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'F4', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_F4_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'F5', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_F5_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'O2', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_O2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'O4', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_O4_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'O5', NVL(U.SIM_STVG_UC_AMT, 0))) TPSZ_O5_AMT

   FROM MAS_CNTR_REPO_SHTG_INFO A
      , MAS_CNTR_REPO_ROUT_ECC B
      , MAS_MTY_ECC_UT_COST U
      , (
         SELECT B.ECC_CD
              , B.RCC_CD
              , B.LCC_CD
              , C.CNT_CD
              , C.CNT_NM
              , D.CONTI_CD
              , D.CONTI_NM
           FROM MDM_LOCATION A
              , MDM_EQ_ORZ_CHT B
              , MDM_COUNTRY C
              , MDM_CONTINENT D
          WHERE A.SCC_CD   = B.SCC_CD
            AND A.CNT_CD   = C.CNT_CD
            AND A.CONTI_CD = D.CONTI_CD
            AND B.ECC_CD LIKE C.CNT_CD || '%'
            AND B.DELT_FLG ='N'
            AND A.DELT_FLG ='N'
        ) C
  WHERE A.COST_YRMON = B.COST_YRMON
    AND A.ECC_CD     = B.ECC_CD
    AND A.ECC_CD     = C.ECC_CD

    AND A.COST_YRMON = U.COST_YRMON
    AND A.ECC_CD     = U.ECC_CD
    AND A.CNTR_TPSZ_CD     = U.CNTR_TPSZ_CD
    AND A.CNTR_ORG_DEST_CD = U.CNTR_ORG_DEST_CD
    AND U.COST_LOC_GRP_CD  = 'E'

    AND A.CNTR_TPSZ_CD LIKE B.CNTR_TPSZ_CD||'%'
    AND A.ECC_CD = C.ECC_CD
    AND A.CNTR_ORG_DEST_CD = DECODE(@[f_sts_cd],'DEL', 'D','O')  -- OP/DEL -> RATIO 일때는 DEL 동일
    AND B.DEL_REPO_FLG     = DECODE(@[f_sts_cd],'DEL', 'Y','N')  -- OP/DEL -> RATIO 일때는 DEL 동일

  	AND A.CNTR_TPSZ_CD IN (
  		 #foreach($key IN ${list_cntr_tpsz_cd})
  		  	#if($velocityCount < $list_cntr_tpsz_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  		)

#if (${f_group} == 'ECC') 
    AND A.ECC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CONTI') 
    AND C.CONTI_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CNT') 
    AND C.CNT_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'RCC') 
    AND C.RCC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'LCC') 
    AND C.LCC_CD LIKE @[f_loc_cd]||'%'
#end

    AND A.COST_YRMON = REPLACE(@[f_cost_yrmon],'-','')   -- MONTH
    AND A.EQ_REPO_CR_RTO > 0
    AND NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0) > 0
  GROUP BY A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
  ORDER BY C.CONTI_NM
      , C.RCC_CD
      , C.CNT_NM
      , C.LCC_CD
      , A.ECC_CD

#elseif (${f_sts_cd} == 'OP' && ${f_selclass} == 'TOT' ) 
-- CREDIT RATIO & AMOUNT
 SELECT A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
      , @[f_sts_cd] RULE_CD
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D2', A.EQ_REPO_CR_RTO * 100)) TPSZ_D2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D3', A.EQ_REPO_CR_RTO * 100)) TPSZ_D3_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D4', A.EQ_REPO_CR_RTO * 100)) TPSZ_D4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D5', A.EQ_REPO_CR_RTO * 100)) TPSZ_D5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'D7', A.EQ_REPO_CR_RTO * 100)) TPSZ_D7_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R2', A.EQ_REPO_CR_RTO * 100)) TPSZ_R2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R5', A.EQ_REPO_CR_RTO * 100)) TPSZ_R5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'R9', A.EQ_REPO_CR_RTO * 100)) TPSZ_R9_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F2', A.EQ_REPO_CR_RTO * 100)) TPSZ_F2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F4', A.EQ_REPO_CR_RTO * 100)) TPSZ_F4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'F5', A.EQ_REPO_CR_RTO * 100)) TPSZ_F5_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O2', A.EQ_REPO_CR_RTO * 100)) TPSZ_O2_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O4', A.EQ_REPO_CR_RTO * 100)) TPSZ_O4_RTO
      , MAX(DECODE(A.CNTR_TPSZ_CD, 'O5', A.EQ_REPO_CR_RTO * 100)) TPSZ_O5_RTO

      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D2', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_D2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D4', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_D4_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D5', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_D5_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'D7', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_D7_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'R2', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_R2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'R5', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_R5_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'R9', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_R9_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'F2', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_F2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'F4', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_F4_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'F5', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_F5_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'O2', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_O2_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'O4', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_O4_AMT
      , MAX(DECODE(U.CNTR_TPSZ_CD, 'O5', NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0))) TPSZ_O5_AMT

   FROM MAS_CNTR_REPO_SHTG_INFO A
      , MAS_CNTR_REPO_ROUT_ECC B
      , MAS_MTY_ECC_UT_COST U
      , (
         SELECT B.ECC_CD
              , B.RCC_CD
              , B.LCC_CD
              , C.CNT_CD
              , C.CNT_NM
              , D.CONTI_CD
              , D.CONTI_NM
           FROM MDM_LOCATION A
              , MDM_EQ_ORZ_CHT B
              , MDM_COUNTRY C
              , MDM_CONTINENT D
          WHERE A.SCC_CD   = B.SCC_CD
            AND A.CNT_CD   = C.CNT_CD
            AND A.CONTI_CD = D.CONTI_CD
            AND B.ECC_CD LIKE C.CNT_CD || '%'
            AND B.DELT_FLG ='N'
            AND A.DELT_FLG ='N'
        ) C
  WHERE A.COST_YRMON = B.COST_YRMON
    AND A.ECC_CD     = B.ECC_CD
    AND A.ECC_CD     = C.ECC_CD

    AND A.COST_YRMON = U.COST_YRMON
    AND A.ECC_CD     = U.ECC_CD
    AND A.CNTR_TPSZ_CD     = U.CNTR_TPSZ_CD
    AND A.CNTR_ORG_DEST_CD = U.CNTR_ORG_DEST_CD
    AND U.COST_LOC_GRP_CD  = 'E'

    AND A.CNTR_TPSZ_CD LIKE B.CNTR_TPSZ_CD||'%'
    AND A.ECC_CD = C.ECC_CD
    AND A.CNTR_ORG_DEST_CD = DECODE(@[f_sts_cd],'DEL', 'D','O')  -- OP/DEL -> RATIO 일때는 DEL 동일
    AND B.DEL_REPO_FLG     = DECODE(@[f_sts_cd],'DEL', 'Y','N')  -- OP/DEL -> RATIO 일때는 DEL 동일

  	AND A.CNTR_TPSZ_CD IN (
  		 #foreach($key IN ${list_cntr_tpsz_cd})
  		  	#if($velocityCount < $list_cntr_tpsz_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  		)

#if (${f_group} == 'ECC') 
    AND A.ECC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CONTI') 
    AND C.CONTI_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'CNT') 
    AND C.CNT_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'RCC') 
    AND C.RCC_CD LIKE @[f_loc_cd]||'%'
#elseif (${f_group} == 'LCC') 
    AND C.LCC_CD LIKE @[f_loc_cd]||'%'
#end

    AND A.COST_YRMON = REPLACE(@[f_cost_yrmon],'-','')   -- MONTH
    AND A.EQ_REPO_CR_RTO > 0
    AND NVL(U.SIM_STVG_UC_AMT, 0) + NVL(U.SIM_TRSP_UC_AMT, 0) > 0
  GROUP BY A.COST_YRMON
      , C.CONTI_NM
      , C.CNT_NM
      , A.ECC_CD
      , C.RCC_CD
      , C.LCC_CD
  ORDER BY C.CONTI_NM
      , C.RCC_CD
      , C.CNT_NM
      , C.LCC_CD
      , A.ECC_CD

#end			]]></sql>
			<params>
				<param name="f_sts_cd" type="12" value="" out="N"/>
				<param name="f_loc_cd" type="12" value="" out="N"/>
				<param name="f_cost_yrmon" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
