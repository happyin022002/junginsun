<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PerformanceReportDBDAOSearchDPCSTurnTimeList1RSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
#if (${period} == 'OTH')
SELECT BKG_NO,
       SR_AMD_TD,
       VVD_CD,
       BKG_OFC_CD,
       POL_CD,
       POD_CD,
       VIA,
       CM,
       HBL,
       AMD,
       ADD_VAL,
       RGN,
       ----
       '00' AS ORIGINAL_ACTUAL_DD, 	
       '00' AS ORIGINAL_ACTUAL_HH,   
       '00' AS ORIGINAL_ACTUAL_MI,   
       '00' AS ORIGINAL_ACTUAL_SS,   

       '00' AS ORIGINAL_IDLE_DD,    	
       '00' AS ORIGINAL_IDLE_HH,    
       '00' AS ORIGINAL_IDLE_MI,  
       '00' AS ORIGINAL_IDLE_SS,  

       '00' AS ORIGINAL_TOTAL_DD,    
       '00' AS ORIGINAL_TOTAL_HH,  
       '00' AS ORIGINAL_TOTAL_MI,   
       '00' AS ORIGINAL_TOTAL_SS,   
       ----
       '00' AS AMEND_ACTUAL_DD,   
       '00' AS AMEND_ACTUAL_HH,   
       '00' AS AMEND_ACTUAL_MI,  
       '00' AS AMEND_ACTUAL_SS,    

       '00' AS AMEND_IDLE_DD,    
       '00' AS AMEND_IDLE_HH,    
       '00' AS AMEND_IDLE_MI,    
       '00' AS AMEND_IDLE_SS,    

       '00' AS AMEND_TOTAL_DD,   
       '00' AS AMEND_TOTAL_HH,   
       '00' AS AMEND_TOTAL_MI,    
       '00' AS AMEND_TOTAL_SS,    
       ----
       '00' AS TOTAL_ACTUAL_DD,    
       '00' AS TOTAL_ACTUAL_HH,    
       '00' AS TOTAL_ACTUAL_MI,   
       '00' AS TOTAL_ACTUAL_SS,   

       '00' AS TOTAL_IDLE_DD,   
       '00' AS TOTAL_IDLE_HH,   
       '00' AS TOTAL_IDLE_MI,    
       '00' AS TOTAL_IDLE_SS,   

       '00' AS TOTAL_TOTAL_DD,    
       '00' AS TOTAL_TOTAL_HH,   
       '00' AS TOTAL_TOTAL_MI,    
       '00' AS TOTAL_TOTAL_SS,    
       ----
       '' AS SR_TRANS,   
       '' AS SI_REC,   

       '00' AS SI_ELAPSED_DD,    
       '00' AS SI_ELAPSED_HH,    
       '00' AS SI_ELAPSED_MI,   
       '00' AS SI_ELAPSED_SS,   
       ----
       '' AS IS_START, 
       '' AS IC_END,   

       '00' AS INPUT_ELAPSED_DD,   
       '00' AS INPUT_ELAPSED_HH,   
       '00' AS INPUT_ELAPSED_MI,    
       '00' AS INPUT_ELAPSED_SS,   
       ----
       '' AS RS_START,   
       '' AS RC_END,   

       '00' AS RATE_ELAPSED_DD, 
       '00' AS RATE_ELAPSED_HH, 
       '00' AS RATE_ELAPSED_MI, 
       '00' AS RATE_ELAPSED_SS, 
       ----
       '' AS QS_START,   
       '' AS QC_END,  

       '00' AS QA_ELAPSED_DD,  
       '00' AS QA_ELAPSED_HH,  
       '00' AS QA_ELAPSED_MI,   
       '00' AS QA_ELAPSED_SS,  
       ----
       SR_AMD_TP_CD,    -- SR_AMD_TP_CD
       SR_NO,    -- SR_NO
       PND_FLG,    -- PND_FLG
       SR_KND_CD,    -- SR_KND_CD
       SR_CRNT_INFO_CD,    -- SR_CRNT_INFO_CD
       BL_DOC_INP_FLG,    -- BL_DOC_INP_FLG
       BL_RT_FLG,    -- BL_RT_FLG
       BL_AUD_FLG,    -- BL_AUD_FLG
       BL_DRFT_FAX_OUT_FLG,    -- BL_DRFT_FAX_OUT_FLG
       SR_WRK_STS_CD    -- SR_WRK_STS_CD

  FROM
       (SELECT BKG.BKG_NO,    -- BKG NO
               SCR.SR_CRNT_STS_CD,    -- STS
               (SELECT INTG_CD_VAL_DESC
                  FROM COM_INTG_CD_DTL
                 WHERE INTG_CD_ID = 'CD01577'
                   AND INTG_CD_VAL_CTNT = DECODE(SCR.SR_AMD_TP_CD, 'N', 'O', SCR.SR_AMD_TP_CD)
                   AND ROWNUM = 1) AS SR_AMD_TD,    -- SR KIND
               BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS VVD_CD,    -- T.VVD
               BKG.BKG_OFC_CD,    -- BKG OFC.
               BKG.POL_CD,    -- POL
               BKG.POD_CD,    -- POD
               (SELECT INTG_CD_VAL_DP_DESC
                  FROM COM_INTG_CD_DTL
                 WHERE INTG_CD_ID = 'CD01581'
                   AND INTG_CD_VAL_CTNT = SCR.SR_KND_CD
                   AND ROWNUM = 1) AS VIA,    
               (SELECT COUNT(*)
                  FROM BKG_CNTR_MF_DESC
                 WHERE BKG_NO = BKG.BKG_NO) AS CM,  
               (SELECT COUNT(*)
                  FROM BKG_HBL
                 WHERE BKG_NO = BKG.BKG_NO) AS HBL,  
               (SELECT COUNT(*)
                  FROM BKG_SR_CRNT_RQST
                 WHERE BKG_NO = BKG.BKG_NO
                   AND SR_AMD_TP_CD = 'A') AS AMD,   
               (SELECT COUNT(*)
                  FROM BKG_SR_CRNT_RQST
                 WHERE BKG_NO = BKG.BKG_NO
                   AND SR_AMD_TP_CD = 'T') AS ADD_VAL,    
               NVL((SELECT INTG_CD_VAL_DESC
                      FROM COM_INTG_CD_DTL
                     WHERE INTG_CD_ID = 'CD01603'
                       AND INTG_CD_VAL_CTNT = (SELECT DISTINCT DECODE(RGN_OFC_CD, 'E', 'DE', 'J', 'JP', 'K', 'KR', 'N', 'US', 'S', 'PK', 'C', 'CN', 'XX')
                                                 FROM BKG_EML_ACCT_STUP
                                                WHERE BKG_OFC_CD = BKG.BKG_OFC_CD
                                                  AND ROWNUM = 1)),
                   '('||BKG.BKG_OFC_CD||')') AS RGN,  
               (SELECT SUM(SR_PROC_HRS)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = SCR.BKG_NO
                   AND SR_PROC_HRS is not null ) AS TOTAL_ACTUAL,    
               ( SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = SCR.BKG_NO
                   and SR_STS_CD <>  'XX' )
                    - (SELECT MIN(SR_PROC_UPD_DT)
                     FROM BKG_SR_HIS
                     WHERE BKG_NO = SCR.BKG_NO
                       AND SR_STS_CD ='ST'
                       )  AS TOTAL,    -- TOTAL
               (SELECT SUM(SR_PROC_HRS)
                  FROM BKG_SR_HIS H
                 WHERE BKG_NO = SCR.BKG_NO
                   AND SR_NO  =  (select  sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD = 'O' and bkg_no = bkg.bkg_no and rownum =1  )) AS ORIGINAL_ACTUAL, 
                   
               ( SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS H
                 WHERE BKG_NO = SCR.BKG_NO
                   and SR_STS_CD <>  'XX'
                   AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))
                    - 
                   (SELECT MIN(SR_PROC_UPD_DT)
                     FROM BKG_SR_HIS H
                     WHERE BKG_NO = SCR.BKG_NO
                       AND SR_STS_CD ='ST'
                       AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )) AS ORIGINAL_TOTAL,       
                (SELECT SUM(SR_PROC_HRS)
                  FROM BKG_SR_HIS H
                 WHERE BKG_NO = SCR.BKG_NO
                   AND SR_NO  in  (select  distinct sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD <> 'O' and bkg_no = bkg.bkg_no   )) AS AMEND_ACTUAL,   
               (SELECT MAX(ST_DT)
                 FROM BKG_SR_HIS H 
                WHERE BKG_NO = SCR.BKG_NO
                  AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))
                    - (SELECT MIN(SR_PROC_UPD_DT)
                       FROM BKG_SR_HIS H
                       WHERE BKG_NO = SCR.BKG_NO
                       AND SR_STS_CD ='ST'
                       AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )
                       ) AS AMEND_TOTAL,  
               (SELECT MIN(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE SR_KND_CD = SCR.SR_KND_CD
                   AND SR_NO = SCR.SR_NO
                   AND BKG_NO = SCR.BKG_NO
                   AND SR_STS_CD = 'ST') AS SR_TRANS,  
               CASE
                   WHEN TRIM(SCR.SR_KND_CD) = 'F' THEN
                       (SELECT SR_TRNS_DT
                          FROM BKG_SR_FAX
                         WHERE SR_NO = SCR.SR_NO
                           AND SR_KND_CD = 'F')
                   ELSE
                       (SELECT MIN(SR_PROC_UPD_DT)
                          FROM BKG_SR_HIS
                         WHERE SR_KND_CD = SCR.SR_KND_CD
                           AND SR_NO = SCR.SR_NO
                           AND BKG_NO = SCR.BKG_NO
                           AND SR_STS_CD = 'ST')
               END AS SI_REC,   
               '' AS IS_START,  
               '' AS IC_END,   
               '' AS RS_START,   
               '' AS RC_END,  
               '' AS QS_START,   
               '' AS QC_END,  
               SCR.SR_AMD_TP_CD,
               SCR.SR_NO,
               SCR.PND_FLG,
               SCR.SR_KND_CD,
               SCR.SR_CRNT_INFO_CD,
               SCR.BL_DOC_INP_FLG,
               SCR.BL_RT_FLG,
               SCR.BL_AUD_FLG,
               SCR.BL_DRFT_FAX_OUT_FLG,
               SCR.SR_WRK_STS_CD

          FROM BKG_SR_CRNT_RQST SCR,
#if (${bkg_no} == '' && ${rgn_cd_d} != '')
               BKG_EML_ACCT_STUP EAS,
#end
               BKG_BOOKING BKG

         WHERE 1 = 1
#if (${bkg_no} == '')
     #if (${from_dt} != '' && ${to_dt} != '')
          #if (${period} == 'WRK')
           /*    Working    */
           AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                     AND TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999
           AND (SCR.BL_DOC_INP_FLG  <> 'Y' OR SCR.BL_RT_FLG <> 'Y' OR SCR.BL_AUD_FLG <> 'Y')
          #elseif (${period} == 'CPT')
           /*    Complete    */
           AND SCR.BL_AUD_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999
           AND SCR.BL_DOC_INP_FLG  ='Y'
           AND SCR.BL_RT_FLG ='Y'
           AND SCR.BL_AUD_FLG ='Y'
           #elseif (${period} == 'OTH')
				   /*	 Other		*/
                   AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999
                   AND (SCR.BL_DOC_INP_FLG  = 'N' AND SCR.BL_RT_FLG = 'N' AND SCR.BL_AUD_FLG = 'N')
          #end
     #end
     #if (${dpcs_ofc_cd} != '')
           AND SCR.DPCS_OFC_CD = @[dpcs_ofc_cd]
     #end
     #if (${vvd_cd} != '')
           AND BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD LIKE @[vvd_cd]||'%'
     #end
     #if (${pol_cd} != '')
           AND BKG.POL_CD LIKE @[pol_cd]||'%'
     #end
     #if (${pod_cd} != '')
           AND BKG.POD_CD LIKE @[pod_cd]||'%'
     #end
     #if (${bkg_ofc_cd_d} != '')
           AND BKG.BKG_OFC_CD IN (${bkg_ofc_cd_d})
     #end
     #if (${rgn_cd_d} != '')
           AND EAS.BKG_OFC_CD = BKG.BKG_OFC_CD
           AND EAS.RGN_OFC_CD IN (${rgn_cd_d})
     #end
#else
           AND SCR.BKG_NO LIKE @[bkg_no]||'%'
#end
           AND SCR.SR_CRNT_STS_CD <> 'XX'
           AND BKG.BKG_NO = SCR.BKG_NO
           AND BKG.BKG_STS_CD <> 'X'

         GROUP BY BKG.BKG_NO,
                  BKG.BKG_OFC_CD,
                  BKG.POD_CD,
                  BKG.POL_CD,
                  BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD,
                  SCR.BKG_NO,
                  SCR.BL_AUD_HRS,
                  SCR.BL_DOC_INP_HRS,
                  SCR.BL_RT_HRS,
                  SCR.PND_HRS,
                  SCR.RTN_HRS,
                  SCR.RTN_TO_RTN_HRS,
                  SCR.SR_AMD_TP_CD,
                  SCR.SR_CRNT_STS_CD,
                  SCR.SR_KND_CD,
                  SCR.SR_NO,
                  SCR.PND_FLG,
                  SCR.SR_CRNT_INFO_CD,
                  SCR.BL_DOC_INP_FLG,
                  SCR.BL_RT_FLG,
                  SCR.BL_AUD_FLG,
                  SCR.BL_DRFT_FAX_OUT_FLG,
                  SCR.SR_WRK_STS_CD)

 ORDER BY BKG_NO
#else
SELECT BKG_NO,
       SR_AMD_TD,
       VVD_CD,
       BKG_OFC_CD,
       POL_CD,
       POD_CD,
       VIA,
       CM,
       HBL,
       AMD,
       ADD_VAL,
       RGN,
       ----
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'DD'), '00') AS ORIGINAL_ACTUAL_DD, 	
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'HH'), '00') AS ORIGINAL_ACTUAL_HH,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'MM'), '00') AS ORIGINAL_ACTUAL_MI,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_ACTUAL, 'SS'), '00') AS ORIGINAL_ACTUAL_SS,   

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'DD'), '00') AS ORIGINAL_IDLE_DD,    	
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'HH'), '00') AS ORIGINAL_IDLE_HH,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'MM'), '00') AS ORIGINAL_IDLE_MI,  
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL - ORIGINAL_ACTUAL, 'SS'), '00') AS ORIGINAL_IDLE_SS,  

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'DD'), '00') AS ORIGINAL_TOTAL_DD,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'HH'), '00') AS ORIGINAL_TOTAL_HH,  
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'MM'), '00') AS ORIGINAL_TOTAL_MI,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(ORIGINAL_TOTAL, 'SS'), '00') AS ORIGINAL_TOTAL_SS,   
       ----
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'DD'), '00') AS AMEND_ACTUAL_DD,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'HH'), '00') AS AMEND_ACTUAL_HH,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'MM'), '00') AS AMEND_ACTUAL_MI,  
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_ACTUAL, 'SS'), '00') AS AMEND_ACTUAL_SS,    

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'DD'), '00') AS AMEND_IDLE_DD,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'HH'), '00') AS AMEND_IDLE_HH,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'MM'), '00') AS AMEND_IDLE_MI,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL - AMEND_ACTUAL, 'SS'), '00') AS AMEND_IDLE_SS,    

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'DD'), '00') AS AMEND_TOTAL_DD,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'HH'), '00') AS AMEND_TOTAL_HH,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'MM'), '00') AS AMEND_TOTAL_MI,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(AMEND_TOTAL, 'SS'), '00') AS AMEND_TOTAL_SS,    
       ----
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'DD'), '00') AS TOTAL_ACTUAL_DD,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'HH'), '00') AS TOTAL_ACTUAL_HH,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'MM'), '00') AS TOTAL_ACTUAL_MI,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL_ACTUAL, 'SS'), '00') AS TOTAL_ACTUAL_SS,   

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'DD'), '00') AS TOTAL_IDLE_DD,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'HH'), '00') AS TOTAL_IDLE_HH,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'MM'), '00') AS TOTAL_IDLE_MI,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL - TOTAL_ACTUAL, 'SS'), '00') AS TOTAL_IDLE_SS,   

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'DD'), '00') AS TOTAL_TOTAL_DD,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'HH'), '00') AS TOTAL_TOTAL_HH,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'MM'), '00') AS TOTAL_TOTAL_MI,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(TOTAL, 'SS'), '00') AS TOTAL_TOTAL_SS,    
       ----
       TO_CHAR(SR_TRANS, 'MM-DD HH24:MI:SS') AS SR_TRANS,   
       TO_CHAR(SI_REC, 'MM-DD HH24:MI:SS') AS SI_REC,   

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'DD'), '00') AS SI_ELAPSED_DD,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'HH'), '00') AS SI_ELAPSED_HH,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'MM'), '00') AS SI_ELAPSED_MI,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(SI_REC - SR_TRANS, 0), 'SS'), '00') AS SI_ELAPSED_SS,   
       ----
       TO_CHAR(IS_START, 'MM-DD HH24:MI:SS') AS IS_START, 
       TO_CHAR(IC_END, 'MM-DD HH24:MI:SS') AS IC_END,   

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'DD'), '00') AS INPUT_ELAPSED_DD,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'HH'), '00') AS INPUT_ELAPSED_HH,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'MM'), '00') AS INPUT_ELAPSED_MI,    
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(IC_END - IS_START, 0), 'SS'), '00') AS INPUT_ELAPSED_SS,   
       ----
       TO_CHAR(RS_START, 'MM-DD HH24:MI:SS') AS RS_START,   
       TO_CHAR(RC_END, 'MM-DD HH24:MI:SS') AS RC_END,   

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'DD'), '00') AS RATE_ELAPSED_DD, 
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'HH'), '00') AS RATE_ELAPSED_HH, 
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'MM'), '00') AS RATE_ELAPSED_MI, 
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(RC_END - RS_START, 0), 'SS'), '00') AS RATE_ELAPSED_SS, 
       ----
       TO_CHAR(QS_START, 'MM-DD HH24:MI:SS') AS QS_START,   
       TO_CHAR(QC_END, 'MM-DD HH24:MI:SS') AS QC_END,  

       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'DD'), '00') AS QA_ELAPSED_DD,  
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'HH'), '00') AS QA_ELAPSED_HH,  
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'MM'), '00') AS QA_ELAPSED_MI,   
       NVL(BKG_GET_CONV_INTVAL_TIME_FNC(NVL(QC_END - QS_START, 0), 'SS'), '00') AS QA_ELAPSED_SS,  
       ----
       SR_AMD_TP_CD,    -- SR_AMD_TP_CD
       SR_NO,    -- SR_NO
       PND_FLG,    -- PND_FLG
       SR_KND_CD,    -- SR_KND_CD
       SR_CRNT_INFO_CD,    -- SR_CRNT_INFO_CD
       BL_DOC_INP_FLG,    -- BL_DOC_INP_FLG
       BL_RT_FLG,    -- BL_RT_FLG
       BL_AUD_FLG,    -- BL_AUD_FLG
       BL_DRFT_FAX_OUT_FLG,    -- BL_DRFT_FAX_OUT_FLG
       SR_WRK_STS_CD    -- SR_WRK_STS_CD

  FROM
       (SELECT BKG.BKG_NO,    -- BKG NO
               SCR.SR_CRNT_STS_CD,    -- STS
               (SELECT INTG_CD_VAL_DESC
                  FROM COM_INTG_CD_DTL
                 WHERE INTG_CD_ID = 'CD01577'
                   AND INTG_CD_VAL_CTNT = DECODE(SCR.SR_AMD_TP_CD, 'N', 'O', SCR.SR_AMD_TP_CD)
                   AND ROWNUM = 1) AS SR_AMD_TD,    -- SR KIND
               BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD AS VVD_CD,    -- T.VVD
               BKG.BKG_OFC_CD,    -- BKG OFC.
               BKG.POL_CD,    -- POL
               BKG.POD_CD,    -- POD
               (SELECT INTG_CD_VAL_DP_DESC
                  FROM COM_INTG_CD_DTL
                 WHERE INTG_CD_ID = 'CD01581'
                   AND INTG_CD_VAL_CTNT = SCR.SR_KND_CD
                   AND ROWNUM = 1) AS VIA,    
               (SELECT COUNT(*)
                  FROM BKG_CNTR_MF_DESC
                 WHERE BKG_NO = BKG.BKG_NO) AS CM,  
               (SELECT COUNT(*)
                  FROM BKG_HBL
                 WHERE BKG_NO = BKG.BKG_NO) AS HBL,  
               (SELECT COUNT(*)
                  FROM BKG_SR_CRNT_RQST
                 WHERE BKG_NO = BKG.BKG_NO
                   AND SR_AMD_TP_CD = 'A') AS AMD,   
               (SELECT COUNT(*)
                  FROM BKG_SR_CRNT_RQST
                 WHERE BKG_NO = BKG.BKG_NO
                   AND SR_AMD_TP_CD = 'T') AS ADD_VAL,    
               NVL((SELECT INTG_CD_VAL_DESC
                      FROM COM_INTG_CD_DTL
                     WHERE INTG_CD_ID = 'CD01603'
                       AND INTG_CD_VAL_CTNT = (SELECT DISTINCT DECODE(RGN_OFC_CD, 'E', 'DE', 'J', 'JP', 'K', 'KR', 'N', 'US', 'S', 'PK', 'C', 'CN', 'XX')
                                                 FROM BKG_EML_ACCT_STUP
                                                WHERE BKG_OFC_CD = BKG.BKG_OFC_CD
                                                  AND ROWNUM = 1)),
                   '('||BKG.BKG_OFC_CD||')') AS RGN,  
               (SELECT SUM(SR_PROC_HRS)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = SCR.BKG_NO
                   AND SR_PROC_HRS is not null ) AS TOTAL_ACTUAL,    
               ( SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = SCR.BKG_NO
                   and SR_STS_CD <>  'XX' )
                    - (SELECT MIN(SR_PROC_UPD_DT)
                     FROM BKG_SR_HIS
                     WHERE BKG_NO = SCR.BKG_NO
                       AND SR_STS_CD ='ST'
                       )  AS TOTAL,    -- TOTAL
               (SELECT SUM(SR_PROC_HRS)
                  FROM BKG_SR_HIS H
                 WHERE BKG_NO = SCR.BKG_NO
                   AND SR_NO  =  (select  sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD = 'O' and bkg_no = bkg.bkg_no and rownum =1  )) AS ORIGINAL_ACTUAL, 
                   
               ( SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS H
                 WHERE BKG_NO = SCR.BKG_NO
                   and SR_STS_CD <>  'XX'
                   AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))
                    - 
                   (SELECT MIN(SR_PROC_UPD_DT)
                     FROM BKG_SR_HIS H
                     WHERE BKG_NO = SCR.BKG_NO
                       AND SR_STS_CD ='ST'
                       AND  EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )) AS ORIGINAL_TOTAL,       
                (SELECT SUM(SR_PROC_HRS)
                  FROM BKG_SR_HIS H
                 WHERE BKG_NO = SCR.BKG_NO
                   AND SR_NO  in  (select  distinct sr_no from BKG_SR_CRNT_RQST where SR_AMD_TP_CD <> 'O' and bkg_no = bkg.bkg_no   )) AS AMEND_ACTUAL,   
               (SELECT MAX(ST_DT)
                 FROM BKG_SR_HIS H 
                WHERE BKG_NO = SCR.BKG_NO
                  AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO ))
                    - (SELECT MIN(SR_PROC_UPD_DT)
                       FROM BKG_SR_HIS H
                       WHERE BKG_NO = SCR.BKG_NO
                       AND SR_STS_CD ='ST'
                       AND  NOT EXISTS ( SELECT 1 FROM BKG_SR_CRNT_RQST  WHERE SR_AMD_TP_CD =  'O'  AND bkg_no = bkg.bkg_no  AND H.SR_NO = SR_NO AND H.BKG_NO = BKG_NO )
                       ) AS AMEND_TOTAL,  
               (SELECT MIN(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE SR_KND_CD = SCR.SR_KND_CD
                   AND SR_NO = SCR.SR_NO
                   AND BKG_NO = SCR.BKG_NO
                   AND SR_STS_CD = 'ST') AS SR_TRANS,  
               CASE
                   WHEN TRIM(SCR.SR_KND_CD) = 'F' THEN
                       (SELECT SR_TRNS_DT
                          FROM BKG_SR_FAX
                         WHERE SR_NO = SCR.SR_NO
                           AND SR_KND_CD = 'F')
                   ELSE
                       (SELECT MIN(SR_PROC_UPD_DT)
                          FROM BKG_SR_HIS
                         WHERE SR_KND_CD = SCR.SR_KND_CD
                           AND SR_NO = SCR.SR_NO
                           AND BKG_NO = SCR.BKG_NO
                           AND SR_STS_CD = 'ST')
               END AS SI_REC,   
               (SELECT MIN(SR_PROC_UPD_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'ID') AS IS_START,  
               (SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'ID') AS IC_END,   
               (SELECT MIN(SR_PROC_UPD_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'RD') AS RS_START,   
                (SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'RD') AS RC_END,  
               (SELECT MIN(SR_PROC_UPD_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'AD') AS QS_START,   
                (SELECT MAX(ST_DT)
                  FROM BKG_SR_HIS
                 WHERE BKG_NO = BKG.BKG_NO and SR_STS_CD = 'AD') AS QC_END,  
               SCR.SR_AMD_TP_CD,
               SCR.SR_NO,
               SCR.PND_FLG,
               SCR.SR_KND_CD,
               SCR.SR_CRNT_INFO_CD,
               SCR.BL_DOC_INP_FLG,
               SCR.BL_RT_FLG,
               SCR.BL_AUD_FLG,
               SCR.BL_DRFT_FAX_OUT_FLG,
               SCR.SR_WRK_STS_CD

          FROM BKG_SR_CRNT_RQST SCR,
#if (${bkg_no} == '' && ${rgn_cd_d} != '')
               BKG_EML_ACCT_STUP EAS,
#end
               BKG_BOOKING BKG

         WHERE 1 = 1
#if (${bkg_no} == '')
     #if (${from_dt} != '' && ${to_dt} != '')
          #if (${period} == 'WRK')
           /*    Working    */
           AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                     AND TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999
           AND (SCR.BL_DOC_INP_FLG  <> 'Y' OR SCR.BL_RT_FLG <> 'Y' OR SCR.BL_AUD_FLG <> 'Y')
          #elseif (${period} == 'CPT')
           /*    Complete    */
           AND SCR.BL_AUD_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999
           AND SCR.BL_DOC_INP_FLG  ='Y'
           AND SCR.BL_RT_FLG ='Y'
           AND SCR.BL_AUD_FLG ='Y'
           #elseif (${period} == 'OTH')
				   /*	 Other		*/
                   AND SCR.SR_WRK_STS_DT BETWEEN TO_DATE(@[from_dt], 'YYYY-MM-DD')
                                         AND TO_DATE(@[to_dt], 'YYYY-MM-DD') +  0.99999
                   AND (SCR.BL_DOC_INP_FLG  = 'N' AND SCR.BL_RT_FLG = 'N' AND SCR.BL_AUD_FLG = 'N')
          #end
     #end
     #if (${dpcs_ofc_cd} != '')
           AND SCR.DPCS_OFC_CD = @[dpcs_ofc_cd]
     #end
     #if (${vvd_cd} != '')
           AND BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD LIKE @[vvd_cd]||'%'
     #end
     #if (${pol_cd} != '')
           AND BKG.POL_CD LIKE @[pol_cd]||'%'
     #end
     #if (${pod_cd} != '')
           AND BKG.POD_CD LIKE @[pod_cd]||'%'
     #end
     #if (${bkg_ofc_cd_d} != '')
           AND BKG.BKG_OFC_CD IN (${bkg_ofc_cd_d})
     #end
     #if (${rgn_cd_d} != '')
           AND EAS.BKG_OFC_CD = BKG.BKG_OFC_CD
           AND EAS.RGN_OFC_CD IN (${rgn_cd_d})
     #end
#else
           AND SCR.BKG_NO LIKE @[bkg_no]||'%'
#end
           AND SCR.SR_CRNT_STS_CD <> 'XX'
           AND BKG.BKG_NO = SCR.BKG_NO
           AND BKG.BKG_STS_CD <> 'X'

         GROUP BY BKG.BKG_NO,
                  BKG.BKG_OFC_CD,
                  BKG.POD_CD,
                  BKG.POL_CD,
                  BKG.VSL_CD||BKG.SKD_VOY_NO||BKG.SKD_DIR_CD,
                  SCR.BKG_NO,
                  SCR.BL_AUD_HRS,
                  SCR.BL_DOC_INP_HRS,
                  SCR.BL_RT_HRS,
                  SCR.PND_HRS,
                  SCR.RTN_HRS,
                  SCR.RTN_TO_RTN_HRS,
                  SCR.SR_AMD_TP_CD,
                  SCR.SR_CRNT_STS_CD,
                  SCR.SR_KND_CD,
                  SCR.SR_NO,
                  SCR.PND_FLG,
                  SCR.SR_CRNT_INFO_CD,
                  SCR.BL_DOC_INP_FLG,
                  SCR.BL_RT_FLG,
                  SCR.BL_AUD_FLG,
                  SCR.BL_DRFT_FAX_OUT_FLG,
                  SCR.SR_WRK_STS_CD)

 ORDER BY BKG_NO
#end			]]></sql>
			<params>
				<param name="from_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="dpcs_ofc_cd" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
