<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BasicDataDBDAOCreateAddBasicCmcbForIasSectorCSQL">
			<desc><![CDATA[[Add Creation 하는 노선의 Pair에 대하여 Basic CMCB]을 생성합니다.]]></desc>
			<sql><![CDATA[
INSERT INTO SQM_SCTR_PAIR_COST
           (BSE_TP_CD
           ,BSE_YR
           ,BSE_QTR_CD
           ,RLANE_CD
           ,DIR_CD
           ,POL_CD
           ,POD_CD
           ,TRD_CD
           ,SUB_TRD_CD
           ,GID_PA_CM_UC_AMT
           ,GID_RA_CM_UC_AMT
           ,PA_CM_UC_AMT
           ,RA_CM_UC_AMT
           ,ADD_FLG
           ,CRE_USR_ID
           ,CRE_DT
           ,UPD_USR_ID
           ,UPD_DT
           )
SELECT 
       A1.BSE_TP_CD
      ,A1.BSE_YR
      ,A1.BSE_QTR_CD
      ,A1.RLANE_CD
      ,A1.DIR_CD
      ,A1.POL_CD
      ,A1.POD_CD
      ,A1.TRD_CD
      ,A1.SUB_TRD_CD
      ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.PA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS GID_PA_CM_UC_AMT
      ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.RA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS GID_RA_CM_UC_AMT
      ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.PA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS PA_CM_UC_AMT
      ,ROUND(DECODE(SUM(NVL(A2.LOD_QTY,0)), 0, 0, SUM(NVL(A2.RA_CM_UC_AMT,0))/SUM(NVL(A2.LOD_QTY,0)))) AS RA_CM_UC_AMT
      ,'Y' AS ADD_FLG
      ,@[cre_usr_id] AS CRE_USR_ID
      ,SYSDATE AS CRE_DT
      ,@[upd_usr_id] AS UPD_USR_ID
      ,SYSDATE AS UPD_DT
  FROM (
        SELECT DISTINCT 
               BSE_TP_CD
              ,BSE_YR
              ,BSE_QTR_CD
              ,RLANE_CD
              ,DIR_CD
              ,POL_CD
              ,POD_CD
              ,TRD_CD
              ,SUB_TRD_CD
          FROM SQM_SCTR_PAIR_MGMT
         WHERE 1=1
         AND BSE_TP_CD  = @[bse_tp_cd]
         AND BSE_YR     = @[bse_yr]
         AND BSE_QTR_CD = DECODE(@[bse_tp_cd], 'Y', '00', @[bse_qtr_cd])
         AND RLANE_CD   = @[rlane_cd]
         AND DIR_CD     = NVL(@[dir_cd],DIR_CD)
       )A1
      ,SQM_SCTR_PERF_IF A2
 WHERE 1=1
   AND A1.BSE_TP_CD   = A2.BSE_TP_CD(+)
   AND A1.BSE_YR      = A2.BSE_YR(+)
   AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD(+)
   AND A1.RLANE_CD    = A2.RLANE_CD(+)
   AND A1.DIR_CD      = A2.DIR_CD(+)
   AND A1.POL_CD      = A2.POL_CD(+)
   AND A1.POD_CD      = A2.POD_CD(+)
   AND A2.OFC_VW_CD(+)   = 'L'
   AND NOT EXISTS (SELECT 'X' FROM SQM_SCTR_PAIR_COST A3
                   WHERE 1=1
                   AND A1.BSE_TP_CD   = A3.BSE_TP_CD
                   AND A1.BSE_YR      = A3.BSE_YR
                   AND A1.BSE_QTR_CD  = A3.BSE_QTR_CD
                   AND A1.TRD_CD      = A3.TRD_CD
                   AND A1.SUB_TRD_CD  = A3.SUB_TRD_CD
                   AND A1.RLANE_CD    = A3.RLANE_CD
                   AND A1.DIR_CD      = A3.DIR_CD
                   AND A1.POL_CD      = A3.POL_CD
                   AND A1.POD_CD      = A3.POD_CD)
 GROUP BY A1.BSE_TP_CD
      ,A1.BSE_YR
      ,A1.BSE_QTR_CD
      ,A1.RLANE_CD
      ,A1.DIR_CD
      ,A1.POL_CD
      ,A1.POD_CD
      ,A1.TRD_CD
      ,A1.SUB_TRD_CD			]]></sql>
			<params>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="bse_tp_cd" type="12" value="" out="N"/>
				<param name="bse_yr" type="12" value="" out="N"/>
				<param name="bse_qtr_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
