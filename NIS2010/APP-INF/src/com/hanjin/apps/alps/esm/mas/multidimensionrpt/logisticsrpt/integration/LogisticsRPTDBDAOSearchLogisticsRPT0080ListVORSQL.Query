<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LogisticsRPTDBDAOSearchLogisticsRPT0080ListVORSQL">
			<desc><![CDATA[Logistics Lane조회
2011.06.21 이석준 [CHM-201111642-01] 
                 MAS Logistics Exp. By Office화면에서 R.Month / S.Month 구분요청
2012.11.28 원종규 [CHM-201221658-01] AVG(VOID_VOL) -> SUM(VOID_VOL) 로 변경
2014.07.10 PEJ [CHM-201431087] [MAS] Multi-Dimension Report > Logistics PFMC > Expense 화면 조회로직 변경요청
                      TMNL/TRANS Volume Incentive 제외
                      모든계정의 AMT가 0 이 아니것
2014.08.13 박은주 [CHM-201431516]  Logistics PFMC Report - KPI 3 추가 및 화면변경 요청사항]]></desc>
			<sql><![CDATA[
--Logistics Exp. By Lane - Sheet1
SELECT P_REPORT
      ,COST_YRMONWK
      ,COST_YRMON
      ,COST_RMON
      ,COST_WK
      ,TRD_CD
      ,RLANE_CD
      ,DIR_CD
      ,SUM(LOAD) LOAD
      ,SUM(VOID_VOL) VOID_VOL
      ,SUM(TM_AMT) TM_AMT
      ,SUM(TR_AMT) TR_AMT
      ,SUM(TOTAL_AMT) TOTAL_AMT
      ,SUM(TM_AMT) / DECODE(SUM(LOAD), 0, 1, SUM(LOAD)) UNIT_TM
      ,SUM(TR_AMT) / DECODE(SUM(LOAD), 0, 1, SUM(LOAD)) UNIT_TR
      ,SUM(TM_AMT + TR_AMT) / DECODE(SUM(LOAD), 0, 1, SUM(LOAD)) UNIT_TTL
  FROM (
         SELECT BKG_NO
               ,P_REPORT          /* split을 안하면 모두 X, 두개다 있는경우, month만 있는경우, week만 있는경우 */
#if(${f_chkprd} =='W' && ${f_split_mw} =='T')
               ,COST_YRMON || COST_WK AS COST_YRMONWK
#else
               ,COST_RMON || COST_WK AS COST_YRMONWK
#end
               ,COST_YRMON
               ,COST_RMON
               ,COST_WK
               ,TRD_CD
               ,RLANE_CD
               ,DIR_CD
               ,SUM(LOAD) AS LOAD
               ,SUM(VOID_VOL) AS VOID_VOL
               ,SUM(TM_AMT) AS TM_AMT
               ,DECODE(@[f_excld_crr_hlg], 'T', SUM(TR_AMT), SUM(TR_AMT) - SUM(CRR_HLG_SVC_CHG_AMT)) AS TR_AMT
               ,DECODE(@[f_excld_crr_hlg], 'T', SUM(TM_AMT + TR_AMT), SUM(TM_AMT + TR_AMT) - SUM(CRR_HLG_SVC_CHG_AMT)) AS TOTAL_AMT
               ,SUM(CRR_HLG_SVC_CHG_AMT) AS CRR_HLG_SVC_CHG_AMT
           FROM (
                SELECT   /*+ ORDERED */
                         C3.BKG_NO
                        ,C5.CNTR_TPSZ_CD
                        ,C1.P_REPORT
                        ,C1.P_SPLIT_MW
                        ,C1.P_CHKPRD
                        ,DECODE(C1.P_SPLIT_MW||P_CHKPRD, 'TW', C2.SLS_YRMON, 'X') AS COST_YRMON
                        ,DECODE(C1.P_SPLIT_MW||P_CHKPRD, 'TW', C2.COST_YRMON, 'TM', C2.COST_YRMON, 'X') AS COST_RMON
                        ,DECODE(C1.P_SPLIT_MW||P_CHKPRD, 'TW', C2.COST_WK, 'X') AS COST_WK
                        ,C2.TRD_CD
                        ,DECODE(C1.P_REPORT, '1', 'X', C2.RLANE_CD) RLANE_CD
                        ,DECODE(C1.P_REPORT, '1', 'X', C2.DIR_CD) DIR_CD
                        ,AVG(DECODE(SUBSTR(C5.CNTR_TPSZ_CD, -1, 1), '2', NVL(C5.BKG_QTY, 0), '3', NVL(C5.BKG_QTY, 0), NVL(C5.BKG_QTY, 0) * 2)) AS LOAD
                        ,AVG(NVL(C5.VOID_20FT_QTY, 0) + NVL(C5.VOID_40FT_QTY, 0) * 2) VOID_VOL
                        ,CASE C1.P_INCLD_TML
                             WHEN 'T' THEN SUM(C5.FCNTR_STVG_TTL_AMT - NVL(C5.TML_VOL_INCNT_AMT,0) )
                             ELSE SUM(C5.FCNTR_STVG_TTL_AMT - NVL(C5.TML_VOL_INCNT_AMT,0) - C5.TML_AMT)
                         END AS TM_AMT
                        ,SUM(C5.FCNTR_TRSP_TTL_AMT - NVL(C5.TRNS_VOL_INCNT_AMT,0)) TR_AMT
                        ,SUM(NVL(C5.CRR_HLG_SVC_CHG_AMT,0)) CRR_HLG_SVC_CHG_AMT
                 FROM (
                        SELECT @[f_year]          P_YEAR
                              ,@[f_fm_mon]        P_SCOST_YRMON
                              ,@[f_to_mon]        P_ECOST_YRMON
                              ,@[f_sls_mon]       P_SLS_MON
                              ,@[f_fm_wk]         P_SCOST_WEEK
                              ,@[f_to_wk]         P_ECOST_WEEK
                              ,@[f_split_mw]      P_SPLIT_MW
                              ,@[f_report]        P_REPORT
                              ,@[f_trd_cd]        P_TRD_CD
                              ,@[f_rlane_cd]      P_RLANE_CD
                              ,@[f_skd_dir_cd]    P_SKD_DIR_CD
                              ,@[f_kpi_type]      P_KPITYPE
                              ,@[f_lgs_mn_kpi_cd] P_LGS_KPI_MN_CD
                              ,@[f_lgs_kpi_cd]    P_LGS_KPI_CD
                              ,@[f_lgs_kpi3_cd]   P_LGS_KPI3_CD
                              ,@[f_incld_tml]     P_INCLD_TML
                              ,@[f_chkprd]        P_CHKPRD
                              ,DECODE(@[f_lgs_mn_kpi_cd], 'ST', 'Y', 'N') P_MN_SHTL   /*맨앞이 세팅할넘 P_LGS_KPI_MN_CD*/
                              ,DECODE(@[f_lgs_kpi_cd], 'SHTL', 'Y', 'N') P_SHTL       /*맨앞이 세팅할넘 P_LGS_KPI_CD*/
                          FROM DUAL
                          ) C1
                          ,MAS_MON_VVD C2
                          ,MAS_RGST_BKG C3
                          ,MAS_BKG_LGS_SMRY C5
                     WHERE 1 = 1
#if (${f_chkprd} == 'W')
    #if (${f_sls_mon} != '')
                       AND SLS_YRMON           = C1.P_YEAR||C1.P_SLS_MON
                       AND COST_WK             BETWEEN C1.P_SCOST_WEEK AND C1.P_ECOST_WEEK
    #else
                       AND SLS_YRMON           LIKE C1.P_YEAR||'%'
                       AND COST_WK             BETWEEN C1.P_SCOST_WEEK AND C1.P_ECOST_WEEK
    #end
#elseif (${f_chkprd} == 'M')
                       AND COST_YRMON          BETWEEN C1.P_YEAR||P_SCOST_YRMON AND C1.P_YEAR||C1.P_ECOST_YRMON
#end
#if (${f_trd_cd} !='')
                       AND C2.TRD_CD           = C1.P_TRD_CD
#end
#if (${f_rlane_cd} !='')
                       AND C2.RLANE_CD         = C1.P_RLANE_CD
#end
#if (${f_skd_dir_cd} !='')
                       AND C2.DIR_CD           = C1.P_SKD_DIR_CD
#end
#if ((${f_kpi_type} == '1') && ${f_lgs_mn_kpi_cd} != '')
    #if (${f_lgs_mn_kpi_cd} == 'ST')
                       AND C5.STTL_FLG         = 'Y'
    #else
                       AND C5.STTL_FLG         <> 'Y'
                       AND C5.LGS_KPI_MN_CD    = C1.P_LGS_KPI_MN_CD
    #end
#end
#if ((${f_kpi_type} == '2') && ${f_lgs_kpi_cd} != '')
    #if (${f_lgs_kpi_cd} == 'SHTL')
                       AND C5.STTL_FLG         = 'Y'
    #else
                       AND C5.STTL_FLG         <> 'Y'
                       AND C5.LGS_KPI_CD       = C1.P_LGS_KPI_CD
    #end
#end
#if ((${f_kpi_type} == '3') && ${f_lgs_kpi3_cd} != '')
                       --KIP3는 코드를 들고 있는것이 아니라 DESC를 들고 있어서 아래와 같이 걸어 줘야 함
                       AND C5.LGS_KPI_CD       IN (
                                                    SELECT INTG_CD_VAL_CTNT
                                                      FROM COM_INTG_CD_DTL
                                                     WHERE INTG_CD_ID       = 'CD03163'
                                                       AND INTG_CD_VAL_DESC = C1.P_LGS_KPI3_CD
                                                   )
#end
                       AND C5.COST_ACT_GRP_CD  NOT IN ('NIBC','NOBC')
                       AND C3.BKG_STS_CD       IN('F', 'S')
                       AND C3.BL_NO_TP         IN('M', '0')
                       AND C2.DELT_FLG         NOT IN('Y')
                       AND C3.BKG_CGO_TP_CD    NOT IN('P')
                       AND C2.VSL_CD           = C3.VSL_CD
                       AND C2.SKD_VOY_NO       = C3.SKD_VOY_NO
                       AND C2.DIR_CD           = C3.DIR_CD
                       AND C2.TRD_CD           = C3.TRD_CD
                       AND C2.RLANE_CD         = C3.RLANE_CD
                       AND C2.IOC_CD           = C3.IOC_CD
                       AND C3.BKG_NO           = C5.BKG_NO
                     GROUP BY C3.BKG_NO
                             ,C5.CNTR_TPSZ_CD
                             ,C1.P_REPORT
                             ,DECODE(C1.P_SPLIT_MW||P_CHKPRD, 'TW', C2.SLS_YRMON, 'X')
                             ,DECODE(C1.P_SPLIT_MW||P_CHKPRD, 'TW', C2.COST_YRMON, 'TM', C2.COST_YRMON, 'X')
                             ,DECODE(C1.P_SPLIT_MW||P_CHKPRD, 'TW', C2.COST_WK, 'X')
                             ,C2.TRD_CD
                             ,DECODE(C1.P_REPORT, '1', 'X', C2.RLANE_CD)
                             ,DECODE(C1.P_REPORT, '1', 'X', C2.DIR_CD)
                )
            GROUP BY BKG_NO
                    ,P_REPORT
                    ,COST_YRMON
                    ,COST_RMON
                    ,COST_WK
                    ,TRD_CD
                    ,RLANE_CD
                    ,DIR_CD
        )
GROUP BY P_REPORT
        ,COST_YRMONWK
        ,COST_YRMON
        ,COST_RMON
        ,COST_WK
        ,TRD_CD
        ,RLANE_CD
        ,DIR_CD
ORDER BY COST_YRMONWK
        ,COST_YRMON
        ,COST_RMON
        ,COST_WK
        ,TRD_CD
        ,RLANE_CD
        ,DIR_CD			]]></sql>
			<params>
				<param name="f_excld_crr_hlg" type="12" value="" out="N"/>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_sls_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_split_mw" type="12" value="" out="N"/>
				<param name="f_report" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_skd_dir_cd" type="12" value="" out="N"/>
				<param name="f_kpi_type" type="12" value="" out="N"/>
				<param name="f_lgs_mn_kpi_cd" type="12" value="" out="N"/>
				<param name="f_lgs_kpi_cd" type="12" value="" out="N"/>
				<param name="f_lgs_kpi3_cd" type="12" value="" out="N"/>
				<param name="f_incld_tml" type="12" value="" out="N"/>
				<param name="f_chkprd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
