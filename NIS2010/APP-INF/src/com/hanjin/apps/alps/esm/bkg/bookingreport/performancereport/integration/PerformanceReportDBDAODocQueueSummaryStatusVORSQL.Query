<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PerformanceReportDBDAODocQueueSummaryStatusVORSQL">
			<desc><![CDATA[PerformanceReportDBDAODocQueueSummaryStatusVORSQL]]></desc>
			<sql><![CDATA[
SELECT REGION,
       BKG_OFC_CD,
       KIND,
       TOTAL,
       DONE,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (DONE / TOTAL) * 100), 2), '990.99')) AS DONE_PER,
       DC_PEND,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (DC_PEND / TOTAL) * 100), 2), '990.99')) AS DC_PEND_PER,
       FO_PEND,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (FO_PEND / TOTAL) * 100), 2), '990.99')) AS FO_PEND_PER,
       OPEN_IND,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (OPEN_IND / TOTAL) * 100), 2), '990.99')) AS OPEN_IND_PER,
       INPUT,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (INPUT / TOTAL) * 100), 2), '990.99')) AS INPUT_PER,
       RATE AS RATE,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (RATE / TOTAL) * 100), 2), '990.99')) AS RATE_PER,
       QA,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (QA / TOTAL) * 100), 2), '990.99')) AS QA_PER,
       BL_PROOF,
       TRIM(TO_CHAR(ROUND(DECODE(TOTAL, 0, 0, (BL_PROOF / TOTAL) * 100), 2), '990.99')) AS BL_PROOF_PER

  FROM
       (SELECT REGION,
               BKG_OFC_CD,
               KIND,
               COUNT(*) AS TOTAL,
               SUM(DECODE(BL_DOC_INP_FLG||BL_RT_FLG||BL_AUD_FLG, 'YYY', 1, 0)) AS DONE,
               SUM(DECODE(NVL(SR_WRK_STS_CD, '*'), 'P', 1, 0)) AS DC_PEND,
               SUM(DECODE(NVL(SR_WRK_STS_CD, '*'), 'F', 1, 0)) AS FO_PEND,
               SUM(DECODE(NVL(SR_WRK_STS_CD, '*'), 'F', 0, 'P', 0, 1)) AS OPEN_IND,
               SUM(DECODE(NVL(BL_DOC_INP_USR_ID, '*'), '*', 0, 1)) AS INPUT,
               SUM(DECODE(NVL(BL_RT_FLG, '*'), 'Y', 1, 0)) AS RATE,
               SUM(DECODE(NVL(BL_AUD_FLG, '*'), 'Y', 1, 0)) AS QA,
               SUM(DECODE(NVL(BL_DRFT_FAX_OUT_FLG, '*'), 'Y', 1, 0)) AS BL_PROOF

          FROM (SELECT NVL((SELECT INTG_CD_VAL_DESC
                              FROM COM_INTG_CD_DTL
                             WHERE INTG_CD_ID = 'CD01603'
                               AND INTG_CD_VAL_CTNT = (SELECT DISTINCT DECODE(RGN_OFC_CD, 'E', 'DE', 'J', 'JP', 'K', 'KR', 'N', 'US', 'S', 'PK', 'C', 'CN', 'XX')
                                                         FROM BKG_EML_ACCT_STUP
                                                        WHERE BKG_OFC_CD = B.BKG_OFC_CD
                                                          AND ROWNUM = 1)),
                           '('||B.BKG_OFC_CD||')') AS REGION,
                       B.BKG_OFC_CD,
                       (SELECT INTG_CD_VAL_DP_DESC
                          FROM COM_INTG_CD_DTL
                         WHERE INTG_CD_ID = 'CD01577'
                           AND (APLY_ST_DT < TO_CHAR(SYSDATE, 'YYYYMMDD') AND APLY_END_DT > TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           AND INTG_CD_VAL_CTNT = A.SR_AMD_TP_CD) AS KIND,
                       A.SR_AMD_TP_CD,
                       NVL(A.BL_DOC_INP_FLG, 'N') AS BL_DOC_INP_FLG,
                       NVL(A.BL_RT_FLG, 'N') AS BL_RT_FLG,
                       NVL(A.BL_AUD_FLG, 'N') AS BL_AUD_FLG,
                       DECODE(A.SR_WRK_STS_CD, 'T', NULL, A.SR_WRK_STS_CD) AS SR_WRK_STS_CD,
                       A.BL_DOC_INP_USR_ID,
                       NVL(A.BL_DRFT_FAX_OUT_FLG, 'N') AS BL_DRFT_FAX_OUT_FLG

                  FROM BKG_SR_CRNT_RQST A,
#if (${bkg_no} == '')
     #if (${rgn_cd} != '')
                          BKG_EML_ACCT_STUP EAS,
     #end
     #if (${vvd_cd} != '' || (${slan_cd} != '' && ${slan_cd} != 'All'))
                          BKG_VVD VVD,
     #end
     #if (${cust_cnt_cd} != '' || ${cust_seq} != '' || ${cust_nm} != '')
                          BKG_CUSTOMER S,
                          BKG_CUSTOMER C,
                          BKG_CUSTOMER N,
                          BKG_CUSTOMER F,
     #end
     #if (${srep_cd} != '' || ${split_only_flg} != '')
                          BKG_XTER_RQST_MST XTER,
     #end
#end
                          BKG_BOOKING B

                    WHERE 1 = 1
                      AND B.BKG_NO = A.BKG_NO
                      AND B.BKG_STS_CD <> 'X'
#if (${bkg_no} == '')
     /* Duration */
     #if (${dura_from_dt} != '' && ${dura_to_dt} !='' )
                      AND A.SR_WRK_STS_DT BETWEEN TO_DATE(@[dura_from_dt], 'YYYY-MM-DD') AND TO_DATE(@[dura_to_dt], 'YYYY-MM-DD') + 1
     #end
     /* Doc OFC */
     #if (${dpcs_ofc_cd} != '')
                      AND A.DPCS_OFC_CD = @[dpcs_ofc_cd]
     #end
     /* Input */
     #if (${input} != '')
                      AND NVL(A.BL_DOC_INP_FLG, 'N') = @[input]
     #end
     /* Rate */
     #if (${rate} != '')
                      AND NVL(A.BL_RT_FLG, 'N') = @[rate]
     #end
     /* Qa */
     #if (${qa} != '')
                      AND NVL(A.BL_AUD_FLG, 'N') = @[qa]
     #end
     /* Fax */
     #if (${fax} != '')
                      AND NVL(A.BL_DRFT_FAX_OUT_FLG, 'N') = @[fax]
     #end
     /* Region */
     #if (${rgn_cd} != '')
                      AND EAS.BKG_OFC_CD = B.BKG_OFC_CD
                      AND EAS.RGN_OFC_CD IN (${rgn_cd})
     #end
     #if (${vvd_cd} != '' || (${slan_cd} != '' && ${slan_cd} != 'All'))
                      AND VVD.BKG_NO = B.BKG_NO
          /* VVD */
          #if (${vvd_cd} != '')
                      AND VVD.VSL_CD||VVD.SKD_VOY_NO||VVD.SKD_DIR_CD LIKE @[vvd_cd]||'%'
          #end
          /* LANE */
          #if (${slan_cd} != '' && ${slan_cd} != 'All')
                      AND VVD.SLAN_CD = @[slan_cd]
          #end
     #end
     /* POL */
     #if (${pol_cd} != '')
                      AND B.POL_CD LIKE @[pol_cd]||'%'
     #end
     /* POD */
     #if (${pod_cd} != '')
                      AND B.POD_CD LIKE @[pod_cd]||'%'
     #end
     /* Booking Office */
     #if (${bkg_ofc_cd} != '')
                      AND B.BKG_OFC_CD LIKE '%'||@[bkg_ofc_cd]||'%'
     #end
     /* STS */
     #if (${sts} == 'X')
                      AND A.SR_CRNT_STS_CD = 'XX'
     #elseif (${sts} != '' && ${sts} != 'A')
                      AND A.SR_WRK_STS_CD = @[sts]
                      AND A.SR_CRNT_STS_CD <> 'XX'
     #else
                      AND A.SR_CRNT_STS_CD <> 'XX'
     #end
     /* SRC */
     #if (${src_cd} != '')
                      AND A.SR_KND_CD = @[src_cd]
     #end
     /* S/R KIND */
     #if (${sr_amd_tp_cd} != '' && ${sr_amd_tp_cd} != 'L')
                      AND A.SR_AMD_TP_CD = @[sr_amd_tp_cd]
     #end
     /* Customer Type에 따른 Customer Code 및 Customer Name이 조건으로 들어온 경우 */
     #if (${cust_cnt_cd} != '' || ${cust_seq} != '' || ${cust_nm} != '')
                      AND S.BKG_NO(+) = A.BKG_NO
                      AND S.BKG_CUST_TP_CD(+) = 'S'
                      AND C.BKG_NO(+) = A.BKG_NO
                      AND C.BKG_CUST_TP_CD(+) = 'C'
                      AND N.BKG_NO(+) = A.BKG_NO
                      AND N.BKG_CUST_TP_CD(+) = 'N'
                      AND F.BKG_NO(+) = A.BKG_NO
                      AND F.BKG_CUST_TP_CD(+) = 'F'
          #if (${cust_cnt_cd} != '')
               #if (${bkg_cust_tp_cd} == 'S')
                      AND S.CUST_CNT_CD = @[cust_cnt_cd]
               #elseif (${bkg_cust_tp_cd} == 'C')
                      AND C.CUST_CNT_CD = @[cust_cnt_cd]
               #elseif (${bkg_cust_tp_cd} == 'N')
                      AND N.CUST_CNT_CD = @[cust_cnt_cd]
               #elseif (${bkg_cust_tp_cd} == 'F')
                      AND F.CUST_CNT_CD = @[cust_cnt_cd]
               #end
          #end
          #if (${cust_seq} != '')
               #if (${bkg_cust_tp_cd} == 'S')
                      AND S.CUST_SEQ = @[cust_seq]
               #elseif (${bkg_cust_tp_cd} == 'C')
                      AND C.CUST_SEQ = @[cust_seq]
               #elseif (${bkg_cust_tp_cd} == 'N')
                      AND N.CUST_SEQ = @[cust_seq]
               #elseif (${bkg_cust_tp_cd} == 'F')
                      AND F.CUST_SEQ = @[cust_seq]
               #end
          #end
          #if (${cust_nm} != '')
               #if (${bkg_cust_tp_cd} == 'S')
                      AND UPPER(S.CUST_NM) LIKE @[cust_nm] || '%'
               #elseif (${bkg_cust_tp_cd} == 'C')
                      AND UPPER(C.CUST_NM) LIKE @[cust_nm] || '%'
               #elseif (${bkg_cust_tp_cd} == 'N')
                      AND UPPER(N.CUST_NM) LIKE @[cust_nm] || '%'
               #elseif (${bkg_cust_tp_cd} == 'F')
                      AND UPPER(F.CUST_NM) LIKE @[cust_nm] || '%'
               #end
          #end
     #end
     #if (${srep_cd} != '' || ${split_only_flg} != '')
                      AND XTER.XTER_SNDR_ID(+) = A.XTER_SNDR_ID
                      AND XTER.XTER_RQST_NO(+) = A.XTER_RQST_NO
                      AND XTER.XTER_RQST_SEQ(+) = A.XTER_RQST_SEQ
                      AND NVL(XTER.SNACCS_MSG_TP_CD, ' ') NOT IN ('SAT050', 'SAT054')
          #if (${srep_cd} != '')
                      AND NVL(B.OB_SREP_CD, XTER.SREP_CD) = @[srep_cd]
          #end
          #if (${split_only_flg} != '')
                      AND XTER.SPLIT_STS_CD IN ('S', 'F')
          #end
     #end
#else
/* Booking No */
                      AND A.BKG_NO LIKE @[bkg_no]||'%'
#end
               )


         GROUP BY REGION,
                  BKG_OFC_CD,
                  KIND
       )

 ORDER BY REGION,
          BKG_OFC_CD,
          KIND			]]></sql>
			<params>
				<param name="dura_from_dt" type="12" value="" out="N"/>
				<param name="dura_to_dt" type="12" value="" out="N"/>
				<param name="dpcs_ofc_cd" type="12" value="" out="N"/>
				<param name="input" type="12" value="" out="N"/>
				<param name="rate" type="12" value="" out="N"/>
				<param name="qa" type="12" value="" out="N"/>
				<param name="fax" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="sts" type="12" value="" out="N"/>
				<param name="src_cd" type="12" value="" out="N"/>
				<param name="sr_amd_tp_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="srep_cd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
