<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ArrivalNoticeDBDAOsearchArrNtcSendListRSQL">
			<desc><![CDATA[0381 조회 쿼리]]></desc>
			<sql><![CDATA[
SELECT     INQR.VSL_CD
         , INQR.SKD_VOY_NO
         , INQR.SKD_DIR_CD
         , INQR.VVD
         , INQR.CHK_FAX
         , INQR.CHK_EMAIL
         , INQR.AN_FOM_CD
         , INQR.BKG_NO
         , INQR.CHG_DP_FLG
         , INQR.BL_NO
         , INQR.BKG_CUST_TP_CD
         , INQR.CUST_CNT_CD
         , INQR.CUST_SEQ
         , INQR.SC_NO
         , INQR.CUST_CD
         , INQR.CUST_NM
         , INQR.AN_SENT
         , INQR.FAX_NO1
         , INQR.FAX_NO2 
         , INQR.FAX_NO3
         , INQR.FAX_NO4
         , INQR.FAX_NO5
         , NVL(INQR.FAX_NO6,DECODE(SUBSTR(INQR.POD_CD,1,2),'US',BKG_GET_TOKEN_FNC(SC_A1_INFO,2),NULL)) FAX_NO6
         , NVL(INQR.FAX_NO7,DECODE(SUBSTR(INQR.POD_CD,1,2),'US',BKG_GET_TOKEN_FNC(SC_A2_INFO,2),NULL)) FAX_NO7

         , INQR.FAX_SND_FLG1
         , INQR.FAX_SND_FLG2
         , INQR.FAX_SND_FLG3
         , INQR.FAX_SND_FLG4
         , INQR.FAX_SND_FLG5
         , INQR.FAX_SND_FLG6
         , INQR.FAX_SND_FLG7
         , INQR.FAX_NTC_SND_RSLT_CD1
         , INQR.FAX_NTC_SND_RSLT_NM1  -- Fax전송 상태
         , INQR.FAX_NTC_SND_RSLT_CD2
         , INQR.FAX_NTC_SND_RSLT_NM2 -- Fax전송 상태
         , INQR.FAX_NTC_SND_RSLT_CD3
         , INQR.FAX_NTC_SND_RSLT_NM3 -- Fax전송 상태
         , INQR.FAX_NTC_SND_RSLT_CD4
         , INQR.FAX_NTC_SND_RSLT_NM4 -- Fax전송 상태
         , INQR.FAX_NTC_SND_RSLT_CD5
         , INQR.FAX_NTC_SND_RSLT_NM5 -- Fax전송 상태
         , INQR.FAX_NTC_SND_RSLT_CD6
         , INQR.FAX_NTC_SND_RSLT_NM6 -- Fax전송 상태
         , INQR.FAX_NTC_SND_RSLT_CD7
         , INQR.FAX_NTC_SND_RSLT_NM7 -- Fax전송 상태
         , INQR.FAX_SND_DT
         , INQR.FAX_EVNT_FLG1
         , INQR.FAX_EVNT_FLG2
         , INQR.FAX_EVNT_FLG3
         , INQR.FAX_EVNT_FLG4
         , INQR.FAX_EVNT_FLG5

         /* POD가 US SC No.로 세팅된 정보가 있으면 1,0 */
         , DECODE(SUBSTR(INQR.POD_CD,1,2),'US',NVL2(NVL(INQR.FAX_NO6,BKG_GET_TOKEN_FNC(SC_A1_INFO,2)),1,0),0) FAX_EVNT_FLG6
         , DECODE(SUBSTR(INQR.POD_CD,1,2),'US',NVL2(NVL(INQR.FAX_NO7,BKG_GET_TOKEN_FNC(SC_A2_INFO,2)),1,0),0) FAX_EVNT_FLG7

         , INQR.NTC_EML1
         , INQR.NTC_EML2
         , INQR.NTC_EML3
         , INQR.NTC_EML4
         , INQR.NTC_EML5
          /* POD가 US SC No.로 세팅된 정보*/
         , NVL(INQR.NTC_EML6,DECODE(SUBSTR(INQR.POD_CD,1,2),'US',BKG_GET_TOKEN_FNC(SC_A1_INFO,3),NULL)) NTC_EML6
         , NVL(INQR.NTC_EML7,DECODE(SUBSTR(INQR.POD_CD,1,2),'US',BKG_GET_TOKEN_FNC(SC_A2_INFO,3),NULL)) NTC_EML7

         , INQR.EML_SND_FLG1
         , INQR.EML_SND_FLG2
         , INQR.EML_SND_FLG3
         , INQR.EML_SND_FLG4
         , INQR.EML_SND_FLG5
         , INQR.EML_SND_FLG6
         , INQR.EML_SND_FLG7
         , INQR.EML_NTC_SND_RSLT_CD1
         , INQR.EML_NTC_SND_RSLT_NM1  -- RD E-MAIL전송 상태
         , INQR.EML_NTC_SND_RSLT_CD2
         , INQR.EML_NTC_SND_RSLT_NM2  -- RD E-MAIL전송 상태
         , INQR.EML_NTC_SND_RSLT_CD3
         , INQR.EML_NTC_SND_RSLT_NM3  -- RD E-MAIL전송 상태
         , INQR.EML_NTC_SND_RSLT_CD4
         , INQR.EML_NTC_SND_RSLT_NM4  -- RD E-MAIL전송 상태
         , INQR.EML_NTC_SND_RSLT_CD5
         , INQR.EML_NTC_SND_RSLT_NM5  -- RD E-MAIL전송 상태
         , INQR.EML_NTC_SND_RSLT_CD6
         , INQR.EML_NTC_SND_RSLT_NM6  -- RD E-MAIL전송 상태
         , INQR.EML_NTC_SND_RSLT_CD7
         , INQR.EML_NTC_SND_RSLT_NM7  -- RD E-MAIL전송 상태
         , INQR.EML_SND_DT
         , INQR.EML_EVNT_FLG1
         , INQR.EML_EVNT_FLG2
         , INQR.EML_EVNT_FLG3
         , INQR.EML_EVNT_FLG4
         , INQR.EML_EVNT_FLG5

         /* POD가 US SC No.로 세팅된 정보가 있으면 1,0 */
         , DECODE(SUBSTR(INQR.POD_CD,1,2),'US',NVL2(NVL(INQR.NTC_EML6,BKG_GET_TOKEN_FNC(SC_A1_INFO,3)),1,0),0) EML_EVNT_FLG6
         , DECODE(SUBSTR(INQR.POD_CD,1,2),'US',NVL2(NVL(INQR.NTC_EML7,BKG_GET_TOKEN_FNC(SC_A2_INFO,3)),1,0),0) EML_EVNT_FLG7  

         , INQR.CSTMS_CLR_TP_CD
         , INQR.HUB_LOC_CD
         , INQR.POD_CD
         , INQR.DEL_CD
         , INQR.DE_TERM_CD
         , INQR.IS_HOLD
         , INQR.USR_ID
         , INQR.DIFF_RMK
         , INQR.SND_USR_ID
         , INQR.USR_NM
         , INQR.FILE_KEY
         , INQR.IS_VALIDATED
         , INQR.BKG_CGO_TP_CD
         , INQR.RVIS_FLG
         , INQR.TS_FLG
         , INQR.RD_PRT_FLG
         , NTWD.ARR_PRV_FOM_CD    -- LOCAL LANGUAGE FLAG
         , NTWD.LOCL_LANG_FLG     -- LOCAL LANGUAGE FLAG
         , NTWD.ECLZ_BL_CPY_FLG  -- ORIGINAL B/L COPY 여부
         , HDG.ATTR_CTNT4 AS MRD_ID            -- MRD_ID
         , HDG.ATTR_CTNT5 || HDG.ATTR_CTNT6 AS COM_PARAM -- 공통적으로 붙는 파라미터
		 , NVL( ( SELECT 'Y' 
                   FROM BKG_HRD_CDG_CTNT 
                  WHERE HRD_CDG_ID ='ARR_NTC_EDI_CUST_CD' 
                  AND   ATTR_CTNT1=INQR.CUST_CNT_CD 
                  AND ATTR_CTNT2 =INQR.CUST_SEQ ),'N') EDI_SND_FLG
         , INQR.EDI_SND_DT      
         , INQR.EDI_SND_USR_ID
	     , INQR.FRT_TERM_CD
FROM (
    SELECT SUBQ.VSL_CD
         , SUBQ.SKD_VOY_NO
         , SUBQ.SKD_DIR_CD
         , SUBQ.VVD
         , 0 AS CHK_FAX
         , 0 AS CHK_EMAIL
         , ANTC.AN_FOM_CD
         , SUBQ.BKG_NO
         , DECODE(SUBQ.CHG_DP_FLG_BY_FRT_TERM, SUBQ.CHG_DP_FLG, SUBQ.CHG_DP_FLG_BY_FRT_TERM, SUBQ.CHG_DP_FLG) AS CHG_DP_FLG --Default 값으로 Prepaid는 Y, Collect는 N으로 보여주되, Customer 테이블에 저장된 값을 우선으로 보여준다.
         , SUBQ.BL_NO
         , SUBQ.BKG_CUST_TP_CD
         , SUBQ.CUST_CNT_CD
         , SUBQ.CUST_SEQ
         , SUBQ.SC_NO
         , SUBQ.CUST_CD
         , SUBQ.CUST_NM
         , CASE WHEN
                    ( NVL(SUBQ.FAX_NTC_SND_RSLT_CD1,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD2,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD3,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD4,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD5,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD6,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD7,' ') = @[fax_scs_cd] 
                     )
                      AND
                    ( NVL(SUBQ.EML_NTC_SND_RSLT_CD1,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD2,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD3,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD4,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD5,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD6,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD7,' ') = @[eml_scs_cd] 
                    )  THEN 'Both'
                WHEN
                    ( NVL(SUBQ.FAX_NTC_SND_RSLT_CD1,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD2,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD3,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD4,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD5,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD6,' ') = @[fax_scs_cd] OR
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD7,' ') = @[fax_scs_cd] 
                     )
                      AND
                    ( NVL(SUBQ.EML_NTC_SND_RSLT_CD1,' ') <> @[eml_scs_cd] AND
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD2,' ') <> @[eml_scs_cd] AND
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD3,' ') <> @[eml_scs_cd] AND
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD4,' ') <> @[eml_scs_cd] AND
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD5,' ') <> @[eml_scs_cd] AND
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD6,' ') <> @[eml_scs_cd] AND
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD7,' ') <> @[eml_scs_cd] 
					)  THEN 'Fax'
                WHEN
                    ( NVL(SUBQ.FAX_NTC_SND_RSLT_CD1,' ') <> @[fax_scs_cd] AND
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD2,' ') <> @[fax_scs_cd] AND
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD3,' ') <> @[fax_scs_cd] AND
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD4,' ') <> @[fax_scs_cd] AND
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD5,' ') <> @[fax_scs_cd] AND
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD6,' ') <> @[fax_scs_cd] AND
                      NVL(SUBQ.FAX_NTC_SND_RSLT_CD7,' ') <> @[fax_scs_cd]
					)
                      AND
                    ( NVL(SUBQ.EML_NTC_SND_RSLT_CD1,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD2,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD3,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD4,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD5,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD6,' ') = @[eml_scs_cd] OR
                      NVL(SUBQ.EML_NTC_SND_RSLT_CD7,' ') = @[eml_scs_cd]
					)  THEN 'Email'
                ELSE 'NO'
           END AS AN_SENT

         , SUBQ.FAX_NO1
         , SUBQ.FAX_NO2
         , SUBQ.FAX_NO3
         , SUBQ.FAX_NO4
         , SUBQ.FAX_NO5
         , SUBQ.FAX_NO6
         , SUBQ.FAX_NO7

         , SUBQ.FAX_SND_FLG1
         , SUBQ.FAX_SND_FLG2
         , SUBQ.FAX_SND_FLG3
         , SUBQ.FAX_SND_FLG4
         , SUBQ.FAX_SND_FLG5
         , SUBQ.FAX_SND_FLG6
         , SUBQ.FAX_SND_FLG7

         , SUBQ.FAX_NTC_SND_RSLT_CD1
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD1 ) AS FAX_NTC_SND_RSLT_NM1  -- Fax전송 상태
         , SUBQ.FAX_NTC_SND_RSLT_CD2
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD2 ) AS FAX_NTC_SND_RSLT_NM2 -- Fax전송 상태
         , SUBQ.FAX_NTC_SND_RSLT_CD3
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD3 ) AS FAX_NTC_SND_RSLT_NM3 -- Fax전송 상태
         , SUBQ.FAX_NTC_SND_RSLT_CD4
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD4 ) AS FAX_NTC_SND_RSLT_NM4 -- Fax전송 상태
         , SUBQ.FAX_NTC_SND_RSLT_CD5
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD5 ) AS FAX_NTC_SND_RSLT_NM5 -- Fax전송 상태

         , SUBQ.FAX_NTC_SND_RSLT_CD6
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD6 ) AS FAX_NTC_SND_RSLT_NM6 -- Fax전송 상태
         , SUBQ.FAX_NTC_SND_RSLT_CD7
         , BKG_COM_INTG_CD_NM_FNC('CD00959', SUBQ.FAX_NTC_SND_RSLT_CD6 ) AS FAX_NTC_SND_RSLT_NM7 -- Fax전송 상태

         , SUBQ.FAX_SND_DT
         , DECODE(SUBQ.FAX_NO1, NULL, 0, 1) AS FAX_EVNT_FLG1
         , DECODE(SUBQ.FAX_NO2, NULL, 0, 1) AS FAX_EVNT_FLG2
         , DECODE(SUBQ.FAX_NO3, NULL, 0, 1) AS FAX_EVNT_FLG3
         , DECODE(SUBQ.FAX_NO4, NULL, 0, 1) AS FAX_EVNT_FLG4
         , DECODE(SUBQ.FAX_NO5, NULL, 0, 1) AS FAX_EVNT_FLG5
         , DECODE(SUBQ.FAX_NO6, NULL, 0, 1) AS FAX_EVNT_FLG6
         , DECODE(SUBQ.FAX_NO7, NULL, 0, 1) AS FAX_EVNT_FLG7
         , SUBQ.NTC_EML1
         , SUBQ.NTC_EML2
         , SUBQ.NTC_EML3
         , SUBQ.NTC_EML4
         , SUBQ.NTC_EML5
         , SUBQ.NTC_EML6
         , SUBQ.NTC_EML7
         , SUBQ.EML_SND_FLG1
         , SUBQ.EML_SND_FLG2
         , SUBQ.EML_SND_FLG3
         , SUBQ.EML_SND_FLG4
         , SUBQ.EML_SND_FLG5
         , SUBQ.EML_SND_FLG6
         , SUBQ.EML_SND_FLG7
         , SUBQ.EML_NTC_SND_RSLT_CD1
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD1 ) AS EML_NTC_SND_RSLT_NM1  -- RD E-MAIL전송 상태
         , SUBQ.EML_NTC_SND_RSLT_CD2
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD2 ) AS EML_NTC_SND_RSLT_NM2  -- RD E-MAIL전송 상태
         , SUBQ.EML_NTC_SND_RSLT_CD3
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD3 ) AS EML_NTC_SND_RSLT_NM3  -- RD E-MAIL전송 상태
         , SUBQ.EML_NTC_SND_RSLT_CD4
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD4 ) AS EML_NTC_SND_RSLT_NM4  -- RD E-MAIL전송 상태
         , SUBQ.EML_NTC_SND_RSLT_CD5
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD5 ) AS EML_NTC_SND_RSLT_NM5  -- RD E-MAIL전송 상태
         , SUBQ.EML_NTC_SND_RSLT_CD6
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD6 ) AS EML_NTC_SND_RSLT_NM6  -- RD E-MAIL전송 상태
         , SUBQ.EML_NTC_SND_RSLT_CD7
         , BKG_COM_INTG_CD_NM_FNC('CD00960', SUBQ.EML_NTC_SND_RSLT_CD7 ) AS EML_NTC_SND_RSLT_NM7  -- RD E-MAIL전송 상태
         , SUBQ.EML_SND_DT
         , DECODE(SUBQ.NTC_EML1, NULL, 0, 1) AS EML_EVNT_FLG1
         , DECODE(SUBQ.NTC_EML2, NULL, 0, 1) AS EML_EVNT_FLG2
         , DECODE(SUBQ.NTC_EML3, NULL, 0, 1) AS EML_EVNT_FLG3
         , DECODE(SUBQ.NTC_EML4, NULL, 0, 1) AS EML_EVNT_FLG4
         , DECODE(SUBQ.NTC_EML5, NULL, 0, 1) AS EML_EVNT_FLG5
         , DECODE(SUBQ.NTC_EML6, NULL, 0, 1) AS EML_EVNT_FLG6
         , DECODE(SUBQ.NTC_EML7, NULL, 0, 1) AS EML_EVNT_FLG7
         , DECODE(CADV.CSTMS_CLR_TP_CD, 'I', 'IT', 'LOCAL') AS CSTMS_CLR_TP_CD
         , CBL.HUB_LOC_CD     AS HUB_LOC_CD
         , SUBQ.POD_CD
         , SUBQ.DEL_CD
         , SUBQ.DE_TERM_CD
         , (SELECT DECODE(COUNT(1), 1, 'Y', 'N')
              FROM BKG_ARR_NTC_CNTR ACNT
             WHERE ACNT.BKG_NO = SUBQ.BKG_NO
               AND ACNT.HLD_FLG = 'Y'
               AND ROWNUM = 1 ) AS IS_HOLD
         , '' USR_ID
         , NVL(ANTC.DIFF_RMK,USET.AN_RMK) AS DIFF_RMK
         , SUBQ.SND_USR_ID
         , CUSR.USR_NM
         , '' AS FILE_KEY
         , SUBQ.IS_VALIDATED
         , SUBQ.BKG_CGO_TP_CD
         , ANTC.NTC_RVIS_FLG AS RVIS_FLG
         , NVL(@[ts_flg],'N') AS TS_FLG
         , DECODE(@[ts_flg], 'Y', 'Y', DECODE(TRIM(DVVD.SKD_VOY_NO), NULL, 'N', 'Y')) AS RD_PRT_FLG -- RD를 출력하기 위한 기본요건을 갖추었는지 점검하는 Flag (2010 03 31 Park Mangeon)
         , BKG_ARR_NTC_STUP_SEQ_FNC(SUBQ.BKG_NO,@[ofc_cd],'N') AS AN_SEQ
		 , SUBQ.EDI_SND_DT      
         , SUBQ.EDI_SND_USR_ID 
         , DECODE( SUBSTR(LOC.LOC_CD,1,2),'KR','KR'
                                         ,'JP','JP'
                                         ,'CN','CN'
                                         ,'TW','CN'
                                         ,'US','US'
  										 ,'CA','CA'		
                                         ,'AE','AE'
                                         ,'*')     AS CNT_CD
          , CASE  WHEN MDM.CNT_CD ='KR'
                    OR MDM.CNT_CD ='JP'
                    OR MDM.CNT_CD ='CN'
                    OR MDM.CNT_CD ='TW'
                    OR MDM.CNT_CD ='US'
                    OR MDM.CNT_CD ='CA' 
                    OR MDM.CNT_CD ='AE' THEN  DECODE( MDM.SCONTI_CD,'AF','AF'
                                                                   ,'MN','MN'
                                                                   ,'EN','EN'
																   ,'AM','AM'
                                                                   ,'*' )
                  ELSE DECODE( MDM.SCONTI_CD,'EN','EN'
                                           ,'EC','EC'
                                           ,'EE','EE'
                                           ,'ES','ES'
                                               ,'*' ) END AS CONTI_CD
           , SUBQ.FRT_TERM_CD

           , DECODE(SUBSTR(SUBQ.POD_CD,1,2),'US',BKG_IB_AN_GET_ANTFY_FNC(SUBQ.SC_NO,SUBQ.CUST_CNT_CD||LPAD(SUBQ.CUST_SEQ,6,'0'),SUBQ.POD_CD,'A1' )) AS SC_A1_INFO -- SC No.로 매핑된 Also notify 정보 조회
           , DECODE(SUBSTR(SUBQ.POD_CD,1,2),'US',BKG_IB_AN_GET_ANTFY_FNC(SUBQ.SC_NO,SUBQ.CUST_CNT_CD||LPAD(SUBQ.CUST_SEQ,6,'0'),SUBQ.POD_CD,'A2' )) AS SC_A2_INFO -- SC No.로 매핑된 Also notify 정보 조회

    FROM (
        SELECT
               MAX(BKGM.VSL_CD     ) AS VSL_CD
             , MAX(BKGM.SKD_VOY_NO ) AS SKD_VOY_NO
             , MAX(BKGM.SKD_DIR_CD ) AS SKD_DIR_CD
             , MAX(BKGM.VSL_CD || BKGM.SKD_VOY_NO || BKGM.SKD_DIR_CD) AS VVD
             , MAX(BKGM.BKG_NO        ) AS BKG_NO
             , MAX(BKGM.CHG_DP_FLG    ) AS CHG_DP_FLG
             , MAX(BKGM.CHG_DP_FLG_BY_FRT_TERM ) AS CHG_DP_FLG_BY_FRT_TERM
             , BKGM.BL_NO
             , BKGM.BKG_CUST_TP_CD
             , MAX(BKGM.CUST_CNT_CD   ) AS CUST_CNT_CD
             , MAX(BKGM.CUST_SEQ      ) AS CUST_SEQ
             , MAX(BKGM.SC_NO         ) AS SC_NO
             , MAX(BKGM.CUST_CNT_CD || DECODE(BKGM.CUST_SEQ, 0, NULL, NULL, NULL, LPAD(BKGM.CUST_SEQ, 6, '0'))) AS CUST_CD
             , MAX(BKGM.CUST_NM       ) AS CUST_NM
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C1', ADTL.FAX_NO      , NULL)) AS FAX_NO1
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C2', ADTL.FAX_NO      , NULL)) AS FAX_NO2
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B1', ADTL.FAX_NO      , NULL)) AS FAX_NO3
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B2', ADTL.FAX_NO      , NULL)) AS FAX_NO4
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'AN', ADTL.FAX_NO      , NULL)) AS FAX_NO5
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A1', ADTL.FAX_NO      , NULL)) AS FAX_NO6
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A2', ADTL.FAX_NO      , NULL)) AS FAX_NO7

             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C1', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG1
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C2', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG2
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B1', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG3
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B2', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG4
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'AN', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG5
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A1', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG6
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A2', ADTL.FAX_SND_FLG , NULL)) AS FAX_SND_FLG7

             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C1', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD1
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C2', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD2
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B1', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD3
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B2', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD4
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'AN', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD5
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A1', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD6
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A2', NVL(ADTL.FAX_NTC_SND_RSLT_CD, FXSD.FAX_PROC_STS_CD) , NULL)) AS FAX_NTC_SND_RSLT_CD7

             , MAX(NVL(ADTL.FAX_SND_DT, FXSD.FAX_SND_LOCL_DT)) AS FAX_SND_DT
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C1', ADTL.NTC_EML     , NULL)) AS NTC_EML1
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C2', ADTL.NTC_EML     , NULL)) AS NTC_EML2
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B1', ADTL.NTC_EML     , NULL)) AS NTC_EML3
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B2', ADTL.NTC_EML     , NULL)) AS NTC_EML4
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'AN', ADTL.NTC_EML     , NULL)) AS NTC_EML5
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A1', ADTL.NTC_EML     , NULL)) AS NTC_EML6
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A2', ADTL.NTC_EML     , NULL)) AS NTC_EML7

             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C1', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG1
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C2', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG2
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B1', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG3
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B2', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG4
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'AN', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG5
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A1', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG6
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A2', ADTL.EML_SND_FLG , NULL)) AS EML_SND_FLG7

             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C1', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD1
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'C2', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD2
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B1', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD3
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'B2', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD4
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'AN', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD5
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A1', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD6
             , MAX(DECODE(ADTL.CUST_CNTC_TP_CD, 'A2', NVL(ADTL.EML_NTC_SND_RSLT_CD, EMSD.EML_PROC_STS_CD) , NULL)) AS EML_NTC_SND_RSLT_CD7

             , MAX(NVL(ADTL.EML_SND_DT, GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL',EMSD.EML_DT,GLOBALDATE_PKG.GET_LOCCD_FNC(@[ofc_cd]) ) )) EML_SND_DT
             , MAX(BKGM.POD_CD    ) AS POD_CD
             , MAX(BKGM.DEL_CD    ) AS DEL_CD
             , MAX(BKGM.DE_TERM_CD) AS DE_TERM_CD
             , CASE WHEN MAX(NVL(TO_CHAR( NVL(ADTL.EML_SND_DT,GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL',EMSD.EML_DT,BKGM.LOC_CD)), 'YYYYMMDDHH24MISS'),'00000000000000') || ADTL.EML_SND_USR_ID) >  MAX(NVL(TO_CHAR( NVL(ADTL.FAX_SND_DT,FXSD.FAX_SND_LOCL_DT), 'YYYYMMDDHH24MISS'),'00000000000000') || ADTL.FAX_SND_USR_ID)
                       THEN SUBSTR(MAX(NVL(TO_CHAR(NVL(ADTL.EML_SND_DT,GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL',EMSD.EML_DT,(SELECT B.LOC_CD
                                                                                                     FROM COM_USER A
                                                                                                         ,MDM_ORGANIZATION B
                                                                                                     WHERE A.USR_ID=@[usr_id]
                              AND   A.OFC_CD = B.OFC_CD
                                                                                                     AND   B.DELT_FLG='N' ) ) ), 'YYYYMMDDHH24MISS'),'00000000000000') || ADTL.EML_SND_USR_ID), 15)
                    ELSE SUBSTR(MAX(NVL(TO_CHAR(NVL(ADTL.FAX_SND_DT,FXSD.FAX_SND_LOCL_DT), 'YYYYMMDDHH24MISS'),'00000000000000') || ADTL.FAX_SND_USR_ID), 15)
               END AS SND_USR_ID
             , 'US' CSTMS_CLR_TP_CNT_CD  -- outer join을 위해 선언
             , @[usr_id]               AS LOGIN_USR_ID
             , MAX(BKGM.IS_VALIDATED)  AS IS_VALIDATED
             , MAX(BKGM.BKG_CGO_TP_CD) AS BKG_CGO_TP_CD
             , MAX(BKGM.LOC_CD)        AS LOC_CD
			 , MAX(ADTL.EDI_SND_DT)      AS EDI_SND_DT
             , MAX(ADTL.EDI_SND_DT)      AS EDI_SND_USR_ID
             , MAX(BKGM.FRT_TERM_CD) AS FRT_TERM_CD
         FROM (
                 SELECT
                        BKGM.BKG_NO
                      , DECODE( @[ts_flg],'Y', BKGM.PST_RLY_PORT_CD, BKGM.POD_CD) AS POD_CD
                      , BKGM.DEL_CD
                      , NVL(BKGM.SC_NO,BKGM.RFA_NO) AS SC_NO
                      , VSKD.VSL_CD
                      , VSKD.SKD_VOY_NO
                      , VSKD.SKD_DIR_CD
                      , BKGM.BL_NO
                      , BKGM.DE_TERM_CD
                      , BCST.BKG_CUST_TP_CD
                      , BCST.AN_SND_FLG AS IS_VALIDATED
                      , BCST.CUST_CNT_CD
                      , BCST.CUST_SEQ
                      , NVL(BCST.IB_CUST_NM,BCST.CUST_NM)  AS CUST_NM
                      , NVL(BCST.IB_CUST_ADDR,BCST.CUST_ADDR) AS CUST_ADDR
                      , BCST.VAL_CD
                      , BCST.MTCH_FLG
                      , BCST.CUST_FAX_NO
                      , BCST.CUST_EML
                      , BCST.CHG_DP_FLG 
                      , DECODE(NVL(BCHG.FRT_TERM_CD,'C'),'P','Y','C','N') CHG_DP_FLG_BY_FRT_TERM
                      , CASE WHEN DECODE(BKGM.RC_FLG,'Y',1,0)     +DECODE(BKGM.DCGO_FLG,'Y',1,0)+
                                  DECODE(BKGM.AWK_CGO_FLG,'Y',1,0)+DECODE(BKGM.SOC_FLG,'Y',1,0) +DECODE(BKGM.BB_CGO_FLG,'Y',1,0) > 1 THEN 'MX'
                             WHEN DECODE(BKGM.RC_FLG,'Y',1,0)     +DECODE(BKGM.DCGO_FLG,'Y',1,0)+
                                 DECODE(BKGM.AWK_CGO_FLG,'Y',1,0)+DECODE(BKGM.SOC_FLG,'Y',1,0) +DECODE(BKGM.BB_CGO_FLG,'Y',1,0) < 1 THEN 'DR'
                             WHEN BKGM.RC_FLG      = 'Y' THEN 'RF'
                             WHEN BKGM.DCGO_FLG    = 'Y' THEN 'DG'
                             WHEN BKGM.AWK_CGO_FLG = 'Y' THEN 'AK'
                             WHEN BKGM.SOC_FLG     = 'Y' THEN 'SO'
                             WHEN BKGM.BB_CGO_FLG  = 'Y' THEN 'BB'END AS BKG_CGO_TP_CD
                      , GLOBALDATE_PKG.GET_LOCCD_FNC(@[ofc_cd]) AS LOC_CD
                      , BCHG.FRT_TERM_CD AS FRT_TERM_CD
                 FROM VSK_VSL_PORT_SKD VSKD
                    , BKG_VVD BVVD
                    , BKG_BOOKING BKGM
                    , BKG_CUSTOMER BCST
                    , BKG_RATE BCHG
                 WHERE 1 = 1
    #if (${sch_tp} == 'V')
                   AND BVVD.VSL_CD  = SUBSTR(@[vvd],1,4)      -- VVD (OPTIONAL 1)
                   AND BVVD.SKD_VOY_NO = SUBSTR(@[vvd],5,4)   -- VVD (OPTIONAL 1)
                   AND BVVD.SKD_DIR_CD = SUBSTR(@[vvd],9,1)   -- VVD (OPTIONAL 1)
                   AND BVVD.POD_CD = @[pod_cd]                -- (OPTIONAL 3)
    #elseif (${sch_tp} == 'D')
                   AND VSKD.VPS_ETA_DT
                       BETWEEN TO_DATE(@[vps_eta_dt_start], 'YYYY-MM-DD')
                           AND TO_DATE(@[vps_eta_dt_end], 'YYYY-MM-DD') +1  -- DURATION (OPTIONAL 2)
                   AND VSKD.VPS_PORT_CD = @[pod_cd] -- (OPTIONAL 3)
    #elseif (${sch_tp} == 'B')
                   AND BKGM.BL_NO = @[bl_no]
    #end
    #if (${sch_tp} != 'B' && ${pod_cd} != '' && ${ts_flg} == 'Y')
                   AND BKGM.PST_RLY_PORT_CD = @[pod_cd]
    #end
    #if (${sch_tp} != 'B' && ${del_cd} != '' )
                   AND BKGM.DEL_CD LIKE @[del_cd] || '%'  -- DELIVERY PORT CD (OPTIONAL 4)
    #end
    #if (${pol_cd} != '')
                   AND BKGM.POL_CD = @[pol_cd]
    #end
    #if (${cust_cnt_cd} != '')
                   AND BCST.CUST_CNT_CD = @[cust_cnt_cd]
    #end
    #if (${cust_seq} != '')
                   AND BCST.CUST_SEQ = @[cust_seq]
    #end


	#if (${s_no} != '' && ${c_no} != '') 
				   AND BKGM.SC_NO = @[s_no]||@[c_no]
	#elseif (${s_no} != '') 
                   AND BKGM.SC_NO LIKE @[s_no]||'%'
	#elseif (${c_no} != '') 
                   AND BKGM.SC_NO LIKE '%'||@[c_no]
	#end


    #if (${cust_nm} != '') 
                   AND UPPER(BCST.CUST_NM) LIKE UPPER(@[cust_nm]) || '%'
    #end
    #if (${cust_ref_no} != '')
                   AND EXISTS (SELECT 1
                                 FROM BKG_REFERENCE
                                WHERE BKG_REF_TP_CD = 'BKPO'
                                  AND BKG_NO = BKGM.BKG_NO
                                  AND CUST_REF_NO_CTNT = @[cust_ref_no]
                           )
    #end

    #if (${sch_tp} == 'D')
                   AND BVVD.VSL_CD = VSKD.VSL_CD   -- Join의 방향성 때문에 Duration인 경우와 아닌 경우를 분리함
                   AND BVVD.SKD_VOY_NO = VSKD.SKD_VOY_NO
                   AND BVVD.SKD_DIR_CD = VSKD.SKD_DIR_CD
                   AND BVVD.POD_CD = VSKD.VPS_PORT_CD
                   AND BVVD.POD_CLPT_IND_SEQ = VSKD.CLPT_IND_SEQ
    #else
                   AND BVVD.VSL_CD = VSKD.VSL_CD(+)  -- Duration이 아닌경우에는 데이터를 추출하기 위하여 해당과 같이 처리한다. (20100106 Park Mangeon)
                   AND BVVD.SKD_VOY_NO = VSKD.SKD_VOY_NO(+)
                   AND BVVD.SKD_DIR_CD = VSKD.SKD_DIR_CD(+)
                   AND BVVD.POD_CD = VSKD.VPS_PORT_CD(+)
                   AND BVVD.POD_CLPT_IND_SEQ = VSKD.CLPT_IND_SEQ(+)
    #end
                   AND BKGM.BKG_NO =BVVD.BKG_NO
    #if ( ${ts_flg} != 'Y')
                   AND BKGM.POD_CD = BVVD.POD_CD  ------------ ts_flg != 'Y'
    #end
    #if ( ${ts_flg} == 'Y')
                   AND BKGM.PST_RLY_PORT_CD = BVVD.POD_CD  --------- ts_flg == 'Y'
    #end

                   AND BKGM.BKG_STS_CD NOT IN( 'X', 'S')
                   AND BKGM.BL_NO IS NOT NULL
                   AND BKGM.BKG_CGO_TP_CD IN ('F', 'R')                           -------- modified by 0672-01
                   AND BCST.BKG_NO = BKGM.BKG_NO
                   AND BCST.BKG_CUST_TP_CD IN ('C', 'N')
                   AND NVL(BCST.VAL_CD, '*') <> 'S'        -- modified 20100108 Park Mangeon
                   AND (
                            (BKGM.SAM_CNEE_NTFY_FLG = 'N'
                             AND BKGM.CUST_TO_ORD_FLG = 'N' -- Consignee, Notify둘다 생성
                            )
                         OR (BKGM.SAM_CNEE_NTFY_FLG = 'Y'  -- Notify는 Consignee와 같으므로 Consignee만 생성
                             AND BCST.BKG_CUST_TP_CD = 'C'
                            )
                         OR (BKGM.CUST_TO_ORD_FLG = 'Y'    -- Notify에게 연락하므로 Notify만 생성
                             AND BCST.BKG_CUST_TP_CD = 'N'
                            )
                       )
                    AND BKGM.BKG_NO = BCHG.BKG_NO
    #if ( ${frt_term_cd} == 'P')
                   AND BCHG.FRT_TERM_CD = 'P' 
    #elseif ( ${frt_term_cd} == 'C')
                   AND BCHG.FRT_TERM_CD = 'C' 
    #else 
 
    #end


    #if (${cntc_info_aval} != '')
        #if (${cntc_info_aval} == 'Y')
                       AND EXISTS 
       #elseif (${cntc_info_aval} == 'N')
                       AND NOT EXISTS 
       #end
                               ( 
                                SELECT 'Y'
                                  FROM BKG_ARR_NTC_DTL DTL
                                 WHERE DTL.BKG_NO = BKGM.BKG_NO
                                   AND ( DTL.FAX_NO IS NOT NULL OR DTL.NTC_EML IS NOT NULL) 
                               )
   #end


   #if (${donot_snd_flg} != '')
		AND EXISTS (SELECT 'Y' FROM BKG_ARR_NTC_DTL DTL WHERE DTL.BKG_NO = BKGM.BKG_NO AND (FAX_SND_FLG = 'N' OR EML_SND_FLG = 'N'))
   #end

   #if (${hub_loc_cd} != '')
		AND EXISTS ( SELECT 'Y' FROM BKG_CSTMS_ADV_BL  CBL WHERE CBL.CNT_CD = 'US' AND CBL.BL_NO = BKGM.BL_NO AND CBL.HUB_LOC_CD = @[hub_loc_cd])
   #end

   #if (${cstms_loc_cd} != '')
		AND EXISTS ( SELECT 'Y' FROM BKG_CSTMS_ADV_BL  CBL WHERE CBL.CNT_CD = 'US' AND CBL.BL_NO = BKGM.BL_NO AND CBL.CSTMS_LOC_CD = @[cstms_loc_cd])
   #end

    #if (${entr_tp} != '')
                    AND EXISTS (SELECT 'Y'
                                  FROM BKG_CSTMS_ADV_IBD CADV
                                 WHERE CADV.CNT_CD = 'US'
                                   AND CADV.BL_NO = BKGM.BL_NO
		        #if (${entr_tp} == 'I')
                                   AND CADV.CSTMS_CLR_TP_CD = 'I'
				#else 
                                   AND CADV.CSTMS_CLR_TP_CD != 'I'
			    #end
                               )
	#end
    #if (${hub_loc_cd} != '' || ${entrcstms_loc_cd} != '' || ${entr_tp} != '')
         /* POD US,CA 체크*/
        AND SUBSTR(BKGM.POD_CD,1,2) IN ('US','CA')
	#end
              ) BKGM
            , BKG_ARR_NTC_DTL ADTL
            , COM_FAX_SND_INFO FXSD
            , COM_EML_SND_INFO EMSD
        WHERE 1 = 1
          AND ADTL.BKG_NO(+)          = BKGM.BKG_NO
          AND ADTL.BKG_CUST_TP_CD(+)  = BKGM.BKG_CUST_TP_CD
          AND FXSD.FAX_SND_NO(+) = ADTL.FAX_NTC_SND_ID
          AND EMSD.EML_SND_NO(+) = ADTL.EML_NTC_SND_ID
       GROUP BY BKGM.BL_NO
             , BKGM.BKG_CUST_TP_CD
    #if (${is_validated} != '')
       HAVING MAX(BKGM.IS_VALIDATED) = @[is_validated]
    #end
         ) SUBQ
         , BKG_ARR_NTC ANTC
         , BKG_CSTMS_ADV_IBD CADV
         , BKG_CSTMS_ADV_BL  CBL
         , (SELECT USR_ID
                 , AN_RMK
              FROM BKG_USR_DFLT_SET
             WHERE USR_ID = @[usr_id] ) USET
         , COM_USER         CUSR
         , BKG_VVD          DVVD  -- DISCHARGE VVD
         , MDM_LOCATION     LOC
         , MDM_COUNTRY      MDM
    WHERE 1=1
          AND ANTC.BKG_NO(+)  = SUBQ.BKG_NO
          AND CADV.CNT_CD (+) = SUBQ.CSTMS_CLR_TP_CNT_CD
          AND CADV.BL_NO(+)   = SUBQ.BL_NO
          AND CBL.CNT_CD (+)  = SUBQ.CSTMS_CLR_TP_CNT_CD
          AND CBL.BL_NO(+)    = SUBQ.BL_NO
          AND USET.USR_ID(+)  = SUBQ.LOGIN_USR_ID
          AND CUSR.USR_ID(+)  = SUBQ.SND_USR_ID
          AND DVVD.BKG_NO(+)  = SUBQ.BKG_NO
          AND DVVD.POD_CD(+)  = SUBQ.POD_CD
          AND LOC.LOC_CD(+)   = SUBQ.LOC_CD
          AND MDM.CNT_CD(+)   = LOC.CNT_CD
    ORDER BY SUBQ.BL_NO, SUBQ.BKG_CUST_TP_CD
) INQR
  LEFT OUTER JOIN BKG_ARR_NTC_WD NTWD
    ON ( NTWD.AN_SEQ    = INQR.AN_SEQ )
  LEFT OUTER JOIN BKG_HRD_CDG_CTNT HDG
    ON ( HDG.HRD_CDG_ID  = 'ARR_NTC_MRD_ID'
         AND HDG.ATTR_CTNT1  = INQR.CONTI_CD       -- CONTINENT CODE
         AND HDG.ATTR_CTNT2  = INQR.CNT_CD
         AND HDG.ATTR_CTNT3  = NTWD.ARR_PRV_FOM_CD
    )

WHERE 1=1

  #if (${an_snt_sts} == 'Y')
	AND UPPER(AN_SENT) != 'NO'
  #elseif (${an_snt_sts} == 'N')
	AND UPPER(AN_SENT) = 'NO' 
  #end			]]></sql>
			<params>
				<param name="fax_scs_cd" type="12" value="" out="N"/>
				<param name="eml_scs_cd" type="12" value="" out="N"/>
				<param name="ts_flg" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="vps_eta_dt_start" type="12" value="" out="N"/>
				<param name="vps_eta_dt_end" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="s_no" type="12" value="" out="N"/>
				<param name="c_no" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="cust_ref_no" type="12" value="" out="N"/>
				<param name="hub_loc_cd" type="12" value="" out="N"/>
				<param name="cstms_loc_cd" type="12" value="" out="N"/>
				<param name="is_validated" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
