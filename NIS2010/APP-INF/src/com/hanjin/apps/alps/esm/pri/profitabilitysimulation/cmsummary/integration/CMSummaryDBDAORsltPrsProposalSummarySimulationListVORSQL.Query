<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CMSummaryDBDAORsltPrsProposalSummarySimulationListVORSQL">
			<desc><![CDATA[* 2011.06.29 김민아 [CHM-201111837] Split 20-R4J Rule Upgrade 관련 소스품질 향상을 위한 조치 건 : DUAL Table을 부적절하게 사용한 DBDAO의 SQL을 .Query로 이동   ]]></desc>
			<sql><![CDATA[
WITH VW_SIMUL_REV AS (
		 SELECT 'I' AS APPLICATION
			 ,'NULL' AS APR_OFC_CD
			 , 'IAON' AS CUST_TP_CD
			 ,'NULL' AS ORG_LOC_TP_CD
			 ,'NULL' AS ORG_LOC_DEF_CD
			 ,'NULL' AS DEST_LOC_TP_CD
			 ,'NULL' AS DEST_LOC_DEF_CD
			 , '' AS SCG_CD
			 , 0 AS SCORE

			 , TO_DATE(NULL) AS EFF_DT 
			 , TO_DATE(NULL) AS EXP_DT 
			 , 'NULL' AS CALC_TP_CD
			 , 0 AS AMOUNT
		 FROM DUAL
 
#foreach( ${obj} in ${list_obj_sheet1} )
        UNION ALL 
        SELECT  '$obj.getApplication()' AS APPLICATION 
               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD 
               ,'$obj.getCustTpCd()' AS CUST_TP_CD 
               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD 
               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD 
               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD 
               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				
               ,'$obj.getChgCd()' AS SCG_CD 
               ,$obj.getScore() AS SCORE 
               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT 
               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT 
               ,'$obj.getCalcTpCd()' AS CALC_TP_CD 
               ,$obj.getAmount() AS AMOUNT 
         FROM  DUAL
#end
), 
 VW_SIMUL_RATE AS (
		 SELECT 'I' AS APPLICATION
			 ,'NULL' AS APR_OFC_CD
			 , 'IAON' AS CUST_TP_CD
			 ,'NULL' AS ORG_LOC_TP_CD
			 ,'NULL' AS ORG_LOC_DEF_CD
			 ,'NULL' AS DEST_LOC_TP_CD
			 ,'NULL' AS DEST_LOC_DEF_CD
			 , '' AS SCG_CD
			 , 0 AS SCORE

			 , TO_DATE(NULL) AS EFF_DT 
			 , TO_DATE(NULL) AS EXP_DT 
			 , 'NULL' AS CALC_TP_CD
			 , 0 AS AMOUNT
		 FROM DUAL

#foreach( ${obj} in ${list_obj_sheet2} )
        UNION ALL 
        SELECT  '$obj.getApplication()' AS APPLICATION 
               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD 
               ,'$obj.getCustTpCd()' AS CUST_TP_CD 
               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD 
               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD 
               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD 
               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				
               ,'$obj.getChgCd()' AS SCG_CD 
               ,$obj.getScore() AS SCORE 
               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT 
               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT 
               ,'$obj.getCalcTpCd()' AS CALC_TP_CD 
               ,$obj.getAmount() AS AMOUNT 
         FROM  DUAL
#end
), 
 VW_SIMUL_SCG AS (
		 SELECT 'I' AS APPLICATION
			 ,'NULL' AS APR_OFC_CD
			 , 'IAON' AS CUST_TP_CD
			 ,'NULL' AS ORG_LOC_TP_CD
			 ,'NULL' AS ORG_LOC_DEF_CD
			 ,'NULL' AS DEST_LOC_TP_CD
			 ,'NULL' AS DEST_LOC_DEF_CD
			 , '' AS SCG_CD
			 , 0 AS SCORE

			 , TO_DATE(NULL) AS EFF_DT 
			 , TO_DATE(NULL) AS EXP_DT 
			 , 'NULL' AS CALC_TP_CD
			 , 0 AS AMOUNT
		 FROM DUAL

#foreach( ${obj} in ${list_obj_sheet3} )
        UNION ALL 
        SELECT  '$obj.getApplication()' AS APPLICATION 
               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD 
               ,'$obj.getCustTpCd()' AS CUST_TP_CD 
               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD 
               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD 
               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD 
               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				
               ,'$obj.getChgCd()' AS SCG_CD 
               ,$obj.getScore() AS SCORE 
               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT 
               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT 
               ,'$obj.getCalcTpCd()' AS CALC_TP_CD 
               ,$obj.getAmount() AS AMOUNT 
         FROM  DUAL
#end
) ,
 VW_SIMUL_COST AS (
		 SELECT 'I' AS APPLICATION
			 ,'NULL' AS APR_OFC_CD
			 , 'IAON' AS CUST_TP_CD
			 ,'NULL' AS ORG_LOC_TP_CD
			 ,'NULL' AS ORG_LOC_DEF_CD
			 ,'NULL' AS DEST_LOC_TP_CD
			 ,'NULL' AS DEST_LOC_DEF_CD
			 , '' AS SCG_CD
			 , 0 AS SCORE

			 , TO_DATE(NULL) AS EFF_DT 
			 , TO_DATE(NULL) AS EXP_DT 
			 , 'NULL' AS CALC_TP_CD
			 , 0 AS AMOUNT
		 FROM DUAL

#foreach( ${obj} in ${list_obj_sheet4} )
        UNION ALL 
        SELECT  '$obj.getApplication()' AS APPLICATION 
               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD 
               ,'$obj.getCustTpCd()' AS CUST_TP_CD 
               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD 
               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD 
               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD 
               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				
               ,'$obj.getChgCd()' AS SCG_CD 
               ,$obj.getScore() AS SCORE 
               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT 
               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT 
               ,'$obj.getCalcTpCd()' AS CALC_TP_CD 
               ,$obj.getAmount() AS AMOUNT 
         FROM  DUAL
#end
) ,
 VW_SIMUL_LOAD AS (
		 SELECT 'I' AS APPLICATION
			 ,'NULL' AS APR_OFC_CD
			 , 'IAON' AS CUST_TP_CD
			 ,'NULL' AS ORG_LOC_TP_CD
			 ,'NULL' AS ORG_LOC_DEF_CD
			 ,'NULL' AS DEST_LOC_TP_CD
			 ,'NULL' AS DEST_LOC_DEF_CD
			 , '' AS SCG_CD
			 , 0 AS SCORE

			 , TO_DATE(NULL) AS EFF_DT 
			 , TO_DATE(NULL) AS EXP_DT 
			 , 'NULL' AS CALC_TP_CD
			 , 0 AS AMOUNT
		 FROM DUAL

#foreach( ${obj} in ${list_obj_sheet5} )
        UNION ALL 
        SELECT  '$obj.getApplication()' AS APPLICATION 
               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD 
               ,'$obj.getCustTpCd()' AS CUST_TP_CD 
               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD 
               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD 
               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD 
               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				
               ,'$obj.getChgCd()' AS SCG_CD 
               ,$obj.getScore() AS SCORE 
               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT 
               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT 
               ,'$obj.getCalcTpCd()' AS CALC_TP_CD 
               ,$obj.getAmount() AS AMOUNT 
         FROM  DUAL
#end
) 

, VW_DT AS (
  SELECT  /*+ MATERIALIZE */
          DT_REV.CALC_TP_CD   REV_CALC_TP_CD,
          DT_REV.AMOUNT       REV_AMOUNT,
          DT_REV.EFF_DT       REV_EFF_DT,
          DT_REV.EXP_DT       REV_EXP_DT,
          DT_REV.SCORE        REV_SCORE,
          DT_REV.CUST_TP_CD   REV_CUST_TP_CD,
          DT_REV.APR_OFC_CD   REV_APR_OFC_CD,
          DT_RATE.SCG_CD      RATE_SCG_CD,
          DT_RATE.CALC_TP_CD  RATE_CALC_TP_CD,
          DT_RATE.AMOUNT      RATE_AMOUNT,
          DT_RATE.EFF_DT      RATE_EFF_DT,
          DT_RATE.EXP_DT      RATE_EXP_DT,
          DT_RATE.SCORE       RATE_SCORE,
          DT_RATE.CUST_TP_CD  RATE_CUST_TP_CD,
          DT_RATE.APR_OFC_CD  RATE_APR_OFC_CD,
          DT_SCG.CALC_TP_CD   SCG_CALC_TP_CD,
          DT_SCG.AMOUNT       SCG_AMOUNT,
          DT_SCG.EFF_DT       SCG_EFF_DT,
          DT_SCG.EXP_DT       SCG_EXP_DT,
          DT_SCG.SCORE        SCG_SCORE,
          DT_SCG.CUST_TP_CD   SCG_CUST_TP_CD,
          DT_SCG.APR_OFC_CD   SCG_APR_OFC_CD,
          DT_COST.CALC_TP_CD  COST_CALC_TP_CD,
          DT_COST.AMOUNT      COST_AMOUNT,
          DT_COST.EFF_DT      COST_EFF_DT,
          DT_COST.EXP_DT      COST_EXP_DT,
          DT_COST.SCORE       COST_SCORE,
          DT_COST.CUST_TP_CD  COST_CUST_TP_CD,
          DT_COST.APR_OFC_CD  COST_APR_OFC_CD,
          DT_LOAD.CALC_TP_CD  LOAD_CALC_TP_CD,
          DT_LOAD.AMOUNT      LOAD_AMOUNT,
          DT_LOAD.EFF_DT      LOAD_EFF_DT,
          DT_LOAD.EXP_DT      LOAD_EXP_DT,
          DT_LOAD.SCORE       LOAD_SCORE,
          DT_LOAD.CUST_TP_CD  LOAD_CUST_TP_CD,
          DT_LOAD.APR_OFC_CD  LOAD_APR_OFC_CD,
      ---------------------------------------------------------------
      -- 추가된 쿼리
      ---------------------------------------------------------------
	  DT_REV.ORG_LOC_TP_CD AS REV_ORG_LOC_TP_CD,
	  DT_REV.ORG_LOC_DEF_CD AS REV_ORG_LOC_DEF_CD,
	  DT_REV.DEST_LOC_TP_CD AS REV_DEST_LOC_TP_CD,
	  DT_REV.DEST_LOC_DEF_CD AS REV_DEST_LOC_DEF_CD,

	  DT_RATE.ORG_LOC_TP_CD AS RATE_ORG_LOC_TP_CD,
	  DT_RATE.ORG_LOC_DEF_CD AS RATE_ORG_LOC_DEF_CD,
	  DT_RATE.DEST_LOC_TP_CD AS RATE_DEST_LOC_TP_CD,
	  DT_RATE.DEST_LOC_DEF_CD AS RATE_DEST_LOC_DEF_CD,
	  
	  DT_SCG.ORG_LOC_TP_CD AS SCG_ORG_LOC_TP_CD,
	  DT_SCG.ORG_LOC_DEF_CD AS SCG_ORG_LOC_DEF_CD,
	  DT_SCG.DEST_LOC_TP_CD AS SCG_DEST_LOC_TP_CD,
	  DT_SCG.DEST_LOC_DEF_CD AS SCG_DEST_LOC_DEF_CD,
	  
	  DT_COST.ORG_LOC_TP_CD AS COST_ORG_LOC_TP_CD,
	  DT_COST.ORG_LOC_DEF_CD AS COST_ORG_LOC_DEF_CD,
	  DT_COST.DEST_LOC_TP_CD AS COST_DEST_LOC_TP_CD,
	  DT_COST.DEST_LOC_DEF_CD AS COST_DEST_LOC_DEF_CD,

	  DT_LOAD.ORG_LOC_TP_CD AS LOAD_ORG_LOC_TP_CD,
	  DT_LOAD.ORG_LOC_DEF_CD AS LOAD_ORG_LOC_DEF_CD,
	  DT_LOAD.DEST_LOC_TP_CD AS LOAD_DEST_LOC_TP_CD,
	  DT_LOAD.DEST_LOC_DEF_CD AS LOAD_DEST_LOC_DEF_CD
---------------------------------------------------------------
  FROM    VW_SIMUL_REV   DT_REV,
          VW_SIMUL_RATE  DT_RATE,
          VW_SIMUL_SCG   DT_SCG,
          VW_SIMUL_COST  DT_COST,
          VW_SIMUL_LOAD  DT_LOAD
  WHERE   (DT_REV.SCORE+DT_RATE.SCORE+DT_SCG.SCORE+DT_COST.SCORE+DT_LOAD.SCORE) > 0

)
#if (${frm_contract_type} != 'R') 
, VW_MN AS (
        SELECT PROP_OFC_CD
                , PROP_NO
                , AMDT_SEQ
                , PROP_APRO_OFC_CD
                , PRC_CTRT_CUST_TP_CD
                , CTRT_EFF_DT
                , CTRT_EXP_DT
                , SVC_SCP_CD
                , SIMUL_CALC_TP_CD_REV
                , SIMUL_AMOUNT_REV
                , SIMUL_EFF_DT_REV
                , SIMUL_EXP_DT_REV
                , SIMUL_CALC_TP_CD_RATE
                , SIMUL_AMOUNT_RATE
                , SIMUL_EFF_DT_RATE
                , SIMUL_EXP_DT_RATE
                , SIMUL_CALC_TP_CD_SCG
                , SIMUL_AMOUNT_SCG
                , SIMUL_EFF_DT_SCG
                , SIMUL_EXP_DT_SCG
                , SIMUL_CALC_TP_CD_COST
                , SIMUL_AMOUNT_COST
                , SIMUL_EFF_DT_COST
                , SIMUL_EXP_DT_COST
                , SIMUL_CALC_TP_CD_LOAD
                , SIMUL_AMOUNT_LOAD
                , SIMUL_EFF_DT_LOAD
                , SIMUL_EXP_DT_LOAD
                , SIMUL_SCG_CD
	      ---------------------------------------------------------------
	      -- 추가된 쿼리
	      ---------------------------------------------------------------
		, ORI_CNT_CD
		, ORI_RGN_CD
		, DEST_CNT_CD
		, DEST_RGN_CD
		, GEN_SPCL_RT_TP_CD
                , CMDT_HDR_SEQ
                , ROUT_SEQ
		---------------------------------------------------------------
                , CASE WHEN SIMUL_EXP_DT_REV < CTRT_EFF_DT OR SIMUL_EFF_DT_REV > CTRT_EXP_DT THEN 0
                       WHEN SIMUL_EFF_DT_REV <= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - CTRT_EFF_DT
                       WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - SIMUL_EFF_DT_REV
                       WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
                       ELSE 0
                       END AS SIMUL_DAYS_REV
                , CASE WHEN SIMUL_EXP_DT_RATE < CTRT_EFF_DT OR SIMUL_EFF_DT_RATE > CTRT_EXP_DT THEN 0
                       WHEN SIMUL_EFF_DT_RATE <= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - CTRT_EFF_DT
                       WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - SIMUL_EFF_DT_RATE
                       WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
                       ELSE 0
                       END AS SIMUL_DAYS_RATE
                , CASE WHEN SIMUL_EXP_DT_SCG < CTRT_EFF_DT OR SIMUL_EFF_DT_SCG > CTRT_EXP_DT THEN 0
                       WHEN SIMUL_EFF_DT_SCG <= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - CTRT_EFF_DT
                       WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - SIMUL_EFF_DT_SCG
                       WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
                       ELSE 0
                       END AS SIMUL_DAYS_SCG
                , CASE WHEN SIMUL_EXP_DT_COST < CTRT_EFF_DT OR SIMUL_EFF_DT_COST > CTRT_EXP_DT THEN 0
                       WHEN SIMUL_EFF_DT_COST <= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - CTRT_EFF_DT
                       WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - SIMUL_EFF_DT_COST
                       WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
                       ELSE 0
                       END AS SIMUL_DAYS_COST
                , CASE WHEN SIMUL_EXP_DT_LOAD < CTRT_EFF_DT OR SIMUL_EFF_DT_LOAD > CTRT_EXP_DT THEN 0
                       WHEN SIMUL_EFF_DT_LOAD <= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - CTRT_EFF_DT
                       WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - SIMUL_EFF_DT_LOAD
                       WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
                       ELSE 0
                       END AS SIMUL_DAYS_LOAD
                , CTRT_EXP_DT - CTRT_EFF_DT AS TOT_CTRT_DAYS
        FROM (
                SELECT  /*+ LEADING(MN) */ 
                          MN.PROP_OFC_CD
                        , MN.PROP_NO
                        , MN.AMDT_SEQ
                        , MN.PROP_APRO_OFC_CD
                        , RATE_SCG_CD AS SIMUL_SCG_CD
                        , MN.PRC_CTRT_CUST_TP_CD
                        , TO_DATE(CTRT_EFF_DT) AS CTRT_EFF_DT
                        , TO_DATE(CTRT_EXP_DT) AS CTRT_EXP_DT
                        , MN.SVC_SCP_CD
                        , REV_CALC_TP_CD AS SIMUL_CALC_TP_CD_REV
                        , REV_AMOUNT AS SIMUL_AMOUNT_REV
                        , REV_EFF_DT AS SIMUL_EFF_DT_REV
                        , REV_EXP_DT AS SIMUL_EXP_DT_REV
                        , RATE_CALC_TP_CD AS SIMUL_CALC_TP_CD_RATE
                        , RATE_AMOUNT AS SIMUL_AMOUNT_RATE
                        , RATE_EFF_DT AS SIMUL_EFF_DT_RATE
                        , RATE_EXP_DT AS SIMUL_EXP_DT_RATE
                        , SCG_CALC_TP_CD AS SIMUL_CALC_TP_CD_SCG
                        , SCG_AMOUNT AS SIMUL_AMOUNT_SCG
                        , SCG_EFF_DT AS SIMUL_EFF_DT_SCG
                        , SCG_EXP_DT AS SIMUL_EXP_DT_SCG
                        , COST_CALC_TP_CD AS SIMUL_CALC_TP_CD_COST
                        , COST_AMOUNT AS SIMUL_AMOUNT_COST
                        , COST_EFF_DT AS SIMUL_EFF_DT_COST
                        , COST_EXP_DT AS SIMUL_EXP_DT_COST
                        , LOAD_CALC_TP_CD AS SIMUL_CALC_TP_CD_LOAD
                        , LOAD_AMOUNT AS SIMUL_AMOUNT_LOAD
                        , LOAD_EFF_DT AS SIMUL_EFF_DT_LOAD
                        , LOAD_EXP_DT AS SIMUL_EXP_DT_LOAD
			      ---------------------------------------------------------------
			      -- 추가된 쿼리
			      ---------------------------------------------------------------
		        , ORI_CNT_CD
		        , ORI_RGN_CD
		        , DEST_CNT_CD
		        , DEST_RGN_CD
		        , GEN_SPCL_RT_TP_CD
                        , CMDT_HDR_SEQ
                        , ROUT_SEQ
                        , ROW_NUMBER() OVER( PARTITION BY MN.PROP_NO,MN.AMDT_SEQ, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ ORDER BY (REV_SCORE+RATE_SCORE+SCG_SCORE+COST_SCORE+LOAD_SCORE) DESC ) RN
			--------------------------------------------------------------------------------------

                FROM
                      VW_DT  DT,
                     (
			      SELECT  /*  LEADING(X MN) USE_NL(X MN PTY DUR SCP_MN CTP) */
				      MN.PROP_OFC_CD,
				      MN.PROP_NO,
				      MN.AMDT_SEQ,
				      MN.PROP_APRO_OFC_CD,
				      CTP.PRC_CTRT_CUST_TP_CD,
				      SCP_MN.SVC_SCP_CD,
				      CTRT_EXP_DT,
				      CTRT_EFF_DT,
				      ROWNUM
				      , ORI.CNT_CD AS  ORI_CNT_CD
				      , ORI.RGN_CD AS  ORI_RGN_CD
				      , DEST.CNT_CD AS DEST_CNT_CD
				      , DEST.RGN_CD AS DEST_RGN_CD
				      , ORI.GEN_SPCL_RT_TP_CD
				      , ORI.CMDT_HDR_SEQ
				      , ORI.ROUT_SEQ
			      FROM   (SELECT  PROP_NO
				      FROM    PRI_PRS_CM_SMRY_SIM_TMP
				      WHERE   PRC_CTRT_TP_CD = 'S'
				      GROUP BY PROP_NO
				     ) X,
				      PRI_SP_MN            MN,
				      PRI_SP_CTRT_PTY      PTY,
				      PRI_SP_SCP_DUR       DUR,
				      PRI_SP_SCP_MN        SCP_MN,
				      PRI_SP_CTRT_CUST_TP  CTP,
				      ---------------------------------------------------------------
				      -- 추가된 쿼리
				      ---------------------------------------------------------------
 				      (
					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD
					       FROM (
							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
								, (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								  ) AS CNT_CD
								, (
										    SELECT RGN_CD 
										    FROM MDM_LOCATION 
										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
								 ) AS RGN_CD

							FROM	(
									SELECT  PROP_NO , 0 AS AMDT_SEQ , @[frm_svc_scp_cd] AS SVC_SCP_CD
									FROM    PRI_PRS_CM_SMRY_SIM_TMP
									WHERE   PRC_CTRT_TP_CD = 'S'
									GROUP BY PROP_NO
								)  MN_SET
								, PRI_SP_SCP_RT_ROUT_PNT A
								, PRI_SP_SCP_GRP_LOC B
								, PRI_SP_SCP_GRP_LOC_DTL C
							WHERE MN_SET.PROP_NO = A.PROP_NO
								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
								AND A.ORG_DEST_TP_CD = 'O'
								AND A.SRC_INFO_CD <> 'AD'
								AND A.PROP_NO     = B.PROP_NO(+)
								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
								AND B.PROP_NO     = C.PROP_NO(+)
								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
								AND C.SRC_INFO_CD(+) <> 'AD'
						)
					) ORI,
 				        (
					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD
					       FROM (
							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
								, (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								  ) AS CNT_CD
								, (
										    SELECT RGN_CD 
										    FROM MDM_LOCATION 
										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
								 ) AS RGN_CD

							FROM	(
									SELECT  PROP_NO , 0 AS AMDT_SEQ , @[frm_svc_scp_cd] AS SVC_SCP_CD
									FROM    PRI_PRS_CM_SMRY_SIM_TMP
									WHERE   PRC_CTRT_TP_CD = 'S'
									GROUP BY PROP_NO
								)  MN_SET
								, PRI_SP_SCP_RT_ROUT_PNT A
								, PRI_SP_SCP_GRP_LOC B
								, PRI_SP_SCP_GRP_LOC_DTL C
							WHERE MN_SET.PROP_NO = A.PROP_NO
								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
								AND A.ORG_DEST_TP_CD = 'D'
								AND A.SRC_INFO_CD <> 'AD'
								AND A.PROP_NO     = B.PROP_NO(+)
								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
								AND B.PROP_NO     = C.PROP_NO(+)
								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
								AND C.SRC_INFO_CD(+) <> 'AD'
						)
					) DEST
				      ---------------------------------------------------------------
			      WHERE   X.PROP_NO = MN.PROP_NO
			      AND     MN.AMDT_SEQ = 0

				      ---------------------------------------------------------------
				      -- 추가된 쿼리
				      ---------------------------------------------------------------
			      AND     SCP_MN.PROP_NO = ORI.PROP_NO
			      AND     SCP_MN.AMDT_SEQ = ORI.AMDT_SEQ
			      AND     SCP_MN.SVC_SCP_CD = ORI.SVC_SCP_CD
			      
			      AND     SCP_MN.PROP_NO = DEST.PROP_NO
			      AND     SCP_MN.AMDT_SEQ = DEST.AMDT_SEQ
			      AND     SCP_MN.SVC_SCP_CD = DEST.SVC_SCP_CD

					AND    ORI.PROP_NO = DEST.PROP_NO
					AND    ORI.AMDT_SEQ = DEST.AMDT_SEQ
					AND    ORI.SVC_SCP_CD = DEST.SVC_SCP_CD

				  AND    ORI.GEN_SPCL_RT_TP_CD = DEST.GEN_SPCL_RT_TP_CD
				  AND    ORI.CMDT_HDR_SEQ = DEST.CMDT_HDR_SEQ 
				  AND    ORI.ROUT_SEQ = DEST.ROUT_SEQ
				      ---------------------------------------------------------------


			      AND     MN.PROP_NO = PTY.PROP_NO
			      AND     MN.AMDT_SEQ = PTY.AMDT_SEQ
			      AND     PTY.PRC_CTRT_PTY_TP_CD = 'C'
			      AND     MN.PROP_NO = DUR.PROP_NO
			      AND     MN.AMDT_SEQ = DUR.AMDT_SEQ
			      AND     MN.PROP_NO = SCP_MN.PROP_NO
			      AND     MN.AMDT_SEQ = SCP_MN.AMDT_SEQ
			      AND     MN.PROP_NO = CTP.PROP_NO
			      AND     MN.AMDT_SEQ = CTP.AMDT_SEQ
			      AND     SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD
			      AND     CTP.PRC_CTRT_PTY_TP_CD = 'C'
			      AND     SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]
                     )  MN
                WHERE   INSTR(REV_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(REV_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, REV_APR_OFC_CD)
                        AND INSTR(RATE_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(RATE_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, RATE_APR_OFC_CD)
                        AND INSTR(SCG_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(SCG_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, SCG_APR_OFC_CD)
                        AND INSTR(COST_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(COST_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, COST_APR_OFC_CD)
                        AND INSTR(LOAD_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(LOAD_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, LOAD_APR_OFC_CD)
			---------------------------------------------------------------
			-- 추가된 쿼리
			---------------------------------------------------------------
			AND   DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,  REV_ORG_LOC_DEF_CD )
			AND   DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,  REV_DEST_LOC_DEF_CD )

			AND   DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,  RATE_ORG_LOC_DEF_CD )
			AND   DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,  RATE_DEST_LOC_DEF_CD )

			AND   DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,  SCG_ORG_LOC_DEF_CD )
			AND   DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,  SCG_DEST_LOC_DEF_CD )

			AND   DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,  COST_ORG_LOC_DEF_CD )
			AND   DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,  COST_DEST_LOC_DEF_CD )

			AND   DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,  LOAD_ORG_LOC_DEF_CD )
			AND   DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,  LOAD_DEST_LOC_DEF_CD )

			 ---------------------------------------------------------------
			  
			

        ) MN
        WHERE MN.RN = 1
),
VW_RESULT_MN AS (
	SELECT  /*+ INDEX(CMDT_ROUT PRI_SP_SCP_RT_CMDT_ROUT(PROP_NO, AMDT_SEQ, SVC_SCP_CD, PRS_CGO_TP_CD, PRS_RAT_UT_CD) ) */  --> 힌트추가
		 CMDT_ROUT.PROP_NO
		, CMDT_ROUT.AMDT_SEQ
		, CMDT_ROUT.SVC_SCP_CD
		, CMDT_ROUT.GEN_SPCL_RT_TP_CD
		, CMDT_ROUT.CMDT_HDR_SEQ
		, CMDT_ROUT.ROUT_SEQ
		, CMDT_ROUT.RT_SEQ
		, CMDT_ROUT.FEU_TEU
		, MN.CTRT_EFF_DT
		, MN.CTRT_EXP_DT 
		, MN.SIMUL_SCG_CD


		, NVL(CMDT_ROUT.PRS_ESTM_LOD_QTY,0)  AS PRS_ESTM_LOD_QTY
		, NVL(CMDT_ROUT.PROP_FRT_RT_AMT,0)   AS RATE -- RATE
		, NVL(CMDT_ROUT.PRS_SCG_AMT , 0) AS SURCHARGE  -- SURCHARGE
		, NVL(CMDT_ROUT.PRS_PFIT_CM_UC_AMT,0) AS COST_TRADE-- COST, TRADE
		, NVL(CMDT_ROUT.PRS_RESPB_CM_UC_AMT,0) AS COST_OFFICE-- COST, OFFICE
		, NVL(CMDT_ROUT.PRS_RESPB_OPFIT_UC_AMT,0) AS COST_OP_OFFICE-- COST, OP, OFFICE
		
		, CMDT_ROUT.PRS_RAT_UT_CD
		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) AS UT_CD_2_1
		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) AS UT_CD_1_1

		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_REV / MN.TOT_CTRT_DAYS) AS CALC_RATE_REV
		, MN.SIMUL_CALC_TP_CD_REV
		, DECODE(MN.SIMUL_CALC_TP_CD_REV,'+', MN.SIMUL_AMOUNT_REV   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_REV )  AS SIMUL_AMOUNT_REV

		, DECODE(MN.TOT_CTRT_DAYS,0,0,MN.SIMUL_DAYS_RATE / MN.TOT_CTRT_DAYS) AS CALC_RATE_RATE
		, MN.SIMUL_CALC_TP_CD_RATE
		, DECODE(MN.SIMUL_CALC_TP_CD_RATE,'+', MN.SIMUL_AMOUNT_RATE   *  CMDT_ROUT.FEU_TEU,MN.SIMUL_AMOUNT_RATE ) AS SIMUL_AMOUNT_RATE

		, DECODE(MN.TOT_CTRT_DAYS,0,0,MN.SIMUL_DAYS_SCG / MN.TOT_CTRT_DAYS) AS CALC_RATE_SCG
		, MN.SIMUL_CALC_TP_CD_SCG
		, DECODE(MN.SIMUL_CALC_TP_CD_SCG,'+', MN.SIMUL_AMOUNT_SCG   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_SCG)  AS SIMUL_AMOUNT_SCG

		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_COST / MN.TOT_CTRT_DAYS) AS CALC_RATE_COST
		, MN.SIMUL_CALC_TP_CD_COST
		, DECODE(MN.SIMUL_CALC_TP_CD_COST,'+', MN.SIMUL_AMOUNT_COST   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_COST ) AS SIMUL_AMOUNT_COST

		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_LOAD / MN.TOT_CTRT_DAYS) AS CALC_RATE_LOAD
		, MN.SIMUL_CALC_TP_CD_LOAD
		, DECODE(MN.SIMUL_CALC_TP_CD_LOAD,'+', MN.SIMUL_AMOUNT_LOAD   *  CMDT_ROUT.FEU_TEU , MN.SIMUL_AMOUNT_LOAD) AS SIMUL_AMOUNT_LOAD
		----------------------------------------------------------------------------------
		, NVL( CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' 
					THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  
				ELSE	
						 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2
		  END ,0) AS PRS_ESTM_LOD_QTY_FOR_RATE    --  
		----------------------------------------------------------------------------------
		
	FROM 	VW_MN  MN
		,(		
			SELECT MN.PROP_NO
				, MN.AMDT_SEQ
				, MN.SVC_SCP_CD
				, CMDT_ROUT.GEN_SPCL_RT_TP_CD
				, CMDT_ROUT.CMDT_HDR_SEQ
				, CMDT_ROUT.ROUT_SEQ
				, RT.RT_SEQ
				, CMDT_ROUT.PRS_ESTM_LOD_QTY
				, RT.PROP_FRT_RT_AMT
				, RT.PRS_SCG_AMT
				, RT.PRS_PFIT_CM_UC_AMT
				, RT.PRS_RESPB_CM_UC_AMT
				, RT.PRS_RESPB_OPFIT_UC_AMT
				, CMDT_ROUT.PRS_RAT_UT_CD
				,DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS FEU_TEU
			FROM 	(SELECT DISTINCT PROP_NO, AMDT_SEQ,SVC_SCP_CD FROM VW_MN ) MN
				, PRI_SP_SCP_RT_CMDT_ROUT CMDT_ROUT
				, PRI_SP_SCP_RT RT


#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_MN MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_MN MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
#if( $slane_list.size() != 0 ) 
				,(
					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.GEN_SPCL_RT_TP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ
					FROM VW_MN MN_SET
						, PRI_SP_SCP_RT RT
					WHERE MN_SET.PROP_NO = RT.PROP_NO
						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ
						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD
	#if( $slane_list.size() != 0 ) 
		AND (RT.VSL_SLAN_CD) IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
				) SLANE
#end	
			WHERE MN.PROP_NO = CMDT_ROUT.PROP_NO
				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ
				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD

#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = ORI_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = DEST_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
#if( $slane_list.size() != 0 ) 
				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = SLANE.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ
#end
				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)
				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)
				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = RT.GEN_SPCL_RT_TP_CD(+)
				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)
				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)
				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)
				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)
				-- BY CARGO TYPE
				#if (${crg_tp_str} != '' )
					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
				#end

	) CMDT_ROUT
	WHERE  CMDT_ROUT.PROP_NO			= MN.PROP_NO(+)
		AND CMDT_ROUT.AMDT_SEQ			= MN.AMDT_SEQ(+)
		AND CMDT_ROUT.SVC_SCP_CD		= MN.SVC_SCP_CD(+)
		AND CMDT_ROUT.GEN_SPCL_RT_TP_CD		= MN.GEN_SPCL_RT_TP_CD(+)
		AND CMDT_ROUT.CMDT_HDR_SEQ		= MN.CMDT_HDR_SEQ(+)
		AND CMDT_ROUT.ROUT_SEQ			= MN.ROUT_SEQ(+)

)
#end

#if (${frm_contract_type} != 'S') 
,
VW_RFA_MN AS (
	SELECT PROP_OFC_CD
		, PROP_NO
		, AMDT_SEQ
		, PROP_APRO_OFC_CD
		, PRC_CTRT_CUST_TP_CD
		, CTRT_EFF_DT
		, CTRT_EXP_DT
		, SVC_SCP_CD
		, SIMUL_CALC_TP_CD_REV
		, SIMUL_AMOUNT_REV
		, SIMUL_EFF_DT_REV
		, SIMUL_EXP_DT_REV
		, SIMUL_CALC_TP_CD_RATE
		, SIMUL_AMOUNT_RATE
		, SIMUL_EFF_DT_RATE
		, SIMUL_EXP_DT_RATE
		, SIMUL_CALC_TP_CD_SCG
		, SIMUL_AMOUNT_SCG
		, SIMUL_EFF_DT_SCG
		, SIMUL_EXP_DT_SCG
		, SIMUL_CALC_TP_CD_COST
		, SIMUL_AMOUNT_COST
		, SIMUL_EFF_DT_COST
		, SIMUL_EXP_DT_COST
		, SIMUL_CALC_TP_CD_LOAD
		, SIMUL_AMOUNT_LOAD
		, SIMUL_EFF_DT_LOAD
		, SIMUL_EXP_DT_LOAD
		, SIMUL_SCG_CD
	      ---------------------------------------------------------------
	      -- 추가된 쿼리
	      ---------------------------------------------------------------
		, ORI_CNT_CD
		, ORI_RGN_CD
		, DEST_CNT_CD
		, DEST_RGN_CD
                , CMDT_HDR_SEQ
                , ROUT_SEQ
		---------------------------------------------------------------
		, CASE WHEN SIMUL_EXP_DT_REV < CTRT_EFF_DT OR SIMUL_EFF_DT_REV > CTRT_EXP_DT THEN 0
			WHEN SIMUL_EFF_DT_REV <= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - CTRT_EFF_DT
			WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - SIMUL_EFF_DT_REV
			WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
			ELSE 0
			END AS SIMUL_DAYS_REV
		, CASE WHEN SIMUL_EXP_DT_RATE < CTRT_EFF_DT OR SIMUL_EFF_DT_RATE > CTRT_EXP_DT THEN 0
			WHEN SIMUL_EFF_DT_RATE <= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - CTRT_EFF_DT
			WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - SIMUL_EFF_DT_RATE
			WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
			ELSE 0
			END AS SIMUL_DAYS_RATE
		, CASE WHEN SIMUL_EXP_DT_SCG < CTRT_EFF_DT OR SIMUL_EFF_DT_SCG > CTRT_EXP_DT THEN 0
			WHEN SIMUL_EFF_DT_SCG <= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - CTRT_EFF_DT
			WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - SIMUL_EFF_DT_SCG
			WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
			ELSE 0
			END AS SIMUL_DAYS_SCG
		, CASE WHEN SIMUL_EXP_DT_COST < CTRT_EFF_DT OR SIMUL_EFF_DT_COST > CTRT_EXP_DT THEN 0
			WHEN SIMUL_EFF_DT_COST <= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - CTRT_EFF_DT
			WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - SIMUL_EFF_DT_COST
			WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
			ELSE 0
			END AS SIMUL_DAYS_COST
		, CASE WHEN SIMUL_EXP_DT_LOAD < CTRT_EFF_DT OR SIMUL_EFF_DT_LOAD > CTRT_EXP_DT THEN 0
			WHEN SIMUL_EFF_DT_LOAD <= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - CTRT_EFF_DT
			WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - SIMUL_EFF_DT_LOAD
			WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT
			ELSE 0
			END AS SIMUL_DAYS_LOAD
		, CTRT_EXP_DT - CTRT_EFF_DT AS TOT_CTRT_DAYS

	FROM (
		SELECT	
                          MN.PROP_OFC_CD
                        , MN.PROP_NO
                        , MN.AMDT_SEQ
                        , MN.PROP_APRO_OFC_CD
                        , RATE_SCG_CD AS SIMUL_SCG_CD
                        , MN.PRC_CTRT_CUST_TP_CD
                        , TO_DATE(CTRT_EFF_DT) AS CTRT_EFF_DT
                        , TO_DATE(CTRT_EXP_DT) AS CTRT_EXP_DT
                        , MN.SVC_SCP_CD
                        , REV_CALC_TP_CD AS SIMUL_CALC_TP_CD_REV
                        , REV_AMOUNT AS SIMUL_AMOUNT_REV
                        , REV_EFF_DT AS SIMUL_EFF_DT_REV
                        , REV_EXP_DT AS SIMUL_EXP_DT_REV
                        , RATE_CALC_TP_CD AS SIMUL_CALC_TP_CD_RATE
                        , RATE_AMOUNT AS SIMUL_AMOUNT_RATE
                        , RATE_EFF_DT AS SIMUL_EFF_DT_RATE
                        , RATE_EXP_DT AS SIMUL_EXP_DT_RATE
                        , SCG_CALC_TP_CD AS SIMUL_CALC_TP_CD_SCG
                        , SCG_AMOUNT AS SIMUL_AMOUNT_SCG
                        , SCG_EFF_DT AS SIMUL_EFF_DT_SCG
                        , SCG_EXP_DT AS SIMUL_EXP_DT_SCG
                        , COST_CALC_TP_CD AS SIMUL_CALC_TP_CD_COST
                        , COST_AMOUNT AS SIMUL_AMOUNT_COST
                        , COST_EFF_DT AS SIMUL_EFF_DT_COST
                        , COST_EXP_DT AS SIMUL_EXP_DT_COST
                        , LOAD_CALC_TP_CD AS SIMUL_CALC_TP_CD_LOAD
                        , LOAD_AMOUNT AS SIMUL_AMOUNT_LOAD
                        , LOAD_EFF_DT AS SIMUL_EFF_DT_LOAD
                        , LOAD_EXP_DT AS SIMUL_EXP_DT_LOAD		
		
		 
			      ---------------------------------------------------------------
			      -- 추가된 쿼리
			      ---------------------------------------------------------------
		        , ORI_CNT_CD
		        , ORI_RGN_CD
		        , DEST_CNT_CD
		        , DEST_RGN_CD
                        , CMDT_HDR_SEQ
                        , ROUT_SEQ
                        , ROW_NUMBER() OVER( PARTITION BY MN.PROP_NO,MN.AMDT_SEQ, CMDT_HDR_SEQ, ROUT_SEQ ORDER BY (REV_SCORE+RATE_SCORE+SCG_SCORE+COST_SCORE+LOAD_SCORE) DESC ) RN
			--------------------------------------------------------------------------------------
		FROM	
		      VW_DT  DT,
                     (
			      SELECT  /*  LEADING(X MN) USE_NL(X MN PTY DUR SCP_MN CTP) */
				      MN.PROP_OFC_CD
				      , MN.PROP_NO
				      , MN.AMDT_SEQ
				      , MN.PROP_APRO_OFC_CD
				      , MN.PRC_CTRT_CUST_TP_CD
				      , SCP_MN.SVC_SCP_CD
				      , CTRT_EXP_DT
				      , CTRT_EFF_DT
				      , ROWNUM
				      , ORI.CNT_CD AS  ORI_CNT_CD
				      , ORI.RGN_CD AS  ORI_RGN_CD
				      , DEST.CNT_CD AS DEST_CNT_CD
				      , DEST.RGN_CD AS DEST_RGN_CD
				      , ORI.CMDT_HDR_SEQ
				      , ORI.ROUT_SEQ
				FROM 	PRI_RP_MN MN
					, PRI_RP_SCP_DUR DUR
					, PRI_RP_SCP_MN SCP_MN


				      ---------------------------------------------------------------
				      -- 추가된 쿼리
				      ---------------------------------------------------------------
 				      , (
					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD
					       FROM (
							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
								, (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								  ) AS CNT_CD
								, (
										    SELECT RGN_CD 
										    FROM MDM_LOCATION 
										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
								 ) AS RGN_CD

							FROM	(
									SELECT  PROP_NO , 0 AS AMDT_SEQ , 'TPE' AS SVC_SCP_CD
									FROM    PRI_PRS_CM_SMRY_SIM_TMP
									WHERE   PRC_CTRT_TP_CD = 'R'
									GROUP BY PROP_NO
								)  MN_SET
								, PRI_RP_SCP_RT_ROUT_PNT A
								, PRI_RP_SCP_GRP_LOC B
								, PRI_RP_SCP_GRP_LOC_DTL C
							WHERE MN_SET.PROP_NO = A.PROP_NO
								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
								AND A.ORG_DEST_TP_CD = 'O'
								AND A.SRC_INFO_CD <> 'AD'
								AND A.PROP_NO     = B.PROP_NO(+)
								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
								AND B.PROP_NO     = C.PROP_NO(+)
								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
								AND C.SRC_INFO_CD(+) <> 'AD'
						)
					) ORI,
 				        (
					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD
					       FROM (
							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
								, (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								  ) AS CNT_CD
								, (
										    SELECT RGN_CD 
										    FROM MDM_LOCATION 
										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
								 ) AS RGN_CD

							FROM	(
									SELECT  PROP_NO , 0 AS AMDT_SEQ , 'TPE' AS SVC_SCP_CD
									FROM    PRI_PRS_CM_SMRY_SIM_TMP
									WHERE   PRC_CTRT_TP_CD = 'R'
									GROUP BY PROP_NO
								)  MN_SET
								, PRI_RP_SCP_RT_ROUT_PNT A
								, PRI_RP_SCP_GRP_LOC B
								, PRI_RP_SCP_GRP_LOC_DTL C
							WHERE MN_SET.PROP_NO = A.PROP_NO
								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
								AND A.ORG_DEST_TP_CD = 'D'
								AND A.SRC_INFO_CD <> 'AD'
								AND A.PROP_NO     = B.PROP_NO(+)
								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
								AND B.PROP_NO     = C.PROP_NO(+)
								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
								AND C.SRC_INFO_CD(+) <> 'AD'
						)
					) DEST
				      ---------------------------------------------------------------
				WHERE	   MN.AMDT_SEQ = 0
					AND MN.PROP_NO = DUR.PROP_NO
					AND MN.AMDT_SEQ = DUR.AMDT_SEQ
					AND MN.PROP_NO = SCP_MN.PROP_NO
					AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ
					AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD
					AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]
					AND MN.PROP_NO IN (   SELECT PROP_NO FROM PRI_PRS_CM_SMRY_SIM_TMP WHERE PRC_CTRT_TP_CD = 'R'	)
				      ---------------------------------------------------------------
				      -- 추가된 쿼리
				      ---------------------------------------------------------------
					AND     SCP_MN.PROP_NO = ORI.PROP_NO
					AND     SCP_MN.AMDT_SEQ = ORI.AMDT_SEQ
					AND     SCP_MN.SVC_SCP_CD = ORI.SVC_SCP_CD
					    
					AND     SCP_MN.PROP_NO = DEST.PROP_NO
					AND     SCP_MN.AMDT_SEQ = DEST.AMDT_SEQ
					AND     SCP_MN.SVC_SCP_CD = DEST.SVC_SCP_CD				   
					AND    ORI.PROP_NO = DEST.PROP_NO
					AND    ORI.AMDT_SEQ = DEST.AMDT_SEQ
					AND    ORI.SVC_SCP_CD = DEST.SVC_SCP_CD

					AND    ORI.CMDT_HDR_SEQ = DEST.CMDT_HDR_SEQ 
					AND    ORI.ROUT_SEQ = DEST.ROUT_SEQ
				      ---------------------------------------------------------------

                     )  MN

                WHERE   INSTR(REV_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(REV_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, REV_APR_OFC_CD)
                        AND INSTR(RATE_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(RATE_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, RATE_APR_OFC_CD)
                        AND INSTR(SCG_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(SCG_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, SCG_APR_OFC_CD)
                        AND INSTR(COST_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(COST_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, COST_APR_OFC_CD)
                        AND INSTR(LOAD_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0
                        AND MN.PROP_APRO_OFC_CD = DECODE(LOAD_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, LOAD_APR_OFC_CD)
			---------------------------------------------------------------
			-- 추가된 쿼리
			---------------------------------------------------------------
			AND   DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,  REV_ORG_LOC_DEF_CD )
			AND   DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,  REV_DEST_LOC_DEF_CD )

			AND   DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,  RATE_ORG_LOC_DEF_CD )
			AND   DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,  RATE_DEST_LOC_DEF_CD )


			AND   DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,  SCG_ORG_LOC_DEF_CD )
			AND   DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,  SCG_DEST_LOC_DEF_CD )

			AND   DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,  COST_ORG_LOC_DEF_CD )
			AND   DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,  COST_DEST_LOC_DEF_CD )

			AND   DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,  LOAD_ORG_LOC_DEF_CD )
			AND   DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,  LOAD_DEST_LOC_DEF_CD )


			 ---------------------------------------------------------------

	) MN
	WHERE MN.RN = 1
),
VW_RFA_RESULT_MN AS (
	SELECT
		CMDT_ROUT.PROP_NO
		, CMDT_ROUT.AMDT_SEQ
		, CMDT_ROUT.SVC_SCP_CD
		, CMDT_ROUT.CMDT_HDR_SEQ
		, CMDT_ROUT.ROUT_SEQ
		, CMDT_ROUT.RT_SEQ
		, CMDT_ROUT.FEU_TEU
		, MN.CTRT_EFF_DT
		, MN.CTRT_EXP_DT
		, MN.SIMUL_SCG_CD


		, NVL(CMDT_ROUT.PRS_ESTM_LOD_QTY,0)  AS PRS_ESTM_LOD_QTY
		, NVL(CMDT_ROUT.PROP_FRT_RT_AMT,0)   AS RATE -- RATE
		, NVL(CMDT_ROUT.PRS_SCG_AMT , 0) AS SURCHARGE  -- SURCHARGE
		, NVL(CMDT_ROUT.PRS_PFIT_CM_UC_AMT,0) AS COST_TRADE-- COST, TRADE
		, NVL(CMDT_ROUT.PRS_RESPB_CM_UC_AMT,0) AS COST_OFFICE-- COST, OFFICE
		, NVL(CMDT_ROUT.PRS_RESPB_OPFIT_UC_AMT,0) AS COST_OP_OFFICE-- COST, OP, OFFICE


		, CMDT_ROUT.PRS_RAT_UT_CD
		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) AS UT_CD_2_1
		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) AS UT_CD_1_1

		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_REV / MN.TOT_CTRT_DAYS) AS CALC_RATE_REV
		, MN.SIMUL_CALC_TP_CD_REV
		, DECODE(MN.SIMUL_CALC_TP_CD_REV,'+', MN.SIMUL_AMOUNT_REV   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_REV )  AS SIMUL_AMOUNT_REV

		, DECODE(MN.TOT_CTRT_DAYS,0,0,  MN.SIMUL_DAYS_RATE / MN.TOT_CTRT_DAYS) AS CALC_RATE_RATE
		, MN.SIMUL_CALC_TP_CD_RATE
		, DECODE(MN.SIMUL_CALC_TP_CD_RATE,'+', MN.SIMUL_AMOUNT_RATE   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_RATE) AS SIMUL_AMOUNT_RATE

		, DECODE(MN.TOT_CTRT_DAYS,0,0,  MN.SIMUL_DAYS_SCG / MN.TOT_CTRT_DAYS ) AS CALC_RATE_SCG
		, MN.SIMUL_CALC_TP_CD_SCG
		, DECODE(MN.SIMUL_CALC_TP_CD_SCG,'+', MN.SIMUL_AMOUNT_SCG   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_SCG)   AS SIMUL_AMOUNT_SCG

		, DECODE(MN.TOT_CTRT_DAYS,0,0,  MN.SIMUL_DAYS_COST / MN.TOT_CTRT_DAYS) AS CALC_RATE_COST
		, MN.SIMUL_CALC_TP_CD_COST
		, DECODE(MN.SIMUL_CALC_TP_CD_COST,'+', MN.SIMUL_AMOUNT_COST   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_COST) AS SIMUL_AMOUNT_COST

		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_LOAD / MN.TOT_CTRT_DAYS) AS CALC_RATE_LOAD
		, MN.SIMUL_CALC_TP_CD_LOAD
		, DECODE(MN.SIMUL_CALC_TP_CD_LOAD,'+', MN.SIMUL_AMOUNT_LOAD   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_LOAD) AS SIMUL_AMOUNT_LOAD
		-- CMDT_ROUT.PRS_ESTM_LOD_QTY  값은 무조건  TEU(D2) 기준으로 가지고 있고
		-- AMT 정보는 TEU(D2) , FEU(D4) 에 따라 해당 하는 단위로 값을 가지고 있기 때문에
		-- Load 를 AMT 기준으로 맞추기 위해 아래와 같이 값을 조정한다.
		----------------------------------------------------------------------------------
		, NVL( CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' 
					THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  
				ELSE	
						 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2
		  END,0)  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  
		----------------------------------------------------------------------------------
	FROM 	VW_RFA_MN MN

		,(		
			SELECT MN.PROP_NO
				, MN.AMDT_SEQ
				, MN.SVC_SCP_CD
				, CMDT_ROUT.CMDT_HDR_SEQ
				, CMDT_ROUT.ROUT_SEQ
				, RT.RT_SEQ
				, CMDT_ROUT.PRS_ESTM_LOD_QTY
				, RT.PROP_FRT_RT_AMT
				, RT.PRS_SCG_AMT
				, RT.PRS_PFIT_CM_UC_AMT
				, RT.PRS_RESPB_CM_UC_AMT
				, RT.PRS_RESPB_OPFIT_UC_AMT
				, CMDT_ROUT.PRS_RAT_UT_CD
				,DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS FEU_TEU
			FROM 	(SELECT DISTINCT PROP_NO, AMDT_SEQ,SVC_SCP_CD FROM VW_RFA_MN ) MN
				, PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT
				, PRI_RP_SCP_RT RT




#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE( @[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_RFA_MN MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD,  CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE( @[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_RFA_MN MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
#if( $slane_list.size() != 0 ) 
				,(
					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ
					FROM VW_RFA_MN MN_SET
						, PRI_RP_SCP_RT RT
					WHERE MN_SET.PROP_NO = RT.PROP_NO
						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ
						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD
	#if( $slane_list.size() != 0 ) 
		AND RT.VSL_SLAN_CD IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
				) SLANE
#end
			WHERE MN.PROP_NO = CMDT_ROUT.PROP_NO
				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ
				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD
#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
#if( $slane_list.size() != 0 ) 
				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ
#end

				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)
				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)
				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)
				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)
				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)
				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)
				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)
				-- BY CARGO TYPE
				#if (${crg_tp_str} != '' )
					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
				#end

	) CMDT_ROUT
	WHERE  CMDT_ROUT.PROP_NO			= MN.PROP_NO(+)
		AND CMDT_ROUT.AMDT_SEQ			= MN.AMDT_SEQ(+)
		AND CMDT_ROUT.SVC_SCP_CD		= MN.SVC_SCP_CD(+)
		AND CMDT_ROUT.CMDT_HDR_SEQ		= MN.CMDT_HDR_SEQ(+)
		AND CMDT_ROUT.ROUT_SEQ			= MN.ROUT_SEQ(+)



)
#end
--CMPB = RATE + SURCHARGE - PRS PROFITABILITY CONTRIBUTION MARGIN UNIT COST AMOUNT  -- trade
-- CMPB = RATE + SURCHARGE - PRS RESPONSIBILITY CONTRIBUTION MARGIN UNIT COST AMOUNT   -- office
-- G RVE = 
-- 구해야 할값, LOAD,G REV,COST, CMPB, CM, 
SELECT 
	CTRT_TP_CD
	, MN.PROP_NO
	, MN.AMDT_SEQ
	, MN.LOAD
	, MN.G_REV
	, MN.COST_TRADE
	, MN.COST_OFFICE
	, MN.COST_OP_OFFICE
	, MN.RATE
	, MN.SURCHARGE
#if ( ${virtual_query_rev} != '' )
	, MN.G_REV -  MN.COST_OFFICE AS CM_OFFICE
	, MN.G_REV -  MN.COST_TRADE AS CM_TRADE
	, MN.G_REV -  MN.COST_OP_OFFICE AS OP_OFFICE

	, DECODE(MN.LOAD,0,0,(MN.G_REV -  MN.COST_OFFICE)/MN.LOAD) AS CMPB_OFFICE
	, DECODE(MN.LOAD,0,0,(MN.G_REV -  MN.COST_TRADE)/MN.LOAD) AS CMPB_TRADE
	, DECODE(MN.LOAD,0,0,(MN.G_REV -  MN.COST_OP_OFFICE)/MN.LOAD) AS OPB_OFFICE
#else
	, MN.CM_OFFICE
	, MN.CM_TRADE
	, MN.OP_OFFICE
	, DECODE(MN.LOAD,0,0,MN.CM_OFFICE/MN.LOAD) AS CMPB_OFFICE
	, DECODE(MN.LOAD,0,0,MN.CM_TRADE/MN.LOAD) AS CMPB_TRADE
	, DECODE(MN.LOAD,0,0,MN.OP_OFFICE/MN.LOAD) AS OPB_OFFICE
#end
FROM (
	SELECT	CTRT_TP_CD
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, SUM(     CASE WHEN ( UT_CD_1_1 = '2' OR UT_CD_2_1 = '2' ) 
						THEN MN.LOAD  * DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1)  
					ELSE	
							 MN.LOAD  * DECODE(@[frm_pfmc_unit],'FEU',1,'TEU',2)    
	           END ) AS LOAD
		--, SUM( MN.RATE + MN.SURCHARGE + MN.SIMUL_SURCHARGE ) AS G_REV

		,SUM( ((MN.RATE + MN.SURCHARGE + MN.SIMUL_SURCHARGE) +  DECODE(MN.SIMUL_CALC_TP_CD_REV,'+', ( MN.SIMUL_AMOUNT_REV * MN.CALC_RATE_REV )
			, ((MN.RATE + MN.SURCHARGE + MN.SIMUL_SURCHARGE)  * MN.SIMUL_AMOUNT_REV /100 * MN.CALC_RATE_REV ) )) * MN.LOAD ) AS G_REV


		, SUM( COST_TRADE   * MN.LOAD) AS COST_TRADE
		, SUM( COST_OFFICE   * MN.LOAD) AS COST_OFFICE
		, SUM( COST_OP_OFFICE   * MN.LOAD) AS COST_OP_OFFICE
		, SUM(MN.RATE) AS RATE
		, SUM(MN.SURCHARGE+ MN.SIMUL_SURCHARGE)  AS SURCHARGE

		, SUM(  MN.LOAD   *  ( MN.RATE + MN.SURCHARGE+ MN.SIMUL_SURCHARGE  - COST_OFFICE )  )  AS CM_OFFICE -- AS CM_NEW_OFFICE
		, SUM( MN.LOAD   *  ( MN.RATE + MN.SURCHARGE+ MN.SIMUL_SURCHARGE  - COST_TRADE ) )   AS CM_TRADE  -- AS CM_NEW_TRADE
		, SUM( MN.LOAD   *  ( MN.RATE + MN.SURCHARGE+ MN.SIMUL_SURCHARGE  - COST_OP_OFFICE )  )  AS OP_OFFICE  -- AS CM_NEW_OP_TRADE
		,SUM(LOAD ) AS PRS_ESTM_LOD_QTY_FOR_RATE 
	FROM (

#if (${frm_contract_type} != 'R') 
		SELECT 
			'S' AS CTRT_TP_CD
			, RMN.PROP_NO
			, RMN.AMDT_SEQ
			, RMN.FEU_TEU
			, RMN.CTRT_EFF_DT
			, RMN.CTRT_EXP_DT 
			, RMN.SURCHARGE
			-- , RMN.CALC_RATE
			--, RMN.PRS_ESTM_LOD_QTY
			--, RMN.RATE -- RATE
			, ( RMN.PRS_ESTM_LOD_QTY_FOR_RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_LOAD,'+', ( RMN.SIMUL_AMOUNT_LOAD * RMN.CALC_RATE_LOAD), (RMN.PRS_ESTM_LOD_QTY_FOR_RATE  * RMN.SIMUL_AMOUNT_LOAD /100 * RMN.CALC_RATE_LOAD) ),0) ) AS LOAD
			, ( RMN.RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_RATE,'+', ( RMN.SIMUL_AMOUNT_RATE * RMN.CALC_RATE_RATE ), (RMN.RATE  * RMN.SIMUL_AMOUNT_RATE /100 * RMN.CALC_RATE_RATE ) ),0) ) AS RATE
		

			, ( COST_TRADE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_TRADE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_TRADE
			, ( COST_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OFFICE
			, ( COST_OP_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OP_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OP_OFFICE
			, RMN.PRS_RAT_UT_CD
			, RMN.UT_CD_2_1
			, RMN.UT_CD_1_1
			, NVL(RMN.SIMUL_AMOUNT_REV,0) AS SIMUL_AMOUNT_REV
			, NVL(RMN.CALC_RATE_REV,0) AS CALC_RATE_REV
			, NVL(RMN.SIMUL_CALC_TP_CD_REV,0) AS SIMUL_CALC_TP_CD_REV
			, PRS_ESTM_LOD_QTY_FOR_RATE 
 
			, (
				SELECT  
					NVL(SUM( SCG.ADJ_SCG_USD_AMT +  DECODE(RMN.SIMUL_CALC_TP_CD_SCG,'+', ( RMN.SIMUL_AMOUNT_SCG * RMN.CALC_RATE_SCG ), (SCG.ADJ_SCG_USD_AMT * RMN.SIMUL_AMOUNT_SCG /100 * RMN.CALC_RATE_SCG ) ) ),0)
				FROM  PRI_SP_SCP_RT_SCG SCG 
				WHERE  SCG.PROP_NO = RMN.PROP_NO
					AND SCG.AMDT_SEQ = RMN.AMDT_SEQ
					AND SCG.SVC_SCP_CD = RMN.SVC_SCP_CD
					AND SCG.GEN_SPCL_RT_TP_CD = RMN.GEN_SPCL_RT_TP_CD
					AND SCG.CMDT_HDR_SEQ =  RMN.CMDT_HDR_SEQ
					AND SCG.ROUT_SEQ  = RMN.ROUT_SEQ
					AND SCG.RT_SEQ = RMN.RT_SEQ
					AND INSTR(RMN.SIMUL_SCG_CD, SCG.CHG_CD) > 0
					--AND SCG.SCG_CD = MN.SIMUL_SCG_CD
			  ) AS SIMUL_SURCHARGE
		FROM  VW_RESULT_MN RMN
#end

#if (${frm_contract_type} == 'B') 
		UNION ALL
#end

#if (${frm_contract_type} != 'S') 
		SELECT
			'R' AS CTRT_TP_CD
			, RMN.PROP_NO
			, RMN.AMDT_SEQ
			, RMN.FEU_TEU
			, RMN.CTRT_EFF_DT
			, RMN.CTRT_EXP_DT
			, RMN.SURCHARGE
			-- , RMN.CALC_RATE
			--, RMN.PRS_ESTM_LOD_QTY
			--, RMN.RATE -- RATE
			, ( RMN.PRS_ESTM_LOD_QTY_FOR_RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_LOAD,'+', ( RMN.SIMUL_AMOUNT_LOAD * RMN.CALC_RATE_LOAD), (RMN.PRS_ESTM_LOD_QTY_FOR_RATE  * RMN.SIMUL_AMOUNT_LOAD /100 * RMN.CALC_RATE_LOAD) ),0) ) AS LOAD
			, ( RMN.RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_RATE,'+', ( RMN.SIMUL_AMOUNT_RATE * RMN.CALC_RATE_RATE ), (RMN.RATE  * RMN.SIMUL_AMOUNT_RATE /100 * RMN.CALC_RATE_RATE ) ),0) ) AS RATE
		

			, ( COST_TRADE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_TRADE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_TRADE
			, ( COST_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OFFICE
			, ( COST_OP_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OP_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OP_OFFICE
			, RMN.PRS_RAT_UT_CD
			, RMN.UT_CD_2_1
			, RMN.UT_CD_1_1
			, NVL(RMN.SIMUL_AMOUNT_REV,0) AS SIMUL_AMOUNT_REV
			, NVL(RMN.CALC_RATE_REV,0) AS CALC_RATE_REV
			, NVL(RMN.SIMUL_CALC_TP_CD_REV,0) AS SIMUL_CALC_TP_CD_REV
			, PRS_ESTM_LOD_QTY_FOR_RATE 
			, (
				SELECT
					NVL(SUM( SCG.ADJ_SCG_USD_AMT +  DECODE(RMN.SIMUL_CALC_TP_CD_SCG,'+', ( RMN.SIMUL_AMOUNT_SCG * RMN.CALC_RATE_SCG ), (SCG.ADJ_SCG_USD_AMT * RMN.SIMUL_AMOUNT_SCG /100 * RMN.CALC_RATE_SCG ) ) ),0)
				FROM  PRI_RP_SCP_RT_SCG SCG
				WHERE  SCG.PROP_NO = RMN.PROP_NO
					AND SCG.AMDT_SEQ = RMN.AMDT_SEQ
					AND SCG.SVC_SCP_CD = RMN.SVC_SCP_CD
					AND SCG.CMDT_HDR_SEQ =  RMN.CMDT_HDR_SEQ
					AND SCG.ROUT_SEQ  = RMN.ROUT_SEQ
					AND SCG.RT_SEQ = RMN.RT_SEQ
					AND INSTR(RMN.SIMUL_SCG_CD, SCG.CHG_CD) > 0
					--AND SCG.SCG_CD = MN.SIMUL_SCG_CD
			) AS SIMUL_SURCHARGE
		FROM  VW_RFA_RESULT_MN RMN
#end
	) MN
	GROUP BY MN.PROP_NO, MN.AMDT_SEQ,CTRT_TP_CD,MN.FEU_TEU
) MN			]]></sql>
			<params>
				<param name="frm_svc_scp_cd" type="12" value="" out="N"/>
				<param name="frm_pfmc_unit" type="12" value="" out="N"/>
				<param name="frm_ori_loc_tp" type="12" value="" out="N"/>
				<param name="frm_ori_rout_cd" type="12" value="" out="N"/>
				<param name="frm_dest_loc_tp" type="12" value="" out="N"/>
				<param name="frm_dest_rout_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
