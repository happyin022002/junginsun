<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="QtaInquiryDBDAOSearchQuarterlyCurrnetQtaListRSQL">
			<desc><![CDATA[[QTA Inquiry__Quarterly Overall (Currently Updated)]을 [조회] 합니다.

* 2014.11.21 이혜민 [CHM-201432662] Raw data Export시 load가 0 이 아닌것만 나오도록 HAVING SUM(LOD_QTY) <> 0 추가
* 2015.01.16 이혜민 [CHM-201533644] Raw data Export 보완
* 2015.02.11 이혜민 VVD Adjustment 기준을 COST_MON으로 바꾸면서 화면 정렬을 SLS_YR로 수정
* 2015.02.17 이혜민	 RHQ, Office Order by  변경
* 2015.03.09 이혜민 SLS_YRMON은 Week 선택시에만 적용
* 2015.04.17 이혜민 [CHM-201535052] 조회시 G.Decimal 데이터 정상적으로 조회되도록 수정  
* 2015.06.15 김용습 [CHM-201536164] 주간 MAS Open에 따른 타모듈 프로그램 적용 요청
* 2015.08.20 김용습 [CHM-201537646] VVD옵션 체크시, 해제시의 SUPPLY TOTAL 수치가 맞지 않는 현상 수정
* 2015.10.14 김용습 [CHM-201538195] SQM 내 report의 main grid상 데이터 display 기준 revenue month로 변경
* 2015.11.10 김용습 Raw Data Export시 헤더와 데이터가 어긋나는 현상 수정
* 2016.01.08 같은 분기 전년도 데이터가 함께 조회되는 버그 수정
* 2016.03.15 최성민 [CHM-201640194] QTA Set up by Head Office for IAS Sector_Summary VVD 중복 계산 관련 로직 수정]]></desc>
			<sql><![CDATA[
SELECT * FROM
(
#if (${f_chk_week} == 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '03')
SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
	,RGN_OFC_CD 
    ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
        SELECT BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
        ,BSE_WK
        ,SLS_YRMON 
    --    ,VVD
        ,RHQ_CD
        ,RGN_OFC_CD 
        ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
        ,SUM(LOD_QTY) AS LOD_QTY
        ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
        ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB
        ,SUM(G_REV) AS G_REV
        ,SUM(PA_CM_C) AS PA_CM_C
        ,SUM(RA_CM_C) AS RA_CM_C
        ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
        ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
        ,SUM(PA_CM) AS PA_CM
        ,SUM(RA_CM) AS RA_CM
        ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
        ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
        FROM
        (
#elseif (${f_chk_week} == 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '02')
SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
    ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
    SELECT BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
        ,BSE_WK
        ,SLS_YRMON 
    --    ,VVD
        ,RHQ_CD
        ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
        ,SUM(LOD_QTY) AS LOD_QTY
        ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
        ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB
        ,SUM(G_REV) AS G_REV
        ,SUM(PA_CM_C) AS PA_CM_C
        ,SUM(RA_CM_C) AS RA_CM_C
        ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
        ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
        ,SUM(PA_CM) AS PA_CM
        ,SUM(RA_CM) AS RA_CM
        ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
        ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
        FROM
        (
        SELECT BSE_YR
            ,BSE_QTR_CD
            ,OFC_VW_CD
            ,TRD_CD
            ,SUB_TRD_CD
            ,RLANE_CD
            ,DIR_CD
            ,HUL_BND_CD
            ,BSE_MON                 
            ,BSE_WK
            ,SLS_YRMON 
            ,VVD
            ,RHQ_CD
            ,FNL_BSA_CAPA
            ,SUM(LOD_QTY) AS LOD_QTY
            ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
            ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
            ,SUM(G_REV) AS G_REV
            ,SUM(PA_CM_C) AS PA_CM_C
            ,SUM(RA_CM_C) AS RA_CM_C
            ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
            ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
            ,SUM(PA_CM) AS PA_CM
            ,SUM(RA_CM) AS RA_CM
            ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
            ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
            FROM
            (
#elseif (${f_chk_week} == 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '01')
SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
    ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
    SELECT BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
        ,BSE_WK
        ,SLS_YRMON 
    --    ,VVD
        ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
        ,SUM(LOD_QTY) AS LOD_QTY
        ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
        ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
        ,SUM(G_REV) AS G_REV
        ,SUM(PA_CM_C) AS PA_CM_C
        ,SUM(RA_CM_C) AS RA_CM_C
        ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
        ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
        ,SUM(PA_CM) AS PA_CM
        ,SUM(RA_CM) AS RA_CM
        ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
        ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
        FROM
        (
        SELECT BSE_YR
            ,BSE_QTR_CD
            ,OFC_VW_CD
            ,TRD_CD
            ,SUB_TRD_CD
            ,RLANE_CD
            ,DIR_CD
            ,HUL_BND_CD
            ,BSE_MON                 
            ,BSE_WK
            ,SLS_YRMON 
            ,VVD
            ,FNL_BSA_CAPA
            ,SUM(LOD_QTY) AS LOD_QTY
            ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
            ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
            ,SUM(G_REV) AS G_REV
            ,SUM(PA_CM_C) AS PA_CM_C
            ,SUM(RA_CM_C) AS RA_CM_C
            ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
            ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
            ,SUM(PA_CM) AS PA_CM
            ,SUM(RA_CM) AS RA_CM
            ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
            ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
            FROM
            (
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '03')
SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
	,RGN_OFC_CD 
    ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
        SELECT BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
    --    ,BSE_WK
        ,SLS_YRMON 
    --    ,VVD
        ,RHQ_CD
        ,RGN_OFC_CD 
        ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
        ,SUM(LOD_QTY) AS LOD_QTY
        ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
        ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
        ,SUM(G_REV) AS G_REV
        ,SUM(PA_CM_C) AS PA_CM_C
        ,SUM(RA_CM_C) AS RA_CM_C
        ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
        ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
        ,SUM(PA_CM) AS PA_CM
        ,SUM(RA_CM) AS RA_CM
        ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
        ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
        FROM
        (
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '02')
SELECT BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,HUL_BND_CD
,BSE_MON                 
--,BSE_WK
,SLS_YRMON 
--,VVD
,RHQ_CD
,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
,SUM(LOD_QTY) AS LOD_QTY
,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
,SUM(G_REV) AS G_REV
,SUM(PA_CM_C) AS PA_CM_C
,SUM(RA_CM_C) AS RA_CM_C
,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
,SUM(PA_CM) AS PA_CM
,SUM(RA_CM) AS RA_CM
,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
FROM
(
    SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    --,BSE_WK
    ,SLS_YRMON 
    --,VVD
    ,RHQ_CD
    ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
        SELECT BSE_YR
            ,BSE_QTR_CD
            ,OFC_VW_CD
            ,TRD_CD
            ,SUB_TRD_CD
            ,RLANE_CD
            ,DIR_CD
            ,HUL_BND_CD
            ,BSE_MON                 
        --    ,BSE_WK
            ,SLS_YRMON 
            ,VVD
            ,RHQ_CD
            ,FNL_BSA_CAPA
            ,SUM(LOD_QTY) AS LOD_QTY
            ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
            ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
            ,SUM(G_REV) AS G_REV
            ,SUM(PA_CM_C) AS PA_CM_C
            ,SUM(RA_CM_C) AS RA_CM_C
            ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
            ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
            ,SUM(PA_CM) AS PA_CM
            ,SUM(RA_CM) AS RA_CM
            ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
            ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
            FROM
            (    
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '01')
SELECT BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,HUL_BND_CD
,BSE_MON                 
--,BSE_WK
--,SLS_YRMON 
--,VVD
,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
,SUM(LOD_QTY) AS LOD_QTY
,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
,SUM(G_REV) AS G_REV
,SUM(PA_CM_C) AS PA_CM_C
,SUM(RA_CM_C) AS RA_CM_C
,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
,SUM(PA_CM) AS PA_CM
,SUM(RA_CM) AS RA_CM
,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
FROM
(
    SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    --,BSE_WK
    ,SLS_YRMON 
    --,VVD
    ,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
        SELECT BSE_YR
            ,BSE_QTR_CD
            ,OFC_VW_CD
            ,TRD_CD
            ,SUB_TRD_CD
            ,RLANE_CD
            ,DIR_CD
            ,HUL_BND_CD
            ,BSE_MON                 
        --    ,BSE_WK
            ,SLS_YRMON 
            ,VVD
            ,FNL_BSA_CAPA
            ,SUM(LOD_QTY) AS LOD_QTY
            ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
            ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
            ,SUM(G_REV) AS G_REV
            ,SUM(PA_CM_C) AS PA_CM_C
            ,SUM(RA_CM_C) AS RA_CM_C
            ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
            ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
            ,SUM(PA_CM) AS PA_CM
            ,SUM(RA_CM) AS RA_CM
            ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
            ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
            FROM
            (
###elseif (${f_chk_week} != 'W' && ${f_chk_vvd} == 'V' && ${f_ofc_lvl} == '03')
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} == 'V')
SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
--    ,SLS_YRMON 
    ,VVD
#if (${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
	,RHQ_CD
#if (${f_ofc_lvl} == '03')
	,RGN_OFC_CD 
#end
#end
    ,FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
        SELECT BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
    --    ,BSE_WK
        ,SLS_YRMON 
        ,VVD
    #if (${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
        ,RHQ_CD
    #if (${f_ofc_lvl} == '03')
        ,RGN_OFC_CD 
    #end
    #end
        ,FNL_BSA_CAPA
        ,SUM(LOD_QTY) AS LOD_QTY
        ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
        ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
        ,SUM(G_REV) AS G_REV
        ,SUM(PA_CM_C) AS PA_CM_C
        ,SUM(RA_CM_C) AS RA_CM_C
        ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
        ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
        ,SUM(PA_CM) AS PA_CM
        ,SUM(RA_CM) AS RA_CM
        ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
        ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
        FROM
        (
#elseif (${f_chk_week} == 'W' && ${f_chk_vvd} == 'V' && ${f_ofc_lvl} != '03')
SELECT BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
    ,VVD
#if (${f_ofc_lvl} == '02')
	,RHQ_CD
#end
    ,FNL_BSA_CAPA
    ,SUM(LOD_QTY) AS LOD_QTY
    ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
    ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
    ,SUM(G_REV) AS G_REV
    ,SUM(PA_CM_C) AS PA_CM_C
    ,SUM(RA_CM_C) AS RA_CM_C
    ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
    ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
    ,SUM(PA_CM) AS PA_CM
    ,SUM(RA_CM) AS RA_CM
    ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
    ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
    FROM
    (
        SELECT BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
        ,BSE_WK
        ,SLS_YRMON 
        ,VVD
    #if (${f_ofc_lvl} == '02')
        ,RHQ_CD
    #end
        ,FNL_BSA_CAPA
        ,SUM(LOD_QTY) AS LOD_QTY
        ,NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS GRPB_DECIMAL
        ,ROUND(NVL((SUM(G_REV)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0)) AS GRPB 
        ,SUM(G_REV) AS G_REV
        ,SUM(PA_CM_C) AS PA_CM_C
        ,SUM(RA_CM_C) AS RA_CM_C
        ,NVL((SUM(PA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMCB
        ,NVL((SUM(RA_CM_C)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMCB
        ,SUM(PA_CM) AS PA_CM
        ,SUM(RA_CM) AS RA_CM
        ,NVL((SUM(PA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS PA_CMPB
        ,NVL((SUM(RA_CM)/DECODE(SUM(LOD_QTY), 0, NULL, SUM(LOD_QTY))),0) AS RA_CMPB
        FROM
        (
#end 

----2015.08.20 기존 소스 시작. VVD옵션을 체크했을 때와 체크하지 않았을 때의 SUPPLY TOTAL값이 차이나 나는 현상이 발생하여, 기존소스 일부에 주석처리하고, 아래 위로 소스 덧붙입니다.
----2015.10.14 기존 소스를 서브쿼리로 만들어서 아래 위로 BSE_MON에 해당하는 분기를 구하는 로직 추가.
SELECT BSE_YR
, BSE_QTR_CD
, OFC_VW_CD
, TRD_CD
, SUB_TRD_CD
, RLANE_CD
, DIR_CD
, HUL_BND_CD
, SLS_YRMON
, BSE_MON
, BSE_WK
, VVD
, FNL_BSA_CAPA
, RHQ_CD
, RGN_OFC_CD
, LOD_QTY
, G_REV
, GRPB
, GRPB_DECIMAL
, PA_CM_C
, RA_CM_C
, PA_CMCB
, RA_CMCB
, PA_CM
, RA_CM
, PA_CMPB
, RA_CMPB
FROM
(
(
SELECT * FROM
(
SELECT BSE_YR
, BSE_QTR_CD
, OFC_VW_CD
, TRD_CD
, SUB_TRD_CD
, RLANE_CD
, DIR_CD
, HUL_BND_CD
, SLS_YRMON
, BSE_MON
, CASE BSE_MON WHEN '01' THEN '1Q'
    WHEN '02' THEN '1Q'
    WHEN '03' THEN '1Q'
    WHEN '04' THEN '2Q'
    WHEN '05' THEN '2Q'
    WHEN '06' THEN '2Q'
    WHEN '07' THEN '3Q'
    WHEN '08' THEN '3Q'
    WHEN '09' THEN '3Q'
    WHEN '10' THEN '4Q'
    WHEN '11' THEN '4Q'
    WHEN '12' THEN '4Q' END AS QTA_BASED_ON_BSE_MON
, BSE_WK
, VVD
, FNL_BSA_CAPA
, RHQ_CD
, RGN_OFC_CD
, LOD_QTY
, G_REV
, GRPB
, GRPB_DECIMAL
, PA_CM_C
, RA_CM_C
, PA_CMCB
, RA_CMCB
, PA_CM
, RA_CM
, PA_CMPB
, RA_CMPB
FROM
(
SELECT DISTINCT 
         BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,SUBSTR(HUL_BND_CD, 1, 1) || '/' || SUBSTR(HUL_BND_CD, 2) AS HUL_BND_CD
###if(${f_chk_week} == 'W')
        ,SLS_YRMON
###else
##        ,BSE_YR||BSE_MON AS SLS_YRMON
###end
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
        ,RHQ_CD
        ,RGN_OFC_CD
        ,ROUND(SUM(LOD_QTY)) AS LOD_QTY
        #if (${excel_flg} == 'Y')
        ,ROUND(SUM(G_REV))   AS G_REV
        ,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,ROUND(SUM(PA_CM_C))              AS PA_CM_C
        ,ROUND(SUM(RA_CM_C))              AS RA_CM_C
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY)))                AS PA_CMCB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY)))                AS RA_CMCB
        ,ROUND(SUM(G_REV) - SUM(PA_CM_C)) AS PA_CM
        ,ROUND(SUM(G_REV) - SUM(RA_CM_C)) AS RA_CM
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY))) AS PA_CMPB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY))) AS RA_CMPB
        #else
        ,SUM(G_REV)   AS G_REV
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY)) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,SUM(PA_CM_C)              AS PA_CM_C
        ,SUM(RA_CM_C)              AS RA_CM_C
        ,DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY))                AS PA_CMCB
        ,DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY))                AS RA_CMCB
        ,SUM(G_REV) - SUM(PA_CM_C) AS PA_CM
        ,SUM(G_REV) - SUM(RA_CM_C) AS RA_CM
        ,DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY)) AS PA_CMPB
        ,DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY)) AS RA_CMPB
        #end
    FROM (
           SELECT Q.BSE_YR
                 ,Q.BSE_QTR_CD
                 ,DECODE(Q.OFC_VW_CD, 'L', 'Loading', 'Contract') AS OFC_VW_CD
                 ,Q.TRD_CD
                 ,T.SUB_TRD_CD
                 ,Q.RLANE_CD
                 ,Q.DIR_CD
#if (${f_ofc_lvl} == '01')
                 ,'' AS RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '02')
                 ,Q.RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '03') 
                 ,Q.RHQ_CD
                 ,Q.RGN_OFC_CD
#end
###if(${f_chk_week} == 'W' && ${f_chk_vvd} == 'V')
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
###elseif (${f_chk_week} == 'W')
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK) AS FNL_BSA_CAPA
###elseif (${f_chk_vvd} == 'V')
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
###else
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON) AS FNL_BSA_CAPA
###end
                 ,C.HUL_BND_CD
                 ,T.BSE_MON
                 ,MIN(T.SLS_YRMON) OVER (PARTITION BY T.BSE_TP_CD, T.BSE_YR, T.BSE_QTR_CD, T.TRD_CD, T.SUB_TRD_CD, T.RLANE_CD, T.DIR_CD, T.BSE_MON, T.BSE_WK) AS SLS_YRMON
###if(${f_chk_week} != 'W')
##                 ,'' AS BSE_WK
###else
                 ,T.BSE_WK
###end
###if(${f_chk_vvd} != 'V')
##                 ,'' AS VVD
###else
                 ,Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD AS VVD
###end
                 ,Q.LOD_QTY
                 ,Q.LOD_QTY * Q.GRS_RPB_REV 	   AS G_REV
                 ,Q.LOD_QTY * Q.PA_CM_UC_AMT       AS PA_CM_C
                 ,Q.LOD_QTY * Q.RA_CM_UC_AMT       AS RA_CM_C
             FROM SQM_QTA_RLSE_VER V
                 ,SQM_CFM_QTA      Q
                 ,SQM_CFM_TGT_VVD  T
                 ,MAS_LANE_RGST    C

            WHERE V.BSE_TP_CD       = @[f_bse_tp_cd]
              AND V.BSE_YR          = @[f_bse_yr]
              AND V.BSE_QTR_CD      = @[f_bse_qtr_cd]
              AND V.SQM_VER_STS_CD  = 'R'
              AND T.QTA_TGT_CD      = 'D'		-- 고정
              AND Q.QTA_RLSE_VER_NO = V.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = V.BSE_TP_CD
              AND Q.BSE_YR          = V.BSE_YR
              AND Q.BSE_QTR_CD      = V.BSE_QTR_CD
              AND Q.OFC_VW_CD       = @[f_ofc_vw_cd]
              AND Q.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = T.BSE_TP_CD
              AND Q.BSE_YR          = T.BSE_YR
              AND Q.BSE_QTR_CD      = T.BSE_QTR_CD
              AND Q.QTA_TGT_CD      = T.QTA_TGT_CD
              AND Q.TRD_CD          = T.TRD_CD
              AND Q.RLANE_CD        = T.RLANE_CD
              AND Q.DIR_CD          = T.DIR_CD
              AND Q.VSL_CD          = T.VSL_CD
              AND Q.SKD_VOY_NO      = T.SKD_VOY_NO
              AND Q.SKD_DIR_CD      = T.SKD_DIR_CD
              AND T.RLANE_CD        = C.RLANE_CD
              AND T.DIR_CD          = C.DIR_CD
              AND T.TRD_CD          = C.TRD_CD
              AND T.IOC_CD          = C.IOC_CD
              AND Q.LOD_QTY         <> 0

#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
              AND Q.TRD_CD          = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
              AND Q.RLANE_CD        = @[f_rlane_cd]
#end
#if (${f_gubun} != 'on' && ${f_dir_cd} != '' && ${f_dir_cd} != 'All')
              AND Q.DIR_CD          = @[f_dir_cd]
#end
#if (${f_gubun} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
              AND C.HUL_BND_CD      = @[f_trd_dir]
#end
#if (${f_ofc_lvl} != '01' && ${f_rhq_cd} != '' && ${f_rhq_cd} != 'All')
              AND Q.RHQ_CD          = @[f_rhq_cd]
#end
#if (${f_ofc_lvl} == '03' && ${f_rgn_ofc_cd} != '' && ${f_rgn_ofc_cd} != 'All')
              AND Q.RGN_OFC_CD      = @[f_rgn_ofc_cd]
#end
#if (${f_fm_mon} != '' && ${f_to_mon} != '')
              AND T.BSE_MON BETWEEN @[f_fm_mon] AND @[f_to_mon]
#end
#if (${f_fm_wk} != '' && ${f_to_wk} != '')
              AND T.BSE_WK  BETWEEN @[f_fm_wk] AND @[f_to_wk]
#end
#if (${f_chk_aloc_qta} != '')
              AND Q.SQM_CNG_TP_CD   = @[f_chk_aloc_qta]
#end
         )
GROUP BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,RHQ_CD
        ,RGN_OFC_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
###if(${f_chk_week} == 'W')
        ,SLS_YRMON
###else
##        ,BSE_YR||BSE_MON
###end
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
ORDER BY 
        TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_MON
###if(${f_chk_week} == 'W')
        ,NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)
###end
        ,BSE_WK
		,VVD
		,RHQ_CD
        ,RGN_OFC_CD
)
)
WHERE QTA_BASED_ON_BSE_MON = @[f_bse_qtr_cd]
)

UNION ALL -- 검색조건의 분기의 다음 분기 데이터에 검색해서 검색조건 분기에 해당하는 데이터가 있으면 가져옴
(
SELECT * FROM
(
SELECT BSE_YR
, @[f_bse_qtr_cd] -- 다음 분기 데이터지만 조회시 통일성을 위해 검색 조건의 분기로 변경되게 함
, OFC_VW_CD
, TRD_CD
, SUB_TRD_CD
, RLANE_CD
, DIR_CD
, HUL_BND_CD
, SLS_YRMON
, BSE_MON
, CASE BSE_MON WHEN '01' THEN '1Q'
    WHEN '02' THEN '1Q'
    WHEN '03' THEN '1Q'
    WHEN '04' THEN '2Q'
    WHEN '05' THEN '2Q'
    WHEN '06' THEN '2Q'
    WHEN '07' THEN '3Q'
    WHEN '08' THEN '3Q'
    WHEN '09' THEN '3Q'
    WHEN '10' THEN '4Q'
    WHEN '11' THEN '4Q'
    WHEN '12' THEN '4Q' END AS QTA_BASED_ON_BSE_MON
, BSE_WK
, VVD
, FNL_BSA_CAPA
, RHQ_CD
, RGN_OFC_CD
, LOD_QTY
, G_REV
, GRPB
, GRPB_DECIMAL
, PA_CM_C
, RA_CM_C
, PA_CMCB
, RA_CMCB
, PA_CM
, RA_CM
, PA_CMPB
, RA_CMPB
FROM
(
SELECT DISTINCT 
         BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,SUBSTR(HUL_BND_CD, 1, 1) || '/' || SUBSTR(HUL_BND_CD, 2) AS HUL_BND_CD
###if(${f_chk_week} == 'W')
        ,SLS_YRMON
###else
##        ,BSE_YR||BSE_MON AS SLS_YRMON
###end
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
        ,RHQ_CD
        ,RGN_OFC_CD
        ,ROUND(SUM(LOD_QTY)) AS LOD_QTY
        #if (${excel_flg} == 'Y')
        ,ROUND(SUM(G_REV))   AS G_REV
        ,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,ROUND(SUM(PA_CM_C))              AS PA_CM_C
        ,ROUND(SUM(RA_CM_C))              AS RA_CM_C
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY)))                AS PA_CMCB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY)))                AS RA_CMCB
        ,ROUND(SUM(G_REV) - SUM(PA_CM_C)) AS PA_CM
        ,ROUND(SUM(G_REV) - SUM(RA_CM_C)) AS RA_CM
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY))) AS PA_CMPB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY))) AS RA_CMPB
        #else
        ,SUM(G_REV)   AS G_REV
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY)) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,SUM(PA_CM_C)              AS PA_CM_C
        ,SUM(RA_CM_C)              AS RA_CM_C
        ,DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY))                AS PA_CMCB
        ,DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY))                AS RA_CMCB
        ,SUM(G_REV) - SUM(PA_CM_C) AS PA_CM
        ,SUM(G_REV) - SUM(RA_CM_C) AS RA_CM
        ,DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY)) AS PA_CMPB
        ,DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY)) AS RA_CMPB
        #end
    FROM (
           SELECT Q.BSE_YR
                 ,Q.BSE_QTR_CD
                 ,DECODE(Q.OFC_VW_CD, 'L', 'Loading', 'Contract') AS OFC_VW_CD
                 ,Q.TRD_CD
                 ,T.SUB_TRD_CD
                 ,Q.RLANE_CD
                 ,Q.DIR_CD
#if (${f_ofc_lvl} == '01')
                 ,'' AS RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '02')
                 ,Q.RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '03') 
                 ,Q.RHQ_CD
                 ,Q.RGN_OFC_CD
#end
###if(${f_chk_week} == 'W' && ${f_chk_vvd} == 'V')
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
###elseif (${f_chk_week} == 'W')
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK) AS FNL_BSA_CAPA
###elseif (${f_chk_vvd} == 'V')
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
###else
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON) AS FNL_BSA_CAPA
###end
                 ,C.HUL_BND_CD
                 ,T.BSE_MON
                 ,MIN(T.SLS_YRMON) OVER (PARTITION BY T.BSE_TP_CD, T.BSE_YR, T.BSE_QTR_CD, T.TRD_CD, T.SUB_TRD_CD, T.RLANE_CD, T.DIR_CD, T.BSE_MON, T.BSE_WK) AS SLS_YRMON
###if(${f_chk_week} != 'W')
##                 ,'' AS BSE_WK
###else
                 ,T.BSE_WK
###end
###if(${f_chk_vvd} != 'V')
##                 ,'' AS VVD
###else
                 ,Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD AS VVD
###end
                 ,Q.LOD_QTY
                 ,Q.LOD_QTY * Q.GRS_RPB_REV 	   AS G_REV
                 ,Q.LOD_QTY * Q.PA_CM_UC_AMT       AS PA_CM_C
                 ,Q.LOD_QTY * Q.RA_CM_UC_AMT       AS RA_CM_C
             FROM SQM_QTA_RLSE_VER V
                 ,SQM_CFM_QTA      Q
                 ,SQM_CFM_TGT_VVD  T
                 ,MAS_LANE_RGST    C

            WHERE V.BSE_TP_CD       = @[f_bse_tp_cd]
              AND V.BSE_YR          = DECODE(@[f_bse_qtr_cd], '4Q', @[f_bse_yr] + 1, @[f_bse_yr])
              AND V.BSE_QTR_CD      = DECODE(@[f_bse_qtr_cd], '1Q', '2Q', '2Q', '3Q', '3Q', '4Q', '4Q', '1Q')
              AND V.SQM_VER_STS_CD  = 'R'
              AND T.QTA_TGT_CD      = 'D'		-- 고정
              AND Q.QTA_RLSE_VER_NO = V.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = V.BSE_TP_CD
              AND Q.BSE_YR          = V.BSE_YR
              AND Q.BSE_QTR_CD      = V.BSE_QTR_CD
              AND Q.OFC_VW_CD       = @[f_ofc_vw_cd]
              AND Q.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = T.BSE_TP_CD
              AND Q.BSE_YR          = T.BSE_YR
              AND Q.BSE_QTR_CD      = T.BSE_QTR_CD
              AND Q.QTA_TGT_CD      = T.QTA_TGT_CD
              AND Q.TRD_CD          = T.TRD_CD
              AND Q.RLANE_CD        = T.RLANE_CD
              AND Q.DIR_CD          = T.DIR_CD
              AND Q.VSL_CD          = T.VSL_CD
              AND Q.SKD_VOY_NO      = T.SKD_VOY_NO
              AND Q.SKD_DIR_CD      = T.SKD_DIR_CD
              AND T.RLANE_CD        = C.RLANE_CD
              AND T.DIR_CD          = C.DIR_CD
              AND T.TRD_CD          = C.TRD_CD
              AND T.IOC_CD          = C.IOC_CD
              AND Q.LOD_QTY         <> 0
              
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
              AND Q.TRD_CD          = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
              AND Q.RLANE_CD        = @[f_rlane_cd]
#end
#if (${f_gubun} != 'on' && ${f_dir_cd} != '' && ${f_dir_cd} != 'All')
              AND Q.DIR_CD          = @[f_dir_cd]
#end
#if (${f_gubun} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
              AND C.HUL_BND_CD      = @[f_trd_dir]
#end
#if (${f_ofc_lvl} != '01' && ${f_rhq_cd} != '' && ${f_rhq_cd} != 'All')
              AND Q.RHQ_CD          = @[f_rhq_cd]
#end
#if (${f_ofc_lvl} == '03' && ${f_rgn_ofc_cd} != '' && ${f_rgn_ofc_cd} != 'All')
              AND Q.RGN_OFC_CD      = @[f_rgn_ofc_cd]
#end
#if (${f_fm_mon} != '' && ${f_to_mon} != '')
              AND T.BSE_MON BETWEEN @[f_fm_mon] AND @[f_to_mon]
#end
#if (${f_fm_wk} != '' && ${f_to_wk} != '')
              AND T.BSE_WK  BETWEEN @[f_fm_wk] AND @[f_to_wk]
#end
#if (${f_chk_aloc_qta} != '')
              AND Q.SQM_CNG_TP_CD   = @[f_chk_aloc_qta]
#end
         )
GROUP BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,RHQ_CD
        ,RGN_OFC_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
###if(${f_chk_week} == 'W')
        ,SLS_YRMON
###else
##        ,BSE_YR||BSE_MON
###end
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
ORDER BY 
        TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_MON
###if(${f_chk_week} == 'W')
        ,NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)
###end
        ,BSE_WK
		,VVD
		,RHQ_CD
        ,RGN_OFC_CD
)
)
WHERE QTA_BASED_ON_BSE_MON = @[f_bse_qtr_cd]
)

UNION ALL -- 검색조건의 분기보다 한 분기 이전의 데이터를 검색해서 검색조건 분기에 해당하는 데이터가 있으면 가져옴
(
SELECT * FROM
(
SELECT BSE_YR
, @[f_bse_qtr_cd] -- 이전 분기 데이터지만 조회시 통일성을 위해 검색 조건의 분기로 변경되게 함
, OFC_VW_CD
, TRD_CD
, SUB_TRD_CD
, RLANE_CD
, DIR_CD
, HUL_BND_CD
, SLS_YRMON
, BSE_MON
, CASE BSE_MON WHEN '01' THEN '1Q'
    WHEN '02' THEN '1Q'
    WHEN '03' THEN '1Q'
    WHEN '04' THEN '2Q'
    WHEN '05' THEN '2Q'
    WHEN '06' THEN '2Q'
    WHEN '07' THEN '3Q'
    WHEN '08' THEN '3Q'
    WHEN '09' THEN '3Q'
    WHEN '10' THEN '4Q'
    WHEN '11' THEN '4Q'
    WHEN '12' THEN '4Q' END AS QTA_BASED_ON_BSE_MON
, BSE_WK
, VVD
, FNL_BSA_CAPA
, RHQ_CD
, RGN_OFC_CD
, LOD_QTY
, G_REV
, GRPB
, GRPB_DECIMAL
, PA_CM_C
, RA_CM_C
, PA_CMCB
, RA_CMCB
, PA_CM
, RA_CM
, PA_CMPB
, RA_CMPB
FROM
(
SELECT DISTINCT 
         BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,SUBSTR(HUL_BND_CD, 1, 1) || '/' || SUBSTR(HUL_BND_CD, 2) AS HUL_BND_CD
###if(${f_chk_week} == 'W')
        ,SLS_YRMON
###else
##        ,BSE_YR||BSE_MON AS SLS_YRMON
###end
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
        ,RHQ_CD
        ,RGN_OFC_CD
        ,ROUND(SUM(LOD_QTY)) AS LOD_QTY
        #if (${excel_flg} == 'Y')
        ,ROUND(SUM(G_REV))   AS G_REV
        ,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,ROUND(SUM(PA_CM_C))              AS PA_CM_C
        ,ROUND(SUM(RA_CM_C))              AS RA_CM_C
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY)))                AS PA_CMCB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY)))                AS RA_CMCB
        ,ROUND(SUM(G_REV) - SUM(PA_CM_C)) AS PA_CM
        ,ROUND(SUM(G_REV) - SUM(RA_CM_C)) AS RA_CM
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY))) AS PA_CMPB
        ,ROUND(DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY))) AS RA_CMPB
        #else
        ,SUM(G_REV)   AS G_REV
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY)) AS GRPB
        ,DECODE(SUM(LOD_QTY), 0, 0, SUM(G_REV) / SUM(LOD_QTY))        AS GRPB_DECIMAL
        ,SUM(PA_CM_C)              AS PA_CM_C
        ,SUM(RA_CM_C)              AS RA_CM_C
        ,DECODE(SUM(LOD_QTY), 0 ,0, SUM(PA_CM_C) / SUM(LOD_QTY))                AS PA_CMCB
        ,DECODE(SUM(LOD_QTY), 0 ,0, SUM(RA_CM_C) / SUM(LOD_QTY))                AS RA_CMCB
        ,SUM(G_REV) - SUM(PA_CM_C) AS PA_CM
        ,SUM(G_REV) - SUM(RA_CM_C) AS RA_CM
        ,DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(PA_CM_C)) / SUM(LOD_QTY)) AS PA_CMPB
        ,DECODE(SUM(LOD_QTY), 0 ,0, (SUM(G_REV) - SUM(RA_CM_C)) / SUM(LOD_QTY)) AS RA_CMPB
        #end
    FROM (
           SELECT Q.BSE_YR
                 ,Q.BSE_QTR_CD
                 ,DECODE(Q.OFC_VW_CD, 'L', 'Loading', 'Contract') AS OFC_VW_CD
                 ,Q.TRD_CD
                 ,T.SUB_TRD_CD
                 ,Q.RLANE_CD
                 ,Q.DIR_CD
#if (${f_ofc_lvl} == '01')
                 ,'' AS RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '02')
                 ,Q.RHQ_CD
                 ,'' AS RGN_OFC_CD
#elseif (${f_ofc_lvl} == '03') 
                 ,Q.RHQ_CD
                 ,Q.RGN_OFC_CD
#end
###if(${f_chk_week} == 'W' && ${f_chk_vvd} == 'V')
                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
###elseif (${f_chk_week} == 'W')
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, T.BSE_WK) AS FNL_BSA_CAPA
###elseif (${f_chk_vvd} == 'V')
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON, Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD) AS FNL_BSA_CAPA
###else
##                 ,SUM(T.FNL_BSA_CAPA) OVER (PARTITION BY Q.BSE_YR, Q.OFC_VW_CD, Q.RGN_OFC_CD, Q.TRD_CD, T.SUB_TRD_CD, Q.RLANE_CD, Q.DIR_CD, Q.RHQ_CD, T.BSE_MON) AS FNL_BSA_CAPA
###end
                 ,C.HUL_BND_CD
                 ,T.BSE_MON
                 ,MIN(T.SLS_YRMON) OVER (PARTITION BY T.BSE_TP_CD, T.BSE_YR, T.BSE_QTR_CD, T.TRD_CD, T.SUB_TRD_CD, T.RLANE_CD, T.DIR_CD, T.BSE_MON, T.BSE_WK) AS SLS_YRMON
###if(${f_chk_week} != 'W')
##                 ,'' AS BSE_WK
###else
                 ,T.BSE_WK
###end
###if(${f_chk_vvd} != 'V')
##                 ,'' AS VVD
###else
                 ,Q.VSL_CD || Q.SKD_VOY_NO || Q.SKD_DIR_CD AS VVD
###end
                 ,Q.LOD_QTY
                 ,Q.LOD_QTY * Q.GRS_RPB_REV 	   AS G_REV
                 ,Q.LOD_QTY * Q.PA_CM_UC_AMT       AS PA_CM_C
                 ,Q.LOD_QTY * Q.RA_CM_UC_AMT       AS RA_CM_C
             FROM SQM_QTA_RLSE_VER V
                 ,SQM_CFM_QTA      Q
                 ,SQM_CFM_TGT_VVD  T
                 ,MAS_LANE_RGST    C

            WHERE V.BSE_TP_CD       = @[f_bse_tp_cd]
              AND V.BSE_YR          = DECODE(@[f_bse_qtr_cd], '1Q', @[f_bse_yr] - 1, @[f_bse_yr])
              AND V.BSE_QTR_CD      = DECODE(@[f_bse_qtr_cd], '1Q', '4Q', '2Q', '1Q', '3Q', '2Q', '4Q', '3Q')
              AND V.SQM_VER_STS_CD  = 'R'
              AND T.QTA_TGT_CD      = 'D'		-- 고정
              AND Q.QTA_RLSE_VER_NO = V.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = V.BSE_TP_CD
              AND Q.BSE_YR          = V.BSE_YR
              AND Q.BSE_QTR_CD      = V.BSE_QTR_CD
              AND Q.OFC_VW_CD       = @[f_ofc_vw_cd]
              AND Q.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
              AND Q.BSE_TP_CD       = T.BSE_TP_CD
              AND Q.BSE_YR          = T.BSE_YR
              AND Q.BSE_QTR_CD      = T.BSE_QTR_CD
              AND Q.QTA_TGT_CD      = T.QTA_TGT_CD
              AND Q.TRD_CD          = T.TRD_CD
              AND Q.RLANE_CD        = T.RLANE_CD
              AND Q.DIR_CD          = T.DIR_CD
              AND Q.VSL_CD          = T.VSL_CD
              AND Q.SKD_VOY_NO      = T.SKD_VOY_NO
              AND Q.SKD_DIR_CD      = T.SKD_DIR_CD
              AND T.RLANE_CD        = C.RLANE_CD
              AND T.DIR_CD          = C.DIR_CD
              AND T.TRD_CD          = C.TRD_CD
              AND T.IOC_CD          = C.IOC_CD
              AND Q.LOD_QTY         <> 0

#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
              AND Q.TRD_CD          = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
              AND Q.RLANE_CD        = @[f_rlane_cd]
#end
#if (${f_gubun} != 'on' && ${f_dir_cd} != '' && ${f_dir_cd} != 'All')
              AND Q.DIR_CD          = @[f_dir_cd]
#end
#if (${f_gubun} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
              AND C.HUL_BND_CD      = @[f_trd_dir]
#end
#if (${f_ofc_lvl} != '01' && ${f_rhq_cd} != '' && ${f_rhq_cd} != 'All')
              AND Q.RHQ_CD          = @[f_rhq_cd]
#end
#if (${f_ofc_lvl} == '03' && ${f_rgn_ofc_cd} != '' && ${f_rgn_ofc_cd} != 'All')
              AND Q.RGN_OFC_CD      = @[f_rgn_ofc_cd]
#end
#if (${f_fm_mon} != '' && ${f_to_mon} != '')
              AND T.BSE_MON BETWEEN @[f_fm_mon] AND @[f_to_mon]
#end
#if (${f_fm_wk} != '' && ${f_to_wk} != '')
              AND T.BSE_WK  BETWEEN @[f_fm_wk] AND @[f_to_wk]
#end
#if (${f_chk_aloc_qta} != '')
              AND Q.SQM_CNG_TP_CD   = @[f_chk_aloc_qta]
#end
         )
GROUP BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,RHQ_CD
        ,RGN_OFC_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
###if(${f_chk_week} == 'W')
        ,SLS_YRMON
###else
##        ,BSE_YR||BSE_MON
###end
        ,BSE_MON
        ,BSE_WK
        ,VVD
        ,FNL_BSA_CAPA
ORDER BY 
        TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_MON
###if(${f_chk_week} == 'W')
        ,NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)
###end
        ,BSE_WK
		,VVD
		,RHQ_CD
        ,RGN_OFC_CD
)
)
WHERE QTA_BASED_ON_BSE_MON = @[f_bse_qtr_cd]
)
)
ORDER BY 
        TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_MON
        ,NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)
        ,BSE_WK
		,VVD
		,RHQ_CD
        ,RGN_OFC_CD
----2015.08.20 기존 소스 끝

#if (${f_chk_week} == 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '03')
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
	,RGN_OFC_CD
--    ,TOT_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
--    , VVD
	,RHQ_CD
	,RGN_OFC_CD    
)
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
	,RGN_OFC_CD
--    ,TOT_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
--    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
--    , VVD
	,RHQ_CD
	,RGN_OFC_CD 
#elseif (${f_chk_week} == 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '02')
        )
        GROUP BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
        ,BSE_WK
        ,SLS_YRMON 
        ,VVD
        ,RHQ_CD
        ,FNL_BSA_CAPA 
        ORDER BY SUB_TRD_CD
        , RLANE_CD
        , DIR_CD
        , BSE_MON
        , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
        , BSE_WK
        , VVD
        ,RHQ_CD
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
--    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
--    , VVD
	,RHQ_CD
)
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
--    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
--    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
--    , VVD
	,RHQ_CD
#elseif (${f_chk_week} == 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '01')
        )
        GROUP BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
        ,BSE_WK
        ,SLS_YRMON 
        ,VVD
        ,FNL_BSA_CAPA 
        ORDER BY SUB_TRD_CD
        , RLANE_CD
        , DIR_CD
        , BSE_MON
        , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
        , BSE_WK
        , VVD
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
    ,SLS_YRMON 
--    ,VVD
--    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
--    , VVD
)
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
--    ,VVD
--    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
--    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
--    , VVD
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '03')
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
	,RGN_OFC_CD
--    ,TOT_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--    , BSE_WK
--    , VVD
	,RHQ_CD
	,RGN_OFC_CD 
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
    ,SLS_YRMON 
--    ,VVD
	,RHQ_CD
	,RGN_OFC_CD
--    ,TOT_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
--    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--    , BSE_WK
--    , VVD
	,RHQ_CD
	,RGN_OFC_CD 
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '02')
        )
        GROUP BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,SUB_TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,HUL_BND_CD
        ,BSE_MON                 
    --    ,BSE_WK
        ,SLS_YRMON 
        ,VVD
        ,RHQ_CD
        ,FNL_BSA_CAPA 
        ORDER BY SUB_TRD_CD
        , RLANE_CD
        , DIR_CD
        , BSE_MON
        , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    --    , BSE_WK
        , VVD
        ,RHQ_CD
)
GROUP BY BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,HUL_BND_CD
,BSE_MON                 
--,BSE_WK
,SLS_YRMON 
--,VVD
,RHQ_CD
--,FNL_BSA_CAPA 
ORDER BY SUB_TRD_CD
, RLANE_CD
, DIR_CD
, BSE_MON
, NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--, BSE_WK
--, VVD
,RHQ_CD   
)
GROUP BY BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,HUL_BND_CD
,BSE_MON                 
--,BSE_WK
,SLS_YRMON 
--,VVD
,RHQ_CD
--,FNL_BSA_CAPA 
ORDER BY SUB_TRD_CD
, RLANE_CD
, DIR_CD
, BSE_MON
--, NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--, BSE_WK
--, VVD
,RHQ_CD   
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} != 'V' && ${f_ofc_lvl} == '01')
)
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
    ,SLS_YRMON 
    ,VVD
    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--    , BSE_WK
    , VVD
)
GROUP BY BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,HUL_BND_CD
,BSE_MON                 
--,BSE_WK
,SLS_YRMON 
--,VVD
--,FNL_BSA_CAPA 
ORDER BY SUB_TRD_CD
, RLANE_CD
, DIR_CD
, BSE_MON
, NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--, BSE_WK
--, VVD
)
GROUP BY BSE_YR
,BSE_QTR_CD
,OFC_VW_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,HUL_BND_CD
,BSE_MON                 
--,BSE_WK
--,SLS_YRMON 
--,VVD
--,FNL_BSA_CAPA 
ORDER BY SUB_TRD_CD
, RLANE_CD
, DIR_CD
, BSE_MON
--, NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--, BSE_WK
--, VVD
###elseif (${f_chk_week} != 'W' && ${f_chk_vvd} == 'V' && ${f_ofc_lvl} == '03')
#elseif (${f_chk_week} != 'W' && ${f_chk_vvd} == 'V')
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
    ,SLS_YRMON 
    ,VVD
#if (${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
	,RHQ_CD
#if (${f_ofc_lvl} == '03')
	,RGN_OFC_CD 
#end
#end
    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--    , BSE_WK
    , VVD
#if (${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
	,RHQ_CD
#if (${f_ofc_lvl} == '03')
	,RGN_OFC_CD 
#end
#end
)
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
--    ,BSE_WK
--    ,SLS_YRMON 
    ,VVD
#if (${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
	,RHQ_CD
#if (${f_ofc_lvl} == '03')
	,RGN_OFC_CD 
#end
#end
    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
--    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
--    , BSE_WK
    , VVD
#if (${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
	,RHQ_CD
#if (${f_ofc_lvl} == '03')
	,RGN_OFC_CD 
#end
#end
#elseif (${f_chk_week} == 'W' && ${f_chk_vvd} == 'V' && ${f_ofc_lvl} != '03')
    )
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
    ,SLS_YRMON 
    ,VVD
#if (${f_ofc_lvl} == '02')
	,RHQ_CD
#end
    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
    , VVD
#if (${f_ofc_lvl} == '02')
	,RHQ_CD
#end
)
    GROUP BY BSE_YR
    ,BSE_QTR_CD
    ,OFC_VW_CD
    ,TRD_CD
    ,SUB_TRD_CD
    ,RLANE_CD
    ,DIR_CD
    ,HUL_BND_CD
    ,BSE_MON                 
    ,BSE_WK
--    ,SLS_YRMON 
    ,VVD
#if (${f_ofc_lvl} == '02')
	,RHQ_CD
#end
    ,FNL_BSA_CAPA 
    ORDER BY SUB_TRD_CD
    , RLANE_CD
    , DIR_CD
    , BSE_MON
--    , NVL(SUBSTR(SLS_YRMON,0,4),BSE_YR)      
    , BSE_WK
    , VVD
#if (${f_ofc_lvl} == '02')
	,RHQ_CD
#end
#end
)
WHERE BSE_YR = @[f_bse_yr]			]]></sql>
			<params>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="f_ofc_vw_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_trd_dir" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
				<param name="f_rgn_ofc_cd" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_chk_aloc_qta" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
