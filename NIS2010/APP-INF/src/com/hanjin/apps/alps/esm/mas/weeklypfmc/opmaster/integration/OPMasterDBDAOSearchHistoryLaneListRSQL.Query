<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OPMasterDBDAOSearchHistoryLaneListRSQL">
			<desc><![CDATA[2016.03.03 Create Lane Table, Create Vessel Table history 자동 관리]]></desc>
			<sql><![CDATA[
#if (${date_check_flag} == 'Y')
SELECT TRD_CD, RLANE_CD, DIR_CD, LANE_APLY_FOM_DT, LANE_APLY_TO_DT, NEXT_FROM
FROM
(
#else
#end
SELECT
     DECODE(B.TRD_CD, NULL, 'I', 'R')          FLAG
    ,NVL(B.LANE_SEQ,       1)                LANE_SEQ
    ,NVL(B.TRD_CD, A.TRD_CD)                   TRD_CD
    ,A.SUB_TRD_CD                              SUB_TRD_CD
    ,A.SLAN_CD                                 SLAN_CD
    ,NVL(B.RLANE_CD, A.RLANE_CD)               RLANE_CD
    ,NVL(B.DIR_CD, A.DIR_CD)                   DIR_CD
    ,NVL(B.IOC_CD, A.IOC_CD)                   IOC_CD
    ,NVL(B.VSL_LANE_TP_CD, A.VSL_LANE_TP_CD)   VSL_LANE_TP_CD
    ,B.OP_LANE_TP_CD
    ,NVL(B.STUP_FLG, A.STUP_FLG)               STUP_FLG
    ,B.VVD_CD                                  VVD_CD
    ,NVL(B.LANE_APLY_FM_DT,'1900-01-01')       LANE_APLY_FOM_DT
    ,NVL(B.LANE_APLY_TO_DT,'9999-12-31')       LANE_APLY_TO_DT
    ,(SELECT C.LANE_APLY_FM_DT 
        FROM MAS_LANE_TP_HIS C
        WHERE C.TRD_CD = A.TRD_CD
            AND C.RLANE_CD = A.RLANE_CD
            AND C.DIR_CD = A.DIR_CD 
            AND C.IOC_CD = A.IOC_CD
            AND C.LANE_SEQ = B.LANE_SEQ + 1) AS NEXT_FROM
	,B.UPD_USR_ID
    ,TO_CHAR(B.UPD_DT, 'YYYY/MM/DD HH:MI')     UPD_DT
  FROM MAS_LANE_RGST A FULL OUTER JOIN MAS_LANE_TP_HIS B
    ON (
       A.TRD_CD   = B.TRD_CD
   AND A.RLANE_CD = B.RLANE_CD
   AND A.DIR_CD   = B.DIR_CD
   AND A.IOC_CD   = B.IOC_CD)
 WHERE 1=1
   AND NVL(A.DELT_FLG,'N')= 'N'
   AND A.TRD_CD   = @[f_trd_cd]
   AND A.RLANE_CD = @[f_rlane_cd]
   AND A.DIR_CD   = @[f_dir_cd]
   AND A.IOC_CD   = @[f_ioc_cd]
#if (${date_check_flag} == 'Y')
)
WHERE NEXT_FROM IS NOT NULL
AND ( 
    SUBSTR(LANE_APLY_TO_DT, 1, 4) < SUBSTR(LANE_APLY_FOM_DT, 1, 4)
        OR SUBSTR(LANE_APLY_TO_DT, 1, 4) > SUBSTR(NEXT_FROM, 1, 4)
        OR (SUBSTR(LANE_APLY_TO_DT, 1, 4) = SUBSTR(LANE_APLY_FOM_DT, 1, 4) AND SUBSTR(LANE_APLY_TO_DT, 5, 2) < SUBSTR(LANE_APLY_FOM_DT, 5, 2))
        OR (SUBSTR(LANE_APLY_TO_DT, 1, 4) = SUBSTR(NEXT_FROM, 1, 4) AND SUBSTR(LANE_APLY_TO_DT, 5, 2) > SUBSTR(NEXT_FROM, 5, 2))
        OR (SUBSTR(LANE_APLY_TO_DT, 1, 4) = SUBSTR(LANE_APLY_FOM_DT, 1, 4) AND SUBSTR(LANE_APLY_TO_DT, 5, 2) = SUBSTR(LANE_APLY_FOM_DT, 5, 2) AND SUBSTR(LANE_APLY_TO_DT, 7, 2) < SUBSTR(LANE_APLY_FOM_DT, 7, 2))
        OR (SUBSTR(LANE_APLY_TO_DT, 1, 4) = SUBSTR(NEXT_FROM, 1, 4) AND SUBSTR(LANE_APLY_TO_DT, 5, 2) = SUBSTR(NEXT_FROM, 5, 2) AND SUBSTR(LANE_APLY_TO_DT, 7, 2) > SUBSTR(NEXT_FROM, 7, 2))
    )
#end			]]></sql>
			<params>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_ioc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
