<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchSpaceControlInquiryOfficeListVORSQL">
			<desc><![CDATA[- Lee Sang-Yong : [프로젝트] Ticket ID : CHM-201004171 53ft 추가
2011.01.04 최윤성 [CHM-201008093-01] Office Level Table 생성
 - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체
2011.07.05 [ CHM-201111880-01] 김종준control by HO 화면 보완 - IPC, TS 관련
2012.03.30 [CHM-201217046-01] Double-Calling Port의 경우 Allocation의 정보가 배수로 표시되어, Yard 존재 여부만 체크하도록 변경
2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
2013.01.23 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경
2014.01.03 진마리아 [SRM-201341166] Yield Group의 확대 -> week 6자리로 조회
2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완
2015.03.03 CHM-201534458 SQM QTA주가 변경 관련 적용 요청
2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
2016.07.05 CHM-201642241 VGM(BKG상 표시되는 또 다른 WGT 정보) 도입 관련 SPC 사항]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (
    SELECT @[year]         AS YR_FR     ,
           @[week]         AS WK_FR     ,
           @[year2]        AS YR_TO     ,
           @[week2]        AS WK_TO     ,
           @[sales_office] AS OFC_CD    ,
           @[trade]        AS TRD_CD    ,
           @[subtrade]     AS SUB_TRD_CD,
           @[lane]         AS RLANE_CD  ,
           @[bound]        AS DIR_CD    ,
           @[only_vvd]     AS VVD
      FROM DUAL
)
, VVDS AS (
    SELECT SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           V.COST_WK   , 
           V.SLS_YRMON ,
           V.TRD_CD    ,
           V.SUB_TRD_CD,
           V.RLANE_CD  ,
           V.DIR_CD    ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           V.IOC_CD,
           P.OFC_CD AS OFC_CD
           , CASE WHEN V.COST_YRMON >= '201501' 
                  THEN CEIL(TO_NUMBER(SUBSTR(V.COST_YRMON, -2))/3)||'Q' 
                  ELSE CEIL(TO_NUMBER(DECODE(V.COST_WK,'00','01','53','52',V.COST_WK))/13)||'Q'
             END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청
          , SUBSTR(V.COST_YRMON, 1,4) AS BSE_YR
      FROM MAS_MON_VVD V,
           PARAMS      P
     WHERE V.DELT_FLG = 'N'
       AND V.DIR_CD     LIKE P.DIR_CD     || '%'
       AND V.RLANE_CD   LIKE P.RLANE_CD   || '%'
       AND V.SUB_TRD_CD LIKE P.SUB_TRD_CD || '%'
       AND V.TRD_CD <> 'COM'
       AND V.TRD_CD LIKE P.TRD_CD || '%'
       AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK BETWEEN YR_FR||WK_FR AND YR_TO||WK_TO
       AND P.VVD IS NULL
       AND V.RLANE_CD <> 'RBCCO'
    UNION ALL
    SELECT SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           V.COST_WK   ,
           V.SLS_YRMON ,
           V.TRD_CD    ,
           V.SUB_TRD_CD,
           V.RLANE_CD  ,
           V.DIR_CD    ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           V.IOC_CD,
           P.OFC_CD AS OFC_CD
           , CASE WHEN V.COST_YRMON >= '201501' 
                  THEN CEIL(TO_NUMBER(SUBSTR(V.COST_YRMON, -2))/3)||'Q' 
                  ELSE CEIL(TO_NUMBER(DECODE(V.COST_WK,'00','01','53','52',V.COST_WK))/13)||'Q'
             END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청
          , SUBSTR(V.COST_YRMON, 1,4) AS BSE_YR
      FROM MAS_MON_VVD V,
           PARAMS      P
     WHERE V.DELT_FLG   = 'N'
       AND V.DIR_CD     = SUBSTR(P.VVD, 9, 1)
       AND V.SKD_VOY_NO = SUBSTR(P.VVD, 5, 4)
       AND V.VSL_CD     = SUBSTR(P.VVD, 1, 4)
       AND P.VVD IS NOT NULL
       AND V.RLANE_CD  <> 'RBCCO'
)
, QTA_DATA AS (
    SELECT M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD,
           SUM(D.LOD_QTY) AS VOL,
           SUM((D.GRS_RPB_REV - D.PA_CM_UC_AMT) * D.LOD_QTY) AS CM
      FROM VVDS             M ,
           SQM_CFM_QTA      D ,
           SQM_QTA_RLSE_VER B ,
           SPC_OFC_LVL      T1
     WHERE B.BSE_YR           = M.BSE_YR
       --AND B.BSE_QTR_CD       = CEIL(TO_NUMBER(DECODE(M.COST_WK,'00','01','53','52',M.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(SUBSTR(M.SLS_YRMON, 5, 2)) / 3)||'Q'
	   -- CHM-201534458 SQM QTA주가 변경 관련 적용 요청
	   AND B.BSE_QTR_CD      = M.BSE_QTR_CD
       AND B.SQM_VER_STS_CD   = 'R'
       AND B.BSE_TP_CD        = 'Q' -- 분기 20131205추가
       AND D.QTA_RLSE_VER_NO  = B.QTA_RLSE_VER_NO
       AND D.BSE_TP_CD        = B.BSE_TP_CD -- 분기 20131205추가 
       AND D.BSE_YR           = B.BSE_YR
       AND D.BSE_QTR_CD       = B.BSE_QTR_CD
       AND D.QTA_TGT_CD       = 'D'
       AND D.OFC_VW_CD        = 'L'  -- 20131205추가
       AND D.TRD_CD           = M.TRD_CD
       AND D.RLANE_CD         = M.RLANE_CD
       AND D.DIR_CD           = M.DIR_CD
       AND D.VSL_CD           = M.VSL_CD
       AND D.SKD_VOY_NO       = M.SKD_VOY_NO
       AND D.SKD_DIR_CD       = M.SKD_DIR_CD
       AND T1.SAQ_RGN_OFC_CD  = M.OFC_CD
       AND D.RGN_OFC_CD       = T1.OFC_CD
       AND SUBSTR(M.SLS_YRMON, 1, 4) || M.COST_WK BETWEEN T1.OFC_APLY_FM_YRWK AND T1.OFC_APLY_TO_YRWK
  GROUP BY M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD
)
, ALOC_DATA AS (
    SELECT M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD,
           SUM(DECODE(D.TS_FLG, 'N', D.BKG_AVAL_TTL_QTY)) AS VOL,
           SUM(DECODE(D.TS_FLG, 'N', D.BKG_AVAL_TTL_WGT)) AS WGT,
           SUM(DECODE(D.TS_FLG, 'Y', D.BKG_AVAL_TTL_QTY)) AS ALC_TS_VOL,
           SUM(DECODE(D.TS_FLG, 'Y', D.BKG_AVAL_TTL_WGT)) AS ALC_TS_WGT 
      FROM VVDS             M,
           SPC_ALOC_POL_POD D
           --VSK_VSL_PORT_SKD V
     WHERE M.TRD_CD     = D.TRD_CD
       AND M.RLANE_CD   = D.RLANE_CD
       AND M.DIR_CD     = D.DIR_CD
       AND M.VSL_CD     = D.VSL_CD
       AND M.SKD_VOY_NO = D.SKD_VOY_NO
       AND M.SKD_DIR_CD = D.SKD_DIR_CD
       AND D.SLS_OFC_CD = M.OFC_CD
       -- Double-Calling Port의 경우 Allocation의 정보가 배수로 표시되어, Yard 존재 여부만 체크하도록 변경. @2012-03-30
       AND D.POD_YD_CD IN (SELECT V.YD_CD
                             FROM VSK_VSL_PORT_SKD V
                            WHERE V.SLAN_CD = SUBSTR(M.RLANE_CD, 1, 3)
                              AND V.VSL_CD = M.VSL_CD
                              AND V.SKD_VOY_NO = M.SKD_VOY_NO
                              AND V.SKD_DIR_CD = M.SKD_DIR_CD)
       -- POD와 동일하게 POL도 YARD 존재 여부 CHECK
       AND D.POL_YD_CD IN (SELECT V.YD_CD
                             FROM VSK_VSL_PORT_SKD V
                            WHERE V.SLAN_CD = SUBSTR(M.RLANE_CD, 1, 3)
                              AND V.VSL_CD = M.VSL_CD
                              AND V.SKD_VOY_NO = M.SKD_VOY_NO
                              AND V.SKD_DIR_CD = M.SKD_DIR_CD)
       --AND SUBSTR(M.RLANE_CD, 1, 3) = V.SLAN_CD
       --AND M.VSL_CD     = V.VSL_CD
       --AND M.SKD_VOY_NO = V.SKD_VOY_NO
       --AND M.SKD_DIR_CD = V.SKD_DIR_CD
       --AND SUBSTR(D.POD_YD_CD, 1, LENGTH(NVL(V.YD_CD, V.VPS_PORT_CD))) = NVL(V.YD_CD, V.VPS_PORT_CD)
  GROUP BY M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD
)
, BKG_DATA AS (

    SELECT M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD,
           M.IOC_CD    ,
           M.OFC_CD    ,
           SUM(TTL_FIRM) AS TTL_FIRM, 
           SUM(TTL_WAIT) AS TTL_WAIT,
           SUM(WGT) AS WGT,
           NVL(SUM(BKG_VOL_VGM),0) AS BKG_VOL_VGM,NVL(SUM(BKG_WGT_VGM),0) AS BKG_WGT_VGM,
           SUM(BKG_TS_VOL) AS BKG_TS_VOL,
           SUM(BKG_TS_WGT) AS BKG_TS_WGT,
           NVL(SUM(BKG_TS_VOL_VGM),0) AS BKG_TS_VOL_VGM,NVL(SUM(BKG_TS_WGT_VGM),0) AS BKG_TS_WGT_VGM
      FROM (
            SELECT M.TRD_CD    ,
                   M.SUB_TRD_CD,
                   M.RLANE_CD  ,
                   M.DIR_CD    ,
                   M.COST_YR   ,
                   M.COST_WK   ,
                   M.VSL_CD    ,
                   M.SKD_VOY_NO,
                   M.SKD_DIR_CD,
                   M.IOC_CD    ,
                   M.OFC_CD    ,
                   DECODE(TS_FLG, 'N', DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)), 0)) AS TTL_FIRM,
                   DECODE(TS_FLG, 'N', DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)), 0)) AS TTL_WAIT,
                   DECODE(TS_FLG, 'N', TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))) AS WGT,
                   DECODE(TS_FLG, 'N', BKG_VOL_VGM) AS BKG_VOL_VGM,
				   DECODE(TS_FLG, 'N', BKG_WGT_VGM) AS BKG_WGT_VGM,
                   DECODE(TS_FLG, 'Y', TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0))) AS BKG_TS_VOL,
                   DECODE(TS_FLG, 'Y', TO_NUMBER(NVL(SUBSTR(VAL,  99, 14), 0))) AS BKG_TS_WGT,
                   DECODE(TS_FLG, 'Y', BKG_VOL_VGM) AS BKG_TS_VOL_VGM,
				   DECODE(TS_FLG, 'Y', BKG_WGT_VGM) AS BKG_TS_WGT_VGM
              FROM (
                   SELECT M.TRD_CD    ,
                       M.SUB_TRD_CD,
                       M.RLANE_CD  ,
                       M.DIR_CD    ,
                       M.COST_YR   ,
                       M.COST_WK   ,
                       M.VSL_CD    ,
                       M.SKD_VOY_NO,
                       M.SKD_DIR_CD,
                       M.IOC_CD    ,
                       B.BKG_STS_CD ,
                       M.OFC_CD 	,
          			   (SELECT  TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')  
								|| TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)) , 'FM0000000000.000')  
								|| TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD, 1, 1), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR((R.ACT_WGT * DECODE(R.ACT_WGT,'LBS', 0.00045, 0.001)) 
										+ SUM(Q.OP_CNTR_QTY * (SELECT TS.CNTR_TPSZ_TARE_WGT
                   												 FROM MDM_CNTR_TP_SZ TS
                  												WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
               		 		  FROM BKG_QUANTITY Q
              	    		 WHERE B.BKG_NO = Q.BKG_NO) VAL,
                       BV.VSL_PRE_PST_CD,
					   DECODE(BV.VSL_PRE_PST_CD, 'T', 'N', 'Y') AS TS_FLG
						,(
						SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Z.CNTR_TPSZ_CD), '2', 1, 2)* Z.OP_CNTR_QTY) 
						FROM BKG_QUANTITY Z 
						WHERE Z.BKG_NO= B.BKG_NO AND OP_CNTR_QTY > 0 
						AND EXISTS ( SELECT 1 FROM BKG_CONTAINER C WHERE C.BKG_NO= Z.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL )
						) AS BKG_VOL_VGM
					,(SELECT SUM(NVL(Z.VGM_WGT,0) * DECODE(Z.VGM_WGT_UT_CD,'LBS',0.00045,0.001)) FROM BKG_CONTAINER Z WHERE Z.BKG_NO= B.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL) AS BKG_WGT_VGM
                  FROM BKG_VVD BV,
                       BKG_BOOKING        B  ,
                       VVDS      M,   
                       BKG_BL_DOC  R ,
                       MDM_DTL_REV_LANE   DRL,
                       MDM_REV_LANE       RL ,          
                       SPC_OFC_LVL O
                 WHERE B.BKG_NO         = BV.BKG_NO
                   AND B.BKG_NO           = R.BKG_NO
                   AND B.BKG_STS_CD    IN ('W','F')
                   AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')

             	   AND M.VSL_CD         = BV.VSL_CD
            	   AND M.SKD_VOY_NO     = BV.SKD_VOY_NO
            	   AND M.SKD_DIR_CD     = BV.SKD_DIR_CD

                   AND RL.VSL_SLAN_CD = BV.SLAN_CD
                   AND M.OFC_CD = O.SPC_SLS_OFC_CD
                   AND O.OFC_CD         = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)                   
                   AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK
                   AND DRL.RLANE_CD        = M.RLANE_CD
                   AND DRL.VSL_SLAN_DIR_CD = M.DIR_CD
                   AND DRL.IOC_CD          = M.IOC_CD 
                   AND DRL.TRD_CD          = M.TRD_CD
                   AND DRL.SUB_TRD_CD      = M.SUB_TRD_CD
                   AND DRL.DELT_FLG        = 'N'
                   AND DRL.RLANE_CD        = RL.RLANE_CD
                   AND DRL.FM_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
                                                FROM MDM_LOCATION L
                                               WHERE L.LOC_CD = BV.POL_CD )
                   AND DRL.TO_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
                                                FROM MDM_LOCATION L
                                               WHERE L.LOC_CD = BV.POD_CD )
                   AND RL.RLANE_CD    = M.RLANE_CD
                   AND RL.VSL_TP_CD   = 'C'
                   AND RL.DELT_FLG    = 'N'
                   AND RL.RLANE_CD      <> 'RBCCO'
               ) M
         ) M
  GROUP BY M.TRD_CD    ,
          M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD,
           M.IOC_CD	   ,
           M.OFC_CD

      
)
, FCST_DATA AS (
    SELECT M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD,
           NVL(SUM(DECODE(D.IOC_TS_CD, 'T', 0, NVL(D.CFM_TTL_QTY, 0) + NVL(D.FCAST_40FT_HC_QTY, 0) * 2 + NVL(D.FCAST_45FT_HC_QTY, 0) * 2 +  NVL(D.FCAST_53FT_QTY, 0) * 2)),0)  AS VOL,
           NVL(SUM(DECODE(D.IOC_TS_CD, 'T', 0, D.CFM_TTL_WGT)),0) AS WGT,
           NVL(SUM(DECODE(D.IOC_TS_CD, 'T', NVL(D.CFM_TTL_QTY, 0) + NVL(D.FCAST_40FT_HC_QTY, 0) * 2 + NVL(D.FCAST_45FT_HC_QTY, 0) * 2 +  NVL(D.FCAST_53FT_QTY, 0) * 2)),0)  AS FCT_TC_VOL,
           NVL(SUM(DECODE(D.IOC_TS_CD, 'T', D.CFM_TTL_WGT)),0) FCT_TC_WGT
      FROM VVDS               M,
           SPC_DLY_FCAST_CUST D
     WHERE M.TRD_CD     = D.TRD_CD
       AND M.RLANE_CD   = D.RLANE_CD
       AND M.DIR_CD     = D.DIR_CD
       AND M.VSL_CD     = D.VSL_CD
       AND M.SKD_VOY_NO = D.SKD_VOY_NO
       AND M.SKD_DIR_CD = D.SKD_DIR_CD
       AND M.OFC_CD     = D.SLS_OFC_CD
       AND D.IOC_CD  = M.IOC_CD
       AND D.POL_YD_CD <> '0000000' 
  GROUP BY M.TRD_CD    ,
           M.SUB_TRD_CD,
           M.RLANE_CD  ,
           M.DIR_CD    ,
           M.COST_YR   ,
           M.COST_WK   ,
           M.VSL_CD    ,
           M.SKD_VOY_NO,
           M.SKD_DIR_CD
)
  SELECT TRD_CD    ,
         SUB_TRD_CD,
         RLANE_CD  ,
         DIR_CD    ,
         COST_YR   ,
         COST_YR||COST_WK   AS COST_WK,
         VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD,
         ROUND(SUM(QTA_VOL)) AS QTA_VOL,
         SUM(QTA_CMB)  AS QTA_CMB ,
         SUM(FCT_VOL)  AS FCT_VOL ,
         SUM(FCT_WGT)  AS FCT_WGT ,
         SUM(FCT_TC_VOL)          AS FCT_TC_VOL ,
         SUM(FCT_TC_WGT)          AS FCT_TC_WGT ,
         SUM(ALC_VOL)             AS ALC_VOL ,
         SUM(ALC_WGT)             AS ALC_WGT ,
         SUM(ALC_TS_VOL)          AS ALC_TS_VOL  ,
         SUM(ALC_TS_WGT)          AS ALC_TS_WGT  ,
         SUM(BKG_FIRM) AS BKG_FIRM,
         SUM(BKG_WAIT) AS BKG_WAIT,
         NVL(SUM(BKG_FIRM), 0) + NVL(SUM(BKG_WAIT), 0) AS BKG_VOL,
         SUM(BKG_WGT) AS BKG_WGT, NVL(SUM(BKG_VOL_VGM),0) AS BKG_VOL_VGM, NVL(SUM(BKG_WGT_VGM),0) AS BKG_WGT_VGM, 
         SUM(BKG_TS_VOL)          AS BKG_TS_VOL,
         SUM(BKG_TS_WGT)          AS BKG_TS_WGT,NVL(SUM(BKG_TS_VOL_VGM),0) AS BKG_TS_VOL_VGM,NVL(SUM(BKG_TS_WGT_VGM),0) AS BKG_TS_WGT_VGM,
         
         DECODE(SUM(QTA_VOL), 0, 0, (SUM(FCT_VOL) / SUM(QTA_VOL) * 100)) AS RATIO
    FROM (
            SELECT TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   DIR_CD    ,
                   COST_YR   ,
                   COST_WK   ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   VOL AS  QTA_VOL ,
                   DECODE(VOL, 0, 0, CM / VOL) QTA_CMB, 
                   NULL AS FCT_VOL ,
                   NULL AS FCT_WGT ,
                   NULL AS FCT_TC_VOL ,
                   NULL AS FCT_TC_WGT ,
                   
                   NULL AS ALC_VOL ,
                   NULL AS ALC_WGT ,
                   NULL AS ALC_TS_VOL  ,
                   NULL AS ALC_TS_WGT  ,

                   NULL AS BKG_FIRM,
                   NULL AS BKG_WAIT,
                   NULL AS BKG_WGT,NULL AS BKG_VOL_VGM,NULL AS BKG_WGT_VGM,
                   NULL AS BKG_TS_VOL,
                   NULL AS BKG_TS_WGT,NULL AS BKG_TS_VOL_VGM ,NULL AS BKG_TS_WGT_VGM 
              FROM QTA_DATA
            UNION ALL
            SELECT TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   DIR_CD    ,
                   COST_YR   ,
                   COST_WK   ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   NULL      ,
                   NULL      ,
                   VOL       ,
                   WGT       ,
                   FCT_TC_VOL AS FCT_TC_VOL ,
                   FCT_TC_WGT AS FCT_TC_WGT ,
                   
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL     ,NULL     ,NULL     ,
                   NULL AS BKG_TS_VOL,
                   NULL AS BKG_TS_WGT ,NULL AS BKG_TS_VOL_VGM  ,NULL AS BKG_TS_WGT_VGM                            
              FROM FCST_DATA
            UNION ALL
            SELECT TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   DIR_CD    ,
                   COST_YR   ,
                   COST_WK   ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL AS FCT_TC_VOL ,
                   NULL AS FCT_TC_WGT ,

                   VOL       ,
                   WGT       ,
                   ALC_TS_VOL AS ALC_TS_VOL  ,
                   ALC_TS_WGT AS ALC_TS_WGT  ,
                   NULL      ,
                   NULL      ,
                   NULL     ,NULL     ,NULL     ,
                   NULL AS BKG_TS_VOL,
                   NULL AS BKG_TS_WGT ,NULL AS BKG_TS_VOL_VGM,NULL AS BKG_TS_WGT_VGM                       
              FROM ALOC_DATA
            UNION ALL
            SELECT TRD_CD    ,
                   SUB_TRD_CD,
                   RLANE_CD  ,
                   DIR_CD    ,
                   COST_YR   ,
                   COST_WK   ,
                   VSL_CD    ,
                   SKD_VOY_NO,
                   SKD_DIR_CD,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   NULL      ,
                   TTL_FIRM  ,
                   TTL_WAIT  ,
                   WGT,BKG_VOL_VGM,BKG_WGT_VGM,
                   BKG_TS_VOL AS BKG_TS_VOL,
                   BKG_TS_WGT AS BKG_TS_WGT,
				   BKG_TS_VOL_VGM AS BKG_TS_VOL_VGM,BKG_TS_WGT_VGM AS BKG_TS_WGT_VGM
              FROM BKG_DATA
         ) Z
GROUP BY Z.TRD_CD    ,
         Z.SUB_TRD_CD,
         Z.RLANE_CD  ,
         Z.DIR_CD    ,
         Z.COST_YR   ,
         Z.COST_WK   ,
         Z.VSL_CD    ,
         Z.SKD_VOY_NO,
         Z.SKD_DIR_CD
ORDER BY Z.TRD_CD    ,
         Z.SUB_TRD_CD,
         Z.RLANE_CD  ,
         Z.DIR_CD    ,
         Z.COST_YR   ,
         Z.COST_WK   ,
         Z.VSL_CD    ,
         Z.SKD_VOY_NO,
         Z.SKD_DIR_CD			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="year2" type="12" value="" out="N"/>
				<param name="week2" type="12" value="" out="N"/>
				<param name="sales_office" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="only_vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
