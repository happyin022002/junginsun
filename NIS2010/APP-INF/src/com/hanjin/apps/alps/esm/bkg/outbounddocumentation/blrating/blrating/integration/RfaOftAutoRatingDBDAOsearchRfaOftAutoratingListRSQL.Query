<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RfaOftAutoRatingDBDAOsearchRfaOftAutoratingListRSQL">
			<desc><![CDATA[RfaOftAutoRatingDBDAOsearchRfaOftAutoratingList - RFA AutoRaiting]]></desc>
			<sql><![CDATA[
/*AUTORATING_20100106-001*/
WITH
BK AS (

/*******************************************************************************************
BOOKING 의 기본 정보를 SELECT 한다.
RFA 정보도 같이 SELECT 되며, 유효한 S/C 와 연결되지 않으면 SELECT 되는 ROW 가 없다.
*******************************************************************************************/

SELECT	BK.BKG_NO					,
				NULL CORR_NO			,
				NVL(@[cmdt_cd], BK.CMDT_CD)	CMDT_CD	,
				( SELECT REP_CMDT_CD FROM MDM_COMMODITY WHERE CMDT_CD = NVL(@[cmdt_cd], BK.CMDT_CD) )	REP_CMDT_CD	,
				DECODE(BK.PRE_RLY_PORT_CD||BK.PST_RLY_PORT_CD,NULL,'Y','N') DIR_CALL_FLG	,
				NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), TO_DATE(BR.RT_APLY_DT))		RT_APLY_DT		,
				RS.SVC_SCP_CD			,
				'R' CTRT_TP_CD		,
				BK.SC_NO					,
				BK.RFA_NO					,
				BK.TAA_NO					,
				CASE
				WHEN BK.XTER_BKG_RQST_CD = 'NIS' THEN 'N'
				WHEN BK.XTER_BKG_RQST_CD = 'WEB' THEN 'W'
				WHEN BK.XTER_BKG_RQST_CD = 'DSK' THEN 'D'
				ELSE 'E'
				END	ESVC_TP_CD		,
				RS.PROP_NO				,
				RS.AMDT_SEQ				,
				CASE
				WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'
				ELSE 'NN'
				END CML_ZN_CD			,
				CASE
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) AND BK.POD_CD = BK.DEL_CD AND BK.DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) AND BK.POL_CD = BK.POR_CD AND BK.RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')
				END		USA_SVC_MOD_CD	,	-- PO, LO, IP, ML, OT
				BK.POR_CD														,
				L1.CNT_CD||L1.STE_CD	POR_STE_CD		,
				L1.RGN_CD							POR_RGN_CD		,
				L1.CNT_CD							POR_CNT_CD		,
				L1.CONTI_CD						POR_CONTI_CD	,
				BK.POL_CD														,
				L2.CNT_CD||L2.STE_CD	POL_STE_CD		,
				L2.RGN_CD							POL_RGN_CD		,
				L2.CNT_CD							POL_CNT_CD		,
				L2.CONTI_CD						POL_CONTI_CD	,
				BK.POD_CD														,
				L3.CNT_CD||L3.STE_CD	POD_STE_CD		,
				L3.RGN_CD							POD_RGN_CD		,
				L3.CNT_CD							POD_CNT_CD		,
				L3.CONTI_CD						POD_CONTI_CD	,
				BK.DEL_CD														,
				L4.CNT_CD||L4.STE_CD	DEL_STE_CD		,
				L4.RGN_CD							DEL_RGN_CD		,
				L4.CNT_CD							DEL_CNT_CD		,
				L4.CONTI_CD						DEL_CONTI_CD	,
				BK.PRE_RLY_PORT_CD									,
				BK.PST_RLY_PORT_CD									,
				BK.POL_NOD_CD												,
				BK.POD_NOD_CD												,
				BK.ORG_TRNS_MOD_CD									,
				BK.DEST_TRNS_MOD_CD									,
				BK.AGMT_ACT_CNT_CD									,
				BK.AGMT_ACT_CUST_SEQ								,
				( SELECT SUM(A.OP_CNTR_QTY) FROM BKG_QTY_DTL A WHERE A.BKG_NO = BK.BKG_NO )	CNTR_QTY	,
				DECODE(BB.MEAS_UT_CD, 'CBF', BB.MEAS_QTY	* 0.0283	, BB.MEAS_QTY	)					MEAS_QTY	,
				DECODE(BB.WGT_UT_CD	, 'LBS', BB.ACT_WGT		* 0.45359	, BB.ACT_WGT	)					ACT_WGT
FROM		BKG_BOOKING		BK	,
				BKG_BL_DOC		BB	,
				BKG_RATE			BR	,
				MDM_LOCATION	L1	,
				MDM_LOCATION	L2	,
				MDM_LOCATION	L3	,
				MDM_LOCATION	L4	,
				PRI_RP_HDR		RH	,
				PRI_RP_MN			RM	,
				PRI_RP_SCP_MN	RS
WHERE		BB.BKG_NO				= BK.BKG_NO
AND			BR.BKG_NO(+)		= BK.BKG_NO
AND			L1.LOC_CD				= BK.POR_CD
AND			L2.LOC_CD				= BK.POL_CD
AND			L3.LOC_CD				= BK.POD_CD
AND			L4.LOC_CD				= BK.DEL_CD
AND			RH.RFA_NO				= BK.RFA_NO
AND	   	RM.PROP_NO			= RH.PROP_NO
AND     RM.PROP_STS_CD	= 'A'				-- APPROVED RFA
AND			RS.PROP_NO			= RM.PROP_NO
AND			RS.AMDT_SEQ			= RM.AMDT_SEQ
AND			RS.SVC_SCP_CD		= BK.SVC_SCP_CD
AND			NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), ( SELECT TO_DATE(RT_APLY_DT) FROM BKG_RATE A WHERE A.BKG_NO = BK.BKG_NO ))	BETWEEN RS.EFF_DT AND RS.EXP_DT
AND			BK.BKG_NO				= @[bkg_no]	-- BKG No
AND			@[ca_flg]				= 'N'

UNION ALL

SELECT	BK.BKG_NO					,
				BK.CORR_NO				,
				NVL(@[cmdt_cd], BK.CMDT_CD)	CMDT_CD	,
				( SELECT REP_CMDT_CD FROM MDM_COMMODITY WHERE CMDT_CD = NVL(@[cmdt_cd], BK.CMDT_CD) )	REP_CMDT_CD	,
				DECODE(BK.PRE_RLY_PORT_CD||BK.PST_RLY_PORT_CD,NULL,'Y','N') DIR_CALL_FLG	,
				NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), TO_DATE(BR.RT_APLY_DT))		RT_APLY_DT		,
				RS.SVC_SCP_CD			,
				'R' CTRT_TP_CD		,
				BK.SC_NO					,
				BK.RFA_NO					,
				BK.TAA_NO					,
				CASE
				WHEN BK.XTER_BKG_RQST_CD = 'NIS' THEN 'N'
				WHEN BK.XTER_BKG_RQST_CD = 'WEB' THEN 'W'
				WHEN BK.XTER_BKG_RQST_CD = 'DSK' THEN 'D'
				ELSE 'E'
				END	ESVC_TP_CD		,
				RS.PROP_NO				,
				RS.AMDT_SEQ				,
				CASE
				WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'
				ELSE 'NN'
				END CML_ZN_CD			,
				CASE
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) AND BK.POD_CD = BK.DEL_CD AND BK.DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L3.CNT_CD IN ( 'US', 'CA' ) THEN ( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD )
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) AND BK.POL_CD = BK.POR_CD AND BK.RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
				WHEN	L2.CNT_CD IN ( 'US', 'CA' ) THEN ( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM COA_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD )
				END		USA_SVC_MOD_CD	,	-- PO, LO, IP, ML
				BK.POR_CD														,
				L1.CNT_CD||L1.STE_CD	POR_STE_CD		,
				L1.RGN_CD							POR_RGN_CD		,
				L1.CNT_CD							POR_CNT_CD		,
				L1.CONTI_CD						POR_CONTI_CD	,
				BK.POL_CD														,
				L2.CNT_CD||L2.STE_CD	POL_STE_CD		,
				L2.RGN_CD							POL_RGN_CD		,
				L2.CNT_CD							POL_CNT_CD		,
				L2.CONTI_CD						POL_CONTI_CD	,
				BK.POD_CD														,
				L3.CNT_CD||L3.STE_CD	POD_STE_CD		,
				L3.RGN_CD							POD_RGN_CD		,
				L3.CNT_CD							POD_CNT_CD		,
				L3.CONTI_CD						POD_CONTI_CD	,
				BK.DEL_CD														,
				L4.CNT_CD||L4.STE_CD	DEL_STE_CD		,
				L4.RGN_CD							DEL_RGN_CD		,
				L4.CNT_CD							DEL_CNT_CD		,
				L4.CONTI_CD						DEL_CONTI_CD	,
				BK.PRE_RLY_PORT_CD									,
				BK.PST_RLY_PORT_CD									,
				BK.POL_NOD_CD												,
				BK.POD_NOD_CD												,
				BK.ORG_TRNS_MOD_CD									,
				BK.DEST_TRNS_MOD_CD									,
				BK.AGMT_ACT_CNT_CD									,
				BK.AGMT_ACT_CUST_SEQ								,
				( SELECT SUM(A.OP_CNTR_QTY) FROM BKG_QTY_DTL_HIS A WHERE A.BKG_NO = BK.BKG_NO AND A.CORR_NO = BK.CORR_NO )	CNTR_QTY	,
				DECODE(BB.MEAS_UT_CD, 'CBF', BB.MEAS_QTY	* 0.0283	, BB.MEAS_QTY	)		MEAS_QTY	,
				DECODE(BB.WGT_UT_CD	, 'LBS', BB.ACT_WGT		* 0.45359	, BB.ACT_WGT	)		ACT_WGT
FROM		BKG_BKG_HIS				BK	,
				BKG_BL_DOC_HIS		BB	,
				BKG_RT_HIS				BR	,
				MDM_LOCATION			L1	,
				MDM_LOCATION			L2	,
				MDM_LOCATION			L3	,
				MDM_LOCATION			L4	,
				PRI_RP_HDR				RH	,
				PRI_RP_MN					RM	,
				PRI_RP_SCP_MN			RS
WHERE		BB.BKG_NO				= BK.BKG_NO
AND			BB.CORR_NO			= BK.CORR_NO
AND			BR.BKG_NO(+)		= BK.BKG_NO
AND			BR.CORR_NO(+)		= BK.CORR_NO
AND			L1.LOC_CD				= BK.POR_CD
AND			L2.LOC_CD				= BK.POL_CD
AND			L3.LOC_CD				= BK.POD_CD
AND			L4.LOC_CD				= BK.DEL_CD
AND			RH.RFA_NO				= BK.RFA_NO
AND	   	RM.PROP_NO			= RH.PROP_NO
AND     RM.PROP_STS_CD	= 'A'				-- APPROVED RFA
AND			RS.PROP_NO			= RM.PROP_NO
AND			RS.AMDT_SEQ			= RM.AMDT_SEQ
AND			RS.SVC_SCP_CD		= BK.SVC_SCP_CD
AND			NVL(TO_DATE(@[rt_aply_dt], 'YYYYMMDD'), ( SELECT TO_DATE(RT_APLY_DT) FROM BKG_RT_HIS A WHERE A.BKG_NO = BK.BKG_NO AND A.CORR_NO = BK.CORR_NO ))	BETWEEN RS.EFF_DT AND RS.EXP_DT
AND			BK.BKG_NO				= @[bkg_no]	-- BKG No
AND			BK.CORR_NO			= 'TMP0000001'	-- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
AND			@[ca_flg]				= 'Y'

)	,
BQ AS (

/*******************************************************************************************
AUTORATING 을 실행할 단위(ROW) 를 SELECT 한다.

IMDG CLASS 을 경우 해당 CNTR TP/SZ 별 MIN 값을 취한다.

현재는 요구사항에 없으나, 향후 실제 TP/SZ 가 필요할때를 대비하여 CNTR_TPSZ_CD 를 가지고 있는다.

POR, POL, POD, DEL, PRE RELAY, POST RELAY 에 대해서는 ROUTE CONVERSION 을 적용한다.

D7/AK 를 D7/DR 운임 적용을 위한 예외 로직도 여기서 적용한다.
*******************************************************************************************/

SELECT	BK.BKG_NO									,
				BK.CORR_NO								,
				ROW_NUMBER() OVER ( PARTITION BY BK.BKG_NO ORDER BY BQ.BKG_BQ_SEQ ) BQ_SEQ	,
				BK.CMDT_CD								,
				BK.REP_CMDT_CD						,
				BK.DIR_CALL_FLG						,
				BK.RT_APLY_DT							,
				BK.SVC_SCP_CD							,
				BK.CTRT_TP_CD							,
				BK.SC_NO									,
				BK.RFA_NO									,
				BK.TAA_NO									,
				BK.ESVC_TP_CD							,
				BK.PROP_NO								,
				BK.AMDT_SEQ								,
				BK.CML_ZN_CD							,
				BK.USA_SVC_MOD_CD					,
				RC.POR_CD									,
				RC.POR_STE_CD							,
				RC.POR_RGN_CD							,
				RC.POR_CNT_CD							,
				RC.POR_CONTI_CD						,
				RC.POL_CD									,
				RC.POL_STE_CD							,
				RC.POL_RGN_CD							,
				RC.POL_CNT_CD							,
				RC.POL_CONTI_CD						,
				RC.POD_CD									,
				RC.POD_STE_CD							,
				RC.POD_RGN_CD							,
				RC.POD_CNT_CD							,
				RC.POD_CONTI_CD						,
				RC.DEL_CD									,
				RC.DEL_STE_CD							,
				RC.DEL_RGN_CD							,
				RC.DEL_CNT_CD							,
				RC.DEL_CONTI_CD						,
				RC.PRE_RLY_PORT_CD				,
				RC.PST_RLY_PORT_CD				,
				BK.POL_NOD_CD							,
				BK.POD_NOD_CD							,
				RC.POR_APPL_FLG						,
				RC.POL_APPL_FLG						,
				RC.POD_APPL_FLG						,
				RC.DEL_APPL_FLG						,
				RC.PRE_RLY_PORT_APPL_FLG	,
				RC.PST_RLY_PORT_APPL_FLG	,
        BK.ORG_TRNS_MOD_CD				,
				BK.DEST_TRNS_MOD_CD				,
				BK.AGMT_ACT_CNT_CD				,
				BK.AGMT_ACT_CUST_SEQ			,
				BK.CNTR_QTY								,
				BK.MEAS_QTY								,
				BK.ACT_WGT								,
				BQ.BKG_BQ_SEQ							,
				BQ.CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD			,
				( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD ) CTRT_CNTR_SZ_CD	,
				BQ.RCV_TERM_CD						,
				BQ.DE_TERM_CD							,
				CASE
				/* D7/AK 를 D7/DR 운임 적용을 위한 예외 로직 */
				WHEN BQ.CTRT_CNTR_TPSZ_CD = 'D7' AND BQ.AWK_CGO_FLG = 'Y' THEN 'DR'
				/* AE, EA 운송에 대하여 DG 를 DR 운임을 적용하기 위한 예외 로직 */
				WHEN RC.POR_CONTI_CD = 'A' AND RC.DEL_CONTI_CD = 'E' AND BQ.DCGO_FLG = 'Y' THEN 'DR'
				WHEN RC.POR_CONTI_CD = 'E' AND RC.DEL_CONTI_CD = 'A' AND BQ.DCGO_FLG = 'Y' THEN 'DR'
				WHEN BQ.DRY_CGO_FLG = 'Y' THEN 'DR'
				END																	DR_TP		,
				DECODE(BQ.DCGO_FLG		, 'Y', 'DG')	DG_TP		,
				DECODE(BQ.RC_FLG			, 'Y', 'RF')	RF_TP		,
				DECODE(BQ.AWK_CGO_FLG	, 'Y', 'AK')	AK_TP		,
				DECODE(BQ.BB_CGO_FLG	, 'Y', 'BB')	BB_TP		,
				BQ.DRY_CGO_FLG						,
				BQ.DCGO_FLG								,
				BQ.RC_FLG									,
				BQ.AWK_CGO_FLG						,
				BQ.BB_CGO_FLG							,
				BQ.SOC_FLG								,
				CASE
				WHEN BQ.DCGO_FLG 		= 'Y' THEN 'DG'
				WHEN BQ.AWK_CGO_FLG	= 'Y' THEN 'AK'
				WHEN BQ.RC_FLG	 		= 'Y' THEN 'RF'
				WHEN BQ.BB_CGO_FLG	= 'Y' THEN 'BB'
				ELSE 'DR'
				END	PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY
FROM		BK	,
				(
				SELECT	QD.BKG_NO									,
								ROW_NUMBER() OVER ( PARTITION BY QD.BKG_NO ORDER BY QD.CNTR_TPSZ_CD, QD.CTRT_CNTR_TPSZ_CD, QD.RCV_TERM_CD, QD.DE_TERM_CD, QD.DRY_CGO_FLG, QD.AWK_CGO_FLG, QD.DCGO_FLG, QD.RC_FLG, QD.BB_CGO_FLG, QD.SOC_FLG, QD.IMDG_CLSS_CD )	BKG_BQ_SEQ	,
								QD.CNTR_TPSZ_CD						,
								QD.CTRT_CNTR_TPSZ_CD			,
								QD.RCV_TERM_CD						,
								QD.DE_TERM_CD							,
								QD.DRY_CGO_FLG						,
								QD.AWK_CGO_FLG						,
								QD.DCGO_FLG								,
								QD.RC_FLG									,
								QD.BB_CGO_FLG							,
								QD.SOC_FLG								,
								QD.IMDG_CLSS_CD						,
								QD.CTRT_CNTR_QTY
				FROM		(

								SELECT	QD.BKG_NO									,
												QD.CNTR_TPSZ_CD						,
												QD.CTRT_CNTR_TPSZ_CD			,
												QD.RCV_TERM_CD						,
												QD.DE_TERM_CD							,
												QD.DRY_CGO_FLG						,
												QD.AWK_CGO_FLG						,
												QD.DCGO_FLG								,
												QD.RC_FLG									,
												QD.BB_CGO_FLG							,
												QD.SOC_FLG								,
												DECODE(QD.DCGO_FLG, 'Y', ( SELECT MIN(IMDG_CLSS_CD) FROM BKG_DG_CGO A WHERE A.BKG_NO = QD.BKG_NO AND A.CNTR_TPSZ_CD = QD.CNTR_TPSZ_CD ))	IMDG_CLSS_CD	,
												QD.CTRT_CNTR_QTY
								FROM		(
												SELECT	QD.BKG_NO										,
																QD.CNTR_TPSZ_CD							,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	CTRT_CNTR_TPSZ_CD	,
																QD.RCV_TERM_CD							,
																QD.DE_TERM_CD								,
																QD.DRY_CGO_FLG							,
																QD.AWK_CGO_FLG							,
																QD.DCGO_FLG									,
																QD.RC_FLG										,
																QD.BB_CGO_FLG								,
																QD.SOC_FLG									,
																SUM(QD.OP_CNTR_QTY) CTRT_CNTR_QTY
												FROM		BK	,
																BKG_QTY_DTL	QD
												WHERE		QD.BKG_NO		= BK.BKG_NO
												GROUP BY
																QD.BKG_NO									,
																QD.CNTR_TPSZ_CD						,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	,
																QD.RCV_TERM_CD						,
																QD.DE_TERM_CD							,
																QD.DRY_CGO_FLG						,
																QD.AWK_CGO_FLG						,
																QD.DCGO_FLG								,
																QD.RC_FLG									,
																QD.BB_CGO_FLG							,
																QD.SOC_FLG
												)	QD
								WHERE		@[ca_flg]		= 'N'

								UNION ALL

								SELECT	QD.BKG_NO									,
												QD.CNTR_TPSZ_CD						,
												QD.CTRT_CNTR_TPSZ_CD			,
												QD.RCV_TERM_CD						,
												QD.DE_TERM_CD							,
												QD.DRY_CGO_FLG						,
												QD.AWK_CGO_FLG						,
												QD.DCGO_FLG								,
												QD.RC_FLG									,
												QD.BB_CGO_FLG							,
												QD.SOC_FLG								,
												DECODE(QD.DCGO_FLG, 'Y', ( SELECT MIN(IMDG_CLSS_CD) FROM BKG_DG_CGO_HIS A WHERE A.BKG_NO = QD.BKG_NO AND A.CORR_NO = QD.CORR_NO AND A.CNTR_TPSZ_CD = QD.CNTR_TPSZ_CD ))	IMDG_CLSS_CD	,
												QD.CTRT_CNTR_QTY
								FROM		(
												SELECT	QD.BKG_NO										,
																QD.CORR_NO									,
																QD.CNTR_TPSZ_CD							,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	CTRT_CNTR_TPSZ_CD	,
																QD.RCV_TERM_CD							,
																QD.DE_TERM_CD								,
																QD.DRY_CGO_FLG							,
																QD.AWK_CGO_FLG							,
																QD.DCGO_FLG									,
																QD.RC_FLG										,
																QD.BB_CGO_FLG								,
																QD.SOC_FLG									,
																SUM(QD.OP_CNTR_QTY) CTRT_CNTR_QTY
												FROM		BK	,
																BKG_QTY_DTL_HIS	QD
												WHERE		QD.BKG_NO		= BK.BKG_NO
												AND			QD.CORR_NO	= BK.CORR_NO
												GROUP BY
																QD.BKG_NO									,
																QD.CORR_NO								,
																QD.CNTR_TPSZ_CD						,
																NVL(QD.EQ_SUBST_CNTR_TPSZ_CD, QD.CNTR_TPSZ_CD)	,
																QD.RCV_TERM_CD						,
																QD.DE_TERM_CD							,
																QD.DRY_CGO_FLG						,
																QD.AWK_CGO_FLG						,
																QD.DCGO_FLG								,
																QD.RC_FLG									,
																QD.BB_CGO_FLG							,
																QD.SOC_FLG
												)	QD
								WHERE		@[ca_flg]		= 'Y'

								)	QD
				)	BQ	,

/*******************************************************************************************
이 부분은 SURCHARGE 에는 적용하지 않고, OFT 에만 적용한다. ( S/C, RFA 공통 적용 )
*******************************************************************************************/

				(
				SELECT	A.BKG_NO								,
								A.POR_CD								,
								A.POR_STE_CD						,
								A.POR_RGN_CD						,
								A.POR_CNT_CD						,
								A.POR_CONTI_CD					,
								A.POR_APPL_FLG					,
								B.POL_CD								,
								B.POL_STE_CD						,
								B.POL_RGN_CD						,
								B.POL_CNT_CD						,
								B.POL_CONTI_CD					,
								B.POL_APPL_FLG					,
								C.POD_CD								,
								C.POD_STE_CD						,
								C.POD_RGN_CD						,
								C.POD_CNT_CD						,
								C.POD_CONTI_CD					,
								C.POD_APPL_FLG					,
								D.DEL_CD								,
								D.DEL_STE_CD						,
								D.DEL_RGN_CD						,
								D.DEL_CNT_CD						,
								D.DEL_CONTI_CD					,
								D.DEL_APPL_FLG					,
								E.PRE_RLY_PORT_CD				,
								E.PRE_RLY_PORT_APPL_FLG	,
								F.PST_RLY_PORT_CD				,
								F.PST_RLY_PORT_APPL_FLG
				FROM		(
								SELECT	BKG_NO							,
												POR_CD							,
												POR_STE_CD					,
												POR_RGN_CD					,
												POR_CNT_CD					,
												POR_CONTI_CD				,
												'N'	POR_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				POR_CD				,
												ML.CNT_CD||ML.STE_CD	POR_STE_CD		,
												ML.RGN_CD							POR_RGN_CD		,
												ML.CNT_CD							POR_CNT_CD		,
												ML.CONTI_CD						POR_CONTI_CD	,
												RC.POR_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.POR_CD
								AND			RC.POR_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	A	,
								(
								SELECT	BKG_NO							,
												POL_CD							,
												POL_STE_CD					,
												POL_RGN_CD					,
												POL_CNT_CD					,
												POL_CONTI_CD				,
												'N'	POL_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				POL_CD				,
												ML.CNT_CD||ML.STE_CD	POL_STE_CD		,
												ML.RGN_CD							POL_RGN_CD		,
												ML.CNT_CD							POL_CNT_CD		,
												ML.CONTI_CD						POL_CONTI_CD	,
												RC.POL_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.POL_CD
								AND			RC.POL_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	B	,
								(
								SELECT	BKG_NO							,
												POD_CD							,
												POD_STE_CD					,
												POD_RGN_CD					,
												POD_CNT_CD					,
												POD_CONTI_CD				,
												'N'	POD_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				POD_CD				,
												ML.CNT_CD||ML.STE_CD	POD_STE_CD		,
												ML.RGN_CD							POD_RGN_CD		,
												ML.CNT_CD							POD_CNT_CD		,
												ML.CONTI_CD						POD_CONTI_CD	,
												RC.POD_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.POD_CD
								AND			RC.POD_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	C	,
								(
								SELECT	BKG_NO							,
												DEL_CD							,
												DEL_STE_CD					,
												DEL_RGN_CD					,
												DEL_CNT_CD					,
												DEL_CONTI_CD				,
												'N'	DEL_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO						,
												RC.CONV_LOC_CD				DEL_CD				,
												ML.CNT_CD||ML.STE_CD	DEL_STE_CD		,
												ML.RGN_CD							DEL_RGN_CD		,
												ML.CNT_CD							DEL_CNT_CD		,
												ML.CONTI_CD						DEL_CONTI_CD	,
												RC.DEL_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC	,
												MDM_LOCATION	ML
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.DEL_CD
								AND			RC.DEL_APPL_FLG	= 'Y'
								AND			ML.LOC_CD				= RC.CONV_LOC_CD
								)	D	,
								(
								SELECT	BKG_NO											,
												PRE_RLY_PORT_CD							,
												'N'	PRE_RLY_PORT_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO										,
												CONV_LOC_CD	PRE_RLY_PORT_CD	,
												PRE_RLY_PORT_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.PRE_RLY_PORT_CD
								AND			RC.PRE_RLY_PORT_APPL_FLG	= 'Y'
								)	E	,
								(
								SELECT	BKG_NO											,
												PST_RLY_PORT_CD							,
												'N'	PST_RLY_PORT_APPL_FLG
								FROM		BK
								UNION ALL
								SELECT	BK.BKG_NO										,
												CONV_LOC_CD	PST_RLY_PORT_CD	,
												PST_RLY_PORT_APPL_FLG
								FROM		BK	,
												PRI_ROUT_LOC_CONV	RC
								WHERE		RC.SVC_SCP_CD		= BK.SVC_SCP_CD
								AND			RC.ORG_LOC_CD		= BK.PST_RLY_PORT_CD
								AND			RC.PST_RLY_PORT_APPL_FLG	= 'Y'
								)	F
				WHERE		B.BKG_NO		= A.BKG_NO
				AND			C.BKG_NO		= A.BKG_NO
				AND			D.BKG_NO		= A.BKG_NO
				AND			E.BKG_NO		= A.BKG_NO
				AND			F.BKG_NO		= A.BKG_NO
				)	RC
WHERE		BQ.BKG_NO		= BK.BKG_NO
AND			RC.BKG_NO		= BK.BKG_NO
)	,
GC AS (

/*******************************************************************************************
GROUP COMMODITY 을 SELECT 한다.
*******************************************************************************************/

SELECT	BK.BKG_NO							,
				G.PRC_GRP_CMDT_CD			,
				D.PRC_CMDT_TP_CD			,
				D.PRC_CMDT_DEF_CD
FROM		BK	,
				PRI_RP_SCP_GRP_CMDT			G	,
				PRI_RP_SCP_GRP_CMDT_DTL	D
WHERE		D.PROP_NO					= G.PROP_NO
AND			D.AMDT_SEQ				= G.AMDT_SEQ
AND			D.SVC_SCP_CD			= G.SVC_SCP_CD
AND			D.GRP_CMDT_SEQ		= G.GRP_CMDT_SEQ
AND			D.SRC_INFO_CD			<> 'AD'
AND			G.PROP_NO					= BK.PROP_NO
AND			G.AMDT_SEQ				= BK.AMDT_SEQ
AND			G.SVC_SCP_CD			= BK.SVC_SCP_CD
)	,
GL AS (

/*******************************************************************************************
GROUP LOCATION 을 SELECT 한다.
NOTE CONVERSION 에서 사용하는 GROUP LOCATION ( 'EAST', 'WEST' ) 는 OFT 에서는 사용하지 않는다.
*******************************************************************************************/

SELECT	BK.BKG_NO					,
				G.PRC_GRP_LOC_CD	,
        D.LOC_CD
FROM 		BK	,
				PRI_RP_SCP_GRP_LOC 			G	,
		 		PRI_RP_SCP_GRP_LOC_DTL	D
WHERE		D.PROP_NO					= G.PROP_NO
AND			D.AMDT_SEQ				= G.AMDT_SEQ
AND			D.SVC_SCP_CD			= G.SVC_SCP_CD
AND			D.GRP_LOC_SEQ			= G.GRP_LOC_SEQ
AND			D.SRC_INFO_CD			<> 'AD'
AND			G.PROP_NO					= BK.PROP_NO
AND			G.AMDT_SEQ				= BK.AMDT_SEQ
AND			G.SVC_SCP_CD			= BK.SVC_SCP_CD
)	,
NC AS (

/*******************************************************************************************
BOOKING 에 해당하는 NOTE CONVERSION 을 SELECT 한다.
BKG_MIN_CGO_WGT, BKG_MAX_CGO_WGT, BKG_HNGR_BAR_TP_CD 는 SURCHARGE 에서만 사용되는 칼럼이고, RULE CODE 에서는 사용하지 않는다.
*******************************************************************************************/

SELECT	BQ.BKG_NO							,
				BQ.BQ_SEQ							,
				BQ.BKG_BQ_SEQ					,
				NC.NOTE_CONV_MAPG_ID	,
				NC.NOTE_CONV_SEQ			,
				CASE
				WHEN NC.NOTE_CONV_TP_CD = 'C' THEN CN.CMDT_HDR_SEQ
				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.CMDT_HDR_SEQ
				ELSE 0
				END CMDT_HDR_SEQ						,
				CASE
				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.ROUT_SEQ
				ELSE 0
				END ROUT_SEQ								,
				(	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO	,
					DECODE(BKG_CMDT_TP_CD, 'C', 600, 'G', 400, 'R', 300, 0)
					+ DECODE(BKG_POR_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_POL_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_POD_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_DEL_TP_CD, 'L', 600, 'G', 500, 'S', 400, 'R', 300, 'C', 200, 0)
					+ DECODE(BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BL', 4, 'BX', 4, NULL, 4, 6)
					+ DECODE(BKG_PRC_CGO_TP_CD		, NULL, 0, 1)
					+ DECODE(BKG_IMDG_CLSS_CD			, NULL, 0, 1)
					+ DECODE(BKG_SLAN_CD					, NULL, 0, 1)
					+ DECODE(BKG_VSL_CD						, NULL, 0, 1)
					+ DECODE(BKG_SOC_FLG					, NULL, 0, 1)
					+ DECODE(BKG_TS_PORT_DEF_CD		, NULL, 0, 1)
					+ DECODE(BKG_DIR_CALL_FLG			, NULL, 0, 1)
					+ DECODE(BKG_MIN_CGO_WGT			, NULL, 0, 1)
					+ DECODE(BKG_MAX_CGO_WGT			, NULL, 0, 1)
					+ DECODE(BKG_HNGR_BAR_TP_CD		, NULL, 0, 1)	MTCH_PRIO	,	/* MATCHING PRIORITY */
				NC.NOTE_CONV_TP_CD          ,
				NC.CHG_RULE_TP_CD           ,
				NC.NOTE_CONV_CHG_CD         ,
				NC.NOTE_CONV_RULE_CD        ,
				NC.RT_APPL_TP_CD            ,
				NC.RT_OP_CD                 ,
				NC.CURR_CD                  ,
				NC.FRT_RT_AMT               ,
				NC.PAY_TERM_CD              ,
				NC.BKG_RAT_UT_CD						,
				NC.BKG_PRC_CGO_TP_CD				,
				NC.BKG_IMDG_CLSS_CD					,
				NC.BKG_CMDT_DEF_CD					,
				NC.BKG_POR_DEF_CD						,
				NC.BKG_POL_DEF_CD						,
				NC.BKG_POD_DEF_CD						,
				NC.BKG_DEL_DEF_CD						,
				NC.BKG_SLAN_CD							,
				NC.BKG_VSL_CD								,
				NC.BKG_SKD_VOY_NO						,
				NC.BKG_SKD_DIR_CD						,
				NC.BKG_SOC_FLG							,
				NC.BKG_TS_PORT_DEF_CD				,
				NC.BKG_DIR_CALL_FLG					,

				'RAS : '
				||	LTRIM(																								NC.BKG_RAT_UT_CD
				||	DECODE(NC.BKG_PRC_CGO_TP_CD			, NULL, NULL, '-') ||	NC.BKG_PRC_CGO_TP_CD
				||	DECODE(NC.BKG_IMDG_CLSS_CD			, NULL, NULL, '-') ||	NC.BKG_IMDG_CLSS_CD
				||	DECODE(NC.BKG_POR_DEF_CD      	, NULL, NULL, '-') || NC.BKG_POR_DEF_CD
				||	DECODE(NC.BKG_POL_DEF_CD      	, NULL, NULL, '-') || NC.BKG_POL_DEF_CD
				||	DECODE(NC.BKG_POD_DEF_CD      	, NULL, NULL, '-') || NC.BKG_POD_DEF_CD
				||	DECODE(NC.BKG_DEL_TP_CD       	, NULL, NULL, '-') || NC.BKG_DEL_TP_CD
				||	DECODE(NC.BKG_CMDT_DEF_CD     	, NULL, NULL, '-') || NC.BKG_CMDT_DEF_CD
				||	DECODE(NC.BKG_SLAN_CD         	, NULL, NULL, '-') || NC.BKG_SLAN_CD
				||	DECODE(NC.BKG_DIR_CALL_FLG    	, NULL, NULL, '-') || NC.BKG_DIR_CALL_FLG
				||	DECODE(NC.BKG_TS_PORT_DEF_CD  	, NULL, NULL, '-') || NC.BKG_TS_PORT_DEF_CD
				||	DECODE(NC.BKG_VSL_CD          	, NULL, NULL, '-') || NC.BKG_VSL_CD
				||	DECODE(NC.BKG_SKD_VOY_NO      	, NULL, NULL, '-') || NC.BKG_SKD_VOY_NO
				||	DECODE(NC.BKG_SKD_DIR_CD      	, NULL, NULL, '-') || NC.BKG_SKD_DIR_CD
				||	DECODE(NC.BKG_SOC_FLG         	, NULL, NULL, '-') || NC.BKG_SOC_FLG
						, '-')
				||	' = '
				||	' ' || NC.RT_OP_CD || ' ' || TO_CHAR(NC.FRT_RT_AMT, 'FM999999990.000') || ' (' || NC.NOTE_CONV_TP_CD || ')'
				RAS_CONV_CTNT

FROM		BQ														,
				(
				SELECT	NC.*
				FROM		BK										,
								PRI_RFA_NOTE_CONV	NC
				WHERE		NC.PROP_NO		= BK.PROP_NO
				AND			NC.AMDT_SEQ		= BK.AMDT_SEQ
				AND			NC.SVC_SCP_CD	= BK.SVC_SCP_CD
				AND			BK.RT_APLY_DT BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				)	NC													,
				PRI_RP_SCP_RT_CNOTE				CN	,
				PRI_RP_SCP_RT_CMDT_RNOTE	RN
WHERE		CN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID
AND			CN.SRC_INFO_CD(+)				<> 'AD'
AND			RN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID
AND			RN.SRC_INFO_CD(+)				<> 'AD'

/*******************************************************************************************
NOT RULE CODE 는 SURCHARGE 에서만 사용된다.
*******************************************************************************************/

AND			NC.CHG_RULE_TP_CD			= 'R'
AND			NC.NOTE_CONV_RULE_CD	<> 'NOT'							/* RULE CODE 'NOT' 은 SURCHARGE 에서만 사용 됨 */


/*******************************************************************************************
< RATING UNIT >
*******************************************************************************************/
AND			(
								NC.BKG_RAT_UT_CD	IS NULL
						OR	NC.BKG_RAT_UT_CD	= BQ.CTRT_CNTR_TPSZ_CD
						OR	NC.BKG_RAT_UT_CD	IN ( 'BX', 'BL' )
        		OR
 		    		(
     						NC.BKG_RAT_UT_CD	IN ( '20', '40', 'HC', '45', '53' )
   					AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.BKG_RAT_UT_CD )	= BQ.CTRT_CNTR_SZ_CD
   					)
				)


/*******************************************************************************************
< CARGO TYPE >
*******************************************************************************************/
AND			(
						NC.BKG_PRC_CGO_TP_CD	IS NULL
				OR	NC.BKG_PRC_CGO_TP_CD	IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )
				)


/*******************************************************************************************
< IMDG CLASS >
NOTE CONV 의 IMDG CLSS CD 가 BKG 의 IMDG_CLSS_CD 의 일부부이라도 적용가능하다.
*******************************************************************************************/
AND			(
						NC.BKG_IMDG_CLSS_CD	IS NULL
				OR	BQ.IMDG_CLSS_CD			LIKE NC.BKG_IMDG_CLSS_CD||'%'
				)


/*******************************************************************************************
< COMMODITY >
GROUP 은 사용하지 않는다.
*******************************************************************************************/
AND			(
						NC.BKG_CMDT_DEF_CD IS NULL
				OR	NC.BKG_CMDT_DEF_CD = DECODE(NC.BKG_CMDT_TP_CD, 'C', BQ.CMDT_CD, 'R', BQ.REP_CMDT_CD)
				)


/*******************************************************************************************
< ROUTE >
STANDARD NOTE 의 경우는 GROUP 을 사용하지 않으므로,
STANDARD NOTE 를 위한 특별한 고려가 필요하지 않음.
*******************************************************************************************/
/* POR */
AND			(
						NC.BKG_POR_DEF_CD IS NULL
				OR	NC.BKG_POR_DEF_CD = DECODE(NC.BKG_POR_TP_CD, 'L', BQ.POR_CD, 'S', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
				OR	(
								NC.BKG_POR_TP_CD	= 'G'
						AND EXISTS	(
												SELECT	'X'
												FROM 		GL
												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_POR_DEF_CD
												AND			GL.LOC_CD					= BQ.POR_CD
												)
						)
				)
/* POL */
AND			(
						NC.BKG_POL_DEF_CD IS NULL
				OR	NC.BKG_POL_DEF_CD = DECODE(NC.BKG_POL_TP_CD, 'L', BQ.POL_CD, 'S', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
				OR	(
								NC.BKG_POL_TP_CD	= 'G'
						AND EXISTS	(
												SELECT	'X'
												FROM 		GL
												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_POL_DEF_CD
												AND			GL.LOC_CD					= BQ.POL_CD
												)
							)
				)
/* POD */
AND			(
						NC.BKG_POD_DEF_CD IS NULL
				OR	NC.BKG_POD_DEF_CD = DECODE(NC.BKG_POD_TP_CD, 'L', BQ.POD_CD, 'S', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
				OR	(
								NC.BKG_POD_TP_CD	= 'G'
						AND EXISTS	(
												SELECT	'X'
												FROM 		GL
												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_POD_DEF_CD
												AND			GL.LOC_CD					= BQ.POD_CD
												)
						)
				)
/* DEL */
AND			(
						NC.BKG_DEL_DEF_CD IS NULL
				OR	NC.BKG_DEL_DEF_CD = DECODE(NC.BKG_DEL_TP_CD, 'L', BQ.DEL_CD, 'S', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
				OR	(
								NC.BKG_DEL_TP_CD	= 'G'
						AND EXISTS	(
												SELECT	'X'
												FROM 		GL
												WHERE		GL.PRC_GRP_LOC_CD	=	NC.BKG_DEL_DEF_CD
												AND			GL.LOC_CD					= BQ.DEL_CD
												)
							)
				)


/*******************************************************************************************
< LANE & VVD >
TRUNK, T/S 구분없이 LANE 이나 VVD 가 존재하는지 여부로 판단한다.
*******************************************************************************************/
AND			EXISTS	(
								SELECT	'X'
								FROM		BKG_VVD	BV
								WHERE		BV.BKG_NO			=	BQ.BKG_NO
								AND			BV.SLAN_CD		= NVL(NC.BKG_SLAN_CD, BV.SLAN_CD)
								AND			BV.VSL_CD			= NVL(NC.BKG_VSL_CD, BV.VSL_CD)
								AND			BV.SKD_VOY_NO	= NVL(NC.BKG_SKD_VOY_NO, BV.SKD_VOY_NO)
								AND			BV.SKD_DIR_CD	= NVL(NC.BKG_SKD_DIR_CD, BV.SKD_DIR_CD)
								AND			@[ca_flg]			= 'N'

								UNION ALL

								SELECT	'X'
								FROM		BKG_VVD_HIS	BV
								WHERE		BV.BKG_NO			=	BQ.BKG_NO
								AND			BV.CORR_NO		= BQ.CORR_NO
								AND			BV.SLAN_CD		= NVL(NC.BKG_SLAN_CD, BV.SLAN_CD)
								AND			BV.VSL_CD			= NVL(NC.BKG_VSL_CD, BV.VSL_CD)
								AND			BV.SKD_VOY_NO	= NVL(NC.BKG_SKD_VOY_NO, BV.SKD_VOY_NO)
								AND			BV.SKD_DIR_CD	= NVL(NC.BKG_SKD_DIR_CD, BV.SKD_DIR_CD)
								AND			@[ca_flg]			= 'Y'
								)


/*******************************************************************************************
SOC
*******************************************************************************************/

AND			(
						NC.BKG_SOC_FLG	IS NULL
				OR	NC.BKG_SOC_FLG	= BQ.SOC_FLG
				)


/*******************************************************************************************
< T/S PORT >
T/S 가 발생하는 PORT 를 대상으로 한다.
*******************************************************************************************/
AND			(
						NC.BKG_TS_PORT_DEF_CD IS NULL
				OR	EXISTS	(
										SELECT	'X'
										FROM		BKG_VVD				V1	,
														BKG_VVD 			V2	,
														MDM_LOCATION	LO
										WHERE		V2.BKG_NO			=	V1.BKG_NO
										AND			V2.POL_CD			= V1.POD_CD
										AND			LO.LOC_CD			= V1.POD_CD
										AND			V1.BKG_NO			=	BQ.BKG_NO
										AND			DECODE(NC.BKG_TS_PORT_TP_CD, 'L', LO.LOC_CD, 'S', LO.CNT_CD||LO.STE_CD, 'R', LO.RGN_CD, 'C', LO.CNT_CD) = NC.BKG_TS_PORT_DEF_CD
										AND			@[ca_flg]			= 'N'

										UNION ALL

										SELECT	'X'
										FROM		BKG_VVD_HIS		V1	,
														BKG_VVD_HIS 	V2	,
														MDM_LOCATION	LO
										WHERE		V2.BKG_NO			=	V1.BKG_NO
										AND			V2.CORR_NO		= V1.CORR_NO
										AND			V2.POL_CD			= V1.POD_CD
										AND			LO.LOC_CD			= V1.POD_CD
										AND			V1.BKG_NO			=	BQ.BKG_NO
										AND			V1.CORR_NO		= BQ.CORR_NO
										AND			DECODE(NC.BKG_TS_PORT_TP_CD, 'L', LO.LOC_CD, 'S', LO.CNT_CD||LO.STE_CD, 'R', LO.RGN_CD, 'C', LO.CNT_CD) = NC.BKG_TS_PORT_DEF_CD
										AND			@[ca_flg]			= 'Y'
										)
				)
/* DIR CALL */
AND			(
						NC.BKG_DIR_CALL_FLG	IS NULL
				OR	NC.BKG_DIR_CALL_FLG	= BQ.DIR_CALL_FLG
				)

)	,
NC_P AS
(

/*******************************************************************************************
적용될 CONVERSION 이 같은 NOTE_CONV_TP_CD 에서 하나의 NOTE_CONV_RULE_CD 가 되도록 우선순위가 낮은 것을 제거한다.
우선순위가 똑같은 경우에는 NOTE_CONV_MAPG_ID||LPAD(NOTE_CONV_SEQ, 6, '0') 가 적은 것을 우선한다.

이 부분은 계약과 BKG 를 직접 비교하지 않고, NOTE CONV 와만 비교하도록 하기 위함이다.
*******************************************************************************************/

SELECT	NC.BKG_NO										,
				NC.BQ_SEQ										,
				NC.NOTE_CONV_MAPG_ID				,
				NC.NOTE_CONV_SEQ						,
				 ROW_NUMBER() OVER ( PARTITION BY NC.BQ_SEQ ORDER BY NC.NOTE_CONV_RULE_CD, NC.CONV_TP_PRIO DESC, NVL(NC.CMDT_HDR_SEQ, 0), NVL(NC.ROUT_SEQ, 0) )	NC_SEQ	,
				'C'	BKG_CONV_TP_CD					,
				NC.CMDT_HDR_SEQ							,
				NC.ROUT_SEQ									,
				NC.CONV_TP_PRIO							,
				NC.NOTE_CONV_TP_CD					,
				NC.NOTE_CONV_CHG_CD					,
				NC.NOTE_CONV_RULE_CD				,
				NC.BKG_RAT_UT_CD						,
				NC.BKG_PRC_CGO_TP_CD				,
				NC.BKG_IMDG_CLSS_CD					,
				NC.RT_APPL_TP_CD						,
				NC.RT_OP_CD									,
				NC.CURR_CD									,
				NC.FRT_RT_AMT								,
				NC.RAS_CONV_CTNT
FROM		(
				SELECT	NC.*	,
								ROW_NUMBER() OVER ( PARTITION BY NC.BQ_SEQ, NC.NOTE_CONV_RULE_CD, NC.NOTE_CONV_TP_CD, NC.CMDT_HDR_SEQ, NC.ROUT_SEQ
																		ORDER BY NC.MTCH_PRIO DESC, NC.NOTE_CONV_MAPG_ID, NC.NOTE_CONV_SEQ ) ROW_NUMBER
				FROM		NC
				) NC
WHERE		NC.ROW_NUMBER = 1
)	,
APP_N AS
(

/*******************************************************************************************
APP RULE CODE 에 존재하지만, BOOKING 과 MATCHING 되지 않은 것을 SELECT 한다.
*******************************************************************************************/

SELECT	BQ.BKG_NO		,
				BQ.BQ_SEQ		,
				CASE
				WHEN NC.NOTE_CONV_TP_CD = 'C' THEN CN.CMDT_HDR_SEQ
				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.CMDT_HDR_SEQ
				ELSE 0
				END CMDT_HDR_SEQ						,
				CASE
				WHEN NC.NOTE_CONV_TP_CD = 'R' THEN RN.ROUT_SEQ
				ELSE 0
				END ROUT_SEQ								,
				(	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO
FROM		BQ														,
				(
				SELECT	NC.*
				FROM		BK										,
								PRI_RFA_NOTE_CONV	NC
				WHERE		NC.PROP_NO		= BK.PROP_NO
				AND			NC.AMDT_SEQ		= BK.AMDT_SEQ
				AND			NC.SVC_SCP_CD	= BK.SVC_SCP_CD
				AND			BK.RT_APLY_DT BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999		/* 0.99999 는 23시 59분 59초를 의미 */
				)	NC													,
				PRI_RP_SCP_RT_CNOTE				CN	,
				PRI_RP_SCP_RT_CMDT_RNOTE	RN
WHERE		CN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID
AND			CN.SRC_INFO_CD(+)				<> 'AD'
AND			RN.NOTE_CONV_MAPG_ID(+) = NC.NOTE_CONV_MAPG_ID
AND			RN.SRC_INFO_CD(+)				<> 'AD'
AND			NC.CHG_RULE_TP_CD			= 'R'
AND			NC.NOTE_CONV_RULE_CD	= 'APP'								/* APP 만 SELECT */

/* APPLICATION TYPE */
AND			NC.RT_APPL_TP_CD = 'S'	-- Subject
AND			NOT EXISTS	(												/* CHECK CHECK CHECK CHECK CHECK */
										SELECT	'X'
										FROM		NC A
										WHERE		A.BQ_SEQ	= BQ.BQ_SEQ
										AND			A.NOTE_CONV_MAPG_ID	= NC.NOTE_CONV_MAPG_ID
										AND			A.NOTE_CONV_SEQ			= NC.NOTE_CONV_SEQ
										)
) ,
OA AS
(

/*******************************************************************************************
	ORIGIN ARB
*******************************************************************************************/

SELECT  BQ.BKG_NO								,
				BQ.BQ_SEQ								,
				OA.ADD_CHG_SEQ					,
				OA.ROUT_PNT_LOC_TP_CD		,
				OA.ROUT_PNT_LOC_DEF_CD	,
				OA.BSE_PORT_TP_CD				,
				OA.BSE_PORT_DEF_CD			,
				OA.RAT_UT_CD						,
				OA.PRC_CGO_TP_CD				,
				OA.PRC_TRSP_MOD_CD			,
				OA.RCV_DE_TERM_CD				,
				OA.MIN_CGO_WGT					,
				OA.MAX_CGO_WGT					,
				OA.CUST_CNT_CD					,
				OA.CUST_SEQ							,
				OA.CURR_CD							,
				OA.FNL_FRT_RT_AMT				,

				DECODE(OA.RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD, 100, 'BX', 80, 60)
				 	- DECODE(OA.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10, 0)
				 	+ DECODE(OA.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)
				 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||OA.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	RAT_UT_MTCH_PRIO	,
						/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */

				CASE
				WHEN	( OA.ROUT_PNT_LOC_TP_CD, OA.ROUT_PNT_LOC_DEF_CD ) IN
							(
							SELECT  'L', BQ.POR_CD
							FROM		DUAL
							UNION ALL
							SELECT  'G', GL.PRC_GRP_LOC_CD
							FROM		GL
							WHERE		GL.LOC_CD		= BQ.POR_CD
							)
							THEN 'Y'
				ELSE	'N'
				END	POR_MTCH_FLG

FROM    BQ  ,
        PRI_RP_SCP_TRSP_ADD_CHG   OA
WHERE   OA.PROP_NO                = BQ.PROP_NO
AND     OA.AMDT_SEQ               = BQ.AMDT_SEQ
AND     OA.SVC_SCP_CD             = BQ.SVC_SCP_CD
AND     OA.ADD_CHG_TP_CD          = 'A'
AND     OA.ORG_DEST_TP_CD         = 'O'
AND			OA.SRC_INFO_CD						<> 'AD'

/*******************************************************************************************
	1.	ORIGIN ARB - ACTUAL CUSTOMER
*******************************************************************************************/

AND     (
						(
		            OA.CUST_CNT_CD  		IS NULL
		        AND BQ.AGMT_ACT_CNT_CD	IS NULL
						)
        		OR
        		(
	        			OA.CUST_CNT_CD	= BQ.AGMT_ACT_CNT_CD
        		AND	OA.CUST_SEQ			= BQ.AGMT_ACT_CUST_SEQ
        		)
        )


/*******************************************************************************************
	2.	 ORIGIN ARB - ROUTE
*******************************************************************************************/

/*******************************************************************************************
< POR >
*******************************************************************************************/

AND     ( OA.ROUT_PNT_LOC_TP_CD, OA.ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT  'L', BQ.POR_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POR_CD
				UNION ALL
				SELECT  'L', BQ.POL_CD
				FROM		DUAL
				WHERE		( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
				AND			GL.LOC_CD		= BQ.POL_CD
				)


/*******************************************************************************************
< BASE PORT ( POL OR PRE RELAY ) >
*******************************************************************************************/

AND     ( OA.BSE_PORT_TP_CD, OA.BSE_PORT_DEF_CD ) IN
				(
				SELECT	'L', BQ.POL_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POL_CD
				UNION ALL
				SELECT	'L', BQ.PRE_RLY_PORT_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD
				)


/*******************************************************************************************
	3.	ORIGIN ARB - RATING UNIT
*******************************************************************************************/

/*******************************************************************************************
< ORIGIN ARB RATING UNIT >
*******************************************************************************************/

AND			(
						OA.RAT_UT_CD	IN ( 'BX', BQ.CTRT_CNTR_TPSZ_CD )
				OR	(
								OA.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )
            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = OA.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD
            )
        )

/*******************************************************************************************
< ORIGIN ARB CARGO TYPE >
*******************************************************************************************/

AND     NVL(OA.PRC_CGO_TP_CD, '*')  IN ( '*', BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )

) ,
DA AS
(

/*******************************************************************************************
	DEST ARB
*******************************************************************************************/

SELECT  BQ.BKG_NO								,
				BQ.BQ_SEQ 							,
				DA.ADD_CHG_SEQ					,
				DA.ROUT_PNT_LOC_TP_CD		,
				DA.ROUT_PNT_LOC_DEF_CD	,
				DA.BSE_PORT_TP_CD				,
				DA.BSE_PORT_DEF_CD			,
				DA.RAT_UT_CD						,
				DA.PRC_CGO_TP_CD				,
				DA.PRC_TRSP_MOD_CD			,
				DA.RCV_DE_TERM_CD				,
				DA.MIN_CGO_WGT					,
				DA.MAX_CGO_WGT					,
				DA.CUST_CNT_CD					,
				DA.CUST_SEQ							,
				DA.CURR_CD							,
				DA.FNL_FRT_RT_AMT				,

				DECODE(DA.RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD, 100, 'BX', 80, 60)
				 	- DECODE(DA.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10, 0)
				 	+ DECODE(DA.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)
				 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||DA.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	RAT_UT_MTCH_PRIO	,
						/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */

				CASE
				WHEN	( DA.ROUT_PNT_LOC_TP_CD, DA.ROUT_PNT_LOC_DEF_CD ) IN
							(
							SELECT  'L', BQ.DEL_CD
							FROM		DUAL
							UNION ALL
							SELECT  'G', GL.PRC_GRP_LOC_CD
							FROM		GL
							WHERE		GL.LOC_CD		= BQ.DEL_CD
							)
							THEN 'Y'
				ELSE	'N'
				END	DEL_MTCH_FLG

FROM    BQ  ,
        PRI_RP_SCP_TRSP_ADD_CHG   DA
WHERE   DA.PROP_NO                = BQ.PROP_NO
AND     DA.AMDT_SEQ               = BQ.AMDT_SEQ
AND     DA.SVC_SCP_CD             = BQ.SVC_SCP_CD
AND     DA.ADD_CHG_TP_CD          = 'A'
AND     DA.ORG_DEST_TP_CD         = 'D'
AND			DA.SRC_INFO_CD						<> 'AD'

/*******************************************************************************************
	1.	DEST ARB - ACTUAL CUSTOMER
*******************************************************************************************/

AND     (
						(
		            DA.CUST_CNT_CD  		IS NULL
		        AND BQ.AGMT_ACT_CNT_CD	IS NULL
						)
        		OR
        		(
	        			DA.CUST_CNT_CD	= BQ.AGMT_ACT_CNT_CD
        		AND	DA.CUST_SEQ			= BQ.AGMT_ACT_CUST_SEQ
        		)
        )


/*******************************************************************************************
	2.	 DEST ARB - ROUTE
*******************************************************************************************/

/*******************************************************************************************
< DEST VIA PORT ( POD OR POST RELAY ) >
*******************************************************************************************/

AND     (
                DA.BSE_PORT_DEF_CD  IS NULL
            OR	( DA.BSE_PORT_TP_CD, DA.BSE_PORT_DEF_CD ) IN
								(
								SELECT	'L', BQ.POD_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.POD_CD
								UNION ALL
								SELECT	'L', BQ.PST_RLY_PORT_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD
								)
        )

/*******************************************************************************************
< DEL >
*******************************************************************************************/

AND     ( DA.ROUT_PNT_LOC_TP_CD, DA.ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT  'L', BQ.DEL_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.DEL_CD
				UNION ALL
				SELECT  'L', BQ.POD_CD
				FROM		DUAL
				WHERE		( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
				AND			GL.LOC_CD		= BQ.POD_CD
				)


/*******************************************************************************************
	3.	DEST ARB - RATING UNIT
*******************************************************************************************/

/*******************************************************************************************
< DEST ARB RATING UNIT >
*******************************************************************************************/

AND			(
						DA.RAT_UT_CD	IN ( 'BX', BQ.CTRT_CNTR_TPSZ_CD )
				OR	(
								DA.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )
            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = DA.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD
            )
        )


/*******************************************************************************************
< DEST ARB CARGO TYPE >
*******************************************************************************************/

AND     NVL(DA.PRC_CGO_TP_CD, '*')  IN ( '*', BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )

)	,
RT AS
(

/*******************************************************************************************
	RATE
*******************************************************************************************/

SELECT	RT.*	,
				RT_APP.BKG_CONV_TP_CD      		APP_BKG_CONV_TP_CD     	,
				RT_APP.NOTE_CONV_MAPG_ID   		APP_NOTE_CONV_MAPG_ID  	,
				RT_APP.NOTE_CONV_SEQ       		APP_NOTE_CONV_SEQ      	,
				RT_APP.NOTE_CONV_RULE_CD   		APP_NOTE_CONV_RULE_CD  	,
				RT_APP.NOTE_CONV_TP_CD     		APP_NOTE_CONV_TP_CD    	,
				RT_APP.RT_OP_CD            		APP_RT_OP_CD           	,
				RT_APP.CURR_CD             		APP_CURR_CD            	,
				RT_APP.FRT_RT_AMT          		APP_FRT_RT_AMT					,
				RT_RAS.BKG_CONV_TP_CD      		RAS_BKG_CONV_TP_CD     	,
				RT_RAS.NOTE_CONV_MAPG_ID   		RAS_NOTE_CONV_MAPG_ID  	,
				RT_RAS.NOTE_CONV_SEQ       		RAS_NOTE_CONV_SEQ      	,
				RT_RAS.NOTE_CONV_RULE_CD   		RAS_NOTE_CONV_RULE_CD  	,
				RT_RAS.NOTE_CONV_TP_CD     		RAS_NOTE_CONV_TP_CD    	,
				RT_RAS.RT_OP_CD            		RAS_RT_OP_CD           	,
				RT_RAS.CURR_CD             		RAS_CURR_CD            	,
				RT_RAS.FRT_RT_AMT          		RAS_FRT_RT_AMT         	,
				RT_RAS.RAS_CONV_CTNT					RAS_RAS_CONV_CTNT

FROM		(
				SELECT	BQ.BKG_NO	,
								BQ.BQ_SEQ ,
								CM.PRC_CMDT_TP_CD				CM_PRC_CMDT_TP_CD				,
								CM.PRC_CMDT_DEF_CD			CM_PRC_CMDT_DEF_CD			,

								OV.ROUT_VIA_PORT_TP_CD	OV_ROUT_VIA_PORT_TP_CD	,
								OV.ROUT_VIA_PORT_DEF_CD	OV_ROUT_VIA_PORT_DEF_CD	,
								DV.ROUT_VIA_PORT_TP_CD	DV_ROUT_VIA_PORT_TP_CD	,
								DV.ROUT_VIA_PORT_DEF_CD	DV_ROUT_VIA_PORT_DEF_CD	,

								OP.ROUT_PNT_LOC_TP_CD		OP_ROUT_PNT_LOC_TP_CD 	,
								OP.ROUT_PNT_LOC_DEF_CD	OP_ROUT_PNT_LOC_DEF_CD	,
								OP.RCV_DE_TERM_CD				OP_RCV_DE_TERM_CD				,
								OP.PRC_TRSP_MOD_CD			OP_PRC_TRSP_MOD_CD			,

								DP.ROUT_PNT_LOC_TP_CD		DP_ROUT_PNT_LOC_TP_CD 	,
								DP.ROUT_PNT_LOC_DEF_CD	DP_ROUT_PNT_LOC_DEF_CD	,
								DP.RCV_DE_TERM_CD				DP_RCV_DE_TERM_CD				,
								DP.PRC_TRSP_MOD_CD			DP_PRC_TRSP_MOD_CD			,

								RT.CMDT_HDR_SEQ																	,
								RT.ROUT_SEQ																			,
								RT.RT_SEQ																				,
								RT.RAT_UT_CD																		,
								RT.PRC_CGO_TP_CD																,
								RT.CURR_CD																			,
								RT.FNL_FRT_RT_AMT																,
								CASE
								WHEN	( OP.ROUT_PNT_LOC_TP_CD, OP.ROUT_PNT_LOC_DEF_CD ) IN
											(
											SELECT  'L', BQ.POR_CD
											FROM		DUAL
											UNION ALL
											SELECT  'G', GL.PRC_GRP_LOC_CD
											FROM		GL
											WHERE		GL.LOC_CD		= BQ.POR_CD
											)
											THEN 'Y'
								ELSE	'N'
								END	POR_MTCH_FLG	,
								CASE
								WHEN	( DP.ROUT_PNT_LOC_TP_CD, DP.ROUT_PNT_LOC_DEF_CD ) IN
											(
											SELECT  'L', BQ.DEL_CD
											FROM		DUAL
											UNION ALL
											SELECT  'G', GL.PRC_GRP_LOC_CD
											FROM		GL
											WHERE		GL.LOC_CD		= BQ.DEL_CD
											)
											THEN 'Y'
								ELSE	'N'
								END	DEL_MTCH_FLG	,

								(
								SELECT	NVL(MAX(A.NC_SEQ), 0)
								FROM		NC_P	A
								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ
								AND			A.NOTE_CONV_RULE_CD	= 'APP'
								AND			A.BKG_CONV_TP_CD		= 'C'
								AND			DECODE(A.CMDT_HDR_SEQ, 0, CR.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= CR.CMDT_HDR_SEQ
								AND 		DECODE(A.ROUT_SEQ, 0, CR.ROUT_SEQ, A.ROUT_SEQ)							= CR.ROUT_SEQ
								) APP_NC_SEQ	,
								(
								SELECT	NVL(MAX(A.NC_SEQ), 0)
								FROM		NC_P	A
								WHERE		A.BQ_SEQ						= BQ.BQ_SEQ
								AND			A.NOTE_CONV_RULE_CD	= 'RAS'
								AND			A.BKG_CONV_TP_CD		= 'C'
								AND			DECODE(A.CMDT_HDR_SEQ, 0, CR.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= CR.CMDT_HDR_SEQ
								AND 		DECODE(A.ROUT_SEQ, 0, CR.ROUT_SEQ, A.ROUT_SEQ)							= CR.ROUT_SEQ
								) RAS_NC_SEQ	,

								ROW_NUMBER() OVER (	PARTITION BY	BQ.BQ_SEQ, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ,
																									CM.CMDT_SEQ, OP.ROUT_PNT_SEQ, DP.ROUT_PNT_SEQ, OV.ROUT_VIA_SEQ, OV.ROUT_VIA_SEQ
																		ORDER BY	DECODE(RT.RAT_UT_CD,
																									BQ.CTRT_CNTR_TPSZ_CD, 100,
																									( SELECT MIN(A.RAT_UT_CD) FROM PRI_RAT_UT A WHERE A.RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' ) AND A.CNTR_SZ_CD = BQ.CTRT_CNTR_SZ_CD ), 100,
																									'BL', 80,
																									60)
																						 	- DECODE(RT.RAT_UT_CD, '20', 10, '40', 10, 'HC', 10, '45', 10, '53', 10 )
																						 	+ DECODE(RT.PRC_CGO_TP_CD, BQ.DR_TP, 2, BQ.DG_TP, 2, BQ.RF_TP, 2, BQ.AK_TP, 2, BQ.BB_TP, 2, 0)
																						 	- DECODE(BQ.CTRT_CNTR_TPSZ_CD||BQ.AK_TP||RT.PRC_CGO_TP_CD, 'D7AKDR', 1, 0)	DESC
																							/* D7/AK 가 D7/DR 과 D7/AK 중에 D7/AK 가 먼저 선택 될 수 있도록 D7/AK 면서 DR 운임적인된 경우 -1 을 해준다. */
																	) RAT_UT_PRIO

				FROM    BQ  															,
								PRI_RP_SCP_RT_CMDT_HDR    CH			,
								PRI_RP_SCP_RT_CMDT        CM			,
								PRI_RP_SCP_RT_ACT_CUST		AC			,
								PRI_RP_SCP_RT_CMDT_ROUT		CR			,
								PRI_RP_SCP_RT_ROUT_PNT		OP			,
								PRI_RP_SCP_RT_ROUT_PNT		DP			,
								PRI_RP_SCP_RT_ROUT_VIA		OV      ,
								PRI_RP_SCP_RT_ROUT_VIA		DV      ,
								PRI_RP_SCP_RT             RT
				WHERE		CH.PROP_NO		= BQ.PROP_NO AND CH.AMDT_SEQ		= BQ.AMDT_SEQ AND CH.SVC_SCP_CD			= BQ.SVC_SCP_CD
				AND			CM.PROP_NO		= CH.PROP_NO AND CM.AMDT_SEQ		= CH.AMDT_SEQ AND	CM.SVC_SCP_CD			= CH.SVC_SCP_CD AND	CM.CMDT_HDR_SEQ			= CH.CMDT_HDR_SEQ AND CM.SRC_INFO_CD		<> 'AD'
				AND			AC.PROP_NO(+)	= CH.PROP_NO AND AC.AMDT_SEQ(+)	= CH.AMDT_SEQ AND	AC.SVC_SCP_CD(+)	= CH.SVC_SCP_CD AND	AC.CMDT_HDR_SEQ(+)	= CH.CMDT_HDR_SEQ AND AC.SRC_INFO_CD(+)	<> 'AD'
				AND     CR.PROP_NO		= CH.PROP_NO AND CR.AMDT_SEQ		= CH.AMDT_SEQ AND CR.SVC_SCP_CD			= CH.SVC_SCP_CD AND CR.CMDT_HDR_SEQ			= CH.CMDT_HDR_SEQ
				AND     OP.PROP_NO		= CR.PROP_NO AND OP.AMDT_SEQ		= CR.AMDT_SEQ AND OP.SVC_SCP_CD			= CR.SVC_SCP_CD AND OP.CMDT_HDR_SEQ			= CR.CMDT_HDR_SEQ AND OP.ROUT_SEQ			= CR.ROUT_SEQ AND OP.ORG_DEST_TP_CD			= 'O' AND OP.SRC_INFO_CD		<> 'AD'
				AND     DP.PROP_NO		= CR.PROP_NO AND DP.AMDT_SEQ		= CR.AMDT_SEQ AND DP.SVC_SCP_CD			= CR.SVC_SCP_CD AND DP.CMDT_HDR_SEQ			= CR.CMDT_HDR_SEQ AND DP.ROUT_SEQ			= CR.ROUT_SEQ AND DP.ORG_DEST_TP_CD			= 'D' AND DP.SRC_INFO_CD		<> 'AD'
				AND     OV.PROP_NO(+)	= CR.PROP_NO AND OV.AMDT_SEQ(+)	= CR.AMDT_SEQ AND OV.SVC_SCP_CD(+)	= CR.SVC_SCP_CD AND OV.CMDT_HDR_SEQ(+)	= CR.CMDT_HDR_SEQ AND OV.ROUT_SEQ(+)	= CR.ROUT_SEQ AND OV.ORG_DEST_TP_CD(+)	= 'O' AND OV.SRC_INFO_CD(+)	<> 'AD'
				AND     DV.PROP_NO(+)	= CR.PROP_NO AND DV.AMDT_SEQ(+)	= CR.AMDT_SEQ AND DV.SVC_SCP_CD(+)	= CR.SVC_SCP_CD AND DV.CMDT_HDR_SEQ(+)	= CR.CMDT_HDR_SEQ AND DV.ROUT_SEQ(+)	= CR.ROUT_SEQ AND DV.ORG_DEST_TP_CD(+)	= 'D' AND DV.SRC_INFO_CD(+)	<> 'AD'
				AND     RT.PROP_NO		= CR.PROP_NO AND RT.AMDT_SEQ		= CR.AMDT_SEQ AND RT.SVC_SCP_CD			= CR.SVC_SCP_CD AND RT.CMDT_HDR_SEQ			= CR.CMDT_HDR_SEQ AND RT.ROUT_SEQ			= CR.ROUT_SEQ AND RT.SRC_INFO_CD				<> 'AD'

				/*******************************************************************************************
					1.	RATE - COMMODITY
				*******************************************************************************************/

				/*******************************************************************************************
				< COMMODITY >
				FAK ( REP_CMDT_CD : 0000 ) 인 계약은 모든 BOOKING 에 적용가능한다.
				*******************************************************************************************/

				AND     ( CM.PRC_CMDT_TP_CD, CM.PRC_CMDT_DEF_CD ) IN
								(
								SELECT	'C', BQ.CMDT_CD
								FROM		DUAL
								UNION ALL
								SELECT	'R', BQ.REP_CMDT_CD
								FROM		DUAL
								UNION ALL
								SELECT	'G', GC.PRC_GRP_CMDT_CD
								FROM		GC
								WHERE		GC.PRC_CMDT_TP_CD		= 'C'
								AND			GC.PRC_CMDT_DEF_CD  = BQ.CMDT_CD
								UNION ALL
								SELECT	'G', GC.PRC_GRP_CMDT_CD
								FROM		GC
								WHERE		GC.PRC_CMDT_TP_CD		= 'R'
								AND			GC.PRC_CMDT_DEF_CD  = BQ.REP_CMDT_CD
								UNION ALL
								SELECT	'C', CMDT_CD
								FROM		MDM_COMMODITY
								WHERE		REP_CMDT_CD	= '0000'
								UNION ALL
								SELECT	'R', '0000'
								FROM		DUAL
								UNION ALL
								SELECT	'G', GC.PRC_GRP_CMDT_CD
								FROM		GC
								WHERE		GC.PRC_CMDT_TP_CD		= 'C'
								AND			GC.PRC_CMDT_DEF_CD  IN ( SELECT CMDT_CD FROM MDM_COMMODITY WHERE REP_CMDT_CD = '0000' )
								UNION ALL
								SELECT	'G', GC.PRC_GRP_CMDT_CD
								FROM		GC
								WHERE		GC.PRC_CMDT_TP_CD		= 'R'
								AND			GC.PRC_CMDT_DEF_CD  = '0000'
								)

				/*******************************************************************************************
				< ACTUAL CUSTOMER >
				BKG 와 CONTRACT 모두에 ACTUAL CUSTOMER 가 존재하지 않거나,
				BKG 의 ACTUAL CUSTOMER 와 일치하는 경우
				*******************************************************************************************/

				AND     (
										(
						            AC.CUST_CNT_CD  		IS NULL
						        AND BQ.AGMT_ACT_CNT_CD	IS NULL
										)
				        		OR
				        		(
					        			AC.CUST_CNT_CD	= BQ.AGMT_ACT_CNT_CD
				        		AND	AC.CUST_SEQ			= BQ.AGMT_ACT_CUST_SEQ
				        		)
				        )


				/*******************************************************************************************
					2.	RATE - ROUTE
				*******************************************************************************************/

				/*******************************************************************************************
				< ORIGIN >
				PATTERN 1,3 일때는 POR, (POL)
				PATTERN 2,4 일때는 POL, PRE
				*******************************************************************************************/

				AND     ( OP.ROUT_PNT_LOC_TP_CD, OP.ROUT_PNT_LOC_DEF_CD ) IN
								(
								SELECT	'L',	BQ.POR_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.POR_CD
								UNION ALL
								SELECT	'L',	BQ.POL_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.POL_CD
								UNION ALL
								SELECT	'L', BQ.PRE_RLY_PORT_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD
								)

				/*******************************************************************************************
				< ORIGIN VIA >
				PATTERN 1,2,3,4 일때는 POL, PRE
				*******************************************************************************************/

				AND     (
										OV.ROUT_VIA_PORT_DEF_CD	IS NULL
								OR	( OV.ROUT_VIA_PORT_TP_CD, OV.ROUT_VIA_PORT_DEF_CD ) IN
										(
										SELECT	'L',	BQ.POL_CD
										FROM		DUAL
										UNION ALL
										SELECT  'G', GL.PRC_GRP_LOC_CD
										FROM		GL
										WHERE		GL.LOC_CD		= BQ.POL_CD
										UNION ALL
										SELECT	'L', BQ.PRE_RLY_PORT_CD
										FROM		DUAL
										UNION ALL
										SELECT  'G', GL.PRC_GRP_LOC_CD
										FROM		GL
										WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD
										)
								)


				/*******************************************************************************************
				< DESTINATION VIA >
				PATTERN 1,2,3,4 일때는 POD, POST
				*******************************************************************************************/

				AND     (
										DV.ROUT_VIA_PORT_DEF_CD	IS NULL
								OR	( DV.ROUT_VIA_PORT_TP_CD, DV.ROUT_VIA_PORT_DEF_CD ) IN
										(
										SELECT	'L',	BQ.POD_CD
										FROM		DUAL
										UNION ALL
										SELECT  'G', GL.PRC_GRP_LOC_CD
										FROM		GL
										WHERE		GL.LOC_CD		= BQ.POD_CD
										UNION ALL
										SELECT	'L', BQ.PST_RLY_PORT_CD
										FROM		DUAL
										UNION ALL
										SELECT  'G', GL.PRC_GRP_LOC_CD
										FROM		GL
										WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD
										)
								)


				/*******************************************************************************************
				< DESTINATION >
				PATTERN 1,2 일때는 DEL, (POD)
				PATTERN 3,4 일때는 POD, POST
				*******************************************************************************************/

				AND     ( DP.ROUT_PNT_LOC_TP_CD, DP.ROUT_PNT_LOC_DEF_CD ) IN
								(
								SELECT	'L',	BQ.DEL_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.DEL_CD
								UNION ALL
								SELECT	'L',	BQ.POD_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.POD_CD
								UNION ALL
								SELECT	'L', BQ.PST_RLY_PORT_CD
								FROM		DUAL
								UNION ALL
								SELECT  'G', GL.PRC_GRP_LOC_CD
								FROM		GL
								WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD
								)


				/*******************************************************************************************
					3.	RATE - RATING UNIT
				*******************************************************************************************/

				/*******************************************************************************************
				< RATE RATING UNIT >
				*******************************************************************************************/

				AND			(
										RT.RAT_UT_CD	IN ( 'BL', BQ.CTRT_CNTR_TPSZ_CD )
								OR	(
												RT.RAT_UT_CD  IN ( '20', '40', 'HC', '45', '53' )
				            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = RT.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD
				            )
				        )


				/*******************************************************************************************
				< DEST ARB CARGO TYPE >
				*******************************************************************************************/

				AND     RT.PRC_CGO_TP_CD  IN ( BQ.DR_TP, BQ.DG_TP, BQ.RF_TP, BQ.AK_TP, BQ.BB_TP )
				) RT	,
				NC_P											RT_APP	,
				NC_P											RT_RAS
WHERE		RT.RAT_UT_PRIO		= 1
AND			RT_APP.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_APP.NOTE_CONV_RULE_CD(+) = 'APP' AND RT_APP.NC_SEQ(+) = RT.APP_NC_SEQ
AND			RT_RAS.BQ_SEQ(+)	= RT.BQ_SEQ AND RT_RAS.NOTE_CONV_RULE_CD(+) = 'RAS' AND RT_RAS.NC_SEQ(+) = RT.RAS_NC_SEQ


/*******************************************************************************************
	APP RULE CHECK

	RT_APP.RT_APPL_TP_CD 가 NULL (APP 존재하지 않음) 이거나 'S' 인 경우에만 운임을 사용할 수 있다.
	그리고 추가적으로 APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재하지 않아야 한다.
	APP_N 에 CONV_TP_PRIO 의 값이 더 적은 값이 존재한다면,
	그것은 BKG 와 다른 조건으로 운임을 사용하도록 APP RULE 이 되어 있다는 것을 의미한다.
*******************************************************************************************/

AND			NVL(RT_APP.RT_APPL_TP_CD, 'S')	= 'S'
AND			NOT EXISTS	(
										SELECT	'X'
										FROM		APP_N	A
										WHERE		A.BQ_SEQ																										= RT.BQ_SEQ
										AND			DECODE(A.CMDT_HDR_SEQ, 0, RT.CMDT_HDR_SEQ, A.CMDT_HDR_SEQ)	= RT.CMDT_HDR_SEQ
										AND			DECODE(A.ROUT_SEQ, 0, RT.ROUT_SEQ, A.ROUT_SEQ)							= RT.ROUT_SEQ
										AND			A.CONV_TP_PRIO																							< NVL(RT_APP.CONV_TP_PRIO, 9)
										)

)	,
RATE AS
(

/*******************************************************************************************
	1. PATTERN #1 ( 0000 )
*******************************************************************************************/

SELECT	'0000'												PRC_RT_MTCH_PATT_CD				,
				BQ.RFA_NO											CTRT_NO										,
				BQ.PROP_NO										PROP_NO										,
				BQ.AMDT_SEQ										AMDT_SEQ									,
				BQ.SVC_SCP_CD									SVC_SCP_CD								,
				BQ.BKG_NO											BKG_NO										,
				BQ.BQ_SEQ											BQ_SEQ										,
				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								,
				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			,
				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						,
				BQ.DE_TERM_CD									BQ_DE_TERM_CD							,
				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						,
				BQ.DCGO_FLG										BQ_DCGO_FLG								,
				BQ.RC_FLG											BQ_RC_FLG									,
				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						,
				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							,
				BQ.SOC_FLG										BQ_SOC_FLG								,
				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					,
				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						,
				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						,
				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						,
				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						,
				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	,
				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	,

				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						,
				RT.ROUT_SEQ										RT_ROUT_SEQ								,
				RT.RT_SEQ											RT_RT_SEQ									,
				0															OA_ADD_CHG_SEQ						,
				0															DA_ADD_CHG_SEQ						,

				RT.CM_PRC_CMDT_TP_CD																		,
				RT.CM_PRC_CMDT_DEF_CD																		,
				RT.OP_ROUT_PNT_LOC_DEF_CD			POR_CD										,
				RT.OV_ROUT_VIA_PORT_DEF_CD		POL_CD										,
				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										,
				RT.DP_ROUT_PNT_LOC_DEF_CD			DEL_CD										,
				RT.OP_RCV_DE_TERM_CD					RCV_TERM_CD								,
				RT.DP_RCV_DE_TERM_CD					DE_TERM_CD								,
				RT.RAT_UT_CD									RAT_UT_CD									,
				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				RT.CURR_CD										CURR_CD										,
				RT.OP_PRC_TRSP_MOD_CD					ORG_TRSP_MOD_CD						,
				RT.DP_PRC_TRSP_MOD_CD					DEST_TRSP_MOD_CD					,

				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		,
				RT.OV_ROUT_VIA_PORT_DEF_CD		OV_ROUT_VIA_PORT_DEF_CD		,
				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		,
				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		,
				RT.RAT_UT_CD									RT_RAT_UT_CD							,
				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					,
				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				,
				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				,
				RT.CURR_CD										RT_CURR_CD								,
				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					,

				NULL													OA_ROUT_PNT_LOC_DEF_CD		,
				NULL													OA_BSE_PORT_DEF_CD				,
				NULL													OA_RAT_UT_CD							,
				NULL													OA_PRC_CGO_TP_CD					,
				NULL													OA_PRC_TRSP_MOD_CD				,
				NULL													OA_RCV_DE_TERM_CD					,
				NULL													OA_MIN_CGO_WGT						,
				NULL													OA_MAX_CGO_WGT						,
				NULL													OA_CURR_CD								,
				NULL													OA_FNL_FRT_RT_AMT					,
				NULL													OA_RAT_UT_MTCH_PRIO				,

				NULL													DA_ROUT_PNT_LOC_DEF_CD		,
				NULL													DA_BSE_PORT_DEF_CD				,
				NULL													DA_RAT_UT_CD							,
				NULL													DA_PRC_CGO_TP_CD					,
				NULL													DA_PRC_TRSP_MOD_CD				,
				NULL													DA_RCV_DE_TERM_CD					,
				NULL													DA_MIN_CGO_WGT						,
				NULL													DA_MAX_CGO_WGT						,
				NULL													DA_CURR_CD								,
				NULL													DA_FNL_FRT_RT_AMT					,
				NULL													DA_RAT_UT_MTCH_PRIO				,

				RT.APP_BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ,
				RT.APP_NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ,
				RT.APP_NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ,
				RT.APP_NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ,
				RT.APP_NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ,
				RT.APP_RT_OP_CD            		RT_APP_RT_OP_CD           ,
				RT.APP_CURR_CD             		RT_APP_CURR_CD            ,
				RT.APP_FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ,

				RT.RAS_BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ,
				RT.RAS_NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ,
				RT.RAS_NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ,
				RT.RAS_NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ,
				RT.RAS_NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ,
				RT.RAS_RT_OP_CD            		RT_RAS_RT_OP_CD           ,
				RT.RAS_CURR_CD             		RT_RAS_CURR_CD            ,
				RT.RAS_FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					,
				RT.RAS_RAS_CONV_CTNT					RT_RAS_CONV_CTNT					,

				RT.POR_MTCH_FLG								POR_MTCH_FLG							,
				RT.DEL_MTCH_FLG								DEL_MTCH_FLG

FROM
/*******************************************************************************************
JOIN TABLE
1.1 BQ, RT
1.2 RT RULE					: APP, RAS
2.1 OA							: X
2.2 OA RULE					: X
3.1 DA							: X
3.2 DA RULE					: X
*******************************************************************************************/
				BQ	,
				RT

WHERE		RT.BQ_SEQ = BQ.BQ_SEQ


/*******************************************************************************************
	1.1 ROUTE / TERM / TRANS MODE
*******************************************************************************************/


/*******************************************************************************************
< ORIGIN >
*******************************************************************************************/

AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.POR_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POR_CD
				UNION ALL
				SELECT	'L',	BQ.POL_CD
				FROM		DUAL
				WHERE		( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
				AND			GL.LOC_CD		= BQ.POL_CD
				)


/*******************************************************************************************
< RCV TERM >
예외적으로
(1) POR = POL 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
(2) POR_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
*******************************************************************************************/

AND     (
						(
								RT.POR_MTCH_FLG 			= 'Y'
						AND	NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD
						)
				OR	(
								( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
						AND	BQ.POR_CD							= BQ.POL_CD
						AND	(
										NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD
								OR	(
												BQ.RCV_TERM_CD 				= 'D'
										AND	RT.OP_RCV_DE_TERM_CD	= 'Y'
										)
								)
						)
				OR	(
								RT.POR_MTCH_FLG 								= 'N'
						AND	NVL(RT.OP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )
						)
				)


/*******************************************************************************************
< ORIGIN TRANS MODE >
*******************************************************************************************/

AND			(
					  RT.POR_MTCH_FLG = 'N'
				OR	(
								RT.OP_PRC_TRSP_MOD_CD	IS NULL
						OR	BQ.ORG_TRNS_MOD_CD		IS NULL
						OR	RT.OP_PRC_TRSP_MOD_CD	= BQ.ORG_TRNS_MOD_CD
						OR  (
										RT.OP_PRC_TRSP_MOD_CD	IN ( 'R', 'A' )
								AND	BQ.ORG_TRNS_MOD_CD		= 'R'
								)
						)
				)


/*******************************************************************************************
< ORIGIN VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION >
*******************************************************************************************/

AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.DEL_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.DEL_CD
				UNION ALL
				SELECT	'L',	BQ.POD_CD
				FROM		DUAL
				WHERE		( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
				AND			GL.LOC_CD		= BQ.POD_CD
				)



/*******************************************************************************************
< DE TERM >
예외적으로
(1) DEL = POD 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
(2) DEL_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
*******************************************************************************************/

AND     (
						(
								RT.DEL_MTCH_FLG 			= 'Y'
						AND	NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD
						)
				OR	(
								( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
						AND	BQ.DEL_CD							= BQ.POD_CD
						AND	(
										NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD
								OR	(
												BQ.DE_TERM_CD 				= 'D'
										AND	RT.DP_RCV_DE_TERM_CD	= 'Y'
										)
								)
						)
				OR	(
								RT.DEL_MTCH_FLG 								= 'N'
						AND	NVL(RT.DP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )
						)
				)


/*******************************************************************************************
< DEST TRANS MODE >
*******************************************************************************************/

AND			(
					  RT.DEL_MTCH_FLG = 'N'
				OR	(
								RT.DP_PRC_TRSP_MOD_CD	IS NULL
						OR	BQ.DEST_TRNS_MOD_CD		IS NULL
						OR	RT.DP_PRC_TRSP_MOD_CD	= BQ.DEST_TRNS_MOD_CD
						OR  (
										RT.DP_PRC_TRSP_MOD_CD	IN ( 'R', 'A' )
								AND	BQ.DEST_TRNS_MOD_CD		= 'R'
								)
						)
				)


UNION ALL

/*******************************************************************************************
	2. PATTERN #2 ( 0100 )
*******************************************************************************************/

SELECT	'0100'												PRC_RT_MTCH_PATT_CD				,
				BQ.RFA_NO											CTRT_NO										,
				BQ.PROP_NO										PROP_NO										,
				BQ.AMDT_SEQ										AMDT_SEQ									,
				BQ.SVC_SCP_CD									SVC_SCP_CD								,
				BQ.BKG_NO											BKG_NO										,
				BQ.BQ_SEQ											BQ_SEQ										,
				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								,
				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			,
				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						,
				BQ.DE_TERM_CD									BQ_DE_TERM_CD							,
				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						,
				BQ.DCGO_FLG										BQ_DCGO_FLG								,
				BQ.RC_FLG											BQ_RC_FLG									,
				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						,
				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							,
				BQ.SOC_FLG										BQ_SOC_FLG								,
				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					,
				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						,
				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						,
				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						,
				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						,
				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	,
				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	,

				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						,
				RT.ROUT_SEQ										RT_ROUT_SEQ								,
				RT.RT_SEQ											RT_RT_SEQ									,
				OA.ADD_CHG_SEQ								OA_ADD_CHG_SEQ						,
				0															DA_ADD_CHG_SEQ						,

				RT.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					,
				RT.CM_PRC_CMDT_DEF_CD					CM_PRC_CMDT_DEF_CD				,
				OA.ROUT_PNT_LOC_DEF_CD				POR_CD										,
				OA.BSE_PORT_DEF_CD						POL_CD										,
				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										,
				RT.DP_ROUT_PNT_LOC_DEF_CD			DEL_CD										,
				OA.RCV_DE_TERM_CD							RCV_TERM_CD								,
				RT.DP_RCV_DE_TERM_CD					DE_TERM_CD								,
				RT.RAT_UT_CD									RAT_UT_CD									,
				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				RT.CURR_CD										CURR_CD										,
				OA.PRC_TRSP_MOD_CD						ORG_TRSP_MOD_CD						,
				RT.DP_PRC_TRSP_MOD_CD					DEST_TRSP_MOD_CD					,

				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		,
				RT.OV_ROUT_VIA_PORT_DEF_CD		OV_ROUT_VIA_PORT_DEF_CD		,
				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		,
				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		,
				RT.RAT_UT_CD									RT_RAT_UT_CD							,
				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					,
				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				,
				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				,
				RT.CURR_CD										RT_CURR_CD								,
				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					,

				OA.ROUT_PNT_LOC_DEF_CD				OA_ROUT_PNT_LOC_DEF_CD		,
				OA.BSE_PORT_DEF_CD						OA_BSE_PORT_DEF_CD				,
				OA.RAT_UT_CD									OA_RAT_UT_CD							,
				OA.PRC_CGO_TP_CD							OA_PRC_CGO_TP_CD					,
				OA.PRC_TRSP_MOD_CD						OA_PRC_TRSP_MOD_CD				,
				OA.RCV_DE_TERM_CD							OA_RCV_DE_TERM_CD					,
				OA.MIN_CGO_WGT								OA_MIN_CGO_WGT						,
				OA.MAX_CGO_WGT								OA_MAX_CGO_WGT						,
				OA.CURR_CD										OA_CURR_CD								,
				OA.FNL_FRT_RT_AMT							OA_FNL_FRT_RT_AMT					,
				OA.RAT_UT_MTCH_PRIO						OA_RAT_UT_MTCH_PRIO				,

				NULL													DA_ROUT_PNT_LOC_DEF_CD		,
				NULL													DA_BSE_PORT_DEF_CD				,
				NULL													DA_RAT_UT_CD							,
				NULL													DA_PRC_CGO_TP_CD					,
				NULL													DA_PRC_TRSP_MOD_CD				,
				NULL													DA_RCV_DE_TERM_CD					,
				NULL													DA_MIN_CGO_WGT						,
				NULL													DA_MAX_CGO_WGT						,
				NULL													DA_CURR_CD								,
				NULL													DA_FNL_FRT_RT_AMT					,
				NULL													DA_RAT_UT_MTCH_PRIO				,

				RT.APP_BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ,
				RT.APP_NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ,
				RT.APP_NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ,
				RT.APP_NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ,
				RT.APP_NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ,
				RT.APP_RT_OP_CD            		RT_APP_RT_OP_CD           ,
				RT.APP_CURR_CD             		RT_APP_CURR_CD            ,
				RT.APP_FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ,

				RT.RAS_BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ,
				RT.RAS_NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ,
				RT.RAS_NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ,
				RT.RAS_NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ,
				RT.RAS_NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ,
				RT.RAS_RT_OP_CD            		RT_RAS_RT_OP_CD           ,
				RT.RAS_CURR_CD             		RT_RAS_CURR_CD            ,
				RT.RAS_FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					,
				RT.RAS_RAS_CONV_CTNT					RT_RAS_CONV_CTNT					,

				OA.POR_MTCH_FLG								POR_MTCH_FLG							,
				RT.DEL_MTCH_FLG								DEL_MTCH_FLG

FROM
/*******************************************************************************************
JOIN TABLE
1.1 BQ, OA, RT
1.2 RT RULE					: APP, RAS
2.1 OA							: O
2.2 OA RULE					: X
3.1 DA							: X
3.2 DA RULE					: X
*******************************************************************************************/
				BQ	,
				OA	,
				RT

WHERE		RT.BQ_SEQ = BQ.BQ_SEQ
AND			OA.BQ_SEQ = BQ.BQ_SEQ


/*******************************************************************************************
	2.1 ROUTE / TERM / TRANS MODE
*******************************************************************************************/


/*******************************************************************************************
< ORIGIN >
*******************************************************************************************/

AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.POL_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POL_CD
				UNION ALL
				SELECT	'L', BQ.PRE_RLY_PORT_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD
				)


/*******************************************************************************************
< ORIGIN VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION >
*******************************************************************************************/

AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.DEL_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.DEL_CD
				UNION ALL
				SELECT	'L',	BQ.POD_CD
				FROM		DUAL
				WHERE		( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
				AND			GL.LOC_CD		= BQ.POD_CD
				)


/*******************************************************************************************
< DE TERM >
예외적으로
(1) DEL = POD 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
(2) DEL_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
*******************************************************************************************/

AND     (
						(
								RT.DEL_MTCH_FLG 			= 'Y'
						AND	NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD
						)
				OR	(
								( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
						AND	BQ.DEL_CD							= BQ.POD_CD
						AND	(
										NVL(RT.DP_RCV_DE_TERM_CD, BQ.DE_TERM_CD) = BQ.DE_TERM_CD
								OR	(
												BQ.DE_TERM_CD 				= 'D'
										AND	RT.DP_RCV_DE_TERM_CD	= 'Y'
										)
								)
						)
				OR	(
								RT.DEL_MTCH_FLG 								= 'N'
						AND	NVL(RT.DP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )
						)
				)


/*******************************************************************************************
< DEST TRANS MODE >
*******************************************************************************************/

AND			(
					  RT.DEL_MTCH_FLG = 'N'
				OR	(
								RT.DP_PRC_TRSP_MOD_CD	IS NULL
						OR	BQ.DEST_TRNS_MOD_CD		IS NULL
						OR	RT.DP_PRC_TRSP_MOD_CD	= BQ.DEST_TRNS_MOD_CD
						OR  (
										RT.DP_PRC_TRSP_MOD_CD	IN ( 'R', 'A' )
								AND	BQ.DEST_TRNS_MOD_CD		= 'R'
								)
						)
				)


/*******************************************************************************************
< RATE RATING UNIT >
*******************************************************************************************/

AND			RT.RAT_UT_CD	<> 'BL'


/*******************************************************************************************
	2.3 ORIGIN ARB
*******************************************************************************************/

/*******************************************************************************************
< RCV TERM >
예외적으로
(1) POR = POL 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
(2) POR_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
*******************************************************************************************/

AND     (
						(
								OA.POR_MTCH_FLG 			= 'Y'
						AND	NVL(OA.RCV_DE_TERM_CD, BQ.RCV_TERM_CD)  = BQ.RCV_TERM_CD
						)
				OR	(
								( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
						AND	BQ.POR_CD							= BQ.POL_CD
						AND	(
											NVL(OA.RCV_DE_TERM_CD, BQ.RCV_TERM_CD)  = BQ.RCV_TERM_CD
								OR	(
												BQ.RCV_TERM_CD 				= 'D'
										AND	OA.RCV_DE_TERM_CD			= 'Y'
										)
								)
						)
				OR	(
								OA.POR_MTCH_FLG 								= 'N'
						AND	NVL(OA.RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )
						)
				)


/*******************************************************************************************
< TRANS MODE >
*******************************************************************************************/

AND			(
					  OA.POR_MTCH_FLG = 'N'
				OR	(
								OA.PRC_TRSP_MOD_CD		IS NULL
						OR	BQ.ORG_TRNS_MOD_CD		IS NULL
						OR	OA.PRC_TRSP_MOD_CD		= BQ.ORG_TRNS_MOD_CD
						OR  (
										OA.PRC_TRSP_MOD_CD		IN ( 'R', 'A' )
								AND	BQ.ORG_TRNS_MOD_CD		= 'R'
								)
						)
				)


/* ORIGIN ARB JOIN ( OARB.BPORT = RATE.ORIGIN ) */
AND			RT.OP_RCV_DE_TERM_CD					<> 'D'

AND			( RT.OP_ROUT_PNT_LOC_TP_CD,  RT.OP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	OA.BSE_PORT_TP_CD, OA.BSE_PORT_DEF_CD
				FROM		DUAL
				UNION ALL
				SELECT	'L', GL.LOC_CD
				FROM		GL
				WHERE		OA.BSE_PORT_TP_CD	= 'G'
				AND		  GL.PRC_GRP_LOC_CD	= OA.BSE_PORT_DEF_CD
				UNION ALL
				SELECT	'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		OA.BSE_PORT_TP_CD	= 'L'
				AND			GL.LOC_CD					= OA.BSE_PORT_DEF_CD
				)

UNION ALL

/*******************************************************************************************
	3. PATTERN #3 ( 0010 )
*******************************************************************************************/

SELECT	'0010'												PRC_RT_MTCH_PATT_CD				,
				BQ.RFA_NO											CTRT_NO										,
				BQ.PROP_NO										PROP_NO										,
				BQ.AMDT_SEQ										AMDT_SEQ									,
				BQ.SVC_SCP_CD									SVC_SCP_CD								,
				BQ.BKG_NO											BKG_NO										,
				BQ.BQ_SEQ											BQ_SEQ										,
				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								,
				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			,
				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						,
				BQ.DE_TERM_CD									BQ_DE_TERM_CD							,
				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						,
				BQ.DCGO_FLG										BQ_DCGO_FLG								,
				BQ.RC_FLG											BQ_RC_FLG									,
				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						,
				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							,
				BQ.SOC_FLG										BQ_SOC_FLG								,
				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					,
				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						,
				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						,
				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						,
				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						,
				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	,
				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	,

				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						,
				RT.ROUT_SEQ										RT_ROUT_SEQ								,
				RT.RT_SEQ											RT_RT_SEQ									,
				0															OA_ADD_CHG_SEQ						,
				DA.ADD_CHG_SEQ								DA_ADD_CHG_SEQ						,

				RT.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					,
				RT.CM_PRC_CMDT_DEF_CD					CM_PRC_CMDT_DEF_CD				,
				RT.OP_ROUT_PNT_LOC_DEF_CD			POR_CD										,
				RT.OV_ROUT_VIA_PORT_DEF_CD		POL_CD										,
				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										,
				DA.ROUT_PNT_LOC_DEF_CD				DEL_CD										,
				RT.OP_RCV_DE_TERM_CD					RCV_TERM_CD								,
				DA.RCV_DE_TERM_CD							DE_TERM_CD								,
				RT.RAT_UT_CD									RAT_UT_CD									,
				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				RT.CURR_CD										CURR_CD										,
				RT.OP_PRC_TRSP_MOD_CD					ORG_TRSP_MOD_CD						,
				DA.PRC_TRSP_MOD_CD						DEST_TRSP_MOD_CD					,

				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		,
				RT.OV_ROUT_VIA_PORT_DEF_CD		OV_ROUT_VIA_PORT_DEF_CD		,
				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		,
				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		,
				RT.RAT_UT_CD									RT_RAT_UT_CD							,
				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					,
				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				,
				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				,
				RT.CURR_CD										RT_CURR_CD								,
				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					,

				NULL													OA_ROUT_PNT_LOC_DEF_CD		,
				NULL													OA_BSE_PORT_DEF_CD				,
				NULL													OA_RAT_UT_CD							,
				NULL													OA_PRC_CGO_TP_CD					,
				NULL													OA_PRC_TRSP_MOD_CD				,
				NULL													OA_RCV_DE_TERM_CD					,
				NULL													OA_MIN_CGO_WGT						,
				NULL													OA_MAX_CGO_WGT						,
				NULL													OA_CURR_CD								,
				NULL													OA_FNL_FRT_RT_AMT					,
				NULL													OA_RAT_UT_MTCH_PRIO				,

				DA.ROUT_PNT_LOC_DEF_CD				DA_ROUT_PNT_LOC_DEF_CD		,
				DA.BSE_PORT_DEF_CD						DA_BSE_PORT_DEF_CD				,
				DA.RAT_UT_CD									DA_RAT_UT_CD							,
				DA.PRC_CGO_TP_CD							DA_PRC_CGO_TP_CD					,
				DA.PRC_TRSP_MOD_CD						DA_PRC_TRSP_MOD_CD				,
				DA.RCV_DE_TERM_CD							DA_RCV_DE_TERM_CD					,
				DA.MIN_CGO_WGT								DA_MIN_CGO_WGT						,
				DA.MAX_CGO_WGT								DA_MAX_CGO_WGT						,
				DA.CURR_CD										DA_CURR_CD								,
				DA.FNL_FRT_RT_AMT							DA_FNL_FRT_RT_AMT					,
				DA.RAT_UT_MTCH_PRIO						DA_RAT_UT_MTCH_PRIO				,

				RT.APP_BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ,
				RT.APP_NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ,
				RT.APP_NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ,
				RT.APP_NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ,
				RT.APP_NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ,
				RT.APP_RT_OP_CD            		RT_APP_RT_OP_CD           ,
				RT.APP_CURR_CD             		RT_APP_CURR_CD            ,
				RT.APP_FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ,

				RT.RAS_BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ,
				RT.RAS_NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ,
				RT.RAS_NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ,
				RT.RAS_NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ,
				RT.RAS_NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ,
				RT.RAS_RT_OP_CD            		RT_RAS_RT_OP_CD           ,
				RT.RAS_CURR_CD             		RT_RAS_CURR_CD            ,
				RT.RAS_FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					,
				RT.RAS_RAS_CONV_CTNT					RT_RAS_CONV_CTNT					,

				RT.POR_MTCH_FLG								POR_MTCH_FLG							,
				DA.DEL_MTCH_FLG								DEL_MTCH_FLG

FROM
/*******************************************************************************************
JOIN TABLE
1.1 BQ, DA, RT
1.2 RT RULE					: APP, RAS
2.1 OA							: X
2.2 OA RULE					: X
3.1 DA							: O
3.2 DA RULE					: X
*******************************************************************************************/
				BQ	,
				DA	,
				RT

WHERE		RT.BQ_SEQ = BQ.BQ_SEQ
AND			DA.BQ_SEQ = BQ.BQ_SEQ


/*******************************************************************************************
	3.1 ROUTE / TERM / TRANS MODE
*******************************************************************************************/


/*******************************************************************************************
< ORIGIN >
*******************************************************************************************/

AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.POR_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POR_CD
				UNION ALL
				SELECT	'L',	BQ.POL_CD
				FROM		DUAL
				WHERE		( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
				AND			GL.LOC_CD		= BQ.POL_CD
				)


/*******************************************************************************************
< RCV TERM >
예외적으로
(1) POR = POL 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
(2) POR_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
*******************************************************************************************/

AND     (
						(
								RT.POR_MTCH_FLG 			= 'Y'
						AND	NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD
						)
				OR	(
								( ( BQ.POR_CONTI_CD = 'E' OR BQ.POR_CNT_CD = 'US' ) AND BQ.DEL_CONTI_CD <> 'A' )
						AND	BQ.POR_CD							= BQ.POL_CD
						AND	(
										NVL(RT.OP_RCV_DE_TERM_CD, BQ.RCV_TERM_CD) = BQ.RCV_TERM_CD
								OR	(
												BQ.RCV_TERM_CD 				= 'D'
										AND	RT.OP_RCV_DE_TERM_CD	= 'Y'
										)
								)
						)
				OR	(
								RT.POR_MTCH_FLG 								= 'N'
						AND	NVL(RT.OP_RCV_DE_TERM_CD, '*')	IN ( 'Y', '*' )
						)
				)


/*******************************************************************************************
< ORIGIN TRANS MODE >
*******************************************************************************************/

AND			(
					  RT.POR_MTCH_FLG = 'N'
				OR	(
								RT.OP_PRC_TRSP_MOD_CD	IS NULL
						OR	BQ.ORG_TRNS_MOD_CD		IS NULL
						OR	RT.OP_PRC_TRSP_MOD_CD	= BQ.ORG_TRNS_MOD_CD
						OR  (
										RT.OP_PRC_TRSP_MOD_CD	IN ( 'R', 'A' )
								AND	BQ.ORG_TRNS_MOD_CD		= 'R'
								)
						)
				)


/*******************************************************************************************
< ORIGIN VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION >
*******************************************************************************************/

AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.POD_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POD_CD
				UNION ALL
				SELECT	'L', BQ.PST_RLY_PORT_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD
				)


/*******************************************************************************************
< RATE RATING UNIT >
*******************************************************************************************/

AND			RT.RAT_UT_CD	<> 'BL'


/*******************************************************************************************
	3.3 DEST ARB
*******************************************************************************************/

/*******************************************************************************************
< DE TERM >
예외적으로
(1) DEL = POD 일 경우, BKG : 'D', TAA : 'Y' 가 허용된다.
(2) DEL_MTCH_FLG = 'N' 일 경우, TAA : 'Y' 가 허용된다.
*******************************************************************************************/

AND     (
						(
								DA.DEL_MTCH_FLG 			= 'Y'
						AND	NVL(DA.RCV_DE_TERM_CD, BQ.DE_TERM_CD)  = BQ.DE_TERM_CD
						)
				OR	(
								( ( BQ.DEL_CONTI_CD = 'E' OR BQ.DEL_CNT_CD = 'US' ) AND BQ.POR_CONTI_CD <> 'A' )
						AND	BQ.DEL_CD							= BQ.POD_CD
						AND	(
											NVL(DA.RCV_DE_TERM_CD, BQ.DE_TERM_CD)  = BQ.DE_TERM_CD
								OR	(
												BQ.DE_TERM_CD 				= 'D'
										AND	DA.RCV_DE_TERM_CD			= 'Y'
										)
								)
						)
				OR	(
								DA.DEL_MTCH_FLG 								= 'N'
						AND	NVL(DA.RCV_DE_TERM_CD, '*')			IN ( 'Y', '*' )
						)
				)


/*******************************************************************************************
< TRANS MODE >
*******************************************************************************************/

AND			(
					  DA.DEL_MTCH_FLG = 'N'
				OR	(
								DA.PRC_TRSP_MOD_CD		IS NULL
						OR	BQ.DEST_TRNS_MOD_CD		IS NULL
						OR	DA.PRC_TRSP_MOD_CD		= BQ.DEST_TRNS_MOD_CD
						OR  (
										DA.PRC_TRSP_MOD_CD		IN ( 'R', 'A' )
								AND	BQ.DEST_TRNS_MOD_CD		= 'R'
								)
						)
				)


/* DEST ARB JOIN ( DARB.BPORT = RATE.DEST ) */
AND			RT.DP_RCV_DE_TERM_CD					<> 'D'

AND			( RT.DP_ROUT_PNT_LOC_TP_CD,  RT.DP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	DA.BSE_PORT_TP_CD, DA.BSE_PORT_DEF_CD
				FROM		DUAL
				UNION ALL
				SELECT	'L', GL.LOC_CD
				FROM		GL
				WHERE		DA.BSE_PORT_TP_CD	= 'G'
				AND		  GL.PRC_GRP_LOC_CD	= DA.BSE_PORT_DEF_CD
				UNION ALL
				SELECT	'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		DA.BSE_PORT_TP_CD	= 'L'
				AND			GL.LOC_CD					= DA.BSE_PORT_DEF_CD
				)

UNION ALL

/*******************************************************************************************
	4. PATTERN #4 ( 0110 )
*******************************************************************************************/

SELECT	'0110'												PRC_RT_MTCH_PATT_CD				,
				BQ.RFA_NO											CTRT_NO										,
				BQ.PROP_NO										PROP_NO										,
				BQ.AMDT_SEQ										AMDT_SEQ									,
				BQ.SVC_SCP_CD									SVC_SCP_CD								,
				BQ.BKG_NO											BKG_NO										,
				BQ.BQ_SEQ											BQ_SEQ										,
				BQ.BKG_BQ_SEQ									BKG_BQ_SEQ								,
				BQ.CNTR_TPSZ_CD								BQ_CNTR_TPSZ_CD						,
				BQ.CTRT_CNTR_TPSZ_CD					BQ_CTRT_CNTR_TPSZ_CD			,
				BQ.RCV_TERM_CD								BQ_RCV_TERM_CD						,
				BQ.DE_TERM_CD									BQ_DE_TERM_CD							,
				BQ.DRY_CGO_FLG								BQ_DRY_CGO_FLG						,
				BQ.DCGO_FLG										BQ_DCGO_FLG								,
				BQ.RC_FLG											BQ_RC_FLG									,
				BQ.AWK_CGO_FLG								BQ_AWK_CGO_FLG						,
				BQ.BB_CGO_FLG									BQ_BB_CGO_FLG							,
				BQ.SOC_FLG										BQ_SOC_FLG								,
				BQ.PRC_CGO_TP_CD							BQ_PRC_CGO_TP_CD					,
				BQ.IMDG_CLSS_CD								BQ_IMDG_CLSS_CD						,
				BQ.CTRT_CNTR_QTY							BQ_CTRT_CNTR_QTY					,
				BQ.POR_APPL_FLG								BQ_POR_APPL_FLG						,
				BQ.POL_APPL_FLG								BQ_POL_APPL_FLG						,
				BQ.POD_APPL_FLG								BQ_POD_APPL_FLG						,
				BQ.DEL_APPL_FLG								BQ_DEL_APPL_FLG						,
				BQ.PRE_RLY_PORT_APPL_FLG			BQ_POR_RLY_PORT_APPL_FLG	,
				BQ.PST_RLY_PORT_APPL_FLG			BQ_PST_RLY_PORT_APPL_FLG	,

				RT.CMDT_HDR_SEQ								RT_CMDT_HDR_SEQ						,
				RT.ROUT_SEQ										RT_ROUT_SEQ								,
				RT.RT_SEQ											RT_RT_SEQ									,
				OA.ADD_CHG_SEQ								OA_ADD_CHG_SEQ						,
				DA.ADD_CHG_SEQ								DA_ADD_CHG_SEQ						,

				RT.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					,
				RT.CM_PRC_CMDT_DEF_CD					CM_PRC_CMDT_DEF_CD				,
				OA.ROUT_PNT_LOC_DEF_CD				POR_CD										,
				OA.BSE_PORT_DEF_CD						POL_CD										,
				RT.DV_ROUT_VIA_PORT_DEF_CD		POD_CD										,
				DA.ROUT_PNT_LOC_DEF_CD				DEL_CD										,
				OA.RCV_DE_TERM_CD							RCV_TERM_CD								,
				DA.RCV_DE_TERM_CD							DE_TERM_CD								,
				RT.RAT_UT_CD									RAT_UT_CD									,
				RT.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				RT.CURR_CD										CURR_CD										,
				OA.PRC_TRSP_MOD_CD						ORG_TRSP_MOD_CD						,
				DA.PRC_TRSP_MOD_CD						DEST_TRSP_MOD_CD					,

				RT.OP_ROUT_PNT_LOC_DEF_CD			OP_ROUT_PNT_LOC_DEF_CD		,
				RT.OV_ROUT_VIA_PORT_DEF_CD		OV_ROUT_VIA_PORT_DEF_CD		,
				RT.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		,
				RT.DP_ROUT_PNT_LOC_DEF_CD			DP_ROUT_PNT_LOC_DEF_CD		,
				RT.RAT_UT_CD									RT_RAT_UT_CD							,
				RT.PRC_CGO_TP_CD							RT_PRC_CGO_TP_CD					,
				RT.OP_PRC_TRSP_MOD_CD					OP_PRC_TRSP_MOD_CD				,
				RT.DP_PRC_TRSP_MOD_CD					DP_PRC_TRSP_MOD_CD				,
				RT.CURR_CD										RT_CURR_CD								,
				RT.FNL_FRT_RT_AMT							RT_FNL_FRT_RT_AMT					,

				OA.ROUT_PNT_LOC_DEF_CD				OA_ROUT_PNT_LOC_DEF_CD		,
				OA.BSE_PORT_DEF_CD						OA_BSE_PORT_DEF_CD				,
				OA.RAT_UT_CD									OA_RAT_UT_CD							,
				OA.PRC_CGO_TP_CD							OA_PRC_CGO_TP_CD					,
				OA.PRC_TRSP_MOD_CD						OA_PRC_TRSP_MOD_CD				,
				OA.RCV_DE_TERM_CD							OA_RCV_DE_TERM_CD					,
				OA.MIN_CGO_WGT								OA_MIN_CGO_WGT						,
				OA.MAX_CGO_WGT								OA_MAX_CGO_WGT						,
				OA.CURR_CD										OA_CURR_CD								,
				OA.FNL_FRT_RT_AMT							OA_FNL_FRT_RT_AMT					,
				OA.RAT_UT_MTCH_PRIO						OA_RAT_UT_MTCH_PRIO				,

				DA.ROUT_PNT_LOC_DEF_CD				DA_ROUT_PNT_LOC_DEF_CD		,
				DA.BSE_PORT_DEF_CD						DA_BSE_PORT_DEF_CD				,
				DA.RAT_UT_CD									DA_RAT_UT_CD							,
				DA.PRC_CGO_TP_CD							DA_PRC_CGO_TP_CD					,
				DA.PRC_TRSP_MOD_CD						DA_PRC_TRSP_MOD_CD				,
				DA.RCV_DE_TERM_CD							DA_RCV_DE_TERM_CD					,
				DA.MIN_CGO_WGT								DA_MIN_CGO_WGT						,
				DA.MAX_CGO_WGT								DA_MAX_CGO_WGT						,
				DA.CURR_CD										DA_CURR_CD								,
				DA.FNL_FRT_RT_AMT							DA_FNL_FRT_RT_AMT					,
				DA.RAT_UT_MTCH_PRIO						DA_RAT_UT_MTCH_PRIO				,

				RT.APP_BKG_CONV_TP_CD      		RT_APP_BKG_CONV_TP_CD     ,
				RT.APP_NOTE_CONV_MAPG_ID   		RT_APP_NOTE_CONV_MAPG_ID  ,
				RT.APP_NOTE_CONV_SEQ       		RT_APP_NOTE_CONV_SEQ      ,
				RT.APP_NOTE_CONV_RULE_CD   		RT_APP_NOTE_CONV_RULE_CD  ,
				RT.APP_NOTE_CONV_TP_CD     		RT_APP_NOTE_CONV_TP_CD    ,
				RT.APP_RT_OP_CD            		RT_APP_RT_OP_CD           ,
				RT.APP_CURR_CD             		RT_APP_CURR_CD            ,
				RT.APP_FRT_RT_AMT          		RT_APP_FRT_RT_AMT         ,

				RT.RAS_BKG_CONV_TP_CD      		RT_RAS_BKG_CONV_TP_CD     ,
				RT.RAS_NOTE_CONV_MAPG_ID   		RT_RAS_NOTE_CONV_MAPG_ID  ,
				RT.RAS_NOTE_CONV_SEQ       		RT_RAS_NOTE_CONV_SEQ      ,
				RT.RAS_NOTE_CONV_RULE_CD   		RT_RAS_NOTE_CONV_RULE_CD  ,
				RT.RAS_NOTE_CONV_TP_CD     		RT_RAS_NOTE_CONV_TP_CD    ,
				RT.RAS_RT_OP_CD            		RT_RAS_RT_OP_CD           ,
				RT.RAS_CURR_CD             		RT_RAS_CURR_CD            ,
				RT.RAS_FRT_RT_AMT          		RT_RAS_FRT_RT_AMT					,
				RT.RAS_RAS_CONV_CTNT					RT_RAS_CONV_CTNT					,

				OA.POR_MTCH_FLG								POR_MTCH_FLG							,
				DA.DEL_MTCH_FLG								DEL_MTCH_FLG

FROM
/*******************************************************************************************
JOIN TABLE
1.1 BQ, OA, DA, RT
1.2 RT RULE					: APP, RAS
2.1 OA							: O
2.2 OA RULE					: X
3.1 DA							: O
3.2 DA RULE					: X
*******************************************************************************************/
				BQ	,
				OA	,
				DA	,
				RT

WHERE		RT.BQ_SEQ = BQ.BQ_SEQ
AND			OA.BQ_SEQ = BQ.BQ_SEQ
AND			DA.BQ_SEQ = BQ.BQ_SEQ


/*******************************************************************************************
	4.1 ROUTE / TERM / TRANS MODE
*******************************************************************************************/


/*******************************************************************************************
< ORIGIN >
*******************************************************************************************/

AND     ( RT.OP_ROUT_PNT_LOC_TP_CD, RT.OP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.POL_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POL_CD
				UNION ALL
				SELECT	'L', BQ.PRE_RLY_PORT_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.PRE_RLY_PORT_CD
				)


/*******************************************************************************************
< ORIGIN VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION VIA >
RT 를 구할때 조건이 들어가서 추가로 들어갈 조건이 없음
*******************************************************************************************/


/*******************************************************************************************
< DESTINATION >
*******************************************************************************************/

AND     ( RT.DP_ROUT_PNT_LOC_TP_CD, RT.DP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	'L',	BQ.POD_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.POD_CD
				UNION ALL
				SELECT	'L', BQ.PST_RLY_PORT_CD
				FROM		DUAL
				UNION ALL
				SELECT  'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		GL.LOC_CD		= BQ.PST_RLY_PORT_CD
				)


/*******************************************************************************************
< RATE RATING UNIT >
*******************************************************************************************/

AND			RT.RAT_UT_CD	<> 'BL'


/*******************************************************************************************
	< TRANS MODE >
*******************************************************************************************/

AND			(
					  OA.POR_MTCH_FLG = 'N'
				OR	(
								OA.PRC_TRSP_MOD_CD		IS NULL
						OR	BQ.ORG_TRNS_MOD_CD		IS NULL
						OR	OA.PRC_TRSP_MOD_CD		= BQ.ORG_TRNS_MOD_CD
						OR  (
										OA.PRC_TRSP_MOD_CD		IN ( 'R', 'A' )
								AND	BQ.ORG_TRNS_MOD_CD		= 'R'
								)
						)
				)


/*******************************************************************************************
	4.3 ORIGIN ARB - JOIN
*******************************************************************************************/

/* ORIGIN ARB JOIN ( OARB.BPORT = RATE.ORIGIN ) */
AND			RT.OP_RCV_DE_TERM_CD					<> 'D'

AND			( RT.OP_ROUT_PNT_LOC_TP_CD,  RT.OP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	OA.BSE_PORT_TP_CD, OA.BSE_PORT_DEF_CD
				FROM		DUAL
				UNION ALL
				SELECT	'L', GL.LOC_CD
				FROM		GL
				WHERE		OA.BSE_PORT_TP_CD	= 'G'
				AND		  GL.PRC_GRP_LOC_CD	= OA.BSE_PORT_DEF_CD
				UNION ALL
				SELECT	'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		OA.BSE_PORT_TP_CD	= 'L'
				AND			GL.LOC_CD					= OA.BSE_PORT_DEF_CD
				)


/*******************************************************************************************
	< TRANS MODE >
*******************************************************************************************/

AND			(
					  DA.DEL_MTCH_FLG = 'N'
				OR	(
								DA.PRC_TRSP_MOD_CD		IS NULL
						OR	BQ.DEST_TRNS_MOD_CD		IS NULL
						OR	DA.PRC_TRSP_MOD_CD		= BQ.DEST_TRNS_MOD_CD
						OR  (
										DA.PRC_TRSP_MOD_CD		IN ( 'R', 'A' )
								AND	BQ.DEST_TRNS_MOD_CD		= 'R'
								)
						)
				)


/*******************************************************************************************
	4.4 DEST ARB - JOIN
*******************************************************************************************/

/* DEST ARB JOIN ( DARB.BPORT = RATE.DEST ) */
AND			RT.DP_RCV_DE_TERM_CD					<> 'D'

AND			( RT.DP_ROUT_PNT_LOC_TP_CD,  RT.DP_ROUT_PNT_LOC_DEF_CD ) IN
				(
				SELECT	DA.BSE_PORT_TP_CD, DA.BSE_PORT_DEF_CD
				FROM		DUAL
				UNION ALL
				SELECT	'L', GL.LOC_CD
				FROM		GL
				WHERE		DA.BSE_PORT_TP_CD	= 'G'
				AND		  GL.PRC_GRP_LOC_CD	= DA.BSE_PORT_DEF_CD
				UNION ALL
				SELECT	'G', GL.PRC_GRP_LOC_CD
				FROM		GL
				WHERE		DA.BSE_PORT_TP_CD	= 'L'
				AND			GL.LOC_CD					= DA.BSE_PORT_DEF_CD
				)

)

SELECT	@[bkg_no]										BKG_NO										,
				R.CTRT_NO										CTRT_NO										,
				R.PRC_RT_MTCH_PATT_CD				PRC_RT_MTCH_PATT_CD				,
				R.PROP_NO										PROP_NO										,
				R.AMDT_SEQ									AMDT_SEQ									,
				R.SVC_SCP_CD								SVC_SCP_CD								,
				R.BQ_SEQ										BQ_SEQ										,
				R.BKG_BQ_SEQ								BKG_BQ_SEQ								,
				ROWNUM											BKG_BQ_OCCR_SEQ						,
				ROW_NUMBER() OVER ( ORDER BY
																DECODE(R.POR_MTCH_FLG, 'Y', 1, 2)	,
																DECODE(R.DEL_MTCH_FLG, 'Y', 1, 2)	,
																SUBSTR(R.PRC_RT_MTCH_PATT_CD, 1, 1) * 2 + SUBSTR(R.PRC_RT_MTCH_PATT_CD, 2, 1) * 1 + SUBSTR(R.PRC_RT_MTCH_PATT_CD, 3, 1) * 1 + SUBSTR(R.PRC_RT_MTCH_PATT_CD, 4, 1) * 2	,
																R.PRC_RT_MTCH_PATT_CD					,
																R.RT_CMDT_HDR_SEQ							,
																R.RT_ROUT_SEQ									,
																R.BKG_BQ_SEQ									,
																R.RT_RT_SEQ										,
																R.UQ_SEQ
													)			DP_SEQ												,

/* BKG_AUTO_RT_OCN_FRT_TMP 에 임시 저장할 칼럼 START */
				R.BQ_CNTR_TPSZ_CD						CNTR_TPSZ_CD							,
				R.BQ_CTRT_CNTR_TPSZ_CD			CTRT_CNTR_TPSZ_CD					,
				R.BQ_RCV_TERM_CD						RCV_TERM_CD								,
				R.BQ_DE_TERM_CD							DE_TERM_CD								,
				R.BQ_DRY_CGO_FLG						DRY_CGO_FLG								,
				R.BQ_AWK_CGO_FLG						AWK_CGO_FLG								,
				R.BQ_DCGO_FLG								DCGO_FLG									,
				R.BQ_RC_FLG									RC_FLG										,
				R.BQ_BB_CGO_FLG							BB_CGO_FLG								,
				R.BQ_SOC_FLG								SOC_FLG										,
				R.BQ_IMDG_CLSS_CD						IMDG_CLSS_CD							,
				R.RT_CMDT_HDR_SEQ						PRC_CMDT_HDR_SEQ					,
				R.RT_ROUT_SEQ								PRC_ROUT_SEQ							,
				R.RT_RT_SEQ									PRC_RT_SEQ								,
/* BKG_AUTO_RT_OCN_FRT_TMP 에 임시 저장할 칼럼 END */

/* UI GRID START */
				R.PRC_RT_MTCH_PATT_CD				RT_MTCH_PATT_CD						,
				CASE
				WHEN CM_PRC_CMDT_TP_CD = 'C' THEN (	SELECT CMDT_NM
																						FROM MDM_COMMODITY A
																						WHERE A.CMDT_CD = R.CM_PRC_CMDT_DEF_CD	)
				WHEN CM_PRC_CMDT_TP_CD = 'G' THEN	(	SELECT PRC_GRP_CMDT_DESC
																				 		FROM PRI_RP_SCP_GRP_CMDT A
																				 		WHERE A.PROP_NO = R.PROP_NO AND A.AMDT_SEQ = R.AMDT_SEQ AND A.SVC_SCP_CD = R.SVC_SCP_CD AND A.PRC_GRP_CMDT_CD = R.CM_PRC_CMDT_DEF_CD	)
				END	CMDT_NM																						,
				R.POR_CD										POR_CD										,
				R.POL_CD										POL_CD										,
				R.POD_CD										POD_CD										,
				R.DEL_CD										DEL_CD										,
				R.RCV_TERM_CD||'/'||R.DE_TERM_CD						RCV_DE_TERM_CD	,
				CASE
				WHEN R.BQ_CNTR_TPSZ_CD LIKE 'R%' AND R.BQ_CTRT_CNTR_TPSZ_CD NOT LIKE 'R%'		THEN R.BQ_CNTR_TPSZ_CD
				ELSE R.RAT_UT_CD
				END	RAT_UT_CD																					,
				R.PRC_CGO_TP_CD							PRC_CGO_TP_CD							,
				R.CURR_CD										CURR_CD										,
				R.ORG_TRSP_MOD_CD						ORG_TRSP_MOD_CD						,
				R.DEST_TRSP_MOD_CD					DEST_TRSP_MOD_CD					,
				0														FNL_FRT_RT_AMT						,
				R.ORG_TRSP_MOD_CD||'/'||R.DEST_TRSP_MOD_CD	TRNS_MOD_CD			,
				R.BQ_CTRT_CNTR_QTY					OP_CNTR_QTY								,
				RN.NOTE_CTNT								NOTE_CTNT									,
				'NOTE'											NOTE											,
				'DTL'												DTL												,
/* UI GRID END */

/* CHARGE UI 에 필요 속성 START */
				R.BQ_PRC_CGO_TP_CD					CGO_CATE_CD								,
/* CHARGE UI 에 필요 속성 END */

				R.BQ_POR_APPL_FLG						BQ_POR_APPL_FLG						,
				R.BQ_POL_APPL_FLG						BQ_POL_APPL_FLG						,
				R.BQ_POD_APPL_FLG						BQ_POD_APPL_FLG						,
				R.BQ_DEL_APPL_FLG						BQ_DEL_APPL_FLG						,
				R.BQ_POR_RLY_PORT_APPL_FLG	BQ_POR_RLY_PORT_APPL_FLG	,
				R.BQ_PST_RLY_PORT_APPL_FLG	BQ_PST_RLY_PORT_APPL_FLG	,

				R.OA_ADD_CHG_SEQ						OA_ADD_CHG_SEQ						,
				R.DA_ADD_CHG_SEQ						DA_ADD_CHG_SEQ						,


				R.CM_PRC_CMDT_TP_CD					CM_PRC_CMDT_TP_CD					,
				R.CM_PRC_CMDT_DEF_CD				CM_PRC_CMDT_DEF_CD				,
				R.RCV_TERM_CD								RCV_TERM_CD								,
				R.DE_TERM_CD								DE_TERM_CD								,

				R.OP_ROUT_PNT_LOC_DEF_CD		OP_ROUT_PNT_LOC_DEF_CD		,
				R.OV_ROUT_VIA_PORT_DEF_CD		OV_ROUT_VIA_PORT_DEF_CD		,
				R.DV_ROUT_VIA_PORT_DEF_CD		DV_ROUT_VIA_PORT_DEF_CD		,
				R.DP_ROUT_PNT_LOC_DEF_CD		DP_ROUT_PNT_LOC_DEF_CD		,

				R.OP_PRC_TRSP_MOD_CD				OP_PRC_TRSP_MOD_CD				,
				R.DP_PRC_TRSP_MOD_CD				DP_PRC_TRSP_MOD_CD				,

				R.RT_RAT_UT_CD							RT_RAT_UT_CD							,
				R.RT_PRC_CGO_TP_CD					RT_PRC_CGO_TP_CD					,
				R.RT_CURR_CD								RT_CURR_CD								,
				R.RT_FNL_FRT_RT_AMT					RT_FNL_FRT_RT_AMT					,
				0														RT_CALC_FRT_RT_AMT				,

				R.OA_ROUT_PNT_LOC_DEF_CD		OA_ROUT_PNT_LOC_DEF_CD		,
				R.OA_BSE_PORT_DEF_CD				OA_BSE_PORT_DEF_CD				,
				R.OA_RAT_UT_CD							OA_RAT_UT_CD							,
				R.OA_PRC_CGO_TP_CD					OA_PRC_CGO_TP_CD					,
				R.OA_PRC_TRSP_MOD_CD				OA_PRC_TRSP_MOD_CD				,
				R.OA_RCV_DE_TERM_CD					OA_RCV_DE_TERM_CD					,
				R.OA_MIN_CGO_WGT						OA_MIN_CGO_WGT						,
				R.OA_MAX_CGO_WGT						OA_MAX_CGO_WGT						,
				R.OA_CURR_CD								OA_CURR_CD								,
				NVL(R.OA_FNL_FRT_RT_AMT, 0)	OA_FNL_FRT_RT_AMT					,
				0														OA_CALC_FRT_RT_AMT				,

				R.DA_ROUT_PNT_LOC_DEF_CD		DA_ROUT_PNT_LOC_DEF_CD		,
				R.DA_BSE_PORT_DEF_CD				DA_BSE_PORT_DEF_CD				,
				R.DA_RAT_UT_CD							DA_RAT_UT_CD							,
				R.DA_PRC_CGO_TP_CD					DA_PRC_CGO_TP_CD					,
				R.DA_PRC_TRSP_MOD_CD				DA_PRC_TRSP_MOD_CD				,
				R.DA_RCV_DE_TERM_CD					DA_RCV_DE_TERM_CD					,
				R.DA_MIN_CGO_WGT						DA_MIN_CGO_WGT						,
				R.DA_MAX_CGO_WGT						DA_MAX_CGO_WGT						,
				R.DA_CURR_CD								DA_CURR_CD								,
				NVL(R.DA_FNL_FRT_RT_AMT, 0)	DA_FNL_FRT_RT_AMT					,
				0														DA_CALC_FRT_RT_AMT				,

				NVL(R.RT_APP_BKG_CONV_TP_CD, 'B')     RT_APP_BKG_CONV_TP_CD     ,
				R.RT_APP_NOTE_CONV_MAPG_ID  RT_APP_NOTE_CONV_MAPG_ID  ,
				R.RT_APP_NOTE_CONV_SEQ      RT_APP_NOTE_CONV_SEQ      ,
				R.RT_APP_NOTE_CONV_RULE_CD  RT_APP_NOTE_CONV_RULE_CD  ,
				R.RT_APP_NOTE_CONV_TP_CD    RT_APP_NOTE_CONV_TP_CD    ,
				R.RT_APP_RT_OP_CD           RT_APP_RT_OP_CD           ,
				R.RT_APP_CURR_CD            RT_APP_CURR_CD            ,
				R.RT_APP_FRT_RT_AMT         RT_APP_FRT_RT_AMT         ,

				NVL(R.RT_RAS_BKG_CONV_TP_CD, 'B')     RT_RAS_BKG_CONV_TP_CD     ,
				R.RT_RAS_NOTE_CONV_MAPG_ID  RT_RAS_NOTE_CONV_MAPG_ID  ,
				R.RT_RAS_NOTE_CONV_SEQ      RT_RAS_NOTE_CONV_SEQ      ,
				R.RT_RAS_NOTE_CONV_RULE_CD  RT_RAS_NOTE_CONV_RULE_CD  ,
				R.RT_RAS_NOTE_CONV_TP_CD    RT_RAS_NOTE_CONV_TP_CD    ,
				R.RT_RAS_RT_OP_CD           RT_RAS_RT_OP_CD           ,
				R.RT_RAS_CURR_CD            RT_RAS_CURR_CD            ,
				R.RT_RAS_FRT_RT_AMT					RT_RAS_FRT_RT_AMT					,

				R.POR_MTCH_FLG							POR_MTCH_FLG							,
				R.DEL_MTCH_FLG							DEL_MTCH_FLG							,

/*
POR_MTCH_FLG = 'Y' AND OIH_FLG = 'Y' 일 경우 'OAR' 을 'OIH' 로 표시
DEL_MTCH_FLG = 'Y' AND DIH_FLG = 'Y' 일 경우 'DAR' 을 'DIH' 로 표시
*/
				DECODE(R.POR_CD, R.POL_CD, 'N', 'Y')	OIH_FLG					,
				DECODE(R.DEL_CD, R.POD_CD, 'N', 'Y')	DIH_FLG					,

				R.RT_RAS_CONV_CTNT          RT_RAS_CONV_CTNT

FROM		(
				SELECT	R.*			,
								ROWNUM	UQ_SEQ	,
								ROW_NUMBER() OVER (	PARTITION BY
																			R.BKG_BQ_SEQ								,
																			R.RT_CMDT_HDR_SEQ						,
																			R.RT_ROUT_SEQ								,
																			R.RT_RT_SEQ									,
																			R.OA_ADD_CHG_SEQ						,
																			R.DA_ADD_CHG_SEQ						,
																			R.RT_APP_NOTE_CONV_MAPG_ID  ,
																			R.RT_APP_NOTE_CONV_SEQ      ,
																			R.RT_RAS_NOTE_CONV_MAPG_ID  ,
																			R.RT_RAS_NOTE_CONV_SEQ
																		ORDER BY
																			DECODE(R.BQ_POR_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_POL_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_POD_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_DEL_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_POR_RLY_PORT_APPL_FLG,'Y', 1, 0)
																			+ DECODE(R.BQ_PST_RLY_PORT_APPL_FLG,'Y', 1, 0)
																	)	ROUT_LOC_CONV_PRIO
				FROM		(
								/* MTCH_PATT_CD, RT_SEQ 별 우선 순위 */
								SELECT	R.*	,
												RANK() OVER (	PARTITION BY
																				R.BKG_BQ_SEQ								,
																				R.PRC_RT_MTCH_PATT_CD				,
																				R.RT_CMDT_HDR_SEQ						,
																				R.RT_ROUT_SEQ								,
																				R.RT_RT_SEQ
																			ORDER BY
																				NVL(R.OA_RAT_UT_MTCH_PRIO, 0)	DESC					,
																				NVL(R.DA_RAT_UT_MTCH_PRIO, 0)	DESC
																		)	ARB_MTCH_PRIO_2
								FROM		(
												/* RT_SEQ 별 우선 순위 */
												SELECT	R.*	,
																RANK() OVER (	PARTITION BY
																								R.BKG_BQ_SEQ								,
																								R.RT_CMDT_HDR_SEQ						,
																								R.RT_ROUT_SEQ								,
																								R.RT_RT_SEQ
																							ORDER BY
																								DECODE(R.POR_MTCH_FLG, 'Y', 1, 2) + DECODE(R.DEL_MTCH_FLG, 'Y', 1, 2)	,
																								DECODE(SUBSTR(R.PRC_RT_MTCH_PATT_CD, 1, 1), '1', 3, 0)
																								+	DECODE(SUBSTR(R.PRC_RT_MTCH_PATT_CD, 2, 1), '1', 2, 0)
																								+	DECODE(SUBSTR(R.PRC_RT_MTCH_PATT_CD, 3, 1), '1', 2, 0)
																								+	DECODE(SUBSTR(R.PRC_RT_MTCH_PATT_CD, 4, 1), '1', 3, 0)
																						)	ARB_MTCH_PRIO_1
												FROM		(
																/* 다른 DATA 가 있으면 'BL' 은 제외한다 */
																SELECT	R.*	,
																				RANK() OVER (	ORDER BY DECODE(R.RT_RAT_UT_CD, 'BL', 2, 1 )
																										)	BL_PRIO
																FROM		RATE	R
																)	R
												WHERE		R.BL_PRIO	= 1
												) R
								WHERE		R.ARB_MTCH_PRIO_1 = 1
								)	R
				WHERE		R.ARB_MTCH_PRIO_2 = 1
				)	R	,
				(
				SELECT	PROP_NO						,
				        AMDT_SEQ					,
				        SVC_SCP_CD				,
				        CMDT_HDR_SEQ			,
				        ROUT_SEQ					,
								REPLACE(LTRIM(SYS_CONNECT_BY_PATH(NOTE_CTNT,'@*'),'@*'), '@*', CHR(13)||CHR(10)||CHR(13)||CHR(10))	NOTE_CTNT
				FROM		(
								SELECT	RN.PROP_NO						,
												RN.AMDT_SEQ						,
												RN.SVC_SCP_CD					,
												RN.CMDT_HDR_SEQ				,
												RN.ROUT_SEQ						,
								        ROW_NUMBER() OVER ( PARTITION BY RN.PROP_NO, RN.AMDT_SEQ, RN.SVC_SCP_CD, RN.CMDT_HDR_SEQ, RN.ROUT_SEQ ORDER BY RN.ROUT_NOTE_SEQ ) ROW_NUMBER	,
												COUNT(1) OVER ( PARTITION BY RN.PROP_NO, RN.AMDT_SEQ, RN.SVC_SCP_CD, RN.CMDT_HDR_SEQ, RN.ROUT_SEQ )	CNT	,
												RN.ROUT_NOTE_SEQ ||'. '||RN.NOTE_CTNT NOTE_CTNT
								FROM		(
												SELECT	DISTINCT
																PROP_NO								,
																AMDT_SEQ							,
																SVC_SCP_CD						,
																RT_CMDT_HDR_SEQ				,
																RT_ROUT_SEQ
												FROM		RATE
												)	A	,
												PRI_RP_SCP_RT_CMDT_RNOTE RN
								WHERE		RN.PROP_NO						= A.PROP_NO
								AND			RN.AMDT_SEQ						= A.AMDT_SEQ
								AND			RN.SVC_SCP_CD					= A.SVC_SCP_CD
								AND			RN.CMDT_HDR_SEQ				= A.RT_CMDT_HDR_SEQ
								AND			RN.ROUT_SEQ						= A.RT_ROUT_SEQ
								AND			RN.SRC_INFO_CD				<> 'AD'
								)
				WHERE		LEVEL		= CNT
				START WITH ROW_NUMBER = 1
				CONNECT BY
								PROP_NO 					= PRIOR PROP_NO
				AND			AMDT_SEQ					= PRIOR AMDT_SEQ
				AND			SVC_SCP_CD				= PRIOR SVC_SCP_CD
				AND			CMDT_HDR_SEQ			= PRIOR CMDT_HDR_SEQ
				AND     ROUT_SEQ					= PRIOR ROUT_SEQ
				AND			ROW_NUMBER				= PRIOR ROW_NUMBER + 1
				)	RN
WHERE		RN.PROP_NO(+)						= R.PROP_NO
AND			RN.AMDT_SEQ(+)					= R.AMDT_SEQ
AND			RN.SVC_SCP_CD(+)				= R.SVC_SCP_CD
AND			RN.CMDT_HDR_SEQ(+)			= R.RT_CMDT_HDR_SEQ
AND			RN.ROUT_SEQ(+)					= R.RT_ROUT_SEQ
AND			R.ROUT_LOC_CONV_PRIO		= 1

ORDER BY
				R.BKG_BQ_SEQ						,
				DECODE(R.POR_MTCH_FLG, 'Y', 1, 2)	,
				DECODE(R.DEL_MTCH_FLG, 'Y', 1, 2)	,
				SUBSTR(R.PRC_RT_MTCH_PATT_CD, 1, 1) * 2 + SUBSTR(R.PRC_RT_MTCH_PATT_CD, 2, 1) * 1 + SUBSTR(R.PRC_RT_MTCH_PATT_CD, 3, 1) * 1 + SUBSTR(R.PRC_RT_MTCH_PATT_CD, 4, 1) * 2	,
				R.PRC_RT_MTCH_PATT_CD		,
				R.RT_CMDT_HDR_SEQ				,
				R.RT_ROUT_SEQ						,
				R.RT_RT_SEQ							,
				R.UQ_SEQ
/*AUTORATING_20100106-001*/			]]></sql>
			<params>
				<param name="cmdt_cd" type="12" value="" out="N"/>
				<param name="rt_aply_dt" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="ca_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
