<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingSearchDBDAOSearchAlocStandbyReasonTsRSQL">
			<desc><![CDATA[Allocation Stand by Reason 의 T/S VVD BKG Status vs. Allocation 을 조회한다.]]></desc>
			<sql><![CDATA[

WITH MST AS (
    SELECT MT.BKG_ALOC_SEQ        
         , MT.BKG_ALOC_TP_CD  
         , MT.ALOC_SVC_CD
         , MT.TRNK_SLAN_CD        
         , MT.TRNK_DIR_CD        
         , MT.OB_SLS_OFC_CD
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'POR' AND LENGTH(LD.SB_LOC_CD) = 2) POR_CNT_CD 
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'POR' AND LENGTH(LD.SB_LOC_CD) = 5) POR_CD        
         , MT.POR_NOD_CD        
         , MT.BKG_POR_SCC_CD        
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'POL' AND LENGTH(LD.SB_LOC_CD) = 2) POL_CNT_CD  
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'POL' AND LENGTH(LD.SB_LOC_CD) = 5) POL_CD        
         , MT.POL_NOD_CD              
         
         -- [2015.10.23] T/S PORT, T/S POL NODE, T/S POD NODE
         , CASE WHEN (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SAY' ) IS NOT NULL
                THEN NVL((SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SAY' AND LENGTH(LD.SB_LOC_CD) = 5 ), 'XXXXXXXX') 
                ELSE NULL END AS TS_ALL_LOC_CD                      
         , CASE WHEN (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SAY' ) IS NOT NULL
                THEN NVL((SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SAY' AND LENGTH(LD.SB_LOC_CD) = 7 ), 'XXXXXXXX') 
                ELSE NULL END AS TS_ALL_NOD_CD                                           
         , MT.N1ST_TS_SLAN_CD
         , MT.N1ST_TS_DIR_CD
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SPL' AND LENGTH(LD.SB_LOC_CD) = 2) N1ST_TS_POL_CNT_CD        
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SPL' AND LENGTH(LD.SB_LOC_CD) = 5) N1ST_TS_POL_CD  
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SLY' ) TS_POL_NOD_CD    
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SPD' AND LENGTH(LD.SB_LOC_CD) = 2) N1ST_TS_POD_CNT_CD  
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SPD' AND LENGTH(LD.SB_LOC_CD) = 5) N1ST_TS_POD_CD 
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'SDY') TS_POD_NOD_CD 
                 
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'POD' AND LENGTH(LD.SB_LOC_CD) = 2) POD_CNT_CD
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'POD' AND LENGTH(LD.SB_LOC_CD) = 5) POD_CD        
         , MT.POD_NOD_CD        
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'DEL' AND LENGTH(LD.SB_LOC_CD) = 2) DEL_CNT_CD 
         , (SELECT WM_CONCAT(LD.SB_LOC_CD) FROM SPC_BKG_ALOC_MGMT_NOD_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ AND LD.SB_LOC_DIV_CD = 'DEL' AND LENGTH(LD.SB_LOC_CD) = 5) DEL_CD        
         , MT.DEL_NOD_CD        
         , MT.BKG_DEL_SCC_CD        
         , MT.SC_NO        
         , MT.RFA_NO        
         , MT.CTRT_CUST_CNT_CD        
         , MT.CTRT_CUST_SEQ        
         , MT.CUST_CNT_CD        
         , MT.CUST_SEQ     
         , (SELECT WM_CONCAT(LD.CNTR_TPSZ_CD) FROM SPC_BKG_ALOC_MGMT_TP_SZ_DTL LD WHERE LD.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ) CNTR_TPSZ_CD        
         , (SELECT WM_CONCAT(CMDT.CMDT_CD) FROM SPC_BKG_ALOC_MGMT_CMDT_DTL CMDT WHERE CMDT.BKG_ALOC_SEQ = MT.BKG_ALOC_SEQ) CMDT_CD        
         , NVL(MT.ALOC_LOD_QTY, 0) ALOC_LOD_QTY
         , NVL(MT.ALOC_LOD_QTY_RTO,100) ALOC_LOD_QTY_RTO   
         , MT.VSL_CD        
         , MT.SKD_VOY_NO        
         , MT.SKD_DIR_CD        
         , MT.SLS_RHQ_CD        
         , MT.SCG_GRP_CMDT_SEQ          
         , NVL(MT.CMPB_AMT, 0) CMPB_AMT 
         , MT.BKG_CTRL_TP_CD        
         , MT.DCGO_FLG        
         , MT.RD_CGO_FLG        
         , MT.CRE_USR_ID        
         , MT.CRE_DT        
         , MT.UPD_USR_ID        
         , MT.UPD_DT        
         , MT.ALOC_APLY_FM_DT        
         , MT.ALOC_APLY_TO_DT        
         , MT.SUB_TRD_CD        
         , MT.OFT_CHG_AMT        
         , MT.RAPLY_CFM_FLG               
         , MT.HUL_BND_CD
         , ASGN_TTL_WGT
         , NVL(MT.ASGN_WGT_RTO, 100) ASGN_WGT_RTO        
         , CMPB_ONY_FLG                                 
         , RVIS_CNTR_CUST_TP_CD						         
         , NVL(MT.OP_CNTR_QTY, 0) AS CNTR_QTY 
         , MT.BKG_ALOC_RMK            
    FROM  SPC_BKG_ALOC_MGMT MT      
    WHERE MT.BKG_ALOC_TP_CD = 'S' 
    AND  MT.BKG_CTRL_TP_CD = 'S'
    AND (MT.ALOC_USE_FLG IS NULL OR  MT.ALOC_USE_FLG = 'Y')        
    AND MT.SLS_RHQ_CD = 'NYCRA'
)

, BKG AS (

 SELECT MB.VVD_SEQ
      , MB.TRNK_SLAN_CD
      , MB.TRNK_SKD_DIR_CD
      , MB.POR_CNT_CD
      , MB.POR_CD
      , MB.POR_SCC_CD
      , MB.POR_NOD_CD
      , MB.POL_CNT_CD
      , MB.POL_CD
      , MB.POL_NOD_CD
      , MB.POD_CNT_CD
      , MB.POD_CD
      , MB.POD_NOD_CD
      , MB.DEL_CNT_CD
      , MB.DEL_CD
      , MB.DEL_SCC_CD
      , MB.DEL_NOD_CD
      , MB.OB_SLS_OFC_CD
      , MB.SKD_DIR_CD
      , MB.VSL_PRE_PST_CD
      , MB.VSL_SEQ
      , MB.VVD_SLAN_CD
      , MB.VVD_VSL_CD
      , MB.VVD_SKD_VOY_NO
      , MB.VVD_SKD_DIR_CD
      , MB.VVD_VSL_CD||MB.VVD_SKD_VOY_NO||MB.VVD_SKD_DIR_CD AS VVD
      , MB.VVD_POL_CD
      , MB.VVD_POL_NOD_CD
      , MB.VVD_POD_CD
      , MB.VVD_POD_NOD_CD
      , MB.BKG_NO
      , MB.OFC_N3RD_LVL_CD
      , MAX(DECODE(RK, 1, NULL)) AS TS_POL_CNT_CD1
      , MAX(DECODE(RK, 1, NULL)) AS TS_POL_CD1
      , MAX(DECODE(RK, 1, NULL)) AS TS_POL_NOD_CD1
      , MAX(DECODE(RK, 2, TS_POL_CNT_CD)) AS TS_POD_CNT_CD1
      , MAX(DECODE(RK, 2, TS_POL_CD)) AS TS_POD_CD1
      , MAX(DECODE(RK, 2, TS_POL_YD_CD)) AS TS_POD_NOD_CD1
      , MAX(DECODE(RK, 2, TS_POL_CNT_CD)) AS TS_POL_CNT_CD2
      , MAX(DECODE(RK, 2, TS_POL_CD)) AS TS_POL_CD2
      , MAX(DECODE(RK, 2, TS_POL_YD_CD)) AS TS_POL_NOD_CD2
      , MAX(DECODE(RK, 3, TS_POL_CNT_CD)) AS TS_POD_CNT_CD2
      , MAX(DECODE(RK, 3, TS_POL_CD)) AS TS_POD_CD2
      , MAX(DECODE(RK, 3, TS_POL_YD_CD)) AS TS_POD_NOD_CD2
      , MAX(DECODE(RK, 3, TS_POL_CNT_CD)) AS TS_POL_CNT_CD3
      , MAX(DECODE(RK, 3, TS_POL_CD)) AS TS_POL_CD3
      , MAX(DECODE(RK, 3, TS_POL_YD_CD)) AS TS_POL_NOD_CD3
      , MAX(DECODE(RK, 4, TS_POL_CNT_CD)) AS TS_POD_CNT_CD3
      , MAX(DECODE(RK, 4, TS_POL_CD)) AS TS_POD_CD3
      , MAX(DECODE(RK, 4, TS_POL_YD_CD)) AS TS_POD_NOD_CD3
      , (SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY) FROM BKG_QUANTITY Q
          WHERE Q.BKG_NO = MB.BKG_NO ) AS BKG_LOD_QTY --TEU(Load)
   FROM (
        SELECT (SELECT INTG_CD_VAL_DESC FROM COM_INTG_CD_DTL
                  WHERE INTG_CD_ID = 'CD01233'
                    AND INTG_CD_VAL_CTNT = BV.VSL_PRE_PST_CD
                    AND ROWNUM = 1 )||' '||BV.VSL_SEQ AS VVD_SEQ
              , BB.SLAN_CD AS TRNK_SLAN_CD
              , BB.SKD_DIR_CD AS TRNK_SKD_DIR_CD
              , SUBSTR(BB.POR_CD, 1, 2) AS POR_CNT_CD
              , BB.POR_CD
              , (SELECT SCC_CD FROM MDM_LOCATION WHERE LOC_CD = BB.POR_CD ) AS POR_SCC_CD
              , BB.POR_NOD_CD
              , SUBSTR(BB.POL_CD, 1, 2) AS POL_CNT_CD
              , BB.POL_CD
              , BB.POL_NOD_CD
              , SUBSTR(BB.POD_CD, 1, 2) AS POD_CNT_CD
              , BB.POD_CD
              , BB.POD_NOD_CD
              , SUBSTR(BB.DEL_CD, 1, 2) AS DEL_CNT_CD
              , BB.DEL_CD
              , (SELECT SCC_CD FROM MDM_LOCATION WHERE LOC_CD = BB.DEL_CD ) AS DEL_SCC_CD
              , BB.DEL_NOD_CD
              , BB.OB_SLS_OFC_CD
              , BB.SC_NO
              , BB.RFA_NO
              , BB.SKD_DIR_CD
              , BB.CMDT_CD
              , BB.CTRT_CUST_CNT_CD
              , BB.CTRT_CUST_SEQ
              , BV.VSL_PRE_PST_CD
              , BV.VSL_SEQ
              , BV.SLAN_CD VVD_SLAN_CD
              , BV.VSL_CD VVD_VSL_CD
              , BV.SKD_VOY_NO VVD_SKD_VOY_NO
              , BV.SKD_DIR_CD VVD_SKD_DIR_CD
              , BV.POL_CD VVD_POL_CD
              , BV.POL_YD_CD VVD_POL_NOD_CD
              , BV.POD_CD VVD_POD_CD
              , BV.POD_YD_CD VVD_POD_NOD_CD
              , BB.BKG_NO
              , BB.AGMT_ACT_CNT_CD
              , BB.AGMT_ACT_CUST_SEQ
              , DENSE_RANK() OVER ( PARTITION BY TV.BKG_NO ORDER BY TV.VSL_PRE_PST_CD, TV.VSL_SEQ) AS RK
              , TV.POL_CD TS_POL_CD
              , TV.POL_YD_CD TS_POL_YD_CD
              , TV.POD_CD TS_POD_CD
              , TV.POD_YD_CD TS_POD_YD_CD
              , SUBSTR(TV.POL_CD, 1, 2) AS TS_POL_CNT_CD
              , SUBSTR(TV.POD_CD, 1, 2) AS TS_POD_CNT_CD
              , LVL.OFC_N3RD_LVL_CD
           FROM BKG_VVD MV -- in_bkg_no
              , BKG_VVD BV -- in_bkg_no의 SLAN||VVD 에 해당하는 BKG
              , BKG_VVD TV -- T/S 를 구하기 위한 BKG
              , BKG_BOOKING BB
              , BKG_OFC_LVL_V LVL
          WHERE MV.BKG_NO                 = @[bkg_no]
            AND MV.VSL_PRE_PST_CD        <> 'T'
            AND BV.BKG_NO                 = BB.BKG_NO
            AND BB.BKG_NO                 = TV.BKG_NO
            AND BB.BKG_STS_CD            <> 'X'
            AND BB.BKG_CGO_TP_CD          = 'F'
            AND (NVL(BB.ALOC_STS_CD, 'X') = 'F' OR BB.BKG_NO = MV.BKG_NO)
            AND BV.VSL_PRE_PST_CD        <> 'T'
            AND BV.SLAN_CD                = MV.SLAN_CD
            AND BV.VSL_CD                 = MV.VSL_CD
            AND BV.SKD_VOY_NO             = MV.SKD_VOY_NO
            AND BV.SKD_DIR_CD             = MV.SKD_DIR_CD
            AND BB.OB_SLS_OFC_CD          = LVL.OFC_CD
        ) MB
GROUP BY MB.VVD_SEQ
      , MB.TRNK_SLAN_CD
      , MB.TRNK_SKD_DIR_CD
      , MB.POR_CNT_CD
      , MB.POR_CD
      , MB.POR_SCC_CD
      , MB.POR_NOD_CD
      , MB.POL_CNT_CD
      , MB.POL_CD
      , MB.POL_NOD_CD
      , MB.POD_CNT_CD
      , MB.POD_CD
      , MB.POD_NOD_CD
      , MB.DEL_CNT_CD
      , MB.DEL_CD
      , MB.DEL_SCC_CD
      , MB.DEL_NOD_CD
      , MB.OB_SLS_OFC_CD
      , MB.SKD_DIR_CD
      , MB.VSL_PRE_PST_CD
      , MB.VSL_SEQ
      , MB.VVD_SLAN_CD
      , MB.VVD_VSL_CD
      , MB.VVD_SKD_VOY_NO
      , MB.VVD_SKD_DIR_CD
      , MB.VVD_POL_CD
      , MB.VVD_POL_NOD_CD
      , MB.VVD_POD_CD
      , MB.VVD_POD_NOD_CD
      , MB.BKG_NO
      , MB.OFC_N3RD_LVL_CD

)  

    SELECT VVD_SEQ
         , VVD
         , SLAN_CD
         , L_RHQ   
         , ALOC_LOD_QTY
         , TEU_TTL    
         , BKG_CTRL_TP_CD    
         , ALOC_LOD_QTY_RTO
         , TS_RATIO
         , BKG_ALOC_RMK
     FROM (
            SELECT BKG.VVD_SEQ
                 , BKG.VVD
                 , BKG.VVD_SLAN_CD SLAN_CD
                 , BKG.OFC_N3RD_LVL_CD L_RHQ
                 , MST.BKG_ALOC_SEQ
                 , MST.ALOC_SVC_CD
                 , MST.BKG_CTRL_TP_CD       
                 , MST.ALOC_LOD_QTY
                 , MST.ALOC_LOD_QTY_RTO
                 , SUM(BKG.BKG_LOD_QTY) TEU_TTL    
                 , MST.BKG_ALOC_RMK
              , CASE WHEN NVL(MST.ALOC_LOD_QTY, 0) = 0 THEN 0
                     ELSE ROUND(SUM(BKG.BKG_LOD_QTY) / MST.ALOC_LOD_QTY * 100, 1)
                      END AS TS_RATIO
               , MAX(DECODE(BKG.BKG_NO, @[bkg_no], 'Y')) SB_BKG_YN
           FROM MST  
              , BKG
          WHERE NVL(MST.TRNK_SLAN_CD(+), BKG.TRNK_SLAN_CD) = BKG.TRNK_SLAN_CD
            AND NVL(MST.VSL_CD(+),BKG.VVD_VSL_CD)          = BKG.VVD_VSL_CD       
            AND NVL(MST.SKD_VOY_NO(+),BKG.VVD_SKD_VOY_NO)  = BKG.VVD_SKD_VOY_NO       
            AND NVL(MST.SKD_DIR_CD(+),BKG.VVD_SKD_DIR_CD)  = BKG.VVD_SKD_DIR_CD  
            -- POR/NODE
            AND (NVL(MST.POR_CNT_CD,    NVL(BKG.POR_CNT_CD, '#@'))      LIKE '%'||NVL(BKG.POR_CNT_CD, '#@')||'%')
            AND (NVL(MST.POR_CD,        NVL(BKG.POR_CD, '#@'))          LIKE '%'||NVL(BKG.POR_CD, '#@')||'%')
            AND (NVL(MST.POR_NOD_CD,    NVL(BKG.POR_NOD_CD, '#@'))      LIKE '%'||NVL(BKG.POR_NOD_CD, '#@')||'%')
            AND (NVL(MST.BKG_POR_SCC_CD,NVL(BKG.POR_SCC_CD, '#@'))      LIKE '%'||NVL(BKG.POR_SCC_CD, '#@')||'%')
            -- POL/NODE
            AND (NVL(MST.POL_CNT_CD,    NVL(BKG.POL_CNT_CD, '#@'))      LIKE '%'||NVL(BKG.POL_CNT_CD, '#@')||'%')
            AND (NVL(MST.POL_CD,        NVL(BKG.POL_CD, '#@'))          LIKE '%'||NVL(BKG.POL_CD, '#@')||'%')
            AND (NVL(MST.POL_NOD_CD,    NVL(BKG.POL_NOD_CD, '#@'))      LIKE '%'||NVL(BKG.POL_NOD_CD, '#@')||'%')
            -- T/S -> T/S PORT
            AND (NVL(MST.TS_ALL_LOC_CD, NVL(BKG.TS_POL_CD1, '#@'))      LIKE '%'||NVL(BKG.TS_POL_CD1, '#@')||'%'
             OR NVL(MST.TS_ALL_LOC_CD,  NVL(BKG.TS_POL_CD2, '#@'))      LIKE '%'||NVL(BKG.TS_POL_CD2, '#@')||'%'
             OR NVL(MST.TS_ALL_LOC_CD,  NVL(BKG.TS_POL_CD3, '#@'))      LIKE '%'||NVL(BKG.TS_POL_CD3, '#@')||'%'
             OR NVL(MST.TS_ALL_LOC_CD,  NVL(BKG.TS_POD_CD1, '#@'))      LIKE '%'||NVL(BKG.TS_POD_CD1, '#@')||'%'
             OR NVL(MST.TS_ALL_LOC_CD,  NVL(BKG.TS_POD_CD2, '#@'))      LIKE '%'||NVL(BKG.TS_POD_CD2, '#@')||'%'
             OR NVL(MST.TS_ALL_LOC_CD,  NVL(BKG.TS_POD_CD3, '#@'))      LIKE '%'||NVL(BKG.TS_POD_CD3, '#@')||'%'
             OR NVL(MST.TS_ALL_NOD_CD, NVL(BKG.TS_POL_NOD_CD1, '#@'))  LIKE '%'||NVL(BKG.TS_POL_NOD_CD1, '#@')||'%'
             OR NVL(MST.TS_ALL_NOD_CD,  NVL(BKG.TS_POL_NOD_CD2, '#@'))  LIKE '%'||NVL(BKG.TS_POL_NOD_CD2, '#@')||'%'
             OR NVL(MST.TS_ALL_NOD_CD,  NVL(BKG.TS_POL_NOD_CD3, '#@'))  LIKE '%'||NVL(BKG.TS_POL_NOD_CD3, '#@')||'%'
             OR NVL(MST.TS_ALL_NOD_CD,  NVL(BKG.TS_POD_NOD_CD1, '#@'))  LIKE '%'||NVL(BKG.TS_POD_NOD_CD1, '#@')||'%'
             OR NVL(MST.TS_ALL_NOD_CD,  NVL(BKG.TS_POD_NOD_CD2, '#@'))  LIKE '%'||NVL(BKG.TS_POD_NOD_CD2, '#@')||'%'
             OR NVL(MST.TS_ALL_NOD_CD,  NVL(BKG.TS_POD_NOD_CD3, '#@'))  LIKE '%'||NVL(BKG.TS_POD_NOD_CD3, '#@')||'%')
            -- T/S -> LANE
            AND NVL(MST.N1ST_TS_SLAN_CD(+), BKG.VVD_SLAN_CD) = BKG.VVD_SLAN_CD
            -- T/S -> BD
            AND NVL(MST.N1ST_TS_DIR_CD(+), BKG.VVD_SKD_DIR_CD) = BKG.VVD_SKD_DIR_CD
            -- T/S -> POL COUNTRY
            AND (NVL(MST.N1ST_TS_POL_CNT_CD, NVL(BKG.TS_POL_CNT_CD1, '#@')) LIKE '%'||NVL(BKG.TS_POL_CNT_CD1, '#@')||'%'
             OR NVL(MST.N1ST_TS_POL_CNT_CD,  NVL(BKG.TS_POL_CNT_CD2, '#@')) LIKE '%'||NVL(BKG.TS_POL_CNT_CD2, '#@')||'%'
             OR NVL(MST.N1ST_TS_POL_CNT_CD,  NVL(BKG.TS_POL_CNT_CD3, '#@')) LIKE '%'||NVL(BKG.TS_POL_CNT_CD3, '#@')||'%')
            -- T/S -> POL
            AND (NVL(MST.N1ST_TS_POL_CD, NVL(BKG.TS_POL_CD1, '#@'))     LIKE '%'||NVL(BKG.TS_POL_CD1, '#@')||'%'
             OR NVL(MST.N1ST_TS_POL_CD,  NVL(BKG.TS_POL_CD2, '#@'))     LIKE '%'||NVL(BKG.TS_POL_CD2, '#@')||'%'
             OR NVL(MST.N1ST_TS_POL_CD,  NVL(BKG.TS_POL_CD3, '#@'))     LIKE '%'||NVL(BKG.TS_POL_CD3, '#@')||'%')
            -- T/S -> POL NODE(LOC+00)
            AND (NVL(MST.TS_POL_NOD_CD, NVL(BKG.TS_POL_NOD_CD1, '#@'))  LIKE '%'||NVL(BKG.TS_POL_NOD_CD1, '#@')||'%'
             OR NVL(MST.TS_POL_NOD_CD,  NVL(BKG.TS_POL_NOD_CD2, '#@'))  LIKE '%'||NVL(BKG.TS_POL_NOD_CD2, '#@')||'%'
             OR NVL(MST.TS_POL_NOD_CD,  NVL(BKG.TS_POL_NOD_CD3, '#@'))  LIKE '%'||NVL(BKG.TS_POL_NOD_CD3, '#@')||'%')
            -- T/S -> POD COUNTRY
            AND (NVL(MST.N1ST_TS_POD_CNT_CD, NVL(BKG.TS_POD_CNT_CD1, '#@')) LIKE '%'||NVL(BKG.TS_POD_CNT_CD1, '#@')||'%'
             OR NVL(MST.N1ST_TS_POD_CNT_CD,  NVL(BKG.TS_POD_CNT_CD2, '#@')) LIKE '%'||NVL(BKG.TS_POD_CNT_CD2, '#@')||'%'
             OR NVL(MST.N1ST_TS_POD_CNT_CD,  NVL(BKG.TS_POD_CNT_CD3, '#@')) LIKE '%'||NVL(BKG.TS_POD_CNT_CD3, '#@')||'%')
            -- T/S -> POD
            AND (NVL(MST.N1ST_TS_POD_CD, NVL(BKG.TS_POD_CD1, '#@'))     LIKE '%'||NVL(BKG.TS_POD_CD1, '#@')||'%'
             OR NVL(MST.N1ST_TS_POD_CD,  NVL(BKG.TS_POD_CD2, '#@'))     LIKE '%'||NVL(BKG.TS_POD_CD2, '#@')||'%'
             OR NVL(MST.N1ST_TS_POD_CD,  NVL(BKG.TS_POD_CD3, '#@'))     LIKE '%'||NVL(BKG.TS_POD_CD3, '#@')||'%')
            -- T/S -> POD NODE(LOC+00)
            AND (NVL(MST.TS_POD_NOD_CD, NVL(BKG.TS_POD_NOD_CD1, '#@'))  LIKE '%'||NVL(BKG.TS_POD_NOD_CD1, '#@')||'%'
             OR NVL(MST.TS_POD_NOD_CD,  NVL(BKG.TS_POD_NOD_CD2, '#@'))  LIKE '%'||NVL(BKG.TS_POD_NOD_CD2, '#@')||'%'
             OR NVL(MST.TS_POD_NOD_CD,  NVL(BKG.TS_POD_NOD_CD3, '#@'))  LIKE '%'||NVL(BKG.TS_POD_NOD_CD3, '#@')||'%')
            -- POD/NODE
            AND (NVL(MST.POD_CNT_CD,    NVL(BKG.POD_CNT_CD, '#@'))      LIKE '%'||NVL(BKG.POD_CNT_CD, '#@')||'%')
            AND (NVL(MST.POD_CD,        NVL(BKG.POD_CD, '#@'))          LIKE '%'||NVL(BKG.POD_CD, '#@')||'%')
            AND (NVL(MST.POD_NOD_CD,    NVL(BKG.POD_NOD_CD, '#@'))      LIKE '%'||NVL(BKG.POD_NOD_CD, '#@')||'%')
            -- DEL/NODE
            AND (NVL(MST.DEL_CNT_CD,    NVL(BKG.DEL_CNT_CD, '#@'))      LIKE '%'||NVL(BKG.DEL_CNT_CD, '#@')||'%')
            AND (NVL(MST.DEL_CD,        NVL(BKG.DEL_CD, '#@'))          LIKE '%'||NVL(BKG.DEL_CD, '#@')||'%')
            AND (NVL(MST.DEL_NOD_CD,    NVL(BKG.DEL_NOD_CD, '#@'))      LIKE '%'||NVL(BKG.DEL_NOD_CD, '#@')||'%')
            
            AND NVL(MST.OB_SLS_OFC_CD(+), BKG.OB_SLS_OFC_CD)               = BKG.OB_SLS_OFC_CD
            
             
        GROUP BY   BKG.VVD_SEQ
                 , BKG.VVD
                 , BKG.VVD_SLAN_CD 
                 , BKG.OFC_N3RD_LVL_CD 
                 , MST.BKG_ALOC_SEQ
                 , MST.ALOC_SVC_CD
                 , MST.BKG_CTRL_TP_CD       
                 , MST.ALOC_LOD_QTY
                 , MST.ALOC_LOD_QTY_RTO
                 , MST.BKG_ALOC_RMK
        )
   WHERE SB_BKG_YN = 'Y'			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
