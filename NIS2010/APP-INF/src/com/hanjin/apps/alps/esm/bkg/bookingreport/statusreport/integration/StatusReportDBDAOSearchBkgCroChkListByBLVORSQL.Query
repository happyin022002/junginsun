<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusReportDBDAOSearchBkgCroChkListByBLVORSQL">
			<desc><![CDATA[BL에 따른 Cross Check 리스트 조회]]></desc>
			<sql><![CDATA[
#if (${tab_item} == '')
SELECT '' BKG_NO
      ,'' BL_NO
      ,'' BL_TP_CD
      ,'' USA_CSTMS_FILE_CD
      ,'' CND_CSTMS_FILE_CD
      ,'' OBL_ISS_OFC_CD
      ,'' OBL_ISS_USR_ID
      ,'' CUST_NM_S
      ,'' CUST_ADDR_S
      ,'' CUST_CTY_NM_S
      ,'' CSTMS_DECL_CNT_CD_S
      ,'' CUST_ZIP_ID_S
      ,'' CUST_NM_C
      ,'' CUST_ADDR_C
      ,'' CUST_CTY_NM_C
      ,'' CSTMS_DECL_CNT_CD_C
	  ,'' CUST_STE_CD_C
      ,'' CUST_ZIP_ID_C
      ,'' CUST_NM_N
      ,'' CUST_ADDR_N
      ,'' CUST_CTY_NM_N
      ,'' CSTMS_DECL_CNT_CD_N
	  ,'' CUST_STE_CD_N
      ,'' CUST_ZIP_ID_N                            
	  ,'' CUST_NM 
      ,'' S_CUST_NM 
      ,'' N_CUST_NM 
      ,'' PCK_QTY_DA
      ,'' ACT_WGT
      ,'' MEAS_QTY_DA
      ,'' PCK_QTY_CHK
      ,'' ACT_WET_CHK
      ,'' MEAS_QTY_CHK
      ,'' PCK_QTY_CM
      ,'' CNTR_MF_WGT
      ,'' MEAS_QTY_CM
      ,'' CNTR_MF_MK_DESC
      ,'' CNTR_MF_GDS_DESC
      ,'' CNTR_NO
      ,'' PCK_QTY_CO
      ,'' CNTR_WGT
      ,'' MEAS_QTY_CO
      ,'' CNTR_SEAL_SEQ
	  ,'' Seq
	  ,'' B_BL_NO             
	  ,'' B_USA_CSTMS_FILE_NO 
	  ,'' B_HBL_NO            
	  ,'' B_CUST_NM_S         
	  ,'' B_CUST_ADDR_S       
	  ,'' B_CUST_NM_C         
	  ,'' B_CUST_ADDR_C       
	  ,'' B_CUST_NM_N         
	  ,'' B_CUST_ADDR_N       
	  ,'' B_PCK_QTY_DA        
	  ,'' B_HBL_WGT_DA        
	  ,'' B_MEAS_QTY_DA       
	  ,'' B_PCK_QTY_CHK       
	  ,'' B_HBL_WGT_CHK       
	  ,'' B_MEAS_QTY_CHK      
	  ,'' B_PCK_QTY_CM        
	  ,'' B_CNTR_WGT_CM       
	  ,'' B_MEAS_QTY_CM       
	  ,'' B_CNTR_MF_MK_DESC   
	  ,'' B_CNTR_MF_GDS_DESC  
	  ,'' B_CNTR_MF_NO        
	  ,'' B_CNTR_NO           
	  ,'' B_CNTR_SEAL_SEQ 
	  ,'' B_PCK_QTY_CO        
	  ,'' B_CNTR_WGT_CO       
	  ,'' B_MEAS_QTY_CO  
	  ,'' TAB_ITEM
	  ,'' CNTR_MF_HTS
	  ,'' CNTR_MF_HS
	  ,'' CNTR_MF_NCM
	  ,'' B_CNTR_MF_HTS
	  ,'' B_CNTR_MF_HS
	  ,'' B_CNTR_MF_NCM
	  ,'' B_CUST_CT_S
	  ,'' B_CUST_CN_S
      ,'' B_CUST_CT_C
      ,'' B_CUST_ST_C
	  ,'' B_CUST_CN_C
	   
  FROM DUAL
#else
#if (${pol_cd} != '')
SELECT * FROM (
WITH  BKG_VVD_TMP  AS
     (SELECT  BV.BKG_NO, BV.POL_CD, BV.POD_CD,
			 (SELECT BK.USA_CSTMS_FILE_CD || ',' || BK.CND_CSTMS_FILE_CD
             FROM   BKG_BOOKING BK 
             WHERE  BK.BKG_NO = BV.BKG_NO ) CSTMS_FILE_CD,
             
#if (${pol_cd} != '') 
       SUBSTR(BV.POL_CD,1,2) CNT_CD
#else
	 SUBSTR(BV.POD_CD,1,2) CNT_CD
#end
      FROM    BKG_VVD BV
      WHERE   0 = 0
#if (${vsl_cd} != '') 
      AND     BV.VSL_CD = @[vsl_cd]
      AND     BV.SKD_VOY_NO = @[skd_voy_no]
      AND     BV.SKD_DIR_CD = @[skd_dir_cd]
#end
#if (${pol_cd} != '') 
      AND     BV.POL_CD LIKE @[pol_cd] || '%'
#end
#if (${pod_cd} != '') 
      AND     BV.POD_CD LIKE @[pod_cd] || '%'
#end
     )
SELECT  *
FROM   (SELECT --/*+ Rule */   --> 힌트 제거
               BKG.BKG_NO
              ,BKG.BL_NO
              ,DECODE(BKG.BL_TP_CD,'W','W','')                                     AS BL_TP_CD
              ,BKG.BKG_CGO_TP_CD
              ,NVL(BKG.USA_CSTMS_FILE_CD,'-') AS USA_CSTMS_FILE_CD
              ,NVL(BKG.CND_CSTMS_FILE_CD,'-') AS CND_CSTMS_FILE_CD
              ,ISS.OBL_ISS_OFC_CD
              ,ISS.OBL_ISS_USR_ID
		,CASE WHEN NVL(C_S.CUST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CUST_NM,'N') = 'N' AND (POD_V.SHPR_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_NM_FLG,'N') END  AS CUST_NM_S
		
		,CASE WHEN NVL(C_S.CUST_ADDR,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CUST_ADDR,'N') = 'N' AND (POD_V.SHPR_ADDR_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_ADDR_FLG, 'N') END  AS CUST_ADDR_S
		
		,CASE WHEN NVL(C_S.CUST_CTY_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CUST_CTY_NM,'N') = 'N' AND (POD_V.SHPR_CTY_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_CTY_FLG, 'N') END  AS CUST_CTY_NM_S
		
		,CASE WHEN NVL(C_S.CSTMS_DECL_CNT_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CSTMS_DECL_CNT_CD,'N') = 'N' AND (POD_V.SHPR_CNT_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_CNT_FLG,'N') END  AS CSTMS_DECL_CNT_CD_S
		
		,CASE WHEN NVL(C_S.CUST_ZIP_ID,'N') <> 'N'  THEN  'Y'
			  WHEN NVL(C_S.CUST_ZIP_ID,'N') = 'N' AND (POD_V.SHPR_ZIP_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_ZIP_FLG,'N') END  AS CUST_ZIP_ID_S

		,CASE WHEN NVL(C_S.EUR_CSTMS_ST_NM,'N') <> 'N'  THEN  'Y'
			  WHEN NVL(C_S.EUR_CSTMS_ST_NM,'N') = 'N' AND (POD_V.SHPR_ST_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_ST_NM_FLG, 'N') END  AS CUST_ST_NM_S
		
        ,CASE WHEN NVL(C_S.EORI_NO,'N') <> 'N'  THEN  'Y'
	 		  WHEN NVL(C_S.EORI_NO,'N') = 'N' AND (POD_V.SHPR_EORI_NO_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.SHPR_EORI_NO_FLG, 'N') END  AS CUST_EORI_NO_S

		,CASE WHEN CASE WHEN LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END <> 'N' THEN 'Y'
		      WHEN CASE WHEN LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL) THEN 'N'
		      WHEN CASE WHEN LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (POD_V.XPT_IMP_REF_FLG6 = 'E' ) THEN 'E'
		 ELSE NVL(POD_V.XPT_IMP_REF_FLG6, 'N') END AS CUST_TAX_ID_S

		,CASE WHEN CASE WHEN LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END <> 'N' THEN 'Y'
		      WHEN CASE WHEN LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL) THEN 'N'
		      WHEN CASE WHEN LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (POD_V.XPT_IMP_REF_FLG6 = 'E' ) THEN 'E'
		 ELSE NVL(POD_V.XPT_IMP_REF_FLG6, 'N') END AS CUST_TAX_ID_C
		 
		,CASE WHEN CASE WHEN LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END <> 'N' THEN 'Y'
		      WHEN CASE WHEN LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL) THEN 'N'
		      WHEN CASE WHEN LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.TR_NTFY_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (POD_V.XPT_IMP_REF_FLG6 = 'E' ) THEN 'E'
		 ELSE NVL(POD_V.XPT_IMP_REF_FLG6, 'N') END AS CUST_TAX_ID_N
		
		,CASE WHEN NVL(C_C.CUST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_NM,'N') = 'N' AND (POD_V.CNEE_NM_FLG = 'E' ) THEN DECODE(BKG.CUST_TO_ORD_FLG,'Y','Y','E')
		ELSE NVL(POD_V.CNEE_NM_FLG,'N') END  AS CUST_NM_C
		
		,CASE WHEN NVL(C_C.CUST_ADDR,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_ADDR,'N') = 'N' AND (POD_V.CNEE_ADDR_FLG = 'E') THEN DECODE(BKG.CUST_TO_ORD_FLG,'Y','Y','E')
		ELSE NVL(POD_V.CNEE_ADDR_FLG, 'N') END  AS CUST_ADDR_C
		
		,CASE WHEN NVL(C_C.CUST_CTY_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_CTY_NM,'N') = 'N' AND (POD_V.CNEE_CTY_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.CNEE_CTY_FLG, 'N') END  AS CUST_CTY_NM_C
		
		,CASE WHEN NVL(C_C.CSTMS_DECL_CNT_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CSTMS_DECL_CNT_CD,'N') = 'N' AND (POD_V.CNEE_CNT_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.CNEE_CNT_FLG, 'N') END  AS CSTMS_DECL_CNT_CD_C
		
		,CASE WHEN NVL(C_C.CUST_STE_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_STE_CD,'N') = 'N' AND (POD_V.CNEE_STE_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.CNEE_STE_FLG, 'N') END  AS CUST_STE_CD_C
		
		,CASE WHEN NVL(C_C.CUST_ZIP_ID,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_ZIP_ID,'N') = 'N' AND (POD_V.CNEE_ZIP_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.CNEE_ZIP_FLG, 'N') END  AS CUST_ZIP_ID_C

		,CASE WHEN NVL(C_C.EUR_CSTMS_ST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.EUR_CSTMS_ST_NM,'N') = 'N' AND (POD_V.CNEE_ST_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.CNEE_ST_NM_FLG, 'N') END  AS CUST_ST_NM_C
		
        ,CASE WHEN NVL(C_C.EORI_NO,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.EORI_NO,'N') = 'N' AND (POD_V.CNEE_EORI_NO_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.CNEE_EORI_NO_FLG,'N') END  AS CUST_EORI_NO_C
		
		,CASE WHEN NVL(C_N.CUST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_NM,'N') = 'N' AND (POD_V.NTFY_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_NM_FLG, 'N') END  AS CUST_NM_N
		
		,CASE WHEN NVL(C_N.CUST_ADDR,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_ADDR,'N') = 'N' AND (POD_V.NTFY_ADDR_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_ADDR_FLG,'N') END  AS CUST_ADDR_N
		
		,CASE WHEN NVL(C_N.CUST_CTY_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_CTY_NM,'N') = 'N' AND (POD_V.NTFY_CTY_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_CTY_FLG, 'N') END  AS CUST_CTY_NM_N
		
		,CASE WHEN NVL(C_N.CSTMS_DECL_CNT_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CSTMS_DECL_CNT_CD,'N') = 'N' AND (POD_V.NTFY_CNT_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_CNT_FLG,'N') END  AS CSTMS_DECL_CNT_CD_N
		
		,CASE WHEN NVL(C_N.CUST_STE_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_STE_CD,'N') = 'N' AND (POD_V.NTFY_STE_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_STE_FLG,'N') END  AS CUST_STE_CD_N
		
		,CASE WHEN NVL(C_N.CUST_ZIP_ID,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_ZIP_ID,'N') = 'N' AND (POD_V.NTFY_ZIP_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_ZIP_FLG, 'N') END  AS CUST_ZIP_ID_N

	    ,CASE WHEN NVL(C_N.EUR_CSTMS_ST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.EUR_CSTMS_ST_NM,'N') = 'N' AND (POD_V.NTFY_ST_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_ST_NM_FLG,'N') END  AS CUST_ST_NM_N
		
        ,CASE WHEN NVL(C_N.EORI_NO,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.EORI_NO,'N') = 'N' AND (POD_V.NTFY_EORI_NO_FLG = 'E') THEN 'E'
		ELSE NVL(POD_V.NTFY_EORI_NO_FLG,'N') END  AS CUST_EORI_NO_N

              ,REPLACE(C_C.CUST_NM,CHR(13) || CHR(10),' ')         AS CUST_NM
              ,REPLACE(C_S.CUST_NM,CHR(13) || CHR(10),' ')         AS S_CUST_NM
              ,REPLACE(C_N.CUST_NM,CHR(13) || CHR(10),' ')         AS N_CUST_NM
              ,NVL(DOC.PCK_QTY,0)                                  AS PCK_QTY_DA
              ,NVL(DOC.ACT_WGT,0)                                  AS ACT_WGT
              ,NVL(DOC.MEAS_QTY,0)                                 AS MEAS_QTY_DA
              ,CASE WHEN DOC.PCK_QTY = CM_CNT.CM_PCK_CHK  THEN  'Y' 
                      WHEN (POD_V.CNTR_PCK_FLG = 'E') THEN 'E' 
                      ELSE NVL(POD_V.CNTR_PCK_FLG,'N') END  AS PCK_QTY_CHK
                
                ,CASE WHEN DOC.ACT_WGT = CM_CNT.CM_WGT_CHK  THEN  'Y' 
                      WHEN (POD_V.CNTR_WGT_FLG = 'E') THEN 'E' 
                      ELSE NVL(POD_V.CNTR_WGT_FLG,'N') END  AS ACT_WET_CHK
                            
                ,CASE WHEN DOC.MEAS_QTY = CM_CNT.CM_MEAS_CHK  THEN  'Y' 
                      WHEN (POD_V.CNTR_MEAS_FLG = 'E') THEN 'E' 
                      ELSE NVL(POD_V.CNTR_MEAS_FLG, 'N') END  AS MEAS_QTY_CHK

              ,NVL(CM_CNT.CM_PCK, 0)                                  AS PCK_QTY_CM
              ,NVL(CM_CNT.CM_WGT, 0)                                  AS CNTR_MF_WGT
              ,NVL(CM_CNT.CM_MEAS, 0)                                 AS MEAS_QTY_CM
              ,CASE WHEN NVL(CM_CNT.CM_MK,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.CM_MK,'N') = 'N' AND (POD_V.CNTR_MF_MK_FLG= 'E') THEN 'E'
                	ELSE NVL(POD_V.CNTR_MF_MK_FLG, 'N') END  AS CNTR_MF_MK_DESC
          
          	  ,CASE WHEN NVL(CM_CNT.CM_DS,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.CM_DS,'N') = 'N' AND (POD_V.CNTR_MF_DESC_FLG = 'E') THEN 'E'
                	ELSE NVL(POD_V.CNTR_MF_DESC_FLG,'N') END  AS CNTR_MF_GDS_DESC

              ,CNT.CNTR_NO
              ,NVL(CNT.PCK_QTY,0)                                  AS PCK_QTY_CO
              ,NVL(CNT.CNTR_WGT,0)                                 AS CNTR_WGT
              ,NVL(CNT.MEAS_QTY,0)                                 AS MEAS_QTY_CO
              ,CASE WHEN NVL(BKG_JOIN_FNC(CURSOR( SELECT /*+ INDEX(BKG_CNTR_SEAL_NO XAK1BKG_CNTR_SEAL_NO) */  --> 힌트 추가
                                       CNTR_SEAL_NO
                                FROM   BKG_CNTR_SEAL_NO
                                WHERE  BKG_NO = CNT.BKG_NO AND CNTR_NO = CNT.CNTR_NO)),'N') <> 'N' THEN 'Y'
      				WHEN  POD_V.SEAL_NO_FLG = 'E' OR  POD_V.SEAL_NO_FLG = 'E' THEN 'E'
      				ELSE  'N' END  AS CNTR_SEAL_SEQ    

              ,'0' Seq
			  ,CASE WHEN NVL(CM_CNT.HAMO_TRF_CD,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.HAMO_TRF_CD,'N') = 'N' AND (POD_V.CNTR_MF_CMDT_FLG = 'E') THEN 'E'
                	ELSE NVL(POD_V.CNTR_MF_CMDT_FLG,'N') END  AS CNTR_MF_HTS
           
           	  ,CASE WHEN NVL(CM_CNT.CMDT_HS_CD,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.CMDT_HS_CD,'N') = 'N' AND (POD_V.CMDT_HS_CD_FLG = 'E') THEN 'E'
                	ELSE NVL(POD_V.CMDT_HS_CD_FLG,'N') END  AS CNTR_MF_HS
                
           	  ,CASE WHEN NVL(CM_CNT.NCM_NO,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.NCM_NO,'N') = 'N' AND (POD_V.CNTR_MF_NCM_FLG = 'E') THEN 'E'
                	ELSE NVL(POD_V.CNTR_MF_NCM_FLG,'N') END  AS CNTR_MF_NCM
            

#if (${tab_item} != '') 
	          ,@[tab_item] TAB_ITEM
#end
			  ,ROW_NUMBER() OVER ( PARTITION BY BKG.BKG_NO, CNT.CNTR_NO ORDER BY BKG.BKG_NO, CNT.CNTR_NO, POD_V.LOC_CD ASC ) ROW_NUMBER
        FROM   BKG_VVD_TMP      VVD
              ,BKG_BOOKING      BKG
              ,BKG_CUSTOMER     C_S
              ,BKG_CUSTOMER     C_C
              ,BKG_CUSTOMER     C_N
              ,BKG_BL_ISS       ISS
              ,BKG_BL_DOC       DOC
              ,BKG_CONTAINER    CNT
            ,(SELECT  A.CNTR_NO,
                      A.BKG_NO,
                      SUM(PCK_QTY)      OVER (PARTITION BY BKG_NO,CNTR_NO)  CM_PCK,
                      SUM(CNTR_MF_WGT)  OVER (PARTITION BY BKG_NO,CNTR_NO)  CM_WGT,
                      SUM(MEAS_QTY)     OVER (PARTITION BY BKG_NO,CNTR_NO)  CM_MEAS,
                      SUM(PCK_QTY)      OVER (PARTITION BY BKG_NO)  CM_PCK_CHK,
                      SUM(CNTR_MF_WGT)  OVER (PARTITION BY BKG_NO)  CM_WGT_CHK,
                      SUM(MEAS_QTY)     OVER (PARTITION BY BKG_NO)  CM_MEAS_CHK,
                      A.CM_MK,
                      A.CM_DS,
					  A.HAMO_TRF_CD,
					  A.CMDT_HS_CD,
					  A.NCM_NO
              FROM   (SELECT  B.BKG_NO,
                              B.CNTR_NO,
							  C.HAMO_TRF_CD,
							  C.CMDT_HS_CD,
							  C.NCM_NO,
                              DECODE(SUM(DECODE(C.CNTR_MF_MK_DESC,NULL,0,1)),0,'N','Y')  CM_MK,
                              DECODE(SUM(DECODE(C.CNTR_MF_GDS_DESC,NULL,0,1)),0,'N','Y') CM_DS,
                              SUM(C.PCK_QTY)      PCK_QTY,
                              SUM(C.CNTR_MF_WGT)  CNTR_MF_WGT,
                              SUM(C.MEAS_QTY)     MEAS_QTY
                      FROM    BKG_VVD_TMP       A,
                              BKG_CONTAINER     B,
                              BKG_CNTR_MF_DESC  C
                      WHERE   A.BKG_NO = B.BKG_NO
                      AND     B.BKG_NO = C.BKG_NO (+)
                      AND     B.CNTR_NO = C.CNTR_NO (+)
                      GROUP BY B.BKG_NO, B.CNTR_NO,C.HAMO_TRF_CD,C.CMDT_HS_CD,C.NCM_NO
                     )  A
             ) CM_CNT,
              --BKG_CSTMS_RULE_STUP_POL_V  POL_V,
              BKG_CSTMS_RULE_STUP_POD_V  POD_V,
		      BKG_XPT_IMP_LIC LIC
        WHERE BKG.BKG_NO(+) = VVD.BKG_NO
        AND BKG.BKG_NO = C_S.BKG_NO(+)
        AND BKG.BKG_NO = C_C.BKG_NO(+)
        AND BKG.BKG_NO = C_N.BKG_NO(+)
        AND BKG.BKG_NO = ISS.BKG_NO(+)
        AND BKG.BKG_NO = DOC.BKG_NO(+)
        AND BKG.BKG_NO = CNT.BKG_NO(+)
        AND CNT.BKG_NO = CM_CNT.BKG_NO(+)
        AND CNT.CNTR_NO = CM_CNT.CNTR_NO(+)
        AND C_S.BKG_CUST_TP_CD(+) = 'S'
        AND C_C.BKG_CUST_TP_CD(+) = 'C'
        AND C_N.BKG_CUST_TP_CD(+) = 'N'
        AND BKG.BKG_STS_CD <> 'X'
		AND BKG.BKG_NO = LIC.BKG_NO(+)
		AND LIC.XPT_IMP_SEQ (+) = 1
		#if (${pol_cd} != '') 
			AND     LIC.CNT_CD(+) = SUBSTR(@[pol_cd],1,2)
			AND     LIC.IO_BND_CD(+) ='O'
		#end
		#if (${pol_cd} =='' && ${pod_cd} != '') 
			AND     LIC.CNT_CD(+) =  SUBSTR(@[pod_cd],1,2)
			AND     LIC.IO_BND_CD(+) ='I'
		#end
		AND VVD.CNT_CD = POD_V.CNT_CD (+)
        --AND SUBSTR(VVD.POL_CD,1,2) = POL_V.CNT_CD (+)
        --AND NVL(VVD.POL_CD,'X') = NVL(POL_V.LOC_CD(+), NVL(VVD.POL_CD,'X'))
		#if (${pol_cd} != '') 
			--AND NVL(VVD.POL_CD,'X') = POD_V.LOC_CD(+)
			AND NVL(VVD.POL_CD,'X') = NVL(POD_V.LOC_CD(+), NVL(VVD.POL_CD,'X'))
			--AND NVL(VVD.POD_CD,'X') = POD_V.LOC_CD(+)
		#end
        AND 'M' = POD_V.BL_TP_CD (+)
#if (${pol_yd_cd} != '') 
        AND BKG.POL_NOD_CD = @[pol_yd_cd]
#end
#if (${pod_yd_cd} != '') 
        AND BKG.POD_NOD_CD = @[pod_yd_cd]
#end
#if (${cust_cnt_cd} != '') 
        AND ( C_S.CUST_CNT_CD = @[cust_cnt_cd] AND C_S.CUST_SEQ = @[cust_seq] OR
              C_C.CUST_CNT_CD = @[cust_cnt_cd] AND C_C.CUST_SEQ = @[cust_seq] OR
              C_N.CUST_CNT_CD = @[cust_cnt_cd] AND C_N.CUST_SEQ = @[cust_seq] )
#end

#if (${usa_cstms_file_cd} != '' && ${cnd_cstms_file_cd} != '') 
		 AND (BKG.USA_CSTMS_FILE_CD = @[usa_cstms_file_cd]
			OR BKG.CND_CSTMS_FILE_CD = @[cnd_cstms_file_cd])
#else
	#if (${usa_cstms_file_cd} != '') 
        AND BKG.USA_CSTMS_FILE_CD = @[usa_cstms_file_cd]
	#end
	#if (${cnd_cstms_file_cd} != '') 
        AND BKG.CND_CSTMS_FILE_CD = @[cnd_cstms_file_cd]
	#end
#end
#if (${bkg_ofc_cd} != '') 
        AND BKG.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${cre_usr_id} != '') 
        AND BKG.CRE_USR_ID = @[cre_usr_id]
#end
#if (${ob_srep_cd} != '')
        AND BKG.OB_SREP_CD = @[ob_srep_cd]
#end
#if (${obl_iss_ofc_cd} != '') 
        AND ISS.OBL_ISS_OFC_CD = @[obl_iss_ofc_cd]
#end
#if (${obl_iss_usr_id} != '') 
        AND ISS.OBL_ISS_USR_ID = @[obl_iss_usr_id]
#end
        ORDER BY BKG.BL_NO, BKG.BKG_NO, C_C.CUST_NM
       )
#if (${chk_err} != '' && ${chk_err} == '0')
 WHERE CUST_NM_S = 'E'
   OR CUST_ADDR_S = 'E'
   OR CUST_CTY_NM_S = 'E'
   OR CSTMS_DECL_CNT_CD_S = 'E'
   OR CUST_ZIP_ID_S = 'E'
   OR CUST_NM_C = 'E'
   OR CUST_ADDR_C = 'E'
   OR CUST_CTY_NM_C = 'E'
   OR CSTMS_DECL_CNT_CD_C = 'E'
   OR CUST_STE_CD_C = 'E'
   OR CUST_ZIP_ID_C = 'E'
   OR CUST_NM_N = 'E'
   OR CUST_ADDR_N = 'E'
   OR CUST_CTY_NM_N = 'E'
   OR CSTMS_DECL_CNT_CD_N = 'E'
   OR CUST_STE_CD_N = 'E'
   OR CUST_ZIP_ID_N = 'E'
   OR PCK_QTY_CHK = 'E'
   OR ACT_WET_CHK = 'E'
   OR MEAS_QTY_CHK = 'E'
   OR CNTR_MF_MK_DESC = 'E'
   OR CNTR_MF_GDS_DESC = 'E'
   OR CNTR_SEAL_SEQ = 'E'
   OR CNTR_MF_HTS = 'E'
   OR CNTR_MF_HS = 'E'
   OR CNTR_MF_NCM = 'E'
#end   
)
WHERE 1=1
AND ROW_NUMBER = 1   
#end
#if (${pol_cd} == '' && ${pod_cd} != '')
SELECT * FROM (
WITH  BKG_VVD_TMP  AS
     (SELECT  BV.BKG_NO, BV.POL_CD, BV.POD_CD,
			 (SELECT BK.USA_CSTMS_FILE_CD || ',' || BK.CND_CSTMS_FILE_CD
             FROM   BKG_BOOKING BK 
             WHERE  BK.BKG_NO = BV.BKG_NO ) CSTMS_FILE_CD,
             
#if (${pol_cd} != '') 
       SUBSTR(BV.POL_CD,1,2) CNT_CD
#else
	 SUBSTR(BV.POD_CD,1,2) CNT_CD
#end
      FROM    BKG_VVD BV
      WHERE   0 = 0
#if (${vsl_cd} != '') 
      AND     BV.VSL_CD = @[vsl_cd]
      AND     BV.SKD_VOY_NO = @[skd_voy_no]
      AND     BV.SKD_DIR_CD = @[skd_dir_cd]
#end
#if (${pol_cd} != '') 
      AND     BV.POL_CD LIKE @[pol_cd] || '%'
#end
#if (${pod_cd} != '') 
      AND     BV.POD_CD LIKE @[pod_cd] || '%'
#end
     )
SELECT  *
FROM   (SELECT --/*+ Rule */   --> 힌트 제거
               BKG.BKG_NO
              ,BKG.BL_NO
              ,DECODE(BKG.BL_TP_CD,'W','W','')                                     AS BL_TP_CD
              ,BKG.BKG_CGO_TP_CD
              ,NVL(BKG.USA_CSTMS_FILE_CD,'-') AS USA_CSTMS_FILE_CD
              ,NVL(BKG.CND_CSTMS_FILE_CD,'-') AS CND_CSTMS_FILE_CD
              ,ISS.OBL_ISS_OFC_CD
              ,ISS.OBL_ISS_USR_ID
		,CASE WHEN NVL(C_S.CUST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CUST_NM,'N') = 'N' AND (POL_V.SHPR_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_NM_FLG,'N') END  AS CUST_NM_S
		
		,CASE WHEN NVL(C_S.CUST_ADDR,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CUST_ADDR,'N') = 'N' AND (POL_V.SHPR_ADDR_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_ADDR_FLG, 'N') END  AS CUST_ADDR_S
		
		,CASE WHEN NVL(C_S.CUST_CTY_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CUST_CTY_NM,'N') = 'N' AND (POL_V.SHPR_CTY_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_CTY_FLG, 'N') END  AS CUST_CTY_NM_S
		
		,CASE WHEN NVL(C_S.CSTMS_DECL_CNT_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_S.CSTMS_DECL_CNT_CD,'N') = 'N' AND (POL_V.SHPR_CNT_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_CNT_FLG,'N') END  AS CSTMS_DECL_CNT_CD_S
		
		,CASE WHEN NVL(C_S.CUST_ZIP_ID,'N') <> 'N'  THEN  'Y'
			  WHEN NVL(C_S.CUST_ZIP_ID,'N') = 'N' AND (POL_V.SHPR_ZIP_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_ZIP_FLG,'N') END  AS CUST_ZIP_ID_S

		,CASE WHEN NVL(C_S.EUR_CSTMS_ST_NM,'N') <> 'N'  THEN  'Y'
			  WHEN NVL(C_S.EUR_CSTMS_ST_NM,'N') = 'N' AND (POL_V.SHPR_ST_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_ST_NM_FLG, 'N') END  AS CUST_ST_NM_S
		
        ,CASE WHEN NVL(C_S.EORI_NO,'N') <> 'N'  THEN  'Y'
	 		  WHEN NVL(C_S.EORI_NO,'N') = 'N' AND (POL_V.SHPR_EORI_NO_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.SHPR_EORI_NO_FLG, 'N') END  AS CUST_EORI_NO_S

		,CASE WHEN CASE WHEN LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END <> 'N' THEN 'Y'
		      WHEN CASE WHEN LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL) THEN 'N'
		      WHEN CASE WHEN LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (POL_V.XPT_IMP_REF_FLG6 = 'E' ) THEN 'E'
		 ELSE NVL(POL_V.XPT_IMP_REF_FLG6, 'N') END AS CUST_TAX_ID_S

		,CASE WHEN CASE WHEN LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END <> 'N' THEN 'Y'
		      WHEN CASE WHEN LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL) THEN 'N'
		      WHEN CASE WHEN LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (POL_V.XPT_IMP_REF_FLG6 = 'E' ) THEN 'E'
		 ELSE NVL(POL_V.XPT_IMP_REF_FLG6, 'N') END AS CUST_TAX_ID_C
		 
		,CASE WHEN CASE WHEN LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END <> 'N' THEN 'Y'
		      WHEN CASE WHEN LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.MX_NTFY_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (LIC.TR_CNEE_TAX_ID IS NOT NULL OR LIC.TR_SHPR_TAX_ID IS NOT NULL OR LIC.MX_CNEE_TAX_ID IS NOT NULL OR LIC.MX_SHPR_TAX_ID IS NOT NULL) THEN 'N'
		      WHEN CASE WHEN LIC.TR_NTFY_TAX_ID IS NOT NULL OR LIC.TR_NTFY_TAX_ID IS NOT NULL THEN 'Y' ELSE 'N' END = 'N' 
		      AND (POL_V.XPT_IMP_REF_FLG6 = 'E' ) THEN 'E'
		 ELSE NVL(POL_V.XPT_IMP_REF_FLG6, 'N') END AS CUST_TAX_ID_N
		
		,CASE WHEN NVL(C_C.CUST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_NM,'N') = 'N' AND (POL_V.CNEE_NM_FLG = 'E' ) THEN DECODE(BKG.CUST_TO_ORD_FLG,'Y','Y','E')
		ELSE NVL(POL_V.CNEE_NM_FLG,'N') END  AS CUST_NM_C
		
		,CASE WHEN NVL(C_C.CUST_ADDR,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_ADDR,'N') = 'N' AND (POL_V.CNEE_ADDR_FLG = 'E') THEN DECODE(BKG.CUST_TO_ORD_FLG,'Y','Y','E')
		ELSE NVL(POL_V.CNEE_ADDR_FLG, 'N') END  AS CUST_ADDR_C
		
		,CASE WHEN NVL(C_C.CUST_CTY_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_CTY_NM,'N') = 'N' AND (POL_V.CNEE_CTY_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.CNEE_CTY_FLG, 'N') END  AS CUST_CTY_NM_C
		
		,CASE WHEN NVL(C_C.CSTMS_DECL_CNT_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CSTMS_DECL_CNT_CD,'N') = 'N' AND (POL_V.CNEE_CNT_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.CNEE_CNT_FLG, 'N') END  AS CSTMS_DECL_CNT_CD_C
		
		,CASE WHEN NVL(C_C.CUST_STE_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_STE_CD,'N') = 'N' AND (POL_V.CNEE_STE_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.CNEE_STE_FLG, 'N') END  AS CUST_STE_CD_C
		
		,CASE WHEN NVL(C_C.CUST_ZIP_ID,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.CUST_ZIP_ID,'N') = 'N' AND (POL_V.CNEE_ZIP_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.CNEE_ZIP_FLG, 'N') END  AS CUST_ZIP_ID_C

		,CASE WHEN NVL(C_C.EUR_CSTMS_ST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.EUR_CSTMS_ST_NM,'N') = 'N' AND (POL_V.CNEE_ST_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.CNEE_ST_NM_FLG, 'N') END  AS CUST_ST_NM_C
		
        ,CASE WHEN NVL(C_C.EORI_NO,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_C.EORI_NO,'N') = 'N' AND (POL_V.CNEE_EORI_NO_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.CNEE_EORI_NO_FLG,'N') END  AS CUST_EORI_NO_C
		
		,CASE WHEN NVL(C_N.CUST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_NM,'N') = 'N' AND (POL_V.NTFY_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_NM_FLG, 'N') END  AS CUST_NM_N
		
		,CASE WHEN NVL(C_N.CUST_ADDR,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_ADDR,'N') = 'N' AND (POL_V.NTFY_ADDR_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_ADDR_FLG,'N') END  AS CUST_ADDR_N
		
		,CASE WHEN NVL(C_N.CUST_CTY_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_CTY_NM,'N') = 'N' AND (POL_V.NTFY_CTY_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_CTY_FLG, 'N') END  AS CUST_CTY_NM_N
		
		,CASE WHEN NVL(C_N.CSTMS_DECL_CNT_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CSTMS_DECL_CNT_CD,'N') = 'N' AND (POL_V.NTFY_CNT_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_CNT_FLG,'N') END  AS CSTMS_DECL_CNT_CD_N
		
		,CASE WHEN NVL(C_N.CUST_STE_CD,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_STE_CD,'N') = 'N' AND (POL_V.NTFY_STE_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_STE_FLG,'N') END  AS CUST_STE_CD_N
		
		,CASE WHEN NVL(C_N.CUST_ZIP_ID,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.CUST_ZIP_ID,'N') = 'N' AND (POL_V.NTFY_ZIP_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_ZIP_FLG, 'N') END  AS CUST_ZIP_ID_N

	    ,CASE WHEN NVL(C_N.EUR_CSTMS_ST_NM,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.EUR_CSTMS_ST_NM,'N') = 'N' AND (POL_V.NTFY_ST_NM_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_ST_NM_FLG,'N') END  AS CUST_ST_NM_N
		
        ,CASE WHEN NVL(C_N.EORI_NO,'N') <> 'N'  THEN  'Y'
		WHEN NVL(C_N.EORI_NO,'N') = 'N' AND (POL_V.NTFY_EORI_NO_FLG = 'E') THEN 'E'
		ELSE NVL(POL_V.NTFY_EORI_NO_FLG,'N') END  AS CUST_EORI_NO_N

              ,REPLACE(C_C.CUST_NM,CHR(13) || CHR(10),' ')         AS CUST_NM
              ,REPLACE(C_S.CUST_NM,CHR(13) || CHR(10),' ')         AS S_CUST_NM
              ,REPLACE(C_N.CUST_NM,CHR(13) || CHR(10),' ')         AS N_CUST_NM
              ,NVL(DOC.PCK_QTY,0)                                  AS PCK_QTY_DA
              ,NVL(DOC.ACT_WGT,0)                                  AS ACT_WGT
              ,NVL(DOC.MEAS_QTY,0)                                 AS MEAS_QTY_DA
              ,CASE WHEN DOC.PCK_QTY = CM_CNT.CM_PCK_CHK  THEN  'Y' 
                      WHEN (POL_V.CNTR_PCK_FLG = 'E') THEN 'E' 
                      ELSE NVL(POL_V.CNTR_PCK_FLG,'N') END  AS PCK_QTY_CHK
                
                ,CASE WHEN DOC.ACT_WGT = CM_CNT.CM_WGT_CHK  THEN  'Y' 
                      WHEN (POL_V.CNTR_WGT_FLG = 'E') THEN 'E' 
                      ELSE NVL(POL_V.CNTR_WGT_FLG,'N') END  AS ACT_WET_CHK
                            
                ,CASE WHEN DOC.MEAS_QTY = CM_CNT.CM_MEAS_CHK  THEN  'Y' 
                      WHEN (POL_V.CNTR_MEAS_FLG = 'E') THEN 'E' 
                      ELSE NVL(POL_V.CNTR_MEAS_FLG, 'N') END  AS MEAS_QTY_CHK

              ,NVL(CM_CNT.CM_PCK, 0)                                  AS PCK_QTY_CM
              ,NVL(CM_CNT.CM_WGT, 0)                                  AS CNTR_MF_WGT
              ,NVL(CM_CNT.CM_MEAS, 0)                                 AS MEAS_QTY_CM
              ,CASE WHEN NVL(CM_CNT.CM_MK,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.CM_MK,'N') = 'N' AND (POL_V.CNTR_MF_MK_FLG= 'E') THEN 'E'
                	ELSE NVL(POL_V.CNTR_MF_MK_FLG, 'N') END  AS CNTR_MF_MK_DESC
          
          	  ,CASE WHEN NVL(CM_CNT.CM_DS,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.CM_DS,'N') = 'N' AND (POL_V.CNTR_MF_DESC_FLG = 'E') THEN 'E'
                	ELSE NVL(POL_V.CNTR_MF_DESC_FLG,'N') END  AS CNTR_MF_GDS_DESC

              ,CNT.CNTR_NO
              ,NVL(CNT.PCK_QTY,0)                                  AS PCK_QTY_CO
              ,NVL(CNT.CNTR_WGT,0)                                 AS CNTR_WGT
              ,NVL(CNT.MEAS_QTY,0)                                 AS MEAS_QTY_CO
              ,CASE WHEN NVL(BKG_JOIN_FNC(CURSOR( SELECT /*+ INDEX(BKG_CNTR_SEAL_NO XAK1BKG_CNTR_SEAL_NO) */  --> 힌트 추가
                                       CNTR_SEAL_NO
                                FROM   BKG_CNTR_SEAL_NO
                                WHERE  BKG_NO = CNT.BKG_NO AND CNTR_NO = CNT.CNTR_NO)),'N') <> 'N' THEN 'Y'
      				WHEN  POL_V.SEAL_NO_FLG = 'E' OR  POL_V.SEAL_NO_FLG = 'E' THEN 'E'
      				ELSE  'N' END  AS CNTR_SEAL_SEQ    

              ,'0' Seq
			  ,CASE WHEN NVL(CM_CNT.HAMO_TRF_CD,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.HAMO_TRF_CD,'N') = 'N' AND (POL_V.CNTR_MF_CMDT_FLG = 'E') THEN 'E'
                	ELSE NVL(POL_V.CNTR_MF_CMDT_FLG,'N') END  AS CNTR_MF_HTS
           
           	  ,CASE WHEN NVL(CM_CNT.CMDT_HS_CD,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.CMDT_HS_CD,'N') = 'N' AND (POL_V.CMDT_HS_CD_FLG = 'E') THEN 'E'
                	ELSE NVL(POL_V.CMDT_HS_CD_FLG,'N') END  AS CNTR_MF_HS
                
           	  ,CASE WHEN NVL(CM_CNT.NCM_NO,'N') <> 'N'  THEN  'Y'
                	WHEN NVL(CM_CNT.NCM_NO,'N') = 'N' AND (POL_V.CNTR_MF_NCM_FLG = 'E') THEN 'E'
                	ELSE NVL(POL_V.CNTR_MF_NCM_FLG,'N') END  AS CNTR_MF_NCM
            
#if (${tab_item} != '') 
	          ,@[tab_item] TAB_ITEM
#end
			  ,ROW_NUMBER() OVER ( PARTITION BY BKG.BKG_NO, CNT.CNTR_NO ORDER BY BKG.BKG_NO, CNT.CNTR_NO, POL_V.LOC_CD ASC ) ROW_NUMBER
        FROM   BKG_VVD_TMP      VVD
              ,BKG_BOOKING      BKG
              ,BKG_CUSTOMER     C_S
              ,BKG_CUSTOMER     C_C
              ,BKG_CUSTOMER     C_N
              ,BKG_BL_ISS       ISS
              ,BKG_BL_DOC       DOC
              ,BKG_CONTAINER    CNT
            ,(SELECT  A.CNTR_NO,
                      A.BKG_NO,
                      SUM(PCK_QTY)      OVER (PARTITION BY BKG_NO,CNTR_NO)  CM_PCK,
                      SUM(CNTR_MF_WGT)  OVER (PARTITION BY BKG_NO,CNTR_NO)  CM_WGT,
                      SUM(MEAS_QTY)     OVER (PARTITION BY BKG_NO,CNTR_NO)  CM_MEAS,
                      SUM(PCK_QTY)      OVER (PARTITION BY BKG_NO)  CM_PCK_CHK,
                      SUM(CNTR_MF_WGT)  OVER (PARTITION BY BKG_NO)  CM_WGT_CHK,
                      SUM(MEAS_QTY)     OVER (PARTITION BY BKG_NO)  CM_MEAS_CHK,
                      A.CM_MK,
                      A.CM_DS,
					  A.HAMO_TRF_CD,
					  A.CMDT_HS_CD,
					  A.NCM_NO
              FROM   (SELECT  B.BKG_NO,
                              B.CNTR_NO,
							  C.HAMO_TRF_CD,
							  C.CMDT_HS_CD,
							  C.NCM_NO,
                              DECODE(SUM(DECODE(C.CNTR_MF_MK_DESC,NULL,0,1)),0,'N','Y')  CM_MK,
                              DECODE(SUM(DECODE(C.CNTR_MF_GDS_DESC,NULL,0,1)),0,'N','Y') CM_DS,
                              SUM(C.PCK_QTY)      PCK_QTY,
                              SUM(C.CNTR_MF_WGT)  CNTR_MF_WGT,
                              SUM(C.MEAS_QTY)     MEAS_QTY
                      FROM    BKG_VVD_TMP       A,
                              BKG_CONTAINER     B,
                              BKG_CNTR_MF_DESC  C
                      WHERE   A.BKG_NO = B.BKG_NO
                      AND     B.BKG_NO = C.BKG_NO (+)
                      AND     B.CNTR_NO = C.CNTR_NO (+)
                      GROUP BY B.BKG_NO, B.CNTR_NO,C.HAMO_TRF_CD,C.CMDT_HS_CD,C.NCM_NO
                     )  A
             ) CM_CNT,
              BKG_CSTMS_RULE_STUP_POL_V  POL_V,
              --BKG_CSTMS_RULE_STUP_POD_V  POD_V,
		      BKG_XPT_IMP_LIC LIC
        WHERE BKG.BKG_NO(+) = VVD.BKG_NO
        AND BKG.BKG_NO = C_S.BKG_NO(+)
        AND BKG.BKG_NO = C_C.BKG_NO(+)
        AND BKG.BKG_NO = C_N.BKG_NO(+)
        AND BKG.BKG_NO = ISS.BKG_NO(+)
        AND BKG.BKG_NO = DOC.BKG_NO(+)
        AND BKG.BKG_NO = CNT.BKG_NO(+)
        AND CNT.BKG_NO = CM_CNT.BKG_NO(+)
        AND CNT.CNTR_NO = CM_CNT.CNTR_NO(+)
        AND C_S.BKG_CUST_TP_CD(+) = 'S'
        AND C_C.BKG_CUST_TP_CD(+) = 'C'
        AND C_N.BKG_CUST_TP_CD(+) = 'N'
        AND BKG.BKG_STS_CD <> 'X'
		AND BKG.BKG_NO = LIC.BKG_NO(+)
		AND LIC.XPT_IMP_SEQ (+) = 1
		#if (${pol_cd} != '') 
			AND     LIC.CNT_CD(+) = SUBSTR(@[pol_cd],1,2)
			AND     LIC.IO_BND_CD(+) ='O'
		#end
		#if (${pol_cd} =='' && ${pod_cd} != '') 
			AND     LIC.CNT_CD(+) =  SUBSTR(@[pod_cd],1,2)
			AND     LIC.IO_BND_CD(+) ='I'
		#end
	    AND VVD.CNT_CD = POL_V.CNT_CD (+)	
        --AND SUBSTR(VVD.POD_CD,1,2) = POD_V.CNT_CD (+)
        --AND NVL(VVD.POD_CD,'X') = NVL(POD_V.LOC_CD(+), NVL(VVD.POD_CD,'X'))
		#if (${pol_cd} =='' && ${pod_cd} != '') 
			--AND NVL(VVD.POD_CD,'X') = POL_V.LOC_CD(+)
			AND NVL(VVD.POD_CD,'X') = NVL(POL_V.LOC_CD(+), NVL(VVD.POD_CD,'X'))
		#end
        AND 'M' = POL_V.BL_TP_CD (+)
#if (${pol_yd_cd} != '') 
        AND BKG.POL_NOD_CD = @[pol_yd_cd]
#end
#if (${pod_yd_cd} != '') 
        AND BKG.POD_NOD_CD = @[pod_yd_cd]
#end
#if (${cust_cnt_cd} != '') 
        AND ( C_S.CUST_CNT_CD = @[cust_cnt_cd] AND C_S.CUST_SEQ = @[cust_seq] OR
              C_C.CUST_CNT_CD = @[cust_cnt_cd] AND C_C.CUST_SEQ = @[cust_seq] OR
              C_N.CUST_CNT_CD = @[cust_cnt_cd] AND C_N.CUST_SEQ = @[cust_seq] )
#end

#if (${usa_cstms_file_cd} != '' && ${cnd_cstms_file_cd} != '') 
		 AND (BKG.USA_CSTMS_FILE_CD = @[usa_cstms_file_cd]
			OR BKG.CND_CSTMS_FILE_CD = @[cnd_cstms_file_cd])
#else
	#if (${usa_cstms_file_cd} != '') 
        AND BKG.USA_CSTMS_FILE_CD = @[usa_cstms_file_cd]
	#end
	#if (${cnd_cstms_file_cd} != '') 
        AND BKG.CND_CSTMS_FILE_CD = @[cnd_cstms_file_cd]
	#end
#end
#if (${bkg_ofc_cd} != '') 
        AND BKG.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${cre_usr_id} != '') 
        AND BKG.CRE_USR_ID = @[cre_usr_id]
#end
#if (${ob_srep_cd} != '')
        AND BKG.OB_SREP_CD = @[ob_srep_cd]
#end
#if (${obl_iss_ofc_cd} != '') 
        AND ISS.OBL_ISS_OFC_CD = @[obl_iss_ofc_cd]
#end
#if (${obl_iss_usr_id} != '') 
        AND ISS.OBL_ISS_USR_ID = @[obl_iss_usr_id]
#end
        ORDER BY BKG.BL_NO, BKG.BKG_NO, C_C.CUST_NM
       )
#if (${chk_err} != '' && ${chk_err} == '0')
 WHERE CUST_NM_S = 'E'
   OR CUST_ADDR_S = 'E'
   OR CUST_CTY_NM_S = 'E'
   OR CSTMS_DECL_CNT_CD_S = 'E'
   OR CUST_ZIP_ID_S = 'E'
   OR CUST_NM_C = 'E'
   OR CUST_ADDR_C = 'E'
   OR CUST_CTY_NM_C = 'E'
   OR CSTMS_DECL_CNT_CD_C = 'E'
   OR CUST_STE_CD_C = 'E'
   OR CUST_ZIP_ID_C = 'E'
   OR CUST_NM_N = 'E'
   OR CUST_ADDR_N = 'E'
   OR CUST_CTY_NM_N = 'E'
   OR CSTMS_DECL_CNT_CD_N = 'E'
   OR CUST_STE_CD_N = 'E'
   OR CUST_ZIP_ID_N = 'E'
   OR PCK_QTY_CHK = 'E'
   OR ACT_WET_CHK = 'E'
   OR MEAS_QTY_CHK = 'E'
   OR CNTR_MF_MK_DESC = 'E'
   OR CNTR_MF_GDS_DESC = 'E'
   OR CNTR_SEAL_SEQ = 'E'
   OR CNTR_MF_HTS = 'E'
   OR CNTR_MF_HS = 'E'
   OR CNTR_MF_NCM = 'E'
#end   
)
WHERE 1=1
AND ROW_NUMBER = 1  
#end
  
#end			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="tab_item" type="12" value="" out="N"/>
				<param name="pol_yd_cd" type="12" value="" out="N"/>
				<param name="pod_yd_cd" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="usa_cstms_file_cd" type="12" value="" out="N"/>
				<param name="cnd_cstms_file_cd" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="ob_srep_cd" type="12" value="" out="N"/>
				<param name="obl_iss_ofc_cd" type="12" value="" out="N"/>
				<param name="obl_iss_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
