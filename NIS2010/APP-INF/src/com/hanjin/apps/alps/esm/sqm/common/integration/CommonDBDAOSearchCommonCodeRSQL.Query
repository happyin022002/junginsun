<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CommonDBDAOSearchCommonCodeRSQL">
			<desc><![CDATA[SQM 에서 사용하는 목록성 코드조회

*History
2014.06.24 [CHM-201430703] 이혜민 SQM 신규 Office 등록 로직 변경(MDM+SQM_QTA_OFC)
2015.06.15 김용습 [CHM-201536164] 주간 MAS Open에 따른 타모듈 프로그램 적용 요청
2016.01.28 최성민 [CHM-201639851] Basic Data Creation for IAS Secotr 화면의 Creation 로직 변경
20160422 CHM-201641278 [SQM] IAS Trade 판매목표 수립 Portion 연결 시스템 수정 요청 CSR
2016.07.15 CHM-201642546 Allocation = QTA Adjustment 화면 Office Add 버튼 추가
]]></desc>
			<sql><![CDATA[
#if (${methodname} == 'searchYearList')

/* Year 콤보의 목록을 가져온다 */
  SELECT T_YEAR - CPY_NO CODE
        ,T_YEAR - CPY_NO NAME
    FROM (
           SELECT 2013 AS F_YEAR
                 ,TO_CHAR(SYSDATE, 'YYYY') + 1 AS T_YEAR
             FROM DUAL
         ) Y
        ,COM_CPY_NO C
   WHERE C.CPY_NO <= T_YEAR - F_YEAR
ORDER BY C.CPY_NO

#elseif (${methodname} == 'searchQuarterList')

/* Quarter 콤보의 목록을 가져온다 */
  SELECT INTG_CD_VAL_CTNT    AS CODE
        ,INTG_CD_VAL_DP_DESC AS NAME
    FROM COM_INTG_CD_DTL
   WHERE INTG_CD_ID        = 'CD01365'
     AND INTG_CD_VAL_CTNT <> '00'
ORDER BY INTG_CD_VAL_DP_SEQ

#elseif (${methodname} == 'searchOfficeViewList')

/* Office View 콤보의 목록을 가져온다 */
  SELECT INTG_CD_VAL_CTNT    AS CODE
        ,INTG_CD_VAL_DP_DESC AS NAME
    FROM COM_INTG_CD_DTL
   WHERE INTG_CD_ID        = 'CD00940'
     AND INTG_CD_VAL_DESC <> 'ALL'
ORDER BY INTG_CD_VAL_DP_SEQ

#elseif (${methodname} == 'searchMdmTradeList')

/* Trade 콤보의 목록을 가져온다 */
  SELECT TRD_CD CODE
        ,TRD_CD NAME
    FROM MDM_TRADE
   WHERE VSL_TP_CD = 'C'
     AND DELT_FLG  = 'N'
     AND TRD_CD   <> 'COM'
ORDER BY TRD_CD

#elseif (${methodname} == 'searchSubTradeList')

/* Sub Trade 콤보의 목록을 가져온다 */
  SELECT DISTINCT 
         SUB_TRD_CD CODE
        ,SUB_TRD_CD NAME
    FROM MAS_LANE_RGST
   WHERE DELT_FLG = 'N'
#if (${f_trd_cd} != ''  && ${f_trd_cd} != 'All')
     AND TRD_CD   = @[f_trd_cd]
#end
ORDER BY SUB_TRD_CD

#elseif (${methodname} == 'searchRhqList')

/* RHQ 콤보의 목록을 가져온다 */
  SELECT DISTINCT
         N2ND_PRNT_OFC_CD AS CODE
        ,N2ND_PRNT_OFC_CD AS NAME
    FROM SQM_ORGANIZATION_V
   WHERE N2ND_PRNT_OFC_CD IS NOT NULL
     AND DELT_FLG = 'N'
ORDER BY N2ND_PRNT_OFC_CD

#elseif (${methodname} == 'searchOfcList')

/* Office 콤보의 목록을 가져온다 */
--MDM과 SQM_QTA_OFC UNION 해서 가져옴
SELECT DISTINCT
     N4TH_PRNT_OFC_CD AS CODE
    ,N4TH_PRNT_OFC_CD AS NAME
FROM SQM_ORGANIZATION_V
WHERE N4TH_PRNT_OFC_CD IS NOT NULL
#if (${f_rhq_cd} != '' && ${f_rhq_cd} != 'All')
 AND N2ND_PRNT_OFC_CD = @[f_rhq_cd]
#end
AND DELT_FLG = 'N'
UNION
SELECT DISTINCT
   RGN_OFC_CD AS CODE
  ,RGN_OFC_CD AS NAME
FROM SQM_QTA_OFC 
WHERE 1=1
#if (${f_rhq_cd} != '' && ${f_rhq_cd} != 'All')
AND RHQ_CD = @[f_rhq_cd]
#end
AND DELT_FLG = 'N'


#elseif (${methodname} == 'searchHoTeamsList')

/* H/O Teams 목록을 조회한다 */
  SELECT DISTINCT
         TEAM_CD AS CODE
        ,TEAM_CD AS NAME
    FROM SQM_DAT_RLT
#if (${rhq} == 'Org')
UNION ALL
/* RHQ 콤보의 목록을 가져온다 */
  SELECT DISTINCT
         N2ND_PRNT_OFC_CD AS CODE
        ,N2ND_PRNT_OFC_CD AS NAME
    FROM SQM_ORGANIZATION_V
   WHERE N2ND_PRNT_OFC_CD IS NOT NULL
     AND DELT_FLG = 'N'
#end

#elseif (${methodname} == 'searchCPeriodList')

/* Create Period 기간을 가져온다 */
SELECT MIN_YRWK || '~' || MAX_YRWK AS CODE
      ,SUBSTR(MIN_YRWK, 1, 4) || '.wk' || SUBSTR(MIN_YRWK, 5, 2) || ' ~ ' || SUBSTR(MAX_YRWK, 1, 4) || '.wk' || SUBSTR(MAX_YRWK, 5, 2) AS NAME
  FROM (
         SELECT /*+ index_desc(mas_wk_prd XPKMAS_WK_PRD) */
                MIN(COST_YR||COST_WK) AS MIN_YRWK
               ,MAX(COST_YR||COST_WK) AS MAX_YRWK
           FROM MAS_WK_PRD
          WHERE COST_YR||COST_WK <= @[f_year_wk]
            AND ROWNUM           <= @[f_dur]
       )

#elseif (${methodname} == 'searchNextQtaList')

/* 현재 주차를 포함한 분기의 다음 분기를 가져온다 */
SELECT DECODE(QTA, 1, COST_YR + 1, COST_YR) || '-' || QTA || 'Q' AS CODE
      ,DECODE(QTA, 1, COST_YR + 1, COST_YR) || '-' || QTA || 'Q' AS NAME
  FROM (
         SELECT COST_YR
               ,CASE WHEN COST_WK <= 13 THEN 2
                     WHEN COST_WK <= 26 THEN 3
                     WHEN COST_WK <= 39 THEN 4
                     WHEN COST_WK <= 53 THEN 1
                 END QTA
           FROM MAS_WK_PRD
          WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SLS_FM_DT AND SLS_TO_DT
       )

#elseif (${methodname} == 'rhqForPlan')

/* RHQ 목록을 조회한다 */
  SELECT DISTINCT
         RHQ_CD AS CODE
        ,RHQ_CD AS NAME
    FROM SQM_QTA_OFC 
   WHERE DELT_FLG = 'N'
ORDER BY RHQ_CD

#elseif (${methodname} == 'officeForPlan')

/* OFC 목록을 조회한다 */
  SELECT DISTINCT
         RGN_OFC_CD AS CODE
        ,RGN_OFC_CD AS NAME
    FROM SQM_QTA_OFC 
   WHERE RHQ_CD = (SELECT CASE WHEN @[rhq_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN RHQ_CD
                                                                                                                            ELSE DECODE(@[rhq_cd], 'SELCMI', RHQ_CD, @[rhq_cd])
                           END TEAM_CD
                      FROM DUAL)
     AND DELT_FLG = 'N'
ORDER BY RGN_OFC_CD

#elseif (${methodname} == 'searchGroupCustomer')

/* Group Customer 목록을 조회한다 */
	SELECT DISTINCT
       	   CUST_GRP_ID CODE
          ,CUST_GRP_NM NAME
	  FROM MDM_CUST_PERF_GRP
	 WHERE DELT_FLG = 'N'
#if (${f_acc_grp_cd} != ''  && ${f_acc_grp_cd} == 'C')
	   AND NEW_KEY_ACCT_FLG = 'Y' --> CORE
#end
#if (${f_acc_grp_cd} != ''  && ${f_acc_grp_cd} == 'R')
	   AND RGN_ACCT_FLG ='Y'     --> REGION
#end
  ORDER BY CUST_GRP_ID

#elseif (${methodname} == 'searchVvdList')

/* VVD 콤보의 목록을 가져온다 */
  SELECT DISTINCT
         VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS CODE
        ,VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS NAME
    FROM SQM_CFM_TGT_VVD
   WHERE BSE_TP_CD  = 'Q'
     AND BSE_YR     = @[f_bse_yr]
     AND BSE_QTR_CD = @[f_bse_qtr_cd]
     AND QTA_TGT_CD = @[f_qta_tgt_cd]
     AND TRD_CD     = @[f_trd_cd]
     AND DIR_CD     = @[f_dir_cd]
     AND SUB_TRD_CD = @[f_sub_trd_cd]
     AND RLANE_CD   = @[f_rlane_cd]
ORDER BY CODE

#elseif (${methodname} == 'searchSpclVvdList')

/* VVD 콤보의 목록을 가져온다 */
  SELECT DISTINCT
         VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS CODE
        ,VSL_CD || SKD_VOY_NO || SKD_DIR_CD AS NAME
    FROM SQM_SPCL_TGT_VVD
   WHERE BSE_TP_CD  = 'Q'
     AND BSE_YR     = @[f_bse_yr]
     AND BSE_QTR_CD = @[f_bse_qtr_cd]
     AND TRD_CD     = @[f_trd_cd]
     AND DIR_CD     = @[f_dir_cd]
     AND SUB_TRD_CD = @[f_sub_trd_cd]
     AND RLANE_CD   = @[f_rlane_cd]
ORDER BY CODE

#elseif (${methodname} == 'searchAdjLaneList')

/* Adjustment 화면에서 사용하는 Lane 콤보의 목록을 가져온다 */
  SELECT DISTINCT
         RLANE_CD AS CODE
        ,RLANE_CD AS NAME
    FROM SQM_QTA_RLSE_VER A
        ,SQM_CFM_TGT_VVD  B
   WHERE A.QTA_RLSE_VER_NO = B.QTA_RLSE_VER_NO
     AND A.BSE_TP_CD       = @[f_bse_tp_cd]
     AND A.BSE_YR          = @[f_bse_yr]
     AND A.BSE_QTR_CD      = @[f_bse_qtr_cd]
     AND A.SQM_VER_STS_CD  = 'R'
     AND B.QTA_TGT_CD      = 'D'
     AND B.TRD_CD          = @[f_trd_cd]
     AND A.BSE_TP_CD       = B.BSE_TP_CD
     AND A.BSE_YR          = B.BSE_YR
     AND A.BSE_QTR_CD      = B.BSE_QTR_CD
ORDER BY RLANE_CD

#elseif (${methodname} == 'searchSpclAdjLaneList')

/* Spcl Adjustment 화면에서 사용하는 Lane 콤보의 목록을 가져온다 */
  SELECT DISTINCT
         RLANE_CD AS CODE
        ,RLANE_CD AS NAME
    FROM SQM_SPCL_TGT_VVD
   WHERE BSE_TP_CD  = @[f_bse_tp_cd]
     AND BSE_YR     = @[f_bse_yr]
     AND BSE_QTR_CD = DECODE(@[f_bse_qtr_cd], 'All', BSE_QTR_CD, @[f_bse_qtr_cd])
     AND TRD_CD     = @[f_trd_cd]
ORDER BY RLANE_CD

#elseif (${methodname} == 'searchMdmRLaneList')

SELECT DISTINCT
       RLANE_CD AS CODE
      ,RLANE_CD AS NAME
  FROM MDM_DTL_REV_LANE
 WHERE 1=1
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
   AND TRD_CD     = @[f_trd_cd]
#end
#if (${f_sub_trd_cd} != '' && ${f_sub_trd_cd} != 'All')
   AND SUB_TRD_CD = @[f_sub_trd_cd]
#end
   AND DELT_FLG   = 'N'
 ORDER BY SUBSTR(RLANE_CD,-2), RLANE_CD

#elseif (${methodname} == 'searchRLaneList')

/* Lane Master 상의 RLane 콤보의 목록을 가져온다 */
SELECT DISTINCT
       A1.RLANE_CD AS CODE
      ,A1.RLANE_CD AS NAME
  FROM SQM_QTA_LANE_MGMT A1
#if (${f_ias_rgn_cd} != '' && ${f_ias_rgn_cd} != 'All')
      ,MAS_LANE_RGST A2
#end
WHERE 1=1
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
   AND A1.TRD_CD      = @[f_trd_cd]
#end
#if (${f_sub_trd_cd} != '' && ${f_sub_trd_cd} != 'All')
   AND A1.SUB_TRD_CD  = @[f_sub_trd_cd]
#end
#if (${f_ias_rgn_cd} != '' && ${f_ias_rgn_cd} != 'All')
   AND A1.TRD_CD      = A2.TRD_CD
   AND A1.RLANE_CD    = A2.RLANE_CD
   AND A2.IAS_RGN_CD  = @[f_ias_rgn_cd]
#end
   AND A1.SQM_ACT_FLG = 'Y'
ORDER BY A1.RLANE_CD

#elseif (${methodname} == 'searchCurrentQtaList')

/* 현재 주차의 분기를 가져온다 */
SELECT COST_YR || '-' || QTA || 'Q' AS CODE
      ,COST_YR || '-' || QTA || 'Q' AS NAME
  FROM (
         SELECT COST_YR
               ,CASE WHEN COST_WK <= 13 THEN 1
                     WHEN COST_WK <= 26 THEN 2
                     WHEN COST_WK <= 39 THEN 3
                     WHEN COST_WK <= 53 THEN 4
                 END QTA
           FROM MAS_WK_PRD
          WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SLS_FM_DT AND SLS_TO_DT
       )

#elseif (${methodname} == 'searchSubTradeSectorList')

/* Sub Trade Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       SUB_TRD_CD CODE
      ,SUB_TRD_CD NAME
  FROM SQM_QTA_LANE_MGMT
 WHERE 1=1
   AND SQM_ACT_FLG = 'Y'
   AND IAS_SCTR_FLG IS NOT NULL
ORDER BY SUB_TRD_CD

#elseif (${methodname} == 'searchPolCdSectorList')

/* R/Lane에 따른 POL Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POL_CD CODE
      ,POL_CD NAME
#if (${tb_nm} == 'sqm_sctr_pair_mgmt')
FROM SQM_SCTR_PAIR_MGMT
#elseif (${tb_nm} == 'sqm_sctr_lane_ofc')
FROM SQM_SCTR_LANE_OFC
#end
WHERE 1=1
AND SQM_ACT_FLG = 'Y'
AND RLANE_CD = @[f_rlane_cd]
ORDER BY POL_CD

#elseif (${methodname} == 'searchPodCdSectorList')

/* R/Lane에 따른 POD Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POD_CD CODE
      ,POD_CD NAME
#if (${tb_nm} == 'sqm_sctr_pair_mgmt')
FROM SQM_SCTR_PAIR_MGMT
#elseif (${tb_nm} == 'sqm_sctr_lane_ofc')
FROM SQM_SCTR_LANE_OFC
#end
WHERE 1=1
AND SQM_ACT_FLG = 'Y'
AND RLANE_CD = @[f_rlane_cd]
ORDER BY POD_CD

#elseif (${methodname} == 'searchPolCdSectorMultiList')

/* Multi R/Lane에 따른 POL Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POL_CD CODE
      ,POL_CD NAME
FROM SQM_SCTR_PAIR_MGMT
WHERE 1=1
#if (${f_act_flag} != 'N')
AND SQM_ACT_FLG = 'Y'
#end
AND RLANE_CD IN ( ${f_rlane_cd} )
ORDER BY POL_CD

#elseif (${methodname} == 'searchPodCdSectorMultiList')

/* Multi R/Lane에 따른 POD Sector 콤보의 목록을 가져온다 */
SELECT DISTINCT 
       POD_CD CODE
      ,POD_CD NAME
FROM SQM_SCTR_PAIR_MGMT
WHERE 1=1
#if (${f_act_flag} != 'N')
AND SQM_ACT_FLG = 'Y'
#end
AND RLANE_CD IN ( ${f_rlane_cd} )
ORDER BY POD_CD

#elseif (${methodname} == 'searchTradeList')

-- OverAll의 Trade 정보를 조회한다.(SQM_QTA_LANE_MGMT 테이블에서 Sector Sale 정보를 제외하고 조회)
-- Sector Trade 제외되는 로직 삭제
SELECT DISTINCT
       TRD_CD CODE
      ,TRD_CD NAME
  FROM SQM_QTA_LANE_MGMT
 WHERE 1=1
   AND SQM_ACT_FLG  = 'Y'
 ORDER BY TRD_CD

#elseif (${methodname} == 'searchPfGroupList')

-- PF Group List 콤보의 목록을 가져온다.
SELECT DISTINCT 
       RLANE_CD||'|'||PF_GRP_CD NAME
      ,PF_GRP_CD CODE
#if (${tb_nm} == 'sqm_sctr_pair_mgmt')
FROM SQM_SCTR_PAIR_MGMT
#elseif (${tb_nm} == 'sqm_sctr_lane_ofc')
FROM SQM_SCTR_LANE_OFC
#elseif (${tb_nm} == 'sqm_sctr_pf_grp')
FROM SQM_SCTR_PF_GRP
#end
WHERE 1=1
AND RLANE_CD IN (${f_rlane_cd})
ORDER BY NAME, CODE 


#elseif (${methodname} == 'searchLaneRHQList')
 SELECT DISTINCT RHQ_CD CODE
      , RHQ_CD NAME
   FROM SQM_QTA_LANE_OFC
  WHERE BSE_TP_CD   = 'Q'
    AND OFC_VW_CD   = 'L'
    AND SQM_ACT_FLG = 'Y'
    AND BSE_YR      = @[f_bse_yr]
    AND BSE_QTR_CD  = @[f_bse_qtr_cd]
    AND TRD_CD      = @[f_trd_cd]
    AND RLANE_CD    = @[f_rlane_cd]
ORDER BY RHQ_CD

#elseif (${methodname} == 'searchLaneOfficeList')
 SELECT DISTINCT RGN_OFC_CD CODE
      , RGN_OFC_CD NAME
   FROM SQM_QTA_LANE_OFC
  WHERE BSE_TP_CD   = 'Q'
    AND OFC_VW_CD   = 'L'
    AND SQM_ACT_FLG = 'Y'
    AND BSE_YR      = @[f_bse_yr]
    AND BSE_QTR_CD  = @[f_bse_qtr_cd]
    AND TRD_CD      = @[f_trd_cd]
    AND RLANE_CD    = @[f_rlane_cd]
    AND RHQ_CD      = @[f_rhq_cd]
ORDER BY RGN_OFC_CD

#end			]]></sql>
			<params>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
				<param name="f_year_wk" type="12" value="" out="N"/>
				<param name="f_dur" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="f_qta_tgt_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_sub_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_ias_rgn_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
