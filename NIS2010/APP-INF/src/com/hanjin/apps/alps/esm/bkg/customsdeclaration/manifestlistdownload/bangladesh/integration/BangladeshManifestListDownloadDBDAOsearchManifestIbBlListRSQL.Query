<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BangladeshManifestListDownloadDBDAOsearchManifestIbBlListRSQL">
			<desc><![CDATA[방글라데시 Manifest Inbound B/L List
searchManifestIbBlList]]></desc>
			<sql><![CDATA[
SELECT DECODE(LENGTH(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO)),'1',
       DECODE(BK.DEL_CD,'BDCGP','SML'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00')),
                        'BDDAC','SMLICD'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00'))),
                                                                                                              '2',
       DECODE(BK.DEL_CD,'BDCGP','SML'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00')),
                        'BDDAC','SMLICD'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'000'))),
                                                                                                              '3',
       DECODE(BK.DEL_CD,'BDCGP','SML'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'0000')),
                        'BDDAC','RSLICD'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'0000'))),
                                                                                                              '4',
       DECODE(BK.DEL_CD,'BDCGP','SML'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00')),
                        'BDDAC','SMLICD'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00'))),
       DECODE(BK.DEL_CD,'BDCGP','SML'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00')),
                        'BDDAC','SMLICD'||TRIM(TO_CHAR(DENSE_RANK() OVER (PARTITION BY  BK.DEL_CD ORDER BY BK.BL_NO),'00')))) LINE_NO,
       'SMLM'||BK.BL_NO BL_NO,
       NVL(CNTR.PCK_QTY,0) QTY,
       TRIM(DECODE(CNTR.PCK_TP_CD,'PK','PKG','CT','CTN',NULL,' ', PK.PCK_NM)) DESCRIPTION, 
       TRIM(REPLACE(REPLACE(SUBSTR(REPLACE(REPLACE(REPLACE(NVL(BL_MARK.MK_DESC,''),CHR(13)||CHR(10),' '),'',' '),CHR(9),''),1,700),CHR(34),''),' ',' ')) MARKS,
       TRIM(REPLACE(REPLACE(SUBSTR(REPLACE(REPLACE(REPLACE(NVL(DES.CSTMS_DESC,''),CHR(13)||CHR(10),' '),'',' '),CHR(9),''),1,200),CHR(34),''),' ',' ')) GOODS_DESC,
       '' GOODS_DATE,
       '' CONS_LICE,
       REPLACE(SUBSTR(REPLACE(REPLACE(REPLACE(NVL(C.CUST_NM,' '),CHR(13)||CHR(10),' '),'',' '),CHR(9),' '),1,150)||SUBSTR(REPLACE(REPLACE(REPLACE(NVL(C.CUST_ADDR,' '),CHR(13)||CHR(10),' '),'',' '),CHR(9),' '),1,100),' ',' ') CONS_NM,
       '' NOTY_LICE,
       REPLACE(SUBSTR(REPLACE(REPLACE(REPLACE(NVL(N.CUST_NM,' '),CHR(13)||CHR(10),' '),'',' '),CHR(9),' '),1,150)||SUBSTR(REPLACE(REPLACE(REPLACE(NVL(N.CUST_ADDR,' '),CHR(13)||CHR(10),' '),'',' '),CHR(9),' '),1,100),' ',' ') NOTY_NM,
       TRIM(TO_CHAR(NVL(CNTR.CNTR_WGT,0),'999999999.99'))||' '||CNTR.WGT_UT_CD BL_GROSS_WGT,
       '' BL_NET_WGT,
       NVL(CNTR.CNTR_NO,'') CNTR_NO,
       NVL(SEAL.CNTR_SEAL_NO,'') SEAL,
       DECODE(SUBSTR(CNTR.CNTR_TPSZ_CD,2,1),'2','20','4','40','5','40','7','45','8','48','9','48',' ') CNTR_SIZE, 
       DECODE(SUBSTR(CNTR.CNTR_TPSZ_CD,1,1),'D','DRY','F','FLAT','O','OPEN','P','PLATFORM','R','REEFER','T','TANK','Z','OTHER','Q','DEAD','S','SLIDING','A','ADJUST',' ') CNTR_TYPE, 
       DECODE(SUBSTR(CNTR.CNTR_TPSZ_CD,2,1),'2','8.6','4','8.6','5','9.6','9','8.6',' ') HEIGHT,
       TRIM(to_char(NVL(CNTR.CNTR_WGT,'0'), '99999999.99')) CNTR_GROSS_WGT, 
       ( SELECT DECODE(NVL(S.TARE_WGT, 0), 0
              ,     DECODE(NVL(MDM.CNTR_TPSZ_TARE_WGT, 0), 0
              ,         DECODE(M.CNTR_TPSZ_CD, 'T2', 3600, 'T4', 5200, 0) 
              ,            MDM.CNTR_TPSZ_TARE_WGT)
              ,         S.TARE_WGT  ) TARE_WGT
           FROM MST_CONTAINER M, MST_CNTR_SPEC S, MDM_CNTR_TP_SZ MDM
          WHERE M.CNTR_NO           =   CNTR.CNTR_NO
            AND M.CNTR_SPEC_NO      =   S.CNTR_SPEC_NO(+)
            AND M.CNTR_TPSZ_CD      =   MDM.CNTR_TPSZ_CD ) CNTR_TARE_WGT,
       'FCL' STATUS,
       '' IMCO,
       '' UN,
       '' VAT,
       '' CMDT_CD,
       '' OFF_DOCK,
       'N' PERISH_CD,
       '' REMARKS,
	   BK.BL_NO ORG_BL_NO,
       CNTR.CNTR_TPSZ_CD CNTR_TZ,
       BK.POL_CD POL_CD,
       BK.POD_CD POD_CD,
       TRIM(to_char(NVL(CNTR.CNTR_WGT,'0'), '99999999.99')) CNTR_WGT,
       CNTR.WGT_UT_CD CNTR_UT_CD,
       NVL(BK.BKG_CGO_TP_CD,'F') BKG_CGO_TP_CD,
       VSL.VSL_ENG_NM VSL_NM,
	   DECODE(SUBSTR(VVD.SKD_VOY_NO,1,2), '00', SUBSTR(VVD.SKD_VOY_NO,2,3), VVD.SKD_VOY_NO) VOY_NO,
       'A' TEMP,
	   @[vvd] VVD,
	   '' AS CRE_USR_ID,
	   '' AS UPD_USR_ID,
		(
			SELECT CNTR_TPSZ_ISO_CD
	 		FROM MDM_CNTR_TP_SZ
			WHERE CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD
		) CNTR_TPSZ_ISO_CD


FROM  BKG_BOOKING BK, BKG_CONTAINER CNTR, BKG_BL_DOC DES,
      BKG_CUSTOMER C, BKG_CUSTOMER N, BKG_VVD VVD, 
      BKG_BL_MK_DESC BL_MARK, MDM_VSL_CNTR VSL, MDM_PCK_TP PK 
      ,
      (
        SELECT BKG_NO, CNTR_NO, SUBSTR(MAX(SYS_CONNECT_BY_PATH (CNTR_SEAL_NO,',')),2) AS CNTR_SEAL_NO
        FROM  (
            SELECT  SEAL.BKG_NO, SEAL.CNTR_NO, SEAL.CNTR_SEAL_NO, SEAL.CNTR_SEAL_SEQ RNUM
            FROM    BKG_VVD VVD, BKG_CONTAINER CNTR, BKG_CNTR_SEAL_NO SEAL
            WHERE   1=1
            AND     VVD.VSL_CD      = SUBSTR(@[vvd],1,4)
            AND     VVD.SKD_VOY_NO	= SUBSTR(@[vvd],5,4)
            AND     VVD.SKD_DIR_CD	= SUBSTR(@[vvd],9,1)
            AND     VVD.POD_CD    	= @[pod_code]
		#if (${pod_yd} != '') 
			AND     SUBSTR(VVD.POD_YD_CD,6,2) 	like @[pod_yd]||'%'
		#end
		#if (${pol_code} != '') 
           	AND     VVD.POL_CD      			like @[pol_code]||'%'
		#end
		#if (${pol_yd} != '') 
			AND     SUBSTR(VVD.POL_YD_CD,6,2) 	like @[pol_yd]||'%'
		#end
            AND     VVD.BKG_NO    = CNTR.BKG_NO 
            AND     CNTR.BKG_NO   = SEAL.BKG_NO
            AND     CNTR.CNTR_NO  = SEAL.CNTR_NO
        )
        GROUP BY BKG_NO, CNTR_NO
        START WITH RNUM = 1
        CONNECT BY PRIOR RNUM = RNUM - 1 AND PRIOR CNTR_NO = CNTR_NO
      )SEAL
WHERE 1=1 
AND  VVD.BKG_NO 	  = BK.BKG_NO 
AND  BK.BKG_NO 		  = CNTR.BKG_NO 
AND  CNTR.BKG_NO 	  = SEAL.BKG_NO(+)
AND  CNTR.CNTR_NO 	  = SEAL.CNTR_NO(+)
AND  BK.BKG_NO 		  = DES.BKG_NO(+) 
AND  BK.BKG_NO 		  = C.BKG_NO 
AND  BK.BKG_NO 		  = N.BKG_NO 
AND  BK.BKG_NO 		  = BL_MARK.BKG_NO(+) 
AND  VVD.VSL_CD 	  = VSL.VSL_CD 
AND  C.BKG_CUST_TP_CD ='C' 
AND  N.BKG_CUST_TP_CD ='N' 
AND  CNTR.PCK_TP_CD   = PK.PCK_CD(+) 
AND  BK.BKG_STS_CD NOT IN ( 'X','S' )  
AND  VVD.VSL_CD       = SUBSTR(@[vvd],1,4)
AND  VVD.SKD_VOY_NO   = SUBSTR(@[vvd],5,4)
AND  VVD.SKD_DIR_CD   = SUBSTR(@[vvd],9,1)
AND  VVD.POD_CD 	  = @[pod_code]
#if (${pod_yd} != '') 
	AND SUBSTR(VVD.POD_YD_CD,6,2) like @[pod_yd]||'%'
#end
#if (${pol_code} != '') 
    AND VVD.POL_CD      		  like @[pol_code]||'%'
#end
#if (${pol_yd} != '') 
	AND SUBSTR(VVD.POL_YD_CD,6,2) like @[pol_yd]||'%'
#end
#if (${bl_no} != '') 
	AND BK.BL_NO				  like @[bl_no]||'%'
#end
#if (${bkg_cgo_tp_code} != 'A') 
	AND  DECODE(BK.BKG_CGO_TP_CD,'P','P','F') = @[bkg_cgo_tp_code]
#end
ORDER BY LINE_NO, BL_NO, CNTR_NO			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pod_code" type="12" value="" out="N"/>
				<param name="pod_yd" type="12" value="" out="N"/>
				<param name="pol_code" type="12" value="" out="N"/>
				<param name="pol_yd" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="bkg_cgo_tp_code" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
