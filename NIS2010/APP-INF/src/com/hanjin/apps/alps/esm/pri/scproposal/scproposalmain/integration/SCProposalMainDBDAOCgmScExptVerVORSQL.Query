<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCProposalMainDBDAOCgmScExptVerVORSQL">
			<desc><![CDATA[* 2013.10.21 전윤주 [CHM-201327107] 최초 생성
- 기존 DEM/DET 승인 정보 조회쿼리를 그대로 사용하여 만듬
- 미승인 CHSS Exception 존재할 경우 해당하는 General Rate, Special Rate, Special Note의  Scope 별 bullet 정보를 조회한다.]]></desc>
			<sql><![CDATA[
WITH GRP AS(
        SELECT  A.CNT
               ,A.SVC_SCP_CD
               ,A.NOTE_TP_CD
               ,A.BLET_DP_SEQ
               ,ROW_NUMBER() OVER(ORDER BY B.CRE_DT, A.NOTE_TP_CD, A.SVC_SCP_CD DESC) AS RN
          FROM  (
                SELECT  COUNT(1) AS CNT
                       ,A.SVC_SCP_CD
                       ,A.GEN_SPCL_RT_TP_CD AS NOTE_TP_CD
                       ,B.BLET_DP_SEQ
                  FROM  PRI_SP_SCP_RT_CNOTE A
                       ,PRI_SP_SCP_RT_CMDT_HDR B
                 WHERE  A.PROP_NO = @[prop_no]
                   AND  A.AMDT_SEQ = @[amdt_seq]
                   AND  A.NOTE_CLSS_CD = 'C'-- Class가 CHSS 인 경우
                   AND  A.SRC_INFO_CD <> 'AD'
                   AND  A.PROP_NO = B.PROP_NO
                   AND  A.AMDT_SEQ = B.AMDT_SEQ
                   AND  A.SVC_SCP_CD = B.SVC_SCP_CD
                   AND  A.GEN_SPCL_RT_TP_CD = B.GEN_SPCL_RT_TP_CD
                   AND  A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ
                GROUP BY A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, B.BLET_DP_SEQ
                UNION
                SELECT  COUNT(1)
                       ,A.SVC_SCP_CD
                       ,A.GEN_SPCL_RT_TP_CD
                       ,B.BLET_DP_SEQ
                  FROM  PRI_SP_SCP_RT_CMDT_RNOTE A
                       ,PRI_SP_SCP_RT_CMDT_HDR B
                 WHERE  A.PROP_NO = @[prop_no]
                   AND  A.AMDT_SEQ = @[amdt_seq]
                   AND  A.NOTE_CLSS_CD = 'C'-- Class가 CHSS 인 경우
                   AND  A.SRC_INFO_CD <> 'AD'
                   AND  A.PROP_NO = B.PROP_NO
                   AND  A.AMDT_SEQ = B.AMDT_SEQ
                   AND  A.SVC_SCP_CD = B.SVC_SCP_CD
                   AND  A.GEN_SPCL_RT_TP_CD = B.GEN_SPCL_RT_TP_CD
                   AND  A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ
                GROUP BY A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, B.BLET_DP_SEQ  
                UNION ALL
                SELECT  COUNT( * )
                       ,SVC_SCP_CD
                       ,NOTE_TP_CD
                       ,NOTE_SEQ
                  FROM  PRI_SP_SCP_NOTE A
                 WHERE  PROP_NO = @[prop_no]
                   AND  AMDT_SEQ = @[amdt_seq]
                   AND  NOTE_TP_CD = 'P' -- Special Rate 이면 
                   AND  NOTE_CLSS_CD = 'C' -- Class가 CHSS 인 경우
                   AND  EXISTS (SELECT  1 FROM PRI_SP_SCP_NOTE_CTNT 
                                 WHERE  A.PROP_NO    = PROP_NO 
                                   AND  A.AMDT_SEQ   = AMDT_SEQ 
                                   AND  A.SVC_SCP_CD = SVC_SCP_CD
                                   AND  A.NOTE_TP_CD = NOTE_TP_CD 
                                   AND  A.NOTE_SEQ   = NOTE_SEQ
                                   AND  SRC_INFO_CD  <> 'AD')
                GROUP BY SVC_SCP_CD, NOTE_TP_CD, NOTE_SEQ              
                ) A
               ,PRI_SP_SCP_MN B
         WHERE  1 = 1
           AND  B.PROP_NO = @[prop_no]
           AND  B.AMDT_SEQ = @[amdt_seq]
           AND  A.SVC_SCP_CD = B.SVC_SCP_CD
)
, GRP2 AS (
SELECT  A.CNT
       ,A.NOTE_TP_CD
       ,A.BULLET_NO
       ,ROW_NUMBER() OVER(ORDER BY B.CRE_DT, A.NOTE_TP_CD, A.SVC_SCP_CD DESC) AS RN
  FROM  (
        SELECT  SUM(CNT) AS CNT
               ,SVC_SCP_CD
               ,NOTE_TP_CD
               ,BULLET_NO
          FROM  (
                SELECT  CNT
                       ,SVC_SCP_CD
                       ,NOTE_TP_CD
                       ,DECODE(NOTE_TP_CD, 'P', '', '          ' ||SVC_SCP_CD|| ' - ') || 
                        DECODE(NOTE_TP_CD, 'P', PRI_UTILS_PKG. JOIN_ROWS_VAR_FUNC(CURSOR(SELECT  SVC_SCP_CD
                                                                                           FROM  GRP A
                                                                                          WHERE  1 = 1
                                                                                            AND  A.NOTE_TP_CD = B.NOTE_TP_CD
                                                                                         ORDER BY A.RN
                                                                                        ),', ')
                                              , PRI_UTILS_PKG. JOIN_ROWS_VAR_FUNC(CURSOR(SELECT  BLET_DP_SEQ||''
                                                                                           FROM  GRP A
                                                                                          WHERE  1 = 1
                                                                                            AND  A.SVC_SCP_CD = B.SVC_SCP_CD
                                                                                            AND  A.NOTE_TP_CD = B.NOTE_TP_CD 
                                                                                        ),', ')) AS BULLET_NO 
                                                                                                              
                  FROM  GRP B
                )
        GROUP BY SVC_SCP_CD, NOTE_TP_CD, BULLET_NO
        ) A
       ,PRI_SP_SCP_MN B
 WHERE  1 = 1
   AND  B.PROP_NO = @[prop_no]
   AND  B.AMDT_SEQ = @[amdt_seq]
   AND  A.SVC_SCP_CD = B.SVC_SCP_CD
)
,GRP3 AS (
        SELECT  SUM(CNT) AS CNT
               ,DECODE(NOTE_TP_CD, 'G', 1, 'S', 2, 'P', 3) CODE
               ,DECODE(NOTE_TP_CD, 'G', '1|       * General Rate|',
                                   'S', '2|       * Special Rate|',
                                   'P', '3|       * Scope : ') || BULLET_NO AS TEXT
          FROM  (
                SELECT  CNT
                       ,NOTE_TP_CD
                       ,DECODE(NOTE_TP_CD, 'P', BULLET_NO, PRI_UTILS_PKG. JOIN_ROWS_VAR_FUNC(CURSOR(SELECT  BULLET_NO
                                                                                                      FROM  GRP2 A
                                                                                                     WHERE  1 = 1
                                                                                                       AND  A.NOTE_TP_CD = B.NOTE_TP_CD
                                                                                                    ORDER BY RN
                                                                                                   ),'|')) AS BULLET_NO
                  FROM  GRP2 B
                )
        GROUP BY NOTE_TP_CD, BULLET_NO
)
SELECT  CASE NCNT WHEN 1
                  THEN CASE ACNT WHEN 0
                                 THEN 0
                       ELSE 1
                       END
        ELSE 1
        END ETC1
       ,TEXT ETC2
  FROM  (
        SELECT  MAX(DECODE(TYPE, 'N', CNT)) AS NCNT
               ,MAX(DECODE(TYPE, 'A', CNT)) AS ACNT
               ,MAX(TEXT) TEXT
          FROM  (
                SELECT  SIGN(SUM(CNT)) CNT
                       ,'N' AS TYPE
                       ,MAX(DECODE(CODE, 1, DECODE(SIGN(CNT), 1, TEXT))) || '/' ||
                        MAX(DECODE(CODE, 2, DECODE(SIGN(CNT), 1, TEXT))) || '/' ||
                        MAX(DECODE(CODE, 3, DECODE(SIGN(CNT), 1, TEXT))) AS TEXT
                  FROM  GRP3
                UNION ALL
                SELECT  SIGN(COUNT( * )) CNT, 'A' , ''
                  FROM  CGM_SC_EXPT_VER
                 WHERE  PROP_NO = @[prop_no]
                   AND  SC_EXPT_VER_SEQ = (SELECT  /*+ INDEX_DESC(A XPKCGM_SC_EXPT_VER) */
                                                   SC_EXPT_VER_SEQ
                                             FROM  CGM_SC_EXPT_VER A
                                            WHERE  PROP_NO = @[prop_no]
                                              AND  ROWNUM = 1)
                   AND  DELT_FLG = 'N'               
                   AND  CHSS_EXPT_VER_STS_CD IN ('A','L')
                )
        )			]]></sql>
			<params>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="amdt_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
