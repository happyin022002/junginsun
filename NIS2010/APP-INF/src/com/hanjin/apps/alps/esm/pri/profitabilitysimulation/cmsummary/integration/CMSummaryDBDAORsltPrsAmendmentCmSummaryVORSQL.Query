<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CMSummaryDBDAORsltPrsAmendmentCmSummaryVORSQL">
			<desc><![CDATA[2015.06.26 CHM-201536492 Split05-주간 MAS Open에 따른 타모듈 프로그램 적용 요청]]></desc>
			<sql><![CDATA[
WITH 
VW_TRD_SCP AS (
	SELECT 'TPS' AS TRD_CD , 'E' AS DIR_CD, 'ACE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TPS' AS TRD_CD , 'E' AS DIR_CD, 'MXE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TPS' AS TRD_CD , 'E' AS DIR_CD, 'TPE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TPS' AS TRD_CD , 'W' AS DIR_CD, 'ACW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TPS' AS TRD_CD , 'W' AS DIR_CD, 'MXW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TPS' AS TRD_CD , 'W' AS DIR_CD, 'TPW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'AES' AS TRD_CD , 'E' AS DIR_CD, 'AEE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'AES' AS TRD_CD , 'E' AS DIR_CD, 'AWN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'AES' AS TRD_CD , 'E' AS DIR_CD, 'EMS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'AES' AS TRD_CD , 'W' AS DIR_CD, 'AEW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'AES' AS TRD_CD , 'W' AS DIR_CD, 'AWS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'AES' AS TRD_CD , 'W' AS DIR_CD, 'EMN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'E' AS DIR_CD, 'AFE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'E' AS DIR_CD, 'BRE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'E' AS DIR_CD, 'FSE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'E' AS DIR_CD, 'IAA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'E' AS DIR_CD, 'SAW' AS SCP_CD FROM DUAL
	UNION ALL

	SELECT 'IAS' AS TRD_CD , 'W' AS DIR_CD, 'AFW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'W' AS DIR_CD, 'BRW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'W' AS DIR_CD, 'FSW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'W' AS DIR_CD, 'IAA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IAS' AS TRD_CD , 'W' AS DIR_CD, 'SAE' AS SCP_CD FROM DUAL
	UNION ALL


	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'ASE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'CAE' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'EAN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'FMS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'MME' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'MWS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'E' AS DIR_CD, 'TAE' AS SCP_CD FROM DUAL
	UNION ALL


	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'ASW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'CAW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'EAS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'FMN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'MMW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'MWN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'TAS' AS TRD_CD , 'W' AS DIR_CD, 'TAW' AS SCP_CD FROM DUAL
	UNION ALL

	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'CAS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'CCS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'CLN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'ICA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'INA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'ISA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'E' AS DIR_CD, 'SAN' AS SCP_CD FROM DUAL
	UNION ALL

	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'CAW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'CCW' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'CLS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'ICA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'INA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'ISA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IMS' AS TRD_CD , 'W' AS DIR_CD, 'SAS' AS SCP_CD FROM DUAL
	UNION ALL


	SELECT 'IES' AS TRD_CD , 'E' AS DIR_CD, 'EWN' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IES' AS TRD_CD , 'E' AS DIR_CD, 'IAA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IES' AS TRD_CD , 'E' AS DIR_CD, 'IET' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IES' AS TRD_CD , 'W' AS DIR_CD, 'EWS' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IES' AS TRD_CD , 'W' AS DIR_CD, 'IAA' AS SCP_CD FROM DUAL
	UNION ALL
	SELECT 'IES' AS TRD_CD , 'W' AS DIR_CD, 'IET' AS SCP_CD FROM DUAL
	 	
	 	
)
,VW_CONTRACT_DT_LIST AS  (
	SELECT /*+ MATERIALIZE */ COST_YR || SUBSTR(SLS_TO_DT, 5, 2) AS COST_YRMON, COST_WK
	FROM MAS_WK_PRD
	WHERE (COST_YR  || COST_WK) >= (@[frm_ctrt_eff_yr] || @[frm_ctrt_eff_wk])  AND (COST_YR || COST_WK )<= (@[frm_ctrt_exp_yr] || @[frm_ctrt_exp_wk])
)
,VW_SUMMARY_WEEK AS ( 
	SELECT /*+ MATERIALIZE */ SLS_FM_YRWK, SLS_FM_DT, SLS_TO_YRWK, SLS_TO_DT, WK_TP
		,( SELECT COUNT(*) FROM MAS_WK_PRD PRD	WHERE (    PRD.COST_YR || PRD.COST_WK >= MN.SLS_FM_YRWK	AND PRD.COST_YR || PRD.COST_WK <= MN.SLS_TO_YRWK ) ) + DECODE(WK_TP, 1, 1, 0) AS TOT_WK -- ESTIMATE 조회시 현재주차도 미래주차에 포함시킨다.
	FROM (
		SELECT   MIN(COST_YR || COST_WK) AS SLS_FM_YRWK, MIN(SLS_FM_DT) AS SLS_FM_DT ,MAX(COST_YR || COST_WK) AS SLS_TO_YRWK, MAX(SLS_TO_DT) AS SLS_TO_DT, WK_TP
		FROM (
			SELECT COST_YR, COST_WK, SLS_FM_DT, SLS_TO_DT
			      ,CASE
				   WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') <= SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= SLS_FM_DT 
					THEN 0
				   WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > SLS_TO_DT 
					THEN -1
					ELSE 1
			       END AS WK_TP
			FROM MAS_WK_PRD
			WHERE (COST_YR || COST_WK) >= (@[frm_smr_eff_yr] || @[frm_smr_eff_wk]) AND COST_YR || COST_WK <= (@[frm_smr_exp_yr] || @[frm_smr_exp_wk]))	
	      GROUP BY WK_TP
	) MN
)

,VW_RFA_KEY_LIST AS
(
	SELECT /*+ MATERIALIZE LEADING(HDR SMRY @V0 SR_CST_DTL) USE_NL(HDR SMRY SR_CST_DTL) */ 
	     HDR.RFA_NO, HDR.PROP_NO, HDR.AMDT_SEQ, SR_CST_DTL.PRS_YRMON, SR_CST_DTL.PRS_WK
	    ,SR_CST_DTL.PRC_CTRT_TP_CD, SR_CST_DTL.PRC_CTRT_NO, SR_CST_DTL.SVC_SCP_CD
	    ,SR_CST_DTL.VSL_SLAN_DIR_CD, SR_CST_DTL.TRD_CD, SR_CST_DTL.SUB_TRD_CD
	    ,SR_CST_DTL.RLANE_CD, SR_CST_DTL.PRC_CGO_TP_CD, SR_CST_DTL.ORG_LOC_TP_CD
	    ,SR_CST_DTL.ORG_LOC_DEF_CD, SR_CST_DTL.DEST_LOC_TP_CD, SR_CST_DTL.DEST_LOC_DEF_CD
	    ,SR_CST_DTL.TEU_FRT_REV, SR_CST_DTL.PRS_RESPB_CM_UC_AMT, SR_CST_DTL.PRS_PFIT_CM_UC_AMT
	    ,SR_CST_DTL.PRS_RESPB_OPFIT_UC_AMT, SR_CST_DTL.PRS_CRNT_LOD_QTY
	    ,SR_CST_DTL.PRS_RESPB_CMPB_AMT, SR_CST_DTL.PRS_PFIT_CMPB_AMT
	    ,SR_CST_DTL.PRS_RESPB_OPB_AMT
	    , SMRY.PROP_APRO_OFC_CD
	    , SMRY.PRS_CUST_TP_CD
	FROM 
	     (
		SELECT /*+ ORDERED USE_HASH(DUR DUR) INDEX_FFS(DUR XAK1PRI_RP_DUR) CACHE(DUR) CACHE(HDR) */
		       HDR.RFA_NO, DUR.PROP_NO, DUR.AMDT_SEQ, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT
		       ,ROW_NUMBER() OVER (PARTITION BY HDR.RFA_NO, DUR.PROP_NO ORDER BY DUR.AMDT_SEQ DESC) RN 
		FROM PRI_RP_DUR DUR, PRI_RP_HDR HDR
		WHERE HDR.RFA_NO IS NOT NULL
		   AND HDR.PROP_NO  = DUR.PROP_NO
		   AND DUR.CTRT_EFF_DT >= TO_DATE(@[c_sls_fm_dt],'YYYYMMDD')
		   AND DUR.CTRT_EXP_DT < TO_DATE(@[c_sls_to_dt],'YYYYMMDD') + 1         
	     ) HDR
	    , PRI_PRS_CTRT_SMRY SMRY
	    , PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL
	WHERE HDR.RN = 1
		AND HDR.RFA_NO = SMRY.PRC_CTRT_NO
		AND SMRY.PRC_CTRT_TP_CD = 'R'
		AND (SMRY.PRS_YRMON, SMRY.PRS_WK) IN(SELECT /*+ QB_NAME(V0) */ COST_YRMON, COST_WK FROM VW_CONTRACT_DT_LIST WHERE COST_YRMON IS NOT NULL AND COST_WK IS NOT NULL)
		AND SMRY.PRS_YRMON = SR_CST_DTL.PRS_YRMON
		AND SMRY.PRS_WK = SR_CST_DTL.PRS_WK
		AND SMRY.PRC_CTRT_TP_CD = SR_CST_DTL.PRC_CTRT_TP_CD
		AND SMRY.PRC_CTRT_NO = SR_CST_DTL.PRC_CTRT_NO
		AND HDR.RFA_NO IS NOT NULL

		AND SR_CST_DTL.TRD_CD = @[frm_trd_cd]
		AND SR_CST_DTL.VSL_SLAN_DIR_CD = @[frm_dir_cd]
		#if(${frm_sub_trd_cd} != '')
			AND SR_CST_DTL.SUB_TRD_CD = @[frm_sub_trd_cd]
		#end
		#if(${frm_rlane_cd} != '')
			AND SR_CST_DTL.RLANE_CD IN (
			#foreach( ${key} in ${rlane_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						 '$key' 
				FROM DUAL
			#end
			)
			 
		#end
			 
		#if(${frm_customer_type} == 'B')
					AND SMRY.PRS_CUST_TP_CD IN ('I','A','O')
		#elseif(${frm_customer_type} == 'N')
					AND SMRY.PRS_CUST_TP_CD IN ('N')
		#else 
				AND SMRY.PRS_CUST_TP_CD IN ('I','A','O','N')
		#end

		#if(${frm_prop_ofc_cd} != '')
					AND SMRY.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST
		#end

		#if(${frm_prop_srep_cd} != '')
					AND SMRY.RESPB_SREP_CD = @[frm_prop_srep_cd]
		#end

		#if(${frm_prop_apro_ofc_cd} != '')
					AND SMRY.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
		#end

		#if( $cust_list.size() != 0 ) 
			AND (SMRY.CUST_CNT_CD , SMRY.CUST_SEQ) IN (
			#foreach( ${key} in ${cust_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						substr('$key',1,2),substr('$key',3)
				FROM DUAL
			#end
			)
		#end 

		#if(${frm_contract_type_r} == 'R'  )
			AND 1=1
		#else
			AND 1=0
		#end


)
,VW_RFA_PROP_KEY AS (
	SELECT   /*+ MATERIALIZE */ DUR.PROP_NO, MAX(DUR.AMDT_SEQ) AS AMDT_SEQ
	FROM PRI_RP_DUR DUR
	WHERE CTRT_EFF_DT >= TO_DATE(@[c_sls_fm_dt],'YYYYMMDD')
		AND CTRT_EXP_DT < TO_DATE(@[c_sls_to_dt],'YYYYMMDD') + 1
	GROUP BY DUR.PROP_NO
)
,VW_RFA_OTHERS_KEY_LIST AS (
	SELECT /*+ MATERIALIZE ORDERED USE_HASH(PKEY HDR MN) */   HDR.RFA_NO , PKEY.PROP_NO, PKEY.AMDT_SEQ
	FROM VW_RFA_PROP_KEY PKEY
		, PRI_RP_MN MN
		, PRI_RP_HDR HDR
	WHERE HDR.PROP_NO = MN.PROP_NO
		AND  PKEY.PROP_NO = MN.PROP_NO
		AND PKEY.AMDT_SEQ = MN.AMDT_SEQ
		AND EXISTS (	SELECT 'F'
			FROM PRI_RP_SCP_RT_CMDT_HDR RT_HDR 
			WHERE  MN.PROP_NO = RT_HDR.PROP_NO
			AND MN.AMDT_SEQ = RT_HDR.AMDT_SEQ
			AND RT_HDR.SVC_SCP_CD IN (SELECT SCP_CD FROM VW_TRD_SCP WHERE TRD_CD = @[frm_trd_cd] AND DIR_CD = @[frm_dir_cd] )
			AND ROWNUM = 1
		)
		AND NOT EXISTS (
			SELECT 'F'
			FROM VW_RFA_KEY_LIST KLIST 
			WHERE  MN.PROP_NO = KLIST.PROP_NO
			AND MN.AMDT_SEQ = KLIST.AMDT_SEQ
			AND ROWNUM = 1
		)
		AND HDR.RFA_NO IS NOT NULL
		#if(${frm_customer_type} == 'B')
			AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O')
		#elseif(${frm_customer_type} == 'N')
			AND MN.PRC_CTRT_CUST_TP_CD IN ('N')
		#else 
			AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
		#end

		#if(${frm_prop_ofc_cd} != '')
			AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST
		#end

		#if(${frm_prop_srep_cd} != '')
			AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]
		#end

		#if(${frm_prop_apro_ofc_cd} != '')
			AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
		#end

		#if( $cust_list.size() != 0 ) 
			AND (MN.CTRT_CUST_CNT_CD , MN.CTRT_CUST_SEQ) IN (
			#foreach( ${key} in ${cust_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						substr('$key',1,2),substr('$key',3)
				FROM DUAL
			#end
			)
		#end 
		#if(${frm_contract_type_r} == 'R'  )
			AND 1=1
		#else
			AND 1=0
		#end
)
,VW_RFA_CONTRACT_KEY AS
(
	SELECT /*+ MATERIALIZE */ DISTINCT RFA_NO, PROP_NO, AMDT_SEQ
	FROM VW_RFA_KEY_LIST
)
,VW_RFA_TOT_WEEK_PER_RFA_NO AS
(
	SELECT /*+ MATERIALIZE USE_HASH(PRD) */ PROP_NO, AMDT_SEQ, RFA_NO, ACTUAL_WK_CNT
	    ,DECODE(ESTIMATE_WK_CNT, 1, 0, ESTIMATE_WK_CNT) AS ESTIMATE_WK_CNT, REFER_WK_CNT
	FROM (
			SELECT   KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.RFA_NO
				,SUM(
					CASE
						WHEN   TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT  AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT
						THEN 0
						WHEN   TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT  AND PRD.SLS_TO_DT >= @[s_sls_fm_dt] 
						THEN 1
						ELSE 0
					END
				  ) AS ACTUAL_WK_CNT
				,SUM(
					CASE
						WHEN   TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT 
						THEN 1
						WHEN TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT 
						THEN 0
						WHEN PRD.SLS_TO_DT <= @[s_sls_to_dt] 
						THEN 1
						ELSE 0
					END
				) AS ESTIMATE_WK_CNT
				,SUM(
					CASE
						WHEN   TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT 
						THEN 0
						WHEN   TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT AND PRD.SLS_FM_DT >= @[r_sls_fm_dt] AND PRD.SLS_FM_DT <= @[r_sls_to_dt] 
						THEN 1
						ELSE 0
					END
				 ) AS REFER_WK_CNT
		 FROM PRI_RP_DUR DUR, VW_RFA_CONTRACT_KEY KLIST, MAS_WK_PRD PRD
		 WHERE DUR.PROP_NO = KLIST.PROP_NO
			   AND DUR.AMDT_SEQ = KLIST.AMDT_SEQ
			   AND (	(    TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT
					    AND TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT
					   )
					OR (    TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT
					    AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT
					   )
					OR (    TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_FM_DT
					    AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_TO_DT
					   )
			       )
				 AND PRD.COST_YR||COST_WK BETWEEN (@[frm_ctrt_eff_yr] || @[frm_ctrt_eff_wk]) AND (@[frm_ctrt_exp_yr] || @[frm_ctrt_exp_wk])
				#if(${frm_contract_type_r} == 'R'  )
					AND 1=1
				#else
					AND 1=0
				#end
	      GROUP BY KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.RFA_NO
	)
)
,VW_RFA_ACTUAL_VALUE AS (
	SELECT   /*+ MATERIALIZE */ CKEY.RFA_NO, CKEY.PRC_CTRT_NO
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
	      ,SUM(CKEY.PRS_RESPB_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
	      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_TRADE
	      ,SUM(CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0, SUM(CKEY.PRS_RESPB_CMPB_AMT * CKEY.PRS_CRNT_LOD_QTY  ) / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS CMPB_OFFICE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0, SUM(CKEY.PRS_PFIT_CMPB_AMT * CKEY.PRS_CRNT_LOD_QTY ) / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS CMPB_TRADE
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0,  SUM(CKEY.PRS_RESPB_OPB_AMT * CKEY.PRS_CRNT_LOD_QTY ) / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS OPB
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
	      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
	      ,MAX(WK_PER_SC.ACTUAL_WK_CNT) AS WEEK_CNT
	FROM VW_RFA_KEY_LIST CKEY
		, VW_SUMMARY_WEEK WK
		, VW_RFA_TOT_WEEK_PER_RFA_NO WK_PER_SC
	WHERE CKEY.RFA_NO = WK_PER_SC.RFA_NO
		AND WK.WK_TP = -1
		AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= WK.SLS_FM_YRWK AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= WK.SLS_TO_YRWK
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
		#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
		#end

		#if(  ${frm_contract_type_r} == 'R' )
			AND 1=1
		#else
			AND 1=0
		#end
	GROUP BY CKEY.RFA_NO, CKEY.PRC_CTRT_NO
)
,VW_RFA_EST_ACT_1ST_VALUE AS (
	SELECT /*+ MATERIALIZE */
		PRC_CTRT_NO
		, LOAD
		, COST_CM_OFFICE
		, COST_CM_TRADE
		, COST_OP_OFFICE
		, CM_OFFICE
		, CM_TRADE
		, OP
		, G_REV
		, WEEK_CNT
		, TOT_WK
		, CM_OFFICE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_OFFICE
		, CM_TRADE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_TRADE
		, OP / DECODE(LOAD, 0, 1, LOAD) AS OPB_OFFICE
	FROM (
		SELECT MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD
		    , MN.COST_CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_OFFICE
		    , MN.COST_CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_TRADE
		    , MN.COST_OP_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_OP_OFFICE
		    , MN.CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS CM_OFFICE
		    , MN.CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS CM_TRADE
		    , MN.OP / MN.WEEK_CNT * MN.TOT_WK AS OP
		    , MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV
		    , MN.WEEK_CNT
		    , MN.TOT_WK
		FROM (
			SELECT   CKEY.PRC_CTRT_NO
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY/ DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
			      ,SUM(  CKEY.PRS_RESPB_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
			      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_TRADE
			      ,SUM(  CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
			      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
			      ,MAX(WK_PER_SC.REFER_WK_CNT) AS WEEK_CNT
			      ,MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK
			  FROM VW_RFA_KEY_LIST CKEY 
			      ,VW_RFA_TOT_WEEK_PER_RFA_NO WK_PER_SC
			 WHERE (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= @[r_fm_yrwk]  AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= @[r_to_yrwk]
			   AND CKEY.RFA_NO = WK_PER_SC.RFA_NO
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
		#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
		#end
				#if(  ${frm_contract_type_r} == 'R' )
					AND 1=1
				#else
					AND 1=0
				#end
			GROUP BY CKEY.PRC_CTRT_NO
		  ) MN
		  WHERE MN.WEEK_CNT > 0
	)
)
,VW_RFA_EST_ACT_2ND_VALUE AS (
	SELECT /*+ MATERIALIZE */ 
		RFA_NO
		, PRC_CTRT_NO
		, LOAD
		, COST_CM_OFFICE
		, COST_CM_TRADE, COST_OP_OFFICE, CM_OFFICE
		, CM_TRADE
		, OP
		, G_REV
		, WEEK_CNT
		, TOT_WK
		, CM_OFFICE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_OFFICE
		, CM_TRADE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_TRADE
		, OP / DECODE(LOAD, 0, 1, LOAD) AS OPB_OFFICE
	FROM (
		SELECT MN.RFA_NO, MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD
			, MN.COST_CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_OFFICE
			, MN.COST_CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_TRADE
			, MN.COST_OP_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_OP_OFFICE
			, MN.CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS CM_OFFICE
			, MN.CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS CM_TRADE
			, MN.OP / MN.WEEK_CNT * MN.TOT_WK AS OP
			, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV
			, MN.WEEK_CNT
			, MN.TOT_WK
		FROM (	
			SELECT   /*+ ORDERED SWAP_JOIN_INPUTS(@V1) USE_HASH(CKEY WK_PER_SC) */
			       CKEY.RFA_NO, CKEY.PRC_CTRT_NO
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY
				   / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
			      ,SUM(  CKEY.PRS_RESPB_CM_UC_AMT
				   * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
			      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY)
										   AS COST_CM_TRADE
			      ,SUM(  CKEY.PRS_RESPB_OPFIT_UC_AMT
				   * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
			      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
			      ,MAX(WK_PER_SC.ACTUAL_WK_CNT + WK_PER_SC.ESTIMATE_WK_CNT) AS WEEK_CNT
			      ,MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK
			  FROM VW_RFA_KEY_LIST CKEY
				, VW_RFA_TOT_WEEK_PER_RFA_NO WK_PER_SC
			 WHERE NOT EXISTS(SELECT /*+ QB_NAME(V1) */ 'F'
					    FROM VW_RFA_EST_ACT_1ST_VALUE V1
					   WHERE V1.PRC_CTRT_NO = CKEY.PRC_CTRT_NO)
				AND CKEY.RFA_NO = WK_PER_SC.RFA_NO
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
		#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
		#end
				#if(  ${frm_contract_type_r} == 'R' )
					AND 1=1
				#else
					AND 1=0
				#end
			GROUP BY CKEY.RFA_NO, CKEY.PRC_CTRT_NO
		) MN
		WHERE WEEK_CNT > 0
	)
)
,VW_RFA_EST_ACT_3RD_VALUE AS
(
	SELECT /*+ MATERIALIZE */ 
		MN.RFA_NO
		, PROP_NO
		, AMDT_SEQ
		, (LOAD) AS LOAD
		, (CM_OFFICE) AS CM_OFFICE
		, (CM_TRADE) AS CM_TRADE
		, (OP) AS OP
		, DECODE(LOAD,0, 0, (CM_OFFICE) /(LOAD)) AS CMPB_OFFICE
		, DECODE(LOAD, 0, 0,(CM_TRADE) /(LOAD)) AS CMPB_TRADE
		, DECODE(LOAD, 0, 0,(OP) /(LOAD)) AS OPB_OFFICE
	FROM (
		SELECT   CKEY.RFA_NO
			, CKEY.PROP_NO
			, CKEY.AMDT_SEQ
			,SUM(CMDT_ROUT.PRS_ESTM_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
			,SUM(
				CASE
					WHEN   SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 2, 1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 1, 1) = '2'
						THEN   CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT
					ELSE  CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT / 2
				END
			) AS CM_OFFICE
			,SUM(
				CASE
					WHEN   SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 2, 1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 1, 1) = '2'
						THEN   CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT
					ELSE CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT / 2
				END
			) AS CM_TRADE
			,SUM(
				CASE
					WHEN   SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 2, 1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 1, 1) = '2'
						THEN   CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT
					ELSE CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT / 2
				END
			) AS OP
		FROM PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT
			, VW_RFA_OTHERS_KEY_LIST CKEY
#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM  VW_RFA_OTHERS_KEY_LIST MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM  VW_RFA_OTHERS_KEY_LIST MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
		WHERE CMDT_ROUT.PROP_NO = CKEY.PROP_NO
			AND CMDT_ROUT.AMDT_SEQ = 0
#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end

		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
				AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
#end
				#if(  ${frm_contract_type_r} == 'R' )
					AND 1=1
				#else
					AND 1=0
				#end
		GROUP BY CKEY.RFA_NO, CKEY.PROP_NO, CKEY.AMDT_SEQ
	) MN
)
,VW_TRI_PROP_KEY AS (
	SELECT  /*+ MATERIALIZE */ PRC_CTRT_CUST_TP_CD, CTRT_CUST_SEQ,  CTRT_CUST_CNT_CD, TAA_PROP_NO ,   AMDT_SEQ  
	FROM (
		SELECT   PRC_CTRT_CUST_TP_CD,CTRT_CUST_SEQ,  CTRT_CUST_CNT_CD, MN.TAA_PROP_NO ,   AMDT_SEQ ,
		       RANK() OVER( PARTITION BY TAA_PROP_NO ORDER BY TAA_PROP_NO,AMDT_SEQ) RN
		FROM PRI_TAA_MN MN
		 WHERE EFF_DT >= TO_DATE(@[c_sls_fm_dt],'YYYYMMDD')
		   AND EXP_DT < TO_DATE(@[c_sls_to_dt],'YYYYMMDD') + 1
)
WHERE RN = 1     

)
,VW_TRI_KEY_LIST AS (
	SELECT /*+ MATERIALIZE ORDERED USE_NL(HDR SMRY @V0 SR_CST_DTL)*/
		HDR.TAA_NO, PKEY.TAA_PROP_NO, PKEY.AMDT_SEQ, SR_CST_DTL.PRS_YRMON, SR_CST_DTL.PRS_WK
		,SR_CST_DTL.PRC_CTRT_TP_CD, SR_CST_DTL.PRC_CTRT_NO, SR_CST_DTL.SVC_SCP_CD
		,SR_CST_DTL.VSL_SLAN_DIR_CD, SR_CST_DTL.TRD_CD, SR_CST_DTL.SUB_TRD_CD
		,SR_CST_DTL.RLANE_CD, SR_CST_DTL.PRC_CGO_TP_CD, SR_CST_DTL.ORG_LOC_TP_CD
		,SR_CST_DTL.ORG_LOC_DEF_CD, SR_CST_DTL.DEST_LOC_TP_CD, SR_CST_DTL.DEST_LOC_DEF_CD
		,SR_CST_DTL.TEU_FRT_REV, SR_CST_DTL.PRS_RESPB_CM_UC_AMT, SR_CST_DTL.PRS_PFIT_CM_UC_AMT
		,SR_CST_DTL.PRS_RESPB_OPFIT_UC_AMT, SR_CST_DTL.PRS_CRNT_LOD_QTY
		,SR_CST_DTL.PRS_RESPB_CMPB_AMT, SR_CST_DTL.PRS_PFIT_CMPB_AMT
		,SR_CST_DTL.PRS_RESPB_OPB_AMT
	FROM VW_TRI_PROP_KEY PKEY
		, PRI_TAA_HDR HDR
		, PRI_PRS_CTRT_SMRY SMRY
		, PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL
	WHERE HDR.TAA_PROP_NO = PKEY.TAA_PROP_NO
		AND HDR.TAA_NO = SMRY.PRC_CTRT_NO
		AND SMRY.PRC_CTRT_TP_CD = 'T'
		AND (SMRY.PRS_YRMON, SMRY.PRS_WK) IN(SELECT /*+ QB_NAME(V0) */ COST_YRMON, COST_WK FROM VW_CONTRACT_DT_LIST WHERE COST_YRMON IS NOT NULL AND COST_WK IS NOT NULL)
		AND SMRY.PRS_YRMON = SR_CST_DTL.PRS_YRMON
		AND SMRY.PRS_WK = SR_CST_DTL.PRS_WK
		AND SMRY.PRC_CTRT_TP_CD = SR_CST_DTL.PRC_CTRT_TP_CD
		AND SMRY.PRC_CTRT_NO = SR_CST_DTL.PRC_CTRT_NO
		AND HDR.TAA_NO IS NOT NULL
		AND SR_CST_DTL.TRD_CD = @[frm_trd_cd]
		AND SR_CST_DTL.VSL_SLAN_DIR_CD = @[frm_dir_cd]
		#if(${frm_sub_trd_cd} != '')
			AND SR_CST_DTL.SUB_TRD_CD = @[frm_sub_trd_cd]
		#end
		#if(${frm_rlane_cd} != '')
			AND SR_CST_DTL.RLANE_CD IN (
			#foreach( ${key} in ${rlane_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						 '$key' 
				FROM DUAL
			#end
			)
			 
		#end
			 
		#if(${frm_customer_type} == 'B')
					AND SMRY.PRS_CUST_TP_CD IN ('I','A','O')
		#elseif(${frm_customer_type} == 'N')
					AND SMRY.PRS_CUST_TP_CD IN ('N')
		#else 
				AND SMRY.PRS_CUST_TP_CD IN ('I','A','O','N')
		#end

		#if( $cust_list.size() != 0 ) 
			AND (SMRY.CUST_CNT_CD , SMRY.CUST_SEQ) IN (
			#foreach( ${key} in ${cust_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						substr('$key',1,2),substr('$key',3)
				FROM DUAL
			#end
			)
		#end 


		#if(${frm_prop_ofc_cd} != '')
					AND SMRY.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST
		#end

		#if(${frm_prop_srep_cd} != '')
					AND SMRY.RESPB_SREP_CD = @[frm_prop_srep_cd]
		#end


		#if( $cust_list.size() != 0 ) 
			AND (SMRY.CUST_CNT_CD , SMRY.CUST_SEQ) IN (
			#foreach( ${key} in ${cust_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						substr('$key',1,2),substr('$key',3)
				FROM DUAL
			#end
			)
		#end 

		#if(${frm_contract_type_t} == 'T'  )
			AND 1=1
		#else
			AND 1=0
		#end

)
,VW_TRI_OTHERS_KEY_LIST AS (
	SELECT /*+ MATERIALIZE */ HDR.TAA_NO, PKEY.TAA_PROP_NO, PKEY.AMDT_SEQ
	FROM PRI_TAA_HDR HDR
		, VW_TRI_PROP_KEY PKEY
	WHERE PKEY.TAA_PROP_NO = HDR.TAA_PROP_NO
	 AND NOT EXISTS(
		 SELECT 'F'
		   FROM VW_TRI_KEY_LIST KLIST
		  WHERE PKEY.TAA_PROP_NO = KLIST.TAA_PROP_NO
		    AND PKEY.AMDT_SEQ = KLIST.AMDT_SEQ
		    AND ROWNUM = 1)
	 AND HDR.TAA_NO IS NOT NULL
	#if( $cust_list.size() != 0 ) 
		AND ( CTRT_CUST_CNT_CD,CTRT_CUST_SEQ) IN (
		#foreach( ${key} in ${cust_list}) 
			#if($velocityCount != 1 ) 
				UNION ALL
			#end
			SELECT 
					substr('$key',1,2),substr('$key',3)
			FROM DUAL
		#end
		)
	#end 
	#if(${frm_customer_type} == 'B')
				AND PRC_CTRT_CUST_TP_CD IN ('I','A','O')
	#elseif(${frm_customer_type} == 'N')
				AND PRC_CTRT_CUST_TP_CD IN ('N')
	#else 
			AND PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
	#end
	
	#if(${frm_contract_type_t} == 'T'  )
		AND 1=1
	#else
		AND 1=0
	#end

 
 
 )
,VW_TRI_CONTRACT_KEY AS (
	SELECT /*+ MATERIALIZE */ DISTINCT TAA_NO, TAA_PROP_NO, AMDT_SEQ
		 FROM VW_TRI_KEY_LIST
)
,VW_TRI_TOT_WEEK_PER_TAA_NO AS (
	SELECT /*+ MATERIALIZE */ TAA_PROP_NO, AMDT_SEQ, TAA_NO, ACTUAL_WK_CNT
		,DECODE(ESTIMATE_WK_CNT, 1, 0, ESTIMATE_WK_CNT) AS ESTIMATE_WK_CNT, REFER_WK_CNT
	FROM (
		SELECT   KLIST.TAA_PROP_NO, KLIST.AMDT_SEQ, KLIST.TAA_NO
			,SUM(
				CASE
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT
					THEN 0
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT AND PRD.SLS_TO_DT >= @[s_sls_fm_dt] 
					THEN 1
					ELSE 0
				END
			) AS ACTUAL_WK_CNT
		      ,SUM(CASE
			       WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT
				    AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT THEN 1
			       WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT THEN 0
			       --WHEN     PRD.SLS_TO_DT <= SDT.SLS_TO_DT THEN 1
			       WHEN     PRD.SLS_TO_DT <= @[s_sls_to_dt] THEN 1
			       ELSE 0
			   END) AS ESTIMATE_WK_CNT
		      ,SUM(CASE
			       WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT
				    AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT THEN 0
			       WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT
				   --AND PRD.SLS_FM_DT >= RDT.SLS_FM_DT
				   --AND PRD.SLS_FM_DT <= RDT.SLS_TO_DT THEN 1
				   AND PRD.SLS_FM_DT >= @[r_sls_fm_dt]
				   AND PRD.SLS_FM_DT <= @[r_sls_to_dt] THEN 1
			       ELSE 0
			   END) AS REFER_WK_CNT
		  FROM PRI_TAA_MN DUR, VW_TRI_CONTRACT_KEY KLIST, MAS_WK_PRD PRD
	--                      , VW_SUMMARY_DT SDT
	--                      , VW_REFERENCE_DT RDT
		 WHERE DUR.TAA_PROP_NO = KLIST.TAA_PROP_NO
		   AND DUR.AMDT_SEQ = KLIST.AMDT_SEQ
		   AND (   (    TO_CHAR(DUR.EFF_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT
			    AND TO_CHAR(DUR.EFF_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT
			   )
			OR (    TO_CHAR(DUR.EXP_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT
			    AND TO_CHAR(DUR.EXP_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT
			   )
			OR (    TO_CHAR(DUR.EFF_DT, 'YYYYMMDD') <= PRD.SLS_FM_DT
			    AND TO_CHAR(DUR.EXP_DT, 'YYYYMMDD') >= PRD.SLS_TO_DT
			   )
		       )
			AND PRD.COST_YR||COST_WK BETWEEN (@[frm_ctrt_eff_yr] || @[frm_ctrt_eff_wk]) AND (@[frm_ctrt_exp_yr] || @[frm_ctrt_exp_wk])
		#if(${frm_contract_type_t} == 'T'  )
			AND 1=1
		#else
			AND 1=0
		#end
	      GROUP BY KLIST.TAA_PROP_NO, KLIST.AMDT_SEQ, KLIST.TAA_NO))
,VW_TRI_ACTUAL_VALUE AS (
	SELECT   /*+ MATERIALIZE */ CKEY.TAA_NO, CKEY.PRC_CTRT_NO
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
	      ,SUM(CKEY.PRS_RESPB_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
	      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_TRADE
	      ,SUM(CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0, SUM(CKEY.PRS_RESPB_CMPB_AMT * CKEY.PRS_CRNT_LOD_QTY ) / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS CMPB_OFFICE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0, SUM(CKEY.PRS_PFIT_CMPB_AMT * CKEY.PRS_CRNT_LOD_QTY )  / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS CMPB_TRADE
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0, SUM(CKEY.PRS_RESPB_OPB_AMT * CKEY.PRS_CRNT_LOD_QTY ) / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS OPB
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
	      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
	      ,MAX(WK_PER_SC.ACTUAL_WK_CNT) AS WEEK_CNT
	 FROM VW_TRI_KEY_LIST CKEY, VW_SUMMARY_WEEK WK, VW_TRI_TOT_WEEK_PER_TAA_NO WK_PER_SC
	 WHERE CKEY.TAA_NO = WK_PER_SC.TAA_NO
		 AND WK.WK_TP = -1
		 AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= WK.SLS_FM_YRWK
		 AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= WK.SLS_TO_YRWK
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
		#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
		#end
		#if(${frm_contract_type_t} == 'T'  )
			AND 1=1
		#else
			AND 1=0
		#end
	GROUP BY CKEY.TAA_NO, CKEY.PRC_CTRT_NO
)
,VW_TRI_EST_ACT_1ST_VALUE AS (
	SELECT /*+ MATERIALIZE */ PRC_CTRT_NO, LOAD, COST_CM_OFFICE, COST_CM_TRADE, COST_OP_OFFICE, CM_OFFICE, CM_TRADE
	    ,OP, G_REV, WEEK_CNT, TOT_WK, CM_OFFICE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_OFFICE
	    , CM_TRADE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_TRADE
	    , OP / DECODE(LOAD, 0, 1, LOAD) AS OPB_OFFICE
	FROM (
		SELECT MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD
			, MN.COST_CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_OFFICE
			, MN.COST_CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_TRADE
			, MN.COST_OP_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_OP_OFFICE
			, MN.CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS CM_OFFICE
			, MN.CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS CM_TRADE
			, MN.OP / MN.WEEK_CNT * MN.TOT_WK AS OP
			, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV, MN.WEEK_CNT, MN.TOT_WK
		FROM (
			SELECT   CKEY.PRC_CTRT_NO
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY  / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
			      ,SUM(  CKEY.PRS_RESPB_CM_UC_AMT  * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
			      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_TRADE
			      ,SUM(  CKEY.PRS_RESPB_OPFIT_UC_AMT  * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
			      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
			      ,MAX(WK_PER_SC.REFER_WK_CNT) AS WEEK_CNT
			      ,MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK
			 FROM VW_TRI_KEY_LIST CKEY 
			      ,VW_TRI_TOT_WEEK_PER_TAA_NO WK_PER_SC
			 WHERE (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= @[r_fm_yrwk]
				 AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= @[r_to_yrwk]
				 AND CKEY.TAA_NO = WK_PER_SC.TAA_NO
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
#end
				#if(  ${frm_contract_type_t} == 'T' )
					AND 1=1
				#else
					AND 1=0
				#end
		      GROUP BY CKEY.PRC_CTRT_NO
		) MN
		WHERE MN.WEEK_CNT > 0
	)
)
,VW_TRI_EST_ACT_2ND_VALUE AS
(
	SELECT /*+ MATERIALIZE */ TAA_NO, PRC_CTRT_NO, LOAD, COST_CM_OFFICE, COST_CM_TRADE, COST_OP_OFFICE, CM_OFFICE
		,CM_TRADE, OP, G_REV, WEEK_CNT, TOT_WK
		, CM_OFFICE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_OFFICE
		, CM_TRADE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_TRADE
		, OP / DECODE(LOAD, 0, 1, LOAD) AS OPB_OFFICE
	FROM (
		SELECT MN.TAA_NO, MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD
			, MN.COST_CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_OFFICE
			, MN.COST_CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_TRADE
			, MN.COST_OP_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_OP_OFFICE
			, MN.CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS CM_OFFICE
			, MN.CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS CM_TRADE
			, MN.OP / MN.WEEK_CNT * MN.TOT_WK AS OP
			, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV, MN.WEEK_CNT, MN.TOT_WK
		FROM (
			SELECT   /*+ ORDERED SWAP_JOIN_INPUTS(@V1) USE_HASH(CKEY WK_PER_SC) */
				CKEY.TAA_NO, CKEY.PRC_CTRT_NO
				,SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
				,SUM(  CKEY.PRS_RESPB_CM_UC_AMT	* CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
				,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY)	AS COST_CM_TRADE
				,SUM(  CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
				,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
				,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
				,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
				,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
				,MAX(WK_PER_SC.ACTUAL_WK_CNT + WK_PER_SC.ESTIMATE_WK_CNT) AS WEEK_CNT
				,MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK
			FROM VW_TRI_KEY_LIST CKEY, VW_TRI_TOT_WEEK_PER_TAA_NO WK_PER_SC
			WHERE NOT EXISTS(
						SELECT /*+ QB_NAME(V1) */ 'F'
						FROM VW_TRI_EST_ACT_1ST_VALUE V1
						WHERE V1.PRC_CTRT_NO = CKEY.PRC_CTRT_NO
				)
				AND CKEY.TAA_NO = WK_PER_SC.TAA_NO
				AND 1 = 1
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
#end
			GROUP BY CKEY.TAA_NO, CKEY.PRC_CTRT_NO) MN
	       WHERE WEEK_CNT > 0)
)
,VW_PROP_KEY AS (
	SELECT   /*+ MATERIALIZE */ DUR.PROP_NO, MAX(DUR.AMDT_SEQ) AS AMDT_SEQ
	FROM PRI_SP_DUR DUR 
	WHERE CTRT_EFF_DT >= TO_DATE(@[c_sls_fm_dt],'YYYYMMDD')
		AND CTRT_EXP_DT < TO_DATE(@[c_sls_to_dt],'YYYYMMDD') + 1
		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
	GROUP BY DUR.PROP_NO
)
,VW_KEY_LIST AS (
	SELECT /*+ MATERIALIZE LEADING(PKEY HDR SMRY @V0 SR_CST_DTL) USE_NL(HDR PKEY SMRY SR_CST_DTL)*/
		HDR.SC_NO, PKEY.PROP_NO, PKEY.AMDT_SEQ, SR_CST_DTL.PRS_YRMON, SR_CST_DTL.PRS_WK
		,SR_CST_DTL.PRC_CTRT_TP_CD, SR_CST_DTL.PRC_CTRT_NO, SR_CST_DTL.SVC_SCP_CD
		,SR_CST_DTL.VSL_SLAN_DIR_CD, SR_CST_DTL.TRD_CD, SR_CST_DTL.SUB_TRD_CD
		,SR_CST_DTL.RLANE_CD, SR_CST_DTL.PRC_CGO_TP_CD, SR_CST_DTL.ORG_LOC_TP_CD
		,SR_CST_DTL.ORG_LOC_DEF_CD, SR_CST_DTL.DEST_LOC_TP_CD, SR_CST_DTL.DEST_LOC_DEF_CD
		,SR_CST_DTL.TEU_FRT_REV, SR_CST_DTL.PRS_RESPB_CM_UC_AMT, SR_CST_DTL.PRS_PFIT_CM_UC_AMT
		,SR_CST_DTL.PRS_RESPB_OPFIT_UC_AMT, SR_CST_DTL.PRS_CRNT_LOD_QTY
		,SR_CST_DTL.PRS_RESPB_CMPB_AMT, SR_CST_DTL.PRS_PFIT_CMPB_AMT
		,SR_CST_DTL.PRS_RESPB_OPB_AMT
	FROM VW_PROP_KEY PKEY
		, PRI_SP_HDR HDR
		, PRI_PRS_CTRT_SMRY SMRY
		,PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL
	WHERE HDR.PROP_NO = PKEY.PROP_NO
		AND HDR.SC_NO = SMRY.PRC_CTRT_NO
		AND SMRY.PRC_CTRT_TP_CD = 'S'
		AND (SMRY.PRS_YRMON, SMRY.PRS_WK) IN(SELECT /*+ QB_NAME(V0) */ COST_YRMON, COST_WK FROM VW_CONTRACT_DT_LIST WHERE COST_YRMON IS NOT NULL AND COST_WK IS NOT NULL)
		AND SMRY.PRS_YRMON = SR_CST_DTL.PRS_YRMON
		AND SMRY.PRS_WK = SR_CST_DTL.PRS_WK
		AND SMRY.PRC_CTRT_TP_CD = SR_CST_DTL.PRC_CTRT_TP_CD
		AND SMRY.PRC_CTRT_NO = SR_CST_DTL.PRC_CTRT_NO
		AND HDR.SC_NO IS NOT NULL
		AND SR_CST_DTL.TRD_CD = @[frm_trd_cd]
		AND SR_CST_DTL.VSL_SLAN_DIR_CD = @[frm_dir_cd]
		#if(${frm_sub_trd_cd} != '')
			AND SR_CST_DTL.SUB_TRD_CD = @[frm_sub_trd_cd]
		#end
		#if(${frm_rlane_cd} != '')
			AND SR_CST_DTL.RLANE_CD IN (
			#foreach( ${key} in ${rlane_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						 '$key' 
				FROM DUAL
			#end
			)
			 
		#end
			 
		#if(${frm_customer_type} == 'B')
					AND SMRY.PRS_CUST_TP_CD IN ('I','A','O')
		#elseif(${frm_customer_type} == 'N')
					AND SMRY.PRS_CUST_TP_CD IN ('N')
		#else 
				AND SMRY.PRS_CUST_TP_CD IN ('I','A','O','N')
		#end

		#if(${frm_prop_ofc_cd} != '')
					AND SMRY.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST
		#end

		#if(${frm_prop_srep_cd} != '')
					AND SMRY.RESPB_SREP_CD = @[frm_prop_srep_cd]
		#end

		#if(${frm_prop_apro_ofc_cd} != '')
					AND SMRY.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
		#end

		#if( $cust_list.size() != 0 ) 
			AND (SMRY.CUST_CNT_CD , SMRY.CUST_SEQ) IN (
			#foreach( ${key} in ${cust_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						substr('$key',1,2),substr('$key',3)
				FROM DUAL
			#end
			)
		#end 

		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end

	 
	 
 )
, VW_OTHERS_KEY_LIST AS (
	SELECT   /*+ MATERIALIZE */  HDR.SC_NO , PKEY.PROP_NO, PKEY.AMDT_SEQ
	FROM PRI_SP_HDR HDR
		, PRI_SP_MN MN
		, PRI_SP_CTRT_PTY PTY
		, PRI_SP_CTRT_CUST_TP CUST
		, VW_PROP_KEY PKEY
	WHERE HDR.PROP_NO = MN.PROP_NO
		AND MN.PROP_NO = PTY.PROP_NO
		AND MN.AMDT_SEQ = PTY.AMDT_SEQ
		AND PTY.PRC_CTRT_PTY_TP_CD = 'C'
		AND MN.PROP_NO = CUST.PROP_NO
		AND MN.AMDT_SEQ = CUST.AMDT_SEQ
		AND CUST.PRC_CTRT_PTY_TP_CD = 'C'
		AND  PKEY.PROP_NO = MN.PROP_NO
		AND PKEY.AMDT_SEQ = MN.AMDT_SEQ
		AND EXISTS (	SELECT 'F'
			FROM PRI_SP_SCP_RT_CMDT_HDR RT_HDR 
			WHERE  MN.PROP_NO = RT_HDR.PROP_NO
			AND MN.AMDT_SEQ = RT_HDR.AMDT_SEQ
			AND RT_HDR.SVC_SCP_CD IN (SELECT SCP_CD FROM VW_TRD_SCP WHERE TRD_CD = @[frm_trd_cd] AND DIR_CD = @[frm_dir_cd] )
			AND ROWNUM = 1
		)
		AND NOT EXISTS (
			SELECT 'F'
			FROM VW_KEY_LIST KLIST 
			WHERE  MN.PROP_NO = KLIST.PROP_NO
			AND MN.AMDT_SEQ = KLIST.AMDT_SEQ
			AND ROWNUM = 1
		)
		AND HDR.SC_NO IS NOT NULL
		#if(${frm_customer_type} == 'B')
			AND CUST.PRC_CTRT_CUST_TP_CD IN ('I','A','O')
		#elseif(${frm_customer_type} == 'N')
			AND CUST.PRC_CTRT_CUST_TP_CD IN ('N')
		#else 
			AND CUST.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
		#end

		#if(${frm_prop_ofc_cd} != '')
			AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd] -- REQUEST
		#end

		#if(${frm_prop_srep_cd} != '')
			AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]
		#end

		#if(${frm_prop_apro_ofc_cd} != '')
			AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
		#end

		#if( $cust_list.size() != 0 ) 
			AND (PTY.CUST_CNT_CD , PTY.CUST_SEQ) IN (
			#foreach( ${key} in ${cust_list}) 
				#if($velocityCount != 1 ) 
					UNION ALL
				#end
				SELECT 
						substr('$key',1,2),substr('$key',3)
				FROM DUAL
			#end
			)
		#end 
		#if(  ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
) 
,VW_CONTRACT_KEY AS (
	SELECT /*+ MATERIALIZE */ DISTINCT SC_NO, PROP_NO, AMDT_SEQ
	FROM VW_KEY_LIST
)
,VW_TOT_WEEK_PER_SC_NO AS (
	SELECT /*+ MATERIALIZE */ PROP_NO, AMDT_SEQ, SC_NO, ACTUAL_WK_CNT
	    ,DECODE(ESTIMATE_WK_CNT, 1, 0, ESTIMATE_WK_CNT) AS ESTIMATE_WK_CNT, REFER_WK_CNT
	FROM (
		SELECT   KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.SC_NO
		      ,SUM(
				CASE
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT  AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT 
					THEN 0
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT   AND PRD.SLS_TO_DT >= @[s_sls_fm_dt]
					THEN 1
					ELSE 0
				END
			) AS ACTUAL_WK_CNT
		      ,SUM(
				CASE
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT  AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT 
					THEN 1
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT 
					THEN 0
					WHEN     PRD.SLS_TO_DT <= @[s_sls_to_dt] 
					THEN 1
					ELSE 0
				END
			) AS ESTIMATE_WK_CNT
		      ,SUM(
				CASE
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') <= PRD.SLS_TO_DT  AND TO_CHAR(SYSDATE, 'YYYYMMDD') >= PRD.SLS_FM_DT 
					THEN 0
					WHEN     TO_CHAR(SYSDATE, 'YYYYMMDD') > PRD.SLS_TO_DT   AND PRD.SLS_FM_DT >= @[r_sls_fm_dt]  AND PRD.SLS_FM_DT <= @[r_sls_to_dt] 
					THEN 1
			       ELSE 0
			   END) AS REFER_WK_CNT
		 FROM PRI_SP_DUR DUR
			, VW_CONTRACT_KEY KLIST
			, MAS_WK_PRD PRD
		 WHERE DUR.PROP_NO = KLIST.PROP_NO
			 AND DUR.AMDT_SEQ = KLIST.AMDT_SEQ
			 AND (   (    TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT
				    AND TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT
				   )
				OR (    TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_FM_DT
				    AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') <= PRD.SLS_TO_DT
				   )
				OR (    TO_CHAR(DUR.CTRT_EFF_DT, 'YYYYMMDD') <= PRD.SLS_FM_DT
				    AND TO_CHAR(DUR.CTRT_EXP_DT, 'YYYYMMDD') >= PRD.SLS_TO_DT
				   )
			)
			AND PRD.COST_YR||COST_WK BETWEEN (@[frm_ctrt_eff_yr] || @[frm_ctrt_eff_wk]) AND (@[frm_ctrt_exp_yr] || @[frm_ctrt_exp_wk])
		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
	      GROUP BY KLIST.PROP_NO, KLIST.AMDT_SEQ, KLIST.SC_NO
	)
)
,VW_ACTUAL_VALUE AS (
	SELECT   CKEY.SC_NO, CKEY.PRC_CTRT_NO
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
	      ,SUM(CKEY.PRS_RESPB_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
	      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_TRADE
	      ,SUM(CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0 ,   SUM(CKEY.PRS_RESPB_CMPB_AMT * CKEY.PRS_CRNT_LOD_QTY ) / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS CMPB_OFFICE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0 ,   SUM(CKEY.PRS_PFIT_CMPB_AMT * CKEY.PRS_CRNT_LOD_QTY )  / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS CMPB_TRADE
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
	      ,DECODE(SUM(CKEY.PRS_CRNT_LOD_QTY) ,0, 0 ,   SUM(CKEY.PRS_RESPB_OPB_AMT * CKEY.PRS_CRNT_LOD_QTY )  / SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) ) AS OPB
	      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
	      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
	      ,MAX(WK_PER_SC.ACTUAL_WK_CNT) AS WEEK_CNT
	FROM VW_KEY_LIST CKEY
		, VW_SUMMARY_WEEK WK
		, VW_TOT_WEEK_PER_SC_NO WK_PER_SC
	WHERE CKEY.SC_NO = WK_PER_SC.SC_NO
		AND WK.WK_TP = -1
		AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= WK.SLS_FM_YRWK
		AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= WK.SLS_TO_YRWK
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
#end
		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
	GROUP BY CKEY.SC_NO, CKEY.PRC_CTRT_NO
)
,VW_EST_ACT_1ST_VALUE AS (
	SELECT /*+ MATERIALIZE */ PRC_CTRT_NO, LOAD, COST_CM_OFFICE, COST_CM_TRADE, COST_OP_OFFICE, CM_OFFICE, CM_TRADE
	    ,OP, G_REV, WEEK_CNT, TOT_WK, CM_OFFICE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_OFFICE
	    , CM_TRADE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_TRADE
	    , OP / DECODE(LOAD, 0, 1, LOAD) AS OPB_OFFICE
	FROM (
		SELECT MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD
			, MN.COST_CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_OFFICE
			, MN.COST_CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_TRADE
			, MN.COST_OP_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_OP_OFFICE
			, MN.CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS CM_OFFICE
			, MN.CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS CM_TRADE
			, MN.OP / MN.WEEK_CNT * MN.TOT_WK AS OP
			, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV, MN.WEEK_CNT, MN.TOT_WK
		FROM (
			SELECT   CKEY.PRC_CTRT_NO
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY  / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
			      ,SUM(  CKEY.PRS_RESPB_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
			      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY)  AS COST_CM_TRADE
			      ,SUM(  CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
			      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
			      ,MAX(WK_PER_SC.REFER_WK_CNT) AS WEEK_CNT
			      ,MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK
			 FROM VW_KEY_LIST CKEY 
			      ,VW_TOT_WEEK_PER_SC_NO WK_PER_SC
			 WHERE (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) >= @[r_fm_yrwk]
				 AND (SUBSTR(CKEY.PRS_YRMON, 1, 4) || CKEY.PRS_WK) <= @[r_to_yrwk]
				 AND CKEY.SC_NO = WK_PER_SC.SC_NO
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
			AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
#end
		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
			GROUP BY CKEY.PRC_CTRT_NO
		) MN
		WHERE MN.WEEK_CNT > 0
	)
)
,VW_EST_ACT_2ND_VALUE AS (
	SELECT /*+ MATERIALIZE */ SC_NO, PRC_CTRT_NO, LOAD, COST_CM_OFFICE, COST_CM_TRADE, COST_OP_OFFICE, CM_OFFICE
		, CM_TRADE, OP, G_REV, WEEK_CNT, TOT_WK
		, CM_OFFICE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_OFFICE
		, CM_TRADE / DECODE(LOAD, 0, 1, LOAD) AS CMPB_TRADE
		, OP / DECODE(LOAD, 0, 1, LOAD) AS OPB_OFFICE
	FROM (
		SELECT MN.SC_NO, MN.PRC_CTRT_NO, MN.LOAD / MN.WEEK_CNT * MN.TOT_WK AS LOAD
			, MN.COST_CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_OFFICE
			, MN.COST_CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS COST_CM_TRADE
			, MN.COST_OP_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS COST_OP_OFFICE
			, MN.CM_OFFICE / MN.WEEK_CNT * MN.TOT_WK AS CM_OFFICE
			, MN.CM_TRADE / MN.WEEK_CNT * MN.TOT_WK AS CM_TRADE
			, MN.OP / MN.WEEK_CNT * MN.TOT_WK AS OP
			, MN.G_REV / MN.WEEK_CNT * MN.TOT_WK AS G_REV, MN.WEEK_CNT, MN.TOT_WK
		FROM (
			SELECT   /*+ ORDERED SWAP_JOIN_INPUTS(@V1) USE_HASH(CKEY WK_PER_SC) */
			       CKEY.SC_NO, CKEY.PRC_CTRT_NO
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
			      ,SUM(  CKEY.PRS_RESPB_CM_UC_AMT  * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_OFFICE
			      ,SUM(CKEY.PRS_PFIT_CM_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_CM_TRADE
			      ,SUM(  CKEY.PRS_RESPB_OPFIT_UC_AMT * CKEY.PRS_CRNT_LOD_QTY) AS COST_OP_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_CMPB_AMT) AS CM_OFFICE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_PFIT_CMPB_AMT) AS CM_TRADE
			      ,SUM(CKEY.PRS_CRNT_LOD_QTY * CKEY.PRS_RESPB_OPB_AMT) AS OP
			      ,SUM(CKEY.TEU_FRT_REV * CKEY.PRS_CRNT_LOD_QTY) AS G_REV
			      ,MAX(WK_PER_SC.ACTUAL_WK_CNT + WK_PER_SC.ESTIMATE_WK_CNT) AS WEEK_CNT
			      ,MAX(WK_PER_SC.ESTIMATE_WK_CNT) AS TOT_WK
			 FROM VW_KEY_LIST CKEY
				, VW_TOT_WEEK_PER_SC_NO WK_PER_SC
			 WHERE NOT EXISTS(SELECT /*+ QB_NAME(V1) */ 'F'
					   FROM VW_EST_ACT_1ST_VALUE V1
					   WHERE V1.PRC_CTRT_NO = CKEY.PRC_CTRT_NO)
				 AND CKEY.SC_NO = WK_PER_SC.SC_NO
		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND CKEY.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND CKEY.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
		AND CKEY.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
#end

		      GROUP BY CKEY.SC_NO, CKEY.PRC_CTRT_NO
		) MN
		WHERE WEEK_CNT > 0
	)
)
,VW_EST_ACT_3RD_VALUE AS (
	SELECT /*+ MATERIALIZE */ MN.SC_NO, PROP_NO, AMDT_SEQ,(LOAD) AS LOAD,(CM_OFFICE) AS CM_OFFICE
	    ,(CM_TRADE) AS CM_TRADE,(OP) AS OP, DECODE(LOAD
						      ,0, 0
						      , (CM_OFFICE) /(LOAD)
						      ) AS CMPB_OFFICE
	    ,DECODE(LOAD, 0, 0,(CM_TRADE) /(LOAD)) AS CMPB_TRADE
	    ,DECODE(LOAD, 0, 0,(OP) /(LOAD)) AS OPB_OFFICE
	FROM (
		SELECT   CKEY.SC_NO, CKEY.PROP_NO, CKEY.AMDT_SEQ
		      ,SUM(CMDT_ROUT.PRS_ESTM_LOD_QTY / DECODE(@[frm_pfmc_unit], 'FEU', 2, 'TEU', 1)) AS LOAD
		      ,SUM(
				CASE
					WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 2, 1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 1, 1) = '2'
						THEN   CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT
					ELSE   CMDT_ROUT.PRS_ESTM_LOD_QTY  * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT  / 2
				END
			) AS CM_OFFICE
		      ,SUM(
				CASE
					WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 2, 1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 1, 1) = '2'
						THEN   CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT
					ELSE CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT / 2
				END
			) AS CM_TRADE
		      ,SUM(
				CASE
					WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 2, 1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD, 1, 1) = '2'
						THEN   CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT
					ELSE CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT / 2
				END
			) AS OP
		FROM PRI_SP_SCP_RT_CMDT_ROUT CMDT_ROUT
			, VW_OTHERS_KEY_LIST CKEY
#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM  VW_OTHERS_KEY_LIST MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM  VW_OTHERS_KEY_LIST MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
		WHERE CMDT_ROUT.PROP_NO = CKEY.PROP_NO
			AND CMDT_ROUT.AMDT_SEQ = 0
#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = ORI_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = DEST_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
		-- BY CARGO TYPE
#if (${crg_tp_str} != '' )
				AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
#end

		#if( ${frm_contract_type_s} == 'S' )
			AND 1=1
		#else
			AND 1=0
		#end
		GROUP BY CKEY.SC_NO, CKEY.PROP_NO, CKEY.AMDT_SEQ
	) MN
)
SELECT   A_SC_NO
	, E1_SC_NO
	, E2_SC_NO
	, A1_LOAD
	, A1_COST_CM_OFFICE
	, A1_COST_CM_TRADE
	, A1_COST_OP_OFFICE
	, A1_CMPB_OFFICE
	, A1_CMPB_TRADE
	, A1_CM_OFFICE
	, A1_CM_TRADE
	, A1_OPB
	, A1_OP
	, A1_G_REV
	, A1_WEEK_CNT
	, E1_LOAD
	, E1_CM_OFFICE
	, E1_CM_TRADE
	, E1_OP
	, E1_CMPB_OFFICE
	, E1_CMPB_TRADE
	, E1_OPB
	, E1_TOT_WK
	, E1_COST_CM_OFFICE
	, E1_COST_CM_TRADE
	, E1_COST_OP_OFFICE
	, E1_G_REV
	, EST_TP
	, A1_LOAD + E1_LOAD AS SUM_LOAD
	, A1_G_REV + E1_G_REV AS SUM_GREV
	, A1_COST_CM_OFFICE + E1_COST_CM_OFFICE AS SUM_COST_CM_OFFICE
	, A1_COST_CM_TRADE + E1_COST_CM_TRADE AS SUM_COST_CM_TRADE
	, A1_COST_OP_OFFICE + E1_COST_OP_OFFICE AS SUM_COST_OP_OFFICE
	, A1_WEEK_CNT + E1_TOT_WK AS SUM_WEEK
	, A1_CM_OFFICE + E1_CM_OFFICE AS SUM_CM_OFFICE
	, A1_CM_TRADE + E1_CM_TRADE AS SUM_CM_TRADE
	, A1_OP + E1_OP AS SUM_OP
	, (A1_CMPB_OFFICE	- E1_CMPB_OFFICE	) / DECODE(E1_CMPB_OFFICE, 0,	TO_NUMBER(NULL)	, ABS(E1_CMPB_OFFICE)) * 100 AS DIFF_CMPB_OFFICE
	, (A1_CMPB_TRADE	- E1_CMPB_TRADE		) / DECODE(E1_CMPB_TRADE, 0,	TO_NUMBER(NULL)		, ABS(E1_CMPB_TRADE)) * 100 AS DIFF_CMPB_TRADE
	, (A1_OPB		- E1_OPB		) / DECODE(E1_OPB, 0,		TO_NUMBER(NULL)			, ABS(E1_OPB)) * 100  AS DIFF_OPB
	, C.CUST_CNT_CD || TO_CHAR(C.CUST_SEQ, 'FM000000') || ' - ' || C.CTRT_PTY_NM AS CUST_NM
	, M.PROP_OFC_CD
	,  ( 
		       CASE WHEN Q.CNTR_LOD_UT_CD = 'F' AND @[frm_pfmc_unit] = 'TEU' THEN 
			   Q.FNL_MQC_QTY * 2
		       WHEN Q.CNTR_LOD_UT_CD = 'T' AND @[frm_pfmc_unit] = 'FEU' THEN
			   Q.FNL_MQC_QTY /2
		       ELSE Q.FNL_MQC_QTY
		       END
	)  AS MQC_QTY
	, MN.PROP_NO
	, M.PROP_APRO_OFC_CD
	, M.RESPB_SREP_CD
	,'SC' AS CONTRACT_NM
	, TO_CHAR(DUR.CTRT_EFF_DT
	, 'YYYY-MM-DD') AS CTRT_EFF_DT
	, TO_CHAR(DUR.CTRT_EXP_DT
	, 'YYYY-MM-DD') AS CTRT_EXP_DT
	,(
		SELECT INTG_CD_VAL_DP_DESC
		FROM COM_INTG_CD_DTL
		WHERE INTG_CD_ID = 'CD01714'
			AND INTG_CD_VAL_CTNT = CTP.PRC_CTRT_CUST_TP_CD
	) AS CUST_TP_CD
FROM (
	SELECT CKEY.SC_NO
		, CKEY.PROP_NO
		, CKEY.AMDT_SEQ
		, CKEY.SC_NO AS A_SC_NO
		, ETS_1ST.PRC_CTRT_NO AS E1_SC_NO
		, ETS_2ND.PRC_CTRT_NO AS E2_SC_NO
		, AVALUE.LOAD AS A1_LOAD
		, AVALUE.COST_CM_OFFICE AS A1_COST_CM_OFFICE
		, AVALUE.COST_CM_TRADE AS A1_COST_CM_TRADE
		, AVALUE.COST_OP_OFFICE AS A1_COST_OP_OFFICE
		, AVALUE.CMPB_OFFICE AS A1_CMPB_OFFICE
		, AVALUE.CMPB_TRADE AS A1_CMPB_TRADE
		, AVALUE.CM_OFFICE AS A1_CM_OFFICE
		, AVALUE.CM_TRADE AS A1_CM_TRADE
		, AVALUE.OPB AS A1_OPB
		, AVALUE.OP AS A1_OP
		, AVALUE.G_REV AS A1_G_REV
		, AVALUE.WEEK_CNT AS A1_WEEK_CNT
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.LOAD, ETS_1ST.LOAD) AS E1_LOAD
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CM_OFFICE, ETS_1ST.CM_OFFICE) AS E1_CM_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CM_TRADE, ETS_1ST.CM_TRADE) AS E1_CM_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.OP, ETS_1ST.OP) AS E1_OP
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CMPB_OFFICE, ETS_1ST.CMPB_OFFICE) AS E1_CMPB_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CMPB_TRADE, ETS_1ST.CMPB_TRADE) AS E1_CMPB_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.OPB_OFFICE, ETS_1ST.OPB_OFFICE) AS E1_OPB
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.TOT_WK, ETS_1ST.TOT_WK) AS E1_TOT_WK
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_CM_OFFICE, ETS_1ST.COST_CM_OFFICE) AS E1_COST_CM_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_CM_TRADE, ETS_1ST.COST_CM_TRADE) AS E1_COST_CM_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_OP_OFFICE, ETS_1ST.COST_OP_OFFICE) AS E1_COST_OP_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.G_REV, ETS_1ST.G_REV) AS E1_G_REV
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, 2, 1) AS EST_TP
	FROM VW_CONTRACT_KEY CKEY, VW_ACTUAL_VALUE AVALUE, VW_EST_ACT_1ST_VALUE ETS_1ST
		,VW_EST_ACT_2ND_VALUE ETS_2ND
	WHERE CKEY.SC_NO = AVALUE.SC_NO(+)
		AND CKEY.SC_NO = ETS_1ST.PRC_CTRT_NO(+)
		AND CKEY.SC_NO = ETS_2ND.PRC_CTRT_NO(+)
	UNION ALL
	SELECT SC_NO
		, PROP_NO
		, AMDT_SEQ
		, SC_NO AS A_SC_NO
		, NULL AS E1_SC_NO
		, NULL AS E2_SC_NO	
		, NULL AS A1_LOAD
		, NULL AS A1_COST_CM_OFFICE
		, NULL AS A1_COST_CM_TRADE	
		, NULL AS A1_COST_OP_OFFICE
		, NULL AS A1_CMPB_OFFICE
		, NULL AS A1_CMPB_TRADE	
		, NULL AS A1_CM_OFFICE
		, NULL AS A1_CM_TRADE
		, NULL AS A1_OPB
		, NULL AS A1_OP	
		, NULL AS A1_G_REV
		, NULL AS A1_WEEK_CNT
		, LOAD AS E1_LOAD
		, CM_OFFICE AS E1_CM_OFFICE	
		, CM_TRADE AS E1_CM_TRADE
		, OP AS E1_OP
		, CMPB_OFFICE AS E1_CMPB_OFFICE	
		, CMPB_TRADE AS E1_CMPB_TRADE
		, OPB_OFFICE AS E1_OPB
		, NULL AS E1_TOT_WK	
		, NULL AS E1_COST_CM_OFFICE
		, NULL AS E1_COST_CM_TRADE
		, NULL AS E1_COST_OP_OFFICE	
		, NULL AS E1_G_REV
		, 3 AS EST_TP
	FROM VW_EST_ACT_3RD_VALUE ETS_3RD
 ) MN
,PRI_SP_MN M
,PRI_SP_CTRT_PTY C
,PRI_SP_MQC Q
,PRI_SP_DUR DUR
,PRI_SP_CTRT_CUST_TP CTP
WHERE MN.PROP_NO = M.PROP_NO
	AND MN.AMDT_SEQ = M.AMDT_SEQ
	AND MN.PROP_NO = DUR.PROP_NO
	AND MN.AMDT_SEQ = DUR.AMDT_SEQ
	AND MN.PROP_NO = CTP.PROP_NO
	AND MN.AMDT_SEQ = CTP.AMDT_SEQ
	AND CTP.PRC_CTRT_PTY_TP_CD = 'C'
	AND M.PROP_NO = C.PROP_NO
	AND M.AMDT_SEQ = C.AMDT_SEQ
	AND M.PROP_NO = Q.PROP_NO(+)
	AND M.AMDT_SEQ = Q.AMDT_SEQ(+)
	AND C.PRC_CTRT_PTY_TP_CD = 'C'
UNION ALL
SELECT   A_SC_NO
	, E1_SC_NO
	, E2_SC_NO
	, A1_LOAD
	, A1_COST_CM_OFFICE
	, A1_COST_CM_TRADE
	, A1_COST_OP_OFFICE
	, A1_CMPB_OFFICE
	, A1_CMPB_TRADE
	, A1_CM_OFFICE
	, A1_CM_TRADE
	, A1_OPB
	, A1_OP
	, A1_G_REV
	, A1_WEEK_CNT
	, E1_LOAD
	, E1_CM_OFFICE
	, E1_CM_TRADE
	, E1_OP
	, E1_CMPB_OFFICE
	, E1_CMPB_TRADE
	, E1_OPB
	, E1_TOT_WK
	, E1_COST_CM_OFFICE
	, E1_COST_CM_TRADE
	, E1_COST_OP_OFFICE
	, E1_G_REV
	, EST_TP
	, A1_LOAD + E1_LOAD AS SUM_LOAD
	, A1_G_REV + E1_G_REV AS SUM_GREV
	, A1_COST_CM_OFFICE + E1_COST_CM_OFFICE AS SUM_COST_CM_OFFICE
	, A1_COST_CM_TRADE + E1_COST_CM_TRADE AS SUM_COST_CM_TRADE
	, A1_COST_OP_OFFICE + E1_COST_OP_OFFICE AS SUM_COST_OP_OFFICE
	, A1_WEEK_CNT + E1_TOT_WK AS SUM_WEEK
	, A1_CM_OFFICE + E1_CM_OFFICE AS SUM_CM_OFFICE
	, A1_CM_TRADE + E1_CM_TRADE AS SUM_CM_TRADE
	, A1_OP + E1_OP AS SUM_OP
	, (A1_CMPB_OFFICE	- E1_CMPB_OFFICE	) / DECODE(E1_CMPB_OFFICE, 0,	TO_NUMBER(NULL)	, ABS(E1_CMPB_OFFICE)) * 100 AS DIFF_CMPB_OFFICE
	, (A1_CMPB_TRADE	- E1_CMPB_TRADE		) / DECODE(E1_CMPB_TRADE, 0,	TO_NUMBER(NULL)		, ABS(E1_CMPB_TRADE)) * 100 AS DIFF_CMPB_TRADE
	, (A1_OPB		- E1_OPB		) / DECODE(E1_OPB, 0,		TO_NUMBER(NULL)			, ABS(E1_OPB)) * 100  AS DIFF_OPB
	, M.CTRT_CUST_CNT_CD || TO_CHAR(M.CTRT_CUST_SEQ, 'FM000000') || ' - ' || CUST.CUST_LGL_ENG_NM AS CUST_NM
	, M.PROP_OFC_CD
	, (
			CASE WHEN M.CNTR_LOD_UT_CD = 'F' AND @[frm_pfmc_unit] = 'TEU' THEN
			M.TGT_MVC_QTY * 2
			WHEN M.CNTR_LOD_UT_CD = 'T' AND @[frm_pfmc_unit] = 'FEU' THEN
			M.TGT_MVC_QTY /2
			ELSE M.TGT_MVC_QTY
			END
	)  AS MQC_QTY
	, MN.PROP_NO
	, M.PROP_APRO_OFC_CD
	, M.RESPB_SREP_CD
	, 'RFA' AS CONTRACT_NM
	, TO_CHAR(DUR.CTRT_EFF_DT, 'YYYY-MM-DD') AS CTRT_EFF_DT
	, TO_CHAR(DUR.CTRT_EXP_DT, 'YYYY-MM-DD') AS CTRT_EXP_DT
	, (
		SELECT INTG_CD_VAL_DP_DESC
		FROM COM_INTG_CD_DTL
		WHERE INTG_CD_ID = 'CD01714'
			AND INTG_CD_VAL_CTNT = M.PRC_CTRT_CUST_TP_CD
	) AS CUST_TP_CD
FROM (
	SELECT CKEY.RFA_NO AS SC_NO
		, CKEY.PROP_NO
		, CKEY.AMDT_SEQ
		, CKEY.RFA_NO AS A_SC_NO	
		, ETS_1ST.PRC_CTRT_NO AS E1_SC_NO
		, ETS_2ND.PRC_CTRT_NO AS E2_SC_NO
		, AVALUE.LOAD AS A1_LOAD
		, AVALUE.COST_CM_OFFICE AS A1_COST_CM_OFFICE	
		, AVALUE.COST_CM_TRADE AS A1_COST_CM_TRADE
		, AVALUE.COST_OP_OFFICE AS A1_COST_OP_OFFICE
		, AVALUE.CMPB_OFFICE AS A1_CMPB_OFFICE
		, AVALUE.CMPB_TRADE AS A1_CMPB_TRADE
		, AVALUE.CM_OFFICE AS A1_CM_OFFICE
		, AVALUE.CM_TRADE AS A1_CM_TRADE
		, AVALUE.OPB AS A1_OPB
		, AVALUE.OP AS A1_OP
		, AVALUE.G_REV AS A1_G_REV
		, AVALUE.WEEK_CNT AS A1_WEEK_CNT
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.LOAD, ETS_1ST.LOAD) AS E1_LOAD
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CM_OFFICE, ETS_1ST.CM_OFFICE) AS E1_CM_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CM_TRADE, ETS_1ST.CM_TRADE) AS E1_CM_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.OP, ETS_1ST.OP) AS E1_OP
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CMPB_OFFICE, ETS_1ST.CMPB_OFFICE) AS E1_CMPB_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CMPB_TRADE, ETS_1ST.CMPB_TRADE) AS E1_CMPB_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.OPB_OFFICE, ETS_1ST.OPB_OFFICE) AS E1_OPB
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.TOT_WK, ETS_1ST.TOT_WK) AS E1_TOT_WK
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_CM_OFFICE, ETS_1ST.COST_CM_OFFICE) AS E1_COST_CM_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_CM_TRADE, ETS_1ST.COST_CM_TRADE) AS E1_COST_CM_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_OP_OFFICE, ETS_1ST.COST_OP_OFFICE) AS E1_COST_OP_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.G_REV, ETS_1ST.G_REV) AS E1_G_REV
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, 2, 1) AS EST_TP
	FROM VW_RFA_CONTRACT_KEY CKEY, VW_RFA_ACTUAL_VALUE AVALUE
		,VW_RFA_EST_ACT_1ST_VALUE ETS_1ST, VW_RFA_EST_ACT_2ND_VALUE ETS_2ND
	WHERE CKEY.RFA_NO = AVALUE.RFA_NO(+)
		AND CKEY.RFA_NO = ETS_1ST.PRC_CTRT_NO(+)
		AND CKEY.RFA_NO = ETS_2ND.PRC_CTRT_NO(+)
	UNION ALL
	SELECT RFA_NO
		, PROP_NO
		, AMDT_SEQ
		, RFA_NO AS A_SC_NO
		, NULL AS E1_SC_NO
		, NULL AS E2_SC_NO
		, NULL AS A1_LOAD
		, NULL AS A1_COST_CM_OFFICE
		, NULL AS A1_COST_CM_TRADE
		, NULL AS A1_COST_OP_OFFICE
		, NULL AS A1_CMPB_OFFICE
		, NULL AS A1_CMPB_TRADE
		, NULL AS A1_CM_OFFICE
		, NULL AS A1_CM_TRADE
		, NULL AS A1_OPB
		, NULL AS A1_OP
		, NULL AS A1_G_REV
		, NULL AS A1_WEEK_CNT
		, LOAD AS E1_LOAD
		, CM_OFFICE AS E1_CM_OFFICE
		, CM_TRADE AS E1_CM_TRADE
		, OP AS E1_OP
		, CMPB_OFFICE AS E1_CMPB_OFFICE
		, CMPB_TRADE AS E1_CMPB_TRADE
		, OPB_OFFICE AS E1_OPB
		, NULL AS E1_TOT_WK
		, NULL AS E1_COST_CM_OFFICE
		, NULL AS E1_COST_CM_TRADE
		, NULL AS E1_COST_OP_OFFICE
		, NULL AS E1_G_REV
		, 3 AS EST_TP
	FROM VW_RFA_EST_ACT_3RD_VALUE ETS_3RD
) MN
,PRI_RP_MN M
,PRI_RP_DUR DUR
,MDM_CUSTOMER CUST
WHERE MN.PROP_NO = M.PROP_NO
	AND MN.AMDT_SEQ = M.AMDT_SEQ
	AND MN.PROP_NO = DUR.PROP_NO
	AND MN.AMDT_SEQ = DUR.AMDT_SEQ
	AND CUST.CUST_CNT_CD = M.CTRT_CUST_CNT_CD
	AND CUST.CUST_SEQ = M.CTRT_CUST_SEQ
UNION ALL
SELECT   A_TAA_NO
	, E1_TAA_NO
	, E2_TAA_NO
	, A1_LOAD
	, A1_COST_CM_OFFICE
	, A1_COST_CM_TRADE
	, A1_COST_OP_OFFICE
	, A1_CMPB_OFFICE
	, A1_CMPB_TRADE
	, A1_CM_OFFICE
	, A1_CM_TRADE
	, A1_OPB
	, A1_OP
	, A1_G_REV
	, A1_WEEK_CNT
	, E1_LOAD
	, E1_CM_OFFICE
	, E1_CM_TRADE
	, E1_OP
	, E1_CMPB_OFFICE
	, E1_CMPB_TRADE
	, E1_OPB
	, E1_TOT_WK
	, E1_COST_CM_OFFICE
	, E1_COST_CM_TRADE
	, E1_COST_OP_OFFICE
	, E1_G_REV
	, EST_TP
	, A1_LOAD + E1_LOAD AS SUM_LOAD
	, A1_G_REV + E1_G_REV AS SUM_GREV
	, A1_COST_CM_OFFICE + E1_COST_CM_OFFICE AS SUM_COST_CM_OFFICE
	, A1_COST_CM_TRADE + E1_COST_CM_TRADE AS SUM_COST_CM_TRADE
	, A1_COST_OP_OFFICE + E1_COST_OP_OFFICE AS SUM_COST_OP_OFFICE
	, A1_WEEK_CNT + E1_TOT_WK AS SUM_WEEK
	, A1_CM_OFFICE + E1_CM_OFFICE AS SUM_CM_OFFICE
	, A1_CM_TRADE + E1_CM_TRADE AS SUM_CM_TRADE
	, A1_OP + E1_OP AS SUM_OP
	, (A1_CMPB_OFFICE	- E1_CMPB_OFFICE	) / DECODE(E1_CMPB_OFFICE, 0,	TO_NUMBER(NULL)	, ABS(E1_CMPB_OFFICE)) * 100 AS DIFF_CMPB_OFFICE
	, (A1_CMPB_TRADE	- E1_CMPB_TRADE		) / DECODE(E1_CMPB_TRADE, 0,	TO_NUMBER(NULL)		, ABS(E1_CMPB_TRADE)) * 100 AS DIFF_CMPB_TRADE
	, (A1_OPB		- E1_OPB		) / DECODE(E1_OPB, 0,		TO_NUMBER(NULL)			, ABS(E1_OPB)) * 100  AS DIFF_OPB
	,    M.CTRT_CUST_CNT_CD|| TO_CHAR(M.CTRT_CUST_SEQ, 'FM000000') || ' - ' || CUST.CUST_LGL_ENG_NM AS CUST_NM
	, M.RESPB_SLS_OFC_CD AS PROP_OFC_CD
	, TO_NUMBER(NULL) AS MQC_QTY
	, MN.TAA_PROP_NO
	,'' AS PROP_APRO_OFC_CD, M.RESPB_SREP_CD, 'TAA' AS CONTRACT_NM
	,TO_CHAR(M.EFF_DT, 'YYYY-MM-DD') AS CTRT_EFF_DT
	,TO_CHAR(M.EXP_DT, 'YYYY-MM-DD') AS CTRT_EXP_DT
	,(SELECT INTG_CD_VAL_DP_DESC
	    FROM COM_INTG_CD_DTL
	   WHERE INTG_CD_ID = 'CD01714'
	     AND INTG_CD_VAL_CTNT = M.PRC_CTRT_CUST_TP_CD) AS CUST_TP_CD
FROM (
	SELECT CKEY.TAA_NO
		, CKEY.TAA_PROP_NO
		, CKEY.AMDT_SEQ
		, CKEY.TAA_NO AS A_TAA_NO
		, ETS_1ST.PRC_CTRT_NO AS E1_TAA_NO
		, ETS_2ND.PRC_CTRT_NO AS E2_TAA_NO
		, AVALUE.LOAD AS A1_LOAD
		, AVALUE.COST_CM_OFFICE AS A1_COST_CM_OFFICE
		, AVALUE.COST_CM_TRADE AS A1_COST_CM_TRADE
		, AVALUE.COST_OP_OFFICE AS A1_COST_OP_OFFICE
		, AVALUE.CMPB_OFFICE AS A1_CMPB_OFFICE
		, AVALUE.CMPB_TRADE AS A1_CMPB_TRADE
		, AVALUE.CM_OFFICE AS A1_CM_OFFICE
		, AVALUE.CM_TRADE AS A1_CM_TRADE
		, AVALUE.OPB AS A1_OPB
		, AVALUE.OP AS A1_OP
		, AVALUE.G_REV AS A1_G_REV
		, AVALUE.WEEK_CNT AS A1_WEEK_CNT
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.LOAD, ETS_1ST.LOAD) AS E1_LOAD
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CM_OFFICE, ETS_1ST.CM_OFFICE) AS E1_CM_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CM_TRADE, ETS_1ST.CM_TRADE) AS E1_CM_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.OP, ETS_1ST.OP) AS E1_OP
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CMPB_OFFICE, ETS_1ST.CMPB_OFFICE) AS E1_CMPB_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.CMPB_TRADE, ETS_1ST.CMPB_TRADE) AS E1_CMPB_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.OPB_OFFICE, ETS_1ST.OPB_OFFICE) AS E1_OPB
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.TOT_WK, ETS_1ST.TOT_WK) AS E1_TOT_WK
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_CM_OFFICE, ETS_1ST.COST_CM_OFFICE) AS E1_COST_CM_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_CM_TRADE, ETS_1ST.COST_CM_TRADE) AS E1_COST_CM_TRADE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.COST_OP_OFFICE, ETS_1ST.COST_OP_OFFICE) AS E1_COST_OP_OFFICE
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, ETS_2ND.G_REV, ETS_1ST.G_REV) AS E1_G_REV
		,DECODE(ETS_1ST.PRC_CTRT_NO, NULL, 2, 1) AS EST_TP
	 FROM VW_TRI_CONTRACT_KEY CKEY, VW_TRI_ACTUAL_VALUE AVALUE
		,VW_TRI_EST_ACT_1ST_VALUE ETS_1ST, VW_TRI_EST_ACT_2ND_VALUE ETS_2ND
	 WHERE CKEY.TAA_NO = AVALUE.TAA_NO(+)
		AND CKEY.TAA_NO = ETS_1ST.PRC_CTRT_NO(+)
		AND CKEY.TAA_NO = ETS_2ND.PRC_CTRT_NO(+)
	 UNION ALL
	 SELECT TAA_NO
		, TAA_PROP_NO
		, AMDT_SEQ
		, TAA_NO AS A_SC_NO
		, NULL AS E1_SC_NO
			
		, NULL AS E2_SC_NO
		, NULL AS A1_LOAD
		, NULL AS A1_COST_CM_OFFICE
			
		, NULL AS A1_COST_CM_TRADE
		, NULL AS A1_COST_OP_OFFICE
		, NULL AS A1_CMPB_OFFICE
			
		, NULL AS A1_CMPB_TRADE
		, NULL AS A1_CM_OFFICE
		, NULL AS A1_CM_TRADE
		, NULL AS A1_OPB
			
		, NULL AS A1_OP
		, NULL AS A1_G_REV
		, NULL AS A1_WEEK_CNT
		, NULL AS E1_LOAD
			
		, NULL AS E1_CM_OFFICE
		, NULL AS E1_CM_TRADE
		, NULL AS E1_OP
		, NULL AS E1_CMPB_OFFICE
			
		, NULL AS E1_CMPB_TRADE
		, NULL AS E1_OPB
		, NULL AS E1_TOT_WK
			
		, NULL AS E1_COST_CM_OFFICE
		, NULL AS E1_COST_CM_TRADE
		, NULL AS E1_COST_OP_OFFICE
			
		, NULL AS E1_G_REV
		, 3 AS EST_TP
	FROM VW_TRI_OTHERS_KEY_LIST ETS_3RD
) MN
,PRI_TAA_MN M
,MDM_CUSTOMER CUST
WHERE MN.TAA_PROP_NO = M.TAA_PROP_NO
	AND MN.AMDT_SEQ = M.AMDT_SEQ
	AND CUST.CUST_CNT_CD = M.CTRT_CUST_CNT_CD
	AND CUST.CUST_SEQ = M.CTRT_CUST_SEQ
ORDER BY CONTRACT_NM DESC, PROP_OFC_CD, A_SC_NO, CUST_NM			]]></sql>
			<params>
				<param name="frm_ctrt_eff_yr" type="12" value="" out="N"/>
				<param name="frm_ctrt_eff_wk" type="12" value="" out="N"/>
				<param name="frm_ctrt_exp_yr" type="12" value="" out="N"/>
				<param name="frm_ctrt_exp_wk" type="12" value="" out="N"/>
				<param name="frm_smr_eff_yr" type="12" value="" out="N"/>
				<param name="frm_smr_eff_wk" type="12" value="" out="N"/>
				<param name="frm_smr_exp_yr" type="12" value="" out="N"/>
				<param name="frm_smr_exp_wk" type="12" value="" out="N"/>
				<param name="c_sls_fm_dt" type="12" value="" out="N"/>
				<param name="c_sls_to_dt" type="12" value="" out="N"/>
				<param name="frm_trd_cd" type="12" value="" out="N"/>
				<param name="frm_dir_cd" type="12" value="" out="N"/>
				<param name="frm_sub_trd_cd" type="12" value="" out="N"/>
				<param name="frm_prop_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_prop_srep_cd" type="12" value="" out="N"/>
				<param name="frm_prop_apro_ofc_cd" type="12" value="" out="N"/>
				<param name="s_sls_fm_dt" type="12" value="" out="N"/>
				<param name="s_sls_to_dt" type="12" value="" out="N"/>
				<param name="r_sls_fm_dt" type="12" value="" out="N"/>
				<param name="r_sls_to_dt" type="12" value="" out="N"/>
				<param name="frm_pfmc_unit" type="12" value="" out="N"/>
				<param name="frm_ori_rout_cd" type="12" value="" out="N"/>
				<param name="frm_dest_rout_cd" type="12" value="" out="N"/>
				<param name="r_fm_yrwk" type="12" value="" out="N"/>
				<param name="r_to_yrwk" type="12" value="" out="N"/>
				<param name="frm_ori_loc_tp" type="12" value="" out="N"/>
				<param name="frm_dest_loc_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
