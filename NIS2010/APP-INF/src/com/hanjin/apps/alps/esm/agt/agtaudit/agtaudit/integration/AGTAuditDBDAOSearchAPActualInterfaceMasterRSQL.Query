<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AGTAuditDBDAOSearchAPActualInterfaceMasterRSQL">
			<desc><![CDATA[SearchAPActualInterfaceMaster]]></desc>
			<sql><![CDATA[
SELECT 
		   A.COMM_APRO_NO,
           A.INV_NO,
           A.AGN_CD,
           A.VVD_CNT,
           A.CURR_CD,
           A.NET_AMT,
           A.VAT,
           A.TOT_AMT,
           A.CSR_NO,
           A.AC_IF_DT,
      CASE B.IF_FLG
      WHEN 'Y'
      THEN 'Success'
      ELSE 
		CASE substr(B.IF_ERR_RSN,0,20)
    	WHEN 'Duplicate CSR Number'
    	THEN 'Already Interfaced'
    	ELSE B.IF_ERR_RSN
    	END
       END                     AS IF_FLG_MSG,
      CASE B.RCV_ERR_FLG
      WHEN 'Y'
      THEN 'Success'
      ELSE B.RCV_ERR_RSN
       END                     AS RCV_ERR_FLG_MSG,
    CASE substr(B.IF_ERR_RSN,0,20)
	WHEN 'Duplicate CSR Number'
	THEN 'Y'
	ELSE B.IF_FLG
	END                     AS IF_FLG,
           B.RCV_ERR_FLG,
           B.PAY_AMT,
           B.PAY_DT,
           B.FTU_USE_CTNT1,
           B.PAY_MZD_LU_CD
      FROM
         (     SELECT
                      COMM_APRO_NO,
                      INV_NO,
                      AGN_CD,
                      COUNT(DISTINCT COMM_VSL_CD||COMM_SKD_VOY_NO||COMM_SKD_DIR_CD||COMM_REV_DIR_CD) AS VVD_CNT,
                      CURR_CD,
                      ROUND(SUM(ACT_IF_LOCL_COMM_AMT), 2) AS NET_AMT,
                      ROUND(SUM(ACT_IF_LOCL_COMM_AMT * NVL(INV_TAX_RT, 0) / 100), DECODE(CURR_CD, 'JPY', 0, 2)) AS VAT,
                      ROUND(SUM(ACT_IF_LOCL_COMM_AMT + (ACT_IF_LOCL_COMM_AMT * NVL(INV_TAX_RT, 0) / 100)), DECODE(CURR_CD, 'JPY', 0, 2)) AS TOT_AMT,
                      CSR_NO,
                      TO_CHAR(AC_IF_DT, 'YYYYMMDD') AS AC_IF_DT
                 FROM AGT_AGN_COMM
                WHERE AR_OFC_CD           = @[ar_ofc_cd]
                  AND AGN_CD              = @[agn_cd]
                  AND COMM_PROC_STS_CD    = @[if_option]
                  AND CRE_USR_ID         <> 'COST'  -- 2007.05.07 이전데이터는 검색대상에서 제외
-- Exp.Type = 'G:General', 'E:General Exception'
#if(${exp_type} == 'G')
	             AND COMM_STND_COST_CD   IN ('512611','512621','512631','512641','512661','512691','512694')  -- General
#else
	             AND COMM_STND_COST_CD   IN ('512692','512693')  -- General Exception
#end
--Status = 'AS:Audited OK', 'IF:Interface OK'
#if(${if_option} == 'AS')
                AND AC_APRO_DT          >= TO_DATE(REPLACE(@[search_dt_fr],'-', ''),'YYYYMMDD')
                AND AC_APRO_DT          <  TO_DATE(REPLACE(@[search_dt_to],'-', ''),'YYYYMMDD') + 1  -- AS(Audit Success)
#else
                AND AC_IF_DT            >= TO_DATE(REPLACE(@[search_dt_fr],'-', ''),'YYYYMMDD')
                AND AC_IF_DT            <  TO_DATE(REPLACE(@[search_dt_to],'-', ''),'YYYYMMDD') + 1  -- IF(Interface Success)
#end
             GROUP BY 
				COMM_APRO_NO, 
				INV_NO, 
				AGN_CD, 
				CURR_CD, 
				CSR_NO, 
				TO_CHAR(AC_IF_DT, 'YYYYMMDD')
         ) A,
           AP_INV_HDR B
     WHERE A.CSR_NO = B.CSR_NO(+)
  ORDER BY 1			]]></sql>
			<params>
				<param name="ar_ofc_cd" type="12" value="" out="Y"/>
				<param name="agn_cd" type="12" value="" out="Y"/>
				<param name="if_option" type="12" value="" out="Y"/>
				<param name="search_dt_fr" type="12" value="" out="Y"/>
				<param name="search_dt_to" type="12" value="" out="Y"/>
			</params>
		</query>
	</querys>
</sqls>
