<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BLDocumentationBLDBDAOsearchkeywordByBkg2RSQL">
			<desc><![CDATA[BLDocumentationBLDBDAOsearchkeywordByBkgRSQL

KW_INCL_FLG가 Y일때와 아닐 때를 구분해 검색한 후, Union으로 
합쳐서 등급이 가장 높은 위험물 seq를 반환 ]]></desc>
			<sql><![CDATA[
SELECT 
DISTINCT NON_DCGO_KW_SEQ
  FROM (
SELECT KW.NON_DCGO_KW_SEQ
      ,RANK() OVER (PARTITION BY BKG.BKG_NO ORDER BY KW.NON_DCGO_CATE_GRP_CD) RNK
    FROM (SELECT /*+NO_MERGE*/ BKG.BKG_NO
              ,REGEXP_REPLACE(' '|| BKG.INTER_RMK || ' ', '[[:space:]]{2,}', ' ') AS INTER_RMK
              ,REGEXP_REPLACE(' '|| BKG.XTER_RMK || ' ', '[[:space:]]{2,}', ' ') AS XTER_RMK
              ,REGEXP_REPLACE(' '|| DOC.CSTMS_DESC || ' ', '[[:space:]]{2,}', ' ') AS CSTMS_DESC
              ,REGEXP_REPLACE(' '|| BKG.NEW_CUST_APRO_CMDT_NM || ' ', '[[:space:]]{2,}', ' ') AS NEW_CUST_APRO_CMDT_NM
              ,REGEXP_REPLACE(' '|| BKG.NEW_CUST_APRO_RMK || ' ', '[[:space:]]{2,}', ' ') AS NEW_CUST_APRO_RMK                
           FROM BKG_BOOKING BKG
               ,BKG_BL_DOC DOC
           WHERE BKG.BKG_NO = @[bkg_no]
            AND BKG.BKG_NO = DOC.BKG_NO
         )BKG
         ,(SELECT NON_DCGO_KW_NM,DELT_FLG,NON_DCGO_CATE_GRP_CD,NON_DCGO_KW_SEQ FROM SCG_NON_DG_CGO_KW WHERE KW_INCL_FLG IS NULL) KW
   WHERE (
            BKG.INTER_RMK LIKE '% ' || KW.NON_DCGO_KW_NM || ' %'  
          OR BKG.XTER_RMK LIKE '% ' || KW.NON_DCGO_KW_NM || ' %' 
          OR bkg.CSTMS_DESC LIKE '% ' || KW.NON_DCGO_KW_NM || ' %' 
          OR BKG.NEW_CUST_APRO_CMDT_NM LIKE '% ' || KW.NON_DCGO_KW_NM || ' %'
          OR BKG.NEW_CUST_APRO_RMK LIKE '% ' || KW.NON_DCGO_KW_NM || ' %'
          )
     AND KW.DELT_FLG = 'N'

UNION
     SELECT KW.NON_DCGO_KW_SEQ
      ,RANK() OVER (PARTITION BY BKG.BKG_NO ORDER BY KW.NON_DCGO_CATE_GRP_CD) RNK
    from (SELECT /*+ NO_MERGE */ BKG.BKG_NO           
              ,REGEXP_REPLACE(' '|| MK.CMDT_DESC|| ' ', '[[:space:]]{2,}', ' ') AS CMDT_DESC
          FROM BKG_BOOKING BKG
              ,BKG_BL_MK_DESC MK 
          WHERE BKG.BKG_NO = @[bkg_no]
           AND BKG.BKG_NO = MK.BKG_NO
         )BKG
         ,(SELECT NON_DCGO_KW_NM,DELT_FLG,NON_DCGO_CATE_GRP_CD,NON_DCGO_KW_SEQ FROM SCG_NON_DG_CGO_KW WHERE KW_INCL_FLG IS NULL) KW
   where (
           BKG.CMDT_DESC LIKE '% ' || KW.NON_DCGO_KW_NM || ' %'
          )
     AND KW.DELT_FLG = 'N' 
#if (${cntr_no} != '')     
UNION
     SELECT KW.NON_DCGO_KW_SEQ
      ,RANK() OVER (PARTITION BY BKG.BKG_NO ORDER BY KW.NON_DCGO_CATE_GRP_CD) RNK
    from (SELECT /*+ NO_MERGE */ BKG.BKG_NO           
              ,REGEXP_REPLACE(' '|| MF.CNTR_MF_GDS_DESC || ' ', '[[:space:]]{2,}', ' ') AS CNTR_MF_GDS_DESC
          FROM BKG_BOOKING BKG
              ,BKG_CNTR_MF_DESC MF
          WHERE BKG.BKG_NO = @[bkg_no]
           AND MF.CNTR_NO = @[cntr_no]
           AND BKG.BKG_NO = MF.BKG_NO
         )BKG
         ,(SELECT NON_DCGO_KW_NM,DELT_FLG,NON_DCGO_CATE_GRP_CD,NON_DCGO_KW_SEQ FROM SCG_NON_DG_CGO_KW WHERE KW_INCL_FLG IS NULL) KW
   where (
           BKG.CNTR_MF_GDS_DESC LIKE '% ' || KW.NON_DCGO_KW_NM || ' %'
          )
     AND KW.DELT_FLG = 'N' 
#end
UNION
     
SELECT KW.NON_DCGO_KW_SEQ
      ,RANK() OVER (PARTITION BY BKG.BKG_NO ORDER BY KW.NON_DCGO_CATE_GRP_CD) RNK
    from (
        SELECT /*+ NO_MERGE */ BKG.BKG_NO
              ,REGEXP_REPLACE(' '|| BKG.INTER_RMK || ' ', '[[:space:]]{2,}', ' ') AS INTER_RMK
              ,REGEXP_REPLACE(' '|| BKG.XTER_RMK || ' ', '[[:space:]]{2,}', ' ') AS XTER_RMK
              ,REGEXP_REPLACE(' '|| DOC.CSTMS_DESC || ' ', '[[:space:]]{2,}', ' ') AS CSTMS_DESC
              ,REGEXP_REPLACE(' '||(select  MK.CMDT_DESC from BKG_BL_MK_DESC MK WHERE BKG.BKG_NO = MK.BKG_NO)|| ' ', '[[:space:]]{2,}', ' ') AS CMDT_DESC   
#if (${cntr_no} != '')              
              ,REGEXP_REPLACE(' '|| MF.CNTR_MF_GDS_DESC || ' ', '[[:space:]]{2,}', ' ') AS CNTR_MF_GDS_DESC
#end              
              ,REGEXP_REPLACE(' '|| BKG.NEW_CUST_APRO_CMDT_NM || ' ', '[[:space:]]{2,}', ' ') AS NEW_CUST_APRO_CMDT_NM
              ,REGEXP_REPLACE(' '|| BKG.NEW_CUST_APRO_RMK || ' ', '[[:space:]]{2,}', ' ') AS NEW_CUST_APRO_RMK  
          FROM BKG_BOOKING BKG
              ,BKG_BL_DOC DOC
#if (${cntr_no} != '')               
              ,BKG_CNTR_MF_DESC MF
#end              
          WHERE BKG.BKG_NO = @[bkg_no]
           AND BKG.BKG_NO = DOC.BKG_NO
#if (${cntr_no} != '')           
           AND MF.CNTR_NO = @[cntr_no]
           AND BKG.BKG_NO = MF.BKG_NO
#end               
         )BKG
         ,(SELECT NON_DCGO_KW_NM,DELT_FLG,NON_DCGO_CATE_GRP_CD,NON_DCGO_KW_SEQ FROM SCG_NON_DG_CGO_KW WHERE KW_INCL_FLG = 'Y') KW
   where (
            BKG.INTER_RMK LIKE '%'||KW.NON_DCGO_KW_NM||'%'  
          OR BKG.XTER_RMK LIKE '%'||KW.NON_DCGO_KW_NM||'%' 
          OR bkg.CSTMS_DESC LIKE '%'||KW.NON_DCGO_KW_NM||'%' 
          OR bkg.CMDT_DESC LIKE '%'||KW.NON_DCGO_KW_NM||'%' 
#if (${cntr_no} != '')          
          OR BKG.CNTR_MF_GDS_DESC LIKE '%'||KW.NON_DCGO_KW_NM||'%'
#end           
          OR BKG.NEW_CUST_APRO_CMDT_NM LIKE '%'||KW.NON_DCGO_KW_NM||'%'
          OR BKG.NEW_CUST_APRO_RMK LIKE '%'||KW.NON_DCGO_KW_NM||'%'

          )
     AND KW.DELT_FLG = 'N'
     )
WHERE RNK = 1			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="cntr_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
