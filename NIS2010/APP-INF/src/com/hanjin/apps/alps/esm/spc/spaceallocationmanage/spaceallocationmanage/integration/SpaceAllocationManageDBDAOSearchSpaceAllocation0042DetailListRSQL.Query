<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOSearchSpaceAllocation0042DetailListRSQL">
			<desc><![CDATA[SpaceAllocationManage의 데이타 모델에 해당되는 값을 불러온다.
--2014.08월 이전 주석 쿼리안으로 이동
2015.03.04 김성욱 [CHM-201534435] SQM QTA주가 변경 관련 적용 요청
2015.06.11 김성욱 [CHM-201535211] SPC BKG 연동
2015.06.24 이혜민 [CHM-201535810] Fixed Rate 계약 정보의 SPC 적용 개발 요청
2015.07.03 이혜민 [CHM-201536633] Control Option management 보완요청 (Fixed Rate관련)
2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL
2015.09.11 최성민[CHM-201537981] Yard인식에 따른 부킹 누락 보완 요청
2016.05.18 최성민 Double Callling Route(Port/Tmnl)에 대한 물량집계 및 병목상 Logic 보완 사항 요청
2016.07.05 CHM-201642241 VGM(BKG상 표시되는 또 다른 WGT 정보) 도입 관련 SPC 사항]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (
    SELECT @[year]              AS YEAR      , 
           @[week]              AS WEEK      ,
           o.ofc_cd             AS OFC_CD    ,
           @[lane]              AS RLANE_CD  ,
           @[bound]             AS DIR_CD    ,
           SUBSTR(@[vvd], 0, 4) AS VSL_CD    ,
           SUBSTR(@[vvd], 5, 4) AS SKD_VOY_NO,
           SUBSTR(@[vvd], 9)    AS SKD_DIR_CD,
           l.conti_cd           AS OFC_CONTI ,
           @[fcast]             AS STS,
           @[all_pol]           as all_pol
      FROM MDM_LOCATION     L,
           MDM_ORGANIZATION O
     WHERE L.LOC_CD = O.LOC_CD
#if (${user_ofc} == 'SZPDC')
       AND O.OFC_CD = @[user_ofc]
#else
	#if (${office} == '')
       AND O.OFC_CD = 'SHARC'
	#else
       AND O.OFC_CD = @[office]
	#end
#end
)
, EGYPT_OFFICE AS (
    SELECT A1.OFC_CD
      FROM MDM_ORGANIZATION A1,
           MDM_LOCATION     A2
     WHERE A2.CNT_CD   = 'EG'
       AND A1.DELT_FLG = 'N'
       AND A2.DELT_FLG = 'N'
       AND A1.OFC_CD   = A2.SLS_OFC_CD
  GROUP BY OFC_CD
)

--2014.08.13 all_pol관련 option table 추가
#if (${all_pol} == 'Y')
, CONTROL_OPT AS(
	SELECT DISTINCT
	       A.REP_TRD_CD,
           A.REP_SUB_TRD_CD,
           A.RLANE_CD,
           A.DIR_CD,
           D.ALOC_CTRL_TP_CD,
           D.CTRL_LOC_ACCT_CD,
           A.CTRL_DEST_LVL_CD
  	  FROM SPC_ALOC_CTRL_OPT A,
           SPC_ALOC_LANE_CTRL_OPT_DTL D
	WHERE A.RLANE_CD     = D.RLANE_CD
   	AND A.REP_TRD_CD     = D.TRD_CD
	AND A.REP_SUB_TRD_CD = D.SUB_TRD_CD
	AND A.SKD_DIR_CD     = D.DIR_CD 
	-- 2015.02.16 LOC flag제거/ECC GROUP추가
	AND (DECODE(A.CTRL_ECC_FLG,'Y', 'E', DECODE(CTRL_ECC_GRP_FLG, 'Y', 'G', 'X')) = D.ALOC_CTRL_TP_CD OR
	-- 2014.11.24 Account control 추가
           ( A.CTRL_ACCT_FLG = 'Y' OR D.ALOC_CTRL_TP_CD IN ('A', 'B', 'C')))
	AND A.RLANE_CD       = @[lane]
	AND A.VSL_CD     = SUBSTR(@[vvd], 0, 4)
	AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
	AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9)
 UNION ALL
	SELECT A.REP_TRD_CD,
           A.REP_SUB_TRD_CD,
           A.RLANE_CD,
           A.DIR_CD,
           'A',
           'OTHERS', 
           ''
     FROM SPC_ALOC_CTRL_OPT A
     WHERE A.RLANE_CD       = @[lane]
       AND A.VSL_CD     = SUBSTR(@[vvd], 0, 4)
       AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
       AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9)
 UNION ALL
	SELECT DISTINCT REP_TRD_CD, 
                    REP_SUB_TRD_CD, 
                    RLANE_CD, 
                    DIR_CD, 
                    CTRL_CNT_FLG, 
                    CTRL_LOC_ACCT_CD, 
                    CTRL_DEST_LVL_CD
    FROM 
		(
          SELECT A.REP_TRD_CD,A.REP_SUB_TRD_CD,A.RLANE_CD,A.DIR_CD,
                'L' AS CTRL_CNT_FLG, 'OTHERS' AS CTRL_LOC_ACCT_CD, '' AS CTRL_DEST_LVL_CD
          FROM SPC_ALOC_CTRL_OPT A
          WHERE A.RLANE_CD       = @[lane]
            AND A.VSL_CD     = SUBSTR(@[vvd], 0, 4)
            AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
            AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9)
	  UNION ALL
-- USA mode의 경우 'OTHERS'는 항상 나머지 두 개 OPTION은 CTRL_USA_SVC_MOD_FLG가 Y인 경우에만
          SELECT A.REP_TRD_CD,A.REP_SUB_TRD_CD,A.RLANE_CD,A.DIR_CD,
                'U' , 'OTHERS', ''
           FROM SPC_ALOC_CTRL_OPT A
           WHERE A.RLANE_CD       = @[lane]
            AND A.VSL_CD     = SUBSTR(@[vvd], 0, 4)
            AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
            AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9)
      UNION ALL
         SELECT A.REP_TRD_CD,A.REP_SUB_TRD_CD,A.RLANE_CD,A.DIR_CD,
                'U' , 'IPI', ''
           FROM SPC_ALOC_CTRL_OPT A
          WHERE A.RLANE_CD       = @[lane]
            AND A.VSL_CD     = SUBSTR(@[vvd], 0, 4)
            AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
            AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9) 
            AND A.CTRL_USA_SVC_MOD_FLG = 'Y'
      UNION ALL
         SELECT A.REP_TRD_CD,A.REP_SUB_TRD_CD,A.RLANE_CD,A.DIR_CD,
                'U' , 'LOCAL', ''
          FROM SPC_ALOC_CTRL_OPT A
         WHERE A.RLANE_CD       = @[lane]
           AND A.VSL_CD     = SUBSTR(@[vvd], 0, 4)
           AND A.SKD_VOY_NO = SUBSTR(@[vvd], 5, 4)
           AND A.SKD_DIR_CD = SUBSTR(@[vvd], 9)
           AND A.CTRL_USA_SVC_MOD_FLG = 'Y'
        ))
#end

, REP_VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON,
           V.SLS_YRMON,
           V.COST_WK             ,
           V.VSL_CD              ,
           V.SKD_VOY_NO          ,
           V.DIR_CD SKD_DIR_CD   ,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           P.OFC_CD              ,
           P.OFC_CONTI           ,
           P.STS                 ,
           (
--              SELECT NVL(MAX(CO.CTRL_LVL_CD), 'L')
--                FROM SPC_ALOC_CTRL_OPT CO
--               WHERE CO.RLANE_CD   = P.RLANE_CD
--                 AND CO.DIR_CD     = P.SKD_DIR_CD
--                 AND CO.VSL_CD     = P.VSL_CD
--                 AND CO.SKD_VOY_NO = P.SKD_VOY_NO
--                 AND CO.SKD_DIR_CD = P.SKD_DIR_CD
           -- 2014.08.04 변경
                SELECT 
                DECODE(NVL(MAX(CO.CTRL_LVL_CD), 'L'), 'O', DECODE(NVL(MAX(CO.CTRL_ACCT_FLG), 'N'),'Y','A',
                                              DECODE(NVL(MAX(CO.CTRL_USA_SVC_MOD_FLG), 'N'),'Y','U','O')),
                                                 NVL(MAX(CO.CTRL_LVL_CD), 'L')) 
                FROM SPC_ALOC_CTRL_OPT CO
               WHERE CO.RLANE_CD   = P.RLANE_CD
                 AND CO.DIR_CD     = P.SKD_DIR_CD
                 AND CO.VSL_CD     = P.VSL_CD
                 AND CO.SKD_VOY_NO = P.SKD_VOY_NO
                 AND CO.SKD_DIR_CD = P.SKD_DIR_CD
           ) AS CTRL_LVL, 
           -- 2014.08.07 추가 
           --NVL(DECODE(A.CTRL_ECC_FLG,'Y','E',DECODE(A.CTRL_ECC_GRP_FLG, 'Y', 'G', 'N')),'N') AS CTRL_DEST, -- C = COUNTRY, L = LOCATION
		   DECODE(NVL(A.CTRL_LVL_CD, 'N') ,'T', NVL(DECODE(A.CTRL_ECC_FLG,'Y','E',DECODE(A.CTRL_ECC_GRP_FLG,'Y','G','N')),'N'), 'N' )AS CTRL_DEST, -- C = COUNTRY, L = LOCATION
           NVL(A.CTRL_DEST_LVL_CD, 'N')     AS CTRL_DEST_LVL , -- D = BKG_POD, T = BKG_DEL
           NVL(A.CTRL_USA_SVC_MOD_FLG, 'N') AS CTRL_USA, -- Y = LOCAL/IPI
           NVL(A.CTRL_ACCT_FLG, 'N')        AS CTRL_ACCOUNT,
           NVL(A.CTRL_FX_RT_FLG, 'N')       AS CTRL_FX_RT_FLG

         , SUBSTR(V.COST_YRMON, 1, 4) AS BSE_YR
         , CASE WHEN V.COST_YRMON >= '201501' 
                THEN CEIL(TO_NUMBER(SUBSTR(V.COST_YRMON, -2))/3)||'Q' 
                ELSE CEIL(TO_NUMBER(DECODE(V.COST_WK,'00','01','53','52',V.COST_WK))/13)||'Q'
           END BSE_QTR_CD,     -- 2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청       
           V.N1ST_LODG_PORT_ETD_DT AS FL_ETD_DT  
      FROM MAS_MON_VVD V,
           PARAMS      P,
           -- 2014.08.07 추가 
           SPC_ALOC_CTRL_OPT A
     WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND V.RLANE_CD   = P.RLANE_CD
       AND V.VSL_CD     = P.VSL_CD
       AND V.SKD_VOY_NO = P.SKD_VOY_NO
       AND V.DIR_CD     = P.SKD_DIR_CD
       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1
                                                                 FROM MAS_MON_VVD N
                                                                WHERE N.RLANE_CD   = V.RLANE_CD -- 2012.12.07 SLANE_CD를 RLANE_CD로 변경
                                                                  AND N.VSL_CD     = V.VSL_CD
                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO
                                                                  AND N.DIR_CD     = V.DIR_CD
                                                                  AND N.DELT_FLG   = 'N'))
       
       AND A.RLANE_CD  (+) = P.RLANE_CD
       AND A.DIR_CD    (+) = P.DIR_CD
       AND A.VSL_CD    (+) = P.VSL_CD
       AND A.SKD_VOY_NO(+) = P.SKD_VOY_NO
       AND A.SKD_DIR_CD(+) = P.SKD_DIR_CD 
)
, CTRT_OPT_DTL AS (
-- SPC_ALOC_LANE_CTRL_OPT_DTL 테이블의 계약 정보를 가지고 온다.
SELECT DISTINCT  
       A2.TRD_CD
      ,A2.SUB_TRD_CD
      ,A2.RLANE_CD
      ,A2.DIR_CD
      ,A2.ALOC_CTRL_TP_CD
      ,A2.CTRL_LOC_ACCT_CD
      ,A1.FL_ETD_DT
  FROM REP_VVDS A1
      ,SPC_ALOC_LANE_CTRL_OPT_DTL A2
 WHERE 1=1
   AND A1.REP_TRD_CD       = A2.TRD_CD
   AND A1.REP_SUB_TRD_CD   = A2.SUB_TRD_CD
   AND A1.RLANE_CD         = A2.RLANE_CD
   AND A1.DIR_CD           = A2.DIR_CD
   AND A1.CTRL_ACCOUNT     = 'Y'
   AND A1.CTRL_FX_RT_FLG   = 'Y'
   AND A2.CTRL_FX_RT_FLG   = 'Y'
   AND A2.ALOC_CTRL_TP_CD  = 'F'

)
, CTRT_DTL_INFO AS (
    SELECT  
           A5.TRD_CD
          ,A5.SUB_TRD_CD
          ,A5.RLANE_CD
          ,A5.DIR_CD
          ,A5.ALOC_CTRL_TP_CD
          ,A5.CTRL_LOC_ACCT_CD 
          ,A1.PROP_NO
          ,A2.AMDT_SEQ
          ,A3.SVC_SCP_CD
          ,A4.GEN_SPCL_RT_TP_CD
          ,A4.CMDT_HDR_SEQ
          ,A2.REAL_CUST_CNT_CD || LPAD(A2.REAL_CUST_SEQ,'6','0') CUST_CD
          ,A4.FX_RT_FLG
          ,A2.EFF_DT
          ,A2.EXP_DT
          ,A2.PROP_STS_CD
      FROM CTRT_OPT_DTL A5
          ,PRI_SP_HDR A1
          ,PRI_SP_MN  A2
          ,PRI_SP_SCP_MN A3
          ,PRI_SP_SCP_RT_CMDT_HDR A4 
     WHERE 1=1
       AND A1.SC_NO             = A5.CTRL_LOC_ACCT_CD
       AND A1.PROP_NO           = A2.PROP_NO
       AND A2.PROP_STS_CD       = 'F' -- A, F, Q
       AND TRUNC(A5.FL_ETD_DT) BETWEEN A2.EFF_DT AND A2.EXP_DT
       AND A2.PROP_NO           = A3.PROP_NO
       AND A2.AMDT_SEQ          = A3.AMDT_SEQ
       AND A3.PROP_NO           = A4.PROP_NO
       AND A3.AMDT_SEQ          = A4.AMDT_SEQ
       AND A3.SVC_SCP_CD        = A4.SVC_SCP_CD
       AND NVL(A4.FX_RT_FLG,'N')= 'Y'
     )
, ALOC_LANE_CTRL_OPT_DTL AS (
SELECT DISTINCT B1.TRD_CD
      ,B1.SUB_TRD_CD
      ,B1.RLANE_CD
      ,B1.DIR_CD
--      ,B1.ALOC_CTRL_TP_CD
--      ,B3.ALOC_CTRL_TP_CD
      ,NVL(B3.ALOC_CTRL_TP_CD, B1.ALOC_CTRL_TP_CD) AS ALOC_CTRL_TP_CD
      ,B1.CTRL_LOC_ACCT_CD
      ,B1.SC_NO
      ,B1.RFA_NO
      ,NVL(B3.ALOC_CTRL_DTL_CD, B1.ALOC_CTRL_DTL_CD) AS ALOC_CTRL_DTL_CD
  FROM 
       SPC_ALOC_LANE_CTRL_OPT_DTL B1
      ,REP_VVDS B2
      ,(
        -- Actual Account 정보 추출
        SELECT distinct
               A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,'B' AS ALOC_CTRL_TP_CD
              ,A1.ALOC_CTRL_TP_CD AS ORG_ALOC_CTRL_TP_CD-- B : A/Acct, C : Commodity, F : Fixed
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,A2.CUST_CNT_CD || LPAD(A2.CUST_SEQ,'6','0') AS ALOC_CTRL_DTL_CD
          FROM CTRT_DTL_INFO A1
              ,PRI_SP_SCP_RT_ACT_CUST A2
         WHERE 1=1
           AND A1.PROP_NO           = A2.PROP_NO
           AND A1.AMDT_SEQ          = A2.AMDT_SEQ
           AND A1.SVC_SCP_CD        = A2.SVC_SCP_CD
           AND A1.GEN_SPCL_RT_TP_CD = A2.GEN_SPCL_RT_TP_CD
           AND A1.CMDT_HDR_SEQ      = A2.CMDT_HDR_SEQ
        UNION ALL
        -- CMDT 정보 추출
        SELECT distinct
               A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,'C' AS ALOC_CTRL_TP_CD
              ,A1.ALOC_CTRL_TP_CD AS ORG_ALOC_CTRL_TP_CD -- B : A/Acct, C : Commodity, F : Fixed
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,DECODE(A2.PRC_CMDT_TP_CD,'C', A2.PRC_CMDT_DEF_CD, 'G', A4.PRC_CMDT_DEF_CD) AS ALOC_CTRL_DTL_CD
          FROM CTRT_DTL_INFO A1
              ,PRI_SP_SCP_RT_CMDT     A2
              ,PRI_SP_SCP_GRP_CMDT    A3
              ,PRI_SP_SCP_GRP_CMDT_DTL A4  
         WHERE 1=1
           AND A1.PROP_NO           = A2.PROP_NO
           AND A1.AMDT_SEQ          = A2.AMDT_SEQ
           AND A1.SVC_SCP_CD        = A2.SVC_SCP_CD
           AND A1.GEN_SPCL_RT_TP_CD = A2.GEN_SPCL_RT_TP_CD
           AND A1.CMDT_HDR_SEQ      = A2.CMDT_HDR_SEQ
           AND A2.SRC_INFO_CD       <> 'AD'

           AND A2.PROP_NO           = A3.PROP_NO(+)
           AND A2.AMDT_SEQ          = A3.AMDT_SEQ(+)
           AND A2.SVC_SCP_CD        = A3.SVC_SCP_CD(+)
           AND A2.PRC_CMDT_DEF_CD   = A3.PRC_GRP_CMDT_CD(+)
           
           AND A3.PROP_NO           = A4.PROP_NO(+)
           AND A3.AMDT_SEQ          = A4.AMDT_SEQ(+)
           AND A3.SVC_SCP_CD        = A4.SVC_SCP_CD(+)
           AND A3.GRP_CMDT_SEQ      = A4.GRP_CMDT_SEQ(+)   
           AND A4.SRC_INFO_CD(+)    <> 'AD'
         GROUP BY A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,A1.ALOC_CTRL_TP_CD
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,DECODE(A2.PRC_CMDT_TP_CD,'C', A2.PRC_CMDT_DEF_CD, 'G', A4.PRC_CMDT_DEF_CD)       
       ) B3
 WHERE 1=1
   AND B2.REP_TRD_CD       = B1.TRD_CD
   AND B2.REP_SUB_TRD_CD   = B1.SUB_TRD_CD
   AND B2.RLANE_CD         = B1.RLANE_CD
   AND B2.DIR_CD           = B1.DIR_CD
   AND B1.TRD_CD           = B3.TRD_CD(+)
   AND B1.SUB_TRD_CD       = B3.SUB_TRD_CD(+)
   AND B1.RLANE_CD         = B3.RLANE_CD(+)
   AND B1.DIR_CD           = B3.DIR_CD(+)
   AND B1.ALOC_CTRL_TP_CD  = B3.ORG_ALOC_CTRL_TP_CD(+)
   AND B1.CTRL_LOC_ACCT_CD = B3.CTRL_LOC_ACCT_CD(+)
    )
, VSL_PORT_SKD AS (
    SELECT V.REP_TRD_CD    ,
           V.REP_SUB_TRD_CD,
           V.RLANE_CD      ,
           V.DIR_CD        ,
           V.COST_YR       ,
           V.COST_MON      ,
           V.COST_WK       ,
           V.VSL_CD        ,
           V.SKD_VOY_NO    ,
           V.SKD_DIR_CD    ,
           VPS.VPS_PORT_CD ,
           VPS.YD_CD AS PORT_CD,
           VPS.CALL_YD_IND_SEQ, 
           VPS.CLPT_SEQ         AS PORT_SEQ,
           VPS.TURN_PORT_IND_CD AS PORT_IND,
           SPC_CONTI_CONV_FNC(L.CONTI_CD, V.RLANE_CD, V.DIR_CD) AS CONTI_CD,
           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD)), -1, 'Y', 'N') AS PORT_PAST,
           VPS.VPS_ETA_DT AS ETA_DT,
           VPS.VPS_ETD_DT AS ETD_DT,
           V.LST_LODG_PORT_CD      ,
           V.LST_LODG_PORT_ETD_DT  ,
           V.OFC_CD                ,
           V.OFC_CONTI             ,
           V.STS                   ,
           V.BSE_YR ,
           V.BSE_QTR_CD ,

           DECODE(VPS.SKD_CNG_STS_CD, 'S', 1, 0) AS SKIPPED,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MAX_SEQ,
           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MIN_SEQ,
           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ,
           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT,
           VPS.SKD_CNG_STS_CD
      FROM MDM_LOCATION     L  ,
           VSK_VSL_PORT_SKD VPS,
           REP_VVDS         V
     WHERE L.LOC_CD       = VPS.VPS_PORT_CD
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
)
, VVD_POL_POD AS (
    SELECT A.REP_TRD_CD          ,
           A.REP_SUB_TRD_CD      ,
           A.RLANE_CD            ,
           A.DIR_CD              ,
           TRD_CD              ,
           SUB_TRD_CD          ,
           COST_YR             ,
           COST_MON            ,
           COST_WK             ,
           VSL_CD              ,
           SKD_VOY_NO          ,
           SKD_DIR_CD          ,
           POL_CD              ,
           POL_SEQ             ,
           POL_CONTI           ,
           POL_PAST            ,
           POL_ETA_DT          ,
           POL_ETD_DT          ,
           POD_CD              ,
           POD_SEQ             ,
           POD_CONTI           ,
           POD_PAST            ,
           POD_ETA_DT          ,
           POD_ETD_DT          ,
           IOC_CD              ,
           PAST                ,
           LST_LODG_PORT_CD    ,
           LST_LODG_PORT_ETD_DT,
           OFC_CD              ,
           OFC_CONTI           ,
           STS                 ,
           POL_SKIP            ,
           POD_SKIP            ,
           LD_PORT             ,
           PL_PORT_CNT         ,
           PD_PORT_CNT         ,
           BSE_YR              ,
           BSE_QTR_CD          ,
           PL_VPS_PORT_CD      , 
           PD_VPS_PORT_CD      ,                
           PL_CLPT_IND_SEQ     ,        
           PD_CLPT_IND_SEQ     ,        
           PL_SKD_CNG_STS_CD   , 
           PL_PD_PORT_CNT      ,
	   
           MAX(PL_PORT_CNT) OVER (PARTITION BY POL_CD) AS MAX_POL_PORT_SEQ,
           MAX(PD_PORT_CNT) OVER (PARTITION BY POD_CD) AS MAX_POD_PORT_SEQ,
           POL_YD_SEQ,
           POD_YD_SEQ
      FROM (
              SELECT REP_TRD_CD          ,
                     REP_SUB_TRD_CD      ,
                     RLANE_CD            ,
                     DIR_CD              ,
                     TRD_CD              ,
                     SUB_TRD_CD          ,
                     COST_YR             ,
                     COST_MON            ,
                     COST_WK             ,
                     VSL_CD              ,
                     SKD_VOY_NO          ,
                     SKD_DIR_CD          ,
                     POL_CD,POL_SEQ      ,
                     POL_CONTI           ,
                     POL_PAST            ,
                     POL_ETA_DT          ,
                     POL_ETD_DT          ,
                     POD_CD              ,
                     POD_SEQ             ,
                     POD_CONTI           ,
                     POD_PAST            ,
                     POD_ETA_DT          ,
                     POD_ETD_DT          ,
                     IOC_CD              ,
                     PAST                ,
                     LST_LODG_PORT_CD    ,
                     LST_LODG_PORT_ETD_DT,
                     OFC_CD              ,
                     OFC_CONTI           ,
                     STS                 ,
                     POL_SKIP            ,
                     POD_SKIP            ,
                     LD_PORT             ,
                     PL_PORT_CNT         ,
                     PD_PORT_CNT         ,
                     PL_PD_PORT_CNT      , 
                     BSE_YR              , 
                     BSE_QTR_CD          , 
                     PL_VPS_PORT_CD      , 
                     PD_VPS_PORT_CD      ,                
                     PL_CLPT_IND_SEQ     ,        
                     PD_CLPT_IND_SEQ     ,   
                     POL_YD_SEQ          , 
                     POD_YD_SEQ          , 
                     PL_SKD_CNG_STS_CD   ,
                     MAX(PL_PD_PORT_CNT) OVER (PARTITION BY PL_VPS_PORT_CD,PL_CLPT_IND_SEQ,PD_VPS_PORT_CD,PD_CLPT_IND_SEQ 
                                                   ORDER BY PL_VPS_PORT_CD,PL_CLPT_IND_SEQ,PD_VPS_PORT_CD,PD_CLPT_IND_SEQ ) AS PL_PD_PORT_MAX
                FROM (
                        SELECT PL.REP_TRD_CD    ,
                               PL.REP_SUB_TRD_CD,
                               PL.RLANE_CD      ,
                               PL.DIR_CD        ,
                               DRL.TRD_CD       ,
                               DRL.SUB_TRD_CD   ,
                               PL.COST_YR       ,
                               PL.COST_MON      ,
                               PL.COST_WK       ,
                               PL.VSL_CD        ,
                               PL.SKD_VOY_NO    ,
                               PL.SKD_DIR_CD    ,
                               PL.PORT_CD         AS POL_CD    ,
                               MAX(PL.PORT_SEQ)   AS POL_SEQ   ,
                               PL.CONTI_CD        AS POL_CONTI ,
                               MIN(PL.PORT_PAST)  AS POL_PAST  ,
                               PL.ETA_DT          AS POL_ETA_DT,
                               PL.ETD_DT          AS POL_ETD_DT,
                               PD.PORT_CD         AS POD_CD    ,

                               PL.VPS_PORT_CD     AS PL_VPS_PORT_CD , 
                               PD.VPS_PORT_CD     AS PD_VPS_PORT_CD , 
                               PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ , 
                               PD.CLPT_IND_SEQ    AS PD_CLPT_IND_SEQ, 
                               PL.SKD_CNG_STS_CD  AS PL_SKD_CNG_STS_CD, 
                               PL.CALL_YD_IND_SEQ AS POL_YD_SEQ, 
                               PD.CALL_YD_IND_SEQ AS POD_YD_SEQ, 

                               (CASE
                                     WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)
                                     ELSE CASE
                                     	  	WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)
                                          END
                                 END) AS POD_SEQ ,
                               PD.CONTI_CD       AS POD_CONTI ,
                               MIN(PD.PORT_PAST) AS POD_PAST  ,
                               PD.ETA_DT         AS POD_ETA_DT,
                               PD.ETD_DT         AS POD_ETD_DT,
                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD,
                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ,
                               PL.LST_LODG_PORT_CD    ,
                               PL.LST_LODG_PORT_ETD_DT,
                               PL.OFC_CD              ,
                               PL.OFC_CONTI           ,
                               PL.STS                 ,
                               PL.SKIPPED  AS POL_SKIP,
                               PD.SKIPPED  AS POD_SKIP,
                               SUBSTR(( SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)
                                          FROM VSL_PORT_SKD S1
                                         WHERE S1.SKIPPED <> 1), 4) AS LD_PORT,
                               PL.PORT_CNT AS PL_PORT_CNT,
                               PD.PORT_CNT AS PD_PORT_CNT,
                               PL.BSE_YR ,
                               PL.BSE_QTR_CD ,
                               ROW_NUMBER()OVER (PARTITION BY PL.PORT_CD,PD.PORT_CD ORDER BY PL.PORT_CD,PD.PORT_CD) AS PL_PD_PORT_CNT
                          FROM MDM_DTL_REV_LANE DRL,
                               VSL_PORT_SKD     PD ,
                               VSL_PORT_SKD     PL
                         WHERE DRL.RLANE_CD        = PL.RLANE_CD
                           AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD
                           AND DRL.FM_CONTI_CD     = PL.CONTI_CD
                           AND DRL.TO_CONTI_CD     = PD.CONTI_CD
                           AND PD.REP_TRD_CD       = PL.REP_TRD_CD
                           AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD
                           AND PD.RLANE_CD         = PL.RLANE_CD
                           AND PD.VSL_CD           = PL.VSL_CD 
                           AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO
                           AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD
                           AND PD.PORT_CD         <> PL.PORT_CD
                           AND PD.PORT_SEQ         > PL.PORT_SEQ
                           AND (    PL.PORT_SEQ = DECODE(PD.CONTI_CD, PL.CONTI_CD, PL.MIN_SEQ, PL.MAX_SEQ)  --  단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두
                                 OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING
                      GROUP BY 
                               PL.REP_TRD_CD    ,
                               PL.REP_SUB_TRD_CD,
                               PL.RLANE_CD      ,
                               PL.DIR_CD        ,
                               DRL.TRD_CD       ,
                               DRL.SUB_TRD_CD   ,
                               PL.COST_YR       ,
                               PL.COST_MON      ,
                               PL.COST_WK       ,
                               PL.VSL_CD        ,
                               PL.SKD_VOY_NO    ,
                               PL.SKD_DIR_CD    ,
                               PL.PORT_CD       ,
                               PL.CONTI_CD      ,
                               PD.PORT_CD       ,
                               PD.CONTI_CD      ,
                               PL.SKIPPED       ,
                               PD.SKIPPED       ,
                               PL.ETA_DT        ,
                               PL.ETD_DT        ,
                               PD.ETA_DT        ,
                               PD.ETD_DT        ,
                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')           ,
                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y'),
                               PL.LST_LODG_PORT_CD    ,
                               PL.LST_LODG_PORT_ETD_DT,
                               PL.OFC_CD              ,
                               PL.OFC_CONTI           ,
                               PL.STS                 ,
                               PL.VPS_PORT_CD  , 
                               PD.VPS_PORT_CD  , 
                               PL.CLPT_IND_SEQ , 
                               PD.CLPT_IND_SEQ , 
                               PL.SKD_CNG_STS_CD,
                               PL.PORT_CNT ,
                               PD.PORT_CNT,
                               PL.BSE_YR ,
                               PL.BSE_QTR_CD,
                               PL.CALL_YD_IND_SEQ, 
                               PD.CALL_YD_IND_SEQ 
                     )
           ) A
     WHERE A.PL_PD_PORT_CNT = PL_PD_PORT_MAX
)

, DB_CALL_VVD AS (
     -- DOUBLE CALLING 유무
  SELECT CASE WHEN MAX(DBL_CALL_SEQ) > 1 THEN  'Y' ELSE 'N' END AS POL_DBL_PORT_CHK
    FROM ( -- 반드시 COUNT(*)로 처리
     SELECT COUNT(*) OVER (PARTITION BY B.VPS_PORT_CD) DBL_CALL_SEQ
       FROM PARAMS A
          , VSK_VSL_PORT_SKD B
      WHERE A.VSL_CD     = B.VSL_CD
        AND A.SKD_VOY_NO = B.SKD_VOY_NO
        AND A.SKD_DIR_CD = B.SKD_DIR_CD
        AND NVL(B.SKD_CNG_STS_CD,'X') <> 'S')
)

, VVDS AS (
    SELECT DISTINCT
           REP_TRD_CD          ,
           REP_SUB_TRD_CD      ,
           RLANE_CD            ,
           DIR_CD              ,
           TRD_CD              ,
           SUB_TRD_CD          ,
           COST_YR             ,
           COST_MON            ,
           COST_WK             ,
           VSL_CD              ,
           SKD_VOY_NO          ,
           SKD_DIR_CD          ,
           IOC_CD              ,
           LST_LODG_PORT_CD    ,
           LST_LODG_PORT_ETD_DT,
           OFC_CD              ,
           OFC_CONTI           ,
           STS ,
           BSE_YR ,
           BSE_QTR_CD 
      FROM VVD_POL_POD VPP
)
, BKG_DATA AS (
    --BOOKING
	SELECT REP_TRD_CD          ,
           REP_SUB_TRD_CD      ,
           TRD_CD              ,
           SUB_TRD_CD          ,
		   RLANE_CD			   ,
           BASE_RHQ_CD         ,
           -- conversion된 Office들이 BKG에 있는경우처리(ex:JKTSC)
           SPC_SCR_OFC_CONV_FNC(SLS_OFC_CD) AS SLS_OFC_CD,
           COST_YR             ,
           COST_WK             ,
           IOC_CD              ,
           US_MOD              ,
           ACCOUNT_CD          ,
           POL_CD              ,
           POD_CD              ,
           DEL_CD              ,
           POL_SEQ             ,
           POD_SEQ             ,
           POL_CONTI           ,
           OFC_CONTI           ,
           POL_SKIP            ,
           POD_SKIP            ,
           PAST                ,
           LST_LODG_PORT_ETD_DT,
           LST_LODG_PORT_CD    ,
           BKG_STS_CD          ,
           ALOC_STS_CD         , --2015.03.12
           (BKG_TTL_QTY)       AS BKG_TTL_QTY    ,
           (BKG_20FT_QTY)      AS BKG_20FT_QTY   ,
           (BKG_40FT_QTY)      AS BKG_40FT_QTY   ,
           (BKG_D2FT_QTY)      AS BKG_D2FT_QTY   ,
           (BKG_D4FT_QTY)      AS BKG_D4FT_QTY   ,
           (BKG_40FT_HC_QTY)   AS BKG_40FT_HC_QTY,
           (BKG_45FT_HC_QTY)   AS BKG_45FT_HC_QTY,
           (BKG_53FT_QTY)      AS BKG_53FT_QTY   ,
           (BKG_RF_QTY)        AS BKG_RF_QTY     ,
           (BKG_RD_QTY)        AS BKG_RD_QTY     ,
           (BKG_TTL_WGT)       AS BKG_TTL_WGT    ,BKG_VOL_VGM,BKG_WGT_VGM,
           CM_OP		       ,
           CM_OC		       ,
           CM_VL		       
      FROM (
		SELECT 	REP_TRD_CD          ,
				REP_SUB_TRD_CD      ,
				TRD_CD              ,
				SUB_TRD_CD          ,
				RLANE_CD		 	,
				BASE_RHQ_CD         ,
				SLS_OFC_CD          ,
				COST_YR             ,
				COST_WK             ,
				IOC_CD              ,
				US_MOD		 		,
				ACCOUNT_CD		 	,
				DEL_CD		 		,
				POL_CD              ,
				POD_CD              ,
				POL_SEQ             ,
				POD_SEQ             ,
				POL_CONTI           ,
				OFC_CONTI           ,
				POL_SKIP            ,
				POD_SKIP            ,
				PAST                ,
				LST_LODG_PORT_ETD_DT,
				LST_LODG_PORT_CD    ,
				BKG_STS_CD          ,
                ALOC_STS_CD         , --2015.03.12
				TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ,
				TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ,
				TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ,
				--2014.07.22
				TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_D2FT_QTY   ,
				TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_D4FT_QTY   ,
				TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_40FT_HC_QTY,
				TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_45FT_HC_QTY,
				TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_53FT_QTY   ,
				TO_NUMBER(NVL(SUBSTR(VAL, 113, 14), 0)) AS BKG_RF_QTY     ,
				TO_NUMBER(NVL(SUBSTR(VAL, 127, 14), 0)) AS BKG_RD_QTY     ,
				TO_NUMBER(NVL(SUBSTR(VAL, 141, 14), 0)) AS BKG_TTL_WGT    ,BKG_VOL_VGM,BKG_WGT_VGM,
				TO_NUMBER(NVL(SUBSTR(CM_VAL,  1, 10), 0)) AS CM_OP	      ,
				TO_NUMBER(NVL(SUBSTR(CM_VAL, 11, 10), 0)) AS CM_OC	      ,
				TO_NUMBER(NVL(SUBSTR(CM_VAL, 21, 10), 0)) AS CM_VL	      
		FROM (
				SELECT VPP.REP_TRD_CD    ,
					   VPP.REP_SUB_TRD_CD,
					   VPP.TRD_CD        ,
					   VPP.SUB_TRD_CD    ,
					   VPP.RLANE_CD		 ,
					   VPP.OFC_CD   AS BASE_RHQ_CD,
					   SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) AS SLS_OFC_CD ,
					   VPP.COST_YR       ,
					   VPP.COST_WK       ,
					   DECODE(BV.VSL_PRE_PST_CD, 'T', VPP.IOC_CD, 'T') AS IOC_CD     ,
					   -- 2014.08.09
					   CASE WHEN M.CTRL_USA = 'Y' AND (SUBSTR(B.POL_CD,1,2) IN ('US','CA') OR SUBSTR(B.POD_CD,1,2) IN ('US','CA')) THEN
					   		NVL(SPC_USA_MODE_FNC(B.RCV_TERM_CD, B.DE_TERM_CD, B.POL_CD, B.POL_CD, B.POD_CD, B.DEL_CD),'OTHERS') 
							ELSE
							'OTHERS'
					   END AS US_MOD,
					   -- 2014.08.14
					   CASE WHEN M.CTRL_ACCOUNT = 'Y' THEN
							NVL((
                               -- A : Individul B: Actual C: Commodity
									SELECT DISTINCT(D.CTRL_LOC_ACCT_CD)
									  FROM ALOC_LANE_CTRL_OPT_DTL D
									 WHERE D.RLANE_CD           = M.RLANE_CD 
									   AND D.TRD_CD             = SPC_GET_REP_TRD_FNC(M.RLANE_CD)
									   AND D.SUB_TRD_CD         = SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD)
									   AND D.DIR_CD             = M.SKD_DIR_CD
									   AND D.ALOC_CTRL_TP_CD    IN ('A','B','C') 
				   					   -- 2015.02.16 control office관련 setting 추가
                                       -- 2015.04.06 office가 입력되지 않은 case는 전체 office에 걸리도록 함.
                                       AND (( SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) IN 
                                          (SELECT OFC.OFC_CD
                                             FROM SPC_ALOC_LANE_CTRL_OFC OFC
                                            WHERE D.RLANE_CD           = OFC.RLANE_CD
                                              AND D.TRD_CD             = OFC.TRD_CD
                                              AND D.SUB_TRD_CD         = OFC.SUB_TRD_CD
                                              AND D.DIR_CD             = OFC.DIR_CD 
                                              AND D.ALOC_CTRL_TP_CD    = OFC.ALOC_CTRL_TP_CD
                                              AND D.CTRL_LOC_ACCT_CD   = OFC.CTRL_LOC_ACCT_CD
                                        ))
                                        OR ( NOT EXISTS 
                                         ( SELECT 1
                                             FROM SPC_ALOC_LANE_CTRL_OFC OFC_ALL
                                            WHERE D.RLANE_CD           = OFC_ALL.RLANE_CD
                                              AND D.TRD_CD             = OFC_ALL.TRD_CD
                                              AND D.SUB_TRD_CD         = OFC_ALL.SUB_TRD_CD
                                              AND D.DIR_CD             = OFC_ALL.DIR_CD 
                                              AND D.ALOC_CTRL_TP_CD    = OFC_ALL.ALOC_CTRL_TP_CD
                                              AND D.CTRL_LOC_ACCT_CD   = OFC_ALL.CTRL_LOC_ACCT_CD
                                            )
                                       )) 
									   -- 2015.02.16 add end
									   AND (D.CTRL_LOC_ACCT_CD = B.SC_NO OR D.CTRL_LOC_ACCT_CD = B.RFA_NO)
									   AND D.ALOC_CTRL_DTL_CD  = DECODE(D.ALOC_CTRL_TP_CD, 'A', B.CTRT_CUST_CNT_CD ||LPAD(B.CTRT_CUST_SEQ,6,'0'),
                                                                                       	   'B', B.AGMT_ACT_CNT_CD ||LPAD(B.AGMT_ACT_CUST_SEQ,6,'0'),
                                                                                           'C', B.CMDT_CD)                                     
                               ),'OTHERS')
                        ELSE
                                'OTHERS'
                        END AS ACCOUNT_CD,
                        CASE WHEN M.CTRL_DEST <> 'N' THEN	                                                      
                            NVL((
                                SELECT DISTINCT(D.CTRL_LOC_ACCT_CD)
                                  FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                                 WHERE D.RLANE_CD			= M.RLANE_CD
                                   AND D.TRD_CD				= SPC_GET_REP_TRD_FNC(M.RLANE_CD)
                                   AND D.SUB_TRD_CD			= SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD)
                                   AND D.DIR_CD 			= M.SKD_DIR_CD       
                                   AND D.ALOC_CTRL_TP_CD	= M.CTRL_DEST
                                   -- 2015.02.16 control office관련 setting 추가
                                   -- 2015.04.06 office가 입력되지 않은 case는 전체 office에 걸리도록 함.
                                   AND (( SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) IN 
                                          (SELECT OFC.OFC_CD
                                             FROM SPC_ALOC_LANE_CTRL_OFC OFC
                                            WHERE D.RLANE_CD           = OFC.RLANE_CD
                                              AND D.TRD_CD             = OFC.TRD_CD
                                              AND D.SUB_TRD_CD         = OFC.SUB_TRD_CD
                                              AND D.DIR_CD             = OFC.DIR_CD 
                                              AND D.ALOC_CTRL_TP_CD    = OFC.ALOC_CTRL_TP_CD
                                              AND D.CTRL_LOC_ACCT_CD   = OFC.CTRL_LOC_ACCT_CD
                                        ))
                                        OR ( NOT EXISTS 
                                         ( SELECT 1
                                             FROM SPC_ALOC_LANE_CTRL_OFC OFC_ALL
                                            WHERE D.RLANE_CD           = OFC_ALL.RLANE_CD
                                              AND D.TRD_CD             = OFC_ALL.TRD_CD
                                              AND D.SUB_TRD_CD         = OFC_ALL.SUB_TRD_CD
                                              AND D.DIR_CD             = OFC_ALL.DIR_CD 
                                              AND D.ALOC_CTRL_TP_CD    = OFC_ALL.ALOC_CTRL_TP_CD
                                              AND D.CTRL_LOC_ACCT_CD   = OFC_ALL.CTRL_LOC_ACCT_CD
                                            )
                                        )) 
                                   -- ECC GROUP 관련하여 비교 컬럼 변경
                                   AND DECODE(M.CTRL_DEST, 'E', D.CTRL_LOC_ACCT_CD, 'G', D.ALOC_CTRL_DTL_CD) = (SELECT DECODE(M.CTRL_DEST, 'E', A.ECC_CD, C.LOC_CD)
                                                                                                                  FROM MDM_EQ_ORZ_CHT A,
                                                                                                                       MDM_LOCATION C 
                                                                                                                 WHERE C.LOC_CD = DECODE(M.CTRL_DEST_LVL,'T', B.DEL_CD, B.POD_CD)
                                                                                                                   AND A.SCC_CD = C.SCC_CD)

                            ),'OTHERS')
                        ELSE
                            'OTHERS'
                        END AS DEL_CD,
                        VPP.POL_CD              ,
                        VPP.POD_CD              ,
                        VPP.POL_SEQ             ,
                        VPP.POD_SEQ             ,
                        VPP.POL_CONTI           ,
                        VPP.OFC_CONTI           ,
                        VPP.POL_SKIP            ,
                        VPP.POD_SKIP            ,
                        VPP.PAST                ,
                        VPP.LST_LODG_PORT_ETD_DT,
                        VPP.LST_LODG_PORT_CD    ,
                        B.BKG_STS_CD            ,
                        B.ALOC_STS_CD           ,--2015.03.12
                        (
                            SELECT TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                    --2014.07.22
                                    || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') -- 20에 포함되어 있음
                                    || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')
                                    --2014.07.22
                                    || TO_CHAR(SUM(CASE WHEN Q.CNTR_TPSZ_CD LIKE 'R%' AND Q.EQ_SUBST_CNTR_TPSZ_CD LIKE 'D%' THEN Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')
                                    || TO_CHAR((D.ACT_WGT * DECODE(D.WGT_UT_CD, 'LBS', 0.00045, 0.001))
                                                                 + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                           FROM MDM_CNTR_TP_SZ TS
                                                                                          WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                            FROM BKG_QUANTITY Q
                            WHERE B.BKG_NO      = Q.BKG_NO
                            AND Q.OP_CNTR_QTY > 0
                        ) AS VAL,
                        SPC_GET_OB_MVMT_FNC(B.BKG_NO, VPP.POL_PAST) AS CM_VAL
			  ,(
				SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Z.CNTR_TPSZ_CD), '2', 1, 2)* Z.OP_CNTR_QTY) 
				FROM BKG_QUANTITY Z 
				WHERE Z.BKG_NO= B.BKG_NO AND OP_CNTR_QTY > 0 
				AND EXISTS ( SELECT 1 FROM BKG_CONTAINER C WHERE C.BKG_NO= Z.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL )
			   ) AS BKG_VOL_VGM	

						,(SELECT SUM(NVL(Z.VGM_WGT,0) * DECODE(Z.VGM_WGT_UT_CD,'LBS',0.00045,0.001)) FROM BKG_CONTAINER Z WHERE Z.BKG_NO= B.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL) AS BKG_WGT_VGM
                          FROM SPC_OFC_LVL O  ,
                               BKG_BOOKING B  ,
                               BKG_VVD     BV ,
                               VVD_POL_POD VPP,
                               BKG_BL_DOC  D,
                               REP_VVDS      M
                         WHERE O.OFC_TP_CD     IN ('BB', 'BA', 'BS')
                           AND O.OFC_CD         = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)
                           AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                           AND B.BKG_STS_CD    IN ('W', 'F')
                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                           AND B.BKG_NO         = BV.BKG_NO
                           AND BV.VSL_CD        = VPP.VSL_CD
                           AND BV.SKD_VOY_NO    = VPP.SKD_VOY_NO
                           AND BV.SKD_DIR_CD    = VPP.SKD_DIR_CD
		
                           AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ = VPP.MAX_POL_PORT_SEQ))
                           AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ = VPP.MAX_POD_PORT_SEQ)) 

                           AND B.BKG_NO         = D.BKG_NO
                     )
           )
)
, ALL_DATA AS (
    SELECT IOC_CD     ,
           BASE_RHQ_CD,
           RHQ_CD     ,
           AREA_CD    ,
           OFC_CD     ,
           US_MOD     ,
           ACCOUNT_CD ,
           POL_CD     ,
           POD_CD     ,
           DEL_CD     ,
           POL_SEQ    ,
           POD_SEQ    ,
           POL_SKIP   ,
           POD_SKIP   ,
           MAX(REP_TRD_CD)     AS REP_TRD_CD    ,
           MAX(REP_SUB_TRD_CD) AS REP_SUB_TRD_CD,
           MAX(TRD_CD)         AS TRD_CD        ,
           MAX(SUB_TRD_CD)     AS SUB_TRD_CD    ,
           SUM(BKG_QUOTA)      AS BKG_QUOTA     ,
           SUM(BKG_QTA_CMB)    AS BKG_QTA_CMB   ,
           SUM(FC_TEU)         AS FC_TEU        ,
           SUM(FC_HC)          AS FC_HC         ,
           SUM(FC_45)          AS FC_45         ,
           SUM(FC_53)          AS FC_53         ,
           SUM(FC_RF)          AS FC_RF         ,
           SUM(FC_WGT)         AS FC_WGT        ,
           SUM(UG_TEU)         AS UG_TEU        ,
           SUM(UG_HC)          AS UG_HC         ,
           SUM(UG_45)          AS UG_45         ,
           SUM(UG_53)          AS UG_53         ,
           SUM(UG_RF)          AS UG_RF         ,
           SUM(UG_WGT)         AS UG_WGT        ,
           SUM(MR_TEU)         AS MR_TEU        ,
           SUM(MR_HC)          AS MR_HC         ,
           SUM(MR_45)          AS MR_45         ,
           SUM(MR_53)          AS MR_53         ,
           SUM(MR_RF)          AS MR_RF         ,
           SUM(MR_WGT)         AS MR_WGT        ,
           SUM(AP_TEU)         AS AP_TEU        ,
           SUM(AP_HC)          AS AP_HC         ,
           SUM(AP_45)          AS AP_45         ,
           SUM(AP_53)          AS AP_53         ,
           SUM(AP_RF)          AS AP_RF         ,
           SUM(AP_WGT)         AS AP_WGT        ,
           SUM(BK_TEU)         AS BK_TEU        ,
           SUM(BK_20)          AS BK_20         ,
           SUM(BK_40)          AS BK_40         ,
           SUM(BK_HC)          AS BK_HC         ,
           SUM(BK_45)          AS BK_45         ,
           SUM(BK_53)          AS BK_53         ,
           SUM(BK_RF)          AS BK_RF         ,
           SUM(BK_WGT)         AS BK_WGT        ,
           SUM(BT_TEU)         AS BT_TEU        ,
           SUM(BT_20)          AS BT_20         ,
           SUM(BT_40)          AS BT_40         ,
           SUM(BT_HC)          AS BT_HC         ,
           SUM(BT_45)          AS BT_45         ,
           SUM(BT_53)          AS BT_53         ,
           SUM(BT_RF)          AS BT_RF         ,
           SUM(BT_WGT)         AS BT_WGT        ,SUM(BKG_VOL_VGM) AS BKG_VOL_VGM,SUM(BKG_WGT_VGM) AS BKG_WGT_VGM,
           SUM(BS_TEU)         AS BS_TEU        ,--2015.03.12
           SUM(BS_WGT)         AS BS_WGT        ,--2015.03.12
           SUM(CM_OP)          AS CM_OP         ,   
           SUM(CM_OC)          AS CM_OC         ,   
           SUM(CM_VL)          AS CM_VL         ,   
           
           SUM(GT_TEU)         AS GT_TEU        ,
           SUM(GT_HC)          AS GT_HC         ,
           SUM(GT_45)          AS GT_45         ,
           SUM(GT_53)          AS GT_53         ,
           SUM(GT_RF)          AS GT_RF         ,
           SUM(GT_WGT)         AS GT_WGT        ,
           DECODE(POD_CD, '0000000', DECODE(SUM(UG_WGT), 0, MAX(CFM_FLG), MIN(CFM_FLG))) AS CFM_FLG,
           SUM(FC_D2)          AS FC_D2  ,
           SUM(FC_D4)          AS FC_D4  ,
           SUM(FC_RD)          AS FC_RD  ,
           SUM(BT_D2)          AS BT_D2  ,
           SUM(BT_D4)          AS BT_D4  ,
           SUM(BT_RD)          AS BT_RD  ,
           SUM(AP_D2)          AS AP_D2  ,
           SUM(AP_D4)          AS AP_D4  ,
           SUM(AP_RD)          AS AP_RD  ,
           MAX(PAST)           AS PAST          ,
           LST_LODG_PORT_ETD_DT                 ,
           LST_LODG_PORT_CD                     ,
           SUM(DECODE(FLG, 'A', 1, 0))                  AS AP_MD                ,
           SUM(DECODE(FLG, 'A', 0, 1))                  AS OTH_MD               ,
           SUM(DECODE(FLG, 'Q', 0, 1))                  AS NQTA_MD              ,
           SUM(DECODE(FLG, 'V', 0, 1))                  AS NCFM_MD              ,
           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_RMK))     AS SPC_CTRL_ALOC_RMK    ,
           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_POL_RMK)) AS SPC_CTRL_ALOC_POL_RMK,
           MAX(DECODE(FLG, 'A', SPC_CTRL_ALOC_POD_RMK)) AS SPC_CTRL_ALOC_POD_RMK
      FROM (
              --Load Quota (Office)
SELECT 2   AS DIV,
                     'Q' AS FLG,
                     VPP.REP_TRD_CD    ,
                     VPP.REP_SUB_TRD_CD,
                     VPP.TRD_CD        ,
                     VPP.SUB_TRD_CD    ,
                     VPP.IOC_CD        ,
                     VPP.OFC_CD AS BASE_RHQ_CD,
                     O.N2ND_PRNT_OFC_CD AS RHQ_CD         ,
                     MQ.AQ_CD   AS AREA_CD    ,
                     (
                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)
                          FROM SPC_RGN_OFC_CONV ROC
                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD
                     ) AS OFC_CD,
                                          --2014.07.17
                     'OTHERS'   AS US_MOD   ,
                     'OTHERS'   AS ACCOUNT_CD,
                     '0000000'  AS POL_CD   ,
                     '0000000'  AS POD_CD   ,
                     'OTHERS'   AS DEL_CD   ,
                     0          AS POL_SEQ  ,
                     0          AS POD_SEQ  ,
                     NULL       AS POL_SKIP ,
                     NULL       AS POD_SKIP ,
                     MQ.LOD_QTY AS BKG_QUOTA,
                     MQ.LOD_QTY * (MQ.GRS_RPB_REV - MQ.PA_CM_UC_AMT) AS BKG_QTA_CMB,
                     0 AS FC_TEU ,
                     0 AS FC_HC  ,
                     0 AS FC_45  ,
                     0 AS FC_53  ,
                     0 AS FC_RF  ,
                     0 AS FC_WGT ,
                     0 AS UG_TEU ,
                     0 AS UG_HC  ,
                     0 AS UG_45  ,
                     0 AS UG_53  ,
                     0 AS UG_RF  ,
                     0 AS UG_WGT ,
                     0 AS MR_TEU ,
                     0 AS MR_HC  ,
                     0 AS MR_45  ,
                     0 AS MR_RF  ,
                     0 AS MR_53  ,
                     0 AS MR_WGT ,
                     0 AS AP_TEU ,
                     0 AS AP_HC  ,
                     0 AS AP_45  ,
                     0 AS AP_53  ,
                     0 AS AP_RF  ,
                     0 AS AP_WGT ,
                     0 AS BK_TEU ,
                     0 AS BK_20  ,
                     0 AS BK_40  ,
                     0 AS BK_HC  ,
                     0 AS BK_45  ,
                     0 AS BK_53  ,
                     0 AS BK_RF  ,
                     0 AS BK_WGT ,
                     0 AS BT_TEU ,
                     0 AS BT_20  ,
                     0 AS BT_40  ,
                     0 AS BT_HC  ,
                     0 AS BT_45  ,
                     0 AS BT_53  ,
                     0 AS BT_RF  ,
                     0 AS BT_WGT , 0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                     0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12
                     0 AS CM_OP  ,   
                     0 AS CM_OC  ,   
                     0 AS CM_VL  ,   
                     0 AS GT_TEU ,
                     0 AS GT_HC  ,
                     0 AS GT_45  ,
                     0 AS GT_53  ,
                     0 AS GT_RF  ,
                     0 AS GT_WGT ,
                     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     NULL AS PAST,
                     VPP.LST_LODG_PORT_ETD_DT     ,
                     VPP.LST_LODG_PORT_CD         ,
                     NULL AS CFM_FLG              ,
                     NULL AS SPC_CTRL_ALOC_RMK    ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM SQM_CFM_QTA      MQ ,
                     SQM_QTA_RLSE_VER MQR,
                     VVDS             VPP,
                     SPC_OFC_LVL      O
               WHERE 1 = 1
                 AND MQR.BSE_YR           = VPP.BSE_YR
                 AND MQR.BSE_QTR_CD       = VPP.BSE_QTR_CD --CEIL(TO_NUMBER(DECODE(VPP.COST_WK,'00','01','53','52',VPP.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(SUBSTR(V.SLS_YRMON, 5, 4)) / 3)||'Q'
                 AND MQR.SQM_VER_STS_CD   = 'R' -- 컬럼 변경
                 AND MQR.BSE_TP_CD        = 'Q' -- 분기 20131205추가
                 AND MQ.QTA_RLSE_VER_NO   = MQR.QTA_RLSE_VER_NO
                 AND MQ.BSE_TP_CD         = MQR.BSE_TP_CD -- 분기 20131205추가     
                 AND MQ.BSE_YR            = MQR.BSE_YR
                 AND MQ.BSE_QTR_CD        = MQR.BSE_QTR_CD
                 AND MQ.QTA_TGT_CD        = 'D'
                 AND MQ.OFC_VW_CD         = 'L'  -- 20131205추가
                 AND NOT EXISTS(
                    SELECT '1'
                    FROM SQM_SCTR_CFM_QTA QTA
                    WHERE QTA.QTA_RLSE_VER_NO   = MQR.QTA_RLSE_VER_NO
                    AND QTA.BSE_TP_CD         = MQR.BSE_TP_CD -- 분기 20131205추가     
                    AND QTA.BSE_YR            = MQR.BSE_YR
                    AND QTA.BSE_QTR_CD        = MQR.BSE_QTR_CD
                    AND QTA.OFC_VW_CD         = 'L'  -- 20131205추가
                    AND QTA.TRD_CD            = VPP.TRD_CD
                    AND QTA.RLANE_CD          = VPP.RLANE_CD
                    AND QTA.DIR_CD            = VPP.DIR_CD
                    AND QTA.VSL_CD            = VPP.VSL_CD
                    AND QTA.SKD_VOY_NO        = VPP.SKD_VOY_NO
                    AND QTA.SKD_DIR_CD        = VPP.SKD_DIR_CD
                    AND VPP.COST_YR || VPP.COST_WK >= '201427'
                )AND MQ.TRD_CD            = VPP.TRD_CD
                 AND MQ.RLANE_CD          = VPP.RLANE_CD
                 AND MQ.DIR_CD            = VPP.DIR_CD
                 AND MQ.VSL_CD            = VPP.VSL_CD
                 AND MQ.SKD_VOY_NO        = VPP.SKD_VOY_NO
                 AND MQ.SKD_DIR_CD        = VPP.SKD_DIR_CD
                 AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                 --AND MQ.RGN_OFC_CD        = O.OFC_CD
                 AND (
                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)
                          FROM SPC_RGN_OFC_CONV ROC
                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD
                     ) = O.OFC_CD
#if (${office} == '')
                 AND ( O.N2ND_PRNT_OFC_CD = CASE
                                           WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN ( SELECT OFC_CD
                                                                                                FROM EGYPT_OFFICE ) THEN 'HAMRU'
										   WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD
                                                                                                                    ELSE VPP.OFC_CD
                                       END
                       OR O.N2ND_PRNT_OFC_CD = 'SINRS')
#else
                 AND (    O.N2ND_PRNT_OFC_CD = CASE
                                           WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN( SELECT OFC_CD
                                                                                               FROM EGYPT_OFFICE ) THEN 'HAMRU'
										   WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD
                                           WHEN VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA' THEN O.N2ND_PRNT_OFC_CD
                                                                                                                   ELSE VPP.OFC_CD
                                       END ) 
#end
                 AND MQ.LOD_QTY > 0 -- QTA데이터가 0인 경우는 제외시킨다.
                 
--NEW ADD
                UNION ALL
                SELECT 2   AS DIV,
                     'Q' AS FLG,
                     VPP.REP_TRD_CD    ,
                     VPP.REP_SUB_TRD_CD,
                     VPP.TRD_CD        ,
                     VPP.SUB_TRD_CD    ,
                     VPP.IOC_CD        ,
                     VPP.OFC_CD AS BASE_RHQ_CD,
                     O.N2ND_PRNT_OFC_CD AS RHQ_CD         ,
                     MQ.AQ_CD   AS AREA_CD    ,
                     (
                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)
                          FROM SPC_RGN_OFC_CONV ROC
                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD
                     ) AS OFC_CD,
                     --2014.07.17
                     'OTHERS'   AS US_MOD   ,
                     'OTHERS'   AS ACCOUNT_CD,
                     NVL(VPP.POL_CD, MQ.POL_CD)  AS POL_CD   ,
                     NVL(VPP.POD_CD, MQ.POD_CD)  AS POD_CD   ,
                     'OTHERS'   AS DEL_CD,   
                     VPP.POL_SEQ AS POL_SEQ  ,
                     VPP.POD_SEQ AS POD_SEQ  ,
                     VPP.POL_SKIP       AS POL_SKIP ,
                     VPP.POD_SKIP       AS POD_SKIP ,
                     MQ.LOD_QTY AS BKG_QUOTA,
                     MQ.LOD_QTY * (MQ.GRS_RPB_REV - MQ.PA_CM_UC_AMT) AS BKG_QTA_CMB,
                     0 AS FC_TEU ,
                     0 AS FC_HC  ,
                     0 AS FC_45  ,
                     0 AS FC_53  ,
                     0 AS FC_RF  ,
                     0 AS FC_WGT ,
                     0 AS UG_TEU ,
                     0 AS UG_HC  ,
                     0 AS UG_45  ,
                     0 AS UG_53  ,
                     0 AS UG_RF  ,
                     0 AS UG_WGT ,
                     0 AS MR_TEU ,
                     0 AS MR_HC  ,
                     0 AS MR_45  ,
                     0 AS MR_RF  ,
                     0 AS MR_53  ,
                     0 AS MR_WGT ,
                     0 AS AP_TEU ,
                     0 AS AP_HC  ,
                     0 AS AP_45  ,
                     0 AS AP_53  ,
                     0 AS AP_RF  ,
                     0 AS AP_WGT ,
                     0 AS BK_TEU ,
                     0 AS BK_20  ,
                     0 AS BK_40  ,
                     0 AS BK_HC  ,
                     0 AS BK_45  ,
                     0 AS BK_53  ,
                     0 AS BK_RF  ,
                     0 AS BK_WGT ,
                     0 AS BT_TEU ,
                     0 AS BT_20  ,
                     0 AS BT_40  ,
                     0 AS BT_HC  ,
                     0 AS BT_45  ,
                     0 AS BT_53  ,
                     0 AS BT_RF  ,
                     0 AS BT_WGT , 0 AS BKG_VOL_VGM, 0 AS BKG_WGT_VGM,
                     0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12
                     0 AS CM_OP  ,   
                     0 AS CM_OC  ,   
                     0 AS CM_VL  ,   
                     
                     0 AS GT_TEU ,
                     0 AS GT_HC  ,
                     0 AS GT_45  ,
                     0 AS GT_53  ,
                     0 AS GT_RF  ,
                     0 AS GT_WGT ,
		     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     NULL AS PAST,
                     VPP.LST_LODG_PORT_ETD_DT     ,
                     VPP.LST_LODG_PORT_CD         ,
                     NULL AS CFM_FLG              ,
                     NULL AS SPC_CTRL_ALOC_RMK    ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM SQM_SCTR_CFM_QTA MQ ,
                     SQM_QTA_RLSE_VER MQR,
                     VVD_POL_POD      VPP,
                     SPC_OFC_LVL      O,
                     -- 2014.07.08 double calling인 경우 QTA는 첫번째 port로. QTA는 yard 구분이 불가능하므로.
                     (SELECT SUBSTR(POL_CD, 1, 5) POL_CD, MIN(POL_SEQ) POL_SEQ
                        FROM VVD_POL_POD
                        GROUP BY SUBSTR(POL_CD, 1, 5)) DBL_POL,
                     (SELECT SUBSTR(POD_CD, 1, 5) POD_CD, MIN(POD_SEQ) POD_SEQ
                        FROM VVD_POL_POD
                        GROUP BY SUBSTR(POD_CD, 1, 5)) DBL_POD
               WHERE 1 = 1
                 AND MQR.BSE_YR           = VPP.BSE_YR
-- 2015.03.04 SQM QTA관련
                 AND MQR.BSE_QTR_CD       = VPP.BSE_QTR_CD --CEIL(TO_NUMBER(DECODE(VPP.COST_WK,'00','01','53','52',VPP.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(SUBSTR(V.SLS_YRMON, 5, 4)) / 3)||'Q'
                 AND MQR.SQM_VER_STS_CD   = 'R' -- 컬럼 변경
                 AND MQR.BSE_TP_CD        = 'Q' -- 분기 20131205추가
                 AND MQ.QTA_RLSE_VER_NO   = MQR.QTA_RLSE_VER_NO
                 AND MQ.BSE_TP_CD         = MQR.BSE_TP_CD -- 분기 20131205추가     
                 AND MQ.BSE_YR            = MQR.BSE_YR
                 AND MQ.BSE_QTR_CD        = MQR.BSE_QTR_CD
--                 AND MQ.QTA_TGT_CD        = 'D'
                 AND MQ.OFC_VW_CD         = 'L'  -- 20131205추가
                 AND MQ.TRD_CD            = VPP.TRD_CD
                 AND MQ.RLANE_CD          = VPP.RLANE_CD
                 AND MQ.DIR_CD            = VPP.DIR_CD
                 AND MQ.VSL_CD            = VPP.VSL_CD
                 AND MQ.SKD_VOY_NO        = VPP.SKD_VOY_NO
                 AND MQ.SKD_DIR_CD        = VPP.SKD_DIR_CD
                 AND MQ.POL_CD            = SUBSTR(VPP.POL_CD(+), 1, 5)
                 AND MQ.POD_CD            = SUBSTR(VPP.POD_CD(+), 1, 5)
                 AND DBL_POL.POL_CD       = SUBSTR(VPP.POL_CD, 1, 5)
                 AND DBL_POL.POL_SEQ      = VPP.POL_SEQ
                 AND DBL_POD.POD_CD       = SUBSTR(VPP.POD_CD, 1, 5)
                 AND DBL_POD.POD_SEQ      = VPP.POD_SEQ
--                 AND MQ.POL_CALL_SEQ      = VPP.POL_SEQ(+)
--                 AND MQ.POD_CALL_SEQ      = VPP.POD_SEQ(+)
                 AND VPP.COST_YR || VPP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
                 AND VPP.COST_YR || VPP.COST_WK >= '201427' 

--                 AND VPP.IOC_CD ='I'
                 AND (
                        SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)
                          FROM SPC_RGN_OFC_CONV ROC
                         WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD
                     ) = O.OFC_CD
#if (${office} == '')
                 AND ( O.N2ND_PRNT_OFC_CD = CASE
                                           WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN ( SELECT OFC_CD
                                                                                                FROM EGYPT_OFFICE ) THEN 'HAMRU'
										   WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD
                                                                                                                    ELSE VPP.OFC_CD
                                       END
                       OR O.N2ND_PRNT_OFC_CD = 'SINRS')
#else
                 AND (    O.N2ND_PRNT_OFC_CD = CASE
                                           WHEN VPP.RLANE_CD = 'INXTP' AND MQ.RGN_OFC_CD IN( SELECT OFC_CD
                                                                                               FROM EGYPT_OFFICE ) THEN 'HAMRU'
										   WHEN VPP.RLANE_CD = 'WAFIE' THEN O.N2ND_PRNT_OFC_CD
                                           WHEN VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA' THEN O.N2ND_PRNT_OFC_CD
                                                                                                                   ELSE VPP.OFC_CD
                                       END ) 
#end
                 AND MQ.LOD_QTY > 0 
              UNION ALL
              --Forecast
              SELECT 3   AS DIV,
                     'F' AS FLG,
                     VPP.REP_TRD_CD    ,
                     VPP.REP_SUB_TRD_CD,
                     VPP.TRD_CD        ,
                     VPP.SUB_TRD_CD    ,
                     F.IOC_TS_CD  AS IOC_CD     ,
                     VPP.OFC_CD   AS BASE_RHQ_CD,
                     F.SLS_RHQ_CD AS RHQ_CD     ,
                     F.SLS_AQ_CD  AS AREA_CD    ,
#if (${office} == '')
                     DECODE(IOC_TS_CD, 'T', F.SLS_RGN_OFC_CD, F.SLS_RGN_OFC_CD) AS OFC_CD,
#else
                     DECODE(IOC_TS_CD, 'T', DECODE(VPP.OFC_CD, F.SLS_RHQ_CD, F.SLS_RGN_OFC_CD, F.SLS_RHQ_CD), F.SLS_RGN_OFC_CD) AS OFC_CD,
#end
                     -- 2014.08.09
                     CASE WHEN M.CTRL_USA = 'Y' THEN
                        DECODE(NVL(F.USA_BKG_MOD_CD, 'OTH'), 'OTH', 'OTHERS', F.USA_BKG_MOD_CD)
                     ELSE
                        'OTHERS'
                     END AS US_MOD,
                     CASE WHEN M.CTRL_ACCOUNT = 'Y' THEN
                        NVL((SELECT D.CTRL_LOC_ACCT_CD
                               FROM SPC_ALOC_LANE_CTRL_OPT_DTL D,
		       	       	            SPC_ALOC_LANE_CTRL_OFC OFC
                              WHERE D.RLANE_CD          = M.RLANE_CD
                                AND D.TRD_CD            = SPC_GET_REP_TRD_FNC(M.RLANE_CD) 
                                AND D.SUB_TRD_CD        = SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD)
                                AND D.DIR_CD            = M.SKD_DIR_CD
                                AND D.ALOC_CTRL_TP_CD   = 'A'
                                -- 2015.02.16 control office관련 setting 추가
                                AND D.RLANE_CD          = OFC.RLANE_CD
                                AND D.TRD_CD            = OFC.TRD_CD
                                AND D.SUB_TRD_CD        = OFC.SUB_TRD_CD
                                AND D.DIR_CD            = OFC.DIR_CD 
                                AND D.ALOC_CTRL_TP_CD   = OFC.ALOC_CTRL_TP_CD 
                                AND D.CTRL_LOC_ACCT_CD  = OFC.CTRL_LOC_ACCT_CD 

#if (${office} == '')
                                AND OFC.OFC_CD          = DECODE(IOC_TS_CD, 'T', F.SLS_RGN_OFC_CD, F.SLS_RGN_OFC_CD)
#else
                                AND OFC.OFC_CD          = DECODE(IOC_TS_CD, 'T', DECODE(VPP.OFC_CD, F.SLS_RHQ_CD, F.SLS_RGN_OFC_CD, F.SLS_RHQ_CD), F.SLS_RGN_OFC_CD)
#end
                                AND D.ALOC_CTRL_DTL_CD  = F.CUST_CNT_CD||LPAD(F.CUST_SEQ,6,'0')                                        
                         ),'OTHERS')
                     ELSE
                        'OTHERS'
                     END AS ACCOUNT_CD,
                     VPP.POL_CD  ,
                     VPP.POD_CD  ,
                     DECODE(F.DEST_LOC_CD, 'XXXXX', 'OTHERS', F.DEST_LOC_CD)  AS DEL_CD   ,
--                     F.POL_YD_CD ,
--                     F.POD_YD_CD ,
                     VPP.POL_SEQ ,
                     VPP.POD_SEQ ,
                     VPP.POL_SKIP,
                     VPP.POD_SKIP,
                     0                 AS BKG_QUOTA,
                     0                 AS BKG_QTA_CMB,
                     F.CFM_TTL_QTY     AS FC_TEU   ,
                     F.CFM_40FT_HC_QTY AS FC_HC    ,
                     F.CFM_45FT_HC_QTY AS FC_45    ,
                     F.CFM_53FT_QTY    AS FC_53    ,
                     F.CFM_RF_QTY      AS FC_RF    ,
                     F.CFM_TTL_WGT     AS FC_WGT   ,
                     0 AS UG_TEU,
                     0 AS UG_HC ,
                     0 AS UG_45 ,
                     0 AS UG_53 ,
                     0 AS UG_RF ,
                     0 AS UG_WGT,
                     0 AS MR_TEU,
                     0 AS MR_HC ,
                     0 AS MR_45 ,
                     0 AS MR_53 ,
                     0 AS MR_RF ,
                     0 AS MR_WGT,
                     0 AS AP_TEU,
                     0 AS AP_HC ,
                     0 AS AP_45 ,
                     0 AS AP_53 ,
                     0 AS AP_RF ,
                     0 AS AP_WGT,
                     0 AS BK_TEU,
                     0 AS BK_20 ,
                     0 AS BK_40 ,
                     0 AS BK_HC ,
                     0 AS BK_45 ,
                     0 AS BK_53 ,
                     0 AS BK_RF ,
                     0 AS BK_WGT,
                     0 AS BT_TEU,
                     0 AS BT_20 ,
                     0 AS BT_40 ,
                     0 AS BT_HC ,
                     0 AS BT_45 ,
                     0 AS BT_53 ,
                     0 AS BT_RF ,
                     0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                     0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12
                     0 AS CM_OP ,   
                     0 AS CM_OC ,   
                     0 AS CM_VL ,   
                     
                     0 AS GT_TEU,
                     0 AS GT_HC ,
                     0 AS GT_45 ,
                     0 AS GT_53 ,
                     0 AS GT_RF ,
                     0 AS GT_WGT,
                     -- 2014.07.22 컬럼 추가
                     F.CFM_20FT_DRY_QTY AS FC_D2  ,
                     F.CFM_40FT_DRY_QTY AS FC_D4  ,
                     F.CFM_RD_QTY AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     VPP.PAST AS PAST,
                     VPP.LST_LODG_PORT_ETD_DT     ,
                     VPP.LST_LODG_PORT_CD         ,
                     NULL AS CFM_FLG              ,
                     NULL AS SPC_CTRL_ALOC_RMK    ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM SPC_DLY_FCAST_CUST F  ,
                     VVD_POL_POD        VPP,
                     REP_VVDS             M
               WHERE F.RLANE_CD   = VPP.RLANE_CD
                 AND F.DIR_CD     = VPP.DIR_CD
                 AND F.VSL_CD     = VPP.VSL_CD
                 AND F.SKD_VOY_NO = VPP.SKD_VOY_NO

                 AND F.POL_YD_CD      = VPP.POL_CD
                 AND F.POD_YD_CD      = VPP.POD_CD
                 AND F.POL_YD_IND_SEQ = VPP.POL_YD_SEQ
                 AND F.POD_YD_IND_SEQ = VPP.POD_YD_SEQ

#if (${office} == '')
                 AND (    VPP.POL_CONTI = VPP.OFC_CONTI
                       OR F.SLS_RHQ_CD  = VPP.OFC_CD
                       OR F.SLS_RHQ_CD  = 'SINRS' 
					   OR VPP.RLANE_CD = 'WAFIE' )
#else
                 AND (    VPP.POL_CONTI = VPP.OFC_CONTI
                       OR F.SLS_RHQ_CD  = VPP.OFC_CD
					   OR VPP.RLANE_CD = 'WAFIE' 
                       OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA')  )
#end
                 AND VPP.PAST = 'N'
                 -- teu, hc, 45fc, wt
                 AND NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) + NVL(F.CFM_45FT_HC_QTY, 0) + NVL(F.CFM_53FT_QTY, 0) + NVL(F.CFM_TTL_WGT, 0) + NVL(F.CFM_RF_QTY,0) > 0
              UNION ALL
              --Model Result(Trunk)
/*
	      SELECT 4   AS DIV    ,
                     'M' AS FLG    ,
                     REP_TRD_CD    ,
                     REP_SUB_TRD_CD,
                     TRD_CD        ,
                     SUB_TRD_CD    ,
                     IOC_CD        ,
                     BASE_RHQ_CD   ,
                     RHQ_CD        ,
                     AREA_CD       ,
                     OFC_CD        ,
                     --2014.07.17
                     'OTHERS'   AS US_MOD   ,
                     'OTHERS'   AS ACCOUNT_CD,
                     POL_CD        ,
                     POD_CD        ,
                     'OTHERS'   AS DEL_CD   ,
                     POL_SEQ       ,
                     POD_SEQ       ,
                     POL_SKIP      ,
                     POD_SKIP      ,
                     0 AS BKG_QUOTA,
                     0 AS BKG_QTA_CMB,
                     0 AS FC_TEU   ,
                     0 AS FC_HC    ,
                     0 AS FC_45    ,
                     0 AS FC_53    ,
                     0 AS FC_RF    ,
                     0 AS FC_WGT   ,
                     0 AS UG_TEU   ,
                     0 AS UG_HC    ,
                     0 AS UG_45    ,
                     0 AS UG_53    ,
                     0 AS UG_RF    ,
                     0 AS UG_WGT   ,
                     DECODE(SZ,   2, 1, 2) * QTY     AS MR_TEU,
                     DECODE(SZ,   5, QTY, 0)         AS MR_HC ,
                     DECODE(SZ,   7, QTY, 0)         AS MR_45 ,
                     DECODE(SZ, 'W', QTY, 0) + DECODE(SZ, 'X', QTY, 0) AS MR_53 ,
                     DECODE(TP, 'R', QTY, 0)         AS MR_RF ,
                     WGT * DECODE(SZ, 2, 1, 2) * QTY AS MR_WGT,
                     0 AS AP_TEU,
                     0 AS AP_HC ,
                     0 AS AP_45 ,
                     0 AS AP_53 ,
                     0 AS AP_RF ,
                     0 AS AP_WGT,
                     0 AS BK_TEU,
                     0 AS BK_20 ,
                     0 AS BK_40 ,
                     0 AS BK_HC ,
                     0 AS BK_45 ,
                     0 AS BK_53 ,
                     0 AS BK_RF ,
                     0 AS BK_WGT,
                     0 AS BT_TEU,
                     0 AS BT_20 ,
                     0 AS BT_40 ,
                     0 AS BT_HC ,
                     0 AS BT_45 ,
                     0 AS BT_53 ,
                     0 AS BT_RF ,
                     0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                     0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12
                     0 AS CM_OP ,   
                     0 AS CM_OC ,   
                     0 AS CM_VL ,   
                     
                     0 AS GT_TEU,
                     0 AS GT_HC ,
                     0 AS GT_45 ,
                     0 AS GT_53 ,
                     0 AS GT_RF ,
                     0 AS GT_WGT,
                     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     PAST       ,
                     LST_LODG_PORT_ETD_DT         ,
                     LST_LODG_PORT_CD             ,
                     NULL AS CFM_FLG              ,
                     NULL AS SPC_CTRL_ALOC_RMK    ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM (
                        SELECT DISTINCT  VPP.REP_TRD_CD    ,
                               VPP.REP_SUB_TRD_CD,
                               VPP.TRD_CD        ,
                               VPP.SUB_TRD_CD    ,
                               VPP.OFC_CD        AS BASE_RHQ_CD,
                               MR.SLS_RHQ_CD     AS RHQ_CD     ,
                               MR.SLS_AQ_CD      AS AREA_CD    ,
                               VPP.IOC_CD        ,
                               MR.SLS_RGN_OFC_CD AS OFC_CD     ,
                               VPP.POL_CD        ,
                               VPP.POD_CD        ,
                               VPP.POL_SEQ       ,
                               VPP.POD_SEQ       ,
                               VPP.POL_SKIP      ,
                               VPP.POD_SKIP      ,
                               SPC_GET_CNTR_SZ_FNC(MR.FCAST_CNTR_TPSZ_CD) AS SZ,
                               SPC_GET_CNTR_TP_FNC(MR.FCAST_CNTR_TPSZ_CD) AS TP,
                               MR.MDL_ALOC_QTY   AS QTY,
                               MR.CNTR_WGT       AS WGT,
                               VPP.LST_LODG_PORT_ETD_DT,
                               VPP.LST_LODG_PORT_CD    ,
                               VPP.PAST
                              FROM SPC_DLY_FCAST_TRNS MR ,
                                   VVD_POL_POD        VPP
                             WHERE MR.MDL_ALOC_QTY + MR.CNTR_WGT > 0
                               AND MR.RLANE_CD       = VPP.RLANE_CD
                               AND MR.DIR_CD         = VPP.DIR_CD
                               AND MR.VSL_CD         = VPP.VSL_CD
                               AND MR.SKD_VOY_NO     = VPP.SKD_VOY_NO
                               AND MR.SKD_DIR_CD     = VPP.SKD_DIR_CD
                               AND DECODE(SUBSTR(MR.TRNK_POL_YD_CD, 6, 2), '00', SUBSTR(MR.TRNK_POL_YD_CD, 1, 5), SUBSTR(MR.TRNK_POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(MR.TRNK_POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)
                               AND DECODE(SUBSTR(MR.TRNK_POD_YD_CD, 6, 2), '00', SUBSTR(MR.TRNK_POD_YD_CD, 1, 5), SUBSTR(MR.TRNK_POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(MR.TRNK_POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)
                               AND (VPP.POL_CONTI     = VPP.OFC_CONTI OR VPP.RLANE_CD = 'WAFIE'  
                                    OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )
                     )
              UNION ALL
              --Model Result(TS)
              SELECT 5   AS DIV    ,
                     'M' AS FLG    ,
                     REP_TRD_CD    ,
                     REP_SUB_TRD_CD,
                     TRD_CD        ,
                     SUB_TRD_CD    ,
                     IOC_CD        ,
                     BASE_RHQ_CD   ,
                     RHQ_CD        ,
                     DECODE(RLANE_CD, 'WAFIE', AREA_CD, DECODE(BASE_RHQ_CD, RHQ_CD, AREA_CD, RHQ_CD)) AS AREA_CD,
                     DECODE(RLANE_CD, 'WAFIE', OFC_CD,  DECODE(BASE_RHQ_CD, RHQ_CD, OFC_CD, RHQ_CD))  AS OFC_CD ,
                     --2014.07.17
                     'OTHERS'   AS US_MOD   ,
                     'OTHERS'   AS ACCOUNT_CD,
                     POL_CD        ,
                     POD_CD        ,
                     'OTHERS'   AS DEL_CD   ,
                     POL_SEQ       ,
                     POD_SEQ       ,
                     POL_SKIP      ,
                     POD_SKIP      ,
                     0 AS BKG_QUOTA,
                     0 AS BKG_QTA_CMB,
                     0 AS FC_TEU   ,
                     0 AS FC_HC    ,
                     0 AS FC_45    ,
                     0 AS FC_53    ,
                     0 AS FC_RF    ,
                     0 AS FC_WGT   ,
                     0 AS UG_TEU   ,
                     0 AS UG_HC    ,
                     0 AS UG_45    ,
                     0 AS UG_53    ,
                     0 AS UG_RF    ,
                     0 AS UG_WGT   ,
                     DECODE(SZ,   2, 1, 2) * QTY     AS MR_TEU,
                     DECODE(SZ,   5, QTY, 0)         AS MR_HC ,
                     DECODE(SZ,   7, QTY, 0)         AS MR_45 ,
                     DECODE(SZ, 'W', QTY, 0) + DECODE(SZ, 'X', QTY, 0) AS MR_53 ,
                     DECODE(TP, 'R', QTY, 0)         AS MR_RF ,
                     WGT * DECODE(SZ, 2, 1, 2) * QTY AS MR_WGT,
                     0 AS AP_TEU,
                     0 AS AP_HC ,
                     0 AS AP_45 ,
                     0 AS AP_53 ,
                     0 AS AP_RF ,
                     0 AS AP_WGT,
                     0 AS BK_TEU,
                     0 AS BK_20 ,
                     0 AS BK_40 ,
                     0 AS BK_HC ,
                     0 AS BK_45 ,
                     0 AS BK_53 ,
                     0 AS BK_RF ,
                     0 AS BK_WGT,
                     0 AS BT_TEU,
                     0 AS BT_20 ,
                     0 AS BT_40 ,
                     0 AS BT_HC ,
                     0 AS BT_45 ,
                     0 AS BT_53 ,
                     0 AS BT_RF ,
                     0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                     0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12

                     0 AS CM_OP ,   
                     0 AS CM_OC ,   
                     0 AS CM_VL ,   
                     
                     0 AS GT_TEU,
                     0 AS GT_HC ,
                     0 AS GT_45 ,
                     0 AS GT_53 ,
                     0 AS GT_RF ,
                     0 AS GT_WGT,
                     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     PAST       ,
                     LST_LODG_PORT_ETD_DT,
                     LST_LODG_PORT_CD    ,
                     NULL AS CFM_FLG              ,
                     NULL AS SPC_CTRL_ALOC_RMK    ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM (
                        SELECT DISTINCT  VPP.REP_TRD_CD    ,
                               VPP.REP_SUB_TRD_CD,
                               VPP.TRD_CD        ,
                               VPP.SUB_TRD_CD    ,
							   VPP.RLANE_CD		 ,
                               VPP.OFC_CD    AS BASE_RHQ_CD,
                               MR.SLS_RHQ_CD AS RHQ_CD     ,
                               MR.SLS_AQ_CD  AS AREA_CD    ,
                               'T'           AS IOC_CD     ,
                               DECODE(VPP.OFC_CD, MR.SLS_RHQ_CD, MR.SLS_RGN_OFC_CD, MR.SLS_RHQ_CD) AS OFC_CD,
                               VPP.POL_CD  ,
                               VPP.POD_CD  ,
                               VPP.POL_SEQ ,
                               VPP.POD_SEQ ,
                               VPP.POL_SKIP,
                               VPP.POD_SKIP,
                               SPC_GET_CNTR_SZ_FNC(MR.FCAST_CNTR_TPSZ_CD) AS SZ,
                               SPC_GET_CNTR_TP_FNC(MR.FCAST_CNTR_TPSZ_CD) AS TP,
                               MR.MDL_ALOC_QTY AS QTY  ,
                               MR.CNTR_WGT     AS WGT  ,
                               VPP.LST_LODG_PORT_ETD_DT,
                               VPP.LST_LODG_PORT_CD    ,
                               VPP.PAST
                          FROM SPC_DLY_FCAST_TRNS      MR ,
                               SPC_DLY_FCAST_TRNS_ROUT MRR,
                               VVD_POL_POD             VPP
                         WHERE MR.MDL_ALOC_QTY + MR.CNTR_WGT > 0
                           AND MR.SLS_FCAST_NO     = MRR.SLS_FCAST_NO
                           AND MR.ALTN_FCAST_SEQ   = MRR.ALTN_FCAST_SEQ
                           AND MRR.RLANE_CD        = VPP.RLANE_CD
                           AND MRR.DIR_CD          = VPP.DIR_CD
                           AND MRR.VSL_CD          = VPP.VSL_CD
                           AND MRR.SKD_VOY_NO      = VPP.SKD_VOY_NO
                           AND MRR.SKD_DIR_CD      = VPP.SKD_DIR_CD
                           AND DECODE(SUBSTR(MRR.POL_YD_CD, 6, 2), '00', SUBSTR(MRR.POL_YD_CD, 1, 5), SUBSTR(MRR.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(MRR.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)
                           AND DECODE(SUBSTR(MRR.POD_YD_CD, 6, 2), '00', SUBSTR(MRR.POD_YD_CD, 1, 5), SUBSTR(MRR.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(MRR.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)
                           AND MRR.VSL_PRE_PST_CD IN ('S', 'U')
                           AND (VPP.POL_CONTI     = VPP.OFC_CONTI OR VPP.RLANE_CD = 'WAFIE' 
                                OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )
                     )
              UNION ALL
*/
              --Allocation
              SELECT 6   AS DIV,
                     'A' AS FLG,
                     VPP.REP_TRD_CD    ,
                     VPP.REP_SUB_TRD_CD,
                     VPP.TRD_CD        ,
                     VPP.SUB_TRD_CD    ,
                     DECODE(A.TS_FLG, 'Y', 'T', A.IOC_CD)||DECODE(A.MNL_FLG, 'Y', 'T', '') AS IOC_CD,
                     VPP.OFC_CD   AS BASE_RHQ_CD,
                     A.SLS_RHQ_CD AS RHQ_CD     ,
#if (${office} == '')
                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_AQ_CD     , DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_AQ_CD     , DECODE(A.RLANE_CD, 'WAFIE', A.SLS_AQ_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_AQ_CD))))      AS AREA_CD,
                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD)))) AS OFC_CD ,
#else
                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_AQ_CD     , DECODE(A.RLANE_CD, 'WAFIE', A.SLS_AQ_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_AQ_CD)))      	  AS AREA_CD,
                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD))) AS OFC_CD ,
#end
                     -- 2014.08.09 과거 입력 데이타 그대로 보여주므로 OTHERS처리 로직에서 제외
                     DECODE(A.USA_BKG_MOD_CD, 'X', 'OTHERS', 'OTH', 'OTHERS', A.USA_BKG_MOD_CD) AS US_MOD,
                     -- 2014.12.04 CTRT_NO 추가 
                     DECODE(A.CTRT_NO||A.CUST_CNT_CD||LPAD(A.CUST_SEQ, 6, '0'), 'XXX999999', 'OTHERS', 'XX999999', 'OTHERS', 
                             DECODE(A.CUST_CNT_CD||LPAD(A.CUST_SEQ, 6, '0'), 'XX999999', A.CTRT_NO, A.CUST_CNT_CD||LPAD(A.CUST_SEQ, 6, '0'))) AS ACCOUNT_CD,
                     VPP.POL_CD    ,
                     VPP.POD_CD    ,
                     DECODE(A.DEST_LOC_CD, 'XXXXX', 'OTHERS',A.DEST_LOC_CD) AS DEL_CD,
--                     A.POL_YD_CD   ,
--                     A.POD_YD_CD   ,
                     VPP.POL_SEQ   ,
                     VPP.POD_SEQ   ,
                     VPP.POL_SKIP  ,
                     VPP.POD_SKIP  ,
                     0 AS BKG_QUOTA,
                     0 AS BKG_QTA_CMB,
                     0 AS FC_TEU   ,
                     0 AS FC_HC    ,
                     0 AS FC_45    ,
                     0 AS FC_53    ,
                     0 AS FC_RF    ,
                     0 AS FC_WGT   ,
                     0 AS UG_TEU   ,
                     0 AS UG_HC    ,
                     0 AS UG_45    ,
                     0 AS UG_53    ,
                     0 AS UG_RF    ,
                     0 AS UG_WGT   ,
                     0 AS MR_TEU   ,
                     0 AS MR_HC    ,
                     0 AS MR_45    ,
                     0 AS MR_53    ,
                     0 AS MR_RF    ,
                     0 AS MR_WGT   ,
                     A.ASGN_TTL_QTY     AS AP_TEU,
                     A.ASGN_40FT_HC_QTY AS AP_HC ,
                     A.ASGN_45FT_HC_QTY AS AP_45 ,
                     A.ASGN_53FT_QTY    AS AP_53 ,
                     A.ASGN_RF_QTY      AS AP_RF ,
                     A.ASGN_TTL_WGT     AS AP_WGT,
                     0 AS BK_TEU,
                     0 AS BK_20 ,
                     0 AS BK_40 ,
                     0 AS BK_HC ,
                     0 AS BK_45 ,
                     0 AS BK_53 ,
                     0 AS BK_RF ,
                     0 AS BK_WGT,
                     0 AS BT_TEU,
                     0 AS BT_20 ,
                     0 AS BT_40 ,
                     0 AS BT_HC ,
                     0 AS BT_45 ,
                     0 AS BT_53 ,
                     0 AS BT_RF ,
                     0 AS BT_WGT, 0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                     0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12
                     0 AS CM_OP ,   
                     0 AS CM_OC ,   
                     0 AS CM_VL ,   
                     
                     0 AS GT_TEU,
                     0 AS GT_HC ,
                     0 AS GT_45 ,
                     0 AS GT_53 ,
                     0 AS GT_RF ,
                     0 AS GT_WGT,
                     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     A.ASGN_20FT_DRY_QTY AS AP_D2  ,
                     A.ASGN_40FT_DRY_QTY AS AP_D4  ,
                     A.ASGN_RD_QTY AS AP_RD  ,
                     VPP.PAST AS PAST,
                     VPP.LST_LODG_PORT_ETD_DT,
                     VPP.LST_LODG_PORT_CD    ,
                     NULL                    AS CFM_FLG              ,
                     A.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ,
                     A.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK,
                     A.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK
                FROM SPC_ALOC_POL_POD A  ,
                     VVD_POL_POD      VPP
  	       WHERE A.RLANE_CD   = VPP.RLANE_CD
                 AND A.DIR_CD     = VPP.DIR_CD
                 AND A.VSL_CD     = VPP.VSL_CD
                 AND A.SKD_VOY_NO = VPP.SKD_VOY_NO
                 AND A.SKD_DIR_CD = VPP.SKD_DIR_CD

                 AND A.POL_YD_CD      = VPP.POL_CD
                 AND A.POD_YD_CD      = VPP.POD_CD
                 AND A.POL_YD_IND_SEQ = VPP.POL_YD_SEQ
                 AND A.POD_YD_IND_SEQ = VPP.POD_YD_SEQ

                 AND (   (     VPP.POL_CONTI = VPP.OFC_CONTI
                           AND (   (     A.TS_FLG     = 'N'
                                     AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                                 OR A.SLS_RGN_OFC_CD IS NULL )
                         ) 
					  OR VPP.RLANE_CD = 'WAFIE'  
                      OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA')
                      OR
#if (${office} == '')
                         (     A.SLS_RHQ_CD = VPP.OFC_CD
                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                      OR (     A.SLS_RHQ_CD = 'SINRS'
                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                     )
#else
                         (     A.SLS_RHQ_CD = VPP.OFC_CD
                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                     )
#end
#if (${type} == 'Y' && ${ofc_cd} != 'SELCTY' && ${ofc_cd} != 'SELCDO') 
				AND DECODE(@[ofc_cd],VPP.OFC_CD, A.SLS_RHQ_CD,DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD))))) = @[ofc_cd]

#end  
              UNION ALL
              --Booking
              SELECT 7   AS DIV,
                     'B' AS FLG,
                     REP_TRD_CD    ,
                     REP_SUB_TRD_CD,
                     TRD_CD        ,
                     SUB_TRD_CD    ,
                     B.IOC_CD      ,
                     B.BASE_RHQ_CD ,
                     O.N2ND_PRNT_OFC_CD AS RHQ_CD,
#if (${office} == '')
                     DECODE(B.IOC_CD, 'T', DECODE(O.N2ND_PRNT_OFC_CD, 'SINRS', O.N3RD_PRNT_OFC_CD, B.BASE_RHQ_CD, O.N3RD_PRNT_OFC_CD, DECODE(B.RLANE_CD, 'WAFIE', O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)), O.N3RD_PRNT_OFC_CD) AS AREA_CD,
                     DECODE(B.IOC_CD, 'T', DECODE(O.N2ND_PRNT_OFC_CD, 'SINRS', O.N4TH_PRNT_OFC_CD, B.BASE_RHQ_CD, O.N4TH_PRNT_OFC_CD, DECODE(B.RLANE_CD, 'WAFIE', O.N4TH_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)), O.N4TH_PRNT_OFC_CD) AS OFC_CD ,
#else
                     DECODE(B.IOC_CD, 'T', DECODE(B.BASE_RHQ_CD, O.N2ND_PRNT_OFC_CD, O.N3RD_PRNT_OFC_CD, DECODE(B.RLANE_CD, 'WAFIE', O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)), O.N3RD_PRNT_OFC_CD) AS AREA_CD,
                     DECODE(B.IOC_CD, 'T', DECODE(B.BASE_RHQ_CD, O.N2ND_PRNT_OFC_CD, O.N4TH_PRNT_OFC_CD, DECODE(B.RLANE_CD, 'WAFIE', O.N4TH_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)), O.N4TH_PRNT_OFC_CD) AS OFC_CD ,
#end
                     -- 2014.07.17
                     B.US_MOD	   ,
                     B.ACCOUNT_CD  ,
                     B.POL_CD      ,
                     B.POD_CD      ,
                     B.DEL_CD	   ,
                     B.POL_SEQ     ,
                     B.POD_SEQ     ,
                     POL_SKIP      ,
                     POD_SKIP      ,
                     0 AS BKG_QUOTA,
                     0 AS BKG_QTA_CMB,
                     DECODE(B.PAST, 'N', 0, (B.BKG_TTL_QTY))     AS FC_TEU,
                     DECODE(B.PAST, 'N', 0, (B.BKG_40FT_HC_QTY)) AS FC_HC ,
                     DECODE(B.PAST, 'N', 0, (B.BKG_45FT_HC_QTY)) AS FC_45 ,
                     DECODE(B.PAST, 'N', 0, (B.BKG_53FT_QTY))    AS FC_53 ,
                     DECODE(B.PAST, 'N', 0, (B.BKG_RF_QTY))      AS FC_RF ,
                     DECODE(B.PAST, 'N', 0, (B.BKG_TTL_WGT))     AS FC_WGT,
                     0 AS UG_TEU,
                     0 AS UG_HC ,
                     0 AS UG_45 ,
                     0 AS UG_53 ,
                     0 AS UG_RF ,
                     0 AS UG_WGT,
                     0 AS MR_TEU,
                     0 AS MR_HC ,
                     0 AS MR_45 ,
                     0 AS MR_53 ,
                     0 AS MR_RF ,
                     0 AS MR_WGT,
                     0 AS AP_TEU,
                     0 AS AP_HC ,
                     0 AS AP_45 ,
                     0 AS AP_53 ,
                     0 AS AP_RF ,
                     0 AS AP_WGT,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_TTL_QTY))     AS BK_TEU,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_20FT_QTY))    AS BK_20 ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_40FT_QTY))    AS BK_40 ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_40FT_HC_QTY)) AS BK_HC ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_45FT_HC_QTY)) AS BK_45 ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_53FT_QTY))    AS BK_53 ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_RF_QTY))      AS BK_RF ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_TTL_WGT))     AS BK_WGT,
                     (B.BKG_TTL_QTY)     AS BT_TEU,
                     (B.BKG_20FT_QTY)    AS BT_20 ,
                     (B.BKG_40FT_QTY)    AS BT_40 ,
                     (B.BKG_40FT_HC_QTY) AS BT_HC ,
                     (B.BKG_45FT_HC_QTY) AS BT_45 ,
                     (B.BKG_53FT_QTY)    AS BT_53 ,
                     (B.BKG_RF_QTY)      AS BT_RF ,
                     (B.BKG_TTL_WGT)     AS BT_WGT,BKG_VOL_VGM, BKG_WGT_VGM,
                     DECODE(NVL(B.ALOC_STS_CD, 'X'), 'S', B.BKG_TTL_QTY, 'A' , B.BKG_TTL_QTY) AS BS_TEU,
					 DECODE(NVL(B.ALOC_STS_CD, 'X'), 'S', B.BKG_TTL_WGT, 'A' , B.BKG_TTL_WGT) AS BS_WGT,
                     B.CM_OP   ,   
                     B.CM_OC   ,   
                     B.CM_VL   ,   
                     
                     0 AS GT_TEU,
                     0 AS GT_HC ,
                     0 AS GT_45 ,
                     0 AS GT_53 ,
                     0 AS GT_RF ,
                     0 AS GT_WGT,
                     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_D2FT_QTY))    AS BT_D2 ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_D4FT_QTY))    AS BT_D4 ,
                     (DECODE(B.BKG_STS_CD, 'F', B.BKG_RD_QTY))      AS BT_RD ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     B.PAST,
                     B.LST_LODG_PORT_ETD_DT,
                     B.LST_LODG_PORT_CD    ,
                     NULL AS CFM_FLG              ,
                     NULL AS SPC_CTRL_ALOC_RMK    ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM SPC_OFC_LVL O,
                     BKG_DATA    B
               WHERE (B.BKG_TTL_QTY + B.BKG_TTL_WGT > 0)
                 AND O.OFC_CD = B.SLS_OFC_CD
                 AND B.COST_YR || B.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
#if (${office} == '')
                 AND (    B.POL_CONTI        = B.OFC_CONTI
                       OR O.N2ND_PRNT_OFC_CD = B.BASE_RHQ_CD
                       OR O.N2ND_PRNT_OFC_CD = 'SINRS'
					   OR B.RLANE_CD = 'WAFIE' )
#else
                 AND (    B.POL_CONTI        = B.OFC_CONTI
                       OR O.N2ND_PRNT_OFC_CD = B.BASE_RHQ_CD 
					   OR B.RLANE_CD = 'WAFIE' 
                       OR (@[office] = 'SINRS' AND B.RLANE_CD = 'WAXIA'))
#end
              UNION ALL
/*
	      --Space Gurantee
              SELECT DISTINCT  8  AS DIV,
                     'G' AS FLG,
                     VPP.REP_TRD_CD    ,
                     VPP.REP_SUB_TRD_CD,
                     VPP.TRD_CD        ,
                     VPP.SUB_TRD_CD    ,
                     VPP.IOC_CD        ,
                     VPP.OFC_CD          AS BASE_RHQ_CD,
                     OV.N2ND_PRNT_OFC_CD AS RHQ_CD     ,
                     OV.N3RD_PRNT_OFC_CD AS AREA_CD    ,
                     OV.N4TH_PRNT_OFC_CD AS OFC_CD     ,
                     --2014.07.17
                     'OTHERS'   AS US_MOD   ,
                     'OTHERS'   AS ACCOUNT_CD,
                     VPP.POL_CD    ,
                     VPP.POD_CD    ,
                     'OTHERS'   AS DEL_CD,
                     VPP.POL_SEQ   ,
                     VPP.POD_SEQ   ,
                     VPP.POL_SKIP  ,
                     VPP.POD_SKIP  ,
                     0 AS BKG_QUOTA,
                     0 AS BKG_QTA_CMB,
                     0 AS FC_TEU   ,
                     0 AS FC_HC    ,
                     0 AS FC_45    ,
                     0 AS FC_53    ,
                     0 AS FC_RF    ,
                     0 AS FC_WGT   ,
                     0 AS UG_TEU   ,
                     0 AS UG_HC    ,
                     0 AS UG_45    ,
                     0 AS UG_53    ,
                     0 AS UG_RF    ,
                     0 AS UG_WGT   ,
                     0 AS MR_TEU   ,
                     0 AS MR_HC    ,
                     0 AS MR_45    ,
                     0 AS MR_53    ,
                     0 AS MR_RF    ,
                     0 AS MR_WGT   ,
                     0 AS AP_TEU   ,
                     0 AS AP_HC    ,
                     0 AS AP_45    ,
                     0 AS AP_53    ,
                     0 AS AP_RF    ,
                     0 AS AP_WGT   ,
                     0 AS BK_TEU   ,
                     0 AS BK_20    ,
                     0 AS BK_40    ,
                     0 AS BK_HC    ,
                     0 AS BK_45    ,
                     0 AS BK_53    ,
                     0 AS BK_RF    ,
                     0 AS BK_WGT   ,
                     0 AS BT_TEU   ,
                     0 AS BT_20    ,
                     0 AS BT_40    ,
                     0 AS BT_HC    ,
                     0 AS BT_45    ,
                     0 AS BT_53    ,
                     0 AS BT_RF    ,
                     0 AS BT_WGT   ,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
							0 AS BS_TEU   , --2015.03.12
							0 AS BS_WGT   , --2015.03.12
                     0 AS CM_OP	   ,   
                     0 AS CM_OC    ,   
                     0 AS CM_VL    ,   
                     
                     G.BKG_AVAL_TTL_QTY     AS GT_TEU,
                     G.BKG_AVAL_40FT_HC_QTY AS GT_HC ,
                     G.BKG_AVAL_45FT_HC_QTY AS GT_45 ,
                     G.BKG_AVAL_53FT_QTY    AS GT_53 ,
                     G.BKG_AVAL_RF_QTY      AS GT_RF ,
                     G.BKG_AVAL_TTL_WGT     AS GT_WGT,
                     -- 2014.07.22 컬럼 추가
                     0 AS FC_D2  ,
                     0 AS FC_D4  ,
                     0 AS FC_RD  ,
                     0 AS BT_D2  ,
                     0 AS BT_D4  ,
                     0 AS BT_RD  ,
                     0 AS AP_D2  ,
                     0 AS AP_D4  ,
                     0 AS AP_RD  ,
                     VPP.PAST               AS PAST  ,
                     VPP.LST_LODG_PORT_ETD_DT        ,
                     VPP.LST_LODG_PORT_CD            ,
                     NULL AS CFM_FLG                 ,
                     NULL AS SPC_CTRL_ALOC_RMK       ,
                     NULL AS SPC_CTRL_ALOC_POL_RMK   ,
                     NULL AS SPC_CTRL_ALOC_POD_RMK
                FROM SPC_OFC_LVL   OV ,
                     SPC_ALOC_GNTE G  ,
                     VVD_POL_POD   VPP
               WHERE G.RLANE_CD   = VPP.RLANE_CD
                 AND G.DIR_CD     = VPP.DIR_CD
                 AND G.VSL_CD     = VPP.VSL_CD
                 AND G.SKD_VOY_NO = VPP.SKD_VOY_NO
                 AND G.SKD_DIR_CD = VPP.SKD_DIR_CD
                 AND SUBSTR(G.POL_YD_CD, 1, LENGTH(VPP.POL_CD)) = VPP.POL_CD
                 AND SUBSTR(G.POD_YD_CD, 1, LENGTH(VPP.POD_CD)) = VPP.POD_CD
                 AND OV.OFC_CD    = G.SLS_OFC_CD
                 AND VPP.COST_YR || VPP.COST_WK BETWEEN OV.OFC_APLY_FM_YRWK AND OV.OFC_APLY_TO_YRWK
                 AND (    VPP.POL_CONTI = VPP.OFC_CONTI
                       OR VPP.OFC_CD    = OV.N2ND_PRNT_OFC_CD
					   OR VPP.RLANE_CD = 'WAFIE' 
                       OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )
               UNION ALL
*/

               --EQ Booking
               SELECT 9    AS DIV,
                      'EB' AS FLG,
                      REP_TRD_CD       ,
                      REP_SUB_TRD_CD   ,
                      TRD_CD           ,
                      SUB_TRD_CD       ,
                      IOC_CD           ,
                      BASE_RHQ_CD      ,
                      'NULL' AS RHQ_CD ,
                      NULL   AS AREA_CD,
                      'NULL' AS OFC_CD ,
                      --2014.07.17
                      US_MOD   	       ,
                      ACCOUNT_CD       ,
                      POL_CD           ,
                      POD_CD           ,
                      DEL_CD           ,
                      POL_SEQ          ,
                      POD_SEQ          ,
                      POL_SKIP         ,
                      POD_SKIP         ,
                      0 AS BKG_QUOTA   ,
                      0 AS BKG_QTA_CMB ,
                      0 AS FC_TEU      ,
                      0 AS FC_HC       ,
                      0 AS FC_45       ,
                      0 AS FC_53       ,
                      0 AS FC_RF       ,
                      0 AS FC_WGT      ,
                      0 AS UG_TEU      ,
                      0 AS UG_HC       ,
                      0 AS UG_45       ,
                      0 AS UG_53       ,
                      0 AS UG_RF       ,
                      0 AS UG_WGT      ,
                      0 AS MR_TEU      ,
                      0 AS MR_HC       ,
                      0 AS MR_45       ,
                      0 AS MR_53       ,
                      0 AS MR_RF       ,
                      0 AS MR_WGT      ,
                      0 AS AP_TEU      ,
                      0 AS AP_HC       ,
                      0 AS AP_45       ,
                      0 AS AP_53       ,
                      0 AS AP_RF       ,
                      0 AS AP_WGT      ,
                      (BKG_TTL_QTY)     AS BK_TEU,
                      (BKG_20FT_QTY)    AS BK_20 ,
                      (BKG_40FT_QTY)    AS BK_40 ,
                      (BKG_40FT_HC_QTY) AS BK_HC ,
                      (BKG_45FT_HC_QTY) AS BK_45 ,
                      (BKG_53FT_QTY)    AS BK_53 ,
                      (BKG_RF_QTY)      AS BK_RF ,
                      0                 AS BK_WGT,
                      (BKG_TTL_QTY)     AS BT_TEU,
                      (BKG_20FT_QTY)    AS BT_20 ,
                      (BKG_40FT_QTY)    AS BT_40 ,
                      (BKG_40FT_HC_QTY) AS BT_HC ,
                      (BKG_45FT_HC_QTY) AS BT_45 ,
                      (BKG_53FT_QTY)    AS BT_53 ,
                      (BKG_RF_QTY)      AS BT_RF ,
                      0                 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                      0 AS BS_TEU ,--2015.03.12
                     0 AS BS_WGT ,--2015.03.12
                      CM_OP,   
                      CM_OC,   
                      CM_VL,   
                      
                      0 AS GT_TEU,
                      0 AS GT_HC ,
                      0 AS GT_45 ,
                      0 AS GT_53 ,
                      0 AS GT_RF ,
                      0 AS GT_WGT,
                      -- 2014.07.22 컬럼 추가
                      0 AS FC_D2  ,
                      0 AS FC_D4  ,
                      0 AS FC_RD  ,
                      (BKG_D2FT_QTY)  AS BT_D2  ,
                      (BKG_D4FT_QTY)  AS BT_D4  ,
                      (BKG_RD_QTY) AS BT_RD  ,
                      0 AS AP_D2  ,
                      0 AS AP_D4  ,
                      0 AS AP_RD  ,
                      PAST       ,
                      LST_LODG_PORT_ETD_DT,
                      LST_LODG_PORT_CD    ,
                      NULL AS CFM_FLG              ,
                      NULL AS SPC_CTRL_ALOC_RMK    ,
                      NULL AS SPC_CTRL_ALOC_POL_RMK,
                      NULL AS SPC_CTRL_ALOC_POD_RMK
                 FROM (
                         SELECT REP_TRD_CD          ,
                                REP_SUB_TRD_CD      ,
                                TRD_CD              ,
                                SUB_TRD_CD          ,
                                IOC_CD              ,
                                BASE_RHQ_CD         ,
                                US_MOD		    ,
                                ACCOUNT_CD          ,
                                DEL_CD              ,
                                POL_CD              ,
                                POD_CD              ,
                                POL_SEQ             ,
                                POD_SEQ             ,
                                POL_SKIP            ,
                                POD_SKIP            ,
                                PAST                ,
                                LST_LODG_PORT_ETD_DT,
                                LST_LODG_PORT_CD    ,
                                TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0)) AS BKG_TTL_QTY    ,
                                TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)) AS BKG_20FT_QTY   ,
                                TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)) AS BKG_40FT_QTY   ,
                                --2014.07.22
                                TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)) AS BKG_D2FT_QTY   ,
                                TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)) AS BKG_D4FT_QTY   ,
                                TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)) AS BKG_40FT_HC_QTY,
                                TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)) AS BKG_45FT_HC_QTY,
                                TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)) AS BKG_53FT_QTY   ,
                                TO_NUMBER(NVL(SUBSTR(VAL, 113, 14), 0)) AS BKG_RF_QTY     ,
                                TO_NUMBER(NVL(SUBSTR(VAL, 127, 14), 0)) AS BKG_RD_QTY     ,

                                TO_NUMBER(NVL(SUBSTR(CM_VAL,  1, 10), 0)) AS CM_OP	     ,
								TO_NUMBER(NVL(SUBSTR(CM_VAL, 11, 10), 0)) AS CM_OC	     ,
								TO_NUMBER(NVL(SUBSTR(CM_VAL, 21, 10), 0)) AS CM_VL
                           FROM (
                                   SELECT VPP.REP_TRD_CD           ,
                                          VPP.REP_SUB_TRD_CD       ,
                                          VPP.TRD_CD               ,
                                          VPP.SUB_TRD_CD           ,
                                          'E'        AS IOC_CD     ,
                                          VPP.OFC_CD AS BASE_RHQ_CD,
					                      -- 2014.08.09
                                          CASE WHEN P.CTRL_USA = 'Y' AND (SUBSTR(B.POL_CD,1,2) IN ('US','CA') OR SUBSTR(B.POD_CD,1,2) IN ('US','CA')) THEN
                                            NVL(SPC_USA_MODE_FNC(B.RCV_TERM_CD, B.DE_TERM_CD, B.POL_CD, B.POL_CD, B.POD_CD, B.DEL_CD),'OTHERS') 
                                          ELSE
                                           'OTHERS'
                                          END AS US_MOD,
                                          -- 2015.02.25 EQ booking은 EMPTY운송으로 화주 code 없음 따라서 모두 'OTHERS'로 SETTING
                                          'OTHERS' AS ACCOUNT_CD,
                                          CASE WHEN P.CTRL_DEST <> 'N' THEN	                                                      
                                            NVL((
                                                SELECT DISTINCT(D.CTRL_LOC_ACCT_CD)
                                                  FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                                                 WHERE D.RLANE_CD			= P.RLANE_CD
                                                   AND D.TRD_CD				= SPC_GET_REP_TRD_FNC(P.RLANE_CD)
                                                   AND D.SUB_TRD_CD			= SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD)
                                                   AND D.DIR_CD 			= P.SKD_DIR_CD       
                                                   AND D.ALOC_CTRL_TP_CD	= P.CTRL_DEST
                                                   -- 2015.02.16 control office관련 setting 추가
                                                   -- 2015.04.06 office가 입력되지 않은 case는 전체 office에 걸리도록 함.
                                                   AND (( SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) IN 
                                                          (SELECT OFC.OFC_CD
                                                             FROM SPC_ALOC_LANE_CTRL_OFC OFC
                                                            WHERE D.RLANE_CD           = OFC.RLANE_CD
                                                              AND D.TRD_CD             = OFC.TRD_CD
                                                              AND D.SUB_TRD_CD         = OFC.SUB_TRD_CD
                                                              AND D.DIR_CD             = OFC.DIR_CD 
                                                              AND D.ALOC_CTRL_TP_CD    = OFC.ALOC_CTRL_TP_CD
                                                              AND D.CTRL_LOC_ACCT_CD   = OFC.CTRL_LOC_ACCT_CD
                                                        ))
                                                        OR ( NOT EXISTS 
                                                         ( SELECT 1
                                                             FROM SPC_ALOC_LANE_CTRL_OFC OFC_ALL
                                                            WHERE D.RLANE_CD           = OFC_ALL.RLANE_CD
                                                              AND D.TRD_CD             = OFC_ALL.TRD_CD
                                                              AND D.SUB_TRD_CD         = OFC_ALL.SUB_TRD_CD
                                                              AND D.DIR_CD             = OFC_ALL.DIR_CD 
                                                              AND D.ALOC_CTRL_TP_CD    = OFC_ALL.ALOC_CTRL_TP_CD
                                                              AND D.CTRL_LOC_ACCT_CD   = OFC_ALL.CTRL_LOC_ACCT_CD
                                                            )
                                                        )) 
                                                   -- ECC GROUP 관련하여 비교 컬럼 변경
                                                   AND DECODE(P.CTRL_DEST, 'E', D.CTRL_LOC_ACCT_CD, 'G', D.ALOC_CTRL_DTL_CD) = (SELECT DECODE(P.CTRL_DEST, 'E', A.ECC_CD, C.LOC_CD)
                                                                                                                  FROM MDM_EQ_ORZ_CHT A,
                                                                                                                       MDM_LOCATION C 
                                                                                                                 WHERE C.LOC_CD = DECODE(P.CTRL_DEST_LVL,'T', B.DEL_CD, B.POD_CD)
                                                                                                                   AND A.SCC_CD = C.SCC_CD)

                                            ),'OTHERS')
                                          ELSE
                                          'OTHERS'
                                          END AS DEL_CD,
                                          VPP.POL_CD               ,
                                          VPP.POD_CD               ,
                                          VPP.POL_SEQ              ,
                                          VPP.POD_SEQ              ,
                                          VPP.POL_SKIP             ,
                                          VPP.POD_SKIP             ,
                                          VPP.PAST                 ,
                                          VPP.LST_LODG_PORT_ETD_DT ,
                                          VPP.LST_LODG_PORT_CD     ,
                                          (
                                             SELECT
                                                       TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2)*Q.OP_CNTR_QTY), 'FM0000000000.000')
                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                    --2014.07.22
                                                    || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') -- 20에 포함되어 있음
				                                    || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                                    || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')
                                                    --2014.07.22
                                                    || TO_CHAR(SUM(CASE WHEN Q.CNTR_TPSZ_CD LIKE 'R%' AND Q.EQ_SUBST_CNTR_TPSZ_CD LIKE 'D%' THEN Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')
                                               FROM BKG_QUANTITY Q
                                              WHERE B.BKG_NO      = Q.BKG_NO
                                                AND Q.OP_CNTR_QTY > 0
                                          ) AS VAL,
                                          SPC_GET_OB_MVMT_FNC(B.BKG_NO, VPP.POL_PAST) AS CM_VAL
                                     FROM BKG_BOOKING B  ,
                                          BKG_VVD     BV ,
                                          VVD_POL_POD VPP,
                                          REP_VVDS      P
                                    WHERE B.BKG_STS_CD   IN ('W', 'F')
                                      AND B.BKG_CGO_TP_CD = 'P'
                                      AND B.BKG_NO        = BV.BKG_NO
                                      AND BV.VSL_CD       = VPP.VSL_CD
                                      AND BV.SKD_VOY_NO   = VPP.SKD_VOY_NO
                                      AND BV.SKD_DIR_CD   = VPP.SKD_DIR_CD
                                
                                      AND ((BV.POL_CD = VPP.PL_VPS_PORT_CD AND BV.POL_CLPT_IND_SEQ = VPP.PL_CLPT_IND_SEQ) OR (BV.POL_YD_CD = VPP.POL_CD AND BV.POL_CLPT_IND_SEQ > 1 AND VPP.MAX_POL_PORT_SEQ = 1))
                                      AND ((BV.POD_CD = VPP.PD_VPS_PORT_CD AND BV.POD_CLPT_IND_SEQ = VPP.PD_CLPT_IND_SEQ) OR (BV.POD_YD_CD = VPP.POD_CD AND BV.POD_CLPT_IND_SEQ > 1 AND VPP.MAX_POD_PORT_SEQ = 1))
                             )
                      )
/* 현재 사용안함.
               UNION ALL
               --Space Usage
               SELECT DISTINCT 11              AS DIV,
                      'U'||SU.CFM_FLG AS FLG,
                      VPP.REP_TRD_CD        ,
                      VPP.REP_SUB_TRD_CD    ,
                      VPP.TRD_CD            ,
                      VPP.SUB_TRD_CD        ,
                      DECODE(SU.TS_FLG, 'Y', 'T', SU.IOC_CD) AS IOC_CD,
                      VPP.OFC_CD    AS BASE_RHQ_CD,
                      SU.SLS_RHQ_CD AS RHQ_CD     ,
                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_AQ_CD     , DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_AQ_CD, SU.SLS_RHQ_CD)), SU.SLS_AQ_CD)      AS AREA_CD,
                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_RGN_OFC_CD, DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_RGN_OFC_CD, SU.SLS_RHQ_CD)), SU.SLS_RGN_OFC_CD) AS OFC_CD ,
                      --2014.07.17
                      'OTHERS'   AS US_MOD   ,
                      'OTHERS'   AS ACCOUNT_CD,
                      VPP.POL_CD    ,
                      VPP.POD_CD    ,
                      'OTHERS'  AS DEL_CD,
                      VPP.POL_SEQ   ,
                      VPP.POD_SEQ   ,
                      VPP.POL_SKIP  ,
                      VPP.POD_SKIP  ,
                      0 AS BKG_QUOTA,
                      0 AS BKG_QTA_CMB,
                      0 AS FC_TEU   ,
                      0 AS FC_HC    ,
                      0 AS FC_45    ,
                      0 AS FC_53    ,
                      0 AS FC_RF    ,
                      0 AS FC_WGT   ,
                      SU.USD_BKG_TTL_QTY     AS UG_TEU,
                      SU.USD_BKG_40FT_HC_QTY AS UG_HC ,
                      SU.USD_BKG_45FT_HC_QTY AS UG_45 ,
                      SU.USD_BKG_53FT_QTY    AS UG_53 ,
                      SU.USD_BKG_RF_QTY      AS UG_RF ,
                      SU.USD_BKG_TTL_WGT     AS UG_WGT,
                      0 AS MR_TEU,
                      0 AS MR_HC ,
                      0 AS MR_45 ,
                      0 AS MR_53 ,
                      0 AS MR_RF ,
                      0 AS MR_WGT,
                      0 AS AP_TEU,
                      0 AS AP_HC ,
                      0 AS AP_45 ,
                      0 AS AP_53 ,
                      0 AS AP_RF ,
                      0 AS AP_WGT,
                      0 AS BK_TEU,
                      0 AS BK_20 ,
                      0 AS BK_40 ,
                      0 AS BK_HC ,
                      0 AS BK_45 ,
                      0 AS BK_53 ,
                      0 AS BK_RF ,
                      0 AS BK_WGT,
                      0 AS BT_TEU,
                      0 AS BT_20 ,
                      0 AS BT_40 ,
                      0 AS BT_HC ,
                      0 AS BT_45 ,
                      0 AS BT_53 ,
                      0 AS BT_RF ,
                      0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                      0 AS BS_TEU ,--2015.03.12
                      0 AS BS_WGT ,--2015.03.12
                      0 AS CM_OP ,   
                      0 AS CM_OC ,   
                      0 AS CM_VL ,   
                      
                      0 AS GT_TEU,
                      0 AS GT_HC ,
                      0 AS GT_45 ,
                      0 AS GT_53 ,
                      0 AS GT_RF ,
                      0 AS GT_WGT,
                      -- 2014.07.22 컬럼 추가
                      0 AS FC_D2  ,
                      0 AS FC_D4  ,
                      0 AS FC_RD  ,
                      0 AS BT_D2  ,
                      0 AS BT_D4  ,
                      0 AS BT_RD  ,
                      0 AS AP_D2  ,
                      0 AS AP_D4  ,
                      0 AS AP_RD  ,
                      VPP.PAST AS PAST,
                      VPP.LST_LODG_PORT_ETD_DT,
                      VPP.LST_LODG_PORT_CD    ,
                      NULL AS CFM_FLG              ,
                      NULL AS SPC_CTRL_ALOC_RMK    ,
                      NULL AS SPC_CTRL_ALOC_POL_RMK,
                      NULL AS SPC_CTRL_ALOC_POD_RMK
                 FROM SPC_SPC_USG SU ,
                      VVD_POL_POD VPP
                WHERE SU.USD_BKG_TTL_QTY + SU.USD_BKG_TTL_WGT > 0
                  AND SU.RLANE_CD   = VPP.RLANE_CD
                  AND SU.DIR_CD     = VPP.DIR_CD
                  AND SU.VSL_CD     = VPP.VSL_CD
                  AND SU.SKD_VOY_NO = VPP.SKD_VOY_NO
                  AND SU.SKD_DIR_CD = VPP.SKD_DIR_CD
                  AND DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(SU.POL_YD_CD, 1, 5), SUBSTR(SU.POL_YD_CD, 1, LENGTH(VPP.POL_CD))) = DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.POL_CD, 1, 5), VPP.POL_CD)
                  AND DECODE(SUBSTR(SU.POD_YD_CD, 6, 2), '00', SUBSTR(SU.POD_YD_CD, 1, 5), SUBSTR(SU.POD_YD_CD, 1, LENGTH(VPP.POD_CD))) = DECODE(SUBSTR(SU.POD_YD_CD, 6, 2), '00', SUBSTR(VPP.POD_CD, 1, 5), VPP.POD_CD)
                  AND (    VPP.POL_CONTI = VPP.OFC_CONTI
                        OR SU.SLS_RHQ_CD = VPP.OFC_CD
					    OR VPP.RLANE_CD = 'WAFIE' 
                        OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )
               UNION ALL
               --Space Usage
               SELECT 12            AS DIV        ,
                      'V'           AS FLG        ,
                      VPP.REP_TRD_CD              ,
                      VPP.REP_SUB_TRD_CD          ,
                      NULL          AS TRD_CD     ,
                      NULL          AS SUB_TRD_CD ,
                      DECODE(SU.TS_FLG, 'Y', 'T', SU.IOC_CD) AS IOC_CD,
                      VPP.OFC_CD    AS BASE_RHQ_CD,
                      SU.SLS_RHQ_CD AS RHQ_CD     ,
                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_AQ_CD     , DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_AQ_CD, SU.SLS_RHQ_CD)), SU.SLS_AQ_CD)      AS AREA_CD,
                      DECODE(SU.TS_FLG, 'Y', DECODE(VPP.OFC_CD, SU.SLS_RHQ_CD, SU.SLS_RGN_OFC_CD, DECODE(SU.RLANE_CD, 'WAFIE', SU.SLS_RGN_OFC_CD, SU.SLS_RHQ_CD)), SU.SLS_RGN_OFC_CD) AS OFC_CD ,
                      --2014.07.17
                      'OTHERS'   AS US_MOD   ,
                      'OTHERS'   AS ACCOUNT_CD,
                      VPP.PORT_CD   AS POL_CD     ,
                      '0000000'     AS POD_CD     ,
                      'OTHERS'      AS DEL_CD     ,
                      VPP.PORT_SEQ  AS POL_SEQ    ,
                      0             AS POD_SEQ    ,
                      VPP.SKIPPED   AS POL_SKIP   ,
                      NULL          AS POD_SKIP   ,
                      0 AS BKG_QUOTA,
                      0 AS BKG_QTA_CMB,
                      0 AS FC_TEU   ,
                      0 AS FC_HC    ,
                      0 AS FC_45    ,
                      0 AS FC_53    ,
                      0 AS FC_RF    ,
                      0 AS FC_WGT   ,
                      SU.USD_BKG_TTL_QTY     AS UG_TEU,
                      SU.USD_BKG_40FT_HC_QTY AS UG_HC ,
                      SU.USD_BKG_45FT_HC_QTY AS UG_45 ,
                      SU.USD_BKG_53FT_QTY    AS UG_53 ,
                      SU.USD_BKG_RF_QTY      AS UG_RF ,
                      SU.USD_BKG_TTL_WGT     AS UG_WGT,
                      0 AS MR_TEU,
                      0 AS MR_HC ,
                      0 AS MR_45 ,
                      0 AS MR_53 ,
                      0 AS MR_RF ,
                      0 AS MR_WGT,
                      0 AS AP_TEU,
                      0 AS AP_HC ,
                      0 AS AP_45 ,
                      0 AS AP_53 ,
                      0 AS AP_RF ,
                      0 AS AP_WGT,
                      0 AS BK_TEU,
                      0 AS BK_20 ,
                      0 AS BK_40 ,
                      0 AS BK_HC ,
                      0 AS BK_45 ,
                      0 AS BK_53 ,
                      0 AS BK_RF ,
                      0 AS BK_WGT,
                      0 AS BT_TEU,
                      0 AS BT_20 ,
                      0 AS BT_40 ,
                      0 AS BT_HC ,
                      0 AS BT_45 ,
                      0 AS BT_53 ,
                      0 AS BT_RF ,
                      0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
                      0 AS BS_TEU ,--2015.03.12
                      0 AS BS_WGT ,--2015.03.12
                      0 AS CM_OP ,   
                      0 AS CM_OC ,   
                      0 AS CM_VL ,   
                      
                      0 AS GT_TEU,
                      0 AS GT_HC ,
                      0 AS GT_45 ,
                      0 AS GT_53 ,
                      0 AS GT_RF ,
                      0 AS GT_WGT,
                      -- 2014.07.22 컬럼 추가
                      0 AS FC_D2  ,
                      0 AS FC_D4  ,
                      0 AS FC_RD  ,
                      0 AS BT_D2  ,
                      0 AS BT_D4  ,
                      0 AS BT_RD  ,
                      0 AS AP_D2  ,
                      0 AS AP_D4  ,
                      0 AS AP_RD  ,
                      VPP.PORT_PAST AS PAST        ,
                      VPP.LST_LODG_PORT_ETD_DT     ,
                      VPP.LST_LODG_PORT_CD         ,
                      SU.CFM_FLG                   ,
                      NULL AS SPC_CTRL_ALOC_RMK    ,
                      NULL AS SPC_CTRL_ALOC_POL_RMK,
                      NULL AS SPC_CTRL_ALOC_POD_RMK
                 FROM SPC_SPC_USG  SU ,
                      VSL_PORT_SKD VPP
                WHERE SU.USD_BKG_TTL_QTY + SU.USD_BKG_TTL_WGT > 0
                  AND SU.RLANE_CD   = VPP.RLANE_CD
                  AND SU.DIR_CD     = VPP.DIR_CD
                  AND SU.VSL_CD     = VPP.VSL_CD
                  AND SU.SKD_VOY_NO = VPP.SKD_VOY_NO
                  AND SU.SKD_DIR_CD = VPP.SKD_DIR_CD
                  AND DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(SU.POL_YD_CD, 1, 5), SUBSTR(SU.POL_YD_CD, 1, LENGTH(VPP.PORT_CD))) = DECODE(SUBSTR(SU.POL_YD_CD, 6, 2), '00', SUBSTR(VPP.PORT_CD, 1, 5), VPP.PORT_CD)
                  AND SU.POD_YD_CD  = '0000000'
                  AND (    VPP.CONTI_CD  = VPP.OFC_CONTI
                        OR SU.SLS_RHQ_CD = VPP.OFC_CD
						OR VPP.RLANE_CD = 'WAFIE' 
                        OR (VPP.OFC_CD = 'SINRS' AND VPP.RLANE_CD = 'WAXIA') )
*/

           )
  GROUP BY 
           IOC_CD              ,
           BASE_RHQ_CD         ,
           RHQ_CD              ,
           AREA_CD             ,
           OFC_CD              ,
           US_MOD              ,
           ACCOUNT_CD          ,
           POL_CD              ,
           POL_SEQ             ,
           POD_CD              ,
           POD_SEQ             ,
           DEL_CD              ,
           POL_SKIP            ,
           POD_SKIP            ,
           LST_LODG_PORT_ETD_DT,
           LST_LODG_PORT_CD
    HAVING SUBSTR(IOC_CD, 2, 1)        = 'T'
        OR SUM(DECODE(FLG, 'A', 1, 0)) = 0
        OR SUM(DECODE(FLG, 'A', 0, 1)) > 0
        OR SUM(AP_TEU)                 > 0
        OR SUM(AP_WGT)                 > 0
)

#if (${all_pol} == 'Y')
--IAS SECTOR 판매 활성화를 위한 POL-POD PAIR 로직 START
, CMPR AS (
    SELECT DISTINCT T.RGN_OFC_CD AS OFC_CD, 
           --T.POL_CD AS POL, 
           T.IOC_TS_CD, 
           V.POL_CD, 
           V.POL_SEQ, 
           V.POD_CD, 
           V.POD_SEQ,
           V.PAST                ,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,   
           V.REP_TRD_CD    ,
           V.REP_SUB_TRD_CD,
           V.TRD_CD        ,
           V.SUB_TRD_CD    , 
           V.RLANE_CD           ,
           V.OFC_CD   AS BASE_RHQ_CD,
           OV.N2ND_PRNT_OFC_CD AS RHQ_CD     ,
           OV.N3RD_PRNT_OFC_CD AS AREA_CD    ,
           V.POL_SKIP  ,
           V.POD_SKIP  ,
           (SELECT DECODE(COUNT(*),0,0,1)
              FROM SPC_ALOC_POL_POD K
             WHERE K.RLANE_CD = V.RLANE_CD
               AND K.DIR_CD = V.DIR_CD
               AND K.VSL_CD = V.VSL_CD
               AND K.SKD_VOY_NO = V.SKD_VOY_NO
               AND K.SKD_DIR_CD = V.SKD_DIR_CD
               AND K.SLS_OFC_CD = T.SUB_OFC_CD
               AND K.POL_YD_CD = V.POL_CD
               AND K.POD_YD_CD = V.POD_CD
               AND K.TS_FLG = DECODE(T.IOC_TS_CD,'T','Y','N')
               AND K.IOC_CD = DECODE(T.IOC_TS_CD,'T','I',T.IOC_TS_CD)
           ) AS AP_MD,
           1 AS OTH_MD,
           1 AS NQTA_MD,
           1 AS NCFM_MD
    FROM (
              SELECT M.SLS_OFC_CD     AS SUB_OFC_CD,
                     M.SLS_RGN_OFC_CD AS RGN_OFC_CD,
                     M.POL_CD,
                     M.IOC_TS_CD 
                FROM REP_VVDS               V,
                     SPC_FCAST_OFC_POL_MAPG M,
                     (SELECT distinct a.ioc_cd, a.ofc_cd FROM ALL_DATA A WHERE A.IOC_CD<>'O') P
               WHERE M.REP_TRD_CD     = V.REP_TRD_CD
                 AND M.REP_SUB_TRD_CD = V.REP_SUB_TRD_CD
--                 AND M.TRD_CD         = V.TRD_CD
--                 AND M.SUB_TRD_CD     = V.SUB_TRD_CD
                 AND M.RLANE_CD       = V.RLANE_CD
                 AND M.DIR_CD         = V.DIR_CD
                 AND P.IOC_CD = DECODE(M.IOC_TS_CD,'T','I',M.IOC_TS_CD)
                 AND P.OFC_CD = M.SLS_OFC_CD
                 AND M.BSE_YRWK       = ( SELECT /*+ INDEX_DESC(MI XPKSPC_FCAST_OFC_POL_MAPG) */
                                                 MI.BSE_YRWK
                                            FROM SPC_FCAST_OFC_POL_MAPG MI
                                           WHERE MI.REP_TRD_CD     = M.REP_TRD_CD
                                             AND MI.REP_SUB_TRD_CD = M.REP_SUB_TRD_CD
                                             AND MI.RLANE_CD       = M.RLANE_CD
                                             AND MI.DIR_CD         = M.DIR_CD
                                             AND MI.IOC_TS_CD      = M.IOC_TS_CD
                                             AND MI.SLS_OFC_CD     = M.SLS_OFC_CD
                                             AND MI.BSE_YRWK      <= SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK
                                             AND ROWNUM = 1 )
              UNION ALL
              SELECT M.SLS_OFC_CD      AS SUB_OFC_CD,
                     M.SLS_RGN_OFC_CD  AS RGN_OFC_CD,
                     M.POL_CD,
                     M.IOC_TS_CD     
                FROM REP_VVDS                   V,
                     SPC_IRR_FCAST_OFC_POL_MAPG M,
                     (SELECT distinct a.ioc_cd, a.ofc_cd FROM ALL_DATA A WHERE A.IOC_CD<>'O') P
               WHERE M.REP_TRD_CD     = V.REP_TRD_CD
                 AND M.REP_SUB_TRD_CD = V.REP_SUB_TRD_CD
--                 AND M.TRD_CD         = V.TRD_CD
--                 AND M.SUB_TRD_CD     = V.SUB_TRD_CD
                 AND M.RLANE_CD       = V.RLANE_CD
                 AND M.DIR_CD         = V.DIR_CD
                 AND P.IOC_CD = DECODE(M.IOC_TS_CD,'T','I',M.IOC_TS_CD)
                 AND M.VSL_CD         = V.VSL_CD
                 AND M.SKD_VOY_NO     = V.SKD_VOY_NO
                 AND M.SKD_DIR_CD     = V.SKD_DIR_CD
                 AND P.OFC_CD = M.SLS_OFC_CD
    ) T, 
--  2014.08.13
--    VVD_POL_POD_ALL V,
    VVD_POL_POD   V,
    SPC_OFC_LVL   OV 
    WHERE T.POL_CD = SUBSTR( V.POL_CD ,1,5)
      AND T.RGN_OFC_CD = OV.OFC_CD
      AND V.IOC_CD = DECODE(T.IOC_TS_CD,'T','I',T.IOC_TS_CD)
      AND V.COST_YR||V.COST_WK BETWEEN OV.OFC_APLY_FM_YRWK AND OV.OFC_APLY_TO_YRWK
#if (${office} == '')
      AND (    V.POL_CONTI = V.OFC_CONTI
            OR V.OFC_CD    = OV.N2ND_PRNT_OFC_CD
            OR V.RLANE_CD = 'WAFIE' 
            OR OV.N2ND_PRNT_OFC_CD = 'SINRS' )
#else
      AND (    V.POL_CONTI = V.OFC_CONTI
            OR V.OFC_CD    = OV.N2ND_PRNT_OFC_CD
            OR V.RLANE_CD = 'WAFIE' 
            OR (V.OFC_CD = 'SINRS' AND V.RLANE_CD = 'WAXIA') )
#end
)
--IAS SECTOR 판매 활성화를 위한 POL-POD PAIR 로직 END

, ALL_DATA2 AS (
    SELECT IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD, ACCOUNT_CD, POL_CD, POD_CD, DEL_CD, POL_SEQ, POD_SEQ, POL_SKIP, POD_SKIP, REP_TRD_CD, REP_SUB_TRD_CD, TRD_CD, SUB_TRD_CD,
           MAX(BKG_QUOTA) AS BKG_QUOTA,
           MAX(BKG_QTA_CMB) AS BKG_QTA_CMB,
           MAX(FC_TEU) AS FC_TEU,
           MAX(FC_HC)AS FC_HC,
           MAX(FC_45) AS FC_45,
           MAX(FC_53) AS FC_53,
           MAX(FC_RF) AS FC_RF,
           MAX(FC_WGT) AS FC_WGT,
           MAX(UG_TEU) AS UG_TEU,
           MAX(UG_HC) AS UG_HC,
           MAX(UG_45) AS UG_45,
           MAX(UG_53) AS UG_53,
           MAX(UG_RF) AS UG_RF,
           MAX(UG_WGT) AS UG_WGT,
           MAX(MR_TEU) AS MR_TEU,
           MAX(MR_HC) AS MR_HC,
           MAX(MR_45) AS MR_45,
           MAX(MR_53) AS MR_53,
           MAX(MR_RF) AS MR_RF,
           MAX(MR_WGT) AS MR_WGT,
           MAX(AP_TEU) AS AP_TEU,
           MAX(AP_HC) AS AP_HC,
           MAX(AP_45) AS AP_45,
           MAX(AP_53) AS AP_53,
           MAX(AP_RF) AS AP_RF,
           MAX(AP_WGT) AS AP_WGT,
           MAX(BK_TEU) AS BK_TEU,
           MAX(BK_HC) AS BK_HC,
           MAX(BK_20) AS BK_20,
           MAX(BK_40) AS BK_40,
           MAX(BK_45) AS BK_45,
           MAX(BK_53) AS BK_53,
           MAX(BK_RF) AS BK_RF,
           MAX(BK_WGT) AS BK_WGT,
           MAX(BT_TEU) AS BT_TEU,
           MAX(BT_HC) AS BT_HC,
           MAX(BT_20) AS BT_20,
           MAX(BT_40) AS BT_40,
           MAX(BT_45) AS BT_45,
           MAX(BT_53) AS BT_53,
           MAX(BT_RF) AS BT_RF,
           MAX(BT_WGT) AS BT_WGT, MAX(BKG_VOL_VGM) AS BKG_VOL_VGM,MAX(BKG_WGT_VGM) AS BKG_WGT_VGM,
			  MAX(BS_TEU) AS BS_TEU   ,--2015.03.12
           MAX(BS_WGT) AS BS_WGT   ,--2015.03.12
           MAX(CM_OP) AS CM_OP,
           MAX(CM_OC) AS CM_OC,
           MAX(CM_VL) AS CM_VL,
           MAX(GT_TEU) AS GT_TEU,
           MAX(GT_HC) AS GT_HC,
           MAX(GT_45) AS GT_45,
           MAX(GT_53) AS GT_53,
           MAX(GT_RF) AS GT_RF,
           MAX(GT_WGT) AS GT_WGT,
           MAX(CFM_FLG) AS CFM_FLG,
           -- 2014.07.22 컬럼 추가
           MAX(FC_D2) AS FC_D2  ,
           MAX(FC_D4) AS FC_D4  ,
           MAX(FC_RD) AS FC_RD  ,
           MAX(BT_D2) AS BT_D2  ,
           MAX(BT_D4) AS BT_D4  ,
           MAX(BT_RD) AS BT_RD  ,
           MAX(AP_D2) AS AP_D2  ,
           MAX(AP_D4) AS AP_D4  ,
           MAX(AP_RD) AS AP_RD  ,
           MAX(PAST) AS PAST,
           MAX(LST_LODG_PORT_ETD_DT) AS LST_LODG_PORT_ETD_DT,
           MAX(LST_LODG_PORT_CD) AS LST_LODG_PORT_CD,
           MAX(AP_MD) AS AP_MD,
           MAX(OTH_MD) AS OTH_MD,
           MAX(NQTA_MD) AS NQTA_MD,
           MAX(NCFM_MD) AS NCFM_MD,
           MAX(SPC_CTRL_ALOC_RMK) AS SPC_CTRL_ALOC_RMK,
           MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK,
           MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK
      FROM (
--        SELECT IOC_TS_CD AS IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, 'OTHERS' AS US_MOD, 'OTHERS' AS ACCOUNT_CD, POL_CD, POD_CD, 'OTHERS' AS DEL_CD, POL_SEQ, POD_SEQ, POL_SKIP, POD_SKIP, REP_TRD_CD, REP_SUB_TRD_CD, TRD_CD, SUB_TRD_CD,
--               0 AS BKG_QUOTA,
--               0 AS BKG_QTA_CMB,
--               0 AS FC_TEU,
--               0 AS FC_HC,
--               0 AS FC_45,
--               0 AS FC_53,
--               0 AS FC_RF,
--               0 AS FC_WGT,
--               0 AS UG_TEU,
--               0 AS UG_HC,
--               0 AS UG_45,
--               0 AS UG_53,
--               0 AS UG_RF,
--               0 AS UG_WGT,
--               0 AS MR_TEU,
--               0 AS MR_HC,
--               0 AS MR_45,
--               0 AS MR_53,
--               0 AS MR_RF,
--               0 AS MR_WGT,
--               0 AS AP_TEU,
--               0 AS AP_HC,
--               0 AS AP_45,
--               0 AS AP_53,
--               0 AS AP_RF,
--               0 AS AP_WGT,
--               0 AS BK_TEU,
--               0 AS BK_HC,
--               0 AS BK_20,
--               0 AS BK_40,
--               0 AS BK_45,
--               0 AS BK_53,
--               0 AS BK_RF,
--               0 AS BK_WGT,
--               0 AS BT_TEU,
--               0 AS BT_20,
--               0 AS BT_40,
--               0 AS BT_HC,
--               0 AS BT_45,
--               0 AS BT_53,
--               0 AS BT_RF,
--               0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
--               0 AS CM_OP,
--               0 AS CM_OC,
--               0 AS CM_VL,
--               0 AS GT_TEU,
--               0 AS GT_HC,
--               0 AS GT_45,
--               0 AS GT_53,
--               0 AS GT_RF,
--               0 AS GT_WGT,
--               NULL AS CFM_FLG,
--               -- 2014.07.22 컬럼 추가
--               0 AS FC_D2  ,
--               0 AS FC_D4  ,
--               0 AS FC_RD  ,
--               0 AS BT_D2  ,
--               0 AS BT_D4  ,
--               0 AS BT_RD  ,
--               0 AS AP_D2  ,
--               0 AS AP_D4  ,
--               0 AS AP_RD  ,
--               PAST,
--               LST_LODG_PORT_ETD_DT,
--               LST_LODG_PORT_CD,
--               AP_MD,
--               OTH_MD,
--               NQTA_MD,
--               NCFM_MD,
--               NULL AS SPC_CTRL_ALOC_RMK,
--               NULL AS SPC_CTRL_ALOC_POL_RMK,
--               NULL AS SPC_CTRL_ALOC_POD_RMK
--          FROM CMPR
        SELECT IOC_TS_CD AS IOC_CD, 
               BASE_RHQ_CD, 
               RHQ_CD, 
               AREA_CD, 
               OFC_CD, 
               U.CTRL_LOC_ACCT_CD  AS US_MOD, 
               A.CTRL_LOC_ACCT_CD AS ACCOUNT_CD,
               POL_CD, 
               POD_CD, 
               D.CTRL_LOC_ACCT_CD AS DEL_CD, 
               POL_SEQ, POD_SEQ, POL_SKIP, POD_SKIP, C.REP_TRD_CD, C.REP_SUB_TRD_CD, TRD_CD, SUB_TRD_CD,
               0 AS BKG_QUOTA,
               0 AS BKG_QTA_CMB,
               0 AS FC_TEU,
               0 AS FC_HC,
               0 AS FC_45,
               0 AS FC_53,
               0 AS FC_RF,
               0 AS FC_WGT,
               0 AS UG_TEU,
               0 AS UG_HC,
               0 AS UG_45,
               0 AS UG_53,
               0 AS UG_RF,
               0 AS UG_WGT,
               0 AS MR_TEU,
               0 AS MR_HC,
               0 AS MR_45,
               0 AS MR_53,
               0 AS MR_RF,
               0 AS MR_WGT,
               0 AS AP_TEU,
               0 AS AP_HC,
               0 AS AP_45,
               0 AS AP_53,
               0 AS AP_RF,
               0 AS AP_WGT,
               0 AS BK_TEU,
               0 AS BK_HC,
               0 AS BK_20,
               0 AS BK_40,
               0 AS BK_45,
               0 AS BK_53,
               0 AS BK_RF,
               0 AS BK_WGT,
               0 AS BT_TEU,
               0 AS BT_20,
               0 AS BT_40,
               0 AS BT_HC,
               0 AS BT_45,
               0 AS BT_53,
               0 AS BT_RF,
               0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
					0 AS BS_TEU   ,--2015.03.12
					0 AS BS_WGT   ,--2015.03.12
               0 AS CM_OP,
               0 AS CM_OC,
               0 AS CM_VL,
               0 AS GT_TEU,
               0 AS GT_HC,
               0 AS GT_45,
               0 AS GT_53,
               0 AS GT_RF,
               0 AS GT_WGT,
               NULL AS CFM_FLG,
               -- 2014.07.22 컬럼 추가
               0 AS FC_D2  ,
               0 AS FC_D4  ,
               0 AS FC_RD  ,
               0 AS BT_D2  ,
               0 AS BT_D4  ,
               0 AS BT_RD  ,
               0 AS AP_D2  ,
               0 AS AP_D4  ,
               0 AS AP_RD  ,
               PAST,
               LST_LODG_PORT_ETD_DT,
               LST_LODG_PORT_CD,
               AP_MD,
               OTH_MD,
               NQTA_MD,
               NCFM_MD,
               NULL AS SPC_CTRL_ALOC_RMK,
               NULL AS SPC_CTRL_ALOC_POL_RMK,
               NULL AS SPC_CTRL_ALOC_POD_RMK
          FROM CMPR C,
               CONTROL_OPT U,
               CONTROL_OPT A,
               CONTROL_OPT D
         WHERE U.ALOC_CTRL_TP_CD = 'U'
           AND A.ALOC_CTRL_TP_CD IN ('A', 'B', 'C')
           AND D.ALOC_CTRL_TP_CD IN ('L', 'E')
        UNION ALL
        SELECT IOC_CD, 
               BASE_RHQ_CD, 
               RHQ_CD, 
               AREA_CD, 
               OFC_CD, 
               US_MOD, 
               ACCOUNT_CD, 
               POL_CD, POD_CD, DEL_CD, POL_SEQ, POD_SEQ, POL_SKIP, POD_SKIP, REP_TRD_CD, REP_SUB_TRD_CD, TRD_CD, SUB_TRD_CD,
               BKG_QUOTA,
               BKG_QTA_CMB,
               FC_TEU,
               FC_HC,
               FC_45,
               FC_53,
               FC_RF,
               FC_WGT,
               UG_TEU,
               UG_HC,
               UG_45,
               UG_53,
               UG_RF,
               UG_WGT,
               MR_TEU,
               MR_HC,
               MR_45,
               MR_53,
               MR_RF,
               MR_WGT,
               AP_TEU,
               AP_HC,
               AP_45,
               AP_53,
               AP_RF,
               AP_WGT,
               BK_TEU,
               BK_HC,
               BK_20,
               BK_40,
               BK_45,
               BK_53,
               BK_RF,
               BK_WGT,
               BT_TEU,
               BT_HC,
               BT_20,
               BT_40,
               BT_45,
               BT_53,
               BT_RF,
               BT_WGT,BKG_VOL_VGM,BKG_WGT_VGM,
					0 AS BS_TEU   ,--2015.03.12
					0 AS BS_WGT   ,--2015.03.12
               CM_OP,
               CM_OC,
               CM_VL,
               GT_TEU,
               GT_HC,
               GT_45,
               GT_53,
               GT_RF,
               GT_WGT,
               CFM_FLG,
               -- 2014.07.22 컬럼 추가
               FC_D2  ,
               FC_D4  ,
               FC_RD  ,
               BT_D2  ,
               BT_D4  ,
               BT_RD  ,
               AP_D2  ,
               AP_D4  ,
               AP_RD  ,
               PAST,
               LST_LODG_PORT_ETD_DT,
               LST_LODG_PORT_CD,
               AP_MD,
               OTH_MD,
               NQTA_MD,
               NCFM_MD,
               SPC_CTRL_ALOC_RMK,
               SPC_CTRL_ALOC_POL_RMK,
               SPC_CTRL_ALOC_POD_RMK
          FROM ALL_DATA
         UNION ALL
        SELECT IOC_CD, 
               BASE_RHQ_CD, 
               RHQ_CD, 
               AREA_CD, 
               OFC_CD, 
               U.CTRL_LOC_ACCT_CD  AS US_MOD, 
               A.CTRL_LOC_ACCT_CD AS ACCOUNT_CD,
               POL_CD, POD_CD, 
               D.CTRL_LOC_ACCT_CD AS DEL_CD,  
               POL_SEQ, POD_SEQ, POL_SKIP, POD_SKIP, C.REP_TRD_CD, C.REP_SUB_TRD_CD, TRD_CD, SUB_TRD_CD,
               0 AS BKG_QUOTA,
               0 AS BKG_QTA_CMB,
               0 AS FC_TEU,
               0 AS FC_HC,
               0 AS FC_45,
               0 AS FC_53,
               0 AS FC_RF,
               0 AS FC_WGT,
               0 AS UG_TEU,
               0 AS UG_HC,
               0 AS UG_45,
               0 AS UG_53,
               0 AS UG_RF,
               0 AS UG_WGT,
               0 AS MR_TEU,
               0 AS MR_HC,
               0 AS MR_45,
               0 AS MR_53,
               0 AS MR_RF,
               0 AS MR_WGT,
               0 AS AP_TEU,
               0 AS AP_HC,
               0 AS AP_45,
               0 AS AP_53,
               0 AS AP_RF,
               0 AS AP_WGT,
               0 AS BK_TEU,
               0 AS BK_HC,
               0 AS BK_20,
               0 AS BK_40,
               0 AS BK_45,
               0 AS BK_53,
               0 AS BK_RF,
               0 AS BK_WGT,
               0 AS BT_TEU,
               0 AS BT_20,
               0 AS BT_40,
               0 AS BT_HC,
               0 AS BT_45,
               0 AS BT_53,
               0 AS BT_RF,
               0 AS BT_WGT,0 AS BKG_VOL_VGM,0 AS BKG_WGT_VGM,
					0 AS BS_TEU   ,--2015.03.12
					0 AS BS_WGT   ,--2015.03.12
               0 AS CM_OP,
               0 AS CM_OC,
               0 AS CM_VL,
               0 AS GT_TEU,
               0 AS GT_HC,
               0 AS GT_45,
               0 AS GT_53,
               0 AS GT_RF,
               0 AS GT_WGT,
               NULL AS CFM_FLG,
               -- 2014.07.22 컬럼 추가
               0 AS FC_D2  ,
               0 AS FC_D4  ,
               0 AS FC_RD  ,
               0 AS BT_D2  ,
               0 AS BT_D4  ,
               0 AS BT_RD  ,
               0 AS AP_D2  ,
               0 AS AP_D4  ,
               0 AS AP_RD  ,
               PAST,
               LST_LODG_PORT_ETD_DT,
               LST_LODG_PORT_CD,
               1 AS AP_MD,
               1 AS OTH_MD,
               1 AS NQTA_MD,
               1 AS NCFM_MD,
               NULL AS SPC_CTRL_ALOC_RMK,
               NULL AS SPC_CTRL_ALOC_POL_RMK,
               NULL AS SPC_CTRL_ALOC_POD_RMK
          FROM ALL_DATA C,
               CONTROL_OPT U,
               CONTROL_OPT A,
               CONTROL_OPT D
         WHERE U.ALOC_CTRL_TP_CD = 'U'
           AND A.ALOC_CTRL_TP_CD IN ('A', 'B', 'C')
           AND D.ALOC_CTRL_TP_CD IN ('L', 'E') 
          )
     GROUP BY IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD, ACCOUNT_CD, POL_CD, POD_CD, DEL_CD, POL_SEQ, POD_SEQ, POL_SKIP, POD_SKIP, REP_TRD_CD, REP_SUB_TRD_CD, TRD_CD, SUB_TRD_CD
)
#end

, HRCH_DATA AS (
    SELECT IOC_CD     ,
           BASE_RHQ_CD,
           RHQ_CD     ,
           AREA_CD    ,
           CASE
           		WHEN RHQ_CD IS NOT NULL AND AREA_CD IS NULL AND OFC_CD IS NULL AND POL_CD IS NULL AND POD_CD IS NULL THEN 'Y'
            	ELSE 'N'
           END AS FLG ,
           OFC_CD     ,
           US_MOD     ,
           ACCOUNT_CD ,
           POL_CD     ,
           POD_CD     ,
           DEL_CD     ,
           POL_SEQ    ,
           POD_SEQ    ,
           MAX(POL_SKIP)          AS POL_SKIP      ,
           MAX(POD_SKIP)          AS POD_SKIP      ,
           MAX(REP_TRD_CD)        AS REP_TRD_CD    ,
           MAX(REP_SUB_TRD_CD)    AS REP_SUB_TRD_CD,
           MAX(TRD_CD)            AS TRD_CD        ,
           MAX(SUB_TRD_CD)        AS SUB_TRD_CD    ,
           SUM(BKG_QUOTA)         AS BKG_QUOTA     ,
           SUM(BKG_QTA_CMB)/DECODE(SUM(BKG_QUOTA), 0, 1, SUM(BKG_QUOTA)) AS BKG_QTA_CMB,
           SUM(FC_TEU)            AS FC_TEU        ,
           SUM(FC_HC)             AS FC_HC         ,
           SUM(FC_45)             AS FC_45         ,
           SUM(FC_53)             AS FC_53         ,
           SUM(FC_D2)             AS FC_D2         ,
           SUM(FC_D4)             AS FC_D4         ,
           SUM(FC_RF)             AS FC_RF         ,
           SUM(FC_RD)             AS FC_RD         ,
           SUM(FC_WGT)            AS FC_WGT        ,
           SUM(UG_TEU)            AS UG_TEU        ,
           SUM(UG_HC)             AS UG_HC         ,
           SUM(UG_45)             AS UG_45         ,
           SUM(UG_53)             AS UG_53         ,
           SUM(UG_RF)             AS UG_RF         ,
           SUM(UG_WGT)            AS UG_WGT        ,
           SUM(MR_TEU)            AS MR_TEU        ,
           SUM(MR_HC)             AS MR_HC         ,
           SUM(MR_45)             AS MR_45         ,
           SUM(MR_53)             AS MR_53         ,
           SUM(MR_RF)             AS MR_RF         ,
           SUM(MR_WGT)            AS MR_WGT        ,
           SUM(AP_TEU)            AS AP_TEU        ,
           SUM(AP_HC)             AS AP_HC         ,
           SUM(AP_45)             AS AP_45         ,
           SUM(AP_53)             AS AP_53         ,
           SUM(AP_D2)             AS AP_D2         ,
           SUM(AP_D4)             AS AP_D4         ,
           SUM(AP_RF)             AS AP_RF         ,
           SUM(AP_RD)             AS AP_RD         ,
           SUM(AP_WGT)            AS AP_WGT        ,
           SUM(BK_TEU)            AS BK_TEU        ,
           SUM(BK_20)             AS BK_20         ,
           SUM(BK_40)             AS BK_40         ,
           SUM(BT_D2)             AS BT_D2         ,
           SUM(BT_D4)             AS BT_D4         ,
           SUM(BK_HC)             AS BK_HC         ,
           SUM(BK_45)             AS BK_45         ,
           SUM(BK_53)             AS BK_53         ,
           SUM(BK_RF)             AS BK_RF         ,
           SUM(BT_RD)             AS BT_RD         ,
           SUM(BK_WGT)            AS BK_WGT        ,
           SUM(BT_TEU)            AS BT_TEU        ,
           SUM(BT_20)             AS BT_20         ,
           SUM(BT_40)             AS BT_40         ,
           SUM(BT_HC)             AS BT_HC         ,
           SUM(BT_45)             AS BT_45         ,
           SUM(BT_53)             AS BT_53         ,
           SUM(BT_RF)             AS BT_RF         ,
           SUM(BT_WGT)            AS BT_WGT        ,SUM(BKG_VOL_VGM) AS BKG_VOL_VGM,SUM(BKG_WGT_VGM) AS BKG_WGT_VGM,
           SUM(BS_TEU)            AS BS_TEU        ,--2015.03.12
           SUM(BS_WGT)            AS BS_WGT        ,--2015.03.12
           SUM(CM_OP)         	  AS CM_OP         ,   
           SUM(CM_OC)         	  AS CM_OC         ,   
           SUM(CM_VL)         	  AS CM_VL         ,              
           SUM(GT_TEU)            AS GT_TEU        ,
           SUM(GT_HC)             AS GT_HC         ,
           SUM(GT_45)             AS GT_45         ,
           SUM(GT_53)             AS GT_53         ,
           SUM(GT_RF)             AS GT_RF         ,
           SUM(GT_WGT)            AS GT_WGT        ,
           SUM(AP_MD)             AS AP_MD         ,
           NVL(MAX(CFM_FLG), 'N') AS CFM_FLG       ,
           COUNT(DISTINCT DECODE(POD_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD||POD_CD))) + DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD))), 0) AS CHILD_CNT,
           COUNT(DISTINCT DECODE(POD_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD||POD_CD))) AS LEAF_CNT,
           DECODE(NVL(POL_CD, '+'), '+', COUNT(DISTINCT DECODE(POL_CD, '0000000', NULL, DECODE(NQTA_MD * NCFM_MD, 0, NULL, POL_CD))), 0) AS POD_CNT,
           --2014.07.28 DEL LEVEL추가  + DECODE(DEL_CD, NULL, 0, 1)
           DECODE(OFC_CD, NULL, 0, 1) + DECODE(US_MOD, NULL, 0, 1) + DECODE(ACCOUNT_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1) + DECODE(DEL_CD, NULL, 0, 1) AS LVL,
           -- US_MOD, ACCOUNT LEVEL제거
           -- DECODE(OFC_CD, NULL, 0, 1) + DECODE(POL_CD, NULL, 0, 1) + DECODE(POD_CD, NULL, 0, 1) AS LVL, 
           MIN(PAST) AS PAST,
           LST_LODG_PORT_ETD_DT,
           LST_LODG_PORT_CD    ,
           SUM(NQTA_MD) AS NQTA_MD,
           SUM(NCFM_MD) AS NCFM_MD,
           (
              SELECT CTRL_LVL
                FROM REP_VVDS
           ) AS CTRL_LVL,
           MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ,
           MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK,
           MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK
#if (${all_pol} == 'Y')
      FROM ALL_DATA2
#else
      FROM ALL_DATA
#end
-- OFC_CD가 SHARC,SINRS,SZPDC 인경우  2009/01월부터 적용
#if (${office} != '')
     WHERE ( RHQ_CD LIKE BASE_RHQ_CD||'%' OR AREA_CD LIKE BASE_RHQ_CD||'%'
             OR (@[office] = 'SINRS' AND @[lane] = 'WAXIA') )
#end
  GROUP BY GROUPING SETS (
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD, ACCOUNT_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ, LST_LODG_PORT_ETD_DT, LST_LODG_PORT_CD, DEL_CD),
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD, ACCOUNT_CD, POL_CD, POL_SEQ, POD_CD, POD_SEQ, LST_LODG_PORT_ETD_DT, LST_LODG_PORT_CD),
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD, ACCOUNT_CD, POL_CD, POL_SEQ),
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD, ACCOUNT_CD),
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD, US_MOD),
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD, AREA_CD, OFC_CD),
                           (IOC_CD, BASE_RHQ_CD, RHQ_CD),
                           -- 2014.10.06 DEST별 SUM추가
                           --(IOC_CD, BASE_RHQ_CD, DEL_CD),
                           (IOC_CD, BASE_RHQ_CD)
                         )
UNION ALL
   SELECT  IOC_CD     ,
           BASE_RHQ_CD,
           NULL RHQ_CD     ,
           NULL AREA_CD    ,
           'N' AS FLG ,
           NULL OFC_CD     ,
           NULL US_MOD     ,
           NULL ACCOUNT_CD ,
           NULL POL_CD     ,
           NULL POD_CD     ,
           DEL_CD     ,
           NULL POL_SEQ    ,
           NULL POD_SEQ    ,
           MAX(POL_SKIP)          AS POL_SKIP      ,
           MAX(POD_SKIP)          AS POD_SKIP      ,
           MAX(REP_TRD_CD)        AS REP_TRD_CD    ,
           MAX(REP_SUB_TRD_CD)    AS REP_SUB_TRD_CD,
           MAX(TRD_CD)            AS TRD_CD        ,
           MAX(SUB_TRD_CD)        AS SUB_TRD_CD    ,
           SUM(BKG_QUOTA)         AS BKG_QUOTA     ,
           SUM(BKG_QTA_CMB)/DECODE(SUM(BKG_QUOTA), 0, 1, SUM(BKG_QUOTA)) AS BKG_QTA_CMB,
           SUM(FC_TEU)            AS FC_TEU        ,
           SUM(FC_HC)             AS FC_HC         ,
           SUM(FC_45)             AS FC_45         ,
           SUM(FC_53)             AS FC_53         ,
           SUM(FC_D2)             AS FC_D2         ,
           SUM(FC_D4)             AS FC_D4         ,
           SUM(FC_RF)             AS FC_RF         ,
           SUM(FC_RD)             AS FC_RD         ,
           SUM(FC_WGT)            AS FC_WGT        ,
           SUM(UG_TEU)            AS UG_TEU        ,
           SUM(UG_HC)             AS UG_HC         ,
           SUM(UG_45)             AS UG_45         ,
           SUM(UG_53)             AS UG_53         ,
           SUM(UG_RF)             AS UG_RF         ,
           SUM(UG_WGT)            AS UG_WGT        ,
           SUM(MR_TEU)            AS MR_TEU        ,
           SUM(MR_HC)             AS MR_HC         ,
           SUM(MR_45)             AS MR_45         ,
           SUM(MR_53)             AS MR_53         ,
           SUM(MR_RF)             AS MR_RF         ,
           SUM(MR_WGT)            AS MR_WGT        ,
           SUM(AP_TEU)            AS AP_TEU        ,
           SUM(AP_HC)             AS AP_HC         ,
           SUM(AP_45)             AS AP_45         ,
           SUM(AP_53)             AS AP_53         ,
           SUM(AP_D2)             AS AP_D2         ,
           SUM(AP_D4)             AS AP_D4         ,
           SUM(AP_RF)             AS AP_RF         ,
           SUM(AP_RD)             AS AP_RD         ,
           SUM(AP_WGT)            AS AP_WGT        ,
           SUM(BK_TEU)            AS BK_TEU        ,
           SUM(BK_20)             AS BK_20         ,
           SUM(BK_40)             AS BK_40         ,
           SUM(BT_D2)             AS BT_D2         ,
           SUM(BT_D4)             AS BT_D4         ,
           SUM(BK_HC)             AS BK_HC         ,
           SUM(BK_45)             AS BK_45         ,
           SUM(BK_53)             AS BK_53         ,
           SUM(BK_RF)             AS BK_RF         ,
           SUM(BT_RD)             AS BT_RD         ,
           SUM(BK_WGT)            AS BK_WGT        ,
           SUM(BT_TEU)            AS BT_TEU        ,
           SUM(BT_20)             AS BT_20         ,
           SUM(BT_40)             AS BT_40         ,
           SUM(BT_HC)             AS BT_HC         ,
           SUM(BT_45)             AS BT_45         ,
           SUM(BT_53)             AS BT_53         ,
           SUM(BT_RF)             AS BT_RF         ,
           SUM(BT_WGT)            AS BT_WGT        ,SUM(BKG_VOL_VGM) AS BKG_VOL_VGM,SUM(BKG_WGT_VGM) AS BKG_WGT_VGM,
           SUM(BS_TEU)            AS BS_TEU        ,--2015.03.12
           SUM(BS_WGT)            AS BS_WGT        ,--2015.03.12
           SUM(CM_OP)         	  AS CM_OP         ,   
           SUM(CM_OC)         	  AS CM_OC         ,   
           SUM(CM_VL)         	  AS CM_VL         ,              
           SUM(GT_TEU)            AS GT_TEU        ,
           SUM(GT_HC)             AS GT_HC         ,
           SUM(GT_45)             AS GT_45         ,
           SUM(GT_53)             AS GT_53         ,
           SUM(GT_RF)             AS GT_RF         ,
           SUM(GT_WGT)            AS GT_WGT        ,
           SUM(AP_MD)             AS AP_MD         ,
           NVL(MAX(CFM_FLG), 'N') AS CFM_FLG       ,
           0 AS CHILD_CNT,
           0 AS LEAF_CNT,
           0 AS POD_CNT,
           DECODE(DEL_CD, NULL, 0, 1) AS LVL,
           MIN(PAST) AS PAST,
           NULL LST_LODG_PORT_ETD_DT,
           NULL LST_LODG_PORT_CD    ,
           SUM(NQTA_MD) AS NQTA_MD,
           SUM(NCFM_MD) AS NCFM_MD,
           (
              SELECT CTRL_LVL
                FROM REP_VVDS
           ) AS CTRL_LVL,
           MAX(SPC_CTRL_ALOC_RMK)     AS SPC_CTRL_ALOC_RMK    ,
           MAX(SPC_CTRL_ALOC_POL_RMK) AS SPC_CTRL_ALOC_POL_RMK,
           MAX(SPC_CTRL_ALOC_POD_RMK) AS SPC_CTRL_ALOC_POD_RMK
#if (${all_pol} == 'Y')
      FROM ALL_DATA2
#else
      FROM ALL_DATA
#end
-- OFC_CD가 SHARC,SINRS,SZPDC 인경우  2009/01월부터 적용
#if (${office} != '')
     WHERE ( RHQ_CD LIKE BASE_RHQ_CD||'%' OR AREA_CD LIKE BASE_RHQ_CD||'%'
             OR (@[office] = 'SINRS' AND @[lane] = 'WAXIA') )
#end
  GROUP BY GROUPING SETS (
                          (IOC_CD, BASE_RHQ_CD, DEL_CD)
                         )
)
-- 주차별 CMB 
-- 2014.08.07 WK_CMB 전체 변경
, WK_CMB AS (
    SELECT RNUM,
       	   COST_YRWK,
           SLS_OFC_CD,
           TS_FLG,
           IOC_CD,
           NVL(POL_YD_CD, '00000') POL_YD_CD,
           NVL(POD_YD_CD, '00000') POD_YD_CD,
           SUM(BKG_REV) AS BKG_REV, NVL(SUM(DMDT_COM_AMT),0) AS DMDT_COM_AMT,
           SUM(ESTM_CM_COST_AMT) AS ESTM_CM_COST_AMT,
           SUM(BKG_TTL_QTY) AS BKG_TTL_QTY,
           SUM(USD_BKG_TTL_WGT) AS BKG_TTL_WGT,
           NVL(US_MOD, '00000') US_MOD,
           NVL(DEL_CD, '00000') DEL_CD,
           NVL(ACCOUNT_CD, '000') ACCOUNT_CD
     FROM  
     (  SELECT T.RNUM       ,
               BAR.COST_YRWK,
               BAR.SLS_OFC_CD,
               BAR.TS_FLG,
               BAR.IOC_CD,
               BAR.POL_YD_CD,
               BAR.POD_YD_CD,
               BAR.BKG_REV,
               BAR.DMDT_COM_AMT,
               BAR.ESTM_CM_COST_AMT,
               BAR.BKG_TTL_QTY,
               BAR.USD_BKG_TTL_WGT,
               CASE WHEN M.CTRL_USA = 'Y' THEN
               --DECODE(BAR.USA_BKG_MOD_CD,'OTH','OTHERS',BAR.USA_BKG_MOD_CD) -- SPC_BKG_AVG_REV.LOCAL/IPI
           	       BAR.USA_BKG_MOD_CD -- SPC_BKG_AVG_REV.LOCAL/IPI
               ELSE
           	      'OTH'
               END AS US_MOD, 
               CASE WHEN M.CTRL_DEST <> 'N' THEN	
           	        NVL((SELECT DISTINCT(D.CTRL_LOC_ACCT_CD)
                	    FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                	    WHERE P.RLANE_CD         = D.RLANE_CD
                	    AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)     = D.TRD_CD
                	    AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD) = D.SUB_TRD_CD
                	    AND P.SKD_DIR_CD       = D.DIR_CD 
                	    AND D.ALOC_CTRL_TP_CD  = M.CTRL_DEST
                        AND DECODE(M.CTRL_DEST, 'E', D.CTRL_LOC_ACCT_CD, 'G', D.ALOC_CTRL_DTL_CD) = (SELECT DECODE(M.CTRL_DEST, 'E', A.ECC_CD, C.LOC_CD)
                                                                                                                  FROM MDM_EQ_ORZ_CHT A,
                                                                                                                       MDM_LOCATION C 
                                                                                                                 WHERE C.LOC_CD = DECODE(M.CTRL_DEST_LVL,'T', BAR.BKG_DEL_CD, BAR.BKG_POD_CD)
                                                                                                                   AND A.SCC_CD = C.SCC_CD)
                	    ),'XXXXX')  
                ELSE
            	    'XXXXX'
                END AS DEL_CD,
                CASE WHEN M.CTRL_ACCOUNT = 'Y' THEN
                -- 2015.04.20 동일 CUSTOMER/MULTI 계약 관련 처리
            	    NVL((SELECT MAX(D.CTRL_LOC_ACCT_CD)
                	    FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                	    WHERE P.RLANE_CD                         = D.RLANE_CD
                	    AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)      = D.TRD_CD
                	    AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD)  = D.SUB_TRD_CD
                	    AND P.SKD_DIR_CD                         = D.DIR_CD 
                	    AND D.ALOC_CTRL_TP_CD                    = 'A'  
                	    AND D.ALOC_CTRL_DTL_CD                   = BAR.CUST_CNT_CD ||LPAD(BAR.CUST_SEQ,6,'0')                                        
                 	    ),'XX999999')   
                ELSE
            	    'XX999999'
                END AS ACCOUNT_CD
      FROM SPC_BKG_AVG_REV BAR,
           REP_VVDS        P  ,
           (SELECT DISTINCT DENSE_RANK() OVER (ORDER BY COST_YRWK) AS RNUM,
                   COST_YRWK
              FROM SPC_BKG_AVG_REV
           ) T,
             -- 2014.08.05 추가
           (SELECT DIR_CD,
                CTRL_USA ,
                CTRL_ACCOUNT,
                CTRL_DEST, -- C = COUNTRY, L = LOCATION
                CTRL_DEST_LVL -- D = BKG_POD, T = BKG_DEL  
            FROM REP_VVDS
            ) M 
     WHERE BAR.COST_YRWK   = T.COST_YRWK
       AND BAR.OFC_KND_CD IN ('1', '2', '3')
       AND BAR.RLANE_CD    = P.RLANE_CD
       AND BAR.DIR_CD      = P.DIR_CD
       AND BAR.DIR_CD      = M.DIR_CD
#if (${lane} != 'WAFIE')
       AND BAR.TRD_CD NOT IN ('IES', 'IMS')
#end 
       AND BAR.POD_YD_CD  <> '00000'
       ) WK_CMB_BASE
	GROUP BY GROUPING SETS (
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,SLS_OFC_CD,US_MOD, ACCOUNT_CD,POL_YD_CD,POD_YD_CD,DEL_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,SLS_OFC_CD,US_MOD, ACCOUNT_CD,POL_YD_CD,POD_YD_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,SLS_OFC_CD,US_MOD, ACCOUNT_CD,POL_YD_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,SLS_OFC_CD,US_MOD, ACCOUNT_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,SLS_OFC_CD,US_MOD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,SLS_OFC_CD)
                            )
)
  SELECT EDIT,
         REP_TRD_CD    ,
         REP_SUB_TRD_CD,
         TRD_CD        ,
         SUB_TRD_CD    ,
         DECODE(IOC_CD, 'O', 'OCN', 'I', 'IPC', 'T', 'T/S', 'E', 'EQ', 'OT', 'T-OCN', 'IT', 'T-IPC', 'TT', 'T-T/S') AS IOC_CD,
         BASE_RHQ_CD,
         DECODE(RHQ_CD, 'NULL', '', RHQ_CD) AS RHQ_CD,
#if (${lane} == 'WAFIE')
         NVL(AREA_CD, DECODE(RHQ_CD, 'NULL', '', RHQ_CD)) AS AREA_CD,
         DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, OFC_CD) AS OFC_CD,
#else
         DECODE(SUBSTR(IOC_CD, 1, 1), 'T', RHQ_CD, NVL(AREA_CD, DECODE(RHQ_CD, 'NULL', '', RHQ_CD))) AS AREA_CD,
	#if (${office} == '')
         DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, DECODE(RHQ_CD, 'SINRS', OFC_CD, DECODE(IOC_CD, 'T', '', 'TT', '', OFC_CD))) AS OFC_CD,
	#else
         DECODE(RHQ_CD, NULL, '+', BASE_RHQ_CD, OFC_CD, DECODE(IOC_CD, 'T', '', 'TT', '', OFC_CD)) AS OFC_CD,
	#end
#end
         US_MOD,
         ACCOUNT_CD,
         CASE WHEN ACCOUNT_CD = '+' THEN ''
              WHEN ACCOUNT_CD = 'OTHERS' THEN 'OTHERS'           
              -- 2014.12.03 기존의 CUSTOMER CODE는 8자리 이외의 CASE는 모두 계약으로 판단하여 NAME에 CODE사용
              -- 2014.12.12 계약 no길이 혼재로인해 변경. 앞자리 2개가 알파벳인 경우 CUSTOMER/그 외엔 계약
              WHEN LENGTH(TRIM(TRANSLATE(ACCOUNT_CD, '1234567890', '          '))) = 2 THEN 
              (SELECT CUST_LGL_ENG_NM 
                 FROM MDM_CUSTOMER
                WHERE CUST_CNT_CD||LPAD(CUST_SEQ, 6, '0') = ACCOUNT_CD ) 
              ELSE 
              -- 2014.12.17 계약의 경우 최신 CONTRACTOR이름 보여짐
              NVL((
              -- SC CASE NAME 
                SELECT (SELECT CUST_LGL_ENG_NM 
                        FROM MDM_CUSTOMER A 
                        WHERE A.CUST_CNT_CD = AC.CUST_CNT_CD 
                        AND A.CUST_SEQ = AC.CUST_SEQ ) CUST_LGL_ENG_NM
                FROM    PRI_SP_HDR    HD  ,
                        PRI_SP_MN     MN  ,
                        PRI_SP_CTRT_PTY AC
                WHERE   HD.SC_NO        = ACCOUNT_CD
                AND     MN.PROP_NO      = HD.PROP_NO
                AND     MN.PROP_STS_CD  = 'F'    -- Filed만 B/L적용 가능 
                AND     AC.PROP_NO      = MN.PROP_NO
                AND     AC.AMDT_SEQ     = MN.AMDT_SEQ
                AND     AC.PRC_CTRT_PTY_TP_CD = 'C'
                AND     AC.AMDT_SEQ   = (SELECT MAX(AMDT_SEQ)
                                           FROM PRI_SP_MN N_MN
                                          WHERE N_MN.PROP_NO = HD.PROP_NO
					    AND	N_MN.PROP_STS_CD  = 'F'
                                        )
                AND     ROWNUM = 1 -- multi인 경우 에러 발생하므로 미리 막음
                UNION ALL
                SELECT  (SELECT CUST_LGL_ENG_NM 
                        FROM MDM_CUSTOMER A 
                        WHERE A.CUST_CNT_CD = MN.CTRT_CUST_CNT_CD 
                        AND A.CUST_SEQ = MN.CTRT_CUST_SEQ ) CUST_LGL_ENG_NM
                FROM    PRI_RP_HDR    HD  ,
                        PRI_RP_MN     MN  
                WHERE   HD.RFA_NO        = ACCOUNT_CD
                AND     MN.PROP_NO       = HD.PROP_NO
                AND     MN.PROP_STS_CD   = 'A'        /*상수*/
                AND     MN.AMDT_SEQ      = (SELECT MAX(AMDT_SEQ)
                                              FROM PRI_RP_MN N_MN
                                             WHERE N_MN.PROP_NO = HD.PROP_NO
                                               AND N_MN.PROP_STS_CD   = 'A'  )
                AND     ROWNUM = 1
              ), ACCOUNT_CD)
            END AS ACCOUNT_NM,
	 POL_CD	   ,
         POD_CD    ,
         POL_SEQ   ,
         POD_SEQ   ,
         DEL_CD    ,
         POL_SKIP  ,
         POD_SKIP  ,
         BKG_QUOTA,
         BKG_QTA_CMB,
         (CASE WHEN NVL(CMB4, 0) > 0 THEN 
                    (CASE WHEN NVL(CMB3, 0) > 0 THEN CMB4 - CMB3
                          WHEN NVL(CMB2, 0) > 0 THEN CMB4 - CMB2
                          WHEN NVL(CMB1, 0) > 0 THEN CMB4 - CMB1
                          ELSE CMB4
                     END)
               WHEN NVL(CMB3, 0) > 0 THEN  
                    (CASE WHEN NVL(CMB2, 0) > 0 THEN CMB3 - CMB2
                          WHEN NVL(CMB1, 0) > 0 THEN CMB3 - CMB1
                          ELSE CMB3
                     END)
               WHEN NVL(CMB2, 0) > 0 THEN 
                    (CASE WHEN NVL(CMB1, 0) > 0 THEN CMB2 - CMB1
                          ELSE CMB2
                     END)
               WHEN NVL(CMB1, 0) > 0 THEN CMB1
               ELSE 0
         END) CMB_TREND, 
         (CASE WHEN NVL(CMB_WGT4, 0) > 0 THEN 
                    (CASE WHEN NVL(CMB_WGT3, 0) > 0 THEN CMB_WGT4 - CMB_WGT3
                          WHEN NVL(CMB_WGT2, 0) > 0 THEN CMB_WGT4 - CMB_WGT2
                          WHEN NVL(CMB_WGT1, 0) > 0 THEN CMB_WGT4 - CMB_WGT1
                          ELSE CMB_WGT4
                     END)
               WHEN NVL(CMB_WGT3, 0) > 0 THEN  
                    (CASE WHEN NVL(CMB_WGT2, 0) > 0 THEN CMB_WGT3 - CMB_WGT2
                          WHEN NVL(CMB_WGT1, 0) > 0 THEN CMB_WGT3 - CMB_WGT1
                          ELSE CMB_WGT3
                     END)
               WHEN NVL(CMB_WGT2, 0) > 0 THEN 
                    (CASE WHEN NVL(CMB_WGT1, 0) > 0 THEN CMB_WGT2 - CMB_WGT1
                          ELSE CMB_WGT2
                     END)
               WHEN NVL(CMB_WGT1, 0) > 0 THEN CMB_WGT1
               ELSE 0
         END) CMB_WGT_TREND,
         CMB,
         CMB_WGT,
         CMB1,
         CMB_WGT1,
         CMB2,
         CMB_WGT2,
         CMB3,
         CMB_WGT3,
         CMB4,
         CMB_WGT4,
         FC_TTL_TEU,
         FC_TEU   ,
         FC_HC    ,
         FC_45    ,
         FC_53    ,
         FC_RF    ,
         FC_D2    ,
         FC_D4    ,
         FC_RD    ,
         FC_WGT   ,
         UG_TEU   ,
         UG_HC    ,
         UG_45    ,
         UG_53    ,
         UG_RF    ,
         UG_WGT   ,
         MR_TEU   ,
         MR_HC    ,
         MR_45    ,
         MR_53    ,
         MR_RF    ,
         MR_WGT   ,
         AP_TEU,
         AP_HC ,
         AP_45 ,
         AP_53 ,
         AP_RF ,
         AP_D2 ,
         AP_D4 ,
         AP_RD ,
         AP_WGT,
         BK_TEU,
         BK_20 ,
         BK_40 ,
         BT_D2 ,
         BT_D4 ,
         BT_RD ,
         BK_HC ,
         BK_45 ,
         BK_53 ,
         BK_RF ,
         BK_WGT,
         BT_TEU,
         BT_20 ,
         BT_40 ,
         BT_HC ,
         BT_45 ,
         BT_53 ,
         BT_RF ,
         BT_WGT,BKG_VOL_VGM,BKG_WGT_VGM,
         BS_TEU   ,--2015.03.12
         BS_WGT   ,--2015.03.12
         CM_OP ,   
         CM_OC ,   
         CM_VL ,               
         GT_TEU,
         GT_HC ,
         GT_45 ,
         GT_53 ,
         GT_RF ,
         GT_WGT,
         AP_MD,
         CFM_FLG              ,
         CHILD_CNT,
         LEAF_CNT,
         POD_CNT, 
         LVL,
         PAST,
         SPC_CTRL_ALOC_RMK    ,
         SPC_CTRL_ALOC_POL_RMK,
         SPC_CTRL_ALOC_POD_RMK,
         (SELECT POL_DBL_PORT_CHK FROM DB_CALL_VVD) AS POL_DBL_PORT_CHK -- POL DOUBLE CALLING 유무
     
    FROM (
      -- EDIT CONTROL
      SELECT DECODE(IOC_CD, 'E', 0, 1) * DECODE(NQTA_MD * NCFM_MD, 0, 0, 1) * DECODE(DECODE(REP_TRD_CD, TRD_CD, DECODE(CTRL_LVL, 'O', 1, 'U', 2, 'A', 3, 'L', 4, 'D', 5, 'T', 6) , 5), LVL, 1, 0) AS EDIT,
             REP_TRD_CD    ,
             REP_SUB_TRD_CD,
             TRD_CD        ,
             SUB_TRD_CD    ,
             IOC_CD AS IOC_CD,
             BASE_RHQ_CD,
             RHQ_CD     ,
             AREA_CD,
             OFC_CD ,
             NVL(US_MOD, '+') AS US_MOD,
             NVL(ACCOUNT_CD, '+') AS ACCOUNT_CD,
             NVL(POL_CD, '+') AS POL_CD ,
             NVL(POD_CD, '+') AS POD_CD ,
             NVL(DEL_CD, '+') AS DEL_CD ,
             NVL(POL_SEQ, -1) AS POL_SEQ,
             NVL(POD_SEQ, -1) AS POD_SEQ,
             -- 2014.08.11 level 변경에 따른 수정
             DECODE(SIGN(LVL - 3), 1, POL_SKIP, 0) AS POL_SKIP,
             DECODE(LVL, 5, POD_SKIP, 0)           AS POD_SKIP,
             --DECODE(SIGN(LVL - 1), 1, POL_SKIP, 0) AS POL_SKIP,
             --DECODE(LVL, 3, POD_SKIP, 0)           AS POD_SKIP,
             BKG_QUOTA,
             BKG_QTA_CMB,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
             ) AS CMB,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
             ) AS CMB_WGT,             
             -- 주차별 CMB
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 1
             ) AS CMB1,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 1
             ) AS CMB_WGT1,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 2
             ) AS CMB2,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 2
             ) AS CMB_WGT2,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 3
             ) AS CMB3,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 3
             ) AS CMB_WGT3,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 4
             ) AS CMB4,
             (
                SELECT (SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT)- SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT))
                  FROM WK_CMB BAR
                 WHERE BAR.SLS_OFC_CD  = NVL(Z.OFC_CD, '00000')
                   AND BAR.TS_FLG      = DECODE(Z.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
                   AND BAR.IOC_CD      = DECODE(Z.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
                   AND BAR.POL_YD_CD   = NVL(SUBSTR(Z.POL_CD, 1, 5), '00000')
                   AND BAR.POD_YD_CD   = NVL(SUBSTR(Z.POD_CD, 1, 5), '00000')
                   -- 2014.08.07 추가(S)
                   AND DECODE(BAR.US_MOD, 'OTH', 'OTHERS', BAR.US_MOD) = NVL(Z.US_MOD, '00000')
                   AND DECODE(BAR.ACCOUNT_CD, 'XX999999', 'OTHERS', BAR.ACCOUNT_CD)   = NVL(Z.ACCOUNT_CD, '000')
                   AND DECODE(BAR.DEL_CD, 'XXXXX', 'OTHERS', BAR.DEL_CD)  = NVL(Z.DEL_CD, '00000')
                   AND Z.IOC_CD       <> 'E'
                   AND BAR.RNUM = 4
             ) AS CMB_WGT4,
             --fc_ttl_teu값 추가(TEU + HC*2 + 45FT*2), fcast = 1(Fcast+BKG), 2(Fcast Only), 3(BKG only)
             (DECODE(@[fcast], '3', NVL(FC_TEU, 0)
                             , '2', NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2
                             , '1', DECODE(PAST, 'Y', NVL(FC_TEU, 0)
                                                    , NVL(FC_TEU, 0) + NVL(FC_HC, 0) * 2 + NVL(FC_45, 0) * 2 + NVL(FC_53, 0) * 2))
             ) AS FC_TTL_TEU,
             FC_TEU   ,
             FC_HC    ,
             FC_45    ,
             FC_53    ,
             FC_RF    ,
             FC_WGT   ,
             UG_TEU   ,
             UG_HC    ,
             UG_45    ,
             UG_53    ,
             UG_RF    ,
             UG_WGT   ,
             MR_TEU   ,
             MR_HC    ,
             MR_45    ,
             MR_53    ,
             MR_RF    ,
             MR_WGT   ,
             AP_TEU   ,
             AP_HC    ,
             AP_45    ,
             AP_53    ,
             AP_RF    ,
             AP_WGT   ,
             BK_TEU   ,
             BK_20    ,
             BK_40    ,
             BK_HC    ,
             BK_45    ,
             BK_53    ,
             BK_RF    ,
             BK_WGT   ,
             BS_TEU   ,--2015.03.12
             BS_WGT   ,--2015.03.12
             BT_TEU   ,
             BT_20    ,
             BT_40    ,
             BT_HC    ,
             BT_45    ,
             BT_53    ,
             BT_RF    ,
             BT_WGT   ,BKG_VOL_VGM,BKG_WGT_VGM,
             CM_OP	  ,   
             CM_OC	  ,   
             CM_VL    ,                
             GT_TEU   ,
             GT_HC    ,
             GT_45    ,
             GT_53    ,
             GT_RF    ,
             GT_WGT   ,
             AP_MD    ,
             CFM_FLG  ,
             CHILD_CNT,
             LEAF_CNT ,
             POD_CNT  ,
             LVL      ,
             PAST     ,
             (
               CASE
                    WHEN POL_CD IS NULL AND POD_CD IS NULL  AND LVL <> 0 AND DEL_CD IS NULL THEN SPC_CTRL_ALOC_RMK
                    ELSE NULL
                END
             ) AS SPC_CTRL_ALOC_RMK,
             (
               CASE
                    WHEN POL_CD IS NOT NULL AND POD_CD IS NULL AND DEL_CD IS NULL THEN SPC_CTRL_ALOC_POL_RMK 
                    ELSE NULL
                END
             ) AS SPC_CTRL_ALOC_POL_RMK,
             (
               CASE
                    WHEN POD_CD IS NOT NULL AND DEL_CD IS NULL THEN SPC_CTRL_ALOC_POD_RMK
                    ELSE NULL
                END
             ) AS SPC_CTRL_ALOC_POD_RMK,
             --2014.07.23
             BT_D2 ,
             BT_D4 ,
             BT_RD ,
             FC_D2 ,
             FC_D4 ,
             FC_RD ,
             AP_D2 ,
             AP_D4 ,
             AP_RD 
        FROM HRCH_DATA Z
       WHERE ( ( LVL < 2 OR (NQTA_MD > 0 AND NCFM_MD > 0) OR (BKG_QUOTA >0 AND IOC_CD = 'I' AND POL_CD <> '0000000')))
         -- 2014.10.10 T/S인 경우 DEST SUM 제외
         AND NOT ((SUB_TRD_CD = 'IP' OR IOC_CD = 'E') AND RHQ_CD IS NULL AND DEL_CD IS NOT NULL)
		 AND FLG = 'N'
#if (${office} == '')
       UNION ALL   
        --Allocation
      SELECT DISTINCT 0 EDIT,
             A.REP_TRD_CD    ,
             A.REP_SUB_TRD_CD,
             A.TRD_CD        ,
             A.SUB_TRD_CD    ,
             DECODE(A.TS_FLG, 'Y', 'T', A.IOC_CD)||DECODE(A.MNL_FLG, 'Y', 'T', '') AS IOC_CD,
             P.OFC_CD   AS BASE_RHQ_CD,
             A.SLS_RHQ_CD AS RHQ_CD     ,
             A.SLS_RHQ_CD AS AREA_CD,
             A.SLS_RHQ_CD AS OFC_CD ,
             'OTHERS' AS  US_MOD  ,
             'OTHERS' AS  ACCOUNT_CD  ,
             NULL  POL_CD  ,
             NULL  POD_CD  ,
             'OTHERS' AS  POD_CD  ,
             -1 POL_SEQ   ,
             -1 POD_SEQ   ,
             0 POL_SKIP  ,
             0 POD_SKIP  ,
             0 AS BKG_QUOTA,
             0 AS BKG_QTA_CMB,
             NULL AS CMB,
             NULL AS CMB_WGT,
             NULL AS CMB1,
             NULL AS CMB_WGT1,
             NULL AS CMB2,
             NULL AS CMB_WGT2,
             NULL AS CMB3,
             NULL AS CMB_WGT3,
             NULL AS CMB4,
             NULL AS CMB_WGT4,
             --fc_ttl_teu값 추가(TEU + HC*2 + 45FT*2), fcast = 1(Fcast+BKG), 2(Fcast Only), 3(BKG only)
             (DECODE(@[fcast], '3', NVL(C.FC_TEU, 0)
                             , '2', NVL(C.FC_TEU, 0) + NVL(C.FC_HC, 0) * 2 + NVL(C.FC_45, 0) * 2 + NVL(C.FC_53, 0) * 2
                             , '1', DECODE(C.PAST, 'Y', NVL(C.FC_TEU, 0)
                                                      , NVL(C.FC_TEU, 0) + NVL(C.FC_HC, 0) * 2 + NVL(C.FC_45, 0) * 2 + NVL(C.FC_53, 0) * 2))
             ) AS FC_TTL_TEU,
             C.FC_TEU   	,
             C.FC_HC    	,
             C.FC_45    	,
             C.FC_53    	,
             C.FC_RF    	,
             C.FC_WGT   	,
             0 AS UG_TEU   ,
             0 AS UG_HC    ,
             0 AS UG_45    ,
             0 AS UG_53    ,
             0 AS UG_RF    ,
             0 AS UG_WGT   ,
             0 AS MR_TEU   ,
             0 AS MR_HC    ,
             0 AS MR_45    ,
             0 AS MR_53    ,
             0 AS MR_RF    ,
             0 AS MR_WGT   ,
             A.ASGN_TTL_QTY     AS AP_TEU,
             A.ASGN_40FT_HC_QTY AS AP_HC ,
             A.ASGN_45FT_HC_QTY AS AP_45 ,
             A.ASGN_53FT_QTY    AS AP_53 ,
             A.ASGN_RF_QTY      AS AP_RF ,
             A.ASGN_TTL_WGT     AS AP_WGT,
             C.BK_TEU,
             C.BK_20 ,
             C.BK_40 ,
             C.BK_HC ,
             C.BK_45 ,
             C.BK_53 ,
             C.BK_RF ,
             C.BK_WGT,
             C.BT_TEU,
             C.BT_20 ,
             C.BT_40 ,
             C.BT_HC ,
             C.BT_45 ,
             C.BT_53 ,
             C.BT_RF ,
             C.BT_WGT,BKG_VOL_VGM,BKG_WGT_VGM,             
             0 AS BS_TEU   ,--2015.03.12
             0 AS BS_WGT   ,--2015.03.12
             0 AS CM_OP,   
             0 AS CM_OC,   
             0 AS CM_VL,   
             
             0 AS GT_TEU,
             0 AS GT_HC ,
             0 AS GT_45 ,
             0 AS GT_53 ,
             0 AS GT_RF ,
             0 AS GT_WGT,
             1 AS AP_MD,
             'N' AS CFM_FLG ,
             0 CHILD_CNT,
             0 LEAF_CNT,
             0 POD_CNT, 
             1 LVL,
             'N' AS PAST,
             A.SPC_CTRL_ALOC_RMK     AS SPC_CTRL_ALOC_RMK    ,
             A.SPC_CTRL_ALOC_POL_RMK AS SPC_CTRL_ALOC_POL_RMK,
             A.SPC_CTRL_ALOC_POD_RMK AS SPC_CTRL_ALOC_POD_RMK,
             -- 2014.07.23 컬럼추가
             C.BT_D2 ,
             C.BT_D4 ,
             C.BT_RD ,
             C.FC_D2    	,
             C.FC_D4    	,
             C.FC_RD    	,
             A.FCAST_20FT_DRY_QTY AS AP_D2 ,
             A.FCAST_40FT_DRY_QTY    AS AP_D4 ,
             A.FCAST_RD_QTY      AS AP_RD 
        FROM SPC_ALOC_POL_POD A  ,
             REP_VVDS      P,
             (SELECT TRD_CD, SUB_TRD_CD, RHQ_CD, 
					 DECODE(IOC_CD, 'T', 'Y', 'TT', 'Y', 'N') AS TS_FLG, DECODE(IOC_CD, 'O', 'O', 'OT', 'O', 'I') AS IOC_CD, PAST,
                     FC_TEU, FC_HC, FC_45, FC_53, FC_RF, FC_WGT,
                     BK_TEU, BK_20, BK_40, BK_HC, BK_45, BK_53, BK_RF, BK_WGT,                       
                     BT_TEU, BT_20, BT_40, BT_HC, BT_45, BT_53, BT_RF, BT_WGT,BKG_VOL_VGM,BKG_WGT_VGM,
                     BT_D2 ,BT_D4 ,BT_RD ,FC_D2, FC_D4, FC_RD 
                FROM HRCH_DATA
               WHERE FLG = 'Y') C
       WHERE A.RLANE_CD   = P.RLANE_CD
         AND A.DIR_CD     = P.DIR_CD
         AND A.VSL_CD     = P.VSL_CD
         AND A.SKD_VOY_NO = P.SKD_VOY_NO
         AND A.SKD_DIR_CD = P.SKD_DIR_CD
         AND A.SLS_OFC_CD IN ('HAMRU', 'NYCRA')
         AND P.RLANE_CD   = 'WAFIE'
         AND A.TRD_CD     = C.TRD_CD(+)
         AND A.SUB_TRD_CD = C.SUB_TRD_CD(+)
         AND A.SLS_RHQ_CD = C.RHQ_CD(+)
         AND A.TS_FLG     = C.TS_FLG(+)
         AND A.IOC_CD     = C.IOC_CD(+)
#end
     ) Z
-- 2014.07.26 Account/US MOD 보여주기 대상에서 제외
-- WHERE LVL NOT IN (1,2)
-- 2015.02.23 ALL POL시 '0000000' 데이타 제거
WHERE POL_CD <> '0000000'
ORDER BY DECODE(Z.IOC_CD, 'O', 1, 'I', 2, 'E', 3, 'T', 4, 'OT', 5, 'IT', 6, 'TT', 7),
         DECODE(Z.RHQ_CD, NULL, 9, Z.BASE_RHQ_CD, 1, 'SINRS', 2, 3),
         NVL(Z.RHQ_CD , 'A'),
         DECODE(Z.AREA_CD, NULL, 'B', Z.RHQ_CD, 'A', Z.AREA_CD),
         DECODE(Z.OFC_CD , NULL, 'B', Z.RHQ_CD, 'A', Z.OFC_CD),
         DECODE(Z.US_MOD, 'OTHERS', 'ZZZZZ', Z.US_MOD),
		 DECODE(Z.ACCOUNT_CD, 'OTHERS', 'ZZZZZ', Z.ACCOUNT_CD),
         NVL(Z.POL_SEQ,  -1),
         NVL(Z.POD_SEQ,  -1),
         DECODE(Z.DEL_CD, 'OTHERS', 'ZZZZZ', Z.DEL_CD)
/*
CHOI.Y.S - [프로젝트] Ticket ID : CHM-201004171 - 53FT 관련 필드 추가
2011.01.04 최윤성 [CHM-201008093-01] Office Level Table 생성
 - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체
2011.01.31 이행지 [CHM-201108668-01] [SPC] Control by HO 화면 로직 보완
 - POL/POD 가 중복되는 경우 POL/POD COUNT가 MAX인 데이터만 가져오도록 수정
2011.06.01 김종준 [CHM-201111305-01] R5와 동일하게 R9이 적용될 수 있도록 쿼리수정
2011.07.20 김민아 [CHM-201112347-01] 조회 필드 QTA CMB 및 CM Per Ton 항목 추가
2011.08.09 이행지 [CHM-201112741-01] Control by HO/RHQ 화면 보완 1차 -Weekly CMB 추가
2011.08.12 이행지 [CHM-201112741-01] Control by HO/RHQ 화면 보완 2차 -WAFIE일 경우 HAMRU,NYCRA 추가되어 나오도록 수정
2011.12.12 김종준 [CHM-201115055-01] [SPC] SFXEM -> SFXIA 변경에 따른 로직 보완 -Control by HO/RHQ 로직 보완 - SFX의 경우, Service Lane으로 대상 존재 여부 확인 부분 제거
2011.12.28 김종준 [CHM-201115346-01] QTA 데이터가 확정될때까지 2012년 대상항차부터 QTA 정보를 0으로 보여달라는 요청 원복
2012.01.02 김종준 [CHM-201110709-01] OP/OC/VL  추가
2012.07.27 이석준[CHM-201219345] Control by HO - EQ Booking 로직 보완
2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
2012.12.07 김시몬 [CHM-201221639] 대상항차정보가져올때 SLANE_CD -> RLANE_CD로 변경 보완 -Control by HO/RHQ 로직 보완
2013.01.08 최윤성 [CHM-201322381-01] WAXIA 노선 예외처리
2013.01.23 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
2013.11.26 진마리아 [선처리] IPC,TS 의 경우 ALL_POL 체크 후 조회시 (등록된 POL + SKD상 POD) pair 모두 조회 [IAS SECTOR 판매 활성화를 위한 TF]
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경
2014.01.13 김시몬 [선처리] SELSA/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가
2014.01.14 김시몬 [선처리] SELSA/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가
2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완
*/			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="fcast" type="12" value="" out="N"/>
				<param name="all_pol" type="12" value="" out="N"/>
				<param name="user_ofc" type="12" value="" out="N"/>
				<param name="office" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
