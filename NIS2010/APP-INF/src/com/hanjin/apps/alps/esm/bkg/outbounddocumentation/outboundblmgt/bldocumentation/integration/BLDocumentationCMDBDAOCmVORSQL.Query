<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BLDocumentationCMDBDAOCmVORSQL">
			<desc><![CDATA[   select]]></desc>
			<sql><![CDATA[
#if (${ca_flg} == 'Y') 
SELECT  A1.BKG_NO
      ,   A1.CNTR_MF_SEQ
      ,   A1.CNTR_NO
      ,   A1.PCK_QTY
      ,   A1.PCK_TP_CD
      ,   A1.CNTR_MF_WGT
      ,   A1.WGT_UT_CD
      ,   A1.MEAS_QTY
      ,   A1.MEAS_UT_CD
      ,   A1.DCGO_FLG
      ,   A1.BB_CGO_FLG
      ,   A1.AWK_CGO_FLG
      ,   A1.RC_FLG
      ,   A1.RD_CGO_FLG
      ,   A1.HNGR_FLG
      ,   A1.CNTR_MF_MK_DESC
      ,   A1.CNTR_MF_GDS_DESC
      ,   A1.HBL_SEQ
      ,   A1.HAMO_TRF_CD
      ,   A1.CMDT_HS_CD
      ,   A1.NCM_NO
      , DECODE(A1.NCM_NO,NULL,0,1) NCM_MULTI_POP
      , (
           SELECT  CASE WHEN COUNT(1) > 1 THEN 'Y' ELSE 'N' END
           FROM    BKG_CNTR_MF_DESC_DTL_HIS HIS
           WHERE   1 = 1
           AND     HIS.BKG_NO = B.BKG_NO
           AND     HIS.CNTR_NO = A1.CNTR_NO
           AND     HIS.CNTR_MF_SEQ = A1.CNTR_MF_SEQ
           AND     HIS.CORR_NO = 'TMP0000001'
        ) NCM_MULTI_FLG
      , NVL(BKG_JOIN_FNC(CURSOR(
                                  SELECT  NCM_NO
                                  FROM    BKG_CNTR_MF_DESC_DTL_HIS HIS 
                                  WHERE   1 = 1
                                  AND     HIS.BKG_NO = B.BKG_NO
                                  AND     HIS.CNTR_NO = A1.CNTR_NO
                                  AND     HIS.CNTR_MF_SEQ = A1.CNTR_MF_SEQ
                                  AND     HIS.CORR_NO = 'TMP0000001'
                               )
                        ),A1.NCM_NO
        ) NCM_MULTI_NO
      ,   A1.PO_NO
      ,   A1.CNTR_MF_NO
      ,   A1.CSTMS_DECL_NO
      ,   A1.CRE_USR_ID
      ,   A1.UPD_USR_ID
      ,   A1.DCGO_SEQ
      ,   DECODE(A1.WPM_TRT_CD,'A','N/A',A1.WPM_TRT_CD) AS WPM_TRT_CD
FROM    BKG_CNTR_MF_DESC_HIS A1
      , BKG_CNTR_HIS A2
      , BKG_BOOKING B
WHERE   A1.BKG_NO = @[bkg_no]
AND     A1.CORR_NO = 'TMP0000001'
AND     A1.BKG_NO = A2.BKG_NO
AND     A1.CORR_NO = A2.CORR_NO
AND     A1.CNTR_NO = A2.CNTR_NO
AND     A1.BKG_NO = B.BKG_NO
ORDER BY
        A2.CNTR_DP_SEQ
      , A1.CNTR_MF_SEQ
#else 
SELECT  A1.BKG_NO
      ,   A1.CNTR_MF_SEQ
      ,   A1.CNTR_NO
      ,   A1.PCK_QTY
      ,   A1.PCK_TP_CD
      ,   A1.CNTR_MF_WGT
      ,   A1.WGT_UT_CD
      ,   A1.MEAS_QTY
      ,   A1.MEAS_UT_CD
      ,   A1.DCGO_FLG
      ,   A1.BB_CGO_FLG
      ,   A1.AWK_CGO_FLG
      ,   A1.RC_FLG
      ,   A1.RD_CGO_FLG
      ,   A1.HNGR_FLG
      ,   A1.CNTR_MF_MK_DESC
      ,   A1.CNTR_MF_GDS_DESC
      ,   A1.HBL_SEQ
      ,   A1.HAMO_TRF_CD
      ,   A1.CMDT_HS_CD
      ,   A1.NCM_NO
      , DECODE(A1.NCM_NO,NULL,0,1) NCM_MULTI_POP
      , (
           SELECT  CASE WHEN COUNT(1) > 1 THEN 'Y' ELSE 'N' END
           FROM    BKG_CNTR_MF_DESC_DTL DLT
           WHERE   1 = 1
           AND     DLT.BKG_NO = B.BKG_NO
           AND     DLT.CNTR_NO = A1.CNTR_NO
           AND     DLT.CNTR_MF_SEQ = A1.CNTR_MF_SEQ
        ) NCM_MULTI_FLG
      , NVL(BKG_JOIN_FNC(CURSOR(
                                  SELECT  NCM_NO
                                  FROM    BKG_CNTR_MF_DESC_DTL DLT
                                  WHERE   1 = 1
                                  AND     DLT.BKG_NO = B.BKG_NO
                                  AND     DLT.CNTR_NO = A1.CNTR_NO
                                  AND     DLT.CNTR_MF_SEQ = A1.CNTR_MF_SEQ
                               )
                        ),A1.NCM_NO
        ) NCM_MULTI_NO
      ,   A1.PO_NO
      ,   A1.CNTR_MF_NO
      ,   A1.CSTMS_DECL_NO
      ,   A1.CRE_USR_ID
      ,   A1.UPD_USR_ID
      ,   A1.DCGO_SEQ
      ,   DECODE(A1.WPM_TRT_CD,'A','N/A',A1.WPM_TRT_CD) AS WPM_TRT_CD
FROM    BKG_CNTR_MF_DESC A1
      , BKG_CONTAINER A2
      , BKG_BOOKING B
WHERE  A1.BKG_NO = @[bkg_no]
AND     A1.BKG_NO = A2.BKG_NO
AND     A1.CNTR_NO = A2.CNTR_NO
AND     A1.BKG_NO = B.BKG_NO
ORDER BY
        A2.CNTR_DP_SEQ
      , A1.CNTR_MF_SEQ
#end			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
