<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ModelManageDBDAOAddCustPerfCSQL">
			<desc><![CDATA[Performance를 생성합니다.
2013.05.06 [CHM-201324211-01] 프로젝트 안정화 및 HELP DESK - SMP Season Creation 배치->backend로 변경
2013.09.04 [Trouble Shooting] TPS 외의 trade는 SC가 반드시 들어오지 않도록
2013.12.03 잘못된 데이터를 걸러내기 위한 조건추가. 3레벨 OFC BKG 들어오면서 에러남
2014.02.04 [CHM-201428383-01] RFA 로직 추가
2014.03.06 [CHM-20142960] SMP/Allocation control보완 요청 - 재생성 로칙 추가
2014.05.16 [CHM-201430353] SMP / AES 보완요청 - SC 입력 기능 추가
2014.06.10 DTL_SEQ 구하는 DECODE(TRD_CD, 'AES', RFA_NO, SC_NO) ORDER BY 수정
2015.01.27 김성욱 [CHM-201533820] SMP creation 오류 데이터 수정 요청 
2015.01.     박은주 [CHM-201533907] IAS노선 SMP/ RFA# Key 추가 
2015.02.27 박은주 [CHM-201534433] SMP Regeneration 오류 수정 요청 - 삭제기준과 생성 기준이 달라져서 일치시킴
2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL]]></desc>
			<sql><![CDATA[
INSERT INTO SPC_MDL_CUST_PERF (
     COST_YRWK
    ,TRD_CD
    ,RLANE_CD
    ,SLS_RGN_OFC_CD
    ,CUST_CNT_CD
    ,CUST_SEQ
    ,BKG_POR_CD
    ,BKG_POL_CD
    ,BKG_POD_CD
    ,BKG_DEL_CD
    ,DTL_SEQ
    ,CTRT_OFC_CD
    ,SC_NO
    ,RFA_NO
    ,SUB_TRD_CD
    ,SLS_RHQ_CD
    ,SLS_AQ_CD
    ,USA_BKG_MOD_CD
    ,RLANE_BKG_QTY
    ,RLANE_CMPB_AMT
    ,GRS_TTL_REV
    ,CRE_USR_ID
    ,CRE_DT
    ,UPD_USR_ID
    ,UPD_DT
    ,DMDT_COM_AMT --2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL
)
WITH MAS_MON_VVD_LV AS (
    SELECT DISTINCT
           M.COST_YRMON
          ,SUBSTR(M.SLS_YRMON, 1, 4) || M.COST_WK AS COST_YRWK
          ,M.COST_WK
          ,M.TRD_CD
          ,M.SUB_TRD_CD
          ,M.RLANE_CD
          ,H.DIR_CD
      FROM MAS_MON_VVD     M
          ,SPC_MDL_VER_MST V
          ,SPC_HD_HUL_MST  H
     WHERE SUBSTR(M.SLS_YRMON, 1, 4) || M.COST_WK BETWEEN V.PERF_ST_YRWK AND V.PERF_END_YRWK
       AND (M.DELT_FLG IS NULL OR M.DELT_FLG = 'N')
       AND V.TRD_CD     = @[trd_cd]
       AND V.COST_YRWK  = @[cost_yrwk]
       AND V.VER_SEQ    = @[ver_seq]
       AND M.TRD_CD     = V.TRD_CD
       AND M.TRD_CD     = H.TRD_CD
       AND M.RLANE_CD   = H.RLANE_CD
       AND M.SUB_TRD_CD = H.SUB_TRD_CD
)
SELECT COST_YRWK
      ,TRD_CD
      ,RLANE_CD
      ,SLS_OFC_CD
      ,CUST_CD
      ,CUST_SEQ
      ,BKG_POR_CD
      ,BKG_POL_CD
      ,BKG_POD_CD
      ,BKG_DEL_CD
      ,DENSE_RANK() OVER (PARTITION BY COST_YRWK, CUST_CD, CUST_SEQ, BKG_POR_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD ORDER BY COST_YRWK, CUST_CD, CUST_SEQ, RFA_NO, SC_NO, CTRT_OFC_CD, USA_BKG_MOD_CD) AS DTL_SEQ
      ,CTRT_OFC_CD
      ,SC_NO
      ,RFA_NO
      ,SUB_TRD_CD
      ,SLS_RHQ_CD
      ,SLS_AQ_CD
      ,USA_BKG_MOD_CD
      ,TEU_QTY_SUM
      ,RA_CM_SUM
      ,GRS_REV_SUM
      ,@[cre_usr_id]
      ,SYSDATE AS CRE_DT
      ,@[cre_usr_id]
      ,SYSDATE AS UPD_DT
      ,DMDT_SUM
  FROM (
          SELECT COST_YRWK
                ,CUST_CD
                ,CUST_SEQ
                ,CTRT_OFC_CD
                ,SC_NO
                ,RFA_NO
                ,O.N4TH_PRNT_OFC_CD AS SLS_OFC_CD
                ,O.N2ND_PRNT_OFC_CD AS SLS_RHQ_CD
                ,NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD) AS SLS_AQ_CD
                ,TRD_CD
                ,SUB_TRD_CD
                ,RLANE_CD
                ,BKG_POR_CD
                ,BKG_POL_CD
                ,BKG_POD_CD
                ,BKG_DEL_CD
                ,USA_BKG_MOD_CD
                ,SUM(RA_CM_SUM)    AS RA_CM_SUM
                ,SUM(GREV)         AS GRS_REV_SUM
                ,SUM(TEU_QTY_SUM)  AS TEU_QTY_SUM
                ,SUM(DMDT_SUM )    AS DMDT_SUM
            FROM (
                    SELECT LV.COST_YRWK
                          ,DTL.TRD_CD
                          ,DTL.SUB_TRD_CD
                          ,DTL.RLANE_CD
                          ,DECODE(MO.OFC_KND_CD, '5', MO.PRNT_OFC_CD, DTL.SLS_OFC_CD) AS SLS_OFC_CD
                          ,DTL.AGMT_CNT_CD   AS CUST_CD
                          ,DTL.AGMT_CUST_SEQ AS CUST_SEQ
                          ,DTL.CTRT_OFC_CD
                          ,DECODE(UPPER(SUBSTR(DTL.SC_NO, 1, 3)), 'DUM', NULL, DTL.SC_NO) AS SC_NO
                           -- RFA_NO에 AES뿐만 아니라 IAS 추가
                          ,CASE WHEN DTL.TRD_CD IN ('AES','IAS') THEN DECODE(UPPER(SUBSTR(DTL.RFA_NO, 1, 3)), 'DUM', NULL, DTL.RFA_NO)
                                ELSE NULL
                           END AS RFA_NO
--                          ,DECODE(DTL.TRD_CD, 'AES', DECODE(UPPER(SUBSTR(DTL.RFA_NO, 1, 3)), 'DUM', NULL, DTL.RFA_NO), NULL) AS RFA_NO
                          ,DTL.USA_BKG_MOD_CD
                          ,DTL.BKG_POR_CD
                          ,DTL.BKG_POL_CD
                          ,DTL.BKG_POD_CD
                          ,DTL.BKG_DEL_CD
                          ,NVL(SUM(DTL.BKG_REV), 0) + NVL(SUM(DTL.BKG_OFT_REV), 0) + NVL(SUM(DTL.BKG_MISC_REV), 0) + NVL(SUM(DTL.SCR_CHG_REV), 0) + NVL(SUM(DTL.DMDT_COM_AMT),0) - NVL(SUM(DTL.RA_CM_COST_TTL_AMT), 0)  AS RA_CM_SUM
                          ,NVL(SUM(DTL.BKG_REV), 0) + NVL(SUM(DTL.BKG_OFT_REV), 0) + NVL(SUM(DTL.BKG_MISC_REV), 0) + NVL(SUM(DTL.SCR_CHG_REV), 0) AS GREV
                          ,SUM(DECODE(SUBSTR(DTL.SPCL_CNTR_TPSZ_CD, -1), 2, DTL.BKG_QTY, 3, DTL.BKG_QTY, DTL.BKG_QTY * 2)) AS TEU_QTY_SUM
                          ,NVL(SUM(DTL.DMDT_COM_AMT),0) AS DMDT_SUM
                      FROM MAS_BKG_EXPN_DTL DTL
                          ,MAS_MON_VVD_LV   LV
                          ,MDM_ORGANIZATION MO
                     WHERE DTL.COST_YRMON            = LV.COST_YRMON
                       AND DTL.COST_WK               = LV.COST_WK
                       AND DTL.TRD_CD                = LV.TRD_CD
                       AND DTL.SUB_TRD_CD            = LV.SUB_TRD_CD
                       AND DTL.RLANE_CD              = LV.RLANE_CD
                       AND DTL.DIR_CD                = LV.DIR_CD
                       AND DTL.BKG_STS_CD           IN ('F', 'S')
                       AND DTL.BKG_CGO_TP_CD        IN ('F', 'B', 'R')
                       AND DTL.SLS_OFC_CD            = MO.OFC_CD
                  GROUP BY LV.COST_YRWK
                          ,DTL.TRD_CD
                          ,DTL.SUB_TRD_CD
                          ,DTL.RLANE_CD
                          ,DECODE(MO.OFC_KND_CD, '5', MO.PRNT_OFC_CD, DTL.SLS_OFC_CD)
                          ,DTL.AGMT_CNT_CD
                          ,DTL.AGMT_CUST_SEQ
                          ,DTL.CTRT_OFC_CD
                          ,DECODE(UPPER(SUBSTR(DTL.SC_NO, 1, 3)), 'DUM', NULL, DTL.SC_NO)
                          ,CASE WHEN DTL.TRD_CD IN ('AES','IAS') THEN DECODE(UPPER(SUBSTR(DTL.RFA_NO, 1, 3)), 'DUM', NULL, DTL.RFA_NO)
                                ELSE NULL
                           END
--                          ,DECODE(DTL.TRD_CD, 'AES', DECODE(UPPER(SUBSTR(DTL.RFA_NO, 1, 3)), 'DUM', NULL, DTL.RFA_NO), NULL)
                          ,DTL.USA_BKG_MOD_CD
                          ,DTL.BKG_POR_CD
                          ,DTL.BKG_POL_CD
                          ,DTL.BKG_POD_CD
                          ,DTL.BKG_DEL_CD
                 ) DTL
                ,SPC_OFC_LVL O
           WHERE O.OFC_CD   = SPC_SCR_OFC_CONV_FNC(DTL.SLS_OFC_CD)
             AND DTL.COST_YRWK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
             AND O.DELT_FLG = 'N'
        GROUP BY COST_YRWK
                ,CUST_CD
                ,CUST_SEQ
                ,CTRT_OFC_CD
                ,SC_NO
                ,RFA_NO
                ,TRD_CD
                ,SUB_TRD_CD
                ,RLANE_CD
                ,O.N4TH_PRNT_OFC_CD
                ,O.N2ND_PRNT_OFC_CD
                ,NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD)
                ,USA_BKG_MOD_CD
                ,BKG_POR_CD
                ,BKG_POL_CD
                ,BKG_POD_CD
                ,BKG_DEL_CD
       )
 WHERE SLS_OFC_CD IS NOT NULL -- 잘못된 데이터를 걸러내기 위한 조건추가. 2013-12-03			]]></sql>
			<params>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="cost_yrwk" type="12" value="" out="N"/>
				<param name="ver_seq" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
