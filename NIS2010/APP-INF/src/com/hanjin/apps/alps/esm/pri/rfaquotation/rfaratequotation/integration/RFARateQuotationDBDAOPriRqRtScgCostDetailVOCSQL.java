/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : RFARateQuotationDBDAOPriRqRtScgCostDetailVOCSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.06.05
*@LastModifier : 
*@LastVersion : 1.0
* 2015.06.05 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.rfaquotation.rfaratequotation.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class RFARateQuotationDBDAOPriRqRtScgCostDetailVOCSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * pri_rq_rt를 일괄 조정한다.
	  * 2013.04.25 [CHM-201324203] 전윤주 Contract date 비교하여 surcharge calculate 하는 로직 추가
	  * 2015.03.09 전지예 [CHM-201534137] Percent Base CHG Creation 보완
	  * </pre>
	  */
	public RFARateQuotationDBDAOPriRqRtScgCostDetailVOCSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.NUMERIC + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cmdt_hdr_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rt_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("upd_usr_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qttn_ver_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qttn_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rout_seq",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.rfaquotation.rfaratequotation.integration").append("\n"); 
		query.append("FileName : RFARateQuotationDBDAOPriRqRtScgCostDetailVOCSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("MERGE INTO PRI_RQ_RT_SCG A" ).append("\n"); 
		query.append("USING (" ).append("\n"); 
		query.append("WITH" ).append("\n"); 
		query.append("BQ AS   " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    CTRT_TP_CD     ," ).append("\n"); 
		query.append("    QTTN_NO       ," ).append("\n"); 
		query.append("    QTTN_VER_NO      ," ).append("\n"); 
		query.append("    SVC_SCP_CD     ," ).append("\n"); 
		query.append("    CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("    ROUT_SEQ      ," ).append("\n"); 
		query.append("    RT_SEQ       ," ).append("\n"); 
		query.append("    CURR_CD		," ).append("\n"); 
		query.append("    QTTN_RT_AMT   ," ).append("\n"); 
		query.append("    DIR_CALL_FLG    ," ).append("\n"); 
		query.append("    CTRT_CNTR_TPSZ_CD  ," ).append("\n"); 
		query.append("    CTRT_CNTR_SZ_CD   ," ).append("\n"); 
		query.append("    PRC_CGO_TP_CD    ," ).append("\n"); 
		query.append("    POR_CD       ," ).append("\n"); 
		query.append("    POR_STE_CD     ," ).append("\n"); 
		query.append("    POR_RGN_CD     ," ).append("\n"); 
		query.append("    POR_CNT_CD     ," ).append("\n"); 
		query.append("    POR_CONTI_CD    ," ).append("\n"); 
		query.append("    POL_CD       ," ).append("\n"); 
		query.append("    POL_STE_CD     ," ).append("\n"); 
		query.append("    POL_RGN_CD     ," ).append("\n"); 
		query.append("    POL_CNT_CD     ," ).append("\n"); 
		query.append("    POL_CONTI_CD    ," ).append("\n"); 
		query.append("    POD_CD       ," ).append("\n"); 
		query.append("    POD_STE_CD     ," ).append("\n"); 
		query.append("    POD_RGN_CD     ," ).append("\n"); 
		query.append("    POD_CNT_CD     ," ).append("\n"); 
		query.append("    POD_CONTI_CD    ," ).append("\n"); 
		query.append("    DEL_CD       ," ).append("\n"); 
		query.append("    DEL_STE_CD     ," ).append("\n"); 
		query.append("    DEL_RGN_CD     ," ).append("\n"); 
		query.append("    DEL_CNT_CD     ," ).append("\n"); 
		query.append("    DEL_CONTI_CD    ," ).append("\n"); 
		query.append("    RCV_TERM_CD     ," ).append("\n"); 
		query.append("    DE_TERM_CD     ," ).append("\n"); 
		query.append("    N1ST_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N2ND_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N3RD_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N4TH_FINC_VVD_CD  ," ).append("\n"); 
		query.append("    N1ST_RLANE_CD    ," ).append("\n"); 
		query.append("    N2ND_RLANE_CD    ," ).append("\n"); 
		query.append("    N3RD_RLANE_CD    ," ).append("\n"); 
		query.append("    N4TH_RLANE_CD    ," ).append("\n"); 
		query.append("    N1ST_POL_CONTI_CD          ," ).append("\n"); 
		query.append("    N2ND_POL_CONTI_CD          ," ).append("\n"); 
		query.append("    N3RD_POL_CONTI_CD          ," ).append("\n"); 
		query.append("    N4TH_POL_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    N2ND_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    N3RD_POD_CONTI_CD          ," ).append("\n"); 
		query.append("    N4TH_POD_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_POL_CD          ," ).append("\n"); 
		query.append("    N2ND_POL_CD          ," ).append("\n"); 
		query.append("    N3RD_POL_CD          ," ).append("\n"); 
		query.append("    N4TH_POL_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_POD_CD          ," ).append("\n"); 
		query.append("    N2ND_POD_CD          ," ).append("\n"); 
		query.append("    N3RD_POD_CD          ," ).append("\n"); 
		query.append("    N4TH_POD_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    N1ST_TS_PORT_CD   ," ).append("\n"); 
		query.append("    N2ND_TS_PORT_CD   ," ).append("\n"); 
		query.append("    N3RD_TS_PORT_CD   ," ).append("\n"); 
		query.append("    CML_ZN_CD      ," ).append("\n"); 
		query.append("    USA_SVC_MOD_CD   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'TD' THEN 'T'" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'RD' THEN 'R'" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'WD' THEN  DECODE(POR_CD, POL_CD,'F', 'B')" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'TR' THEN 'A'" ).append("\n"); 
		query.append("    WHEN ORG_TRNS_MOD_CD = 'TW' THEN  DECODE(POR_CD, POL_CD,'E', 'U')" ).append("\n"); 
		query.append("    END ORG_TRNS_MOD_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'TD' THEN 'T'" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'RD' THEN 'R'" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'WD' THEN  DECODE(DEL_CD, POD_CD,'F', 'B')" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'TR' THEN 'A'" ).append("\n"); 
		query.append("    WHEN DEST_TRNS_MOD_CD = 'TW' THEN  DECODE(DEL_CD, POD_CD,'E', 'U')" ).append("\n"); 
		query.append("    END DEST_TRNS_MOD_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    PRD_RD_CNT," ).append("\n"); 
		query.append("    CUST_TP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM  (" ).append("\n"); 
		query.append("    SELECT ROWNUM BQ_SEQ     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        'S' CTRT_TP_CD    ," ).append("\n"); 
		query.append("        RT.QTTN_NO      ," ).append("\n"); 
		query.append("        RT.QTTN_VER_NO      ," ).append("\n"); 
		query.append("        MN.SVC_SCP_CD     ," ).append("\n"); 
		query.append("        RT.CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("        RT.ROUT_SEQ      ," ).append("\n"); 
		query.append("        RT.RT_SEQ       ," ).append("\n"); 
		query.append("        RT.CURR_CD		," ).append("\n"); 
		query.append("        RT.QTTN_RT_AMT  ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RD.DIR_CALL_FLG    ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN RT.RAT_UT_CD = '20' THEN 'D2'" ).append("\n"); 
		query.append("        WHEN RT.RAT_UT_CD = '40' THEN 'D4'" ).append("\n"); 
		query.append("        WHEN RT.RAT_UT_CD = 'HC' THEN 'D5'" ).append("\n"); 
		query.append("        WHEN RT.RAT_UT_CD = '45' THEN 'D7'" ).append("\n"); 
		query.append("        WHEN RT.RAT_UT_CD = 'BL' THEN 'F4'" ).append("\n"); 
		query.append("        ELSE RT.RAT_UT_CD" ).append("\n"); 
		query.append("        END CTRT_CNTR_TPSZ_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = CASE" ).append("\n"); 
		query.append("                                         WHEN RT.RAT_UT_CD = '20' THEN 'D2'" ).append("\n"); 
		query.append("                                         WHEN RT.RAT_UT_CD = '40' THEN 'D4'" ).append("\n"); 
		query.append("                                         WHEN RT.RAT_UT_CD = 'HC' THEN 'D5'" ).append("\n"); 
		query.append("                                         WHEN RT.RAT_UT_CD = '45' THEN 'D7'" ).append("\n"); 
		query.append("                                         WHEN RT.RAT_UT_CD = 'BL' THEN 'F4'" ).append("\n"); 
		query.append("                                         ELSE RT.RAT_UT_CD" ).append("\n"); 
		query.append("                                         END ) CTRT_CNTR_SZ_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RT.PRC_CGO_TP_CD  ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.POR_CD              ," ).append("\n"); 
		query.append("        L1.CNT_CD||L1.STE_CD POR_STE_CD  ," ).append("\n"); 
		query.append("        L1.RGN_CD       POR_RGN_CD  ," ).append("\n"); 
		query.append("        L1.CNT_CD       POR_CNT_CD  ," ).append("\n"); 
		query.append("        L1.CONTI_CD      POR_CONTI_CD ," ).append("\n"); 
		query.append("        RC.POL_CD              ," ).append("\n"); 
		query.append("        L2.CNT_CD||L2.STE_CD POL_STE_CD  ," ).append("\n"); 
		query.append("        L2.RGN_CD       POL_RGN_CD  ," ).append("\n"); 
		query.append("        L2.CNT_CD       POL_CNT_CD  ," ).append("\n"); 
		query.append("        L2.CONTI_CD      POL_CONTI_CD ," ).append("\n"); 
		query.append("        RC.POD_CD              ," ).append("\n"); 
		query.append("        L3.CNT_CD||L3.STE_CD POD_STE_CD  ," ).append("\n"); 
		query.append("        L3.RGN_CD       POD_RGN_CD  ," ).append("\n"); 
		query.append("        L3.CNT_CD       POD_CNT_CD  ," ).append("\n"); 
		query.append("        L3.CONTI_CD      POD_CONTI_CD ," ).append("\n"); 
		query.append("        RC.DEL_CD              ," ).append("\n"); 
		query.append("        L4.CNT_CD||L4.STE_CD DEL_STE_CD  ," ).append("\n"); 
		query.append("        L4.RGN_CD       DEL_RGN_CD  ," ).append("\n"); 
		query.append("        L4.CNT_CD       DEL_CNT_CD  ," ).append("\n"); 
		query.append("        L4.CONTI_CD      DEL_CONTI_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		/* T : Tackle, I : Free In, N : Liner In, S : CFS */" ).append("\n"); 
		query.append("        DECODE( RC.BKG_RCV_TERM_CD, 'T', 'Y', 'I', 'Y', 'N', 'Y', 'S', 'Y', RC.BKG_RCV_TERM_CD ) RCV_TERM_CD   ," ).append("\n"); 
		query.append("		/* T : Tackle, O : Free Out, U : Liner Out, S : CFS */" ).append("\n"); 
		query.append("        DECODE( RC.BKG_DE_TERM_CD, 'T', 'Y', 'O', 'Y', 'U', 'Y', 'S', 'Y', RC.BKG_DE_TERM_CD ) DE_TERM_CD   ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.N1ST_FINC_VVD_CD         ," ).append("\n"); 
		query.append("        RC.N2ND_FINC_VVD_CD         ," ).append("\n"); 
		query.append("        RC.N3RD_FINC_VVD_CD         ," ).append("\n"); 
		query.append("        RC.N4TH_FINC_VVD_CD         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.N1ST_RLANE_CD          ," ).append("\n"); 
		query.append("        RC.N2ND_RLANE_CD          ," ).append("\n"); 
		query.append("        RC.N3RD_RLANE_CD          ," ).append("\n"); 
		query.append("        RC.N4TH_RLANE_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.POL_CD)  				AS N1ST_POL_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N1ST_TS_PORT_CD) 		AS N2ND_POL_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N2ND_TS_PORT_CD) 		AS N3RD_POL_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N3RD_TS_PORT_CD) 		AS N4TH_POL_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD)) 				AS N1ST_POD_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N2ND_POD_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N3RD_POD_CONTI_CD          ," ).append("\n"); 
		query.append("        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)) AS N4TH_POD_CONTI_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.POL_CD  				AS N1ST_POL_CD          ," ).append("\n"); 
		query.append("        RC.N1ST_TS_PORT_CD 		AS N2ND_POL_CD          ," ).append("\n"); 
		query.append("        RC.N2ND_TS_PORT_CD 		AS N3RD_POL_CD          ," ).append("\n"); 
		query.append("        RC.N3RD_TS_PORT_CD 		AS N4TH_POL_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD) 				                            AS N1ST_POD_CD          ," ).append("\n"); 
		query.append("        NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N2ND_POD_CD          ," ).append("\n"); 
		query.append("        NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N3RD_POD_CD          ," ).append("\n"); 
		query.append("        DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)                           AS N4TH_POD_CD          ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        RC.N1ST_TS_PORT_CD         ," ).append("\n"); 
		query.append("        RC.N2ND_TS_PORT_CD         ," ).append("\n"); 
		query.append("        RC.N3RD_TS_PORT_CD         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'" ).append("\n"); 
		query.append("        ELSE 'NN'" ).append("\n"); 
		query.append("        END CML_ZN_CD   ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN L3.CNT_CD IN ( 'US', 'CA' ) AND RC.POD_CD = RC.DEL_CD AND RC.BKG_DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("        WHEN L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')" ).append("\n"); 
		query.append("        WHEN L2.CNT_CD IN ( 'US', 'CA' ) AND RC.POL_CD = RC.POR_CD AND RC.BKG_RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'" ).append("\n"); 
		query.append("        WHEN L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')" ).append("\n"); 
		query.append("        END  USA_SVC_MOD_CD , -- PO, LO, IP, ML, OT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        ( SELECT SUBSTR(AC.ACT_GRP_CD, 3, 2) FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND AC.N1ST_NOD_CD LIKE RC.POR_CD||'%' AND ROWNUM = 1 ) ORG_TRNS_MOD_CD ," ).append("\n"); 
		query.append("        ( SELECT SUBSTR(AC.ACT_GRP_CD, 3, 2) FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND COALESCE(AC.N4TH_NOD_CD, AC.N3RD_NOD_CD, AC.N2ND_NOD_CD) LIKE RC.DEL_CD||'%' AND ROWNUM = 1 ) DEST_TRNS_MOD_CD ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NVL(RC.TRSP_RAIL_DIR_KNT, 0)	PRD_RD_CNT,	-- PRD에서  rail direct 갯수 " ).append("\n"); 
		query.append("        PRC_CUST_TP_CD AS CUST_TP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    FROM  PRI_RQ_MN               MN  ," ).append("\n"); 
		query.append("          PRI_RQ_RT               RT  ," ).append("\n"); 
		query.append("          PRI_RQ_RT_CMDT_ROUT     RD  ," ).append("\n"); 
		query.append("          PRI_RQ_RT_USD_ROUT_CS   RR  ," ).append("\n"); 
		query.append("          PRI_PRS_USD_ROUT_CS_INFO    RC ," ).append("\n"); 
		query.append("          MDM_LOCATION        L1 ," ).append("\n"); 
		query.append("          MDM_LOCATION        L2 ," ).append("\n"); 
		query.append("          MDM_LOCATION        L3 ," ).append("\n"); 
		query.append("          MDM_LOCATION        L4" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    WHERE MN.QTTN_NO              = RT.QTTN_NO" ).append("\n"); 
		query.append("    AND   MN.QTTN_VER_NO          = RT.QTTN_VER_NO" ).append("\n"); 
		query.append("    AND   RD.QTTN_NO              = RT.QTTN_NO" ).append("\n"); 
		query.append("    AND   RD.QTTN_VER_NO          = RT.QTTN_VER_NO" ).append("\n"); 
		query.append("    AND   RD.CMDT_HDR_SEQ         = RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("    AND   RD.ROUT_SEQ             = RT.ROUT_SEQ" ).append("\n"); 
		query.append("    AND   RR.QTTN_NO              = RT.QTTN_NO" ).append("\n"); 
		query.append("    AND   RR.QTTN_VER_NO          = RT.QTTN_VER_NO" ).append("\n"); 
		query.append("    AND   RR.CMDT_HDR_SEQ         = RT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("    AND   RR.ROUT_SEQ             = RT.ROUT_SEQ" ).append("\n"); 
		query.append("    AND   RR.RT_SEQ               = RT.RT_SEQ" ).append("\n"); 
		query.append("    AND   RR.USD_ROUT_CS_SEL_FLG  = 'Y'" ).append("\n"); 
		query.append("    AND   RC.ROUT_CS_NO           = RR.ROUT_CS_NO" ).append("\n"); 
		query.append("    AND   RC.ROUT_CS_SRC_DT       = RR.ROUT_CS_SRC_DT" ).append("\n"); 
		query.append("    AND   L1.LOC_CD        = RC.POR_CD" ).append("\n"); 
		query.append("    AND   L2.LOC_CD        = RC.POL_CD" ).append("\n"); 
		query.append("    AND   L3.LOC_CD        = RC.POD_CD" ).append("\n"); 
		query.append("    AND   L4.LOC_CD        = RC.DEL_CD" ).append("\n"); 
		query.append("    AND   RT.QTTN_NO       = @[qttn_no]" ).append("\n"); 
		query.append("    AND   RT.QTTN_VER_NO      = @[qttn_ver_no]" ).append("\n"); 
		query.append("    AND   RT.CMDT_HDR_SEQ = @[cmdt_hdr_seq]" ).append("\n"); 
		query.append("    AND   RT.ROUT_SEQ = @[rout_seq]" ).append("\n"); 
		query.append("    AND   RT.RT_SEQ = @[rt_seq]" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("S3 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< TARIFF SURCHARGE >" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    SEL_TP_CD      ," ).append("\n"); 
		query.append("    SEL_TP_PRIO     ," ).append("\n"); 
		query.append("    CHG_CD       ," ).append("\n"); 
		query.append("    FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    PCT_BSE_CD     ," ).append("\n"); 
		query.append("    RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("    RT_OP_CD      ," ).append("\n"); 
		query.append("    CURR_CD             ," ).append("\n"); 
		query.append("    FRT_RT_AMT     ," ).append("\n"); 
		query.append("    RAT_UT_CD      ," ).append("\n"); 
		query.append("    PRC_CGO_TP_CD    " ).append("\n"); 
		query.append("FROM  (" ).append("\n"); 
		query.append("    SELECT BQ.BQ_SEQ         ," ).append("\n"); 
		query.append("        'S'  SEL_TP_CD      ," ).append("\n"); 
		query.append("        3    SEL_TP_PRIO     ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, SP.CHG_CD" ).append("\n"); 
		query.append("                  ORDER BY" ).append("\n"); 
		query.append("                    DECODE(SR.POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)" ).append("\n"); 
		query.append("                    + DECODE(SR.RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6)" ).append("\n"); 
		query.append("                    + DECODE(SR.PRC_CGO_TP_CD    , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.USA_SVC_MOD_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.ORG_TRSP_MOD_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.DEST_TRSP_MOD_CD  , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.PRC_RCV_TERM_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.PRC_DE_TERM_CD   , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.VSL_SLAN_CD     , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.TS_PORT_CD     , NULL, 0, 1)" ).append("\n"); 
		query.append("                    + DECODE(SR.SUB_TRD_CD     , NULL, 0, 1) DESC," ).append("\n"); 
		query.append("                     NVL(SR.CTRT_DT, TO_DATE('19000101','YYYYMMDD')) DESC" ).append("\n"); 
		query.append("                 ) ROW_NUMBER ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SP.CHG_CD         ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SP.FLT_PCT_TP_CD     ," ).append("\n"); 
		query.append("        SP.PCT_BSE_CD       ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        NULL RT_APPL_TP_CD    ," ).append("\n"); 
		query.append("        NULL RT_OP_CD      ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SR.CURR_CD        ," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        SR.SCG_AMT AS FRT_RT_AMT      ," ).append("\n"); 
		query.append("        SR.RAT_UT_CD       ," ).append("\n"); 
		query.append("        SR.PRC_CGO_TP_CD     " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    FROM  BQ         ," ).append("\n"); 
		query.append("        PRI_SCG_PRF  SP  ," ).append("\n"); 
		query.append("        MDM_CHARGE  MC  ," ).append("\n"); 
		query.append("        PRI_SCG_RT  SR  " ).append("\n"); 
		query.append("    WHERE  SP.SVC_SCP_CD        = BQ.SVC_SCP_CD" ).append("\n"); 
		query.append("    AND   MC.CHG_CD          = SP.CHG_CD" ).append("\n"); 
		query.append("    AND   MC.AUTO_RAT_FLG       = 'Y'" ).append("\n"); 
		query.append("    AND   SR.SVC_SCP_CD        = SP.SVC_SCP_CD" ).append("\n"); 
		query.append("    AND   SR.CHG_CD          = SP.CHG_CD" ).append("\n"); 
		query.append("    AND   TO_DATE(SYSDATE)      BETWEEN SR.EFF_DT AND SR.EXP_DT + 0.99999  /* 0.99999 는 23시 59분 59초를 의미 */" ).append("\n"); 
		query.append("    AND   SR.WDR_FLG         = 'N'" ).append("\n"); 
		query.append("    AND   SR.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.PRC_RCV_TERM_CD = BQ.RCV_TERM_CD" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_RCV_TERM_CD IS NULL )" ).append("\n"); 
		query.append("          AND BQ.RCV_TERM_CD IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.RCV_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.PRC_DE_TERM_CD  = BQ.DE_TERM_CD" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_DE_TERM_CD IS NULL )" ).append("\n"); 
		query.append("          AND BQ.DE_TERM_CD  IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.DE_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* POR */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.POR_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.POR_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.POR_DEF_CD  = DECODE(SR.POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.POR_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.POR_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    /* POL */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.POL_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.POL_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.POL_DEF_CD  = DECODE(SR.POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.POL_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.POL_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    /* POD */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.POD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.POD_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.POD_DEF_CD  = DECODE(SR.POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.POD_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.POD_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    /* DEL */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.DEL_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.DEL_DEF_CD  IS NULL" ).append("\n"); 
		query.append("        OR  SR.DEL_DEF_CD  = DECODE(SR.DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)" ).append("\n"); 
		query.append("        OR (" ).append("\n"); 
		query.append("            SR.DEL_TP_CD = 'G'" ).append("\n"); 
		query.append("          AND EXISTS (" ).append("\n"); 
		query.append("                SELECT 'X'" ).append("\n"); 
		query.append("                FROM  PRI_SCG_GRP_LOC   GL ," ).append("\n"); 
		query.append("                    PRI_SCG_GRP_LOC_DTL GD" ).append("\n"); 
		query.append("                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GD.CHG_CD     = GL.CHG_CD" ).append("\n"); 
		query.append("                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ" ).append("\n"); 
		query.append("                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD" ).append("\n"); 
		query.append("                AND   GL.CHG_CD     = SR.CHG_CD" ).append("\n"); 
		query.append("                AND   GL.SCG_GRP_LOC_CD = SR.DEL_DEF_CD" ).append("\n"); 
		query.append("                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("	/* SUB TRADE */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.SUB_TRD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.SUB_TRD_CD    IS NULL" ).append("\n"); 
		query.append("        OR SR.SUB_TRD_CD    IN" ).append("\n"); 
		query.append("          (" ).append("\n"); 
		query.append("          SELECT DL.SUB_TRD_CD" ).append("\n"); 
		query.append("          FROM   MDM_DTL_REV_LANE  DL" ).append("\n"); 
		query.append("          WHERE (DL.RLANE_CD, DL.VSL_SLAN_DIR_CD, DL.FM_CONTI_CD, DL.TO_CONTI_CD ) IN " ).append("\n"); 
		query.append("          		(SELECT BQ.N1ST_RLANE_CD, SUBSTR(BQ.N1ST_FINC_VVD_CD, 9,1), BQ.N1ST_POL_CONTI_CD, BQ.N1ST_POD_CONTI_CD  FROM DUAL  " ).append("\n"); 
		query.append("          		 UNION ALL" ).append("\n"); 
		query.append("          		 SELECT BQ.N2ND_RLANE_CD, SUBSTR(BQ.N2ND_FINC_VVD_CD, 9,1), BQ.N2ND_POL_CONTI_CD, BQ.N2ND_POD_CONTI_CD  FROM DUAL" ).append("\n"); 
		query.append("          		 UNION ALL" ).append("\n"); 
		query.append("          		 SELECT BQ.N3RD_RLANE_CD, SUBSTR(BQ.N3RD_FINC_VVD_CD, 9,1), BQ.N3RD_POL_CONTI_CD, BQ.N3RD_POD_CONTI_CD  FROM DUAL" ).append("\n"); 
		query.append("          		 UNION ALL" ).append("\n"); 
		query.append("          		 SELECT BQ.N4TH_RLANE_CD, SUBSTR(BQ.N4TH_FINC_VVD_CD, 9,1), BQ.N4TH_POL_CONTI_CD, BQ.N4TH_POD_CONTI_CD  FROM DUAL" ).append("\n"); 
		query.append("          		 ) " ).append("\n"); 
		query.append("          AND   DL.DELT_FLG     = 'N'" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* LANE */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.SLAN_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.VSL_SLAN_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.VSL_SLAN_CD IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* T/S PORT */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.TS_PORT_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.TS_PORT_CD    IS NULL" ).append("\n"); 
		query.append("        OR SR.TS_PORT_CD    IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* ORG TRANS MODE */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.TRNS_MOD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.ORG_TRSP_MOD_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.ORG_TRSP_MOD_CD = BQ.ORG_TRNS_MOD_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    /* DEST TRANS MODE */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.TRNS_MOD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.DEST_TRSP_MOD_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.DEST_TRSP_MOD_CD = BQ.DEST_TRNS_MOD_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    /* USA SVC MODE */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SP.USA_SVC_MOD_USE_FLG = 'N'" ).append("\n"); 
		query.append("        OR SR.USA_SVC_MOD_CD    IS NULL" ).append("\n"); 
		query.append("        OR SR.USA_SVC_MOD_CD    = DECODE(SR.USA_SVC_MOD_CD, 'CZ', BQ.CML_ZN_CD, BQ.USA_SVC_MOD_CD )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("< CANAL >" ).append("\n"); 
		query.append("P : PAPAC" ).append("\n"); 
		query.append("S : EGSUC" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("    AND (" ).append("\n"); 
		query.append("          SP.CNL_TZ_FLG  = 'N'" ).append("\n"); 
		query.append("        OR SR.CNL_TZ_CD  IS NULL" ).append("\n"); 
		query.append("        OR EXISTS (" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N1ST_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N1ST_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N2ND_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N2ND_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N3RD_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N3RD_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2 ," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S3" ).append("\n"); 
		query.append("              WHERE S1.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S1.VPS_PORT_CD = BQ.N4TH_POL_CD" ).append("\n"); 
		query.append("--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S2.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S2.VPS_PORT_CD = BQ.N4TH_POD_CD" ).append("\n"); 
		query.append("--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("              AND   S3.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)" ).append("\n"); 
		query.append("              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)" ).append("\n"); 
		query.append("              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')" ).append("\n"); 
		query.append("              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         " ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* CARGO TYPE */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.PRC_CGO_TP_CD IS NULL" ).append("\n"); 
		query.append("        OR SR.PRC_CGO_TP_CD = BQ.PRC_CGO_TP_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* CONTRACT DATE [CHM-201324203] */" ).append("\n"); 
		query.append("     AND     (" ).append("\n"); 
		query.append("            SP.CTRT_DT_USE_FLG = 'N'" ).append("\n"); 
		query.append("           OR  SR.CTRT_DT IS NULL" ).append("\n"); 
		query.append("           OR  SR.CTRT_DT <= (SELECT EFF_DT " ).append("\n"); 
		query.append("                               FROM PRI_RQ_MN" ).append("\n"); 
		query.append("                              WHERE QTTN_NO = BQ.QTTN_NO" ).append("\n"); 
		query.append("                                AND QTTN_VER_NO = BQ.QTTN_VER_NO)" ).append("\n"); 
		query.append("             )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    /* RATING UNIT */" ).append("\n"); 
		query.append("    AND   (" ).append("\n"); 
		query.append("          SR.RAT_UT_CD IN ( 'BL', 'BX', 'PC', 'RM' )" ).append("\n"); 
		query.append("        OR SR.RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD" ).append("\n"); 
		query.append("            OR (" ).append("\n"); 
		query.append("                SR.RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )" ).append("\n"); 
		query.append("              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = SR.RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD" ).append("\n"); 
		query.append("               )" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("    )        " ).append("\n"); 
		query.append("WHERE  ROW_NUMBER = 1" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("GS AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT BQ.BQ_SEQ       ," ).append("\n"); 
		query.append("    BQ.QTTN_NO      ," ).append("\n"); 
		query.append("    BQ.QTTN_VER_NO      ," ).append("\n"); 
		query.append("    BQ.SVC_SCP_CD     ," ).append("\n"); 
		query.append("    BQ.CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("    BQ.ROUT_SEQ      ," ).append("\n"); 
		query.append("    BQ.RT_SEQ       ," ).append("\n"); 
		query.append("    S3.CHG_CD       ," ).append("\n"); 
		query.append("    S3.FLT_PCT_TP_CD   ," ).append("\n"); 
		query.append("    S3.PCT_BSE_CD     ," ).append("\n"); 
		query.append("    S3.CURR_CD      ," ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN S3.RAT_UT_CD = 'PC' THEN 0 -- 나중에 구해야 한다." ).append("\n"); 
		query.append("    ELSE S3.FRT_RT_AMT" ).append("\n"); 
		query.append("    END         AS CHG_UT_AMT    ," ).append("\n"); 
		query.append("    CASE" ).append("\n"); 
		query.append("    WHEN S3.RAT_UT_CD = 'BL' THEN 1" ).append("\n"); 
		query.append("    WHEN S3.RAT_UT_CD = 'PC' THEN S3.FRT_RT_AMT" ).append("\n"); 
		query.append("    WHEN S3.RAT_UT_CD = 'RM' THEN BQ.PRD_RD_CNT" ).append("\n"); 
		query.append("    ELSE 1" ).append("\n"); 
		query.append("    END         AS RAT_AS_QTY    ," ).append("\n"); 
		query.append("    S3.RAT_UT_CD     ," ).append("\n"); 
		query.append("    0 CHG_AMT       ," ).append("\n"); 
		query.append("    BQ.PRC_CGO_TP_CD CGO_TP_CD ," ).append("\n"); 
		query.append("    BQ.RCV_TERM_CD    ," ).append("\n"); 
		query.append("    BQ.DE_TERM_CD	," ).append("\n"); 
		query.append("    BQ.POR_CNT_CD   ," ).append("\n"); 
		query.append("    BQ.DEL_CNT_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM  BQ ," ).append("\n"); 
		query.append("      S3" ).append("\n"); 
		query.append("WHERE S3.BQ_SEQ  = BQ.BQ_SEQ" ).append("\n"); 
		query.append("  AND S3.CHG_CD NOT IN ( DECODE(BQ.CUST_TP_CD, 'N', 'XXX', 'NMS' )) /* CUSTOMER TYPE 이 NVOCC 인 경우만 NMS 존재 */" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append("FN AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("GENERAL SURCHARGE" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT BQ_SEQ       ," ).append("\n"); 
		query.append("    QTTN_NO       ," ).append("\n"); 
		query.append("    QTTN_VER_NO    ," ).append("\n"); 
		query.append("    SVC_SCP_CD     ," ).append("\n"); 
		query.append("    CMDT_HDR_SEQ    ," ).append("\n"); 
		query.append("    ROUT_SEQ      ," ).append("\n"); 
		query.append("    RT_SEQ       ," ).append("\n"); 
		query.append("    CHG_CD       ," ).append("\n"); 
		query.append("    FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    PCT_BSE_CD     ," ).append("\n"); 
		query.append("    CURR_CD       ," ).append("\n"); 
		query.append("    CHG_UT_AMT     ," ).append("\n"); 
		query.append("    RAT_AS_QTY     ," ).append("\n"); 
		query.append("    RAT_UT_CD      ," ).append("\n"); 
		query.append("    CHG_UT_AMT * RAT_AS_QTY CHG_AMT ," ).append("\n"); 
		query.append("    CGO_TP_CD      ," ).append("\n"); 
		query.append("    RCV_TERM_CD     ," ).append("\n"); 
		query.append("    DE_TERM_CD		," ).append("\n"); 
		query.append("    POR_CNT_CD      ," ).append("\n"); 
		query.append("    DEL_CNT_CD" ).append("\n"); 
		query.append("FROM  GS" ).append("\n"); 
		query.append("WHERE  CHG_CD  NOT IN ( 'ACT' )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*******************************************************************************************" ).append("\n"); 
		query.append("ACT" ).append("\n"); 
		query.append("*******************************************************************************************/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT GS.BQ_SEQ        ," ).append("\n"); 
		query.append("    GS.QTTN_NO       ," ).append("\n"); 
		query.append("    GS.QTTN_VER_NO   ," ).append("\n"); 
		query.append("    GS.SVC_SCP_CD      ," ).append("\n"); 
		query.append("    GS.CMDT_HDR_SEQ     ," ).append("\n"); 
		query.append("    GS.ROUT_SEQ       ," ).append("\n"); 
		query.append("    GS.RT_SEQ        ," ).append("\n"); 
		query.append("    GS.CHG_CD        ," ).append("\n"); 
		query.append("    GS.FLT_PCT_TP_CD    ," ).append("\n"); 
		query.append("    GS.PCT_BSE_CD      ," ).append("\n"); 
		query.append("    GS.CURR_CD       ," ).append("\n"); 
		query.append("    GS.CHG_UT_AMT      ," ).append("\n"); 
		query.append("    GS.RAT_AS_QTY      ," ).append("\n"); 
		query.append("    GS.RAT_UT_CD      ," ).append("\n"); 
		query.append("    GS.CHG_UT_AMT * GS.RAT_AS_QTY CHG_AMT ," ).append("\n"); 
		query.append("    GS.CGO_TP_CD      ," ).append("\n"); 
		query.append("    GS.RCV_TERM_CD     ," ).append("\n"); 
		query.append("    GS.DE_TERM_CD		," ).append("\n"); 
		query.append("    GS.POR_CNT_CD      ," ).append("\n"); 
		query.append("    GS.DE_TERM_CD		" ).append("\n"); 
		query.append("FROM  BQ ," ).append("\n"); 
		query.append("    GS" ).append("\n"); 
		query.append("WHERE GS.BQ_SEQ = BQ.BQ_SEQ" ).append("\n"); 
		query.append("AND   GS.CHG_CD = 'ACT'" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("          BQ.SVC_SCP_CD    = 'TPE'" ).append("\n"); 
		query.append("        AND BQ.POD_CD      IN ( 'USLGB', 'USLAX' )" ).append("\n"); 
		query.append("        AND BQ.POD_CD      <> BQ.DEL_CD" ).append("\n"); 
		query.append("        AND BQ.DEST_TRNS_MOD_CD IN ( 'R', 'A' )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    OR   (" ).append("\n"); 
		query.append("          BQ.SVC_SCP_CD    = 'TPW'" ).append("\n"); 
		query.append("        AND BQ.POL_CD      IN ( 'USLGB', 'USLAX' )" ).append("\n"); 
		query.append("        AND BQ.POL_CD      <> BQ.POR_CD" ).append("\n"); 
		query.append("        AND BQ.ORG_TRNS_MOD_CD IN ( 'R', 'A' )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    OR   (" ).append("\n"); 
		query.append("          BQ.SVC_SCP_CD    <> 'TPE'" ).append("\n"); 
		query.append("        AND BQ.DEL_CNT_CD    = 'US'" ).append("\n"); 
		query.append("        AND BQ.POD_CD      IN ( 'USNYC', 'USSAV', 'USCHS', 'USORF', 'USBOS' )" ).append("\n"); 
		query.append("        AND EXISTS (" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM  PRD_INLND_ROUT_MST IR" ).append("\n"); 
		query.append("              WHERE  IR.ROUT_ORG_NOD_CD    LIKE BQ.POD_CD||'%'" ).append("\n"); 
		query.append("              AND   IR.ROUT_DEST_NOD_CD  LIKE BQ.DEL_CD||'%'" ).append("\n"); 
		query.append("              AND   IR.PCTL_IO_BND_CD   = 'I'" ).append("\n"); 
		query.append("              AND   IR.HUB_NOD_CD     LIKE 'USLGB'||'%'" ).append("\n"); 
		query.append("              AND   IR.INLND_ROUT_BKG_FLG = 'Y'" ).append("\n"); 
		query.append("              AND   NVL(IR.DELT_FLG, 'N') = 'N'" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("        AND BQ.DEST_TRNS_MOD_CD IN ( 'R', 'A' )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    OR   (" ).append("\n"); 
		query.append("          BQ.SVC_SCP_CD    <> 'TPW'" ).append("\n"); 
		query.append("        AND BQ.POR_CNT_CD    = 'US'" ).append("\n"); 
		query.append("        AND BQ.POL_CD      IN ( 'USNYC', 'USSAV', 'USCHS', 'USORF', 'USBOS' )" ).append("\n"); 
		query.append("        AND EXISTS (" ).append("\n"); 
		query.append("              SELECT 'X'" ).append("\n"); 
		query.append("              FROM  PRD_INLND_ROUT_MST IR" ).append("\n"); 
		query.append("              WHERE  IR.ROUT_ORG_NOD_CD    LIKE BQ.POR_CD||'%'" ).append("\n"); 
		query.append("              AND   IR.ROUT_DEST_NOD_CD  LIKE BQ.POL_CD||'%'" ).append("\n"); 
		query.append("              AND   IR.PCTL_IO_BND_CD   = 'O'" ).append("\n"); 
		query.append("              AND   IR.HUB_NOD_CD     LIKE 'USLGB'||'%'" ).append("\n"); 
		query.append("              AND   IR.INLND_ROUT_BKG_FLG = 'Y'" ).append("\n"); 
		query.append("              AND   NVL(IR.DELT_FLG, 'N') = 'N'" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("        AND BQ.ORG_TRNS_MOD_CD IN ( 'R', 'A' )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT FN.QTTN_NO   AS QTTN_NO," ).append("\n"); 
		query.append("    FN.QTTN_VER_NO  AS QTTN_VER_NO," ).append("\n"); 
		query.append("    FN.CMDT_HDR_SEQ AS CMDT_HDR_SEQ," ).append("\n"); 
		query.append("    FN.ROUT_SEQ     AS ROUT_SEQ," ).append("\n"); 
		query.append("    FN.RT_SEQ       AS RT_SEQ," ).append("\n"); 
		query.append("    FN.CHG_CD       AS CHG_CD," ).append("\n"); 
		query.append("    FN.RAT_UT_CD    AS RAT_UT_CD," ).append("\n"); 
		query.append("    NVL(FN.CURR_CD, 'USD')      AS CURR_CD," ).append("\n"); 
		query.append("    NVL(CASE" ).append("\n"); 
		query.append("    WHEN FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.RAT_AS_QTY / 100" ).append("\n"); 
		query.append("    ELSE FN.CHG_AMT END, 0)             AS TRF_SCG_AMT  ," ).append("\n"); 
		query.append("    NVL(CASE" ).append("\n"); 
		query.append("    WHEN FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.RAT_AS_QTY / 100" ).append("\n"); 
		query.append("    ELSE FN.CHG_AMT END, 0)             AS ADJ_SCG_AMT  ," ).append("\n"); 
		query.append("    NVL(CASE" ).append("\n"); 
		query.append("    WHEN FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.RAT_AS_QTY / 100" ).append("\n"); 
		query.append("    ELSE FN.CHG_AMT" ).append("\n"); 
		query.append("    END, 0) / DECODE(NVL(USD_LOCL_XCH_RT,0), 0, 1, USD_LOCL_XCH_RT) AS ADJ_SCG_USD_AMT " ).append("\n"); 
		query.append("FROM  FN ," ).append("\n"); 
		query.append("  (" ).append("\n"); 
		query.append("    SELECT BQ_SEQ  ," ).append("\n"); 
		query.append("        CHG_CD    ," ).append("\n"); 
		query.append("        SUM(CHG_AMT) CHG_AMT" ).append("\n"); 
		query.append("    FROM  (" ).append("\n"); 
		query.append("        SELECT F1.BQ_SEQ ," ).append("\n"); 
		query.append("            F1.CHG_CD    ," ).append("\n"); 
		query.append("            F2.CHG_AMT CHG_AMT" ).append("\n"); 
		query.append("        FROM  FN F1 ," ).append("\n"); 
		query.append("            FN F2" ).append("\n"); 
		query.append("        WHERE  F2.BQ_SEQ = F1.BQ_SEQ" ).append("\n"); 
		query.append("        AND   F2.CHG_CD    IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND SYSDATE BETWEEN EFF_DT AND EXP_DT )" ).append("\n"); 
		query.append("        AND   F2.CURR_CD   = F1.CURR_CD" ).append("\n"); 
		query.append("        AND   (" ).append("\n"); 
		query.append("              F1.CHG_CD  <> 'VTT'" ).append("\n"); 
		query.append("            OR	F2.CHG_CD	NOT IN ( DECODE(F1.POR_CNT_CD, 'VN', 'DTH', 'XXX'), DECODE(F1.POR_CNT_CD, 'VN', 'DDC', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'OTH', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'ORC', 'XXX') )" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        AND   F2.RAT_UT_CD  <> 'PC'" ).append("\n"); 
		query.append("        AND   F1.RAT_UT_CD  = 'PC'" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT F1.BQ_SEQ ," ).append("\n"); 
		query.append("            F1.CHG_CD    ," ).append("\n"); 
		query.append("            F2.QTTN_RT_AMT CHG_AMT" ).append("\n"); 
		query.append("        FROM  FN F1 ," ).append("\n"); 
		query.append("              BQ F2" ).append("\n"); 
		query.append("        WHERE  F2.BQ_SEQ = F1.BQ_SEQ" ).append("\n"); 
		query.append("        AND   'OFT'   IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND SYSDATE BETWEEN EFF_DT AND EXP_DT )" ).append("\n"); 
		query.append("        AND   F2.CURR_CD   = F1.CURR_CD" ).append("\n"); 
		query.append("        AND   F2.CTRT_CNTR_TPSZ_CD <> 'PC'" ).append("\n"); 
		query.append("        AND   F1.RAT_UT_CD     = 'PC'" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("    GROUP BY" ).append("\n"); 
		query.append("        BQ_SEQ  ," ).append("\n"); 
		query.append("        CHG_CD" ).append("\n"); 
		query.append("    ) F1," ).append("\n"); 
		query.append("    (SELECT USD_LOCL_XCH_RT AS USD_LOCL_XCH_RT, CURR_CD FROM GL_MON_XCH_RT" ).append("\n"); 
		query.append("      WHERE ACCT_XCH_RT_YRMON = LEAST(TO_CHAR(SYSDATE, 'YYYYMM'), ( SELECT MAX(ACCT_XCH_RT_YRMON) FROM GL_MON_XCH_RT )) " ).append("\n"); 
		query.append("        AND ACCT_XCH_RT_LVL  = '1' ) XR    " ).append("\n"); 
		query.append("WHERE  F1.BQ_SEQ(+) = FN.BQ_SEQ" ).append("\n"); 
		query.append("AND   F1.CHG_CD(+)  = FN.CHG_CD" ).append("\n"); 
		query.append("AND   XR.CURR_CD(+) = FN.CURR_CD " ).append("\n"); 
		query.append("AND   FN.CHG_CD NOT IN ( 'GRI', 'GOH', 'WHF', 'GST', 'AST', 'VDT', 'VTT', 'WSC' )" ).append("\n"); 
		query.append("AND  (CASE WHEN FN.SVC_SCP_CD IN ( 'ACW','MXW','TAE','TPW' ) AND FN.CHG_CD = 'CAF' THEN 'N'" ).append("\n"); 
		query.append("           WHEN FN.SVC_SCP_CD IN ( 'ASE','ASW','TAE','TAW','TPE','TPW' ) AND FN.CHG_CD = 'CUC' THEN 'N'" ).append("\n"); 
		query.append("           WHEN FN.SVC_SCP_CD IN ( 'TPE','MXE','ACE' ) AND FN.CHG_CD = 'DDC' THEN 'N' " ).append("\n"); 
		query.append("           WHEN FN.SVC_SCP_CD IN ( 'TPE','MXE','ACE' ) AND FN.CHG_CD = 'EPS' THEN 'N'" ).append("\n"); 
		query.append("           WHEN FN.SVC_SCP_CD IN ( 'TPE','MXE','ACE' ) AND FN.CHG_CD = 'ERC' THEN 'N'" ).append("\n"); 
		query.append("           ELSE 'Y' END ) = 'Y'" ).append("\n"); 
		query.append(") B" ).append("\n"); 
		query.append("ON (    A.QTTN_NO = B.QTTN_NO" ).append("\n"); 
		query.append("    AND A.QTTN_VER_NO = B.QTTN_VER_NO" ).append("\n"); 
		query.append("    AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("    AND A.ROUT_SEQ = B.ROUT_SEQ" ).append("\n"); 
		query.append("    AND A.RT_SEQ = B.RT_SEQ" ).append("\n"); 
		query.append("    AND A.CHG_CD = B.CHG_CD     )  " ).append("\n"); 
		query.append("WHEN MATCHED THEN" ).append("\n"); 
		query.append("UPDATE SET A.TRF_SCG_AMT =  B.TRF_SCG_AMT," ).append("\n"); 
		query.append("		   A.UPD_USR_ID = @[upd_usr_id]," ).append("\n"); 
		query.append("		   A.UPD_DT = SYSDATE" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("WHEN NOT MATCHED THEN" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("INSERT " ).append("\n"); 
		query.append("    (A.QTTN_NO, A.QTTN_VER_NO, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.RT_SEQ," ).append("\n"); 
		query.append("    A.CHG_CD, A.BKG_RAT_UT_CD, A.CURR_CD, A.TRF_SCG_AMT, A.ADJ_SCG_AMT, A.ADJ_SCG_USD_AMT, A.TRF_SCG_RMK, " ).append("\n"); 
		query.append("    A.TRF_ADJ_TP_CD, A.ADJ_FLG, A.CRE_USR_ID, A.CRE_DT, A.UPD_USR_ID, A.UPD_DT )" ).append("\n"); 
		query.append("VALUES " ).append("\n"); 
		query.append("    (B.QTTN_NO, B.QTTN_VER_NO, B.CMDT_HDR_SEQ, B.ROUT_SEQ, B.RT_SEQ," ).append("\n"); 
		query.append("    B.CHG_CD, B.RAT_UT_CD, B.CURR_CD, B.TRF_SCG_AMT, B.ADJ_SCG_AMT, B.ADJ_SCG_USD_AMT, NULL," ).append("\n"); 
		query.append("    'T', 'N', @[upd_usr_id], SYSDATE, @[upd_usr_id], SYSDATE )" ).append("\n"); 

	}
}