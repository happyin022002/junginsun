<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="WeeklyCMDBDAOSearchChassisUnitCostRSQL">
			<desc><![CDATA[SearchChassisUnitCost
2015.03.26 컬럼 속성명 변경으로 수정()]]></desc>
			<sql><![CDATA[
SELECT COST_YR,
       BSE_QTR_CD AS COST_QTR_CD,
	   COST_YR||'-'||BSE_QTR_CD AS COST_YR_QTR,
       DECODE(GID,1,'T',2,'S',COST_TP_CD) AS COST_TP_CD,
       DECODE(COST_TP_CD,'A','CY non exemted','C','CY exempted','D','Door Term','L','Live Reefer',DECODE(GID,1,'G.Total','S.Total')) AS COST_TP_NM,
       EFF_FM_YRMON,
       EFF_TO_YRMON,
       DECODE(GID,2,BKG_BX_STTL_QTY,BKG_BX_QTY) AS BKG_BX_QTY,
       DECODE(DECODE(GID,1,'',COST_TP_BX_RT),'',DECODE(GID,1,'',COST_TP_BX_RT),'0',DECODE(GID,1,'',COST_TP_BX_RT),DECODE(GID,1,'',COST_TP_BX_RT),DECODE(GID,1,'',COST_TP_BX_RT)||'%') AS COST_TP_BX_RT,
       DECODE(GID,2,'',DECODE(COST_TP_CD, '', 100, ROUND(RATIO_TO_REPORT(DECODE(COST_TP_CD,NULL,0,BKG_BX_QTY)) OVER(PARTITION BY COST_YR, BSE_QTR_CD) * 100,2))||'%') COST_TP_BX_RT_TTL,
       ESTM_AMT,
       ON_ST_UT_COST,
       DECODE(GID,1,COM_SUB_TTL) AS COM_SUB_TTL,
       COM_UT_COST,
       STND_UT_COST       
  FROM (

        SELECT COST_YR,
               BSE_QTR_CD,
               COST_TP_CD,
               MIN(EFF_FM_YRMON) AS EFF_FM_YRMON,
               MAX(EFF_TO_YRMON) AS EFF_TO_YRMON,
               ROUND(SUM(BKG_BX_QTY),2) AS BKG_BX_QTY,
               ROUND(SUM(COST_TP_BX_RT) * 100,2) AS COST_TP_BX_RT,
               ROUND(SUM(ESTM_AMT),2) AS ESTM_AMT,
               ROUND(ON_ST_UC_AMT,2) AS ON_ST_UT_COST,
               ROUND(COM_SUB_TTL_AMT,2) AS COM_SUB_TTL,
               ROUND(COM_UC_AMT,2)  AS COM_UT_COST,
               ROUND(STND_UC_AMT,2) AS STND_UT_COST,
               ROUND(SUM(DECODE(COST_TP_CD,'A',0,BKG_BX_QTY)),2) AS BKG_BX_STTL_QTY,
               GROUPING_ID(COST_TP_CD) + GROUPING_ID(COM_SUB_TTL_AMT) as GID  -- GID=1 이면 전체 TOTAL, GID=2 이면 SUB TOTAL
          FROM MAS_CHSS_UT_COST
         WHERE COST_YR||BSE_QTR_CD BETWEEN SUBSTR(@[fr_year]||@[fr_qtr]||'Q',1,6)
									AND 	SUBSTR(@[to_year]||@[to_qtr]||'Q',1,6)
         GROUP BY GROUPING SETS (
                                 (COST_YR, BSE_QTR_CD,COST_TP_CD, ON_ST_UC_AMT,COM_SUB_TTL_AMT,COM_UC_AMT,STND_UC_AMT),
                                 (COST_YR, BSE_QTR_CD,COM_SUB_TTL_AMT),
                                 (COST_YR, BSE_QTR_CD)
                                )
       ) 
 ORDER BY COST_YR,
       BSE_QTR_CD,
       DECODE(GID,1,'T',2,'S',COST_TP_CD)			]]></sql>
			<params>
				<param name="fr_year" type="12" value="" out="N"/>
				<param name="fr_qtr" type="12" value="" out="N"/>
				<param name="to_year" type="12" value="" out="N"/>
				<param name="to_qtr" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
