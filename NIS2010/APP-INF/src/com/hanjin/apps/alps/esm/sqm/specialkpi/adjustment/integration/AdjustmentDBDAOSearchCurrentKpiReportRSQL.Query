<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AdjustmentDBDAOSearchCurrentKpiReportRSQL">
			<desc><![CDATA[SearchCurrentKpiReport

* 2014.11.14 [CHM-201432523] Quarterly와 Yearly,Currently Updated 데이터 차이나는것 수정
                     (MIN_TP_CD를 BSE_YR, BSE_QTR_CD 기준으로 가져오도록 BSE_TP_CD삭제, FNL_BSA_CAPA를 BSE_TP_CD기준으로 가져오도록 추가)
* 2014.11.11 [CHM-201432524] Current KPI Report 화면 내 Trade Direction 조건 추가
* 2015.06.15 김용습 [CHM-201536164] 주간 MAS Open에 따른 타모듈 프로그램 적용 요청
* 2015.11.20 김용습 [CHM-201538493] [CSR 전환건] Current KPI Report 화면 보완 (조회 조건 Week → Month 변경, Raw Data Export 버튼 추가)]]></desc>
			<sql><![CDATA[
SELECT BSE_TP_CD
,BSE_YR
,BSE_QTR_CD
,RHQ_CD
,RGN_OFC_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,CONV_DIR_CD
,HUL_BND_CD
,BSE_MON
,BSE_WK
,VVD
,SUM(FNL_BSA_CAPA) AS FNL_BSA_CAPA
,SUM(LOD_QTY) AS LOD_QTY
,SUM(GREV) AS GREV
,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(GREV)/SUM(LOD_QTY)), 0) AS GRPB
,DECODE(SUM(LOD_QTY), 0, 0, SUM(GREV)/SUM(LOD_QTY)) AS GRPB_DECIMAL
,SUM(PA_CM_COST) AS PA_CM_COST
,SUM(RA_CM_COST) AS RA_CM_COST
,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(PA_CM_COST)/SUM(LOD_QTY)),0) AS PA_CMCB
,ROUND(DECODE(SUM(LOD_QTY), 0, 0, SUM(RA_CM_COST)/SUM(LOD_QTY)),0) AS RA_CMCB
,SUM(GREV) - SUM(PA_CM_COST) AS PA_CM
,SUM(GREV) - SUM(RA_CM_COST) AS RA_CM
,ROUND(DECODE(SUM(LOD_QTY), 0, 0, (SUM(GREV) - SUM(PA_CM_COST))/SUM(LOD_QTY)),0) AS PA_CMPB
,ROUND(DECODE(SUM(LOD_QTY), 0, 0, (SUM(GREV) - SUM(RA_CM_COST))/SUM(LOD_QTY)),0) AS RA_CMPB
FROM
(
SELECT B1.BSE_TP_CD
      ,B1.BSE_YR
--      ,B1.BSE_QTR_CD
      ,VVD_QUARTER AS BSE_QTR_CD
      ,B1.RHQ_CD
      ,B1.RGN_OFC_CD
      ,B1.TRD_CD
      ,B1.SUB_TRD_CD
      ,B1.RLANE_CD
      ,B1.DIR_CD
      ,B1.CONV_DIR_CD
      ,DECODE(B1.HUL_BND_CD, 'HH', 'H/H', 'BH', 'B/H') HUL_BND_CD
      ,B1.BSE_MON
      ,B1.BSE_WK
      ,B1.VVD
      ,B1.FNL_BSA_CAPA
      ,SUM(B1.LOD_QTY) AS LOD_QTY
      ,SUM(B1.GREV) AS GREV
      ,ROUND(DECODE(SUM(B1.LOD_QTY), 0, 0, SUM(B1.GREV)/SUM(B1.LOD_QTY)), 0) AS GRPB
      ,DECODE(SUM(B1.LOD_QTY), 0, 0, SUM(B1.GREV)/SUM(B1.LOD_QTY)) AS GRPB_DECIMAL
      ,SUM(B1.PA_CM_COST) AS PA_CM_COST
      ,SUM(B1.RA_CM_COST) AS RA_CM_COST
      ,ROUND(DECODE(SUM(B1.LOD_QTY), 0, 0, SUM(B1.PA_CM_COST)/SUM(B1.LOD_QTY)),0) AS PA_CMCB
      ,ROUND(DECODE(SUM(B1.LOD_QTY), 0, 0, SUM(B1.RA_CM_COST)/SUM(B1.LOD_QTY)),0) AS RA_CMCB
      ,SUM(B1.GREV) - SUM(B1.PA_CM_COST) AS PA_CM
      ,SUM(B1.GREV) - SUM(B1.RA_CM_COST) AS RA_CM
      ,ROUND(DECODE(SUM(B1.LOD_QTY), 0, 0, (SUM(B1.GREV) - SUM(B1.PA_CM_COST))/SUM(B1.LOD_QTY)),0) AS PA_CMPB
      ,ROUND(DECODE(SUM(B1.LOD_QTY), 0, 0, (SUM(B1.GREV) - SUM(B1.RA_CM_COST))/SUM(B1.LOD_QTY)),0) AS RA_CMPB

  FROM (
        SELECT A1.BSE_TP_CD
              ,MIN(A1.BSE_TP_CD) OVER(PARTITION BY A1.BSE_YR, A1.BSE_QTR_CD) MIN_TP_CD
              ,A1.BSE_YR
              ,A1.BSE_QTR_CD
#if(${f_ofc_lvl} == '01')
              ,'' AS RHQ_CD
#elseif(${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
              ,A2.RHQ_CD
#else
#end
#if(${f_ofc_lvl} == '01' || ${f_ofc_lvl} == '02')
              ,'' AS RGN_OFC_CD
#elseif(${f_ofc_lvl} == '03')
              ,A2.RGN_OFC_CD
#else
#end
              ,A2.TRD_CD
              ,A1.SUB_TRD_CD
              ,A2.RLANE_CD
              ,A2.DIR_CD
              ,A2.CONV_DIR_CD
              ,A3.HUL_BND_CD
              ,A1.BSE_MON
              ,CASE WHEN A1.BSE_MON = '01' THEN '1Q'
                WHEN A1.BSE_MON = '02' THEN '1Q'
                WHEN A1.BSE_MON = '03' THEN '1Q'
                WHEN A1.BSE_MON = '04' THEN '2Q'
                WHEN A1.BSE_MON = '05' THEN '2Q'
                WHEN A1.BSE_MON = '06' THEN '2Q'
                WHEN A1.BSE_MON = '07' THEN '3Q'
                WHEN A1.BSE_MON = '08' THEN '3Q'
                WHEN A1.BSE_MON = '09' THEN '3Q'
                WHEN A1.BSE_MON = '10' THEN '4Q'
                WHEN A1.BSE_MON = '11' THEN '4Q'
                WHEN A1.BSE_MON = '12' THEN '4Q' END AS VVD_QUARTER
#if(${f_chk_week} != 'W')
              ,'' AS BSE_WK
#else
              ,A1.BSE_WK
#end
#if(${f_chk_vvd} != 'V')
              ,'' AS VVD
#else
              ,A2.VSL_CD || A2.SKD_VOY_NO || A2.SKD_DIR_CD AS VVD
#end
#if(${f_chk_week} == 'W' && ${f_chk_vvd} == 'V')
              ,SUM(A1.FNL_BSA_CAPA) OVER(PARTITION BY A1.BSE_TP_CD, A1.BSE_YR, A1.BSE_QTR_CD, A1.TRD_CD, A1.SUB_TRD_CD, A1.RLANE_CD, A1.DIR_CD, A1.BSE_MON, A2.RGN_OFC_CD, A1.BSE_WK, A2.VSL_CD || A2.SKD_VOY_NO || A2.SKD_DIR_CD) AS FNL_BSA_CAPA
#elseif(${f_chk_week} != 'W' && ${f_chk_vvd} == 'V')
              ,SUM(A1.FNL_BSA_CAPA) OVER(PARTITION BY A1.BSE_TP_CD, A1.BSE_YR, A1.BSE_QTR_CD, A1.TRD_CD, A1.SUB_TRD_CD, A1.RLANE_CD, A1.DIR_CD, A1.BSE_MON, A2.RGN_OFC_CD, A2.VSL_CD || A2.SKD_VOY_NO || A2.SKD_DIR_CD) AS FNL_BSA_CAPA
#elseif(${f_chk_week} == 'W' && ${f_chk_vvd} != 'V')
              ,SUM(A1.FNL_BSA_CAPA) OVER(PARTITION BY A1.BSE_TP_CD, A1.BSE_YR, A1.BSE_QTR_CD, A1.TRD_CD, A1.SUB_TRD_CD, A1.RLANE_CD, A1.DIR_CD, A1.BSE_MON, A2.RGN_OFC_CD, A1.BSE_WK) AS FNL_BSA_CAPA
#else
              ,SUM(A1.FNL_BSA_CAPA) OVER(PARTITION BY A1.BSE_TP_CD, A1.BSE_YR, A1.BSE_QTR_CD, A1.TRD_CD, A1.SUB_TRD_CD, A1.RLANE_CD, A1.DIR_CD, A1.BSE_MON, A2.RGN_OFC_CD) AS FNL_BSA_CAPA
#end
              ,A2.LOD_QTY
              ,A2.LOD_QTY * ROUND(A2.GRS_RPB_REV, 0) AS GREV
              ,A2.LOD_QTY * ROUND(A2.PA_CM_UC_AMT, 0) AS PA_CM_COST
              ,A2.LOD_QTY * ROUND(A2.RA_CM_UC_AMT, 0) AS RA_CM_COST
          FROM SQM_SPCL_TGT_VVD A1
              ,SQM_SPCL_CFM_QTA A2
              ,MAS_LANE_RGST A3
         WHERE 1=1
           AND A1.BSE_TP_CD   = A2.BSE_TP_CD
           AND A1.BSE_YR      = A2.BSE_YR
           AND A1.BSE_QTR_CD  = A2.BSE_QTR_CD
           AND A1.TRD_CD      = A2.TRD_CD
           AND A1.RLANE_CD    = A2.RLANE_CD
           AND A1.DIR_CD      = A2.DIR_CD
           AND A1.VSL_CD      = A2.VSL_CD
           AND A1.SKD_VOY_NO  = A2.SKD_VOY_NO
           AND A1.SKD_DIR_CD  = A2.SKD_DIR_CD

           AND A1.TRD_CD      = A3.TRD_CD
           AND A1.SUB_TRD_CD  = A3.SUB_TRD_CD
           AND A1.RLANE_CD    = A3.RLANE_CD
           AND A1.DIR_CD      = A3.DIR_CD 

#if(${f_bse_tp_cd} == 'Q')
           AND A1.BSE_TP_CD   = @[f_bse_tp_cd]
#elseif(${f_bse_tp_cd} == 'Y')
           --BSE_TP_CD 가 Y면 F_YEAR_TP_CD 검사
           AND A1.BSE_TP_CD   = DECODE(@[f_year_tp_cd], 'I', 'Y', 'C', A1.BSE_TP_CD)
#else
#end
           AND A1.BSE_YR      = @[f_bse_yr]

           AND A2.SPCL_TGT_CD = @[f_spcl_tgt_cd]
#if(${f_fm_mon} != '' && ${f_to_mon} != '')
           AND A1.BSE_MON     BETWEEN @[f_fm_mon] AND @[f_to_mon]
#end
#if(${f_fm_wk} != '' && ${f_to_wk} != '')
           AND A1.BSE_WK      BETWEEN @[f_fm_wk] AND @[f_to_wk]
#end
#if(${f_trd_cd} != 'All')
           AND A1.TRD_CD      = @[f_trd_cd]
#end
#if(${f_rlane_cd} != 'All')
           AND A1.RLANE_CD    = @[f_rlane_cd]
#end
#if(${f_trd_dir} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')
           AND A2.CONV_DIR_CD = @[f_conv_dir_cd]
#end
#if (${f_trd_dir} == 'on' && ${f_hul_bnd_cd} != '' && ${f_hul_bnd_cd} != 'All')
		   AND A3.HUL_BND_CD  = @[f_hul_bnd_cd]
#end

#if(${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
#if(${f_rhq_cd} != 'All')
           AND A2.RHQ_CD      = @[f_rhq_cd]
#end
#end
#if(${f_ofc_lvl} == '03')
#if(${f_rgn_ofc_cd} != 'All')
           AND A2.RGN_OFC_CD  = @[f_rgn_ofc_cd]
#end
#end
        ) B1
 WHERE 1=1
   AND B1.BSE_TP_CD = B1.MIN_TP_CD
   #if(${f_bse_qtr_cd} != 'All')
   AND VVD_QUARTER  = @[f_bse_qtr_cd]
   #end

GROUP BY B1.BSE_TP_CD
      ,B1.BSE_YR
--      ,B1.BSE_QTR_CD
      ,VVD_QUARTER
      ,B1.RHQ_CD
      ,B1.RGN_OFC_CD
      ,B1.TRD_CD
      ,B1.SUB_TRD_CD
      ,B1.RLANE_CD
      ,B1.DIR_CD
      ,B1.CONV_DIR_CD
      ,B1.HUL_BND_CD
      ,B1.BSE_MON
      ,B1.BSE_WK
      ,B1.VVD
      ,B1.FNL_BSA_CAPA
 ORDER BY B1.BSE_YR
--      ,B1.BSE_QTR_CD
      ,VVD_QUARTER
#if(${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
      ,B1.RHQ_CD
#end
#if(${f_ofc_lvl} == '03')
      ,B1.RGN_OFC_CD
#end
      ,B1.TRD_CD
      ,B1.SUB_TRD_CD
      ,B1.RLANE_CD
      ,B1.DIR_CD
      ,B1.BSE_MON
	  ,B1.BSE_WK
      ,B1.FNL_BSA_CAPA
)
GROUP BY BSE_TP_CD
,BSE_YR
,BSE_QTR_CD
,RHQ_CD
,RGN_OFC_CD
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,CONV_DIR_CD
,HUL_BND_CD
,BSE_MON
,BSE_WK
,VVD
--,FNL_BSA_CAPA
 ORDER BY BSE_YR
,BSE_QTR_CD
#if(${f_ofc_lvl} == '02' || ${f_ofc_lvl} == '03')
,RHQ_CD
#end
#if(${f_ofc_lvl} == '03')
,RGN_OFC_CD
#end
,TRD_CD
,SUB_TRD_CD
,RLANE_CD
,DIR_CD
,BSE_MON
,BSE_WK
,FNL_BSA_CAPA			]]></sql>
			<params>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_year_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_spcl_tgt_cd" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_conv_dir_cd" type="12" value="" out="N"/>
				<param name="f_hul_bnd_cd" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
				<param name="f_rgn_ofc_cd" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
