<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ConstraintMasterDBDAOSearchStandbyBKGReportListRSQL">
			<desc><![CDATA[Standby BKG Report SMP, ALOC 용 리스트]]></desc>
			<sql><![CDATA[
#if (${f_acct_cd} != '') 
WITH
PARAMS AS (
	SELECT
         SUBSTR(@[f_vvd_cd],1,4)     AS VSL_CD
        ,SUBSTR(@[f_vvd_cd],5,4)     AS SKD_VOY_NO
        ,SUBSTR(@[f_vvd_cd],-1)      AS SKD_DIR_CD
        ,NVL(@[f_h_trd_cd],@[f_trd_cd])      		 AS TRD_CD
        ,@[f_sub_trd_cd]    		 AS SUB_TRD_CD
        ,NVL(@[f_h_rlane_cd],@[f_rlane_cd])    		 AS RLANE_CD
        ,@[f_dir_cd]      			 AS DIR_CD
	FROM DUAL	

)
, REP_VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           V.VSL_CD              ,
           V.SKD_VOY_NO          ,
           V.DIR_CD SKD_DIR_CD   ,
           NVL(A.CTRL_ACCT_FLG, 'N')        AS CTRL_ACCOUNT,
           NVL(A.CTRL_FX_RT_FLG, 'N')       AS CTRL_FX_RT_FLG,
           V.N1ST_LODG_PORT_ETD_DT          AS FL_ETD_DT  
      FROM MAS_MON_VVD V,
           SPC_ALOC_CTRL_OPT A,
           PARAMS      P
     WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1
                                                                 FROM MAS_MON_VVD N
                                                                WHERE N.RLANE_CD   = V.RLANE_CD 
                                                                  AND N.VSL_CD     = V.VSL_CD
                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO
                                                                  AND N.DIR_CD     = V.DIR_CD
                                                                  AND N.DELT_FLG   = 'N'))
       
       AND A.RLANE_CD  (+) = V.RLANE_CD
       AND A.DIR_CD    (+) = V.DIR_CD
       AND A.VSL_CD    (+) = V.VSL_CD
       AND A.SKD_VOY_NO(+) = V.SKD_VOY_NO
       AND A.SKD_DIR_CD(+) = V.DIR_CD
       
       AND V.TRD_CD        = NVL(P.TRD_CD, V.TRD_CD) 
       AND V.SUB_TRD_CD    = NVL(P.SUB_TRD_CD, V.SUB_TRD_CD) 
       AND V.RLANE_CD      = NVL(P.RLANE_CD, V.RLANE_CD) 
       AND V.DIR_CD        = NVL(P.DIR_CD, V.DIR_CD) 
       AND V.VSL_CD        = NVL(P.VSL_CD, V.VSL_CD) 
       AND V.SKD_VOY_NO    = NVL(P.SKD_VOY_NO, V.SKD_VOY_NO) 
       AND V.DIR_CD        = NVL(P.SKD_DIR_CD, V.DIR_CD) 
)
, CTRT_OPT_DTL AS (
-- SPC_ALOC_LANE_CTRL_OPT_DTL 테이블의 계약 정보를 가지고 온다.
SELECT DISTINCT  
       A2.TRD_CD
      ,A2.SUB_TRD_CD
      ,A2.RLANE_CD
      ,A2.DIR_CD
      ,A2.ALOC_CTRL_TP_CD
      ,A2.CTRL_LOC_ACCT_CD
      ,A1.FL_ETD_DT
  FROM REP_VVDS A1
      ,SPC_ALOC_LANE_CTRL_OPT_DTL A2
 WHERE 1=1
   AND A1.REP_TRD_CD       = A2.TRD_CD
   AND A1.REP_SUB_TRD_CD   = A2.SUB_TRD_CD
   AND A1.RLANE_CD         = A2.RLANE_CD
   AND A1.DIR_CD           = A2.DIR_CD
   AND A1.CTRL_ACCOUNT     = 'Y'
   AND A1.CTRL_FX_RT_FLG   = 'Y'
   AND A2.CTRL_FX_RT_FLG   = 'Y'
   AND A2.ALOC_CTRL_TP_CD  = 'F'

)
, CTRT_DTL_INFO AS (
    SELECT  
           A5.TRD_CD
          ,A5.SUB_TRD_CD
          ,A5.RLANE_CD
          ,A5.DIR_CD
          ,A5.ALOC_CTRL_TP_CD
          ,A5.CTRL_LOC_ACCT_CD 
          ,A1.PROP_NO
          ,A2.AMDT_SEQ
          ,A3.SVC_SCP_CD
          ,A4.GEN_SPCL_RT_TP_CD
          ,A4.CMDT_HDR_SEQ
          ,A2.REAL_CUST_CNT_CD || LPAD(A2.REAL_CUST_SEQ,'6','0') CUST_CD
          ,A4.FX_RT_FLG
          ,A2.EFF_DT
          ,A2.EXP_DT
          ,A2.PROP_STS_CD
      FROM CTRT_OPT_DTL A5
          ,PRI_SP_HDR A1
          ,PRI_SP_MN  A2
          ,PRI_SP_SCP_MN A3
          ,PRI_SP_SCP_RT_CMDT_HDR A4 
     WHERE 1=1
       AND A1.SC_NO             = A5.CTRL_LOC_ACCT_CD
       AND A1.PROP_NO           = A2.PROP_NO
       AND A2.PROP_STS_CD       = 'F' -- A, F, Q
       AND TRUNC(A5.FL_ETD_DT) BETWEEN A2.EFF_DT AND A2.EXP_DT
       AND A2.PROP_NO           = A3.PROP_NO
       AND A2.AMDT_SEQ          = A3.AMDT_SEQ
       AND A3.PROP_NO           = A4.PROP_NO
       AND A3.AMDT_SEQ          = A4.AMDT_SEQ
       AND A3.SVC_SCP_CD        = A4.SVC_SCP_CD
       AND NVL(A4.FX_RT_FLG,'N')= 'Y'
     )
, ALOC_LANE_CTRL_OPT_DTL AS (
SELECT DISTINCT B1.TRD_CD
      ,B1.SUB_TRD_CD
      ,B1.RLANE_CD
      ,B1.DIR_CD
--      ,B1.ALOC_CTRL_TP_CD
--      ,B3.ALOC_CTRL_TP_CD
      ,NVL(B3.ALOC_CTRL_TP_CD, B1.ALOC_CTRL_TP_CD) AS ALOC_CTRL_TP_CD
      ,B1.CTRL_LOC_ACCT_CD
      ,B1.SC_NO
      ,B1.RFA_NO
      ,NVL(B3.ALOC_CTRL_DTL_CD, B1.ALOC_CTRL_DTL_CD) AS ALOC_CTRL_DTL_CD
  FROM 
       SPC_ALOC_LANE_CTRL_OPT_DTL B1
      ,REP_VVDS B2
      ,(
        -- Actual Account 정보 추출
        SELECT distinct
               A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,'B' AS ALOC_CTRL_TP_CD
              ,A1.ALOC_CTRL_TP_CD AS ORG_ALOC_CTRL_TP_CD-- B : A/Acct, C : Commodity, F : Fixed
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,A2.CUST_CNT_CD || LPAD(A2.CUST_SEQ,'6','0') AS ALOC_CTRL_DTL_CD
          FROM CTRT_DTL_INFO A1
              ,PRI_SP_SCP_RT_ACT_CUST A2
         WHERE 1=1
           AND A1.PROP_NO           = A2.PROP_NO
           AND A1.AMDT_SEQ          = A2.AMDT_SEQ
           AND A1.SVC_SCP_CD        = A2.SVC_SCP_CD
           AND A1.GEN_SPCL_RT_TP_CD = A2.GEN_SPCL_RT_TP_CD
           AND A1.CMDT_HDR_SEQ      = A2.CMDT_HDR_SEQ
        UNION ALL
        -- CMDT 정보 추출
        SELECT distinct
               A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,'C' AS ALOC_CTRL_TP_CD
              ,A1.ALOC_CTRL_TP_CD AS ORG_ALOC_CTRL_TP_CD -- B : A/Acct, C : Commodity, F : Fixed
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,DECODE(A2.PRC_CMDT_TP_CD,'C', A2.PRC_CMDT_DEF_CD, 'G', A4.PRC_CMDT_DEF_CD) AS ALOC_CTRL_DTL_CD
          FROM CTRT_DTL_INFO A1
              ,PRI_SP_SCP_RT_CMDT     A2
              ,PRI_SP_SCP_GRP_CMDT    A3
              ,PRI_SP_SCP_GRP_CMDT_DTL A4  
         WHERE 1=1
           AND A1.PROP_NO           = A2.PROP_NO
           AND A1.AMDT_SEQ          = A2.AMDT_SEQ
           AND A1.SVC_SCP_CD        = A2.SVC_SCP_CD
           AND A1.GEN_SPCL_RT_TP_CD = A2.GEN_SPCL_RT_TP_CD
           AND A1.CMDT_HDR_SEQ      = A2.CMDT_HDR_SEQ
           AND A2.SRC_INFO_CD       <> 'AD'

           AND A2.PROP_NO           = A3.PROP_NO(+)
           AND A2.AMDT_SEQ          = A3.AMDT_SEQ(+)
           AND A2.SVC_SCP_CD        = A3.SVC_SCP_CD(+)
           AND A2.PRC_CMDT_DEF_CD   = A3.PRC_GRP_CMDT_CD(+)
           
           AND A3.PROP_NO           = A4.PROP_NO(+)
           AND A3.AMDT_SEQ          = A4.AMDT_SEQ(+)
           AND A3.SVC_SCP_CD        = A4.SVC_SCP_CD(+)
           AND A3.GRP_CMDT_SEQ      = A4.GRP_CMDT_SEQ(+)   
           AND A4.SRC_INFO_CD(+)    <> 'AD'
         GROUP BY A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,A1.ALOC_CTRL_TP_CD
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,DECODE(A2.PRC_CMDT_TP_CD,'C', A2.PRC_CMDT_DEF_CD, 'G', A4.PRC_CMDT_DEF_CD)       
       ) B3
 WHERE 1=1
   AND B2.REP_TRD_CD       = B1.TRD_CD
   AND B2.REP_SUB_TRD_CD   = B1.SUB_TRD_CD
   AND B2.RLANE_CD         = B1.RLANE_CD
   AND B2.DIR_CD           = B1.DIR_CD
   AND B1.TRD_CD           = B3.TRD_CD(+)
   AND B1.SUB_TRD_CD       = B3.SUB_TRD_CD(+)
   AND B1.RLANE_CD         = B3.RLANE_CD(+)
   AND B1.DIR_CD           = B3.DIR_CD(+)
   AND B1.ALOC_CTRL_TP_CD  = B3.ORG_ALOC_CTRL_TP_CD(+)
   AND B1.CTRL_LOC_ACCT_CD = B3.CTRL_LOC_ACCT_CD(+)
  )
#end
SELECT
AA.BKG_NO
      ,AA.BKG_STS_CD
      ,AA.STANDBY_TYPE
--      ,AA.STANDBY_REASON
--      ,AA.ALOC_SVC_CD
      ,AA.ALOC_STS_CD
      ,AA.CFM_RQST_FLG
      ,AA.CNDDT_CFM_FLG
      ,AA.CFM_USR_ID
      ,AA.CFM_DT
#if($c_name.size() != 0)
  #foreach(${list} in ${c_name})
    #if( ${list} != 'sc_no' && ${list} != 'rfa_no' && ${list} != 'ob_sls_ofc_cd' && ${list} != 'sub_trd_cd' && ${list} != 'vvd' && ${list} != 'acct_cd' && ${list} != 'bkg_no' && ${list} != 'bkg_no' )
      , ${list}
    #end
  #end
#end
      ,AA.FEU
      ,AA.TEU
      ,AA.CUST_CTRL_CD
      ,AA.SC_NO
      ,AA.RFA_NO
      ,AA.OB_SLS_OFC_CD
	  ,AA.TRD_CD
      ,AA.SUB_TRD_CD
	  ,AA.RLANE_CD
	  ,AA.DIR_CD
      ,AA.VVD
      ,AA.ACCT_CD
	  ,(SELECT MAX(RV.CMPB_AMT) KEEP (DENSE_RANK LAST ORDER BY RV.REV_COST_SEQ) FROM BKG_REV_COST RV WHERE RV.BKG_NO = AA.BKG_NO) AS CMPB
FROM (      
    SELECT 
           A.BKG_NO
          ,A.BKG_STS_CD
          ,A.STANDBY_TYPE
--          ,A.STANDBY_REASON
--          ,A.ALOC_SVC_CD
          ,A.ALOC_STS_CD
          ,A.CFM_RQST_FLG
          ,A.CNDDT_CFM_FLG
          ,A.CFM_USR_ID
          ,A.CFM_DT
#if($c_name.size() != 0)
#foreach(${list} in ${c_name})
	#if( ${list} != 'sc_no' && ${list} != 'rfa_no' && ${list} != 'ob_sls_ofc_cd' && ${list} != 'sub_trd_cd' && ${list} != 'vvd' && ${list} != 'acct_cd' && ${list} != 'bkg_no')
          , A.${list}
	#end
#end
#end
          ,A.FEU
          ,A.TEU
          ,A.SEASON
          --,AGMT_CNT_CD
          --,AGMT_CUST_SEQ
          ,A.SC_NO
          ,A.RFA_NO
		  ,A.VVD
#if (${f_cust_tp} != '')
           ,MCC.CUST_CTRL_CD
#else
           ,'' AS CUST_CTRL_CD
#end
           ,A.OB_SLS_OFC_CD
		   ,A.TRD_CD
		   ,A.SUB_TRD_CD
		   ,A.RLANE_CD
		   ,A.DIR_CD
		   ,A.ACOUNT_CD ACCT_CD
    FROM (
        SELECT 
            BK.BKG_NO
            , BK.BKG_STS_CD
            , SSB.CFM_USR_ID
            , SSB.CFM_DT
            , BK.ALOC_SVC_CD
            , BK.ALOC_STS_CD
            , BK.BL_NO
            , BK.SLS_RHQ_CD
            , BK.BKG_ALOC_TP_CD
            , COA.TRD_CD
            , COA.SUB_TRD_CD
            , (SELECT /*+INDEX_DESC (MST XPKSPC_MDL_VER_MST) */
                         DECODE( DECODE( HH.TRD_CD, NULL, 'N','Y'), 'Y', COST_YRWK||'-'||VER_SEQ, '200001-1')
                    FROM SPC_MDL_VER_MST MST
                   WHERE SUBSTR(COA.COST_YRMON,1,4)||COA.COST_WK BETWEEN MST.VER_ST_YRWK AND MST.VER_END_YRWK
                     AND MST.CFM_FLG = 'Y'
                     AND MST.TRD_CD  = COA.TRD_CD
                     AND ROWNUM    = 1) AS SEASON
            , BK.CTRT_CUST_SEQ
            , BK.CTRT_CUST_CNT_CD
            , BK.SLAN_CD               TRNK_SLAN_CD
            , BK.SKD_DIR_CD            TRNK_DIR_CD
            , BK.POL_CD                TRNK_POL
            , BK.POD_CD                TRNK_POD
            , BK.POR_CD                POR_LOC_CD
            , BK.POR_NOD_CD            POR_NOD_CD
            , (SELECT SCC_CD FROM MDM_LOCATION LOC WHERE LOC.LOC_CD = BK.POR_CD) POR_SCC_CD
            , BK.POL_CD                POL_LOC_CD
            , BK.POL_NOD_CD            POL_NOD_CD
            , NVL((SELECT WM_CONCAT( VSL_SLAN_CD ) FROM VSK_VSL_SKD SKD WHERE SKD.VSL_CD = VVD.VSL_CD AND SKD.SKD_VOY_NO = VVD.SKD_VOY_NO AND SKD.SKD_DIR_CD = VVD.SKD_DIR_CD), 'X') TS_SLAN_CD
            , (SELECT WM_CONCAT( NVL(SKD_DIR_CD, 'X') ) FROM BKG_VVD WHERE BKG_NO = SSB.BKG_NO ) TS_DIR_CD
            , (SELECT WM_CONCAT( NVL(POL_CD, 'X') ) FROM BKG_VVD WHERE BKG_NO = SSB.BKG_NO ) TS_POL_CD
            , (SELECT WM_CONCAT( NVL(POD_CD, 'X') ) FROM BKG_VVD WHERE BKG_NO = SSB.BKG_NO ) TS_POD_CD
            , BK.POD_CD                POD_LOC_CD
            , BK.POD_NOD_CD            POD_NOD_CD
            , BK.DEL_CD                DEL_LOC_CD
            , BK.DEL_NOD_CD            DEL_NOD_CD
            , (SELECT SCC_CD FROM MDM_LOCATION LOC WHERE LOC.LOC_CD = BK.DEL_CD) DEL_SCC_CD
            , BK.VSL_CD || BK.SKD_VOY_NO || BK.SKD_DIR_CD VVD
            , DECODE(COA.IOC_CD, 'T', DECODE(OFC.N2ND_PRNT_OFC_CD, 'SINRS', OFC.N4TH_PRNT_OFC_CD, BK.SLS_RHQ_CD, OFC.N4TH_PRNT_OFC_CD, 
                            DECODE(COA.RLANE_CD, 'WAFIE', OFC.N4TH_PRNT_OFC_CD, OFC.N2ND_PRNT_OFC_CD)), OFC.N4TH_PRNT_OFC_CD) OB_SLS_OFC_CD
            , DECODE(BK.DCGO_FLG,'Y','DG', DECODE(BK.RD_CGO_FLG, 'Y', 'RD','')) DGRD
            , BK.SC_NO
            , BK.RFA_NO
            , BK.CTRT_CUST_CNT_CD || NVL(LPAD(BK.CTRT_CUST_SEQ,6,'0'),'') ||':' ||(SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER CC WHERE CC.CUST_CNT_CD = BK.CTRT_CUST_CNT_CD AND CC.CUST_SEQ = BK.CTRT_CUST_SEQ) AS C_CUST
            , BK.AGMT_ACT_CNT_CD  || NVL(LPAD(BK.AGMT_ACT_CUST_SEQ,6,'0'),'') ||':' ||(SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER CC WHERE CC.CUST_CNT_CD = BK.AGMT_ACT_CNT_CD AND CC.CUST_SEQ = BK.AGMT_ACT_CUST_SEQ) AS A_CUST
            , SHPR.CUST_CNT_CD    || NVL(LPAD(SHPR.CUST_SEQ,6,'0'),'') || ':' || (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER CC WHERE CC.CUST_CNT_CD = SHPR.CUST_CNT_CD AND CC.CUST_SEQ = SHPR.CUST_SEQ) AS SHRP
            , CNEE.CUST_CNT_CD    || NVL(LPAD(CNEE.CUST_SEQ,6,'0'),'') || ':' || (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER CC WHERE CC.CUST_CNT_CD = CNEE.CUST_CNT_CD AND CC.CUST_SEQ = CNEE.CUST_SEQ) AS CNEE
            , FWDR.CUST_CNT_CD    || NVL(LPAD(FWDR.CUST_SEQ,6,'0'),'') || ':' || (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER CC WHERE CC.CUST_CNT_CD = FWDR.CUST_CNT_CD AND CC.CUST_SEQ = FWDR.CUST_SEQ) AS FWDR
            , BK.CMDT_CD
            , (SELECT CMDT.CMDT_NM FROM MDM_COMMODITY CMDT WHERE BK.CMDT_CD = CMDT.CMDT_CD) CMDT_DESC
			, (SELECT WM_CONCAT( CNTR_TPSZ_CD ) FROM BKG_QUANTITY WHERE BKG_NO = BK.BKG_NO ) AS CNTR_TPSZ_CD
            , (SELECT SUM( DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', OP_CNTR_QTY, 0) ) FROM BKG_QUANTITY
                WHERE BKG_NO = BK.BKG_NO
#if (${tp_sz} == '1')
                AND CNTR_TPSZ_CD = QTY.CNTR_TPSZ_CD
#end
            ) AS TEU
            , (SELECT SUM( DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 0, OP_CNTR_QTY) ) FROM BKG_QUANTITY
                WHERE BKG_NO = BK.BKG_NO
#if (${tp_sz} == '1')
                AND CNTR_TPSZ_CD = QTY.CNTR_TPSZ_CD
#end
             ) AS FEU
            , SSB.CFM_RQST_FLG
            , SSB.CNDDT_CFM_FLG
            , DTL.LST_SB_RSN_TP_CD AS STANDBY_TYPE
            , DTL.LST_SB_RSN AS STANDBY_REASON
#if (${f_sls_ofc_cd} != '')
            ,@[f_sls_ofc_cd]
#else
			,''
#end
 as ofc
            ,@[f_level]      as lvl
-- 20150502 김성욱, CONTRACT 관련
            --, BK.AGMT_ACT_CNT_CD AS AGMT_CNT_CD   --D.AGMT_CNT_CD
            --, BK.AGMT_ACT_CUST_SEQ AS AGMT_CUST_SEQ --D.AGMT_CUST_SEQ
#if (${f_acct_cd} != '')
            , NVL((
                               -- A : Individul B: Actual C: Commodity
									SELECT DISTINCT(D.CTRL_LOC_ACCT_CD)
									  FROM ALOC_LANE_CTRL_OPT_DTL D
									  WHERE 1=1
#if (${f_h_rlane_cd} != '')
									   AND @[f_h_rlane_cd]        = D.RLANE_CD
									   AND SPC_GET_REP_TRD_FNC(@[f_h_rlane_cd])      = D.TRD_CD
									   AND SPC_GET_REP_SUB_TRD_FNC(@[f_h_rlane_cd])  = D.SUB_TRD_CD
#end
#if (${f_rlane_cd} != '')
									   AND @[f_rlane_cd]        = D.RLANE_CD
									   AND SPC_GET_REP_TRD_FNC(@[f_rlane_cd])      = D.TRD_CD
									   AND SPC_GET_REP_SUB_TRD_FNC(@[f_rlane_cd])  = D.SUB_TRD_CD
#end
									   AND 'E'                          = D.DIR_CD 
									   AND D.ALOC_CTRL_TP_CD                    IN ('A','B','C') 
				   					   -- 2015.02.16 control office관련 setting 추가
									   -- 2015.04.06 office가 입력되지 않은 case는 전체 office에 걸리도록 함.
								       AND (( SPC_SCR_OFC_CONV_FNC(BK.OB_SLS_OFC_CD) IN 
                                              (SELECT OFC.OFC_CD
                                                 FROM SPC_ALOC_LANE_CTRL_OFC OFC
                                                WHERE D.RLANE_CD           = OFC.RLANE_CD
								                  AND D.TRD_CD             = OFC.TRD_CD
								                  AND D.SUB_TRD_CD         = OFC.SUB_TRD_CD
								                  AND D.DIR_CD             = OFC.DIR_CD 
								                  AND D.ALOC_CTRL_TP_CD    = OFC.ALOC_CTRL_TP_CD
                                                  AND D.CTRL_LOC_ACCT_CD   = OFC.CTRL_LOC_ACCT_CD
                                            ))
                                            OR ( NOT EXISTS 
                                             ( SELECT 1
                                                 FROM SPC_ALOC_LANE_CTRL_OFC OFC_ALL
                                                WHERE D.RLANE_CD           = OFC_ALL.RLANE_CD
                                                AND D.TRD_CD             = OFC_ALL.TRD_CD
                                                AND D.SUB_TRD_CD         = OFC_ALL.SUB_TRD_CD
								                AND D.DIR_CD             = OFC_ALL.DIR_CD 
								                AND D.ALOC_CTRL_TP_CD    = OFC_ALL.ALOC_CTRL_TP_CD
                                                AND D.CTRL_LOC_ACCT_CD   = OFC_ALL.CTRL_LOC_ACCT_CD
                                                )
                                            ))
									   -- 2015.02.16 add end
									   AND (D.CTRL_LOC_ACCT_CD = BK.SC_NO OR D.CTRL_LOC_ACCT_CD = BK.RFA_NO)
									   AND D.ALOC_CTRL_DTL_CD  = DECODE(D.ALOC_CTRL_TP_CD, 'A', BK.CTRT_CUST_CNT_CD ||LPAD(BK.CTRT_CUST_SEQ,6,'0'),
                                                                                       	   'B', BK.AGMT_ACT_CNT_CD ||LPAD(BK.AGMT_ACT_CUST_SEQ,6,'0'),
                                                                                           'C', BK.CMDT_CD)                                     
                               ),'OTHERS')
#else
	, DTL.ACCT_CD
#end
            AS ACOUNT_CD
			, COA.RLANE_CD
			, COA.DIR_CD
            , DECODE( HH.TRD_CD , '' , '2' , '1' ) HH_CD --값이 있으면 HH , 없으면 BH
        FROM MAS_MON_VVD COA
            , BKG_BOOKING BK
            , BKG_VVD VVD
            , BKG_QUANTITY QTY
            , BKG_CUSTOMER SHPR
            , BKG_CUSTOMER CNEE
            , BKG_CUSTOMER FWDR
        --  , BKG_BL_DOC BL --BL관련 주석
            , SPC_SB_BKG SSB
			, SPC_SB_BKG_DTL DTL
            ,(
              SELECT L.CONTI_CD AS OFC_CONTI
                FROM MDM_LOCATION     L
                    ,MDM_ORGANIZATION O
               WHERE L.LOC_CD = O.LOC_CD
#if (${f_level} != '3' && (${f_sls_ofc_cd} == 'SINRS' || ${f_sls_ofc_cd} == 'SHARC' || ${f_sls_ofc_cd} == '' ) )
	             AND O.OFC_CD = DECODE(@[f_sls_ofc_cd],'SHARC','SHARC','SINRS','SINRS', 'SHARC')    --HO BASE_RHQ_CD(SINWA,SHAAS)
#elseif (${f_level} != '3' && (${f_sls_ofc_cd} == 'NYCRA' || ${f_sls_ofc_cd} == 'HAMRU'))
                 AND O.OFC_CD = DECODE(@[f_sls_ofc_cd], 'NYCRA', 'NYCRA', 'HAMRU', 'HAMRU', '')     --RHQ BASE_RHQ_CD(NYCNA,HAMUR)
#else
                 AND O.OFC_CD = NVL(@[f_sls_ofc_cd],@[f_ofc_cd])
#end
              ) CONTI
            , MDM_LOCATION LOC
            , SPC_OFC_LVL OFC
            , SPC_HD_HUL_MST HH
            , MDM_COMMODITY    K
            , (SELECT REP_CMDT_CD AS REP_CMDT_CD , REP_CMDT_NM AS REP_CMDT_DESC FROM MDM_REP_CMDT  WHERE NVL(DELT_FLG,'N') = 'N' ) F
            , MDM_DTL_REV_LANE L
            , MDM_LOCATION PL
            , MDM_LOCATION PD
        WHERE 1=1
-- 20150502 김성욱, CONTRACT 관련
--            and ioc_cd = 'O' --Trunk만 보는거라 O 만 검색, 아래 두줄을 이용해서 처리.
            and COA.TRD_CD     = SPC_GET_REP_TRD_FNC(COA.RLANE_CD)
            AND COA.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(COA.RLANE_CD)
            AND BK.CMDT_CD              = K.CMDT_CD(+)
            AND BK.REP_CMDT_CD          = F.REP_CMDT_CD
            AND BK.BL_NO_TP             IN ('M','0')
            AND BK.BKG_STS_CD           IN ('F','S','W')
            AND BK.BKG_CGO_TP_CD        IN ('F', 'R')
            AND COA.VSL_CD     = BK.VSL_CD
            AND COA.SKD_VOY_NO = BK.SKD_VOY_NO
            AND COA.DIR_CD     = BK.SKD_DIR_CD
            AND BK.BKG_NO      = VVD.BKG_NO
			AND VVD.VSL_CD     = COA.VSL_CD
            AND VVD.SKD_VOY_NO = COA.SKD_VOY_NO
            AND VVD.SKD_DIR_CD = COA.DIR_CD
            AND BK.BKG_NO      = QTY.BKG_NO
            AND BK.BKG_NO      = CNEE.BKG_NO(+)
            AND BK.BKG_NO      = SHPR.BKG_NO
            AND 'S'            = SHPR.BKG_CUST_TP_CD
            AND 'C'            = CNEE.BKG_CUST_TP_CD(+) -- S: SHIPPER[물품을 보내는자(송하인)], C:CONSIGNEE[물건을 받는자(수하인)], F:FORWARDER[운송취급인.운송주선인 이라고 하며, 화물을 인수하여 수하인에게 인도할 때까지 일체의 업무를 주선하는 사람]
            AND BK.BKG_NO      = FWDR.BKG_NO(+)
            AND 'F'            = FWDR.BKG_CUST_TP_CD(+)
            AND SSB.BKG_NO(+)  = BK.BKG_NO
			AND BK.BKG_NO = DTL.BKG_NO(+)
            AND COA.DELT_FLG   = 'N'
            AND OFC.OFC_CD      = SPC_SCR_OFC_CONV_FNC(BK.OB_SLS_OFC_CD)
#if (${f_sls_ofc_cd} == ${f_ofc_vw} && ${f_sls_ofc_cd}!='')
            AND OFC.OFC_CD      = @[f_sls_ofc_cd]
#end
            AND OFC.OFC_TP_CD   IN ('BB', 'BA', 'BS')
            AND SUBSTR(COA.SLS_YRMON,1,4)||COA.COST_WK BETWEEN OFC.OFC_APLY_FM_YRWK AND OFC.OFC_APLY_TO_YRWK
            AND BK.POL_CD      = LOC.LOC_CD
            AND HH.TRD_CD(+) = COA.TRD_CD
            AND HH.RLANE_CD(+) = COA.RLANE_CD
            AND HH.DIR_CD(+) = COA.DIR_CD
#if (${f_level} != '3' && (${f_sls_ofc_cd} == 'SINRS' || ${f_sls_ofc_cd} == 'SHARC' || ${f_sls_ofc_cd} == '') )
            -- HO BASE_RHQ_CD(SINWA,SHAAS)
            AND (    CONTI.OFC_CONTI = (SELECT SPC_CONTI_CONV_FNC(LOC.CONTI_CD, COA.RLANE_CD, COA.DIR_CD) FROM DUAL)
                  OR OFC.N2ND_PRNT_OFC_CD = DECODE(@[f_sls_ofc_cd],'SHARC','SHARC','SINRS','SINRS', 'SHARC') 
#if (${f_sls_ofc_cd} == '')
                  OR OFC.N2ND_PRNT_OFC_CD = 'SINRS'
#else
                  OR (OFC.N2ND_PRNT_OFC_CD = 'SINRS' AND COA.RLANE_CD = 'WAXIA')
#end
                  OR COA.RLANE_CD         = 'WAFIE' )   
#elseif (${f_level} != '3' && (${f_sls_ofc_cd} == 'NYCRA' || ${f_sls_ofc_cd} == 'HAMRU'))
            --RHQ BASE_RHQ_CD(NYCNA,HAMUR)
            AND VVD.VSL_PRE_PST_CD = 'T' -- RHQ는 TRUNK구간만.
            AND (    CONTI.OFC_CONTI = (SELECT SPC_CONTI_CONV_FNC(LOC.CONTI_CD, COA.RLANE_CD, COA.DIR_CD) FROM DUAL)
                  OR OFC.N2ND_PRNT_OFC_CD = DECODE(@[f_sls_ofc_cd], 'NYCRA', 'NYCRA', 'HAMRU', 'HAMRU', '')  --RHQ BASE_RHQ_CD
                )
#else
            AND (OFC.N4TH_PRNT_OFC_CD = NVL(@[f_sls_ofc_cd],@[f_ofc_cd]) OR OFC.N5TH_PRNT_OFC_CD = NVL(@[f_sls_ofc_cd],@[f_ofc_cd]))
#end
#if (${f_vvd_cd} != '')
            AND COA.VSL_CD     = SUBSTR(@[f_vvd_cd],1,4)--'COGN0009W'
            AND COA.SKD_VOY_NO = SUBSTR(@[f_vvd_cd],5,4)
            AND COA.DIR_CD     = SUBSTR(@[f_vvd_cd],-1)
#end
#if (${f_bkg_no} != '')
			AND BK.BKG_NO = @[f_bkg_no]
#end
#if (${f_aloc_sts_cd} != '')
#if (${f_aloc_sts_cd} == 'S')
            AND BK.ALOC_STS_CD   IN ( 'S' , 'A' )
#elseif (${f_aloc_sts_cd} == 'S->F')
            AND BK.ALOC_STS_CD = 'F'
            AND SSB.CFM_USR_ID IS NOT NULL
#else
            AND BK.ALOC_STS_CD   = @[f_aloc_sts_cd]
            AND SSB.CFM_USR_ID(+) IS NULL
#end
#else
            AND BK.ALOC_STS_CD   IN ( 'S' , 'A' )
#end
#if (${f_h_trd_cd} != '' && ${f_h_rlane_cd} != '')
            --AND COA.TRD_CD       = SPC_GET_REP_TRD_FNC([f_h_rlane_cd]) 
#end
#if (${f_trd_cd} != '' && ${f_rlane_cd} != '')
            --AND COA.TRD_CD       = SPC_GET_REP_TRD_FNC([f_rlane_cd]) 
#end
#if (${f_sub_trd_cd} != '')
            AND COA.SUB_TRD_CD   = @[f_sub_trd_cd]
#end
#if (${f_dir_cd} != '')
            AND COA.DIR_CD       = @[f_dir_cd]
#end
#if (${f_h_rlane_cd} != '')
            AND COA.RLANE_CD     = @[f_h_rlane_cd]
#end
#if (${f_rlane_cd} != '')
            AND COA.RLANE_CD     = @[f_rlane_cd]
#end
#if (${f_bkg_pol_cd} != '' && ${f_bkg_pol_cd} != '1' && ${f_bkg_pol_cd} != '0')
            AND VVD.POL_YD_CD     = @[f_bkg_pol_cd]
#end
#if (${f_bkg_pod_cd} != '' && ${f_bkg_pod_cd} != '1' && ${f_bkg_pod_cd} != '0')
            AND VVD.POD_YD_CD     = @[f_bkg_pod_cd]
#end
#if (${f_vvd_cd} == '' && ${f_year} != '' && ${f_week} != '' && ${f_duration} != '')
            AND SUBSTR(COA.SLS_YRMON,1,4)||COA.COST_WK IN
                (
                SELECT /*+ INDEX(XPKMAS_WK_PRD)*/ D.COST_YR||D.COST_WK
                  FROM MAS_WK_PRD D
                 WHERE D.COST_YR||D.COST_WK >= @[f_year]||@[f_week] 
                   AND ROWNUM <= TO_NUMBER(@[f_duration]) 
                )
#end

#if (${f_sdate} != '' && ${f_edate} != '')
					AND BK.CRE_DT > TO_DATE(@[f_sdate],'YYYY-MM-DD') AND BK.CRE_DT <= TO_DATE(@[f_edate],'YYYY-MM-DD')+1
#end
           AND PL.LOC_CD          = VVD.POL_CD
           AND PD.LOC_CD          = VVD.POD_CD
            
           AND L.RLANE_CD         = COA.RLANE_CD
           AND L.VSL_SLAN_DIR_CD  = COA.DIR_CD
           AND L.IOC_CD           = COA.IOC_CD
           AND L.FM_CONTI_CD      = SPC_CONTI_CONV_FNC(PL.CONTI_CD, L.RLANE_CD, L.VSL_SLAN_DIR_CD)
           AND L.TO_CONTI_CD      = SPC_CONTI_CONV_FNC(PD.CONTI_CD, L.RLANE_CD, L.VSL_SLAN_DIR_CD)
--           AND L.TRD_CD           = COA.TRD_CD
--           AND L.SUB_TRD_CD       = COA.SUB_TRD_CD
           AND L.DELT_FLG         = 'N'

        ) A, SPC_MDL_CUST_CTRL MCC
WHERE 1=1
            AND MCC.TRD_CD(+) = A.TRD_CD
    --            AND MCC.SUB_TRD_CD(+) = A.SUB_TRD_CD
            AND MCC.COST_YRWK(+) = SUBSTR(A.SEASON,1,6)
            AND MCC.VER_SEQ(+) = SUBSTR(A.SEASON,8)
            AND MCC.CUST_CNT_CD(+) = A.CTRT_CUST_CNT_CD
            AND MCC.CUST_SEQ(+) = A.CTRT_CUST_SEQ
#if (${f_cust_tp} != '' && ${f_cust_tp} != 'C' && ${f_cust_tp} != '1')
            AND MCC.CUST_CTRL_CD = @[f_cust_tp]
#end
#if (${f_sb_rsn_tp_cd} != '')
            AND NVL(STANDBY_TYPE,' ') = SUBSTR(@[f_sb_rsn_tp_cd],1,1)
#end
#if (${f_cust_tp} != '' && ${f_cust_tp} != '1' && ${f_cust_tp} == 'C' )
			AND NVL(A.SC_NO, NVL(A.RFA_NO, 'X')) = NVL(MCC.SC_NO(+), NVL(MCC.RFA_NO(+), 'X'))
#end
#if ( ${f_ofc_vw} != '' )
			--AND SPC_SCR_OFC_CONV_FNC( OB_SLS_OFC_CD ) = [f_ofc_vw] --이미위에서 걸려있는데 
            AND OFC.OFC_CD = @[f_ofc_vw]
#end
#if (${f_acct_cd} != '' && ${f_acct_cd} != '1')
		    AND ACOUNT_CD = @[f_acct_cd]
#end
#if (${f_hul_bnd_cd} != '' && ${f_hul_bnd_cd} != '0')
			AND HH_CD = @[f_hul_bnd_cd]
#end
GROUP BY
          A.BKG_NO
          ,A.BKG_STS_CD
          ,A.STANDBY_TYPE
--          ,A.STANDBY_REASON
--          ,A.ALOC_SVC_CD
          ,A.ALOC_STS_CD
          ,A.CFM_RQST_FLG
          ,A.CNDDT_CFM_FLG
          ,A.CFM_USR_ID
          ,A.CFM_DT
#if($c_name.size() != 0)
#foreach(${list} in ${c_name})
	#if( ${list} != 'sc_no' && ${list} != 'rfa_no' && ${list} != 'ob_sls_ofc_cd' && ${list} != 'sub_trd_cd' && ${list} != 'vvd' && ${list} != 'acct_cd' && ${list} != 'bkg_no' )
          , A.${list}
	#end
#end
#end
          ,A.FEU
          ,A.TEU
          ,A.SEASON
          ,A.SC_NO
          ,A.RFA_NO
          ,A.VVD
#if (${f_cust_tp} != '')
           ,MCC.CUST_CTRL_CD
#else
           ,MCC.CUST_CTRL_CD
#end
           ,A.OB_SLS_OFC_CD
		   ,A.TRD_CD
           ,A.SUB_TRD_CD
		   ,A.RLANE_CD
		   ,A.DIR_CD
		   ,A.ACOUNT_CD
) AA
WHERE 1=1
--# if ($ {f_hul_bnd_cd} != '' && $ {f_hul_bnd_cd} != '0')
--					and (
--                      SELECT DECODE( COUNT(*) , 0, '2' , '1') AA
--                      FROM SPC_HD_HUL_MST
--                      WHERE 1=1
--							AND TRD_CD    = TRD_CD
--                            AND SUB_TRD_CD = SUB_TRD_CD
--                            AND RLANE_CD  = RLANE_CD
--                              AND DIR_CD  = DIR_CD
--                      ) = @ [f_hul_bnd_cd]
--# end
#if (${f_cust_tp} == 'C')
          AND NVL(CUST_CTRL_CD,'C') = @[f_cust_tp]
#end

ORDER BY AA.TRD_CD, AA.SUB_TRD_CD, AA.RLANE_CD DESC			]]></sql>
			<params>
				<param name="f_vvd_cd" type="12" value="" out="N"/>
				<param name="f_h_trd_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_sub_trd_cd" type="12" value="" out="N"/>
				<param name="f_h_rlane_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_sls_ofc_cd" type="12" value="" out="N"/>
				<param name="f_level" type="12" value="" out="N"/>
				<param name="f_ofc_cd" type="12" value="" out="N"/>
				<param name="f_bkg_no" type="12" value="" out="N"/>
				<param name="f_aloc_sts_cd" type="12" value="" out="N"/>
				<param name="f_bkg_pol_cd" type="12" value="" out="N"/>
				<param name="f_bkg_pod_cd" type="12" value="" out="N"/>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_week" type="12" value="" out="N"/>
				<param name="f_duration" type="12" value="" out="N"/>
				<param name="f_sdate" type="12" value="" out="N"/>
				<param name="f_edate" type="12" value="" out="N"/>
				<param name="f_cust_tp" type="12" value="" out="N"/>
				<param name="f_sb_rsn_tp_cd" type="12" value="" out="N"/>
				<param name="f_ofc_vw" type="12" value="" out="N"/>
				<param name="f_acct_cd" type="12" value="" out="N"/>
				<param name="f_hul_bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
