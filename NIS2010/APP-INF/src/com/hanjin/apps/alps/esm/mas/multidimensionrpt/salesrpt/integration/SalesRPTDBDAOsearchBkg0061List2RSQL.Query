<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SalesRPTDBDAOsearchBkg0061List2RSQL">
			<desc><![CDATA[_BKG_COST_SMRY, _BKG_INFO, _BKG_REV_DTL 테이블의 데이터 조회   
2015.03.23 [CHM-201534153] 김시몬 CM/OP계정 추가 및 변경에 따라 보완
2015.04.22 [CHM-201534153] 김시몬 Dem/Det CM계정관련 수정
2017.06.01 [CSR #1026] 김동호 CM(BKG), CMPB(BKG) 추가
2017.11.20 [CSR #2557] 김동호 CM(BKG), CMPB(BKG) 제거]]></desc>
			<sql><![CDATA[
SELECT   DECODE(CPY_NO,1,'Load(Box)'
                      , 2,'G.Rev'
					  , 3,'G. Rev Per Box'
					  , 4,'G.RPB'  -- 신규항목
                      , 5,'Misc OP Rev'
                      , 6,'DEM/DET'
                      , 7,DECODE('C','O',DECODE('P','P','CM', 'OP'), 'M','CM2','CM')
                      , 8,DECODE('C','O',DECODE('P','P','CM', 'OP'), 'M','CM2','CM')||' Per Box'
                      , 9,'CMPB' -- 신규항목
                      --, 10,'CM(BKG)' -- 신규항목(2017/06/01)
                      --, 11,'CMPB(BKG)' -- 신규항목(2017/06/01)
#if (${f_pro_lvl} == 'O')                     
                      , 10,'OP'
                      , 11,'OP(EX. Interest)'
                      , 12,'OP Per Box'
#end  
                      
                      ) AS T1
#set ($val = 0)
#foreach( $key in ${f_tpsz})
#set ($val = $val + 1)
         , SUM(DECODE(CNTR_TPSZ_CD,'$key',DECODE(CPY_NO,1,LOAD
                                                       , 2,G_REV
                                                       , 3,G_REV / LOAD
                                                       , 4,(CASE WHEN SUBSTR('$key',-1) >= 4 THEN (G_REV / LOAD) / 2
																ELSE G_REV / LOAD
															END)
                                                       , 5,MISC_REV
                                                       , 6,DEM
                                                       , 7,CM
                                                       , 8,CM / LOAD
                                                       , 9,(CASE WHEN SUBSTR('$key',-1) >= 4 THEN (CM / LOAD) / 2
																ELSE CM / LOAD
															END)
                                                     --  , 10,CM_BKG
                                                     --  , 11,(CASE WHEN SUBSTR('$key',-1) >= 4 THEN (CM_BKG / LOAD) / 2
													 --		        ELSE CM_BKG / LOAD
													 --		END)     
										#if (${f_pro_lvl} == 'O')
													   , 10,OP
													   , 11,OP_EX
                                                       , 12,OP / LOAD
                                        #end		
													   )
                                  , 0)) AS B${val}
#end
FROM     (SELECT   CNTR_TPSZ_CD
                   , SUM(LOAD)     LOAD
                   , SUM(G_REV)    G_REV
                   , SUM(MISC_REV) MISC_REV
                   , SUM(CM)       CM
                   , SUM(DEM)      DEM
                   , SUM(CM_BKG)   CM_BKG
                   , SUM(OP)       OP
                   , SUM(OP_EX)    OP_EX
          FROM     (SELECT   A2.SPCL_CNTR_TPSZ_CD	AS CNTR_TPSZ_CD
                             , SUM(A2.BKG_QTY)	LOAD
                             , SUM(NVL(A2.BKG_REV,0) + NVL(A2.BKG_OFT_REV,0))	G_REV
                             , SUM(NVL(A2.BKG_MISC_REV,0) + NVL(A2.SCR_CHG_REV,0))	MISC_REV
                             , SUM(NVL(A2.BKG_REV,0) + NVL(A2.BKG_OFT_REV,0) + NVL(A2.BKG_MISC_REV,0) + NVL(A2.SCR_CHG_REV,0) + NVL(A1.DMDT_COM_AMT,0)) 
								- SUM(DECODE(@[f_pro_vw]||@[f_pro_lvl], 'PC',NVL(A2.ESTM_CM_COST_AMT,0)
																	  , 'PO',NVL(A2.ESTM_CM_COST_AMT,0) -- + NVL(A2.ESTM_OPFIT_COST_AMT,0) /*CHM-200901045 Trade profit - OP 선택 시 OP 계정이 CM에 계산 되어 반영 되는 부분  쿼리수정 [061]*/
																	  , 'PM',NVL(A2.ESTM_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RC',NVL(A2.RA_CM_COST_AMT,0)
																	  , 'RM',NVL(A2.RA_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RO',NVL(A2.RA_CM_COST_AMT,0) + NVL(A2.RA_OPFIT_COST_AMT,0)
																	  , 0))   AS CM
                             , SUM(NVL(A2.BKG_REV,0) + NVL(A2.BKG_OFT_REV,0) + NVL(A2.BKG_MISC_REV,0) + NVL(A2.SCR_CHG_REV,0)) 
								- SUM(DECODE(@[f_pro_vw]||@[f_pro_lvl], 'PC',NVL(A2.ESTM_CM_COST_AMT,0)
																	  , 'PO',NVL(A2.ESTM_CM_COST_AMT,0)
																	  , 'PM',NVL(A2.ESTM_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RC',NVL(A2.RA_CM_COST_AMT,0)
																	  , 'RM',NVL(A2.RA_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RO',NVL(A2.RA_CM_COST_AMT,0) + NVL(A2.RA_OPFIT_COST_AMT,0)
																	  , 0))   
                                + SUM(NVL(A1.CNTR_STERM_RNTL_LAND_AMT, 0) + NVL(A1.CNTR_LTERM_RNTL_LAND_AMT, 0) + NVL(A1.CNTR_MNR_LAND_AMT, 0) 
                                        + NVL(A1.CNTR_DPC_LAND_AMT, 0) + NVL(A1.CNTR_INSUR_LAND_AMT, 0) + NVL(A1.CNTR_STERM_RNTL_OTR_AMT, 0) 
                                        + NVL(A1.CNTR_LTERM_RNTL_OTR_AMT, 0) + NVL(A1.CNTR_MNR_OTR_AMT, 0) + NVL(A1.CNTR_DPC_OTR_AMT, 0) 
                                        + NVL(A1.CNTR_INSUR_OTR_AMT, 0) + NVL(A1.CHSS_AMT, 0)
                                        + NVL(A1.CNTR_RNTL_NORM_AMT, 0) + NVL(A1.CNTR_MNR_NORM_AMT, 0) 
                                        + NVL(A1.CNTR_DPC_NORM_AMT, 0) + NVL(A1.CNTR_INSUR_NORM_AMT, 0)) AS CM_BKG -- CM(BKG)는 CM 중 수입에서 DEM/DET, 비용에서 장비비 제외
                             , SUM(A1.DMDT_COM_AMT)	DEM
                             , SUM(NVL(A2.BKG_REV,0) + NVL(A2.BKG_OFT_REV,0) + NVL(A2.BKG_MISC_REV,0) + NVL(A2.SCR_CHG_REV,0) + NVL(A1.DMDT_COM_AMT,0)) 
								- SUM(DECODE('R'||'O', 'PC',NVL(A2.ESTM_CM_COST_AMT,0)
																	  , 'PO',NVL(A2.ESTM_CM_COST_AMT,0) -- + NVL(A2.ESTM_OPFIT_COST_AMT,0) /*CHM-200901045 Trade profit - OP 선택 시 OP 계정이 CM에 계산 되어 반영 되는 부분  쿼리수정 [061]*/
																	  , 'PM',NVL(A2.ESTM_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RC',NVL(A2.RA_CM_COST_AMT,0)
																	  , 'RM',NVL(A2.RA_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RO',NVL(A2.RA_CM_COST_AMT,0) + NVL(A2.RA_OPFIT_COST_AMT,0)
																	  , 0)) - NVL(SUM(A6.PA_OP_COST_TTL_AMT),0) AS OP
	                         , SUM(NVL(A2.BKG_REV,0) + NVL(A2.BKG_OFT_REV,0) + NVL(A2.BKG_MISC_REV,0) + NVL(A2.SCR_CHG_REV,0) + NVL(A1.DMDT_COM_AMT,0)) 
								- SUM(DECODE('R'||'O', 'PC',NVL(A2.ESTM_CM_COST_AMT,0)
																	  , 'PO',NVL(A2.ESTM_CM_COST_AMT,0) -- + NVL(A2.ESTM_OPFIT_COST_AMT,0) /*CHM-200901045 Trade profit - OP 선택 시 OP 계정이 CM에 계산 되어 반영 되는 부분  쿼리수정 [061]*/
																	  , 'PM',NVL(A2.ESTM_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RC',NVL(A2.RA_CM_COST_AMT,0)
																	  , 'RM',NVL(A2.RA_CM_COST_AMT,0) + NVL(A1.OWN_FDR_AMT,0)
																	  , 'RO',NVL(A2.RA_CM_COST_AMT,0) + NVL(A2.RA_OPFIT_COST_AMT,0)
																	  , 0)) - NVL(SUM(A6.PA_OP_COST_TTL_AMT),0) + NVL(SUM(A6.VSL_INT_AMT),0) AS OP_EX
                    FROM     MAS_BKG_EXPN_DTL    A1
                            ,MAS_BKG_REV_DTL     A2
                            ,MAS_BKG_OP_EXPN_DTL A6
                    WHERE    1 = 1
                    AND A1.BKG_NO         = @[f_bkg_no]
                    AND a1.bl_no_tp      IN ('M','0')
                    AND A1.BKG_STS_CD    IN ('F','S','W')
                    AND A1.BKG_CGO_TP_CD <> 'P'
                    AND A1.BKG_NO         = A2.BKG_NO (+)
                    AND A1.CNTR_TPSZ_CD   = A2.CNTR_TPSZ_CD (+)
                    AND A1.COST_ROUT_NO   = A2.COST_ROUT_NO (+)
                    AND A1.BKG_NO         = A6.BKG_NO (+)
                    AND A1.CNTR_TPSZ_CD   = A6.CNTR_TPSZ_CD (+)
                    AND A1.COST_ROUT_NO   = A6.COST_ROUT_NO (+)
#if (${f_rout_no} != 'All') 
                    AND A2.COST_ROUT_NO (+)  = @[f_rout_no]
#end
                    GROUP BY A2.SPCL_CNTR_TPSZ_CD)
          GROUP BY CNTR_TPSZ_CD) X
         , (SELECT CPY_NO
          FROM   COM_CPY_NO
          WHERE  CPY_NO BETWEEN 1 AND 
          #if (${f_pro_lvl} == 'O')
              12
          #else
              9
          #end 
          ) Y
GROUP BY CPY_NO
ORDER BY CPY_NO			]]></sql>
			<params>
				<param name="f_pro_vw" type="12" value="" out="N"/>
				<param name="f_pro_lvl" type="12" value="" out="N"/>
				<param name="f_bkg_no" type="12" value="" out="N"/>
				<param name="f_rout_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
