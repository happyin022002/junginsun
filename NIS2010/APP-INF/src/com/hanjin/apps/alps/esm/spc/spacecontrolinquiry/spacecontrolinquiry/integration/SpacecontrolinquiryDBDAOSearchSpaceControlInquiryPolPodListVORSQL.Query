<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchSpaceControlInquiryPolPodListVORSQL">
			<desc><![CDATA[- Lee Sang-Yong : [프로젝트] Ticket ID : CHM-201004171 53ft 추가
2011.06.01 이석준 [ CHM-201111304-01] Reefer Size에 상관없이 Q'ty 가져오도록 수정
2011.06.01 [CHM-201111305-01] 김종준 R5와 동일하게 R9이 적용될 수 있도록 쿼리수정
2011.07.05 [CHM-201111880-01] 김종준control by HO 화면 보완 - IPC, TS 관련
2011.08.18 [CHM-201112741-01] Control by HO/RHQ 화면 보완 2차 - WAFIE Allocaion 정보는 제외하고 보이도록 쿼리수정
2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
2013.01.23 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
2013.03.06 진마리아 Firm, Wating BKG 삭제
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2014.08.05 CHM-201431081 SPC Allocation Control Option 추가 보완 요청
2014.08.06 CHM-201431081 SPC Allocation Control Option 추가 보완 요청(ECC)
2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL
2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
2016.07.05 CHM-201642241 VGM(BKG상 표시되는 또 다른 WGT 정보) 도입 관련 SPC 사항]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (
    SELECT P.OFC_CD    ,
           P.TRD_CD    ,
           P.SUB_TRD_CD,
           P.RLANE_CD  ,
           P.DIR_CD    ,
           P.IOC_CD    ,
           SUBSTR(P.VVD, 1, 4) AS VSL_CD    ,
           SUBSTR(P.VVD, 5, 4) AS SKD_VOY_NO,
           SUBSTR(P.VVD, 9)    AS SKD_DIR_CD,
           P.OFC_DIV   ,
           P.PORT_DIV  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           SUBSTR(V.SLS_YRMON, 5, 2) AS COST_MON,
           V.COST_WK,
           -- 20140728 추가
           NVL(DECODE(CO.CTRL_ECC_FLG,'Y','E',DECODE(CO.CTRL_LOC_FLG,'Y','L','N')),'N') AS CTRL_DEST, -- E = ECC, L = LOCATION
           NVL(CO.CTRL_DEST_LVL_CD, 'N')     AS CTRL_DEST_LVL  ,                                      -- D = BKG_POD, T = BKG_DEL
           NVL(CO.CTRL_USA_SVC_MOD_FLG, 'N') AS CTRL_USA                                              -- Y = LOCAL/IPI
      FROM (

              SELECT SUBSTR(@[rhq_txt],1,5)  AS OFC_CD ,
                     @[trade]    AS TRD_CD    ,
                     @[subtrade] AS SUB_TRD_CD,
                     @[lane]     AS RLANE_CD  ,
                     @[bound]    AS DIR_CD    ,
                     @[onc_ipc]  AS IOC_CD    ,
                     @[vvd]      AS VVD       ,
                     @[rhq_gso]  AS OFC_DIV   ,
                     @[pol_pod]  AS PORT_DIV
                FROM DUAL

#if (${rhq_txt} == 'SHARC,SINRS') 

			   UNION ALL

              SELECT SUBSTR(@[rhq_txt],7,5)  AS OFC_CD  ,
                     @[trade]    AS TRD_CD    ,
                     @[subtrade] AS SUB_TRD_CD,
                     @[lane]     AS RLANE_CD  ,
                     @[bound]    AS DIR_CD    ,
                     @[onc_ipc]  AS IOC_CD    ,
                     @[vvd]      AS VVD       ,
                     @[rhq_gso]  AS OFC_DIV   ,
                     @[pol_pod]  AS PORT_DIV
                FROM DUAL
#end

           ) P,
           MAS_MON_VVD V,
           SPC_ALOC_CTRL_OPT CO  -- 20140728 추가
     WHERE V.TRD_CD     = P.TRD_CD
       AND V.RLANE_CD   = P.RLANE_CD
       AND V.IOC_CD     = P.IOC_CD
       AND V.VSL_CD     = SUBSTR(P.VVD, 1, 4)
       AND V.SKD_VOY_NO = SUBSTR(P.VVD, 5, 4)
       AND V.DIR_CD     = SUBSTR(P.VVD, 9)
       AND V.RLANE_CD   = CO.RLANE_CD  (+)
       AND V.DIR_CD     = CO.DIR_CD    (+)
       AND V.VSL_CD     = CO.VSL_CD    (+)
       AND V.SKD_VOY_NO = CO.SKD_VOY_NO(+)
       AND V.DIR_CD     = CO.SKD_DIR_CD(+)
)


#if (${pol_pod} != 'DEL')

, FCST_DATA AS (
    SELECT DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD) AS OFC_CD ,

           -- 20140728 추가
           DECODE(D.USA_BKG_MOD_CD,'OTH','OTHERS',D.USA_BKG_MOD_CD) AS USA_BKG_MOD_CD, -- SPC_DLY_FCAST_CUST.LOCAL/IPI
           DECODE(M.PORT_DIV, 'POL', D.POL_YD_CD, D.POD_YD_CD)      AS PORT_CD,
           D.DEST_LOC_CD,    -- SPC_DLY_FCAST_CUST.DEST   

           SUM(D.CFM_TTL_QTY)      AS VOL_TTL,
           SUM(D.CFM_40FT_HC_QTY)  AS VOL_HC ,
           SUM(D.CFM_45FT_HC_QTY)  AS VOL_45 ,
           SUM(D.CFM_53FT_QTY)     AS VOL_53 ,
           SUM(D.CFM_RF_QTY)       AS VOL_RF ,
           SUM(D.CFM_TTL_WGT)      AS WGT_TTL,
           SUM(D.CFM_20FT_DRY_QTY) AS VOL_D2 ,
           SUM(D.CFM_40FT_DRY_QTY) AS VOL_D4 ,
           SUM(D.CFM_RD_QTY)       AS VOL_RD
      FROM PARAMS             M,
           SPC_DLY_FCAST_CUST D
     WHERE D.TRD_CD     = M.TRD_CD
       AND D.SUB_TRD_CD = M.SUB_TRD_CD
       AND D.RLANE_CD   = M.RLANE_CD
       AND D.DIR_CD     = M.DIR_CD
       AND D.VSL_CD     = M.VSL_CD
       AND D.SKD_VOY_NO = M.SKD_VOY_NO
       AND D.SKD_DIR_CD = M.SKD_DIR_CD
       AND D.IOC_TS_CD  = M.IOC_CD
       AND (M.OFC_CD IS NULL OR D.SLS_RHQ_CD = M.OFC_CD OR D.SLS_AQ_CD = M.OFC_CD)
  GROUP BY DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD),
           DECODE(M.PORT_DIV, 'POL', D.POL_YD_CD, D.POD_YD_CD),
           -- 20140728 추가
           DECODE(D.USA_BKG_MOD_CD,'OTH','OTHERS',D.USA_BKG_MOD_CD),
           D.DEST_LOC_CD
)
, ALOC_DATA AS (
    SELECT DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD) AS OFC_CD ,
           -- 20140728 추가
           DECODE(D.USA_BKG_MOD_CD,'OTH','OTHERS',D.USA_BKG_MOD_CD)   AS USA_BKG_MOD_CD, -- SPC_ALOC_POL_POD.LOCAL/IPI
           DECODE(M.PORT_DIV, 'POL', D.POL_YD_CD, D.POD_YD_CD)        AS PORT_CD,
           D.DEST_LOC_CD,    -- SPC_ALOC_POL_POD.DEST              
           SUM(D.ASGN_TTL_QTY)      AS VOL_TTL,
           SUM(D.ASGN_40FT_HC_QTY)  AS VOL_HC ,
           SUM(D.ASGN_45FT_HC_QTY)  AS VOL_45 ,
           SUM(D.ASGN_53FT_QTY)     AS VOL_53 ,
           SUM(D.ASGN_RF_QTY)       AS VOL_RF ,
           SUM(D.ASGN_TTL_WGT)      AS WGT_TTL,
           SUM(D.ASGN_20FT_DRY_QTY) AS VOL_D2 ,
           SUM(D.ASGN_40FT_DRY_QTY) AS VOL_D4 ,
           SUM(D.ASGN_RD_QTY)       AS VOL_RD 
      FROM PARAMS           M,
           SPC_ALOC_POL_POD D
     WHERE D.TRD_CD     = M.TRD_CD
       AND D.SUB_TRD_CD = M.SUB_TRD_CD
       AND D.RLANE_CD   = M.RLANE_CD
       AND D.DIR_CD     = M.DIR_CD
       AND D.VSL_CD     = M.VSL_CD
       AND D.SKD_VOY_NO = M.SKD_VOY_NO
       AND D.SKD_DIR_CD = M.SKD_DIR_CD
       AND D.IOC_CD     = M.IOC_CD
       AND (M.OFC_CD IS NULL OR D.SLS_RHQ_CD = M.OFC_CD OR D.SLS_AQ_CD = M.OFC_CD)
       AND D.TS_FLG     = 'N'
       AND D.POL_YD_CD  <> 'XXXXXXX'
  GROUP BY DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD),
           DECODE(M.PORT_DIV, 'POL', D.POL_YD_CD, D.POD_YD_CD),
           -- 20140728 추가
           DECODE(D.USA_BKG_MOD_CD,'OTH','OTHERS',D.USA_BKG_MOD_CD),
           D.DEST_LOC_CD
)

#end

, BKG_DATA AS (
   SELECT OFC_CD
  		, PORT_CD
  		-- 20140728 추가
  		, USA_BKG_MOD_CD
        , DEST_LOC_CD
  		, SUM(BKG_TTL) AS BKG_TTL
  		, SUM(BKG_20)  AS BKG_20
  		, SUM(BKG_40)  AS BKG_40
  		, SUM(BKG_D2)  AS BKG_D2  -- D2
        , SUM(BKG_D4)  AS BKG_D4  -- D4
  		, SUM(BKG_HC)  AS BKG_HC
  		, SUM(BKG_45)  AS BKG_45
  		, SUM(BKG_53)  AS BKG_53
  		, SUM(BKG_RF)  AS BKG_RF
  		, SUM(BKG_RD)  AS BKG_RD  -- RD
  		, SUM(BKG_WGT) AS BKG_WGT, SUM(BKG_VOL_VGM) AS BKG_VOL_VGM, SUM(BKG_WGT_VGM) AS BKG_WGT_VGM
   	 FROM
    	(  SELECT DECODE(OFC_DIV , 'RHQ', N2ND_PRNT_OFC_CD, N4TH_PRNT_OFC_CD) AS OFC_CD
      			, DECODE(PORT_DIV , 'POL', NVL(POL_YD_CD, POL_CD), 'POD', NVL(POD_YD_CD, POD_CD), NVL(BKG_POD_YD_CD, BKG_POD_CD)) AS PORT_CD
      			 -- 20140728 추가(S)
      			 ,CASE WHEN M.CTRL_DEST = 'E' THEN	                                                      
                       NVL((SELECT D.CTRL_LOC_ACCT_CD
                              FROM SPC_ALOC_LANE_CTRL_OPT_DTL D,
                                   MDM_LOCATION               ML1,
                                   MDM_EQ_ORZ_CHT             ME1
                             WHERE M.RLANE_CD         = D.RLANE_CD
                               AND SPC_GET_REP_TRD_FNC(M.RLANE_CD)     = D.TRD_CD
                               AND SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD) = D.SUB_TRD_CD
                               AND M.SKD_DIR_CD       = D.DIR_CD 
                               AND D.ALOC_CTRL_TP_CD  = M.CTRL_DEST
                               AND ML1.LOC_CD         = M.DEST_PORT
                               AND ME1.SCC_CD         = ML1.SCC_CD
                               AND D.CTRL_LOC_ACCT_CD = ME1.ECC_CD
                       ),'XXXXX')
                 WHEN M.CTRL_DEST = 'L' THEN	                                                      
                       NVL((SELECT D.CTRL_LOC_ACCT_CD
                              FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                             WHERE M.RLANE_CD         = D.RLANE_CD
                               AND SPC_GET_REP_TRD_FNC(M.RLANE_CD)     = D.TRD_CD
                               AND SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD) = D.SUB_TRD_CD
                               AND M.SKD_DIR_CD       = D.DIR_CD 
                               AND D.ALOC_CTRL_TP_CD  = M.CTRL_DEST
                               AND D.CTRL_LOC_ACCT_CD = M.DEST_PORT
                       ),'XXXXX')
                       
                 ELSE
                      'XXXXX'
                 END AS DEST_LOC_CD
                 
                 ,DECODE(USA_BKG_MOD_CD,'OTH','OTHERS',USA_BKG_MOD_CD) AS USA_BKG_MOD_CD

                 ,TO_NUMBER(NVL(SUBSTR(VAL, 1,  14), 0))                              AS BKG_TTL
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0))                              AS BKG_20
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0))                              AS BKG_40
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0))                              AS BKG_D2   -- 20140728 추가 D2
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0))                              AS BKG_D4   -- 20140728 추가 D4
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0))                              AS BKG_HC
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0))                              AS BKG_45
                 ,TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))                              AS BKG_53
                 ,TO_NUMBER(NVL(SUBSTR(VAL,113, 14), 0))                              AS BKG_RF
                 ,TO_NUMBER(NVL(SUBSTR(VAL,127, 14), 0))                              AS BKG_RD   -- 20140728 추가 RD
                 ,TO_NUMBER(NVL(SUBSTR(VAL,141, 14), 0))                              AS BKG_WGT ,BKG_VOL_VGM,BKG_WGT_VGM
       		 FROM
        		(  SELECT B.BKG_STS_CD
          				, O.N2ND_PRNT_OFC_CD
          				, O.N4TH_PRNT_OFC_CD
          				, M.OFC_DIV
          				, M.PORT_DIV
          				, BV.POL_YD_CD
          				, BV.POL_CD
          				, BV.POD_YD_CD
          				, BV.POD_CD
          				, B.POD_NOD_CD AS BKG_POD_YD_CD
          				, B.POD_CD AS BKG_POD_CD

          				-- 20140728 추가(S)
                        ,CASE WHEN M.CTRL_USA = 'Y' AND (SUBSTR(B.POL_CD,1,2) IN ('US','CA') OR SUBSTR(B.POD_CD,1,2) IN ('US','CA')) THEN
                             NVL(SPC_USA_MODE_FNC(B.RCV_TERM_CD, B.DE_TERM_CD, B.POR_CD, B.POL_CD, B.POD_CD, B.DEL_CD),'OTHERS') -- SPC_DLY_FCAST_CUST.LOCAL/IPI -- SPC_DLY_FCAST_CUST.LOCAL/IPI
                         ELSE
                             'OTHERS'
                         END AS USA_BKG_MOD_CD
                         
                        ,M.RLANE_CD
                        ,M.SKD_DIR_CD
                        ,M.CTRL_DEST
                        ,DECODE(M.CTRL_DEST_LVL,'T',B.DEL_CD,B.POD_CD) AS DEST_PORT

          				, (SELECT  TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 

								--20140728 
								|| TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') -- D2
				                || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') -- D4

								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')  
								|| TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)) , 'FM0000000000.000')  
								|| TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD, 1, 1), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')

								--20140728 
								|| TO_CHAR(SUM(CASE WHEN Q.CNTR_TPSZ_CD LIKE 'R%' AND Q.EQ_SUBST_CNTR_TPSZ_CD LIKE 'D%' THEN Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')--RD
								|| TO_CHAR((R.ACT_WGT * DECODE(R.ACT_WGT,'LBS', 0.00045, 0.001)) 
										+ SUM(Q.OP_CNTR_QTY * (SELECT TS.CNTR_TPSZ_TARE_WGT
                   												 FROM MDM_CNTR_TP_SZ TS
                  												WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
               		 		  FROM BKG_QUANTITY Q
              	    		 WHERE B.BKG_NO = Q.BKG_NO) VAL
						,(
						SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Z.CNTR_TPSZ_CD), '2', 1, 2)* Z.OP_CNTR_QTY) 
						FROM BKG_QUANTITY Z 
						WHERE Z.BKG_NO= B.BKG_NO AND OP_CNTR_QTY > 0 
						AND EXISTS ( SELECT 1 FROM BKG_CONTAINER C WHERE C.BKG_NO= Z.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL )
						) AS BKG_VOL_VGM
						,(SELECT SUM(NVL(Z.VGM_WGT,0) * DECODE(Z.VGM_WGT_UT_CD,'LBS',0.00045,0.001)) FROM BKG_CONTAINER Z WHERE Z.BKG_NO= B.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL) AS BKG_WGT_VGM							 
           			 FROM BKG_VVD BV
          				, BKG_BOOKING B
          				, PARAMS M
          				, BKG_BL_DOC R
          				, MDM_DTL_REV_LANE DRL
          				, MDM_REV_LANE RL
          				, SPC_OFC_LVL O
          			WHERE B.BKG_NO         = BV.BKG_NO
            		  AND B.BKG_NO         = R.BKG_NO
            		  AND B.BKG_STS_CD    IN ('W','F')
            		  AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
--            		  AND M.VSL_CD         = B.VSL_CD
--            		  AND M.SKD_VOY_NO     = B.SKD_VOY_NO
--            		  AND M.SKD_DIR_CD     = B.SKD_DIR_CD
            		  AND M.VSL_CD         = BV.VSL_CD
            		  AND M.SKD_VOY_NO     = BV.SKD_VOY_NO
            		  AND M.SKD_DIR_CD     = BV.SKD_DIR_CD
            		  AND RL.VSL_SLAN_CD   = BV.SLAN_CD
            		  AND (M.OFC_CD IS NULL 
							OR M.OFC_CD = (SELECT N2ND_PRNT_OFC_CD
               								 FROM SPC_OFC_LVL
              								WHERE OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD, '')
                							  AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK )
            				OR M.OFC_CD = (SELECT N3RD_PRNT_OFC_CD
               								 FROM SPC_OFC_LVL
              							    WHERE OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD, '')
                							  AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK ))
            		  AND O.OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)
            		  AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK
            		  AND DRL.RLANE_CD        = M.RLANE_CD
            		  AND DRL.VSL_SLAN_DIR_CD = M.DIR_CD
            		  AND DRL.IOC_CD          = M.IOC_CD
            		  AND DRL.TRD_CD          = M.TRD_CD
            		  AND DRL.SUB_TRD_CD      = M.SUB_TRD_CD
            		  AND DRL.DELT_FLG        = 'N'
            		  AND DRL.RLANE_CD        = RL.RLANE_CD
            		  AND DRL.FM_CONTI_CD     = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
               									   FROM MDM_LOCATION L
             									  WHERE L.LOC_CD = BV.POL_CD )
            		  AND DRL.TO_CONTI_CD 	  = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
               									   FROM MDM_LOCATION L
              									  WHERE L.LOC_CD = BV.POD_CD )
            		  AND RL.RLANE_CD  = M.RLANE_CD
            		  AND RL.VSL_TP_CD = 'C'
            		  AND RL.DELT_FLG  = 'N'
        	  ) M
    	)A
	GROUP BY OFC_CD, PORT_CD,
			 USA_BKG_MOD_CD, DEST_LOC_CD --20140728
)

, WK_CMB AS (

    SELECT RNUM,
           COST_YRWK,
           OFC_CD,
           TS_FLG,
           IOC_CD,
           
           USA_BKG_MOD_CD,           
           
           POL_YD_CD,
           POD_YD_CD,
           
           DEST_LOC_CD,
           
           SUM(BKG_REV)          AS BKG_REV,NVL(SUM(DMDT_COM_AMT),0) AS DMDT_COM_AMT,
           SUM(ESTM_CM_COST_AMT) AS ESTM_CM_COST_AMT,
           SUM(BKG_TTL_QTY)      AS BKG_TTL_QTY,
           SUM(BKG_TTL_WGT)      AS BKG_TTL_WGT,
           MAX(PORT_DIV)         AS PORT_DIV
      FROM (
            SELECT T.RNUM,
                   BAR.COST_YRWK,
                   DECODE(P.OFC_DIV, 'RHQ', DECODE(BAR.SLS_AQ_CD, ' ', BAR.SLS_RHQ_CD, BAR.SLS_AQ_CD), BAR.SLS_OFC_CD) OFC_CD,
                   BAR.TS_FLG,
                   BAR.IOC_CD,
                   
                   CASE WHEN P.CTRL_USA = 'Y' THEN
                        DECODE(BAR.USA_BKG_MOD_CD,'OTH','OTHERS',BAR.USA_BKG_MOD_CD) -- SPC_BKG_AVG_REV.LOCAL/IPI
                   ELSE
                        'OTHERS'
                   END AS USA_BKG_MOD_CD,
                   
                   CASE WHEN P.CTRL_DEST <> 'N' THEN	
                        NVL((SELECT D.CTRL_LOC_ACCT_CD
                               FROM SPC_ALOC_LANE_CTRL_OPT_DTL D,
                                    MDM_LOCATION               ML1,
                                    MDM_LOCATION               ML2,
                                    MDM_EQ_ORZ_CHT             ME1,
                                    MDM_EQ_ORZ_CHT             ME2
                              WHERE P.RLANE_CD         = D.RLANE_CD
                                AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)     = D.TRD_CD
                                AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD) = D.SUB_TRD_CD
                                AND P.SKD_DIR_CD       = D.DIR_CD 
                                AND D.ALOC_CTRL_TP_CD  = P.CTRL_DEST
                                AND ML1.LOC_CD         = BAR.BKG_POD_CD
                                AND ME1.SCC_CD         = ML1.SCC_CD
                                AND ML2.LOC_CD         = BAR.BKG_DEL_CD
                                AND ME2.SCC_CD         = ML2.SCC_CD
                                AND D.CTRL_LOC_ACCT_CD = DECODE(P.CTRL_DEST_LVL,'T',DECODE(P.CTRL_DEST,'E',ME2.ECC_CD,'L',BAR.BKG_DEL_CD),DECODE(P.CTRL_DEST,'E',ME1.ECC_CD,'L',BAR.BKG_POD_CD))
                           ),'XXXXX')
                   ELSE
                        'XXXXX'
                   END AS DEST_LOC_CD,
                   
                   BAR.POL_YD_CD,
                   BAR.POD_YD_CD,
                   BAR.BKG_REV, BAR.DMDT_COM_AMT,
                   BAR.ESTM_CM_COST_AMT,
                   BAR.BKG_TTL_QTY,
                   BAR.USD_BKG_TTL_WGT AS BKG_TTL_WGT,
                   PORT_DIV
             FROM SPC_BKG_AVG_REV   BAR,
                  (SELECT DISTINCT DENSE_RANK() OVER (ORDER BY COST_YRWK) AS RNUM,
                          COST_YRWK
                     FROM SPC_BKG_AVG_REV
                  ) T,
                  PARAMS            P  
            WHERE BAR.COST_YRWK  = T.COST_YRWK
              AND BAR.OFC_KND_CD = '3'
              AND BAR.TRD_CD     = P.TRD_CD
              AND BAR.RLANE_CD   = P.RLANE_CD
              AND BAR.DIR_CD     = P.DIR_CD
              AND BAR.IOC_CD     = P.IOC_CD
              AND BAR.SLS_RHQ_CD = P.OFC_CD
              AND BAR.POL_YD_CD <> '00000'
              AND BAR.POD_YD_CD <> '00000'
              AND BAR.IOC_CD = DECODE(P.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
              AND BAR.TS_FLG = DECODE(P.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
              AND P.IOC_CD       <> 'E'
           )
     GROUP BY  RNUM,
           COST_YRWK,
           OFC_CD,
           TS_FLG,
           IOC_CD,
           USA_BKG_MOD_CD,  
           POL_YD_CD,
           POD_YD_CD,
           DEST_LOC_CD
)

SELECT OFC_CD ,
       USA_BKG_MOD_CD,                       
       PORT_CD,
       DECODE(DEST_LOC_CD1,'XXXXX','OTHERS',DEST_LOC_CD1) AS DEST_LOC_CD,
       -- 주차별 CMB
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 1
       ) AS CMB1,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 1
       ) AS CMB_WGT1,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 2
       ) AS CMB2,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 2
       ) AS CMB_WGT2,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 3
       ) AS CMB3,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 3
       ) AS CMB_WGT3,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 4
       ) AS CMB4,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = Z.OFC_CD
             AND SUBSTR(Z.PORT_CD,1,5) = DECODE(BAR.PORT_DIV, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
             AND BAR.USA_BKG_MOD_CD = Z.USA_BKG_MOD_CD
             AND BAR.DEST_LOC_CD    = Z.DEST_LOC_CD1
             AND BAR.RNUM = 4
       ) AS CMB_WGT4,

       FC_TTL_TEU,
       FCT_VOL,
       FCT_HC ,
       FCT_45 ,
       FCT_53 ,
       FCT_RF ,
       FCT_WGT,
       FCT_D2 ,
       FCT_D4 ,
       FCT_RD ,

       ALC_VOL,
       ALC_HC ,
       ALC_45 ,
       ALC_53 ,
       ALC_RF ,
       ALC_WGT,
       ALC_D2 ,
       ALC_D4 ,
       ALC_RD ,

       BKG_VOL,
       BKG_20 ,
       BKG_40 ,
       BKG_HC ,
       BKG_45 ,
       BKG_53 ,
       BKG_RF ,
       BKG_WGT,BKG_VOL_VGM,BKG_WGT_VGM,
       BKG_D2 ,
       BKG_D4 ,
       BKG_RD 
FROM (
       
      SELECT OFC_CD ,
             USA_BKG_MOD_CD,                       
             PORT_CD,
             DEST_LOC_CD AS DEST_LOC_CD1,

             SUM(NVL(FCT_VOL, 0) + NVL(FCT_HC, 0) * 2 + NVL(FCT_45, 0) * 2 + NVL(FCT_53, 0) * 2) AS FC_TTL_TEU,
             SUM(FCT_VOL) AS FCT_VOL,
             SUM(FCT_HC)  AS FCT_HC ,
             SUM(FCT_45)  AS FCT_45 ,
             SUM(FCT_53)  AS FCT_53 ,
             SUM(FCT_RF)  AS FCT_RF ,
             SUM(FCT_WGT) AS FCT_WGT,
             SUM(FCT_D2)  AS FCT_D2 ,
             SUM(FCT_D4)  AS FCT_D4 ,
             SUM(FCT_RD)  AS FCT_RD ,

             NVL(SUM(ALC_VOL),0) AS ALC_VOL,
             NVL(SUM(ALC_HC),0)  AS ALC_HC ,
             NVL(SUM(ALC_45),0)  AS ALC_45 ,
             NVL(SUM(ALC_53),0)  AS ALC_53 ,
             NVL(SUM(ALC_RF),0)  AS ALC_RF ,
             NVL(SUM(ALC_WGT),0) AS ALC_WGT,
             NVL(SUM(ALC_D2),0)  AS ALC_D2 ,
             NVL(SUM(ALC_D4),0)  AS ALC_D4 ,
             NVL(SUM(ALC_RD),0)  AS ALC_RD ,
             
             SUM(BKG_VOL) AS BKG_VOL,
             SUM(BKG_20)  AS BKG_20 ,
             SUM(BKG_40)  AS BKG_40 ,
             SUM(BKG_HC)  AS BKG_HC ,
             SUM(BKG_45)  AS BKG_45 ,
             SUM(BKG_53)  AS BKG_53 ,
             SUM(BKG_RF)  AS BKG_RF ,
             SUM(BKG_WGT) AS BKG_WGT,SUM(BKG_VOL_VGM) AS BKG_VOL_VGM,SUM(BKG_WGT_VGM) AS BKG_WGT_VGM,
             SUM(BKG_D2)  AS BKG_D2 ,
             SUM(BKG_D4)  AS BKG_D4 ,
             SUM(BKG_RD)  AS BKG_RD
        FROM (
                SELECT ''   AS OFC_CD ,
                       ''   AS USA_BKG_MOD_CD,
                       ''   AS PORT_CD,
                       ''   AS DEST_LOC_CD,
                       
                       0    AS FCT_VOL,
                       0    AS FCT_HC ,
                       0    AS FCT_45 ,
                       0    AS FCT_53 ,
                       0    AS FCT_RF ,
                       0    AS FCT_WGT,
                       0    AS FCT_D2 ,
                       0    AS FCT_D4 ,
                       0    AS FCT_RD ,
                       
                       NULL AS ALC_VOL,
                       NULL AS ALC_HC ,
                       NULL AS ALC_45 ,
                       NULL AS ALC_53 ,
                       NULL AS ALC_RF ,
                       NULL AS ALC_WGT,
                       NULL AS ALC_D2 ,
                       NULL AS ALC_D4 ,
                       NULL AS ALC_RD ,
                       
                       0    AS BKG_VOL,
                       0    AS BKG_20 ,
                       0    AS BKG_40 ,
                       0    AS BKG_HC ,
                       0    AS BKG_45 ,
                       0    AS BKG_53 ,
                       0    AS BKG_RF ,
                       0    AS BKG_WGT, 0    AS BKG_VOL_VGM,0    AS BKG_WGT_VGM,
                       0    AS BKG_D2 ,
                       0    AS BKG_D4 ,
                       0    AS BKG_RD 
                  FROM DUAL
                 WHERE ROWNUM = 0

#if (${pol_pod} != 'DEL')
    UNION ALL
                SELECT OFC_CD ,
                       USA_BKG_MOD_CD,                       
                       PORT_CD,
                       DEST_LOC_CD,
                       VOL_TTL,
                       VOL_HC ,
                       VOL_45 ,
                       VOL_53 ,
                       VOL_RF ,
                       WGT_TTL,
                       VOL_D2 ,
                       VOL_D4 ,
                       VOL_RD ,
                       
                       NULL AS ALC_VOL,
                       NULL AS ALC_HC ,
                       NULL AS ALC_45 ,
                       NULL AS ALC_53 ,
                       NULL AS ALC_RF ,
                       NULL AS ALC_WGT,
                       NULL AS ALC_D2 ,
                       NULL AS ALC_D4 ,
                       NULL AS ALC_RD ,
                       
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,0,0,
                       0,
                       0,
                       0
                  FROM FCST_DATA
                UNION ALL
                SELECT OFC_CD ,
                       USA_BKG_MOD_CD,                       
                       PORT_CD,
                       DEST_LOC_CD,
                       
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       
                       VOL_TTL,
                       VOL_HC ,
                       VOL_45 ,
                       VOL_53 ,
                       VOL_RF ,
                       WGT_TTL,
                       VOL_D2 ,
                       VOL_D4 ,
                       VOL_RD ,
                       
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,0,0,
                       0,
                       0,
                       0
                  FROM ALOC_DATA
#end

                UNION ALL
                SELECT OFC_CD ,
                       USA_BKG_MOD_CD,                       
                       PORT_CD,
                       DEST_LOC_CD,
                       
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       0,
                       
                       NULL AS ALC_VOL,
                       NULL AS ALC_HC ,
                       NULL AS ALC_45 ,
                       NULL AS ALC_53 ,
                       NULL AS ALC_RF ,
                       NULL AS ALC_WGT,
                       NULL AS ALC_D2 ,
                       NULL AS ALC_D4 ,
                       NULL AS ALC_RD ,
                       
                       BKG_TTL,
                       BKG_20 ,
                       BKG_40 ,
                       BKG_HC ,
                       BKG_45 ,
                       BKG_53 ,
                       BKG_RF ,
                       BKG_WGT,BKG_VOL_VGM,BKG_WGT_VGM,
                       BKG_D2 ,
                       BKG_D4 ,
                       BKG_RD 
                  FROM BKG_DATA
             ) Z
    GROUP BY OFC_CD,
             USA_BKG_MOD_CD,                       
             PORT_CD,
             DEST_LOC_CD

) Z
    ORDER BY OFC_CD,
             USA_BKG_MOD_CD,                       
             PORT_CD,
             DEST_LOC_CD1			]]></sql>
			<params>
				<param name="rhq_txt" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="onc_ipc" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="rhq_gso" type="12" value="" out="N"/>
				<param name="pol_pod" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
