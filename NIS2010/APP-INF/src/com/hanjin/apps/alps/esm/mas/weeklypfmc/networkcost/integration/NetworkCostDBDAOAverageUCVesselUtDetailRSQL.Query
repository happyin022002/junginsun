<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOAverageUCVesselUtDetailRSQL">
			<desc><![CDATA[AverageUCVesselUtDetail
2015.03.10 김시몬 VSL CLASS CAPA 보여지도록 추가
2015.04.30 김시몬 TTL_DAYS를 TTL_DYS로 변경
2015.09.15 CHM-201537876 OP4 단가 생성 관련 기능 추가 요청 
2015.10.27 Average U/C_Vessel Pooling2 (OP Fixed & Variable cost, etc) 1 CYCLE 오류 시 색구분자 생성 요청
2015.11.05 1 CYCLE 관련 월별 VESSEL(MAS_POOL_VSL_RGST) 정보를 Start Month 및 Duration의 범위 기간내 존재하는지 가장 최근것을 가져와 사용하도록 로직 보완 ]]></desc>
			<sql><![CDATA[
WITH 
CT_DATA AS (
 SELECT
--        NVL2(A.HUL_BND_CD, A.COST_YRMON, 'TTL') AS COST_YRMON,
       A.COST_YRMON,
--       NVL2(A.HUL_BND_CD, A.TRD_CD, '') AS TRD_CD,
--       NVL2(A.HUL_BND_CD, A.SUB_TRD_CD, '') AS SUB_TRD_CD,
--       NVL2(A.HUL_BND_CD, A.RLANE_CD, '') AS RLANE_CD,
--       NVL2(A.HUL_BND_CD, A.DIR_CD, '') AS DIR_CD,
        A.TRD_CD, A.SUB_TRD_CD, A.RLANE_CD, A.DIR_CD,
       A.HUL_BND_CD,
       A.VSL_OSHP_CD, 
       B.VSL_CLSS_CAPA,
       A.VVD,
       A.VSL_CD,
       A.SKD_VOY_NO,
       A.TTL_AMT,
       A.TTL_DAYS,
       A.EFF_YRMON,
       A.DHIR_AMT,
       A.VVD_BSA_CAPA,
--       NVL2(A.HUL_BND_CD, A.TEU_UC_AMT, 
--         DECODE(SUM(A.VVD_BSA_CAPA) OVER(PARTITION BY A.TRD_CD,A.RLANE_CD,A.DIR_CD,A.VSL_OSHP_CD),0,0, 
--                SUM(A.TTL_AMT) OVER(PARTITION BY A.TRD_CD,A.RLANE_CD,A.DIR_CD,A.VSL_OSHP_CD) 
--                / SUM(A.VVD_BSA_CAPA) OVER(PARTITION BY A.TRD_CD,A.RLANE_CD,A.DIR_CD,A.VSL_OSHP_CD))) AS TEU_UC_AMT,
A.TEU_UC_AMT,
       A.STND_COST_CD,
       A.UPD_USR_ID,
       A.FREQ_NO,
       A.MAX_RNK,
--       NVL2(A.HUL_BND_CD, '', A.CYCLE_FLG) AS CYCLE_FLG,
       A.CYCLE_FLG,
       (
       SELECT COST_WK FROM MAS_MON_VVD 
              WHERE TRD_CD = A.TRD_CD AND RLANE_CD = A.RLANE_CD AND DIR_CD = A.DIR_CD AND VSL_CD = A.VSL_CD AND SKD_VOY_NO = A.SKD_VOY_NO AND DELT_FLG = 'N'
       ) COST_WK
  FROM (
        SELECT COST_YRMON,
               TRD_CD,
               SUB_TRD_CD,
               RLANE_CD,
               DIR_CD,
               HUL_BND_CD,
               VSL_OSHP_CD,  
               VVD,
               VSL_CD,
               SKD_VOY_NO,
               SUM(TTL_AMT) AS TTL_AMT,
               TTL_DAYS,
               EFF_YRMON,
               DHIR_AMT,
               SUM(VVD_BSA_CAPA) AS VVD_BSA_CAPA,
               DECODE(SUM(VVD_BSA_CAPA), 0 , 0, SUM(TTL_AMT) / SUM(VVD_BSA_CAPA)) AS TEU_UC_AMT,
               STND_COST_CD,
               UPD_USR_ID,
               FREQ_NO,
               MAX_RNK,
               MIN(CYCLE_FLG) AS CYCLE_FLG
          FROM (
                SELECT COST_YRMON,
                       TRD_CD,
                       SUB_TRD_CD,
                       RLANE_CD,
                       DIR_CD,
                       HUL_BND_CD,
                       VSL_OSHP_CD,  
                       VVD,
                       VSL_CD,
                       SKD_VOY_NO,
                       TTL_AMT,
                       TTL_DAYS,
                       EFF_YRMON,
                       DHIR_AMT,
                       VVD_BSA_CAPA,
                       TEU_UC_AMT,
                       STND_COST_CD,
                       UPD_USR_ID,
                       FREQ_NO,
                       MAX_RNK,
                       DECODE(FREQ_NO, MAX_RNK, 'Y', 'N') AS CYCLE_FLG
                  FROM (
                        SELECT A1.COST_YRMON,
                               A1.TRD_CD,
                               A1.SUB_TRD_CD,
                               A1.RLANE_CD,
                               A1.DIR_CD,
                               A1.HUL_BND_CD,
                               A1.VSL_OSHP_CD,  
                               A1.VSL_CD||A1.SKD_VOY_NO||A1.DIR_CD AS VVD,
                               A1.VSL_CD,
                               A1.SKD_VOY_NO,
                               A1.TTL_AMT,
                               A1.TTL_DYS AS TTL_DAYS,
                               A1.EFF_FM_YRMON || DECODE(A1.EFF_FM_YRMON,NULL,'',' ~ ')|| A1.EFF_TO_YRMON AS EFF_YRMON,
                               A1.DHIR_AMT,
                               A1.VVD_BSA_CAPA,
                               A1.TEU_UC_AMT,
                               A1.STND_COST_CD,
                               A1.UPD_USR_ID,
                               B1.FREQ_NO,
                               COUNT(1) OVER(PARTITION BY A1.COST_YRMON,A1.TRD_CD,A1.SUB_TRD_CD,A1.RLANE_CD,A1.DIR_CD) AS MAX_RNK
                          FROM MAS_POOL_UT_COST_DTL A1,
                               (
                                SELECT COST_YRMON,TRD_CD,RLANE_CD,VSL_OSHP_CD,SUB_TRD_CD,
                                       SUM(FREQ_NO) OVER(PARTITION BY COST_YRMON,TRD_CD,RLANE_CD,SUB_TRD_CD) AS FREQ_NO
                                  FROM MAS_LANE_VSL_TP_FREQ B1
                                 WHERE B1.COST_YRMON      = REPLACE(@[f_yearweek], '-', '')
                                   AND B1.FREQ_NO         > 0 
                               ) B1
                         WHERE A1.COST_YRMON   = REPLACE(@[f_yearweek], '-', '')
                           AND A1.STND_COST_CD = @[f_cobcost]   
                           AND A1.COST_YRMON   = B1.COST_YRMON(+)
                           AND A1.TRD_CD       = B1.TRD_CD(+)
                           AND A1.RLANE_CD     = B1.RLANE_CD(+)
                           AND A1.SUB_TRD_CD   = B1.SUB_TRD_CD(+)
                           AND A1.VSL_OSHP_CD  = B1.VSL_OSHP_CD(+)
        #if(${f_vsl_cd} != '')
                           AND A1.VSL_CD       = @[f_vsl_cd]
        #end
        #if(${f_trd_cd} != '')
                           AND A1.TRD_CD       = @[f_trd_cd]
        #end
        #if(${f_rlane_cd} != '')
                           AND A1.RLANE_CD     = @[f_rlane_cd]
        #end
        #if(${f_dir_cd} != '')
                           AND A1.DIR_CD       = @[f_dir_cd]
        #end
        #if(${f_hul_bnd_cd} != '')
                           AND A1.HUL_BND_CD   = @[f_hul_bnd_cd]
        #end
                       )
               ) 
         GROUP BY GROUPING SETS (
                                 (COST_YRMON,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,HUL_BND_CD,VSL_OSHP_CD,  VVD,VSL_CD,SKD_VOY_NO,TTL_AMT,TTL_DAYS,EFF_YRMON,DHIR_AMT,VVD_BSA_CAPA,TEU_UC_AMT,STND_COST_CD,UPD_USR_ID,FREQ_NO,MAX_RNK),
                                 (COST_YRMON,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD)
                                )   
         ORDER BY COST_YRMON,
               TRD_CD,
               SUB_TRD_CD,
               RLANE_CD,
               DIR_CD,
               VVD
       ) A, --MAS_POOL_VSL_RGST B
       (
        SELECT VSL_CD, VSL_CLSS_CAPA, VSL_OSHP_CD
          FROM (
                SELECT COST_YRMON, VSL_CD, VSL_CLSS_CAPA, VSL_OSHP_CD,
                       MAX(COST_YRMON) OVER(PARTITION BY VSL_CD) AS MAX_COST_YRMON
                  FROM MAS_POOL_VSL_RGST A
--                       (SELECT MIN(EFF_FM_YRMON) AS EFF_FM_YRMON, 
--                               MAX(EFF_TO_YRMON) AS EFF_TO_YRMON
--                          FROM MAS_POOL_UT_COST_DTL
--                         WHERE COST_YRMON   = REPLACE('2015-11', '-', '')
--                           AND STND_COST_CD = '54350000'
--                       ) B 
                 WHERE COST_YRMON BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(@[f_yearweek], '-', ''),'YYYYMM'),- 2),'YYYYMM') AND REPLACE(@[f_yearweek], '-', '')
                   AND NVL(CHTR_OUT_FLG,'N') != 'Y'    
               )
         WHERE COST_YRMON = MAX_COST_YRMON                           
       ) B 
 WHERE 1 = 1
   --AND A.COST_YRMON  = B.COST_YRMON(+)
   AND A.VSL_CD      = B.VSL_CD(+)
--   AND A.VSL_OSHP_CD = B.VSL_OSHP_CD(+)
)
, INV_DATA AS (
    
SELECT A.TRD_CD,A.SUB_TRD_CD,A.RLANE_CD,A.HUL_BND_CD,A.VSL_CD,A.SKD_VOY_NO,A.DIR_CD, (A.VSL_CD||A.SKD_VOY_NO||A.DIR_CD) VVD, A.VSL_OSHP_CD,A.TTL_AMT,A.TTL_DYS,A.VVD_BSA_CAPA, B.VSL_CLSS_CAPA, STND_COST_CD
  FROM MAS_POOL_UT_COST_DTL A,
       (SELECT VSL_CD,    
               VSL_OSHP_CD,   
               VSL_CLSS_CAPA
          FROM (
                SELECT DISTINCT A1.VSL_CD,    
                       A1.VSL_OSHP_CD,   
                       A1.VSL_CLSS_CAPA, 
                       A1.VSL_SEQ, 
                       MAX(A1.VSL_SEQ) OVER(PARTITION BY A1.VSL_CD, A1.VSL_OSHP_CD, A1.VSL_CLSS_CAPA) AS VSL_MAX_SEQ
                  FROM MAS_VSL_RGST A1
                 WHERE 1 = 1   
                   AND NVL(A1.DELT_FLG, 'N') = 'N' 
                   AND REPLACE(@[f_yearweek], '-', '') BETWEEN  TO_CHAR(NVL(A1.VSL_APLY_FM_DT, A1.VSL_RETN_FM_DT),'YYYYMM') AND 		   
                                         TO_CHAR(NVL(A1.VSL_APLY_TO_DT , A1.VSL_RETN_TO_DT),'YYYYMM')
               )    
         WHERE VSL_SEQ = VSL_MAX_SEQ
      ) B
        
 WHERE A.COST_YRMON   = REPLACE(@[f_yearweek], '-', '')
   AND STND_COST_CD = @[f_cobcost]
   AND A.VSL_OSHP_CD IN (
                       DECODE(STND_COST_CD,'54400000','OTH','54350000','CHT','OWN'),
                       DECODE(STND_COST_CD,'54400000','OTH','54350000','CHT','53101000','CHT','53102000','CHT','53200000','CHT','43102011','CHT','OWN'),
                       DECODE(STND_COST_CD,'54400000','OTH','54350000','CHT','OWN')
                      )
   AND NVL(A.TTL_AMT,0) = 0
   AND A.VSL_CD      = B.VSL_CD
   AND A.VSL_OSHP_CD = B.VSL_OSHP_CD
 ORDER BY A.TRD_CD,A.SUB_TRD_CD,A.RLANE_CD,A.DIR_CD,A.VSL_OSHP_CD,A.VSL_CD
)
SELECT NVL2(C.HUL_BND_CD, C.COST_YRMON, 'TTL') AS COST_YRMON,
       NVL2(C.HUL_BND_CD, C.TRD_CD, '') AS TRD_CD,
       NVL2(C.HUL_BND_CD, C.SUB_TRD_CD, '') AS SUB_TRD_CD,
       NVL2(C.HUL_BND_CD, C.RLANE_CD, '') AS RLANE_CD,
       NVL2(C.HUL_BND_CD, C.DIR_CD, '') AS DIR_CD,
       NVL2(C.HUL_BND_CD, C.TEU_UC_AMT, 
         DECODE(SUM(C.VVD_BSA_CAPA) OVER(PARTITION BY C.TRD_CD,C.RLANE_CD,C.DIR_CD,C.VSL_OSHP_CD),0,0, 
                SUM(C.TTL_AMT) OVER(PARTITION BY C.TRD_CD,C.RLANE_CD,C.DIR_CD,C.VSL_OSHP_CD) 
                / SUM(C.VVD_BSA_CAPA) OVER(PARTITION BY C.TRD_CD,C.RLANE_CD,C.DIR_CD,C.VSL_OSHP_CD))) AS TEU_UC_AMT,
       NVL2(C.HUL_BND_CD, '', C.CYCLE_FLG) AS CYCLE_FLG,
       C.HUL_BND_CD,
       C.VSL_OSHP_CD, 
       C.VSL_CLSS_CAPA,
       C.VVD,
       C.VSL_CD,
       C.SKD_VOY_NO,
       C.TTL_AMT,
       C.TTL_DAYS,
       C.EFF_YRMON,
       C.DHIR_AMT,
       C.VVD_BSA_CAPA,
       C.STND_COST_CD,
       C.UPD_USR_ID,
       C.FREQ_NO,
       C.MAX_RNK,
       C.COST_WK,
       
--운하 통과 VVD 에 대해서 적용
        CASE WHEN C.STND_COST_CD = '53102000' THEN
            CASE WHEN 
                       (SELECT COUNT(1)
                           FROM VSK_VSL_PORT_SKD A
                          WHERE A.VSL_CD     = C.VSL_CD
                            AND A.SKD_VOY_NO = C.SKD_VOY_NO
                            AND A.SKD_DIR_CD = C.DIR_CD
                            AND A.VPS_PORT_CD IN ('EGSUZ', 'PAPAC')
                            AND NVL(A.SKD_CNG_STS_CD, ' ') <> 'S'
                        ) >= 1 THEN
                 DECODE( I.VVD , NULL,'N','Y')
            ELSE
                 'N'
            END
       ELSE
            DECODE( I.VVD , NULL,'N','Y')
       END  MIS_TTL
FROM CT_DATA C , INV_DATA I
WHERE C.VVD = I.VVD(+)
AND C.TRD_CD = I.TRD_CD(+)
AND C.SUB_TRD_CD = I.SUB_TRD_CD(+)
AND C.RLANE_CD = I.RLANE_CD(+)
 ORDER BY C.COST_YRMON,
               C.TRD_CD,
               C.SUB_TRD_CD,
               C.RLANE_CD,
               C.DIR_CD,
               C.VSL_OSHP_CD, 
               C.COST_WK,
               C.VVD			]]></sql>
			<params>
				<param name="f_yearweek" type="12" value="" out="N"/>
				<param name="f_cobcost" type="12" value="" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_hul_bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
