<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingSplitCombineDBDAOSearchBkgListForVslSkdCngNoticeRSQL">
			<desc><![CDATA[변경된 VVD,POL로 기존에 생성되어 있는 Booking을 조회한다.]]></desc>
			<sql><![CDATA[
SELECT BKG_JOIN_FNC(CURSOR(SELECT CASE WHEN LENGTH(BK.BKG_NO)=11 then BK.BKG_NO||'  '
                             		   WHEN LENGTH(BK.BKG_NO)=12 then BK.BKG_NO||' '
                            		   ELSE BK.BKG_NO end BKG_NO
    						  FROM BKG_BOOKING BK, BKG_VVD VVD
						     WHERE BK.BKG_NO		= VVD.BKG_NO
    						   AND BK.BKG_OFC_CD  	= LIST.BKG_OFC_CD
    						   AND VVD.VSL_CD     	= LIST.VSL_CD
    						   AND VVD.SKD_VOY_NO 	= LIST.SKD_VOY_NO
    						   AND VVD.SKD_DIR_CD 	= LIST.SKD_DIR_CD
    						   AND LIST.PORT_CD     = DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CD,           VVD.POD_CD)    						 
    						   AND LIST.YD_CD       = DECODE(LIST.CNG_PORT, 'POL', VVD.POL_YD_CD,        VVD.POD_YD_CD)
    						   AND LIST.CLPT_IND_SEQ= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CLPT_IND_SEQ, VVD.POD_CLPT_IND_SEQ)
    						 )) BKG_NO_LIST
        , LIST.VSL_CD||LIST.SKD_VOY_NO||LIST.SKD_DIR_CD VVD
        , LIST.PORT_CD
        , LIST.YD_CD
        , @[type_cd] TYPE_CD
		, @[remark]  REMARK
     	, LIST.BKG_OFC_CD
, REPLACE(BKG_JOIN_FNC(CURSOR( SELECT DISTINCT USR.USR_EML
                                 FROM COM_USER USR, BKG_BOOKING BK, BKG_VVD VVD
								WHERE BK.BKG_NO			= VVD.BKG_NO
                                  AND BK.BKG_OFC_CD 	= LIST.BKG_OFC_CD
                                  AND VVD.VSL_CD 		= LIST.VSL_CD
                                  AND VVD.SKD_VOY_NO 	= LIST.SKD_VOY_NO
                                  AND VVD.SKD_DIR_CD 	= LIST.SKD_DIR_CD
                                  AND LIST.PORT_CD 		= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CD, 			VVD.POD_CD)
                                  AND LIST.YD_CD 		= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_YD_CD,		VVD.POD_YD_CD)
                                  AND LIST.CLPT_IND_SEQ = DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CLPT_IND_SEQ,VVD.POD_CLPT_IND_SEQ)
                                  AND USR.USE_FLG		= 'Y'
                                  AND USR.USR_ID 		= BK.DOC_USR_ID
                                  and USR.USR_EML 		IS NOT NULL
                                  and USR.USR_EML 		LIKE '%@%')), ',', ';') RCV_EML_LIST 
, BKG_JOIN_FNC(CURSOR(         SELECT DISTINCT USR.USR_NM
                                 FROM COM_USER USR, BKG_BOOKING BK, BKG_VVD VVD
								WHERE BK.BKG_NO			= VVD.BKG_NO
                                  AND BK.BKG_OFC_CD 	= LIST.BKG_OFC_CD
                                  AND VVD.VSL_CD 		= LIST.VSL_CD
                                  AND VVD.SKD_VOY_NO 	= LIST.SKD_VOY_NO
                                  AND VVD.SKD_DIR_CD 	= LIST.SKD_DIR_CD
                                  AND LIST.PORT_CD 		= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CD, 			VVD.POD_CD)
                                  AND LIST.YD_CD 		= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_YD_CD, 		VVD.POD_YD_CD)
                                  AND LIST.CLPT_IND_SEQ = DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CLPT_IND_SEQ,VVD.POD_CLPT_IND_SEQ)
                                  AND USR.USE_FLG 		= 'Y'
                                  AND USR.USR_ID 		= BK.DOC_USR_ID
                                  and USR.USR_EML 		IS NOT NULL
                                  and USR.USR_EML 		LIKE '%@%')) RCV_USR_NM 
, BKG_JOIN_FNC(CURSOR(         SELECT DISTINCT USR.USR_ID
                                 FROM COM_USER USR, BKG_BOOKING BK, BKG_VVD VVD
								WHERE BK.BKG_NO			= VVD.BKG_NO
                                  AND BK.BKG_OFC_CD 	= LIST.BKG_OFC_CD
                                  AND VVD.VSL_CD 		= LIST.VSL_CD
                                  AND VVD.SKD_VOY_NO 	= LIST.SKD_VOY_NO
                                  AND VVD.SKD_DIR_CD 	= LIST.SKD_DIR_CD
                                  AND LIST.PORT_CD 		= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CD, 			VVD.POD_CD)
                                  AND LIST.YD_CD 		= DECODE(LIST.CNG_PORT, 'POL', VVD.POL_YD_CD, 		VVD.POD_YD_CD)
                                  AND LIST.CLPT_IND_SEQ = DECODE(LIST.CNG_PORT, 'POL', VVD.POL_CLPT_IND_SEQ,VVD.POD_CLPT_IND_SEQ)
                                  AND USR.USE_FLG		= 'Y'
                                  AND USR.USR_ID 		= BK.DOC_USR_ID
                                  and USR.USR_EML 		IS NOT NULL
                                  and USR.USR_EML 		LIKE '%@%')) RCV_USR_ID
  FROM (
       SELECT DISTINCT VVD.VSL_CD
                , VVD.SKD_VOY_NO
         		, VVD.SKD_DIR_CD
         		, DECODE(@[port_cd], VVD.POL_CD, 'POL',                'POD')                CNG_PORT
         		, DECODE(@[port_cd], VVD.POL_CD, VVD.POL_CD,           VVD.POD_CD)           PORT_CD
         		, DECODE(@[port_cd], VVD.POL_CD, VVD.POL_YD_CD,        VVD.POD_YD_CD)        YD_CD
         		, DECODE(@[port_cd], VVD.POL_CD, VVD.POL_CLPT_IND_SEQ, VVD.POD_CLPT_IND_SEQ) CLPT_IND_SEQ
         		, BK.BKG_OFC_CD         		
        FROM	BKG_BOOKING BK,
        		BKG_VVD VVD
        WHERE	BK.BKG_STS_CD    <> 'X'
		  AND   BK.BKG_CGO_TP_CD = 'F'
          AND 	BK.BKG_NO        = VVD.BKG_NO
          AND 	VVD.VSL_CD     = @[vsl_cd]
          AND 	VVD.SKD_VOY_NO = @[skd_voy_no]
          AND 	VVD.SKD_DIR_CD = @[skd_dir_cd]
          AND 	((VVD.POL_CD = @[port_cd] AND nvl(VVD.POL_CLPT_IND_SEQ, 1) = @[clpt_ind_seq])
				--phase out일 때 pod로 bkg을 찾지 않음
        	  OR (@[type_cd] <> 'O' AND VVD.POD_CD = @[port_cd] AND nvl(VVD.POD_CLPT_IND_SEQ, 1) = @[clpt_ind_seq]))        	  
         ORDER BY BK.BKG_OFC_CD) LIST			]]></sql>
			<params>
				<param name="type_cd" type="12" value="" out="N"/>
				<param name="remark" type="12" value="" out="N"/>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
