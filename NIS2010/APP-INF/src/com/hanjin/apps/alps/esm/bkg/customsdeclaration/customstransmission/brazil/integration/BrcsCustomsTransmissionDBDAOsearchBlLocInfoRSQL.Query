<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BrcsCustomsTransmissionDBDAOsearchBlLocInfoRSQL">
			<desc><![CDATA[BL 일반 정보 및 location 정보를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT    BK.BL_NO || DECODE(BK.BL_TP_CD, 'W', BK.BL_TP_CD)			   BLNBR                                                	
    #if (${cnt_gubun} == 'BR') 
         ,NVL(LOC1.UN_LOC_CD, BK.POL_CD)       BLPOL                                                	
         ,NVL(LOC2.UN_LOC_CD, BK.POD_CD)       BLPOD                                                	
         ,NVL(LOC3.UN_LOC_CD, BK.POR_CD)       BLPOR                                                	
         ,NVL(LOC4.UN_LOC_CD, BK.DEL_CD)       BLDEL         

        ,NVL(BBD.ACT_WGT, 0)       BLWGT                                                                    	
        ,NVL(BBD.MEAS_QTY, 0)      BLMEA                                                                    	
                 
		,REPLACE(REPLACE(TRANSLATE(NVL(BK.XTER_RMK,' '),chr(13)||chr(10),' '),'$','S'),'#',' ') REMARK                                                                  	
         
		,NVL(CMD.MF_CMDT_CD,' ') IN_CMDT_CD                                         
		,'' IN_CMDT_DESC                                                         
             	
		,'' COMMODITY
        ,'' BLPOL_NODE
        ,'' BLPOD_NODE
        ,'' EU_ENTRY_OFC
        ,'' EU_POD_OFC
	    ,'' PART_LOAD
        ,'' POFE_ETA
        ,'' TRANSIT_IND

         ,DECODE(BRC.SHPR_TAX_NO, NULL, BCS.CUST_CNT_CD, 'CNPJ')     	     SHPRCN     -- 브리질 전용                                                             	
	     ,DECODE(BRC.SHPR_TAX_NO, NULL, BCS.CUST_SEQ||'' , BRC.SHPR_TAX_NO)  SHPRCD		-- 브리질 전용

         ,DECODE(BRC.CNEE_TAX_NO, NULL, BCC.CUST_CNT_CD, 'CNPJ')     	     CNEECN     -- 브리질 전용                                                             	
	     ,DECODE(BRC.CNEE_TAX_NO, NULL, BCC.CUST_SEQ||'' , BRC.CNEE_TAX_NO)  CNEECD		-- 브리질 전용

		 ,DECODE(BRC.NTFY_TAX_NO, NULL, BCN.CUST_CNT_CD, 'CNPJ')   		     NTFYCN  -- 브리질 전용
		 ,DECODE(BRC.NTFY_TAX_NO, NULL, BCN.CUST_SEQ||'', BRC.NTFY_TAX_NO)   NTFYCD  -- 브리질 전용

		, BRC.BRZ_DECL_NO						 EXPOCD

    #elseif (${cnt_gubun} == 'EUR') 
         ,BK.POL_CD       					   BLPOL                                                	
         ,BK.POD_CD       					   BLPOD                                                	
         ,BK.POR_CD      					   BLPOR                                                	
         ,BK.DEL_CD       					   BLDEL                                                	

        ,DECODE(NVL(BBD.WGT_UT_CD,' '),'LBS',ROUND(NVL(BBD.ACT_WGT,0)*0.4536,3),NVL(BBD.ACT_WGT,0)) BLWGT
        ,DECODE(NVL(BBD.MEAS_UT_CD,' '),'CBF',ROUND(NVL(BBD.MEAS_QTY,0)*0.0283,3),NVL(BBD.MEAS_QTY,0)) BLMEA

		,TRANSLATE(NVL(BK.XTER_RMK,' '),chr(13)||chr(10),' ') REMARK

		,NVL(BK.CMDT_CD,' ') IN_CMDT_CD                                         
		,REPLACE(NVL(COM.CMDT_NM, ''),chr(13)||chr(10),' ' ) IN_CMDT_DESC    

		,BK.CMDT_CD COMMODITY  

		,BV.POL_YD_CD BLPOL_NODE
		,BV.POD_YD_CD BLPOD_NODE

        ,(SELECT A.EUR_CSTMS_OFC_ID
            FROM BKG_CSTMS_EUR_CD_STUP A
              , (
                         SELECT 
                            A.CSTMS_PORT_CD AS POFE
                            ,A.CSTMS_YD_CD AS POFE_YD
                            ,ROW_NUMBER() OVER ( ORDER BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.CLPT_SEQ ) RN
                         FROM (
                              SELECT 
                                  DISTINCT A.VSL_CD ,
                                  A.SKD_VOY_NO ,
                                  A.SKD_DIR_CD ,
                                  CSTMS_PORT_CD ,
                                  CSTMS_YD_CD
                                  ,CLPT_SEQ
                                FROM BKG_CSTMS_EUR_BL A , VSK_VSL_PORT_SKD B
                                WHERE 1=1
                                AND A.VSL_CD= B.VSL_CD
                                AND A.SKD_VOY_NO = B.SKD_VOY_NO
                                AND A.SKD_DIR_CD = B.SKD_DIR_CD
                                AND A.CSTMS_PORT_cD = B.VPS_PORT_cD 
                                AND B.CLPT_IND_SEQ = 1

                                AND (A.BL_NO, NVL(A.MSG_SND_NO, ' ')) = (
                                            SELECT A.BL_NO, NVL(MAX(A.MSG_SND_NO), ' ')
                                            FROM BKG_CSTMS_ADV_EUR_SND A 
                                            WHERE A.MSG_SND_NO LIKE (SELECT BL_NO FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no]) ||'%'
                                            AND EUR_EDI_MSG_TP_ID = 'ENS'
                                            GROUP BY A.BL_NO
                       					)


                            ) A
                         
                    ) ENS  -- ENS 내역
							      
           WHERE A.PORT_CD = ENS.POFE
             AND (A.TML_CD = ENS.POFE_YD OR A.TML_CD = 'ALL')  
        ) EU_ENTRY_OFC     

		,(  
            SELECT EUR_CSTMS_OFC_ID
            FROM BKG_CSTMS_EUR_CD_STUP A
            WHERE A.PORT_CD = BV.POD_CD
            AND (A.TML_CD = BV.POD_YD_CD OR A.TML_CD = 'ALL')  
            AND ROWNUM = 1
		) AS EU_POD_OFC                          

		, (
			SELECT DECODE(SUM(DECODE(CNTR_PRT_FLG, 'Y', 1, 0)), 0, 'N', 'Y')
			FROM BKG_CONTAINER
			WHERE BKG_NO = BK.BKG_NO

		) PART_LOAD

        , (

            SELECT NVL(TO_CHAR(CSTMS_ESTM_ARR_DT,'RRMMDDHH24MI'),' ')
            FROM BKG_CSTMS_EUR_BL
            WHERE 1=1
            AND MSG_SND_NO = (
                            SELECT MAX(MSG_SND_NO)
                            FROM BKG_CSTMS_ADV_EUR_SND A 
                            WHERE A.MSG_SND_NO LIKE (SELECT BL_NO FROM BKG_BOOKING WHERE BKG_NO = @[bkg_no]) ||'%'
                            AND EUR_EDI_MSG_TP_ID = 'ENS'
                        )
		    AND ROWNUM = 1

        ) AS POFE_ETA
        

	#if (${mode_type} == 'I')
		,NVL((
		      SELECT 'Y'
		      FROM BKG_VVD BV
		      WHERE 1=1
		      AND BV.POD_CD        IN  (SELECT VPS_PORT_CD
		                                 FROM VSK_VSL_PORT_SKD
		                                WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
		                                  AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
		                                  AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
		                                  AND CLPT_SEQ  > (    SELECT MIN(CLPT_SEQ)
		                                                         FROM VSK_VSL_PORT_SKD
		                                                        WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
		                                                          AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
		                                                          AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
		                                                          AND VPS_PORT_CD = @[search_pod_cd]
		                                                          AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
		                                                   )
		                                  AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
		
		                              )
		      AND BV.BKG_NO = @[bkg_no] 
              AND BV.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
		      AND BV.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
		      AND BV.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
		      AND ROWNUM = 1
		), 'N') AS TRANSIT_IND
	#else
		,NVL((
		      SELECT 'Y'
		      FROM BKG_VVD BV
		      WHERE 1=1
		      AND BV.POL_CD        IN  (SELECT VPS_PORT_CD
		                                 FROM VSK_VSL_PORT_SKD
		                                WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
		                                  AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
		                                  AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
		                                  AND CLPT_SEQ  < (    SELECT MAX(CLPT_SEQ)
		                                                         FROM VSK_VSL_PORT_SKD
		                                                        WHERE VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
		                                                          AND SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
		                                                          AND SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
		                                                          AND VPS_PORT_CD = @[search_pod_cd]
		                                                          AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
		                                                   )
		                                  AND NVL(SKD_CNG_STS_CD,'X') <> 'S'
		
		                              )
		      AND BV.BKG_NO = @[bkg_no] 
              AND BV.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
		      AND BV.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
		      AND BV.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
		      AND ROWNUM = 1
		), 'N') AS TRANSIT_IND
	#end     

         ,BCS.CUST_CNT_CD SHPRCN
	     ,BCS.CUST_SEQ    SHPRCD

         ,BCC.CUST_CNT_CD CNEECN
	     ,BCC.CUST_SEQ    CNEECD

		 ,BCN.CUST_CNT_CD NTFYCN
		 ,BCN.CUST_SEQ    NTFYCD

		, '' EXPOCD
   	
	#end

         ,LOC1.LOC_AMS_PORT_CD                 POL_AMS                                            		
         ,LOC1.LOC_NM                          POL_FULLNAME                                       		
         ,LOC2.LOC_AMS_PORT_CD                 POD_AMS                                           			
         ,LOC2.LOC_NM                          POD_FULLNAME                                       		
         ,LOC3.LOC_AMS_PORT_CD                 POR_AMS                                             		
         ,LOC3.LOC_NM                          POR_FULLNAME                                       		
         ,LOC4.LOC_AMS_PORT_CD                 DEL_AMS                                         		
         ,LOC4.LOC_NM                          DEL_FULLNAME                                       		
         ,DECODE(NVL(@[pol_cd],''), '', NVL(LOC5.UN_LOC_CD, BK.PST_RLY_PORT_CD), NVL(LOC5.UN_LOC_CD, BK.PRE_RLY_PORT_CD)) BLRLY		
         ,LOC5.LOC_AMS_PORT_CD RLY_AMS                                               							  
         ,LOC5.LOC_NM        RLY_FULLNAME                                                          		            
         ,OFC.LOC_CD         BLPLACE                                                                 	
         ,TO_CHAR(BBI.OBL_ISS_DT,'RRMMDD')        BLDATE  
                                                                	
                                              	
         ,SCE_TOKEN_NL_FNC(BCS.CUST_NM, 1)        SHPR1                                                                   	
         ,SCE_TOKEN_NL_FNC(BCS.CUST_NM, 2)        SHPR2                                                                   	
         ,SCE_TOKEN_NL_FNC(BCS.CUST_ADDR, 1)      SHPR3                                                                   	
         ,SCE_TOKEN_NL_FNC(BCS.CUST_ADDR, 2)      SHPR4                                                                   	
         ,SCE_TOKEN_NL_FNC(BCS.CUST_ADDR, 3)      SHPR5  


         ,SCE_TOKEN_NL_FNC(BCC.CUST_NM, 1)        CNEE1                                                                   	
         ,SCE_TOKEN_NL_FNC(BCC.CUST_NM, 2)        CNEE2                                                                   	
         ,SCE_TOKEN_NL_FNC(BCC.CUST_ADDR, 1)      CNEE3                                                                   	
         ,SCE_TOKEN_NL_FNC(BCC.CUST_ADDR, 2)      CNEE4                                                                   	
         ,SCE_TOKEN_NL_FNC(BCC.CUST_ADDR, 3)      CNEE5 
               
                                                 	
         ,SCE_TOKEN_NL_FNC(BCN.CUST_NM, 1)        NTFY1                                                                   	
         ,SCE_TOKEN_NL_FNC(BCN.CUST_NM, 2)        NTFY2                                                                   	
         ,SCE_TOKEN_NL_FNC(BCN.CUST_ADDR, 1)      NTFY3                                                                   	
         ,SCE_TOKEN_NL_FNC(BCN.CUST_ADDR, 2)      NTFY4                                                                   	
         ,SCE_TOKEN_NL_FNC(BCN.CUST_ADDR, 3)      NTFY5                                                                   	
         ,BCA.CUST_CNT_CD    NTFY2CN                                                                 	
         ,BCA.CUST_SEQ      NTFY2NM                                                                  	
         ,SCE_TOKEN_NL_FNC(BCA.CUST_NM, 1)       NTFY21                                                                   	
         ,SCE_TOKEN_NL_FNC(BCA.CUST_NM, 2)       NTFY22                                                                   	
         ,SCE_TOKEN_NL_FNC(BCA.CUST_ADDR, 1)     NTFY23                                                                   	
         ,SCE_TOKEN_NL_FNC(BCA.CUST_ADDR, 2)     NTFY24                                                                   	
         ,SCE_TOKEN_NL_FNC(BCA.CUST_ADDR, 3)     NTFY25                                                                   	
         ,BCF.CUST_CNT_CD   FFWDCN                                                                   	
         ,BCF.CUST_SEQ      FFWDCD                                                                   	
         ,SCE_TOKEN_NL_FNC(BCF.CUST_NM, 1)       FFWD1                                                                   	
         ,SCE_TOKEN_NL_FNC(BCF.CUST_NM, 2)       FFWD2                                                                    	
         ,SCE_TOKEN_NL_FNC(BCF.CUST_NM, 3)       FFWD3                                                                    	
         ,SCE_TOKEN_NL_FNC(BCF.CUST_NM, 4)       FFWD4                                                                    	
         ,SCE_TOKEN_NL_FNC(BCF.CUST_NM, 5)       FFWD5                                                                    	
         ,'DDE'             EXPOCN                          -- 브리질 전용                                         	
         
         ,SCE_TOKEN_NL_FNC(BCE.CUST_NM, 1)       EXPO1              -- 구주 전용 / 브라질은 값만 없음
         ,SCE_TOKEN_NL_FNC(BCE.CUST_NM, 2)       EXPO2              -- 구주 전용 / 브라질은 값만 없음
         ,SCE_TOKEN_NL_FNC(BCE.CUST_NM, 3)       EXPO3              -- 구주 전용 / 브라질은 값만 없음
         ,SCE_TOKEN_NL_FNC(BCE.CUST_NM, 4)       EXPO4              -- 구주 전용 / 브라질은 값만 없음
         ,SCE_TOKEN_NL_FNC(BCE.CUST_NM, 5)       EXPO5              -- 구주 전용 / 브라질은 값만 없음
                                                                         		
         ,BBI.BL_CPY_KNT            BLCOPY                                                                   	
         ,BBD.PCK_QTY               BLPKG                                                                    	
         ,BBD.PCK_TP_CD             BLPKGU  

		 ,BV.VSL_CD || BV.SKD_VOY_NO || BV.SKD_DIR_CD TRUNK_VVD    -- 구주 전용 / 브라질은 값만 없음
         
         ,BBD.WGT_UT_CD             		BL_WGT_UNIT                                                              	
         ,BBD.MEAS_UT_CD                    BL_MEA_UNIT                                                              	
         ,BK.RCV_TERM_CD || BK.DE_TERM_CD   RDTYPE                                                                   	
         ,BK.BKG_CGO_TP_CD          	    CARGOTYPE                                                                 
         
         ,'' BLCMD
         ,'' BLREPCMDCD
         ,'' AUS_QUAR

         ,'' 				TMP_COL1        																													            
         ,'' 				TMP_COL2        																													            
         ,''                TMP_COL3    																															
         ,''                TMP_COL4                                      														
         ,BK.BKG_NO			BKGNBR
         ,'' RGN_BKGNBR
         ,BR.PPD_RCV_OFC_CD PPDOFC                                                                   	
         ,BR.CLT_OFC_CD     CCTOFC                                                                   	
         ,'USA'             THDOFC                                              							
         ,BK.SC_NO          SCNO                                                                     	
         ,BK.RFA_NO         RFANO                                                                    	
         ,(
            --SELECT  DECODE(NVL(MAX(HIS_SEQ), '0'), '0', 'N', 'U') EDI_SEND_FLAG
            SELECT  NVL(MAX(HIS_SEQ), '0') EDI_SEND_FLAG
    		FROM	BKG_NTC_HIS
    		WHERE	BKG_NO	= @[bkg_no]
    		AND	NTC_KND_CD	= 'IM'
    		AND	EDI_ID	    = 'BRSAO'
    	   ) CUSTREF_NUM
         ,BK.MTY_PKUP_YD_CD EQREL                                                                    	
         ,TO_CHAR(BK.MTY_PKUP_DT, 'YYYYMMDDHH24MI')    EQPICKDT                                                                 	
         ,BK.MTY_RTN_YD_CD  EQRTN                                                                    	
		 ,NVL(BK.BL_NO,' ') IN_BL_NO
		 ,NVL(BK.BKG_NO,' ') IN_BKG_NO                                            
		 ,NVL(BK.BKG_CGO_TP_CD,' ') IN_BKG_CGO_TP_CD                              
		 ,NVL(BK.DCGO_FLG,' ') IN_DCGO_FLG                                        
		 ,NVL(BK.RC_FLG,' ') IN_RC_FLG                                            
		 ,NVL(BK.AWK_CGO_FLG,' ') IN_AWK_CGO_FLG                                  
		 ,NVL(BK.BB_CGO_FLG,' ') IN_BB_CGO_FLG                                    
		 ,NVL(BK.RD_CGO_FLG,' ') IN_RD_CGO_FLG                                    
         ,(
            SELECT BRZ_CSTMS_DUV_NM FROM BKG_CSTMS_BRZ_BL BRC
            WHERE  BRC.BL_NO = BK.BL_NO
          ) BR_DUV                                          -- 브리질 전용
         ,(
            SELECT BRZ_CSTMS_MF_ID FROM BKG_CSTMS_BRZ_BL BRC
            WHERE  BRC.BL_NO = BK.BL_NO
          ) BR_MID                                          -- 브리질 전용
  FROM   
        BKG_VVD BV
        ,BKG_BOOKING BK                                                                               
        ,BKG_BL_ISS  BBI                                                                              
        ,BKG_BL_DOC  BBD                                                                              
        ,BKG_RATE    BR                                                                               
        ,BKG_CUSTOMER BCS                                                                             
        ,BKG_CUSTOMER BCC                                                                             
        ,BKG_CUSTOMER BCN                                                                             
        ,BKG_CUSTOMER BCF                                                                             
        ,BKG_CUSTOMER BCA                                                                             
        ,BKG_CUSTOMER BCE                                                                             
        ,BKG_CSTMS_CMDT   CMD                                                                         
        ,MDM_LOCATION     LOC0                                                                        
        ,MDM_LOCATION     LOC1                                                                        
        ,MDM_LOCATION     LOC2                                                                        
        ,MDM_LOCATION     LOC3                                                                        
        ,MDM_LOCATION     LOC4                                                                        
        ,MDM_LOCATION     LOC5                                                                        
        ,MDM_ORGANIZATION OFC                                                                         
        ,MDM_COMMODITY    COM
    #if (${cnt_gubun} == 'BR') 
	    ,BKG_CSTMS_BRZ_BL BRC                                                                         
    #end
 WHERE   BK.BKG_NO          =   @[bkg_no]
   AND   BV.VSL_CD      = SUBSTR(@[vvd_cd], 1, 4)
   AND   BV.SKD_VOY_NO  = SUBSTR(@[vvd_cd], 5, 4)
   AND   BV.SKD_DIR_CD  = SUBSTR(@[vvd_cd], 9, 1)
   AND   BK.BKG_NO          =   BV.BKG_NO
   AND   BK.BKG_NO          =   BBI.BKG_NO      (+)
   AND   BK.BKG_NO          =   BBD.BKG_NO      (+)
   AND   BK.BKG_NO          =   BR.BKG_NO		(+)
   AND   BK.BKG_NO          =   BCS.BKG_NO      (+)
   AND   BCS.BKG_CUST_TP_CD =   'S'
   AND   BK.BKG_NO          =   BCC.BKG_NO      (+)
   AND   BCC.BKG_CUST_TP_CD(+) =   'C'
   AND   BK.BKG_NO          =   BCN.BKG_NO      (+)
   AND   BCN.BKG_CUST_TP_CD(+) =   'N'
   AND   BK.BKG_NO          =   BCF.BKG_NO      (+)
   AND   BCF.BKG_CUST_TP_CD(+) =   'F'
   AND   BK.BKG_NO          =   BCA.BKG_NO      (+)
   AND   BCA.BKG_CUST_TP_CD(+) =   'A'
   AND   BK.BKG_NO          =   BCE.BKG_NO      (+)
   AND   BCE.BKG_CUST_TP_CD(+) =   'E'
   
   AND   LOC0.LOC_CD(+)     =   DECODE(NVL(@[pol_cd],''), '', BV.POL_CD, BV.POD_CD)
   AND   BK.POR_CD         =   LOC3.LOC_CD  (+)
   AND   BK.POL_CD         =   LOC1.LOC_CD  (+)
   AND   BK.POD_CD         =   LOC2.LOC_CD  (+)
   AND   BK.DEL_CD         =   LOC4.LOC_CD  (+)
   AND   LOC5.LOC_CD(+)    = DECODE(NVL(@[pol_cd],''), '', NVL(BK.PST_RLY_PORT_CD,' '),NVL(BK.PRE_RLY_PORT_CD,' '))
   AND   BBI.OBL_ISS_OFC_CD      = OFC.OFC_CD(+)
   AND   BK.CMDT_CD         = COM.CMDT_CD(+)
   AND   BK.CMDT_CD         = CMD.MF_CMDT_CD(+)

#if (${cnt_gubun} == 'BR') 
   AND   BK.BL_NO 			= BRC.BL_NO(+)
#end
   AND   ROWNUM = 1			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="search_pod_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
