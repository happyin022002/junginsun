<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ArrivalNoticeDBDAOsearchArrNtcInfoListRSQL">
			<desc><![CDATA[0672-1]]></desc>
			<sql><![CDATA[
SELECT INQS.BKG_NO          AS BKG_NO
	 , INQS.VSL_FLG			AS VSL_FLG
	 , INQS.VSL_FLG_CNT_NM  AS VSL_FLG_CNT_NM
     , INQS.VSL_CD          AS VSL_CD     
     , INQS.SKD_VOY_NO      AS SKD_VOY_NO 
     , INQS.SKD_DIR_CD      AS SKD_DIR_CD  
     , INQS.VSL_NM          AS VSL_NM
     , INQS.BL_NO           AS BL_NO     
     , INQS.DE_TERM_CD      AS DE_TERM_CD
     , INQS.DEL_CD          AS DEL_CD     
     , INQS.HUB_LOC_CD      AS HUB_LOC_CD
     , INQS.POD_ARR_DT      AS POD_ARR_DT
     , INQS.DEL_ARR_DT      AS DEL_ARR_DT 
     , INQS.PKUP_AVAL_DT    AS PKUP_AVAL_DT
     , INQS.PKUP_FREE_DT    AS PKUP_FREE_DT
     , YD1.YD_CSTMS_NO      AS POD_FIRMS
     , INQS.PKUP_YD_CD      AS PKUP_YD_CD
     , YD2.YD_CSTMS_NO      AS PKUP_FIRMS
     , INQS.RTN_YD_CD       AS RTN_YD_CD
     , NVL(INQS.AN_FOM_CD,'GE')         AS AN_FOM_CD
     , NVL(INQS.DIFF_RMK, DRMK.AN_RMK ) AS DIFF_RMK   
     , NVL(INQS.CHN_AGN_CD,'*')         AS CHN_AGN_CD
     , INQS.NTC_RVIS_FLG    AS NTC_RVIS_FLG
     , INQS.IS_VALIDATED    AS IS_VALIDATED
     , INQS.VVD             AS VVD
     , INQS.CNTR_TYPE       AS CNTR_TYPE
     , '' AS SEQ
     , INQS.POD_CD          AS POD_CD
     , ( 
         SELECT DECODE( SUBSTR(INQS.DEL_CD,1,2),'CA',SUBSTR(GL.GDS_DESC,1,20),'N/A')
          FROM BKG_CSTMS_CND_GDS_LOC GL
         WHERE GL.POD_CD = INQS.POD_CD
         AND   GL.DEL_CD = INQS.DEL_CD
		 AND   NVL(GL.POD_YD_NO, 'NL' ) IN ('NL',SUBSTR( INQS.POD_YD_CD , 6) )
         AND   ROWNUM =1
       ) AS LOC_GOOD
         
  FROM (
          SELECT BKGM.BKG_NO  -- COMM -- KEY
			   , ANTC.VSL_FLG
			   ,(  SELECT MC1.CNT_NM 
                     FROM MDM_VSL_CNTR MVC , MDM_COUNTRY  MC1
                    WHERE MVC.VSL_CD = BKGM.VSL_CD
                      AND MVC.VSL_RGST_CNT_CD = MC1.CNT_CD(+)
                ) AS VSL_FLG_CNT_NM
               , BKGM.VSL_CD  -- COMM ---- VVD
               , BKGM.SKD_VOY_NO -- COMM ---- VVD
               , BKGM.SKD_DIR_CD -- COMM ---- VVD
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.VSL_NM
                         ,(SELECT VSL.VSL_ENG_NM FROM MDM_VSL_CNTR VSL WHERE VSL.VSL_CD = BKGM.VSL_CD AND ROWNUM = 1) ) AS VSL_NM
               , BKGM.BL_NO    
               , BKGM.DE_TERM_CD
               , BKGM.DEL_CD 
               , CSTM.HUB_LOC_CD
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.POD_ARR_DT
                         , BKGM.VPS_ETA_DT ) POD_ARR_DT  -- equals VPS_ETA_DT
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.DEL_ARR_DT
                         , NVL(TO_DATE(DECODE(SUBSTR(BKGM.COP_VAL, 1,14), '00000000000000', NULL, SUBSTR(BKGM.COP_VAL, 1,14)), 'YYYYMMDDHH24MISS'), BKGM.VPS_ETA_DT + BKGM.ADD_DT)
                       ) AS DEL_ARR_DT          ---- 16.DEL_ETA
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.PKUP_AVAL_DT
                         , NVL(TO_DATE(DECODE(SUBSTR(BKGM.COP_VAL, 1,14), '00000000000000', NULL, SUBSTR(BKGM.COP_VAL, 1,14)), 'YYYYMMDDHH24MISS') + 0.25, BKGM.VPS_ETA_DT + BKGM.ADD_DT)
                       ) AS PKUP_AVAL_DT        ---- 17.AVAIL DT
                 /* POD가 BEANR or NTRTM 일경우 */
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.PKUP_FREE_DT
                         ,NVL(DECODE( BKGM.POD_CD
                                     ,'BEANR',AVVD.DEM_FREE_DT
                                     ,'NLRTM',RVVD.DEM_FREE_DT
                                     ,BKG_FREE_TIME_END_DT_FNC(BKGM.BKG_NO)
                                    )
                              , NVL(TO_DATE(DECODE(SUBSTR(BKGM.COP_VAL, 1,14), '00000000000000', NULL, SUBSTR(BKGM.COP_VAL, 1,14)), 'YYYYMMDDHH24MISS') + 1.25 , BKGM.VPS_ETA_DT + BKGM.ADD_DT)
                             )
                        ) AS  PKUP_FREE_DT
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.PKUP_YD_CD
                         , NVL(DECODE( BKGM.POD_CD
                                       ,'BEANR',AHDG.ATTR_CTNT3
                                       ,'NLRTM',RCNV.ATTR_CTNT2
                                       , NULL
                                      )
                              , NVL(SUBSTR(BKGM.COP_VAL, 15), VSK_ETA_YD_CD)
                               )
                        ) AS PKUP_YD_CD
               , DECODE( ANTC.VSL_INFO_SET_FLG  --- VSL_INFO_SET_FLG에 영향받는 7항목(처리)
                         , 'Y', ANTC.RTN_YD_CD
                         , (SELECT RTYD.MCNTR_RTN_YD_CD
                              FROM BKG_PKUP_CNTR_RTN_YD RTYD
                             WHERE RTYD.POD_CD = BKGM.POD_CD 
                               AND RTYD.RAIL_DEST_CD = BKGM.DEL_CD 
                               AND RTYD.FNL_DEST_CD = CSTM.HUB_LOC_CD
                               AND RTYD.RTN_YD_SAV_OFC_CD = LOC.EQ_CTRL_OFC_CD
                               AND RTYD.DELT_FLG = 'N')
                       )  AS RTN_YD_CD
               , ANTC.AN_FOM_CD
               , ANTC.DIFF_RMK
               , NVL(BKGM.CHN_CSTMS_AGN_CD ,ANTC.CHN_AGN_CD) CHN_AGN_CD 
               , ANTC.NTC_RVIS_FLG
               , BKGM.IS_VALIDATED
               , BKGM.VSL_CD || BKGM.SKD_VOY_NO || BKGM.SKD_DIR_CD AS VVD
               , CASE WHEN DECODE(RC_FLG,'Y',1,0)     +DECODE(DCGO_FLG,'Y',1,0)+
                           DECODE(AWK_CGO_FLG,'Y',1,0)+DECODE(SOC_FLG,'Y',1,0) +DECODE(BB_CGO_FLG,'Y',1,0) > 1 THEN 'MX'
                      WHEN DECODE(RC_FLG,'Y',1,0)     +DECODE(DCGO_FLG,'Y',1,0)+
                           DECODE(AWK_CGO_FLG,'Y',1,0)+DECODE(SOC_FLG,'Y',1,0) +DECODE(BB_CGO_FLG,'Y',1,0) < 1 THEN 'DR'
                      WHEN RC_FLG      = 'Y' THEN 'RF'
                      WHEN DCGO_FLG    = 'Y' THEN 'DG'
                      WHEN AWK_CGO_FLG = 'Y' THEN 'AK'
                      WHEN SOC_FLG     = 'Y' THEN 'SO'
                      WHEN BB_CGO_FLG  = 'Y' THEN 'BB'END AS CNTR_TYPE
               , BKGM.POD_CD
               , BKGM.POD_YD_CD
               , BKGM.POD_NOD_CD
               , 1 AS TMPS
           FROM (
                   SELECT BKGM.BKG_NO                      AS BKG_NO
                        , BKGM.SAM_CNEE_NTFY_FLG           AS SAM_CNEE_NTFY_FLG
                        , BKGM.CUST_TO_ORD_FLG             AS CUST_TO_ORD_FLG
                        , DECODE( @[ts_flg],'Y', BKGM.PST_RLY_PORT_CD, BKGM.POD_CD)  AS POD_CD
						, BVVD.POD_YD_CD                   AS POD_YD_CD
                        , BKGM.POD_NOD_CD                  AS POD_NOD_CD
                        , BKGM.DEL_CD                      AS DEL_CD
                        , BVVD.VSL_CD                      AS VSL_CD
                        , BVVD.SKD_VOY_NO                  AS SKD_VOY_NO
                        , BVVD.SKD_DIR_CD                  AS SKD_DIR_CD
                        , BKGM.BL_NO                       AS BL_NO
                        , BKGM.DE_TERM_CD                  AS DE_TERM_CD
                        , VSKD.VPS_ETA_DT                  AS VPS_ETA_DT
                        , VSKD.YD_CD                       AS VSK_ETA_YD_CD
                        , CASE WHEN CCST.AN_SND_FLG = 'Y' OR NCST.AN_SND_FLG = 'Y' THEN 'Y' 
                            ELSE 'N' END                   AS IS_VALIDATED
                       , BKGM.BB_CGO_FLG                   AS BB_CGO_FLG
                       , BKGM.SOC_FLG                      AS SOC_FLG
                       , BKGM.AWK_CGO_FLG                  AS AWK_CGO_FLG
                       , BKGM.DCGO_FLG                     AS DCGO_FLG
                       , BKGM.RC_FLG                       AS RC_FLG
                       , DECODE (SUBSTR(BKGM.POD_CD,1,2)
                                 , 'US', 2 
                                 , DECODE(BKGM.POD_CD, BKGM.DEL_CD, 1, 2)
                                ) AS ADD_DT
                       , (SELECT  SUBSTR(
                                  MAX ( DECODE(COPD.ACT_CD, 'FITRDO', '1', '0') || NVL(TO_CHAR(COPD.PLN_DT, 'YYYYMMDDHH24MISS'), '00000000000000')
                                        || NVL(TO_CHAR(NVL(COPD.ACT_DT, COPD.ESTM_DT), 'YYYYMMDDHH24MISS'), '00000000000000')
                                        || COPD.NOD_CD 
                                      ) , 16) COP_VAL
                             FROM SCE_COP_HDR COPM
                                , SCE_COP_DTL COPD
                            WHERE SUBSTR(BKGM.DEL_CD, 1,2) = 'US'
                              AND COPM.BKG_NO = BKGM.BKG_NO 
                              AND COPD.COP_NO = COPM.COP_NO
                              AND COPM.COP_STS_CD <> 'X'
                              AND COPD.ACT_CD IN ('FITRDO', 'FUVMAD')  -- FITRDO우선 처리
                         ) AS COP_VAL
						, AGNT.CHN_CSTMS_AGN_CD CHN_CSTMS_AGN_CD
               --        ,  DECODE(SUBSTR(BKGM.DEL_CD, 1,2), 'US', BKG_IB_AN_COP_FNC(BKGM.BKG_NO), NULL) AS COP_VAL
						, VSLCNTR.VSL_RGST_CNT_CD AS VSL_RGST_CNT_CD
                    FROM VSK_VSL_PORT_SKD VSKD
                       , BKG_VVD BVVD
                       , BKG_CUSTOMER CCST
                       , BKG_CUSTOMER NCST 
                       , BKG_BOOKING BKGM
					   , BKG_CSTMS_CHN_AGN_STUP AGNT
					   , MDM_VSL_CNTR VSLCNTR
                   WHERE 1 = 1
#if (${sch_tp} == 'V') 
                     AND BVVD.VSL_CD     = SUBSTR(@[vvd], 1,4) 
                     AND BVVD.SKD_VOY_NO = SUBSTR(@[vvd], 5,4)
                     AND BVVD.SKD_DIR_CD = SUBSTR(@[vvd], 9,1)
                     AND BVVD.POD_CD     = @[pod_cd]
#elseif (${sch_tp} == 'D') 
                     AND VSKD.VPS_ETA_DT 
                         BETWEEN TO_DATE(@[vps_eta_dt_start], 'YYYY-MM-DD') 
                             AND TO_DATE(@[vps_eta_dt_end], 'YYYY-MM-DD') +0.99999  -- DURATION (OPTIONAL 2)
                     AND VSKD.VPS_PORT_CD = @[pod_cd] --------- ts_flg != Y
#elseif (${sch_tp} == 'B') 
                     AND BKGM.BL_NO = @[bl_no]  -- BL NO (OPTIONAL 5-1)
#else 
                     AND 1 = 0
#end
#if (${sch_tp} == 'D') 
                     AND BVVD.VSL_CD = VSKD.VSL_CD   -- Join의 방향성 때문에 Duration인 경우와 아닌 경우를 분리함
                     AND BVVD.SKD_VOY_NO = VSKD.SKD_VOY_NO
                     AND BVVD.SKD_DIR_CD = VSKD.SKD_DIR_CD
                     AND BVVD.POD_CD = VSKD.VPS_PORT_CD
                     AND BVVD.POD_CLPT_IND_SEQ = VSKD.CLPT_IND_SEQ
#else
                     AND BVVD.VSL_CD = VSKD.VSL_CD(+)  -- Duration이 아닌경우에는 데이터를 추출하기 위하여 해당과 같이 처리한다. (20100106 Park Mangeon)
                     AND BVVD.SKD_VOY_NO = VSKD.SKD_VOY_NO(+)
                     AND BVVD.SKD_DIR_CD = VSKD.SKD_DIR_CD(+)
                     AND BVVD.POD_CD = VSKD.VPS_PORT_CD(+)
                     AND BVVD.POD_CLPT_IND_SEQ = VSKD.CLPT_IND_SEQ(+)
#end
                     AND BKGM.BKG_NO =BVVD.BKG_NO
#if ( ${ts_flg} != 'Y')     
                     AND BKGM.POD_CD = BVVD.POD_CD
#else
                     AND BKGM.PST_RLY_PORT_CD = BVVD.POD_CD
#end
                     AND BKGM.BKG_STS_CD NOT IN ('X', 'S')
                     AND BKGM.BL_NO IS NOT NULL  -- AS IS와 동일하게 하기위해 추가 20091124
                     AND BKGM.BKG_CGO_TP_CD IN ('F', 'R')
                     AND CCST.BKG_NO = BKGM.BKG_NO
                     AND CCST.BKG_CUST_TP_CD = 'C'
                     AND NCST.BKG_NO = BKGM.BKG_NO
                     AND NCST.BKG_CUST_TP_CD = 'N'
					 AND BKGM.POD_CD = AGNT.POD_CD(+)
					 AND BKGM.SLAN_CD = AGNT.SLAN_CD(+)
                     AND (
                            DECODE(CCST.VAL_CD, 'S', 0, 1) 
                          + DECODE(NCST.VAL_CD, 'S', 0, 1)
                          ) > 0   --- NVL(VAL_CD, '*') <> 'S' 의 처리 -- Consignee, Notify둘다 Skip이면 출력안함, 아닌경우 출력함 20100108 Park Mangeon
#if (${sch_tp} != 'B' && ${del_cd} != '') 
                     AND BKGM.DEL_CD LIKE @[del_cd] || '%'  -- DELIVERY PORT CD (OPTIONAL 4)
#end
#if (${sch_tp} != 'B' && ${pol_cd} != '') 
                     AND BKGM.POL_CD = @[pol_cd]
#end
#if (${s_no} != '' && ${c_no} != '') 
                     AND BKGM.SC_NO = @[s_no] || @[c_no] -- SC NO (OPTINALE 9)
#end
#if (${cust_nm} != '') 
                     AND (UPPER(CCST.CUST_NM) like '%' || UPPER(@[cust_nm]) || '%'   -- name
                          OR UPPER(NCST.CUST_NM) like '%' || UPPER(@[cust_nm]) || '%'   -- name
                         )
#end
#if (${cust_cnt_cd} != '') 
                     AND (   CCST.CUST_CNT_CD = @[cust_cnt_cd]
                          OR NCST.CUST_CNT_CD = @[cust_cnt_cd] )
#end
#if (${cust_seq} != '')
                     AND (   CCST.CUST_SEQ = TO_NUMBER(@[cust_seq])
                          OR NCST.CUST_SEQ = TO_NUMBER(@[cust_seq]) )
#end
#if (${cust_ref_no} != '') 
                     AND (BKGM.BKG_NO) IN (SELECT BR.BKG_NO
                                             FROM BKG_REFERENCE BR
                                            WHERE BR.BKG_REF_TP_CD = 'BKPO'
                                              AND BR.BKG_NO = BKGM.BKG_NO
                                              AND BR.CUST_REF_NO_CTNT  = @[cust_ref_no]  -- 고객이 요청하는 번호 (0ptional 8)
                                          ) -- BKG REFERENCE NUMBER -- (OPTIONAL END )
#end
#if (${is_validated} != '') 
                     AND CASE WHEN CCST.AN_SND_FLG = 'Y' OR NCST.AN_SND_FLG = 'Y' THEN 'Y' 
                            ELSE 'N' END = @[is_validated]
#end
					 AND VSLCNTR.VSL_CD(+)        = BKGM.VSL_CD
                ) BKGM
                LEFT OUTER JOIN BKG_ARR_NTC ANTC
                  ON  (ANTC.BKG_NO = BKGM.BKG_NO)
                LEFT OUTER JOIN BKG_CSTMS_ADV_BL CSTM
                  ON ( CSTM.CNT_CD = 'US'
                       AND CSTM.BL_NO  = BKGM.BL_NO )
                LEFT OUTER JOIN MDM_LOCATION LOC
                  ON ( LOC.LOC_CD  = BKGM.DEL_CD)
                LEFT OUTER JOIN BKG_CSTMS_ANR_VVD  AVVD  -- ANRBS
                  ON ( AVVD.VSL_CD  = BKGM.VSL_CD
                       AND AVVD.SKD_VOY_NO = BKGM.SKD_VOY_NO
                       AND AVVD.SKD_DIR_CD = BKGM.SKD_DIR_CD )
                LEFT OUTER JOIN BKG_HRD_CDG_CTNT AHDG     -- ANRBS SUB CODE
                  ON ( AHDG.HRD_CDG_ID = 'ANR_CSTMS_BRTH_CD'
                       AND AHDG.ATTR_CTNT2 = AVVD.BRTH_DESC  )
                LEFT OUTER JOIN BKG_CSTMS_RTM_VSL  RVVD  -- NLRTM   
                  ON ( RVVD.VSL_CD      = BKGM.VSL_CD
                       AND RVVD.SKD_VOY_NO  = BKGM.SKD_VOY_NO
                       AND RVVD.SKD_DIR_CD  = BKGM.SKD_DIR_CD
                       AND RVVD.VSL_CALL_REF_STS_CD <> 'C' )
                LEFT OUTER JOIN BKG_CSTMS_CD_CONV_CTNT RCNV  -- NLRTM SUB 
                  ON ( RCNV.CNT_CD = 'NL'
                       AND RCNV.CSTMS_DIV_ID = 'BERTH_CD'
                       AND RCNV.ATTR_CTNT1 = RVVD.BRTH_CTNT) 
       ) INQS
     , MDM_YARD YD1  -- POD FIRMS
     , MDM_YARD YD2  -- P/Up FIRMS 
     , (SELECT 1 AS TMPS
             , MAX(AN_RMK) AS AN_RMK
             , COUNT(1) AS RMK_CNT
          FROM BKG_USR_DFLT_SET 
         WHERE USR_ID = @[usr_id]
       ) DRMK
 WHERE 1 = 1
   AND YD1.YD_CD(+) = INQS.POD_NOD_CD
   AND YD2.YD_CD(+) = INQS.PKUP_YD_CD
 ORDER BY INQS.VVD
        , INQS.BKG_NO			]]></sql>
			<params>
				<param name="ts_flg" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="vps_eta_dt_start" type="12" value="" out="N"/>
				<param name="vps_eta_dt_end" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="s_no" type="12" value="" out="N"/>
				<param name="c_no" type="12" value="" out="N"/>
				<param name="cust_nm" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="cust_ref_no" type="12" value="" out="N"/>
				<param name="is_validated" type="12" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
