<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCTransportationAdditionalChargeProposalDBDAORsltAddChgHistoryListRSQL">
			<desc><![CDATA[Arbitrary Amend History List 조회
2012.02.23 이석준[CHM-201216153-01] S/C Amendment History 화면 기능 개선 요청]]></desc>
			<sql><![CDATA[
SELECT A.PROP_NO
     , A.AMDT_SEQ
     , A.SVC_SCP_CD
     , A.ADD_CHG_TP_CD
     , A.ORG_DEST_TP_CD
     , A.ADD_CHG_SEQ
     , A.ROUT_PNT_LOC_TP_CD
     , A.ROUT_PNT_LOC_DEF_CD
     , (SELECT LOC_NM 
          FROM MDM_LOCATION 
         WHERE LOC_CD = A.ROUT_PNT_LOC_DEF_CD
           AND DELT_FLG = 'N') AS ROUT_PNT_LOC_DEF_NM
     , A.LOC_GRD_CNT_CD
     , A.LOC_GRD_CD
     , A.BSE_PORT_TP_CD
     , A.BSE_PORT_DEF_CD
     , A.VIA_PORT_TP_CD
     , A.VIA_PORT_DEF_CD
     , DECODE(A.DIR_CALL_FLG, 'Y', '1', '0') AS DIR_CALL_FLG
     , A.RAT_UT_CD
     , A.PRC_CGO_TP_CD
     , A.PRC_TRSP_MOD_CD
     , A.RCV_DE_TERM_CD
     , PRC_CMDT_TP_CD
     , PRC_CMDT_DEF_CD
     , A.CURR_CD 
     , A.PROP_FRT_RT_AMT
     , A.COFFR_FRT_RT_AMT
     , A.FNL_FRT_RT_AMT
     , DECODE(A.GRI_APPL_TP_CD, 'N', '', A.GRI_APPL_TP_CD) AS GRI_APPL_TP_CD
     , DECODE(A.GRI_APPL_AMT, 0, NULL, A.GRI_APPL_AMT) AS GRI_APPL_AMT
     , A.PRC_PROG_STS_CD
     , A.SRC_INFO_CD
     , A.ACPT_USR_ID
     , (SELECT USR_NM FROM COM_USER WHERE USR_ID = A.ACPT_USR_ID)||' / '||A.ACPT_OFC_CD ACPT_USR_NM
     , A.ACPT_OFC_CD
     , TO_CHAR(A.ACPT_DT, 'YYYYMMDD') ACPT_DT
     , A.N1ST_CMNC_AMDT_SEQ
     , (SELECT TO_CHAR(EFF_DT, 'YYYYMMDD') FROM PRI_SP_SCP_MN WHERE PROP_NO = A.PROP_NO 
             AND AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ AND SVC_SCP_CD = A.SVC_SCP_CD) EFF_DT
     , CASE WHEN A.AMDT_SEQ = @[amdt_seq] THEN TO_CHAR(B.EXP_DT,'YYYYMMDD')
     		ELSE (SELECT CASE WHEN A.AMDT_SEQ <= N.AMDT_SEQ THEN TO_CHAR(B.EFF_DT - 1,'YYYYMMDD')
                              ELSE TO_CHAR(N.EXP_DT,'YYYYMMDD')
                         END AS EXP_DT
                    FROM PRI_SP_SCP_MN N
                   WHERE PROP_NO = B.PROP_NO AND AMDT_SEQ = B.AMDT_SEQ-1 AND SVC_SCP_CD = B.SVC_SCP_CD)    
       END EXP_DT
     , A.ADD_CHG_NOTE_CTNT
     , A.NOTE_DP_SEQ
     , A.CRE_USR_ID
     , A.CRE_DT
     , A.UPD_USR_ID
     , A.UPD_DT
  FROM PRI_SP_SCP_TRSP_ADD_CHG A
     , PRI_SP_SCP_MN B
 WHERE A.PROP_NO = @[prop_no]
   AND A.AMDT_SEQ IN (@[amdt_seq], DECODE((SELECT LGCY_IF_FLG FROM PRI_SP_MN TMP WHERE TMP.PROP_NO = @[prop_no] AND TMP.AMDT_SEQ = @[amdt_seq]), 'Y', @[amdt_seq], @[amdt_seq]-1))
   AND A.SVC_SCP_CD = @[svc_scp_cd]
   AND A.ADD_CHG_TP_CD = @[add_chg_tp_cd]
   AND A.ORG_DEST_TP_CD = @[org_dest_tp_cd]
   AND A.PROP_NO = B.PROP_NO
   AND A.SVC_SCP_CD = B.SVC_SCP_CD
   AND B.AMDT_SEQ = @[amdt_seq]
   AND ((A.AMDT_SEQ = @[amdt_seq] 
#if (${con_flg} == '0') 
        AND A.N1ST_CMNC_AMDT_SEQ = DECODE((SELECT LGCY_IF_FLG FROM PRI_SP_MN TMP WHERE TMP.PROP_NO = @[prop_no] AND TMP.AMDT_SEQ = @[amdt_seq]), 'Y', A.N1ST_CMNC_AMDT_SEQ, @[amdt_seq])
#end
		AND A.SRC_INFO_CD <> DECODE((SELECT LGCY_IF_FLG FROM PRI_SP_MN TMP WHERE TMP.PROP_NO = @[prop_no] AND TMP.AMDT_SEQ = @[amdt_seq]), 'Y', 'AD', 'ZZ'))
	OR (A.AMDT_SEQ = @[amdt_seq]-1 
		AND A.SRC_INFO_CD <> 'AD'
		AND NOT EXISTS(SELECT 'X' FROM PRI_SP_SCP_TRSP_ADD_CHG C
                        WHERE C.PROP_NO = A.PROP_NO
                          AND C.AMDT_SEQ = @[amdt_seq]
                          AND C.SVC_SCP_CD = A.SVC_SCP_CD
						  AND C.ADD_CHG_TP_CD = A.ADD_CHG_TP_CD
                          AND C.ORG_DEST_TP_CD = A.ORG_DEST_TP_CD
                          AND C.ADD_CHG_SEQ = A.ADD_CHG_SEQ
                          AND C.N1ST_CMNC_AMDT_SEQ = A.N1ST_CMNC_AMDT_SEQ)
	   )
	)
 #if (${con_flg} == '0') 
AND  0=0
#else
AND 1=1
#end
ORDER BY LAST_VALUE(A.ROUT_PNT_LOC_DEF_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST 
     , LAST_VALUE(A.BSE_PORT_DEF_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , LAST_VALUE(A.DIR_CALL_FLG) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) DESC
     , LAST_VALUE(A.VIA_PORT_DEF_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , LAST_VALUE(A.PRC_TRSP_MOD_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , LAST_VALUE(A.RCV_DE_TERM_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , LAST_VALUE(A.PRC_CGO_TP_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , LAST_VALUE(A.RAT_UT_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , LAST_VALUE(A.CURR_CD) OVER (PARTITION BY A.ADD_CHG_SEQ ORDER BY A.AMDT_SEQ ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) NULLS FIRST
     , A.ADD_CHG_SEQ, A.AMDT_SEQ			]]></sql>
			<params>
				<param name="amdt_seq" type="12" value="" out="N"/>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="add_chg_tp_cd" type="12" value="" out="N"/>
				<param name="org_dest_tp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
