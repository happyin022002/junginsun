<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CostStructureDBDAOSearchCostStructure0137List2RSQL">
			<desc><![CDATA[NODE, LINK 컬럼 혹은 LIST 조회
History--------------------------------
2011.06.21 이행지 [CHM-201111781-01] [MAS] 평균단가 입력화면 R/Lane 조건추가 검토요청  - Node Cost단가화면에 R.Lane 조건 추가
2011.10.24 전윤주 [CHM-201113848-01] EMU 단가 생성 로직 보완 - SMFU~ 계정에 대해서는 QTY는 0으로 반영하고 AMT만 추가될 수 있도록 수정(Surcharge 계정은 QTY count 안함)
2012.11.29 원종규 [CHM-201221694-01] surcharge loigc을 적용하는 계정 조건을 기존 SMFU~에서 S~로 시작하는 모든 계정으로 변경
2014.08.27 박은주 [CHM-201431751] [MAS] Link U/C Adjustment 조회/입력조건의 Vendor 추가요청
2014.10.06 박은주 [CHM-201432147] [MAS] Node/Link U/C Adjustment 화면 : COST_ACT_GRP_CD 추가 , CO_CD 제거 요청]]></desc>
			<sql><![CDATA[
#if (${f_table_name} != 'MAS_NOD_AVG_STND_COST')
SELECT
#if (${f_row_count} != 'Y')
        A.COST_YRMON
       ,A.FULL_MTY_CD
       ,A.CNTR_TPSZ_CD
       ,A.COST_LOC_GRP_CD
       ,A.LNK_FM_NOD_CD
       ,A.LNK_TO_NOD_CD
       ,B.STND_COST_CD
       ,A.COST_ACT_GRP_CD
       ,A.MAS_COST_SRC_CD AS MAS_COST_SRC_CD_V
       ,A.MAS_COST_SRC_CD
       ,LPAD(A.VNDR_SEQ,6,'0') VNDR_SEQ
       ,A.LOCL_CURR_CD
       ,A.COST_FX_FLG
       ,A.STND_COST_USD_AMT
       ,A.LNK_TTL_QTY
       ,A.LNK_TTL_AMT
       ,A.COST_VOL_CD
      ,(    SELECT DECODE(SUM(DECODE(SUBSTR(MAS_COST_SRC_CD, 1, 1), 'S', 0, LNK_TTL_QTY))
                         , 0, null
                         ,ROUND(SUM(LNK_TTL_AMT)/SUM(DECODE(SUBSTR(MAS_COST_SRC_CD, 1, 1), 'S', 0, LNK_TTL_QTY)), 3))
            FROM   MAS_LNK_AVG_STND_COST
            WHERE  COST_YRMON       =  A.COST_YRMON
            AND    LNK_FM_NOD_CD    =  A.LNK_FM_NOD_CD
            AND    LNK_TO_NOD_CD    =  A.LNK_TO_NOD_CD
            AND    CO_CD            =  A.CO_CD
            AND    CNTR_TPSZ_CD     =  A.CNTR_TPSZ_CD
            AND    FULL_MTY_CD      =  A.FULL_MTY_CD
            AND    COST_LOC_GRP_CD  = A.COST_LOC_GRP_CD ) AS MTY_UC_AMT
#else
COUNT(*) ROWCNT 
#end
FROM MAS_LNK_AVG_STND_COST A, MAS_COST_SRC_ACCT B
WHERE A.MAS_COST_SRC_CD = B.MAS_COST_SRC_CD
    #foreach( ${condition} in ${conditionArr})
    AND A.${condition.colName} ${condition.inEquality} ${condition.value}
    #end
#else
SELECT
#if (${f_row_count} != 'Y')
         A.COST_YRMON
        ,A.FULL_MTY_CD
        ,A.CNTR_TPSZ_CD
        ,A.COST_LOC_GRP_CD
        ,A.NOD_CD
        ,A.SLAN_CD -- 2011.06.21 추가
        ,A.TRD_CD
        ,A.COST_ACT_GRP_CD
        ,B.STND_COST_CD
        ,A.MAS_COST_SRC_CD AS MAS_COST_SRC_CD_V
        ,A.MAS_COST_SRC_CD
        ,A.LOCL_CURR_CD          LOCL_CURR_CD
        ,A.COST_FX_FLG           COST_FX_FLG
        ,A.STND_COST_USD_AMT     STND_COST_USD_AMT
        ,A.NOD_TTL_QTY           NOD_TTL_QTY
        ,A.NOD_TTL_AMT           NOD_TTL_AMT
        ,A.COST_VOL_CD           COST_VOL_CD
#else
COUNT(*) ROWCNT
#end
FROM MAS_NOD_AVG_STND_COST A, MAS_COST_SRC_ACCT B
WHERE A.MAS_COST_SRC_CD = B.MAS_COST_SRC_CD
    #foreach( ${condition} in ${conditionArr})
    AND A.${condition.colName} ${condition.inEquality} ${condition.value}
    #end
#end			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
