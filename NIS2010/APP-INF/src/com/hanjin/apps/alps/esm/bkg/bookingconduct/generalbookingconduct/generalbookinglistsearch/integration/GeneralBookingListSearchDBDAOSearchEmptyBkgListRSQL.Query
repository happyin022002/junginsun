<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingListSearchDBDAOSearchEmptyBkgListRSQL">
			<desc><![CDATA[Empty REPO BKG Inquiry
2011.05.16 이일민 [CHM-201110731] EQR > Empty Repo BKG Inquiry의 POL,POD date 컬럼 추가
2011.06.13 나상보 [CHM-201111555-01] [EQR] R9 코드 생성에 따른 EQR 모듈 보완 작업 요청
2013.10.10 최문환 [CHM-201326810] MT BKG Inquiry 화면 상 GOH CNTR 대수 표시 방법 변경
2014.09.13 신용찬 [ ] ETA, ETB DATE 로직보완 수정(DOUBLE CALLING 적용)
2015.07.30 신용찬 [CHM-201537230] Empty Repo BKG Inquiry 화면 조회옵션 추가
2016.01.26 문동선 [CHM-201539624] A5 컨테이너 타입 추가에 따른 BKG/DOC 시스템 보완]]></desc>
			<sql><![CDATA[
SELECT DISTINCT BK.BKG_NO
      ,BK.BL_NO
      ,BK.MTY_BKG_STS_CD    IND
      ,DECODE(BK.MTY_BKG_STS_CD, 'S', 'SOUND', 'H', 'HANGER RACK', 'D', 'DAMAGED') IND_DESC
      ,NVL((
              SELECT 'Y' 
              FROM BKG_CONTAINER CNTR 
              WHERE BK.BKG_NO = CNTR.BKG_NO 
              AND   MCNTR_BDL_NO IS NOT NULL 
              AND   ROWNUM = 1
            )
            ,'N'
          ) BUNDLE
      ,CASE WHEN (
                   SELECT COUNT(1) 
                   FROM BKG_VVD VVD 
                   WHERE BK.BKG_NO = VVD.BKG_NO
                  ) > 1 
            THEN 'Y' 
            ELSE 'N' 
       END TS
      ,BK.VSL_CD||BK.SKD_VOY_NO||BK.SKD_DIR_CD VVD
      ,(
          SELECT BK.SLAN_CD 
          FROM VSK_VSL_SKD SKD 
          WHERE SKD.VSL_CD     = BK.VSL_CD 
          AND   SKD.SKD_VOY_NO = BK.SKD_VOY_NO 
          AND   SKD_DIR_CD     = BK.SKD_DIR_CD
       ) LANE
      ,BK.MTY_SPLIT_AVAL_CD EMT
      ,DECODE(BK.MTY_SPLIT_AVAL_CD, 'W', 'WATER', 'Z', 'SINGLE POD', 'C', 'MULTI POD') EMT_DESC
      ,BK.POL_CD||SUBSTR(BK.POL_NOD_CD, 6, 2) POL_CD
      
      -- 2015.07.30 신용찬 [CHM-201537230] Empty Repo BKG Inquiry 화면 조회옵션 추가
      -- S: SPLIT 이면 BKG_BOOKING 에서 조회, 아니면 EQR 에서 POD 조회 (XXXXX 처리 보완 요청)
      --,BK.POD_CD||SUBSTR(BK.POD_NOD_CD, 6, 2) POD_CD
      ,DECODE(BK.BKG_CRE_TP_CD, 'S', BK.POD_CD||SUBSTR(BK.POD_NOD_CD, 6, 2), EQ.POD_YD_CD) POD_CD

      ,NVL(
			      (
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 1, 0)) 
                FROM BKG_CONTAINER CNTR
                WHERE BK.BKG_NO = CNTR.BKG_NO
            )
			     ,(
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', OP_CNTR_QTY, 0)) 
                FROM BKG_QUANTITY QTY
                WHERE BK.BKG_NO = QTY.BKG_NO
            )
			) TEU        
      ,NVL(
			      (
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 0, 1)) 
                FROM BKG_CONTAINER CNTR
                WHERE BK.BKG_NO = CNTR.BKG_NO
            )
			     ,(
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 0, OP_CNTR_QTY)) 
                FROM BKG_QUANTITY QTY
                WHERE BK.BKG_NO = QTY.BKG_NO
            )
			) FEU
		  ,NVL(
			      (
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 1, 0)) 
                FROM BKG_CONTAINER CNTR
                WHERE BK.BKG_NO = CNTR.BKG_NO
            )
			     ,(
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', OP_CNTR_QTY, 0)) 
                FROM BKG_QUANTITY QTY
                WHERE BK.BKG_NO = QTY.BKG_NO
            )
		   ) 
		  + 
		  (
		   NVL(
			      (
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 0, 1)) 
                FROM BKG_CONTAINER CNTR
                WHERE BK.BKG_NO = CNTR.BKG_NO
            )
			     ,(
			          SELECT SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 0, OP_CNTR_QTY)) 
                FROM BKG_QUANTITY QTY
                WHERE BK.BKG_NO = QTY.BKG_NO
            )
		    ) * 2  
		  ) GTTL
      ,BK.BKG_OFC_CD
      ,SUBSTR(BKG_JOIN_FNC(CURSOR(
                                  SELECT CNTR_TPSZ_CD||':'||SUM(OP_CNTR_QTY)
                                  FROM BKG_QUANTITY QTY
                                  WHERE BK.BKG_NO = QTY.BKG_NO
                                  GROUP BY CNTR_TPSZ_CD
                                 )
                          ), 1, 200
             ) CNTR_VOLUMN
      ,TO_CHAR(BK.BKG_CRE_DT, 'YYYYMMDD HH24:MI') BOOKING_DATE
      ,NVL(
            (
                SELECT TO_CHAR(MAX(CNTR.CGO_RCV_DT), 'YYYYMMDD HH24:MI')
	              FROM BKG_CONTAINER CNTR
	              WHERE BK.BKG_NO = CNTR.BKG_NO
	          )			
			     ,(
			          SELECT TO_CHAR(BKG_CRE_DT, 'YYYYMMDD HH24:MI')
				        FROM BKG_BOOKING DT, BKG_CONTAINER CNTR
				        WHERE DT.BKG_NO = BK.BKG_NO
                AND   DT.BKG_NO = CNTR.BKG_NO
				        AND   ROWNUM    = 1
				    )
			 ) CNTR_ATTACH_DATE				  
      ,(
           SELECT MAX(SKD.VPS_ETB_DT)
           FROM VSK_VSL_PORT_SKD SKD
           WHERE SKD.VSL_CD      = BK.VSL_CD
           AND   SKD.SKD_VOY_NO  = BK.SKD_VOY_NO
           AND   SKD.SKD_DIR_CD  = BK.SKD_DIR_CD
           AND   SKD.VPS_PORT_CD = BK.POL_CD
       ) AS POL_ETB

-- ROB SPLIT 의 ETB 를 정확히 추출하기 위해 수정, 신용찬, 2015-12-15, 송현애 과장 요청
--      ,(
--           SELECT MIN(SKD.VPS_ETB_DT)
--           FROM VSK_VSL_PORT_SKD SKD
--           WHERE SKD.VSL_CD      = BK.VSL_CD
--           AND   SKD.SKD_VOY_NO  = BK.SKD_VOY_NO
--           AND   SKD.SKD_DIR_CD  = BK.SKD_DIR_CD
--           -- 2015.07.30 신용찬 [CHM-201537230] Empty Repo BKG Inquiry 화면 조회옵션 추가
--           --AND   SKD.VPS_PORT_CD = BK.POD_CD
--           AND SKD.VPS_PORT_CD = DECODE(BK.BKG_CRE_TP_CD, 'S', BK.POD_CD, SUBSTR(EQ.POD_YD_CD,0,5))
--       ) AS POD_ETA 

      ,CASE WHEN EQ.MTY_BKG_SPLIT_FLG = 'Y' AND EQ.MTY_ROB_FLG = 'Y' 
            THEN
            (
                 SELECT POD_ETB_DT 
                 FROM EQR_CTRL_MTY_BKG_EXE
                 WHERE MTY_BKG_NO = BK.BKG_NO
             )             
            ELSE
            (
                 SELECT MIN(SKD.VPS_ETB_DT)
                 FROM VSK_VSL_PORT_SKD SKD
                 WHERE SKD.VSL_CD      = BK.VSL_CD
                 AND   SKD.SKD_VOY_NO  = BK.SKD_VOY_NO
                 AND   SKD.SKD_DIR_CD  = BK.SKD_DIR_CD
                 -- 2015.07.30 신용찬 [CHM-201537230] Empty Repo BKG Inquiry 화면 조회옵션 추가
                 --AND   SKD.VPS_PORT_CD = BK.POD_CD
                 AND SKD.VPS_PORT_CD = DECODE(BK.BKG_CRE_TP_CD, 'S', BK.POD_CD, SUBSTR(EQ.POD_YD_CD,0,5))
             ) 
        END  POD_ETA  
             				  
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D2') D2
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D4') D4
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D5') D5
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D7') D7
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'DX') DX
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'R2') R2
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'R5') R5
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'R9') R9
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'F2') F2
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'F4') F4
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'F5') F5
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O2') O2
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O4') O4
	  ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O5') O5
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O7') O7
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'A2') A2
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'A4') A4
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'A5') A5
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'S2') S2
      ,(SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'S4') S4
	  ,(SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D2' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D2_H
      ,(SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D4' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D4_H
      ,(SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D5' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D5_H
      ,(SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D7' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D7_H
      
      ,SUBSTR(BK.INTER_RMK, 1, 300) REMARK

FROM BKG_BOOKING BK, 
    (
        SELECT BK.BKG_NO
              ,BK.FM_BKG_NO
        FROM BKG_BOOKING BK
#if (${bkg_no} == '' && ${bl_no} == '')      
	#if (${vvd_cd} != '')  
	          ,BKG_VVD VVD  
	#end
	#if (${cntr_no1} != '')   
	          ,BKG_CONTAINER CNTR
    #elseif (${cntr_no1} == '' && (${cntrTpsz} != '' && ${tpsztype} != ''))  
	          ,BKG_CONTAINER CNTR
              ,BKG_QUANTITY  QTY
	#end
	#if (${pod_cd} != '') 
              ,EQR_CTRL_MTY_BKG_EXE EQ
    #end
	#if (${bkg_date_tp} == 'E')
		        ,(
                 SELECT SKD.VPS_ETA_DT
                       ,BK.BKG_NO
                       ,VVD.POD_CD
                 FROM BKG_BOOKING BK
                     ,BKG_VVD VVD
                     ,VSK_VSL_PORT_SKD SKD
                 WHERE BK.BKG_NO            = VVD.BKG_NO
                 AND   BK.POD_CD            = VVD.POD_CD
                 AND   VVD.VSL_PRE_PST_CD   IN ('T','U')
                 AND   VVD.VSL_CD           = SKD.VSL_CD
                 AND   VVD.SKD_VOY_NO       = SKD.SKD_VOY_NO
                 AND   VVD.SKD_DIR_CD       = SKD.SKD_DIR_CD
                 AND   VVD.POD_CD           = SKD.VPS_PORT_CD
                 AND   VVD.POD_CLPT_IND_SEQ = SKD.CLPT_IND_SEQ
			#if (${vvd_cd} != '')
			           AND VVD.VSL_CD             = SUBSTR(@[vvd_cd], 1, 4)
			           AND VVD.SKD_VOY_NO         = SUBSTR(@[vvd_cd], 5, 4)
			           AND VVD.SKD_DIR_CD         = SUBSTR(@[vvd_cd], 9, 1)  
			#end
			#if (${cre_from_dt} != '') 
		   		       AND SKD.VPS_ETA_DT         >= TO_DATE(@[cre_from_dt]|| '00:00:00','YYYY-MM-DD HH24:MI:SS')
			#end
			#if (${cre_to_dt} != '') 
		   		       AND SKD.VPS_ETA_DT         <= TO_DATE(@[cre_to_dt]|| '23:59:59','YYYY-MM-DD HH24:MI:SS')
			#end
		         ) ETA
	#end
#end
        WHERE BK.BKG_CGO_TP_CD = 'P'
        AND 'Y' = CASE WHEN BK.SPLIT_FLG = 'Y' AND BK.BKG_STS_CD = 'X' THEN 'Y'   --SPLIT인데 CANCEL된 건      -> MASTER BKG  -> 조회됨
				       WHEN BK.SPLIT_FLG = 'N' AND BK.BKG_STS_CD = 'X' THEN 'N'   --SPLIT이 아닌데 CANCEL된 건 -> 일반 CANCEL -> 조회안됨
				       ELSE 'Y' 
				  END --그외 조회됨
#if (${bkg_no} != '')    
        AND BK.BKG_NO LIKE @[bkg_no]||'%'
#end
#if  (${bl_no} != '')    
        AND BK.BL_NO LIKE @[bl_no]||'%'
#end
#if (${bkg_ofc_cd} != '')  
        AND BK.BKG_OFC_CD = @[bkg_ofc_cd]
#end

#if (${bkg_no} == '' && ${bl_no} == '')      
	#if (${vvd_cd} != '')
	    AND BK.BKG_NO      = VVD.BKG_NO   
	    AND VVD.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
	    AND VVD.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
	    AND VVD.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)  
	#end
	#if (${cntr_no1} != '') 
	    AND BK.BKG_NO = CNTR.BKG_NO
	    AND CNTR.CNTR_NO = @[cntr_no1]||@[cntr_no2]

    #elseif (${cntr_no1} == '' && (${cntrTpsz} != '' && ${tpsztype} != '')) 
        AND BK.BKG_NO = CNTR.BKG_NO (+)
        AND BK.BKG_NO = QTY.BKG_NO(+)
	    AND (CNTR.CNTR_TPSZ_CD IN ( ${tpszTypeText} ) OR QTY.CNTR_TPSZ_CD IN ( ${tpszTypeText} ))

	#end
	#if (${pol_cd} != '') 
	    AND BK.POL_CD LIKE @[pol_cd]||'%'
	#end
	#if (${pod_cd} != '')         
	    --AND BK.POD_CD LIKE pod_cd||'%'
        AND BK.BKG_NO = EQ.MTY_BKG_NO(+)
        AND EQ.POD_YD_CD LIKE @[pod_cd]||'%'

	#end
	#if (${pre_rly_port_cd} != '') 
	    AND BK.PRE_RLY_PORT_CD LIKE @[pre_rly_port_cd]||'%'
	#end
	#if (${pst_rly_port_cd} != '') 
	    AND BK.PST_RLY_PORT_CD LIKE @[pst_rly_port_cd]||'%'
	#end
	#if (${vvd_cd} == '')
		#if (${bkg_date_tp} != 'E')		
			#if (${cre_from_dt} != '') 
	    AND BK.BKG_CRE_DT >= TO_DATE(@[cre_from_dt]|| '00:00:00','YYYY-MM-DD HH24:MI:SS')
			#end
			#if (${cre_to_dt} != '') 
		AND BK.BKG_CRE_DT <= TO_DATE(@[cre_to_dt]|| '23:59:59','YYYY-MM-DD HH24:MI:SS')
			#end
		#else
	    AND BK.BKG_NO = ETA.BKG_NO
		AND BK.POD_CD = ETA.POD_CD
		#end
	#end
	#if (${vvd_cd_flg} == 'E')  
	    AND VVD.VSL_PRE_PST_CD = 'T'
	#end 
	#if (${cntr_attach} == 'Y')  
	    AND (SELECT COUNT(1) FROM BKG_CONTAINER BCNTR WHERE BK.BKG_NO = BCNTR.BKG_NO AND ROWNUM = 1) > 0
	#elseif  (${cntr_attach} == 'N')  
	    AND (SELECT COUNT(1) FROM BKG_CONTAINER BCNTR WHERE BK.BKG_NO = BCNTR.BKG_NO AND ROWNUM = 1) = 0   
	#end
    
	#if (${bkg_status} == 'D')  -- VD
        AND NVL(BK.BKG_CRE_TP_CD, 'X') = 'S' -- S:SPLIT
    #elseif  (${bkg_status} == 'L') -- VL
        AND NVL(BK.BKG_CRE_TP_CD, 'X') = 'X' -- L : VL
	#end

#end

    ) MST_BKG
   ,EQR_CTRL_MTY_BKG_EXE EQ

#if (${bkg_no} == '' && ${bl_no} == '') 
WHERE BK.BKG_NO = MST_BKG.BKG_NO
#else 
WHERE (BK.BKG_NO = MST_BKG.BKG_NO OR BK.FM_BKG_NO = MST_BKG.BKG_NO OR MST_BKG.FM_BKG_NO = BK.BKG_NO)
#end

AND   BK.BKG_NO = EQ.MTY_BKG_NO(+)			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="KVIB0028E" out="N"/>
				<param name="cre_from_dt" type="12" value="" out="N"/>
				<param name="cre_to_dt" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="NYCNA" out="N"/>
				<param name="cntr_no1" type="12" value="CLHU8339034" out="N"/>
				<param name="cntr_no2" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pre_rly_port_cd" type="12" value="" out="N"/>
				<param name="pst_rly_port_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
