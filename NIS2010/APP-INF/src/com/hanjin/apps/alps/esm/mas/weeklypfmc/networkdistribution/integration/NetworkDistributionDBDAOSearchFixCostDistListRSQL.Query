<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkDistributionDBDAOSearchFixCostDistListRSQL">
			<desc><![CDATA[History----------------------------------
2010.11.23 김기종 [CHM-201006017-01] 아주 노선 선복사용량에 대한 원양으로의 운항 변고정비 배부 로직(약정율) 추가 요청
2010.11.24 이행지 [CHM-201006375-01] Trunk IPC와 Ocean간 내부거래 신규 추가로 인한 기존로직에서 신규계정 제외하도록 수정
2013.05.06 김수정 [CHM-201324486][MAS] TS Allocation상 WK, Month Display 기능 추가]]></desc>
			<sql><![CDATA[
SELECT
      M_COST_YRMON
    , M_COST_WK
    , M_TRD_CD                          AS M_TRD_CD
    , M_RLANE_CD                        AS M_RLANE_CD
    , M_IOC_CD                          AS M_IOC_CD
    , M_VSL_CD                          AS M_VSL_CD
    , M_SKD_VOY_NO                      AS M_SKD_VOY_NO
    , M_DIR_CD                          AS M_DIR_CD
    , M_TS_UC_AMT                       AS M_TS_UC_AMT
	#if (${f_inout} == 'ESM_MAS_0179')
	, DECODE(RNUM,1,SUM(M_HJS_SLS_AMT) OVER(PARTITION BY M_TRD_CD,M_RLANE_CD,M_IOC_CD,M_VSL_CD,M_SKD_VOY_NO,M_DIR_CD),'') AS M_HJS_SLS_AMT
	#else
    , DECODE(RNUM,1,M_HJS_SLS_AMT,'')   AS M_HJS_SLS_AMT
	#end
	, D_COST_YRMON
	, D_COST_WK
    , D_TRD_CD                          AS D_TRD_CD
    , D_RLANE_CD                        AS D_RLANE_CD
    , D_IOC_CD                          AS D_IOC_CD
    , D_VVD_CD                          AS D_VVD_CD
    , D_LOCL_TS_STS_CD                  AS D_LOCL_TS_STS_CD
    , D_TS_QTY                          AS D_TS_QTY
    , D_TS_RTO                          AS D_TS_RTO
    , D_FX_COST_DTRB_AMT                AS D_FX_COST_DTRB_AMT
    , D_CML_BSE_COST_AMT                AS D_CML_BSE_COST_AMT
    , D_BSA_BSE_COST_AMT                AS D_BSA_BSE_COST_AMT
    , D_TS_CTRB_BSE_COST_AMT            AS D_TS_CTRB_BSE_COST_AMT
    , D_CMMT_QTY                        AS D_CMMT_QTY
    , D_CMMT_BSE_COST_RTO               AS D_CMMT_BSE_COST_RTO
    , D_CMMT_BSE_COST_AMT               AS D_CMMT_BSE_COST_AMT
	, D_CMMT_ADD_COST_AMT
	, D_CMMT_DIFF_COST_AMT
	, D_CMMT_FNL_COST_AMT 
    , REV_AMT + DMDT_COM_AMT - CM_COST_AMT AS ALOC_CM

FROM (SELECT
            A.COST_YRMON                                                                                                  AS M_COST_YRMON
           ,A.COST_WK                                                                                                     AS M_COST_WK
           ,A.TRD_CD                                                                                                      AS M_TRD_CD
           ,A.RLANE_CD                                                                                                    AS M_RLANE_CD
           ,A.IOC_CD                                                                                                      AS M_IOC_CD
           ,A.VSL_CD                                                                                                      AS M_VSL_CD
           ,A.SKD_VOY_NO                                                                                                  AS M_SKD_VOY_NO
           ,A.DIR_CD     																								  AS M_DIR_CD
		  #if (${f_op_view} == 'OP4')
		   ,SUM(B.N4TH_TS_UC_AMT) AS M_TS_UC_AMT
          #else
		   ,SUM(B.TS_UC_AMT) AS M_TS_UC_AMT
          #end
                                                                             
		  #if (${f_inout} == 'ESM_MAS_0179')
		  -------------------------------------------------
			--TS Allocation3
			#if (${f_op_view} == 'OP4')
			,SUM(CASE WHEN B.LOCL_TS_STS_CD = 'LO' THEN B.N4TH_CMMT_FNL_COST_AMT ELSE 0 END) AS M_HJS_SLS_AMT 
			#else
			,SUM(CASE WHEN B.LOCL_TS_STS_CD = 'LO' THEN B.CMMT_FNL_COST_AMT ELSE 0 END) AS M_HJS_SLS_AMT 
			#end
 		  #else
		  -------------------------------------------------
		--TS Allocation1
		  #if (${f_inout} == 'ESM_MAS_0047')
		    #if (${f_op_view} == 'OP4')
		   		,(SELECT SUM(T.N4TH_HJS_SLS_AMT)  --//OP4관련추가
		  	#else
		   		,(SELECT SUM(T.HJS_SLS_AMT)  --//OP4관련추가
		  	#end
		  #else
		--TS Allocation2,3
			#if (${f_op_view} == 'OP4')
		   		,(SELECT SUM(T.N4TH_HJS_SLS_AMT)  --//OP4관련추가
		  	#else
		   		,(SELECT SUM(T.HJS_SLS_AMT)  --//OP4관련추가
		  	#end
		  #end 		
		  

       		FROM MAS_VVD_HIR T
       		WHERE A.TRD_CD     = T.TRD_CD
         	AND A.RLANE_CD   = T.RLANE_CD
         	AND A.IOC_CD     = T.IOC_CD
         	AND A.VSL_CD     = T.VSL_CD
         	AND A.SKD_VOY_NO = T.SKD_VOY_NO
         	AND A.DIR_CD     = T.DIR_CD
		 	AND t.stnd_cost_cd not in('43102011', '54600000')
           	#if (${f_selcost} != '')
              AND T.STND_COST_CD = @[f_selcost]
           	#end
        	)	 AS M_HJS_SLS_AMT
		  #end   
			-------------------------------------------------                                                                                                         
           ,ROW_NUMBER() OVER(PARTITION BY A.TRD_CD,A.RLANE_CD,A.IOC_CD,A.VSL_CD,A.SKD_VOY_NO,A.DIR_CD ORDER BY A.TRD_CD) AS RNUM
           ,D.COST_YRMON                                                                                                  AS D_COST_YRMON
           ,D.COST_WK                                                                                                     AS D_COST_WK
           ,B.TO_TRD_CD                                                                                                   AS D_TRD_CD
           ,B.TO_RLANE_CD                                                                                                 AS D_RLANE_CD
           ,B.TO_IOC_CD                                                                                                   AS D_IOC_CD
           ,B.TO_VSL_CD||B.TO_SKD_VOY_NO||B.TO_SKD_DIR_CD                                                                 AS D_VVD_CD
           ,B.LOCL_TS_STS_CD                                                                                              AS D_LOCL_TS_STS_CD
           
		  #if (${f_inout} == 'ESM_MAS_0179')
		   ,MAX(B.CMMT_QTY)                                                                                               AS D_TS_QTY	
		   ,MAX(B.CMMT_BSE_COST_RTO)*100                                                                                  AS D_TS_RTO
		  #else	
		   ,MAX(C.TS_QTY)                                                                                                 AS D_TS_QTY	
           ,MAX(C.TS_RTO)*100                                                                                             AS D_TS_RTO
          #end
		
		#if (${f_inout} == 'ESM_MAS_0179')
			--TS Allocation3
			#if (${f_op_view} == 'OP4')
				,SUM(B.N4TH_CMMT_ALOC_COST_AMT)     AS D_FX_COST_DTRB_AMT
			#else
				,SUM(B.CMMT_ALOC_COST_AMT)    AS D_FX_COST_DTRB_AMT 
			#end 
		#else
			--TS Allocation 1,2
			#if (${f_op_view} == 'OP4')
		   		,SUM(B.N4TH_FX_COST_DTRB_AMT)     AS D_FX_COST_DTRB_AMT 
			#else
				,SUM(B.FX_COST_DTRB_AMT)    AS D_FX_COST_DTRB_AMT 
			#end
		#end

		#if (${f_op_view} == 'OP4')
		   ,NULL      AS D_CML_BSE_COST_AMT
		   ,NULL      AS D_BSA_BSE_COST_AMT 
		   ,NULL 	  AS D_TS_CTRB_BSE_COST_AMT 

			#if (${f_selcost} != '')
			    ,SUM(B.CMMT_QTY) AS D_CMMT_QTY 
			    ,SUM(B.N4TH_CMMT_BSE_COST_RTO)*100 AS D_CMMT_BSE_COST_RTO 
			#else
			    ,MAX(B.CMMT_QTY) AS D_CMMT_QTY 
			    ,CASE WHEN B.TO_TRD_CD NOT IN ('AES','TPS')  THEN NULL ELSE MAX(B.N4TH_CMMT_BSE_COST_RTO)*100 END AS D_CMMT_BSE_COST_RTO 
			#end

		   ,SUM(B.N4TH_CMMT_BSE_COST_AMT) AS D_CMMT_BSE_COST_AMT 
		   ,SUM(B.N4TH_CMMT_ADD_COST_AMT) AS D_CMMT_ADD_COST_AMT
		   ,SUM(B.N4TH_CMMT_DIFF_COST_AMT) AS D_CMMT_DIFF_COST_AMT	
		   ,SUM(B.N4TH_CMMT_FNL_COST_AMT) AS D_CMMT_FNL_COST_AMT 
		#else
		   ,SUM(B.CML_BSE_COST_AMT)      AS D_CML_BSE_COST_AMT 
		   ,SUM(B.BSA_BSE_COST_AMT)      AS D_BSA_BSE_COST_AMT 
		   ,SUM(B.TS_CTRB_BSE_COST_AMT)  AS D_TS_CTRB_BSE_COST_AMT 

			#if (${f_selcost} != '')
			    ,SUM(B.CMMT_QTY) AS D_CMMT_QTY 
			    ,SUM(B.CMMT_BSE_COST_RTO)*100 AS D_CMMT_BSE_COST_RTO 
			#else
			    ,MAX(B.CMMT_QTY) AS D_CMMT_QTY 
				,CASE WHEN B.TO_TRD_CD NOT IN ('AES','TPS')  THEN NULL ELSE MAX(B.CMMT_BSE_COST_RTO)*100 END  AS D_CMMT_BSE_COST_RTO 
			   -- ,CASE WHEN SUM(B.CMMT_ADD_COST_AMT) =0 OR  B.TO_TRD_CD='IAS'  THEN NULL ELSE MAX(B.CMMT_BSE_COST_RTO)*100 END AS D_CMMT_BSE_COST_RTO 
			#end
			,SUM(B.CMMT_BSE_COST_AMT) AS D_CMMT_BSE_COST_AMT 
			,SUM(B.CMMT_ADD_COST_AMT) AS D_CMMT_ADD_COST_AMT
			,SUM(B.CMMT_DIFF_COST_AMT) AS D_CMMT_DIFF_COST_AMT

			,SUM(B.CMMT_FNL_COST_AMT) AS D_CMMT_FNL_COST_AMT 
		#end
			,MAX(B.REV_AMT) AS REV_AMT 
			,MAX(B.DMDT_COM_AMT) AS DMDT_COM_AMT 
			,MAX(B.CM_COST_AMT) AS CM_COST_AMT

        FROM MAS_MON_VVD     A
            ,MAS_FX_AMT_DTRB B
            ,MAS_LANE_TS_QTY C
            ,MAS_MON_VVD     D
        WHERE A.TRD_CD        = B.FM_TRD_CD
          AND A.RLANE_CD      = B.FM_RLANE_CD
          AND A.IOC_CD        = B.FM_IOC_CD
          AND A.VSL_CD        = B.FM_VSL_CD
          AND A.SKD_VOY_NO    = B.FM_SKD_VOY_NO
          AND A.DIR_CD        = B.FM_SKD_DIR_CD
          AND B.FM_TRD_CD     = C.FM_TRD_CD
          AND B.FM_RLANE_CD   = C.FM_RLANE_CD
          AND B.FM_IOC_CD     = C.FM_IOC_CD
          AND B.FM_VSL_CD     = C.FM_VSL_CD
          AND B.FM_SKD_VOY_NO = C.FM_SKD_VOY_NO
          AND B.FM_SKD_DIR_CD = C.FM_SKD_DIR_CD
          AND B.TO_TRD_CD     = C.TO_TRD_CD
          AND B.TO_RLANE_CD   = C.TO_RLANE_CD
          AND B.TO_IOC_CD     = C.TO_IOC_CD
          AND B.TO_VSL_CD     = C.TO_VSL_CD
          AND B.TO_SKD_VOY_NO = C.TO_SKD_VOY_NO
          AND B.TO_SKD_DIR_CD = C.TO_SKD_DIR_CD
          AND B.TO_TRD_CD     = D.TRD_CD(+)
          AND B.TO_RLANE_CD   = D.RLANE_CD(+)
          AND B.TO_IOC_CD     = D.IOC_CD(+)
          AND B.TO_VSL_CD     = D.VSL_CD(+)
          AND B.TO_SKD_VOY_NO = D.SKD_VOY_NO(+)
          AND B.TO_SKD_DIR_CD = D.DIR_CD(+)
          AND NVL(A.DELT_FLG,'N') = 'N'

           #if (${f_seltrade} != '')
             AND A.TRD_CD = @[f_seltrade]
           #end
           #if (${f_selrlane} != '')
             AND A.RLANE_CD = @[f_selrlane]
           #end
           #if (${f_selioc} != '')
             AND A.IOC_CD = @[f_selioc]
           #end
           #if (${f_vsl_cd} != '')
             AND A.VSL_CD = @[f_vsl_cd]
           #end
           #if (${f_skd_voy_no} != '')
             AND A.SKD_VOY_NO = @[f_skd_voy_no]
           #end
           #if (${f_dir_cd} != '')
             AND A.DIR_CD = @[f_dir_cd]
           #end
           #if (${f_selcost} != '')
             AND B.STND_COST_CD = @[f_selcost]
           #end

           #if (${f_chkprd} == 'M')
              #if (${f_fm_mon} != '')
                  AND A.COST_YRMON BETWEEN @[f_year] || @[f_fm_mon] AND @[f_year] || @[f_to_mon]
              #else
                  AND A.COST_YRMON like @[f_year] || '%'
              #end
           #elseif (${f_chkprd} == 'W')
              AND A.SLS_YRMON LIKE @[f_year]||'%'
              #if (${f_fm_wk} != '')
                  AND A.COST_WK BETWEEN @[f_fm_wk] AND @[f_to_wk]
              #end
           #end
		   #if (${f_inout} == 'ESM_MAS_0047')
		      AND  NVL(DTRB_STEP_CD,'BZC') = 'BZC' 	 
		   #elseif (${f_inout} == 'ESM_MAS_0050')	
			  AND  NVL(DTRB_STEP_CD,'BZC') = 'CMT' 	 
		   #elseif (${f_inout} == 'ESM_MAS_0179')
			  AND (A.TRD_CD = 'IAS' AND B.TO_TRD_CD != 'TPS' AND B.TO_TRD_CD != 'AES')
			  AND  NVL(DTRB_STEP_CD,'BZC') = 'CMT' 	 
		   #end			
        GROUP BY
               A.COST_YRMON
              ,A.COST_WK
              ,A.TRD_CD
              ,A.RLANE_CD
              ,A.IOC_CD
              ,A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.DIR_CD
              ,D.COST_YRMON
              ,D.COST_WK
              ,B.TO_TRD_CD
              ,B.TO_RLANE_CD
              ,B.TO_IOC_CD
              ,B.TO_VSL_CD||B.TO_SKD_VOY_NO||B.TO_SKD_DIR_CD
              ,B.LOCL_TS_STS_CD
       ) x
ORDER BY 1,2,3,4,5,6,7,8,9,10			]]></sql>
			<params>
				<param name="f_selcost" type="12" value="" out="N"/>
				<param name="f_seltrade" type="12" value="" out="N"/>
				<param name="f_selrlane" type="12" value="" out="N"/>
				<param name="f_selioc" type="12" value="" out="N"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
