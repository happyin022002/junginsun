<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCReportDBDAORsltSearchMOFRFAListVORSQL">
			<desc><![CDATA[Korea MOF Filing (Formatted) RFA 데이터 조회]]></desc>
			<sql><![CDATA[
-------------------------------------------------------------------------------------
--RFA_LIST : 조건에 의해 조회된 모든 RFA
--RFA_ROUT_LIST : 발생되는 모든 Route Case
--USD_ROUT_CASE : 실제로 사용되는 Route Case
--USD_ROUT_CASE_SCG : 이미 BATCH로 계산 끝난 SCG. 수동 입력한 데이터가 있을 수도 있어서 별도로 취급.
--ALL_ROUT_CASE : 위의 두 Route Case 합쳐 놓은 정보
--
--> 이하 부터 기존 Calculate 테이블 & 수정
--BQ : 발생하는 모든 Route Case
--GL : GROUP LOACTION : 위에 ALL_ROUT_CASE에 포함하기 때문에 제거.
--NC : note conversion값 적용.
--C1 : CONVERSION SURCHARGE
--G2 : NULL DUAL 테이블
--S3 : TARIFF SURCHARGE
--SG : G2와 S3를 C1과 Join
--GS : BQ와 SG를 Join
--FN : ACT charge code
--
--> FLAG
--ROUT_SCG_TP
--1 : Route Case 테이블에 없어서 만든 케이스.
--2 : Calculate Batch에서 이미 SCG 계산된 케이스.
--3 : Route Case 테이블에 있으나 SCG는 적용안된 케이스.
-------------------------------------------------------------------------------------
WITH RFA_LIST AS (
    SELECT RFA_NO                                       AS CTRT_NO
         , MN.PROP_NO                                   AS PROP_NO
         , MN.AMDT_SEQ                                  AS AMDT_SEQ
         , CUST.CUST_LGL_ENG_NM                         AS CUST_NM
         , PROP_OFC_CD                                  AS PROP_OFC_CD
         , PROP_APRO_OFC_CD                             AS PROP_APRO_OFC_CD
         , MN.EFF_DT
         , TO_CHAR(DUR.CTRT_EFF_DT, 'YYYY-MM-DD')       AS CTRT_EFF_DT
         , TO_CHAR(DUR.CTRT_EXP_DT, 'YYYY-MM-DD')       AS CTRT_EXP_DT
         , SVC_SCP_CD
         , PRC_CTRT_CUST_TP_CD                          AS CUST_TP_CD
      FROM PRI_RP_HDR               HDR
         , PRI_RP_MN                MN
         , PRI_RP_DUR               DUR
         , PRI_RP_SCP_MN            SCP_MN
         , MDM_CUSTOMER             CUST
     WHERE 1 = 1
       ---------------------------------------
       AND MN.PROP_NO               = HDR.PROP_NO
       AND MN.PROP_NO               = DUR.PROP_NO
       AND MN.AMDT_SEQ              = DUR.AMDT_SEQ
       AND MN.PROP_NO               = SCP_MN.PROP_NO
       AND MN.AMDT_SEQ              = SCP_MN.AMDT_SEQ
       AND CUST.CUST_CNT_CD         = MN.CTRT_CUST_CNT_CD
       AND CUST.CUST_SEQ            = MN.CTRT_CUST_SEQ
       AND CUST.CNTR_DIV_FLG        = 'Y'
    ----------------------------------------------------------------------------------
    -- 기본 조건
		-- 20171227 CSR #2877 - 정하나 과장님 요청으로 삭제 , 송민석
       --AND CTRT_EXP_DT - CTRT_EFF_DT >= 90 -- 계약기간 90일 이상인 것만
       AND MN.PROP_STS_CD            = 'A' -- Approved
       AND RFA_CTRT_TP_CD            IN ('C', 'S', 'B') -- RFA Type 조건
       AND PROP_OFC_CD               IN ('SELSC', 'PUSSC', 'PUSBS') -- R.OFC 조건
    ----------------------------------------------------------------------------------
-- Date by
#if( ${date_by} != '2')
       AND PROP_APRO_DT BETWEEN TO_DATE(@[f_eff_dt],'YYYY-MM-DD') AND TO_DATE(@[f_exp_dt],'YYYY-MM-DD')+0.99999
#else
       AND MN.EFF_DT              <= TO_DATE(@[f_exp_dt], 'YYYY-MM-DD') -- Effective Date(To)
       AND MN.EXP_DT              >= TO_DATE(@[f_eff_dt], 'YYYY-MM-DD') -- Effective Date(From)
#end
    -- Apvl Ofc
#if( ${apvl_ofc} != '' )
       AND MN.PROP_APRO_OFC_CD = @[apvl_ofc]
#end
    -- Req. Office
#if( ${prop_ofc_cd} != '' )
       AND MN.PROP_OFC_CD IN (${prop_ofc_cd})
#end
    -- Req. Staff
#if( ${prop_srep_cd} != '' )
       AND MN.PROP_SREP_CD IN (${prop_srep_cd})
#end
    ----------------------------------------------------------------------------------
), RFA_ROUT_LIST AS (
    SELECT CTRT_NO
         , MN.PROP_NO
         , MN.AMDT_SEQ
         , MN.CUST_NM
         , MN.PROP_OFC_CD
         , MN.PROP_APRO_OFC_CD
         , MN2.EFF_DT
         , MN.CTRT_EFF_DT
         , MN.CTRT_EXP_DT
         , MN.SVC_SCP_CD
         , RT.CMDT_HDR_SEQ
         , BLET_DP_SEQ
         , RT.ROUT_SEQ
         , RT.RT_SEQ
         , MOF_LANE_CD
         , ORI.LOC_CD           AS ORG_LOC_CD
         , ORI.MOF_LOC_ID       AS MOF_ORG_LOC_CD
         , DST.LOC_CD           AS DEST_LOC_CD
         , DST.MOF_LOC_ID       AS MOF_DEST_LOC_CD
         , RT.PRC_CGO_TP_CD
         , TP.MOF_ID            AS TYPE_CD
         , RT.RAT_UT_CD
         , SZ.MOF_ID            AS SIZE_CD
         , RT.CURR_CD
         , TRUNC(RT.FNL_FRT_RT_AMT / DECODE(NVL(USD_LOCL_XCH_RT,0), 0, 1, USD_LOCL_XCH_RT), 2) AS FNL_FRT_RT_AMT
         , MN.CUST_TP_CD
      FROM RFA_LIST                 MN
         , PRI_RP_SCP_RT_CMDT_HDR   CMDT_HDR
         , PRI_RP_SCP_RT_CMDT_ROUT  ROUT
         , (
           SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, A.LOC_CD, MOF_LOC_ID
             FROM PRI_MOF_LANE_MAPG A, -- Base Table
                  (
                  SELECT DISTINCT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ,
                         DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) AS LOC_CD
                    FROM RFA_LIST MN
                       , PRI_RP_SCP_RT_ROUT_PNT A
                         LEFT OUTER JOIN  PRI_RP_SCP_GRP_LOC B
                             ON (  A.PROP_NO     = B.PROP_NO
                             AND A.AMDT_SEQ    = B.AMDT_SEQ
                             AND A.SVC_SCP_CD  = B.SVC_SCP_CD
                             AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD
                             AND B.ORG_DEST_TP_CD IN ('O', 'B')
                             AND A.SRC_INFO_CD <> 'AD'
                             )
                         LEFT OUTER JOIN PRI_RP_SCP_GRP_LOC_DTL C
                             ON (  B.PROP_NO     = C.PROP_NO
                             AND B.AMDT_SEQ    = C.AMDT_SEQ
                             AND B.SVC_SCP_CD  = C.SVC_SCP_CD
                             AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ
                             AND C.SRC_INFO_CD <> 'AD'
                             )
                   WHERE A.PROP_NO = MN.PROP_NO
                     AND A.AMDT_SEQ = MN.AMDT_SEQ
                     AND A.SVC_SCP_CD = MN.SVC_SCP_CD
                     AND A.SRC_INFO_CD <> 'AD'
                     AND A.ORG_DEST_TP_CD = 'O'    -- ORIGIN
                     AND A.RCV_DE_TERM_CD = 'Y'    -- CY Only
                ) B
            WHERE A.LOC_CD = B.LOC_CD
              AND ORG_DEST_TP_CD = 'O'
              AND FILE_USE_ONY_FLG = 'Y'
              AND DELT_FLG = 'N'
           ) ORI
         , (
           SELECT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, A.LOC_CD
                , MOF_LANE_CD, MOF_LOC_ID
             FROM PRI_MOF_LANE_MAPG A, -- Base Table
                  (
                  SELECT DISTINCT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ,
                         DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) AS LOC_CD
                    FROM RFA_LIST MN
                       , PRI_RP_SCP_RT_ROUT_PNT A
                         LEFT OUTER JOIN  PRI_RP_SCP_GRP_LOC B
                             ON (  A.PROP_NO     = B.PROP_NO
                             AND A.AMDT_SEQ    = B.AMDT_SEQ
                             AND A.SVC_SCP_CD  = B.SVC_SCP_CD
                             AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD
                             AND B.ORG_DEST_TP_CD IN ('D', 'B') -- DEST, BOTH
                             AND A.SRC_INFO_CD <> 'AD'
                             )
                         LEFT OUTER JOIN PRI_RP_SCP_GRP_LOC_DTL C
                             ON (  B.PROP_NO     = C.PROP_NO
                             AND B.AMDT_SEQ    = C.AMDT_SEQ
                             AND B.SVC_SCP_CD  = C.SVC_SCP_CD
                             AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ
                             AND C.SRC_INFO_CD <> 'AD'
                             )
                   WHERE A.PROP_NO = MN.PROP_NO
                     AND A.AMDT_SEQ = MN.AMDT_SEQ
                     AND A.SVC_SCP_CD = MN.SVC_SCP_CD
                     AND A.SRC_INFO_CD <> 'AD'
                     AND A.ORG_DEST_TP_CD = 'D'    -- DEST
                     AND A.RCV_DE_TERM_CD = 'Y'    -- CY Only
                ) B
            WHERE A.LOC_CD = B.LOC_CD
              AND ORG_DEST_TP_CD = 'D'
              AND FILE_USE_ONY_FLG = 'Y'
              AND DELT_FLG = 'N'
           ) DST
         , PRI_RP_SCP_RT RT
         , GL_MON_XCH_RT XR
         , PRI_MOF_MAPG TP
         , PRI_MOF_MAPG SZ
		, PRI_RP_MN                MN2
     WHERE 1 = 1
       ---------------------------------------
       AND MN.PROP_NO               = CMDT_HDR.PROP_NO
       AND MN.AMDT_SEQ              = CMDT_HDR.AMDT_SEQ
       AND MN.SVC_SCP_CD            = CMDT_HDR.SVC_SCP_CD
       ---------------------------------------
       AND CMDT_HDR.PROP_NO         = ROUT.PROP_NO
       AND CMDT_HDR.AMDT_SEQ        = ROUT.AMDT_SEQ
       AND CMDT_HDR.SVC_SCP_CD      = ROUT.SVC_SCP_CD
       AND CMDT_HDR.CMDT_HDR_SEQ    = ROUT.CMDT_HDR_SEQ
       AND FIC_RT_TP_CD             = 'G' -- Rate of Port (CY) only
       ---------------------------------------
       AND ROUT.PROP_NO           = ORI.PROP_NO
       AND ROUT.AMDT_SEQ          = ORI.AMDT_SEQ
       AND ROUT.SVC_SCP_CD        = ORI.SVC_SCP_CD
       AND ROUT.CMDT_HDR_SEQ      = ORI.CMDT_HDR_SEQ
       AND ROUT.ROUT_SEQ          = ORI.ROUT_SEQ
       --------------------------------------- 
       AND ROUT.PROP_NO           = DST.PROP_NO
       AND ROUT.AMDT_SEQ          = DST.AMDT_SEQ
       AND ROUT.SVC_SCP_CD        = DST.SVC_SCP_CD
       AND ROUT.CMDT_HDR_SEQ      = DST.CMDT_HDR_SEQ
       AND ROUT.ROUT_SEQ          = DST.ROUT_SEQ
       ---------------------------------------
       AND ORI.PROP_NO      = RT.PROP_NO
       AND ORI.AMDT_SEQ     = RT.AMDT_SEQ
       AND ORI.SVC_SCP_CD   = RT.SVC_SCP_CD
       AND ORI.CMDT_HDR_SEQ = RT.CMDT_HDR_SEQ
       AND ORI.ROUT_SEQ     = RT.ROUT_SEQ
       AND RT.SRC_INFO_CD   <> 'AD'
       AND RT.AMDT_SEQ = RT.N1ST_CMNC_AMDT_SEQ
       ---------------------------------------
       AND XR.ACCT_XCH_RT_YRMON = TO_CHAR(MN.EFF_DT , 'YYYYMM')
       AND XR.ACCT_XCH_RT_LVL   = '1'
       AND XR.CURR_CD           = RT.CURR_CD
       ------------BASE TABLE-----------------
       AND RT.PRC_CGO_TP_CD     = TP.HJS_ID -- TYPE
       AND TP.MAPG_TP_CD        = 'TYPE'
       AND TP.FILE_USE_ONY_FLG  = 'Y'
       AND TP.DELT_FLG          = 'N'
       AND RT.RAT_UT_CD         = SZ.HJS_ID -- SIZE
       AND SZ.MAPG_TP_CD        = 'SIZE'
       AND SZ.FILE_USE_ONY_FLG  = 'Y'
       AND SZ.DELT_FLG          = 'N'
       ---------------------------------------
       AND MN2.PROP_NO = MN.PROP_NO
		AND MN2.AMDT_SEQ = RT.N1ST_CMNC_AMDT_SEQ
), USD_ROUT_CASE AS (
    SELECT T.* FROM (
        SELECT A.PROP_NO
              ,A.AMDT_SEQ
              ,A.SVC_SCP_CD
              ,A.CMDT_HDR_SEQ
              ,BLET_DP_SEQ
              ,A.ROUT_SEQ
              ,A.RT_SEQ
              ,D.ROUT_CS_NO
              ,D.ROUT_CS_SRC_DT
              ,D.POR_CD
              ,D.POL_CD
              ,D.N1ST_TS_PORT_CD
              ,D.N2ND_TS_PORT_CD
              ,D.N3RD_TS_PORT_CD
              ,D.POD_CD
              ,D.DEL_CD
              ,D.BKG_CGO_TP_CD
              ,D.BKG_RCV_TERM_CD
              ,D.BKG_DE_TERM_CD
              ,D.N1ST_FINC_VVD_CD
              ,D.N2ND_FINC_VVD_CD
              ,D.N3RD_FINC_VVD_CD
              ,D.N4TH_FINC_VVD_CD
              ,D.N1ST_RLANE_CD
              ,D.N2ND_RLANE_CD
              ,D.N3RD_RLANE_CD
              ,D.N4TH_RLANE_CD
              ,D.TRSP_RAIL_DIR_KNT
              ,A.USD_ROUT_CS_SEL_FLG
              ,ROW_NUMBER() OVER(PARTITION BY A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.RT_SEQ, 
                                              D.POR_CD, D.DEL_CD, A.ROUT_CS_SRC_DT ORDER BY D.TTL_TZTM_HRS, D.ROUT_CS_NO ) NUM
         FROM  RFA_ROUT_LIST LST
              ,PRI_RP_SCP_RT C
              ,PRI_RP_SCP_RT_USD_ROUT_CS A
              ,PRI_PRS_USD_ROUT_CS_INFO D
             , PRI_MOF_LANE_MAPG ORI
             , PRI_MOF_LANE_MAPG DEST
             , PRI_MOF_MAPG TP
             , PRI_MOF_MAPG SZ
        WHERE  C.PROP_NO        = LST.PROP_NO
          AND  C.AMDT_SEQ       = LST.AMDT_SEQ
          AND  C.SVC_SCP_CD     = LST.SVC_SCP_CD
          AND  C.SRC_INFO_CD    <> 'AD'
          AND  C.PROP_NO        = A.PROP_NO
          AND  C.AMDT_SEQ       = A.AMDT_SEQ
          AND  C.SVC_SCP_CD     = A.SVC_SCP_CD
          AND  C.CMDT_HDR_SEQ   = A.CMDT_HDR_SEQ
          AND  C.ROUT_SEQ       = A.ROUT_SEQ
          AND  C.RT_SEQ         = A.RT_SEQ
	  AND  C.AMDT_SEQ = C.N1ST_CMNC_AMDT_SEQ

          AND  A.ROUT_CS_NO     = D.ROUT_CS_NO
          AND  A.ROUT_CS_SRC_DT = D.ROUT_CS_SRC_DT
          ------------ BASE TABLE (LANE) -------------
          AND  D.POR_CD                 = ORI.LOC_CD
          AND  ORI.ORG_DEST_TP_CD       = 'O'
          AND  ORI.FILE_USE_ONY_FLG     = 'Y'
          AND  ORI.DELT_FLG             = 'N'
          AND  D.DEL_CD                 = DEST.LOC_CD
          AND  DEST.ORG_DEST_TP_CD      = 'D'
          AND  DEST.FILE_USE_ONY_FLG    = 'Y'
          AND  DEST.DELT_FLG            = 'N'
          ------------ BASE TABLE (CNTR) -------------
          AND C.PRC_CGO_TP_CD      = TP.HJS_ID -- TYPE
          AND TP.MAPG_TP_CD        = 'TYPE'
          AND TP.FILE_USE_ONY_FLG  = 'Y'
          AND TP.DELT_FLG          = 'N'
          AND C.RAT_UT_CD          = SZ.HJS_ID -- SIZE
          AND SZ.MAPG_TP_CD        = 'SIZE'
          AND SZ.FILE_USE_ONY_FLG  = 'Y'
          AND SZ.DELT_FLG          = 'N'
          --------------------------------------------
    ) T
    WHERE NUM = 1
), ALL_ROUT_CASE AS (
    SELECT CTRT_NO
         , A.PROP_NO
         , A.AMDT_SEQ
         , A.CUST_NM
         , A.PROP_OFC_CD
         , A.PROP_APRO_OFC_CD
         , A.EFF_DT
         , A.CTRT_EFF_DT
         , A.CTRT_EXP_DT
         , A.SVC_SCP_CD
         , A.CMDT_HDR_SEQ
         , A.BLET_DP_SEQ
         , A.ROUT_SEQ
         , A.RT_SEQ
         , A.MOF_LANE_CD
         , A.MOF_ORG_LOC_CD
         , A.MOF_DEST_LOC_CD
         , A.PRC_CGO_TP_CD
         , A.TYPE_CD
         , A.RAT_UT_CD
         , A.SIZE_CD
         , A.CURR_CD
         , A.FNL_FRT_RT_AMT
         , B.ROUT_CS_NO
         , B.ROUT_CS_SRC_DT
         , A.ORG_LOC_CD AS POR_CD
         , DECODE(B.ROUT_CS_NO, NULL, A.ORG_LOC_CD, B.POL_CD) AS POL_CD -- ROUTE CASE에 값이 없는 경우 POR을 POL에 적용
         , B.N1ST_TS_PORT_CD
         , B.N2ND_TS_PORT_CD
         , B.N3RD_TS_PORT_CD
         , DECODE(B.ROUT_CS_NO, NULL, A.DEST_LOC_CD, B.POD_CD) AS POD_CD -- ROUTE CASE에 값이 없는 경우 DEL을 POD에 적용
         , A.DEST_LOC_CD AS DEL_CD
         , B.BKG_CGO_TP_CD
         , NVL(B.BKG_RCV_TERM_CD, 'Y') AS BKG_RCV_TERM_CD -- ROUTE CASE에 값이 없는 경우 무조건 CY Term으로 
         , NVL(B.BKG_DE_TERM_CD, 'Y')  AS BKG_DE_TERM_CD -- ROUTE CASE에 값이 없는 경우 무조건 CY Term으로 
         , B.N1ST_FINC_VVD_CD
         , B.N2ND_FINC_VVD_CD
         , B.N3RD_FINC_VVD_CD
         , B.N4TH_FINC_VVD_CD
         , B.N1ST_RLANE_CD
         , B.N2ND_RLANE_CD
         , B.N3RD_RLANE_CD
         , B.N4TH_RLANE_CD
         , B.TRSP_RAIL_DIR_KNT
         , CUST_TP_CD
         , CASE WHEN B.ROUT_CS_NO IS NULL      THEN '1' -- 없는 Route Case
                WHEN USD_ROUT_CS_SEL_FLG = 'Y' THEN '2' -- Calculate Batch에서 계산한 값
                ELSE '3'                                -- Route Case는 있으나 SCG는 계산안된 케이스
           END AS ROUT_SCG_TP
         , NVL(USD_ROUT_CS_SEL_FLG, 'E') AS USD_ROUT_CS_SEL_FLG
      FROM RFA_ROUT_LIST A
         , USD_ROUT_CASE B
     WHERE A.PROP_NO        = B.PROP_NO(+)
       AND A.AMDT_SEQ       = B.AMDT_SEQ(+)
       AND A.SVC_SCP_CD     = B.SVC_SCP_CD(+)
       AND A.CMDT_HDR_SEQ   = B.CMDT_HDR_SEQ(+)
       AND A.ROUT_SEQ       = B.ROUT_SEQ(+)
       AND A.RT_SEQ         = B.RT_SEQ(+)
       AND A.ORG_LOC_CD     = B.POR_CD(+)
       AND A.DEST_LOC_CD    = B.DEL_CD(+)
)
-- 여기서 부터 기존 Calculate에서 가져온 소스
,BQ AS
(
SELECT BQ_SEQ       ,
    CTRT_TP_CD     ,
    CTRT_NO,
    PROP_NO       ,
    AMDT_SEQ      ,
    SVC_SCP_CD     ,
    CMDT_HDR_SEQ    ,
    BLET_DP_SEQ,
    ROUT_SEQ      ,
    RT_SEQ       ,
    
    CUST_NM,
    PROP_OFC_CD,
    PROP_APRO_OFC_CD,
    EFF_DT,
    CTRT_EFF_DT,
    CTRT_EXP_DT,
    ROUT_SCG_TP,
    MOF_LANE_CD,
    MOF_ORG_LOC_CD,
    MOF_DEST_LOC_CD,
    TYPE_CD,
    SIZE_CD,
    USD_ROUT_CS_SEL_FLG,
    
    CURR_CD		,
    FNL_FRT_RT_AMT   ,
    DIR_CALL_FLG    ,
    CTRT_CNTR_TPSZ_CD  ,
    CTRT_CNTR_SZ_CD   ,
    PRC_CGO_TP_CD    ,
    POR_CD       ,
    POR_STE_CD     ,
    POR_RGN_CD     ,
    POR_CNT_CD     ,
    POR_CONTI_CD    ,
    POL_CD       ,
    POL_STE_CD     ,
    POL_RGN_CD     ,
    POL_CNT_CD     ,
    POL_CONTI_CD    ,
    POD_CD       ,
    POD_STE_CD     ,
    POD_RGN_CD     ,
    POD_CNT_CD     ,
    POD_CONTI_CD    ,
    DEL_CD       ,
    DEL_STE_CD     ,
    DEL_RGN_CD     ,
    DEL_CNT_CD     ,
    DEL_CONTI_CD    ,
    RCV_TERM_CD     ,
    DE_TERM_CD     ,
    N1ST_FINC_VVD_CD  ,
    N2ND_FINC_VVD_CD  ,
    N3RD_FINC_VVD_CD  ,
    N4TH_FINC_VVD_CD  ,
    N1ST_RLANE_CD    ,
    N2ND_RLANE_CD    ,
    N3RD_RLANE_CD    ,
    N4TH_RLANE_CD    ,
    N1ST_POL_CONTI_CD          ,
    N2ND_POL_CONTI_CD          ,
    N3RD_POL_CONTI_CD          ,
    N4TH_POL_CONTI_CD          ,

    N1ST_POD_CONTI_CD          ,
    N2ND_POD_CONTI_CD          ,
    N3RD_POD_CONTI_CD          ,
    N4TH_POD_CONTI_CD          ,
    
    N1ST_POL_CD          ,
    N2ND_POL_CD          ,
    N3RD_POL_CD          ,
    N4TH_POL_CD          ,

    N1ST_POD_CD          ,
    N2ND_POD_CD          ,
    N3RD_POD_CD          ,
    N4TH_POD_CD          ,

    N1ST_TS_PORT_CD   ,
    N2ND_TS_PORT_CD   ,
    N3RD_TS_PORT_CD   ,
    CML_ZN_CD      ,
    USA_SVC_MOD_CD   ,

    CASE
    WHEN ORG_TRNS_MOD_CD = 'TD' THEN 'T'
    WHEN ORG_TRNS_MOD_CD = 'RD' THEN 'R'
    WHEN ORG_TRNS_MOD_CD = 'WD' THEN  DECODE(POR_CD, POL_CD,'F', 'B')
    WHEN ORG_TRNS_MOD_CD = 'TR' THEN 'A'
    WHEN ORG_TRNS_MOD_CD = 'TW' THEN  DECODE(POR_CD, POL_CD,'E', 'U')
    END ORG_TRNS_MOD_CD ,

    CASE
    WHEN DEST_TRNS_MOD_CD = 'TD' THEN 'T'
    WHEN DEST_TRNS_MOD_CD = 'RD' THEN 'R'
    WHEN DEST_TRNS_MOD_CD = 'WD' THEN  DECODE(DEL_CD, POD_CD,'F', 'B')
    WHEN DEST_TRNS_MOD_CD = 'TR' THEN 'A'
    WHEN DEST_TRNS_MOD_CD = 'TW' THEN  DECODE(DEL_CD, POD_CD,'E', 'U')
    END DEST_TRNS_MOD_CD ,

    PRD_RD_CNT,
    CUST_TP_CD

FROM  (
    SELECT ROWNUM BQ_SEQ     ,
    
        'R' CTRT_TP_CD    ,
        CTRT_NO,
        PROP_NO      ,
        AMDT_SEQ      ,
        SVC_SCP_CD     ,
        CMDT_HDR_SEQ    ,
        BLET_DP_SEQ,
        ROUT_SEQ      ,
        RT_SEQ       ,
        
        CUST_NM,
        PROP_OFC_CD,
        PROP_APRO_OFC_CD,
        EFF_DT,
        CTRT_EFF_DT,
        CTRT_EXP_DT,
        ROUT_SCG_TP,
        MOF_LANE_CD,
        MOF_ORG_LOC_CD,
        MOF_DEST_LOC_CD,
        TYPE_CD,
        SIZE_CD,
        USD_ROUT_CS_SEL_FLG,
        
        CURR_CD		,
        FNL_FRT_RT_AMT  ,
        NULL DIR_CALL_FLG  ,

        CASE
        WHEN RAT_UT_CD = '20' THEN 'D2'
        WHEN RAT_UT_CD = '40' THEN 'D4'
        WHEN RAT_UT_CD = 'HC' THEN 'D5'
        WHEN RAT_UT_CD = '45' THEN 'D7'
        WHEN RAT_UT_CD = 'BL' THEN 'F4'
        ELSE RAT_UT_CD
        END CTRT_CNTR_TPSZ_CD ,

--        ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = CASE
--                                         WHEN RAT_UT_CD = '20' THEN 'D2'
--                                         WHEN RAT_UT_CD = '40' THEN 'D4'
--                                         WHEN RAT_UT_CD = 'HC' THEN 'D5'
--                                         WHEN RAT_UT_CD = '45' THEN 'D7'
--                                         WHEN RAT_UT_CD = 'BL' THEN 'F4'
--                                         ELSE RAT_UT_CD
--                                         END ) CTRT_CNTR_SZ_CD ,
        RAT_UT_CD CTRT_CNTR_SZ_CD ,
        
        RC.PRC_CGO_TP_CD  ,
        
        RC.POR_CD              ,
        L1.CNT_CD||L1.STE_CD POR_STE_CD  ,
        L1.RGN_CD       POR_RGN_CD  ,
        L1.CNT_CD       POR_CNT_CD  ,
        L1.CONTI_CD      POR_CONTI_CD ,
        RC.POL_CD              ,
        L2.CNT_CD||L2.STE_CD POL_STE_CD  ,
        L2.RGN_CD       POL_RGN_CD  ,
        L2.CNT_CD       POL_CNT_CD  ,
        L2.CONTI_CD      POL_CONTI_CD ,
        RC.POD_CD              ,
        L3.CNT_CD||L3.STE_CD POD_STE_CD  ,
        L3.RGN_CD       POD_RGN_CD  ,
        L3.CNT_CD       POD_CNT_CD  ,
        L3.CONTI_CD      POD_CONTI_CD ,
        RC.DEL_CD              ,
        L4.CNT_CD||L4.STE_CD DEL_STE_CD  ,
        L4.RGN_CD       DEL_RGN_CD  ,
        L4.CNT_CD       DEL_CNT_CD  ,
        L4.CONTI_CD      DEL_CONTI_CD ,

        --------------- T : Tackle, I : Free In, N : Liner In, S : CFS ---------------
        DECODE( RC.BKG_RCV_TERM_CD, 'T', 'Y', 'I', 'Y', 'N', 'Y', 'S', 'Y', RC.BKG_RCV_TERM_CD ) RCV_TERM_CD   ,
        --------------- T : Tackle, O : Free Out, U : Liner Out, S : CFS ---------------
        DECODE( RC.BKG_DE_TERM_CD, 'T', 'Y', 'O', 'Y', 'U', 'Y', 'S', 'Y', RC.BKG_DE_TERM_CD ) DE_TERM_CD   ,

        RC.N1ST_FINC_VVD_CD         ,
        RC.N2ND_FINC_VVD_CD         ,
        RC.N3RD_FINC_VVD_CD         ,
        RC.N4TH_FINC_VVD_CD         ,

        RC.N1ST_RLANE_CD          ,
        RC.N2ND_RLANE_CD          ,
        RC.N3RD_RLANE_CD          ,
        RC.N4TH_RLANE_CD          ,

        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.POL_CD)  				AS N1ST_POL_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N1ST_TS_PORT_CD) 		AS N2ND_POL_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N2ND_TS_PORT_CD) 		AS N3RD_POL_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N3RD_TS_PORT_CD) 		AS N4TH_POL_CONTI_CD          ,

        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD)) 				AS N1ST_POD_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N2ND_POD_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N3RD_POD_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)) AS N4TH_POD_CONTI_CD          ,

        RC.POL_CD  				AS N1ST_POL_CD          ,
        RC.N1ST_TS_PORT_CD 		AS N2ND_POL_CD          ,
        RC.N2ND_TS_PORT_CD 		AS N3RD_POL_CD          ,
        RC.N3RD_TS_PORT_CD 		AS N4TH_POL_CD          ,

        NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD) 				                            AS N1ST_POD_CD          ,
        NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N2ND_POD_CD          ,
        NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N3RD_POD_CD          ,
        DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)                           AS N4TH_POD_CD          ,

        RC.N1ST_TS_PORT_CD         ,
        RC.N2ND_TS_PORT_CD         ,
        RC.N3RD_TS_PORT_CD         ,

        CASE
        WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'
        ELSE 'NN'
        END CML_ZN_CD   ,
        CASE
        WHEN L3.CNT_CD IN ( 'US', 'CA' ) AND RC.POD_CD = RC.DEL_CD AND RC.BKG_DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
        WHEN L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')
        WHEN L2.CNT_CD IN ( 'US', 'CA' ) AND RC.POL_CD = RC.POR_CD AND RC.BKG_RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
        WHEN L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')
        END  USA_SVC_MOD_CD , -- PO, LO, IP, ML, OT

        ( SELECT AC.ACT_GRP_CD FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND AC.N1ST_NOD_CD LIKE RC.POR_CD||'%' AND ROWNUM = 1 ) ORG_TRNS_MOD_CD ,
        ( SELECT AC.ACT_GRP_CD FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND COALESCE(AC.N4TH_NOD_CD, AC.N3RD_NOD_CD, AC.N2ND_NOD_CD) LIKE RC.DEL_CD||'%' AND ROWNUM = 1 ) DEST_TRNS_MOD_CD ,

        NVL(RC.TRSP_RAIL_DIR_KNT, 0)	PRD_RD_CNT,	-- PRD에서  rail direct 갯수  
        CUST_TP_CD

    FROM  ALL_ROUT_CASE       RC ,
          MDM_LOCATION        L1 ,
          MDM_LOCATION        L2 ,
          MDM_LOCATION        L3 ,
          MDM_LOCATION        L4

    WHERE  1 = 1
    AND   L1.LOC_CD        = RC.POR_CD
    AND   L2.LOC_CD(+)     = RC.POL_CD
    AND   L3.LOC_CD(+)     = RC.POD_CD
    AND   L4.LOC_CD        = RC.DEL_CD

    )
), USD_ROUT_CASE_SCG AS (
    SELECT BQ_SEQ,
           BQ.PROP_NO,
           BQ.AMDT_SEQ,
           BQ.SVC_SCP_CD,
           BQ.CMDT_HDR_SEQ,
           BQ.ROUT_SEQ,
           BQ.RT_SEQ,
           BQ.POR_CD,
           BQ.DEL_CD,
           B.CHG_CD,
           B.BKG_RAT_UT_CD AS RAT_UT_CD,
           DECODE(MOF_ID, 'BAF', 'USD', B.CURR_CD) AS CURR_CD,
           -- BAF는 합산을 해야 하니 모두 USD로 치환
           CASE WHEN C.MOF_ID = 'BAF' AND B.ADJ_FLG = 'Y'
                     THEN B.ADJ_SCG_USD_AMT
                WHEN C.MOF_ID = 'BAF' AND B.ADJ_FLG = 'N'
                     THEN TRUNC(B.TRF_SCG_AMT / DECODE(NVL(USD_LOCL_XCH_RT,0), 0, 1, USD_LOCL_XCH_RT), 2)
                ELSE ADJ_SCG_AMT
           END AS SCG_AMT
      FROM BQ
         , PRI_RP_SCP_RT_SCG    B
         , PRI_MOF_MAPG         C
         , GL_MON_XCH_RT XR
     WHERE BQ.PROP_NO        = B.PROP_NO
       AND BQ.AMDT_SEQ       = B.AMDT_SEQ
       AND BQ.SVC_SCP_CD     = B.SVC_SCP_CD
       AND BQ.CMDT_HDR_SEQ   = B.CMDT_HDR_SEQ
       AND BQ.ROUT_SEQ       = B.ROUT_SEQ
       AND BQ.RT_SEQ         = B.RT_SEQ
       AND BQ.USD_ROUT_CS_SEL_FLG = 'Y'
       ---------------------------------------
       AND XR.ACCT_XCH_RT_YRMON = TO_CHAR(BQ.EFF_DT , 'YYYYMM')
       AND XR.ACCT_XCH_RT_LVL   = '1'
       AND XR.CURR_CD           =  B.CURR_CD
       ---------------------------------------
       AND B.CHG_CD             = C.HJS_ID
       AND C.MAPG_TP_CD         = 'SCG'
       AND C.FILE_USE_ONY_FLG   = 'Y'
       AND C.DELT_FLG           = 'N'
       ---------------------------------------
) ,
--GL AS (
--
---------------------------------------------------------------------------------------------
--GROUP LOCATION 을 SELECT 한다.
--S/C 의 경우는 NOTE CONVERSION 에서 사용하는 GROUP LOCATION ( 'EAST', 'WEST' ) 도 포함시킨다.
---------------------------------------------------------------------------------------------/
-- 사용하지 않기에 삭제.
--) ,
NC AS (

---------------------------------------------------------------------------------------------
--BOOKING 에 해당하는 NOTE CONVERSION 을 SELECT 한다.
---------------------------------------------------------------------------------------------/
SELECT BQ.BQ_SEQ       ,
    NC.NOTE_CONV_MAPG_ID ,
    NC.NOTE_CONV_SEQ   ,

    NC.NOTE_CONV_TP_CD          ,
    (	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO	,
    NC.CHG_RULE_TP_CD           ,
    NC.NOTE_CONV_CHG_CD         ,
    NC.NOTE_CONV_RULE_CD        ,
    NC.RT_APPL_TP_CD            ,
    NC.RT_OP_CD                 ,
    NC.CURR_CD                  ,
    NC.FRT_RT_AMT               ,
    NC.PAY_TERM_CD              ,
    NC.BKG_RAT_UT_CD      ,
    NC.BKG_PRC_CGO_TP_CD    ,

    ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, NC.CHG_RULE_TP_CD, NC.NOTE_CONV_CHG_CD, NC.NOTE_CONV_RULE_CD, DECODE(NC.CHG_RULE_TP_CD, 'C', NC.BKG_RAT_UT_CD)
              ORDER BY
               ( SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) ,
                DECODE(BKG_POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, NULL, 4, 6)
                + DECODE(BKG_PRC_CGO_TP_CD  , NULL, 0, 1)
                + DECODE(BKG_SLAN_CD     , NULL, 0, 1)
                + DECODE(BKG_VSL_CD      , NULL, 0, 1)
                + DECODE(BKG_TS_PORT_DEF_CD  , NULL, 0, 1) DESC ,
               NC.FRT_RT_AMT     ,
               NC.NOTE_CONV_MAPG_ID ,
               NC.NOTE_CONV_SEQ
              ) ROW_NUMBER ,

    NULL CONV_RAT_UT_CD      ,
    NULL CONV_PRC_CGO_TP_CD    ,
    NULL CONV_ORG_LOC_TP_CD        ,
    NULL CONV_ORG_LOC_DEF_CD       ,
    NULL CONV_ORG_VIA_LOC_TP_CD    ,
    NULL CONV_ORG_VIA_LOC_DEF_CD   ,
    NULL CONV_DEST_VIA_LOC_TP_CD   ,
    NULL CONV_DEST_VIA_LOC_DEF_CD ,
    NULL CONV_DEST_LOC_TP_CD     ,
    NULL CONV_DEST_LOC_DEF_CD      ,
    NULL CONV_PRC_RCV_TERM_CD      ,
    NULL CONV_PRC_DE_TERM_CD

FROM  BQ ,

    (
    SELECT NC.*
    FROM  PRI_RFA_NOTE_CONV NC, RFA_LIST LST
    WHERE  NC.PROP_NO  = LST.PROP_NO
    AND   NC.AMDT_SEQ  = LST.AMDT_SEQ
    AND   NC.SVC_SCP_CD = LST.SVC_SCP_CD
-- 2010.02.24 NOTE 는 날짜 의미 없음. ( 김진철 과장 )
--    AND   TO_DATE(SYSDATE) BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999  -- 0.99999 는 23시 59분 59초를 의미
-----------------BASE TABLE----------------------
    AND   NC.NOTE_CONV_CHG_CD IN (
        SELECT HJS_ID
          FROM PRI_MOF_MAPG
         WHERE MAPG_TP_CD = 'SCG'
           AND FILE_USE_ONY_FLG = 'Y'
           AND DELT_FLG = 'N'
       )
-----------------BASE TABLE----------------------
    ) NC             ,

    MDM_CHARGE        MC

WHERE  MC.CHG_CD(+)      = NC.NOTE_CONV_CHG_CD
  AND  USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상.
AND   (
      NC.NOTE_CONV_TP_CD  IN ( 'T', 'P' )
    OR NC.NOTE_CONV_MAPG_ID IN
      (

      SELECT CN.NOTE_CONV_MAPG_ID
      FROM  PRI_RP_SCP_RT_CNOTE CN
      WHERE  CN.PROP_NO      = BQ.PROP_NO
      AND   CN.AMDT_SEQ      = BQ.AMDT_SEQ
      AND   CN.SVC_SCP_CD     = BQ.SVC_SCP_CD
      AND   CN.CMDT_HDR_SEQ    = BQ.CMDT_HDR_SEQ
      AND   CN.SRC_INFO_CD(+)    <> 'AD'
      UNION ALL
      SELECT RN.NOTE_CONV_MAPG_ID
      FROM  PRI_RP_SCP_RT_CMDT_RNOTE RN
      WHERE  RN.PROP_NO      = BQ.PROP_NO
      AND   RN.AMDT_SEQ      = BQ.AMDT_SEQ
      AND   RN.SVC_SCP_CD     = BQ.SVC_SCP_CD
      AND   RN.CMDT_HDR_SEQ    = BQ.CMDT_HDR_SEQ
      AND   RN.ROUT_SEQ      = BQ.ROUT_SEQ
      AND   RN.SRC_INFO_CD(+)    <> 'AD'

      )
    )


---------------------------------------------------------------------------------------------
--NOT RULE CODE 는 SURCHARGE 에서만 사용되며,
--TYP RULE CODE 는 OFT 에 사용되는 것이 기본이지만, SURCHARGE 에서도 사용된다.
---------------------------------------------------------------------------------------------/
AND   (
      NC.CHG_RULE_TP_CD   = 'C'
    OR
      (
        NC.CHG_RULE_TP_CD   = 'R'
      AND NC.NOTE_CONV_RULE_CD IN ( 'NOT', 'TYP' )
      )
    )


----------------------------------------------------------------------------------------------
--< RATING UNIT >
----------------------------------------------------------------------------------------------
AND   (
      (
        NC.CHG_RULE_TP_CD  = 'C' ---- charge code 는  아래 C1 에서 처리함
      AND NC.BKG_RAT_UT_CD  NOT IN ( 'MT', 'CM' )
      )
    OR (
          NC.BKG_RAT_UT_CD IS NULL
        OR NC.BKG_RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD
        OR NC.BKG_RAT_UT_CD IN ( 'BX', 'BL' )
            OR
           (
             NC.BKG_RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
          AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.BKG_RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD
          )
      )
    )


---------------------------------------------------------------------------------------------
---- < CARGO TYPE >
---------------------------------------------------------------------------------------------
AND   (
      NC.BKG_PRC_CGO_TP_CD IS NULL
    OR NC.BKG_PRC_CGO_TP_CD IN BQ.PRC_CGO_TP_CD
    )


---------------------------------------------------------------------------------------------
--< ROUTE >
--STANDARD NOTE 의 경우는 GROUP 을 사용하지 않으므로,
--STANDARD NOTE 를 위한 특별한 고려가 필요하지 않음.
-------------------------------------------------------------------------------------------/
---- POR --/
AND   (
      NC.BKG_POR_DEF_CD IS NULL
    OR NC.BKG_POR_DEF_CD = DECODE(NC.BKG_POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
    )
---- POL --/
AND   (
      NC.BKG_POL_DEF_CD IS NULL
    OR NC.BKG_POL_DEF_CD = DECODE(NC.BKG_POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
    )
---- POD --/
AND   (
      NC.BKG_POD_DEF_CD IS NULL
    OR NC.BKG_POD_DEF_CD = DECODE(NC.BKG_POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
    )
---- DEL --/
AND   (
      NC.BKG_DEL_DEF_CD IS NULL
    OR NC.BKG_DEL_DEF_CD = DECODE(NC.BKG_DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
    )


----------------------------------------------------------------------------------------------
--< LANE & VVD >
--TRUNK, T/S 구분없이 LANE 이나 VVD 가 존재하는지 여부로 판단한다.
---------------------------------------------------------------------------------------------/
AND   (
      NC.BKG_SLAN_CD IS NULL
    OR NC.BKG_SLAN_Cd IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )
    )

AND   (  NC.BKG_VSL_CD IS NULL
    OR NC.BKG_VSL_CD||NC.BKG_SKD_VOY_NO||NC.BKG_SKD_DIR_CD IN ( BQ.N1ST_FINC_VVD_CD, BQ.N2ND_FINC_VVD_CD, BQ.N3RD_FINC_VVD_CD, BQ.N4TH_FINC_VVD_CD )
    )


----------------------------------------------------------------------------------------------
--< T/S PORT >
--T/S 가 발생하는 PORT 를 대상으로 한다.
---------------------------------------------------------------------------------------------/
AND   (
      NC.BKG_TS_PORT_DEF_CD IS NULL
    OR NC.BKG_TS_PORT_DEF_CD IN
      (
      SELECT DECODE(NC.BKG_TS_PORT_TP_CD, 'L', A.LOC_CD, 'T', A.CNT_CD||A.STE_CD, 'R', A.RGN_CD, 'C', A.CNT_CD)
      FROM  MDM_LOCATION  A
      WHERE  A.LOC_CD IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )
      )
    )

) ,
NC_P AS
(

----------------------------------------------------------------------------------------------
--적용될 CONVERSION 이 같은 NOTE_CONV_TP_CD 에서 하나의 NOTE_CONV_RULE_CD 가 되도록 우선순위가 낮은 것을 제거한다.
--우선순위가 똑같은 경우에는 NOTE_CONV_MAPG_ID||LPAD(NOTE_CONV_SEQ, 6, '0') 가 적은 것을 우선한다.
--
--'TYP' 1개의 RULE CODE 를 가진 BKG DATA 를 UNION ALL 로 추가한다.
--이 부분은 계약과 BKG 를 직접 비교하지 않고, NOTE CONV 와만 비교하도록 하기 위함이다.
--
---------------------------------------------------------------------------------------------/

SELECT NC.BQ_SEQ          ,
    NC.NOTE_CONV_MAPG_ID    ,
    NC.NOTE_CONV_SEQ      ,
    'C' BKG_CONV_TP_CD     ,
    NC.NOTE_CONV_TP_CD     ,
    NC.CONV_TP_PRIO			,
    NC.CHG_RULE_TP_CD           ,
    NC.NOTE_CONV_CHG_CD         ,
    NC.NOTE_CONV_RULE_CD    ,
    NC.CONV_RAT_UT_CD      ,
    ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.CONV_RAT_UT_CD ) CONV_RAT_UT_SZ_CD  ,
    NC.CONV_PRC_CGO_TP_CD    ,
    NC.CONV_ORG_LOC_TP_CD    ,
    NC.CONV_ORG_LOC_DEF_CD   ,
    NC.CONV_ORG_VIA_LOC_TP_CD  ,
    NC.CONV_ORG_VIA_LOC_DEF_CD ,
    NC.CONV_DEST_VIA_LOC_TP_CD ,
    NC.CONV_DEST_VIA_LOC_DEF_CD ,
    NC.CONV_DEST_LOC_TP_CD   ,
    NC.CONV_DEST_LOC_DEF_CD   ,
    NC.CONV_PRC_RCV_TERM_CD   ,
    NC.CONV_PRC_DE_TERM_CD   ,
    NC.BKG_RAT_UT_CD      ,
    NC.BKG_PRC_CGO_TP_CD    ,
    NC.RT_APPL_TP_CD      ,
    NC.RT_OP_CD         ,
    NC.CURR_CD         ,
    NC.FRT_RT_AMT        ,
    NC.PAY_TERM_CD
FROM  NC
WHERE  ROW_NUMBER = 1
UNION ALL
SELECT BQ.BQ_SEQ                    ,
    NULL         NOTE_CONV_MAPG_ID     ,
    NULL         NOTE_CONV_SEQ       ,
    'B'          BKG_CONV_TP_CD      ,
    NULL         NOTE_CONV_TP_CD      ,
    0			 CONV_TP_PRIO			,
    'R'          CHG_RULE_TP_CD            ,
    NULL         NOTE_CONV_CHG_CD     ,
    RC.NOTE_CONV_RULE_CD NOTE_CONV_RULE_CD     ,
    BQ.CTRT_CNTR_TPSZ_CD CONV_RAT_UT_CD      ,
    ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD ) CONV_RAT_UT_SZ_CD  ,
    BQ.PRC_CGO_TP_CD   CONV_PRC_CGO_TP_CD    ,
    'L'          CONV_ORG_LOC_TP_CD    ,
    BQ.POR_CD       CONV_ORG_LOC_DEF_CD    ,
    'L'          CONV_ORG_VIA_LOC_TP_CD  ,
    BQ.POL_CD       CONV_ORG_VIA_LOC_DEF_CD  ,
    'L'          CONV_DEST_VIA_LOC_TP_CD  ,
    BQ.POD_CD       CONV_DEST_VIA_LOC_DEF_CD ,
    'L'          CONV_DEST_LOC_TP_CD    ,
    BQ.DEL_CD       CONV_DEST_LOC_DEF_CD   ,
    BQ.RCV_TERM_CD    CONV_PRC_RCV_TERM_CD   ,
    BQ.DE_TERM_CD     CONV_PRC_DE_TERM_CD    ,
    BQ.CTRT_CNTR_TPSZ_CD BKG_RAT_UT_CD       ,
    BQ.PRC_CGO_TP_CD   BKG_PRC_CGO_TP_CD     ,
    NULL         RT_APPL_TP_CD       ,
    NULL         RT_OP_CD         ,
    NULL         CURR_CD          ,
    NULL         FRT_RT_AMT        ,
    NULL         PAY_TERM_CD
FROM  BQ ,
    (
    SELECT 'TYP' NOTE_CONV_RULE_CD FROM DUAL
    ) RC
WHERE USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상.
) ,
C1 AS (
----------------------------------------------------------------------------------------------
--< CONVERSION SURCHARGE >
--
--S Subject        : Tariff Surcharge 를 적용하겠다.
--I Include        : Subjrect 와 동일 ( 단, 표시만 'I' )
--F Fix Amount     : 고정 값
--A Adjust Adjust  : Tariff Surcharge 에 계산 공식 적용 + - * /, Lower 는 더 낮은값, Higher 는 더 높은 값.
--N Not Applicable : Tariff Surcharge 도 적용하지 않겠다.
--
--
--MTCH_PRIO 가 같은데.. CMDT 와 ROUT 만의 MTCH_PRIO 도 같으면 ERROR 로직 발생해야하는데..
---------------------------------------------------------------------------------------------/

SELECT C1.BQ_SEQ       ,
    C1.SEL_TP_CD      ,
    C1.SEL_TP_PRIO     ,
    C1.SVC_SCP_CD   ,

    C1.CHG_CD       ,
    CASE
	WHEN C1.RAT_UT_CD = 'PC' AND SP.FLT_PCT_TP_CD = 'P' THEN SP.FLT_PCT_TP_CD
	ELSE 'F'
	END	FLT_PCT_TP_CD				,
	CASE
	WHEN C1.RAT_UT_CD = 'PC' AND SP.FLT_PCT_TP_CD = 'P' THEN SP.PCT_BSE_CD
	ELSE NULL
	END	PCT_BSE_CD					,

    C1.RT_APPL_TP_CD    ,
    C1.RT_OP_CD      ,
    C1.CURR_CD             ,
    C1.FRT_RT_AMT     ,
    C1.TYP_BKG_CONV_TP_CD ,
    C1.RAT_UT_CD      ,
    C1.PRC_CGO_TP_CD    ,
    C1.RT_INCL_FLG
FROM  (
    SELECT C.BQ_SEQ       ,
        'C'        SEL_TP_CD      ,
        1          SEL_TP_PRIO     ,
        ROW_NUMBER() OVER ( PARTITION BY C.BQ_SEQ, C.NOTE_CONV_CHG_CD
                  ORDER BY
                   ( SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = C.NOTE_CONV_TP_CD ) ,
                   DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 10, 'C', 0)
                   + DECODE(C.BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6) DESC
                 ) ROW_NUMBER     ,
    
        C.NOTE_CONV_CHG_CD CHG_CD       ,
        NULL        FLT_PCT_TP_CD    ,
        NULL        PCT_BSE_CD  ,

        C.RT_APPL_TP_CD         ,
        C.RT_OP_CD              ,
        C.CURR_CD               ,
        BQ.SVC_SCP_CD           ,

        CASE
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '+' THEN C.FRT_RT_AMT + C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '-' THEN C.FRT_RT_AMT - C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '*' THEN C.FRT_RT_AMT * C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '/' THEN C.FRT_RT_AMT / C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'B' THEN C.FRT_RT_AMT
        END FRT_RT_AMT             ,

        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ,
        C.BKG_RAT_UT_CD    RAT_UT_CD      ,

        C.BKG_PRC_CGO_TP_CD  PRC_CGO_TP_CD    ,
        CASE WHEN C_NOT.RT_APPL_TP_CD = 'I' AND C.NOTE_CONV_CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
			 THEN 'Y' ELSE	DECODE(C.RT_APPL_TP_CD, 'I', 'Y', 'N')
		END	RT_INCL_FLG	,
		DECODE(C_NOT.BKG_CONV_TP_CD, 'C', 'Y', 'N') NOT_RULE_FLG	
    FROM  BQ     ,
        NC_P C   ,
        NC_P C_TYP, -- type --/
        NC_P C_NOT  -- not --/
    WHERE  C.BQ_SEQ        = BQ.BQ_SEQ
    AND   C.CHG_RULE_TP_CD    = 'C'
    AND   C_TYP.BQ_SEQ      = BQ.BQ_SEQ
    AND   C_TYP.NOTE_CONV_RULE_CD = 'TYP'
    AND   C_NOT.BQ_SEQ(+)      = C.BQ_SEQ
    AND   C_NOT.NOTE_CONV_RULE_CD(+) = 'NOT'
    AND   C_NOT.CONV_TP_PRIO(+) < C.CONV_TP_PRIO
    AND   USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상.
    
    -------- RATING UNIT --------/
    AND     (
			C.BKG_RAT_UT_CD	IS NULL
              OR  C.BKG_RAT_UT_CD = C_TYP.CONV_RAT_UT_CD
              OR C.BKG_RAT_UT_CD IN ( 'BX', 'BL', 'PC' )
              OR
              (
                C.BKG_RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = C.BKG_RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD
              )
        )
    ) C1 ,
     PRI_SCG_PRF	SP
WHERE SP.SVC_SCP_CD(+)	= C1.SVC_SCP_CD		---- BKG_SVC_SCP_CD 를 사용한다.
AND	SP.CHG_CD(+)		= C1.CHG_CD
AND C1.ROW_NUMBER = 1
--------------------------------------------------------------------------------------------
--NOT RULE 적용
-------------------------------------------------------------------------------------------/

AND	NOT	(
			C1.NOT_RULE_FLG	= 'Y'
		AND	C1.RT_INCL_FLG		= 'N'
		AND	C1.CHG_CD			NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
		)

) ,
G2 AS (

----------------------------------------------------------------------------------------------
--< GOH >
--BAR TYPE 별 ROW 구분 있음.
--
--TYPE RULE CODE 가 적용되기는 하지만, 운임 계산은 하지 않고, 계약서에 있는 운임을 그대로 사용한다.
--
--- BKG Special Cargo 정보 중 Hanger 정보가 있고, S/C상에 해당하는 GOH 운임이 존재하는 경우 Rating
---------------------------------------------------------------------------------------------/


SELECT NULL BQ_SEQ       ,
    NULL SEL_TP_CD      ,
    NULL SEL_TP_PRIO     ,
    NULL CHG_CD       ,
    NULL FLT_PCT_TP_CD    ,
    NULL PCT_BSE_CD     ,
    NULL RT_APPL_TP_CD    ,
    NULL RT_OP_CD      ,
    NULL CURR_CD             ,
    NULL FRT_RT_AMT     ,
    NULL TYP_BKG_CONV_TP_CD ,
    NULL RAT_UT_CD      ,
    NULL PRC_CGO_TP_CD    ,
    NULL RT_INCL_FLG     ,
    NULL NOT_RULE_FLG
FROM  DUAL
WHERE  1 = 2

) ,
S3 AS
(
----------------------------------------------------------------------------------------------
--< TARIFF SURCHARGE >
---------------------------------------------------------------------------------------------/

SELECT BQ_SEQ       ,
    SEL_TP_CD      ,
    SEL_TP_PRIO     ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    RT_APPL_TP_CD    ,
    RT_OP_CD      ,
    CURR_CD             ,
    FRT_RT_AMT     ,
    TYP_BKG_CONV_TP_CD ,
    RAT_UT_CD      ,
    PRC_CGO_TP_CD    ,
    RT_INCL_FLG     ,
    NOT_RULE_FLG
FROM  (
    SELECT BQ.BQ_SEQ         ,
        'S'  SEL_TP_CD      ,
        3    SEL_TP_PRIO     ,

        ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, SP.CHG_CD
                  ORDER BY
                    DECODE(SR.POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(SR.POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(SR.POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(SR.DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 10, 'C', 0)
                    + DECODE(SR.RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6)
                    + DECODE(SR.PRC_CGO_TP_CD    , NULL, 0, 1)
                    + DECODE(SR.USA_SVC_MOD_CD   , NULL, 0, 1)
                    + DECODE(SR.ORG_TRSP_MOD_CD   , NULL, 0, 1)
                    + DECODE(SR.DEST_TRSP_MOD_CD  , NULL, 0, 1)
                    + DECODE(SR.PRC_RCV_TERM_CD   , NULL, 0, 1)
                    + DECODE(SR.PRC_DE_TERM_CD   , NULL, 0, 1)
                    + DECODE(SR.VSL_SLAN_CD     , NULL, 0, 1)
                    + DECODE(SR.TS_PORT_CD     , NULL, 0, 1)
                    + DECODE(SR.SUB_TRD_CD     , NULL, 0, 1) DESC,
                    NVL(SR.CTRT_DT, TO_DATE('19000101','YYYYMMDD')) DESC
                 ) ROW_NUMBER ,

        SP.CHG_CD         ,

        SP.FLT_PCT_TP_CD     ,
        SP.PCT_BSE_CD       ,

        NULL RT_APPL_TP_CD    ,
        NULL RT_OP_CD      ,

        SR.CURR_CD        ,
        CASE
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '+' THEN SR.SCG_AMT + C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '-' THEN SR.SCG_AMT - C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '*' THEN SR.SCG_AMT * C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '/' THEN SR.SCG_AMT / C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'B' THEN SR.SCG_AMT
        END FRT_RT_AMT      ,

        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ,
        SR.RAT_UT_CD       ,
        SR.PRC_CGO_TP_CD     ,

        CASE WHEN C_NOT.RT_APPL_TP_CD = 'I' AND SP.CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
			 THEN 'Y' ELSE	'N'
		END	RT_INCL_FLG	 ,
        DECODE(C_NOT.BKG_CONV_TP_CD, 'C', 'Y', 'N') NOT_RULE_FLG
    FROM  BQ         ,
        PRI_SCG_PRF  SP  ,
        MDM_CHARGE  MC  ,
        PRI_SCG_RT  SR  ,
        NC_P     C_TYP ,     ---- RATING UNIT CONVERSION --/
        NC_P     C_NOT
    WHERE  SP.SVC_SCP_CD        = BQ.SVC_SCP_CD
    AND   MC.CHG_CD          = SP.CHG_CD
    AND   MC.AUTO_RAT_FLG       = 'Y'
    AND   SR.SVC_SCP_CD        = SP.SVC_SCP_CD
    AND   SR.CHG_CD          = SP.CHG_CD
    AND   BQ.EFF_DT      BETWEEN SR.EFF_DT AND SR.EXP_DT + 0.99999 ---- 0.99999 는 23시 59분 59초를 의미 --/
    AND   SR.WDR_FLG         = 'N'
    AND   SR.DELT_FLG         = 'N'
    AND   SR.SCG_RQST_PROC_CD = 'A' ---- [CHM-201641685]에 따른 컬럼 추가 반영 --/
    AND   C_TYP.BQ_SEQ        = BQ.BQ_SEQ
    AND   C_TYP.NOTE_CONV_RULE_CD   = 'TYP'
    AND   C_NOT.BQ_SEQ(+)       = BQ.BQ_SEQ
    AND   C_NOT.NOTE_CONV_RULE_CD(+) = 'NOT'
    AND   USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상.
    
-----------------BASE TABLE----------------------
    AND   SP.CHG_CD IN (
        SELECT HJS_ID
          FROM PRI_MOF_MAPG
         WHERE MAPG_TP_CD = 'SCG'
           AND FILE_USE_ONY_FLG = 'Y'
           AND DELT_FLG = 'N'
       )
-----------------BASE TABLE----------------------

----------------------------------------------------------------------------------------------
--R/D TERM CHECK ( MDM_CHARGE 의 R/D TERM CHECK 포함 )
---------------------------------------------------------------------------------------------/
    AND   (
          SR.PRC_RCV_TERM_CD = BQ.RCV_TERM_CD
        OR (
            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_RCV_TERM_CD IS NULL )
          AND BQ.RCV_TERM_CD IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.RCV_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )
          )
        )

    AND   (
          SR.PRC_DE_TERM_CD  = BQ.DE_TERM_CD
        OR (
            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_DE_TERM_CD IS NULL )
          AND BQ.DE_TERM_CD  IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.DE_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )
          )
        )

    ---------------------- POR ---------------------------
    AND   (
          SP.POR_USE_FLG = 'N'
        OR SR.POR_DEF_CD  IS NULL
        OR  SR.POR_DEF_CD  = DECODE(SR.POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
        OR (
            SR.POR_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.POR_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
                )
          )
        )
    ---------------------- POL ---------------------------
    AND   (
          SP.POL_USE_FLG = 'N'
        OR SR.POL_DEF_CD  IS NULL
        OR  SR.POL_DEF_CD  = DECODE(SR.POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
        OR (
            SR.POL_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.POL_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
                )
          )
        )
    ---------------------- POD ---------------------------
    AND   (
          SP.POD_USE_FLG = 'N'
        OR SR.POD_DEF_CD  IS NULL
        OR  SR.POD_DEF_CD  = DECODE(SR.POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
        OR (
            SR.POD_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.POD_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
                )
          )
        )
    ---------------------- DEL ---------------------------
    AND   (
          SP.DEL_USE_FLG = 'N'
        OR SR.DEL_DEF_CD  IS NULL
        OR  SR.DEL_DEF_CD  = DECODE(SR.DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
        OR (
            SR.DEL_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.DEL_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
                )
          )
        )
    ---------------------- SUB TRADE ----------------------
    AND   (
          SP.SUB_TRD_USE_FLG = 'N'
        OR SR.SUB_TRD_CD    IS NULL
        OR SR.SUB_TRD_CD    IN
          (
          SELECT DL.SUB_TRD_CD
          FROM   MDM_DTL_REV_LANE  DL
          WHERE (DL.RLANE_CD, DL.VSL_SLAN_DIR_CD, DL.FM_CONTI_CD, DL.TO_CONTI_CD ) IN 
          		(SELECT BQ.N1ST_RLANE_CD, SUBSTR(BQ.N1ST_FINC_VVD_CD, 9,1), BQ.N1ST_POL_CONTI_CD, BQ.N1ST_POD_CONTI_CD  FROM DUAL  
          		 UNION ALL
          		 SELECT BQ.N2ND_RLANE_CD, SUBSTR(BQ.N2ND_FINC_VVD_CD, 9,1), BQ.N2ND_POL_CONTI_CD, BQ.N2ND_POD_CONTI_CD  FROM DUAL
          		 UNION ALL
          		 SELECT BQ.N3RD_RLANE_CD, SUBSTR(BQ.N3RD_FINC_VVD_CD, 9,1), BQ.N3RD_POL_CONTI_CD, BQ.N3RD_POD_CONTI_CD  FROM DUAL
          		 UNION ALL
          		 SELECT BQ.N4TH_RLANE_CD, SUBSTR(BQ.N4TH_FINC_VVD_CD, 9,1), BQ.N4TH_POL_CONTI_CD, BQ.N4TH_POD_CONTI_CD  FROM DUAL
          		 ) 
          AND   DL.DELT_FLG     = 'N'
          )
        )

    ---------------------- LANE ---------------------------
    AND   (
          SP.SLAN_USE_FLG = 'N'
        OR SR.VSL_SLAN_CD IS NULL
        OR SR.VSL_SLAN_CD IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )
        )

    ---------------------- T/S PORT ----------------------
    AND   (
          SP.TS_PORT_USE_FLG = 'N'
        OR SR.TS_PORT_CD    IS NULL
        OR SR.TS_PORT_CD    IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )
        )

    ----------------- ORG TRANS MODE ----------------------
    AND   (
          SP.TRNS_MOD_USE_FLG = 'N'
        OR SR.ORG_TRSP_MOD_CD IS NULL
        OR SR.ORG_TRSP_MOD_CD = BQ.ORG_TRNS_MOD_CD
        )
    ----------------- DEST TRANS MODE ----------------------
    AND   (
          SP.TRNS_MOD_USE_FLG = 'N'
        OR SR.DEST_TRSP_MOD_CD IS NULL
        OR SR.DEST_TRSP_MOD_CD = BQ.DEST_TRNS_MOD_CD
        )
    ----------------- USA SVC MODE ----------------------
    AND   (
          SP.USA_SVC_MOD_USE_FLG = 'N'
        OR SR.USA_SVC_MOD_CD    IS NULL
        OR SR.USA_SVC_MOD_CD    = DECODE(SR.USA_SVC_MOD_CD, 'CZ', BQ.CML_ZN_CD, BQ.USA_SVC_MOD_CD )
        )

----------------------------------------------------------------------------------------------
-- < CANAL >
-- P : PAPAC
-- S : EGSUC
---------------------------------------------------------------------------------------------/
    AND (
          SP.CNL_TZ_FLG  = 'N'
        OR SR.CNL_TZ_CD  IS NULL
        OR EXISTS (
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N1ST_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N1ST_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ 
            UNION ALL
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N2ND_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N2ND_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         
            UNION ALL
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N3RD_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N3RD_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         
            UNION ALL
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N4TH_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N4TH_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         
        )
    ) 

    ---------------------- CARGO TYPE ----------------------
    AND   (
          SR.PRC_CGO_TP_CD IS NULL
        OR SR.PRC_CGO_TP_CD = BQ.PRC_CGO_TP_CD
        )
        
     AND     (
            SP.CTRT_DT_USE_FLG = 'N'
           OR  SR.CTRT_DT IS NULL
           OR  SR.CTRT_DT <= (SELECT CTRT_EFF_DT 
                               FROM PRI_RP_DUR
                              WHERE PROP_NO = BQ.PROP_NO
                                AND AMDT_SEQ = BQ.AMDT_SEQ)
             )

    ---------------------- RATING UNIT ----------------------
    AND     (
          SR.RAT_UT_CD IN ( 'BL', 'BX', 'PC', 'RM' )
        OR SR.RAT_UT_CD = C_TYP.CONV_RAT_UT_CD
            OR (
                SR.RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = SR.RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD
              )
            )


----------------------------------------------------------------------------------------------
-- < RT_APPL_TP_CD = 'N' (Not Applicable) >
---------------------------------------------------------------------------------------------/
    AND   NOT EXISTS (
              SELECT 'X'
              FROM  C1
              WHERE  C1.BQ_SEQ     = BQ.BQ_SEQ
              AND   C1.CHG_CD     = SP.CHG_CD
              AND   C1.RT_APPL_TP_CD = 'N'
              )

----------------------------------------------------------------------------------------------
-- < GOH >
---------------------------------------------------------------------------------------------/
    AND   NOT EXISTS (
              SELECT 'X'
              FROM  G2
              WHERE  G2.BQ_SEQ     = BQ.BQ_SEQ
              AND   G2.CHG_CD     = SP.CHG_CD
              )

    )
WHERE  ROW_NUMBER = 1
) ,
SG AS (
SELECT BQ_SEQ       ,
    SEL_TP_CD      ,
    SEL_TP_PRIO     ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    RT_APPL_TP_CD    ,
    RT_OP_CD      ,
    CURR_CD             ,
    FRT_RT_AMT     ,
    SUR_RT_AMT,
    TYP_BKG_CONV_TP_CD ,
    RAT_UT_CD      ,
    PRC_CGO_TP_CD    ,
    RT_INCL_FLG
FROM  (
    SELECT SG.BQ_SEQ       ,
        SG.SEL_TP_CD     ,
        SG.SEL_TP_PRIO    ,
        SG.CHG_CD       ,
        SG.FLT_PCT_TP_CD   ,
        SG.PCT_BSE_CD     ,
        C1.RT_APPL_TP_CD   ,
        NULL RT_OP_CD    ,
        SG.CURR_CD           ,

        CASE
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '+' THEN SG.FRT_RT_AMT + C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '-' THEN SG.FRT_RT_AMT - C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '*' THEN SG.FRT_RT_AMT * C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '/' THEN SG.FRT_RT_AMT / C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '>' THEN GREATEST(SG.FRT_RT_AMT, C1.FRT_RT_AMT)
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '<' THEN LEAST(SG.FRT_RT_AMT, C1.FRT_RT_AMT)
        WHEN C1.RT_APPL_TP_CD = 'F' AND SG.FRT_RT_AMT <> 0 THEN C1.FRT_RT_AMT
        ELSE SG.FRT_RT_AMT
        END FRT_RT_AMT    ,

        SG.FRT_RT_AMT AS SUR_RT_AMT,

        SG.TYP_BKG_CONV_TP_CD ,
        SG.RAT_UT_CD     ,
        SG.PRC_CGO_TP_CD   ,

        NVL(C1.RT_INCL_FLG, SG.RT_INCL_FLG) RT_INCL_FLG ,
        SG.NOT_RULE_FLG
    FROM  (
        SELECT * FROM G2
        UNION ALL
        SELECT * FROM S3
        ) SG ,
        (SELECT * FROM C1 WHERE NOT
                                    (
                                        CHG_CD  NOT IN ( SELECT CHG_CD FROM S3 WHERE S3.BQ_SEQ = C1.BQ_SEQ )
                                    AND EXISTS  (
                                                SELECT  'X'
                                                FROM    PRI_SCG_PRF SP
                                                WHERE   SP.SVC_SCP_CD = C1.SVC_SCP_CD 
                                                AND     SP.CHG_CD     = C1.CHG_CD
                                                )
                                    )
        ) C1                                    
    WHERE  C1.BQ_SEQ(+)    = SG.BQ_SEQ
    AND   C1.CHG_CD(+)    = SG.CHG_CD
    ) SG
WHERE  
  NOT (
        SG.RT_APPL_TP_CD IS NULL 
      AND SG.NOT_RULE_FLG  = 'Y'
      AND SG.RT_INCL_FLG  = 'N'
      AND SG.CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
      )

----------------------------------------------------------------------------------------------
-- NOT RULE 적용
---------------------------------------------------------------------------------------------/

) ,
GS AS
(
SELECT BQ.BQ_SEQ       ,
    BQ.PROP_NO      ,
    BQ.AMDT_SEQ      ,
    BQ.SVC_SCP_CD     ,
    BQ.CMDT_HDR_SEQ    ,
    BQ.ROUT_SEQ      ,
    BQ.RT_SEQ       ,
    BQ.EFF_DT,
    BQ.POR_CD,
    BQ.DEL_CD,
    SG.RT_INCL_FLG ,
    SG.CHG_CD       ,
    SG.FLT_PCT_TP_CD   ,
    SG.PCT_BSE_CD     ,
    SG.CURR_CD      ,
    CASE
    WHEN SG.RAT_UT_CD = 'PC' THEN 0 -- 나중에 구해야 한다.
    WHEN SG.RT_INCL_FLG = 'Y' THEN 0 
    ELSE SG.FRT_RT_AMT
    END CHG_UT_AMT    ,
    SG.SUR_RT_AMT   ,

    CASE
    WHEN SG.RAT_UT_CD = 'BL' THEN 1
    WHEN SG.RAT_UT_CD = 'PC' THEN SG.FRT_RT_AMT
    WHEN SG.RAT_UT_CD = 'RM' THEN BQ.PRD_RD_CNT
    ELSE 1
    END RAT_AS_QTY    ,
    SG.RAT_UT_CD     ,
    0 CHG_AMT       ,
    BQ.PRC_CGO_TP_CD CGO_TP_CD ,
    BQ.RCV_TERM_CD    ,
    BQ.DE_TERM_CD	,
    BQ.POR_CNT_CD   ,
    BQ.DEL_CNT_CD,
    USD_ROUT_CS_SEL_FLG
FROM  BQ ,
    SG
WHERE  SG.BQ_SEQ(+)  = BQ.BQ_SEQ
  AND  SG.CHG_CD(+) NOT IN ( DECODE(BQ.CUST_TP_CD, 'N', 'XXX', 'NMS' )) ---- CUSTOMER TYPE 이 NVOCC 인 경우만 NMS 존재
  AND  USD_ROUT_CS_SEL_FLG <> 'Y' -- SCG 계산 안한 것만 대상.
) ,
FN AS
(

----------------------------------------------------------------------------------------------
-- GENERAL SURCHARGE
---------------------------------------------------------------------------------------------/

SELECT BQ_SEQ       ,
    PROP_NO       ,
    AMDT_SEQ      ,
    SVC_SCP_CD     ,
    CMDT_HDR_SEQ    ,
    ROUT_SEQ      ,
    RT_SEQ       ,
    EFF_DT,
    POR_CD,
    DEL_CD,
    RT_INCL_FLG ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    CURR_CD       ,
    CHG_UT_AMT     ,
    SUR_RT_AMT ,
    RAT_AS_QTY     ,
    RAT_UT_CD      ,
    CHG_UT_AMT * RAT_AS_QTY AS CHG_AMT ,
    CGO_TP_CD      ,
    RCV_TERM_CD     ,
    DE_TERM_CD		,
    POR_CNT_CD      ,
    DEL_CNT_CD
FROM  GS
----------------------------------------------------------------------------------------------
-- ACT CHG_CD 제거
---------------------------------------------------------------------------------------------/
)
SELECT 'RFA'            AS CTRT_TYPE,
       CTRT_NO,
       CUST_NM,
       BQ.BQ_SEQ,
       BQ.PROP_NO,
       BQ.AMDT_SEQ,
       BQ.SVC_SCP_CD,
       BQ.CMDT_HDR_SEQ,
       BQ.BLET_DP_SEQ,
       BQ.ROUT_SEQ,
       BQ.RT_SEQ,
       MOF_LANE_CD,
       '1'              AS IN_OUT,
       BQ.POR_CD,
       MOF_ORG_LOC_CD,
       BQ.DEL_CD,
       MOF_DEST_LOC_CD,
       TYPE_CD,
       SIZE_CD,
       '5'              AS QTY, -- 5개 고정
       CURR_CD,
       FNL_FRT_RT_AMT  AS OFT_AMT,
       CHG.BAF_CURR,
       CHG.BAF_AMT,
       CHG.CAF_CURR,
       CHG.CAF_AMT,
       CHG.OTH_CURR,
       CHG.OTH_AMT,
       CHG.DTH_CURR,
       CHG.DTH_AMT,
       PROP_OFC_CD,
       PROP_APRO_OFC_CD,
       TO_CHAR(EFF_DT, 'YYYY-MM-DD') AS EFF_DT,
       CTRT_EFF_DT,
       CTRT_EXP_DT,
       ROUT_SCG_TP
  FROM BQ ,
   (
    SELECT BQ_SEQ,
           PROP_NO,
           AMDT_SEQ,
           SVC_SCP_CD,
           CMDT_HDR_SEQ,
           ROUT_SEQ,
           RT_SEQ,
           POR_CD,
           DEL_CD,
           MAX(DECODE(CHG.MOF_ID, 'BAF',   CURR.MOF_ID))    AS BAF_CURR,
           SUM(DECODE(CHG.MOF_ID, 'BAF',   SCG_AMT))        AS BAF_AMT,
           MAX(DECODE(CHG.MOF_ID, 'CAF',   CURR.MOF_ID))    AS CAF_CURR,
           SUM(DECODE(CHG.MOF_ID, 'CAF',   SCG_AMT))        AS CAF_AMT,
           MAX(DECODE(CHG.MOF_ID, 'O/THC', CURR.MOF_ID))    AS OTH_CURR,
           SUM(DECODE(CHG.MOF_ID, 'O/THC', SCG_AMT))        AS OTH_AMT,
           MAX(DECODE(CHG.MOF_ID, 'D/THC', CURR.MOF_ID))    AS DTH_CURR,
           SUM(DECODE(CHG.MOF_ID, 'D/THC', SCG_AMT))        AS DTH_AMT
      FROM (
        SELECT FN.BQ_SEQ,
            FN.PROP_NO      AS PROP_NO,
            FN.AMDT_SEQ     AS AMDT_SEQ,
            FN.SVC_SCP_CD   AS SVC_SCP_CD,
            FN.CMDT_HDR_SEQ AS CMDT_HDR_SEQ,
            FN.ROUT_SEQ     AS ROUT_SEQ,
            FN.RT_SEQ       AS RT_SEQ,
            FN.POR_CD       AS POR_CD,
            FN.DEL_CD       AS DEL_CD,
            FN.CHG_CD       AS CHG_CD,
            FN.RAT_UT_CD    AS RAT_UT_CD,
            NVL(FN.CURR_CD, 'USD')      AS CURR_CD,
            NVL(CASE
            WHEN FN.RT_INCL_FLG = 'N' AND FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.SUR_RT_AMT / 100
            ELSE FN.SUR_RT_AMT END, 0)             AS SCG_AMT
        FROM  FN ,
          (
            SELECT BQ_SEQ  ,
                CHG_CD    ,
                SUM(CHG_AMT) CHG_AMT
            FROM  (
                SELECT F1.BQ_SEQ ,
                    F1.CHG_CD    ,
                    F2.CHG_AMT CHG_AMT
                FROM  FN F1 ,
                    FN F2
                WHERE  F2.BQ_SEQ = F1.BQ_SEQ
                AND   F2.CHG_CD    IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND F1.EFF_DT BETWEEN EFF_DT AND EXP_DT )
                AND   F2.CURR_CD   = F1.CURR_CD
                AND   (
                      F1.CHG_CD  <> 'VTT'
                    OR	F2.CHG_CD	NOT IN ( DECODE(F1.POR_CNT_CD, 'VN', 'DTH', 'XXX'), DECODE(F1.POR_CNT_CD, 'VN', 'DDC', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'OTH', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'ORC', 'XXX') )
                    )
                AND   F2.RAT_UT_CD  <> 'PC'
                AND   F1.RAT_UT_CD  = 'PC'
                UNION ALL
                SELECT F1.BQ_SEQ ,
                    F1.CHG_CD    ,
                    F2.FNL_FRT_RT_AMT CHG_AMT
                FROM  FN F1 ,
                      BQ F2
                WHERE  F2.BQ_SEQ = F1.BQ_SEQ
                AND   'OFT'   IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND F1.EFF_DT BETWEEN EFF_DT AND EXP_DT )
                AND   F2.CURR_CD   = F1.CURR_CD
                AND   F2.CTRT_CNTR_TPSZ_CD <> 'PC'
                AND   F1.RAT_UT_CD     = 'PC'
                )
            GROUP BY
                BQ_SEQ  ,
                CHG_CD
            ) F1
        WHERE F1.BQ_SEQ(+) = FN.BQ_SEQ
        AND   F1.CHG_CD(+)  = FN.CHG_CD
        AND  (CASE WHEN FN.SVC_SCP_CD IN ( 'ACW','MXW','TAE','TPW' ) AND FN.CHG_CD = 'CAF' THEN 'N'
                   ELSE 'Y' END ) = 'Y'
        UNION ALL
        SELECT *
          FROM USD_ROUT_CASE_SCG
          ) TBL,
          PRI_MOF_MAPG CHG,
          PRI_MOF_MAPG CURR
    WHERE TBL.CHG_CD = CHG.HJS_ID
      AND TBL.CURR_CD = CURR.HJS_ID
      -----------------BASE TABLE----------------------
      AND CHG.MAPG_TP_CD = 'SCG'
      AND CHG.FILE_USE_ONY_FLG = 'Y'
      AND CHG.DELT_FLG = 'N'
      AND CURR.MAPG_TP_CD = 'CURR'
      AND CURR.FILE_USE_ONY_FLG = 'Y'
      AND CURR.DELT_FLG = 'N'
      -----------------BASE TABLE----------------------
    GROUP BY BQ_SEQ,
           PROP_NO,
           AMDT_SEQ,
           SVC_SCP_CD,
           CMDT_HDR_SEQ,
           ROUT_SEQ,
           RT_SEQ,
           POR_CD,
           DEL_CD
   ) CHG
WHERE CHG.BQ_SEQ(+) = BQ.BQ_SEQ
ORDER BY CTRT_NO			]]></sql>
			<params>
				<param name="f_eff_dt" type="12" value="" out="N"/>
				<param name="f_exp_dt" type="12" value="" out="N"/>
				<param name="apvl_ofc" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
