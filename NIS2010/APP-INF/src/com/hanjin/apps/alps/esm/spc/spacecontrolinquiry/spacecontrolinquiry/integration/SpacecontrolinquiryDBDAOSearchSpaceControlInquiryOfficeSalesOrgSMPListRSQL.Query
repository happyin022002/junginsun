<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchSpaceControlInquiryOfficeSalesOrgSMPListRSQL">
			<desc><![CDATA[[ESM_SPC_0028] 성수기 by OFC 정보를 조회합니다.
2014.08.18 김시몬 [CHM-201431081] SPC Allocation Control Option 추가 보완
2015.01.13 신자영 [CHM-201533666] Control Registration 보완요청
2015.03.03 CHM-201534458 SQM QTA주가 변경 관련 적용 요청
2015.07.03 이혜민 [CHM-201536633] Control Option management 보완요청 (Fixed Rate관련)
2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL
2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
2016.07.05 CHM-201642241 VGM(BKG상 표시되는 또 다른 WGT 정보) 도입 관련 SPC 사항]]></desc>
			<sql><![CDATA[
WITH PARAM AS (  
    SELECT P.TRD_CD,
           P.SUB_TRD_CD,
           P.RLANE_CD,
           P.VSL_CD,
           P.SKD_VOY_NO,
           P.SKD_DIR_CD,
           P.OFC_CD,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           V.COST_WK,
           V.IOC_CD,
           DECODE(H.DIR_CD, NULL, 'N', 'Y') AS HH_FLG,
           (
              SELECT /*+ INDEX_DESC(M XPKSPC_MDL_VER_MST) */
                     DECODE(DECODE(H.DIR_CD, NULL, 'N', 'Y'), 'Y', COST_YRWK||'-'||VER_SEQ, '200001-1')
                FROM SPC_MDL_VER_MST M
               WHERE M.TRD_CD = P.TRD_CD
                 AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK BETWEEN M.VER_ST_YRWK AND M.VER_END_YRWK
                 AND M.CFM_FLG  = 'Y'
                 AND ROWNUM = 1
           ) SEASON,
           (
              SELECT LVL.OFC_LVL FROM SPC_OFC_LVL LVL WHERE LVL.OFC_CD = P.OFC_CD
              AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK BETWEEN LVL.OFC_APLY_FM_YRWK AND LVL.OFC_APLY_TO_YRWK
           ) OFC_LVL
           , CASE WHEN V.COST_YRMON >= '201501' 
                  THEN CEIL(TO_NUMBER(SUBSTR(V.COST_YRMON, -2))/3)||'Q' 
                  ELSE CEIL(TO_NUMBER(DECODE(V.COST_WK,'00','01','53','52',V.COST_WK))/13)||'Q'
             END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청
          , SUBSTR(V.COST_YRMON, 1,4) AS BSE_YR
      FROM (
            SELECT @[trade]        AS TRD_CD    ,
                   @[subtrade]     AS SUB_TRD_CD,
                   @[lane]         AS RLANE_CD  ,
                   @[vsl_cd]       AS VSL_CD    ,
                   @[skd_voy_no]   AS SKD_VOY_NO,
                   @[skd_dir_cd]   AS SKD_DIR_CD,
                   @[sales_office] AS OFC_CD
              FROM DUAL
           ) P,
           MAS_MON_VVD V,
           SPC_HD_HUL_MST H
     WHERE V.TRD_CD     = P.TRD_CD
       AND V.SUB_TRD_CD = P.SUB_TRD_CD
       AND V.RLANE_CD   = P.RLANE_CD
       AND V.VSL_CD     = P.VSL_CD
       AND V.SKD_VOY_NO = P.SKD_VOY_NO
       AND V.DIR_CD     = P.SKD_DIR_CD
       AND V.TRD_CD     = H.TRD_CD(+)
       AND V.RLANE_CD   = H.RLANE_CD(+)
       AND V.DIR_CD     = H.DIR_CD(+)
)
, BASE AS (
    SELECT P.OFC_CD    ,
           P.TRD_CD    ,
           P.SUB_TRD_CD,
           P.RLANE_CD  ,
           P.VSL_CD    ,
           P.SKD_VOY_NO,
           P.SKD_DIR_CD,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5, 2) AS COST_MON,
           V.COST_WK   ,
           NVL(ACO.CTRL_PORT_FLG   , 'N') AS CTRL_PORT,
           NVL(ACO.CTRL_WGT_FLG    , 'N') AS CTRL_WGT ,
           NVL(ACO.CTRL_40FT_HC_FLG, 'N') AS CTRL_40HC,
           NVL(ACO.CTRL_45FT_HC_FLG, 'N') AS CTRL_45HC,
           NVL(ACO.CTRL_53FT_FLG,    'N') AS CTRL_53FT,
           NVL(ACO.CTRL_RF_FLG     , 'N') AS CTRL_RF,
           
           -- 20140723 추가
           NVL(ACO.CTRL_D2_FLG     , 'N') AS CTRL_D2  ,
           NVL(ACO.CTRL_D4_FLG     , 'N') AS CTRL_D4  ,
           NVL(ACO.CTRL_RD_FLG     , 'N') AS CTRL_RD  ,
           NVL(ACO.CTRL_USA_SVC_MOD_FLG, 'N') AS CTRL_USA  ,
           NVL(ACO.CTRL_ACCT_FLG   , 'N') AS CTRL_ACCT  ,
           NVL(ACO.CTRL_FX_RT_FLG  , 'N') AS CTRL_FX_RT_FLG  ,
           NVL(DECODE(ACO.CTRL_ECC_FLG,'Y','C',DECODE(ACO.CTRL_LOC_FLG,'Y','L','N')),'N') AS CTRL_DEST, -- E = ECC, L = LOCATION
           NVL(ACO.CTRL_DEST_LVL_CD, 'N') AS CTRL_DEST_LVL  , -- D = BKG_POD, T = BKG_DEL          
           V.IOC_CD,    
           V.DIR_CD,
           P.SEASON,
           P.OFC_LVL
		   , BSE_QTR_CD
		   , P.BSE_YR
           , V.N1ST_LODG_PORT_ETD_DT AS FL_ETD_DT -- First Loading ETD
      FROM SPC_ALOC_CTRL_OPT ACO,
           MAS_MON_VVD       V  ,
           PARAM             P
     WHERE V.TRD_CD          = P.TRD_CD
       AND V.RLANE_CD        = P.RLANE_CD
       AND V.VSL_CD          = P.VSL_CD
       AND V.SKD_VOY_NO      = P.SKD_VOY_NO
       AND V.DIR_CD          = P.SKD_DIR_CD
       AND ACO.RLANE_CD  (+) = P.RLANE_CD
       AND ACO.DIR_CD    (+) = P.SKD_DIR_CD
       AND ACO.VSL_CD    (+) = P.VSL_CD
       AND ACO.SKD_VOY_NO(+) = P.SKD_VOY_NO
       AND ACO.SKD_DIR_CD(+) = P.SKD_DIR_CD
)
, CTRT_OPT_DTL AS (
-- SPC_ALOC_LANE_CTRL_OPT_DTL 테이블의 계약 정보를 가지고 온다.
SELECT DISTINCT  
       A2.TRD_CD
      ,A2.SUB_TRD_CD
      ,A2.RLANE_CD
      ,A2.DIR_CD
      ,A2.ALOC_CTRL_TP_CD
      ,A2.CTRL_LOC_ACCT_CD
      ,A1.FL_ETD_DT
  FROM BASE A1
      ,SPC_ALOC_LANE_CTRL_OPT_DTL A2
 WHERE 1=1
   AND A1.TRD_CD           = A2.TRD_CD
   AND A1.SUB_TRD_CD   	   = A2.SUB_TRD_CD
   AND A1.RLANE_CD         = A2.RLANE_CD
   AND A1.DIR_CD           = A2.DIR_CD
   AND A1.CTRL_ACCT        = 'Y'
   AND A1.CTRL_FX_RT_FLG   = 'Y'
   AND A2.CTRL_FX_RT_FLG   = 'Y'
   AND A2.ALOC_CTRL_TP_CD  = 'F'
)
, CTRT_DTL_INFO AS (
    SELECT  
           A5.TRD_CD
          ,A5.SUB_TRD_CD
          ,A5.RLANE_CD
          ,A5.DIR_CD
          ,A5.ALOC_CTRL_TP_CD
          ,A5.CTRL_LOC_ACCT_CD 
          ,A1.PROP_NO
          ,A2.AMDT_SEQ
          ,A3.SVC_SCP_CD
          ,A4.GEN_SPCL_RT_TP_CD
          ,A4.CMDT_HDR_SEQ
          ,A2.REAL_CUST_CNT_CD || LPAD(A2.REAL_CUST_SEQ,'6','0') CUST_CD
          ,A4.FX_RT_FLG
          ,A2.EFF_DT
          ,A2.EXP_DT
          ,A2.PROP_STS_CD
      FROM CTRT_OPT_DTL A5
          ,PRI_SP_HDR A1
          ,PRI_SP_MN  A2
          ,PRI_SP_SCP_MN A3
          ,PRI_SP_SCP_RT_CMDT_HDR A4 
     WHERE 1=1
       AND A1.SC_NO             = A5.CTRL_LOC_ACCT_CD
       AND A1.PROP_NO           = A2.PROP_NO
       AND A2.PROP_STS_CD       = 'F' -- A, F, Q
       AND TRUNC(A5.FL_ETD_DT) BETWEEN A2.EFF_DT AND A2.EXP_DT
       AND A2.PROP_NO           = A3.PROP_NO
       AND A2.AMDT_SEQ          = A3.AMDT_SEQ
       AND A3.PROP_NO           = A4.PROP_NO
       AND A3.AMDT_SEQ          = A4.AMDT_SEQ
       AND A3.SVC_SCP_CD        = A4.SVC_SCP_CD
       AND NVL(A4.FX_RT_FLG,'N')= 'Y'
     )
, ALOC_LANE_CTRL_OPT_DTL AS (
SELECT DISTINCT B1.TRD_CD
      ,B1.SUB_TRD_CD
      ,B1.RLANE_CD
      ,B1.DIR_CD
--      ,B1.ALOC_CTRL_TP_CD
--      ,B3.ALOC_CTRL_TP_CD
      ,NVL(B3.ALOC_CTRL_TP_CD, B1.ALOC_CTRL_TP_CD) AS ALOC_CTRL_TP_CD
      ,B1.CTRL_LOC_ACCT_CD
      ,B1.SC_NO
      ,B1.RFA_NO
      ,NVL(B3.ALOC_CTRL_DTL_CD, B1.ALOC_CTRL_DTL_CD) AS ALOC_CTRL_DTL_CD
  FROM 
       SPC_ALOC_LANE_CTRL_OPT_DTL B1
      ,BASE B2
      ,(
        -- Actual Account 정보 추출
        SELECT distinct
               A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,'B' AS ALOC_CTRL_TP_CD
              ,A1.ALOC_CTRL_TP_CD AS ORG_ALOC_CTRL_TP_CD-- B : A/Acct, C : Commodity, F : Fixed
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,A2.CUST_CNT_CD || LPAD(A2.CUST_SEQ,'6','0') AS ALOC_CTRL_DTL_CD
          FROM CTRT_DTL_INFO A1
              ,PRI_SP_SCP_RT_ACT_CUST A2
         WHERE 1=1
           AND A1.PROP_NO           = A2.PROP_NO
           AND A1.AMDT_SEQ          = A2.AMDT_SEQ
           AND A1.SVC_SCP_CD        = A2.SVC_SCP_CD
           AND A1.GEN_SPCL_RT_TP_CD = A2.GEN_SPCL_RT_TP_CD
           AND A1.CMDT_HDR_SEQ      = A2.CMDT_HDR_SEQ
        UNION ALL
        -- CMDT 정보 추출
        SELECT distinct
               A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,'C' AS ALOC_CTRL_TP_CD
              ,A1.ALOC_CTRL_TP_CD AS ORG_ALOC_CTRL_TP_CD -- B : A/Acct, C : Commodity, F : Fixed
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,DECODE(A2.PRC_CMDT_TP_CD,'C', A2.PRC_CMDT_DEF_CD, 'G', A4.PRC_CMDT_DEF_CD) AS ALOC_CTRL_DTL_CD
          FROM CTRT_DTL_INFO A1
              ,PRI_SP_SCP_RT_CMDT     A2
              ,PRI_SP_SCP_GRP_CMDT    A3
              ,PRI_SP_SCP_GRP_CMDT_DTL A4  
         WHERE 1=1
           AND A1.PROP_NO           = A2.PROP_NO
           AND A1.AMDT_SEQ          = A2.AMDT_SEQ
           AND A1.SVC_SCP_CD        = A2.SVC_SCP_CD
           AND A1.GEN_SPCL_RT_TP_CD = A2.GEN_SPCL_RT_TP_CD
           AND A1.CMDT_HDR_SEQ      = A2.CMDT_HDR_SEQ
           AND A2.SRC_INFO_CD       <> 'AD'

           AND A2.PROP_NO           = A3.PROP_NO(+)
           AND A2.AMDT_SEQ          = A3.AMDT_SEQ(+)
           AND A2.SVC_SCP_CD        = A3.SVC_SCP_CD(+)
           AND A2.PRC_CMDT_DEF_CD   = A3.PRC_GRP_CMDT_CD(+)
           
           AND A3.PROP_NO           = A4.PROP_NO(+)
           AND A3.AMDT_SEQ          = A4.AMDT_SEQ(+)
           AND A3.SVC_SCP_CD        = A4.SVC_SCP_CD(+)
           AND A3.GRP_CMDT_SEQ      = A4.GRP_CMDT_SEQ(+)   
           AND A4.SRC_INFO_CD(+)    <> 'AD'
         GROUP BY A1.TRD_CD
              ,A1.SUB_TRD_CD
              ,A1.RLANE_CD
              ,A1.DIR_CD
              ,A1.ALOC_CTRL_TP_CD
              ,A1.CTRL_LOC_ACCT_CD
              ,A1.PROP_NO
              ,A1.AMDT_SEQ
              ,A1.SVC_SCP_CD
              ,DECODE(A2.PRC_CMDT_TP_CD,'C', A2.PRC_CMDT_DEF_CD, 'G', A4.PRC_CMDT_DEF_CD)       
       ) B3
 WHERE 1=1
   AND B2.TRD_CD           = B1.TRD_CD
   AND B2.SUB_TRD_CD       = B1.SUB_TRD_CD
   AND B2.RLANE_CD         = B1.RLANE_CD
   AND B2.DIR_CD           = B1.DIR_CD
   AND B1.TRD_CD           = B3.TRD_CD(+)
   AND B1.SUB_TRD_CD       = B3.SUB_TRD_CD(+)
   AND B1.RLANE_CD         = B3.RLANE_CD(+)
   AND B1.DIR_CD           = B3.DIR_CD(+)
   AND B1.ALOC_CTRL_TP_CD  = B3.ORG_ALOC_CTRL_TP_CD(+)
   AND B1.CTRL_LOC_ACCT_CD = B3.CTRL_LOC_ACCT_CD(+)
    )
, WK_CMB AS ( 
    SELECT RNUM,
           COST_YRWK,
           OFC_CD,
           TS_FLG,
           IOC_CD,           
           NVL(USA_BKG_MOD_CD,' ') AS USA_BKG_MOD_CD,
           NVL(CUST_ACCT,' ')      AS CUST_ACCT,
           NVL(POL_YD_CD,' ')      AS POL_YD_CD,
           NVL(POD_YD_CD,' ')      AS POD_YD_CD,
           NVL(DEST_LOC_CD,' ')    AS DEST_LOC_CD,            
           SUM(BKG_REV) AS BKG_REV,NVL(SUM(DMDT_COM_AMT),0) AS DMDT_COM_AMT,
           SUM(ESTM_CM_COST_AMT) AS ESTM_CM_COST_AMT,
           SUM(BKG_TTL_QTY) AS BKG_TTL_QTY,
           SUM(USD_BKG_TTL_WGT) AS BKG_TTL_WGT
      FROM (
            SELECT T.RNUM,
                   BAR.COST_YRWK,
                   BAR.SLS_OFC_CD AS OFC_CD,
                   BAR.TS_FLG,
                   BAR.IOC_CD,
                   BAR.POL_YD_CD,
                   BAR.POD_YD_CD,                   
                   CASE WHEN M.CTRL_USA = 'Y' THEN
                        --DECODE(BAR.USA_BKG_MOD_CD,'OTH','OTHERS',BAR.USA_BKG_MOD_CD) -- SPC_BKG_AVG_REV.LOCAL/IPI
                        BAR.USA_BKG_MOD_CD -- SPC_BKG_AVG_REV.LOCAL/IPI
                   ELSE
                        'OTH'
                   --     --'OTHERS'
                   END AS USA_BKG_MOD_CD,
              
                   CASE WHEN M.CTRL_DEST <> 'N' THEN	
                        NVL((SELECT D.CTRL_LOC_ACCT_CD
                               FROM SPC_ALOC_LANE_CTRL_OPT_DTL D,
                                    MDM_LOCATION               ML1,
                                    MDM_LOCATION               ML2,
                                    MDM_EQ_ORZ_CHT             ME1,
                                    MDM_EQ_ORZ_CHT             ME2
                              WHERE P.RLANE_CD         = D.RLANE_CD
                                AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)     = D.TRD_CD
                                AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD) = D.SUB_TRD_CD
                                AND P.SKD_DIR_CD       = D.DIR_CD 
                                AND D.ALOC_CTRL_TP_CD  = M.CTRL_DEST
                                AND ML1.LOC_CD         = BAR.BKG_POD_CD
                                AND ME1.SCC_CD         = ML1.SCC_CD
                                AND ML2.LOC_CD         = BAR.BKG_DEL_CD
                                AND ME2.SCC_CD         = ML2.SCC_CD
                                AND D.CTRL_LOC_ACCT_CD = DECODE(M.CTRL_DEST_LVL,'T',DECODE(M.CTRL_DEST,'E',ME2.ECC_CD,'L',BAR.BKG_DEL_CD),DECODE(M.CTRL_DEST,'E',ME1.ECC_CD,'L',BAR.BKG_POD_CD))
                           ),'XXXXX')                           
                   ELSE
                        'XXXXX'
                   END AS DEST_LOC_CD,
                   -- 20140801 변경
                   CASE WHEN M.CTRL_ACCT = 'Y' THEN
                        NVL((SELECT D.CTRL_LOC_ACCT_CD
                               FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                              WHERE P.RLANE_CD                           = D.RLANE_CD
                                AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)      = D.TRD_CD
                                AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD)  = D.SUB_TRD_CD
                                AND P.SKD_DIR_CD                         = D.DIR_CD 
                                AND D.ALOC_CTRL_TP_CD                    = 'A'  
                                AND D.CTRL_LOC_ACCT_CD  = BAR.CUST_CNT_CD ||LPAD(BAR.CUST_SEQ,6,'0')                                        
                           ),'XXX999999')   
                   ELSE
                        'XXX999999'
                   END AS CUST_ACCT,  
                   BAR.BKG_REV, BAR.DMDT_COM_AMT,
                   BAR.ESTM_CM_COST_AMT,
                   BAR.BKG_TTL_QTY,
                   BAR.USD_BKG_TTL_WGT
              FROM SPC_BKG_AVG_REV   BAR,
                   (SELECT DISTINCT DENSE_RANK() OVER (ORDER BY COST_YRWK) AS RNUM,
                           COST_YRWK
                      FROM SPC_BKG_AVG_REV
                   ) T,
                   PARAM            P,
                   (SELECT DIR_CD,
                           CTRL_USA ,
                           CTRL_ACCT,
                           CTRL_DEST, -- C = COUNTRY, L = LOCATION
                           CTRL_DEST_LVL -- D = BKG_POD, T = BKG_DEL  
                      FROM BASE
                   ) M --20140801
             WHERE BAR.COST_YRWK  = T.COST_YRWK
               AND BAR.OFC_KND_CD = '4'
               AND BAR.SLS_OFC_CD = P.OFC_CD
               AND BAR.TRD_CD     = P.TRD_CD
               AND BAR.RLANE_CD   = P.RLANE_CD
               AND BAR.DIR_CD     = P.SKD_DIR_CD
               AND BAR.IOC_CD     = P.IOC_CD
               AND BAR.POD_YD_CD <> '00000' -- 20140801 변경 (CUST_CNT_CD <> '00' 에서)
               AND BAR.DIR_CD     = M.DIR_CD --20140801
           )  
     GROUP BY GROUPING SETS (
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,OFC_CD,USA_BKG_MOD_CD, CUST_ACCT,POL_YD_CD,POD_YD_CD,DEST_LOC_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,OFC_CD,USA_BKG_MOD_CD, CUST_ACCT,POL_YD_CD,POD_YD_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,OFC_CD,USA_BKG_MOD_CD, CUST_ACCT,POL_YD_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,OFC_CD,USA_BKG_MOD_CD, CUST_ACCT),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,OFC_CD,USA_BKG_MOD_CD),
                             (RNUM,COST_YRWK,TS_FLG,IOC_CD,OFC_CD)
                            )           
)
, SMP_DATA AS (
    SELECT DECODE(SUBSTR(M.TRD_CD, 1, 1), 'I', 'I', 'O') AS IOC_TS_CD,
           M.SLS_RGN_OFC_CD AS OFC_CD,
           M.CUST_CNT_CD, 
           M.CUST_SEQ, 
           M.CUST_CTRL_CD,
           SUM(RLANE_ADJ_QTY) ADJ_QTY
      FROM SPC_MDL_CUST_REV_LANE M,
           PARAM P
     WHERE P.TRD_CD     = M.TRD_CD
       AND P.SUB_TRD_CD = M.SUB_TRD_CD
       AND P.RLANE_CD   = M.RLANE_CD
       AND SUBSTR(P.SEASON,1,6) = M.COST_YRWK
       AND SUBSTR(P.SEASON,8)   = M.VER_SEQ
       AND P.OFC_CD = M.SLS_RGN_OFC_CD
     GROUP BY DECODE(SUBSTR(M.TRD_CD, 1, 1), 'I', 'I', 'O'), M.SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ, CUST_CTRL_CD
)
SELECT IOC_TS_CD,
       OFC_CD,
       CUST_CTRL_CD,
       DECODE(USA_BKG_MOD_CD,'OTH','OTHERS',USA_BKG_MOD_CD) AS USA_BKG_MOD_CD,
       -- 2014.12.01 ACCT/CMDT 추가
       CUST_ACCT1        AS CUST_ACCT,        
       --CASE WHEN CUST_ACCT1 = 'XXX999999' THEN
       --      'OTHERS'
       --    WHEN LENGTH(CUST_ACCT1) = 8 THEN
       --     (
       --       SELECT CUST_LGL_ENG_NM
       --        FROM MDM_CUSTOMER
       --        WHERE CUST_CNT_CD = SUBSTR(CUST_ACCT1,1,2)
       --          AND CUST_SEQ    = SUBSTR(CUST_ACCT1,3,6)
       --      )
       --ELSE
       --      CUST_ACCT1
       --END AS CUST_LGL_ENG_NM,  
       -- 2015.01.13 변경      
       CASE   WHEN CUST_ACCT1 = 'XXX999999' THEN 'OTHERS'           
              -- 2014.12.03 기존의 CUSTOMER CODE는 8자리 이외의 CASE는 모두 계약으로 판단하여 NAME에 CODE사용
              -- 2014.12.12 계약 no길이 혼재로인해 변경. 앞자리 2개가 알파벳인 경우 CUSTOMER/그 외엔 계약
              WHEN LENGTH(TRIM(TRANSLATE(CUST_ACCT1, '1234567890', '          '))) = 2 THEN 
              (SELECT CUST_LGL_ENG_NM 
                 FROM MDM_CUSTOMER
                WHERE CUST_CNT_CD||LPAD(CUST_SEQ, 6, '0') = CUST_ACCT1 ) 
              ELSE 
              -- 2014.12.17 계약의 경우 최신 CONTRACTOR이름 보여짐
              NVL((
              -- SC CASE NAME 
                SELECT (SELECT CUST_LGL_ENG_NM 
                        FROM MDM_CUSTOMER A 
                        WHERE A.CUST_CNT_CD = AC.CUST_CNT_CD 
                        AND A.CUST_SEQ = AC.CUST_SEQ ) CUST_LGL_ENG_NM
                FROM    PRI_SP_HDR    HD  ,
                        PRI_SP_MN     MN  ,
                        PRI_SP_CTRT_PTY AC
                WHERE   HD.SC_NO        = CUST_ACCT1
                AND     MN.PROP_NO      = HD.PROP_NO
                AND     MN.PROP_STS_CD  = 'F'    -- Filed만 B/L적용 가능 
                AND     AC.PROP_NO      = MN.PROP_NO
                AND     AC.AMDT_SEQ     = MN.AMDT_SEQ
                AND     AC.PRC_CTRT_PTY_TP_CD = 'C'
                AND     AC.AMDT_SEQ   = (SELECT MAX(AMDT_SEQ)
                                           FROM PRI_SP_MN N_MN
                                          WHERE N_MN.PROP_NO = HD.PROP_NO
					    AND	N_MN.PROP_STS_CD  = 'F'
                                        )
                AND     ROWNUM = 1 -- multi인 경우 에러 발생하므로 미리 막음
                UNION ALL
                SELECT  (SELECT CUST_LGL_ENG_NM 
                        FROM MDM_CUSTOMER A 
                        WHERE A.CUST_CNT_CD = MN.CTRT_CUST_CNT_CD 
                        AND A.CUST_SEQ = MN.CTRT_CUST_SEQ ) CUST_LGL_ENG_NM
                FROM    PRI_RP_HDR    HD  ,
                        PRI_RP_MN     MN  
                WHERE   HD.RFA_NO        = CUST_ACCT1
                AND     MN.PROP_NO       = HD.PROP_NO
                AND     MN.PROP_STS_CD   = 'A'        /*상수*/
                AND     MN.AMDT_SEQ      = (SELECT MAX(AMDT_SEQ)
                                              FROM PRI_RP_MN N_MN
                                             WHERE N_MN.PROP_NO = HD.PROP_NO
                                               AND N_MN.PROP_STS_CD   = 'A'  )
                AND     ROWNUM = 1
              ), CUST_ACCT1)
            END AS CUST_LGL_ENG_NM,       
       POL_CD,
       POD_CD,
       DECODE(DEST_LOC_CD1,'XXXXX','OTHERS',DEST_LOC_CD1)    AS DEST_LOC_CD,
       
       BKG_QTA,
       DECODE(CUST_CTRL_CD, 'C', DECODE(USA_BKG_MOD_CD,'',MAX(BKG_QTA) OVER (PARTITION BY IOC_TS_CD, OFC_CD) - MAX(SMP) OVER (PARTITION BY IOC_TS_CD, OFC_CD),0) , SMP) AS SMP, -- 20140818 변경
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             
       ) AS CMB,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
       ) AS CMB_WGT,
       -- 주차별 CMB
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1  ,' ') 
             AND BAR.RNUM = 1
       ) AS CMB1,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             AND BAR.RNUM = 1
       ) AS CMB_WGT1,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1    ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1  ,' ') 
             AND BAR.RNUM = 2
       ) AS CMB2,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             AND BAR.RNUM = 2
       ) AS CMB_WGT2,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             AND BAR.RNUM = 3
       ) AS CMB3,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             AND BAR.RNUM = 3
       ) AS CMB_WGT3,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             AND BAR.RNUM = 4
       ) AS CMB4,
       (
          SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
            FROM WK_CMB BAR
           WHERE BAR.OFC_CD  = OFC_CD
             AND BAR.POL_YD_CD = NVL(SUBSTR(POL_CD,1,5),' ')
             AND BAR.POD_YD_CD = NVL(SUBSTR(POD_CD,1,5),' ')
             -- 20140728 추가(S)
             AND BAR.USA_BKG_MOD_CD = NVL(USA_BKG_MOD_CD,' ')
             AND BAR.CUST_ACCT      = NVL(CUST_ACCT1     ,' ')
             AND BAR.DEST_LOC_CD    = NVL(DEST_LOC_CD1   ,' ') 
             AND BAR.RNUM = 4
       ) AS CMB_WGT4,
       FC_TTL_TEU,
       FCT_VOL,
       FCT_HC  ,
       FCT_45  ,
       FCT_53  ,
       FCT_RF  ,
       FCT_WGT ,
       FCT_D2  ,
       FCT_D4  ,
       FCT_RD  ,
       
       ALC_VOL ,
       ALC_20  ,
       ALC_40  ,
       ALC_HC  ,
       ALC_45  ,
       ALC_53  ,
       ALC_RF  ,
       ALC_WGT ,
       ALC_D2  ,
       ALC_D4  ,
       ALC_RD  ,
       
       FRM_VOL ,
       FRM_20  ,
       FRM_40  ,
       FRM_HC  ,
       FRM_45  ,
       FRM_53  ,
       FRM_RF  ,
       FRM_WGT ,
       FRM_D2  ,
       FRM_D4  ,
       FRM_RD  ,
       
       WAT_VOL ,
       WAT_20  ,
       WAT_40  ,
       WAT_HC  ,
       WAT_45  ,
       WAT_53  ,
       WAT_RF  ,
       WAT_WGT ,
       WAT_D2  ,
       WAT_D4  ,
       WAT_RD  ,
       
       CTRL_PORT,
       
       CASE WHEN CUST_CTRL_CD IS NULL THEN 1
            WHEN USA_BKG_MOD_CD IS NULL THEN 2
            WHEN CUST_ACCT1 IS NULL THEN 3
            WHEN POL_CD IS NULL THEN 4
            WHEN POD_CD IS NULL THEN 5
            WHEN DEST_LOC_CD1 IS NULL THEN 6
            ELSE 7
       END AS LVL,
       OFC_LVL,NVL(BKG_VOL_VGM,0) AS BKG_VOL_VGM,NVL(BKG_WGT_VGM,0) AS BKG_WGT_VGM
  FROM (

        SELECT IOC_TS_CD,
               OFC_CD,
               CUST_CTRL_CD,
               USA_BKG_MOD_CD,
               CUST_ACCT AS CUST_ACCT1,
               POL_CD,
               POD_CD,
               DEST_LOC_CD AS DEST_LOC_CD1, 
               MAX(SMP)        AS SMP,
               MAX(BKG_QTA)    AS BKG_QTA,
               MAX(FC_TTL_TEU) AS FC_TTL_TEU,
               MAX(FCT_VOL) AS FCT_VOL ,
               MAX(FCT_HC)  AS FCT_HC  ,
               MAX(FCT_45)  AS FCT_45  ,
               MAX(FCT_53)  AS FCT_53  ,
               MAX(FCT_RF)  AS FCT_RF  ,
               MAX(FCT_WGT) AS FCT_WGT ,
               MAX(FCT_D2)  AS FCT_D2  ,
               MAX(FCT_D4)  AS FCT_D4  ,
               MAX(FCT_RD)  AS FCT_RD  ,               
               NVL(MAX(ALC_VOL),0) AS ALC_VOL ,
               NVL(MAX(ALC_20),0)  AS ALC_20  ,
               NVL(MAX(ALC_40),0)  AS ALC_40  ,
               NVL(MAX(ALC_HC),0)  AS ALC_HC  ,
               NVL(MAX(ALC_45),0)  AS ALC_45  ,
               NVL(MAX(ALC_53),0)  AS ALC_53  ,
               NVL(MAX(ALC_RF),0)  AS ALC_RF  ,
               NVL(MAX(ALC_WGT),0) AS ALC_WGT ,
               NVL(MAX(ALC_D2),0)  AS ALC_D2  ,
               NVL(MAX(ALC_D4),0)  AS ALC_D4  ,
               NVL(MAX(ALC_RD),0)  AS ALC_RD  ,               
               MAX(FRM_VOL) AS FRM_VOL ,
               MAX(FRM_20)  AS FRM_20  ,
               MAX(FRM_40)  AS FRM_40  ,
               MAX(FRM_HC)  AS FRM_HC  ,
               MAX(FRM_45)  AS FRM_45  ,
               MAX(FRM_53)  AS FRM_53  ,
               MAX(FRM_RF)  AS FRM_RF  ,
               MAX(FRM_WGT) AS FRM_WGT ,
               MAX(FRM_D2)  AS FRM_D2  ,
               MAX(FRM_D4)  AS FRM_D4  ,
               MAX(FRM_RD)  AS FRM_RD  ,               
               MAX(WAT_VOL) AS WAT_VOL ,
               MAX(WAT_20)  AS WAT_20  ,
               MAX(WAT_40)  AS WAT_40  ,
               MAX(WAT_HC)  AS WAT_HC  ,
               MAX(WAT_45)  AS WAT_45  ,
               MAX(WAT_53)  AS WAT_53  ,
               MAX(WAT_RF)  AS WAT_RF  ,
               MAX(WAT_WGT) AS WAT_WGT ,
               MAX(WAT_D2)  AS WAT_D2  ,
               MAX(WAT_D4)  AS WAT_D4  ,
               MAX(WAT_RD)  AS WAT_RD  ,               
               MAX(CTRL_PORT) AS CTRL_PORT,    
               MAX(OFC_LVL)   AS OFC_LVL,  
			   MAX(BKG_VOL_VGM) AS BKG_VOL_VGM ,
               MAX(BKG_WGT_VGM) AS BKG_WGT_VGM 
          FROM (
                SELECT IOC_TS_CD,
                       OFC_CD,
                       CUST_CTRL_CD,
                       USA_BKG_MOD_CD,
                       CUST_ACCT,
                       POL_CD,
                       POD_CD,               
                       DEST_LOC_CD,                                 
                       SMP,
                       BKG_QTA,     
                       FC_TTL_TEU,
                       FCT_VOL,
                       FCT_HC  ,
                       FCT_45  ,
                       FCT_53  ,
                       FCT_RF  ,
                       FCT_WGT ,
                       FCT_D2  ,
                       FCT_D4  ,
                       FCT_RD  ,                       
                       ALC_VOL ,
                       ALC_20  ,
                       ALC_40  ,
                       ALC_HC  ,
                       ALC_45  ,
                       ALC_53  ,
                       ALC_RF  ,
                       ALC_WGT ,
                       ALC_D2  ,
                       ALC_D4  ,
                       ALC_RD  ,                       
                       FRM_VOL ,
                       FRM_20  ,
                       FRM_40  ,
                       FRM_HC  ,
                       FRM_45  ,
                       FRM_53  ,
                       FRM_RF  ,
                       FRM_WGT ,
                       FRM_D2  ,
                       FRM_D4  ,
                       FRM_RD  ,                       
                       WAT_VOL ,
                       WAT_20  ,
                       WAT_40  ,
                       WAT_HC  ,
                       WAT_45  ,
                       WAT_53  ,
                       WAT_RF  ,
                       WAT_WGT ,
                       WAT_D2  ,
                       WAT_D4  ,
                       WAT_RD  ,                       
                       NVL(CTRL_PORT,'N') AS CTRL_PORT,
                       --6 - (GU1 + GC1 + GP1 + GP2 + GD1) AS LVL,
                       OFC_LVL,BKG_VOL_VGM,BKG_WGT_VGM
                  FROM (  
                          SELECT DECODE(Z.IOC_TS_CD, 'O', 'OCN', 'I', 'IPC', 'T', 'T/S') AS IOC_TS_CD,
                                 Z.OFC_CD,
                                 Z.CUST_CTRL_CD,
                                 Z.USA_BKG_MOD_CD,
                                 Z.CUST_ACCT,
                                 Z.POL_CD,
                                 Z.POD_CD,
                                 Z.DEST_LOC_CD,                                 
                                 GROUPING_ID(Z.USA_BKG_MOD_CD) AS GU1,
                                 GROUPING_ID(Z.CUST_ACCT)      AS GC1,
                                 GROUPING_ID(Z.POL_CD)         AS GP1,
                                 GROUPING_ID(Z.POD_CD)         AS GP2,
                                 GROUPING_ID(Z.DEST_LOC_CD)    AS GD1,                                               
                                 SUM(Z.SMP) AS SMP,
                                 ROUND(SUM(Z.BKG_QTA)) AS BKG_QTA,
                                 SUM(NVL(Z.FCT_VOL, 0) + NVL(Z.FCT_HC, 0) * 2 + NVL(Z.FCT_45, 0) * 2 + NVL(Z.FCT_53, 0) * 2) AS FC_TTL_TEU,
                                 SUM(Z.FCT_VOL) AS FCT_VOL ,
                                 SUM(Z.FCT_HC)  AS FCT_HC  ,
                                 SUM(Z.FCT_45)  AS FCT_45  ,
                                 SUM(Z.FCT_53)  AS FCT_53  ,
                                 SUM(Z.FCT_RF)  AS FCT_RF  ,
                                 SUM(Z.FCT_WGT) AS FCT_WGT ,
                                 SUM(Z.FCT_D2)  AS FCT_D2  ,
                                 SUM(Z.FCT_D4)  AS FCT_D4  ,
                                 SUM(Z.FCT_RD)  AS FCT_RD  ,                                 
                                 SUM(Z.ALC_VOL) AS ALC_VOL ,
                                 SUM(Z.ALC_20)  AS ALC_20  ,
                                 SUM(Z.ALC_40)  AS ALC_40  ,
                                 SUM(Z.ALC_HC)  AS ALC_HC  ,
                                 SUM(Z.ALC_45)  AS ALC_45  ,
                                 SUM(Z.ALC_53)  AS ALC_53  ,
                                 SUM(Z.ALC_RF)  AS ALC_RF  ,
                                 SUM(Z.ALC_WGT) AS ALC_WGT ,
                                 SUM(Z.ALC_D2)  AS ALC_D2  ,
                                 SUM(Z.ALC_D4)  AS ALC_D4  ,
                                 SUM(Z.ALC_RD)  AS ALC_RD  ,                                 
                                 SUM(Z.FRM_VOL) AS FRM_VOL ,
                                 SUM(Z.FRM_20)  AS FRM_20  ,
                                 SUM(Z.FRM_40)  AS FRM_40  ,
                                 SUM(Z.FRM_HC)  AS FRM_HC  ,
                                 SUM(Z.FRM_45)  AS FRM_45  ,
                                 SUM(Z.FRM_53)  AS FRM_53  ,
                                 SUM(Z.FRM_RF)  AS FRM_RF  ,
                                 SUM(Z.FRM_WGT) AS FRM_WGT ,
                                 SUM(Z.FRM_D2)  AS FRM_D2  ,
                                 SUM(Z.FRM_D4)  AS FRM_D4  ,
                                 SUM(Z.FRM_RD)  AS FRM_RD  ,                                 
                                 SUM(Z.WAT_VOL) AS WAT_VOL ,
                                 SUM(Z.WAT_20)  AS WAT_20  ,
                                 SUM(Z.WAT_40)  AS WAT_40  ,
                                 SUM(Z.WAT_HC)  AS WAT_HC  ,
                                 SUM(Z.WAT_45)  AS WAT_45  ,
                                 SUM(Z.WAT_53)  AS WAT_53  ,
                                 SUM(Z.WAT_RF)  AS WAT_RF  ,
                                 SUM(Z.WAT_WGT) AS WAT_WGT ,
                                 SUM(Z.WAT_D2)  AS WAT_D2  ,
                                 SUM(Z.WAT_D4)  AS WAT_D4  ,
                                 SUM(Z.WAT_RD)  AS WAT_RD  ,                                 
                                 MAX(CTRL_PORT) AS CTRL_PORT,
                                 --6 - (GROUPING_ID(Z.USA_BKG_MOD_CD) + GROUPING_ID(Z.CUST_ACCT) + GROUPING_ID(Z.POL_CD) + GROUPING_ID(Z.POD_CD) + GROUPING_ID(Z.DEST_LOC_CD)) AS LVL,
                                 MAX(OFC_LVL) AS OFC_LVL   
                                 ,SUM(Z.BKG_VOL_VGM)  AS BKG_VOL_VGM
								 ,SUM(Z.BKG_WGT_VGM)  AS BKG_WGT_VGM
                            FROM (
                                    -- QTA
                                    SELECT DECODE(SUBSTR(T2.TRD_CD, 1, 1), 'I', 'I', 'O') AS IOC_TS_CD,
                                           P.TRD_CD    ,
                                           P.SUB_TRD_CD,
                                           P.RLANE_CD  ,
                                           P.VSL_CD    ,
                                           P.SKD_VOY_NO,
                                           P.SKD_DIR_CD,
                                           T3.SAQ_RGN_OFC_CD AS OFC_CD,
                                           NULL         AS POL_CD,
                                           NULL         AS POD_CD,                                           
                                           --'00000'         AS POL_CD,
                                           --'00000'         AS POD_CD,                           
                                           'C' AS CUST_CTRL_CD,                                           
                                           NULL         AS USA_BKG_MOD_CD,
                                           NULL         AS CUST_ACCT,                           
                                           NULL         AS DEST_LOC_CD,                                           
                                           (T2.LOD_QTY) AS BKG_QTA,
                                           0    AS SMP,
                                           NULL AS FCT_VOL,
                                           NULL AS FCT_HC ,
                                           NULL AS FCT_45 ,
                                           NULL AS FCT_53 ,
                                           NULL AS FCT_RF ,
                                           NULL AS FCT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FCT_D2 ,
                                           NULL AS FCT_D4 ,
                                           NULL AS FCT_RD ,                                                           
                                           NULL AS ALC_VOL,
                                           NULL AS ALC_20 ,
                                           NULL AS ALC_40 ,
                                           NULL AS ALC_HC ,
                                           NULL AS ALC_45 ,
                                           NULL AS ALC_53 ,
                                           NULL AS ALC_RF ,
                                           NULL AS ALC_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS ALC_D2 ,
                                           NULL AS ALC_D4 ,
                                           NULL AS ALC_RD ,
                                           NULL AS FRM_VOL,
                                           NULL AS FRM_20 ,
                                           NULL AS FRM_40 ,
                                           NULL AS FRM_HC ,
                                           NULL AS FRM_45 ,
                                           NULL AS FRM_53 ,
                                           NULL AS FRM_RF ,
                                           NULL AS FRM_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FRM_D2 ,
                                           NULL AS FRM_D4 ,
                                           NULL AS FRM_RD ,                                           
                                           NULL AS WAT_VOL,
                                           NULL AS WAT_20 ,
                                           NULL AS WAT_40 ,
                                           NULL AS WAT_HC ,
                                           NULL AS WAT_45 ,
                                           NULL AS WAT_53 ,
                                           NULL AS WAT_RF ,
                                           NULL AS WAT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS WAT_D2 ,
                                           NULL AS WAT_D4 ,
                                           NULL AS WAT_RD ,                                           
                                           P.CTRL_PORT    ,
                                           P.CTRL_WGT     ,
                                           P.CTRL_40HC    ,
                                           P.CTRL_45HC    ,
                                           P.CTRL_53FT    ,
                                           P.CTRL_RF      ,
                                           P.OFC_LVL      ,
                                           -- 20140728 추가(S)
                                           P.CTRL_D2      ,
                                           P.CTRL_D4      ,
                                           P.CTRL_RD      ,NULL AS BKG_VOL_VGM,NULL AS BKG_WGT_VGM                                           
                                      FROM SQM_QTA_RLSE_VER T1,
                                           SQM_CFM_QTA      T2,
                                           SPC_OFC_LVL      T3,
                                           BASE             P
                                     WHERE T1.BSE_YR           = P.BSE_YR
                                       --AND T1.BSE_QTR_CD       = CEIL(TO_NUMBER(DECODE(P.COST_WK,'00','01','53','52',P.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(P.COST_MON) / 3)||'Q'
									   -- CHM-201534458 SQM QTA주가 변경 관련 적용 요청
									   AND T1.BSE_QTR_CD      = P.BSE_QTR_CD
                                       AND T1.SQM_VER_STS_CD   = 'R'
                                       AND T1.BSE_TP_CD        = 'Q' -- 분기 20131205추가
                                       AND T2.QTA_RLSE_VER_NO  = T1.QTA_RLSE_VER_NO
                                       AND T2.BSE_TP_CD        = T1.BSE_TP_CD -- 분기 20131205추가 
                                       AND T2.BSE_YR           = T1.BSE_YR
                                       AND T2.BSE_QTR_CD       = T1.BSE_QTR_CD 
                                       AND T2.QTA_TGT_CD       = 'D'
                                       AND T2.OFC_VW_CD        = 'L'  -- 20131205추가
                                       AND NOT EXISTS(
                                            SELECT '1'
                                            FROM SQM_SCTR_CFM_QTA QTA
                                            WHERE QTA.QTA_RLSE_VER_NO = T1.QTA_RLSE_VER_NO
                                            AND QTA.BSE_TP_CD         = T1.BSE_TP_CD -- 분기 20131205추가     
                                            AND QTA.BSE_YR            = T1.BSE_YR
                                            AND QTA.BSE_QTR_CD        = T1.BSE_QTR_CD
                                            AND QTA.OFC_VW_CD         = 'L'  -- 20131205추가
                                            AND QTA.TRD_CD            = P.TRD_CD
                                            AND QTA.RLANE_CD          = P.RLANE_CD
                                            AND QTA.DIR_CD            = P.DIR_CD
                                            AND QTA.VSL_CD            = P.VSL_CD
                                            AND QTA.SKD_VOY_NO        = P.SKD_VOY_NO
                                            AND QTA.SKD_DIR_CD        = P.SKD_DIR_CD
                                            AND P.COST_YR || P.COST_WK >= '201427'
                                       )
                                       AND T2.TRD_CD           = P.TRD_CD
                                       AND T2.RLANE_CD         = P.RLANE_CD
                                       AND T2.DIR_CD           = P.SKD_DIR_CD
                                       AND T2.VSL_CD           = P.VSL_CD
                                       AND T2.SKD_VOY_NO       = P.SKD_VOY_NO
                                       AND T2.SKD_DIR_CD       = P.SKD_DIR_CD
                                       AND SPC_SCR_OFC_CONV_FNC(T2.RGN_OFC_CD) = P.OFC_CD
                                       AND SPC_SCR_OFC_CONV_FNC(T2.RGN_OFC_CD) = T3.OFC_CD
                                       AND P.COST_YR || P.COST_WK BETWEEN T3.OFC_APLY_FM_YRWK AND T3.OFC_APLY_TO_YRWK     
                                    UNION ALL
                                    -- QTA NEW
                                    SELECT DECODE(SUBSTR(T2.TRD_CD, 1, 1), 'I', 'I', 'O') AS IOC_TS_CD,
                                           P.TRD_CD    ,
                                           P.SUB_TRD_CD,
                                           P.RLANE_CD  ,
                                           P.VSL_CD    ,
                                           P.SKD_VOY_NO,
                                           P.SKD_DIR_CD,
                                           T3.SAQ_RGN_OFC_CD AS OFC_CD,
                                           T4.YD_CD         AS POL_CD,
                                           T5.YD_CD         AS POD_CD,
                                           'C' AS CUST_CTRL_CD,
                                           -- 20140728 추가(S)
                                           NULL         AS USA_BKG_MOD_CD,
                                           NULL         AS CUST_ACCT,                           
                                           NULL         AS DEST_LOC_CD,
                                           (T2.LOD_QTY) AS BKG_QTA,
                                           0    AS SMP,
                                           NULL AS FCT_VOL,
                                           NULL AS FCT_HC ,
                                           NULL AS FCT_45 ,
                                           NULL AS FCT_53 ,
                                           NULL AS FCT_RF ,
                                           NULL AS FCT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FCT_D2 ,
                                           NULL AS FCT_D4 ,
                                           NULL AS FCT_RD ,                                           
                                           NULL AS ALC_VOL,
                                           NULL AS ALC_20 ,
                                           NULL AS ALC_40 ,
                                           NULL AS ALC_HC ,
                                           NULL AS ALC_45 ,
                                           NULL AS ALC_53 ,
                                           NULL AS ALC_RF ,
                                           NULL AS ALC_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS ALC_D2 ,
                                           NULL AS ALC_D4 ,
                                           NULL AS ALC_RD ,                                                           
                                           NULL AS FRM_VOL,
                                           NULL AS FRM_20 ,
                                           NULL AS FRM_40 ,
                                           NULL AS FRM_HC ,
                                           NULL AS FRM_45 ,
                                           NULL AS FRM_53 ,
                                           NULL AS FRM_RF ,
                                           NULL AS FRM_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FRM_D2 ,
                                           NULL AS FRM_D4 ,
                                           NULL AS FRM_RD ,                                                           
                                           NULL AS WAT_VOL,
                                           NULL AS WAT_20 ,
                                           NULL AS WAT_40 ,
                                           NULL AS WAT_HC ,
                                           NULL AS WAT_45 ,
                                           NULL AS WAT_53 ,
                                           NULL AS WAT_RF ,
                                           NULL AS WAT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS WAT_D2 ,
                                           NULL AS WAT_D4 ,
                                           NULL AS WAT_RD ,                                           
                                           P.CTRL_PORT    ,
                                           P.CTRL_WGT     ,
                                           P.CTRL_40HC    ,
                                           P.CTRL_45HC    ,
                                           P.CTRL_53FT    ,
                                           P.CTRL_RF      ,
                                           P.OFC_LVL      ,
                                           -- 20140728 추가(S)
                                           P.CTRL_D2      ,
                                           P.CTRL_D4      ,
                                           P.CTRL_RD      ,NULL AS BKG_VOL_VGM,NULL AS BKG_WGT_VGM
                                      FROM SQM_QTA_RLSE_VER T1,
                                           SQM_SCTR_CFM_QTA T2,
                                           SPC_OFC_LVL      T3,
                                           VSK_VSL_PORT_SKD T4,
                                           VSK_VSL_PORT_SKD T5,
                                           BASE             P
                                     WHERE T1.BSE_YR           = P.BSE_YR
                                       --AND T1.BSE_QTR_CD       = CEIL(TO_NUMBER(DECODE(P.COST_WK,'00','01','53','52',P.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(P.COST_MON) / 3)||'Q'
									   -- CHM-201534458 SQM QTA주가 변경 관련 적용 요청
									   AND T1.BSE_QTR_CD      = P.BSE_QTR_CD
                                       AND T1.SQM_VER_STS_CD   = 'R'
                                       AND T1.BSE_TP_CD        = 'Q' -- 분기 20131205추가
                                       AND T2.QTA_RLSE_VER_NO  = T1.QTA_RLSE_VER_NO
                                       AND T2.BSE_TP_CD        = T1.BSE_TP_CD -- 분기 20131205추가 
                                       AND T2.BSE_YR           = T1.BSE_YR
                                       AND T2.BSE_QTR_CD       = T1.BSE_QTR_CD 
                                       AND T2.OFC_VW_CD        = 'L'  -- 20131205추가
                                       AND T2.TRD_CD           = P.TRD_CD
                                       AND T2.RLANE_CD         = P.RLANE_CD
                                       AND T2.DIR_CD           = P.SKD_DIR_CD
                                       AND T2.VSL_CD           = P.VSL_CD
                                       AND T2.SKD_VOY_NO       = P.SKD_VOY_NO
                                       AND T2.SKD_DIR_CD       = P.SKD_DIR_CD
                                       AND T2.VSL_CD           = T4.VSL_CD
                                       AND T2.SKD_VOY_NO       = T4.SKD_VOY_NO
                                       AND T2.SKD_DIR_CD       = T4.SKD_DIR_CD
                                       AND T2.POL_CD           = T4.VPS_PORT_CD
                                       AND (T4.VPS_PORT_CD, T4.CLPT_SEQ) IN
                                            (SELECT VPS_PORT_CD, MIN(CLPT_SEQ) CLPT_SEQ
                                                FROM VSK_VSL_PORT_SKD 
                                                WHERE VSL_CD         = P.VSL_CD
                                                AND SKD_VOY_NO       = P.SKD_VOY_NO
                                                AND SKD_DIR_CD       = P.SKD_DIR_CD
                                                GROUP BY VPS_PORT_CD)
                                       AND T2.VSL_CD           = T5.VSL_CD
                                       AND T2.SKD_VOY_NO       = T5.SKD_VOY_NO
                                       AND T2.SKD_DIR_CD       = T5.SKD_DIR_CD
                                       AND T2.POD_CD           = T5.VPS_PORT_CD
                                       AND (T5.VPS_PORT_CD, T5.CLPT_SEQ) IN
                                            (SELECT VPS_PORT_CD, MIN(CLPT_SEQ) CLPT_SEQ
                                                FROM VSK_VSL_PORT_SKD 
                                                WHERE VSL_CD         = P.VSL_CD
                                                AND SKD_VOY_NO       = P.SKD_VOY_NO
                                                AND SKD_DIR_CD       = P.SKD_DIR_CD
                                                GROUP BY VPS_PORT_CD)
                                       AND SPC_SCR_OFC_CONV_FNC(T2.RGN_OFC_CD) = P.OFC_CD
                                       AND SPC_SCR_OFC_CONV_FNC(T2.RGN_OFC_CD) = T3.OFC_CD
                                       AND P.COST_YR || P.COST_WK BETWEEN T3.OFC_APLY_FM_YRWK AND T3.OFC_APLY_TO_YRWK
                                       AND P.COST_YR || P.COST_WK >= '201427'                                
                                    UNION ALL
                                    -- FORECAST
                                    SELECT Z.IOC_TS_CD ,
                                           P.TRD_CD    ,
                                           P.SUB_TRD_CD,
                                           P.RLANE_CD  ,
                                           P.VSL_CD    ,
                                           P.SKD_VOY_NO,
                                           P.SKD_DIR_CD,
                                           Z.SLS_OFC_CD AS OFC_CD,
                                           Z.POL_YD_CD  AS POL_CD,
                                           Z.POD_YD_CD  AS POD_CD,
                                           NVL((SELECT MAX(CUST_CTRL_CD) -- 20130424 추가
                                                  FROM SPC_MDL_CUST_CTRL C 
                                                WHERE P.TRD_CD = C.TRD_CD
                                                  AND SUBSTR(P.SEASON,1,6) = C.COST_YRWK
                                                  AND SUBSTR(P.SEASON,8)   = C.VER_SEQ
                                                  AND Z.CUST_CNT_CD        = C.CUST_CNT_CD
                                                  AND Z.CUST_SEQ           = C.CUST_SEQ
                                                  AND NVL(Z.SC_NO, NVL(Z.RFA_NO,' ')) = NVL(C.SC_NO, NVL(C.RFA_NO,' '))
                                                  --AND DECODE(P.TRD_CD, 'AES', NVL(Z.RFA_NO,' '), NVL(Z.SC_NO,' ')) = DECODE(P.TRD_CD, 'AES', NVL(C.RFA_NO,' '), NVL(C.SC_NO,NVL(Z.SC_NO,' ')))
                                           ),'C') AS CUST_CTRL_CD,
                                           
                                           Z.USA_BKG_MOD_CD,
                                           CASE WHEN P.CTRL_ACCT = 'Y' THEN
                                                NVL((SELECT D.CTRL_LOC_ACCT_CD
                                                       FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                                                      WHERE P.RLANE_CD                           = D.RLANE_CD
                                                        AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)      = D.TRD_CD
                                                        AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD)  = D.SUB_TRD_CD
                                                        AND P.SKD_DIR_CD                         = D.DIR_CD 
                                                        AND D.ALOC_CTRL_TP_CD                    = 'A'  
                                                        AND D.CTRL_LOC_ACCT_CD                   = Z.CUST_CNT_CD ||LPAD(Z.CUST_SEQ,6,'0')                                        
                                                    ),'XXX999999')   -- 20140801 수정
                                           ELSE
                                                'XXX999999'
                                           END AS CUST_ACCT,

                                           Z.DEST_LOC_CD,
                                           
                                           NULL              AS BKG_QTA,
                                           0    AS SMP,
                                           Z.CFM_TTL_QTY     AS FCT_VOL,
                                           Z.CFM_40FT_HC_QTY AS FCT_HC ,
                                           Z.CFM_45FT_HC_QTY AS FCT_45 ,
                                           Z.CFM_53FT_QTY    AS FCT_53 ,
                                           Z.CFM_RF_QTY      AS FCT_RF ,
                                           Z.CFM_TTL_WGT     AS FCT_WGT,
                                           -- 20140728 추가(S)                           
                                           Z.CFM_20FT_DRY_QTY AS FCT_D2 ,
                                           Z.CFM_40FT_DRY_QTY AS FCT_D4 ,
                                           Z.CFM_RD_QTY       AS FCT_RD ,
                                           
                                           NULL AS ALC_VOL,
                                           NULL AS ALC_20 ,
                                           NULL AS ALC_40 ,
                                           NULL AS ALC_HC ,
                                           NULL AS ALC_45 ,
                                           NULL AS ALC_53 ,
                                           NULL AS ALC_RF ,
                                           NULL AS ALC_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS ALC_D2 ,
                                           NULL AS ALC_D4 ,
                                           NULL AS ALC_RD ,
                                           
                                           NULL AS FRM_VOL,
                                           NULL AS FRM_20 ,
                                           NULL AS FRM_40 ,
                                           NULL AS FRM_HC ,
                                           NULL AS FRM_45 ,
                                           NULL AS FRM_53 ,
                                           NULL AS FRM_RF ,
                                           NULL AS FRM_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FRM_D2 ,
                                           NULL AS FRM_D4 ,
                                           NULL AS FRM_RD ,
                                                           
                                           NULL AS WAT_VOL,
                                           NULL AS WAT_20 ,
                                           NULL AS WAT_40 ,
                                           NULL AS WAT_HC ,
                                           NULL AS WAT_45 ,
                                           NULL AS WAT_53 ,
                                           NULL AS WAT_RF ,
                                           NULL AS WAT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS WAT_D2 ,
                                           NULL AS WAT_D4 ,
                                           NULL AS WAT_RD ,
                                                           
                                           P.CTRL_PORT    ,
                                           P.CTRL_WGT     ,
                                           P.CTRL_40HC    ,
                                           P.CTRL_45HC    ,
                                           P.CTRL_53FT    ,
                                           P.CTRL_RF      ,
                                           P.OFC_LVL      ,
                                           -- 20140728 추가(S)
                                           P.CTRL_D2      ,
                                           P.CTRL_D4      ,
                                           P.CTRL_RD     ,NULL AS BKG_VOL_VGM,NULL AS BKG_WGT_VGM
                                           
                                      FROM SPC_DLY_FCAST_CUST Z,
                                           BASE               P
                                     WHERE Z.RLANE_CD   = P.RLANE_CD
                                       AND Z.DIR_CD     = P.SKD_DIR_CD
                                       AND Z.VSL_CD     = P.VSL_CD
                                       AND Z.SKD_VOY_NO = P.SKD_VOY_NO
                                       AND Z.SKD_DIR_CD = P.SKD_DIR_CD
                                       AND Z.SLS_OFC_CD = P.OFC_CD
                                       AND Z.TRD_CD     = P.TRD_CD
                                       AND Z.SUB_TRD_CD = P.SUB_TRD_CD
                                       AND Z.POL_YD_CD<>'0000000'
                                
                                    UNION ALL
                                    -- ALLOCATION
                                    SELECT DECODE(Z.TS_FLG, 'Y', 'T', Z.IOC_CD) AS IOC_TS_CD,
                                           P.TRD_CD,
                                           P.SUB_TRD_CD,
                                           P.RLANE_CD,
                                           P.VSL_CD,
                                           P.SKD_VOY_NO,
                                           P.SKD_DIR_CD,
                                           Z.SLS_OFC_CD AS OFC_CD,
                                           Z.POL_YD_CD  AS POL_CD,
                                           Z.POD_YD_CD  AS POD_CD,
                                           Z.CUST_CTRL_CD,
                                           -- 20140728 추가(S)
                                           Z.USA_BKG_MOD_CD,
                                           -- 2014.12.04 CTRT_NO 추가 
                                           DECODE(Z.CTRT_NO||Z.CUST_CNT_CD||LPAD(Z.CUST_SEQ, 6, '0'), 'XXX999999', 'XXX999999', 
                                            DECODE(Z.CUST_CNT_CD||LPAD(Z.CUST_SEQ, 6, '0'), 'XX999999', Z.CTRT_NO, Z.CUST_CNT_CD||LPAD(Z.CUST_SEQ, 6, '0'))) AS CUST_ACCT,                          
                                           Z.DEST_LOC_CD,   
                                           
                                           NULL AS BKG_QTA,
                                           0    AS SMP,
                                           NULL AS FCT_VOL,
                                           NULL AS FCT_HC ,
                                           NULL AS FCT_45 ,
                                           NULL AS FCT_53 ,
                                           NULL AS FCT_RF ,
                                           NULL AS FCT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FCT_D2 ,
                                           NULL AS FCT_D4 ,
                                           NULL AS FCT_RD ,
                                           
                                           (Z.BKG_AVAL_TTL_QTY)     AS ALC_VOL,
                                           (Z.BKG_AVAL_20FT_QTY)    AS ALC_20 ,
                                           (Z.BKG_AVAL_40FT_QTY)    AS ALC_40 ,
                                           (Z.BKG_AVAL_40FT_HC_QTY) AS ALC_HC ,
                                           (Z.BKG_AVAL_45FT_HC_QTY) AS ALC_45 ,
                                           (Z.BKG_AVAL_53FT_QTY)    AS ALC_53 ,
                                           (Z.BKG_AVAL_RF_QTY)      AS ALC_RF ,
                                           (Z.BKG_AVAL_TTL_WGT)     AS ALC_WGT,
                                           -- 20140728 추가(S)
                                           (Z.BKG_AVAL_20FT_DRY_QTY) AS ALC_D2 ,
                                           (Z.BKG_AVAL_40FT_DRY_QTY) AS ALC_D4 ,
                                           (Z.BKG_AVAL_RD_QTY)       AS ALC_RD ,
                                           
                                           NULL AS FRM_VOL,
                                           NULL AS FRM_20 ,
                                           NULL AS FRM_40 ,
                                           NULL AS FRM_HC ,
                                           NULL AS FRM_45 ,
                                           NULL AS FRM_53 ,
                                           NULL AS FRM_RF ,
                                           NULL AS FRM_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FRM_D2 ,
                                           NULL AS FRM_D4 ,
                                           NULL AS FRM_RD ,
                                           
                                           NULL AS WAT_VOL,
                                           NULL AS WAT_20 ,
                                           NULL AS WAT_40 ,
                                           NULL AS WAT_HC ,
                                           NULL AS WAT_45 ,
                                           NULL AS WAT_53 ,
                                           NULL AS WAT_RF ,
                                           NULL AS WAT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS WAT_D2 ,
                                           NULL AS WAT_D4 ,
                                           NULL AS WAT_RD ,
                                           
                                           P.CTRL_PORT    ,
                                           P.CTRL_WGT     ,
                                           P.CTRL_40HC    ,
                                           P.CTRL_45HC    ,
                                           P.CTRL_53FT    ,
                                           P.CTRL_RF      ,
                                           P.OFC_LVL      ,
                                           -- 20140728 추가(S)
                                           P.CTRL_D2      ,
                                           P.CTRL_D4      ,
                                           P.CTRL_RD      ,NULL AS BKG_VOL_VGM,NULL AS BKG_WGT_VGM
                                           
                                      FROM SPC_ALOC_CUST_POL_POD Z,
                                           BASE             P
                                           --VSK_VSL_PORT_SKD V
                                     WHERE Z.RLANE_CD   = P.RLANE_CD
                                       AND Z.DIR_CD     = P.SKD_DIR_CD
                                       AND Z.VSL_CD     = P.VSL_CD
                                       AND Z.SKD_VOY_NO = P.SKD_VOY_NO
                                       AND Z.SKD_DIR_CD = P.SKD_DIR_CD
                                       AND Z.SLS_OFC_CD = P.OFC_CD
                                       AND Z.TRD_CD     = P.TRD_CD
                                       AND Z.SUB_TRD_CD = P.SUB_TRD_CD
                                        -- Double-Calling Port의 경우 Allocation의 정보가 배수로 표시되어, Yard 존재 여부만 체크하도록 변경. @2012-03-30
                                       AND Z.POD_YD_CD IN (SELECT V.YD_CD
                                                             FROM VSK_VSL_PORT_SKD V
                                                            WHERE V.SLAN_CD = SUBSTR(P.RLANE_CD, 1, 3)
                                                              AND V.VSL_CD = P.VSL_CD
                                                              AND V.SKD_VOY_NO = P.SKD_VOY_NO
                                                              AND V.SKD_DIR_CD = P.SKD_DIR_CD)
                                      AND Z.POL_YD_CD IN (SELECT V.YD_CD
                                                             FROM VSK_VSL_PORT_SKD V
                                                            WHERE V.SLAN_CD = SUBSTR(P.RLANE_CD, 1, 3)
                                                              AND V.VSL_CD = P.VSL_CD
                                                              AND V.SKD_VOY_NO = P.SKD_VOY_NO
                                                              AND V.SKD_DIR_CD = P.SKD_DIR_CD)
                                    UNION ALL
                                
                                    SELECT IOC_TS_CD,
                                           TRD_CD    ,
                                           SUB_TRD_CD,
                                           RLANE_CD  ,
                                           VSL_CD    ,
                                           SKD_VOY_NO,
                                           SKD_DIR_CD,                       
                                                    
                                           OFC_CD,
                                           POL_CD,
                                           POD_CD,
                                           CUST_CTRL_CD,                       
                                           -- 20140728 추가(S)
                                           USA_BKG_MOD_CD,
                                           CUST_ACCT,                          
                                           DEST_LOC_CD, 
                                           
                                           NULL AS BKG_QTA,
                                           0    AS SMP,
                                           NULL AS FCT_VOL,
                                           NULL AS FCT_HC ,
                                           NULL AS FCT_45 ,
                                           NULL AS FCT_53 ,
                                           NULL AS FCT_RF ,
                                           NULL AS FCT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FCT_D2 ,
                                           NULL AS FCT_D4 ,
                                           NULL AS FCT_RD ,
                                                               
                                           NULL AS ALC_VOL,
                                           NULL AS ALC_20 ,
                                           NULL AS ALC_40 ,
                                           NULL AS ALC_HC ,
                                           NULL AS ALC_45 ,
                                           NULL AS ALC_53 ,
                                           NULL AS ALC_RF ,
                                           NULL AS ALC_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS ALC_D2 ,
                                           NULL AS ALC_D4 ,
                                           NULL AS ALC_RD ,
                                           
                                           FIRM_VOL,
                                           FIRM_20 ,
                                           FIRM_40 ,
                                           FIRM_HC ,
                                           FIRM_45 ,
                                           FIRM_53 ,
                                           FIRM_RF ,
                                           FIRM_WGT,
                                           -- 20140728 추가(S)
                                           FIRM_D2 ,
                                           FIRM_D4 ,
                                           FIRM_RD ,
                                           
                                           WAT_VOL ,
                                           WAT_20  ,
                                           WAT_40  ,
                                           WAT_HC  ,
                                           WAT_45  ,
                                           WAT_53  ,
                                           WAT_RF  ,
                                           WAT_WGT ,
                                           -- 20140728 추가(S)
                                           WAT_D2 ,
                                           WAT_D4 ,
                                           WAT_RD ,
                                           
                                           CTRL_PORT,
                                           CTRL_WGT ,
                                           CTRL_40HC,
                                           CTRL_45HC,
                                           CTRL_53FT,
                                           CTRL_RF  ,
                                           OFC_LVL  ,
                                           -- 20140728 추가(S)
                                           CTRL_D2  ,
                                           CTRL_D4  ,
                                           CTRL_RD  ,BKG_VOL_VGM,BKG_WGT_VGM
                
                                      FROM 
                                           (  SELECT 
                                                      OFC_CD
                                                    , TRD_CD    
                                                    , SUB_TRD_CD
                                                    , RLANE_CD  
                                                    , VSL_CD    
                                                    , SKD_VOY_NO
                                                    , SKD_DIR_CD  
                                                    
                                                    , USA_BKG_MOD_CD
                                                    , CUST_ACCT  
                                                    
                                                     -- 20140728 추가(S)
                                          			,CASE WHEN M.CTRL_DEST = 'E' THEN	                                                      
                                                           NVL((SELECT D.CTRL_LOC_ACCT_CD
                                                                  FROM SPC_ALOC_LANE_CTRL_OPT_DTL D,
                                                                       MDM_LOCATION               ML1,
                                                                       MDM_EQ_ORZ_CHT             ME1
                                                                 WHERE M.RLANE_CD         = D.RLANE_CD
                                                                   AND SPC_GET_REP_TRD_FNC(M.RLANE_CD)     = D.TRD_CD
                                                                   AND SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD) = D.SUB_TRD_CD
                                                                   AND M.SKD_DIR_CD       = D.DIR_CD 
                                                                   AND D.ALOC_CTRL_TP_CD  = M.CTRL_DEST
                                                                   AND ML1.LOC_CD         = M.DEST_PORT
                                                                   AND ME1.SCC_CD         = ML1.SCC_CD
                                                                   AND D.CTRL_LOC_ACCT_CD = ME1.ECC_CD
                                                           ),'XXXXX')
                                                     WHEN M.CTRL_DEST = 'L' THEN	                                                      
                                                           NVL((SELECT D.CTRL_LOC_ACCT_CD
                                                                  FROM SPC_ALOC_LANE_CTRL_OPT_DTL D
                                                                 WHERE M.RLANE_CD         = D.RLANE_CD
                                                                   AND SPC_GET_REP_TRD_FNC(M.RLANE_CD)     = D.TRD_CD
                                                                   AND SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD) = D.SUB_TRD_CD
                                                                   AND M.SKD_DIR_CD       = D.DIR_CD 
                                                                   AND D.ALOC_CTRL_TP_CD  = M.CTRL_DEST
                                                                   AND D.CTRL_LOC_ACCT_CD = M.DEST_PORT
                                                           ),'XXXXX')
                                                           
                                                     ELSE
                                                          'XXXXX'
                                                     END AS DEST_LOC_CD   
                                                          
                                                    , CUST_CTRL_CD
                                                    , NVL(POD_YD_CD, POD_CD) AS POD_CD
                                                    , NVL(POL_YD_CD, POL_CD) AS POL_CD   	          
                                                    , DECODE(VSL_PRE_PST_CD, 'T', IOC_CD, 'T') AS IOC_TS_CD
                                                    
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 1, 14), 0)), 0)   AS FIRM_VOL
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)), 0)  AS FIRM_20
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)), 0)  AS FIRM_40
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)), 0)  AS FIRM_D2
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)), 0)  AS FIRM_D4
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)), 0)  AS FIRM_HC
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)), 0)  AS FIRM_45
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)), 0)  AS FIRM_53
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL,113, 14), 0)), 0)  AS FIRM_RF
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL,127, 14), 0)), 0)  AS FIRM_RD
                                                    , DECODE(BKG_STS_CD, 'F', TO_NUMBER(NVL(SUBSTR(VAL,141, 14), 0)), 0)  AS FIRM_WGT
                                                    
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 1, 14), 0)), 0)   AS WAT_VOL
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0)), 0)  AS WAT_20
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0)), 0)  AS WAT_40
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0)), 0)  AS WAT_D2
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0)), 0)  AS WAT_D4
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0)), 0)  AS WAT_HC
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0)), 0)  AS WAT_45
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0)), 0)  AS WAT_53
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL,113, 14), 0)), 0)  AS WAT_RF
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL,127, 14), 0)), 0)  AS WAT_RD
                                                    , DECODE(BKG_STS_CD, 'W', TO_NUMBER(NVL(SUBSTR(VAL,141, 14), 0)), 0)  AS WAT_WGT
                                                    
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 1, 14), 0))                               AS BKG_TTL
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0))                              AS BKG_20
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0))                              AS BKG_40
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0))                              AS BKG_D2
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0))                              AS BKG_D4
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0))                              AS BKG_HC
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0))                              AS BKG_45
                                                    , TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))                              AS BKG_53
                                                    , TO_NUMBER(NVL(SUBSTR(VAL,113, 14), 0))                              AS BKG_RF
                                                    , TO_NUMBER(NVL(SUBSTR(VAL,127, 14), 0))                              AS BKG_RD
                                                    , TO_NUMBER(NVL(SUBSTR(VAL,141, 14), 0))                              AS BKG_WGT,BKG_VOL_VGM,BKG_WGT_VGM
                                                    
                                                                        
                                                    , CTRL_PORT               
                                                    , CTRL_WGT                
                                                    , CTRL_40HC               
                                                    , CTRL_45HC               
                                                    , CTRL_53FT               
                                                    , CTRL_RF  
                                                    , OFC_LVL
                                                    
                                                    , CTRL_D2
                                                    , CTRL_D4
                                                    , CTRL_RD  
                                
                                                FROM
                                                     (
                                                         SELECT B.BKG_STS_CD
                                                                , O.N2ND_PRNT_OFC_CD
                                                                , O.N3RD_PRNT_OFC_CD
                                                                , O.N4TH_PRNT_OFC_CD
                                                                , M.IOC_CD
                                                                
                                                                -- 20140728 추가(S)
                                                                ,CASE WHEN M.CTRL_USA = 'Y' AND (SUBSTR(B.POL_CD,1,2) IN ('US','CA') OR SUBSTR(B.POD_CD,1,2) IN ('US','CA')) THEN
                                                                     NVL(SPC_USA_MODE_FNC(B.RCV_TERM_CD, B.DE_TERM_CD, B.POR_CD, B.POL_CD, B.POD_CD, B.DEL_CD),'OTH') 
                                                                 ELSE
                                                                     'OTH'
                                                                 END AS USA_BKG_MOD_CD
                                                 
                                                                , M.CTRL_DEST
                                                                , DECODE(M.CTRL_DEST_LVL,'T',B.DEL_CD,B.POD_CD) AS DEST_PORT

                                                               ,CASE WHEN M.CTRL_ACCT = 'Y' THEN
                                                                 NVL((SELECT DISTINCT(D.CTRL_LOC_ACCT_CD)
                                                                        FROM ALOC_LANE_CTRL_OPT_DTL D
                                                                       WHERE M.RLANE_CD                           = D.RLANE_CD
                                                                         AND SPC_GET_REP_TRD_FNC(M.RLANE_CD)      = D.TRD_CD
                                                                         AND SPC_GET_REP_SUB_TRD_FNC(M.RLANE_CD)  = D.SUB_TRD_CD
                                                                         AND M.SKD_DIR_CD                         = D.DIR_CD 
                                                                         AND D.ALOC_CTRL_TP_CD                    IN ('A' , 'B', 'C') 
                                                                         AND (D.CTRL_LOC_ACCT_CD = B.SC_NO OR D.CTRL_LOC_ACCT_CD = B.RFA_NO)
                                                                         AND D.ALOC_CTRL_DTL_CD  = DECODE(D.ALOC_CTRL_TP_CD, 'A', B.CTRT_CUST_CNT_CD ||LPAD(B.CTRT_CUST_SEQ,6,'0'),
                                                                                                                             'B', B.AGMT_ACT_CNT_CD ||LPAD(B.AGMT_ACT_CUST_SEQ,6,'0'),
                                                                                                                             'C', B.CMDT_CD) 
                                                                         
                                                                         
                                                                     ),'XXX999999')   -- 20140801 수정
                                                             ELSE
                                                                 'XXX999999'
                                                             END AS CUST_ACCT

                                                                --20140304 추가
                                                                , CASE WHEN M.TRD_CD = 'AES' AND DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO) IS NULL AND BC.CUST_CNT_CD = 'CN' AND B.SC_NO IS NULL THEN
                                                                      NVL(SPC_GET_SMP_RFA_FNC('C',M.SEASON,  BC.CUST_CNT_CD||LPAD(BC.CUST_SEQ,6,'0'), B.POL_CD,B.POD_CD),'C')
                                                                      
                                                                  ELSE   
                                                                      NVL((SELECT MAX(CUST_CTRL_CD)  -- 20130424 추가
                                                                             FROM SPC_MDL_CUST_CTRL C 
                                                                            WHERE M.TRD_CD = C.TRD_CD
                                                                              AND SUBSTR(M.SEASON,1,6) = C.COST_YRWK
                                                                              AND SUBSTR(M.SEASON,8)   = C.VER_SEQ
                                                                              AND B.CTRT_CUST_CNT_CD   = C.CUST_CNT_CD
                                                                              AND B.CTRT_CUST_SEQ      = C.CUST_SEQ
                                                                              AND NVL(SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), B.SC_NO), NVL(SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO)),' ')) = NVL(C.SC_NO, NVL(C.RFA_NO,' '))
                                                                              --AND DECODE(M.TRD_CD, 'AES', NVL(SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO)),' '), NVL(SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), B.SC_NO),' ')) = DECODE(M.TRD_CD, 'AES', NVL(C.RFA_NO,' '),NVL(C.SC_NO,NVL(SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), B.SC_NO),' ')))
                                                                      ),'C')
                                                                  END AS CUST_CTRL_CD                                        
                                                                
                                                                , BV.POL_YD_CD
                                                                , BV.POL_CD
                                                                , BV.POD_YD_CD
                                                                , BV.POD_CD
                                                                , B.DEL_NOD_CD
                                                                , B.DEL_CD
                                                                , BV.VSL_PRE_PST_CD
                                                                , M.OFC_CD 
                                                                , (SELECT  TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000') 
                                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
                                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
                                                                        
                                                                        -- 20140728 추가(S)
                                                                        || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') -- D2
                                                                        || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,1,2), 'D4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') -- D4
                                                                                            
                                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
                                                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')  
                                                                        || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)) , 'FM0000000000.000')  
                                                                        
                                                                        -- 20140728 추가
                                                                        || TO_CHAR(SUM(CASE WHEN Q.CNTR_TPSZ_CD LIKE 'R%' AND Q.EQ_SUBST_CNTR_TPSZ_CD LIKE 'D%' THEN Q.EQ_SUBST_CGO_QTY ELSE 0 END), 'FM0000000000.000')--RD
                                                                        
                                                                        || TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD, 1, 1), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000') 
                                                                        || TO_CHAR((R.ACT_WGT * DECODE(R.ACT_WGT,'LBS', 0.00045, 0.001)) 
                                                                                + SUM(Q.OP_CNTR_QTY * (SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                                         FROM MDM_CNTR_TP_SZ TS
                                                                                                        WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                                                                      FROM BKG_QUANTITY Q
                                                                     WHERE B.BKG_NO = Q.BKG_NO) VAL
                                                                , M.TRD_CD    
                                                                , M.SUB_TRD_CD
                                                                , M.RLANE_CD  
                                                                , M.VSL_CD    
                                                                , M.SKD_VOY_NO
                                                                , M.SKD_DIR_CD    
                                                                , M.CTRL_PORT    
                                                                , M.CTRL_WGT     
                                                                , M.CTRL_40HC    
                                                                , M.CTRL_45HC    
                                                                , M.CTRL_53FT    
                                                                , M.CTRL_RF
                                                                , M.OFC_LVL
                                                                
                                                                ,M.CTRL_D2
                                                                ,M.CTRL_D4
                                                                ,M.CTRL_RD 
																,(
																SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Z.CNTR_TPSZ_CD), '2', 1, 2)* Z.OP_CNTR_QTY) 
																FROM BKG_QUANTITY Z 
																WHERE Z.BKG_NO= B.BKG_NO AND OP_CNTR_QTY > 0 
																AND EXISTS ( SELECT 1 FROM BKG_CONTAINER C WHERE C.BKG_NO= Z.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL )
																) AS BKG_VOL_VGM
																,(SELECT SUM(NVL(Z.VGM_WGT,0) * DECODE(Z.VGM_WGT_UT_CD,'LBS',0.00045,0.001)) FROM BKG_CONTAINER Z WHERE Z.BKG_NO= B.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL) AS BKG_WGT_VGM																
                                                         FROM BKG_VVD            BV
                                                            , BKG_BOOKING        B
                                                            , BASE               M
                                                            , BKG_BL_DOC         R
                                                            , MDM_DTL_REV_LANE   DRL
                                                            , MDM_REV_LANE       RL
                                                            , SPC_OFC_LVL        O
                                                            , BKG_CUSTOMER       BC  --20140304 추가 
                                                        WHERE B.BKG_NO         = BV.BKG_NO
                                                          AND B.BKG_NO         = R.BKG_NO
                                                          AND B.BKG_STS_CD    IN ('W','F')
                                                          AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                                                          AND M.VSL_CD         = BV.VSL_CD
                                                          AND M.SKD_VOY_NO     = BV.SKD_VOY_NO
                                                          AND M.SKD_DIR_CD     = BV.SKD_DIR_CD
                                    
                                                          AND RL.VSL_SLAN_CD   = BV.SLAN_CD
                                                          AND M.OFC_CD = O.SPC_SLS_OFC_CD
                                                          AND O.OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)
                                                          AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK
                                                          AND DRL.RLANE_CD        = M.RLANE_CD
                                                          AND DRL.VSL_SLAN_DIR_CD = M.DIR_CD
                                                          AND DRL.IOC_CD          = M.IOC_CD
                                                          AND DRL.TRD_CD          = M.TRD_CD
                                                          AND DRL.SUB_TRD_CD      = M.SUB_TRD_CD
                                                          AND DRL.DELT_FLG        = 'N'
                                                          AND DRL.RLANE_CD        = RL.RLANE_CD
                                                          AND DRL.FM_CONTI_CD     = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
                                                                                       FROM MDM_LOCATION L
                                                                                      WHERE L.LOC_CD = BV.POL_CD )
                                                          AND DRL.TO_CONTI_CD 	  = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
                                                                                       FROM MDM_LOCATION L
                                                                                      WHERE L.LOC_CD =  BV.POD_CD )
                                                          AND RL.RLANE_CD  = M.RLANE_CD
                                                          AND RL.VSL_TP_CD = 'C'
                                                          AND RL.DELT_FLG  = 'N'
                                                          AND RL.RLANE_CD      <> 'RBCCO'
                                                          AND B.BKG_NO            = BC.BKG_NO  --20140304 추가
                                                          AND BC.BKG_CUST_TP_CD   = 'S'        --20140304 추가
                                                   ) M
                                          ) --A
                                        
                                    UNION ALL
                                        -- SMP
                                    SELECT IOC_TS_CD,
                                           NULL AS TRD_CD    ,
                                           NULL AS SUB_TRD_CD,
                                           NULL AS RLANE_CD  ,
                                           NULL AS VSL_CD    ,
                                           NULL AS SKD_VOY_NO,
                                           NULL AS SKD_DIR_CD,
                                           OFC_CD,
                                           NULL AS POL_CD,
                                           NULL AS POD_CD,
                                           --'00000' AS POL_CD,
                                           --'00000' AS POD_CD,
                                           CUST_CTRL_CD,
                                           
                                           NULL AS USA_BKG_MOD_CD,
                                           NULL AS CUST_ACCT,                           
                                           NULL AS DEST_LOC_CD, 
                                           
                                           NULL AS BKG_QTA,
                                           ADJ_QTY AS SMP,
                                           NULL AS FCT_VOL,
                                           NULL AS FCT_HC ,
                                           NULL AS FCT_45 ,
                                           NULL AS FCT_53 ,
                                           NULL AS FCT_RF ,
                                           NULL AS FCT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FCT_D2 ,
                                           NULL AS FCT_D4 ,
                                           NULL AS FCT_RD ,
                                                           
                                           NULL AS ALC_VOL,
                                           NULL AS ALC_20 ,
                                           NULL AS ALC_40 ,
                                           NULL AS ALC_HC ,
                                           NULL AS ALC_45 ,
                                           NULL AS ALC_53 ,
                                           NULL AS ALC_RF ,
                                           NULL AS ALC_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS ALC_D2 ,
                                           NULL AS ALC_D4 ,
                                           NULL AS ALC_RD ,
                           
                                           NULL AS FRM_VOL,
                                           NULL AS FRM_20 ,
                                           NULL AS FRM_40 ,
                                           NULL AS FRM_HC ,
                                           NULL AS FRM_45 ,
                                           NULL AS FRM_53 ,
                                           NULL AS FRM_RF ,
                                           NULL AS FRM_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS FIRM_D2 ,
                                           NULL AS FIRM_D4 ,
                                           NULL AS FIRM_RD ,
                                           
                                           NULL AS WAT_VOL,
                                           NULL AS WAT_20 ,
                                           NULL AS WAT_40 ,
                                           NULL AS WAT_HC ,
                                           NULL AS WAT_45 ,
                                           NULL AS WAT_53 ,
                                           NULL AS WAT_RF ,
                                           NULL AS WAT_WGT,
                                           -- 20140728 추가(S)
                                           NULL AS WAT_D2 ,
                                           NULL AS WAT_D4 ,
                                           NULL AS WAT_RD ,
                                           
                                           NULL AS CTRL_PORT    ,
                                           NULL AS CTRL_WGT     ,
                                           NULL AS CTRL_40HC    ,
                                           NULL AS CTRL_45HC    ,
                                           NULL AS CTRL_53FT    ,
                                           NULL AS CTRL_RF      ,
                                           NULL AS OFC_LVL      ,
                                           -- 20140728 추가(S)
                                           NULL AS CTRL_D2  ,
                                           NULL AS CTRL_D4  ,
                                           NULL AS CTRL_RD  ,NULL AS BKG_VOL_VGM,NULL AS BKG_WGT_VGM
                                      FROM SMP_DATA
                              ) Z
                        GROUP BY GROUPING SETS (
                                                 (Z.IOC_TS_CD, Z.OFC_CD, Z.CUST_CTRL_CD, Z.USA_BKG_MOD_CD, Z.CUST_ACCT, Z.POL_CD, Z.POD_CD, Z.DEST_LOC_CD),
                                                 (Z.IOC_TS_CD, Z.OFC_CD, Z.CUST_CTRL_CD, Z.USA_BKG_MOD_CD, Z.CUST_ACCT, Z.POL_CD, Z.POD_CD),
                                                 (Z.IOC_TS_CD, Z.OFC_CD, Z.CUST_CTRL_CD, Z.USA_BKG_MOD_CD, Z.CUST_ACCT, Z.POL_CD),
                                                 (Z.IOC_TS_CD, Z.OFC_CD, Z.CUST_CTRL_CD, Z.USA_BKG_MOD_CD, Z.CUST_ACCT),
                                                 (Z.IOC_TS_CD, Z.OFC_CD, Z.CUST_CTRL_CD, Z.USA_BKG_MOD_CD),
                                                 (Z.IOC_TS_CD, Z.OFC_CD, Z.CUST_CTRL_CD),
                                                 (Z.IOC_TS_CD, Z.OFC_CD)
                                               )
                       )
                 WHERE NOT (
                               GU1||GC1||GP1||GP2||GD1 = '11110'
                            OR GU1||GC1 = '10'
                            OR GU1||GP1 = '10'
                            OR GU1||GP2 = '10'
                            OR GU1||GD1 = '10'
                            OR GC1||GP1 = '10'
                            OR GC1||GP2 = '10'
                            OR GC1||GD1 = '10'
                            OR GP1||GP2 = '10'
                            OR GP1||GD1 = '10'
                            OR GP2||GD1 = '10'
                           )  
               )
         GROUP BY IOC_TS_CD,
               OFC_CD,
               CUST_CTRL_CD,
               USA_BKG_MOD_CD,
               CUST_ACCT,
               POL_CD,
               POD_CD,
               DEST_LOC_CD
       )
 ORDER BY IOC_TS_CD,
          OFC_CD,
          NVL(CUST_CTRL_CD,'0'),
          NVL(USA_BKG_MOD_CD,'0'),
          NVL(CUST_ACCT1,'0'),
          NVL(POL_CD, '0'),
          NVL(POD_CD, '0'),
          NVL(DEST_LOC_CD1,'0')
/*
[CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
[Trouble Shooting] 진마리아 SC Join 오류 수정
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경
2014.02.04 [CHM-201428383-01] RFA 로직 추가
2014.03.14 김시몬 [선처리] BKG RFA NULL 관련 보완
2014.03.17 [CHM-20142960] SMP/Allocation control보완 요청 - SPC_GET_SMP_AMEND_FNC 적용
2014.03.25 김시몬 [선처리] SQM 분기 구하는 로직 관련 보완
2014.05.22 [선반영] AES-SC관련 로직 추가
*/			]]></sql>
			<params>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="sales_office" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
