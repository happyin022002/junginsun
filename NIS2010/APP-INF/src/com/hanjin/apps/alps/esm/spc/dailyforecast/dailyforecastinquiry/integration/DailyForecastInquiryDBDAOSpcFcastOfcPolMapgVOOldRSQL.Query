<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="DailyForecastInquiryDBDAOSpcFcastOfcPolMapgVOOldRSQL">
			<desc><![CDATA[Lee Sang-Yong : [프로젝트] Ticket ID : CHM-201004171 53ft 추가
2010.11.16 남궁진호 [CHM-201007114-01] SPC_CONTI_CONV_FNC Function 사용 
2011.01.03 최윤성 [CHM-201008093-01] Office Level Table 생성
 - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체
2011.04.11 김종준 [CHM-201110033-01] ALPS/SPC의 TS booking status 기능보완 요청 
 -T/S VVD 및 T/S ETB DATE  필드 추가 
2011.05.06 최성민[CHM-201110577-01] ALPS/SPC의 TS booking status 기능보완 요청 
 - Pre/Post T/S ETB Date 항목 추가 
-2011.06.01 [ CHM-201111305-01] 김종준 R5와 동일하게 R9이 적용될 수 있도록 쿼리수정
-2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
* 2014.11.14 신자영 [CHM-201432770] T/S Booking Report 개선 ]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (
SELECT @[year]        AS YR         ,
           @[week]        AS WK         ,
           @[duration]    AS DUR        ,
           @[lane]        AS LANE       ,
           @[vvd]         AS VVD        , 
           @[rhq_cd]      AS RHQ_CD     ,
           @[ofc_cd]      AS OFC_CD     ,
           @[ts_lane1]    AS TS_LANE1   ,
           @[ts_lane2]    AS TS_LANE2   ,
           @[ts_lane3]    AS TS_LANE3   ,

           @[ts_conti]    AS TS_CONTI   , 

           @[ts_lane4]    AS TS_LANE4   ,
           @[ts_lane5]    AS TS_LANE5   ,
           @[ts_lane6]    AS TS_LANE6   ,
           @[pre_pst_flg] AS PRE_PST_FLG,
           @[pol1]        AS POL1       ,
           @[pol2]        AS POL2       ,
           @[pol3]        AS POL3       ,
           @[pol4]        AS POL4       ,
           @[pol5]        AS POL5       ,
           @[pol6]        AS POL6       ,
           @[pod1]        AS POD1       ,
           @[pod2]        AS POD2       ,
           @[pod3]        AS POD3       ,
           @[pod4]        AS POD4       ,
           @[pod5]        AS POD5       ,
           @[pod6]        AS POD6
      FROM DUAL
)
, CPARAMS AS (
    SELECT P.YR         ,
           P.WK         ,
           P.DUR        ,
           P.LANE       ,
           P.VVD        ,
           P.RHQ_CD     ,
           P.OFC_CD     ,
           L.CONTI_CD AS CONTI,
           P.TS_LANE1   ,
           P.TS_LANE2   ,
           P.TS_LANE3   ,
           P.TS_LANE4   ,
           P.TS_LANE5   ,
           P.TS_LANE6   ,
           P.PRE_PST_FLG,
           P.POL1       ,
           P.POL2       ,
           P.POL3       ,
           P.POL4       ,
           P.POL5       ,
           P.POL6       ,
           P.POD1       ,
           P.POD2       ,
           P.POD3       ,
           P.POD4       ,
           P.POD5       ,
           P.POD6       ,
           P.TS_CONTI
      FROM MDM_LOCATION     L,
           MDM_ORGANIZATION O,
           PARAMS           P
     WHERE P.RHQ_CD IS NOT NULL
       AND O.OFC_CD = P.RHQ_CD
       AND L.LOC_CD = O.LOC_CD
     UNION ALL
     SELECT P.YR         ,
           P.WK         ,
           P.DUR        ,
           P.LANE       ,
           P.VVD        ,
           P.RHQ_CD     ,
           P.OFC_CD     ,
           NULL AS CONTI,
           P.TS_LANE1   ,
           P.TS_LANE2   ,
           P.TS_LANE3   ,
           P.TS_LANE4   ,
           P.TS_LANE5   ,
           P.TS_LANE6   ,
           P.PRE_PST_FLG,
           P.POL1       ,
           P.POL2       ,
           P.POL3       ,
           P.POL4       ,
           P.POL5       ,
           P.POL6       ,
           P.POD1       ,
           P.POD2       ,
           P.POD3       ,
           P.POD4       ,
           P.POD5       ,
           P.POD6       ,
           P.TS_CONTI
      FROM PARAMS           P
     WHERE P.RHQ_CD IS NULL
)
, WEEKS AS (
    SELECT /*+ INDEX(PRD XPKMAS_WK_PRD)*/
          PRD.COST_YR  ,
          PRD.COST_WK  ,
          P.LANE       ,
          P.VVD        ,
          P.RHQ_CD     ,
          P.OFC_CD     ,
          P.CONTI      ,
          P.TS_LANE1   ,
          P.TS_LANE2   ,
          P.TS_LANE3   ,
          P.TS_LANE4   ,
          P.TS_LANE5   ,
          P.TS_LANE6   ,
          P.PRE_PST_FLG,
          P.POL1       ,
          P.POL2       ,
          P.POL3       ,
          P.POL4       ,
          P.POL5       ,
          P.POL6       ,
          P.POD1       ,
          P.POD2       ,
          P.POD3       ,
          P.POD4       ,
          P.POD5       ,
          P.POD6	   ,
          P.TS_CONTI
     FROM MAS_WK_PRD PRD,
          CPARAMS    P
	WHERE P.VVD IS NULL
	  AND PRD.COST_YR||PRD.COST_WK >= P.YR||P.WK
	  AND ROWNUM <= P.DUR
)
, VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD  ,
           V.DIR_CD    ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           V.COST_WK,
           P.RHQ_CD ,
           P.OFC_CD ,
           P.CONTI  ,
           P.TS_LANE1||P.TS_LANE2||P.TS_LANE3||P.TS_LANE4||P.TS_LANE5||P.TS_LANE6 AS TS_LANE,
           P.TS_LANE1   ,
           P.TS_LANE2   ,
           P.TS_LANE3   ,
           P.TS_LANE4   ,
           P.TS_LANE5   ,
           P.TS_LANE6   ,
           P.PRE_PST_FLG,
           P.POL1||P.POL2||P.POL3||P.POL4||P.POL5||P.POL6 AS POL,
           P.POL1,
           P.POL2,
           P.POL3,
           P.POL4,
           P.POL5,
           P.POL6,
           P.POD1||P.POD2||P.POD3||P.POD4||P.POD5||P.POD6 AS POD,
           P.POD1,
           P.POD2,
           P.POD3,
           P.POD4,
           P.POD5,
           P.POD6,
           P.TS_CONTI
      FROM MDM_LOCATION L ,
           MDM_REV_LANE RL,
           MAS_MON_VVD  V ,
           WEEKS        P
     WHERE P.VVD IS NULL
       AND RL.RLANE_CD   = V.RLANE_CD
       AND RL.REP_TRD_CD = V.TRD_CD
       AND V.DELT_FLG    = 'N'
       AND V.RLANE_CD   <> 'RBCCO'
       AND L.LOC_CD      = V.LST_LODG_PORT_CD
       /** CHM-201007114-01 처리
         AND DECODE(L.CONTI_CD, 'F', DECODE(V.RLANE_CD, 'INXTP', 'A', 'E'), L.CONTI_CD) = P.CONTI 
       **/
	   AND (P.CONTI IS NULL OR P.CONTI   = SPC_CONTI_CONV_FNC(L.CONTI_CD, V.RLANE_CD, V.DIR_CD)   )
       AND V.RLANE_CD LIKE P.LANE||'%'
       AND SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK = P.COST_YR||P.COST_WK
    UNION ALL
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD  ,
           V.DIR_CD    ,
           V.VSL_CD    ,
           V.SKD_VOY_NO,
           V.DIR_CD AS SKD_DIR_CD,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           V.COST_WK,
           P.RHQ_CD ,
           P.OFC_CD ,
           P.CONTI  ,
           P.TS_LANE1||P.TS_LANE2||P.TS_LANE3||P.TS_LANE4||P.TS_LANE5||P.TS_LANE6 AS TS_LANE,
           P.TS_LANE1   ,
           P.TS_LANE2   ,
           P.TS_LANE3   ,
           P.TS_LANE4   ,
           P.TS_LANE5   ,
           P.TS_LANE6   ,
           P.PRE_PST_FLG,
           P.POL1||P.POL2||P.POL3||P.POL4||P.POL5||P.POL6 AS POL,
           P.POL1,
           P.POL2,
           P.POL3,
           P.POL4,
           P.POL5,
           P.POL6,
           P.POD1||P.POD2||P.POD3||P.POD4||P.POD5||P.POD6 AS POD,
           P.POD1,
           P.POD2,
           P.POD3,
           P.POD4,
           P.POD5,
           P.POD6,
           P.TS_CONTI
      FROM MDM_LOCATION L ,
           MDM_REV_LANE RL,
           MAS_MON_VVD  V ,
           CPARAMS      P
     WHERE P.VVD IS NOT NULL
       AND RL.RLANE_CD   = V.RLANE_CD
       AND RL.REP_TRD_CD = V.TRD_CD
       AND V.DELT_FLG    = 'N'
       AND V.RLANE_CD   <> 'RBCCO'
       AND L.LOC_CD      = V.LST_LODG_PORT_CD
       /** CHM-201007114-01 처리
       AND DECODE(L.CONTI_CD, 'F', DECODE(V.RLANE_CD, 'INXTP', 'A', 'E'), L.CONTI_CD) = P.CONTI
       **/
	   AND (P.CONTI IS NULL OR P.CONTI   = SPC_CONTI_CONV_FNC(L.CONTI_CD, V.RLANE_CD, V.DIR_CD)   )
       AND V.VSL_CD     = SUBSTR(P.VVD, 1, 4)
       AND V.SKD_VOY_NO = SUBSTR(P.VVD, 5, 4)
       AND V.DIR_CD     = SUBSTR(P.VVD, 9, 1)
)
, BKG AS (
    SELECT YRWK    ,
           RLANE_CD,
           Z.VVD   ,
           NVL(SLAN_CD, 'FDR') AS SLAN_CD,
           TS_VVD ,
           TS_ETB_DT,
           TS2_VVD ,
           TS2_ETB_DT,
           DECODE(Z.PRE_PST_FLG, 'S', POD_CD, POL_CD) AS TS_PORT ,
           DECODE(Z.PRE_PST_FLG, 'S', POL_CD, POD_CD) AS BKG_PORT,
           DECODE(Z.OFC_CD, NULL, O.N4TH_PRNT_OFC_CD, NVL(O.N5TH_PRNT_OFC_CD, SLS_OFC_CD)) AS SLS_OFC_CD,
           Z.OFC_CD       ,
           BKG_TTL_QTY    ,
           BKG_RF20_QTY   ,
           BKG_RF40_QTY   ,
           BKG_TTL_WGT    ,
           BKG_20FT_QTY   ,
           BKG_40FT_QTY   ,
           BKG_40FT_HC_QTY,
           BKG_45FT_HC_QTY,
           BKG_53FT_QTY   
      FROM (
              SELECT COST_YR||COST_WK AS YRWK,
                     RHQ_CD  ,
                     RLANE_CD,
                     VVD     ,
                     SLAN_CD ,
                     TS_VVD   ,
                     TS_ETB_DT,
                     TS2_VVD   ,
                     TS2_ETB_DT,
                     POL_CD  ,
                     POD_CD  ,
                     OB_SLS_OFC_CD AS SLS_OFC_CD,
                     OFC_CD     ,
                     PRE_PST_FLG,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL,  1, 14), 0))) AS BKG_TTL_QTY    ,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0))) AS BKG_20FT_QTY   ,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0))) AS BKG_40FT_QTY   ,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0))) AS BKG_40FT_HC_QTY,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0))) AS BKG_45FT_HC_QTY,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0))) AS BKG_53FT_QTY   ,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0))) AS BKG_RF20_QTY   ,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))) AS BKG_RF40_QTY   ,
                     SUM(TO_NUMBER(NVL(SUBSTR(VAL, 113, 14), 0))) AS BKG_TTL_WGT
                FROM (
                        SELECT
							   V.COST_YR,
                               V.COST_WK,
                               V.RHQ_CD ,
                               V.RLANE_CD,
                               V.VSL_CD||V.SKD_VOY_NO||V.SKD_DIR_CD AS VVD,
                               BV.SLAN_CD,
                               BV.VSL_CD||BV.SKD_VOY_NO||BV.SKD_DIR_CD AS TS_VVD,
                               BV1.VSL_CD||BV1.SKD_VOY_NO||BV1.SKD_DIR_CD AS TS2_VVD,
                               (SELECT TO_CHAR(VPS_ETB_DT , 'YYYYMMDD')
                                  FROM VSK_VSL_PORT_SKD
                                 WHERE VSL_CD = BV.VSL_CD
                                   AND SKD_VOY_NO = BV.SKD_VOY_NO
                                   AND SKD_DIR_CD = BV.SKD_DIR_CD
                                   AND VPS_PORT_CD = DECODE(BV.VSL_PRE_PST_CD, 'S', BV.POD_CD, BV.POL_CD)
                                   AND CLPT_IND_SEQ = DECODE(BV.VSL_PRE_PST_CD, 'S', BV.POD_CLPT_IND_SEQ, BV.POL_CLPT_IND_SEQ)
                                   AND 'S' <> NVL(SKD_CNG_STS_CD, 'X')) AS TS_ETB_DT,  
                               (SELECT TO_CHAR(VPS_ETB_DT , 'YYYYMMDD')
                                  FROM VSK_VSL_PORT_SKD
                                 WHERE VSL_CD = BV1.VSL_CD
                                   AND SKD_VOY_NO = BV1.SKD_VOY_NO
                                   AND SKD_DIR_CD = BV1.SKD_DIR_CD

#if (${pre_pst_flg} == 'U') 
                                   AND VPS_PORT_CD = DECODE(BV1.VSL_PRE_PST_CD, 'S', BV1.POL_CD, BV1.POD_CD)
                                   AND CLPT_IND_SEQ = DECODE(BV1.VSL_PRE_PST_CD, 'S', BV1.POL_CLPT_IND_SEQ, BV1.POD_CLPT_IND_SEQ)
#else 
                                   AND VPS_PORT_CD = DECODE(BV1.VSL_PRE_PST_CD, 'U', BV1.POD_CD, BV1.POL_CD)
                                   AND CLPT_IND_SEQ = DECODE(BV1.VSL_PRE_PST_CD, 'U', BV1.POD_CLPT_IND_SEQ, BV1.POL_CLPT_IND_SEQ)
#end
                                   AND 'S' <> NVL(SKD_CNG_STS_CD, 'X')) AS TS2_ETB_DT,                             
                               BV.POL_CD AS POL_CD,
                               BV.POD_CD AS POD_CD,
                               SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) AS OB_SLS_OFC_CD,
                               V.OFC_CD,
                               V.PRE_PST_FLG,
                               (
                                 SELECT    TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')
                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
										|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                        || TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')
                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0), 0)), 'FM0000000000.000')
                                        || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 0, Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY), 0)), 'FM0000000000.000')
                                        || TO_CHAR((R.ACT_WGT * DECODE(R.ACT_WGT,'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT
                                                                                                                                   FROM MDM_CNTR_TP_SZ TS
                                                                                                                                  WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
                                   FROM BKG_QUANTITY Q
                                  WHERE B.BKG_NO = Q.BKG_NO
                               ) VAL,
                               V.TS_CONTI
                          FROM BKG_VVD     BV,
                               BKG_BOOKING B ,
                               VVDS        V ,
                               BKG_BL_DOC  R ,
                               BKG_VVD     BV1
                         WHERE BV.BKG_NO          = B.BKG_NO
                           AND BV1.BKG_NO         = B.BKG_NO
                           AND B.BKG_NO           = R.BKG_NO
                           AND BV.VSL_PRE_PST_CD IN (V.PRE_PST_FLG)
                           AND B.VSL_CD           = V.VSL_CD
                           AND B.SKD_VOY_NO       = V.SKD_VOY_NO
                           AND B.SKD_DIR_CD       = V.SKD_DIR_CD
                           AND (V.TS_LANE IS NULL OR BV.SLAN_CD IN (V.TS_LANE1, V.TS_LANE2, V.TS_LANE3, V.TS_LANE4, V.TS_LANE5, V.TS_LANE6))
                           AND (V.POL IS NULL OR BV.POL_CD LIKE V.POL1||'%')
                           AND (V.POD IS NULL OR BV.POD_CD LIKE V.POD1||'%')
#if (${pre_pst_flg} == 'U') 
                           AND BV1.VSL_SEQ = BV.VSL_SEQ - 1
#else
						   AND BV1.VSL_SEQ = DECODE(BV.VSL_SEQ , (SELECT MAX(VSL_SEQ) FROM BKG_VVD WHERE BKG_NO = BV.BKG_NO AND VSL_PRE_PST_CD = 'S'), 0, (BV.VSL_SEQ + 1))
#end                         
                           AND (V.TS_CONTI IS NULL OR V.TS_CONTI = (SELECT SPC_CONTI_CONV_FNC(CONTI_CD, V.RLANE_CD, V.DIR_CD) FROM MDM_LOCATION 
                                                                     WHERE LOC_CD = DECODE(BV.VSL_PRE_PST_CD, 'S', BV.POD_CD, BV.POL_CD)))                           
                           AND B.BKG_STS_CD    IN('W','F')
                           AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
                     )
            GROUP BY COST_YR||COST_WK,
                     RHQ_CD          ,
                     RLANE_CD        ,
                     VVD             ,
                     SLAN_CD         ,
                     TS_VVD          ,
                     TS_ETB_DT       ,
                     TS2_VVD         ,
                     TS2_ETB_DT      ,
                     POL_CD          ,
                     POD_CD          ,
                     OB_SLS_OFC_CD   ,
                     OFC_CD          ,
                     PRE_PST_FLG
           ) Z,
           SPC_OFC_LVL O
     WHERE O.OFC_CD = Z.SLS_OFC_CD
       AND (Z.OFC_CD IS NULL OR O.N4TH_PRNT_OFC_CD = Z.OFC_CD) 
	   AND (Z.RHQ_CD IS NULL OR Z.RHQ_CD = O.N2ND_PRNT_OFC_CD)     
       AND Z.YRWK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK
) 
, BKG_LIST  AS (
  SELECT YRWK,
         DECODE(SLAN_CD, 'RBC', 'FDR', SLAN_CD) AS SLAN_CD,
         TS_VVD,
		 TS_ETB_DT,
         TS_PORT,
         TS2_VVD,
		 TS2_ETB_DT,
         BKG_PORT,
         SLS_OFC_CD,
         RLANE_CD,
         VVD,
         7 - LOG(2, GROUPING_ID(YRWK, SLAN_CD, TS_VVD, TS_PORT, TS2_VVD, BKG_PORT, SLS_OFC_CD, VVD) + 1) AS LVL,
         SUM(BKG_TTL_QTY)     AS BKG_TTL_QTY    ,
         SUM(BKG_RF20_QTY)    AS BKG_RF20_QTY   ,
         SUM(BKG_RF40_QTY)    AS BKG_RF40_QTY   ,
         SUM(BKG_TTL_WGT)     AS BKG_TTL_WGT    ,
         SUM(BKG_20FT_QTY)    AS BKG_20FT_QTY   ,
         SUM(BKG_40FT_QTY)    AS BKG_40FT_QTY   ,
         SUM(BKG_40FT_HC_QTY) AS BKG_40FT_HC_QTY,
         SUM(BKG_45FT_HC_QTY) AS BKG_45FT_HC_QTY,
         SUM(BKG_53FT_QTY)    AS BKG_53FT_QTY
    FROM BKG B
group by grouping sets (
                         (YRWK, SLAN_CD, TS_VVD, TS_ETB_DT, TS_PORT, TS2_VVD, TS2_ETB_DT, BKG_PORT, SLS_OFC_CD, RLANE_CD, VVD),
                         (YRWK, SLAN_CD, TS_VVD, TS_ETB_DT, TS_PORT, TS2_VVD, TS2_ETB_DT, BKG_PORT, SLS_OFC_CD),
                         (YRWK, SLAN_CD, TS_VVD, TS_ETB_DT, TS_PORT, TS2_VVD, TS2_ETB_DT, BKG_PORT),
                         (YRWK, SLAN_CD, TS_VVD, TS_ETB_DT, TS_PORT, TS2_VVD, TS2_ETB_DT),
                         (YRWK, SLAN_CD, TS_VVD, TS_ETB_DT, TS_PORT),
                         (YRWK, SLAN_CD, TS_VVD),
                         (YRWK, SLAN_CD)
                       )
ORDER BY YRWK,
         DECODE(SLAN_CD, 'FDR', 'ZZZ', SLAN_CD),
         NVL(TS_VVD, 	'000000000'),
         NVL(TS_ETB_DT, '00000000'),
         NVL(TS_PORT, 	'00000'),
         NVL(TS2_VVD, 	'000000000'),
         NVL(TS2_ETB_DT,'00000000'),
         NVL(BKG_PORT  ,'00000'),
         NVL(SLS_OFC_CD,'00000'),
         NVL(RLANE_CD  ,'00000'),
         VVD,
         LVL
)
SELECT 
    YRWK,
    SLAN_CD,
    CASE WHEN TRUNC(LVL)  = 1 THEN
        TS_VVD
    ELSE
        NVL(TS_VVD,'-')
    END TS_VVD,
    CASE WHEN TRUNC(LVL) IN (1,2) THEN
        TS_ETB_DT
    ELSE
        NVL(TS_ETB_DT,'-')
    END TS_ETB_DT,
    TS_PORT,

	CASE WHEN TRUNC(LVL) IN (1,2,3) THEN
        TS2_VVD
    ELSE
        NVL(TS2_VVD,'-')
    END TS2_VVD,
  
    CASE WHEN TRUNC(LVL) IN (1,2,3) THEN
        TS2_ETB_DT
    ELSE
        NVL(TS2_ETB_DT,'-')
    END TS2_ETB_DT,
  
    BKG_PORT,
    SLS_OFC_CD,
    RLANE_CD,
    VVD,
    LVL,
    BKG_TTL_QTY    ,
    BKG_RF20_QTY   ,
    BKG_RF40_QTY   ,
    BKG_TTL_WGT    ,
    BKG_20FT_QTY   ,
    BKG_40FT_QTY   ,
    BKG_40FT_HC_QTY,
    BKG_45FT_HC_QTY,
    BKG_53FT_QTY
FROM BKG_LIST			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="duration" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="ts_lane1" type="12" value="" out="N"/>
				<param name="ts_lane2" type="12" value="" out="N"/>
				<param name="ts_lane3" type="12" value="" out="N"/>
				<param name="ts_conti" type="12" value="" out="N"/>
				<param name="ts_lane4" type="12" value="" out="N"/>
				<param name="ts_lane5" type="12" value="" out="N"/>
				<param name="ts_lane6" type="12" value="" out="N"/>
				<param name="pre_pst_flg" type="12" value="" out="N"/>
				<param name="pol1" type="12" value="" out="N"/>
				<param name="pol2" type="12" value="" out="N"/>
				<param name="pol3" type="12" value="" out="N"/>
				<param name="pol4" type="12" value="" out="N"/>
				<param name="pol5" type="12" value="" out="N"/>
				<param name="pol6" type="12" value="" out="N"/>
				<param name="pod1" type="12" value="" out="N"/>
				<param name="pod2" type="12" value="" out="N"/>
				<param name="pod3" type="12" value="" out="N"/>
				<param name="pod4" type="12" value="" out="N"/>
				<param name="pod5" type="12" value="" out="N"/>
				<param name="pod6" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
