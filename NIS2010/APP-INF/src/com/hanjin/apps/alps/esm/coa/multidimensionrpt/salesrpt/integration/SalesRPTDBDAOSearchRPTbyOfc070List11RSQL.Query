<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SalesRPTDBDAOSearchRPTbyOfc070List11RSQL">
			<desc><![CDATA[Office Report-vs QTA
2012.01.03 [CHM-201114896-01] 이석준  CM2(Own Feeder) 비용 반영
2012.02.29 [CHM-201216554-01] 전윤주 Office Report-vs QTA (VS Pre Week Tab) 화면 쿼리 튜닝
- Velocity 문 구조 수정
- BKG_CGO_TP_CD = 'P' 조건 삭제 
- COA_BKG_EXPN_DTL_WK에 걸리는 힌트 삭제
2015.08.31 손진환 [CHM-201536992] Split14-[그룹사 표준 코드 시행] HJS 프로그램 대응 및 데이타 마이그레이션 작업 요청]]></desc>
			<sql><![CDATA[
SELECT  ''
  ,OFC_CD1
  ,OFC_CD2
  ,TRD_CD
  ,SUB_TRD_CD
  ,RLANE_CD
  ,VSL_CD
  ,SKD_VOY_NO
  ,DIR_CD
  ,PREV_LOAD         ,CURR_LOAD
  ,PREV_REV          ,CURR_REV
  ,PREV_CM           ,CURR_CM
  ,PREV_OTH_ABC_SVC  ,CURR_OTH_ABC_SVC
  ,PREV_STP_REV      ,CURR_STP_REV
  ,PREV_BALANCE_SVC  ,CURR_BALANCE_SVC
  ,PREV_OTH_ABC_CONT ,CURR_OTH_ABC_CONT
  ,PREV_STP_COST     ,CURR_STP_COST
  ,PREV_BALANCE_CONT ,CURR_BALANCE_CONT
  ,PREV_STP_PROFIT   ,CURR_STP_PROFIT
  ,PREV_CM + PREV_STP_PROFIT AS PREV_BRANCH_CM
  ,CURR_CM + CURR_STP_PROFIT AS CURR_BRANCH_CM
  ,PREV_BKG_OP      ,CURR_BKG_OP
  ,PREV_BKG_OP + PREV_STP_PROFIT AS  PREV_OP
  ,CURR_BKG_OP + CURR_STP_PROFIT AS  CURR_OP
  ,DECODE(PREV_LOAD,0,0, PREV_REV/PREV_LOAD) AS PREV_RPB
  ,DECODE(CURR_LOAD,0,0, CURR_REV/CURR_LOAD) AS CURR_RPB
  ,DECODE(PREV_LOAD,0,0, PREV_CM/PREV_LOAD)  AS PREV_CMB
  ,DECODE(CURR_LOAD,0,0, CURR_CM/CURR_LOAD)  AS CURR_CMB
  ,DECODE(PREV_LOAD,0,0, PREV_OP/PREV_LOAD)  AS PREV_OPB
  ,DECODE(CURR_LOAD,0,0, CURR_OP/CURR_LOAD)  AS CURR_OPB
  ,PREV_BSA_CAPA
  ,CURR_BSA_CAPA
  ,DECODE(PREV_BSA_CAPA,0,0, PREV_LOAD/PREV_BSA_CAPA *100) AS PREV_LF
  ,DECODE(CURR_BSA_CAPA,0,0, CURR_LOAD/CURR_BSA_CAPA *100) AS CURR_LF
  ,DECODE(PREV_LOAD,  0,0,((CURR_LOAD-PREV_LOAD)    /ABS(PREV_LOAD))  *100)    AS LOAD_CHNG
  ,DECODE(PREV_REV,   0,0,((CURR_REV-PREV_REV)      /ABS(PREV_REV))   *100)    AS REV_CHNG
  ,DECODE(PREV_CM,    0,0,((CURR_CM-PREV_CM)        /ABS(PREV_CM))    *100)    AS CM_CHNG
  ,DECODE((PREV_BKG_OP + PREV_STP_PROFIT),0,0,((CURR_CM + CURR_STP_PROFIT) - (PREV_BKG_OP + PREV_STP_PROFIT))/ABS(PREV_BKG_OP + PREV_STP_PROFIT)*100) AS OP_CHNG
  ,DECODE(PREV_BKG_OP,0,0,((CURR_BKG_OP-PREV_BKG_OP)/ABS(PREV_BKG_OP))*100)    AS BKG_OP_CHNG
  ,CURR_BSA_CAPA-PREV_BSA_CAPA                                                 AS BSA_CAPA_CHNG
  ,DECODE(CURR_BSA_CAPA  ,0,0,CURR_LOAD/CURR_BSA_CAPA *100)-DECODE(PREV_BSA_CAPA,0,0,PREV_LOAD/PREV_BSA_CAPA*100) AS LF_CHNG
  ,DECODE(PREV_OTH_ABC_SVC,0,0,((CURR_OTH_ABC_SVC-PREV_STP_REV)/ABS(PREV_OTH_ABC_SVC))*100)              AS OTH_ABC_SVC_CHNG
  ,DECODE(PREV_STP_REV,0,0,((CURR_STP_REV-PREV_STP_REV)/ABS(PREV_STP_REV))*100)                          AS STP_REV_CHNG
  ,DECODE(PREV_BALANCE_SVC,0,0,((CURR_BALANCE_SVC-PREV_BALANCE_SVC)/ABS(PREV_BALANCE_SVC))*100)          AS BALANCE_SVC_CHNG
  ,DECODE(PREV_OTH_ABC_CONT,0,0,((CURR_OTH_ABC_CONT-PREV_OTH_ABC_CONT)/ABS(PREV_OTH_ABC_CONT))*100)      AS OTH_ABC_CONT_CHNG
  ,DECODE(PREV_STP_COST,0,0,((CURR_STP_COST-PREV_STP_COST)/ABS(PREV_STP_COST))*100)                      AS STP_COST_CHNG
  ,DECODE(PREV_BALANCE_CONT,0,0,((CURR_BALANCE_CONT-PREV_BALANCE_CONT)/ABS(PREV_BALANCE_CONT))*100)      AS BALANCE_CONT_CHNG
  ,DECODE(PREV_STP_PROFIT,0,0,((CURR_STP_PROFIT-PREV_STP_PROFIT)/ABS(PREV_STP_PROFIT))*100)              AS STP_PROFIT_CHNG
  ,DECODE(PREV_LOAD,  0,0,(((CURR_CM + CURR_STP_PROFIT)-(PREV_CM + PREV_STP_PROFIT))    /ABS(PREV_CM + PREV_STP_PROFIT))  *100)    AS BRANCH_CHNG
  ,DECODE(CURR_LOAD,0,0,CURR_REV/CURR_LOAD)-DECODE(PREV_LOAD,0,0,PREV_REV/PREV_LOAD) AS RPB_CHNG
  ,DECODE(CURR_LOAD, 0,0,CURR_CM/CURR_LOAD)-DECODE(PREV_LOAD, 0,0,PREV_CM/PREV_LOAD) AS CMB_CHNG
  ,ROUND((CURR_LOAD-PREV_LOAD)*DECODE(PREV_LOAD,0,0,PREV_REV/PREV_LOAD), 5)                                            AS BY_LOAD_GREV
  ,ROUND((DECODE(CURR_LOAD,0,0,CURR_REV/CURR_LOAD)-DECODE(PREV_LOAD,0,0,PREV_REV/PREV_LOAD))*CURR_LOAD, 5)             AS BY_RPB_GREV
  ,ROUND((CURR_LOAD-PREV_LOAD)*(DECODE(PREV_LOAD,0,0,PREV_CM_COST/PREV_LOAD)), 5)                                      AS BY_LOAD_COST
  ,ROUND(((DECODE(CURR_LOAD,0,0,CURR_CM_COST/CURR_LOAD))-(DECODE(PREV_LOAD,0,0,PREV_CM_COST/PREV_LOAD)))*CURR_LOAD, 5) AS BY_CPB_COST
  ,ROUND(NVL(RATIO_TO_REPORT(PREV_LOAD) OVER(),0)*100 , 5)                                                               AS PREV_LOAD_SHARE
  ,ROUND(NVL(RATIO_TO_REPORT(CURR_LOAD) OVER(),0)*100 , 5)                                                               AS CURR_LOAD_SHARE
  ,ROUND(NVL(RATIO_TO_REPORT(PREV_CM)   OVER(),0)*100 , 5)                                                               AS PREV_CM_SHARE
  ,ROUND(NVL(RATIO_TO_REPORT(CURR_CM)   OVER(),0)*100 , 5)                                                               AS CURR_CM_SHARE
  ,ROUND(NVL(RATIO_TO_REPORT(PREV_CM-PREV_OP_COST) OVER(),0)*100 , 5)                                                    AS PREV_BKG_OP_SHARE
  ,ROUND(NVL(RATIO_TO_REPORT(CURR_CM-CURR_OP_COST) OVER(),0)*100 , 5)                                                    AS CURR_BKG_OP_SHARE

FROM (
    SELECT ''
       ,OFC_CD1
       ,OFC_CD2
       ,TRD_CD
#if(${f_rpt_item} =='1')
      ,NULL AS SUB_TRD_CD
#else
      ,SUB_TRD_CD
#end
#if(${f_rpt_item} =='1' ||${f_rpt_item} =='2')
      ,NULL AS RLANE_CD
#else
      ,RLANE_CD
#end
#if(${f_rpt_item} =='1' ||${f_rpt_item} =='2'||${f_rpt_item} =='3')
      ,NULL AS VSL_CD
      ,NULL AS SKD_VOY_NO
#else
      ,VSL_CD
      ,SKD_VOY_NO
#end
#if( ${f_dir_sts} =='Y'||${f_rpt_item}=='4')
      ,DIR_CD
#else
      ,NULL AS DIR_CD
#end
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), BKG_QTY)),0)                        AS PREV_LOAD
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), BKG_QTY)),0)                        AS CURR_LOAD
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), FR_REV)),0)                         AS PREV_REV
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), FR_REV)),0)                         AS CURR_REV
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), TOT_REV - CM_COST)),0)              AS PREV_CM
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), TOT_REV - CM_COST)),0)              AS CURR_CM
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), OTH_ABC_SVC) ) ,0)                  AS PREV_OTH_ABC_SVC
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), OTH_ABC_SVC) ) ,0)                  AS CURR_OTH_ABC_SVC
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), STP_REV) ) ,0)                      AS PREV_STP_REV
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), STP_REV) ) ,0)                      AS CURR_STP_REV
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), BALANCE_SVC) ) ,0)                  AS PREV_BALANCE_SVC
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), BALANCE_SVC) ) ,0)                  AS CURR_BALANCE_SVC
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), OTH_ABC_CONT) ) ,0)                 AS PREV_OTH_ABC_CONT
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), OTH_ABC_CONT) ) ,0)                 AS CURR_OTH_ABC_CONT
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), STP_COST) ) ,0)                     AS PREV_STP_COST
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), STP_COST) ) ,0)                     AS CURR_STP_COST
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), BALANCE_CONT) ) ,0)                 AS PREV_BALANCE_CONT
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), BALANCE_CONT) ) ,0)                 AS CURR_BALANCE_CONT
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), BALANCE_SVC) ) ,0)
      +NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), BALANCE_CONT) ) ,0)                 AS PREV_STP_PROFIT
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), BALANCE_SVC) ) ,0)
      +NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), BALANCE_CONT) ) ,0)                 AS CURR_STP_PROFIT
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), TOT_REV - CM_COST - OP_COST)),0)    AS PREV_BKG_OP
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), TOT_REV - CM_COST - OP_COST)),0)    AS CURR_BKG_OP
      ,NULL                                                                                         AS PREV_OP
      ,NULL                                                                                         AS CURR_OP
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), VVD_BSA_CAPA)),0)                   AS PREV_BSA_CAPA
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), VVD_BSA_CAPA)),0)                   AS CURR_BSA_CAPA
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), CM_COST)),0)                        AS PREV_CM_COST
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), CM_COST)),0)                        AS CURR_CM_COST
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_prev_week], 5, 2), OP_COST)),0)                        AS PREV_OP_COST
      ,NVL(SUM(DECODE(B1.COST_WK, SUBSTR(@[f_curr_week], 5, 2), OP_COST)),0)                        AS CURR_OP_COST

    FROM (
        SELECT          
          ''
#if(${f_ofc_sts} =='Y')
    #if(${f_ofc_lvl1} =='1')
         ,A4.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl1} =='2')
         ,A4.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl1} =='3')
         ,A4.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl1} =='4')
         ,A4.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='5')
         ,A4.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='6')
         ,A4.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='7')
         ,A4.OFC_N7TH_LVL_CD
#end OFC_CD1

#if(${f_ofc_lvl2} =='1')
         ,A4.OFC_N1ST_LVL_CD
#elseif (${f_ofc_lvl2} =='2')
         ,A4.OFC_N2ND_LVL_CD
#elseif (${f_ofc_lvl2} =='3')
         ,A4.OFC_N3RD_LVL_CD
#elseif (${f_ofc_lvl2} =='4')
         ,A4.OFC_N4TH_LVL_CD
#elseif (${f_ofc_lvl2} =='5')
         ,A4.OFC_N5TH_LVL_CD
#elseif (${f_ofc_lvl2} =='6')
         ,A4.OFC_N6TH_LVL_CD
#elseif (${f_ofc_lvl2} =='7')
         ,A4.OFC_N7TH_LVL_CD
#end OFC_CD2
#else
          ,NULL AS OFC_CD1
          ,NULL AS OFC_CD2
#end
          ,A1.TRD_CD
          ,A1.SUB_TRD_CD
          ,A1.RLANE_CD
          ,A1.VSL_CD
          ,A1.SKD_VOY_NO
          ,A1.DIR_CD
          ,NVL(A3.LOD_SPL_CNG_FLG,'N') AS LOD_SPL_CNG_FLG
          ,A1.COST_WK
          ,DECODE(NVL(A3.LOD_SPL_CNG_FLG,'N'),'Y', SUM(DECODE(SUBSTR(A2.CNTR_TPSZ_CD,-1,1),'2',NVL(A2.BKG_QTY,0),'3',NVL(A2.BKG_QTY,0),NVL(A2.BKG_QTY,0)*2))
                                             ,'N', MAX(A1.VVD_BSA_CAPA))        AS VVD_BSA_CAPA
          ,NVL(SUM(DECODE(SUBSTR(A2.CNTR_TPSZ_CD,-1,1),'2',NVL(A2.BKG_QTY,0),'3',NVL(A2.BKG_QTY,0),NVL(A2.BKG_QTY,0)*2)),0) AS BKG_QTY
          ,NVL(SUM(A2.BKG_REV+A2.BKG_OFT_REV),0)                                        AS FR_REV
          ,NVL(SUM(A2.BKG_REV+A2.BKG_OFT_REV+A2.BKG_MISC_REV+A2.SCR_CHG_REV),0)         AS TOT_REV
          ,NVL(SUM(A2.DMDT_COM_AMT),0)                                                  AS DMDT
#if(${f_pro_lvl} =='M')
          ,NVL(SUM(DECODE(@[f_pro_vw],'P', (A2.PA_CM_COST_TTL_AMT+NVL(A2.OWN_FDR_AMT,0)),'R',(A2.RA_CM_COST_TTL_AMT+NVL(A2.OWN_FDR_AMT,0)))),0) AS CM_COST
#else
          ,NVL(SUM(DECODE(@[f_pro_vw],'P', A2.PA_CM_COST_TTL_AMT,'R',A2.RA_CM_COST_TTL_AMT)),0) AS CM_COST
#end
          ,NVL(SUM(DECODE(@[f_pro_vw],'P', 0,'R',A2.RA_OP_COST_TTL_AMT)),0)                     AS OP_COST
          ,NULL AS OTH_ABC_SVC
          ,NULL AS STP_REV
          ,NULL AS BALANCE_SVC
          ,NVL(SUM(DECODE(@[f_pro_vw],'P', 0,'R',A2.OTR_VOL_ACT_AMT)  )  ,0) AS OTH_ABC_CONT
          ,NVL(SUM(DECODE(@[f_pro_vw],'P', 0,'R',A2.STP_COST_AMT)     )  ,0) AS STP_COST
          ,NVL(SUM(DECODE(@[f_pro_vw],'P', 0,'R',A2.OTR_VOL_ACT_AMT)  )  ,0)
          -NVL(SUM(DECODE(@[f_pro_vw],'P', 0,'R',A2.STP_COST_AMT)     )  ,0) AS BALANCE_CONT
        FROM
            COA_BKG_EXPN_DTL_WK A2
           ,COA_MON_VVD A1
           ,COA_LANE_RGST A3
           ,COA_OFC_LVL A4
        WHERE A1.TRD_CD              = A2.TRD_CD
          AND A1.RLANE_CD            = A2.RLANE_CD
          AND A1.IOC_CD              = A2.IOC_CD
          AND A1.VSL_CD              = A2.VSL_CD
          AND A1.SKD_VOY_NO          = A2.SKD_VOY_NO
          AND A1.DIR_CD              = A2.DIR_CD
          AND SUBSTR(A1.SLS_YRMON,1,4) || A1.COST_WK BETWEEN @[f_prev_week] AND @[f_curr_week]
          AND SUBSTR(A1.SLS_YRMON,1,4) || A1.COST_WK = SUBSTR(A2.SLS_YRMON,1,4) || A2.COST_WK
          AND A1.SLS_YRMON           = A2.SLS_YRMON
          AND A1.COST_WK             = A2.COST_WK
          AND A1.TRD_CD              = A3.TRD_CD
          AND A1.RLANE_CD            = A3.RLANE_CD
          AND A1.IOC_CD              = A3.IOC_CD
          AND A1.DIR_CD              = A3.DIR_CD
          AND A2.SLS_YRMON           BETWEEN A4.OFC_APLY_FM_YRMON AND A4.OFC_APLY_TO_YRMON
#if(${f_ofc_vw} =='C')
          AND A2.AGMT_SGN_OFC_CD     = A4.OFC_CD
#elseif (${f_ofc_vw} =='L')
          AND A2.SLS_OFC_CD          = A4.OFC_CD
#end
          AND NVL(A1.DELT_FLG,'N')   = 'N'
#if(${f_bkg_sts} =='Y')
          AND A2.BKG_STS_CD        IN ('F','S','W')
#else
          AND A2.BKG_STS_CD        IN ('F','S')
#end
         -- AND A2.BKG_CGO_TP_CD       <> 'P' 해당 조건의 BKG 들어오지 않음. 주석처리
          AND A2.BL_NO_TP            IN ('M','0')

#if(${f_ofc_cd} !='')
    #if(${f_excl_sts} =='')
          AND DECODE('${f_ofc_lvl1}', '1', A4.OFC_N1ST_LVL_CD, '2', A4.OFC_N2ND_LVL_CD, '3', A4.OFC_N3RD_LVL_CD, '4', A4.OFC_N4TH_LVL_CD, '5', A4.OFC_N5TH_LVL_CD, '6', A4.OFC_N6TH_LVL_CD, '7', A4.OFC_N7TH_LVL_CD) = '${f_ofc_cd}'
    #else
          AND A4.OFC_CD = '${f_ofc_cd}'
    #end
#end
#if(${f_ofc_lvl1}=='6' || ${f_ofc_lvl1}=='7')
          AND A4.OFC_LVL = '${f_ofc_lvl1}'
#else 
	-------------------------------------------------------------------------------
    -- 201401 부터 적용됨
    -- SELBB, TYOBB 산하 XXXBS 레벨이 Sales Office 가 됨에 따라 Office Level2 가 Sales Office일때는 XXXBS가 조회안되도록 처리
        AND A4.OFC_LVL <= CASE WHEN @[f_ofc_lvl1]='2' AND @[f_ofc_lvl2] <= '5' THEN DECODE(A4.OFC_N2ND_LVL_CD,'SELSC', '2', 'TYOSC', '2', '8') ELSE '8' END
	-------------------------------------------------------------------------------

#end

     GROUP BY ''
/*      Office Display */
#if(${f_ofc_sts} =='Y')
    #if(${f_ofc_lvl1} =='1')
            ,A4.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl1} =='2')
            ,A4.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl1} =='3')
            ,A4.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl1} =='4')
            ,A4.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='5')
            ,A4.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='6')
            ,A4.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='7')
            ,A4.OFC_N7TH_LVL_CD
    #end

    #if(${f_ofc_lvl2} =='1')
            ,A4.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl2} =='2')
            ,A4.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl2} =='3')
            ,A4.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl2} =='4')
            ,A4.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='5')
            ,A4.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='6')
            ,A4.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='7')
            ,A4.OFC_N7TH_LVL_CD
    #end
#end
            ,A1.COST_WK
            ,A1.TRD_CD
            ,A1.SUB_TRD_CD
            ,A1.RLANE_CD
            ,A1.VSL_CD
            ,A1.SKD_VOY_NO
            ,A1.DIR_CD
            ,A3.LOD_SPL_CNG_FLG
            ,A1.VVD_BSA_CAPA
#if(${f_pro_vw} =='R')
/* -- STP 계산 ------*/
        UNION ALL
        /* STE REV, ABC OTH SVC */
        SELECT
              /*+ USE_HASH(A2, A1, A3) PARALLEL(A2, 10) *//* + ORDERED */
               ''
#if(${f_ofc_sts} =='Y')
    #if(${f_ofc_lvl1} =='1')
             ,A3.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl1} =='2')
             ,A3.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl1} =='3')
             ,A3.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl1} =='4')
             ,A3.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='5')
             ,A3.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='6')
             ,A3.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='7')
             ,A3.OFC_N7TH_LVL_CD
    #end OFC_CD1

    #if(${f_ofc_lvl2} =='1')
             ,A3.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl2} =='2')
             ,A3.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl2} =='3')
             ,A3.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl2} =='4')
             ,A3.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='5')
             ,A3.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='6')
             ,A3.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='7')
             ,A3.OFC_N7TH_LVL_CD
    #end OFC_CD2
#else
             ,NULL AS OFC_CD1
             ,NULL AS OFC_CD2
#end

          ,A1.TRD_CD
          ,A1.SUB_TRD_CD
          ,A1.RLANE_CD
          ,A1.VSL_CD
          ,A1.SKD_VOY_NO
          ,A1.DIR_CD
          ,NULL AS LOD_SPL_CNG_FLG
          ,A1.COST_WK
          ,NULL AS VVD_BSA_CAPA
          ,NULL AS BKG_QTY
          ,NULL AS FR_REV
          ,NULL AS TOT_REV
          ,NULL AS DMDT
          ,NULL AS CM_COST
          ,NULL AS OP_COST
          ,NVL(SUM(A2.OTR_PRC_AMT),0) AS OTH_ABC_SVC
          ,NVL(SUM(A2.SVC_TRNS_PRC_AMT),0) AS STP_REV
          ,NVL(SUM(A2.SVC_TRNS_PRC_AMT),0) - NVL(SUM(A2.OTR_PRC_AMT),0)  AS BALANCE_SVC
          ,NULL AS OTH_ABC_CONT
          ,NULL AS STP_COST
          ,NULL AS BALANCE_CONT
       FROM COA_MON_VVD A1
          ,COA_BKG_SVC_TRNS_SMRY A2
          ,COA_OFC_LVL A3
        WHERE A1.VSL_CD        = A2.VSL_CD
          AND A1.SKD_VOY_NO    = A2.SKD_VOY_NO
          AND A1.DIR_CD        = A2.DIR_CD
          AND A1.TRD_CD        = A2.TRD_CD
          AND A1.RLANE_CD      = A2.RLANE_CD
          AND A1.IOC_CD        = A2.IOC_CD
          AND A1.DELT_FLG      = 'N'
          AND A2.BKG_STS_CD    IN ('S','F')
          --AND A2.BKG_CGO_TP_CD <> 'P' 해당 조건의 BKG 들어오지 않음. 주석처리
          AND A2.BL_NO_TP      IN ('M','0')
          AND A1.COST_YRMON    BETWEEN A3.OFC_APLY_FM_YRMON AND A3.OFC_APLY_TO_YRMON   /* OFC 월별 관리 */
          AND SUBSTR(A1.SLS_YRMON,1,4) || A1.COST_WK BETWEEN @[f_prev_week] AND @[f_curr_week]
          AND A2.COND_OFC_CD = A3.OFC_CD
#if(${f_ofc_cd} !='')
    #if(${f_excl_sts} =='')
          AND DECODE(@[f_ofc_lvl1], '1', A3.OFC_N1ST_LVL_CD, '2', A3.OFC_N2ND_LVL_CD, '3', A3.OFC_N3RD_LVL_CD, '4', A3.OFC_N4TH_LVL_CD, '5', A3.OFC_N5TH_LVL_CD, '6', A3.OFC_N6TH_LVL_CD, '7', A3.OFC_N7TH_LVL_CD) = @[f_ofc_cd]
    #else
          AND A3.ofc_cd = @[f_ofc_cd]
    #end
#end
#if(${f_ofc_lvl1}=='6' || ${f_ofc_lvl1}=='7')
          AND A3.OFC_LVL = @[f_ofc_lvl1]
#else
          AND A3.OFC_LVL < '9'
#end
        GROUP BY ''
#if(${f_ofc_sts} =='Y')
    #if(${f_ofc_lvl1} =='1')
             ,A3.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl1} =='2')
             ,A3.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl1} =='3')
             ,A3.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl1} =='4')
             ,A3.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='5')
             ,A3.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='6')
             ,A3.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl1} =='7')
             ,A3.OFC_N7TH_LVL_CD
    #end

    #if(${f_ofc_lvl2} =='1')
             ,A3.OFC_N1ST_LVL_CD
    #elseif (${f_ofc_lvl2} =='2')
             ,A3.OFC_N2ND_LVL_CD
    #elseif (${f_ofc_lvl2} =='3')
             ,A3.OFC_N3RD_LVL_CD
    #elseif (${f_ofc_lvl2} =='4')
             ,A3.OFC_N4TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='5')
             ,A3.OFC_N5TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='6')
             ,A3.OFC_N6TH_LVL_CD
    #elseif (${f_ofc_lvl2} =='7')
             ,A3.OFC_N7TH_LVL_CD
    #end
#end
             ,A1.COST_WK
             ,A1.TRD_CD
             ,A1.SUB_TRD_CD
             ,A1.RLANE_CD
             ,A1.VSL_CD
             ,A1.SKD_VOY_NO
             ,A1.DIR_CD
/* -- STP계산 끝   ------ */
#end
      ) b1
    GROUP BY ''
      ,OFC_CD1
      ,OFC_CD2
      ,TRD_CD
#if(${f_rpt_item} !='1')
      ,SUB_TRD_CD
#end
#if(${f_rpt_item} =='3'||${f_rpt_item} =='4')
      ,RLANE_CD
#end
#if(${f_rpt_item} =='4')
      ,VSL_CD
      ,SKD_VOY_NO
#end
#if(${f_dir_sts} =='Y'||${f_rpt_item}=='4')
      ,DIR_CD
#end
  )
ORDER BY ''
  ,OFC_CD1
  ,OFC_CD2
  ,TRD_CD
  ,SUB_TRD_CD
  ,RLANE_CD
  ,VSL_CD
  ,SKD_VOY_NO
  ,DIR_CD			]]></sql>
			<params>
				<param name="f_prev_week" type="12" value="" out="N"/>
				<param name="f_curr_week" type="12" value="" out="N"/>
				<param name="f_pro_vw" type="12" value="" out="N"/>
				<param name="f_ofc_lvl1" type="12" value="" out="N"/>
				<param name="f_ofc_lvl2" type="12" value="" out="N"/>
				<param name="f_ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
