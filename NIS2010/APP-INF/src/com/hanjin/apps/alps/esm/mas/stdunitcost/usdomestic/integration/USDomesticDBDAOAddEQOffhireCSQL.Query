<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="USDomesticDBDAOAddEQOffhireCSQL">
			<desc><![CDATA[4.3 EQ Off-hire 데이터 생성 (EQ Off-hire)]]></desc>
			<sql><![CDATA[
-- EQ OFF HIRE
MERGE INTO MAS_USA_DMST_UT_COST A1 USING
(
 SELECT COST_YRMON
      , ORG_RAIL_LOC_CD
      , COST_LOC_GRP_CD
      , CNTR_TPSZ_CD
      , EQ_OFFH_QTY
   FROM (
                 SELECT REPLACE(@[f_cost_yrmon], '-', '' ) AS COST_YRMON
                      , C.ECC_CD                         AS ORG_RAIL_LOC_CD
                      , 'E'                              AS COST_LOC_GRP_CD
                      , DECODE(A.CNTR_TPSZ_CD, 'D2', 'D2', 'D4', 'D4', 'D5', 'D5', 'D7', 'D7', 'OT') CNTR_TPSZ_CD
                      , COUNT(A.CNTR_NO) AS EQ_OFFH_QTY
                   FROM MST_CONTAINER A
                      , MDM_CNTR_TP_SZ B
                      , MST_CNTR_STS_HIS C
                      , LSE_AGREEMENT D
                  WHERE A.CNTR_TPSZ_CD                          = B.CNTR_TPSZ_CD
                    AND A.HJS_CRE_FLG                           = 'N'
                    AND A.CNTR_NO                               = C.CNTR_NO
                    AND C.AGMT_CTY_CD                           = D.AGMT_CTY_CD
                    AND C.AGMT_SEQ                              = D.AGMT_SEQ
                    AND SUBSTR(NVL(C.CNTR_STS_RMK, ' '), 1, 6) <> 'SELLOE'
                    AND C.AGMT_SEQ                             <> 999990
                    AND C.CNTR_LSTM_CNG_FLG                     = 'N' -- TERM_CHANGE
                    AND C.RCC_CD                                = 'USNYC'
                    AND C.LCC_CD                               IN ('USSFO', 'USPDX', 'USNYC', 'USSEA', 'CAVAN', 'USHOU', 'CATOR', 'USLGB', 'USATL', 'USCHI')
                    AND C.CNTR_STS_CD                          IN ('LSO', 'DIO')
                    AND C.CNTR_STS_EVNT_DT BETWEEN TO_DATE (REPLACE(@[f_cre_start_dt], '-', '' )||'01', 'rrrrmmdd')
                    AND LAST_DAY(TO_DATE(REPLACE(@[f_cre_end_dt], '-', ''), 'YYYYMM')) + 0.99999
               GROUP BY C.ECC_CD
                      , DECODE(A.CNTR_TPSZ_CD, 'D2', 'D2', 'D4', 'D4', 'D5', 'D5', 'D7', 'D7', 'OT')
        )
  WHERE CNTR_TPSZ_CD <> 'OT'

) B1 ON ( A1.COST_YRMON = B1.COST_YRMON AND A1.ORG_RAIL_LOC_CD = B1.ORG_RAIL_LOC_CD AND A1.CNTR_TPSZ_CD = B1.CNTR_TPSZ_CD AND A1.COST_LOC_GRP_CD = B1.COST_LOC_GRP_CD )
WHEN MATCHED THEN
      UPDATE
         SET A1.EQ_OFFH_QTY     = B1.EQ_OFFH_QTY
           , A1.UPD_USR_ID      = @[upd_usr_id]
           , A1.UPD_DT          = SYSDATE

WHEN NOT MATCHED THEN
    INSERT (
          A1.COST_YRMON
        , A1.ORG_RAIL_LOC_CD
        , A1.COST_LOC_GRP_CD
        , A1.CNTR_TPSZ_CD
        , A1.EQ_OFFH_QTY
        , A1.CRE_USR_ID
        , A1.CRE_DT
        , A1.UPD_USR_ID
        , A1.UPD_DT
    )
    VALUES (
          B1.COST_YRMON
        , B1.ORG_RAIL_LOC_CD
        , B1.COST_LOC_GRP_CD
        , B1.CNTR_TPSZ_CD
        , B1.EQ_OFFH_QTY
        , @[cre_usr_id]
        , SYSDATE
        , @[upd_usr_id]
        , SYSDATE
    )			]]></sql>
			<params>
				<param name="f_cost_yrmon" type="12" value="" out="N"/>
				<param name="f_cre_start_dt" type="12" value="" out="N"/>
				<param name="f_cre_end_dt" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
