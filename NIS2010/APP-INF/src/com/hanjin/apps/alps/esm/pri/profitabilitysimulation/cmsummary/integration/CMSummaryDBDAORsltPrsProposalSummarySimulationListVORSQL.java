/*=========================================================
*Copyright(c) 2011 CyberLogitec
*@FileName : CMSummaryDBDAORsltPrsProposalSummarySimulationListVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2011.06.29
*@LastModifier : 
*@LastVersion : 1.0
* 2011.06.29 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmsummary.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CMSummaryDBDAORsltPrsProposalSummarySimulationListVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * * 2011.06.29 김민아 [CHM-201111837] Split 20-R4J Rule Upgrade 관련 소스품질 향상을 위한 조치 건 : DUAL Table을 부적절하게 사용한 DBDAO의 SQL을 .Query로 이동   
	  * </pre>
	  */
	public CMSummaryDBDAORsltPrsProposalSummarySimulationListVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ori_rout_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_pfmc_unit",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_svc_scp_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_ori_loc_tp",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_dest_rout_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("frm_dest_loc_tp",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.pri.profitabilitysimulation.cmsummary.integration").append("\n"); 
		query.append("FileName : CMSummaryDBDAORsltPrsProposalSummarySimulationListVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VW_SIMUL_REV AS (" ).append("\n"); 
		query.append("		 SELECT 'I' AS APPLICATION" ).append("\n"); 
		query.append("			 ,'NULL' AS APR_OFC_CD" ).append("\n"); 
		query.append("			 , 'IAON' AS CUST_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("			 , '' AS SCG_CD" ).append("\n"); 
		query.append("			 , 0 AS SCORE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EFF_DT " ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EXP_DT " ).append("\n"); 
		query.append("			 , 'NULL' AS CALC_TP_CD" ).append("\n"); 
		query.append("			 , 0 AS AMOUNT" ).append("\n"); 
		query.append("		 FROM DUAL" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#foreach( ${obj} in ${list_obj_sheet1} )" ).append("\n"); 
		query.append("        UNION ALL " ).append("\n"); 
		query.append("        SELECT  '$obj.getApplication()' AS APPLICATION " ).append("\n"); 
		query.append("               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD " ).append("\n"); 
		query.append("               ,'$obj.getCustTpCd()' AS CUST_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				" ).append("\n"); 
		query.append("               ,'$obj.getChgCd()' AS SCG_CD " ).append("\n"); 
		query.append("               ,$obj.getScore() AS SCORE " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT " ).append("\n"); 
		query.append("               ,'$obj.getCalcTpCd()' AS CALC_TP_CD " ).append("\n"); 
		query.append("               ,$obj.getAmount() AS AMOUNT " ).append("\n"); 
		query.append("         FROM  DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("), " ).append("\n"); 
		query.append(" VW_SIMUL_RATE AS (" ).append("\n"); 
		query.append("		 SELECT 'I' AS APPLICATION" ).append("\n"); 
		query.append("			 ,'NULL' AS APR_OFC_CD" ).append("\n"); 
		query.append("			 , 'IAON' AS CUST_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("			 , '' AS SCG_CD" ).append("\n"); 
		query.append("			 , 0 AS SCORE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EFF_DT " ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EXP_DT " ).append("\n"); 
		query.append("			 , 'NULL' AS CALC_TP_CD" ).append("\n"); 
		query.append("			 , 0 AS AMOUNT" ).append("\n"); 
		query.append("		 FROM DUAL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( ${obj} in ${list_obj_sheet2} )" ).append("\n"); 
		query.append("        UNION ALL " ).append("\n"); 
		query.append("        SELECT  '$obj.getApplication()' AS APPLICATION " ).append("\n"); 
		query.append("               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD " ).append("\n"); 
		query.append("               ,'$obj.getCustTpCd()' AS CUST_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				" ).append("\n"); 
		query.append("               ,'$obj.getChgCd()' AS SCG_CD " ).append("\n"); 
		query.append("               ,$obj.getScore() AS SCORE " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT " ).append("\n"); 
		query.append("               ,'$obj.getCalcTpCd()' AS CALC_TP_CD " ).append("\n"); 
		query.append("               ,$obj.getAmount() AS AMOUNT " ).append("\n"); 
		query.append("         FROM  DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("), " ).append("\n"); 
		query.append(" VW_SIMUL_SCG AS (" ).append("\n"); 
		query.append("		 SELECT 'I' AS APPLICATION" ).append("\n"); 
		query.append("			 ,'NULL' AS APR_OFC_CD" ).append("\n"); 
		query.append("			 , 'IAON' AS CUST_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("			 , '' AS SCG_CD" ).append("\n"); 
		query.append("			 , 0 AS SCORE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EFF_DT " ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EXP_DT " ).append("\n"); 
		query.append("			 , 'NULL' AS CALC_TP_CD" ).append("\n"); 
		query.append("			 , 0 AS AMOUNT" ).append("\n"); 
		query.append("		 FROM DUAL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( ${obj} in ${list_obj_sheet3} )" ).append("\n"); 
		query.append("        UNION ALL " ).append("\n"); 
		query.append("        SELECT  '$obj.getApplication()' AS APPLICATION " ).append("\n"); 
		query.append("               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD " ).append("\n"); 
		query.append("               ,'$obj.getCustTpCd()' AS CUST_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				" ).append("\n"); 
		query.append("               ,'$obj.getChgCd()' AS SCG_CD " ).append("\n"); 
		query.append("               ,$obj.getScore() AS SCORE " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT " ).append("\n"); 
		query.append("               ,'$obj.getCalcTpCd()' AS CALC_TP_CD " ).append("\n"); 
		query.append("               ,$obj.getAmount() AS AMOUNT " ).append("\n"); 
		query.append("         FROM  DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append(" VW_SIMUL_COST AS (" ).append("\n"); 
		query.append("		 SELECT 'I' AS APPLICATION" ).append("\n"); 
		query.append("			 ,'NULL' AS APR_OFC_CD" ).append("\n"); 
		query.append("			 , 'IAON' AS CUST_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("			 , '' AS SCG_CD" ).append("\n"); 
		query.append("			 , 0 AS SCORE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EFF_DT " ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EXP_DT " ).append("\n"); 
		query.append("			 , 'NULL' AS CALC_TP_CD" ).append("\n"); 
		query.append("			 , 0 AS AMOUNT" ).append("\n"); 
		query.append("		 FROM DUAL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( ${obj} in ${list_obj_sheet4} )" ).append("\n"); 
		query.append("        UNION ALL " ).append("\n"); 
		query.append("        SELECT  '$obj.getApplication()' AS APPLICATION " ).append("\n"); 
		query.append("               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD " ).append("\n"); 
		query.append("               ,'$obj.getCustTpCd()' AS CUST_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				" ).append("\n"); 
		query.append("               ,'$obj.getChgCd()' AS SCG_CD " ).append("\n"); 
		query.append("               ,$obj.getScore() AS SCORE " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT " ).append("\n"); 
		query.append("               ,'$obj.getCalcTpCd()' AS CALC_TP_CD " ).append("\n"); 
		query.append("               ,$obj.getAmount() AS AMOUNT " ).append("\n"); 
		query.append("         FROM  DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") ," ).append("\n"); 
		query.append(" VW_SIMUL_LOAD AS (" ).append("\n"); 
		query.append("		 SELECT 'I' AS APPLICATION" ).append("\n"); 
		query.append("			 ,'NULL' AS APR_OFC_CD" ).append("\n"); 
		query.append("			 , 'IAON' AS CUST_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS ORG_LOC_DEF_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_TP_CD" ).append("\n"); 
		query.append("			 ,'NULL' AS DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("			 , '' AS SCG_CD" ).append("\n"); 
		query.append("			 , 0 AS SCORE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EFF_DT " ).append("\n"); 
		query.append("			 , TO_DATE(NULL) AS EXP_DT " ).append("\n"); 
		query.append("			 , 'NULL' AS CALC_TP_CD" ).append("\n"); 
		query.append("			 , 0 AS AMOUNT" ).append("\n"); 
		query.append("		 FROM DUAL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach( ${obj} in ${list_obj_sheet5} )" ).append("\n"); 
		query.append("        UNION ALL " ).append("\n"); 
		query.append("        SELECT  '$obj.getApplication()' AS APPLICATION " ).append("\n"); 
		query.append("               ,DECODE('$obj.getAprOfcCd()', NULL, 'NULL', '$obj.getAprOfcCd()') AS APR_OFC_CD " ).append("\n"); 
		query.append("               ,'$obj.getCustTpCd()' AS CUST_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriLocTp()',NULL,'NULL','$obj.getOriLocTp()') AS ORG_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getOriRoutCd()',NULL,'NULL','$obj.getOriRoutCd()') AS ORG_LOC_DEF_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestLocTp()',NULL,'NULL','$obj.getDestLocTp()') AS DEST_LOC_TP_CD " ).append("\n"); 
		query.append("               ,DECODE('$obj.getDestRoutCd()',NULL,'NULL','$obj.getDestRoutCd()') AS DEST_LOC_DEF_CD 				" ).append("\n"); 
		query.append("               ,'$obj.getChgCd()' AS SCG_CD " ).append("\n"); 
		query.append("               ,$obj.getScore() AS SCORE " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getEffDt()','YYYY-MM-DD') AS EFF_DT " ).append("\n"); 
		query.append("               ,TO_DATE('$obj.getExpDt()','YYYY-MM-DD') AS EXP_DT " ).append("\n"); 
		query.append("               ,'$obj.getCalcTpCd()' AS CALC_TP_CD " ).append("\n"); 
		query.append("               ,$obj.getAmount() AS AMOUNT " ).append("\n"); 
		query.append("         FROM  DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", VW_DT AS (" ).append("\n"); 
		query.append("  SELECT  /*+ MATERIALIZE */" ).append("\n"); 
		query.append("          DT_REV.CALC_TP_CD   REV_CALC_TP_CD," ).append("\n"); 
		query.append("          DT_REV.AMOUNT       REV_AMOUNT," ).append("\n"); 
		query.append("          DT_REV.EFF_DT       REV_EFF_DT," ).append("\n"); 
		query.append("          DT_REV.EXP_DT       REV_EXP_DT," ).append("\n"); 
		query.append("          DT_REV.SCORE        REV_SCORE," ).append("\n"); 
		query.append("          DT_REV.CUST_TP_CD   REV_CUST_TP_CD," ).append("\n"); 
		query.append("          DT_REV.APR_OFC_CD   REV_APR_OFC_CD," ).append("\n"); 
		query.append("          DT_RATE.SCG_CD      RATE_SCG_CD," ).append("\n"); 
		query.append("          DT_RATE.CALC_TP_CD  RATE_CALC_TP_CD," ).append("\n"); 
		query.append("          DT_RATE.AMOUNT      RATE_AMOUNT," ).append("\n"); 
		query.append("          DT_RATE.EFF_DT      RATE_EFF_DT," ).append("\n"); 
		query.append("          DT_RATE.EXP_DT      RATE_EXP_DT," ).append("\n"); 
		query.append("          DT_RATE.SCORE       RATE_SCORE," ).append("\n"); 
		query.append("          DT_RATE.CUST_TP_CD  RATE_CUST_TP_CD," ).append("\n"); 
		query.append("          DT_RATE.APR_OFC_CD  RATE_APR_OFC_CD," ).append("\n"); 
		query.append("          DT_SCG.CALC_TP_CD   SCG_CALC_TP_CD," ).append("\n"); 
		query.append("          DT_SCG.AMOUNT       SCG_AMOUNT," ).append("\n"); 
		query.append("          DT_SCG.EFF_DT       SCG_EFF_DT," ).append("\n"); 
		query.append("          DT_SCG.EXP_DT       SCG_EXP_DT," ).append("\n"); 
		query.append("          DT_SCG.SCORE        SCG_SCORE," ).append("\n"); 
		query.append("          DT_SCG.CUST_TP_CD   SCG_CUST_TP_CD," ).append("\n"); 
		query.append("          DT_SCG.APR_OFC_CD   SCG_APR_OFC_CD," ).append("\n"); 
		query.append("          DT_COST.CALC_TP_CD  COST_CALC_TP_CD," ).append("\n"); 
		query.append("          DT_COST.AMOUNT      COST_AMOUNT," ).append("\n"); 
		query.append("          DT_COST.EFF_DT      COST_EFF_DT," ).append("\n"); 
		query.append("          DT_COST.EXP_DT      COST_EXP_DT," ).append("\n"); 
		query.append("          DT_COST.SCORE       COST_SCORE," ).append("\n"); 
		query.append("          DT_COST.CUST_TP_CD  COST_CUST_TP_CD," ).append("\n"); 
		query.append("          DT_COST.APR_OFC_CD  COST_APR_OFC_CD," ).append("\n"); 
		query.append("          DT_LOAD.CALC_TP_CD  LOAD_CALC_TP_CD," ).append("\n"); 
		query.append("          DT_LOAD.AMOUNT      LOAD_AMOUNT," ).append("\n"); 
		query.append("          DT_LOAD.EFF_DT      LOAD_EFF_DT," ).append("\n"); 
		query.append("          DT_LOAD.EXP_DT      LOAD_EXP_DT," ).append("\n"); 
		query.append("          DT_LOAD.SCORE       LOAD_SCORE," ).append("\n"); 
		query.append("          DT_LOAD.CUST_TP_CD  LOAD_CUST_TP_CD," ).append("\n"); 
		query.append("          DT_LOAD.APR_OFC_CD  LOAD_APR_OFC_CD," ).append("\n"); 
		query.append("      ---------------------------------------------------------------" ).append("\n"); 
		query.append("      -- 추가된 쿼리" ).append("\n"); 
		query.append("      ---------------------------------------------------------------" ).append("\n"); 
		query.append("	  DT_REV.ORG_LOC_TP_CD AS REV_ORG_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_REV.ORG_LOC_DEF_CD AS REV_ORG_LOC_DEF_CD," ).append("\n"); 
		query.append("	  DT_REV.DEST_LOC_TP_CD AS REV_DEST_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_REV.DEST_LOC_DEF_CD AS REV_DEST_LOC_DEF_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  DT_RATE.ORG_LOC_TP_CD AS RATE_ORG_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_RATE.ORG_LOC_DEF_CD AS RATE_ORG_LOC_DEF_CD," ).append("\n"); 
		query.append("	  DT_RATE.DEST_LOC_TP_CD AS RATE_DEST_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_RATE.DEST_LOC_DEF_CD AS RATE_DEST_LOC_DEF_CD," ).append("\n"); 
		query.append("	  " ).append("\n"); 
		query.append("	  DT_SCG.ORG_LOC_TP_CD AS SCG_ORG_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_SCG.ORG_LOC_DEF_CD AS SCG_ORG_LOC_DEF_CD," ).append("\n"); 
		query.append("	  DT_SCG.DEST_LOC_TP_CD AS SCG_DEST_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_SCG.DEST_LOC_DEF_CD AS SCG_DEST_LOC_DEF_CD," ).append("\n"); 
		query.append("	  " ).append("\n"); 
		query.append("	  DT_COST.ORG_LOC_TP_CD AS COST_ORG_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_COST.ORG_LOC_DEF_CD AS COST_ORG_LOC_DEF_CD," ).append("\n"); 
		query.append("	  DT_COST.DEST_LOC_TP_CD AS COST_DEST_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_COST.DEST_LOC_DEF_CD AS COST_DEST_LOC_DEF_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  DT_LOAD.ORG_LOC_TP_CD AS LOAD_ORG_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_LOAD.ORG_LOC_DEF_CD AS LOAD_ORG_LOC_DEF_CD," ).append("\n"); 
		query.append("	  DT_LOAD.DEST_LOC_TP_CD AS LOAD_DEST_LOC_TP_CD," ).append("\n"); 
		query.append("	  DT_LOAD.DEST_LOC_DEF_CD AS LOAD_DEST_LOC_DEF_CD" ).append("\n"); 
		query.append("---------------------------------------------------------------" ).append("\n"); 
		query.append("  FROM    VW_SIMUL_REV   DT_REV," ).append("\n"); 
		query.append("          VW_SIMUL_RATE  DT_RATE," ).append("\n"); 
		query.append("          VW_SIMUL_SCG   DT_SCG," ).append("\n"); 
		query.append("          VW_SIMUL_COST  DT_COST," ).append("\n"); 
		query.append("          VW_SIMUL_LOAD  DT_LOAD" ).append("\n"); 
		query.append("  WHERE   (DT_REV.SCORE+DT_RATE.SCORE+DT_SCG.SCORE+DT_COST.SCORE+DT_LOAD.SCORE) > 0" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'R') " ).append("\n"); 
		query.append(", VW_MN AS (" ).append("\n"); 
		query.append("        SELECT PROP_OFC_CD" ).append("\n"); 
		query.append("                , PROP_NO" ).append("\n"); 
		query.append("                , AMDT_SEQ" ).append("\n"); 
		query.append("                , PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("                , PRC_CTRT_CUST_TP_CD" ).append("\n"); 
		query.append("                , CTRT_EFF_DT" ).append("\n"); 
		query.append("                , CTRT_EXP_DT" ).append("\n"); 
		query.append("                , SVC_SCP_CD" ).append("\n"); 
		query.append("                , SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("                , SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("                , SIMUL_EFF_DT_REV" ).append("\n"); 
		query.append("                , SIMUL_EXP_DT_REV" ).append("\n"); 
		query.append("                , SIMUL_CALC_TP_CD_RATE" ).append("\n"); 
		query.append("                , SIMUL_AMOUNT_RATE" ).append("\n"); 
		query.append("                , SIMUL_EFF_DT_RATE" ).append("\n"); 
		query.append("                , SIMUL_EXP_DT_RATE" ).append("\n"); 
		query.append("                , SIMUL_CALC_TP_CD_SCG" ).append("\n"); 
		query.append("                , SIMUL_AMOUNT_SCG" ).append("\n"); 
		query.append("                , SIMUL_EFF_DT_SCG" ).append("\n"); 
		query.append("                , SIMUL_EXP_DT_SCG" ).append("\n"); 
		query.append("                , SIMUL_CALC_TP_CD_COST" ).append("\n"); 
		query.append("                , SIMUL_AMOUNT_COST" ).append("\n"); 
		query.append("                , SIMUL_EFF_DT_COST" ).append("\n"); 
		query.append("                , SIMUL_EXP_DT_COST" ).append("\n"); 
		query.append("                , SIMUL_CALC_TP_CD_LOAD" ).append("\n"); 
		query.append("                , SIMUL_AMOUNT_LOAD" ).append("\n"); 
		query.append("                , SIMUL_EFF_DT_LOAD" ).append("\n"); 
		query.append("                , SIMUL_EXP_DT_LOAD" ).append("\n"); 
		query.append("                , SIMUL_SCG_CD" ).append("\n"); 
		query.append("	      ---------------------------------------------------------------" ).append("\n"); 
		query.append("	      -- 추가된 쿼리" ).append("\n"); 
		query.append("	      ---------------------------------------------------------------" ).append("\n"); 
		query.append("		, ORI_CNT_CD" ).append("\n"); 
		query.append("		, ORI_RGN_CD" ).append("\n"); 
		query.append("		, DEST_CNT_CD" ).append("\n"); 
		query.append("		, DEST_RGN_CD" ).append("\n"); 
		query.append("		, GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("                , CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                , ROUT_SEQ" ).append("\n"); 
		query.append("		---------------------------------------------------------------" ).append("\n"); 
		query.append("                , CASE WHEN SIMUL_EXP_DT_REV < CTRT_EFF_DT OR SIMUL_EFF_DT_REV > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_REV <= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - SIMUL_EFF_DT_REV" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       ELSE 0" ).append("\n"); 
		query.append("                       END AS SIMUL_DAYS_REV" ).append("\n"); 
		query.append("                , CASE WHEN SIMUL_EXP_DT_RATE < CTRT_EFF_DT OR SIMUL_EFF_DT_RATE > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_RATE <= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - SIMUL_EFF_DT_RATE" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       ELSE 0" ).append("\n"); 
		query.append("                       END AS SIMUL_DAYS_RATE" ).append("\n"); 
		query.append("                , CASE WHEN SIMUL_EXP_DT_SCG < CTRT_EFF_DT OR SIMUL_EFF_DT_SCG > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_SCG <= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - SIMUL_EFF_DT_SCG" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       ELSE 0" ).append("\n"); 
		query.append("                       END AS SIMUL_DAYS_SCG" ).append("\n"); 
		query.append("                , CASE WHEN SIMUL_EXP_DT_COST < CTRT_EFF_DT OR SIMUL_EFF_DT_COST > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_COST <= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - SIMUL_EFF_DT_COST" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       ELSE 0" ).append("\n"); 
		query.append("                       END AS SIMUL_DAYS_COST" ).append("\n"); 
		query.append("                , CASE WHEN SIMUL_EXP_DT_LOAD < CTRT_EFF_DT OR SIMUL_EFF_DT_LOAD > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_LOAD <= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - SIMUL_EFF_DT_LOAD" ).append("\n"); 
		query.append("                       WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("                       ELSE 0" ).append("\n"); 
		query.append("                       END AS SIMUL_DAYS_LOAD" ).append("\n"); 
		query.append("                , CTRT_EXP_DT - CTRT_EFF_DT AS TOT_CTRT_DAYS" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("                SELECT  /*+ LEADING(MN) */ " ).append("\n"); 
		query.append("                          MN.PROP_OFC_CD" ).append("\n"); 
		query.append("                        , MN.PROP_NO" ).append("\n"); 
		query.append("                        , MN.AMDT_SEQ" ).append("\n"); 
		query.append("                        , MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("                        , RATE_SCG_CD AS SIMUL_SCG_CD" ).append("\n"); 
		query.append("                        , MN.PRC_CTRT_CUST_TP_CD" ).append("\n"); 
		query.append("                        , TO_DATE(CTRT_EFF_DT) AS CTRT_EFF_DT" ).append("\n"); 
		query.append("                        , TO_DATE(CTRT_EXP_DT) AS CTRT_EXP_DT" ).append("\n"); 
		query.append("                        , MN.SVC_SCP_CD" ).append("\n"); 
		query.append("                        , REV_CALC_TP_CD AS SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("                        , REV_AMOUNT AS SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("                        , REV_EFF_DT AS SIMUL_EFF_DT_REV" ).append("\n"); 
		query.append("                        , REV_EXP_DT AS SIMUL_EXP_DT_REV" ).append("\n"); 
		query.append("                        , RATE_CALC_TP_CD AS SIMUL_CALC_TP_CD_RATE" ).append("\n"); 
		query.append("                        , RATE_AMOUNT AS SIMUL_AMOUNT_RATE" ).append("\n"); 
		query.append("                        , RATE_EFF_DT AS SIMUL_EFF_DT_RATE" ).append("\n"); 
		query.append("                        , RATE_EXP_DT AS SIMUL_EXP_DT_RATE" ).append("\n"); 
		query.append("                        , SCG_CALC_TP_CD AS SIMUL_CALC_TP_CD_SCG" ).append("\n"); 
		query.append("                        , SCG_AMOUNT AS SIMUL_AMOUNT_SCG" ).append("\n"); 
		query.append("                        , SCG_EFF_DT AS SIMUL_EFF_DT_SCG" ).append("\n"); 
		query.append("                        , SCG_EXP_DT AS SIMUL_EXP_DT_SCG" ).append("\n"); 
		query.append("                        , COST_CALC_TP_CD AS SIMUL_CALC_TP_CD_COST" ).append("\n"); 
		query.append("                        , COST_AMOUNT AS SIMUL_AMOUNT_COST" ).append("\n"); 
		query.append("                        , COST_EFF_DT AS SIMUL_EFF_DT_COST" ).append("\n"); 
		query.append("                        , COST_EXP_DT AS SIMUL_EXP_DT_COST" ).append("\n"); 
		query.append("                        , LOAD_CALC_TP_CD AS SIMUL_CALC_TP_CD_LOAD" ).append("\n"); 
		query.append("                        , LOAD_AMOUNT AS SIMUL_AMOUNT_LOAD" ).append("\n"); 
		query.append("                        , LOAD_EFF_DT AS SIMUL_EFF_DT_LOAD" ).append("\n"); 
		query.append("                        , LOAD_EXP_DT AS SIMUL_EXP_DT_LOAD" ).append("\n"); 
		query.append("			      ---------------------------------------------------------------" ).append("\n"); 
		query.append("			      -- 추가된 쿼리" ).append("\n"); 
		query.append("			      ---------------------------------------------------------------" ).append("\n"); 
		query.append("		        , ORI_CNT_CD" ).append("\n"); 
		query.append("		        , ORI_RGN_CD" ).append("\n"); 
		query.append("		        , DEST_CNT_CD" ).append("\n"); 
		query.append("		        , DEST_RGN_CD" ).append("\n"); 
		query.append("		        , GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("                        , CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                        , ROUT_SEQ" ).append("\n"); 
		query.append("                        , ROW_NUMBER() OVER( PARTITION BY MN.PROP_NO,MN.AMDT_SEQ, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ ORDER BY (REV_SCORE+RATE_SCORE+SCG_SCORE+COST_SCORE+LOAD_SCORE) DESC ) RN" ).append("\n"); 
		query.append("			--------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                FROM" ).append("\n"); 
		query.append("                      VW_DT  DT," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("			      SELECT  /*  LEADING(X MN) USE_NL(X MN PTY DUR SCP_MN CTP) */" ).append("\n"); 
		query.append("				      MN.PROP_OFC_CD," ).append("\n"); 
		query.append("				      MN.PROP_NO," ).append("\n"); 
		query.append("				      MN.AMDT_SEQ," ).append("\n"); 
		query.append("				      MN.PROP_APRO_OFC_CD," ).append("\n"); 
		query.append("				      CTP.PRC_CTRT_CUST_TP_CD," ).append("\n"); 
		query.append("				      SCP_MN.SVC_SCP_CD," ).append("\n"); 
		query.append("				      CTRT_EXP_DT," ).append("\n"); 
		query.append("				      CTRT_EFF_DT," ).append("\n"); 
		query.append("				      ROWNUM" ).append("\n"); 
		query.append("				      , ORI.CNT_CD AS  ORI_CNT_CD" ).append("\n"); 
		query.append("				      , ORI.RGN_CD AS  ORI_RGN_CD" ).append("\n"); 
		query.append("				      , DEST.CNT_CD AS DEST_CNT_CD" ).append("\n"); 
		query.append("				      , DEST.RGN_CD AS DEST_RGN_CD" ).append("\n"); 
		query.append("				      , ORI.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				      , ORI.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				      , ORI.ROUT_SEQ" ).append("\n"); 
		query.append("			      FROM   (SELECT  PROP_NO" ).append("\n"); 
		query.append("				      FROM    PRI_PRS_CM_SMRY_SIM_TMP" ).append("\n"); 
		query.append("				      WHERE   PRC_CTRT_TP_CD = 'S'" ).append("\n"); 
		query.append("				      GROUP BY PROP_NO" ).append("\n"); 
		query.append("				     ) X," ).append("\n"); 
		query.append("				      PRI_SP_MN            MN," ).append("\n"); 
		query.append("				      PRI_SP_CTRT_PTY      PTY," ).append("\n"); 
		query.append("				      PRI_SP_SCP_DUR       DUR," ).append("\n"); 
		query.append("				      PRI_SP_SCP_MN        SCP_MN," ).append("\n"); 
		query.append("				      PRI_SP_CTRT_CUST_TP  CTP," ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("				      -- 추가된 쿼리" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append(" 				      (" ).append("\n"); 
		query.append("					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD" ).append("\n"); 
		query.append("					       FROM (" ).append("\n"); 
		query.append("							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								  ) AS CNT_CD" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("										    SELECT RGN_CD " ).append("\n"); 
		query.append("										    FROM MDM_LOCATION " ).append("\n"); 
		query.append("										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("								 ) AS RGN_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("							FROM	(" ).append("\n"); 
		query.append("									SELECT  PROP_NO , 0 AS AMDT_SEQ , @[frm_svc_scp_cd] AS SVC_SCP_CD" ).append("\n"); 
		query.append("									FROM    PRI_PRS_CM_SMRY_SIM_TMP" ).append("\n"); 
		query.append("									WHERE   PRC_CTRT_TP_CD = 'S'" ).append("\n"); 
		query.append("									GROUP BY PROP_NO" ).append("\n"); 
		query.append("								)  MN_SET" ).append("\n"); 
		query.append("								, PRI_SP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("								, PRI_SP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("								, PRI_SP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("							WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("								AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("								AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("								AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("								AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("					) ORI," ).append("\n"); 
		query.append(" 				        (" ).append("\n"); 
		query.append("					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD" ).append("\n"); 
		query.append("					       FROM (" ).append("\n"); 
		query.append("							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								  ) AS CNT_CD" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("										    SELECT RGN_CD " ).append("\n"); 
		query.append("										    FROM MDM_LOCATION " ).append("\n"); 
		query.append("										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("								 ) AS RGN_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("							FROM	(" ).append("\n"); 
		query.append("									SELECT  PROP_NO , 0 AS AMDT_SEQ , @[frm_svc_scp_cd] AS SVC_SCP_CD" ).append("\n"); 
		query.append("									FROM    PRI_PRS_CM_SMRY_SIM_TMP" ).append("\n"); 
		query.append("									WHERE   PRC_CTRT_TP_CD = 'S'" ).append("\n"); 
		query.append("									GROUP BY PROP_NO" ).append("\n"); 
		query.append("								)  MN_SET" ).append("\n"); 
		query.append("								, PRI_SP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("								, PRI_SP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("								, PRI_SP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("							WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("								AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("								AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("								AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("								AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("					) DEST" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("			      WHERE   X.PROP_NO = MN.PROP_NO" ).append("\n"); 
		query.append("			      AND     MN.AMDT_SEQ = 0" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("				      -- 추가된 쿼리" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("			      AND     SCP_MN.PROP_NO = ORI.PROP_NO" ).append("\n"); 
		query.append("			      AND     SCP_MN.AMDT_SEQ = ORI.AMDT_SEQ" ).append("\n"); 
		query.append("			      AND     SCP_MN.SVC_SCP_CD = ORI.SVC_SCP_CD" ).append("\n"); 
		query.append("			      " ).append("\n"); 
		query.append("			      AND     SCP_MN.PROP_NO = DEST.PROP_NO" ).append("\n"); 
		query.append("			      AND     SCP_MN.AMDT_SEQ = DEST.AMDT_SEQ" ).append("\n"); 
		query.append("			      AND     SCP_MN.SVC_SCP_CD = DEST.SVC_SCP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					AND    ORI.PROP_NO = DEST.PROP_NO" ).append("\n"); 
		query.append("					AND    ORI.AMDT_SEQ = DEST.AMDT_SEQ" ).append("\n"); 
		query.append("					AND    ORI.SVC_SCP_CD = DEST.SVC_SCP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				  AND    ORI.GEN_SPCL_RT_TP_CD = DEST.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				  AND    ORI.CMDT_HDR_SEQ = DEST.CMDT_HDR_SEQ " ).append("\n"); 
		query.append("				  AND    ORI.ROUT_SEQ = DEST.ROUT_SEQ" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			      AND     MN.PROP_NO = PTY.PROP_NO" ).append("\n"); 
		query.append("			      AND     MN.AMDT_SEQ = PTY.AMDT_SEQ" ).append("\n"); 
		query.append("			      AND     PTY.PRC_CTRT_PTY_TP_CD = 'C'" ).append("\n"); 
		query.append("			      AND     MN.PROP_NO = DUR.PROP_NO" ).append("\n"); 
		query.append("			      AND     MN.AMDT_SEQ = DUR.AMDT_SEQ" ).append("\n"); 
		query.append("			      AND     MN.PROP_NO = SCP_MN.PROP_NO" ).append("\n"); 
		query.append("			      AND     MN.AMDT_SEQ = SCP_MN.AMDT_SEQ" ).append("\n"); 
		query.append("			      AND     MN.PROP_NO = CTP.PROP_NO" ).append("\n"); 
		query.append("			      AND     MN.AMDT_SEQ = CTP.AMDT_SEQ" ).append("\n"); 
		query.append("			      AND     SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD" ).append("\n"); 
		query.append("			      AND     CTP.PRC_CTRT_PTY_TP_CD = 'C'" ).append("\n"); 
		query.append("			      AND     SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]" ).append("\n"); 
		query.append("                     )  MN" ).append("\n"); 
		query.append("                WHERE   INSTR(REV_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(REV_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, REV_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(RATE_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(RATE_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, RATE_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(SCG_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(SCG_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, SCG_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(COST_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(COST_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, COST_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(LOAD_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(LOAD_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, LOAD_APR_OFC_CD)" ).append("\n"); 
		query.append("			---------------------------------------------------------------" ).append("\n"); 
		query.append("			-- 추가된 쿼리" ).append("\n"); 
		query.append("			---------------------------------------------------------------" ).append("\n"); 
		query.append("			AND   DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,  REV_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,  REV_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,  RATE_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,  RATE_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,  SCG_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,  SCG_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,  COST_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,  COST_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,  LOAD_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,  LOAD_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 ---------------------------------------------------------------" ).append("\n"); 
		query.append("			  " ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        ) MN" ).append("\n"); 
		query.append("        WHERE MN.RN = 1" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("VW_RESULT_MN AS (" ).append("\n"); 
		query.append("	SELECT  /*+ INDEX(CMDT_ROUT PRI_SP_SCP_RT_CMDT_ROUT(PROP_NO, AMDT_SEQ, SVC_SCP_CD, PRS_CGO_TP_CD, PRS_RAT_UT_CD) ) */  --> 힌트추가" ).append("\n"); 
		query.append("		 CMDT_ROUT.PROP_NO" ).append("\n"); 
		query.append("		, CMDT_ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("		, CMDT_ROUT.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("		, CMDT_ROUT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.ROUT_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.RT_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.FEU_TEU" ).append("\n"); 
		query.append("		, MN.CTRT_EFF_DT" ).append("\n"); 
		query.append("		, MN.CTRT_EXP_DT " ).append("\n"); 
		query.append("		, MN.SIMUL_SCG_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_ESTM_LOD_QTY,0)  AS PRS_ESTM_LOD_QTY" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PROP_FRT_RT_AMT,0)   AS RATE -- RATE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_SCG_AMT , 0) AS SURCHARGE  -- SURCHARGE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_PFIT_CM_UC_AMT,0) AS COST_TRADE-- COST, TRADE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_RESPB_CM_UC_AMT,0) AS COST_OFFICE-- COST, OFFICE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_RESPB_OPFIT_UC_AMT,0) AS COST_OP_OFFICE-- COST, OP, OFFICE" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("		, CMDT_ROUT.PRS_RAT_UT_CD" ).append("\n"); 
		query.append("		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) AS UT_CD_2_1" ).append("\n"); 
		query.append("		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) AS UT_CD_1_1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_REV / MN.TOT_CTRT_DAYS) AS CALC_RATE_REV" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_REV,'+', MN.SIMUL_AMOUNT_REV   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_REV )  AS SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0,MN.SIMUL_DAYS_RATE / MN.TOT_CTRT_DAYS) AS CALC_RATE_RATE" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_RATE" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_RATE,'+', MN.SIMUL_AMOUNT_RATE   *  CMDT_ROUT.FEU_TEU,MN.SIMUL_AMOUNT_RATE ) AS SIMUL_AMOUNT_RATE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0,MN.SIMUL_DAYS_SCG / MN.TOT_CTRT_DAYS) AS CALC_RATE_SCG" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_SCG" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_SCG,'+', MN.SIMUL_AMOUNT_SCG   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_SCG)  AS SIMUL_AMOUNT_SCG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_COST / MN.TOT_CTRT_DAYS) AS CALC_RATE_COST" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_COST" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_COST,'+', MN.SIMUL_AMOUNT_COST   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_COST ) AS SIMUL_AMOUNT_COST" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_LOAD / MN.TOT_CTRT_DAYS) AS CALC_RATE_LOAD" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_LOAD" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_LOAD,'+', MN.SIMUL_AMOUNT_LOAD   *  CMDT_ROUT.FEU_TEU , MN.SIMUL_AMOUNT_LOAD) AS SIMUL_AMOUNT_LOAD" ).append("\n"); 
		query.append("		----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		, NVL( CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' " ).append("\n"); 
		query.append("					THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  " ).append("\n"); 
		query.append("				ELSE	" ).append("\n"); 
		query.append("						 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2" ).append("\n"); 
		query.append("		  END ,0) AS PRS_ESTM_LOD_QTY_FOR_RATE    --  " ).append("\n"); 
		query.append("		----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("	FROM 	VW_MN  MN" ).append("\n"); 
		query.append("		,(		" ).append("\n"); 
		query.append("			SELECT MN.PROP_NO" ).append("\n"); 
		query.append("				, MN.AMDT_SEQ" ).append("\n"); 
		query.append("				, MN.SVC_SCP_CD" ).append("\n"); 
		query.append("				, CMDT_ROUT.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				, CMDT_ROUT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				, CMDT_ROUT.ROUT_SEQ" ).append("\n"); 
		query.append("				, RT.RT_SEQ" ).append("\n"); 
		query.append("				, CMDT_ROUT.PRS_ESTM_LOD_QTY" ).append("\n"); 
		query.append("				, RT.PROP_FRT_RT_AMT" ).append("\n"); 
		query.append("				, RT.PRS_SCG_AMT" ).append("\n"); 
		query.append("				, RT.PRS_PFIT_CM_UC_AMT" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_CM_UC_AMT" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_OPFIT_UC_AMT" ).append("\n"); 
		query.append("				, CMDT_ROUT.PRS_RAT_UT_CD" ).append("\n"); 
		query.append("				,DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS FEU_TEU" ).append("\n"); 
		query.append("			FROM 	(SELECT DISTINCT PROP_NO, AMDT_SEQ,SVC_SCP_CD FROM VW_MN ) MN" ).append("\n"); 
		query.append("				, PRI_SP_SCP_RT_CMDT_ROUT CMDT_ROUT" ).append("\n"); 
		query.append("				, PRI_SP_SCP_RT RT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE(@[frm_ori_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_MN MN_SET" ).append("\n"); 
		query.append("							, PRI_SP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("				) ORI_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE(@[frm_dest_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_MN MN_SET" ).append("\n"); 
		query.append("							, PRI_SP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_SP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("				) DEST_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.GEN_SPCL_RT_TP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ" ).append("\n"); 
		query.append("					FROM VW_MN MN_SET" ).append("\n"); 
		query.append("						, PRI_SP_SCP_RT RT" ).append("\n"); 
		query.append("					WHERE MN_SET.PROP_NO = RT.PROP_NO" ).append("\n"); 
		query.append("						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ" ).append("\n"); 
		query.append("						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD" ).append("\n"); 
		query.append("	#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("		AND (RT.VSL_SLAN_CD) IN (" ).append("\n"); 
		query.append("		#foreach( ${key} in ${slane_list}) " ).append("\n"); 
		query.append("			#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("				," ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("				'$key'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("				) SLANE" ).append("\n"); 
		query.append("#end	" ).append("\n"); 
		query.append("			WHERE MN.PROP_NO = CMDT_ROUT.PROP_NO" ).append("\n"); 
		query.append("				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = ORI_LOC.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = DEST_LOC.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = SLANE.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = RT.GEN_SPCL_RT_TP_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)" ).append("\n"); 
		query.append("				-- BY CARGO TYPE" ).append("\n"); 
		query.append("				#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	) CMDT_ROUT" ).append("\n"); 
		query.append("	WHERE  CMDT_ROUT.PROP_NO			= MN.PROP_NO(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.AMDT_SEQ			= MN.AMDT_SEQ(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.SVC_SCP_CD		= MN.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.GEN_SPCL_RT_TP_CD		= MN.GEN_SPCL_RT_TP_CD(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.CMDT_HDR_SEQ		= MN.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.ROUT_SEQ			= MN.ROUT_SEQ(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'S') " ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("VW_RFA_MN AS (" ).append("\n"); 
		query.append("	SELECT PROP_OFC_CD" ).append("\n"); 
		query.append("		, PROP_NO" ).append("\n"); 
		query.append("		, AMDT_SEQ" ).append("\n"); 
		query.append("		, PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("		, PRC_CTRT_CUST_TP_CD" ).append("\n"); 
		query.append("		, CTRT_EFF_DT" ).append("\n"); 
		query.append("		, CTRT_EXP_DT" ).append("\n"); 
		query.append("		, SVC_SCP_CD" ).append("\n"); 
		query.append("		, SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("		, SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("		, SIMUL_EFF_DT_REV" ).append("\n"); 
		query.append("		, SIMUL_EXP_DT_REV" ).append("\n"); 
		query.append("		, SIMUL_CALC_TP_CD_RATE" ).append("\n"); 
		query.append("		, SIMUL_AMOUNT_RATE" ).append("\n"); 
		query.append("		, SIMUL_EFF_DT_RATE" ).append("\n"); 
		query.append("		, SIMUL_EXP_DT_RATE" ).append("\n"); 
		query.append("		, SIMUL_CALC_TP_CD_SCG" ).append("\n"); 
		query.append("		, SIMUL_AMOUNT_SCG" ).append("\n"); 
		query.append("		, SIMUL_EFF_DT_SCG" ).append("\n"); 
		query.append("		, SIMUL_EXP_DT_SCG" ).append("\n"); 
		query.append("		, SIMUL_CALC_TP_CD_COST" ).append("\n"); 
		query.append("		, SIMUL_AMOUNT_COST" ).append("\n"); 
		query.append("		, SIMUL_EFF_DT_COST" ).append("\n"); 
		query.append("		, SIMUL_EXP_DT_COST" ).append("\n"); 
		query.append("		, SIMUL_CALC_TP_CD_LOAD" ).append("\n"); 
		query.append("		, SIMUL_AMOUNT_LOAD" ).append("\n"); 
		query.append("		, SIMUL_EFF_DT_LOAD" ).append("\n"); 
		query.append("		, SIMUL_EXP_DT_LOAD" ).append("\n"); 
		query.append("		, SIMUL_SCG_CD" ).append("\n"); 
		query.append("	      ---------------------------------------------------------------" ).append("\n"); 
		query.append("	      -- 추가된 쿼리" ).append("\n"); 
		query.append("	      ---------------------------------------------------------------" ).append("\n"); 
		query.append("		, ORI_CNT_CD" ).append("\n"); 
		query.append("		, ORI_RGN_CD" ).append("\n"); 
		query.append("		, DEST_CNT_CD" ).append("\n"); 
		query.append("		, DEST_RGN_CD" ).append("\n"); 
		query.append("                , CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                , ROUT_SEQ" ).append("\n"); 
		query.append("		---------------------------------------------------------------" ).append("\n"); 
		query.append("		, CASE WHEN SIMUL_EXP_DT_REV < CTRT_EFF_DT OR SIMUL_EFF_DT_REV > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_REV <= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - CTRT_EFF_DT" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_REV - SIMUL_EFF_DT_REV" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_REV >= CTRT_EFF_DT AND SIMUL_EXP_DT_REV >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("			ELSE 0" ).append("\n"); 
		query.append("			END AS SIMUL_DAYS_REV" ).append("\n"); 
		query.append("		, CASE WHEN SIMUL_EXP_DT_RATE < CTRT_EFF_DT OR SIMUL_EFF_DT_RATE > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_RATE <= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - CTRT_EFF_DT" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_RATE - SIMUL_EFF_DT_RATE" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_RATE >= CTRT_EFF_DT AND SIMUL_EXP_DT_RATE >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("			ELSE 0" ).append("\n"); 
		query.append("			END AS SIMUL_DAYS_RATE" ).append("\n"); 
		query.append("		, CASE WHEN SIMUL_EXP_DT_SCG < CTRT_EFF_DT OR SIMUL_EFF_DT_SCG > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_SCG <= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - CTRT_EFF_DT" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_SCG - SIMUL_EFF_DT_SCG" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_SCG >= CTRT_EFF_DT AND SIMUL_EXP_DT_SCG >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("			ELSE 0" ).append("\n"); 
		query.append("			END AS SIMUL_DAYS_SCG" ).append("\n"); 
		query.append("		, CASE WHEN SIMUL_EXP_DT_COST < CTRT_EFF_DT OR SIMUL_EFF_DT_COST > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_COST <= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - CTRT_EFF_DT" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_COST - SIMUL_EFF_DT_COST" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_COST >= CTRT_EFF_DT AND SIMUL_EXP_DT_COST >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("			ELSE 0" ).append("\n"); 
		query.append("			END AS SIMUL_DAYS_COST" ).append("\n"); 
		query.append("		, CASE WHEN SIMUL_EXP_DT_LOAD < CTRT_EFF_DT OR SIMUL_EFF_DT_LOAD > CTRT_EXP_DT THEN 0" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_LOAD <= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - CTRT_EFF_DT" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD <= CTRT_EXP_DT THEN     SIMUL_EXP_DT_LOAD - SIMUL_EFF_DT_LOAD" ).append("\n"); 
		query.append("			WHEN SIMUL_EFF_DT_LOAD >= CTRT_EFF_DT AND SIMUL_EXP_DT_LOAD >= CTRT_EXP_DT THEN     CTRT_EXP_DT - CTRT_EFF_DT" ).append("\n"); 
		query.append("			ELSE 0" ).append("\n"); 
		query.append("			END AS SIMUL_DAYS_LOAD" ).append("\n"); 
		query.append("		, CTRT_EXP_DT - CTRT_EFF_DT AS TOT_CTRT_DAYS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("		SELECT	" ).append("\n"); 
		query.append("                          MN.PROP_OFC_CD" ).append("\n"); 
		query.append("                        , MN.PROP_NO" ).append("\n"); 
		query.append("                        , MN.AMDT_SEQ" ).append("\n"); 
		query.append("                        , MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("                        , RATE_SCG_CD AS SIMUL_SCG_CD" ).append("\n"); 
		query.append("                        , MN.PRC_CTRT_CUST_TP_CD" ).append("\n"); 
		query.append("                        , TO_DATE(CTRT_EFF_DT) AS CTRT_EFF_DT" ).append("\n"); 
		query.append("                        , TO_DATE(CTRT_EXP_DT) AS CTRT_EXP_DT" ).append("\n"); 
		query.append("                        , MN.SVC_SCP_CD" ).append("\n"); 
		query.append("                        , REV_CALC_TP_CD AS SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("                        , REV_AMOUNT AS SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("                        , REV_EFF_DT AS SIMUL_EFF_DT_REV" ).append("\n"); 
		query.append("                        , REV_EXP_DT AS SIMUL_EXP_DT_REV" ).append("\n"); 
		query.append("                        , RATE_CALC_TP_CD AS SIMUL_CALC_TP_CD_RATE" ).append("\n"); 
		query.append("                        , RATE_AMOUNT AS SIMUL_AMOUNT_RATE" ).append("\n"); 
		query.append("                        , RATE_EFF_DT AS SIMUL_EFF_DT_RATE" ).append("\n"); 
		query.append("                        , RATE_EXP_DT AS SIMUL_EXP_DT_RATE" ).append("\n"); 
		query.append("                        , SCG_CALC_TP_CD AS SIMUL_CALC_TP_CD_SCG" ).append("\n"); 
		query.append("                        , SCG_AMOUNT AS SIMUL_AMOUNT_SCG" ).append("\n"); 
		query.append("                        , SCG_EFF_DT AS SIMUL_EFF_DT_SCG" ).append("\n"); 
		query.append("                        , SCG_EXP_DT AS SIMUL_EXP_DT_SCG" ).append("\n"); 
		query.append("                        , COST_CALC_TP_CD AS SIMUL_CALC_TP_CD_COST" ).append("\n"); 
		query.append("                        , COST_AMOUNT AS SIMUL_AMOUNT_COST" ).append("\n"); 
		query.append("                        , COST_EFF_DT AS SIMUL_EFF_DT_COST" ).append("\n"); 
		query.append("                        , COST_EXP_DT AS SIMUL_EXP_DT_COST" ).append("\n"); 
		query.append("                        , LOAD_CALC_TP_CD AS SIMUL_CALC_TP_CD_LOAD" ).append("\n"); 
		query.append("                        , LOAD_AMOUNT AS SIMUL_AMOUNT_LOAD" ).append("\n"); 
		query.append("                        , LOAD_EFF_DT AS SIMUL_EFF_DT_LOAD" ).append("\n"); 
		query.append("                        , LOAD_EXP_DT AS SIMUL_EXP_DT_LOAD		" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("		 " ).append("\n"); 
		query.append("			      ---------------------------------------------------------------" ).append("\n"); 
		query.append("			      -- 추가된 쿼리" ).append("\n"); 
		query.append("			      ---------------------------------------------------------------" ).append("\n"); 
		query.append("		        , ORI_CNT_CD" ).append("\n"); 
		query.append("		        , ORI_RGN_CD" ).append("\n"); 
		query.append("		        , DEST_CNT_CD" ).append("\n"); 
		query.append("		        , DEST_RGN_CD" ).append("\n"); 
		query.append("                        , CMDT_HDR_SEQ" ).append("\n"); 
		query.append("                        , ROUT_SEQ" ).append("\n"); 
		query.append("                        , ROW_NUMBER() OVER( PARTITION BY MN.PROP_NO,MN.AMDT_SEQ, CMDT_HDR_SEQ, ROUT_SEQ ORDER BY (REV_SCORE+RATE_SCORE+SCG_SCORE+COST_SCORE+LOAD_SCORE) DESC ) RN" ).append("\n"); 
		query.append("			--------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		FROM	" ).append("\n"); 
		query.append("		      VW_DT  DT," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("			      SELECT  /*  LEADING(X MN) USE_NL(X MN PTY DUR SCP_MN CTP) */" ).append("\n"); 
		query.append("				      MN.PROP_OFC_CD" ).append("\n"); 
		query.append("				      , MN.PROP_NO" ).append("\n"); 
		query.append("				      , MN.AMDT_SEQ" ).append("\n"); 
		query.append("				      , MN.PROP_APRO_OFC_CD" ).append("\n"); 
		query.append("				      , MN.PRC_CTRT_CUST_TP_CD" ).append("\n"); 
		query.append("				      , SCP_MN.SVC_SCP_CD" ).append("\n"); 
		query.append("				      , CTRT_EXP_DT" ).append("\n"); 
		query.append("				      , CTRT_EFF_DT" ).append("\n"); 
		query.append("				      , ROWNUM" ).append("\n"); 
		query.append("				      , ORI.CNT_CD AS  ORI_CNT_CD" ).append("\n"); 
		query.append("				      , ORI.RGN_CD AS  ORI_RGN_CD" ).append("\n"); 
		query.append("				      , DEST.CNT_CD AS DEST_CNT_CD" ).append("\n"); 
		query.append("				      , DEST.RGN_CD AS DEST_RGN_CD" ).append("\n"); 
		query.append("				      , ORI.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				      , ORI.ROUT_SEQ" ).append("\n"); 
		query.append("				FROM 	PRI_RP_MN MN" ).append("\n"); 
		query.append("					, PRI_RP_SCP_DUR DUR" ).append("\n"); 
		query.append("					, PRI_RP_SCP_MN SCP_MN" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("				      -- 추가된 쿼리" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append(" 				      , (" ).append("\n"); 
		query.append("					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD" ).append("\n"); 
		query.append("					       FROM (" ).append("\n"); 
		query.append("							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								  ) AS CNT_CD" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("										    SELECT RGN_CD " ).append("\n"); 
		query.append("										    FROM MDM_LOCATION " ).append("\n"); 
		query.append("										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("								 ) AS RGN_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("							FROM	(" ).append("\n"); 
		query.append("									SELECT  PROP_NO , 0 AS AMDT_SEQ , 'TPE' AS SVC_SCP_CD" ).append("\n"); 
		query.append("									FROM    PRI_PRS_CM_SMRY_SIM_TMP" ).append("\n"); 
		query.append("									WHERE   PRC_CTRT_TP_CD = 'R'" ).append("\n"); 
		query.append("									GROUP BY PROP_NO" ).append("\n"); 
		query.append("								)  MN_SET" ).append("\n"); 
		query.append("								, PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("								, PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("								, PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("							WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("								AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("								AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("								AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("								AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("					) ORI," ).append("\n"); 
		query.append(" 				        (" ).append("\n"); 
		query.append("					       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ, CNT_CD, RGN_CD" ).append("\n"); 
		query.append("					       FROM (" ).append("\n"); 
		query.append("							SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								  ) AS CNT_CD" ).append("\n"); 
		query.append("								, (" ).append("\n"); 
		query.append("										    SELECT RGN_CD " ).append("\n"); 
		query.append("										    FROM MDM_LOCATION " ).append("\n"); 
		query.append("										    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("								 ) AS RGN_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("							FROM	(" ).append("\n"); 
		query.append("									SELECT  PROP_NO , 0 AS AMDT_SEQ , 'TPE' AS SVC_SCP_CD" ).append("\n"); 
		query.append("									FROM    PRI_PRS_CM_SMRY_SIM_TMP" ).append("\n"); 
		query.append("									WHERE   PRC_CTRT_TP_CD = 'R'" ).append("\n"); 
		query.append("									GROUP BY PROP_NO" ).append("\n"); 
		query.append("								)  MN_SET" ).append("\n"); 
		query.append("								, PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("								, PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("								, PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("							WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("								AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("								AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("								AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("								AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("								AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("								AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("								AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("								AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("								AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("								AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("								AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("						)" ).append("\n"); 
		query.append("					) DEST" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("				WHERE	   MN.AMDT_SEQ = 0" ).append("\n"); 
		query.append("					AND MN.PROP_NO = DUR.PROP_NO" ).append("\n"); 
		query.append("					AND MN.AMDT_SEQ = DUR.AMDT_SEQ" ).append("\n"); 
		query.append("					AND MN.PROP_NO = SCP_MN.PROP_NO" ).append("\n"); 
		query.append("					AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ" ).append("\n"); 
		query.append("					AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD" ).append("\n"); 
		query.append("					AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]" ).append("\n"); 
		query.append("					AND MN.PROP_NO IN (   SELECT PROP_NO FROM PRI_PRS_CM_SMRY_SIM_TMP WHERE PRC_CTRT_TP_CD = 'R'	)" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("				      -- 추가된 쿼리" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("					AND     SCP_MN.PROP_NO = ORI.PROP_NO" ).append("\n"); 
		query.append("					AND     SCP_MN.AMDT_SEQ = ORI.AMDT_SEQ" ).append("\n"); 
		query.append("					AND     SCP_MN.SVC_SCP_CD = ORI.SVC_SCP_CD" ).append("\n"); 
		query.append("					    " ).append("\n"); 
		query.append("					AND     SCP_MN.PROP_NO = DEST.PROP_NO" ).append("\n"); 
		query.append("					AND     SCP_MN.AMDT_SEQ = DEST.AMDT_SEQ" ).append("\n"); 
		query.append("					AND     SCP_MN.SVC_SCP_CD = DEST.SVC_SCP_CD				   " ).append("\n"); 
		query.append("					AND    ORI.PROP_NO = DEST.PROP_NO" ).append("\n"); 
		query.append("					AND    ORI.AMDT_SEQ = DEST.AMDT_SEQ" ).append("\n"); 
		query.append("					AND    ORI.SVC_SCP_CD = DEST.SVC_SCP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					AND    ORI.CMDT_HDR_SEQ = DEST.CMDT_HDR_SEQ " ).append("\n"); 
		query.append("					AND    ORI.ROUT_SEQ = DEST.ROUT_SEQ" ).append("\n"); 
		query.append("				      ---------------------------------------------------------------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                     )  MN" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                WHERE   INSTR(REV_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(REV_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, REV_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(RATE_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(RATE_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, RATE_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(SCG_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(SCG_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, SCG_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(COST_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(COST_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, COST_APR_OFC_CD)" ).append("\n"); 
		query.append("                        AND INSTR(LOAD_CUST_TP_CD, MN.PRC_CTRT_CUST_TP_CD) > 0" ).append("\n"); 
		query.append("                        AND MN.PROP_APRO_OFC_CD = DECODE(LOAD_APR_OFC_CD,'NULL', MN.PROP_APRO_OFC_CD, LOAD_APR_OFC_CD)" ).append("\n"); 
		query.append("			---------------------------------------------------------------" ).append("\n"); 
		query.append("			-- 추가된 쿼리" ).append("\n"); 
		query.append("			---------------------------------------------------------------" ).append("\n"); 
		query.append("			AND   DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( REV_ORG_LOC_TP_CD,'NULL', REV_ORG_LOC_TP_CD ,  REV_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( REV_DEST_LOC_TP_CD,'NULL', REV_DEST_LOC_TP_CD ,  REV_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( RATE_ORG_LOC_TP_CD,'NULL', RATE_ORG_LOC_TP_CD ,  RATE_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( RATE_DEST_LOC_TP_CD,'NULL', RATE_DEST_LOC_TP_CD ,  RATE_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( SCG_ORG_LOC_TP_CD,'NULL', SCG_ORG_LOC_TP_CD ,  SCG_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( SCG_DEST_LOC_TP_CD,'NULL', SCG_DEST_LOC_TP_CD ,  SCG_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( COST_ORG_LOC_TP_CD,'NULL', COST_ORG_LOC_TP_CD ,  COST_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( COST_DEST_LOC_TP_CD,'NULL', COST_DEST_LOC_TP_CD ,  COST_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			AND   DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,'C', MN.ORI_CNT_CD, MN.ORI_RGN_CD ) =  DECODE( LOAD_ORG_LOC_TP_CD,'NULL', LOAD_ORG_LOC_TP_CD ,  LOAD_ORG_LOC_DEF_CD )" ).append("\n"); 
		query.append("			AND   DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,'C', MN.DEST_CNT_CD, MN.DEST_RGN_CD ) =  DECODE( LOAD_DEST_LOC_TP_CD,'NULL', LOAD_DEST_LOC_TP_CD ,  LOAD_DEST_LOC_DEF_CD )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			 ---------------------------------------------------------------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append("	WHERE MN.RN = 1" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("VW_RFA_RESULT_MN AS (" ).append("\n"); 
		query.append("	SELECT" ).append("\n"); 
		query.append("		CMDT_ROUT.PROP_NO" ).append("\n"); 
		query.append("		, CMDT_ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("		, CMDT_ROUT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.ROUT_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.RT_SEQ" ).append("\n"); 
		query.append("		, CMDT_ROUT.FEU_TEU" ).append("\n"); 
		query.append("		, MN.CTRT_EFF_DT" ).append("\n"); 
		query.append("		, MN.CTRT_EXP_DT" ).append("\n"); 
		query.append("		, MN.SIMUL_SCG_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_ESTM_LOD_QTY,0)  AS PRS_ESTM_LOD_QTY" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PROP_FRT_RT_AMT,0)   AS RATE -- RATE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_SCG_AMT , 0) AS SURCHARGE  -- SURCHARGE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_PFIT_CM_UC_AMT,0) AS COST_TRADE-- COST, TRADE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_RESPB_CM_UC_AMT,0) AS COST_OFFICE-- COST, OFFICE" ).append("\n"); 
		query.append("		, NVL(CMDT_ROUT.PRS_RESPB_OPFIT_UC_AMT,0) AS COST_OP_OFFICE-- COST, OP, OFFICE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, CMDT_ROUT.PRS_RAT_UT_CD" ).append("\n"); 
		query.append("		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) AS UT_CD_2_1" ).append("\n"); 
		query.append("		, SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) AS UT_CD_1_1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_REV / MN.TOT_CTRT_DAYS) AS CALC_RATE_REV" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_REV,'+', MN.SIMUL_AMOUNT_REV   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_REV )  AS SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0,  MN.SIMUL_DAYS_RATE / MN.TOT_CTRT_DAYS) AS CALC_RATE_RATE" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_RATE" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_RATE,'+', MN.SIMUL_AMOUNT_RATE   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_RATE) AS SIMUL_AMOUNT_RATE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0,  MN.SIMUL_DAYS_SCG / MN.TOT_CTRT_DAYS ) AS CALC_RATE_SCG" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_SCG" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_SCG,'+', MN.SIMUL_AMOUNT_SCG   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_SCG)   AS SIMUL_AMOUNT_SCG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0,  MN.SIMUL_DAYS_COST / MN.TOT_CTRT_DAYS) AS CALC_RATE_COST" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_COST" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_COST,'+', MN.SIMUL_AMOUNT_COST   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_COST) AS SIMUL_AMOUNT_COST" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, DECODE(MN.TOT_CTRT_DAYS,0,0, MN.SIMUL_DAYS_LOAD / MN.TOT_CTRT_DAYS) AS CALC_RATE_LOAD" ).append("\n"); 
		query.append("		, MN.SIMUL_CALC_TP_CD_LOAD" ).append("\n"); 
		query.append("		, DECODE(MN.SIMUL_CALC_TP_CD_LOAD,'+', MN.SIMUL_AMOUNT_LOAD   *  CMDT_ROUT.FEU_TEU, MN.SIMUL_AMOUNT_LOAD) AS SIMUL_AMOUNT_LOAD" ).append("\n"); 
		query.append("		-- CMDT_ROUT.PRS_ESTM_LOD_QTY  값은 무조건  TEU(D2) 기준으로 가지고 있고" ).append("\n"); 
		query.append("		-- AMT 정보는 TEU(D2) , FEU(D4) 에 따라 해당 하는 단위로 값을 가지고 있기 때문에" ).append("\n"); 
		query.append("		-- Load 를 AMT 기준으로 맞추기 위해 아래와 같이 값을 조정한다." ).append("\n"); 
		query.append("		----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("		, NVL( CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' " ).append("\n"); 
		query.append("					THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  " ).append("\n"); 
		query.append("				ELSE	" ).append("\n"); 
		query.append("						 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2" ).append("\n"); 
		query.append("		  END,0)  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  " ).append("\n"); 
		query.append("		----------------------------------------------------------------------------------" ).append("\n"); 
		query.append("	FROM 	VW_RFA_MN MN" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		,(		" ).append("\n"); 
		query.append("			SELECT MN.PROP_NO" ).append("\n"); 
		query.append("				, MN.AMDT_SEQ" ).append("\n"); 
		query.append("				, MN.SVC_SCP_CD" ).append("\n"); 
		query.append("				, CMDT_ROUT.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				, CMDT_ROUT.ROUT_SEQ" ).append("\n"); 
		query.append("				, RT.RT_SEQ" ).append("\n"); 
		query.append("				, CMDT_ROUT.PRS_ESTM_LOD_QTY" ).append("\n"); 
		query.append("				, RT.PROP_FRT_RT_AMT" ).append("\n"); 
		query.append("				, RT.PRS_SCG_AMT" ).append("\n"); 
		query.append("				, RT.PRS_PFIT_CM_UC_AMT" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_CM_UC_AMT" ).append("\n"); 
		query.append("				, RT.PRS_RESPB_OPFIT_UC_AMT" ).append("\n"); 
		query.append("				, CMDT_ROUT.PRS_RAT_UT_CD" ).append("\n"); 
		query.append("				,DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS FEU_TEU" ).append("\n"); 
		query.append("			FROM 	(SELECT DISTINCT PROP_NO, AMDT_SEQ,SVC_SCP_CD FROM VW_RFA_MN ) MN" ).append("\n"); 
		query.append("				, PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT" ).append("\n"); 
		query.append("				, PRI_RP_SCP_RT RT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE( @[frm_ori_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_RFA_MN MN_SET" ).append("\n"); 
		query.append("							, PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'O'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_ori_rout_cd]" ).append("\n"); 
		query.append("				) ORI_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD,  CMDT_HDR_SEQ, ROUT_SEQ" ).append("\n"); 
		query.append("				       FROM (" ).append("\n"); 
		query.append("						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ" ).append("\n"); 
		query.append("							, DECODE( @[frm_dest_loc_tp]" ).append("\n"); 
		query.append("								, 'C'," ).append("\n"); 
		query.append("								       (" ).append("\n"); 
		query.append("									  SELECT CNT_CD " ).append("\n"); 
		query.append("									  FROM MDM_LOCATION " ).append("\n"); 
		query.append("									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) " ).append("\n"); 
		query.append("								       )" ).append("\n"); 
		query.append("								, 'R', " ).append("\n"); 
		query.append("									(" ).append("\n"); 
		query.append("									    SELECT RGN_CD " ).append("\n"); 
		query.append("									    FROM MDM_LOCATION " ).append("\n"); 
		query.append("									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)" ).append("\n"); 
		query.append("									 )" ).append("\n"); 
		query.append("								, NULL " ).append("\n"); 
		query.append("							)   AS LOC_CD " ).append("\n"); 
		query.append("						FROM VW_RFA_MN MN_SET" ).append("\n"); 
		query.append("							, PRI_RP_SCP_RT_ROUT_PNT A" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC B" ).append("\n"); 
		query.append("							, PRI_RP_SCP_GRP_LOC_DTL C" ).append("\n"); 
		query.append("						WHERE MN_SET.PROP_NO = A.PROP_NO" ).append("\n"); 
		query.append("							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ" ).append("\n"); 
		query.append("							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD" ).append("\n"); 
		query.append("							AND A.ORG_DEST_TP_CD = 'D'" ).append("\n"); 
		query.append("							AND A.SRC_INFO_CD <> 'AD'" ).append("\n"); 
		query.append("							AND A.PROP_NO     = B.PROP_NO(+)" ).append("\n"); 
		query.append("							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)" ).append("\n"); 
		query.append("							AND B.PROP_NO     = C.PROP_NO(+)" ).append("\n"); 
		query.append("							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)" ).append("\n"); 
		query.append("							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)" ).append("\n"); 
		query.append("							AND C.SRC_INFO_CD(+) <> 'AD'" ).append("\n"); 
		query.append("					)" ).append("\n"); 
		query.append("					WHERE LOC_CD  = @[frm_dest_rout_cd]" ).append("\n"); 
		query.append("				) DEST_LOC" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				,(" ).append("\n"); 
		query.append("					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ" ).append("\n"); 
		query.append("					FROM VW_RFA_MN MN_SET" ).append("\n"); 
		query.append("						, PRI_RP_SCP_RT RT" ).append("\n"); 
		query.append("					WHERE MN_SET.PROP_NO = RT.PROP_NO" ).append("\n"); 
		query.append("						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ" ).append("\n"); 
		query.append("						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD" ).append("\n"); 
		query.append("	#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("		AND RT.VSL_SLAN_CD IN (" ).append("\n"); 
		query.append("		#foreach( ${key} in ${slane_list}) " ).append("\n"); 
		query.append("			#if($velocityCount != 1 ) " ).append("\n"); 
		query.append("				," ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("				'$key'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("		)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("				) SLANE" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("			WHERE MN.PROP_NO = CMDT_ROUT.PROP_NO" ).append("\n"); 
		query.append("				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ" ).append("\n"); 
		query.append("				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD" ).append("\n"); 
		query.append("#if( ${frm_ori_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${frm_dest_rout_cd} != '' )" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( $slane_list.size() != 0 ) " ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)" ).append("\n"); 
		query.append("				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)" ).append("\n"); 
		query.append("				-- BY CARGO TYPE" ).append("\n"); 
		query.append("				#if (${crg_tp_str} != '' )" ).append("\n"); 
		query.append("					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )" ).append("\n"); 
		query.append("				#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	) CMDT_ROUT" ).append("\n"); 
		query.append("	WHERE  CMDT_ROUT.PROP_NO			= MN.PROP_NO(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.AMDT_SEQ			= MN.AMDT_SEQ(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.SVC_SCP_CD		= MN.SVC_SCP_CD(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.CMDT_HDR_SEQ		= MN.CMDT_HDR_SEQ(+)" ).append("\n"); 
		query.append("		AND CMDT_ROUT.ROUT_SEQ			= MN.ROUT_SEQ(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("--CMPB = RATE + SURCHARGE - PRS PROFITABILITY CONTRIBUTION MARGIN UNIT COST AMOUNT  -- trade" ).append("\n"); 
		query.append("-- CMPB = RATE + SURCHARGE - PRS RESPONSIBILITY CONTRIBUTION MARGIN UNIT COST AMOUNT   -- office" ).append("\n"); 
		query.append("-- G RVE = " ).append("\n"); 
		query.append("-- 구해야 할값, LOAD,G REV,COST, CMPB, CM, " ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	CTRT_TP_CD" ).append("\n"); 
		query.append("	, MN.PROP_NO" ).append("\n"); 
		query.append("	, MN.AMDT_SEQ" ).append("\n"); 
		query.append("	, MN.LOAD" ).append("\n"); 
		query.append("	, MN.G_REV" ).append("\n"); 
		query.append("	, MN.COST_TRADE" ).append("\n"); 
		query.append("	, MN.COST_OFFICE" ).append("\n"); 
		query.append("	, MN.COST_OP_OFFICE" ).append("\n"); 
		query.append("	, MN.RATE" ).append("\n"); 
		query.append("	, MN.SURCHARGE" ).append("\n"); 
		query.append("#if ( ${virtual_query_rev} != '' )" ).append("\n"); 
		query.append("	, MN.G_REV -  MN.COST_OFFICE AS CM_OFFICE" ).append("\n"); 
		query.append("	, MN.G_REV -  MN.COST_TRADE AS CM_TRADE" ).append("\n"); 
		query.append("	, MN.G_REV -  MN.COST_OP_OFFICE AS OP_OFFICE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	, DECODE(MN.LOAD,0,0,(MN.G_REV -  MN.COST_OFFICE)/MN.LOAD) AS CMPB_OFFICE" ).append("\n"); 
		query.append("	, DECODE(MN.LOAD,0,0,(MN.G_REV -  MN.COST_TRADE)/MN.LOAD) AS CMPB_TRADE" ).append("\n"); 
		query.append("	, DECODE(MN.LOAD,0,0,(MN.G_REV -  MN.COST_OP_OFFICE)/MN.LOAD) AS OPB_OFFICE" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("	, MN.CM_OFFICE" ).append("\n"); 
		query.append("	, MN.CM_TRADE" ).append("\n"); 
		query.append("	, MN.OP_OFFICE" ).append("\n"); 
		query.append("	, DECODE(MN.LOAD,0,0,MN.CM_OFFICE/MN.LOAD) AS CMPB_OFFICE" ).append("\n"); 
		query.append("	, DECODE(MN.LOAD,0,0,MN.CM_TRADE/MN.LOAD) AS CMPB_TRADE" ).append("\n"); 
		query.append("	, DECODE(MN.LOAD,0,0,MN.OP_OFFICE/MN.LOAD) AS OPB_OFFICE" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("	SELECT	CTRT_TP_CD" ).append("\n"); 
		query.append("		, MN.PROP_NO" ).append("\n"); 
		query.append("		, MN.AMDT_SEQ" ).append("\n"); 
		query.append("		, SUM(     CASE WHEN ( UT_CD_1_1 = '2' OR UT_CD_2_1 = '2' ) " ).append("\n"); 
		query.append("						THEN MN.LOAD  * DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1)  " ).append("\n"); 
		query.append("					ELSE	" ).append("\n"); 
		query.append("							 MN.LOAD  * DECODE(@[frm_pfmc_unit],'FEU',1,'TEU',2)    " ).append("\n"); 
		query.append("	           END ) AS LOAD" ).append("\n"); 
		query.append("		--, SUM( MN.RATE + MN.SURCHARGE + MN.SIMUL_SURCHARGE ) AS G_REV" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		,SUM( ((MN.RATE + MN.SURCHARGE + MN.SIMUL_SURCHARGE) +  DECODE(MN.SIMUL_CALC_TP_CD_REV,'+', ( MN.SIMUL_AMOUNT_REV * MN.CALC_RATE_REV )" ).append("\n"); 
		query.append("			, ((MN.RATE + MN.SURCHARGE + MN.SIMUL_SURCHARGE)  * MN.SIMUL_AMOUNT_REV /100 * MN.CALC_RATE_REV ) )) * MN.LOAD ) AS G_REV" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, SUM( COST_TRADE   * MN.LOAD) AS COST_TRADE" ).append("\n"); 
		query.append("		, SUM( COST_OFFICE   * MN.LOAD) AS COST_OFFICE" ).append("\n"); 
		query.append("		, SUM( COST_OP_OFFICE   * MN.LOAD) AS COST_OP_OFFICE" ).append("\n"); 
		query.append("		, SUM(MN.RATE) AS RATE" ).append("\n"); 
		query.append("		, SUM(MN.SURCHARGE+ MN.SIMUL_SURCHARGE)  AS SURCHARGE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		, SUM(  MN.LOAD   *  ( MN.RATE + MN.SURCHARGE+ MN.SIMUL_SURCHARGE  - COST_OFFICE )  )  AS CM_OFFICE -- AS CM_NEW_OFFICE" ).append("\n"); 
		query.append("		, SUM( MN.LOAD   *  ( MN.RATE + MN.SURCHARGE+ MN.SIMUL_SURCHARGE  - COST_TRADE ) )   AS CM_TRADE  -- AS CM_NEW_TRADE" ).append("\n"); 
		query.append("		, SUM( MN.LOAD   *  ( MN.RATE + MN.SURCHARGE+ MN.SIMUL_SURCHARGE  - COST_OP_OFFICE )  )  AS OP_OFFICE  -- AS CM_NEW_OP_TRADE" ).append("\n"); 
		query.append("		,SUM(LOAD ) AS PRS_ESTM_LOD_QTY_FOR_RATE " ).append("\n"); 
		query.append("	FROM (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'R') " ).append("\n"); 
		query.append("		SELECT " ).append("\n"); 
		query.append("			'S' AS CTRT_TP_CD" ).append("\n"); 
		query.append("			, RMN.PROP_NO" ).append("\n"); 
		query.append("			, RMN.AMDT_SEQ" ).append("\n"); 
		query.append("			, RMN.FEU_TEU" ).append("\n"); 
		query.append("			, RMN.CTRT_EFF_DT" ).append("\n"); 
		query.append("			, RMN.CTRT_EXP_DT " ).append("\n"); 
		query.append("			, RMN.SURCHARGE" ).append("\n"); 
		query.append("			-- , RMN.CALC_RATE" ).append("\n"); 
		query.append("			--, RMN.PRS_ESTM_LOD_QTY" ).append("\n"); 
		query.append("			--, RMN.RATE -- RATE" ).append("\n"); 
		query.append("			, ( RMN.PRS_ESTM_LOD_QTY_FOR_RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_LOAD,'+', ( RMN.SIMUL_AMOUNT_LOAD * RMN.CALC_RATE_LOAD), (RMN.PRS_ESTM_LOD_QTY_FOR_RATE  * RMN.SIMUL_AMOUNT_LOAD /100 * RMN.CALC_RATE_LOAD) ),0) ) AS LOAD" ).append("\n"); 
		query.append("			, ( RMN.RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_RATE,'+', ( RMN.SIMUL_AMOUNT_RATE * RMN.CALC_RATE_RATE ), (RMN.RATE  * RMN.SIMUL_AMOUNT_RATE /100 * RMN.CALC_RATE_RATE ) ),0) ) AS RATE" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			, ( COST_TRADE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_TRADE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_TRADE" ).append("\n"); 
		query.append("			, ( COST_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OFFICE" ).append("\n"); 
		query.append("			, ( COST_OP_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OP_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OP_OFFICE" ).append("\n"); 
		query.append("			, RMN.PRS_RAT_UT_CD" ).append("\n"); 
		query.append("			, RMN.UT_CD_2_1" ).append("\n"); 
		query.append("			, RMN.UT_CD_1_1" ).append("\n"); 
		query.append("			, NVL(RMN.SIMUL_AMOUNT_REV,0) AS SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("			, NVL(RMN.CALC_RATE_REV,0) AS CALC_RATE_REV" ).append("\n"); 
		query.append("			, NVL(RMN.SIMUL_CALC_TP_CD_REV,0) AS SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("			, PRS_ESTM_LOD_QTY_FOR_RATE " ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				SELECT  " ).append("\n"); 
		query.append("					NVL(SUM( SCG.ADJ_SCG_USD_AMT +  DECODE(RMN.SIMUL_CALC_TP_CD_SCG,'+', ( RMN.SIMUL_AMOUNT_SCG * RMN.CALC_RATE_SCG ), (SCG.ADJ_SCG_USD_AMT * RMN.SIMUL_AMOUNT_SCG /100 * RMN.CALC_RATE_SCG ) ) ),0)" ).append("\n"); 
		query.append("				FROM  PRI_SP_SCP_RT_SCG SCG " ).append("\n"); 
		query.append("				WHERE  SCG.PROP_NO = RMN.PROP_NO" ).append("\n"); 
		query.append("					AND SCG.AMDT_SEQ = RMN.AMDT_SEQ" ).append("\n"); 
		query.append("					AND SCG.SVC_SCP_CD = RMN.SVC_SCP_CD" ).append("\n"); 
		query.append("					AND SCG.GEN_SPCL_RT_TP_CD = RMN.GEN_SPCL_RT_TP_CD" ).append("\n"); 
		query.append("					AND SCG.CMDT_HDR_SEQ =  RMN.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("					AND SCG.ROUT_SEQ  = RMN.ROUT_SEQ" ).append("\n"); 
		query.append("					AND SCG.RT_SEQ = RMN.RT_SEQ" ).append("\n"); 
		query.append("					AND INSTR(RMN.SIMUL_SCG_CD, SCG.CHG_CD) > 0" ).append("\n"); 
		query.append("					--AND SCG.SCG_CD = MN.SIMUL_SCG_CD" ).append("\n"); 
		query.append("			  ) AS SIMUL_SURCHARGE" ).append("\n"); 
		query.append("		FROM  VW_RESULT_MN RMN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frm_contract_type} == 'B') " ).append("\n"); 
		query.append("		UNION ALL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${frm_contract_type} != 'S') " ).append("\n"); 
		query.append("		SELECT" ).append("\n"); 
		query.append("			'R' AS CTRT_TP_CD" ).append("\n"); 
		query.append("			, RMN.PROP_NO" ).append("\n"); 
		query.append("			, RMN.AMDT_SEQ" ).append("\n"); 
		query.append("			, RMN.FEU_TEU" ).append("\n"); 
		query.append("			, RMN.CTRT_EFF_DT" ).append("\n"); 
		query.append("			, RMN.CTRT_EXP_DT" ).append("\n"); 
		query.append("			, RMN.SURCHARGE" ).append("\n"); 
		query.append("			-- , RMN.CALC_RATE" ).append("\n"); 
		query.append("			--, RMN.PRS_ESTM_LOD_QTY" ).append("\n"); 
		query.append("			--, RMN.RATE -- RATE" ).append("\n"); 
		query.append("			, ( RMN.PRS_ESTM_LOD_QTY_FOR_RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_LOAD,'+', ( RMN.SIMUL_AMOUNT_LOAD * RMN.CALC_RATE_LOAD), (RMN.PRS_ESTM_LOD_QTY_FOR_RATE  * RMN.SIMUL_AMOUNT_LOAD /100 * RMN.CALC_RATE_LOAD) ),0) ) AS LOAD" ).append("\n"); 
		query.append("			, ( RMN.RATE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_RATE,'+', ( RMN.SIMUL_AMOUNT_RATE * RMN.CALC_RATE_RATE ), (RMN.RATE  * RMN.SIMUL_AMOUNT_RATE /100 * RMN.CALC_RATE_RATE ) ),0) ) AS RATE" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			, ( COST_TRADE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_TRADE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_TRADE" ).append("\n"); 
		query.append("			, ( COST_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OFFICE" ).append("\n"); 
		query.append("			, ( COST_OP_OFFICE +  NVL(DECODE(RMN.SIMUL_CALC_TP_CD_COST,'+', ( RMN.SIMUL_AMOUNT_COST * RMN.CALC_RATE_COST ), (RMN.COST_OP_OFFICE  * RMN.SIMUL_AMOUNT_COST /100 * RMN.CALC_RATE_COST ) ),0) ) AS COST_OP_OFFICE" ).append("\n"); 
		query.append("			, RMN.PRS_RAT_UT_CD" ).append("\n"); 
		query.append("			, RMN.UT_CD_2_1" ).append("\n"); 
		query.append("			, RMN.UT_CD_1_1" ).append("\n"); 
		query.append("			, NVL(RMN.SIMUL_AMOUNT_REV,0) AS SIMUL_AMOUNT_REV" ).append("\n"); 
		query.append("			, NVL(RMN.CALC_RATE_REV,0) AS CALC_RATE_REV" ).append("\n"); 
		query.append("			, NVL(RMN.SIMUL_CALC_TP_CD_REV,0) AS SIMUL_CALC_TP_CD_REV" ).append("\n"); 
		query.append("			, PRS_ESTM_LOD_QTY_FOR_RATE " ).append("\n"); 
		query.append("			, (" ).append("\n"); 
		query.append("				SELECT" ).append("\n"); 
		query.append("					NVL(SUM( SCG.ADJ_SCG_USD_AMT +  DECODE(RMN.SIMUL_CALC_TP_CD_SCG,'+', ( RMN.SIMUL_AMOUNT_SCG * RMN.CALC_RATE_SCG ), (SCG.ADJ_SCG_USD_AMT * RMN.SIMUL_AMOUNT_SCG /100 * RMN.CALC_RATE_SCG ) ) ),0)" ).append("\n"); 
		query.append("				FROM  PRI_RP_SCP_RT_SCG SCG" ).append("\n"); 
		query.append("				WHERE  SCG.PROP_NO = RMN.PROP_NO" ).append("\n"); 
		query.append("					AND SCG.AMDT_SEQ = RMN.AMDT_SEQ" ).append("\n"); 
		query.append("					AND SCG.SVC_SCP_CD = RMN.SVC_SCP_CD" ).append("\n"); 
		query.append("					AND SCG.CMDT_HDR_SEQ =  RMN.CMDT_HDR_SEQ" ).append("\n"); 
		query.append("					AND SCG.ROUT_SEQ  = RMN.ROUT_SEQ" ).append("\n"); 
		query.append("					AND SCG.RT_SEQ = RMN.RT_SEQ" ).append("\n"); 
		query.append("					AND INSTR(RMN.SIMUL_SCG_CD, SCG.CHG_CD) > 0" ).append("\n"); 
		query.append("					--AND SCG.SCG_CD = MN.SIMUL_SCG_CD" ).append("\n"); 
		query.append("			) AS SIMUL_SURCHARGE" ).append("\n"); 
		query.append("		FROM  VW_RFA_RESULT_MN RMN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("	) MN" ).append("\n"); 
		query.append("	GROUP BY MN.PROP_NO, MN.AMDT_SEQ,CTRT_TP_CD,MN.FEU_TEU" ).append("\n"); 
		query.append(") MN" ).append("\n"); 

	}
}