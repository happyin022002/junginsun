<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralBookingListSearchDBDAOSearchEmptyCntrSumRSQL">
			<desc><![CDATA[Repo Container별 합계

2011.06.13 나상보 [CHM-201111555-01] [EQR] R9 코드 생성에 따른 EQR 모듈 보완 작업 요청
2015.07.30 신용찬 [CHM-201537230] Empty Repo BKG Inquiry 화면 조회옵션 추가
2016.01.26 문동선 [CHM-201539624] A5 컨테이너 타입 추가에 따른 BKG/DOC 시스템 보완]]></desc>
			<sql><![CDATA[
SELECT   SUM(D2) || CASE WHEN SUM(D2_H) > 0 THEN '('||SUM(D2_H)||')' END SUM_D2
       , SUM(D4) || CASE WHEN SUM(D4_H) > 0 THEN '('||SUM(D4_H)||')' END SUM_D4
       , SUM(D5) || CASE WHEN SUM(D5_H) > 0 THEN '('||SUM(D5_H)||')' END SUM_D5
       , SUM(D7) || CASE WHEN SUM(D7_H) > 0 THEN '('||SUM(D7_H)||')' END SUM_D7
       , SUM(DX) SUM_DX
       , SUM(R2) SUM_R2
       , SUM(R5) SUM_R5
       , SUM(R9) SUM_R9
       , SUM(F2) SUM_F2
       , SUM(F4) SUM_F4
       , SUM(F5) SUM_F5
       , SUM(O2) SUM_O2
       , SUM(O4) SUM_O4
	   , SUM(O5) SUM_O5
	   , SUM(O7) SUM_O7
       , SUM(A2) SUM_A2
       , SUM(A4) SUM_A4
       , SUM(A5) SUM_A5
       , SUM(S2) SUM_S2
       , SUM(S4) SUM_S4   
FROM     (
	       SELECT   (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D2') D2
                  , (SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D2' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D2_H
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D4') D4
                  , (SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D4' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D4_H
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D5') D5
                  , (SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D5' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D5_H
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'D7') D7
                  , (SELECT COUNT(1) FROM MST_CONTAINER MST, BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND MST.CNTR_NO = CNTR.CNTR_NO AND CNTR.CNTR_TPSZ_CD = 'D7' AND MST.CNTR_HNGR_RCK_CD IS NOT NULL) D7_H
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'R2') R2
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'DX') DX
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'R5') R5
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'R9') R9
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'F2') F2
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'F4') F4
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'F5') F5
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O2') O2
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O4') O4
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O5') O5
				  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'O7') O7
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'A2') A2
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'A4') A4
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'A5') A5
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'S2') S2
                  , (SELECT COUNT(1) FROM BKG_CONTAINER CNTR WHERE BK.BKG_NO = CNTR.BKG_NO AND CNTR.CNTR_TPSZ_CD = 'S4') S4
	       FROM     (
                      SELECT   DISTINCT BK.BKG_NO
		              FROM     BKG_BOOKING BK
				             , (
                                 SELECT   BK.BKG_NO
                                        , BK.FM_BKG_NO
				                 FROM     BKG_BOOKING BK
#if (${bkg_no} == '' && ${bl_no} == '')      
	#if (${vvd_cd} != '')  
                                        , BKG_VVD VVD  
	#end

	#if (${cntr_no1} != '')   
                                        , BKG_CONTAINER CNTR
    #elseif (${cntr_no1} == '' && (${cntrTpsz} != '' && ${tpsztype} != ''))  
                                        , BKG_CONTAINER CNTR
                                        , BKG_QUANTITY  QTY
	#end

	#if (${pod_cd} != '') 
                                        , EQR_CTRL_MTY_BKG_EXE EQ
    #end

	#if (${bkg_date_tp} == 'E')
                                        , (
                                            SELECT   SKD.VPS_ETA_DT
                                                   , BK.BKG_NO
                                                   , VVD.POD_CD
                                            FROM     BKG_BOOKING BK
                                                   , BKG_VVD VVD
                                                   , VSK_VSL_PORT_SKD SKD
                                            WHERE BK.BKG_NO            = VVD.BKG_NO
                                            AND BK.POD_CD            = VVD.POD_CD
                                            AND VVD.VSL_PRE_PST_CD   IN ('T','U')
                                            AND VVD.VSL_CD           = SKD.VSL_CD
                                            AND VVD.SKD_VOY_NO       = SKD.SKD_VOY_NO
                                            AND VVD.SKD_DIR_CD       = SKD.SKD_DIR_CD
                                            AND VVD.POD_CD           = SKD.VPS_PORT_CD
                                            AND VVD.POD_CLPT_IND_SEQ = SKD.CLPT_IND_SEQ
		#if (${vvd_cd} != '')
                                            AND VVD.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
                                            AND VVD.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
                                            AND VVD.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)  
		#end
		#if (${cre_from_dt} != '') 
				   		AND SKD.VPS_ETA_DT >= TO_DATE(@[cre_from_dt]|| '00:00:00','YYYY-MM-DD HH24:MI:SS')
		#end
		#if (${cre_to_dt} != '') 
				  		AND SKD.VPS_ETA_DT <= TO_DATE(@[cre_to_dt]|| '23:59:59','YYYY-MM-DD HH24:MI:SS')
		#end
				) eta
	#end
#end
		 WHERE BK.BKG_CGO_TP_CD = 'P'
		   AND 'Y' = CASE WHEN BK.SPLIT_FLG = 'Y' AND BK.BKG_STS_CD = 'X' THEN 'Y'--SPLIT인데 CANCEL된 건 -> MASTER BKG -> 조회됨
						  WHEN BK.SPLIT_FLG = 'N' AND BK.BKG_STS_CD = 'X' THEN 'N'--SPLIT이 아닌데 CANCEL된 건 -> 일반 CANCEL -> 조회안됨
						  ELSE 'Y' END --그외 조회됨
#if (${bkg_no} != '')    
		   AND BK.BKG_NO LIKE @[bkg_no]||'%'
#else
		   AND BK.BKG_STS_CD <> 'X'
#end
#if  (${bl_no} != '')    
		   AND BK.BL_NO LIKE @[bl_no]||'%'
#end
#if (${bkg_ofc_cd} != '')  
		   AND BK.BKG_OFC_CD = @[bkg_ofc_cd]
#end
#if (${bkg_no} == '' && ${bl_no} == '')      
	#if (${vvd_cd} != '')
		   AND BK.BKG_NO     = VVD.BKG_NO   
		   AND VVD.VSL_CD     = SUBSTR(@[vvd_cd], 1, 4)
		   AND VVD.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
		   AND VVD.SKD_DIR_CD = SUBSTR(@[vvd_cd], 9, 1)  
	#end

	#if (${cntr_no1} != '') 
	    AND BK.BKG_NO = CNTR.BKG_NO
	    AND CNTR.CNTR_NO = @[cntr_no1]||@[cntr_no2]

    #elseif (${cntr_no1} == '' && (${cntrTpsz} != '' && ${tpsztype} != '')) 
        AND BK.BKG_NO = CNTR.BKG_NO (+)
        AND BK.BKG_NO = QTY.BKG_NO(+)
	    AND (CNTR.CNTR_TPSZ_CD IN ( ${tpszTypeText} ) OR QTY.CNTR_TPSZ_CD IN ( ${tpszTypeText} ))

	#end

	#if (${pol_cd} != '') 
		   AND BK.POL_CD LIKE @[pol_cd]||'%'
	#end

	#if (${pod_cd} != '')         
	    --and bk.pod_cd LIKE pod_cd||'%'
        AND BK.BKG_NO = EQ.MTY_BKG_NO(+)
        AND EQ.POD_YD_CD LIKE @[pod_cd]||'%'
	#end

	#if (${pre_rly_port_cd} != '') 
		   AND BK.PRE_RLY_PORT_CD LIKE @[pre_rly_port_cd]||'%'
	#end
	#if (${pst_rly_port_cd} != '') 
		   AND BK.PST_RLY_PORT_CD LIKE @[pst_rly_port_cd]||'%'
	#end
	#if (${vvd_cd} == '')
		#if (${bkg_date_tp} != 'E')		
			#if (${cre_from_dt} != '') 
    	   AND BK.BKG_CRE_DT >= TO_DATE(@[cre_from_dt]|| '00:00:00','YYYY-MM-DD HH24:MI:SS')
			#end
			#if (${cre_to_dt} != '') 
		   AND BK.BKG_CRE_DT <= TO_DATE(@[cre_to_dt]|| '23:59:59','YYYY-MM-DD HH24:MI:SS')
			#end
		#else
			AND BK.BKG_NO = ETA.BKG_NO
			AND BK.POD_CD = ETA.POD_CD
		#end
	#end
	#if (${vvd_cd_flg} == 'E')  
		 	AND VVD.VSL_PRE_PST_CD = 'T'
	#end 
	#if (${cntr_attach} == 'Y')  
			AND (SELECT COUNT(1) FROM BKG_CONTAINER BCNTR WHERE BK.BKG_NO = BCNTR.BKG_NO AND ROWNUM = 1) > 0
	#elseif  (${cntr_attach} == 'N')  
		    AND (SELECT COUNT(1) FROM BKG_CONTAINER BCNTR WHERE BK.BKG_NO = BCNTR.BKG_NO AND ROWNUM = 1) = 0   
	#end

	#if (${bkg_status} == 'D')  -- VD
        AND NVL(BK.BKG_CRE_TP_CD, 'X') = 'S' -- S:SPLIT
    #elseif  (${bkg_status} == 'L') -- VL
        AND NVL(BK.BKG_CRE_TP_CD, 'X') = 'X' -- L : VL
	#end

#end
		) MST_BKG

#if (${bkg_no} == '' && ${bl_no} == '') 
 WHERE BK.BKG_NO = MST_BKG.BKG_NO
#else 
 WHERE (BK.BKG_NO = MST_BKG.BKG_NO OR BK.FM_BKG_NO = MST_BKG.BKG_NO OR MST_BKG.FM_BKG_NO = BK.BKG_NO)
#end
) BK
    )			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="cre_from_dt" type="12" value="" out="N"/>
				<param name="cre_to_dt" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="bkg_ofc_cd" type="12" value="" out="N"/>
				<param name="cntr_no1" type="12" value="" out="N"/>
				<param name="cntr_no2" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="pre_rly_port_cd" type="12" value="" out="N"/>
				<param name="pst_rly_port_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
