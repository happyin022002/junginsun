<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOGNAExpCreByOfcCSQL">
			<desc><![CDATA[ ]]></desc>
			<sql><![CDATA[
INSERT INTO MAS_GEN_EXPN_OFC_STUP(
	COST_YRMON
	, OFC_CD
	, LOCL_CURR_CD
	, OFC_GRP_NO
	, BUD_LOCL_AMT
	, BUD_USD_AMT
	, EXPN_USD_AMT
	, USD_LOCL_XCH_RT
	, CRE_USR_ID
	, CRE_DT
	, UPD_USR_ID
	, UPD_DT 
)
WITH 
ORG_TREE AS
(
SELECT LEVEL AS LVL, A.PRNT_OFC_CD, A.OFC_CD, A.OFC_TP_CD
  FROM MDM_ORGANIZATION A
 WHERE NVL(DELT_FLG, 'N') = 'N'
 START WITH OFC_CD = 'SELHO'
 CONNECT BY PRIOR OFC_CD = PRNT_OFC_CD
)
, ORG_TREE_NOT_HO AS
(
SELECT OFC_CD
     , NVL(SUBSTR(SYS_CONNECT_BY_PATH(OFC_CD, ','), 2, INSTR(SYS_CONNECT_BY_PATH(OFC_CD, ','), ',', 1, 2) - 2)
          , OFC_CD) 
       AS REP_OFC_CD
  FROM MDM_ORGANIZATION
 WHERE NVL(DELT_FLG, 'N') = 'N'
 START WITH OFC_CD IN (
                       SELECT OFC_CD
                         FROM ORG_TREE
                        WHERE LVL = 4
                          AND OFC_TP_CD IN ('BB', 'BA')
                      )
 CONNECT BY PRIOR OFC_CD = PRNT_OFC_CD
)
, GEN_BUDGET_INIT AS -- USING GEM MODULE MENU QUERY
(
SELECT A.OFC_CD
      ,B.LOCL_CURR_CD
      ,SUM(A.JAN_AMT * NVL(B.RQST_UT_VAL, 1)) JAN_AMT   
      ,SUM(A.FEB_AMT * NVL(B.RQST_UT_VAL, 1)) FEB_AMT   
      ,SUM(A.MAR_AMT * NVL(B.RQST_UT_VAL, 1)) MAR_AMT   
      ,SUM(A.APR_AMT * NVL(B.RQST_UT_VAL, 1)) APR_AMT   
      ,SUM(A.MAY_AMT * NVL(B.RQST_UT_VAL, 1)) MAY_AMT   
      ,SUM(A.JUN_AMT * NVL(B.RQST_UT_VAL, 1)) JUN_AMT
      ,SUM(A.JUL_AMT * NVL(B.RQST_UT_VAL, 1)) JUL_AMT
      ,SUM(A.AUG_AMT * NVL(B.RQST_UT_VAL, 1)) AUG_AMT                   
      ,SUM(A.SEP_AMT * NVL(B.RQST_UT_VAL, 1)) SEP_AMT
      ,SUM(A.OCT_AMT * NVL(B.RQST_UT_VAL, 1)) OCT_AMT                   
      ,SUM(A.NOV_AMT * NVL(B.RQST_UT_VAL, 1)) NOV_AMT
      ,SUM(A.DEC_AMT * NVL(B.RQST_UT_VAL, 1)) DEC_AMT
      ,SUM(A.INT_TTL * NVL(B.RQST_UT_VAL, 1)) INT_TTL
      ,SUM(A.ADD_TTL * NVL(B.RQST_UT_VAL, 1)) ADD_TTL
      ,SUM(A.TRN_TTL * NVL(B.RQST_UT_VAL, 1)) TRN_TTL
  FROM (
        SELECT C.OFC_CD
              ,C.GEN_EXPN_CD
              ,C.GEN_EXPN_ITM_NO
              ,C.JAN_AMT
              ,C.FEB_AMT
              ,C.MAR_AMT
              ,C.APR_AMT
              ,C.MAY_AMT
              ,C.JUN_AMT
              ,C.JUL_AMT
              ,C.AUG_AMT
              ,C.SEP_AMT
              ,C.OCT_AMT
              ,C.NOV_AMT
              ,C.DEC_AMT
              ,DECODE(A.GEN_EXPN_RQST_TP_CD, 'EI', C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT, 0) INT_TTL
              ,DECODE(A.GEN_EXPN_RQST_TP_CD, 'EA', C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT, 0) ADD_TTL
              ,DECODE(A.GEN_EXPN_RQST_TP_CD, 'ET', C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT, 0) TRN_TTL
              ,B.GEN_EXPN_ITM_DESC
              ,B.GEN_EXPN_CALC_BSS_DESC
              ,B.RQST_OPIN_RMK
              ,A.PLN_YRMON
          FROM (
                SELECT GEN_EXPN_RQST_NO
                      ,GEN_EXPN_RQST_TP_CD
                      ,SUBSTR(PLN_YRMON,1,4)||'00' PLN_YRMON
                  FROM GEM_REQUEST
                 WHERE PLN_YRMON LIKE SUBSTR(@[f_cost_yrmon], 1, 4)||'%'
               ) A
              ,GEM_ITEM B
              ,GEM_APRO_STEP C
         WHERE A.GEN_EXPN_RQST_NO = B.GEN_EXPN_RQST_NO
           AND B.CRNT_GEN_EXPN_APRO_STEP_CD = 'CO'
           AND B.CRNT_GEN_EXPN_APSTS_CD = 'AP'
           AND B.GEN_EXPN_RQST_NO = C.GEN_EXPN_RQST_NO
           AND B.OFC_CD = C.OFC_CD
           AND B.GEN_EXPN_CD = C.GEN_EXPN_CD
           AND B.GEN_EXPN_ITM_NO = C.GEN_EXPN_ITM_NO
           AND B.GEN_EXPN_TRNS_DIV_CD = C.GEN_EXPN_TRNS_DIV_CD
           AND B.GEN_EXPN_RQST_SEQ = C.GEN_EXPN_RQST_SEQ
           AND B.CRNT_GEN_EXPN_APRO_STEP_CD = C.GEN_EXPN_APRO_STEP_CD
       ) A
      ,GEM_OFFICE B
 WHERE A.OFC_CD = B.OFC_CD
 GROUP BY A.OFC_CD, B.LOCL_CURR_CD
)
, MAS_GEN_BUDGET AS
(
 SELECT 'HO' AS OFC_CD, GBI.LOCL_CURR_CD
      , SUM(DECODE(TO_NUMBER(SUBSTR(@[f_cost_yrmon], -2))
                  , 1, GBI.JAN_AMT
                  , 2, GBI.FEB_AMT
                  , 3, GBI.MAR_AMT
                  , 4, GBI.APR_AMT
                  , 5, GBI.MAY_AMT
                  , 6, GBI.JUN_AMT
                  , 7, GBI.JUL_AMT
                  , 8, GBI.AUG_AMT
                  , 9, GBI.SEP_AMT
                  , 10, GBI.OCT_AMT
                  , 11, GBI.NOV_AMT
                  , 12, GBI.DEC_AMT
                  , 0)) AS BUD_LOCL_AMT
      , 1 AS OFC_GRP_NO
   FROM GEN_BUDGET_INIT GBI, ORG_TREE ORG
  WHERE GBI.OFC_CD     = ORG.OFC_CD
    AND ORG.LVL        IN (2, 3, 4)
    AND ORG.OFC_TP_CD  = 'HT'
  GROUP BY GBI.LOCL_CURR_CD
 UNION ALL
 SELECT ORG.REP_OFC_CD AS OFC_CD, GBI.LOCL_CURR_CD
      , SUM(DECODE(TO_NUMBER(SUBSTR(@[f_cost_yrmon], -2))
                  , 1, GBI.JAN_AMT
                  , 2, GBI.FEB_AMT
                  , 3, GBI.MAR_AMT
                  , 4, GBI.APR_AMT
                  , 5, GBI.MAY_AMT
                  , 6, GBI.JUN_AMT
                  , 7, GBI.JUL_AMT
                  , 8, GBI.AUG_AMT
                  , 9, GBI.SEP_AMT
                  , 10, GBI.OCT_AMT
                  , 11, GBI.NOV_AMT
                  , 12, GBI.DEC_AMT
                  , 0)) AS BUD_LOCL_AMT
      , 2 AS ORDER_IDX
   FROM GEN_BUDGET_INIT GBI, ORG_TREE_NOT_HO ORG
  WHERE GBI.OFC_CD     = ORG.OFC_CD
  GROUP BY ORG.REP_OFC_CD, GBI.LOCL_CURR_CD
)
SELECT @[f_cost_yrmon] AS COST_YRMON, A.OFC_CD, A.LOCL_CURR_CD, A.OFC_GRP_NO
     , A.BUD_LOCL_AMT
     , NVL2(B.USD_LOCL_XCH_RT, ROUND(A.BUD_LOCL_AMT / B.USD_LOCL_XCH_RT, 2), 0) AS BUD_USD_AMT
     , 0 AS EXPN_USD_AMT
     , NVL(B.USD_LOCL_XCH_RT, 0) AS USD_LOCL_XCH_RT
     , @[cre_usr_id] AS CRE_USR_ID, SYSDATE CRE_DT, @[upd_usr_id] AS UPD_USR_ID, SYSDATE UPD_DT
  FROM MAS_GEN_BUDGET A, GL_MON_XCH_RT B
 WHERE A.LOCL_CURR_CD = B.CURR_CD(+)
   AND B.ACCT_XCH_RT_YRMON(+) = @[f_cost_yrmon]
   AND B.ACCT_XCH_RT_LVL(+) = '1'
   AND NVL(B.DELT_FLG(+), 'N') = 'N'
 ORDER BY A.OFC_GRP_NO, A.OFC_CD
			]]></sql>
			<params>
				<param name="f_cost_yrmon" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
