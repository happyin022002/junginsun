/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : SpaceAllocationManageDBDAOSearchStatusByVvdRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.12.10
*@LastModifier : 최성민
*@LastVersion : 1.0
* 2015.12.10 최성민
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spaceallocationmanage.spaceallocationmanage.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI SUNGMIN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpaceAllocationManageDBDAOSearchStatusByVvdRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
	  * 2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경
	  * 2014.02.04 [CHM-201428383-01] RFA 로직 추가
	  * 2014.03.05 김시몬 [선처리] BKG RFA NULL 관련 보완
	  * 2014.03.17 [CHM-20142960] SMP/Allocation control보완 요청 - SPC_GET_SMP_AMEND_FNC 적용
	  * 2014.03.25 김시몬 [선처리] SQM 분기 구하는 로직 관련 보완
	  * 2014.05.22 [선반영] AES-SC관련 로직 추가
	  * 2015.03.04 김성욱 [CHM-201534435] SQM QTA주가 변경 관련 적용 요청
	  * </pre>
	  */
	public SpaceAllocationManageDBDAOSearchStatusByVvdRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sub_trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trd_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spaceallocationmanage.spaceallocationmanage.integration").append("\n"); 
		query.append("FileName : SpaceAllocationManageDBDAOSearchStatusByVvdRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAM AS (" ).append("\n"); 
		query.append("    SELECT (SELECT VER_ST_YRWK" ).append("\n"); 
		query.append("              FROM SPC_MDL_VER_MST" ).append("\n"); 
		query.append("             WHERE COST_YRWK = M.COST_YRWK" ).append("\n"); 
		query.append("               AND VER_SEQ   = 1" ).append("\n"); 
		query.append("               AND TRD_CD    = @[trd_cd]" ).append("\n"); 
		query.append("               AND CFM_FLG   = 'Y') AS FM_YRWK," ).append("\n"); 
		query.append("           @[week]           AS TO_YRWK," ).append("\n"); 
		query.append("           @[trd_cd]         AS TRD_CD," ).append("\n"); 
		query.append("           @[sub_trd_cd]     AS SUB_TRD_CD" ).append("\n"); 
		query.append("      FROM SPC_MDL_VER_MST   M" ).append("\n"); 
		query.append("     WHERE M.CFM_FLG = 'Y'" ).append("\n"); 
		query.append("       AND M.TRD_CD = @[trd_cd]" ).append("\n"); 
		query.append("       AND (M.COST_YRWK, M.VER_SEQ) = (SELECT /*+ INDEX_DESC (M XPKSPC_MDL_VER_MST ) */" ).append("\n"); 
		query.append("                                             COST_YRWK, VER_SEQ" ).append("\n"); 
		query.append("                                        FROM SPC_MDL_VER_MST M " ).append("\n"); 
		query.append("                                       WHERE @[week] BETWEEN VER_ST_YRWK AND VER_END_YRWK" ).append("\n"); 
		query.append("                                         AND TRD_CD  = @[trd_cd]" ).append("\n"); 
		query.append("                                         AND CFM_FLG = 'Y'" ).append("\n"); 
		query.append("                                         AND ROWNUM  = 1)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVDS AS (" ).append("\n"); 
		query.append("    SELECT P.FM_YRWK       ," ).append("\n"); 
		query.append("           P.TO_YRWK       ," ).append("\n"); 
		query.append("           MV.TRD_CD       ," ).append("\n"); 
		query.append("           MV.SUB_TRD_CD   ," ).append("\n"); 
		query.append("           MV.RLANE_CD     ," ).append("\n"); 
		query.append("           SUBSTR(MV.SLS_YRMON, 1, 4) AS COST_YR," ).append("\n"); 
		query.append("           SUBSTR(MV.SLS_YRMON, 5) AS COST_MON," ).append("\n"); 
		query.append("           SUBSTR(MV.SLS_YRMON, 1, 4)||MV.COST_WK AS COST_WK," ).append("\n"); 
		query.append("           MV.COST_WK      AS COST_WK2," ).append("\n"); 
		query.append("           MV.VSL_CD       ," ).append("\n"); 
		query.append("           MV.SKD_VOY_NO   ," ).append("\n"); 
		query.append("           MV.DIR_CD       ," ).append("\n"); 
		query.append("			  MV.IOC_CD			," ).append("\n"); 
		query.append("           (SELECT /*+ INDEX_DESC (m XPKSPC_MDL_VER_MST ) */" ).append("\n"); 
		query.append("                   DECODE(Q.DIR_CD, NULL, '200001-1', COST_YRWK||'-'||VER_SEQ)" ).append("\n"); 
		query.append("              FROM SPC_MDL_VER_MST m" ).append("\n"); 
		query.append("             WHERE SUBSTR(MV.SLS_YRMON, 1, 4)||MV.COST_WK BETWEEN VER_ST_YRWK AND VER_END_YRWK" ).append("\n"); 
		query.append("               AND TRD_CD    = P.TRD_CD" ).append("\n"); 
		query.append("               AND CFM_FLG = 'Y'" ).append("\n"); 
		query.append("               AND ROWNUM  = 1) AS SEASON," ).append("\n"); 
		query.append("           SPC_GET_WK_VVD_BSA_FNC('VOL'    , MV.TRD_CD, MV.RLANE_CD, MV.DIR_CD, SUBSTR(MV.SLS_YRMON, 1, 4)||MV.COST_WK, MV.VSL_CD||MV.SKD_VOY_NO||MV.DIR_CD) AS BSA_VOL," ).append("\n"); 
		query.append("           -- 2014.09.22" ).append("\n"); 
		query.append("           NVL(DECODE(A.CTRL_ECC_FLG, 'Y', 'E', DECODE(A.CTRL_LOC_FLG, 'Y', 'L', 'N')), 'N') AS CTRL_DEST," ).append("\n"); 
		query.append("           NVL(A.CTRL_DEST_LVL_CD, 'N') AS CTRL_DEST_LVL  -- D = BKG_POD, T = BKG_DEL" ).append("\n"); 
		query.append("           , SUBSTR(MV.COST_YRMON, 1, 4) AS BSE_YR," ).append("\n"); 
		query.append("           , CASE WHEN MV.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("                  THEN CEIL(TO_NUMBER(SUBSTR(MV.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("                  ELSE CEIL(TO_NUMBER(DECODE(MV.COST_WK,'00','01','53','52',MV.COST_WK))/13)||'Q'" ).append("\n"); 
		query.append("              END BSE_QTR_CD --CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("      FROM MAS_MON_VVD       MV," ).append("\n"); 
		query.append("           PARAM             P ," ).append("\n"); 
		query.append("           SPC_HD_HUL_MST    Q , " ).append("\n"); 
		query.append("           -- 2014.09.22" ).append("\n"); 
		query.append("           SPC_ALOC_CTRL_OPT A" ).append("\n"); 
		query.append("     WHERE SUBSTR(MV.SLS_YRMON, 1, 4)||MV.COST_WK BETWEEN P.FM_YRWK AND P.TO_YRWK" ).append("\n"); 
		query.append("       AND MV.DELT_FLG     = 'N'" ).append("\n"); 
		query.append("       AND MV.TRD_CD       = P.TRD_CD" ).append("\n"); 
		query.append("       AND MV.SUB_TRD_CD   = P.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND Q.TRD_CD        = MV.TRD_CD" ).append("\n"); 
		query.append("       AND Q.RLANE_CD      = MV.RLANE_CD" ).append("\n"); 
		query.append("       AND Q.DIR_CD        = MV.DIR_CD" ).append("\n"); 
		query.append("       AND MV.VSL_CD       = SUBSTR(@[vvd],1,4)" ).append("\n"); 
		query.append("       AND MV.SKD_VOY_NO   = SUBSTR(@[vvd],5,4)" ).append("\n"); 
		query.append("       AND MV.DIR_CD       = SUBSTR(@[vvd],9)" ).append("\n"); 
		query.append("       AND A.RLANE_CD(+)   = MV.RLANE_CD" ).append("\n"); 
		query.append("       AND A.DIR_CD(+)     = MV.DIR_CD" ).append("\n"); 
		query.append("       AND A.VSL_CD(+)     = MV.VSL_CD" ).append("\n"); 
		query.append("       AND A.SKD_VOY_NO(+) = MV.SKD_VOY_NO " ).append("\n"); 
		query.append("       AND A.SKD_DIR_CD(+) = MV.DIR_CD " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", QTA_DATA AS (" ).append("\n"); 
		query.append("     SELECT V.FM_YRWK," ).append("\n"); 
		query.append("           V.TO_YRWK," ).append("\n"); 
		query.append("           V.COST_WK," ).append("\n"); 
		query.append("           V.TRD_CD," ).append("\n"); 
		query.append("           V.SUB_TRD_CD," ).append("\n"); 
		query.append("           MQ.RLANE_CD," ).append("\n"); 
		query.append("           MQ.DIR_CD," ).append("\n"); 
		query.append("           MQ.VSL_CD," ).append("\n"); 
		query.append("           MQ.SKD_VOY_NO," ).append("\n"); 
		query.append("           MQ.SKD_DIR_CD," ).append("\n"); 
		query.append("           'C' AS CUST_CTRL_CD," ).append("\n"); 
		query.append("           -- 2014.09.22" ).append("\n"); 
		query.append("           'OTHERS' AS DEST_LOC_CD," ).append("\n"); 
		query.append("           SUM(MQ.LOD_QTY) AS QTA_QTY " ).append("\n"); 
		query.append("      FROM SQM_CFM_QTA      MQ ," ).append("\n"); 
		query.append("           SQM_QTA_RLSE_VER MQR," ).append("\n"); 
		query.append("           VVDS             V" ).append("\n"); 
		query.append("     WHERE MQR.BSE_YR           = V.BSE_YR" ).append("\n"); 
		query.append("--       AND MQR.BSE_QTR_CD       = CEIL(TO_NUMBER(DECODE(V.COST_WK2,'00','01','53','52',V.COST_WK2))/13)||'Q'--CEIL(TO_NUMBER(V.COST_MON)/3)||'Q'" ).append("\n"); 
		query.append("       -- CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("	   AND MQR.BSE_QTR_CD       = v.BSE_QTR_CD" ).append("\n"); 
		query.append("       AND MQR.SQM_VER_STS_CD   = 'R'" ).append("\n"); 
		query.append("       AND MQR.BSE_TP_CD        = 'Q' --" ).append("\n"); 
		query.append("       AND MQ.QTA_RLSE_VER_NO   = MQR.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("       AND MQ.BSE_TP_CD         = MQR.BSE_TP_CD --" ).append("\n"); 
		query.append("       AND MQ.BSE_YR            = MQR.BSE_YR" ).append("\n"); 
		query.append("       AND MQ.BSE_QTR_CD        = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("       AND MQ.QTA_TGT_CD        = 'D'" ).append("\n"); 
		query.append("       AND MQ.OFC_VW_CD         = 'L'  --" ).append("\n"); 
		query.append("       AND MQ.TRD_CD            = V.TRD_CD" ).append("\n"); 
		query.append("       AND MQ.RLANE_CD          = V.RLANE_CD" ).append("\n"); 
		query.append("       AND MQ.DIR_CD            = V.DIR_CD" ).append("\n"); 
		query.append("       AND MQ.VSL_CD            = V.VSL_CD" ).append("\n"); 
		query.append("       AND MQ.SKD_VOY_NO        = V.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND MQ.SKD_DIR_CD        = V.DIR_CD" ).append("\n"); 
		query.append("     GROUP BY V.FM_YRWK," ).append("\n"); 
		query.append("              V.TO_YRWK," ).append("\n"); 
		query.append("              V.COST_WK," ).append("\n"); 
		query.append("              V.TRD_CD," ).append("\n"); 
		query.append("              V.SUB_TRD_CD," ).append("\n"); 
		query.append("              MQ.RLANE_CD," ).append("\n"); 
		query.append("              MQ.DIR_CD," ).append("\n"); 
		query.append("              MQ.VSL_CD," ).append("\n"); 
		query.append("              MQ.SKD_VOY_NO," ).append("\n"); 
		query.append("              MQ.SKD_DIR_CD" ).append("\n"); 
		query.append(")              " ).append("\n"); 
		query.append(", FCAST_DATA AS (" ).append("\n"); 
		query.append("    SELECT P.FM_YRWK," ).append("\n"); 
		query.append("           P.TO_YRWK," ).append("\n"); 
		query.append("           P.COST_WK," ).append("\n"); 
		query.append("           P.TRD_CD," ).append("\n"); 
		query.append("           P.SUB_TRD_CD," ).append("\n"); 
		query.append("           F.RLANE_CD," ).append("\n"); 
		query.append("           F.DIR_CD," ).append("\n"); 
		query.append("           F.VSL_CD," ).append("\n"); 
		query.append("           F.SKD_VOY_NO," ).append("\n"); 
		query.append("           F.SKD_DIR_CD," ).append("\n"); 
		query.append("           NVL(C.CUST_CTRL_CD, 'C') AS CUST_CTRL_CD," ).append("\n"); 
		query.append("           --2014.09.22" ).append("\n"); 
		query.append("           CASE WHEN P.CTRL_DEST <> 'N' THEN	                                                      " ).append("\n"); 
		query.append("                                       NVL((SELECT D.CTRL_LOC_ACCT_CD" ).append("\n"); 
		query.append("                                              FROM SPC_ALOC_LANE_CTRL_OPT_DTL D" ).append("\n"); 
		query.append("                                             WHERE P.RLANE_CD         = D.RLANE_CD" ).append("\n"); 
		query.append("                                               AND SPC_GET_REP_TRD_FNC(P.RLANE_CD)     = D.TRD_CD" ).append("\n"); 
		query.append("                                               AND SPC_GET_REP_SUB_TRD_FNC(P.RLANE_CD) = D.SUB_TRD_CD" ).append("\n"); 
		query.append("                                               AND P.DIR_CD       = D.DIR_CD " ).append("\n"); 
		query.append("                                               AND D.ALOC_CTRL_TP_CD  = P.CTRL_DEST" ).append("\n"); 
		query.append("                                               AND D.CTRL_LOC_ACCT_CD = DECODE(P.CTRL_DEST,'L',DECODE(P.CTRL_DEST_LVL,'T',F.DEST_LOC_CD,SUBSTR(F.POD_YD_CD, 1, 5)), 'E', " ).append("\n"); 
		query.append("                                                                                                                                 	  (SELECT A.ECC_CD" ).append("\n"); 
		query.append("                                                                                                                                         FROM MDM_EQ_ORZ_CHT A,  " ).append("\n"); 
		query.append("                                                                                                                                              MDM_LOCATION B " ).append("\n"); 
		query.append("                                                                                                                                        WHERE B.LOC_CD = DECODE(P.CTRL_DEST_LVL,'T',F.DEST_LOC_CD,SUBSTR(F.POD_YD_CD, 1, 5))" ).append("\n"); 
		query.append("                                                                                                                                          AND A.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("                                                                                                                                      ))" ).append("\n"); 
		query.append("                                            ),'OTHERS')" ).append("\n"); 
		query.append("                     ELSE" ).append("\n"); 
		query.append("                        'OTHERS'" ).append("\n"); 
		query.append("           END AS DEST_LOC_CD," ).append("\n"); 
		query.append("           (F.CFM_TTL_QTY + NVL(CFM_40FT_HC_QTY, 0) * 2 + NVL(CFM_45FT_HC_QTY, 0) * 2 + NVL(CFM_53FT_QTY, 0) * 2) AS FCAST_QTY" ).append("\n"); 
		query.append("--           SUM(F.CFM_TTL_QTY + NVL(CFM_40FT_HC_QTY, 0) * 2 + NVL(CFM_45FT_HC_QTY, 0) * 2 + NVL(CFM_53FT_QTY, 0) * 2) AS FCAST_QTY" ).append("\n"); 
		query.append("      FROM SPC_DLY_FCAST_CUST F," ).append("\n"); 
		query.append("           SPC_MDL_CUST_CTRL  C," ).append("\n"); 
		query.append("           VVDS               P" ).append("\n"); 
		query.append("     WHERE F.RLANE_CD       = P.RLANE_CD" ).append("\n"); 
		query.append("       AND F.TRD_CD         = P.TRD_CD" ).append("\n"); 
		query.append("       AND F.DIR_CD         = P.DIR_CD" ).append("\n"); 
		query.append("       AND F.VSL_CD         = P.VSL_CD" ).append("\n"); 
		query.append("       AND F.SKD_VOY_NO     = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND F.SKD_DIR_CD     = P.DIR_CD" ).append("\n"); 
		query.append("       AND SUBSTR(P.SEASON, 1, 6) = NVL(C.COST_YRWK, SUBSTR(P.SEASON, 1, 6))" ).append("\n"); 
		query.append("       AND SUBSTR(P.SEASON, 8)    = NVL(C.VER_SEQ,   SUBSTR(P.SEASON, 8))" ).append("\n"); 
		query.append("       AND F.TRD_CD         = C.TRD_CD(+)" ).append("\n"); 
		query.append("       AND F.CUST_CNT_CD    = C.CUST_CNT_CD(+)" ).append("\n"); 
		query.append("       AND F.CUST_SEQ       = C.CUST_SEQ(+)" ).append("\n"); 
		query.append("       AND NVL(F.SC_NO, NVL(F.RFA_NO, 'X')) = NVL(C.SC_NO(+), NVL(C.RFA_NO(+), 'X'))" ).append("\n"); 
		query.append("       --AND DECODE(F.TRD_CD, 'AES', NVL(F.RFA_NO, 'X'), NVL(F.SC_NO, 'X')) = DECODE(F.TRD_CD, 'AES', NVL(C.RFA_NO(+), 'X'), NVL(C.SC_NO(+), NVL(F.SC_NO, 'X')))" ).append("\n"); 
		query.append("       AND EXISTS (SELECT 'A'" ).append("\n"); 
		query.append("                     FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                    WHERE VSL_CD     = F.VSL_CD" ).append("\n"); 
		query.append("                      AND SKD_VOY_NO = F.SKD_VOY_NO" ).append("\n"); 
		query.append("                      AND SKD_DIR_CD = F.SKD_DIR_CD  " ).append("\n"); 
		query.append("                      AND 'S'        <> NVL(SKD_CNG_STS_CD, 'X')" ).append("\n"); 
		query.append("                      AND YD_CD      IN (F.POL_YD_CD, F.POD_YD_CD) )" ).append("\n"); 
		query.append("--     GROUP BY P.FM_YRWK," ).append("\n"); 
		query.append("--              P.TO_YRWK," ).append("\n"); 
		query.append("--              P.COST_WK," ).append("\n"); 
		query.append("--              P.TRD_CD," ).append("\n"); 
		query.append("--              P.SUB_TRD_CD," ).append("\n"); 
		query.append("--              F.RLANE_CD," ).append("\n"); 
		query.append("--              F.DIR_CD," ).append("\n"); 
		query.append("--              F.VSL_CD," ).append("\n"); 
		query.append("--              F.SKD_VOY_NO," ).append("\n"); 
		query.append("--              F.SKD_DIR_CD," ).append("\n"); 
		query.append("--              NVL(C.CUST_CTRL_CD, 'C')" ).append("\n"); 
		query.append(")    " ).append("\n"); 
		query.append(", ALOC_DATA AS (" ).append("\n"); 
		query.append("    SELECT P.FM_YRWK," ).append("\n"); 
		query.append("           P.TO_YRWK," ).append("\n"); 
		query.append("           P.COST_WK," ).append("\n"); 
		query.append("           P.TRD_CD," ).append("\n"); 
		query.append("           P.SUB_TRD_CD," ).append("\n"); 
		query.append("           A.RLANE_CD," ).append("\n"); 
		query.append("           A.DIR_CD, " ).append("\n"); 
		query.append("           A.VSL_CD," ).append("\n"); 
		query.append("           A.SKD_VOY_NO," ).append("\n"); 
		query.append("           A.SKD_DIR_CD," ).append("\n"); 
		query.append("           A.CUST_CTRL_CD, " ).append("\n"); 
		query.append("           DECODE(A.DEST_LOC_CD, 'XXXXX', 'OTHERS', A.DEST_LOC_CD) AS DEST_LOC_CD," ).append("\n"); 
		query.append("           SUM(A.ASGN_TTL_QTY + NVL(ASGN_40FT_HC_QTY, 0) * 2 + NVL(ASGN_45FT_HC_QTY, 0) * 2 + NVL(ASGN_53FT_QTY, 0) * 2) AS ALOC_QTY" ).append("\n"); 
		query.append("      FROM SPC_ALOC_CUST_POL_POD A," ).append("\n"); 
		query.append("           VVDS                  P" ).append("\n"); 
		query.append("     WHERE A.RLANE_CD       = P.RLANE_CD" ).append("\n"); 
		query.append("       AND A.DIR_CD         = P.DIR_CD" ).append("\n"); 
		query.append("       AND A.VSL_CD         = P.VSL_CD" ).append("\n"); 
		query.append("       AND A.SKD_VOY_NO     = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND A.SKD_DIR_CD     = P.DIR_CD" ).append("\n"); 
		query.append("       AND A.TRD_CD         = P.TRD_CD" ).append("\n"); 
		query.append("       AND A.SUB_TRD_CD     = P.SUB_TRD_CD" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       AND EXISTS (SELECT 'A'" ).append("\n"); 
		query.append("                     FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                    WHERE VSL_CD     = A.VSL_CD" ).append("\n"); 
		query.append("                      AND SKD_VOY_NO = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                      AND SKD_DIR_CD = A.SKD_DIR_CD  " ).append("\n"); 
		query.append("                      AND 'S'        <> NVL(SKD_CNG_STS_CD, 'X')" ).append("\n"); 
		query.append("                      AND YD_CD      IN (A.POL_YD_CD, A.POD_YD_CD) )" ).append("\n"); 
		query.append("     GROUP BY P.FM_YRWK," ).append("\n"); 
		query.append("              P.TO_YRWK," ).append("\n"); 
		query.append("              P.COST_WK," ).append("\n"); 
		query.append("              P.TRD_CD," ).append("\n"); 
		query.append("              P.SUB_TRD_CD," ).append("\n"); 
		query.append("              A.RLANE_CD," ).append("\n"); 
		query.append("              A.DIR_CD, " ).append("\n"); 
		query.append("              A.VSL_CD," ).append("\n"); 
		query.append("              A.SKD_VOY_NO," ).append("\n"); 
		query.append("              A.SKD_DIR_CD," ).append("\n"); 
		query.append("              A.CUST_CTRL_CD," ).append("\n"); 
		query.append("              DECODE(A.DEST_LOC_CD, 'XXXXX', 'OTHERS', A.DEST_LOC_CD)" ).append("\n"); 
		query.append(")       " ).append("\n"); 
		query.append(", BKG_BOOKING_TMP AS (" ).append("\n"); 
		query.append("    SELECT B.*, A.SEASON, A.TRD_CD" ).append("\n"); 
		query.append("      FROM BKG_BOOKING B, VVDS A" ).append("\n"); 
		query.append("     WHERE 1=1" ).append("\n"); 
		query.append("       AND A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("       AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND A.DIR_CD     = B.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT FM_YRWK   ," ).append("\n"); 
		query.append("           TO_YRWK   ," ).append("\n"); 
		query.append("           COST_WK   ," ).append("\n"); 
		query.append("           TRD_CD    ," ).append("\n"); 
		query.append("           SUB_TRD_CD," ).append("\n"); 
		query.append("           RLANE_CD  ," ).append("\n"); 
		query.append("           DIR_CD    ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           CUST_CTRL_CD," ).append("\n"); 
		query.append("           DEST_LOC_CD," ).append("\n"); 
		query.append("           SUM(BKG_QTY) AS BKG_QTY " ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT /*+ORDERED*/" ).append("\n"); 
		query.append("                   A.FM_YRWK   ," ).append("\n"); 
		query.append("                   A.TO_YRWK   ," ).append("\n"); 
		query.append("                   A.COST_WK   ," ).append("\n"); 
		query.append("                   A.TRD_CD    ," ).append("\n"); 
		query.append("                   A.SUB_TRD_CD," ).append("\n"); 
		query.append("                   A.RLANE_CD  ," ).append("\n"); 
		query.append("                   A.DIR_CD    ," ).append("\n"); 
		query.append("                   BV.VSL_CD    ," ).append("\n"); 
		query.append("                   BV.SKD_VOY_NO," ).append("\n"); 
		query.append("                   BV.SKD_DIR_CD," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   --20140304 추가" ).append("\n"); 
		query.append("                   CASE WHEN A.TRD_CD = 'AES' AND DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO) IS NULL AND BC.CUST_CNT_CD = 'CN' AND B.SC_NO IS NULL THEN" ).append("\n"); 
		query.append("                          NVL(SPC_GET_SMP_RFA_FNC('C',A.SEASON,  BC.CUST_CNT_CD||LPAD(BC.CUST_SEQ,6,'0'), B.POL_CD,B.POD_CD),'C')" ).append("\n"); 
		query.append("                         " ).append("\n"); 
		query.append("                   ELSE   " ).append("\n"); 
		query.append("                          NVL(C.CUST_CTRL_CD, 'C')" ).append("\n"); 
		query.append("                   END AS CUST_CTRL_CD, " ).append("\n"); 
		query.append("                   CASE WHEN A.CTRL_DEST <> 'N' THEN	                                                      " ).append("\n"); 
		query.append("                                            NVL((SELECT D.CTRL_LOC_ACCT_CD" ).append("\n"); 
		query.append("                                                   FROM SPC_ALOC_LANE_CTRL_OPT_DTL D" ).append("\n"); 
		query.append("                                                  WHERE A.RLANE_CD         = D.RLANE_CD" ).append("\n"); 
		query.append("                                                    AND SPC_GET_REP_TRD_FNC(A.RLANE_CD)     = D.TRD_CD" ).append("\n"); 
		query.append("                                                    AND SPC_GET_REP_SUB_TRD_FNC(A.RLANE_CD) = D.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                    AND A.DIR_CD       = D.DIR_CD " ).append("\n"); 
		query.append("                                                    AND D.ALOC_CTRL_TP_CD  = A.CTRL_DEST" ).append("\n"); 
		query.append("                                                    AND D.CTRL_LOC_ACCT_CD = DECODE(A.CTRL_DEST,'L',DECODE(A.CTRL_DEST_LVL,'T',B.DEL_CD,B.POD_CD), 'E', " ).append("\n"); 
		query.append("                                                                                                                                 	  (SELECT A.ECC_CD" ).append("\n"); 
		query.append("                                                                                                                                         FROM MDM_EQ_ORZ_CHT A,  " ).append("\n"); 
		query.append("                                                                                                                                              MDM_LOCATION C " ).append("\n"); 
		query.append("                                                                                                                                        WHERE C.LOC_CD = DECODE(A.CTRL_DEST_LVL,'T',B.DEL_CD,B.POD_CD)" ).append("\n"); 
		query.append("                                                                                                                                          AND A.SCC_CD = C.SCC_CD" ).append("\n"); 
		query.append("                                                                                                                                      ))" ).append("\n"); 
		query.append("                                                ),'OTHERS')" ).append("\n"); 
		query.append("                                          ELSE" ).append("\n"); 
		query.append("                                            'OTHERS'" ).append("\n"); 
		query.append("                   END AS DEST_LOC_CD," ).append("\n"); 
		query.append("                   NVL((SELECT SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD,2), '2', 1, 2) * Q.OP_CNTR_QTY)" ).append("\n"); 
		query.append("                          FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                         WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                   ),0) AS BKG_QTY " ).append("\n"); 
		query.append("              FROM VVDS               A  ," ).append("\n"); 
		query.append("                   BKG_BOOKING_TMP    B  ," ).append("\n"); 
		query.append("                   BKG_VVD            BV ," ).append("\n"); 
		query.append("                   MDM_DTL_REV_LANE   DRL," ).append("\n"); 
		query.append("                   SPC_MDL_CUST_CTRL  C  ," ).append("\n"); 
		query.append("                   BKG_CUSTOMER       BC  --20140304 추가" ).append("\n"); 
		query.append("             WHERE B.BKG_STS_CD       IN ('W','F')" ).append("\n"); 
		query.append("               AND B.BKG_CGO_TP_CD    IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("               AND B.BKG_NO            = BV.BKG_NO" ).append("\n"); 
		query.append("               AND A.VSL_CD            = B.VSL_CD" ).append("\n"); 
		query.append("               AND A.SKD_VOY_NO        = B.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND A.DIR_CD            = B.SKD_DIR_CD" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("               AND A.VSL_CD            = BV.VSL_CD" ).append("\n"); 
		query.append("               AND A.SKD_VOY_NO        = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND A.DIR_CD            = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("               AND DRL.RLANE_CD        = A.RLANE_CD" ).append("\n"); 
		query.append("               AND DRL.VSL_SLAN_DIR_CD = A.DIR_CD" ).append("\n"); 
		query.append("               AND DRL.TRD_CD          = A.TRD_CD" ).append("\n"); 
		query.append("               AND DRL.SUB_TRD_CD      = A.SUB_TRD_CD" ).append("\n"); 
		query.append("               AND DRL.DELT_FLG        = 'N'" ).append("\n"); 
		query.append("               AND DRL.FM_CONTI_CD     = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)" ).append("\n"); 
		query.append("                                            FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                                           WHERE L.LOC_CD = BV.POL_CD )" ).append("\n"); 
		query.append("               AND DRL.TO_CONTI_CD     = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)" ).append("\n"); 
		query.append("                                            FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                                           WHERE L.LOC_CD = BV.POD_CD )" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("               AND SUBSTR(B.SEASON, 1, 6) = C.COST_YRWK(+)" ).append("\n"); 
		query.append("               AND SUBSTR(B.SEASON, 8)    = C.VER_SEQ(+)" ).append("\n"); 
		query.append("               AND B.TRD_CD               = C.TRD_CD(+)" ).append("\n"); 
		query.append("               AND B.CTRT_CUST_CNT_CD     = C.CUST_CNT_CD(+)" ).append("\n"); 
		query.append("               AND B.CTRT_CUST_SEQ        = C.CUST_SEQ(+)" ).append("\n"); 
		query.append("               AND NVL(SPC_GET_SMP_AMEND_FNC(B.TRD_CD, SUBSTR(B.SEASON, 1, 6), SUBSTR(B.SEASON, 8), B.SC_NO), NVL(SPC_GET_SMP_AMEND_FNC(B.TRD_CD, SUBSTR(B.SEASON, 1, 6), SUBSTR(B.SEASON, 8), DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO)), 'X')) = NVL(C.SC_NO(+), NVL(C.RFA_NO(+), 'X'))" ).append("\n"); 
		query.append("               --AND DECODE(B.TRD_CD, 'AES', NVL(SPC_GET_SMP_AMEND_FNC(B.TRD_CD, SUBSTR(B.SEASON, 1, 6), SUBSTR(B.SEASON, 8), DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO)), 'X'), NVL(SPC_GET_SMP_AMEND_FNC(B.TRD_CD, SUBSTR(B.SEASON, 1, 6), SUBSTR(B.SEASON, 8), B.SC_NO), 'X')) = DECODE(B.TRD_CD, 'AES', NVL(C.RFA_NO(+), 'X'), NVL(C.SC_NO(+), NVL(SPC_GET_SMP_AMEND_FNC(B.TRD_CD, SUBSTR(B.SEASON, 1, 6), SUBSTR(B.SEASON, 8), B.SC_NO), 'X')))" ).append("\n"); 
		query.append("               AND B.BKG_NO           = BC.BKG_NO  --20140304 추가" ).append("\n"); 
		query.append("               AND BC.BKG_CUST_TP_CD  = 'S'        --20140304 추가" ).append("\n"); 
		query.append("               AND EXISTS (SELECT 'A'" ).append("\n"); 
		query.append("                             FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                            WHERE VSL_CD     = A.VSL_CD" ).append("\n"); 
		query.append("                              AND SKD_VOY_NO = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                              AND SKD_DIR_CD = A.DIR_CD  " ).append("\n"); 
		query.append("                              AND 'S'        <> NVL(SKD_CNG_STS_CD, 'X')" ).append("\n"); 
		query.append("                              AND YD_CD      IN (BV.POL_YD_CD, BV.POD_YD_CD) )" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("     GROUP BY FM_YRWK   ," ).append("\n"); 
		query.append("           TO_YRWK   ," ).append("\n"); 
		query.append("           COST_WK   ," ).append("\n"); 
		query.append("           TRD_CD    ," ).append("\n"); 
		query.append("           SUB_TRD_CD," ).append("\n"); 
		query.append("           RLANE_CD  ," ).append("\n"); 
		query.append("           DIR_CD    ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           CUST_CTRL_CD," ).append("\n"); 
		query.append("           DEST_LOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", MDL_DATA AS (" ).append("\n"); 
		query.append("    SELECT P.FM_YRWK," ).append("\n"); 
		query.append("           P.TO_YRWK," ).append("\n"); 
		query.append("           P.COST_WK," ).append("\n"); 
		query.append("           P.TRD_CD," ).append("\n"); 
		query.append("           P.SUB_TRD_CD," ).append("\n"); 
		query.append("           P.RLANE_CD," ).append("\n"); 
		query.append("           P.DIR_CD," ).append("\n"); 
		query.append("           P.VSL_CD," ).append("\n"); 
		query.append("           P.SKD_VOY_NO," ).append("\n"); 
		query.append("           P.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           M.CUST_CTRL_CD," ).append("\n"); 
		query.append("           'OTHERS' AS DEST_LOC_CD," ).append("\n"); 
		query.append("           SUM(M.RLANE_ADJ_QTY) AS MDL_QTY" ).append("\n"); 
		query.append("      FROM SPC_MDL_CUST_REV_LANE M," ).append("\n"); 
		query.append("           VVDS                  P" ).append("\n"); 
		query.append("     WHERE M.COST_YRWK      = SUBSTR(P.SEASON, 1, 6)" ).append("\n"); 
		query.append("       AND M.VER_SEQ        = SUBSTR(P.SEASON, 8)" ).append("\n"); 
		query.append("       AND M.TRD_CD         = P.TRD_CD" ).append("\n"); 
		query.append("       AND M.SUB_TRD_CD     = P.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND M.RLANE_CD       = P.RLANE_CD" ).append("\n"); 
		query.append("     GROUP BY P.FM_YRWK," ).append("\n"); 
		query.append("              P.TO_YRWK," ).append("\n"); 
		query.append("              P.COST_WK," ).append("\n"); 
		query.append("              P.TRD_CD," ).append("\n"); 
		query.append("              P.SUB_TRD_CD," ).append("\n"); 
		query.append("              P.RLANE_CD," ).append("\n"); 
		query.append("              P.DIR_CD," ).append("\n"); 
		query.append("              P.VSL_CD," ).append("\n"); 
		query.append("              P.SKD_VOY_NO," ).append("\n"); 
		query.append("              P.DIR_CD," ).append("\n"); 
		query.append("              M.CUST_CTRL_CD" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("SELECT TRD_CD," ).append("\n"); 
		query.append("       SUB_TRD_CD," ).append("\n"); 
		query.append("       RLANE_CD," ).append("\n"); 
		query.append("       DIR_CD," ).append("\n"); 
		query.append("       DECODE(RLANE_CD, 'TTL', 'ALL', VSL_CD||SKD_VOY_NO||SKD_DIR_CD) AS VVD," ).append("\n"); 
		query.append("       BSA," ).append("\n"); 
		query.append("       VSL_CD," ).append("\n"); 
		query.append("       SKD_VOY_NO," ).append("\n"); 
		query.append("       SKD_DIR_CD," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("       CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("       DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       MDL_QTY," ).append("\n"); 
		query.append("       MDL_RTO||'%' AS MDL_RTO," ).append("\n"); 
		query.append("       FCAST_QTY," ).append("\n"); 
		query.append("       FCAST_DIFF," ).append("\n"); 
		query.append("       FCAST_RTO||'%' AS FCAST_RTO," ).append("\n"); 
		query.append("       (FCAST_RTO - MDL_RTO)||'%' AS FCAST_RTO_DIFF," ).append("\n"); 
		query.append("       ALOC_QTY," ).append("\n"); 
		query.append("       ALOC_DIFF," ).append("\n"); 
		query.append("       ALOC_RTO||'%' AS ALOC_RTO," ).append("\n"); 
		query.append("       (ALOC_RTO - MDL_RTO)||'%' AS ALOC_RTO_DIFF," ).append("\n"); 
		query.append("       BKG_QTY," ).append("\n"); 
		query.append("       BKG_DIFF," ).append("\n"); 
		query.append("       BKG_RTO||'%' AS BKG_RTO," ).append("\n"); 
		query.append("       (BKG_RTO - MDL_RTO)||'%' AS BKG_RTO_DIFF" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("        SELECT TRD_CD," ).append("\n"); 
		query.append("               SUB_TRD_CD," ).append("\n"); 
		query.append("               RLANE_CD," ).append("\n"); 
		query.append("               DIR_CD," ).append("\n"); 
		query.append("               VSL_CD," ).append("\n"); 
		query.append("               SKD_VOY_NO," ).append("\n"); 
		query.append("               SKD_DIR_CD," ).append("\n"); 
		query.append("               BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("               CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("               DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("               MDL_QTY," ).append("\n"); 
		query.append("               DECODE(MDL_TTL, 0, 0, ROUND(MDL_QTY / MDL_TTL, 2)) * 100 AS MDL_RTO," ).append("\n"); 
		query.append("               FCAST_QTY," ).append("\n"); 
		query.append("               FCAST_DIFF," ).append("\n"); 
		query.append("               DECODE(FCAST_TTL, 0, 0, ROUND(FCAST_QTY / FCAST_TTL, 2)) * 100 AS FCAST_RTO," ).append("\n"); 
		query.append("               ALOC_QTY," ).append("\n"); 
		query.append("               ALOC_DIFF," ).append("\n"); 
		query.append("               DECODE(ALOC_TTL, 0, 0, ROUND(ALOC_QTY / ALOC_TTL, 2)) * 100 AS ALOC_RTO," ).append("\n"); 
		query.append("               BKG_QTY," ).append("\n"); 
		query.append("               BKG_DIFF," ).append("\n"); 
		query.append("               DECODE(BKG_TTL, 0, 0, ROUND(BKG_QTY / BKG_TTL, 2)) * 100 AS BKG_RTO" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT TRD_CD," ).append("\n"); 
		query.append("                       SUB_TRD_CD," ).append("\n"); 
		query.append("                       RLANE_CD," ).append("\n"); 
		query.append("                       DIR_CD," ).append("\n"); 
		query.append("                       VSL_CD," ).append("\n"); 
		query.append("                       SKD_VOY_NO," ).append("\n"); 
		query.append("                       SKD_DIR_CD," ).append("\n"); 
		query.append("                       BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                       CUST_CTRL_CD," ).append("\n"); 
		query.append("                       DECODE(CUST_CTRL_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY)) AS MDL_QTY," ).append("\n"); 
		query.append("                       MAX(QTA_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS MDL_TTL," ).append("\n"); 
		query.append("                       FCAST_QTY," ).append("\n"); 
		query.append("                       (FCAST_QTY - DECODE(CUST_CTRL_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY))) AS FCAST_DIFF," ).append("\n"); 
		query.append("                       MAX(FCAST_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS FCAST_TTL," ).append("\n"); 
		query.append("                       ALOC_QTY," ).append("\n"); 
		query.append("                       (ALOC_QTY - DECODE(CUST_CTRL_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY))) AS ALOC_DIFF," ).append("\n"); 
		query.append("                       MAX(ALOC_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS ALOC_TTL," ).append("\n"); 
		query.append("                       BKG_QTY," ).append("\n"); 
		query.append("                       (BKG_QTY - DECODE(CUST_CTRL_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY))) AS BKG_DIFF," ).append("\n"); 
		query.append("                       MAX(BKG_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS BKG_TTL" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("               	       DEST_LOC_CD," ).append("\n"); 
		query.append("               	       DECODE(DEST_LOC_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY)) AS MDL_QTY," ).append("\n"); 
		query.append("                       MAX(QTA_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS MDL_TTL," ).append("\n"); 
		query.append("                       FCAST_QTY," ).append("\n"); 
		query.append("                       (FCAST_QTY - DECODE(DEST_LOC_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY))) AS FCAST_DIFF," ).append("\n"); 
		query.append("                       MAX(FCAST_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS FCAST_TTL," ).append("\n"); 
		query.append("                       ALOC_QTY," ).append("\n"); 
		query.append("                       (ALOC_QTY - DECODE(DEST_LOC_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY))) AS ALOC_DIFF," ).append("\n"); 
		query.append("                       MAX(ALOC_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS ALOC_TTL," ).append("\n"); 
		query.append("                       BKG_QTY," ).append("\n"); 
		query.append("                       (BKG_QTY - DECODE(DEST_LOC_CD, 'TOTAL', QTA_QTY, DECODE(SIGN(MDL_QTY), -1, 0, MDL_QTY))) AS BKG_DIFF," ).append("\n"); 
		query.append("                       MAX(BKG_QTY) OVER (PARTITION BY TRD_CD, SUB_TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD) AS BKG_TTL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                  FROM (" ).append("\n"); 
		query.append("                        SELECT M.TRD_CD," ).append("\n"); 
		query.append("                               M.SUB_TRD_CD," ).append("\n"); 
		query.append("                               NVL(M.RLANE_CD, 'TTL') AS RLANE_CD," ).append("\n"); 
		query.append("                               M.DIR_CD," ).append("\n"); 
		query.append("                               M.VSL_CD," ).append("\n"); 
		query.append("                               M.SKD_VOY_NO," ).append("\n"); 
		query.append("                               M.SKD_DIR_CD," ).append("\n"); 
		query.append("                               V.BSA_VOL AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                               NVL(CUST_CTRL_CD, 'TOTAL') AS CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("			       NVL(DEST_LOC_CD, 'TOTAL') AS DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                               SUM(QTA_QTY)   AS QTA_QTY," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                               DECODE(CUST_CTRL_CD, 'C', SUM(QTA_QTY) - SUM(MDL_QTY), SUM(MDL_QTY))   AS MDL_QTY," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                               DECODE(DEST_LOC_CD, 'OTHERS', SUM(QTA_QTY), 0)   AS MDL_QTY," ).append("\n"); 
		query.append("#end                               " ).append("\n"); 
		query.append("                               SUM(FCAST_QTY) AS FCAST_QTY," ).append("\n"); 
		query.append("                               SUM(ALOC_QTY)  AS ALOC_QTY," ).append("\n"); 
		query.append("                               floor(SUM(BKG_QTY))   AS BKG_QTY--0042화면 내에서 integer처리하므로" ).append("\n"); 
		query.append("                          FROM (" ).append("\n"); 
		query.append("                                SELECT TRD_CD," ).append("\n"); 
		query.append("                                       SUB_TRD_CD," ).append("\n"); 
		query.append("                                       RLANE_CD," ).append("\n"); 
		query.append("                                       DIR_CD," ).append("\n"); 
		query.append("                                       VSL_CD," ).append("\n"); 
		query.append("                                       SKD_VOY_NO," ).append("\n"); 
		query.append("                                       SKD_DIR_CD," ).append("\n"); 
		query.append("                                       0 AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                                       CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       QTA_QTY," ).append("\n"); 
		query.append("                                       0 AS FCAST_QTY," ).append("\n"); 
		query.append("                                       0 AS ALOC_QTY," ).append("\n"); 
		query.append("                                       0 AS BKG_QTY," ).append("\n"); 
		query.append("                                       0 AS MDL_QTY" ).append("\n"); 
		query.append("                                  FROM QTA_DATA" ).append("\n"); 
		query.append("                                 WHERE TO_YRWK = COST_WK " ).append("\n"); 
		query.append("                                 UNION ALL" ).append("\n"); 
		query.append("                                SELECT TRD_CD," ).append("\n"); 
		query.append("                                       SUB_TRD_CD," ).append("\n"); 
		query.append("                                       RLANE_CD," ).append("\n"); 
		query.append("                                       DIR_CD," ).append("\n"); 
		query.append("                                       VSL_CD," ).append("\n"); 
		query.append("                                       SKD_VOY_NO," ).append("\n"); 
		query.append("                                       SKD_DIR_CD," ).append("\n"); 
		query.append("                                       0 AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                                       CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       0 AS QTA_QTY," ).append("\n"); 
		query.append("                                       FCAST_QTY," ).append("\n"); 
		query.append("                                       0 AS ALOC_QTY," ).append("\n"); 
		query.append("                                       0 AS BKG_QTY," ).append("\n"); 
		query.append("                                       0 AS MDL_QTY" ).append("\n"); 
		query.append("                                  FROM FCAST_DATA" ).append("\n"); 
		query.append("                                 WHERE TO_YRWK = COST_WK" ).append("\n"); 
		query.append("                                 UNION ALL" ).append("\n"); 
		query.append("                                SELECT TRD_CD," ).append("\n"); 
		query.append("                                       SUB_TRD_CD," ).append("\n"); 
		query.append("                                       RLANE_CD," ).append("\n"); 
		query.append("                                       DIR_CD," ).append("\n"); 
		query.append("                                       VSL_CD," ).append("\n"); 
		query.append("                                       SKD_VOY_NO," ).append("\n"); 
		query.append("                                       SKD_DIR_CD," ).append("\n"); 
		query.append("                                       0 AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                                       CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       0 AS QTA_QTY," ).append("\n"); 
		query.append("                                       0 AS FCAST_QTY," ).append("\n"); 
		query.append("                                       ALOC_QTY," ).append("\n"); 
		query.append("                                       0 AS BKG_QTY," ).append("\n"); 
		query.append("                                       0 AS MDL_QTY" ).append("\n"); 
		query.append("                                  FROM ALOC_DATA" ).append("\n"); 
		query.append("                                 WHERE TO_YRWK = COST_WK" ).append("\n"); 
		query.append("                                 UNION ALL" ).append("\n"); 
		query.append("                                SELECT TRD_CD," ).append("\n"); 
		query.append("                                       SUB_TRD_CD," ).append("\n"); 
		query.append("                                       RLANE_CD," ).append("\n"); 
		query.append("                                       DIR_CD," ).append("\n"); 
		query.append("                                       VSL_CD," ).append("\n"); 
		query.append("                                       SKD_VOY_NO," ).append("\n"); 
		query.append("                                       SKD_DIR_CD," ).append("\n"); 
		query.append("                                       0 AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                                       CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       0 AS QTA_QTY," ).append("\n"); 
		query.append("                                       0 AS FCAST_QTY," ).append("\n"); 
		query.append("                                       0 AS ALOC_QTY," ).append("\n"); 
		query.append("                                       BKG_QTY," ).append("\n"); 
		query.append("                                       0 AS MDL_QTY" ).append("\n"); 
		query.append("                                  FROM BKG_DATA M" ).append("\n"); 
		query.append("                                 WHERE TO_YRWK = COST_WK" ).append("\n"); 
		query.append("                                 UNION ALL" ).append("\n"); 
		query.append("                                SELECT TRD_CD," ).append("\n"); 
		query.append("                                       SUB_TRD_CD," ).append("\n"); 
		query.append("                                       RLANE_CD," ).append("\n"); 
		query.append("                                       DIR_CD," ).append("\n"); 
		query.append("                                       VSL_CD," ).append("\n"); 
		query.append("                                       SKD_VOY_NO," ).append("\n"); 
		query.append("                                       SKD_DIR_CD," ).append("\n"); 
		query.append("                                       0 AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                                       CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       0 AS QTA_QTY," ).append("\n"); 
		query.append("                                       0 AS FCAST_QTY," ).append("\n"); 
		query.append("                                       0 AS ALOC_QTY," ).append("\n"); 
		query.append("                                       0 AS BKG_QTY," ).append("\n"); 
		query.append("                                       MDL_QTY" ).append("\n"); 
		query.append("                                  FROM MDL_DATA M" ).append("\n"); 
		query.append("                                 WHERE TO_YRWK = COST_WK" ).append("\n"); 
		query.append("                                 UNION ALL" ).append("\n"); 
		query.append("                                SELECT TRD_CD," ).append("\n"); 
		query.append("                                       SUB_TRD_CD," ).append("\n"); 
		query.append("                                       RLANE_CD," ).append("\n"); 
		query.append("                                       DIR_CD," ).append("\n"); 
		query.append("                                       VSL_CD," ).append("\n"); 
		query.append("                                       SKD_VOY_NO," ).append("\n"); 
		query.append("                                       SKD_DIR_CD," ).append("\n"); 
		query.append("                                       0 AS BSA," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("                                       'C' CUST_CTRL_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       'OTHERS'  AS DEST_LOC_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                       0 AS QTA_QTY," ).append("\n"); 
		query.append("                                       0 AS FCAST_QTY," ).append("\n"); 
		query.append("                                       0 AS ALOC_QTY," ).append("\n"); 
		query.append("                                       0 AS BKG_QTY," ).append("\n"); 
		query.append("                                       SUM(MDL_QTY) AS MDL_QTY" ).append("\n"); 
		query.append("                                  FROM MDL_DATA M" ).append("\n"); 
		query.append("                                 WHERE TO_YRWK = COST_WK" ).append("\n"); 
		query.append("                                 GROUP BY TRD_CD," ).append("\n"); 
		query.append("                                          SUB_TRD_CD," ).append("\n"); 
		query.append("                                          RLANE_CD," ).append("\n"); 
		query.append("                                          DIR_CD," ).append("\n"); 
		query.append("                                          VSL_CD," ).append("\n"); 
		query.append("                                          SKD_VOY_NO," ).append("\n"); 
		query.append("                                          SKD_DIR_CD," ).append("\n"); 
		query.append("#if (${type} == 'Y')" ).append("\n"); 
		query.append("					  CUST_CTRL_CD" ).append("\n"); 
		query.append("#else					" ).append("\n"); 
		query.append("					  DEST_LOC_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                            ) M," ).append("\n"); 
		query.append("                              VVDS V" ).append("\n"); 
		query.append("                         WHERE M.TRD_CD = V.TRD_CD" ).append("\n"); 
		query.append("                           AND M.SUB_TRD_CD = V.SUB_TRD_CD" ).append("\n"); 
		query.append("                           AND M.RLANE_CD = V.RLANE_CD" ).append("\n"); 
		query.append("                           AND M.DIR_CD = V.DIR_CD" ).append("\n"); 
		query.append("                           AND M.VSL_CD = V.VSL_CD" ).append("\n"); 
		query.append("                           AND M.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND M.SKD_DIR_CD = V.DIR_CD" ).append("\n"); 
		query.append("                         GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                          #if (${type} == 'Y')" ).append("\n"); 
		query.append("                                                    (M.TRD_CD, M.SUB_TRD_CD, M.RLANE_CD, M.DIR_CD, M.VSL_CD, M.SKD_VOY_NO, M.SKD_DIR_CD, V.BSA_VOL, M.CUST_CTRL_CD)," ).append("\n"); 
		query.append("                          #else" ).append("\n"); 
		query.append("                                                    (M.TRD_CD, M.SUB_TRD_CD, M.RLANE_CD, M.DIR_CD, M.VSL_CD, M.SKD_VOY_NO, M.SKD_DIR_CD, V.BSA_VOL, M.DEST_LOC_CD)," ).append("\n"); 
		query.append("                          #end" ).append("\n"); 
		query.append("                                                    (M.TRD_CD, M.SUB_TRD_CD, M.RLANE_CD, M.DIR_CD, M.VSL_CD, M.SKD_VOY_NO, M.SKD_DIR_CD, V.BSA_VOL)" ).append("\n"); 
		query.append("                                                )" ).append("\n"); 
		query.append("                        ) " ).append("\n"); 
		query.append("                   WHERE (QTA_QTY <> 0 OR MDL_QTY <> 0 OR FCAST_QTY <> 0 OR ALOC_QTY <> 0 OR BKG_QTY <> 0)    " ).append("\n"); 
		query.append("                  )" ).append("\n"); 
		query.append("          )                                 " ).append("\n"); 
		query.append(" ORDER BY RLANE_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD " ).append("\n"); 
		query.append(" #if (${type} == 'Y')" ).append("\n"); 
		query.append(" 		,DECODE(CUST_CTRL_CD, 'TOTAL', '0', CUST_CTRL_CD)" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("		,DECODE(DEST_LOC_CD, 'TOTAL', '0', 'OTHERS', 'XXXXX', DEST_LOC_CD)" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}