/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAO021FcastPortViewListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.08.29
*@LastModifier : 
*@LastVersion : 1.0
* 2016.08.29 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAO021FcastPortViewListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchSpaceControlInquiry021FcastPortViewList
	  * 2014.06.17 신자영 [CHM-201430603] FCST comparison 메뉴 일부 개선 요청 - Lane, VVD 추가
	  * 2015.03.03 CHM-201534458 SQM QTA주가 변경 관련 적용 요청
	  * 2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
	  * 2015.12.03 이혜민 [CHM-201538975] VVOBA Office 관련 수정
	  * 2016.05.27 이혜민 SELSC, TYOSC RHQ 독립분리
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAO021FcastPortViewListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("area",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sales_office",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rhq2",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration2_from",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade1",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade2",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAO021FcastPortViewListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VVDS AS (" ).append("\n"); 
		query.append("    SELECT M.TRD_CD    ," ).append("\n"); 
		query.append("           M.SUB_TRD_CD, " ).append("\n"); 
		query.append("           M.RLANE_CD  ," ).append("\n"); 
		query.append("           M.DIR_CD    ," ).append("\n"); 
		query.append("           M.IOC_CD    ," ).append("\n"); 
		query.append("           W.COST_YR   ," ).append("\n"); 
		query.append("           SUBSTR(M.SLS_YRMON, 5) AS COST_MON," ).append("\n"); 
		query.append("           M.COST_WK   ," ).append("\n"); 
		query.append("           W.NUM       ," ).append("\n"); 
		query.append("           M.VSL_CD    ," ).append("\n"); 
		query.append("           M.SKD_VOY_NO," ).append("\n"); 
		query.append("           M.DIR_CD AS SKD_DIR_CD," ).append("\n"); 
		query.append("           C.RHQ_CD," ).append("\n"); 
		query.append("           @[area] AS AQ_CD  ," ).append("\n"); 
		query.append("           @[sales_office] AS OFC_CD ," ).append("\n"); 
		query.append("           @[pol_cd]       AS PORT_CD," ).append("\n"); 
		query.append("           SPC_GET_WK_VVD_BSA_FNC('VOL', M.TRD_CD, M.RLANE_CD, M.DIR_CD, SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK, M.VSL_CD||M.SKD_VOY_NO||M.DIR_CD) AS BSA," ).append("\n"); 
		query.append("		   DECODE(H.DIR_CD, NULL, 'N', 'Y') AS HH_FLG" ).append("\n"); 
		query.append("		   , CASE WHEN M.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("                  THEN CEIL(TO_NUMBER(SUBSTR(M.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("                  ELSE CEIL(TO_NUMBER(DECODE(M.COST_WK,'00','01','53','52',M.COST_WK))/13)||'Q'" ).append("\n"); 
		query.append("             END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("         , SUBSTR(M.COST_YRMON, 1,4) AS BSE_YR" ).append("\n"); 
		query.append("      FROM MAS_MON_VVD M, SPC_HD_HUL_MST H," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("              SELECT /*+ INDEX(P XPKMAS_WK_PRD) */" ).append("\n"); 
		query.append("                     P.COST_YR ," ).append("\n"); 
		query.append("                     P.COST_WK ," ).append("\n"); 
		query.append("                     ROWNUM AS NUM" ).append("\n"); 
		query.append("                FROM MAS_WK_PRD P" ).append("\n"); 
		query.append("               WHERE P.COST_YR||P.COST_WK >= @[year]||@[week]" ).append("\n"); 
		query.append("                 AND ROWNUM               <= @[duration]" ).append("\n"); 
		query.append("           ) W," ).append("\n"); 
		query.append("          (" ).append("\n"); 
		query.append("            SELECT DISTINCT" ).append("\n"); 
		query.append("                SUBSTR(AA," ).append("\n"); 
		query.append("                INSTR(AA,',',1,LEVEL)+1," ).append("\n"); 
		query.append("                INSTR(AA,',',1,LEVEL+1) - INSTR(AA,',',1,LEVEL)" ).append("\n"); 
		query.append("                -1" ).append("\n"); 
		query.append("                ) RHQ_CD" ).append("\n"); 
		query.append("            FROM (SELECT ','||@[rhq2]||',' AA FROM DUAL)" ).append("\n"); 
		query.append("            CONNECT BY LEVEL <= LENGTH(AA) - LENGTH(REPLACE(AA,','))-1" ).append("\n"); 
		query.append("           ) C" ).append("\n"); 
		query.append("     WHERE (SUBSTR(M.SLS_YRMON, 1, 4)||M.COST_WK) = W.COST_YR||W.COST_WK " ).append("\n"); 
		query.append("       AND M.DELT_FLG = 'N'" ).append("\n"); 
		query.append("       AND M.TRD_CD   = @[trade]" ).append("\n"); 
		query.append("       AND M.TRD_CD          = H.TRD_CD    (+)" ).append("\n"); 
		query.append("       AND M.RLANE_CD        = H.RLANE_CD  (+)" ).append("\n"); 
		query.append("       AND M.DIR_CD          = H.DIR_CD    (+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${bound} != '')" ).append("\n"); 
		query.append("       AND M.DIR_CD     = (CASE " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								WHEN M.RLANE_CD IN ('AUSIA', 'CKAIA', 'WAXIA', 'AAZIA', 'QISIA', 'RUSIA', 'FOXIA') THEN" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									DECODE(@[bound], 'E', 'W', 'W', 'E', @[bound])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("								ELSE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									@[bound]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("							END)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       AND M.SUB_TRD_CD LIKE nvl(@[subtrade1], @[subtrade2])  || '%'" ).append("\n"); 
		query.append("       #if (${rlane1} != '')" ).append("\n"); 
		query.append("       AND M.RLANE_CD         IN ($rlane1)" ).append("\n"); 
		query.append("       #end                     " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", QTA AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD  ," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   T2.SAQ_RGN_OFC_CD      AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK   AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           ROUND(SUM(T1.LOD_QTY)) AS LOAD  ," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS               A ," ).append("\n"); 
		query.append("           SQM_CFM_QTA        T1," ).append("\n"); 
		query.append("           SQM_QTA_RLSE_VER   B ," ).append("\n"); 
		query.append("           SPC_OFC_LVL        T2" ).append("\n"); 
		query.append("     WHERE B.BSE_YR            = A.BSE_YR" ).append("\n"); 
		query.append("       --AND B.BSE_QTR_CD        = CEIL(TO_NUMBER(DECODE(A.COST_WK,'00','01','53','52',A.COST_WK))/13)||'Q'--CEIL(TO_NUMBER(A.COST_MON) / 3)||'Q'" ).append("\n"); 
		query.append("	   -- CHM-201534458 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("	   AND B.BSE_QTR_CD     = A.BSE_QTR_CD" ).append("\n"); 
		query.append("       AND B.SQM_VER_STS_CD    = 'R'" ).append("\n"); 
		query.append("       AND B.BSE_TP_CD         = 'Q' -- 분기 20131205추가" ).append("\n"); 
		query.append("       AND T1.QTA_RLSE_VER_NO  = B.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("       AND T1.BSE_TP_CD        = B.BSE_TP_CD -- 분기 20131205추가 " ).append("\n"); 
		query.append("       AND T1.BSE_YR           = B.BSE_YR" ).append("\n"); 
		query.append("       AND T1.BSE_QTR_CD       = B.BSE_QTR_CD" ).append("\n"); 
		query.append("       AND T1.QTA_TGT_CD       = 'D'" ).append("\n"); 
		query.append("       AND T1.OFC_VW_CD        = 'L'  " ).append("\n"); 
		query.append("       AND T1.TRD_CD           = A.TRD_CD" ).append("\n"); 
		query.append("       AND T1.RLANE_CD         = A.RLANE_CD" ).append("\n"); 
		query.append("       AND T1.DIR_CD           = A.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND T1.VSL_CD           = A.VSL_CD" ).append("\n"); 
		query.append("       AND T1.SKD_VOY_NO       = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND T1.SKD_DIR_CD       = A.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND (A.PORT_CD IS NULL )" ).append("\n"); 
		query.append("       AND (A.RHQ_CD  IS NULL OR T2.N2ND_PRNT_OFC_CD         = A.RHQ_CD )" ).append("\n"); 
		query.append("       AND (A.AQ_CD   IS NULL OR T1.AQ_CD          = A.AQ_CD  )" ).append("\n"); 
		query.append("       AND (A.OFC_CD  IS NULL OR T2.SAQ_RGN_OFC_CD = A.OFC_CD )" ).append("\n"); 
		query.append("--       AND T1.RGN_OFC_CD = T2.OFC_CD" ).append("\n"); 
		query.append("       --AND T1.RGN_OFC_CD" ).append("\n"); 
		query.append("       AND (" ).append("\n"); 
		query.append("             SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), T1.RGN_OFC_CD)" ).append("\n"); 
		query.append("               FROM SPC_RGN_OFC_CONV ROC" ).append("\n"); 
		query.append("              WHERE ROC.SLS_RGN_OFC_CD = T1.RGN_OFC_CD" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("           IN (SELECT OFC_CD " ).append("\n"); 
		query.append("                 FROM SPC_OFC_LVL " ).append("\n"); 
		query.append("                WHERE A.COST_YR || A.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                  AND N4TH_PRNT_OFC_CD = NVL(A.OFC_CD,T2.OFC_CD) AND OFC_LVL IN ('4', '5')" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("       AND A.COST_YR || A.COST_WK BETWEEN T2.OFC_APLY_FM_YRWK AND T2.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD  ," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   T2.SAQ_RGN_OFC_CD   ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING ROUND(SUM(T1.LOD_QTY)) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", FCST AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.CFM_TTL_QTY, 0) + NVL(B.CFM_40FT_HC_QTY, 0) * 2 + NVL(B.CFM_45FT_HC_QTY, 0) * 2 + NVL(B.CFM_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS               A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_CUST B" ).append("\n"); 
		query.append("     WHERE B.TRD_CD     = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD   = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD  = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD     = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD = A.DIR_CD " ).append("\n"); 
		query.append("       AND B.DIR_CD     = A.DIR_CD " ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.CFM_TTL_QTY, 0) + NVL(B.CFM_40FT_HC_QTY, 0) * 2 + NVL(B.CFM_45FT_HC_QTY, 0) * 2 + NVL(B.CFM_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PFCST AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS              A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_HIS B" ).append("\n"); 
		query.append("     WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("       AND B.TRD_CD      = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD  = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD   = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO  = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD  = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.DIR_CD      = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.OFC_KND_CD  = '3'" ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("       AND TO_CHAR(TO_DATE(B.BSE_DT,'YYYYMMDD') + TO_NUMBER(@[duration2_from])-1,'YYYYMMDD') = ( SELECT MAX(C.BSE_DT)" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_HIS C" ).append("\n"); 
		query.append("                             WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("                               AND C.FCAST_TP_CD = B.FCAST_TP_CD" ).append("\n"); 
		query.append("                               AND C.OFC_KND_CD  = B.OFC_KND_CD" ).append("\n"); 
		query.append("                               AND C.RLANE_CD    = B.RLANE_CD" ).append("\n"); 
		query.append("                               AND C.DIR_CD      = B.DIR_CD" ).append("\n"); 
		query.append("                               AND C.VSL_CD      = B.VSL_CD" ).append("\n"); 
		query.append("                               AND C.SKD_VOY_NO  = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND C.SKD_DIR_CD  = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND C.SLS_OFC_CD  = B.SLS_OFC_CD" ).append("\n"); 
		query.append("--                               AND C.POL_YD_CD   = B.POL_YD_CD" ).append("\n"); 
		query.append("--                               AND C.POD_YD_CD   = B.POD_YD_CD" ).append("\n"); 
		query.append("                               AND C.POL_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POL_YD_CD, SUBSTR(B.POL_YD_CD, 1, 5)||'%'), SUBSTR(B.POL_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POL_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND C.POD_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POD_YD_CD, SUBSTR(B.POD_YD_CD, 1, 5)||'%'), SUBSTR(B.POD_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POD_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND B.OFC_KND_CD  = '3')" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", PFCST_2 AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS              A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_HIS B" ).append("\n"); 
		query.append("     WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("       AND B.TRD_CD      = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD  = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD   = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO  = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD  = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.DIR_CD      = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.OFC_KND_CD  = '3'" ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("       AND TO_CHAR(TO_DATE(B.BSE_DT,'YYYYMMDD') + TO_NUMBER(@[duration2_from]),'YYYYMMDD') = ( SELECT MAX(C.BSE_DT)" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_HIS C" ).append("\n"); 
		query.append("                             WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("                               AND C.FCAST_TP_CD = B.FCAST_TP_CD" ).append("\n"); 
		query.append("                               AND C.OFC_KND_CD  = B.OFC_KND_CD" ).append("\n"); 
		query.append("                               AND C.RLANE_CD    = B.RLANE_CD" ).append("\n"); 
		query.append("                               AND C.DIR_CD      = B.DIR_CD" ).append("\n"); 
		query.append("                               AND C.VSL_CD      = B.VSL_CD" ).append("\n"); 
		query.append("                               AND C.SKD_VOY_NO  = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND C.SKD_DIR_CD  = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND C.SLS_OFC_CD  = B.SLS_OFC_CD" ).append("\n"); 
		query.append("--                               AND C.POL_YD_CD   = B.POL_YD_CD" ).append("\n"); 
		query.append("--                               AND C.POD_YD_CD   = B.POD_YD_CD" ).append("\n"); 
		query.append("                               AND C.POL_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POL_YD_CD, SUBSTR(B.POL_YD_CD, 1, 5)||'%'), SUBSTR(B.POL_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POL_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND C.POD_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POD_YD_CD, SUBSTR(B.POD_YD_CD, 1, 5)||'%'), SUBSTR(B.POD_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POD_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND B.OFC_KND_CD  = '3')" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", PFCST_3 AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS              A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_HIS B" ).append("\n"); 
		query.append("     WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("       AND B.TRD_CD      = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD  = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD   = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO  = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD  = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.DIR_CD      = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.OFC_KND_CD  = '3'" ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("       AND TO_CHAR(TO_DATE(B.BSE_DT,'YYYYMMDD') + TO_NUMBER(@[duration2_from])+1,'YYYYMMDD') = ( SELECT MAX(C.BSE_DT)" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_HIS C" ).append("\n"); 
		query.append("                             WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("                               AND C.FCAST_TP_CD = B.FCAST_TP_CD" ).append("\n"); 
		query.append("                               AND C.OFC_KND_CD  = B.OFC_KND_CD" ).append("\n"); 
		query.append("                               AND C.RLANE_CD    = B.RLANE_CD" ).append("\n"); 
		query.append("                               AND C.DIR_CD      = B.DIR_CD" ).append("\n"); 
		query.append("                               AND C.VSL_CD      = B.VSL_CD" ).append("\n"); 
		query.append("                               AND C.SKD_VOY_NO  = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND C.SKD_DIR_CD  = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND C.SLS_OFC_CD  = B.SLS_OFC_CD" ).append("\n"); 
		query.append("--                               AND C.POL_YD_CD   = B.POL_YD_CD" ).append("\n"); 
		query.append("--                               AND C.POD_YD_CD   = B.POD_YD_CD" ).append("\n"); 
		query.append("                               AND C.POL_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POL_YD_CD, SUBSTR(B.POL_YD_CD, 1, 5)||'%'), SUBSTR(B.POL_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POL_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND C.POD_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POD_YD_CD, SUBSTR(B.POD_YD_CD, 1, 5)||'%'), SUBSTR(B.POD_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POD_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND B.OFC_KND_CD  = '3')" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", PFCST_4 AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS              A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_HIS B" ).append("\n"); 
		query.append("     WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("       AND B.TRD_CD      = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD  = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD   = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO  = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD  = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.DIR_CD      = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.OFC_KND_CD  = '3'" ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("       AND TO_CHAR(TO_DATE(B.BSE_DT,'YYYYMMDD') + TO_NUMBER(@[duration2_from])+2,'YYYYMMDD') = ( SELECT MAX(C.BSE_DT)" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_HIS C" ).append("\n"); 
		query.append("                             WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("                               AND C.FCAST_TP_CD = B.FCAST_TP_CD" ).append("\n"); 
		query.append("                               AND C.OFC_KND_CD  = B.OFC_KND_CD" ).append("\n"); 
		query.append("                               AND C.RLANE_CD    = B.RLANE_CD" ).append("\n"); 
		query.append("                               AND C.DIR_CD      = B.DIR_CD" ).append("\n"); 
		query.append("                               AND C.VSL_CD      = B.VSL_CD" ).append("\n"); 
		query.append("                               AND C.SKD_VOY_NO  = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND C.SKD_DIR_CD  = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND C.SLS_OFC_CD  = B.SLS_OFC_CD" ).append("\n"); 
		query.append("--                               AND C.POL_YD_CD   = B.POL_YD_CD" ).append("\n"); 
		query.append("--                               AND C.POD_YD_CD   = B.POD_YD_CD" ).append("\n"); 
		query.append("                               AND C.POL_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POL_YD_CD, SUBSTR(B.POL_YD_CD, 1, 5)||'%'), SUBSTR(B.POL_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POL_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND C.POD_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POD_YD_CD, SUBSTR(B.POD_YD_CD, 1, 5)||'%'), SUBSTR(B.POD_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POD_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND B.OFC_KND_CD  = '3')" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", PFCST_5 AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS              A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_HIS B" ).append("\n"); 
		query.append("     WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("       AND B.TRD_CD      = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD  = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD   = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO  = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD  = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.DIR_CD      = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.OFC_KND_CD  = '3'" ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("       AND TO_CHAR(TO_DATE(B.BSE_DT,'YYYYMMDD') + TO_NUMBER(@[duration2_from])+3,'YYYYMMDD') = ( SELECT MAX(C.BSE_DT)" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_HIS C" ).append("\n"); 
		query.append("                             WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("                               AND C.FCAST_TP_CD = B.FCAST_TP_CD" ).append("\n"); 
		query.append("                               AND C.OFC_KND_CD  = B.OFC_KND_CD" ).append("\n"); 
		query.append("                               AND C.RLANE_CD    = B.RLANE_CD" ).append("\n"); 
		query.append("                               AND C.DIR_CD      = B.DIR_CD" ).append("\n"); 
		query.append("                               AND C.VSL_CD      = B.VSL_CD" ).append("\n"); 
		query.append("                               AND C.SKD_VOY_NO  = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND C.SKD_DIR_CD  = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND C.SLS_OFC_CD  = B.SLS_OFC_CD" ).append("\n"); 
		query.append("--                               AND C.POL_YD_CD   = B.POL_YD_CD" ).append("\n"); 
		query.append("--                               AND C.POD_YD_CD   = B.POD_YD_CD" ).append("\n"); 
		query.append("                               AND C.POL_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POL_YD_CD, SUBSTR(B.POL_YD_CD, 1, 5)||'%'), SUBSTR(B.POL_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POL_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND C.POD_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POD_YD_CD, SUBSTR(B.POD_YD_CD, 1, 5)||'%'), SUBSTR(B.POD_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POD_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND B.OFC_KND_CD  = '3')" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", PFCST_6 AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   B.SLS_RGN_OFC_CD     AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK    ," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) AS LOAD," ).append("\n"); 
		query.append("           0 AS GREV  ," ).append("\n"); 
		query.append("           0 AS CMCOST" ).append("\n"); 
		query.append("      FROM VVDS              A," ).append("\n"); 
		query.append("           SPC_DLY_FCAST_HIS B" ).append("\n"); 
		query.append("     WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("       AND B.TRD_CD      = A.TRD_CD" ).append("\n"); 
		query.append("       AND B.SUB_TRD_CD  = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND B.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND B.IOC_TS_CD   = A.IOC_CD" ).append("\n"); 
		query.append("       AND B.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("       AND B.SKD_VOY_NO  = A.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND B.SKD_DIR_CD  = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.DIR_CD      = A.DIR_CD" ).append("\n"); 
		query.append("       AND B.OFC_KND_CD  = '3'" ).append("\n"); 
		query.append("       AND B.SLS_RHQ_CD          LIKE A.RHQ_CD  || '%'" ).append("\n"); 
		query.append("       AND NVL(B.SLS_AQ_CD, ' ') LIKE A.AQ_CD   || '%'" ).append("\n"); 
		query.append("       AND B.SLS_RGN_OFC_CD      LIKE A.OFC_CD  || '%'" ).append("\n"); 
		query.append("       AND B.POL_YD_CD           LIKE A.PORT_CD || '%'" ).append("\n"); 
		query.append("       AND TO_CHAR(TO_DATE(B.BSE_DT,'YYYYMMDD') + TO_NUMBER(@[duration2_from])+ 4,'YYYYMMDD') = ( SELECT MAX(C.BSE_DT)" ).append("\n"); 
		query.append("                              FROM SPC_DLY_FCAST_HIS C" ).append("\n"); 
		query.append("                             WHERE B.FCAST_TP_CD = 'D'" ).append("\n"); 
		query.append("                               AND C.FCAST_TP_CD = B.FCAST_TP_CD" ).append("\n"); 
		query.append("                               AND C.OFC_KND_CD  = B.OFC_KND_CD" ).append("\n"); 
		query.append("                               AND C.RLANE_CD    = B.RLANE_CD" ).append("\n"); 
		query.append("                               AND C.DIR_CD      = B.DIR_CD" ).append("\n"); 
		query.append("                               AND C.VSL_CD      = B.VSL_CD" ).append("\n"); 
		query.append("                               AND C.SKD_VOY_NO  = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND C.SKD_DIR_CD  = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND C.SLS_OFC_CD  = B.SLS_OFC_CD" ).append("\n"); 
		query.append("--                               AND C.POL_YD_CD   = B.POL_YD_CD" ).append("\n"); 
		query.append("--                               AND C.POD_YD_CD   = B.POD_YD_CD" ).append("\n"); 
		query.append("                               AND C.POL_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POL_YD_CD, SUBSTR(B.POL_YD_CD, 1, 5)||'%'), SUBSTR(B.POL_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POL_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND C.POD_YD_CD   LIKE (SELECT DECODE(SIGN(MAX(CLPT_IND_SEQ)-1), 1, DECODE(MAX(CALL_YD_IND_SEQ), 1, B.POD_YD_CD, SUBSTR(B.POD_YD_CD, 1, 5)||'%'), SUBSTR(B.POD_YD_CD, 1, 5)||'%')" ).append("\n"); 
		query.append("                                                         FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                                        WHERE V.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND V.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                          AND V.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                          AND V.VPS_PORT_CD = SUBSTR(B.POD_YD_CD, 1, 5)" ).append("\n"); 
		query.append("                                                          AND NVL(V.SKD_CNG_STS_CD, 'X') <> 'S')" ).append("\n"); 
		query.append("                               AND B.OFC_KND_CD  = '3')" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   B.SLS_RGN_OFC_CD    ," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING SUM(NVL(B.FCAST_LOD_QTY, 0) + NVL(B.FCAST_40FT_HC_QTY, 0) * 2 + NVL(B.FCAST_45FT_HC_QTY, 0) * 2 + NVL(B.FCAST_53FT_QTY, 0) * 2) > 0" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG AS (" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD," ).append("\n"); 
		query.append("    	   O.N4TH_PRNT_OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK AS WK," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("            SUM(( SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY)" ).append("\n"); 
		query.append("                   FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                  WHERE B.BKG_NO = Q.BKG_NO" ).append("\n"); 
		query.append("                 HAVING SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY) > 0" ).append("\n"); 
		query.append("           )) AS LOAD," ).append("\n"); 
		query.append("           0  AS GREV  ," ).append("\n"); 
		query.append("           0  AS CMCOST" ).append("\n"); 
		query.append("      FROM SPC_OFC_LVL        O  ," ).append("\n"); 
		query.append("           BKG_BOOKING        B  ," ).append("\n"); 
		query.append("           MDM_DTL_REV_LANE   DRL," ).append("\n"); 
		query.append("           MDM_REV_LANE       RL ," ).append("\n"); 
		query.append("           VVDS               A" ).append("\n"); 
		query.append("     WHERE O.OFC_CD         = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)" ).append("\n"); 
		query.append("       AND B.BKG_STS_CD    IN('W','F')" ).append("\n"); 
		query.append("       AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("       AND A.VSL_CD         = B.VSL_CD" ).append("\n"); 
		query.append("       AND A.SKD_VOY_NO     = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND A.SKD_DIR_CD     = B.SKD_DIR_CD" ).append("\n"); 
		query.append("#if (${rhq2} != '' || ${area} != '' || ${sales_office} != '')" ).append("\n"); 
		query.append("       AND (    (A.RHQ_CD = 'SHARC' AND A.AQ_CD IS NULL AND A.OFC_CD IS NULL) " ).append("\n"); 
		query.append("             OR EXISTS ( SELECT O.OFC_CD" ).append("\n"); 
		query.append("                           FROM SPC_OFC_LVL O" ).append("\n"); 
		query.append("                          WHERE O.OFC_TP_CD IN ('BB', 'BA', 'BS')" ).append("\n"); 
		query.append("                            AND SPC_SCR_OFC_CONV_FNC(B.BKG_OFC_CD) = O.OFC_CD" ).append("\n"); 
		query.append("						    AND A.RHQ_CD = O.N2ND_PRNT_OFC_CD" ).append("\n"); 
		query.append("                            AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("                     CONNECT BY NOCYCLE O.PRNT_OFC_CD = PRIOR O.OFC_CD" ).append("\n"); 
		query.append("                             START WITH (A.OFC_CD IS NULL AND (O.PRNT_OFC_CD = A.AQ_CD OR O.PRNT_OFC_CD = A.RHQ_CD)) OR (O.OFC_CD = A.OFC_CD)))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("       AND DRL.RLANE_CD        = A.RLANE_CD" ).append("\n"); 
		query.append("       AND DRL.VSL_SLAN_DIR_CD = A.DIR_CD" ).append("\n"); 
		query.append("       AND DRL.IOC_CD          = A.IOC_CD" ).append("\n"); 
		query.append("       AND DRL.SUB_TRD_CD      = A.SUB_TRD_CD" ).append("\n"); 
		query.append("       AND DRL.DELT_FLG        = 'N'" ).append("\n"); 
		query.append("       AND DRL.RLANE_CD        = RL.RLANE_CD" ).append("\n"); 
		query.append("       AND DRL.FM_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)" ).append("\n"); 
		query.append("                                    FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                                   WHERE L.LOC_CD = NVL(B.PRE_RLY_PORT_CD, B.POL_CD) )" ).append("\n"); 
		query.append("       AND DRL.TO_CONTI_CD     =( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, A.RLANE_CD, A.DIR_CD)" ).append("\n"); 
		query.append("                                    FROM MDM_LOCATION L" ).append("\n"); 
		query.append("                                   WHERE L.LOC_CD = NVL(B.PST_RLY_PORT_CD, B.POD_CD) )" ).append("\n"); 
		query.append("       AND (    ((A.RHQ_CD = 'SHARC' AND A.AQ_CD IS NULL AND A.OFC_CD IS NULL  AND  A.RHQ_CD = O.N2ND_PRNT_OFC_CD) AND DRL.FM_CONTI_CD = 'A')" ).append("\n"); 
		query.append("             OR A.RHQ_CD <> 'SHARC'" ).append("\n"); 
		query.append("             OR A.AQ_CD      IS NOT NULL" ).append("\n"); 
		query.append("             OR A.OFC_CD IS NOT NULL )" ).append("\n"); 
		query.append("       AND RL.RLANE_CD    = A.RLANE_CD" ).append("\n"); 
		query.append("       AND RL.VSL_SLAN_CD = B.SLAN_CD" ).append("\n"); 
		query.append("       AND RL.VSL_TP_CD   = 'C'" ).append("\n"); 
		query.append("       AND RL.DELT_FLG    = 'N'" ).append("\n"); 
		query.append("       AND A.COST_YR || A.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("  GROUP BY A.RLANE_CD," ).append("\n"); 
		query.append("  	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD," ).append("\n"); 
		query.append("  	   O.N4TH_PRNT_OFC_CD," ).append("\n"); 
		query.append("           A.COST_YR||A.COST_WK," ).append("\n"); 
		query.append("           A.NUM" ).append("\n"); 
		query.append("    HAVING O.N4TH_PRNT_OFC_CD IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", TMP_DATA AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   1 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           LOAD   AS QTA_LOAD," ).append("\n"); 
		query.append("           GREV   AS QTA_GREV," ).append("\n"); 
		query.append("           CMCOST AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM QTA" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   2 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           LOAD   AS FCT_LOAD," ).append("\n"); 
		query.append("           GREV   AS FCT_GREV," ).append("\n"); 
		query.append("           CMCOST AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COSTT" ).append("\n"); 
		query.append("      FROM FCST" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           LOAD   AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           GREV   AS PFC_GREV," ).append("\n"); 
		query.append("           CMCOST AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM PFCST " ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   LOAD   AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM PFCST_2	  " ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   LOAD   AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM PFCST_3  " ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   LOAD   AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM PFCST_4	  " ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   LOAD   AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM PFCST_5" ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0      AS QTA_LOAD," ).append("\n"); 
		query.append("           0      AS QTA_GREV," ).append("\n"); 
		query.append("           0      AS QTA_COST," ).append("\n"); 
		query.append("           0      AS FCT_LOAD," ).append("\n"); 
		query.append("           0      AS FCT_GREV," ).append("\n"); 
		query.append("           0      AS FCT_COST," ).append("\n"); 
		query.append("           0      AS PFC_LOAD," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0      AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   LOAD   AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0      AS PFC_GREV," ).append("\n"); 
		query.append("           0      AS PFC_COST," ).append("\n"); 
		query.append("           0      AS BKG_LOAD," ).append("\n"); 
		query.append("           0      AS BKG_GREV," ).append("\n"); 
		query.append("           0      AS BKG_COST" ).append("\n"); 
		query.append("      FROM PFCST_6" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALL_DATA AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   3 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           QTA_LOAD," ).append("\n"); 
		query.append("           QTA_GREV," ).append("\n"); 
		query.append("           QTA_COST," ).append("\n"); 
		query.append("           FCT_LOAD," ).append("\n"); 
		query.append("           FCT_GREV," ).append("\n"); 
		query.append("           FCT_COST," ).append("\n"); 
		query.append("           PFC_LOAD," ).append("\n"); 
		query.append("		   PFC_LOAD_2," ).append("\n"); 
		query.append("		   PFC_LOAD_3," ).append("\n"); 
		query.append("		   PFC_LOAD_4," ).append("\n"); 
		query.append("		   PFC_LOAD_5," ).append("\n"); 
		query.append("		   PFC_LOAD_6," ).append("\n"); 
		query.append("           PFC_GREV," ).append("\n"); 
		query.append("           PFC_COST," ).append("\n"); 
		query.append("           BKG_LOAD," ).append("\n"); 
		query.append("           BKG_GREV," ).append("\n"); 
		query.append("           BKG_COST" ).append("\n"); 
		query.append("      FROM TMP_DATA" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   VVD," ).append("\n"); 
		query.append("    	   4 AS FLG," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           0         AS QTA_LOAD," ).append("\n"); 
		query.append("           0         AS QTA_GREV," ).append("\n"); 
		query.append("           0         AS QTA_COST," ).append("\n"); 
		query.append("           0         AS FCT_LOAD," ).append("\n"); 
		query.append("           0         AS FCT_GREV," ).append("\n"); 
		query.append("           0         AS FCT_COST," ).append("\n"); 
		query.append("           0         AS PFC_LOAD," ).append("\n"); 
		query.append("		   0         AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   0         AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   0         AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   0         AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   0         AS PFC_LOAD_6," ).append("\n"); 
		query.append("           0         AS PFC_GREV," ).append("\n"); 
		query.append("           0         AS PFC_COST," ).append("\n"); 
		query.append("           SUM(LOAD) AS BKG_LOAD," ).append("\n"); 
		query.append("           GREV      AS BKG_GREV," ).append("\n"); 
		query.append("           CMCOST    AS BKG_COST" ).append("\n"); 
		query.append("      FROM BKG" ).append("\n"); 
		query.append("  GROUP BY RLANE_CD," ).append("\n"); 
		query.append("  	   VVD," ).append("\n"); 
		query.append("  	   OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           GREV  ," ).append("\n"); 
		query.append("           CMCOST" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_BSA AS (" ).append("\n"); 
		query.append("SELECT DISTINCT " ).append("\n"); 
		query.append("       A.RLANE_CD" ).append("\n"); 
		query.append("     , A.RHQ_CD" ).append("\n"); 
		query.append("     , A.VSL_CD" ).append("\n"); 
		query.append("     , A.SKD_VOY_NO" ).append("\n"); 
		query.append("     , A.SKD_DIR_CD" ).append("\n"); 
		query.append(" FROM VVDS A, ALL_DATA B" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("  AND A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("  AND A.VSL_CD     = SUBSTR(B.VVD, 1, 4)" ).append("\n"); 
		query.append("  AND A.SKD_VOY_NO = SUBSTR(B.VVD, 5, 4)" ).append("\n"); 
		query.append("  AND A.SKD_DIR_CD = SUBSTR(B.VVD, 9, 1)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BSA_LANE AS (" ).append("\n"); 
		query.append("    SELECT NVL(A.RLANE_CD, 'TOTAL') RLANE_CD," ).append("\n"); 
		query.append("           A.NUM," ).append("\n"); 
		query.append("           NVL(A.RHQ_CD, 'TOTAL') AS RHQ_CD," ).append("\n"); 
		query.append("           SUM(A.BSA) / DECODE(COUNT(A.RHQ_CD) OVER (PARTITION BY A.NUM, A.RLANE_CD), 0, 1, COUNT(A.RHQ_CD) OVER (PARTITION BY A.NUM, A.RLANE_CD)) AS BSA" ).append("\n"); 
		query.append("    FROM VVDS A, VVD_BSA B" ).append("\n"); 
		query.append("	  	  WHERE 1=1" ).append("\n"); 
		query.append("          AND A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("          AND A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("          AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("	      GROUP BY A.NUM, A.RLANE_CD, A.RHQ_CD" ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append(" ) " ).append("\n"); 
		query.append(", BSA_LANE_TTL AS (" ).append("\n"); 
		query.append("      SELECT DISTINCT A.RLANE_CD, " ).append("\n"); 
		query.append("             A.NUM," ).append("\n"); 
		query.append("             'TOTAL' AS RHQ_CD," ).append("\n"); 
		query.append("             A.BSA" ).append("\n"); 
		query.append("       FROM BSA_LANE A" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BSA_TTL AS (" ).append("\n"); 
		query.append("    SELECT 'TOTAL' AS RLANE_CD," ).append("\n"); 
		query.append("            A.NUM," ).append("\n"); 
		query.append("           'TOTAL' AS RHQ_CD," ).append("\n"); 
		query.append("            SUM(A.BSA) AS BSA" ).append("\n"); 
		query.append("     FROM BSA_LANE_TTL A" ).append("\n"); 
		query.append("    GROUP BY  A.NUM " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BSA AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("           NUM," ).append("\n"); 
		query.append("           RHQ_CD," ).append("\n"); 
		query.append("           BSA" ).append("\n"); 
		query.append("     FROM  BSA_LANE" ).append("\n"); 
		query.append("     UNION ALL" ).append("\n"); 
		query.append("         SELECT RLANE_CD," ).append("\n"); 
		query.append("           NUM," ).append("\n"); 
		query.append("           RHQ_CD," ).append("\n"); 
		query.append("           BSA" ).append("\n"); 
		query.append("     FROM  BSA_LANE_TTL " ).append("\n"); 
		query.append("     UNION ALL" ).append("\n"); 
		query.append("         SELECT RLANE_CD," ).append("\n"); 
		query.append("           NUM," ).append("\n"); 
		query.append("           RHQ_CD," ).append("\n"); 
		query.append("           BSA" ).append("\n"); 
		query.append("     FROM  BSA_TTL " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("--, BSA AS (" ).append("\n"); 
		query.append("--    SELECT NVL(A.RLANE_CD, 'TOTAL') RLANE_CD," ).append("\n"); 
		query.append("--           A.NUM," ).append("\n"); 
		query.append("--           NVL(A.RHQ_CD, 'TOTAL') AS RHQ_CD," ).append("\n"); 
		query.append("--           CASE " ).append("\n"); 
		query.append("--                WHEN A.RHQ_CD IS NOT NULL THEN SUM(A.BSA)" ).append("\n"); 
		query.append("--                                        ELSE SUM(A.BSA) / DECODE(COUNT(A.RHQ_CD) OVER (PARTITION BY A.NUM, A.RLANE_CD), 0, 1, COUNT(A.RHQ_CD) OVER (PARTITION BY A.NUM, A.RLANE_CD))" ).append("\n"); 
		query.append("--           END AS BSA" ).append("\n"); 
		query.append("--    FROM VVDS A, VVD_BSA B" ).append("\n"); 
		query.append("--	  	  WHERE 1=1" ).append("\n"); 
		query.append("--          AND A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("--          AND A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("--          AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("--          AND A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("--	      GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("--                           (A.NUM, A.RLANE_CD, A.RHQ_CD)," ).append("\n"); 
		query.append("--                           (A.NUM, A.RLANE_CD)" ).append("\n"); 
		query.append("--                         )" ).append("\n"); 
		query.append("--    UNION ALL" ).append("\n"); 
		query.append("--    SELECT LANE_CD, NUM, RHQ_CD, BSA" ).append("\n"); 
		query.append("--    FROM (       " ).append("\n"); 
		query.append("--        SELECT 'TOTAL' AS LANE_CD, " ).append("\n"); 
		query.append("--                A.NUM," ).append("\n"); 
		query.append("--                NVL(A.RHQ_CD, 'TOTAL') AS RHQ_CD," ).append("\n"); 
		query.append("--                CASE " ).append("\n"); 
		query.append("--                WHEN A.RHQ_CD IS NOT NULL THEN SUM(A.BSA)" ).append("\n"); 
		query.append("--                ELSE SUM(A.BSA) / DECODE(COUNT(A.RHQ_CD) OVER (PARTITION BY A.NUM), 0, 1, COUNT(A.RHQ_CD) OVER (PARTITION BY A.NUM))" ).append("\n"); 
		query.append("--            END AS BSA" ).append("\n"); 
		query.append("--        FROM VVDS A, VVD_BSA B" ).append("\n"); 
		query.append("--	  	  WHERE 1=1" ).append("\n"); 
		query.append("--          AND A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("--          AND A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("--          AND A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("--          AND A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("--	    GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("--                                (A.NUM, A.RHQ_CD)," ).append("\n"); 
		query.append("--                           		(A.NUM)" ).append("\n"); 
		query.append("--            )" ).append("\n"); 
		query.append("--        )" ).append("\n"); 
		query.append("--    WHERE RHQ_CD = 'TOTAL'" ).append("\n"); 
		query.append("--)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", TGT AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   OFC_CD," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           SUM(QTA_LOAD) AS QTA_LOAD," ).append("\n"); 
		query.append("           SUM(QTA_GREV) AS QTA_GREV," ).append("\n"); 
		query.append("           SUM(QTA_COST) AS QTA_COST," ).append("\n"); 
		query.append("           SUM(FCT_LOAD) AS FCT_LOAD," ).append("\n"); 
		query.append("           SUM(FCT_GREV) AS FCT_GREV," ).append("\n"); 
		query.append("           SUM(FCT_COST) AS FCT_COST," ).append("\n"); 
		query.append("           SUM(PFC_LOAD) AS PFC_LOAD," ).append("\n"); 
		query.append("		   SUM(PFC_LOAD_2) AS PFC_LOAD_2," ).append("\n"); 
		query.append("		   SUM(PFC_LOAD_3) AS PFC_LOAD_3," ).append("\n"); 
		query.append("		   SUM(PFC_LOAD_4) AS PFC_LOAD_4," ).append("\n"); 
		query.append("		   SUM(PFC_LOAD_5) AS PFC_LOAD_5," ).append("\n"); 
		query.append("		   SUM(PFC_LOAD_6) AS PFC_LOAD_6," ).append("\n"); 
		query.append("           SUM(PFC_GREV) AS PFC_GREV," ).append("\n"); 
		query.append("           SUM(PFC_COST) AS PFC_COST," ).append("\n"); 
		query.append("           SUM(BKG_LOAD) AS BKG_LOAD," ).append("\n"); 
		query.append("           SUM(BKG_GREV) AS BKG_GREV," ).append("\n"); 
		query.append("           SUM(BKG_COST) AS BKG_COST" ).append("\n"); 
		query.append("      FROM ALL_DATA" ).append("\n"); 
		query.append("  GROUP BY RLANE_CD," ).append("\n"); 
		query.append("  	   OFC_CD," ).append("\n"); 
		query.append("           WK    ," ).append("\n"); 
		query.append("           NUM" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("-- 2014.05.29 VVD add" ).append("\n"); 
		query.append(", VVD_GRP AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD, NUM, WK, rtrim (xmlagg (xmlelement (E, VVD|| ',')).extract ('//text()'), ',' ) AS VVD" ).append("\n"); 
		query.append("    FROM " ).append("\n"); 
		query.append("        (SELECT DISTINCT RLANE_CD, NUM,WK,VVD" ).append("\n"); 
		query.append("            FROM ALL_DATA" ).append("\n"); 
		query.append("            GROUP BY RLANE_CD, NUM,WK,VVD" ).append("\n"); 
		query.append("         ) A" ).append("\n"); 
		query.append("    GROUP BY RLANE_CD, NUM, WK" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BASE AS (" ).append("\n"); 
		query.append("    SELECT OFC_CD," ).append("\n"); 
		query.append("    	   RLANE_CD," ).append("\n"); 
		query.append("           NUM" ).append("\n"); 
		query.append("      FROM ( SELECT DISTINCT" ).append("\n"); 
		query.append("                    OFC_CD, RLANE_CD" ).append("\n"); 
		query.append("               FROM TMP_DATA )," ).append("\n"); 
		query.append("           (     SELECT LEVEL AS NUM" ).append("\n"); 
		query.append("                   FROM DUAL" ).append("\n"); 
		query.append("             CONNECT BY LEVEL <= ( SELECT DUR" ).append("\n"); 
		query.append("                                     FROM (" ).append("\n"); 
		query.append("                                            SELECT @[year]     AS YR    ," ).append("\n"); 
		query.append("                                                   @[week]     AS WK    ," ).append("\n"); 
		query.append("                                                   @[duration] AS DUR   ," ).append("\n"); 
		query.append("                                                   @[trade]    AS TRD_CD," ).append("\n"); 
		query.append("                              " ).append("\n"); 
		query.append("#if (${subtrade1} != '')" ).append("\n"); 
		query.append("                                                   @[subtrade1] AS SUB_TRD_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                                   @[subtrade2] AS SUB_TRD_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                              " ).append("\n"); 
		query.append("                                                   @[bound]        AS DIR_CD ," ).append("\n"); 
		query.append("                                                   @[area]         AS AQ_CD  ," ).append("\n"); 
		query.append("                                                   @[sales_office] AS OFC_CD ," ).append("\n"); 
		query.append("                                                   @[pol_cd]       AS PORT_CD" ).append("\n"); 
		query.append("                                              FROM DUAL" ).append("\n"); 
		query.append("                                           )))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", OFC_DATA AS (" ).append("\n"); 
		query.append("    SELECT B.RLANE_CD," ).append("\n"); 
		query.append("    	   B.OFC_CD ," ).append("\n"); 
		query.append("           B.NUM    ," ).append("\n"); 
		query.append("           '' AS TMP," ).append("\n"); 
		query.append("           QTA_LOAD ," ).append("\n"); 
		query.append("           QTA_GREV ," ).append("\n"); 
		query.append("           QTA_COST ," ).append("\n"); 
		query.append("           FCT_LOAD ," ).append("\n"); 
		query.append("           FCT_GREV ," ).append("\n"); 
		query.append("           FCT_COST ," ).append("\n"); 
		query.append("           PFC_LOAD ," ).append("\n"); 
		query.append("           PFC_LOAD_2 ," ).append("\n"); 
		query.append("		   PFC_LOAD_3 ," ).append("\n"); 
		query.append("		   PFC_LOAD_4 ," ).append("\n"); 
		query.append("		   PFC_LOAD_5 ," ).append("\n"); 
		query.append("		   PFC_LOAD_6 ," ).append("\n"); 
		query.append("           PFC_GREV ," ).append("\n"); 
		query.append("           PFC_COST ," ).append("\n"); 
		query.append("           BKG_LOAD ," ).append("\n"); 
		query.append("           BKG_GREV ," ).append("\n"); 
		query.append("           BKG_COST" ).append("\n"); 
		query.append("      FROM TGT  A," ).append("\n"); 
		query.append("           BASE B" ).append("\n"); 
		query.append("     WHERE B.OFC_CD = A.OFC_CD (+)" ).append("\n"); 
		query.append("       AND B.RLANE_CD = A.RLANE_CD (+)" ).append("\n"); 
		query.append("       AND B.NUM    = A.NUM    (+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", AQ_DATA_TMP AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   D.OFC_CD ," ).append("\n"); 
		query.append("#if(${check_area1} =='Y')" ).append("\n"); 
		query.append("           SPC_RGN_OFC_CONV_FNC(NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD),O.OFC_CD) AS AQ_CD," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("           NVL(O.N3RD_PRNT_OFC_CD, O.N2ND_PRNT_OFC_CD) AS AQ_CD," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           NUM    ," ).append("\n"); 
		query.append("           TMP," ).append("\n"); 
		query.append("           QTA_LOAD ," ).append("\n"); 
		query.append("           QTA_GREV ," ).append("\n"); 
		query.append("           QTA_COST ," ).append("\n"); 
		query.append("           FCT_LOAD ," ).append("\n"); 
		query.append("           FCT_GREV ," ).append("\n"); 
		query.append("           FCT_COST ," ).append("\n"); 
		query.append("           PFC_LOAD ," ).append("\n"); 
		query.append("           PFC_LOAD_2 ," ).append("\n"); 
		query.append("		   PFC_LOAD_3 ," ).append("\n"); 
		query.append("		   PFC_LOAD_4 ," ).append("\n"); 
		query.append("		   PFC_LOAD_5 ," ).append("\n"); 
		query.append("		   PFC_LOAD_6 ," ).append("\n"); 
		query.append("           PFC_GREV ," ).append("\n"); 
		query.append("           PFC_COST ," ).append("\n"); 
		query.append("           BKG_LOAD ," ).append("\n"); 
		query.append("           BKG_GREV ," ).append("\n"); 
		query.append("           BKG_COST" ).append("\n"); 
		query.append("    FROM SPC_OFC_LVL O," ).append("\n"); 
		query.append("          OFC_DATA   D" ).append("\n"); 
		query.append("    WHERE O.OFC_CD = D.OFC_CD" ).append("\n"); 
		query.append("     AND (  -- DURAION 때문에 연도가 바뀌는 DATA 를 위한 로직" ).append("\n"); 
		query.append("            SELECT W.COST_YR || W.COST_WK" ).append("\n"); 
		query.append("              FROM MAS_WK_PRD W" ).append("\n"); 
		query.append("             WHERE ( SELECT TO_CHAR(( SELECT TO_DATE(SLS_FM_DT, 'YYYYMMDD')" ).append("\n"); 
		query.append("                                        FROM MAS_WK_PRD W" ).append("\n"); 
		query.append("                                       WHERE W.COST_YR = @[year]" ).append("\n"); 
		query.append("                                         AND W.COST_WK = @[week]" ).append("\n"); 
		query.append("                                    ) + ( D.NUM * 7 ) - 7 ,'YYYYMMDD')" ).append("\n"); 
		query.append("                       FROM DUAL" ).append("\n"); 
		query.append("                   )  BETWEEN W.SLS_FM_DT AND W.SLS_TO_DT" ).append("\n"); 
		query.append("         ) BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("         " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", AQ_DATA AS (" ).append("\n"); 
		query.append("#if(${is_sha} == 'Y' || ${is_sel} == 'Y' || ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   OFC_CD ," ).append("\n"); 
		query.append("           DECODE(OFC_CD , 'SELSC', 'SELSC', 'TYOSC','TYOSC', AQ_CD) AS AQ_CD," ).append("\n"); 
		query.append("           NUM    ," ).append("\n"); 
		query.append("           TMP," ).append("\n"); 
		query.append("           QTA_LOAD ," ).append("\n"); 
		query.append("           QTA_GREV ," ).append("\n"); 
		query.append("           QTA_COST ," ).append("\n"); 
		query.append("           FCT_LOAD ," ).append("\n"); 
		query.append("           FCT_GREV ," ).append("\n"); 
		query.append("           FCT_COST ," ).append("\n"); 
		query.append("           PFC_LOAD ," ).append("\n"); 
		query.append("           PFC_LOAD_2 ," ).append("\n"); 
		query.append("		   PFC_LOAD_3 ," ).append("\n"); 
		query.append("		   PFC_LOAD_4 ," ).append("\n"); 
		query.append("		   PFC_LOAD_5 ," ).append("\n"); 
		query.append("		   PFC_LOAD_6 ," ).append("\n"); 
		query.append("           PFC_GREV ," ).append("\n"); 
		query.append("           PFC_COST ," ).append("\n"); 
		query.append("           BKG_LOAD ," ).append("\n"); 
		query.append("           BKG_GREV ," ).append("\n"); 
		query.append("           BKG_COST" ).append("\n"); 
		query.append("    FROM AQ_DATA_TMP " ).append("\n"); 
		query.append("    WHERE 1=1" ).append("\n"); 
		query.append("#if(${area} != '' && ${area} != 'null')" ).append("\n"); 
		query.append("	  AND AQ_CD = @[area]" ).append("\n"); 
		query.append("#end   " ).append("\n"); 
		query.append("#if(${is_sha} == 'Y')" ).append("\n"); 
		query.append("#if(${is_sel} == 'Y' && ${is_tyo} == 'N')" ).append("\n"); 
		query.append("      AND OFC_CD <> 'TYOSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'N' && ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("      AND OFC_CD <> 'SELSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'N' && ${is_tyo} == 'N')" ).append("\n"); 
		query.append("      AND OFC_CD <> 'SELSC' AND OFC_CD <> 'TYOSC'" ).append("\n"); 
		query.append("#end	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${is_sha} == 'N')" ).append("\n"); 
		query.append("#if(${is_sel} == 'Y' && ${is_tyo} == 'N')" ).append("\n"); 
		query.append("      AND OFC_CD = 'SELSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'N' && ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("      AND OFC_CD = 'TYOSC'" ).append("\n"); 
		query.append("#elseif(${is_sel} == 'Y' && ${is_tyo} == 'Y')" ).append("\n"); 
		query.append("      AND OFC_CD = 'SELSC' OR OFC_CD = 'TYOSC'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(( ${is_sha} == 'N' && ${is_sel} == 'Y' ) || ( ${is_sha} == 'N' && ${is_tyo} == 'Y' ))" ).append("\n"); 
		query.append(" UNION ALL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${is_sha} == 'N')" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   OFC_CD ," ).append("\n"); 
		query.append("           DECODE(OFC_CD , 'SELSC', 'SELSC', 'TYOSC','TYOSC', AQ_CD) AS AQ_CD," ).append("\n"); 
		query.append("           NUM    ," ).append("\n"); 
		query.append("           TMP," ).append("\n"); 
		query.append("           QTA_LOAD ," ).append("\n"); 
		query.append("           QTA_GREV ," ).append("\n"); 
		query.append("           QTA_COST ," ).append("\n"); 
		query.append("           FCT_LOAD ," ).append("\n"); 
		query.append("           FCT_GREV ," ).append("\n"); 
		query.append("           FCT_COST ," ).append("\n"); 
		query.append("           PFC_LOAD ," ).append("\n"); 
		query.append("           PFC_LOAD_2 ," ).append("\n"); 
		query.append("		   PFC_LOAD_3 ," ).append("\n"); 
		query.append("		   PFC_LOAD_4 ," ).append("\n"); 
		query.append("		   PFC_LOAD_5 ," ).append("\n"); 
		query.append("		   PFC_LOAD_6 ," ).append("\n"); 
		query.append("           PFC_GREV ," ).append("\n"); 
		query.append("           PFC_COST ," ).append("\n"); 
		query.append("           BKG_LOAD ," ).append("\n"); 
		query.append("           BKG_GREV ," ).append("\n"); 
		query.append("           BKG_COST" ).append("\n"); 
		query.append("    FROM AQ_DATA_TMP " ).append("\n"); 
		query.append("    WHERE 1=1 " ).append("\n"); 
		query.append("    AND AQ_CD <> 'SHARC' AND AQ_CD <> 'SZPDC'" ).append("\n"); 
		query.append("#if(${area} != '' && ${area} != 'null')" ).append("\n"); 
		query.append("	  AND AQ_CD = @[area]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end       " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", BASE_DATA AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD," ).append("\n"); 
		query.append("    	   AQ_CD ," ).append("\n"); 
		query.append("           OFC_CD," ).append("\n"); 
		query.append("           NUM   ," ).append("\n"); 
		query.append("           ROUND(QTA_LOAD)                     AS QTA_LOAD ," ).append("\n"); 
		query.append("           ROUND(QTA_GREV / 1000)              AS QTA_GREV ," ).append("\n"); 
		query.append("           ROUND(QTA_GRPB)                     AS QTA_GRPB ," ).append("\n"); 
		query.append("           ROUND(QTA_CM / 1000)                AS QTA_CM   ," ).append("\n"); 
		query.append("           ROUND(QTA_CMB)                      AS QTA_CMB  ," ).append("\n"); 
		query.append("           ROUND(FCT_LOAD)                     AS FCT_LOAD ," ).append("\n"); 
		query.append("           ROUND(FCT_GREV / 1000)              AS FCT_GREV ," ).append("\n"); 
		query.append("           ROUND(FCT_GRPB)                     AS FCT_GRPB ," ).append("\n"); 
		query.append("           ROUND(FCT_CM / 1000)                AS FCT_CM   ," ).append("\n"); 
		query.append("           ROUND(FCT_CMB)                      AS FCT_CMB  ," ).append("\n"); 
		query.append("           ROUND(PFC_LOAD)                     AS PFC_LOAD ," ).append("\n"); 
		query.append("           ROUND(PFC_LOAD_2)                   AS PFC_LOAD_2 ," ).append("\n"); 
		query.append("		   ROUND(PFC_LOAD_3)                   AS PFC_LOAD_3 ," ).append("\n"); 
		query.append("		   ROUND(PFC_LOAD_4)                   AS PFC_LOAD_4 ," ).append("\n"); 
		query.append("		   ROUND(PFC_LOAD_5)                   AS PFC_LOAD_5 ," ).append("\n"); 
		query.append("		   ROUND(PFC_LOAD_6)                   AS PFC_LOAD_6 ," ).append("\n"); 
		query.append("           ROUND(PFC_GREV / 1000)              AS PFC_GREV ," ).append("\n"); 
		query.append("           ROUND(PFC_GRPB)                     AS PFC_GRPB ," ).append("\n"); 
		query.append("           ROUND(PFC_CM / 1000)                AS PFC_CM   ," ).append("\n"); 
		query.append("           ROUND(PFC_CMB)                      AS PFC_CMB  ," ).append("\n"); 
		query.append("           ROUND(FCT_LOAD  - PFC_LOAD)         AS DIFF_LOAD," ).append("\n"); 
		query.append("           ROUND((FCT_GREV - PFC_GREV) / 1000) AS DIFF_GREV," ).append("\n"); 
		query.append("           ROUND(FCT_GRPB - PFC_GRPB)          AS DIFF_GRPB," ).append("\n"); 
		query.append("           ROUND((FCT_CM - PFC_CM) / 1000)     AS DIFF_CM  ," ).append("\n"); 
		query.append("           ROUND(FCT_CMB - PFC_CMB)            AS DIFF_CMB ," ).append("\n"); 
		query.append("           ROUND(BKG_LOAD)                     AS BKG_LOAD ," ).append("\n"); 
		query.append("           ROUND(BKG_GREV / 1000)              AS BKG_GREV ," ).append("\n"); 
		query.append("           ROUND(BKG_GRPB)                     AS BKG_GRPB ," ).append("\n"); 
		query.append("           ROUND(BKG_CM / 1000)                AS BKG_CM   ," ).append("\n"); 
		query.append("           ROUND(BKG_CMB)                      AS BKG_CMB  ," ).append("\n"); 
		query.append("           ROUND(DECODE(QTA_LOAD, 0, 0, FCT_LOAD * 100 / QTA_LOAD))||'%' AS PREF_LOAD," ).append("\n"); 
		query.append("           ROUND(DECODE(QTA_GREV, 0, 0, FCT_GREV * 100 / QTA_GREV))||'%' AS PREF_GREV," ).append("\n"); 
		query.append("           ROUND(DECODE(QTA_GRPB, 0, 0, FCT_GRPB * 100 / QTA_GRPB))||'%' AS PREF_GRPB," ).append("\n"); 
		query.append("           ROUND(DECODE(QTA_CM  , 0, 0, FCT_CM   * 100 / QTA_CM  ))||'%' AS PREF_CM  ," ).append("\n"); 
		query.append("           ROUND(DECODE(QTA_CMB , 0, 0, FCT_CMB  * 100 / QTA_CMB ))||'%' AS PREF_CMB," ).append("\n"); 
		query.append("           BSA," ).append("\n"); 
		query.append("           LVL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT Z.RLANE_CD," ).append("\n"); 
		query.append("              	     AQ_CD   ," ).append("\n"); 
		query.append("                     OFC_CD  ," ).append("\n"); 
		query.append("                     Z.NUM   ," ).append("\n"); 
		query.append("                     QTA_LOAD," ).append("\n"); 
		query.append("                     QTA_GREV," ).append("\n"); 
		query.append("                     DECODE(QTA_LOAD, 0, 0, QTA_GREV / QTA_LOAD) AS QTA_GRPB," ).append("\n"); 
		query.append("                     QTA_GREV - QTA_COST AS QTA_CM," ).append("\n"); 
		query.append("                     DECODE(QTA_LOAD, 0, 0, (QTA_GREV - QTA_COST) / QTA_LOAD) AS QTA_CMB," ).append("\n"); 
		query.append("                     FCT_LOAD," ).append("\n"); 
		query.append("                     FCT_GREV," ).append("\n"); 
		query.append("                     DECODE(FCT_LOAD, 0, 0, FCT_GREV / FCT_LOAD) AS FCT_GRPB," ).append("\n"); 
		query.append("                     FCT_GREV - FCT_COST AS FCT_CM," ).append("\n"); 
		query.append("                     DECODE(FCT_LOAD, 0, 0, (FCT_GREV - FCT_COST) / FCT_LOAD) AS FCT_CMB," ).append("\n"); 
		query.append("                     PFC_LOAD," ).append("\n"); 
		query.append("                     PFC_LOAD_2," ).append("\n"); 
		query.append("					 PFC_LOAD_3," ).append("\n"); 
		query.append("					 PFC_LOAD_4," ).append("\n"); 
		query.append("					 PFC_LOAD_5," ).append("\n"); 
		query.append("					 PFC_LOAD_6," ).append("\n"); 
		query.append("                     PFC_GREV," ).append("\n"); 
		query.append("                     DECODE(PFC_LOAD, 0, 0, PFC_GREV / PFC_LOAD) AS PFC_GRPB," ).append("\n"); 
		query.append("                     PFC_GREV - PFC_COST AS PFC_CM," ).append("\n"); 
		query.append("                     DECODE(PFC_LOAD, 0, 0, (PFC_GREV - PFC_COST) / PFC_LOAD) AS PFC_CMB," ).append("\n"); 
		query.append("                     BKG_LOAD," ).append("\n"); 
		query.append("                     BKG_GREV," ).append("\n"); 
		query.append("                     DECODE(BKG_LOAD, 0, 0, BKG_GREV / BKG_LOAD) AS BKG_GRPB," ).append("\n"); 
		query.append("                     BKG_GREV - BKG_COST AS BKG_CM," ).append("\n"); 
		query.append("                     DECODE(BKG_LOAD, 0, 0, (BKG_GREV - BKG_COST) / BKG_LOAD) AS BKG_CMB," ).append("\n"); 
		query.append("                     NVL(B.BSA,0) AS BSA, -- 2011.05.24 이석준 : BSA가 NULL일경우 OFFICE 단 DATA가 나오지 않아서 NVL 처리함." ).append("\n"); 
		query.append("                     LVL" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                         SELECT D.RLANE_CD AS RLANE_CD, " ).append("\n"); 
		query.append("                               D.AQ_CD AS AQ_CD," ).append("\n"); 
		query.append("                               D.OFC_CD AS OFC_CD," ).append("\n"); 
		query.append("                               D.NUM," ).append("\n"); 
		query.append("                               SUM(QTA_LOAD) AS QTA_LOAD," ).append("\n"); 
		query.append("                               SUM(QTA_GREV) AS QTA_GREV," ).append("\n"); 
		query.append("                               SUM(QTA_COST) AS QTA_COST," ).append("\n"); 
		query.append("                               SUM(FCT_LOAD) AS FCT_LOAD," ).append("\n"); 
		query.append("                               SUM(FCT_GREV) AS FCT_GREV," ).append("\n"); 
		query.append("                               SUM(FCT_COST) AS FCT_COST," ).append("\n"); 
		query.append("                               SUM(PFC_LOAD) AS PFC_LOAD," ).append("\n"); 
		query.append("							   SUM(PFC_LOAD_2) AS PFC_LOAD_2," ).append("\n"); 
		query.append("							   SUM(PFC_LOAD_3) AS PFC_LOAD_3," ).append("\n"); 
		query.append("							   SUM(PFC_LOAD_4) AS PFC_LOAD_4," ).append("\n"); 
		query.append("							   SUM(PFC_LOAD_5) AS PFC_LOAD_5," ).append("\n"); 
		query.append("							   SUM(PFC_LOAD_6) AS PFC_LOAD_6," ).append("\n"); 
		query.append("                               SUM(PFC_GREV) AS PFC_GREV," ).append("\n"); 
		query.append("                               SUM(PFC_COST) AS PFC_COST," ).append("\n"); 
		query.append("                               SUM(BKG_LOAD) AS BKG_LOAD," ).append("\n"); 
		query.append("                               SUM(BKG_GREV) AS BKG_GREV," ).append("\n"); 
		query.append("                               SUM(BKG_COST) AS BKG_COST," ).append("\n"); 
		query.append("                               2 - (GROUPING_ID(D.AQ_CD) + GROUPING_ID(D.OFC_CD)) AS LVL" ).append("\n"); 
		query.append("                          FROM AQ_DATA D" ).append("\n"); 
		query.append("                         WHERE 1=1 " ).append("\n"); 
		query.append("                      GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("					    					   (D.RLANE_CD,D.NUM, D.AQ_CD , D.OFC_CD)," ).append("\n"); 
		query.append("                                               (D.RLANE_CD,D.NUM, D.AQ_CD )," ).append("\n"); 
		query.append("                                               (D.RLANE_CD,D.NUM)," ).append("\n"); 
		query.append("                                               (D.RLANE_CD)," ).append("\n"); 
		query.append("                                               (D.NUM)" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("                     ) Z," ).append("\n"); 
		query.append("                     BSA B" ).append("\n"); 
		query.append("               WHERE Z.NUM = B.NUM(+)" ).append("\n"); 
		query.append("		 AND NVL(Z.RLANE_CD, 'TOTAL') = B.RLANE_CD(+) -- BSA table 생성 시 RANE TOTAL" ).append("\n"); 
		query.append("                 AND DECODE(Z.AQ_CD, 'SZPDC', 'SHARC', NVL(Z.AQ_CD, 'TOTAL')) = B.RHQ_CD(+)" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("-- 2014.05.30 ㅣLane별 LF표기를 위해 row 별도로 추가 " ).append("\n"); 
		query.append(", TOTAL AS (" ).append("\n"); 
		query.append("SELECT A.RLANE_CD," ).append("\n"); 
		query.append("  	     B.VVD," ).append("\n"); 
		query.append("  	     NVL(AQ_CD, 'TOTAL') AS AQ_CD," ).append("\n"); 
		query.append("         DECODE(AQ_CD, NULL, '', NVL(OFC_CD, '-')) AS OFC_CD," ).append("\n"); 
		query.append("         A.NUM    ," ).append("\n"); 
		query.append("         '2' AS R_NUM ," ).append("\n"); 
		query.append("         QTA_LOAD ," ).append("\n"); 
		query.append("         QTA_GREV ," ).append("\n"); 
		query.append("         QTA_GRPB ," ).append("\n"); 
		query.append("         QTA_CM   ," ).append("\n"); 
		query.append("         QTA_CMB  ," ).append("\n"); 
		query.append("         FCT_LOAD ," ).append("\n"); 
		query.append("         FCT_GREV ," ).append("\n"); 
		query.append("         FCT_GRPB ," ).append("\n"); 
		query.append("         FCT_CM   ," ).append("\n"); 
		query.append("         FCT_CMB  ," ).append("\n"); 
		query.append("         PFC_LOAD ," ).append("\n"); 
		query.append("		 PFC_LOAD_2 ," ).append("\n"); 
		query.append("		 PFC_LOAD_3 ," ).append("\n"); 
		query.append("		 PFC_LOAD_4 ," ).append("\n"); 
		query.append("		 PFC_LOAD_5 ," ).append("\n"); 
		query.append("		 PFC_LOAD_6 ," ).append("\n"); 
		query.append("         PFC_GREV ," ).append("\n"); 
		query.append("         PFC_GRPB ," ).append("\n"); 
		query.append("         PFC_CM   ," ).append("\n"); 
		query.append("         PFC_CMB  ," ).append("\n"); 
		query.append("         DIFF_LOAD," ).append("\n"); 
		query.append("         DIFF_GREV," ).append("\n"); 
		query.append("         DIFF_GRPB," ).append("\n"); 
		query.append("         DIFF_CM  ," ).append("\n"); 
		query.append("         DIFF_CMB ," ).append("\n"); 
		query.append("         BKG_LOAD ," ).append("\n"); 
		query.append("         BKG_GREV ," ).append("\n"); 
		query.append("         BKG_GRPB ," ).append("\n"); 
		query.append("         BKG_CM   ," ).append("\n"); 
		query.append("         BKG_CMB  ," ).append("\n"); 
		query.append("         PREF_LOAD," ).append("\n"); 
		query.append("         PREF_GREV," ).append("\n"); 
		query.append("         PREF_GRPB," ).append("\n"); 
		query.append("         PREF_CM  ," ).append("\n"); 
		query.append("         PREF_CMB ," ).append("\n"); 
		query.append("         BSA      ," ).append("\n"); 
		query.append("         DECODE(BSA, 0, 0, ROUND(FCT_LOAD / BSA * 100))||'%' AS LF," ).append("\n"); 
		query.append("         LVL" ).append("\n"); 
		query.append("    FROM BASE_DATA A, VVD_GRP B" ).append("\n"); 
		query.append("    WHERE A.NUM = B.NUM(+)" ).append("\n"); 
		query.append("    AND A.RLANE_CD = B.RLANE_CD(+)" ).append("\n"); 
		query.append("    AND A.NUM IS NOT NULL" ).append("\n"); 
		query.append("    AND A.AQ_CD IS NULL" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("  	     B.VVD," ).append("\n"); 
		query.append("  	     NVL(AQ_CD, 'TOTAL') AS AQ_CD," ).append("\n"); 
		query.append("         DECODE(AQ_CD, NULL, '', NVL(OFC_CD, '-')) AS OFC_CD," ).append("\n"); 
		query.append("         A.NUM    ," ).append("\n"); 
		query.append("         '3' AS R_NUM ," ).append("\n"); 
		query.append("         QTA_LOAD ," ).append("\n"); 
		query.append("         QTA_GREV ," ).append("\n"); 
		query.append("         QTA_GRPB ," ).append("\n"); 
		query.append("         QTA_CM   ," ).append("\n"); 
		query.append("         QTA_CMB  ," ).append("\n"); 
		query.append("         FCT_LOAD ," ).append("\n"); 
		query.append("         FCT_GREV ," ).append("\n"); 
		query.append("         FCT_GRPB ," ).append("\n"); 
		query.append("         FCT_CM   ," ).append("\n"); 
		query.append("         FCT_CMB  ," ).append("\n"); 
		query.append("         PFC_LOAD ," ).append("\n"); 
		query.append("		 PFC_LOAD_2 ," ).append("\n"); 
		query.append("		 PFC_LOAD_3 ," ).append("\n"); 
		query.append("		 PFC_LOAD_4 ," ).append("\n"); 
		query.append("		 PFC_LOAD_5 ," ).append("\n"); 
		query.append("		 PFC_LOAD_6 ," ).append("\n"); 
		query.append("         PFC_GREV ," ).append("\n"); 
		query.append("         PFC_GRPB ," ).append("\n"); 
		query.append("         PFC_CM   ," ).append("\n"); 
		query.append("         PFC_CMB  ," ).append("\n"); 
		query.append("         DIFF_LOAD," ).append("\n"); 
		query.append("         DIFF_GREV," ).append("\n"); 
		query.append("         DIFF_GRPB," ).append("\n"); 
		query.append("         DIFF_CM  ," ).append("\n"); 
		query.append("         DIFF_CMB ," ).append("\n"); 
		query.append("         BKG_LOAD ," ).append("\n"); 
		query.append("         BKG_GREV ," ).append("\n"); 
		query.append("         BKG_GRPB ," ).append("\n"); 
		query.append("         BKG_CM   ," ).append("\n"); 
		query.append("         BKG_CMB  ," ).append("\n"); 
		query.append("         PREF_LOAD," ).append("\n"); 
		query.append("         PREF_GREV," ).append("\n"); 
		query.append("         PREF_GRPB," ).append("\n"); 
		query.append("         PREF_CM  ," ).append("\n"); 
		query.append("         PREF_CMB ," ).append("\n"); 
		query.append("         BSA      ," ).append("\n"); 
		query.append("         DECODE(BSA, 0, 0, ROUND(FCT_LOAD / BSA * 100))||'%' AS LF," ).append("\n"); 
		query.append("         LVL" ).append("\n"); 
		query.append("    FROM BASE_DATA A, VVD_GRP B" ).append("\n"); 
		query.append("    WHERE A.NUM = B.NUM(+)" ).append("\n"); 
		query.append("    AND A.RLANE_CD = B.RLANE_CD(+)" ).append("\n"); 
		query.append("    AND A.NUM IS NOT NULL" ).append("\n"); 
		query.append("    AND A.AQ_CD IS NULL" ).append("\n"); 
		query.append("    AND A.RLANE_CD IS NOT NULL" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT A.RLANE_CD," ).append("\n"); 
		query.append("  	     B.VVD," ).append("\n"); 
		query.append("  	     NVL(AQ_CD, 'TOTAL') AS AQ_CD," ).append("\n"); 
		query.append("         DECODE(AQ_CD, NULL, '', NVL(OFC_CD, '-')) AS OFC_CD," ).append("\n"); 
		query.append("         A.NUM    ," ).append("\n"); 
		query.append("         '1' AS R_NUM," ).append("\n"); 
		query.append("         QTA_LOAD ," ).append("\n"); 
		query.append("         QTA_GREV ," ).append("\n"); 
		query.append("         QTA_GRPB ," ).append("\n"); 
		query.append("         QTA_CM   ," ).append("\n"); 
		query.append("         QTA_CMB  ," ).append("\n"); 
		query.append("         FCT_LOAD ," ).append("\n"); 
		query.append("         FCT_GREV ," ).append("\n"); 
		query.append("         FCT_GRPB ," ).append("\n"); 
		query.append("         FCT_CM   ," ).append("\n"); 
		query.append("         FCT_CMB  ," ).append("\n"); 
		query.append("         PFC_LOAD ," ).append("\n"); 
		query.append("		 PFC_LOAD_2 ," ).append("\n"); 
		query.append("		 PFC_LOAD_3 ," ).append("\n"); 
		query.append("		 PFC_LOAD_4 ," ).append("\n"); 
		query.append("		 PFC_LOAD_5 ," ).append("\n"); 
		query.append("		 PFC_LOAD_6 ," ).append("\n"); 
		query.append("         PFC_GREV ," ).append("\n"); 
		query.append("         PFC_GRPB ," ).append("\n"); 
		query.append("         PFC_CM   ," ).append("\n"); 
		query.append("         PFC_CMB  ," ).append("\n"); 
		query.append("         DIFF_LOAD," ).append("\n"); 
		query.append("         DIFF_GREV," ).append("\n"); 
		query.append("         DIFF_GRPB," ).append("\n"); 
		query.append("         DIFF_CM  ," ).append("\n"); 
		query.append("         DIFF_CMB ," ).append("\n"); 
		query.append("         BKG_LOAD ," ).append("\n"); 
		query.append("         BKG_GREV ," ).append("\n"); 
		query.append("         BKG_GRPB ," ).append("\n"); 
		query.append("         BKG_CM   ," ).append("\n"); 
		query.append("         BKG_CMB  ," ).append("\n"); 
		query.append("         PREF_LOAD," ).append("\n"); 
		query.append("         PREF_GREV," ).append("\n"); 
		query.append("         PREF_GRPB," ).append("\n"); 
		query.append("         PREF_CM  ," ).append("\n"); 
		query.append("         PREF_CMB ," ).append("\n"); 
		query.append("         BSA      ," ).append("\n"); 
		query.append("         DECODE(BSA, 0, 0, ROUND(FCT_LOAD / BSA * 100))||'%' AS LF," ).append("\n"); 
		query.append("         LVL" ).append("\n"); 
		query.append("    FROM BASE_DATA A, VVD_GRP B" ).append("\n"); 
		query.append("    WHERE A.NUM = B.NUM(+)" ).append("\n"); 
		query.append("    AND A.RLANE_CD = B.RLANE_CD(+)" ).append("\n"); 
		query.append("    AND A.NUM IS NOT NULL" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("  SELECT RLANE_CD," ).append("\n"); 
		query.append("  	 VVD," ).append("\n"); 
		query.append("  	 AQ_CD," ).append("\n"); 
		query.append("         OFC_CD," ).append("\n"); 
		query.append("         NUM    ," ).append("\n"); 
		query.append("         R_NUM    ," ).append("\n"); 
		query.append("         QTA_LOAD ," ).append("\n"); 
		query.append("         QTA_GREV ," ).append("\n"); 
		query.append("         QTA_GRPB ," ).append("\n"); 
		query.append("         QTA_CM   ," ).append("\n"); 
		query.append("         QTA_CMB  ," ).append("\n"); 
		query.append("         FCT_LOAD ," ).append("\n"); 
		query.append("         FCT_GREV ," ).append("\n"); 
		query.append("         FCT_GRPB ," ).append("\n"); 
		query.append("         FCT_CM   ," ).append("\n"); 
		query.append("         FCT_CMB  ," ).append("\n"); 
		query.append("         PFC_LOAD ," ).append("\n"); 
		query.append("		 PFC_LOAD_2 ," ).append("\n"); 
		query.append("		 PFC_LOAD_3 ," ).append("\n"); 
		query.append("		 PFC_LOAD_4 ," ).append("\n"); 
		query.append("		 PFC_LOAD_5 ," ).append("\n"); 
		query.append("		 PFC_LOAD_6 ," ).append("\n"); 
		query.append("         PFC_GREV ," ).append("\n"); 
		query.append("         PFC_GRPB ," ).append("\n"); 
		query.append("         PFC_CM   ," ).append("\n"); 
		query.append("         PFC_CMB  ," ).append("\n"); 
		query.append("         DIFF_LOAD," ).append("\n"); 
		query.append("         DIFF_GREV," ).append("\n"); 
		query.append("         DIFF_GRPB," ).append("\n"); 
		query.append("         DIFF_CM  ," ).append("\n"); 
		query.append("         DIFF_CMB ," ).append("\n"); 
		query.append("         BKG_LOAD ," ).append("\n"); 
		query.append("         BKG_GREV ," ).append("\n"); 
		query.append("         BKG_GRPB ," ).append("\n"); 
		query.append("         BKG_CM   ," ).append("\n"); 
		query.append("         BKG_CMB  ," ).append("\n"); 
		query.append("         PREF_LOAD," ).append("\n"); 
		query.append("         PREF_GREV," ).append("\n"); 
		query.append("         PREF_GRPB," ).append("\n"); 
		query.append("         PREF_CM  ," ).append("\n"); 
		query.append("         PREF_CMB ," ).append("\n"); 
		query.append("         BSA      ," ).append("\n"); 
		query.append("         DECODE(BSA, 0, 0, ROUND(FCT_LOAD / BSA * 100))||'%' AS LF," ).append("\n"); 
		query.append("         LVL" ).append("\n"); 
		query.append("FROM TOTAL" ).append("\n"); 
		query.append("ORDER BY RLANE_CD," ).append("\n"); 
		query.append("          DECODE(R_NUM, '3', 'A', '1', 'B', '3', 'C')," ).append("\n"); 
		query.append("          DECODE(SUBSTR(AQ_CD, 4), NULL, 'ZZZZZZ', 'DNC', '1', 'DSC', '2', 'AS', '3', 'BB', AQ_CD, 'DKJ', '7', 'DSA', '8', 'DPI', '9', DECODE(AQ_CD, 'KOREA', '4', 'SELSC', '4', 'JAPAN', '5', 'TYOSC', '5','TAIWAN', '6', 'RUSIA', '7', 'VVOIA', '7'))," ).append("\n"); 
		query.append("          DECODE(AQ_CD, NULL, 'ZZZZZZ', 'SELSC', '1', 'TYOSC', '2', 'SHADNC', '3', 'SZPDC', '4', 'SHARC', '5', 'KOREA', '6', 'JAPAN', '7', 'TAIWAN', '8','SHADKJ', '9', 'SINDSA', '10', 'SINDPI', '11', 'RUSIA', '12', 'VVOIA', '13', AQ_CD)," ).append("\n"); 
		query.append("          NVL(OFC_CD, '00000') ," ).append("\n"); 
		query.append("          R_NUM," ).append("\n"); 
		query.append("          NUM" ).append("\n"); 
		query.append("/*" ).append("\n"); 
		query.append("- Lee Sang-Yong : [프로젝트] Ticket ID : CHM-201004171 53ft 추가" ).append("\n"); 
		query.append("2010.12.30 최윤성 [CHM-201008093-01] Office Level Table 생성 - SPC_ORGANIZATION_V 대신 SPC_OFC_LVL 로 대체" ).append("\n"); 
		query.append("2011.01.14 이준범[CHM-201108306-01]," ).append("\n"); 
		query.append("제      목 : daily fcast status 화면 로직 보완, " ).append("\n"); 
		query.append("작업내용 : 1. CNTR_QTY 산출 로직 수정,  " ).append("\n"); 
		query.append("2. SPC_BKG_V 를 사용하지 않고," ).append("\n"); 
		query.append(" SPC_OFC_LVL, BKG_BOOKING,  " ).append("\n"); 
		query.append("MDM_DTL_REV_LANE ,  " ).append("\n"); 
		query.append("MDM_REV_LAN, " ).append("\n"); 
		query.append("MAS_MON_VVD 사용, " ).append("\n"); 
		query.append("3. QTA, FCast, Alloc, " ).append("\n"); 
		query.append("BKG값이 0인 경우에는 조회되지 않도록 수정" ).append("\n"); 
		query.append("2011.05.16 이석준[CHM-201110710]제목 : Daily Fcast Status 화면 조건 추가, 작업내용 : multi combo로 setting된 revenue lane의 조회조건 추가" ).append("\n"); 
		query.append("2011.05.31 이석준[CHM-201111306-01]제목 : fcast comparison 화면 로직 보완, 작업 내용 : area2 checkbox가 표시되어 있으면 area code를 SPC_RGN_OFC_CONV_FNC에서 가져오도록 수정" ).append("\n"); 
		query.append("2011.06.03 이석준[CHM-201111306-01]제목 : fcast comparison 화면 로직 보완, 작업 내용 : 일부 office를 국가 이름으로 변경후 orderby 변경" ).append("\n"); 
		query.append("2013.02.22 김시몬[CHM-201323235-01]제목 : WAX 노선 Dest. 반영 건, 작업 내용 : WAX 노선은 Dest. 를 AU 로 집계되도록 보완, WAXIA 의 경우 Direction 변경(E=> W, W=> E)" ).append("\n"); 
		query.append("2013.07.01 진마리아 [선처리] alps error log 관련, 0으로 나누지 않도록" ).append("\n"); 
		query.append("2013.09.05 진마리아 [CHM-201326612] AAZ Direction Conversion" ).append("\n"); 
		query.append("2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거" ).append("\n"); 
		query.append("2013.12.05 김시몬 [CHM-201326854] SAQ project로 인한 SPC 변경건_테이블 변경" ).append("\n"); 
		query.append("2014.01.13 김시몬 [선처리] SELSC/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가" ).append("\n"); 
		query.append("2014.01.24 김시몬 [선처리] bsa 구할때 bound가 없으면 H/H참조하여 구하도록 변경" ).append("\n"); 
		query.append("2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완" ).append("\n"); 
		query.append("*/" ).append("\n"); 

	}
}