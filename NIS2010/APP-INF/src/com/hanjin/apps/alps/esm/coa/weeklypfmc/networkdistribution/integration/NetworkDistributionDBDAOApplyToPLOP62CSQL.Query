<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkDistributionDBDAOApplyToPLOP62CSQL">
			<desc><![CDATA[ApplyTo PL OP6_2]]></desc>
			<sql><![CDATA[
MERGE INTO COA_PFIT_LSS_SMRY A USING
(SELECT VSL_CD
      , SKD_VOY_NO
      , DIR_CD
      , IOC_CD
      , RLANE_CD
      , TRD_CD
      , CNTR_TPSZ_CD
      , OP_LANE_TP_CD
      , DECODE(NO, 1, STND_COST_CD, 2, 'TSCTRB00', 3, 'CMMT0000', 4, 'HJSAMT00', 5, 'CHTOUT00', 'INTTRDTS') STND_COST_CD
      , SUM(DECODE(NO, 1, ESTM_PL_AMT, 2, TS_CTRB_BSE_COST_AMT, 3, EXTERNAL_TS, 4, HJS_SLS_AMT, 5, CO_AMT, INTERNAL_TS)) ESTM_PL_AMT
      , 'SELHO' AGMT_SGN_OFC_CD
      , 'SELHO' SLS_OFC_CD
      , SUM(DECODE(NO, 1, HJS_SLS_AMT2, 0)) HJS_SLS_AMT2
        /* HJS비율 금액 */
      , SUM(DECODE(NO, 1, CO_AMT, 0)) CO_AMT
      , SUM(DECODE(NO,1,N6TH_ASGN_AMT,0))          AS N6TH_ASGN_AMT
      , SUM(DECODE(NO,1,N6TH_ADJ_OTR_FNL_AMT,0))   AS N6TH_ADJ_OTR_FNL_AMT
   FROM
        (SELECT VSL_CD
              , SKD_VOY_NO
              , DIR_CD
              , IOC_CD
              , RLANE_CD
              , TRD_CD
              , CNTR_TPSZ_CD
              , STND_COST_CD
              , OP_LANE_TP_CD
              , SUM(ESTM_PL_AMT) ESTM_PL_AMT
              , SUM(TS_CTRB_BSE_COST_AMT) TS_CTRB_BSE_COST_AMT
              , SUM(CMMT_BSE_COST_AMT) CMMT_BSE_COST_AMT
              , SUM(HJS_SLS_AMT) HJS_SLS_AMT
              , SUM(HJS_SLS_AMT2) HJS_SLS_AMT2
                /* HJS비율 금액    */
              , SUM(CO_AMT) CO_AMT
                /* CHT OUT비율 금액     */
              , SUM(INTERNAL_TS) INTERNAL_TS
              , SUM(EXTERNAL_TS) EXTERNAL_TS
              , SUM(N6TH_ASGN_AMT)             N6TH_ASGN_AMT
              , SUM(N6TH_ADJ_OTR_FNL_AMT)      N6TH_ADJ_OTR_FNL_AMT
           FROM
                (SELECT A.VSL_CD
                      , A.SKD_VOY_NO
                      , A.DIR_CD
                      , A.IOC_CD
                      , A.RLANE_CD
                      , A.TRD_CD
                      , 'XXXX' CNTR_TPSZ_CD
                      , B.STND_COST_CD
                      , CASE WHEN A.TRD_CD IN ('IAS','IES','IMS') AND B.STND_COST_CD <> '43102011' THEN NVL(B.N6TH_ASGN_AMT, 0) + NVL(B.IPT_ASGN_AMT, 0)+NVL(B.N4TH_CO_AMT, 0)
							 ELSE NVL(B.N4TH_HJS_SLS_AMT, 0) + NVL(B.N6TH_ASGN_AMT, 0) + NVL(B.IPT_ASGN_AMT, 0)+NVL(B.N4TH_CO_AMT, 0) END AS ESTM_PL_AMT
                      , NVL(B.TS_CTRB_BSE_COST_AMT, 0) TS_CTRB_BSE_COST_AMT
                      , NVL(B.CMMT_BSE_COST_AMT, 0) CMMT_BSE_COST_AMT
                      , NVL(B.N4TH_HJS_SLS_AMT, 0) + NVL(B.IPT_ASGN_AMT, 0) HJS_SLS_AMT
                      , CASE WHEN A.TRD_CD IN ('IAS','IES','IMS') AND B.STND_COST_CD <> '43102011' THEN NVL(B.N6TH_ASGN_AMT, 0) + NVL(B.IPT_ASGN_AMT, 0)
							 ELSE NVL(B.N4TH_HJS_SLS_AMT, 0) + NVL(B.N6TH_ASGN_AMT, 0) + NVL(B.IPT_ASGN_AMT, 0) END AS HJS_SLS_AMT2
                        /* HJS비율 금액  */
                      , NVL(B.N4TH_CO_AMT, 0) CO_AMT
                      , CASE WHEN (A.TRD_CD = 'IAS') THEN B.N5TH_ASGN_AMT ELSE 0 END INTERNAL_TS
                      , CASE WHEN (A.TRD_CD <> 'IAS') THEN B.N5TH_ASGN_AMT ELSE 0 END EXTERNAL_TS
                      , NVL(C.OP_LANE_TP_CD, 'OT') OP_LANE_TP_CD

					  /* Allocation Results (Commitment Base)에서의 1st TS Alloc.의 계산로직은  (N6TH_ASGN_AMT-N4TH_HJS_SLS_AMT) 임 */
                      , CASE WHEN A.TRD_CD IN ('IAS','IES','IMS') AND B.STND_COST_CD <> '43102011' THEN NVL(B.N6TH_ASGN_AMT, 0) - NVL(B.N4TH_HJS_SLS_AMT, 0) 
							 ELSE NVL(B.N6TH_ASGN_AMT, 0) END AS N6TH_ASGN_AMT 
                      , NVL(B.N6TH_ADJ_OTR_FNL_AMT, 0)  AS N6TH_ADJ_OTR_FNL_AMT
                   FROM COA_MON_VVD A
                      , COA_VVD_HIR B
                      , COA_LANE_RGST C
                  WHERE A.VSL_CD                                         = B.VSL_CD
                    AND A.SKD_VOY_NO                                     = B.SKD_VOY_NO
                    AND A.DIR_CD                                         = B.DIR_CD
                    AND A.TRD_CD                                         = B.TRD_CD
                    AND A.RLANE_CD                                       = B.RLANE_CD
                    AND A.IOC_CD                                         = B.IOC_CD
                    AND A.RLANE_CD                                       = C.RLANE_CD
                    AND A.DIR_CD                                         = C.DIR_CD
                    AND A.TRD_CD                                         = C.TRD_CD
                    AND A.IOC_CD                                         = C.IOC_CD
                    AND (B.STND_COST_CD||NVL(C.OP_LANE_TP_CD, 'OT') NOT IN('43102011OT')) --단독운항인 노선의  SPACE CHARTER REVENUE계정 제외
#if (${trd_cd} != '')
                    AND A.TRD_CD                                         = @[trd_cd] 
#end 
#if (${rlane_cd} != '')
                    AND A.RLANE_CD                                       = @[rlane_cd] 
#end 
#if (${ioc_cd} != '')
                    AND A.IOC_CD                                         = @[ioc_cd] 
#end 
#if (${vsl_cd} != '')
                    AND A.VSL_CD                                         = @[vsl_cd] 
#end 
#if (${skd_voy_no} != '')
                    AND A.SKD_VOY_NO                                     = @[skd_voy_no] 
#end 
#if (${dir_cd} != '')
                    AND A.DIR_CD                                         = @[dir_cd] 
#end 
#if (${priod} == 'M') 
    #if (${fmMonth} != '')
                    AND A.COST_YRMON BETWEEN @[cost_yrmon_s] AND @[cost_yrmon_e] 
    #else
                    AND A.COST_YRMON LIKE @[cost_yrmon] || '%' 
    #end 
#elseif (${priod} == 'W')
                    AND A.SLS_YRMON LIKE @[sls_yrmon] 
    #if (${fmWeek} != '')
                    AND A.COST_WK BETWEEN @[cost_wk_s] AND @[cost_wk_e] 
    #end 
#end
                    AND NVL(A.DELT_FLG, 'N') = 'N'
                )
       GROUP BY VSL_CD
              , SKD_VOY_NO
              , DIR_CD
              , IOC_CD
              , RLANE_CD
              , TRD_CD
              , CNTR_TPSZ_CD
              , STND_COST_CD
              , OP_LANE_TP_CD
        )
      , (SELECT CPY_NO NO
           FROM COM_CPY_NO
          WHERE CPY_NO IN(1, 4, 5)
        )
GROUP BY VSL_CD
      , SKD_VOY_NO
      , DIR_CD
      , IOC_CD
      , RLANE_CD
      , TRD_CD
      , CNTR_TPSZ_CD
      , OP_LANE_TP_CD
      , DECODE(NO, 1, STND_COST_CD, 2, 'TSCTRB00', 3, 'CMMT0000', 4, 'HJSAMT00', 5, 'CHTOUT00', 'INTTRDTS')
) B ON ( A.TRD_CD = B.TRD_CD 
   AND A.RLANE_CD = B.RLANE_CD 
   AND A.IOC_CD = B.IOC_CD 
   AND A.VSL_CD = B.VSL_CD 
   AND A.SKD_VOY_NO = B.SKD_VOY_NO 
   AND A.SKD_DIR_CD = B.DIR_CD 
   AND A.STND_COST_CD = B.STND_COST_CD 
   AND A.AGMT_SGN_OFC_CD = 'SELHO'
   AND A.SLS_OFC_CD = 'SELHO'
)
WHEN MATCHED THEN
         UPDATE
        SET A.N6TH_ESTM_PL_AMT     = B.ESTM_PL_AMT
              , A.N6TH_HJS_SLS_AMT = B.HJS_SLS_AMT2
              , A.N6TH_CO_AMT      = B.CO_AMT
              , A.N6TH_ADJ_OTR_FNL_AMT = B.N6TH_ADJ_OTR_FNL_AMT
              , A.UPD_USR_ID       = @[upd_usr_id]
              , A.UPD_DT           = SYSDATE 
WHEN NOT MATCHED THEN
         INSERT
                (
                        A.VSL_CD
                      , A.SKD_VOY_NO
                      , A.SKD_DIR_CD
                      , A.IOC_CD
                      , A.RLANE_CD
                      , A.TRD_CD
                      , A.CNTR_TPSZ_CD
                      , A.STND_COST_CD
                      , A.N6TH_ESTM_PL_AMT
                      , A.UPD_USR_ID
                      , A.UPD_DT
                      , A.AGMT_SGN_OFC_CD
                      , A.SLS_OFC_CD
                      , A.N6TH_HJS_SLS_AMT
                      , A.N6TH_CO_AMT
                      , A.OP_LANE_TP_CD
                      , A.CRE_USR_ID
                      , A.CRE_DT
                      , A.N6TH_ADJ_OTR_FNL_AMT
                      , A.N6TH_ASGN_AMT

                )
                VALUES
                (
                        B.VSL_CD
                      , B.SKD_VOY_NO
                      , B.DIR_CD
                      , B.IOC_CD
                      , B.RLANE_CD
                      , B.TRD_CD
                      , B.CNTR_TPSZ_CD
                      , B.STND_COST_CD
                      , B.ESTM_PL_AMT
                      , @[upd_usr_id]
                      , SYSDATE
                      , B.AGMT_SGN_OFC_CD
                      , B.SLS_OFC_CD
                      , B.HJS_SLS_AMT2
                      , B.CO_AMT
                      , B.OP_LANE_TP_CD
                      , @[upd_usr_id]
                      , SYSDATE
                      , B.N6TH_ADJ_OTR_FNL_AMT
                      , B.N6TH_ASGN_AMT
                )			]]></sql>
			<params>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="ioc_cd" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="cost_yrmon_s" type="12" value="" out="N"/>
				<param name="cost_yrmon_e" type="12" value="" out="N"/>
				<param name="cost_yrmon" type="12" value="" out="N"/>
				<param name="sls_yrmon" type="12" value="" out="N"/>
				<param name="cost_wk_s" type="12" value="" out="N"/>
				<param name="cost_wk_e" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
