<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="UnmatchBLDBDAOCheckScEffectiveDateDiscrepancyRSQL">
			<desc><![CDATA[CheckScEffectiveDateDiscrepancy]]></desc>
			<sql><![CDATA[
WITH
SC AS
(
/*******************************************************************************************
계약 정보 조회
*******************************************************************************************/
SELECT * FROM (
SELECT  SS.PROP_NO    ,
        SS.AMDT_SEQ   ,
        SS.SVC_SCP_CD
FROM    BKG_BOOKING     BK  ,
        MDM_LOCATION    L1  ,
        MDM_LOCATION    L4  ,
        PRI_SP_HDR      SH  ,
        PRI_SP_MN       SM  ,
        PRI_SP_SCP_MN   SS
WHERE   L1.LOC_CD       = BK.POR_CD
AND     L4.LOC_CD       = BK.DEL_CD
AND     SH.SC_NO        = BK.SC_NO
AND     SM.PROP_NO      = SH.PROP_NO
AND     SM.PROP_STS_CD  = 'F'       -- FILED S/C
AND     SS.PROP_NO      = SM.PROP_NO
AND     SS.AMDT_SEQ     = SM.AMDT_SEQ
AND     SS.SVC_SCP_CD   IN (BK.SVC_SCP_CD,DECODE(BK.SVC_SCP_CD,'ACE','TPE','MXE','TPE'))
AND     ( SELECT BKG_REV_APLY_DT_PKG.BKG_GET_REV_APLY_DT_FNC(@[bkg_no], @[ca_flg]) FROM DUAL )
        BETWEEN SS.EFF_DT AND SS.EXP_DT
AND     BK.BKG_NO       = @[bkg_no]
AND     @[ca_flg]       = 'N'
ORDER BY DECODE(SS.SVC_SCP_CD,'ACE',1,'MXE',2,'TPE',3)
)
WHERE ROWNUM = 1

UNION ALL

SELECT * FROM (
SELECT  SS.PROP_NO    ,
        SS.AMDT_SEQ   ,
        SS.SVC_SCP_CD
FROM    BKG_BKG_HIS     BK  ,
        MDM_LOCATION    L1  ,
        MDM_LOCATION    L4  ,
        PRI_SP_HDR      SH  ,
        PRI_SP_MN       SM  ,
        PRI_SP_SCP_MN   SS
WHERE   L1.LOC_CD       = BK.POR_CD
AND     L4.LOC_CD       = BK.DEL_CD
AND     SH.SC_NO        = BK.SC_NO
AND     SM.PROP_NO      = SH.PROP_NO
AND     SM.PROP_STS_CD  = 'F'       -- FILED S/C
AND     SS.PROP_NO      = SM.PROP_NO
AND     SS.AMDT_SEQ     = SM.AMDT_SEQ
AND     SS.SVC_SCP_CD   IN (BK.SVC_SCP_CD,DECODE(BK.SVC_SCP_CD,'ACE','TPE','MXE','TPE'))
AND     ( SELECT BKG_REV_APLY_DT_PKG.BKG_GET_REV_APLY_DT_FNC(@[bkg_no], @[ca_flg]) FROM DUAL )
        BETWEEN SS.EFF_DT AND SS.EXP_DT
AND     BK.BKG_NO       = @[bkg_no]
AND     BK.CORR_NO      = 'TMP0000001'  -- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
AND     @[ca_flg]       = 'Y'
ORDER BY DECODE(SS.SVC_SCP_CD,'ACE',1,'MXE',2,'TPE',3)
)
WHERE ROWNUM = 1
) ,
BK AS
(
/*******************************************************************************************
BKG 정보 조회
*******************************************************************************************/

SELECT  BK.SC_NO       ,
        BK.SVC_SCP_CD  ,
        BKG_REV_APLY_DT_PKG.BKG_GET_REV_APLY_TP_FNC (@[bkg_no], @[ca_flg])  REV_APLY_TP_CD  ,
        BKG_REV_APLY_DT_PKG.BKG_GET_RT_APLY_DT_FNC  (@[bkg_no], @[ca_flg])  RT_APLY_DT      ,
        BKG_REV_APLY_DT_PKG.BKG_GET_CGO_RCV_DT_FNC  (@[bkg_no], @[ca_flg])  CGO_RCV_DT      ,
        BKG_REV_APLY_DT_PKG.BKG_GET_ETD_DT_FNC      (@[bkg_no], @[ca_flg])  POL_ETD_DT      ,
        BKG_REV_APLY_DT_PKG.BKG_GET_ETB_DT_FNC      (@[bkg_no], @[ca_flg])  POL_ETB_DT
FROM    BKG_BOOKING BK
WHERE   BK.BKG_NO   = @[bkg_no]
AND     @[ca_flg]   = 'N'

UNION ALL

SELECT  BK.SC_NO       ,
        BK.SVC_SCP_CD  ,
        BKG_REV_APLY_DT_PKG.BKG_GET_REV_APLY_TP_FNC (@[bkg_no], @[ca_flg])  REV_APLY_TP_CD  ,
        BKG_REV_APLY_DT_PKG.BKG_GET_RT_APLY_DT_FNC  (@[bkg_no], @[ca_flg])  RT_APLY_DT      ,
        BKG_REV_APLY_DT_PKG.BKG_GET_CGO_RCV_DT_FNC  (@[bkg_no], @[ca_flg])  CGO_RCV_DT      ,
        BKG_REV_APLY_DT_PKG.BKG_GET_ETD_DT_FNC      (@[bkg_no], @[ca_flg])  POL_ETD_DT      ,
        BKG_REV_APLY_DT_PKG.BKG_GET_ETB_DT_FNC      (@[bkg_no], @[ca_flg])  POL_ETB_DT
FROM    BKG_BKG_HIS BK
WHERE   BK.BKG_NO   = @[bkg_no]
AND     BK.CORR_NO  = 'TMP0000001'  -- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
AND     @[ca_flg]   = 'Y'
) ,
C1 AS
(
SELECT  CASE
		WHEN  BK.SC_NO IN ( SELECT ATTR_CTNT2 FROM BKG_HRD_CDG_CTNT
                             WHERE HRD_CDG_ID ='AUD_EXPT_LIST'
                               AND ATTR_CTNT1 ='S' -- Hard Coding 제거 
                                  ) AND BK.REV_APLY_TP_CD ='C' 
	      THEN  '[POL ETD][' || TO_CHAR(BK.POL_ETD_DT, 'YYYY-MM-DD') || ']'


        WHEN  BK.SC_NO NOT IN (  SELECT ATTR_CTNT2 FROM BKG_HRD_CDG_CTNT
                             WHERE HRD_CDG_ID ='AUD_EXPT_LIST'
                               AND ATTR_CTNT1 ='S' -- Hard Coding 제거 
                                  ) AND BK.REV_APLY_TP_CD = 'C'
          THEN  '[CRD][' || TO_CHAR(BK.CGO_RCV_DT, 'YYYY-MM-DD') || ']'

        ELSE  '[POL ETD][' || TO_CHAR(BK.POL_ETD_DT, 'YYYY-MM-DD') || ']'
        END   BKG_ITM_LOG   ,
        '[Effective Date][' || TO_CHAR(SD.CTRT_EFF_DT, 'YYYY-MM-DD') || ']' || CHR(10) || '[Expiration Date][' || TO_CHAR(SD.CTRT_EXP_DT, 'YYYY-MM-DD') || ']'  CTRT_ITM_LOG
FROM    BK  ,
        (
        /* S/C Duration */
        SELECT  SD.CTRT_EFF_DT    ,
                SD.CTRT_EXP_DT
        FROM    SC  ,
                PRI_SP_SCP_DUR  SD
        WHERE   SD.PROP_NO      = SC.PROP_NO
        AND     SD.AMDT_SEQ     = SC.AMDT_SEQ
        AND     SD.SVC_SCP_CD   = SC.SVC_SCP_CD
        ) SD
WHERE   CASE
		/* 신재훈 대리 요청 특정 S/C 강제적용 추후 Table 로 관리 예정*/
	WHEN      BK.SC_NO IN ( SELECT ATTR_CTNT2 FROM BKG_HRD_CDG_CTNT
                             WHERE HRD_CDG_ID ='AUD_EXPT_LIST'
                               AND ATTR_CTNT1 ='S' -- Hard Coding 제거 
                              ) AND BK.REV_APLY_TP_CD ='C' 

	      AND BK.POL_ETD_DT BETWEEN SD.CTRT_EFF_DT AND SD.CTRT_EXP_DT THEN 'Y'
        WHEN    BK.SC_NO NOT IN ( SELECT ATTR_CTNT2 FROM BKG_HRD_CDG_CTNT
                             WHERE HRD_CDG_ID ='AUD_EXPT_LIST'
                               AND ATTR_CTNT1 ='S' -- Hard Coding 제거 
                              ) AND     BK.REV_APLY_TP_CD = 'C'
              AND NVL(BK.CGO_RCV_DT, SD.CTRT_EFF_DT) BETWEEN SD.CTRT_EFF_DT AND SD.CTRT_EXP_DT
          THEN  'Y'
        WHEN      BK.REV_APLY_TP_CD <> 'C'
              AND (
                      NVL(BK.POL_ETD_DT, BK.RT_APLY_DT) BETWEEN SD.CTRT_EFF_DT AND SD.CTRT_EXP_DT
                  OR  NVL(BK.POL_ETB_DT, BK.RT_APLY_DT) BETWEEN SD.CTRT_EFF_DT AND SD.CTRT_EXP_DT
                  )
          THEN  'Y'
        ELSE  'N'
        END
        = 'N'

UNION ALL

SELECT  CASE
        WHEN  BK.REV_APLY_TP_CD = 'C'
          THEN  '[CRD][' || TO_CHAR(BK.CGO_RCV_DT, 'YYYY-MM-DD') || ']'
        ELSE  '[POL ETD][' || TO_CHAR(BK.POL_ETD_DT, 'YYYY-MM-DD') || ']'
        END   BKG_ITM_LOG   ,
        '[Effective Date][' || TO_CHAR(SD.CTRT_EFF_DT, 'YYYY-MM-DD') || ']' || CHR(10) || '[Expiration Date][' || TO_CHAR(SD.CTRT_EXP_DT, 'YYYY-MM-DD') || ']'  CTRT_ITM_LOG
FROM    BK  ,
        (
        SELECT  SD.CTRT_EFF_DT    ,
                SD.CTRT_EXP_DT    ,
                ROW_NUMBER() OVER ( ORDER BY SD.AMDT_SEQ DESC )  ROW_NUMBER
        FROM    BK  ,
                PRI_SP_HDR      SH  ,
                PRI_SP_SCP_DUR  SD
        WHERE   SH.SC_NO        = BK.SC_NO
        AND     SD.PROP_NO      = SH.PROP_NO
        AND     SD.SVC_SCP_CD   = BK.SVC_SCP_CD
        ) SD
WHERE   NOT EXISTS  ( SELECT 'X' FROM SC )
AND     SD.ROW_NUMBER = 1
) ,
C2 AS
(
SELECT  CASE
        WHEN  BK.REV_APLY_TP_CD = 'C'
          THEN  '[CRD][' || TO_CHAR(BK.CGO_RCV_DT, 'YYYY-MM-DD') || ']' || CHR(10) || '[Application Date][' || TO_CHAR(BK.RT_APLY_DT, 'YYYY-MM-DD') || ']'
        ELSE  '[POL ETD][' || TO_CHAR(BK.POL_ETD_DT, 'YYYY-MM-DD') || ']' || CHR(10) || '[Application Date][' || TO_CHAR(BK.RT_APLY_DT, 'YYYY-MM-DD') || ']'
        END   BKG_ITM_LOG   ,
        NULL  CTRT_ITM_LOG
FROM    BK
WHERE   CASE
        WHEN      BK.REV_APLY_TP_CD = 'C'
              AND NVL(BK.CGO_RCV_DT, BK.RT_APLY_DT) = BK.RT_APLY_DT
          THEN  'Y'
        WHEN      BK.REV_APLY_TP_CD <> 'C'
              AND BK.RT_APLY_DT BETWEEN NVL(BK.POL_ETB_DT, BK.RT_APLY_DT) AND NVL(BK.POL_ETD_DT, BK.RT_APLY_DT)
          THEN  'Y'
        ELSE  'N'
        END
        = 'N'
)
SELECT  'A1'   UMCH_TP_CD      ,
        C1.BKG_ITM_LOG    BKG_ITM_LOG     ,
        C1.CTRT_ITM_LOG CTRT_ITM_LOG    ,
        'U'   MTCH_UMCH_TP_CD ,
        ( SELECT UMCH_TP_DESC FROM BKG_REV_UMCH_TP WHERE UMCH_TP_CD = 'A1' ) UMCH_TP_DESC  ,
        ( SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD02456' AND INTG_CD_VAL_CTNT = 'U' ) MTCH_UMCH_TP_DESC
FROM    C1
        LEFT OUTER JOIN C2 ON 1 = 1


/*******************************************************************************************
신규 BKG 만 대상으로 한다.
*******************************************************************************************/

WHERE   LENGTH(@[bkg_no]) = 12

/*******************************************************************************************
CO-BIZ은 대상에서 제외한다.
*******************************************************************************************/
AND     (
        SELECT  NVL(RT_BL_TP_CD, 'N')
        FROM    BKG_RATE
        WHERE   BKG_NO        = @[bkg_no]
        AND     @[ca_flg]     = 'N'
        UNION ALL
        SELECT  NVL(RT_BL_TP_CD, 'N')
        FROM    BKG_RT_HIS
        WHERE   BKG_NO        = @[bkg_no]
        AND     CORR_NO       = 'TMP0000001'  -- CORRECTION 중인 DATA 를 나타내는 고정된 상수값
        AND     @[ca_flg]     = 'Y'
        )
        NOT IN ( 'B' )			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="ca_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
