/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : Eur24ManifestDownloadDBDAOSearchEur24BlManifestOBListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.08.18
*@LastModifier : 
*@LastVersion : 1.0
* 2015.08.18 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.bkg.customsdeclaration.manifestlistdownload.eur24.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class Eur24ManifestDownloadDBDAOSearchEur24BlManifestOBListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Eur24ManifestDownloadDBDAOSearchEur24BlManifestOBListRSQL
	  * 2012.02.08 김보배 [CHM-201216053] [BKG] [EXS] List로직 보완 - ENS MRN넘버 존재하는 건들 포함
	  * </pre>
	  */
	public Eur24ManifestDownloadDBDAOSearchEur24BlManifestOBListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_pod_yard_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_b_staff",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_b_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_s_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_pol_yard_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_pod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_bl_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("p_lt",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.bkg.customsdeclaration.manifestlistdownload.eur24.integration").append("\n"); 
		query.append("FileName : Eur24ManifestDownloadDBDAOSearchEur24BlManifestOBListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("/* OUTBOUND */" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("DECODE( ROWNUM,1,( SELECT CASE WHEN  NVL(MAX(ACT.ACT_ARR_DT),TO_DATE(ZZ.VPS_ETA_DT,'YYYY-MM-DD HH24:MI')) <= GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS', SYSDATE, ZZ.EU_1ST_PORT) THEN 'Y' " ).append("\n"); 
		query.append("                                ELSE 'N'" ).append("\n"); 
		query.append("                           END  /* 새로운 POFE에서의 Actual ETA 이후에는 전송 안됨, DOWNLOAD 데이타만 적용 */" ).append("\n"); 
		query.append("                      FROM VSK_ACT_PORT_SKD ACT" ).append("\n"); 
		query.append("                     WHERE VSL_CD      = ZZ.VSL_CD" ).append("\n"); 
		query.append("                       AND SKD_VOY_NO  = ZZ.SKD_VOY_NO" ).append("\n"); 
		query.append("                       AND SKD_DIR_CD  = ZZ.SKD_DIR_CD" ).append("\n"); 
		query.append("                       AND VPS_PORT_CD = ZZ.EU_1ST_PORT" ).append("\n"); 
		query.append("                       AND ROWNUM = 1" ).append("\n"); 
		query.append("                   ) " ).append("\n"); 
		query.append(") AS ATA_YN" ).append("\n"); 
		query.append(", ' ' AS UPDATE_REASON /* NULL 이면 머지가 안된다.*/" ).append("\n"); 
		query.append("/* A/N Sending 후 Accepted 된 VVD에 대한 ENS전송 방지 */" ).append("\n"); 
		query.append(",DECODE( ROWNUM,1, NVL( ( SELECT 'Y'" ).append("\n"); 
		query.append("           FROM BKG_CSTMS_EUR_IO_RCV RCV" ).append("\n"); 
		query.append("             WHERE 1=1" ).append("\n"); 
		query.append("             AND BND_TP_CD = 'O'" ).append("\n"); 
		query.append("             AND ACK_RCV_STS_CD  = 'A'" ).append("\n"); 
		query.append("             AND RCV. RCV_TMS = (  SELECT MAX(RCV_TMS)" ).append("\n"); 
		query.append("                                     FROM BKG_CSTMS_EUR_IO_SND A, BKG_CSTMS_EUR_IO_RCV B" ).append("\n"); 
		query.append("                                    WHERE A.EUR_EDI_MSG_TP_ID ='ARN'" ).append("\n"); 
		query.append("                                      AND A.VSL_CD            = ZZ.VSL_CD" ).append("\n"); 
		query.append("                                      AND A.SKD_VOY_NO        = ZZ.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      AND A.SKD_DIR_CD        = ZZ.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      AND A.CSTMS_PORT_CD     = ZZ.EU_1ST_PORT" ).append("\n"); 
		query.append("									  AND A.BND_TP_CD  = B.BND_TP_CD" ).append("\n"); 
		query.append("                                      AND A.MSG_SND_NO = B.MSG_RCV_NO" ).append("\n"); 
		query.append("									  AND A.BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("                                      AND (ACK_KND_ID != 'S' OR ACK_RCV_STS_CD != 'A')" ).append("\n"); 
		query.append("                       )" ).append("\n"); 
		query.append("          AND ROWNUM =1" ).append("\n"); 
		query.append("         ),'N')" ).append("\n"); 
		query.append("    )AS ARN_YN" ).append("\n"); 
		query.append(",CASE WHEN ROWNUM =1 " ).append("\n"); 
		query.append("           AND ( " ).append("\n"); 
		query.append("     NVL(( SELECT 'Y'" ).append("\n"); 
		query.append("          FROM  BKG_CSTMS_EUR_IO_RCV RCV" ).append("\n"); 
		query.append("          WHERE 1=1" ).append("\n"); 
		query.append("		    AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("            AND ACK_RCV_STS_CD  = 'A'" ).append("\n"); 
		query.append("            AND RCV. RCV_TMS = (  SELECT MAX(RCV_TMS)" ).append("\n"); 
		query.append("                                    FROM BKG_CSTMS_EUR_IO_SND A, BKG_CSTMS_EUR_IO_RCV B" ).append("\n"); 
		query.append("                                   WHERE A.EUR_EDI_MSG_TP_ID ='DIV'" ).append("\n"); 
		query.append("                                     AND A.VSL_CD            = ZZ.VSL_CD" ).append("\n"); 
		query.append("                                     AND A.SKD_VOY_NO        = ZZ.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     AND A.SKD_DIR_CD        = ZZ.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.CSTMS_PORT_CD     = ZZ.EU_1ST_PORT" ).append("\n"); 
		query.append("									 AND A.BND_TP_CD  = B.BND_TP_CD" ).append("\n"); 
		query.append("                                     AND A.MSG_SND_NO = B.MSG_RCV_NO" ).append("\n"); 
		query.append("								     AND A.BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("                                     AND (ACK_KND_ID != 'S'" ).append("\n"); 
		query.append("                                          OR ACK_RCV_STS_CD != 'A')" ).append("\n"); 
		query.append("               )" ).append("\n"); 
		query.append("      AND ROWNUM =1" ).append("\n"); 
		query.append("      ),'N') = 'Y'" ).append("\n"); 
		query.append("                OR " ).append("\n"); 
		query.append("     NVL(( SELECT 'Y'" ).append("\n"); 
		query.append("             FROM BKG_CSTMS_EUR_IO_VSL EVSL" ).append("\n"); 
		query.append("        	WHERE EVSL.VSL_CD        = ZZ.VSL_CD" ).append("\n"); 
		query.append("	          AND EVSL.SKD_VOY_NO    = ZZ.SKD_VOY_NO" ).append("\n"); 
		query.append("	          AND EVSL.SKD_DIR_CD    = ZZ.SKD_DIR_CD" ).append("\n"); 
		query.append("      	      AND EVSL.CSTMS_PORT_CD = ZZ.EU_1ST_PORT" ).append("\n"); 
		query.append("	          AND EVSL.BND_TP_CD = 'O'" ).append("\n"); 
		query.append("      	      AND DVS_RQST_SMT_FLG   = 'Y'" ).append("\n"); 
		query.append("        ) ,'N') = 'Y'" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("     THEN 'Y'" ).append("\n"); 
		query.append("  ELSE 'N'" ).append("\n"); 
		query.append(" END AS DR_YN" ).append("\n"); 
		query.append(", ZZ.* " ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT  COUNT( DISTINCT DECODE( ERR_YN,'Y',BL_NO,NULL ) ) OVER() AS TTL_ERR_BL" ).append("\n"); 
		query.append(",DENSE_RANK() OVER (ORDER BY POD,BL_NO) AS DT_SEQ" ).append("\n"); 
		query.append(",COUNT(DISTINCT MSG_SND_NO) OVER() AS SENT_BL_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(MSG_SND_NO,NULL,BL_NO,NULL)) OVER() AS UNSENT_BL_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(RESULT2,'A',BL_NO,NULL)) OVER()   AS A_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(RESULT2,'R',BL_NO,NULL)) OVER()   AS R_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(RESULT2,'DNL',BL_NO,NULL)) OVER() AS DNL_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(RESULT2,'D',BL_NO,'P',BL_NO,'H',BL_NO,NULL)) OVER() AS H_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(RESULT2,'L',BL_NO,NULL)) OVER()   AS L_CNT" ).append("\n"); 
		query.append(",COUNT(DISTINCT DECODE(RESULT2,'NR',BL_NO,NULL)) OVER()  AS NR_CNT" ).append("\n"); 
		query.append(", Z.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("    DECODE( INSTR(SH_NM||SH_AD||SH_CT||SH_CN||SH_ZIP||SH_STR||SH_EORI" ).append("\n"); 
		query.append("            ||CNEE_NM||CNEE_AD||CNEE_CT||CNEE_CN||CNEE_ZIP||CNEE_STR||CNEE_EORI" ).append("\n"); 
		query.append("            ||NTFY_NM||NTFY_AD||NTFY_CT||NTFY_CN||NTFY_ZIP||NTFY_STR||NTFY_EORI" ).append("\n"); 
		query.append("            ||BL_PK||BL_WT||CNTR_PK||CNTR_WT||CM_PK||CM_WT||CM_DS||CNTR_SEAL,'E'),0,'N','Y') AS ERR_YN" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(PORT_OFC.PORT_OFC_CD_SVC_FLG,1) AS PORT_OFC_CD" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(PORT_OFC.PORT_OFC_CD_SVC_FLG,2) AS ENS_EDI_SVC_FLG " ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(PORT_OFC.PORT_OFC_CD_SVC_FLG,3) AS EXS_EDI_SVC_FLG " ).append("\n"); 
		query.append(", DECODE(ENS_SEND_DT,NULL,'',ENS_SEND_DT||CHR(13)||CHR(10)||'('||ENS_SEND_GMT_DT||')') AS SENT_TIME" ).append("\n"); 
		query.append(", DECODE(ACK_RCV_DT,NULL,'',ACK_RCV_DT||CHR(13)||CHR(10)||'('||ACK_RCV_GMT_DT||')') AS RECEIVED_TIME" ).append("\n"); 
		query.append(", Y.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("        CASE WHEN BL_PK1 = 0 OR BL_PK1 != CNTR_PK_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS BL_PK" ).append("\n"); 
		query.append("       ,CASE WHEN BL_WT1 = 0 OR BL_WT1 != CNTR_WT_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS BL_WT" ).append("\n"); 
		query.append("       ,CASE WHEN CNTR_PK1 = 0 OR CNTR_PK1 != CM_PK_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS CNTR_PK" ).append("\n"); 
		query.append("       ,CASE WHEN CNTR_WT1 = 0 OR CNTR_WT1 != CM_WT_SUM THEN DECODE(BB_CGO_FLG,'Y','N','E') ELSE 'Y' END AS CNTR_WT" ).append("\n"); 
		query.append("       , XXX.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("     SUM(CNTR_PK1) OVER(PARTITION BY BL_NO) AS  CNTR_PK_SUM" ).append("\n"); 
		query.append("   , SUM(CNTR_WT1) OVER(PARTITION BY BL_NO) AS  CNTR_WT_SUM" ).append("\n"); 
		query.append("   , SUM(CM_PK1) OVER(PARTITION BY BL_NO,CNTR_CNTR_NO) AS  CM_PK_SUM" ).append("\n"); 
		query.append("   , SUM(CM_WT1) OVER(PARTITION BY BL_NO,CNTR_CNTR_NO) AS  CM_WT_SUM" ).append("\n"); 
		query.append("   , DECODE(CM_PK1,0,DECODE(BB_CGO_FLG,'Y','N','E'),'Y') AS CM_PK" ).append("\n"); 
		query.append("   , DECODE(CM_WT1,0,DECODE(BB_CGO_FLG,'Y','N','E'),'Y') AS CM_WT " ).append("\n"); 
		query.append("      , XX.*  " ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("        NISADM.BKG_GET_TOKEN_FNC(CM_DATA,1) AS CM_PK1" ).append("\n"); 
		query.append("      , NISADM.BKG_GET_TOKEN_FNC(CM_DATA,2) AS CM_WT1" ).append("\n"); 
		query.append("      , DECODE(NISADM.BKG_GET_TOKEN_FNC(CM_DATA,3),0,'N','Y') AS CM_MS" ).append("\n"); 
		query.append("      , DECODE(NVL(NISADM.BKG_GET_TOKEN_FNC(CM_DATA,4),0),0,'E','Y') AS CM_DS" ).append("\n"); 
		query.append("      , DECODE(NVL(NISADM.BKG_GET_TOKEN_FNC(CM_DATA,5),0),0,'N','Y') AS CM_MK" ).append("\n"); 
		query.append("      , DECODE(NVL(NISADM.BKG_GET_TOKEN_FNC(CM_DATA,6),0),0,'N','Y') AS CM_HTS" ).append("\n"); 
		query.append("      , COUNT(DISTINCT BL_NO) OVER() TTL_BL" ).append("\n"); 
		query.append("      , COUNT(DISTINCT CNTR_CNTR_NO) OVER() TTL_CNTR  " ).append("\n"); 
		query.append("  /*" ).append("\n"); 
		query.append("   Accepted : Accepted ACK를 접수한 경우" ).append("\n"); 
		query.append("   Rejected : Rejected ACK를 접수한 경우" ).append("\n"); 
		query.append("   Do Not Load : Do Not Load ACK를 접수한 경우" ).append("\n"); 
		query.append("   Not Received : 전송되었으나, ACK를 미 수신한 경우" ).append("\n"); 
		query.append("  */" ).append("\n"); 
		query.append("      , CASE WHEN DOWNLOAD_YN = 'N'                           THEN ''" ).append("\n"); 
		query.append("			 WHEN RESULT_CD ='561'                            THEN 'Hold'	    ||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("             WHEN ACK = 'A'                                   THEN 'Accepted'   ||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("             WHEN ACK = 'R'              AND RESULT_CD ='351' THEN 'Do Not Load'||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("             WHEN ACK = 'R'                                   THEN 'Rejected'   ||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("			 WHEN ACK = 'D'                                   THEN 'Hold(Doc.)' ||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("			 WHEN ACK = 'P'                                   THEN 'Hold(Phys.)' ||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("			 WHEN ACK = 'L'                                   THEN 'Hold Release' ||DECODE(ACK_KND_ID,'S','(S)')" ).append("\n"); 
		query.append("             WHEN MSG_SND_NO IS NOT NULL AND RCV IS NULL      THEN 'Not Received'" ).append("\n"); 
		query.append("        END AS ENS_RESULT" ).append("\n"); 
		query.append(" , CASE WHEN DOWNLOAD_YN = 'N'                           THEN ''" ).append("\n"); 
		query.append("     WHEN RESULT_CD ='561'                            THEN 'H'" ).append("\n"); 
		query.append("     WHEN ACK = 'A'                                   THEN 'A'" ).append("\n"); 
		query.append("     WHEN ACK = 'R'              AND RESULT_CD ='351' THEN 'DNL'" ).append("\n"); 
		query.append("     WHEN ACK = 'R'                                   THEN 'R'" ).append("\n"); 
		query.append("	 WHEN ACK = 'D'                                   THEN 'D'" ).append("\n"); 
		query.append("	 WHEN ACK = 'P'                                   THEN 'P'" ).append("\n"); 
		query.append("	 WHEN ACK = 'L'                                   THEN 'L'" ).append("\n"); 
		query.append("     WHEN MSG_SND_NO IS NOT NULL AND RCV IS NULL      THEN 'NR'" ).append("\n"); 
		query.append("   END AS RESULT2" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("   ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_NM1,  'E','N',CNEE_NM1),CNEE_NM1)     AS CNEE_NM" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_AD1,  'E','N',CNEE_AD1),CNEE_AD1)     AS CNEE_AD" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_CT1,  'E','N',CNEE_CT1),CNEE_CT1)     AS CNEE_CT" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_CN1,  'E','N',CNEE_CN1),CNEE_CN1)     AS CNEE_CN" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_ZIP1, 'E','N',CNEE_ZIP1),CNEE_ZIP1)   AS CNEE_ZIP" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_STR1, 'E','N',CNEE_STR1),CNEE_STR1)   AS CNEE_STR" ).append("\n"); 
		query.append("      ,DECODE(CNEE_EORI1,'VE','E',DECODE(CUST_TO_ORD_FLG,'Y',DECODE(CNEE_EORI1,'E','N',CNEE_EORI1),CNEE_EORI1)) AS CNEE_EORI" ).append("\n"); 
		query.append("   ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_NM1,DECODE(NTFY_NM1,  'E','N',NTFY_NM1))     AS NTFY_NM" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_AD1,DECODE(NTFY_AD1,  'E','N',NTFY_AD1))     AS NTFY_AD" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_CT1,DECODE(NTFY_CT1,  'E','N',NTFY_CT1))     AS NTFY_CT" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_CN1,DECODE(NTFY_CN1,  'E','N',NTFY_CN1))     AS NTFY_CN" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_ZIP1,DECODE(NTFY_ZIP1, 'E','N',NTFY_ZIP1))   AS NTFY_ZIP" ).append("\n"); 
		query.append("      ,DECODE(CUST_TO_ORD_FLG,'Y',NTFY_STR1,DECODE(NTFY_STR1, 'E','N',NTFY_STR1))   AS NTFY_STR" ).append("\n"); 
		query.append("      ,DECODE(NTFY_EORI1,'VE','E',DECODE(CUST_TO_ORD_FLG,'Y',NTFY_EORI1,DECODE(NTFY_EORI1,'E','N',NTFY_EORI1)) ) AS NTFY_EORI" ).append("\n"); 
		query.append("      ,DECODE(EDI_MRN,NULL,'Original','Amendment') AS BL_STATUS" ).append("\n"); 
		query.append("      , X.*" ).append("\n"); 
		query.append("  FROM (         " ).append("\n"); 
		query.append("  /* 다운로드 안된 데이타 조회 */  " ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append(" ACK ,ACK_KND_ID ,ACK_RCV_DT ,ACK_RCV_GMT_DT ,BKG_NO ,BL_MS ,BL_NO ,BL_PK1 ,BL_WT1 ,BPOD ,BPOL " ).append("\n"); 
		query.append(",CM_DATA ,CNEE_AD1 ,CNEE_CN1 ,CNEE_CT1 ,CNEE_EORI1 ,CNEE_NM1 ,CNEE_STR1 ,CNEE_ZIP1 ,CNTR_CNTR_NO ,CNTR_MS ,CNTR_PK1 ,CNTR_SEAL ,CNTR_WT1 ,CT ,CUST_TO_ORD_FLG " ).append("\n"); 
		query.append(",DEL ,DOWNLOAD_YN ,EDI_MRN ,KTS_SEND_DT,ENS_SEND_DT ,ENS_SEND_GMT_DT ,EU_1ST_PORT ,EU_1ST_PORT_YD_CD ,LT ,MSG_SND_NO " ).append("\n"); 
		query.append(",NTFY_AD1 ,NTFY_CN1 ,NTFY_CT1 ,NTFY_EORI1 ,NTFY_NM1 ,NTFY_STR1 ,NTFY_ZIP1 ,POD ,POL ,RCV ,RESULT_CD " ).append("\n"); 
		query.append(",SH_AD ,SH_CN ,SH_CT ,SH_EORI ,SH_NM ,SH_STR ,SH_ZIP ,SKD_DIR_CD ,SKD_VOY_NO ,SND_USR_OFC_CD " ).append("\n"); 
		query.append(",VPS_ETA_DT ,VPS_ETD_DT ,VSL_CD ,VVD,RCV_MSG" ).append("\n"); 
		query.append(",EDI_RCV_DT,EDI_RCV_SEQ,BB_CGO_FLG" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append(" BKG_GET_TOKEN_FNC(RCV,3) AS ACK" ).append("\n"); 
		query.append(",BKG_GET_TOKEN_FNC(RCV,5) AS RESULT_CD" ).append("\n"); 
		query.append(",TO_CHAR(GLOBALDATE_PKG.TIME_CONV_OFC_FNC('SELSC',TO_DATE(BKG_GET_TOKEN_FNC(RCV,4),'YYYY-MM-DD HH24:MI'), SND_USR_OFC_CD ), 'YYYY-MM-DD HH24:MI')  AS ACK_RCV_DT" ).append("\n"); 
		query.append(",TO_CHAR(GLOBALDATE_PKG.TIME_CONV_OFC_FNC('SELSC',TO_DATE(BKG_GET_TOKEN_FNC(RCV,4),'YYYY-MM-DD HH24:MI'), 'GMT'),           'YYYY-MM-DD HH24:MI')  AS ACK_RCV_GMT_DT" ).append("\n"); 
		query.append(",BKG_GET_TOKEN_FNC(RCV,6) AS ACK_KND_ID" ).append("\n"); 
		query.append(",BKG_GET_TOKEN_FNC(RCV,7) AS RCV_MSG" ).append("\n"); 
		query.append(",DECODE(EBL_NO,NULL,'N','Y')AS DOWNLOAD_YN" ).append("\n"); 
		query.append(", MVMT_REF_NO AS EDI_MRN " ).append("\n"); 
		query.append(", NVL(KTS_SEND_DT1,KTS_SEND_DT2) AS KTS_SEND_DT" ).append("\n"); 
		query.append(",BKG_GET_TOKEN_FNC(RCV,1) AS EDI_RCV_DT" ).append("\n"); 
		query.append(",BKG_GET_TOKEN_FNC(RCV,2) AS EDI_RCV_SEQ" ).append("\n"); 
		query.append(",K.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("       (SELECT EDI_RCV_DT||','||EDI_RCV_SEQ||','|| ACK_RCV_STS_CD||','|| TO_CHAR(CRE_DT,'YYYY-MM-DD HH24:MI')||','||EUR_CSTMS_ACK_CD||','||ACK_KND_ID||','||RJCT_RSN_RMK" ).append("\n"); 
		query.append("          FROM  BKG_CSTMS_EUR_IO_RCV" ).append("\n"); 
		query.append("         WHERE RCV_TMS = ( SELECT MAX(RCV_TMS)" ).append("\n"); 
		query.append("                             FROM BKG_CSTMS_EUR_IO_RCV" ).append("\n"); 
		query.append("                            WHERE MSG_RCV_NO = BKG_GET_TOKEN_FNC(KKK.SND,1)" ).append("\n"); 
		query.append("         					  AND (ACK_KND_ID != 'S' OR ACK_RCV_STS_CD != 'A')" ).append("\n"); 
		query.append("                              AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("                          )" ).append("\n"); 
		query.append("           AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("        ) AS  RCV" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(KKK.SND,1)  AS MSG_SND_NO" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(KKK.SND,2)  AS ENS_SEND_DT" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(KKK.SND,3)  AS ENS_SEND_GMT_DT" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(KKK.SND,4)  AS SND_USR_OFC_CD" ).append("\n"); 
		query.append(", NVL(BKG_GET_TOKEN_FNC(KKK.SND,5), ( SELECT MVMT_REF_NO" ).append("\n"); 
		query.append("                FROM BKG_CSTMS_EUR_IO_BL EBL" ).append("\n"); 
		query.append("               WHERE EBL.MSG_SND_NO    = (SELECT MAX(MSG_SND_NO) " ).append("\n"); 
		query.append("                                             FROM BKG_CSTMS_EUR_IO_SND" ).append("\n"); 
		query.append("                                           WHERE BL_NO          = KKK.BL_NO" ).append("\n"); 
		query.append("                                             AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("                                             AND CSTMS_PORT_CD  = KKK.EU_1ST_PORT" ).append("\n"); 
		query.append("                                             AND (VSL_CD != KKK.VSL_CD OR SKD_VOY_NO != KKK.SKD_VOY_NO OR SKD_DIR_CD != KKK.SKD_DIR_CD)" ).append("\n"); 
		query.append("                                        )" ).append("\n"); 
		query.append("                AND EBL.BND_TP_CD = 'O'" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append(" ) AS MVMT_REF_NO" ).append("\n"); 
		query.append("/* 해당 BL의 VVD,POFE별 MRN이 없으면 POFE별 MRN을 찾는다. SND_DT도 같이 가져와 다음 인라인절에서 잘라 쓴다.*/" ).append("\n"); 
		query.append(", DECODE(BKG_GET_TOKEN_FNC(KKK.SND,5),NULL,'N','Y') AS BL_MRN_YN" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(KKK.SND,7) AS KTS_SEND_DT1" ).append("\n"); 
		query.append(",(SELECT MAX(TO_CHAR(CRE_DT,'YYYYMMDDHH24')) " ).append("\n"); 
		query.append("    FROM BKG_CSTMS_EUR_IO_SND  " ).append("\n"); 
		query.append("   WHERE BL_NO          = KKK.BL_NO" ).append("\n"); 
		query.append("     AND CSTMS_PORT_CD  = KKK.EU_1ST_PORT" ).append("\n"); 
		query.append("     AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("  ) AS  KTS_SEND_DT2" ).append("\n"); 
		query.append(", BKG_GET_TOKEN_FNC(KKK.SND,6) AS EBL_NO" ).append("\n"); 
		query.append(", KKK.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append(" (SELECT EBL.MSG_SND_NO||','||TO_CHAR(SND.SND_DT  ,'YYYY-MM-DD HH24:MI')||','||TO_CHAR(SND.SND_GDT ,'YYYY-MM-DD HH24:MI')||','||SND.SND_USR_OFC_CD||','||EBL.MVMT_REF_NO||','||EBL.BL_NO||','||TO_CHAR(SND.CRE_DT,'YYYYMMDDHH24')" ).append("\n"); 
		query.append("   FROM BKG_CSTMS_EUR_IO_SND SND, BKG_CSTMS_EUR_IO_BL EBL" ).append("\n"); 
		query.append("   WHERE EBL.MSG_SND_NO    = SND.MSG_SND_NO(+)" ).append("\n"); 
		query.append("     AND EBL.VSL_CD        = KK.VSL_CD" ).append("\n"); 
		query.append("     AND EBL.SKD_VOY_NO    = KK.SKD_VOY_NO" ).append("\n"); 
		query.append("     AND EBL.SKD_DIR_CD    = KK.SKD_DIR_CD" ).append("\n"); 
		query.append("     AND EBL.BL_NO         = KK.BL_NO" ).append("\n"); 
		query.append("     AND EBL.CSTMS_PORT_CD = KK.EU_1ST_PORT" ).append("\n"); 
		query.append("     AND SND.BND_TP_CD  = EBL.BND_TP_CD" ).append("\n"); 
		query.append("     AND SND.BND_TP_CD = 'O'" ).append("\n"); 
		query.append("  ) AS SND" ).append("\n"); 
		query.append("  ,KK.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("        SELECT  " ).append("\n"); 
		query.append("            VVD.VSL_CD || VVD.SKD_VOY_NO || VVD.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("           ,VVD.VSL_CD " ).append("\n"); 
		query.append("           ,VVD.SKD_VOY_NO " ).append("\n"); 
		query.append("           ,VVD.SKD_DIR_CD" ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("           ,BKG.BL_NO  AS BL_NO" ).append("\n"); 
		query.append("           ,BKG.BKG_NO AS BKG_NO" ).append("\n"); 
		query.append("           ,VVD.POL_CD AS POL" ).append("\n"); 
		query.append("           ,VVD.POD_CD AS POD" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           ,BKG.POL_CD AS BPOL" ).append("\n"); 
		query.append("           ,BKG.POD_CD AS BPOD" ).append("\n"); 
		query.append("           ,BKG.DEL_CD AS DEL" ).append("\n"); 
		query.append("           ,BKG_CGO_TP_CD AS CT" ).append("\n"); 
		query.append("           ,DECODE(VVD.POL_CD,BKG.POL_CD,'L','T') AS LT" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , DECODE(SHPR.CUST_NM,           NULL,'E','Y') AS SH_NM" ).append("\n"); 
		query.append("           , DECODE(SHPR.CUST_ADDR,         NULL,'E','Y') AS SH_AD" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_CTY_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.CUST_CTY_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_CT" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CSTMS_DECL_CNT_CD IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.CSTMS_DECL_CNT_CD IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_CN" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_ZIP_ID IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.CUST_ZIP_ID IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_ZIP" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.EUR_CSTMS_ST_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.EUR_CSTMS_ST_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_STR" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NOT NULL THEN   " ).append("\n"); 
		query.append("             CASE WHEN REGEXP_INSTR(SHPR.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(SHPR.EORI_NO),'TEST|NONE') < 1" ).append("\n"); 
		query.append("                                                    THEN 'Y' ELSE 'E' END" ).append("\n"); 
		query.append("                  WHEN SHPR.EORI_NO IS NULL " ).append("\n"); 
		query.append("                       AND (SHPR.CUST_CTY_NM IS NULL " ).append("\n"); 
		query.append("                        OR SHPR.CSTMS_DECL_CNT_CD IS NULL  " ).append("\n"); 
		query.append("                        OR SHPR.CUST_ZIP_ID IS NULL )" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_EORI" ).append("\n"); 
		query.append("                      " ).append("\n"); 
		query.append("           , DECODE(CNEE.CUST_NM,           NULL,'E','Y') AS CNEE_NM1" ).append("\n"); 
		query.append("           , DECODE(CNEE.CUST_ADDR,         NULL,'E','Y') AS CNEE_AD1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_CTY_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.CUST_CTY_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_CT1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CSTMS_DECL_CNT_CD IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.CSTMS_DECL_CNT_CD IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_CN1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_ZIP_ID IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.CUST_ZIP_ID IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_ZIP1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.EUR_CSTMS_ST_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.EUR_CSTMS_ST_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_STR1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NOT NULL THEN " ).append("\n"); 
		query.append("             CASE WHEN REGEXP_INSTR(CNEE.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(CNEE.EORI_NO),'TEST|NONE') < 1" ).append("\n"); 
		query.append("                                                    THEN 'Y' ELSE 'VE' END     " ).append("\n"); 
		query.append("                  WHEN CNEE.EORI_NO IS NULL " ).append("\n"); 
		query.append("                       AND (CNEE.CUST_CTY_NM IS NULL " ).append("\n"); 
		query.append("                         OR CNEE.CSTMS_DECL_CNT_CD IS NULL  " ).append("\n"); 
		query.append("                         OR CNEE.CUST_ZIP_ID IS NULL )" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_EORI1          " ).append("\n"); 
		query.append("           , DECODE(NTFY.CUST_NM,           NULL,'E','Y') AS NTFY_NM1" ).append("\n"); 
		query.append("           , DECODE(NTFY.CUST_ADDR,         NULL,'E','Y') AS NTFY_AD1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_CTY_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.CUST_CTY_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_CT1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CSTMS_DECL_CNT_CD IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.CSTMS_DECL_CNT_CD IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_CN1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_ZIP_ID IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.CUST_ZIP_ID IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_ZIP1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.EUR_CSTMS_ST_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.EUR_CSTMS_ST_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_STR1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NOT NULL THEN " ).append("\n"); 
		query.append("             CASE WHEN REGEXP_INSTR(NTFY.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(NTFY.EORI_NO),'TEST|NONE') < 1" ).append("\n"); 
		query.append("                                                    THEN 'Y' ELSE 'VE' END" ).append("\n"); 
		query.append("                  WHEN NTFY.EORI_NO IS NULL " ).append("\n"); 
		query.append("                       AND (NTFY.CUST_CTY_NM IS NULL " ).append("\n"); 
		query.append("                         OR NTFY.CSTMS_DECL_CNT_CD IS NULL  " ).append("\n"); 
		query.append("                         OR NTFY.CUST_ZIP_ID IS NULL )" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_EORI1 " ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , NVL(BD.PCK_QTY,0)  AS BL_PK1" ).append("\n"); 
		query.append("           , NVL(BD.ACT_WGT,0)  AS BL_WT1" ).append("\n"); 
		query.append("           , DECODE(NVL(BD.MEAS_QTY,0), 0,'N','Y') AS BL_MS" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , BC.CNTR_NO AS CNTR_CNTR_NO" ).append("\n"); 
		query.append("           , NVL((SELECT 'Y'" ).append("\n"); 
		query.append("                  FROM  BKG_CNTR_SEAL_NO" ).append("\n"); 
		query.append("                  WHERE BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("                  AND   CNTR_NO = BC.CNTR_NO" ).append("\n"); 
		query.append("                  AND   ROWNUM =1), 'E') AS CNTR_SEAL" ).append("\n"); 
		query.append("                  " ).append("\n"); 
		query.append("           , NVL(BC.PCK_QTY,0) AS CNTR_PK1" ).append("\n"); 
		query.append("           , NVL(BC.CNTR_WGT,0) AS CNTR_WT1" ).append("\n"); 
		query.append("           , DECODE(NVL(BC.MEAS_QTY,0), 0,'N','Y') AS CNTR_MS" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , ( SELECT NVL(SUM(PCK_QTY ),0)    ||','|| /* PK */" ).append("\n"); 
		query.append("                      NVL(SUM(CNTR_MF_WGT),0) ||','|| /* WT */" ).append("\n"); 
		query.append("                      NVL(SUM(MEAS_QTY),0)    ||','|| /* MS */" ).append("\n"); 
		query.append("                      COUNT(CNTR_MF_GDS_DESC)||','|| /* DS */" ).append("\n"); 
		query.append("                      COUNT(CNTR_MF_MK_DESC) ||','|| /* MK */" ).append("\n"); 
		query.append("                      COUNT(CMDT_HS_CD)              /* HTS*/" ).append("\n"); 
		query.append("               FROM BKG_CNTR_MF_DESC CM" ).append("\n"); 
		query.append("               WHERE BKG_NO = BC.BKG_NO" ).append("\n"); 
		query.append("                 AND CNTR_NO= BC.CNTR_NO" ).append("\n"); 
		query.append("              ) AS CM_DATA" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("           , TO_CHAR(SKD1.VPS_ETD_DT,'YYYY-MM-DD HH24:MI') AS VPS_ETD_DT" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("           , VVD.POL_CD AS EU_1ST_PORT      " ).append("\n"); 
		query.append("           , VVD.POL_YD_CD AS EU_1ST_PORT_YD_CD " ).append("\n"); 
		query.append("           , TO_CHAR(SKD1.VPS_ETA_DT,'YYYY-MM-DD HH24:MI') AS VPS_ETA_DT" ).append("\n"); 
		query.append("           , BKG.CUST_TO_ORD_FLG" ).append("\n"); 
		query.append("     , BKG.BB_CGO_FLG" ).append("\n"); 
		query.append("        FROM  BKG_VVD VVD " ).append("\n"); 
		query.append("           ,BKG_BOOKING BKG" ).append("\n"); 
		query.append("           ,BKG_BL_DOC BD" ).append("\n"); 
		query.append("           ,VSK_VSL_PORT_SKD SKD1" ).append("\n"); 
		query.append("           ,BKG_CUSTOMER SHPR" ).append("\n"); 
		query.append("           ,BKG_CUSTOMER CNEE" ).append("\n"); 
		query.append("           ,BKG_CUSTOMER NTFY" ).append("\n"); 
		query.append("           ,BKG_CONTAINER BC      " ).append("\n"); 
		query.append("        WHERE  1=1" ).append("\n"); 
		query.append("        AND VVD.BKG_NO        = BKG.BKG_NO" ).append("\n"); 
		query.append("        AND BKG.BKG_STS_CD IN ('F', 'W')" ).append("\n"); 
		query.append("        AND BKG.BKG_CGO_TP_CD IN ('F', 'R')   " ).append("\n"); 
		query.append("        AND BKG.BL_NO IS NOT NULL" ).append("\n"); 
		query.append("        AND BKG.BKG_NO = BD.BKG_NO" ).append("\n"); 
		query.append("        AND BKG.BKG_NO = BC.BKG_NO(+)" ).append("\n"); 
		query.append("        AND BKG.BKG_NO = SHPR.BKG_NO (+)" ).append("\n"); 
		query.append("        AND SHPR.BKG_CUST_TP_CD(+) = 'S'" ).append("\n"); 
		query.append("        AND BKG.BKG_NO = CNEE.BKG_NO (+)" ).append("\n"); 
		query.append("        AND CNEE.BKG_CUST_TP_CD(+) = 'C'" ).append("\n"); 
		query.append("        AND BKG.BKG_NO = NTFY.BKG_NO (+)" ).append("\n"); 
		query.append("        AND NTFY.BKG_CUST_TP_CD(+) = 'N'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        AND VVD.VSL_CD         = SKD1.VSL_CD" ).append("\n"); 
		query.append("        AND VVD.SKD_VOY_NO     = SKD1.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND VVD.SKD_DIR_CD     = SKD1.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND VVD.POL_CD         = SKD1.VPS_PORT_CD" ).append("\n"); 
		query.append("     AND VVD.POL_CLPT_IND_SEQ = SKD1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        /* 다운로드 안된 데이타 조회 */ " ).append("\n"); 
		query.append("  #if (${p_vvd_cd} != '') " ).append("\n"); 
		query.append("          AND VVD.VSL_CD        = SUBSTR(@[p_vvd_cd],1,4)" ).append("\n"); 
		query.append("          AND VVD.SKD_VOY_NO    = SUBSTR(@[p_vvd_cd],5,4)" ).append("\n"); 
		query.append("          AND VVD.SKD_DIR_CD    = SUBSTR(@[p_vvd_cd],9,1)" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("        AND VVD.BKG_NO > ' '" ).append("\n"); 
		query.append("        AND VVD.SLAN_CD> ' '" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_pol_cd} != '') " ).append("\n"); 
		query.append("   AND VVD.POL_CD = SUBSTR(@[p_pol_cd], 1, 5)" ).append("\n"); 
		query.append("   AND VVD.POL_YD_CD = @[p_pol_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_pod_cd} != '') " ).append("\n"); 
		query.append("   AND VVD.POD_CD = @[p_pod_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  " ).append("\n"); 
		query.append("  #if (${p_pod_yard_cd} != '') " ).append("\n"); 
		query.append("            AND SUBSTR(VVD.POD_YD_CD, -2) = @[p_pod_yard_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_b_ofc_cd} != '') " ).append("\n"); 
		query.append("    AND BKG.BKG_OFC_CD = @[p_b_ofc_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_error_cd} != '') " ).append("\n"); 
		query.append("   " ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_s_ofc_cd} != '') " ).append("\n"); 
		query.append("   AND BKG.OB_SLS_OFC_CD  = @[p_s_ofc_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_b_staff} != '') " ).append("\n"); 
		query.append("   AND BKG.DOC_USR_ID = @[p_b_staff]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_bl_no} != '') " ).append("\n"); 
		query.append("   AND BKG.BL_NO = @[p_bl_no]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_lt} != '') " ).append("\n"); 
		query.append("   AND DECODE(VVD.POL_CD,BKG.POL_CD,'L','T')  = @[p_lt]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  /* 다운로드 된 데이타만 조회시, 안된 데이타는 제외하기 위함 */" ).append("\n"); 
		query.append("  #if (${p_data_cd} == 'DL') " ).append("\n"); 
		query.append("   AND 'N' ='Y'" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append(") KK" ).append("\n"); 
		query.append(") KKK" ).append("\n"); 
		query.append(") K" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("WHERE 1=1 " ).append("\n"); 
		query.append("  /* Ack. Status 조건이 입력 되면 Original/Amendment 부분은 무시한다." ).append("\n"); 
		query.append("                    기본적으로 Original가 선택되어있어 Ack. Status가 All인지만 체그한다. */" ).append("\n"); 
		query.append("  #if (${p_ack_status} == '')  " ).append("\n"); 
		query.append("   #if (${p_ori_amd_cd} == 'O')  " ).append("\n"); 
		query.append("    AND EDI_MRN IS NULL" ).append("\n"); 
		query.append("   #else" ).append("\n"); 
		query.append("    AND EDI_MRN IS NOT NULL" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_ack_status} == 'A' ) " ).append("\n"); 
		query.append("   AND ACK  = 'A'" ).append("\n"); 
		query.append("     #elseif (${p_ack_status} == 'R') " ).append("\n"); 
		query.append("   AND ACK  != 'A' AND ACK IS NOT NULL" ).append("\n"); 
		query.append("     #elseif (${p_ack_status} == 'DNL') " ).append("\n"); 
		query.append("   AND RESULT_CD  = '351'" ).append("\n"); 
		query.append("     #elseif (${p_ack_status} == 'NR') " ).append("\n"); 
		query.append("   AND MSG_SND_NO IS NOT NULL AND RCV IS NULL" ).append("\n"); 
		query.append("  #elseif (${p_ack_status} == 'NA') " ).append("\n"); 
		query.append("   AND MSG_SND_NO IS NULL" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  UNION ALL" ).append("\n"); 
		query.append("        /* 다운로드 된 데이타 조회 */ " ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append(" ACK ,ACK_KND_ID ,ACK_RCV_DT ,ACK_RCV_GMT_DT ,BKG_NO ,BL_MS ,BL_NO ,BL_PK1 ,BL_WT1 ,BPOD ,BPOL " ).append("\n"); 
		query.append(",CM_DATA ,CNEE_AD1 ,CNEE_CN1 ,CNEE_CT1 ,CNEE_EORI1 ,CNEE_NM1 ,CNEE_STR1 ,CNEE_ZIP1 ,CNTR_CNTR_NO ,CNTR_MS ,CNTR_PK1 ,CNTR_SEAL ,CNTR_WT1 ,CT ,CUST_TO_ORD_FLG " ).append("\n"); 
		query.append(",DEL ,DOWNLOAD_YN ,EDI_MRN, KTS_SEND_DT,  ENS_SEND_DT ,ENS_SEND_GMT_DT ,EU_1ST_PORT ,EU_1ST_PORT_YD_CD ,LT ,MSG_SND_NO " ).append("\n"); 
		query.append(",NTFY_AD1 ,NTFY_CN1 ,NTFY_CT1 ,NTFY_EORI1 ,NTFY_NM1 ,NTFY_STR1 ,NTFY_ZIP1 ,POD ,POL ,RCV ,RESULT_CD " ).append("\n"); 
		query.append(",SH_AD ,SH_CN ,SH_CT ,SH_EORI ,SH_NM ,SH_STR ,SH_ZIP ,SKD_DIR_CD ,SKD_VOY_NO ,SND_USR_OFC_CD " ).append("\n"); 
		query.append(",VPS_ETA_DT ,VPS_ETD_DT ,VSL_CD ,VVD,RCV_MSG" ).append("\n"); 
		query.append(",EDI_RCV_DT ,EDI_RCV_SEQ, BB_CGO_FLG" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("  SELECT M.*" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("  SELECT L.*" ).append("\n"); 
		query.append("              ,BKG_GET_TOKEN_FNC(RCV,3) AS ACK" ).append("\n"); 
		query.append("              ,BKG_GET_TOKEN_FNC(RCV,5) AS RESULT_CD" ).append("\n"); 
		query.append("              ,TO_CHAR(GLOBALDATE_PKG.TIME_CONV_OFC_FNC('SELSC',TO_DATE(BKG_GET_TOKEN_FNC(RCV,4),'YYYY-MM-DD HH24:MI'), SND_USR_OFC_CD ), 'YYYY-MM-DD HH24:MI')  AS ACK_RCV_DT" ).append("\n"); 
		query.append("              ,TO_CHAR(GLOBALDATE_PKG.TIME_CONV_OFC_FNC('SELSC',TO_DATE(BKG_GET_TOKEN_FNC(RCV,4),'YYYY-MM-DD HH24:MI'), 'GMT'),           'YYYY-MM-DD HH24:MI')  AS ACK_RCV_GMT_DT             " ).append("\n"); 
		query.append("              ,BKG_GET_TOKEN_FNC(RCV,6) AS ACK_KND_ID           " ).append("\n"); 
		query.append("              ,BKG_GET_TOKEN_FNC(RCV,7) AS RCV_MSG" ).append("\n"); 
		query.append("              ,BKG_GET_TOKEN_FNC(RCV,1) AS EDI_RCV_DT" ).append("\n"); 
		query.append("              ,BKG_GET_TOKEN_FNC(RCV,2) AS EDI_RCV_SEQ " ).append("\n"); 
		query.append("     , MVMT_REF_NO AS EDI_MRN " ).append("\n"); 
		query.append("     , NVL(KTS_SEND_DT1,KTS_SEND_DT2) AS KTS_SEND_DT          " ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("        SELECT  " ).append("\n"); 
		query.append("           'Y'AS DOWNLOAD_YN" ).append("\n"); 
		query.append("           ,BL.VSL_CD || BL.SKD_VOY_NO || BL.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("           ,BL.VSL_CD " ).append("\n"); 
		query.append("           ,BL.SKD_VOY_NO " ).append("\n"); 
		query.append("           ,BL.SKD_DIR_CD" ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("           ,BL.BL_NO  AS BL_NO" ).append("\n"); 
		query.append("           ,BKG.BKG_NO AS BKG_NO" ).append("\n"); 
		query.append("           ,BL.POL_CD AS POL" ).append("\n"); 
		query.append("           ,BL.POD_CD AS POD" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           ,BKG_POL_CD AS BPOL" ).append("\n"); 
		query.append("           ,BKG_POD_CD AS BPOD" ).append("\n"); 
		query.append("           ,BL.DEL_CD AS DEL" ).append("\n"); 
		query.append("           ,BKG_CGO_TP_CD AS CT" ).append("\n"); 
		query.append("           ,DECODE(BL.POL_CD,BKG_POL_CD,'L','T') AS LT" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , DECODE(SHPR.CUST_NM,           NULL,'E','Y') AS SH_NM" ).append("\n"); 
		query.append("           , DECODE(SHPR.CUST_ADDR,         NULL,'E','Y') AS SH_AD" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_CTY_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.CUST_CTY_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_CT" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CSTMS_DECL_CNT_CD IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.CSTMS_DECL_CNT_CD IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_CN" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.CUST_ZIP_ID IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.CUST_ZIP_ID IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_ZIP" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NULL AND SHPR.EUR_CSTMS_ST_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN SHPR.EUR_CSTMS_ST_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_STR" ).append("\n"); 
		query.append("           , CASE WHEN SHPR.EORI_NO IS NOT NULL THEN " ).append("\n"); 
		query.append("             CASE WHEN REGEXP_INSTR(SHPR.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(SHPR.EORI_NO),'TEST|NONE') < 1" ).append("\n"); 
		query.append("                                                    THEN 'Y' ELSE 'E' END" ).append("\n"); 
		query.append("                  WHEN SHPR.EORI_NO IS NULL " ).append("\n"); 
		query.append("                       AND (SHPR.CUST_CTY_NM IS NULL " ).append("\n"); 
		query.append("                        OR SHPR.CSTMS_DECL_CNT_CD IS NULL  " ).append("\n"); 
		query.append("                        OR SHPR.CUST_ZIP_ID IS NULL )" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END SH_EORI" ).append("\n"); 
		query.append("                      " ).append("\n"); 
		query.append("           , DECODE(CNEE.CUST_NM,           NULL,'E','Y') AS CNEE_NM1" ).append("\n"); 
		query.append("           , DECODE(CNEE.CUST_ADDR,         NULL,'E','Y') AS CNEE_AD1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_CTY_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.CUST_CTY_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_CT1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CSTMS_DECL_CNT_CD IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.CSTMS_DECL_CNT_CD IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_CN1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.CUST_ZIP_ID IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.CUST_ZIP_ID IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_ZIP1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NULL AND CNEE.EUR_CSTMS_ST_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN CNEE.EUR_CSTMS_ST_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_STR1" ).append("\n"); 
		query.append("           , CASE WHEN CNEE.EORI_NO IS NOT NULL THEN " ).append("\n"); 
		query.append("             CASE WHEN REGEXP_INSTR(CNEE.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(CNEE.EORI_NO),'TEST|NONE') < 1" ).append("\n"); 
		query.append("                                                    THEN 'Y' ELSE 'VE' END" ).append("\n"); 
		query.append("                  WHEN CNEE.EORI_NO IS NULL " ).append("\n"); 
		query.append("                       AND (CNEE.CUST_CTY_NM IS NULL " ).append("\n"); 
		query.append("                         OR CNEE.CSTMS_DECL_CNT_CD IS NULL  " ).append("\n"); 
		query.append("                         OR CNEE.CUST_ZIP_ID IS NULL )" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END CNEE_EORI1       " ).append("\n"); 
		query.append("           , DECODE(NTFY.CUST_NM,           NULL,'E','Y') AS NTFY_NM1" ).append("\n"); 
		query.append("           , DECODE(NTFY.CUST_ADDR,         NULL,'E','Y') AS NTFY_AD1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_CTY_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.CUST_CTY_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_CT1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CSTMS_DECL_CNT_CD IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.CSTMS_DECL_CNT_CD IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_CN1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.CUST_ZIP_ID IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.CUST_ZIP_ID IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_ZIP1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NULL AND NTFY.EUR_CSTMS_ST_NM IS NULL" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  WHEN NTFY.EUR_CSTMS_ST_NM IS NOT NULL" ).append("\n"); 
		query.append("                       THEN 'Y'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_STR1" ).append("\n"); 
		query.append("           , CASE WHEN NTFY.EORI_NO IS NOT NULL THEN " ).append("\n"); 
		query.append("             CASE WHEN REGEXP_INSTR(NTFY.EORI_NO,'^[A-Z]{2}([a-zA-Z0-9]{1,15}$)') > 0 AND REGEXP_INSTR(UPPER(NTFY.EORI_NO),'TEST|NONE') < 1" ).append("\n"); 
		query.append("                                                    THEN 'Y' ELSE 'VE' END" ).append("\n"); 
		query.append("                  WHEN NTFY.EORI_NO IS NULL " ).append("\n"); 
		query.append("                       AND (NTFY.CUST_CTY_NM IS NULL " ).append("\n"); 
		query.append("                         OR NTFY.CSTMS_DECL_CNT_CD IS NULL  " ).append("\n"); 
		query.append("                         OR NTFY.CUST_ZIP_ID IS NULL )" ).append("\n"); 
		query.append("                       THEN 'E'" ).append("\n"); 
		query.append("                  ELSE 'N'" ).append("\n"); 
		query.append("             END NTFY_EORI1 " ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , NVL(BL.PCK_QTY,0) AS BL_PK1" ).append("\n"); 
		query.append("           , NVL(BL.ACT_WGT,0) AS BL_WT1" ).append("\n"); 
		query.append("           , DECODE(NVL(BL.MEAS_QTY,0), 0,'N','Y') AS BL_MS" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , BC.CNTR_NO AS CNTR_CNTR_NO" ).append("\n"); 
		query.append("           , NVL((SELECT 'Y'" ).append("\n"); 
		query.append("                  FROM  BKG_CSTMS_EUR_IO_SEAL_NO" ).append("\n"); 
		query.append("                  WHERE VSL_CD        = BL.VSL_CD" ).append("\n"); 
		query.append("                  AND   SKD_VOY_NO    = BL.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND   SKD_DIR_CD    = BL.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND   BL_NO         = BL.BL_NO" ).append("\n"); 
		query.append("                  AND   CSTMS_PORT_CD = BL.CSTMS_PORT_CD" ).append("\n"); 
		query.append("                  AND   CNTR_NO       = BC.CNTR_NO" ).append("\n"); 
		query.append("                  AND   BND_TP_CD = 'O'" ).append("\n"); 
		query.append("                  AND   ROWNUM =1), 'E') AS CNTR_SEAL" ).append("\n"); 
		query.append("                  " ).append("\n"); 
		query.append("           , NVL(BC.PCK_QTY,0) AS CNTR_PK1" ).append("\n"); 
		query.append("           , NVL(BC.ACT_WGT,0) AS CNTR_WT1" ).append("\n"); 
		query.append("           , DECODE(NVL(BC.MEAS_QTY,0), 0,'N','Y') AS CNTR_MS" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           , ( SELECT NVL(SUM(PCK_QTY ),0)    ||','|| /* PK */" ).append("\n"); 
		query.append("                      NVL(SUM(CNTR_MF_WGT),0) ||','|| /* WT */" ).append("\n"); 
		query.append("                      NVL(SUM(MEAS_QTY),0)    ||','|| /* MS */" ).append("\n"); 
		query.append("                      COUNT(CNTR_MF_GDS_DESC)||','|| /* DS */" ).append("\n"); 
		query.append("                      COUNT(CNTR_MF_MK_DESC) ||','|| /* MK */" ).append("\n"); 
		query.append("                      COUNT(CMDT_HS_CD)              /* HTS*/" ).append("\n"); 
		query.append("               FROM BKG_CSTMS_EUR_IO_CNTR_MF CM" ).append("\n"); 
		query.append("               WHERE VSL_CD        = BL.VSL_CD" ).append("\n"); 
		query.append("               AND   SKD_VOY_NO    = BL.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND   SKD_DIR_CD    = BL.SKD_DIR_CD" ).append("\n"); 
		query.append("               AND   BL_NO         = BL.BL_NO" ).append("\n"); 
		query.append("               AND   CSTMS_PORT_CD = BL.CSTMS_PORT_CD" ).append("\n"); 
		query.append("               AND   CNTR_NO       = BC.CNTR_NO" ).append("\n"); 
		query.append("               AND   BND_TP_CD = 'O'" ).append("\n"); 
		query.append("              ) AS CM_DATA" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("           , NVL(MVMT_REF_NO,   ( SELECT MVMT_REF_NO" ).append("\n"); 
		query.append("                FROM BKG_CSTMS_EUR_IO_BL EBL" ).append("\n"); 
		query.append("               WHERE EBL.MSG_SND_NO    = (SELECT MAX(MSG_SND_NO) " ).append("\n"); 
		query.append("                                            FROM BKG_CSTMS_EUR_IO_SND" ).append("\n"); 
		query.append("                                           WHERE BL_NO          = BL.BL_NO" ).append("\n"); 
		query.append("                                             AND CSTMS_PORT_CD  = BL.CSTMS_PORT_CD" ).append("\n"); 
		query.append("                                             AND (VSL_CD != BL.VSL_CD OR SKD_VOY_NO != BL.SKD_VOY_NO OR SKD_DIR_CD != BL.SKD_DIR_CD)" ).append("\n"); 
		query.append("                                             AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("                                        )" ).append("\n"); 
		query.append("             AND EBL.BND_TP_CD = 'O'" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("             ) AS MVMT_REF_NO" ).append("\n"); 
		query.append("     , DECODE(MVMT_REF_NO,NULL,'N','Y') AS BL_MRN_YN" ).append("\n"); 
		query.append("           , TO_CHAR(SND.CRE_DT,'YYYYMMDDHH24') AS KTS_SEND_DT1" ).append("\n"); 
		query.append("           ,(SELECT MAX(TO_CHAR(CRE_DT,'YYYYMMDDHH24'))" ).append("\n"); 
		query.append("               FROM BKG_CSTMS_EUR_IO_SND  " ).append("\n"); 
		query.append("              WHERE BL_NO          = BL.BL_NO" ).append("\n"); 
		query.append("                AND CSTMS_PORT_CD  = BL.CSTMS_PORT_CD" ).append("\n"); 
		query.append("                AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("             ) AS KTS_SEND_DT2" ).append("\n"); 
		query.append("                 " ).append("\n"); 
		query.append("           ,( SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("              WHERE  VSL_CD       = BL.VSL_CD" ).append("\n"); 
		query.append("              AND    SKD_VOY_NO   = BL.SKD_VOY_NO" ).append("\n"); 
		query.append("              AND    SKD_DIR_CD   = BL.SKD_DIR_CD" ).append("\n"); 
		query.append("              AND    VPS_PORT_CD  = BL.POL_CD " ).append("\n"); 
		query.append("              AND    CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("             ) AS VPS_ETD_DT" ).append("\n"); 
		query.append("             " ).append("\n"); 
		query.append("           , BL.CSTMS_PORT_CD AS EU_1ST_PORT   " ).append("\n"); 
		query.append("           , BL.CSTMS_YD_CD   AS EU_1ST_PORT_YD_CD    " ).append("\n"); 
		query.append("           ,( SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("              FROM   VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("              WHERE  VSL_CD       = BL.VSL_CD" ).append("\n"); 
		query.append("              AND    SKD_VOY_NO   = BL.SKD_VOY_NO" ).append("\n"); 
		query.append("              AND    SKD_DIR_CD   = BL.SKD_DIR_CD" ).append("\n"); 
		query.append("              AND    VPS_PORT_CD  = BL.CSTMS_PORT_CD" ).append("\n"); 
		query.append("              AND    CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("             ) AS VPS_ETA_DT" ).append("\n"); 
		query.append("           ,TO_CHAR(SND.SND_DT  ,'YYYY-MM-DD HH24:MI')AS ENS_SEND_DT" ).append("\n"); 
		query.append("           ,TO_CHAR(SND.SND_GDT ,'YYYY-MM-DD HH24:MI')AS ENS_SEND_GMT_DT" ).append("\n"); 
		query.append("           ,(SELECT EDI_RCV_DT||','||EDI_RCV_SEQ||','|| ACK_RCV_STS_CD||','|| TO_CHAR(CRE_DT,'YYYY-MM-DD HH24:MI')||','||EUR_CSTMS_ACK_CD||','||ACK_KND_ID||','||RJCT_RSN_RMK" ).append("\n"); 
		query.append("               FROM  BKG_CSTMS_EUR_IO_RCV" ).append("\n"); 
		query.append("               WHERE RCV_TMS = ( SELECT MAX(RCV_TMS)" ).append("\n"); 
		query.append("                                  FROM BKG_CSTMS_EUR_IO_RCV" ).append("\n"); 
		query.append("                                  WHERE MSG_RCV_NO = SND.MSG_SND_NO" ).append("\n"); 
		query.append("                                  AND (ACK_KND_ID != 'S' OR ACK_RCV_STS_CD != 'A')" ).append("\n"); 
		query.append("                                  AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("               AND BND_TP_CD  = 'O'" ).append("\n"); 
		query.append("             ) AS  RCV" ).append("\n"); 
		query.append("            ,SND.SND_USR_OFC_CD" ).append("\n"); 
		query.append("           , BL.MSG_SND_NO AS MSG_SND_NO" ).append("\n"); 
		query.append("           , BKG.CUST_TO_ORD_FLG" ).append("\n"); 
		query.append("     , BKG.BB_CGO_FLG" ).append("\n"); 
		query.append("        FROM  BKG_CSTMS_EUR_IO_BL BL" ).append("\n"); 
		query.append("           ,BKG_BOOKING BKG" ).append("\n"); 
		query.append("           ,BKG_CSTMS_EUR_IO_CUST SHPR" ).append("\n"); 
		query.append("           ,BKG_CSTMS_EUR_IO_CUST CNEE" ).append("\n"); 
		query.append("           ,BKG_CSTMS_EUR_IO_CUST NTFY" ).append("\n"); 
		query.append("           ,BKG_CSTMS_EUR_IO_CNTR BC " ).append("\n"); 
		query.append("           ,BKG_CSTMS_EUR_IO_SND SND" ).append("\n"); 
		query.append("        WHERE  1=1" ).append("\n"); 
		query.append("        AND BL.BL_NO        = BKG.BL_NO" ).append("\n"); 
		query.append("        AND BL.BND_TP_CD = 'O'" ).append("\n"); 
		query.append("        AND BKG.BKG_STS_CD IN ('F', 'W') " ).append("\n"); 
		query.append("        AND BL.BND_TP_CD     = SHPR.BND_TP_CD(+)" ).append("\n"); 
		query.append("        AND BL.VSL_CD        = SHPR.VSL_CD(+)" ).append("\n"); 
		query.append("        AND BL.SKD_VOY_NO    = SHPR.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("        AND BL.SKD_DIR_CD    = SHPR.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("        AND BL.BL_NO         = SHPR.BL_NO(+)" ).append("\n"); 
		query.append("        AND BL.CSTMS_PORT_CD = SHPR.CSTMS_PORT_CD(+)" ).append("\n"); 
		query.append("        AND 'S'              = SHPR.BKG_CUST_TP_CD(+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND BL.BND_TP_CD     = CNEE.BND_TP_CD(+)" ).append("\n"); 
		query.append("        AND BL.VSL_CD        = CNEE.VSL_CD(+)" ).append("\n"); 
		query.append("        AND BL.SKD_VOY_NO    = CNEE.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("        AND BL.SKD_DIR_CD    = CNEE.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("        AND BL.BL_NO         = CNEE.BL_NO(+)" ).append("\n"); 
		query.append("        AND BL.CSTMS_PORT_CD = CNEE.CSTMS_PORT_CD(+)" ).append("\n"); 
		query.append("        AND 'C'              = CNEE.BKG_CUST_TP_CD(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        AND BL.BND_TP_CD     = NTFY.BND_TP_CD(+)" ).append("\n"); 
		query.append("        AND BL.VSL_CD        = NTFY.VSL_CD(+)" ).append("\n"); 
		query.append("        AND BL.SKD_VOY_NO    = NTFY.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("        AND BL.SKD_DIR_CD    = NTFY.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("        AND BL.BL_NO         = NTFY.BL_NO(+)" ).append("\n"); 
		query.append("        AND BL.CSTMS_PORT_CD = NTFY.CSTMS_PORT_CD(+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND BL.BND_TP_CD     = BC.BND_TP_CD(+)" ).append("\n"); 
		query.append("        AND NTFY.BKG_CUST_TP_CD(+) = 'N'        " ).append("\n"); 
		query.append("        AND BL.VSL_CD        = BC.VSL_CD(+)" ).append("\n"); 
		query.append("        AND BL.SKD_VOY_NO    = BC.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("        AND BL.SKD_DIR_CD    = BC.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("        AND BL.BL_NO         = BC.BL_NO(+)" ).append("\n"); 
		query.append("        AND BL.CSTMS_PORT_CD = BC.CSTMS_PORT_CD(+)" ).append("\n"); 
		query.append("        AND BL.BND_TP_CD     = SND.BND_TP_CD(+)     " ).append("\n"); 
		query.append("        AND BL.MSG_SND_NO    = SND.MSG_SND_NO(+)" ).append("\n"); 
		query.append("  #if (${p_vvd_cd} != '') " ).append("\n"); 
		query.append("          AND BL.VSL_CD        = SUBSTR(@[p_vvd_cd],1,4)" ).append("\n"); 
		query.append("          AND BL.SKD_VOY_NO    = SUBSTR(@[p_vvd_cd],5,4)" ).append("\n"); 
		query.append("          AND BL.SKD_DIR_CD    = SUBSTR(@[p_vvd_cd],9,1)" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_pol_cd} != '') " ).append("\n"); 
		query.append("   AND BL.CSTMS_PORT_CD = SUBSTR(@[p_pol_cd],1,5)" ).append("\n"); 
		query.append("   AND BL.CSTMS_YD_CD = @[p_pol_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_pod_cd} != '') " ).append("\n"); 
		query.append("   AND BL.POD_CD = @[p_pod_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  " ).append("\n"); 
		query.append("  #if (${p_pod_yard_cd} != '') " ).append("\n"); 
		query.append("            AND SUBSTR(BL.POD_YD_CD, -2) = @[p_pod_yard_cd]" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_b_ofc_cd} != '') " ).append("\n"); 
		query.append("    AND BKG.BKG_OFC_CD = @[p_b_ofc_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_s_ofc_cd} != '') " ).append("\n"); 
		query.append("   AND BKG.OB_SLS_OFC_CD  = @[p_s_ofc_cd]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_b_staff} != '') " ).append("\n"); 
		query.append("   AND BKG.DOC_USR_ID = @[p_b_staff]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  /* Ack. Status 조건이 입력 되면 Original/Amendment 부분은 무시한다." ).append("\n"); 
		query.append("                    기본적으로 Original가 선택되어있어 Ack. Status가 All인지만 체그한다. */" ).append("\n"); 
		query.append("  " ).append("\n"); 
		query.append("  #if (${p_ack_status} == 'NR' ) " ).append("\n"); 
		query.append("  /* Ack. Status is Not Received SND IS NOT NULL && RCV IS NULL */" ).append("\n"); 
		query.append("   AND SND.MSG_SND_NO IS NOT NULL" ).append("\n"); 
		query.append("  #elseif(${p_ack_status} == 'NA' ) " ).append("\n"); 
		query.append("  /* Ack. Status is N/A */" ).append("\n"); 
		query.append("   AND SND.MSG_SND_NO IS NULL" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("  #if (${p_bl_no} != '') " ).append("\n"); 
		query.append("   AND BL.BL_NO = @[p_bl_no]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("  #if (${p_lt} != '') " ).append("\n"); 
		query.append("   AND DECODE(BL.POL_CD,BKG_POL_CD,'L','T')  = @[p_lt]" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("        /* BL데이타 조회시 다운로드된 데이타는 사용하지 않고 BL데이타를 이용한다.*/" ).append("\n"); 
		query.append("  #if (${p_data_cd} != 'DL') " ).append("\n"); 
		query.append("   AND 'N' ='Y'" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append(" ) L" ).append("\n"); 
		query.append("  WHERE 1=1" ).append("\n"); 
		query.append("  #if (${p_ack_status} == '')  " ).append("\n"); 
		query.append("   #if (${p_ori_amd_cd} == 'O')  " ).append("\n"); 
		query.append("    AND MVMT_REF_NO IS NULL" ).append("\n"); 
		query.append("   #else" ).append("\n"); 
		query.append("    AND MVMT_REF_NO IS NOT NULL" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append(" ) M" ).append("\n"); 
		query.append("    WHERE 1 = 1" ).append("\n"); 
		query.append(" #if (${p_ack_status} == 'A' ) " ).append("\n"); 
		query.append("  AND ACK  = 'A'" ).append("\n"); 
		query.append("    #elseif (${p_ack_status} == 'R') " ).append("\n"); 
		query.append("  AND ACK  != 'A' AND ACK IS NOT NULL" ).append("\n"); 
		query.append("    #elseif (${p_ack_status} == 'DNL') " ).append("\n"); 
		query.append("  AND RESULT_CD  = '351'" ).append("\n"); 
		query.append("    #elseif (${p_ack_status} == 'NR') " ).append("\n"); 
		query.append("  AND RCV IS NULL" ).append("\n"); 
		query.append(" #end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("/* UNION ALL END */" ).append("\n"); 
		query.append("    ) X" ).append("\n"); 
		query.append("  ) XX" ).append("\n"); 
		query.append(" ) XXX" ).append("\n"); 
		query.append(") Y " ).append("\n"); 
		query.append(",( SELECT ( SELECT EUR_CSTMS_OFC_ID||','||ENS_EDI_SVC_FLG||','||EXS_EDI_SVC_FLG" ).append("\n"); 
		query.append("            FROM BKG_CSTMS_EUR_CD_STUP" ).append("\n"); 
		query.append("            WHERE PORT_CD = SUBSTR(@[p_pol_yard_cd],1,5)" ).append("\n"); 
		query.append("            AND TML_CD IN ('ALL' , @[p_pol_yard_cd])" ).append("\n"); 
		query.append("            AND ROWNUM =1" ).append("\n"); 
		query.append("          ) AS PORT_OFC_CD_SVC_FLG" ).append("\n"); 
		query.append("   FROM DUAL " ).append("\n"); 
		query.append(" ) PORT_OFC" ).append("\n"); 
		query.append(") Z" ).append("\n"); 
		query.append("WHERE 1=1 " ).append("\n"); 
		query.append("#if (${p_error_cd} != '') " ).append("\n"); 
		query.append(" AND ERR_YN ='Y'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("ORDER BY POD,BL_NO,CNTR_CNTR_NO" ).append("\n"); 
		query.append(") ZZ" ).append("\n"); 

	}
}