<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RFARateProposalDBDAORsltPriCostDetailByTransModeListVORSQL">
			<desc><![CDATA[2015.06.26 CHM-201536492 Split05-주간 MAS Open에 따른 타모듈 프로그램 적용 요청]]></desc>
			<sql><![CDATA[
/** prop_no,amdt_seq,svc_scp_cd,cost_tp,rout_pnt,trans_mode */

SELECT  DENSE_RANK() over( order by POR_CD, POL_CD, POD_CD, DEL_CD
                        ,CNTR_TPSZ_CD
                        ,CGO_TP_CD   ) seq
          ,POR_CD, POL_CD, POD_CD, DEL_CD, CNTR_TPSZ_CD
	      ,CGO_TP_CD
	      ,COST_ACT_GRP_SEQ
          ,DECODE(GRP,1,'Total',NOD) NOD
	      ,ACT_GRP_CD
          ,DECODE(GRP,1,'Total', ACT_GRP_NM || DECODE(RCV_TERM_CD,'',DECODE(DE_TERM_CD,'','','('||DE_TERM_CD||')'),DECODE(DE_TERM_CD,'','('|| RCV_TERM_CD ||')','('|| RCV_TERM_CD || ' - ' || DE_TERM_CD ||')'))) ACT_GRP_NM
          ,RCV_TERM_CD,DE_TERM_CD
	      ,TOT_AMT
          ,GRP
FROM (
	SELECT B.POR_CD, B.POL_CD, B.POD_CD, B.DEL_CD
	      ,CNTR_TPSZ_CD
	      ,COST_ACT_GRP_SEQ
	      ,DECODE(N1ST_NOD_CD
		     ,N2ND_NOD_CD, N1ST_NOD_CD
		     ,DECODE(N1ST_NOD_CD, NULL, ' ', N1ST_NOD_CD)
			 || DECODE(N2ND_NOD_CD, NULL, ' ', ' -> ' || N2ND_NOD_CD)
			 || DECODE(N3RD_NOD_CD, NULL, ' ', ' -> ' || N3RD_NOD_CD)
			 || DECODE(N4TH_NOD_CD, NULL, ' ', ' -> ' || N4TH_NOD_CD)
		      ) NOD
	      ,ACT_GRP_CD
	      ,COST_ACT_GRP_NM AS ACT_GRP_NM
	      ,N1ST_NOD_CD ORG_NOD_CD
	      ,COALESCE(N4TH_NOD_CD, N3RD_NOD_CD, N2ND_NOD_CD) DEST_NOD_CD
	      ,MAX(C.WTR_RCV_TERM_CD) RCV_TERM_CD
	      ,MAX(C.WTR_DE_TERM_CD) DE_TERM_CD
	      ,SUM(C.RESPB_USD_TTL_AMT) tot_amt
	      ,DECODE(B.DG_SPCL_FLG,'Y','DG',DECODE(B.RF_SPCL_FLG,'Y','RF',DECODE(B.SPCL_AWK_CGO_FLG,'Y','AK',DECODE(B.BB_SPCL_FLG,'Y','BB','DR')))) CGO_TP_CD
	      ,GROUPING(N1ST_NOD_CD) grp

	  FROM PRI_RP_SCP_RT_USD_ROUT_CS A
	      ,PRI_PRS_USD_ROUT_CS_INFO B
	      ,PRI_PRS_USD_ROUT_ACT_COST C
	      ,PRD_COST_ACT_GRP D
	      ,MAS_STND_ACCT_V E
	 WHERE A.PROP_NO = @[prop_no]
	   AND A.AMDT_SEQ = @[amdt_seq]
	   AND A.SVC_SCP_CD = @[svc_scp_cd]	
	   AND A.ROUT_CS_NO = B.ROUT_CS_NO
	   AND A.ROUT_CS_SRC_DT = B.ROUT_CS_SRC_DT
	   AND A.USD_ROUT_CS_SEL_FLG = 'Y'
	   AND A.ROUT_CS_NO = C.ROUT_CS_NO
	   AND A.ROUT_CS_SRC_DT = C.ROUT_CS_SRC_DT
	   AND C.ACT_GRP_CD = D.COST_ACT_GRP_CD
	   AND C.STND_COST_CD = E.STND_COST_CD
	   AND E.MAS_COST_SRC_PRT_CD IN ( 'CO', 'RA') -- Office Profit 
	   AND E.STND_COST_TP_CD IN ('C', DECODE(@[cost_tp], 'C', 'C', 'O')) -- CM = 'C', OP = 'O' 
	   AND E.PA_VW = 'BKG'
 
	#if ( ${rout_pnt} == 'O') -- Origin
		AND ((SUBSTR(C.ACT_GRP_CD,2,1) = 'O' AND SUBSTR(C.ACT_GRP_CD,1,2) <> 'PO') OR SUBSTR(C.ACT_GRP_CD,1,1) = 'O' OR SUBSTR(C.ACT_GRP_CD,1,2) = 'PR')    --ORIGIN
	#elseif ( ${rout_pnt} == 'I') -- Dest
		AND (SUBSTR(C.ACT_GRP_CD,2,1) = 'I' OR SUBSTR(C.ACT_GRP_CD,1,1) = 'I' OR SUBSTR(C.ACT_GRP_CD,1,2) = 'PO' )    --DESTINATION
	#end



	#if ( ${trans_mode} == 'M') --   RAIL RAMP
	   AND SUBSTR(D.COST_ACT_GRP_CD, 3, 2) = 'BR'
    #elseif( ${trans_mode} == 'T') --   TRUCK
       AND (SUBSTR(D.COST_ACT_GRP_CD, 3, 1)= 'T' OR SUBSTR(D.COST_ACT_GRP_CD, 4, 1)= 'T') AND SUBSTR(D.COST_ACT_GRP_CD, 3, 2) <> 'RT' AND SUBSTR(D.COST_ACT_GRP_CD, 3, 2) <> 'TR' AND D.LGS_KPI_COST_GRP_CD = 'TR' 
	#elseif( ${trans_mode} == 'R') --   RAIL
       AND (SUBSTR(D.COST_ACT_GRP_CD, 3, 1)= 'R' OR SUBSTR(D.COST_ACT_GRP_CD, 4, 1)= 'R') AND D.LGS_KPI_COST_GRP_CD = 'TR'
	#elseif( ${trans_mode} == 'F') --   FEEDER => WATER
       AND (SUBSTR(D.COST_ACT_GRP_CD, 3, 1)= 'W' OR SUBSTR(D.COST_ACT_GRP_CD, 4, 1)= 'W') AND D.LGS_KPI_COST_GRP_CD = 'TR'
	#elseif( ${trans_mode} == 'A') --   Rail/Truck
       AND SUBSTR(D.COST_ACT_GRP_CD, 3, 2)= 'RT' AND D.LGS_KPI_COST_GRP_CD = 'TR'
	#elseif( ${trans_mode} == 'U') --   Truck/Rail
       AND SUBSTR(D.COST_ACT_GRP_CD, 3, 2)= 'TR' AND D.LGS_KPI_COST_GRP_CD = 'TR'
	#else
	   AND ((SUBSTR(D.COST_ACT_GRP_CD, 3, 2) = 'BR') 
				OR ((SUBSTR(D.COST_ACT_GRP_CD, 3, 1)= 'T' OR SUBSTR(D.COST_ACT_GRP_CD, 4, 1)= 'T') AND D.LGS_KPI_COST_GRP_CD = 'TR' )
				OR ((SUBSTR(D.COST_ACT_GRP_CD, 3, 1)= 'R' OR SUBSTR(D.COST_ACT_GRP_CD, 4, 1)= 'R') AND D.LGS_KPI_COST_GRP_CD = 'TR' )
				OR ((SUBSTR(D.COST_ACT_GRP_CD, 3, 1)= 'W' OR SUBSTR(D.COST_ACT_GRP_CD, 4, 1)= 'W') AND D.LGS_KPI_COST_GRP_CD = 'TR' )
		   )
	#end 
	GROUP BY GROUPING SETS( 
		(B.POR_CD, B.POL_CD, B.POD_CD, B.DEL_CD
		      ,CNTR_TPSZ_CD
		      ,DECODE(B.DG_SPCL_FLG,'Y','DG',DECODE(B.RF_SPCL_FLG,'Y','RF',DECODE(B.SPCL_AWK_CGO_FLG,'Y','AK',DECODE(B.BB_SPCL_FLG,'Y','BB','DR'))))
		      ,COST_ACT_GRP_SEQ
		      ,ACT_GRP_CD
		      ,COST_ACT_GRP_NM
		      ,N1ST_NOD_CD
		      ,N4TH_NOD_CD
		      ,N3RD_NOD_CD
		      ,N2ND_NOD_CD ),
		(B.POR_CD, B.POL_CD, B.POD_CD, B.DEL_CD
		      ,CNTR_TPSZ_CD
		      ,DECODE(B.DG_SPCL_FLG,'Y','DG',DECODE(B.RF_SPCL_FLG,'Y','RF',DECODE(B.SPCL_AWK_CGO_FLG,'Y','AK',DECODE(B.BB_SPCL_FLG,'Y','BB','DR'))))
		       )
	      )
)
ORDER BY POR_CD, POL_CD, POD_CD, DEL_CD
                        ,CNTR_TPSZ_CD
                        ,CGO_TP_CD ,GRP DESC,NOD			]]></sql>
			<params>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="amdt_seq" type="2" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="cost_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
