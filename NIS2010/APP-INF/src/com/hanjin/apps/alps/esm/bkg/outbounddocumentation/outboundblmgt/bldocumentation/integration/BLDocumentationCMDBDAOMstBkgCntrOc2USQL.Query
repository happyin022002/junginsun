<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BLDocumentationCMDBDAOMstBkgCntrOc2USQL">
			<desc><![CDATA[임시파일]]></desc>
			<sql><![CDATA[
#if ((${mvmt_sts_cd} == 'OC' || ${mvmt_sts_cd} == 'VL' )&& ${fnd_bkg} == '1')
MERGE INTO BKG_CONTAINER A USING (
SELECT BKG.BKG_NO, CTM.CNTR_NO, CTM.CNTR_TPSZ_CD, CTM.CNMV_YR, CTM.CNMV_ID_NO,
       CTM.CNMV_CYC_NO, CTM.MVMT_STS_CD, DECODE(CTM.BKG_RCV_TERM_CD,'M', NULL, CTM.BKG_RCV_TERM_CD) BKG_RCV_TERM_CD, CTM.ORG_YD_CD,
       CTM.DEST_YD_CD, 'Y', CTM.CNMV_RMK, CTM.CNTR_HNGR_RCK_FLG,
       DECODE (CTM.SUBST_RULE_CD, NULL, 'N', 'Y') RL,  CTM.CNMV_EVNT_DT,
       CTM.SUBST_RULE_CD, DECODE(BKG.DE_TERM_CD,'M', NULL, BKG.DE_TERM_CD) DE_TERM_CD, CTM.CRE_USR_ID, CTM.UPD_USR_ID,
       BKG.POR_CD, CTM.VGM_WGT_QTY, CTM.VGM_WGT_UT_CD, CTM.VGM_SIG_CTNT, CTM.VGM_MZD_TP_CD
  FROM CTM_MOVEMENT CTM,
       BKG_BOOKING BKG,
       (SELECT DISTINCT /*+ ORDERED INDEX_DESC(A XAK1BKG_CONTAINER) INDEX(BO XPKBKG_BOOKING) */ BO.BKG_NO
          FROM BKG_BOOKING BO, BKG_BOOKING BO2
         WHERE BO.BKG_NO  IN  (SELECT BKG_NO FROM BKG_CONTAINER WHERE CNTR_NO = @[cntr_no] AND CRE_DT > SYSDATE - 60)
           AND NVL (BO.BKG_STS_CD, ' ') <> 'X'
           AND BO.VSL_CD = BO2.VSL_CD
           AND BO.SKD_VOY_NO	= BO2.SKD_VOY_NO
           AND BO.SKD_DIR_CD	= BO2.SKD_DIR_CD
           AND BO2.BKG_NO	    = @[bkg_no]
           AND BO.POL_CD	    = BO2.POL_CD
           AND BO.POD_CD        = BO2.POD_CD
           ) BB
 WHERE CTM.CNTR_NO    = @[cntr_no]
   AND CTM.CNMV_ID_NO = @[cnmv_id_no]
   AND BKG.BKG_NO     = BB.BKG_NO
   AND CTM.CNMV_YR    = @[cnmv_yr]
                    ) B
ON (A.BKG_NO = B.BKG_NO AND A.CNTR_NO = B.CNTR_NO)
WHEN MATCHED THEN
     UPDATE SET  
       A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD
      ,A.CNMV_YR      = B.CNMV_YR
      ,A.CNMV_ID_NO   = B.CNMV_ID_NO
      ,A.CNMV_CYC_NO  = B.CNMV_CYC_NO
      ,A.CNMV_STS_CD  = B.MVMT_STS_CD
      ,A.ORG_YD_CD    = B.ORG_YD_CD
      ,A.DEST_YD_CD   = B.DEST_YD_CD
      ,A.CNMV_FLG     = 'Y'
      ,A.DIFF_RMK     = B.CNMV_RMK
      ,A.EQ_SUBST_FLG = B.RL
      ,A.CNMV_EVNT_DT = B.CNMV_EVNT_DT
      ,A.EQ_SUBST_TPSZ_CD = B.SUBST_RULE_CD
--      ,A.DE_TERM_CD       = B.DE_TERM_CD
      ,A.UPD_USR_ID       = B.UPD_USR_ID
      ,A.UPD_DT = SYSDATE
--      ,A.CGO_RCV_DT = TO_DATE(DECODE(A.CGO_RCV_DT, NULL, TO_CHAR(B.CNMV_EVNT_DT, 'YYYYMMDD HH24:MI:SS')
--						        , TO_CHAR(A.CGO_RCV_DT, 'YYYYMMDD HH24:MI:SS')),'YYYYMMDD HH24:MI:SS')
      ,A.CGO_RCV_DT = CASE WHEN A.CGO_RCV_DT IS NULL AND (SELECT TO_DATE(BKG_GET_CNTR_CORR_DT_FNC(B.BKG_NO,B.CNTR_NO,'N'),'YYYYMMDDHH24MI') FROM DUAL) IS NOT NULL THEN 
                                (SELECT TO_DATE(BKG_GET_CNTR_CORR_DT_FNC(B.BKG_NO,B.CNTR_NO,'N'),'YYYYMMDDHH24MI') FROM DUAL)
                           WHEN A.CGO_RCV_DT IS NULL THEN B.CNMV_EVNT_DT
                      ELSE A.CGO_RCV_DT
                      END
      ,A.CGO_RCV_YD_CD = DECODE(A.CGO_RCV_YD_CD, NULL, B.ORG_YD_CD, A.CGO_RCV_YD_CD)

#if(${vgm_upd_flg} == 'Y')
	  ,A.VGM_WGT       =  B.VGM_WGT_QTY
      ,A.VGM_WGT_UT_CD = DECODE(B.VGM_WGT_UT_CD,'KGM','KGS','LBR','LBS',B.VGM_WGT_UT_CD)
      ,A.VGM_MZD_TP_CD = B.VGM_MZD_TP_CD
      ,A.VGM_VRFY_SIG_CTNT = B.VGM_SIG_CTNT
#end

#elseif ((${mvmt_sts_cd} == 'OP' && ${fnd_bkg} != '1') || (${mvmt_sts_cd} == 'OC' && ${fnd_bkg} != '1'))
      INSERT INTO BKG_CONTAINER (BKG_NO, CNTR_NO, CNTR_TPSZ_CD, CNMV_YR,          CNMV_ID_NO, CNMV_CYC_NO, CNMV_STS_CD, 
                                 RCV_TERM_CD,     ORG_YD_CD,    DEST_YD_CD,       CNMV_FLG,   DIFF_RMK,
                                 EQ_SUBST_FLG,    CNMV_EVNT_DT, EQ_SUBST_TPSZ_CD, DE_TERM_CD, 
                                 CRE_DT, UPD_DT,  CRE_USR_ID,   UPD_USR_ID, 
#if (${mvmt_sts_cd} == 'OC' && ${vgm_ins_flg} == 'Y')
								 VGM_WGT, VGM_WGT_UT_CD, VGM_VRFY_SIG_CTNT, VGM_MZD_TP_CD,  
#end     
#if (${mvmt_sts_cd} == 'OC')    
                                 CGO_RCV_DT, CGO_RCV_YD_CD, 
#end
                                 CNTR_VOL_QTY, SOC_FLG, RD_CGO_FLG,
                                 WGT_UT_CD, MEAS_UT_CD) (
                    SELECT BKG.BKG_NO, CTM.CNTR_NO, CTM.CNTR_TPSZ_CD, CTM.CNMV_YR, CTM.CNMV_ID_NO, CTM.CNMV_CYC_NO, CTM.MVMT_STS_CD,
                           DECODE(CTM.BKG_RCV_TERM_CD,'M', NULL, CTM.BKG_RCV_TERM_CD) BKG_RCV_TERM_CD, CTM.ORG_YD_CD, CTM.DEST_YD_CD, 'Y', CTM.CNMV_RMK, 
                           DECODE(CTM.SUBST_RULE_CD, NULL, 'N', 'Y') RL, CTM.CNMV_EVNT_DT, CTM.SUBST_RULE_CD,  DECODE(BKG.DE_TERM_CD,'M', NULL, BKG.DE_TERM_CD) DE_TERM_CD, 
                           CTM.CRE_DT, CTM.UPD_DT, CTM.CRE_USR_ID, CTM.UPD_USR_ID,
#if (${mvmt_sts_cd} == 'OC' && ${vgm_ins_flg} == 'Y')
                           CTM.VGM_WGT_QTY, DECODE(CTM.VGM_WGT_UT_CD,'KGM','KGS','LBR','LBS',CTM.VGM_WGT_UT_CD), 
                           CTM.VGM_SIG_CTNT,CTM.VGM_MZD_TP_CD,
#end 
#if (${mvmt_sts_cd} == 'OC')  
                           CTM.CNMV_EVNT_DT, CTM.ORG_YD_CD,
#end
                           1, DECODE(@[lstrm_cd], 'SH', 'Y', 'N'), DECODE(SUBSTR(CTM.CNTR_TPSZ_CD, 1, 1), 'R', 'Y', 'N'),
                           DOC.WGT_UT_CD, 'CBM'
                      FROM CTM_MOVEMENT CTM, BKG_BOOKING BKG, BKG_BL_DOC DOC
                     WHERE CTM.CNTR_NO = @[cntr_no]
                       AND CTM.CNMV_ID_NO = @[cnmv_id_no]
                       AND BKG.BKG_NO = @[bkg_no]
                       AND CTM.CNMV_YR = @[cnmv_yr]
                       AND BKG.BKG_NO = DOC.BKG_NO
                   )
#elseif (${mvmt_sts_cd} == 'MT' || ${mvmt_sts_cd} == 'EN' || ${mvmt_sts_cd} == 'TN' || (${mvmt_sts_cd} == 'OP' && ${fnd_bkg} == '1'))
MERGE INTO BKG_CONTAINER A USING (
SELECT BKG.BKG_NO, CTM.CNTR_NO, CTM.CNTR_TPSZ_CD, CTM.CNMV_YR, CTM.CNMV_ID_NO,
       CTM.CNMV_CYC_NO, CTM.MVMT_STS_CD, DECODE(CTM.BKG_RCV_TERM_CD,'M', NULL, CTM.BKG_RCV_TERM_CD) BKG_RCV_TERM_CD, CTM.ORG_YD_CD,
       CTM.DEST_YD_CD, 'Y', CTM.CNMV_RMK,
       DECODE (CTM.SUBST_RULE_CD, NULL, 'N', 'Y') RL, CTM.CNMV_EVNT_DT,
       CTM.SUBST_RULE_CD, DECODE(BKG.DE_TERM_CD,'M', NULL, BKG.DE_TERM_CD) DE_TERM_CD, CTM.CRE_USR_ID, CTM.UPD_USR_ID
  FROM CTM_MOVEMENT CTM,
       BKG_BOOKING BKG
 WHERE CTM.CNTR_NO     = @[cntr_no]
   AND CTM.CNMV_YR     = @[cnmv_yr]
   AND BKG.BKG_NO      = @[bkg_no]
   AND CTM.CNMV_CYC_NO = @[cnmv_cyc_no]
   and CTM.CNMV_ID_NO  = @[cnmv_id_no]
 ) B
ON (A.BKG_NO = B.BKG_NO AND A.CNTR_NO = B.CNTR_NO)
WHEN MATCHED THEN
     UPDATE SET  
      A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD
      ,A.CNMV_YR      = B.CNMV_YR
      ,A.CNMV_ID_NO   = B.CNMV_ID_NO
      ,A.CNMV_CYC_NO  = B.CNMV_CYC_NO
      ,A.CNMV_STS_CD  = B.MVMT_STS_CD
      ,A.ORG_YD_CD    = B.ORG_YD_CD
      ,A.DEST_YD_CD   = B.DEST_YD_CD
      ,A.CNMV_FLG     = 'Y'
      ,A.DIFF_RMK     = B.CNMV_RMK
      ,A.EQ_SUBST_FLG = B.RL
      ,A.CNMV_EVNT_DT = B.CNMV_EVNT_DT
      ,A.EQ_SUBST_TPSZ_CD = B.SUBST_RULE_CD
--      ,A.DE_TERM_CD       = B.DE_TERM_CD
      ,A.UPD_USR_ID       = B.UPD_USR_ID
      ,A.UPD_DT = SYSDATE
#if (${mvmt_sts_cd} == 'MT' || (${mvmt_sts_cd} == 'OP' && ${fnd_bkg} == '1'))
      ,A.CGO_RCV_DT = NULL
      ,A.CGO_RCV_YD_CD = NULL
#end
#else
MERGE INTO BKG_CONTAINER A USING (
SELECT BKG.BKG_NO, CTM.CNTR_NO, CTM.CNTR_TPSZ_CD, CTM.CNMV_YR, CTM.CNMV_ID_NO,
       CTM.CNMV_CYC_NO, CTM.MVMT_STS_CD, DECODE(CTM.BKG_RCV_TERM_CD,'M', NULL, CTM.BKG_RCV_TERM_CD) BKG_RCV_TERM_CD, CTM.ORG_YD_CD,
       CTM.DEST_YD_CD, 'Y', CTM.CNMV_RMK,
       DECODE (CTM.SUBST_RULE_CD, NULL, 'N', 'Y') RL, CTM.CNMV_EVNT_DT,
       CTM.SUBST_RULE_CD, DECODE(BKG.DE_TERM_CD,'M', NULL, BKG.DE_TERM_CD) DE_TERM_CD, CTM.CRE_USR_ID, CTM.UPD_USR_ID
  FROM CTM_MOVEMENT CTM,
       BKG_CONTAINER BKG 
 WHERE CTM.CNTR_NO = @[cntr_no]
   AND CTM.CNMV_YR = @[cnmv_yr]
   AND CTM.CNMV_CYC_NO = @[cnmv_cyc_no]
   AND CTM.CNMV_ID_NO  = @[cnmv_id_no]
   AND CTM.CNTR_NO     = BKG.CNTR_NO
   AND BKG.CNMV_CYC_NO >= CTM.CNMV_CYC_NO
#if (${mvmt_sts_cd} == 'ID')
   AND BKG.BKG_NO = (CASE WHEN NVL(BKG.CNTR_PRT_FLG,'N') = 'N' THEN @[bkg_no] ELSE BKG.BKG_NO END)
#end
                    ) B
ON (A.BKG_NO = B.BKG_NO AND A.CNTR_NO = B.CNTR_NO)
WHEN MATCHED THEN 
     UPDATE SET  
      A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD, 
      A.CNMV_YR      = B.CNMV_YR, 
      A.CNMV_ID_NO   = B.CNMV_ID_NO, 
      A.CNMV_CYC_NO  = B.CNMV_CYC_NO, 
      A.CNMV_STS_CD  = B.MVMT_STS_CD, 
      A.ORG_YD_CD    = B.ORG_YD_CD, 
      A.DEST_YD_CD   = B.DEST_YD_CD, 
      A.CNMV_FLG     = 'Y', 
      A.DIFF_RMK     = B.CNMV_RMK, 
      A.EQ_SUBST_FLG = B.RL,
      A.CNMV_EVNT_DT = B.CNMV_EVNT_DT, 
      A.EQ_SUBST_TPSZ_CD = B.SUBST_RULE_CD, 
--      A.DE_TERM_CD       = B.DE_TERM_CD,
      A.UPD_USR_ID       = B.UPD_USR_ID,
      A.UPD_DT = SYSDATE

#end			]]></sql>
			<params>
				<param name="cntr_no" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="cnmv_id_no" type="12" value="" out="N"/>
				<param name="cnmv_yr" type="12" value="" out="N"/>
				<param name="lstrm_cd" type="12" value="" out="N"/>
				<param name="cnmv_cyc_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
