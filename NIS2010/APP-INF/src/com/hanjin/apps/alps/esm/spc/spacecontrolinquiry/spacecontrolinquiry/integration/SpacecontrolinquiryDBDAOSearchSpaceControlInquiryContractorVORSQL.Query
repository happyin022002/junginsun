<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpacecontrolinquiryDBDAOSearchSpaceControlInquiryContractorVORSQL">
			<desc><![CDATA[- Lee Sang-Yong : [프로젝트] Ticket ID : CHM-201004171 53ft 추가
2011.06.01 이석준 [ CHM-201111304-01] Reefer Size에 상관없이 Q'ty 가져오도록 수정
2011.06.01 [ CHM-201111305-01] 김종준 R5와 동일하게 R9이 적용될 수 있도록 쿼리수정
2011.07.05 [ CHM-201111880-01] 김종준control by HO 화면 보완 - IPC, TS 관련
2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
2013.01.23 [CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
2013.09.17 [Trouble Shooting] 성수기 Join 관계 보완(index 추가)
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2014.02.04 [CHM-201428383-01] RFA 로직 추가
2014.03.05 김시몬 [선처리] BKG RFA NULL 관련 보완
2014.03.17 [CHM-20142960] SMP/Allocation control보완 요청 - SPC_GET_SMP_AMEND_FNC 적용
2014.05.22 [선반영] AES-SC관련 로직 추가
2015.07.16 Arie [CHM-201537094] MAS CMB 산출 로직 변경 적용 - dem/det 추가 CM = REV+DEM/DET-COST TTL
2015.09.16 이혜민 선반영 SPC_CONTI_CONV_FNC 태울때 SLAN_CD를 인자로 가져가던것 RLANE_CD로 수정 (RLANE_CD로 가져가야 제대로 펑션을 탐)
2016.07.05 CHM-201642241 VGM(BKG상 표시되는 또 다른 WGT 정보) 도입 관련 SPC 사항]]></desc>
			<sql><![CDATA[
WITH PARAMS AS (
    SELECT P.OFC_CD    ,
           P.TRD_CD    ,
           P.SUB_TRD_CD,
           P.RLANE_CD  ,
           P.DIR_CD    ,
           P.IOC_CD    ,
           P.VSL_CD AS VSL_CD    ,
           P.SKD_VOY_NO AS SKD_VOY_NO,
           P.SKD_DIR_CD    AS SKD_DIR_CD,
           P.OFC_DIV   ,
           P.PORT_DIV  ,
           P.CUST_TP_CD,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR,
           SUBSTR(V.SLS_YRMON, 5, 2) AS COST_MON,
           V.COST_WK,
           (SELECT /*+INDEX_DESC (M XPKSPC_MDL_VER_MST) */
            	   DECODE(DECODE(Q.DIR_CD, NULL, 'N', 'Y'), 'Y', COST_YRWK||'-'||VER_SEQ, '200001-1')
              FROM SPC_MDL_VER_MST M
             WHERE SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK BETWEEN M.VER_ST_YRWK AND M.VER_END_YRWK
               AND M.TRD_CD  = V.TRD_CD
               AND M.CFM_FLG = 'Y'
               AND ROWNUM = 1) AS SEASON
      FROM (

    		 SELECT SUBSTR(@[rhq_txt],1,5)    AS OFC_CD,
          			@[trade]      AS TRD_CD    ,
           			@[subtrade]   AS SUB_TRD_CD,
           			@[lane]       AS RLANE_CD  ,
           			@[bound]      AS DIR_CD    ,
           			@[onc_ipc]    AS IOC_CD    ,
           			@[vsl_cd]     AS VSL_CD    ,
           			@[skd_voy_no] AS SKD_VOY_NO,
           			@[skd_dir_cd] AS SKD_DIR_CD,
           			@[rhq_gso]    AS OFC_DIV   ,
           			@[pol_pod]    AS PORT_DIV  ,
           			'C'           AS CUST_TP_CD
       		   FROM DUAL

#if (${rhq_txt} == 'SHARC,SINRS') 

			   UNION ALL

    		 SELECT SUBSTR(@[rhq_txt],7,5)    AS OFC_CD,
          			@[trade]      AS TRD_CD    ,
           			@[subtrade]   AS SUB_TRD_CD,
           			@[lane]       AS RLANE_CD  ,
           			@[bound]      AS DIR_CD    ,
           			@[onc_ipc]    AS IOC_CD    ,
           			@[vsl_cd]     AS VSL_CD    ,
           			@[skd_voy_no] AS SKD_VOY_NO,
           			@[skd_dir_cd] AS SKD_DIR_CD,
           			@[rhq_gso]    AS OFC_DIV   ,
           			@[pol_pod]    AS PORT_DIV  ,
           			'C'           AS CUST_TP_CD
       		   FROM DUAL
#end

           ) P,
           MAS_MON_VVD     V,
           SPC_HD_HUL_MST  Q
     WHERE V.TRD_CD     = P.TRD_CD
       AND V.RLANE_CD   = P.RLANE_CD
       AND V.IOC_CD     = P.IOC_CD
       AND V.VSL_CD     = P.VSL_CD 
       AND V.SKD_VOY_NO = P.SKD_VOY_NO
       AND V.DIR_CD     = P.SKD_DIR_CD
       AND V.TRD_CD     = Q.TRD_CD   (+)
       AND V.RLANE_CD   = Q.RLANE_CD (+)
       AND V.DIR_CD     = Q.DIR_CD   (+)
)

#if (${pol_pod} != 'DEL')

, FCST_DATA AS ( 
    SELECT ROW_NUMBER() OVER ( PARTITION BY DECODE(D.POL_YD_CD, NULL, 1, 2) ORDER BY NVL(SUM(D.CFM_TTL_QTY), 0) DESC) AS IDX,
           D.CUST_CNT_CD,
           D.CUST_SEQ   ,
           DECODE(D.POL_YD_CD, NULL, 'POD', 'POL') AS FLG    ,
           NVL(D.POL_YD_CD, D.POD_YD_CD)           AS PORT_CD,
           DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD) AS OFC_CD,
           M.OFC_CD AS RHQ_CD,
           D.SC_NO,
           D.RFA_NO,
           SUM(D.CFM_TTL_QTY)     AS FCT_TEU,
           SUM(D.CFM_40FT_HC_QTY) AS FCT_HC ,
           SUM(D.CFM_45FT_HC_QTY) AS FCT_45 ,
           SUM(D.CFM_53FT_QTY)    AS FCT_53 ,
           SUM(D.CFM_RF_QTY)      AS FCT_RF ,
           SUM(D.CFM_TTL_WGT)     AS FCT_WGT
      FROM PARAMS             M,
           SPC_DLY_FCAST_CUST D 
     WHERE D.TRD_CD     = M.TRD_CD
       AND D.SUB_TRD_CD = M.SUB_TRD_CD
       AND D.RLANE_CD   = M.RLANE_CD
       AND D.DIR_CD     = M.DIR_CD
       AND D.VSL_CD     = M.VSL_CD
       AND D.SKD_VOY_NO = M.SKD_VOY_NO
       AND D.SKD_DIR_CD = M.SKD_DIR_CD
       AND D.IOC_TS_CD  = M.IOC_CD
       AND (M.OFC_CD IS NULL OR D.SLS_RHQ_CD = M.OFC_CD OR D.SLS_AQ_CD = M.OFC_CD)
--       AND NVL(D.CFM_TTL_QTY, 0) + NVL(D.CFM_TTL_WGT, 0) > 0
       AND NVL(D.CFM_TTL_QTY, 0) + NVL(D.CFM_40FT_HC_QTY, 0) + NVL(D.CFM_45FT_HC_QTY, 0) + NVL(D.CFM_53FT_QTY, 0) + NVL(D.CFM_TTL_WGT, 0) + NVL(D.CFM_RF_QTY,0)  > 0
  GROUP BY GROUPING SETS (
                           (D.CUST_CNT_CD, D.CUST_SEQ, DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD), D.POL_YD_CD, M.OFC_CD, D.SC_NO, D.RFA_NO),
                           (D.CUST_CNT_CD, D.CUST_SEQ, DECODE(M.OFC_DIV, 'RHQ', D.SLS_RHQ_CD, D.SLS_RGN_OFC_CD), D.POD_YD_CD, M.OFC_CD, D.SC_NO, D.RFA_NO)
                         )
)

#end

, BKG_DATA AS (  
        SELECT ROW_NUMBER() OVER ( PARTITION BY IDX ORDER BY SUM(NVL(BKG_TEU, 0)) DESC) AS IDX,
                CUST_CNT_CD,
                CUST_SEQ   ,
                FLG,
                PORT_CD,
                OFC_CD,
                RHQ_CD,
                SC_NO,
                RFA_NO,
                SUM(BKG_TEU)  AS BKG_TEU,
                SUM(BKG_20)  AS BKG_20 , 
                SUM(BKG_40)  AS BKG_40 , 
                SUM(BKG_HC)  AS BKG_HC , 
                SUM(BKG_45)  AS BKG_45 , 
                SUM(BKG_53)  AS BKG_53 , 
                SUM(BKG_RF)  AS BKG_RF , 
                SUM(BKG_WGT)  AS BKG_WGT, SUM(BKG_VOL_VGM) AS BKG_VOL_VGM , SUM(BKG_WGT_VGM) AS BKG_WGT_VGM 

          FROM (
    	   SELECT CTRT_CUST_CNT_CD    AS CUST_CNT_CD
                , CTRT_CUST_SEQ       AS CUST_SEQ
                , DECODE(IDX, 1, 'POL', 2, 'POD', 3, 'DEL') AS FLG
                , DECODE(IDX, 1, NVL(POL_YD_CD, POL_CD), 2, NVL(POD_YD_CD, POD_CD), NVL(BKG_POD_YD_CD, BKG_POD_CD)) AS PORT_CD
                , DECODE(OFC_DIV , 'RHQ', N2ND_PRNT_OFC_CD, N4TH_PRNT_OFC_CD) AS OFC_CD
                , RHQ_CD
                , SC_NO
                , RFA_NO
      			, TO_NUMBER(NVL(SUBSTR(VAL, 1, 14), 0))                               AS BKG_TEU
      			, TO_NUMBER(NVL(SUBSTR(VAL, 15, 14), 0))                              AS BKG_20
      			, TO_NUMBER(NVL(SUBSTR(VAL, 29, 14), 0))                              AS BKG_40
      			, TO_NUMBER(NVL(SUBSTR(VAL, 43, 14), 0))                              AS BKG_HC
      			, TO_NUMBER(NVL(SUBSTR(VAL, 57, 14), 0))                              AS BKG_45
      			, TO_NUMBER(NVL(SUBSTR(VAL, 71, 14), 0))                              AS BKG_53
      			, TO_NUMBER(NVL(SUBSTR(VAL, 85, 14), 0))                              AS BKG_RF
      			, TO_NUMBER(NVL(SUBSTR(VAL, 99, 14), 0))                              AS BKG_WGT,BKG_VOL_VGM,BKG_WGT_VGM
                , IDX
       		 FROM
        		(  SELECT B.BKG_STS_CD
          				, O.N2ND_PRNT_OFC_CD
          				, O.N4TH_PRNT_OFC_CD
          				, M.OFC_DIV
          				, M.PORT_DIV
          				, BV.POL_YD_CD
          				, BV.POL_CD
          				, BV.POD_YD_CD
          				, BV.POD_CD
          				, B.POD_NOD_CD AS BKG_POD_YD_CD
          				, B.POD_CD AS BKG_POD_CD
                        , B.CTRT_CUST_CNT_CD
                        , B.CTRT_CUST_SEQ
                        , L.IDX
                        , M.OFC_CD RHQ_CD
                        , SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), B.SC_NO) AS SC_NO
                        
                        --20140304 추가
                        , CASE WHEN M.TRD_CD = 'AES' AND DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO) IS NULL AND BC.CUST_CNT_CD = 'CN' AND B.SC_NO IS NULL THEN
                              DECODE(SPC_GET_SMP_RFA_FNC('R',M.SEASON,  BC.CUST_CNT_CD||LPAD(BC.CUST_SEQ,6,'0'), B.POL_CD,B.POD_CD),'','','1'||SPC_GET_SMP_RFA_FNC('R',M.SEASON,  BC.CUST_CNT_CD||LPAD(BC.CUST_SEQ,6,'0'), B.POL_CD,B.POD_CD))
                              
                        ELSE   
                              SPC_GET_SMP_AMEND_FNC(M.TRD_CD, SUBSTR(M.SEASON, 1, 6), SUBSTR(M.SEASON, 8), DECODE(SUBSTR(B.RFA_NO, 1, 3), 'DUM', '', B.RFA_NO))
                        END AS RFA_NO                       
                        
          				, (SELECT  TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가
								|| TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')  
								|| TO_CHAR(SUM(DECODE(Q.CNTR_TPSZ_CD, 'DW', Q.OP_CNTR_QTY, 'DX', Q.OP_CNTR_QTY, 0)) , 'FM0000000000.000')  
								|| TO_CHAR(SUM(DECODE(SUBSTR(Q.CNTR_TPSZ_CD, 1, 1), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000') 
								|| TO_CHAR((R.ACT_WGT * DECODE(R.ACT_WGT,'LBS', 0.00045, 0.001)) 
										+ SUM(Q.OP_CNTR_QTY * (SELECT TS.CNTR_TPSZ_TARE_WGT
                   												 FROM MDM_CNTR_TP_SZ TS
                  												WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')
               		 		  FROM BKG_QUANTITY Q
              	    		 WHERE B.BKG_NO = Q.BKG_NO) VAL
						,(
						SELECT SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Z.CNTR_TPSZ_CD), '2', 1, 2)* Z.OP_CNTR_QTY) 
						FROM BKG_QUANTITY Z 
						WHERE Z.BKG_NO= B.BKG_NO AND OP_CNTR_QTY > 0 
						AND EXISTS ( SELECT 1 FROM BKG_CONTAINER C WHERE C.BKG_NO= Z.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL )
						) AS BKG_VOL_VGM
						,(SELECT SUM(NVL(Z.VGM_WGT,0) * DECODE(Z.VGM_WGT_UT_CD,'LBS',0.00045,0.001)) FROM BKG_CONTAINER Z WHERE Z.BKG_NO= B.BKG_NO AND VGM_WGT>0 AND VGM_WGT IS NOT NULL) AS BKG_WGT_VGM							 
           			 FROM BKG_VVD            BV
          				, BKG_BOOKING        B
          				, PARAMS             M
          				, BKG_BL_DOC         R
          				, MDM_DTL_REV_LANE   DRL
          				, MDM_REV_LANE       RL
          				, SPC_OFC_LVL        O
          				, BKG_CUSTOMER       BC  --20140304 추가   
                        , (
                             SELECT LEVEL AS IDX
                               FROM DUAL 
                            CONNECT BY LEVEL <= 3
                           ) L
          			WHERE B.BKG_NO         = BV.BKG_NO
            		  AND B.BKG_NO         = R.BKG_NO
            		  AND B.BKG_STS_CD    IN ('W','F')
            		  AND B.BKG_CGO_TP_CD IN ('F', 'B', 'R')
--            		  AND M.VSL_CD         = B.VSL_CD
--            		  AND M.SKD_VOY_NO     = B.SKD_VOY_NO
--            		  AND M.SKD_DIR_CD     = B.SKD_DIR_CD
            		  AND M.VSL_CD         = BV.VSL_CD
            		  AND M.SKD_VOY_NO     = BV.SKD_VOY_NO
            		  AND M.SKD_DIR_CD     = BV.SKD_DIR_CD
            		  AND RL.VSL_SLAN_CD   = BV.SLAN_CD
            		  AND (M.OFC_CD IS NULL 
							OR M.OFC_CD = (SELECT N2ND_PRNT_OFC_CD
               								 FROM SPC_OFC_LVL
              								WHERE OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD, '')
                							  AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK )
            				OR M.OFC_CD = (SELECT N3RD_PRNT_OFC_CD
               								 FROM SPC_OFC_LVL
              							    WHERE OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD, '')
                							  AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK ))
            		  AND O.OFC_CD = SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD)
            		  AND M.COST_YR || M.COST_WK BETWEEN OFC_APLY_FM_YRWK AND OFC_APLY_TO_YRWK
            		  AND DRL.RLANE_CD        = M.RLANE_CD
            		  AND DRL.VSL_SLAN_DIR_CD = M.DIR_CD
            		  AND DRL.IOC_CD          = M.IOC_CD
            		  AND DRL.TRD_CD          = M.TRD_CD
            		  AND DRL.SUB_TRD_CD      = M.SUB_TRD_CD
            		  AND DRL.DELT_FLG        = 'N'
            		  AND DRL.RLANE_CD        = RL.RLANE_CD
            		  AND DRL.FM_CONTI_CD     = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
               									   FROM MDM_LOCATION L
             									  WHERE L.LOC_CD = BV.POL_CD )
            		  AND DRL.TO_CONTI_CD 	  = (SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, M.RLANE_CD, M.DIR_CD)
               									   FROM MDM_LOCATION L
              									  WHERE L.LOC_CD = BV.POD_CD )
            		  AND RL.RLANE_CD  = M.RLANE_CD
            		  AND RL.VSL_TP_CD = 'C'
            		  AND RL.DELT_FLG  = 'N'
            		  AND B.BKG_NO            = BC.BKG_NO  --20140304 추가
                      AND BC.BKG_CUST_TP_CD   = 'S'        --20140304 추가
        	   ) M
            )
     GROUP BY CUST_CNT_CD
            , IDX
            , CUST_SEQ
            , FLG
            , PORT_CD
            , OFC_CD
            , RHQ_CD
            , SC_NO
            , RFA_NO
)
, ALL_DATA AS (

#if (${pol_pod} != 'DEL')

    SELECT Z.FLG,
           Z.IDX,
           NVL(TRIM(Z.CUST_CNT_CD), 'XX') AS CUST_CNT_CD,
           NVL(Z.CUST_SEQ, '999999')      AS CUST_SEQ   ,
           Z.PORT_CD,
           Z.OFC_CD ,
           Z.SC_NO,
           Z.RFA_NO,
           Z.FCT_TEU,
           Z.FCT_HC ,
           Z.FCT_45 ,
           Z.FCT_53 ,
           Z.FCT_RF ,
           Z.FCT_WGT,
           NULL AS BKG_TEU,
           NULL AS BKG_20 ,
           NULL AS BKG_40 ,
           NULL AS BKG_HC ,
           NULL AS BKG_45 ,
           NULL AS BKG_53 ,
           NULL AS BKG_RF ,
           NULL AS BKG_WGT,NULL BKG_VOL_VGM,NULL BKG_WGT_VGM
      FROM FCST_DATA Z,
           PARAMS    P
     WHERE IDX  <= 100
       AND Z.FLG = P.PORT_DIV
       AND Z.RHQ_CD = P.OFC_CD
    UNION ALL 

#end

    SELECT Z.FLG,
           Z.IDX + 100 AS IDX,
           NVL(TRIM(Z.CUST_CNT_CD), 'XX') AS CUST_CNT_CD,
           DECODE(NVL(TRIM(Z.CUST_CNT_CD), 'XX'), 'XX',999999,Z.CUST_SEQ) AS CUST_SEQ,
           Z.PORT_CD,
           Z.OFC_CD , 
           Z.SC_NO,
           Z.RFA_NO,
           NULL AS FCT_TEU,
           NULL AS FCT_HC ,
           NULL AS FCT_45 ,
           NULL AS FCT_53 ,
           NULL AS FCT_RF ,
           NULL AS FCT_WGT,
           Z.BKG_TEU,
           Z.BKG_20 ,
           Z.BKG_40 ,
           Z.BKG_HC ,
           Z.BKG_45 ,
           Z.BKG_53 ,
           Z.BKG_RF ,
           Z.BKG_WGT,BKG_VOL_VGM,BKG_WGT_VGM
      FROM BKG_DATA Z,
           PARAMS P
     WHERE IDX  <= 100
       AND Z.FLG = P.PORT_DIV
       AND Z.RHQ_CD = P.OFC_CD
)

, SMP AS (
    SELECT /*+INDEX_DESC (M XPKSPC_MDL_VER_MST) */
           T.TRD_CD,
           T.SUB_TRD_CD,
           T.RLANE_CD,
           T.OFC_DIV,
           DECODE(T.HH_FLG, 'Y', M.COST_YRWK||'-'||M.VER_SEQ, '200001-1') SEASON
      FROM (
             SELECT P.TRD_CD,
                    P.COST_YR,
                    P.COST_WK,
                    P.SUB_TRD_CD,
                    P.RLANE_CD,
                    P.OFC_DIV,
                    DECODE(H.DIR_CD, NULL, 'N', 'Y') AS HH_FLG
               FROM SPC_HD_HUL_MST H,
                    PARAMS P
              WHERE P.TRD_CD   = H.TRD_CD(+)
                AND P.RLANE_CD = H.RLANE_CD(+)
                AND P.DIR_CD   = H.DIR_CD(+)
          ) T,
          SPC_MDL_VER_MST M
     WHERE T.TRD_CD = M.TRD_CD
       AND T.COST_YR||T.COST_WK BETWEEN M.VER_ST_YRWK AND M.VER_END_YRWK
       AND M.CFM_FLG = 'Y'
       AND ROWNUM = 1
)

, WK_CMB AS (
    SELECT T.RNUM,
           BAR.COST_YRWK,
           DECODE(P.OFC_DIV, 'RHQ', DECODE(BAR.SLS_AQ_CD, ' ', BAR.SLS_RHQ_CD, BAR.SLS_AQ_CD), BAR.SLS_OFC_CD) OFC_CD,
           BAR.TS_FLG,
           BAR.IOC_CD,
           BAR.POL_YD_CD,
           BAR.POD_YD_CD,
           BAR.CUST_CNT_CD,
           BAR.CUST_SEQ,
           SUM(BAR.BKG_REV) AS BKG_REV, NVL(SUM(BAR.DMDT_COM_AMT),0) AS DMDT_COM_AMT,
           SUM(BAR.ESTM_CM_COST_AMT) AS ESTM_CM_COST_AMT,
           SUM(BAR.BKG_TTL_QTY) AS BKG_TTL_QTY,
           SUM(BAR.USD_BKG_TTL_WGT) AS BKG_TTL_WGT
     FROM SPC_BKG_AVG_REV   BAR,
          (SELECT DISTINCT DENSE_RANK() OVER (ORDER BY COST_YRWK) AS RNUM,
                  COST_YRWK
             FROM SPC_BKG_AVG_REV
          ) T,
          PARAMS            P  
    WHERE BAR.COST_YRWK  = T.COST_YRWK
      AND BAR.OFC_KND_CD IN ('1', '2', '3')
      AND BAR.TRD_CD     = P.TRD_CD
      AND BAR.RLANE_CD   = P.RLANE_CD
      AND BAR.DIR_CD     = P.DIR_CD
      AND BAR.IOC_CD     = P.IOC_CD
      AND BAR.SLS_RHQ_CD = P.OFC_CD
      --AND BAR.TRD_CD NOT IN ('IES', 'IMS')
      AND CUST_CNT_CD <> '00'
      AND BAR.IOC_CD = DECODE(P.IOC_CD, 'O', 'O', 'OT', 'O', 'I')
      AND BAR.TS_FLG = DECODE(P.IOC_CD, 'T', 'Y', 'TT', 'Y', 'N')
      AND P.IOC_CD       <> 'E'
    GROUP BY  T.RNUM,
              BAR.COST_YRWK,
              DECODE(P.OFC_DIV, 'RHQ', DECODE(BAR.SLS_AQ_CD, ' ', BAR.SLS_RHQ_CD, BAR.SLS_AQ_CD), BAR.SLS_OFC_CD),
              BAR.TS_FLG,
              BAR.IOC_CD,
              BAR.POL_YD_CD,
              BAR.POD_YD_CD,
              BAR.CUST_CNT_CD,
              BAR.CUST_SEQ
)

  SELECT Z.FLG        ,
         Z.IDX ORD    ,
         Z.CUST_CNT_CD,
         Z.CUST_SEQ   ,
         Z.CUST_CNT_CD||LTRIM(TO_CHAR(Z.CUST_SEQ, '000009')) AS CUST_CD,
         (SELECT NVL(CUST_ABBR_NM, CUST_LGL_ENG_NM)
            FROM MDM_CUSTOMER
           WHERE CUST_CNT_CD = Z.CUST_CNT_CD
             AND CUST_SEQ = Z.CUST_SEQ
         ) AS CUST_NM,
         (SELECT RVIS_CNTR_CUST_TP_CD
            FROM MDM_CUSTOMER 
           WHERE CUST_CNT_CD = Z.CUST_CNT_CD 
             AND CUST_SEQ = Z.CUST_SEQ
         ) AS RVIS_CNTR_CUST_TP_CD,
         Z.CUST_CTRL_CD,
         (SELECT SUM(RLANE_ADJ_QTY)
            FROM SPC_MDL_CUST_REV_LANE R, SMP S
           WHERE R.TRD_CD    = S.TRD_CD
             AND R.COST_YRWK = SUBSTR(S.SEASON, 1, 6)
             AND R.VER_SEQ   = SUBSTR(S.SEASON, 8)
             AND R.SUB_TRD_CD = S.SUB_TRD_CD
             AND R.RLANE_CD   = S.RLANE_CD
             AND Z.OFC_CD = DECODE(S.OFC_DIV, 'RHQ', R.SLS_RHQ_CD, R.SLS_RGN_OFC_CD)
             AND R.CUST_CNT_CD = Z.CUST_CNT_CD
             AND R.CUST_SEQ = Z.CUST_SEQ
         ) AS SMP,
         -- 주차별 CMB
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 1
         ) AS CMB1,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 1
         ) AS CMB_WGT1,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 2
         ) AS CMB2,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 2
         ) AS CMB_WGT2,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 3
         ) AS CMB3,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 3
         ) AS CMB_WGT3,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_QTY), 0, 1, SUM(BAR.BKG_TTL_QTY)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 4
         ) AS CMB4,
         (
            SELECT ROUND((SUM(BAR.BKG_REV) + SUM(BAR.DMDT_COM_AMT) - SUM(BAR.ESTM_CM_COST_AMT)) / DECODE(SUM(BAR.BKG_TTL_WGT), 0, 1, SUM(BAR.BKG_TTL_WGT)))
              FROM WK_CMB BAR
             WHERE BAR.OFC_CD  = Z.OFC_CD
               AND SUBSTR(Z.PORT_CD,1,5) = DECODE(Z.FLG, 'POL', BAR.POL_YD_CD, BAR.POD_YD_CD)
               AND BAR.CUST_CNT_CD = Z.CUST_CNT_CD
               AND BAR.CUST_SEQ    = Z.CUST_SEQ
               AND BAR.RNUM = 4
         ) AS CMB_WGT4,
         Z.PORT_CD,
         Z.OFC_CD ,
         NVL(Z.FCT_TEU, 0) + NVL(Z.FCT_HC, 0) * 2 + NVL(Z.FCT_45, 0) * 2 + NVL(Z.FCT_53, 0) * 2 AS FC_TTL_TEU,
         Z.FCT_TEU,
         Z.FCT_HC ,
         Z.FCT_45 ,
         Z.FCT_53 ,
         Z.FCT_RF ,
         Z.FCT_WGT,
         Z.BKG_TEU AS BKG_VOL,
         Z.BKG_20 ,
         Z.BKG_40 ,
         Z.BKG_HC ,
         Z.BKG_45 ,
         Z.BKG_53 ,
         Z.BKG_RF ,
         Z.BKG_WGT,BKG_VOL_VGM,BKG_WGT_VGM
    FROM (
            SELECT ROW_NUMBER() OVER ( PARTITION BY Z.FLG ORDER BY MIN(Z.IDX)) AS IDX,
                   MIN(Z.IDX) AS IDX2,
                   Z.FLG        ,
                   Z.CUST_CNT_CD,
                   Z.CUST_SEQ   ,
                   NVL(T.CUST_CTRL_CD,'C') CUST_CTRL_CD,
                   Z.PORT_CD    ,
                   Z.OFC_CD     , 
                   SUM(Z.FCT_TEU) AS FCT_TEU,
                   SUM(Z.FCT_HC)  AS FCT_HC ,
                   SUM(Z.FCT_45)  AS FCT_45 ,
                   SUM(Z.FCT_53)  AS FCT_53 ,
                   SUM(Z.FCT_RF)  AS FCT_RF ,
                   SUM(Z.FCT_WGT) AS FCT_WGT,
                   SUM(Z.BKG_TEU) AS BKG_TEU,
                   SUM(Z.BKG_20)  AS BKG_20 ,
                   SUM(Z.BKG_40)  AS BKG_40 ,
                   SUM(Z.BKG_HC)  AS BKG_HC ,
                   SUM(Z.BKG_45)  AS BKG_45 ,
                   SUM(Z.BKG_53)  AS BKG_53 ,
                   SUM(Z.BKG_RF)  AS BKG_RF , 
                   SUM(Z.BKG_WGT) AS BKG_WGT,SUM(Z.BKG_VOL_VGM) AS BKG_VOL_VGM,SUM(Z.BKG_WGT_VGM) AS BKG_WGT_VGM
              FROM ALL_DATA Z,
                   (SELECT DISTINCT  --20130424 추가
                           C.CUST_CNT_CD,
                           C.CUST_SEQ,
                           C.CUST_CTRL_CD,
                           C.SC_NO,
                           C.RFA_NO
                      FROM SPC_MDL_CUST_CTRL C, SMP S
                     WHERE C.TRD_CD    = S.TRD_CD
                       AND C.COST_YRWK = SUBSTR(S.SEASON,1,6)
                       AND C.VER_SEQ   = SUBSTR(S.SEASON,8)
                   ) T
             WHERE Z.CUST_CNT_CD = NVL(T.CUST_CNT_CD(+), DECODE(SUBSTR(NVL(Z.RFA_NO,' '),1,1),'1', Z.CUST_CNT_CD,T.CUST_CNT_CD(+)))
               AND Z.CUST_SEQ    = NVL(T.CUST_SEQ(+),    DECODE(SUBSTR(NVL(Z.RFA_NO,' '),1,1),'1', Z.CUST_SEQ,   T.CUST_SEQ(+)))
               AND NVL(Z.SC_NO, DECODE(SUBSTR(NVL(Z.RFA_NO,' '),1,1),'1',SUBSTR(Z.RFA_NO,2),NVL(Z.RFA_NO,' '))) = NVL(T.SC_NO(+), NVL(T.RFA_NO(+),' '))
             --WHERE Z.CUST_CNT_CD = DECODE(--[trade], 'AES', DECODE(SUBSTR(NVL(Z.RFA_NO,' '),1,1),'1', Z.CUST_CNT_CD,T.CUST_CNT_CD(+)),T.CUST_CNT_CD(+))
             --  AND Z.CUST_SEQ    = DECODE(--[trade], 'AES', DECODE(SUBSTR(NVL(Z.RFA_NO,' '),1,1),'1', Z.CUST_SEQ,   T.CUST_SEQ(+)),T.CUST_SEQ(+))
             --  AND DECODE(--[trade], 'AES', DECODE(SUBSTR(NVL(Z.RFA_NO,' '),1,1),'1',SUBSTR(Z.RFA_NO,2),NVL(Z.RFA_NO,' ')), NVL(Z.SC_NO,' ')) = DECODE(--[trade], 'AES', NVL(T.RFA_NO(+),' '), NVL(T.SC_NO(+),' '))
          GROUP BY Z.FLG        ,
                   Z.CUST_CNT_CD,
                   Z.CUST_SEQ   ,
                   Z.PORT_CD    ,
                   Z.OFC_CD     ,
                   NVL(T.CUST_CTRL_CD,'C')
          ORDER BY Z.FLG,
                   IDX
         ) Z
ORDER BY FLG    ,
         IDX    ,
         CUST_CD,
         CUST_NM,
         PORT_CD,
         OFC_CD			]]></sql>
			<params>
				<param name="rhq_txt" type="12" value="" out="N"/>
				<param name="trade" type="12" value="" out="N"/>
				<param name="subtrade" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="onc_ipc" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="rhq_gso" type="12" value="" out="N"/>
				<param name="pol_pod" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
