<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOSearchBunkerTariffYwListRSQL">
			<desc><![CDATA[SearchBunkerTariffList SELECT
2010.09.08 이상용   [CHM-201005893] MIN 값이 아니라 SLS_YRMON 과 조인하도록 변경
2011.11.18 최윤성 [CHM-201110236-01] Bunker Fee 메뉴 컬럼 추가
 - SLANE, RLANE, DIR, VSL CLASS CAPA 에 따른 해당 주차의 VESSEL 정보 제공
   한주에 노선별 VVD정보는 하나만 오는 것이 일반적이나 그렇치 않은 경우가 존재하여
   아래와 같이 CONNECT BY를 사용하여 동일 노선의 동일 사이즈의 VESSEL 코드를 조회 하도록 함
[CHM-201215754-01] [COA] Bunker Fee 화면 개발 건 쿼리 변경]]></desc>
			<sql><![CDATA[
WITH TMP_MON_VVD AS
        (
                -- before 12주차부터 현재 주차까지의 모든 데이터를 조회한다.
                -- before 12주차부터 before 1주차까지는 Ref - FO Cons 값을 구하기 위해서 사용
                 SELECT DECODE(B.VSL_CD||B.SKD_VOY_NO||B.DIR_CD, A.VSL_CD||A.SKD_VOY_NO||A.DIR_CD, 'R', 'I') FLAG
                      , A.COST_YRMON
                      , A.COST_WK
                      , A.SLAN_CD
                      , A.RLANE_CD
                      , A.DIR_CD
                      , A.VSL_CD
                      , A.SKD_VOY_NO
                      , A.TRD_CD
                      , A.SUB_TRD_CD
                      , NVL(B.FOIL_CSM, 0) FOIL_CSM
                      , NVL(B.FOIL_UC_AMT, 0) FOIL_UC_AMT
                      , NVL(B.DOIL_CSM, 0) DOIL_CSM
                      , NVL(B.DOIL_UC_AMT, 0) DOIL_UC_AMT
                      , A.PREV_WK_12
                      , A.PREV_WK_1
                   FROM
                        (
                                SELECT DISTINCT A1.SLS_YRMON COST_YRMON
                                      , A1.COST_WK
                                      , A1.SLAN_CD
                                      , A1.RLANE_CD
                                      , A1.DIR_CD
                                      , A1.VSL_CD
                                      , A1.SKD_VOY_NO
                                      , A1.TRD_CD
                                      , A1.SUB_TRD_CD
                                      , A4.PREV_WK_12
                                      , A4.PREV_WK_1
                                   FROM COA_MON_VVD A1
                                      , COA_VSL_RGST A2
                                      , COA_LANE_RGST A3
                                      , (
                                                 SELECT PREV_WK_12      -- before 12 weeks
                                                      , PREV_WK_1       -- before 1 week
                                                      , PREV_WK_0       -- current week
                                                   FROM
                                                        (
                                                                 SELECT LAG (COST_YR || COST_WK, 12) OVER (ORDER BY COST_YR || COST_WK) AS PREV_WK_12
                                                                      , LAG (COST_YR || COST_WK, 1) OVER (ORDER BY COST_YR || COST_WK) AS PREV_WK_1
                                                                      , (@[sls_yrmon]||@[cost_wk]) PREV_WK_0
                                                                   FROM COA_WK_PRD
                                                                  WHERE COST_YR || COST_WK <= @[sls_yrmon]||@[cost_wk]
                                                               ORDER BY COST_YR || COST_WK DESC
                                                        )
                                                  WHERE ROWNUM = 1
                                        )
                                        A4
                                  WHERE A1.TRD_CD          = A3.TRD_CD
                                    AND A1.RLANE_CD        = A3.RLANE_CD
                                    AND A1.IOC_CD          = A3.IOC_CD
                                    AND A1.DIR_CD          = A3.DIR_CD
                                    AND A3.TRD_CD         <> 'COM'
                                    AND A3.VSL_LANE_TP_CD IN ('JO', 'SC')
                                    AND A1.VSL_CD          = A2.VSL_CD
                                    -- if 절 사용
									#if (${slan_cd} != '')
		                                AND A1.SLAN_CD    =@[slan_cd]
									#end
									#if (${rlane_cd} != '')
		                                AND A1.RLANE_CD   = @[rlane_cd]
									#end
									#if (${f_vsl_cd} != '')
		                            	AND A1.VSL_CD     = @[f_vsl_cd] 
									#end
									#if (${f_dir_cd} != '')
		                                AND A1.DIR_CD     = @[f_dir_cd]
									#end
                                    
                                    AND A1.N1ST_LODG_PORT_ETD_DT BETWEEN A2.VSL_APLY_FM_DT AND A2.VSL_APLY_TO_DT
                                    AND A2.VOP_CD = 'HJS'
                                    AND SUBSTR(A1.SLS_YRMON, 1, 4)||A1.COST_WK BETWEEN A4.PREV_WK_12 AND A4.PREV_WK_0        ---여기도 분기                            
                                    AND A1.DELT_FLG = 'N'
                                    AND A2.DELT_FLG = 'N'
                                    AND A3.DELT_FLG = 'N'
                                    
                        ) A
                      , COA_BNK_TRF B
                  WHERE A.SLAN_CD    = B.SLAN_CD (+)
                    AND A.RLANE_CD   = B.RLANE_CD (+)
                    AND A.VSL_CD     = B.VSL_CD (+)
                    AND A.SKD_VOY_NO = B.SKD_VOY_NO (+)
                    AND A.DIR_CD     = B.DIR_CD (+)
        )
        
 SELECT A.FLAG              -- ibflag
      , A.COST_STS          -- status
      , A.COST_YRMON        -- yyyy-mm
      , A.COST_WK           -- Week
      , A.SLAN_CD           -- S.Lane
      , A.RLANE_CD          -- R.Lane
      , A.VSL_CD            -- Vessel Code
      , A.SKD_VOY_NO        -- Voyage
      , A.DIR_CD            -- DIR
      , A.FOIL_CSM          -- FO-Cons
      , A.FOIL_UC_AMT       -- FO-Unit Cost
      , A.DOIL_CSM          -- DO-Cons
      , A.DOIL_UC_AMT       -- DO-Unit Cost
      , A.FOIL_ESTM_CSM_WGT -- Cons.(FCM)-FO Cons
      , A.DOIL_ESTM_CSM_WGT -- Cons.(FCM)-DO Cons
      , NVL(B.LAST_FOIL_CSM, 0) LAST_FOIL_CSM   -- Ref-FO Cons
      , DECODE(NVL(B.LAST_FOIL_CSM, 0), 0, 'No data', B.LAST_FOIL_CSM_REF) LAST_FOIL_CSM_REF    -- Ref-YR_WK
   FROM
        (
                 SELECT D1.FLAG
                      , CASE WHEN NVL(D1.FOIL_CSM, 0) = 0 AND D1.FOIL_ESTM_CSM_WGT = 0 THEN 'N' 
                             WHEN NVL(D1.FOIL_CSM, 0) = 0 AND D1.FOIL_ESTM_CSM_WGT > 0 THEN 'F' 
                             WHEN NVL(D1.FOIL_CSM, 0) > 0 AND D1.FOIL_ESTM_CSM_WGT = 0 THEN 'C' 
                             ELSE 'A' END AS COST_STS
                      , D1.COST_YRMON
                      , D1.COST_WK
                      , D1.SLAN_CD
                      , D1.RLANE_CD
                      , D1.VSL_CD
                      , D1.SKD_VOY_NO
                      , D1.DIR_CD
                      , D1.FOIL_CSM
                      , D1.FOIL_UC_AMT
                      , D1.DOIL_CSM
                      , D1.DOIL_UC_AMT
                      , D1.FOIL_ESTM_CSM_WGT
                      , D1.DOIL_ESTM_CSM_WGT
                   FROM
                        (
                                 SELECT MIN(A.FLAG) FLAG
                                      , A.COST_YRMON
                                      , A.COST_WK
                                      , A.SLAN_CD
                                      , A.RLANE_CD
                                      , A.DIR_CD
                                      , A.VSL_CD
                                      , A.SKD_VOY_NO
                                      , A.TRD_CD
                                      , A.SUB_TRD_CD
                                      , MAX(B.FCM_ESTM_WRK_DT) FCM_ESTM_WRK_DT
                                      , MAX(B.FCM_ESTM_WRK_SEQ) KEEP(DENSE_RANK LAST ORDER BY B.FCM_ESTM_WRK_DT ) FCM_ESTM_WRK_SEQ
                                      , NVL(MIN(A.FOIL_CSM), 0) FOIL_CSM
                                      , NVL(MIN(A.FOIL_UC_AMT), 0) FOIL_UC_AMT
                                      , NVL(MIN(A.DOIL_CSM), 0) DOIL_CSM
                                      , NVL(MIN(A.DOIL_UC_AMT), 0) DOIL_UC_AMT
                                      , NVL(MIN(B.FOIL_ESTM_CSM_WGT) KEEP(DENSE_RANK LAST ORDER BY B.FCM_ESTM_WRK_DT, B.FCM_ESTM_WRK_SEQ), 0) FOIL_ESTM_CSM_WGT
                                      , NVL(MIN(B.DOIL_ESTM_CSM_WGT) KEEP(DENSE_RANK LAST ORDER BY B.FCM_ESTM_WRK_DT, B.FCM_ESTM_WRK_SEQ), 0) DOIL_ESTM_CSM_WGT
                                   FROM TMP_MON_VVD A
                                      , FCM_ESTM_WK_CSM_IF B
                                  WHERE A.COST_YRMON = B.BSE_YRMON(+)
                                    AND A.COST_WK    = B.BSE_WK(+)
                                    AND A.VSL_CD     = B.VSL_CD(+)
                                    AND A.SKD_VOY_NO = B.SKD_VOY_NO(+)
                                    AND A.DIR_CD     = B.SKD_DIR_CD(+)
                                    AND A.TRD_CD     = B.TRD_CD(+)
                                    AND A.SUB_TRD_CD = B.SUB_TRD_CD(+)
                                    AND A.COST_YRMON LIKE @[sls_yrmon]||'%'
                                    AND A.COST_WK = @[cost_wk]
		                            -- if 절 사용
									#if (${slan_cd} != '')
		                                AND A.SLAN_CD    =@[slan_cd]
									#end
									#if (${rlane_cd} != '')
		                                AND A.RLANE_CD   = @[rlane_cd]
									#end
									#if (${f_vsl_cd} != '')
		                            	AND A.VSL_CD     = @[f_vsl_cd] 
									#end
									#if (${f_skd_voy_no} != '')
		                                AND A.SKD_VOY_NO = @[f_skd_voy_no]
									#end
									#if (${f_dir_cd} != '')
		                                AND A.DIR_CD     = @[f_dir_cd]
									#end                                    
                               GROUP BY A.COST_YRMON
                                      , A.COST_WK
                                      , A.SLAN_CD
                                      , A.RLANE_CD
                                      , A.DIR_CD
                                      , A.VSL_CD
                                      , A.SKD_VOY_NO
                                      , A.TRD_CD
                                      , A.SUB_TRD_CD
                        )
                        D1
        ) A
        -- Ref를 구하기 위한 쿼리: 최근 12주차 중에 가장 최근의 FO Cons 값을 조회
      , (
                 SELECT SLAN_CD
                      , RLANE_CD
                      , DIR_CD
                      , VSL_CD
                      , COST_YRMON
                      , COST_WK
                      , SKD_VOY_NO
                      , LAST_FOIL_CSM
                      , DECODE(LAST_FOIL_CSM, 0, 'No data', 'YR_'||SUBSTR( COST_YRMON, 0, 4)||'_WK_'||COST_WK)
                        LAST_FOIL_CSM_REF
                   FROM
                        (
                                -- MAX(SKD_VOY_NO)로 최근 vvd정보를 조회
                                 SELECT SLAN_CD
                                      , RLANE_CD
                                      , DIR_CD
                                      , VSL_CD
									  , MAX(COST_YRMON) KEEP(DENSE_RANK LAST ORDER BY SKD_VOY_NO ) COST_YRMON
									  , MAX(COST_WK) KEEP(DENSE_RANK LAST ORDER BY SKD_VOY_NO ) COST_WK
                                      , MAX(SKD_VOY_NO) SKD_VOY_NO
                                      , NVL(MAX(FOIL_CSM) KEEP(DENSE_RANK LAST ORDER BY SKD_VOY_NO ), 0) LAST_FOIL_CSM
                                   FROM TMP_MON_VVD
                                  WHERE SUBSTR(COST_YRMON, 1, 4)||COST_WK BETWEEN PREV_WK_12 AND PREV_WK_1
                               GROUP BY SLAN_CD
                                      , RLANE_CD
                                      , DIR_CD
                                      , VSL_CD
                        )
        ) B
  WHERE A.SLAN_CD  = B.SLAN_CD(+)
    AND A.RLANE_CD = B.RLANE_CD(+)
    AND A.VSL_CD   = B.VSL_CD(+)
    AND A.DIR_CD   = B.DIR_CD(+)
ORDER BY SLAN_CD
      , RLANE_CD
      , VSL_CD
      , SKD_VOY_NO
      , DIR_CD			]]></sql>
			<params>
				<param name="sls_yrmon" type="12" value="" out="Y"/>
				<param name="cost_wk" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="Y"/>
				<param name="rlane_cd" type="12" value="" out="Y"/>
				<param name="f_vsl_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_skd_voy_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
