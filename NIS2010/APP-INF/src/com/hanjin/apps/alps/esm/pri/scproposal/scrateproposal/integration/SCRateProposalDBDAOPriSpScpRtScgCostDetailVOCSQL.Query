<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SCRateProposalDBDAOPriSpScpRtScgCostDetailVOCSQL">
			<desc><![CDATA[2013.04.25 [CHM-201324203] 전윤주 Contract date 비교하여 surcharge calculate 하는 로직 추가
2015.03.09 전지예 [CHM-201534137] Percent Base CHG Creation 보완
2015.06.30 최성환 [CHM-201536493] Split03-주간 MAS Open에 따른 타모듈 프로그램 적용 요청]]></desc>
			<sql><![CDATA[
MERGE INTO PRI_SP_SCP_RT_SCG A
USING (
WITH
BQ AS   /*★ */
(
SELECT BQ_SEQ       ,
    CTRT_TP_CD     ,
    PROP_NO       ,
    AMDT_SEQ      ,
    SVC_SCP_CD     ,
    GEN_SPCL_RT_TP_CD  ,
    CMDT_HDR_SEQ    ,
    ROUT_SEQ      ,
    RT_SEQ       ,
    CURR_CD		,
    PROP_FRT_RT_AMT   ,
    DIR_CALL_FLG    ,
    CTRT_CNTR_TPSZ_CD  ,
    CTRT_CNTR_SZ_CD   ,
    PRC_CGO_TP_CD    ,
    POR_CD       ,
    POR_STE_CD     ,
    POR_RGN_CD     ,
    POR_CNT_CD     ,
    POR_CONTI_CD    ,
    POL_CD       ,
    POL_STE_CD     ,
    POL_RGN_CD     ,
    POL_CNT_CD     ,
    POL_CONTI_CD    ,
    POD_CD       ,
    POD_STE_CD     ,
    POD_RGN_CD     ,
    POD_CNT_CD     ,
    POD_CONTI_CD    ,
    DEL_CD       ,
    DEL_STE_CD     ,
    DEL_RGN_CD     ,
    DEL_CNT_CD     ,
    DEL_CONTI_CD    ,
    RCV_TERM_CD     ,
    DE_TERM_CD     ,
    N1ST_FINC_VVD_CD  ,
    N2ND_FINC_VVD_CD  ,
    N3RD_FINC_VVD_CD  ,
    N4TH_FINC_VVD_CD  ,
    N1ST_RLANE_CD    ,
    N2ND_RLANE_CD    ,
    N3RD_RLANE_CD    ,
    N4TH_RLANE_CD    ,
    N1ST_POL_CONTI_CD          ,
    N2ND_POL_CONTI_CD          ,
    N3RD_POL_CONTI_CD          ,
    N4TH_POL_CONTI_CD          ,

    N1ST_POD_CONTI_CD          ,
    N2ND_POD_CONTI_CD          ,
    N3RD_POD_CONTI_CD          ,
    N4TH_POD_CONTI_CD          ,
    
    N1ST_POL_CD          ,
    N2ND_POL_CD          ,
    N3RD_POL_CD          ,
    N4TH_POL_CD          ,

    N1ST_POD_CD          ,
    N2ND_POD_CD          ,
    N3RD_POD_CD          ,
    N4TH_POD_CD          ,

    N1ST_TS_PORT_CD   ,
    N2ND_TS_PORT_CD   ,
    N3RD_TS_PORT_CD   ,
    CML_ZN_CD      ,
    USA_SVC_MOD_CD   ,

    CASE
    WHEN ORG_TRNS_MOD_CD = 'TD' THEN 'T'
    WHEN ORG_TRNS_MOD_CD = 'RD' THEN 'R'
    WHEN ORG_TRNS_MOD_CD = 'WD' THEN  DECODE(POR_CD, POL_CD,'F', 'B')
    WHEN ORG_TRNS_MOD_CD = 'TR' THEN 'A'
    WHEN ORG_TRNS_MOD_CD = 'TW' THEN  DECODE(POR_CD, POL_CD,'E', 'U')
    END ORG_TRNS_MOD_CD ,

    CASE
    WHEN DEST_TRNS_MOD_CD = 'TD' THEN 'T'
    WHEN DEST_TRNS_MOD_CD = 'RD' THEN 'R'
    WHEN DEST_TRNS_MOD_CD = 'WD' THEN  DECODE(DEL_CD, POD_CD,'F', 'B')
    WHEN DEST_TRNS_MOD_CD = 'TR' THEN 'A'
    WHEN DEST_TRNS_MOD_CD = 'TW' THEN  DECODE(DEL_CD, POD_CD,'E', 'U')
    END DEST_TRNS_MOD_CD ,

    PRD_RD_CNT,
    CUST_TP_CD

FROM  (
    SELECT ROWNUM BQ_SEQ     ,

        'S' CTRT_TP_CD    ,
        RT.PROP_NO      ,
        RT.AMDT_SEQ      ,
        RT.SVC_SCP_CD     ,
        RT.GEN_SPCL_RT_TP_CD ,
        RT.CMDT_HDR_SEQ    ,
        RT.ROUT_SEQ      ,
        RT.RT_SEQ       ,
        RT.CURR_CD		,
        RT.PROP_FRT_RT_AMT  ,

        RD.DIR_CALL_FLG    ,

        CASE
        WHEN RT.RAT_UT_CD = '20' THEN 'D2'
        WHEN RT.RAT_UT_CD = '40' THEN 'D4'
        WHEN RT.RAT_UT_CD = 'HC' THEN 'D5'
        WHEN RT.RAT_UT_CD = '45' THEN 'D7'
        WHEN RT.RAT_UT_CD = 'BL' THEN 'F4'
        ELSE RT.RAT_UT_CD
        END CTRT_CNTR_TPSZ_CD ,

        ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = CASE
                                         WHEN RT.RAT_UT_CD = '20' THEN 'D2'
                                         WHEN RT.RAT_UT_CD = '40' THEN 'D4'
                                         WHEN RT.RAT_UT_CD = 'HC' THEN 'D5'
                                         WHEN RT.RAT_UT_CD = '45' THEN 'D7'
                                         WHEN RT.RAT_UT_CD = 'BL' THEN 'F4'
                                         ELSE RT.RAT_UT_CD
                                         END ) CTRT_CNTR_SZ_CD ,

        RT.PRC_CGO_TP_CD  ,

        RC.POR_CD              ,
        L1.CNT_CD||L1.STE_CD POR_STE_CD  ,
        L1.RGN_CD       POR_RGN_CD  ,
        L1.CNT_CD       POR_CNT_CD  ,
        L1.CONTI_CD      POR_CONTI_CD ,
        RC.POL_CD              ,
        L2.CNT_CD||L2.STE_CD POL_STE_CD  ,
        L2.RGN_CD       POL_RGN_CD  ,
        L2.CNT_CD       POL_CNT_CD  ,
        L2.CONTI_CD      POL_CONTI_CD ,
        RC.POD_CD              ,
        L3.CNT_CD||L3.STE_CD POD_STE_CD  ,
        L3.RGN_CD       POD_RGN_CD  ,
        L3.CNT_CD       POD_CNT_CD  ,
        L3.CONTI_CD      POD_CONTI_CD ,
        RC.DEL_CD              ,
        L4.CNT_CD||L4.STE_CD DEL_STE_CD  ,
        L4.RGN_CD       DEL_RGN_CD  ,
        L4.CNT_CD       DEL_CNT_CD  ,
        L4.CONTI_CD      DEL_CONTI_CD ,

		/* T : Tackle, I : Free In, N : Liner In, S : CFS */
        DECODE( RC.BKG_RCV_TERM_CD, 'T', 'Y', 'I', 'Y', 'N', 'Y', 'S', 'Y', RC.BKG_RCV_TERM_CD ) RCV_TERM_CD   ,
		/* T : Tackle, O : Free Out, U : Liner Out, S : CFS */
        DECODE( RC.BKG_DE_TERM_CD, 'T', 'Y', 'O', 'Y', 'U', 'Y', 'S', 'Y', RC.BKG_DE_TERM_CD ) DE_TERM_CD   ,

        RC.N1ST_FINC_VVD_CD         ,
        RC.N2ND_FINC_VVD_CD         ,
        RC.N3RD_FINC_VVD_CD         ,
        RC.N4TH_FINC_VVD_CD         ,

        RC.N1ST_RLANE_CD          ,
        RC.N2ND_RLANE_CD          ,
        RC.N3RD_RLANE_CD          ,
        RC.N4TH_RLANE_CD          ,

        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.POL_CD)  				AS N1ST_POL_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N1ST_TS_PORT_CD) 		AS N2ND_POL_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N2ND_TS_PORT_CD) 		AS N3RD_POL_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = RC.N3RD_TS_PORT_CD) 		AS N4TH_POL_CONTI_CD          ,

        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD)) 				AS N1ST_POD_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N2ND_POD_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))) AS N3RD_POD_CONTI_CD          ,
        (SELECT A.CONTI_CD FROM MDM_LOCATION A WHERE A.LOC_CD = DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)) AS N4TH_POD_CONTI_CD          ,

        RC.POL_CD  				AS N1ST_POL_CD          ,
        RC.N1ST_TS_PORT_CD 		AS N2ND_POL_CD          ,
        RC.N2ND_TS_PORT_CD 		AS N3RD_POL_CD          ,
        RC.N3RD_TS_PORT_CD 		AS N4TH_POL_CD          ,

        NVL(RC.N1ST_TS_PORT_CD, RC.POD_CD) 				                            AS N1ST_POD_CD          ,
        NVL(RC.N2ND_TS_PORT_CD, DECODE(RC.N1ST_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N2ND_POD_CD          ,
        NVL(RC.N3RD_TS_PORT_CD, DECODE(RC.N2ND_TS_PORT_CD, NULL, NULL, RC.POD_CD))  AS N3RD_POD_CD          ,
        DECODE(RC.N3RD_TS_PORT_CD, NULL, NULL, RC.POD_CD)                           AS N4TH_POD_CD          ,

        RC.N1ST_TS_PORT_CD         ,
        RC.N2ND_TS_PORT_CD         ,
        RC.N3RD_TS_PORT_CD         ,

        CASE
        WHEN L4.CML_ZN_FLG = 'Y' AND L3.RGN_CD IN ( 'UAG', 'UAN', 'UAS' ) THEN 'CZ'
        ELSE 'NN'
        END CML_ZN_CD   ,
        CASE
        WHEN L3.CNT_CD IN ( 'US', 'CA' ) AND RC.POD_CD = RC.DEL_CD AND RC.BKG_DE_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
        WHEN L3.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L3.RGN_CD AND A.DEST_RGN_CD = L4.RGN_CD ), 'OT')
        WHEN L2.CNT_CD IN ( 'US', 'CA' ) AND RC.POL_CD = RC.POR_CD AND RC.BKG_RCV_TERM_CD NOT IN ( 'D', 'H' ) THEN 'PO'
        WHEN L2.CNT_CD IN ( 'US', 'CA' ) THEN NVL(( SELECT SUBSTR(SVC_MOD_CD, 1, 2) FROM MAS_USA_SVC_MOD A WHERE A.ORG_RGN_CD = L2.RGN_CD AND A.DEST_RGN_CD = L1.RGN_CD ), 'OT')
        END  USA_SVC_MOD_CD , -- PO(port), LO(local), IP(IPI), ML(MLB), OT(other)

        ( SELECT SUBSTR(AC.ACT_GRP_CD, 3, 2) FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND AC.N1ST_NOD_CD LIKE RC.POR_CD||'%' AND ROWNUM = 1 ) ORG_TRNS_MOD_CD ,
        ( SELECT SUBSTR(AC.ACT_GRP_CD, 3, 2) FROM PRI_PRS_USD_ROUT_ACT_COST AC WHERE AC.ROUT_CS_NO = RC.ROUT_CS_NO AND AC.ROUT_CS_SRC_DT = RC.ROUT_CS_SRC_DT AND COALESCE(AC.N4TH_NOD_CD, AC.N3RD_NOD_CD, AC.N2ND_NOD_CD) LIKE RC.DEL_CD||'%' AND ROWNUM = 1 ) DEST_TRNS_MOD_CD ,

        NVL(RC.TRSP_RAIL_DIR_KNT, 0)	PRD_RD_CNT,	-- PRD에서  rail direct 갯수 
/*        ( SELECT COUNT(1) FROM PRD_PROD_CTL_ROUT_DTL A WHERE A.PCTL_NO = RC.PCTL_NO AND A.TRSP_MOD_CD = 'RD' ) PRD_RD_CNT, -- PRD에서  rail direct 갯수 */ 
        ( SELECT PRC_CTRT_CUST_TP_CD FROM PRI_SP_CTRT_CUST_TP WHERE  PROP_NO = @[prop_no] AND AMDT_SEQ = @[amdt_seq] AND PRC_CTRT_PTY_TP_CD = 'C' ) CUST_TP_CD

    FROM  PRI_SP_SCP_RT          RT  ,
        PRI_SP_SCP_RT_ROUT_DIR   RD ,
        PRI_SP_SCP_RT_USD_ROUT_CS   RR  ,
        PRI_PRS_USD_ROUT_CS_INFO    RC ,
        MDM_LOCATION        L1 ,
        MDM_LOCATION        L2 ,
        MDM_LOCATION        L3 ,
        MDM_LOCATION        L4
    WHERE   RD.PROP_NO       = RT.PROP_NO
    AND   RD.AMDT_SEQ             = RT.AMDT_SEQ
    AND   RD.SVC_SCP_CD           = RT.SVC_SCP_CD
    AND   RD.GEN_SPCL_RT_TP_CD    = RT.GEN_SPCL_RT_TP_CD
    AND   RD.CMDT_HDR_SEQ         = RT.CMDT_HDR_SEQ
    AND   RD.ROUT_SEQ             = RT.ROUT_SEQ
    AND   RR.PROP_NO              = RT.PROP_NO
    AND   RR.AMDT_SEQ             = RT.AMDT_SEQ
    AND   RR.SVC_SCP_CD           = RT.SVC_SCP_CD
    AND   RR.GEN_SPCL_RT_TP_CD    = RT.GEN_SPCL_RT_TP_CD
    AND   RR.CMDT_HDR_SEQ         = RT.CMDT_HDR_SEQ
    AND   RR.ROUT_SEQ             = RT.ROUT_SEQ
    AND   RR.RT_SEQ               = RT.RT_SEQ
    AND   RR.USD_ROUT_CS_SEL_FLG  = 'Y'
    AND   RC.ROUT_CS_NO           = RR.ROUT_CS_NO
    AND   RC.ROUT_CS_SRC_DT       = RR.ROUT_CS_SRC_DT
    AND   L1.LOC_CD        = RC.POR_CD
    AND   L2.LOC_CD        = RC.POL_CD
    AND   L3.LOC_CD        = RC.POD_CD
    AND   L4.LOC_CD        = RC.DEL_CD
    AND   RT.PROP_NO = @[prop_no]
    AND   RT.AMDT_SEQ = @[amdt_seq]
    AND   RT.SVC_SCP_CD = @[svc_scp_cd]
    AND   RT.GEN_SPCL_RT_TP_CD = @[gen_spcl_rt_tp_cd]
#if(${is_online_call})
    AND   RT.CMDT_HDR_SEQ = @[cmdt_hdr_seq]
    AND   RT.ROUT_SEQ = @[rout_seq]
#end
    AND   RT.PRC_PROG_STS_CD IN ( 'I', 'R' )
    AND   RT.SRC_INFO_CD <> 'AD'
    )
) ,
GL AS (

/*******************************************************************************************
GROUP LOCATION 을 SELECT 한다.
S/C 의 경우는 NOTE CONVERSION 에서 사용하는 GROUP LOCATION ( 'EAST', 'WEST' ) 도 포함시킨다.
*******************************************************************************************/
SELECT G.PRC_GRP_LOC_CD ,
        D.LOC_CD
FROM   PRI_SP_SCP_GRP_LOC    G ,
     PRI_SP_SCP_GRP_LOC_DTL D
WHERE  D.PROP_NO     = G.PROP_NO
AND   D.AMDT_SEQ    = G.AMDT_SEQ
AND   D.SVC_SCP_CD   = G.SVC_SCP_CD
AND   D.GRP_LOC_SEQ   = G.GRP_LOC_SEQ
AND   D.SRC_INFO_CD   <> 'AD'
AND   G.PROP_NO = @[prop_no]
AND   G.AMDT_SEQ = @[amdt_seq]
AND   G.SVC_SCP_CD = @[svc_scp_cd]

/* 이 부분은 OFT 에는 적용하지 않고, SURCHARGE 중에서는 S/C 인 경우에만 적용한다. */
UNION ALL
SELECT G.NOTE_CONV_GRP_LOC_CD PRC_GRP_LOC_CD ,
    D.LOC_CD
FROM  PRI_NOTE_CONV_GRP_LOC   G , /* note conv에서만 쓰는 group loc (계약에는 만들지 않는 코드 임- 임시로 이곳에 만들어 놓고 쓰고 있음.) */
    PRI_NOTE_CONV_GRP_LOC_DTL D
WHERE  D.PRC_CTRT_TP_CD    = G.PRC_CTRT_TP_CD
AND   D.NOTE_CONV_GRP_LOC_CD = G.NOTE_CONV_GRP_LOC_CD
AND   G.PRC_CTRT_TP_CD    = 'S'
) ,
NC AS (

/*******************************************************************************************
BOOKING 에 해당하는 NOTE CONVERSION 을 SELECT 한다.
*******************************************************************************************/
SELECT BQ.BQ_SEQ       ,
    NC.NOTE_CONV_MAPG_ID ,
    NC.NOTE_CONV_SEQ   ,

    NC.NOTE_CONV_TP_CD          ,
    (	SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) CONV_TP_PRIO	,
    NC.CHG_RULE_TP_CD           ,
    NC.NOTE_CONV_CHG_CD         ,
    NC.NOTE_CONV_RULE_CD        ,
    NC.RT_APPL_TP_CD            ,
    NC.RT_OP_CD                 ,
    NC.CURR_CD                  ,
    NC.FRT_RT_AMT               ,
    NC.PAY_TERM_CD              ,
    NC.BKG_RAT_UT_CD      ,
    NC.BKG_PRC_CGO_TP_CD    ,
    ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, NC.CHG_RULE_TP_CD, NC.NOTE_CONV_CHG_CD, NC.NOTE_CONV_RULE_CD, DECODE(NC.CHG_RULE_TP_CD, 'C', NC.BKG_RAT_UT_CD)
              ORDER BY
               ( SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = NC.NOTE_CONV_TP_CD ) ,
                DECODE(BKG_POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                + DECODE(BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, NULL, 4, 6)
                + DECODE(BKG_PRC_CGO_TP_CD  , NULL, 0, 1)
                + DECODE(BKG_USA_SVC_MOD_CD  , NULL, 0, 1)
                + DECODE(BKG_ORG_TRSP_MOD_CD , NULL, 0, 1)
                + DECODE(BKG_DEST_TRSP_MOD_CD , NULL, 0, 1)
                + DECODE(BKG_RCV_TERM_CD   , NULL, 0, 1)
                + DECODE(BKG_DE_TERM_CD    , NULL, 0, 1)
                + DECODE(BKG_SLAN_CD     , NULL, 0, 1)
                + DECODE(BKG_VSL_CD      , NULL, 0, 1)
                + DECODE(BKG_ACT_CUST_CNT_CD , NULL, 0, 1)
                + DECODE(BKG_TS_PORT_DEF_CD  , NULL, 0, 1) DESC ,
               NC.FRT_RT_AMT     ,
               NC.NOTE_CONV_MAPG_ID ,
               NC.NOTE_CONV_SEQ
              ) ROW_NUMBER ,

    NVL(NC.CONV_RAT_UT_CD, BQ.CTRT_CNTR_TPSZ_CD) CONV_RAT_UT_CD      ,
    NC.CONV_PRC_CGO_TP_CD    ,
    NVL(NC.CONV_ORG_LOC_TP_CD, 'L')        CONV_ORG_LOC_TP_CD        ,
    NVL(NC.CONV_ORG_LOC_DEF_CD, BQ.POR_CD)       CONV_ORG_LOC_DEF_CD       ,
    NVL(NC.CONV_ORG_VIA_LOC_TP_CD, 'L')      CONV_ORG_VIA_LOC_TP_CD    ,
    NVL(NC.CONV_ORG_VIA_LOC_DEF_CD, BQ.POL_CD)  CONV_ORG_VIA_LOC_DEF_CD   ,
    NVL(NC.CONV_DEST_VIA_LOC_TP_CD, 'L')     CONV_DEST_VIA_LOC_TP_CD   ,
    NVL(NC.CONV_DEST_VIA_LOC_DEF_CD, BQ.POD_CD)  CONV_DEST_VIA_LOC_DEF_CD ,
    NVL(NC.CONV_DEST_LOC_TP_CD, 'L')       CONV_DEST_LOC_TP_CD     ,
    NVL(NC.CONV_DEST_LOC_DEF_CD, BQ.DEL_CD)      CONV_DEST_LOC_DEF_CD      ,
    NVL(NC.CONV_PRC_RCV_TERM_CD, BQ.RCV_TERM_CD) CONV_PRC_RCV_TERM_CD      ,
    NVL(NC.CONV_PRC_DE_TERM_CD, BQ.DE_TERM_CD)  CONV_PRC_DE_TERM_CD
FROM  BQ ,
    (
    SELECT NC.*
    FROM  PRI_SC_NOTE_CONV NC				/* special & commodity & route note */
    WHERE NC.PROP_NO = @[prop_no]
    AND   NC.AMDT_SEQ = @[amdt_seq]
    AND   NC.SVC_SCP_CD = @[svc_scp_cd]
-- 2010.02.24 NOTE 는 날짜 의미 없음. ( 김진철 과장 )    
--    AND   TO_DATE(SYSDATE) BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999  /* 0.99999 는 23시 59분 59초를 의미 */
    UNION ALL
    SELECT NC.*
    FROM  PRI_SC_NOTE_CONV NC				/* standard note ( sc guideline ) */
    WHERE  NC.SVC_SCP_CD  = @[svc_scp_cd]
    AND   NC.NOTE_HDR_SEQ = ( SELECT A.NOTE_HDR_SEQ FROM PRI_SP_SCP_MN A WHERE A.PROP_NO =  @[prop_no] AND A.AMDT_SEQ = @[amdt_seq] AND A.SVC_SCP_CD = @[svc_scp_cd] )
-- 2010.02.24 NOTE 는 날짜 의미 없음. ( 김진철 과장 )    
--    AND   TO_DATE(SYSDATE) BETWEEN NC.EFF_DT AND NC.EXP_DT + 0.99999  /* 0.99999 는 23시 59분 59초를 의미 */
    ) NC             ,
    MDM_CHARGE        MC
WHERE  MC.CHG_CD(+)      = NC.NOTE_CONV_CHG_CD
AND   (
      (
        NC.NOTE_CONV_TP_CD  IN ( 'T', 'P' ) /* T: statndard note, P: special note */
      AND NVL(NC.GEN_SPCL_RT_TP_CD, BQ.GEN_SPCL_RT_TP_CD) = BQ.GEN_SPCL_RT_TP_CD
      )
    OR NC.NOTE_CONV_MAPG_ID IN
      (
      SELECT CN.NOTE_CONV_MAPG_ID
      FROM  PRI_SP_SCP_RT_CNOTE CN			/* commodity note */
      WHERE  CN.PROP_NO      = BQ.PROP_NO
      AND   CN.AMDT_SEQ      = BQ.AMDT_SEQ
      AND   CN.SVC_SCP_CD     = BQ.SVC_SCP_CD
      AND   CN.GEN_SPCL_RT_TP_CD = BQ.GEN_SPCL_RT_TP_CD
      AND   CN.CMDT_HDR_SEQ    = BQ.CMDT_HDR_SEQ
      AND   CN.SRC_INFO_CD(+)    <> 'AD'
      UNION ALL
      SELECT RN.NOTE_CONV_MAPG_ID			/* route note */
      FROM  PRI_SP_SCP_RT_CMDT_RNOTE RN
      WHERE  RN.PROP_NO      = BQ.PROP_NO
      AND   RN.AMDT_SEQ      = BQ.AMDT_SEQ
      AND   RN.SVC_SCP_CD     = BQ.SVC_SCP_CD
      AND   RN.GEN_SPCL_RT_TP_CD = BQ.GEN_SPCL_RT_TP_CD
      AND   RN.CMDT_HDR_SEQ    = BQ.CMDT_HDR_SEQ
      AND   RN.ROUT_SEQ      = BQ.ROUT_SEQ
      AND   RN.SRC_INFO_CD(+)    <> 'AD'
      )
    )


/*******************************************************************************************
NOT RULE CODE 는 SURCHARGE 에서만 사용되며,
TYP RULE CODE 는 OFT 에 사용되는 것이 기본이지만, SURCHARGE 에서도 사용된다.
*******************************************************************************************/
AND   (
      NC.CHG_RULE_TP_CD   = 'C'		/* charge */
    OR
      (
        NC.CHG_RULE_TP_CD   = 'R'	/* rule */
      AND NC.NOTE_CONV_RULE_CD IN ( 'NOT', 'TYP' ) /* surcharge 에 해당되는 rule만 포함 */
      )
    )
/*******************************************************************************************
< RATING UNIT >
*******************************************************************************************/
AND (
      (
        NC.CHG_RULE_TP_CD  = 'C'
      AND NC.BKG_RAT_UT_CD  NOT IN ( 'MT', 'CM' )
      )
    OR (
          NC.BKG_RAT_UT_CD IS NULL
         OR NC.BKG_RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD 
         OR NC.BKG_RAT_UT_CD IN ( 'BX', 'BL' ) 
            OR
           (
                NC.BKG_RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
            AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.BKG_RAT_UT_CD ) = BQ.CTRT_CNTR_SZ_CD
           )
       )
    )
/*******************************************************************************************
< CARGO TYPE >
*******************************************************************************************/
AND   (
      NC.BKG_PRC_CGO_TP_CD IS NULL
    OR NC.BKG_PRC_CGO_TP_CD = BQ.PRC_CGO_TP_CD
    )
/*******************************************************************************************
< ROUTE >
STANDARD NOTE 의 경우는 GROUP 을 사용하지 않으므로,
STANDARD NOTE 를 위한 특별한 고려가 필요하지 않음.
*******************************************************************************************/
/* POR */
AND   (
      NC.BKG_POR_DEF_CD IS NULL
    OR NC.BKG_POR_DEF_CD = DECODE(NC.BKG_POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
    OR (
        NC.BKG_POR_TP_CD = 'G'
      AND EXISTS (
            SELECT 'X'
            FROM   GL
            WHERE  GL.PRC_GRP_LOC_CD = NC.BKG_POR_DEF_CD
            AND   GL.LOC_CD     = BQ.POR_CD
            )
      )
    )
/* POL */
AND   (
      NC.BKG_POL_DEF_CD IS NULL
    OR NC.BKG_POL_DEF_CD = DECODE(NC.BKG_POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
    OR (
        NC.BKG_POL_TP_CD = 'G'
      AND EXISTS (
            SELECT 'X'
            FROM   GL
            WHERE  GL.PRC_GRP_LOC_CD = NC.BKG_POL_DEF_CD
            AND   GL.LOC_CD     = BQ.POL_CD
            )
      )
    )
/* POD */
AND   (
      NC.BKG_POD_DEF_CD IS NULL
    OR NC.BKG_POD_DEF_CD = DECODE(NC.BKG_POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
    OR (
        NC.BKG_POD_TP_CD = 'G'
      AND EXISTS (
            SELECT 'X'
            FROM   GL
            WHERE  GL.PRC_GRP_LOC_CD = NC.BKG_POD_DEF_CD
            AND   GL.LOC_CD     = BQ.POD_CD
            )
      )
    )
/* DEL */
AND   (
      NC.BKG_DEL_DEF_CD IS NULL
    OR NC.BKG_DEL_DEF_CD = DECODE(NC.BKG_DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
    OR (
        NC.BKG_DEL_TP_CD = 'G'
      AND EXISTS (
            SELECT 'X'
            FROM   GL
            WHERE  GL.PRC_GRP_LOC_CD = NC.BKG_DEL_DEF_CD
            AND   GL.LOC_CD     = BQ.DEL_CD
            )
      )
    )
/*******************************************************************************************
< LANE & VVD >
TRUNK, T/S 구분없이 LANE 이나 VVD 가 존재하는지 여부로 판단한다.
*******************************************************************************************/
AND   (
      NC.BKG_SLAN_CD IS NULL
    OR NC.BKG_SLAN_CD IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )
    )

AND   (  NC.BKG_VSL_CD IS NULL
    OR NC.BKG_VSL_CD||NC.BKG_SKD_VOY_NO||NC.BKG_SKD_DIR_CD IN ( BQ.N1ST_FINC_VVD_CD, BQ.N2ND_FINC_VVD_CD, BQ.N3RD_FINC_VVD_CD, BQ.N4TH_FINC_VVD_CD )
    )
/*******************************************************************************************
< T/S PORT >
T/S 가 발생하는 PORT 를 대상으로 한다.
*******************************************************************************************/
AND   (
      NC.BKG_TS_PORT_DEF_CD IS NULL
    OR NC.BKG_TS_PORT_DEF_CD IN
      (
      SELECT DECODE(NC.BKG_TS_PORT_TP_CD, 'L', A.LOC_CD, 'T', A.CNT_CD||A.STE_CD, 'R', A.RGN_CD, 'C', A.CNT_CD)
      FROM  MDM_LOCATION  A
      WHERE  A.LOC_CD IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )
      )
    )
/*******************************************************************************************
< OFT 해당 여부 확인 >
선택된 OFT 와 일치하는 것만 대상으로 함.
*******************************************************************************************/
AND   (
      NC.RULE_APPL_CHG_TP_CD IS NULL
    OR NC.RULE_APPL_CHG_TP_CD = 'S'      /* SURCHARGE 를 대상으로 함 */
    )
/*******************************************************************************************
<  USA SVC MOD >
NOTE CONV 에서는 USA SVC MOD CD 에, COMMERCIAL ZONE 도 같이 합쳐서 사용한다.
따라서 NOTE CONV 의 USA SVC MOD CD 가 'CZ' 이면 BKG 의 COMMERCIAL ZONE CD 와 비교한다.
*******************************************************************************************/
AND   (
      NC.BKG_USA_SVC_MOD_CD IS NULL
    OR NC.BKG_USA_SVC_MOD_CD = DECODE(NC.BKG_USA_SVC_MOD_CD, 'CZ', BQ.CML_ZN_CD, BQ.USA_SVC_MOD_CD )
    )
/* ORG TRANS MOD */
AND   (
      NC.BKG_ORG_TRSP_MOD_CD IS NULL
    OR NC.BKG_ORG_TRSP_MOD_CD = BQ.ORG_TRNS_MOD_CD
    )
/* DEST TRANS MOD */
AND   (
      NC.BKG_DEST_TRSP_MOD_CD IS NULL
    OR NC.BKG_DEST_TRSP_MOD_CD = BQ.DEST_TRNS_MOD_CD
    )


/*******************************************************************************************
R/D TERM CHECK ( MDM_CHARGE 의 R/D TERM CHECK 포함 )
*******************************************************************************************/
AND   (
      NC.BKG_RCV_TERM_CD = BQ.RCV_TERM_CD
    OR (
        NC.BKG_RCV_TERM_CD IS NULL
      AND BQ.RCV_TERM_CD IN ( DECODE(NC.CHG_RULE_TP_CD, 'R', BQ.RCV_TERM_CD), DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.RCV_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )
      )
    )

AND   (
      NC.BKG_DE_TERM_CD  = BQ.DE_TERM_CD
    OR (
        NC.BKG_DE_TERM_CD IS NULL
      AND BQ.DE_TERM_CD  IN ( DECODE(NC.CHG_RULE_TP_CD, 'R', BQ.DE_TERM_CD), DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.DE_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )
      )
    )
) ,
NC_P AS /*★ */
(

/*******************************************************************************************
적용될 CONVERSION 이 같은 NOTE_CONV_TP_CD 에서 하나의 NOTE_CONV_RULE_CD 가 되도록 우선순위가 낮은 것을 제거한다.
우선순위가 똑같은 경우에는 NOTE_CONV_MAPG_ID||LPAD(NOTE_CONV_SEQ, 6, '0') 가 적은 것을 우선한다.

'TYP' 1개의 RULE CODE 를 가진 BKG DATA 를 UNION ALL 로 추가한다.
이 부분은 계약과 BKG 를 직접 비교하지 않고, NOTE CONV 와만 비교하도록 하기 위함이다.

*******************************************************************************************/

SELECT NC.BQ_SEQ          ,
    NC.NOTE_CONV_MAPG_ID    ,
    NC.NOTE_CONV_SEQ      ,
    'C' BKG_CONV_TP_CD     ,
    NC.NOTE_CONV_TP_CD     ,
    NC.CONV_TP_PRIO			,
    NC.CHG_RULE_TP_CD           ,
    NC.NOTE_CONV_CHG_CD         ,
    NC.NOTE_CONV_RULE_CD    ,
    NC.CONV_RAT_UT_CD      ,
    ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = NC.CONV_RAT_UT_CD ) CONV_RAT_UT_SZ_CD  ,
    NC.CONV_PRC_CGO_TP_CD    ,
    NC.CONV_ORG_LOC_TP_CD    ,
    NC.CONV_ORG_LOC_DEF_CD   ,
    NC.CONV_ORG_VIA_LOC_TP_CD  ,
    NC.CONV_ORG_VIA_LOC_DEF_CD ,
    NC.CONV_DEST_VIA_LOC_TP_CD ,
    NC.CONV_DEST_VIA_LOC_DEF_CD ,
    NC.CONV_DEST_LOC_TP_CD   ,
    NC.CONV_DEST_LOC_DEF_CD   ,
    NC.CONV_PRC_RCV_TERM_CD   ,
    NC.CONV_PRC_DE_TERM_CD   ,
    NC.BKG_RAT_UT_CD      ,
    NC.BKG_PRC_CGO_TP_CD    ,
    NC.RT_APPL_TP_CD      ,
    NC.RT_OP_CD         ,
    NC.CURR_CD         ,
    NC.FRT_RT_AMT        ,
    NC.PAY_TERM_CD
FROM  NC
WHERE  ROW_NUMBER = 1
UNION ALL
SELECT BQ.BQ_SEQ                    ,
    NULL         NOTE_CONV_MAPG_ID     ,
    NULL         NOTE_CONV_SEQ       ,
    'B'          BKG_CONV_TP_CD      ,
    NULL         NOTE_CONV_TP_CD      ,
    0			 CONV_TP_PRIO			,
    'R'          CHG_RULE_TP_CD            ,
    NULL         NOTE_CONV_CHG_CD     ,
    RC.NOTE_CONV_RULE_CD NOTE_CONV_RULE_CD     , /* TYP */
    BQ.CTRT_CNTR_TPSZ_CD CONV_RAT_UT_CD      ,
    ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = BQ.CTRT_CNTR_TPSZ_CD ) CONV_RAT_UT_SZ_CD  ,
    BQ.PRC_CGO_TP_CD   CONV_PRC_CGO_TP_CD    ,
    'L'          CONV_ORG_LOC_TP_CD    ,
    BQ.POR_CD    CONV_ORG_LOC_DEF_CD    ,
    'L'          CONV_ORG_VIA_LOC_TP_CD  ,
    BQ.POL_CD    CONV_ORG_VIA_LOC_DEF_CD  ,
    'L'          CONV_DEST_VIA_LOC_TP_CD  ,
    BQ.POD_CD    CONV_DEST_VIA_LOC_DEF_CD ,
    'L'          CONV_DEST_LOC_TP_CD    ,
    BQ.DEL_CD    CONV_DEST_LOC_DEF_CD   ,
    BQ.RCV_TERM_CD    CONV_PRC_RCV_TERM_CD   ,
    BQ.DE_TERM_CD     CONV_PRC_DE_TERM_CD    ,
    BQ.CTRT_CNTR_TPSZ_CD BKG_RAT_UT_CD       ,
    BQ.PRC_CGO_TP_CD   BKG_PRC_CGO_TP_CD     ,
    NULL         RT_APPL_TP_CD       ,
    NULL         RT_OP_CD         ,
    NULL         CURR_CD          ,
    NULL         FRT_RT_AMT        ,
    NULL         PAY_TERM_CD
FROM  BQ ,
    (
    SELECT 'TYP' NOTE_CONV_RULE_CD FROM DUAL
    ) RC
) ,
C1 AS (
/*******************************************************************************************
< CONVERSION SURCHARGE >

S Subject        : Tariff Surcharge 를 적용하겠다.
I Include        : Subjrect 와 동일 ( 단, 표시만 'I' )
F Fix Amount     : 고정 값
A Adjust Adjust  : Tariff Surcharge 에 계산 공식 적용 + - * /, Lower 는 더 낮은값, Higher 는 더 높은 값.
N Not Applicable : Tariff Surcharge 도 적용하지 않겠다.


MTCH_PRIO 가 같은데.. CMDT 와 ROUT 만의 MTCH_PRIO 도 같으면 ERROR 로직 발생해야하는데..
*******************************************************************************************/

SELECT C1.BQ_SEQ       ,
    C1.SEL_TP_CD      ,
    C1.SEL_TP_PRIO     ,
    C1.CHG_CD       ,
/* 2010.03.24 ADD */
    CASE
	WHEN C1.RAT_UT_CD = 'PC' AND SP.FLT_PCT_TP_CD = 'P' THEN SP.FLT_PCT_TP_CD
	ELSE 'F'
	END	FLT_PCT_TP_CD				,
	CASE
	WHEN C1.RAT_UT_CD = 'PC' AND SP.FLT_PCT_TP_CD = 'P' THEN SP.PCT_BSE_CD
	ELSE NULL
	END	PCT_BSE_CD					,

    C1.RT_APPL_TP_CD    ,
    C1.RT_OP_CD      ,
    C1.CURR_CD             ,
    C1.FRT_RT_AMT     ,
    C1.TYP_BKG_CONV_TP_CD ,
    C1.RAT_UT_CD      ,
    C1.PRC_CGO_TP_CD    ,
    C1.RT_INCL_FLG
FROM  (
    SELECT C.BQ_SEQ       ,
        'C'         SEL_TP_CD      ,
        1          SEL_TP_PRIO     ,
		/* charge code 별루 unique 하게 걸러짐     앗싸~!!!!!!*/
        ROW_NUMBER() OVER ( PARTITION BY C.BQ_SEQ, C.NOTE_CONV_CHG_CD
                  ORDER BY
                   ( SELECT A.PRIO_SEQ FROM PRI_NOTE_CONV_TP A WHERE A.PRC_CTRT_TP_CD = BQ.CTRT_TP_CD AND A.NOTE_CONV_TP_CD = C.NOTE_CONV_TP_CD ) ,
                   DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 10, 'C', 0)
                   + DECODE(C.BKG_RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6) DESC
                 ) ROW_NUMBER     ,
    
        C.NOTE_CONV_CHG_CD CHG_CD       ,
        NULL        FLT_PCT_TP_CD    ,
        NULL        PCT_BSE_CD     ,

        C.RT_APPL_TP_CD             ,
        C.RT_OP_CD               ,
        C.CURR_CD                      ,
/* 2010.03.24 ADD */
        BQ.SVC_SCP_CD           ,

        CASE
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '+' THEN C.FRT_RT_AMT + C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '-' THEN C.FRT_RT_AMT - C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '*' THEN C.FRT_RT_AMT * C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '/' THEN C.FRT_RT_AMT / C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'B' THEN C.FRT_RT_AMT
        END FRT_RT_AMT             ,

        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ,
        C.BKG_RAT_UT_CD    RAT_UT_CD      ,

        C.BKG_PRC_CGO_TP_CD  PRC_CGO_TP_CD    ,
        CASE WHEN C_NOT.RT_APPL_TP_CD = 'I' AND C.NOTE_CONV_CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
			 THEN 'Y' ELSE	DECODE(C.RT_APPL_TP_CD, 'I', 'Y', 'N')
		END	RT_INCL_FLG	,
		DECODE(C_NOT.BKG_CONV_TP_CD, 'C', 'Y', 'N') NOT_RULE_FLG	
    FROM  BQ     ,
        NC_P C   ,  /* charge */
        NC_P C_TYP, /* type */
        NC_P C_NOT  /* not */
    WHERE  C.BQ_SEQ        = BQ.BQ_SEQ
    AND   C.CHG_RULE_TP_CD    = 'C' 
    AND   C_TYP.BQ_SEQ      = BQ.BQ_SEQ
    AND   C_TYP.NOTE_CONV_RULE_CD = 'TYP'
    AND   C_NOT.BQ_SEQ(+)      = C.BQ_SEQ
    AND   C_NOT.NOTE_CONV_RULE_CD(+) = 'NOT'
    AND   C_NOT.CONV_TP_PRIO(+) < C.CONV_TP_PRIO
    
    
    /* RATING UNIT */
    AND     (
			C.BKG_RAT_UT_CD	IS NULL
              OR  C.BKG_RAT_UT_CD = C_TYP.CONV_RAT_UT_CD
/* 2010.03.24 ADD */
              OR C.BKG_RAT_UT_CD IN ( 'BX', 'BL', 'PC' )
              OR
              (
                C.BKG_RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = C.BKG_RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD
              )
        )
    ) C1 ,
/* 2010.03.24 ADD */
     PRI_SCG_PRF	SP
WHERE SP.SVC_SCP_CD(+)	= C1.SVC_SCP_CD		/* BKG_SVC_SCP_CD 를 사용한다. */
AND	SP.CHG_CD(+)		= C1.CHG_CD
AND C1.ROW_NUMBER = 1
/*******************************************************************************************
NOT RULE 적용
*******************************************************************************************/

AND	NOT	(
			C1.NOT_RULE_FLG	= 'Y'
		AND	C1.RT_INCL_FLG		= 'N'
		AND	C1.CHG_CD			NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
		)
) ,
G2 AS (

/*******************************************************************************************
< GOH >
BAR TYPE 별 ROW 구분 있음.

TYPE RULE CODE 가 적용되기는 하지만, 운임 계산은 하지 않고, 계약서에 있는 운임을 그대로 사용한다.

- BKG Special Cargo 정보 중 Hanger 정보가 있고, S/C상에 해당하는 GOH 운임이 존재하는 경우 Rating
*******************************************************************************************/
SELECT BQ_SEQ       ,
    SEL_TP_CD      ,
    SEL_TP_PRIO     ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    RT_APPL_TP_CD    ,
    RT_OP_CD      ,
    CURR_CD             ,
    FRT_RT_AMT     ,
    TYP_BKG_CONV_TP_CD ,
    RAT_UT_CD      ,
    PRC_CGO_TP_CD    ,
    RT_INCL_FLG     ,
    NOT_RULE_FLG
FROM  (
    SELECT BQ.BQ_SEQ         ,
        'G'  SEL_TP_CD      ,
        2    SEL_TP_PRIO     ,

        ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ
                  ORDER BY
                   DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 2000, 'C', 1000, 0)
                    + DECODE(GH.ROUT_PNT_LOC_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(GH.RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '45', 5, '53', 5, 'BX', 4, 'BL', 3, NULL, 0, 6) DESC
                 ) ROW_NUMBER ,

        'GOH' CHG_CD       ,

        NULL FLT_PCT_TP_CD    ,
        NULL PCT_BSE_CD     ,

        NULL RT_APPL_TP_CD    ,
        NULL RT_OP_CD      ,

        GH.CURR_CD        ,
        GH.FNL_FRT_RT_AMT  FRT_RT_AMT ,

        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ,
        GH.RAT_UT_CD       ,
        NULL PRC_CGO_TP_CD    ,

        'N' RT_INCL_FLG      ,
        'N' NOT_RULE_FLG
    FROM  BQ            ,
        PRI_SP_SCP_GOH_CHG GH  ,
        NC_P        C_TYP
    WHERE  GH.PROP_NO       = BQ.PROP_NO
    AND   GH.AMDT_SEQ       = BQ.AMDT_SEQ
    AND   GH.SVC_SCP_CD      = BQ.SVC_SCP_CD
    AND   C_TYP.BQ_SEQ      = BQ.BQ_SEQ
    AND   C_TYP.NOTE_CONV_RULE_CD = 'TYP'
    /* POR */
    AND   (
          GH.ROUT_PNT_LOC_DEF_CD = DECODE(GH.ROUT_PNT_LOC_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
        OR (
            GH.ROUT_PNT_LOC_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM   GL
                WHERE  GL.PRC_GRP_LOC_CD = GH.ROUT_PNT_LOC_DEF_CD
                AND   GL.LOC_CD     = BQ.POR_CD
                )
          )
        )
    /* RATING UNIT */
    AND     (
            GH.RAT_UT_CD = C_TYP.CONV_RAT_UT_CD
              OR GH.RAT_UT_CD IN ( 'BL', 'BX', 'PC', 'RM' )
              OR
              (
                GH.RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = GH.RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD
              )
        )

/*******************************************************************************************
< RT_APPL_TP_CD = 'N' (Not Applicable) >

S Subject
I Include (SUBJECT 와 동일       단, 금액이 이미 OFT에 포함되어 있으므로 보이기만 할뿐 추가로 계산되어지지 않는다!! ** PRS에서 계산되어 지면 안됨.)
F Fix Amount
A Adjust
N Not Applicable ( 해당 CHARGE 적용 하지 않는다. 해당 CHARGE 는 TARIFF에서 제외! )
*******************************************************************************************/
    AND   NOT EXISTS (   /* (Not Applicable) */
              SELECT 'X'
              FROM  C1
              WHERE  C1.BQ_SEQ     = BQ.BQ_SEQ
              AND   C1.CHG_CD     = 'GOH'
              AND   C1.RT_APPL_TP_CD = 'N'  
              )

    )
WHERE  ROW_NUMBER = 1
) ,
S3 AS
(
/*******************************************************************************************
< TARIFF SURCHARGE >
*******************************************************************************************/
SELECT BQ_SEQ       ,
    SEL_TP_CD      ,
    SEL_TP_PRIO     ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    RT_APPL_TP_CD    ,
    RT_OP_CD      ,
    CURR_CD             ,
    FRT_RT_AMT     ,
    TYP_BKG_CONV_TP_CD ,
    RAT_UT_CD      ,
    PRC_CGO_TP_CD    ,
    RT_INCL_FLG     ,
    NOT_RULE_FLG
FROM  (
    SELECT BQ.BQ_SEQ         ,
        'S'  SEL_TP_CD      ,
        3    SEL_TP_PRIO     ,

        ROW_NUMBER() OVER ( PARTITION BY BQ.BQ_SEQ, SP.CHG_CD
                  ORDER BY
                    DECODE(SR.POR_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(SR.POL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(SR.POD_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(SR.DEL_TP_CD, 'L', 600, 'G', 500, 'T', 400, 'R', 300, 'C', 200, 0)
                    + DECODE(C_TYP.BKG_CONV_TP_CD, 'B', 10, 'C', 0)
                    + DECODE(SR.RAT_UT_CD, '20', 5, '40', 5, 'HC', 5, '53', 5, 'BL', 4, 'BX', 4, 'PC', 4, 'CM', 4, 'MT', 4, 'RM', 4, NULL, 4, 6)
                    + DECODE(SR.PRC_CGO_TP_CD    , NULL, 0, 1)
                    + DECODE(SR.USA_SVC_MOD_CD   , NULL, 0, 1)
                    + DECODE(SR.ORG_TRSP_MOD_CD   , NULL, 0, 1)
                    + DECODE(SR.DEST_TRSP_MOD_CD  , NULL, 0, 1)
                    + DECODE(SR.PRC_RCV_TERM_CD   , NULL, 0, 1)
                    + DECODE(SR.PRC_DE_TERM_CD   , NULL, 0, 1)
                    + DECODE(SR.VSL_SLAN_CD     , NULL, 0, 1)
                    + DECODE(SR.TS_PORT_CD     , NULL, 0, 1)
                    + DECODE(SR.SUB_TRD_CD     , NULL, 0, 1) DESC,
                     NVL(SR.CTRT_DT, TO_DATE('19000101','YYYYMMDD')) DESC
                 ) ROW_NUMBER ,

        SP.CHG_CD         ,

        SP.FLT_PCT_TP_CD     ,
        SP.PCT_BSE_CD       ,

        NULL RT_APPL_TP_CD    ,
        NULL RT_OP_CD      ,

        SR.CURR_CD        ,
        CASE
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '+' THEN SR.SCG_AMT + C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '-' THEN SR.SCG_AMT - C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '*' THEN SR.SCG_AMT * C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'C' AND C_TYP.RT_OP_CD = '/' THEN SR.SCG_AMT / C_TYP.FRT_RT_AMT
        WHEN C_TYP.BKG_CONV_TP_CD = 'B' THEN SR.SCG_AMT
        END FRT_RT_AMT      ,

        C_TYP.BKG_CONV_TP_CD TYP_BKG_CONV_TP_CD ,
        SR.RAT_UT_CD       ,
        SR.PRC_CGO_TP_CD     ,

        CASE WHEN C_NOT.RT_APPL_TP_CD = 'I' AND SP.CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
			 THEN 'Y' ELSE	'N'
		END	RT_INCL_FLG	 ,
        DECODE(C_NOT.BKG_CONV_TP_CD, 'C', 'Y', 'N') NOT_RULE_FLG
    FROM  BQ         ,
        PRI_SCG_PRF  SP  ,
        MDM_CHARGE  MC  ,
        PRI_SCG_RT  SR  ,
        NC_P     C_TYP ,     /* RATING UNIT CONVERSION */
        NC_P     C_NOT
    WHERE  SP.SVC_SCP_CD        = BQ.SVC_SCP_CD
    AND   MC.CHG_CD          = SP.CHG_CD
    AND   MC.AUTO_RAT_FLG       = 'Y'
    AND   SR.SVC_SCP_CD        = SP.SVC_SCP_CD
    AND   SR.CHG_CD          = SP.CHG_CD
    AND   TO_DATE(SYSDATE)      BETWEEN SR.EFF_DT AND SR.EXP_DT + 0.99999  /* 0.99999 는 23시 59분 59초를 의미 */
    AND   SR.WDR_FLG         = 'N'
    AND   SR.DELT_FLG         = 'N'
    AND   C_TYP.BQ_SEQ        = BQ.BQ_SEQ
    AND   C_TYP.NOTE_CONV_RULE_CD   = 'TYP'
    AND   C_NOT.BQ_SEQ(+)       = BQ.BQ_SEQ
    AND   C_NOT.NOTE_CONV_RULE_CD(+) = 'NOT'

/*******************************************************************************************
R/D TERM CHECK ( MDM_CHARGE 의 R/D TERM CHECK 포함 )
*******************************************************************************************/
    AND   (
          SR.PRC_RCV_TERM_CD = BQ.RCV_TERM_CD
        OR (
            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_RCV_TERM_CD IS NULL )
          AND BQ.RCV_TERM_CD IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.RCV_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )
          )
        )

    AND   (
          SR.PRC_DE_TERM_CD  = BQ.DE_TERM_CD
        OR (
            ( SP.RCV_DE_TERM_USE_FLG = 'N' OR SR.PRC_DE_TERM_CD IS NULL )
          AND BQ.DE_TERM_CD  IN ( DECODE(MC.NA_RD_TERM_FLG, 'Y', BQ.DE_TERM_CD), DECODE(MC.CY_RD_TERM_FLG, 'Y', 'Y'), DECODE(MC.DOR_RD_TERM_FLG, 'Y', 'D'), DECODE(MC.CFS_RD_TERM_FLG, 'Y', 'S'), DECODE(MC.TKL_TML_FLG, 'Y', 'T') )
          )
        )


    /* POR */
    AND   (
          SP.POR_USE_FLG = 'N'
        OR SR.POR_DEF_CD  IS NULL
        OR  SR.POR_DEF_CD  = DECODE(SR.POR_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
        OR (
            SR.POR_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.POR_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POR_CD, 'T', BQ.POR_STE_CD, 'R', BQ.POR_RGN_CD, 'C', BQ.POR_CNT_CD)
                )
          )
        )
    /* POL */
    AND   (
          SP.POL_USE_FLG = 'N'
        OR SR.POL_DEF_CD  IS NULL
        OR  SR.POL_DEF_CD  = DECODE(SR.POL_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
        OR (
            SR.POL_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.POL_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POL_CD, 'T', BQ.POL_STE_CD, 'R', BQ.POL_RGN_CD, 'C', BQ.POL_CNT_CD)
                )
          )
        )
    /* POD */
    AND   (
          SP.POD_USE_FLG = 'N'
        OR SR.POD_DEF_CD  IS NULL
        OR  SR.POD_DEF_CD  = DECODE(SR.POD_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
        OR (
            SR.POD_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.POD_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.POD_CD, 'T', BQ.POD_STE_CD, 'R', BQ.POD_RGN_CD, 'C', BQ.POD_CNT_CD)
                )
          )
        )
    /* DEL */
    AND   (
          SP.DEL_USE_FLG = 'N'
        OR SR.DEL_DEF_CD  IS NULL
        OR  SR.DEL_DEF_CD  = DECODE(SR.DEL_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
        OR (
            SR.DEL_TP_CD = 'G'
          AND EXISTS (
                SELECT 'X'
                FROM  PRI_SCG_GRP_LOC   GL ,
                    PRI_SCG_GRP_LOC_DTL GD
                WHERE  GD.SVC_SCP_CD   = GL.SVC_SCP_CD
                AND   GD.CHG_CD     = GL.CHG_CD
                AND   GD.GRP_LOC_SEQ  = GL.GRP_LOC_SEQ
                AND   GL.SVC_SCP_CD   = SR.SVC_SCP_CD
                AND   GL.CHG_CD     = SR.CHG_CD
                AND   GL.SCG_GRP_LOC_CD = SR.DEL_DEF_CD
                AND   GD.DTL_LOC_DEF_CD = DECODE(GD.DTL_LOC_TP_CD, 'L', BQ.DEL_CD, 'T', BQ.DEL_STE_CD, 'R', BQ.DEL_RGN_CD, 'C', BQ.DEL_CNT_CD)
                )
          )
        )
	/* SUB TRADE */
    AND   (
          SP.SUB_TRD_USE_FLG = 'N'
        OR SR.SUB_TRD_CD    IS NULL
        OR SR.SUB_TRD_CD    IN
          (
          SELECT DL.SUB_TRD_CD
          FROM   MDM_DTL_REV_LANE  DL
          WHERE (DL.RLANE_CD, DL.VSL_SLAN_DIR_CD, DL.FM_CONTI_CD, DL.TO_CONTI_CD ) IN 
          		(SELECT BQ.N1ST_RLANE_CD, SUBSTR(BQ.N1ST_FINC_VVD_CD, 9,1), BQ.N1ST_POL_CONTI_CD, BQ.N1ST_POD_CONTI_CD  FROM DUAL  
          		 UNION ALL
          		 SELECT BQ.N2ND_RLANE_CD, SUBSTR(BQ.N2ND_FINC_VVD_CD, 9,1), BQ.N2ND_POL_CONTI_CD, BQ.N2ND_POD_CONTI_CD  FROM DUAL
          		 UNION ALL
          		 SELECT BQ.N3RD_RLANE_CD, SUBSTR(BQ.N3RD_FINC_VVD_CD, 9,1), BQ.N3RD_POL_CONTI_CD, BQ.N3RD_POD_CONTI_CD  FROM DUAL
          		 UNION ALL
          		 SELECT BQ.N4TH_RLANE_CD, SUBSTR(BQ.N4TH_FINC_VVD_CD, 9,1), BQ.N4TH_POL_CONTI_CD, BQ.N4TH_POD_CONTI_CD  FROM DUAL
          		 ) 
          AND   DL.DELT_FLG     = 'N'
          )
        )

    /* LANE */
    AND   (
          SP.SLAN_USE_FLG = 'N'
        OR SR.VSL_SLAN_CD IS NULL
        OR SR.VSL_SLAN_CD IN ( BQ.N1ST_RLANE_CD, BQ.N2ND_RLANE_CD, BQ.N3RD_RLANE_CD, BQ.N4TH_RLANE_CD )
        )

    /* T/S PORT */
    AND   (
          SP.TS_PORT_USE_FLG = 'N'
        OR SR.TS_PORT_CD    IS NULL
        OR SR.TS_PORT_CD    IN ( BQ.N1ST_TS_PORT_CD, BQ.N2ND_TS_PORT_CD, BQ.N3RD_TS_PORT_CD )
        )

    /* ORG TRANS MODE */
    AND   (
          SP.TRNS_MOD_USE_FLG = 'N'
        OR SR.ORG_TRSP_MOD_CD IS NULL
        OR SR.ORG_TRSP_MOD_CD = BQ.ORG_TRNS_MOD_CD
        )
    /* DEST TRANS MODE */
    AND   (
          SP.TRNS_MOD_USE_FLG = 'N'
        OR SR.DEST_TRSP_MOD_CD IS NULL
        OR SR.DEST_TRSP_MOD_CD = BQ.DEST_TRNS_MOD_CD
        )
    /* USA SVC MODE */
    AND   (
          SP.USA_SVC_MOD_USE_FLG = 'N'
        OR SR.USA_SVC_MOD_CD    IS NULL
        OR SR.USA_SVC_MOD_CD    = DECODE(SR.USA_SVC_MOD_CD, 'CZ', BQ.CML_ZN_CD, BQ.USA_SVC_MOD_CD )
        )

/*******************************************************************************************
< CANAL >
P : PAPAC
S : EGSUC
*******************************************************************************************/
    AND	(
          SP.CNL_TZ_FLG  = 'N'
        OR SR.CNL_TZ_CD  IS NULL
        OR EXISTS (
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N1ST_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N1ST_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N1ST_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N1ST_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N1ST_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ 
            UNION ALL
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N2ND_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N2ND_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N2ND_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N2ND_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N2ND_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         
            UNION ALL
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N3RD_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N3RD_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N3RD_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N3RD_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N3RD_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         
            UNION ALL
              SELECT 'X'
              FROM   VSK_VSL_PORT_SKD S1 ,
                  VSK_VSL_PORT_SKD S2 ,
                  VSK_VSL_PORT_SKD S3
              WHERE S1.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)
              AND   S1.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)
              AND   S1.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)
              AND   S1.VPS_PORT_CD = BQ.N4TH_POL_CD
--              AND   S1.CLPT_IND_SEQ = BV.POL_CLPT_IND_SEQ
              AND   S2.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)
              AND   S2.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)
              AND   S2.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)
              AND   S2.VPS_PORT_CD = BQ.N4TH_POD_CD
--              AND   S2.CLPT_IND_SEQ = BV.POD_CLPT_IND_SEQ
              AND   S3.VSL_CD    = SUBSTR(BQ.N4TH_FINC_VVD_CD,1,4)
              AND   S3.SKD_VOY_NO  = SUBSTR(BQ.N4TH_FINC_VVD_CD,5,4)
              AND   S3.SKD_DIR_CD  = SUBSTR(BQ.N4TH_FINC_VVD_CD,9,1)
              AND   S3.VPS_PORT_CD = DECODE(SR.CNL_TZ_CD, 'P', 'PAPAC', 'S', 'EGSUC')
              AND   S3.CLPT_SEQ   BETWEEN S1.CLPT_SEQ AND S2.CLPT_SEQ                                         
        )
    ) 

    /* CARGO TYPE */
    AND   (
          SR.PRC_CGO_TP_CD IS NULL
        OR SR.PRC_CGO_TP_CD = BQ.PRC_CGO_TP_CD
        )

     /* CONTRACT DATE [CHM-201324203] */
     AND     (
            SP.CTRT_DT_USE_FLG = 'N'
           OR  SR.CTRT_DT IS NULL
           OR  SR.CTRT_DT <= (SELECT CTRT_EFF_DT 
                               FROM PRI_SP_DUR
                              WHERE PROP_NO = BQ.PROP_NO
                                AND AMDT_SEQ = BQ.AMDT_SEQ)
             )


    /* RATING UNIT */
    AND     (
          SR.RAT_UT_CD IN ( 'BL', 'BX', 'PC', 'RM' )
        OR SR.RAT_UT_CD = C_TYP.CONV_RAT_UT_CD
            OR (
                SR.RAT_UT_CD IN ( '20', '40', 'HC', '45', '53' )
              AND ( SELECT A.CNTR_SZ_CD FROM PRI_RAT_UT A WHERE A.RAT_UT_CD = SR.RAT_UT_CD ) = C_TYP.CONV_RAT_UT_SZ_CD
              )
            )


/*******************************************************************************************
< RT_APPL_TP_CD = 'N' (Not Applicable) >
*******************************************************************************************/
    AND   NOT EXISTS (
              SELECT 'X'
              FROM  C1
              WHERE  C1.BQ_SEQ     = BQ.BQ_SEQ
              AND   C1.CHG_CD     = SP.CHG_CD
              AND   C1.RT_APPL_TP_CD = 'N'
              )

/*******************************************************************************************
< GOH >
*******************************************************************************************/
    AND   NOT EXISTS (
              SELECT 'X'
              FROM  G2
              WHERE  G2.BQ_SEQ     = BQ.BQ_SEQ
              AND   G2.CHG_CD     = SP.CHG_CD
              )

    )
WHERE  ROW_NUMBER = 1
) ,
SG AS (
SELECT BQ_SEQ       ,
    SEL_TP_CD      ,
    SEL_TP_PRIO     ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    RT_APPL_TP_CD    ,
    RT_OP_CD      ,
    CURR_CD             ,
    FRT_RT_AMT     ,
    TYP_BKG_CONV_TP_CD ,
    RAT_UT_CD      ,
    PRC_CGO_TP_CD    ,
    RT_INCL_FLG
FROM  C1
WHERE  RT_APPL_TP_CD  = 'F'

/*******************************************************************************************
TARIFF SURCHARGE 에 0 으로 등록된 것이 있으면 NOTE CONVERSION 에 입력된 것을 받지 않는다.
*******************************************************************************************/
AND   CHG_CD     NOT IN ( SELECT CHG_CD FROM S3 WHERE S3.BQ_SEQ = C1.BQ_SEQ AND S3.FRT_RT_AMT = 0 )

UNION ALL

SELECT BQ_SEQ       ,
    SEL_TP_CD      ,
    SEL_TP_PRIO     ,
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    RT_APPL_TP_CD    ,
    RT_OP_CD      ,
    CURR_CD             ,
    FRT_RT_AMT     ,
    TYP_BKG_CONV_TP_CD ,
    RAT_UT_CD      ,
    PRC_CGO_TP_CD    ,
    RT_INCL_FLG
FROM  (
    SELECT SG.BQ_SEQ       ,
        SG.SEL_TP_CD     ,
        SG.SEL_TP_PRIO    ,
        SG.CHG_CD       ,
        SG.FLT_PCT_TP_CD   ,
        SG.PCT_BSE_CD     ,
        C1.RT_APPL_TP_CD   ,
        NULL RT_OP_CD    ,
        SG.CURR_CD           ,

        CASE
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '+' THEN SG.FRT_RT_AMT + C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '-' THEN SG.FRT_RT_AMT - C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '*' THEN SG.FRT_RT_AMT * C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '/' THEN SG.FRT_RT_AMT / C1.FRT_RT_AMT
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '>' THEN GREATEST(SG.FRT_RT_AMT, C1.FRT_RT_AMT)
        WHEN C1.RT_APPL_TP_CD = 'A' AND C1.RT_OP_CD = '<' THEN LEAST(SG.FRT_RT_AMT, C1.FRT_RT_AMT)
        ELSE SG.FRT_RT_AMT
        END FRT_RT_AMT    ,

        SG.TYP_BKG_CONV_TP_CD ,
        SG.RAT_UT_CD     ,
        SG.PRC_CGO_TP_CD   ,

        NVL(C1.RT_INCL_FLG, SG.RT_INCL_FLG) RT_INCL_FLG ,
        SG.NOT_RULE_FLG
    FROM  (
        SELECT * FROM G2 /* GOH */
        UNION ALL
        SELECT * FROM S3 /* TARIFF SURCHARGE */
        ) SG ,
        ( SELECT * FROM C1 WHERE RT_APPL_TP_CD IN ( 'S', 'I', 'A' ) ) C1
    WHERE  C1.BQ_SEQ(+)    = SG.BQ_SEQ
    AND   C1.CHG_CD(+)    = SG.CHG_CD
    ) SG
WHERE  NOT EXISTS (
          SELECT 'X'
          FROM  C1
          WHERE  C1.BQ_SEQ     = SG.BQ_SEQ
          AND   C1.CHG_CD     = SG.CHG_CD
          AND   C1.RT_APPL_TP_CD = 'F'
          )

/*******************************************************************************************
NOT RULE 적용
*******************************************************************************************/

AND   NOT (
        SG.RT_APPL_TP_CD IS NULL
      AND SG.NOT_RULE_FLG  = 'Y'
      AND SG.RT_INCL_FLG  = 'N'
      AND SG.CHG_CD NOT IN ( 'WHF', 'AST', 'GST', 'VDT', 'VTT', 'GRI', 'OAR', 'DAR', 'OIH', 'DIH' )
      )
) ,
GS AS
(
SELECT BQ.BQ_SEQ       ,
    BQ.PROP_NO      ,
    BQ.AMDT_SEQ      ,
    BQ.SVC_SCP_CD     ,
    BQ.GEN_SPCL_RT_TP_CD ,
    BQ.CMDT_HDR_SEQ    ,
    BQ.ROUT_SEQ      ,
    BQ.RT_SEQ       ,
	SG.RT_INCL_FLG , /* 2010.03.23 ADD */
    SG.CHG_CD       ,
    SG.FLT_PCT_TP_CD   ,
    SG.PCT_BSE_CD     ,
    SG.CURR_CD      ,
    CASE
    WHEN SG.RAT_UT_CD = 'PC' THEN 0 -- 나중에 구해야 한다.
    WHEN SG.RT_INCL_FLG = 'Y' THEN 0 
    ELSE SG.FRT_RT_AMT
    END CHG_UT_AMT    ,
    CASE
    WHEN SG.RAT_UT_CD = 'BL' THEN 1
    WHEN SG.RAT_UT_CD = 'PC' THEN SG.FRT_RT_AMT
    WHEN SG.RAT_UT_CD = 'RM' THEN BQ.PRD_RD_CNT
    ELSE 1
    END RAT_AS_QTY    ,
    SG.RAT_UT_CD     ,
    0 CHG_AMT       ,
    BQ.PRC_CGO_TP_CD CGO_TP_CD ,
    BQ.RCV_TERM_CD    ,
    BQ.DE_TERM_CD	,
    BQ.POR_CNT_CD   ,
    BQ.DEL_CNT_CD

FROM  BQ ,
    SG
WHERE  SG.BQ_SEQ  = BQ.BQ_SEQ
  AND  SG.CHG_CD NOT IN ( DECODE(BQ.CUST_TP_CD, 'N', 'XXX', 'NMS' )) /* CUSTOMER TYPE 이 NVOCC 인 경우만 NMS 존재 */
) ,
FN AS
(

/*******************************************************************************************
GENERAL SURCHARGE
*******************************************************************************************/

SELECT BQ_SEQ       ,
    PROP_NO       ,
    AMDT_SEQ      ,
    SVC_SCP_CD     ,
    GEN_SPCL_RT_TP_CD  ,
    CMDT_HDR_SEQ    ,
    ROUT_SEQ      ,
    RT_SEQ       ,
	RT_INCL_FLG , /* 2010.03.23 ADD */
    CHG_CD       ,
    FLT_PCT_TP_CD    ,
    PCT_BSE_CD     ,
    CURR_CD       ,
    CHG_UT_AMT     ,
    RAT_AS_QTY     ,
    RAT_UT_CD      ,
    CHG_UT_AMT * RAT_AS_QTY CHG_AMT ,
    CGO_TP_CD      ,
    RCV_TERM_CD     ,
    DE_TERM_CD      ,
    POR_CNT_CD      ,
    DEL_CNT_CD
FROM  GS
WHERE  CHG_CD  NOT IN (
             'ACT'
             )

UNION ALL

/*******************************************************************************************
ACT
*******************************************************************************************/

SELECT GS.BQ_SEQ        ,
    GS.PROP_NO       ,
    GS.AMDT_SEQ       ,
    GS.SVC_SCP_CD      ,
    GS.GEN_SPCL_RT_TP_CD  ,
    GS.CMDT_HDR_SEQ     ,
    GS.ROUT_SEQ       ,
    GS.RT_SEQ        ,
	GS.RT_INCL_FLG     , /* 2010.03.23 ADD */
    GS.CHG_CD        ,
    GS.FLT_PCT_TP_CD    ,
    GS.PCT_BSE_CD      ,
    GS.CURR_CD       ,
    GS.CHG_UT_AMT      ,
    GS.RAT_AS_QTY      ,
    GS.RAT_UT_CD      ,
    GS.CHG_UT_AMT * GS.RAT_AS_QTY CHG_AMT ,
    GS.CGO_TP_CD      ,
    GS.RCV_TERM_CD     ,
    GS.DE_TERM_CD		,
    GS.POR_CNT_CD      ,
    GS.DEL_CNT_CD
FROM  BQ ,
    GS
WHERE GS.BQ_SEQ = BQ.BQ_SEQ
AND   GS.CHG_CD = 'ACT'
AND     (
        (
          BQ.SVC_SCP_CD    = 'TPE'
        AND BQ.POD_CD      IN ( 'USLGB', 'USLAX' )
        AND BQ.POD_CD      <> BQ.DEL_CD
        AND BQ.DEST_TRNS_MOD_CD IN ( 'R', 'A' )
        )
    OR   (
          BQ.SVC_SCP_CD    = 'TPW'
        AND BQ.POL_CD      IN ( 'USLGB', 'USLAX' )
        AND BQ.POL_CD      <> BQ.POR_CD
        AND BQ.ORG_TRNS_MOD_CD IN ( 'R', 'A' )
        )
    OR   (
          BQ.SVC_SCP_CD    <> 'TPE'
        AND BQ.DEL_CNT_CD    = 'US'
        AND BQ.POD_CD      IN ( 'USNYC', 'USSAV', 'USCHS', 'USORF', 'USBOS' )
        AND EXISTS (
              SELECT 'X'
              FROM  PRD_INLND_ROUT_MST IR
              WHERE  IR.ROUT_ORG_NOD_CD    LIKE BQ.POD_CD||'%'
              AND   IR.ROUT_DEST_NOD_CD  LIKE BQ.DEL_CD||'%'
              AND   IR.PCTL_IO_BND_CD   = 'I'
              AND   IR.HUB_NOD_CD     LIKE 'USLGB'||'%'
              AND   IR.INLND_ROUT_BKG_FLG = 'Y'
              AND   NVL(IR.DELT_FLG, 'N') = 'N'
              )
        AND BQ.DEST_TRNS_MOD_CD IN ( 'R', 'A' )
        )
    OR   (
          BQ.SVC_SCP_CD    <> 'TPW'
        AND BQ.POR_CNT_CD    = 'US'
        AND BQ.POL_CD      IN ( 'USNYC', 'USSAV', 'USCHS', 'USORF', 'USBOS' )
        AND EXISTS (
              SELECT 'X'
              FROM  PRD_INLND_ROUT_MST IR
              WHERE  IR.ROUT_ORG_NOD_CD    LIKE BQ.POR_CD||'%'
              AND   IR.ROUT_DEST_NOD_CD  LIKE BQ.POL_CD||'%'
              AND   IR.PCTL_IO_BND_CD   = 'O'
              AND   IR.HUB_NOD_CD     LIKE 'USLGB'||'%'
              AND   IR.INLND_ROUT_BKG_FLG = 'Y'
              AND   NVL(IR.DELT_FLG, 'N') = 'N'
              )
        AND BQ.ORG_TRNS_MOD_CD IN ( 'R', 'A' )
        )
    )

)

SELECT FN.PROP_NO   ,
    FN.AMDT_SEQ     ,
    FN.SVC_SCP_CD   ,
    FN.GEN_SPCL_RT_TP_CD ,
    FN.CMDT_HDR_SEQ ,
    FN.ROUT_SEQ     ,
    FN.RT_SEQ       ,
	FN.RT_INCL_FLG  AS RT_INCL_FLG, /* 2010.03.23 ADD */
    FN.CHG_CD       ,
    FN.RAT_UT_CD    ,
    NVL(FN.CURR_CD, 'USD') AS CURR_CD  ,
    NVL(CASE
    WHEN FN.RT_INCL_FLG = 'N' AND FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.RAT_AS_QTY / 100
    ELSE FN.CHG_AMT END, 0)             AS TRF_SCG_AMT  ,
    NVL(CASE
    WHEN FN.RT_INCL_FLG = 'N' AND FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.RAT_AS_QTY / 100
    ELSE FN.CHG_AMT END, 0)             AS ADJ_SCG_AMT  ,
    NVL(CASE
    WHEN FN.RT_INCL_FLG = 'N' AND FN.RAT_UT_CD = 'PC' THEN NVL(F1.CHG_AMT, 0) * FN.RAT_AS_QTY / 100
    ELSE FN.CHG_AMT
    END, 0) / DECODE(NVL(USD_LOCL_XCH_RT,0), 0, 1, USD_LOCL_XCH_RT) AS ADJ_SCG_USD_AMT ,
    NULL          AS TRF_SCG_RMK,
    'T'             AS TRF_ADJ_TP_CD,
    'N'             AS ADJ_FLG,
    'BATCH'         AS CRE_USR_ID,
    SYSDATE         AS CRE_DT,
    'BATCH'         AS UPD_USR_ID,
    SYSDATE         AS UPD_DT
FROM  FN ,
  (
    SELECT BQ_SEQ  ,
        CHG_CD    ,
        SUM(CHG_AMT) CHG_AMT
    FROM  (
        SELECT F1.BQ_SEQ ,
            F1.CHG_CD    ,
            F2.CHG_AMT CHG_AMT
        FROM  FN F1 ,
            FN F2
        WHERE  F2.BQ_SEQ = F1.BQ_SEQ
        AND   F2.CHG_CD    IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND SYSDATE BETWEEN EFF_DT AND EXP_DT )
        AND   F2.CURR_CD   = F1.CURR_CD
        AND   (
              F1.CHG_CD  <> 'VTT'
            OR	F2.CHG_CD	NOT IN ( DECODE(F1.POR_CNT_CD, 'VN', 'DTH', 'XXX'), DECODE(F1.POR_CNT_CD, 'VN', 'DDC', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'OTH', 'XXX'), DECODE(F1.DEL_CNT_CD, 'VN', 'ORC', 'XXX') )
            )
        AND   F2.RAT_UT_CD  <> 'PC'
        AND   F1.RAT_UT_CD  = 'PC'
        UNION ALL
        SELECT F1.BQ_SEQ ,
            F1.CHG_CD    ,
            F2.PROP_FRT_RT_AMT CHG_AMT
        FROM  FN F1 ,
              BQ F2
        WHERE  F2.BQ_SEQ = F1.BQ_SEQ
        AND   'OFT'   IN ( SELECT CHG_CD FROM PRI_SCG_PCT_BSE_CHG A WHERE A.PCT_BSE_CD = F1.PCT_BSE_CD AND SYSDATE BETWEEN EFF_DT AND EXP_DT )
        AND   F2.CURR_CD   = F1.CURR_CD
        AND   F2.CTRT_CNTR_TPSZ_CD <> 'PC'
        AND   F1.RAT_UT_CD     = 'PC'
        )
    GROUP BY
        BQ_SEQ  ,
        CHG_CD
    ) F1,
    (SELECT USD_LOCL_XCH_RT AS USD_LOCL_XCH_RT, CURR_CD FROM GL_MON_XCH_RT
      WHERE ACCT_XCH_RT_YRMON = LEAST(TO_CHAR(SYSDATE, 'YYYYMM'), ( SELECT MAX(ACCT_XCH_RT_YRMON) FROM GL_MON_XCH_RT )) 
        AND ACCT_XCH_RT_LVL  = '1' ) XR    
WHERE  F1.BQ_SEQ(+) = FN.BQ_SEQ
AND   F1.CHG_CD(+)  = FN.CHG_CD
AND   XR.CURR_CD(+) = FN.CURR_CD
AND   FN.CHG_CD NOT IN ( 'GRI', 'GOH', 'WHF', 'GST', 'AST', 'VDT', 'VTT', 'WSC' )
AND  (CASE WHEN FN.SVC_SCP_CD IN ( 'ACW','MXW','TAE','TPW' ) AND FN.CHG_CD = 'CAF' THEN 'N'
           WHEN FN.SVC_SCP_CD IN ( 'ASE','ASW','TAE','TAW','TPE','TPW' ) AND FN.CHG_CD = 'CUC' THEN 'N'
           WHEN FN.SVC_SCP_CD IN ( 'TPE','MXE','ACE' ) AND FN.CHG_CD = 'DDC' THEN 'N' 
           WHEN FN.SVC_SCP_CD IN ( 'TPE','MXE','ACE' ) AND FN.CHG_CD = 'EPS' THEN 'N'
           WHEN FN.SVC_SCP_CD IN ( 'TPE','MXE','ACE' ) AND FN.CHG_CD = 'ERC' THEN 'N'
           ELSE 'Y' END ) = 'Y'

) B
ON (    A.PROP_NO = B.PROP_NO
    AND A.AMDT_SEQ = B.AMDT_SEQ
    AND A.SVC_SCP_CD = B.SVC_SCP_CD
    AND A.GEN_SPCL_RT_TP_CD = B.GEN_SPCL_RT_TP_CD
    AND A.CMDT_HDR_SEQ = B.CMDT_HDR_SEQ
    AND A.ROUT_SEQ = B.ROUT_SEQ
    AND A.RT_SEQ = B.RT_SEQ
    AND A.CHG_CD = B.CHG_CD     )  
WHEN MATCHED THEN
UPDATE SET A.TRF_SCG_AMT =  B.TRF_SCG_AMT,
		   A.UPD_USR_ID = @[upd_usr_id],
		   A.UPD_DT = SYSDATE
    
WHEN NOT MATCHED THEN
INSERT 
    (A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ, A.RT_SEQ,
    A.CHG_CD, A.BKG_RAT_UT_CD, A.CURR_CD, A.TRF_SCG_AMT, A.ADJ_SCG_AMT, A.ADJ_SCG_USD_AMT, A.TRF_SCG_RMK, 
    A.TRF_ADJ_TP_CD, A.ADJ_FLG, A.CRE_USR_ID, A.CRE_DT, A.UPD_USR_ID, A.UPD_DT )
VALUES 
    (B.PROP_NO, B.AMDT_SEQ, B.SVC_SCP_CD, B.GEN_SPCL_RT_TP_CD, B.CMDT_HDR_SEQ, B.ROUT_SEQ, B.RT_SEQ,
    B.CHG_CD, B.RAT_UT_CD, B.CURR_CD, B.TRF_SCG_AMT, B.ADJ_SCG_AMT, B.ADJ_SCG_USD_AMT, NULL,
    'T', 'N', @[upd_usr_id], SYSDATE, @[upd_usr_id], SYSDATE )			]]></sql>
			<params>
				<param name="prop_no" type="12" value="" out="N"/>
				<param name="amdt_seq" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
				<param name="gen_spcl_rt_tp_cd" type="12" value="" out="N"/>
				<param name="cmdt_hdr_seq" type="12" value="" out="N"/>
				<param name="rout_seq" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
