<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="WeeklyCMDBDAODemDetCostReportbyCustomerRSQL">
			<desc><![CDATA[DEM/DET Cost Report by Customer 를 조회한다.
2015.05.11 김시몬 Status 추가]]></desc>
			<sql><![CDATA[
SELECT COST_YRMON, 
       COST_WK,
       CTRT_OFC_CD,
       POR_CD,
       DEL_CD, 
       SC_NO,
       RFA_NO,
       CNTR_TPSZ_CD,
       DECODE(STATUS,1,'Finish','Unfinish') AS STATUS,
       SUM(BKG_QTY) AS BKG_QTY,
       DECODE(SUM(BKG_QTY),0,0,SUM(PA_CM_AMT)/SUM(BKG_QTY))       AS CMPB,
#if (${f_demdet} == 'Y')        
       DECODE(SUM(BKG_QTY),0,0,SUM(DMDT_COM_AMT)/SUM(BKG_QTY))    AS DMDT_COM_AMT,
#end      
       DECODE(SUM(BKG_QTY),0,0,SUM(STO_ORG_AMT)/SUM(BKG_QTY))     AS STO_EQ_AMT,
       DECODE(SUM(BKG_QTY),0,0,SUM(CNTR_ORG_AMT)/SUM(BKG_QTY))    AS CNTR_ORG_DEM_AMT,
       DECODE(SUM(BKG_QTY),0,0,SUM(CHSS_ORG_AMT)/SUM(BKG_QTY))    AS CHSS_ORG_DEM_AMT,
       
       SUM(CNTR_QTY) AS CNTR_QTY,
#if (${f_demdet} == 'Y')       
       ROUND(DECODE(SUM(CNTR_QTY),0,0,SUM(DMDT_COM_AMT2)/SUM(CNTR_QTY)),2) AS DMDT_COM_AMT2,
#end       
       DECODE(SUM(CNTR_QTY),0,0,SUM(STO_TTL_AMT)/SUM(CNTR_QTY))   AS STO_DEM_AMT,
       DECODE(SUM(CNTR_QTY),0,0,SUM(CNTR_TTL_AMT)/SUM(CNTR_QTY))  AS CNTR_DEM_AMT,
       DECODE(SUM(CNTR_QTY),0,0,SUM(CHSS_TTL_AMT)/SUM(CNTR_QTY))  AS CHSS_DEM_AMT,       

       DECODE(SUM(BKG_QTY),0,0,(SUM(PA_CM_AMT)/SUM(BKG_QTY) + 
                                                 (SUM(STO_ORG_AMT)  +
                                                  SUM(CNTR_ORG_AMT) + 
                                                  SUM(CHSS_ORG_AMT) 
                                          #if (${f_demdet} == 'Y')         
                                                  + SUM(DMDT_COM_AMT)
                                          #end        
                                                  )/SUM(BKG_QTY)
                                                  -
                                                 (SUM(STO_TTL_AMT)  + 
                                                  SUM(CNTR_TTL_AMT) +
                                                  SUM(CHSS_TTL_AMT)
                                          #if (${f_demdet} == 'Y')         
                                                  + SUM(DMDT_COM_AMT2) 
                                          #end       
                                                  ) /SUM(CNTR_QTY)
                                               ))  AS CMPB2                              
                                
  FROM (
        SELECT COST_YRMON, 
               COST_WK,
               BKG_NO,
               CNTR_TPSZ_CD,
               POR_CD,
               DEL_CD,
               CTRT_OFC_CD,
               SC_NO,
               RFA_NO,
               DECODE(SIGN(COUNT(CNTR_NO) - MAX(BKG_QTY)),-1,0,DECODE(MIN(STATUS),1,1,0)) AS STATUS,
               MAX(BKG_QTY)         AS BKG_QTY,
               MAX(DMDT_COM_AMT)    AS DMDT_COM_AMT,
               MAX(PA_CM_AMT)       AS PA_CM_AMT,
               MAX(STO_ORG_AMT)     AS STO_ORG_AMT,
               MAX(CNTR_ORG_AMT)    AS CNTR_ORG_AMT,
               MAX(CHSS_ORG_AMT)    AS CHSS_ORG_AMT,
               
               COUNT(CNTR_NO)     AS CNTR_QTY,
               SUM(DMDT_COM_AMT2) AS DMDT_COM_AMT2,
               SUM(STO_TTL_AMT)   AS STO_TTL_AMT,
               SUM(CHSS_TTL_AMT)  AS CHSS_TTL_AMT,
               SUM(CNTR_TTL_AMT)  AS CNTR_TTL_AMT
          FROM (   
                SELECT A.COST_YRMON, 
                       A.COST_WK,
                       A.BKG_NO,
                       B.CNTR_NO,
                       A.CNTR_TPSZ_CD,
                       A.POR_CD,
                       A.DEL_CD,
                       A.CTRT_OFC_CD,
                       A.SC_NO,
                       A.RFA_NO,
                       MAX(DECODE(B.CNTR_FM_MVMT_STS_CD,'ID',1,0)) AS STATUS,
                       MAX(A.BKG_QTY)         AS BKG_QTY,
                       MAX(A.DMDT_COM_AMT)    AS DMDT_COM_AMT,
                       MAX(A.PA_CM_AMT)       AS PA_CM_AMT,
                       MAX(A.STO_ORG_AMT)     AS STO_ORG_AMT,
                       MAX(A.CNTR_ORG_AMT)    AS CNTR_ORG_AMT,
                       MAX(A.CHSS_ORG_AMT)    AS CHSS_ORG_AMT,
                                              
                       NVL(SUM(B.INV_CHG_AMT), 0) AS DMDT_COM_AMT2,
                       
                       SUM(DECODE(SUBSTR(B.ITM_NM,LENGTH(B.ITM_NM)-2,3),'STO',B.COST_TTL_AMT,0)) AS STO_TTL_AMT,
                       SUM(DECODE(SUBSTR(B.ITM_NM,5,4),'CHSS', B.COST_TTL_AMT,0)) AS CHSS_TTL_AMT,
                       SUM(DECODE(SUBSTR(B.ITM_NM,5,4),'CNTR', B.COST_TTL_AMT,0)) AS CNTR_TTL_AMT
                  FROM (
                        SELECT 
                        #if (${f_chkprd} == 'W') 
                               /*+ INDEX(B XFN3MAS_BKG_EXPN_DTL_WK) */
                        #else
                               /*+ INDEX(B XAK3MAS_BKG_EXPN_DTL) */
                        #end
                        #if (${f_chkprd} == 'W') 
                               B.SLS_YRMON AS COST_YRMON,  -- WEEK 선택시                       
                        #else
                               B.COST_YRMON,       -- MONTH선택시
                        #end
                               B.COST_WK,
                               B.BKG_NO,
                               B.CNTR_TPSZ_CD,
                               B.BKG_POR_CD   AS POR_CD,
                               B.BKG_DEL_CD   AS DEL_CD,
                               B.CTRT_OFC_CD,
                               B.SC_NO,
                               B.RFA_NO,
                               SUM(B.BKG_QTY)    AS BKG_QTY,       
                               SUM(NVL(B.BKG_REV,0) + NVL(B.BKG_OFT_REV,0) + NVL(B.BKG_MISC_REV,0) + NVL(B.SCR_CHG_REV,0)) 
                               - SUM(NVL(B.PA_CM_COST_TTL_AMT,0))     AS PA_CM_AMT,
                               NVL(SUM(B.DMDT_COM_AMT),0)             AS DMDT_COM_AMT,
                               NVL(SUM(B.FCNTR_STO_COM_AMT),0)        AS STO_ORG_AMT,  
                               NVL(SUM(B.CNTR_STERM_RNTL_LAND_AMT),0) + 
                               NVL(SUM(B.CNTR_LTERM_RNTL_LAND_AMT),0) + 
                               NVL(SUM(B.CNTR_MNR_LAND_AMT),0)        + 
                               NVL(SUM(B.CNTR_DPC_LAND_AMT),0)        + 
                               NVL(SUM(B.CNTR_INSUR_LAND_AMT),0)      AS CNTR_ORG_AMT, 
                               NVL(SUM(B.CHSS_AMT),0)                 AS CHSS_ORG_AMT     
                          FROM 
                        #if (${f_chkprd} == 'W')
                               MAS_BKG_EXPN_DTL_WK B 
                        #else       
                               MAS_BKG_EXPN_DTL B
                        #end
                         WHERE 
                        #if (${f_chkprd} == 'W') 
                               -- WEEK 선택시                       
                               SUBSTR(SLS_YRMON,1,4)||COST_WK BETWEEN @[f_year]||@[f_fm_wk] AND @[f_year]||@[f_to_wk]
                        #else
                               COST_YRMON BETWEEN @[f_year]||@[f_fm_mon] AND @[f_year]||@[f_to_mon]  -- MONTH선택시
                        #end
                                        
                         
                        #if (${f_sc} != '')
                           AND SC_NO         LIKE @[f_sc]||'%'
                        #end   
                        #if (${f_rfa} != '')   
                           AND RFA_NO        LIKE @[f_rfa]||'%'
                        #end   
                        #if (${f_por} != '')   
                           AND BKG_POR_CD    LIKE @[f_por]||'%'
                        #end   
                        #if (${f_del} != '')   
                           AND BKG_DEL_CD    LIKE @[f_del]||'%'
                        #end   
                        #if (${f_tpsz} != '')   
                           AND CNTR_TPSZ_CD  LIKE @[f_tpsz]||'%'
                        #end
                         GROUP BY 
                        #if (${f_chkprd} == 'W') 
                               B.SLS_YRMON,  -- WEEK 선택시                       
                        #else
                               B.COST_YRMON,       -- MONTH선택시
                        #end
                               B.COST_WK,
                               B.BKG_NO,
                               B.CNTR_TPSZ_CD,
                               B.BKG_POR_CD,
                               B.BKG_DEL_CD,
                               B.CTRT_OFC_CD,
                               B.SC_NO,
                               B.RFA_NO
                       ) A, MAS_DMDT_COST_RPT_BKG_DTL B
                 WHERE A.BKG_NO       = B.BKG_NO
                   AND A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD
				   AND NVL(B.DMDT_CHG_STS_CD, 'F') IN ('F', 'L', 'N', 'U', 'C', 'I')
                 GROUP BY A.COST_YRMON, 
                       A.COST_WK,
                       A.BKG_NO,
                       B.CNTR_NO,
                       A.CNTR_TPSZ_CD,
                       A.POR_CD,
                       A.DEL_CD,
                       A.CTRT_OFC_CD,
                       A.SC_NO,
                       A.RFA_NO               )
         GROUP BY COST_YRMON, 
               COST_WK,
               BKG_NO,
               CNTR_TPSZ_CD,
               POR_CD,
               DEL_CD,
               CTRT_OFC_CD,
               SC_NO,
               RFA_NO
       )
 WHERE STATUS IN (DECODE(@[f_status],'A',0,'F',1,'U',0),DECODE(@[f_status],'A',1,'F',1,'U',0))
 GROUP BY COST_YRMON, 
       COST_WK,
       CTRT_OFC_CD,
       POR_CD,
       DEL_CD,
       SC_NO,
       RFA_NO,
       CNTR_TPSZ_CD,
       DECODE(STATUS,1,'Finish','Unfinish')
ORDER BY COST_YRMON,
		 COST_WK,
         CTRT_OFC_CD,
         POR_CD,
         DEL_CD,
         SC_NO,
         RFA_NO,
         CNTR_TPSZ_CD,
         STATUS			]]></sql>
			<params>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="f_fm_wk" type="12" value="" out="N"/>
				<param name="f_to_wk" type="12" value="" out="N"/>
				<param name="f_fm_mon" type="12" value="" out="N"/>
				<param name="f_to_mon" type="12" value="" out="N"/>
				<param name="f_sc" type="12" value="" out="N"/>
				<param name="f_rfa" type="12" value="" out="N"/>
				<param name="f_por" type="12" value="" out="N"/>
				<param name="f_del" type="12" value="" out="N"/>
				<param name="f_tpsz" type="12" value="" out="N"/>
				<param name="f_status" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
