<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ModelManageDBDAOSearchBkgCmpbRSQL">
			<desc><![CDATA[선택된 Customer, SC 에 대한 Sub Trade별, 노선별 BKG pol,pod CMPB를 조회합니다.
[CHM-201322502-01] SPC 프로젝트 - 성수기 선복운영 개선을 위한 T/F추진
2014.02.04 [CHM-201428383-01] RFA 로직 추가
2014.03.17 [CHM-20142960] SMP/Allocation control보완 요청 - SPC_GET_SMP_AMEND_FNC 적용
2014.05.16 [CHM-201430353] SMP / AES 보완요청 - SC 입력 기능 추가]]></desc>
			<sql><![CDATA[
SELECT SUB_TRD_CD,
       SLS_RGN_OFC_CD,
       USA_BKG_MOD_CD,
       BKG_POL_CD,
       BKG_POD_CD,
       BKG_DEL_CD,
#if (${rlane_cd} == '')
       STRD_CMPB / DECODE(@[unit], 'T', 1, 2) AS STRD_CMPB,
       STRD_GREV / DECODE(@[unit], 'T', 1, 2) AS STRD_GREV,
       SUB_TRD_QTY_SUM / DECODE(@[unit], 'T', 1, 2) AS STRD_AVG_QTY
#else
       LANE_CMPB / DECODE(@[unit], 'T', 1, 2) AS LANE_CMPB,
       LANE_GREV / DECODE(@[unit], 'T', 1, 2) AS LANE_GREV,
       LANE_QTY_SUM / DECODE(@[unit], 'T', 1, 2) AS LANE_AVG_QTY
#end
  FROM (
        SELECT SUB_TRD_CD,
               SLS_RGN_OFC_CD,
               USA_BKG_MOD_CD,
               BKG_POL_CD,
               BKG_POD_CD,
               BKG_DEL_CD,
#if (${rlane_cd} == '')
               ROUND(SUB_TRD_CM_SUM  / SUB_TRD_QTY_SUM,2)  AS STRD_CMPB,
               ROUND(SUB_TRD_REV_SUM / SUB_TRD_QTY_SUM,2)  AS STRD_GREV,
               ROUND(SUB_TRD_QTY_SUM,2) AS SUB_TRD_QTY_SUM
#else
               ROUND(LANE_CM_SUM     / LANE_QTY_SUM,2)     AS LANE_CMPB,
               ROUND(LANE_REV_SUM    / LANE_QTY_SUM,2)     AS LANE_GREV,
               ROUND(LANE_QTY_SUM,2) AS LANE_QTY_SUM
#end
          FROM (
                SELECT DISTINCT
                       SUB_TRD_CD,
                       SLS_RGN_OFC_CD,
                       USA_BKG_MOD_CD,
                       BKG_POL_CD,
                       BKG_POD_CD,
                       BKG_DEL_CD,
#if (${rlane_cd} == '')
                       SUM(RLANE_CMPB_AMT) OVER(PARTITION BY SUB_TRD_CD,SLS_RGN_OFC_CD,USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD)               AS SUB_TRD_CM_SUM,
                       SUM(GRS_TTL_REV) OVER(PARTITION BY SUB_TRD_CD,SLS_RGN_OFC_CD,USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD)                  AS SUB_TRD_REV_SUM,
                       SUM(RLANE_BKG_QTY)  OVER(PARTITION BY SUB_TRD_CD,SLS_RGN_OFC_CD,USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD)               AS SUB_TRD_QTY_SUM
#else
                       SUM(RLANE_CMPB_AMT) OVER(PARTITION BY SUB_TRD_CD, RLANE_CD, SLS_RGN_OFC_CD, USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD)   AS LANE_CM_SUM,
                       SUM(GRS_TTL_REV) OVER(PARTITION BY SUB_TRD_CD, RLANE_CD, SLS_RGN_OFC_CD, USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD)      AS LANE_REV_SUM,
                       SUM(RLANE_BKG_QTY)  OVER(PARTITION BY SUB_TRD_CD, RLANE_CD, SLS_RGN_OFC_CD, USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD)   AS LANE_QTY_SUM
#end
--                       ROUND((SUM(RLANE_BKG_QTY)  OVER(PARTITION BY SUB_TRD_CD, RLANE_CD, SLS_RGN_OFC_CD, USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD))/
--                             (MAX(NUM) OVER(PARTITION BY SUB_TRD_CD, RLANE_CD, SLS_RGN_OFC_CD, USA_BKG_MOD_CD, BKG_POL_CD, BKG_POD_CD, BKG_DEL_CD))
--                            ,2) AS LANE_AVG_QTY
                  FROM (
                        SELECT MCP.COST_YRWK,
                               MCP.SUB_TRD_CD,
                               MCP.RLANE_CD,
                               MCP.SLS_RGN_OFC_CD,
                               MCP.USA_BKG_MOD_CD,
                               MCP.BKG_POL_CD,
                               MCP.BKG_POD_CD,
                               MCP.BKG_DEL_CD,
                               SUM(MCP.RLANE_CMPB_AMT) AS RLANE_CMPB_AMT,
                               SUM(MCP.RLANE_BKG_QTY)  AS RLANE_BKG_QTY,
                               SUM(MCP.GRS_TTL_REV)    AS GRS_TTL_REV,
                               MAX((SELECT COUNT(1)
                                      FROM MAS_WK_PRD CWP
                                     WHERE CWP.COST_YR||CWP.COST_WK BETWEEN V.PERF_ST_YRWK AND V.PERF_END_YRWK)) NUM
                          FROM SPC_MDL_CUST_PERF   MCP,
                               SPC_MDL_VER_MST     V
                         WHERE 1=1
                           AND V.TRD_CD    = @[trd_cd]
                           AND V.COST_YRWK = @[cost_yrwk]
                           AND V.VER_SEQ   = @[ver_seq]
                           AND MCP.COST_YRWK BETWEEN V.PERF_ST_YRWK AND V.PERF_END_YRWK
                           AND MCP.CUST_CNT_CD    = @[cust_cnt_cd]
                           AND MCP.CUST_SEQ       = @[cust_seq]
                           AND NVL(SPC_GET_SMP_AMEND_FNC(V.TRD_CD, V.COST_YRWK, V.VER_SEQ, MCP.SC_NO ), 'X') = NVL(@[sc_no] , 'X')
                           AND NVL(SPC_GET_SMP_AMEND_FNC(V.TRD_CD, V.COST_YRWK, V.VER_SEQ, MCP.RFA_NO), 'X') = NVL(@[rfa_no], 'X')
                           AND MCP.SLS_RGN_OFC_CD = @[sls_rgn_ofc_cd]
                           AND MCP.TRD_CD         = @[trd_cd]
                           AND MCP.SUB_TRD_CD     = @[sub_trd_cd]
                           AND MCP.SLS_RHQ_CD     = @[sls_rhq_cd]
#if (${rlane_cd} != '')
                           AND MCP.RLANE_CD       = @[rlane_cd]
#end
                         GROUP BY MCP.COST_YRWK,
                               MCP.SUB_TRD_CD,
                               MCP.RLANE_CD,
                               MCP.SLS_RGN_OFC_CD,
                               MCP.USA_BKG_MOD_CD,
                               MCP.BKG_POL_CD,
                               MCP.BKG_POD_CD,
                               MCP.BKG_DEL_CD
                       )

               )
      )
ORDER BY SUB_TRD_CD,
      SLS_RGN_OFC_CD,
      USA_BKG_MOD_CD,
      BKG_POL_CD,
      BKG_POD_CD,
      BKG_DEL_CD			]]></sql>
			<params>
				<param name="unit" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="cost_yrwk" type="12" value="" out="N"/>
				<param name="ver_seq" type="12" value="" out="N"/>
				<param name="cust_cnt_cd" type="12" value="" out="N"/>
				<param name="cust_seq" type="12" value="" out="N"/>
				<param name="sc_no" type="12" value="" out="N"/>
				<param name="rfa_no" type="12" value="" out="N"/>
				<param name="sls_rgn_ofc_cd" type="12" value="" out="N"/>
				<param name="sub_trd_cd" type="12" value="" out="N"/>
				<param name="sls_rhq_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
