/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAOSearchWeeklyLfByPolPodListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.23
*@LastModifier : Arie
*@LastVersion : 1.0
* 2017.01.23 Arie
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author Arie
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAOSearchWeeklyLfByPolPodListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * RDR 실적 중 POL/POD 세부 Data 조회
	  * 2010.11.22 김종준 [CHM-201007116] Weekly L/F by POL/POD 화면 - 기능추가 개발
	  * 2011.12.08 김종준 SUB_TRD_CD,BSA TOTAL순으로 정렬되게 수정
	  * 2011.12.30 김종준 [] Loading by POL/POD 화면 -POL/POD별 조회 기능추가
	  * 2011.03.02 이석준 [CHM-201109016-01] 
	  *                 RDR에 BSA정보가 없을시 SPC_BSA_MGMT TABLE에서 BSA 정보를 보여주도록 쿼리 수정
	  * 2011.03.30 이석준[CHM-201109754-01]
	  *                 AE1AE LANE은 EUROUPE으로 되어 있으나 SHARC가 조회시에 조회될 수 있도록 수정
	  * 2011.07.05 최윤성 [CHM-201111937-01] Space Utilization 화면 보완
	  *  - 각각의 Carrier 별 Weight 정보를 추가
	  * 2011.10.05 김종준 [CHM-201113755-01] 
	  * 	-IOC가 ‘O’인 경우에만 조회가 가능토록 되어있으나, WAFIE와 마찬가지로 NBSIM 노선의 경우,
	  * 	  Intra 노선이지만, Ocean 처럼 인식되어 데이터가 조회될 수 있도록 보완 요청
	  * 2017.1.23 SM상선 전환에 따른 소스변경
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAOSearchWeeklyLfByPolPodListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("polpod_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rlane_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("full_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("year",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bound",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rhq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("week",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAOSearchWeeklyLfByPolPodListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH LV_BASE_QTY AS (" ).append("\n"); 
		query.append("SELECT TRD_CD,SUB_TRD_CD,RLANE_CD,POL,POD,OPR_CD," ).append("\n"); 
		query.append("       COST_YR,NUM,COST_WK,VVD,DIR_CD," ).append("\n"); 
		query.append("       DECODE(CHK_NUM,1, " ).append("\n"); 
		query.append("                        DECODE(BSA,0,DECODE(B_BSA,0,C_BSA,B_BSA),-- RDR Alloc에 없으면 BSA MGMT 값 적용" ).append("\n"); 
		query.append("                                     DECODE(B_LAST_FLG,1,BSA,-1,B_BSA,0,C_BSA)) -- RDR Alloc이 있으면 Update Date일자 비교하여 최근것을 적용" ).append("\n"); 
		query.append("                       ,0) BSA, -- 첫번째 pol/pod에만 BSA 적용, check Num이 1만" ).append("\n"); 
		query.append("      FULL_FLG,POLPOD_FLG,TEU,WGT" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append(" FROM (     " ).append("\n"); 
		query.append("    SELECT A.TRD_CD,A.SUB_TRD_CD,A.RLANE_CD,A.POL,A.POD,A.OPR_CD," ).append("\n"); 
		query.append("           A.COST_YR,A.NUM,A.COST_WK,A.VVD,A.DIR_CD," ).append("\n"); 
		query.append("           A.CHK_NUM," ).append("\n"); 
		query.append("           A.BSA," ).append("\n"); 
		query.append("           NVL(B.BSA_CAPA,0) B_BSA," ).append("\n"); 
		query.append("           NVL(C.BSA_CAPA,0) C_BSA," ).append("\n"); 
		query.append("           NVL(B.UPD_DT,TO_DATE('19900101','YYYYMMDD')) B_UPD_DT," ).append("\n"); 
		query.append("           NVL(C.UPD_DT,TO_DATE('19900101','YYYYMMDD')) C_UPD_DT," ).append("\n"); 
		query.append("           SIGN(NVL(A.UPD_DT,TO_DATE('19900101','YYYYMMDD')) - NVL(B.UPD_DT,TO_DATE('19900101','YYYYMMDD'))) B_LAST_FLG," ).append("\n"); 
		query.append("           SIGN(NVL(A.UPD_DT,TO_DATE('19900101','YYYYMMDD')) - NVL(C.UPD_DT,TO_DATE('19900101','YYYYMMDD'))) C_LAST_FLG,                           " ).append("\n"); 
		query.append("           A.FULL_FLG,A.POLPOD_FLG,A.TEU,A.WGT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("           SELECT" ).append("\n"); 
		query.append("             V.TRD_CD" ).append("\n"); 
		query.append("            ,V.SUB_TRD_CD" ).append("\n"); 
		query.append("            ,V.RLANE_CD " ).append("\n"); 
		query.append("            ,S.POL" ).append("\n"); 
		query.append("            ,S.POD_ISO POD" ).append("\n"); 
		query.append("            ,DECODE(S.OPR_CD,'SML','SML','COS','COS','KKL','KKL','YML','YML','OTH') OPR_CD" ).append("\n"); 
		query.append("            ,S.OPR_CD ORG_OPR_CD" ).append("\n"); 
		query.append("            ,SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR" ).append("\n"); 
		query.append("            ,P.RNUM NUM" ).append("\n"); 
		query.append("            ,V.COST_WK" ).append("\n"); 
		query.append("            ,S.VSL_CD||S.VOY_NO||S.DIR_CD AS VVD" ).append("\n"); 
		query.append("            ,S.DIR_CD" ).append("\n"); 
		query.append("            ,NVL(B.BASIC_SLOT,0) BSA" ).append("\n"); 
		query.append("            --POL/POD중 첫번재 VVD에만 값을 붙이기 위한 CHECK FLAG" ).append("\n"); 
		query.append("            ,ROW_NUMBER() OVER (PARTITION BY TRD_CD,SUB_TRD_CD,RLANE_CD,S.OPR_CD,S.VSL_CD||S.VOY_NO||S.DIR_CD ORDER BY S.VSL_CD||S.VOY_NO||S.DIR_CD) CHK_NUM " ).append("\n"); 
		query.append("        	,@[full_flg] full_flg	--volocity param 설정용" ).append("\n"); 
		query.append("        	,@[polpod_flg] polpod_flg	--volocity param 설정용" ).append("\n"); 
		query.append("            #if (${full_flg} == 'S' || ${full_flg} == '')" ).append("\n"); 
		query.append("        	    ,DECODE(S.CNTR_TYPE, 'F', SUM(DECODE(S.CNTR_SIZE, '2', S.QTY, 0)) +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, '3', S.QTY, 0)) +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, '4', S.QTY, 0)) * 2 +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, 'H', S.QTY, 0)) * 2 +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, 'L', S.QTY, 0)) * 2 , 0)" ).append("\n"); 
		query.append("        		+" ).append("\n"); 
		query.append("        	    DECODE(S.CNTR_TYPE, 'E', SUM(DECODE(S.CNTR_SIZE, '2', S.QTY, 0)) +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, '3', S.QTY, 0)) +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, '4', S.QTY, 0)) * 2 +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, 'H', S.QTY, 0)) * 2 +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, 'L', S.QTY, 0)) * 2 , 0)  AS TEU" ).append("\n"); 
		query.append("        	    ,SUM(DECODE(S.CNTR_TYPE, 'F', S.WEIGHT, 'E', S.WEIGHT, 0)) AS WGT     " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        	#else" ).append("\n"); 
		query.append("        	    ,DECODE(S.CNTR_TYPE, 'F', SUM(DECODE(S.CNTR_SIZE, '2', S.QTY, 0)) +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, '3', S.QTY, 0)) +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, '4', S.QTY, 0)) * 2 +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, 'H', S.QTY, 0)) * 2 +" ).append("\n"); 
		query.append("        	                              SUM(DECODE(S.CNTR_SIZE, 'L', S.QTY, 0)) * 2 , 0)  AS TEU" ).append("\n"); 
		query.append("        	    ,SUM(DECODE(S.CNTR_TYPE, 'F', S.WEIGHT, 0)) AS WGT     " ).append("\n"); 
		query.append("        	#end" ).append("\n"); 
		query.append("            ,MAX(B.UPD_DT) UPD_DT                          " ).append("\n"); 
		query.append("          FROM  RDR_HEADER     H" ).append("\n"); 
		query.append("               ,RDR_SUMMARY    S" ).append("\n"); 
		query.append("               ,(SELECT  M.VSL_CD," ).append("\n"); 
		query.append("                         M.VOY_NO," ).append("\n"); 
		query.append("                         M.DIR_CD," ).append("\n"); 
		query.append("                         M.REGION," ).append("\n"); 
		query.append("                         M.OPR_CD        AS OPR_CD," ).append("\n"); 
		query.append("                        SUM(M.BSA_SLOT) AS BASIC_SLOT," ).append("\n"); 
		query.append("                        MAX(M.UPDATE_TIME) UPD_DT" ).append("\n"); 
		query.append("                   FROM  RDR_ALLOCATION M" ).append("\n"); 
		query.append("                  WHERE  1 = 1" ).append("\n"); 
		query.append("        		   #if (${vvd} == '')" ).append("\n"); 
		query.append("        		       #if (${rhq} == 'A')" ).append("\n"); 
		query.append("        		           AND M.REGION IN ('A', 'D', 'E')" ).append("\n"); 
		query.append("           		       #else " ).append("\n"); 
		query.append("        		   	       #if (${rhq} == 'M')" ).append("\n"); 
		query.append("        		   		       AND M.REGION IN ('M', 'S')" ).append("\n"); 
		query.append("        		   	       #else" ).append("\n"); 
		query.append("        		   		       AND M.REGION = @[rhq]" ).append("\n"); 
		query.append("        		   	       #end" ).append("\n"); 
		query.append("        		       #end" ).append("\n"); 
		query.append("        		  #end" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("             GROUP BY M.VSL_CD, M.VOY_NO, M.DIR_CD, M.REGION, M.OPR_CD" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("               ,MAS_MON_VVD    V" ).append("\n"); 
		query.append("               ,(" ).append("\n"); 
		query.append("                SELECT  /*+ INDEX (P XPKMAS_WK_PRD)*/" ).append("\n"); 
		query.append("                        P.COST_YR||P.COST_WK AS COST_YRWK," ).append("\n"); 
		query.append("                        ROWNUM               AS RNUM" ).append("\n"); 
		query.append("                  FROM  MAS_WK_PRD P" ).append("\n"); 
		query.append("                 WHERE  P.COST_YR||P.COST_WK >= @[year]||@[week]" ).append("\n"); 
		query.append("                   AND  ROWNUM               <= @[duration]" ).append("\n"); 
		query.append("                ) P" ).append("\n"); 
		query.append("          WHERE  1 = 1" ).append("\n"); 
		query.append("            AND  SUBSTR(V.SLS_YRMON, 1, 4)||V.COST_WK = P.COST_YRWK" ).append("\n"); 
		query.append("            AND V.DIR_CD     LIKE NULL || '%'" ).append("\n"); 
		query.append("            AND V.SUB_TRD_CD LIKE NULL || '%'" ).append("\n"); 
		query.append("            AND  H.VSL_CD = S.VSL_CD" ).append("\n"); 
		query.append("            AND  H.VOY_NO = S.VOY_NO" ).append("\n"); 
		query.append("            AND  H.DIR_CD = S.DIR_CD" ).append("\n"); 
		query.append("            AND  H.REGION = S.REGION" ).append("\n"); 
		query.append("            AND  H.VSL_CD = V.VSL_CD" ).append("\n"); 
		query.append("            AND  H.VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND  H.DIR_CD = V.DIR_CD" ).append("\n"); 
		query.append("            AND  S.VSL_CD = B.VSL_CD(+)" ).append("\n"); 
		query.append("            AND  S.VOY_NO = B.VOY_NO(+)" ).append("\n"); 
		query.append("            AND  S.DIR_CD = B.DIR_CD(+)" ).append("\n"); 
		query.append("            AND  S.REGION = B.REGION(+)" ).append("\n"); 
		query.append("            AND  S.OPR_CD = B.OPR_CD(+)" ).append("\n"); 
		query.append("            AND  S.CNTR_SIZE IN ('2',  '3',  '4',  'H',  'L' )" ).append("\n"); 
		query.append("            AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N')" ).append("\n"); 
		query.append("        	AND  DECODE(V.RLANE_CD, 'WAFIE', 'O', 'NBSIM', 'O', V.IOC_CD)   = 'O'" ).append("\n"); 
		query.append("        	#if (${vvd} != '') " ).append("\n"); 
		query.append("        	    AND S.VSL_CD||S.VOY_NO||S.DIR_CD=@[vvd]" ).append("\n"); 
		query.append("        	#else" ).append("\n"); 
		query.append("        	    AND V.TRD_CD= @[trade]" ).append("\n"); 
		query.append("        		#if (${subtrade} != '') " ).append("\n"); 
		query.append("        			AND V.SUB_TRD_CD LIKE @[subtrade] || '%'" ).append("\n"); 
		query.append("        		#end" ).append("\n"); 
		query.append("        		#if (${rlane_cd} != '') " ).append("\n"); 
		query.append("        	   	    AND V.RLANE_CD=@[rlane_cd]" ).append("\n"); 
		query.append("        		#end" ).append("\n"); 
		query.append("        		#if (${pol_cd} != '') " ).append("\n"); 
		query.append("        			#if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("        		    	AND S.POL=@[pol_cd]" ).append("\n"); 
		query.append("        			#else" ).append("\n"); 
		query.append("        		    	AND S.POD_ISO=@[pol_cd]" ).append("\n"); 
		query.append("        			#end" ).append("\n"); 
		query.append("        		#end" ).append("\n"); 
		query.append("        		#if (${rhq} == 'A')" ).append("\n"); 
		query.append("        			AND H.REGION IN ('A', 'D',DECODE(V.RLANE_CD||V.DIR_CD,'AE1AEW','E','D'))" ).append("\n"); 
		query.append("        		#else" ).append("\n"); 
		query.append("        			#if (${rhq} == 'M')" ).append("\n"); 
		query.append("        				AND H.REGION IN ('M', 'S')" ).append("\n"); 
		query.append("        			#elseif (${rhq} =='E')" ).append("\n"); 
		query.append("                        AND H.REGION = DECODE(V.RLANE_CD,'AE1AE',DECODE(V.DIR_CD,'E','E','XXX'),'E')" ).append("\n"); 
		query.append("                    #else" ).append("\n"); 
		query.append("        				AND H.REGION = @[rhq]" ).append("\n"); 
		query.append("        			#end" ).append("\n"); 
		query.append("        		#end" ).append("\n"); 
		query.append("        		#if (${bound} != '') " ).append("\n"); 
		query.append("        			AND V.DIR_CD     LIKE @[bound] || '%'" ).append("\n"); 
		query.append("        		#end" ).append("\n"); 
		query.append("        	#end" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("            GROUP BY" ).append("\n"); 
		query.append("        	     V.SLS_YRMON" ).append("\n"); 
		query.append("        	    ,V.COST_WK" ).append("\n"); 
		query.append("        	    ,V.TRD_CD" ).append("\n"); 
		query.append("        	    ,V.SUB_TRD_CD" ).append("\n"); 
		query.append("        	    ,V.RLANE_CD" ).append("\n"); 
		query.append("        	    ,S.CNTR_TYPE" ).append("\n"); 
		query.append("        	    ,S.VSL_CD||S.VOY_NO||S.DIR_CD" ).append("\n"); 
		query.append("        	    ,S.DIR_CD" ).append("\n"); 
		query.append("        	    ,S.POL" ).append("\n"); 
		query.append("        	    ,S.OPR_CD" ).append("\n"); 
		query.append("        	    ,S.POD_ISO" ).append("\n"); 
		query.append("        	    ,B.BASIC_SLOT" ).append("\n"); 
		query.append("        	    ,RNUM" ).append("\n"); 
		query.append("        ) A," ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("        SELECT TRD_CD,SUB_TRD_CD,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,CRR_CD," ).append("\n"); 
		query.append("               BSA_CAPA,UPD_DT" ).append("\n"); 
		query.append("          FROM SPC_BSA_MGMT" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("            #if (${trade} != '')" ).append("\n"); 
		query.append("                   AND TRD_CD     = @[trade]" ).append("\n"); 
		query.append("            #end      " ).append("\n"); 
		query.append("        	#if (${subtrade} != '') " ).append("\n"); 
		query.append("        			AND SUB_TRD_CD LIKE @[subtrade] || '%'" ).append("\n"); 
		query.append("        	#end            " ).append("\n"); 
		query.append("            #if (${bound} != '')" ).append("\n"); 
		query.append("                   AND SKD_DIR_CD     = @[bound]" ).append("\n"); 
		query.append("            #end          " ).append("\n"); 
		query.append("        ) B," ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("        SELECT DISTINCT TRD_CD,SUB_TRD_CD,VSL_CD,SKD_DIR_CD,CRR_CD," ).append("\n"); 
		query.append("               FIRST_VALUE(BSA_CAPA) OVER(PARTITION BY TRD_CD,SUB_TRD_CD,VSL_CD,CRR_CD,SKD_DIR_CD ORDER BY BSA_SEQ DESC) BSA_CAPA," ).append("\n"); 
		query.append("			   FIRST_VALUE(UPD_DT) OVER(PARTITION BY TRD_CD,SUB_TRD_CD,VSL_CD,CRR_CD,SKD_DIR_CD ORDER BY BSA_SEQ DESC) UPD_DT" ).append("\n"); 
		query.append("          FROM SPC_BSA_MGMT" ).append("\n"); 
		query.append("         WHERE 1=1" ).append("\n"); 
		query.append("            #if (${trade} != '')" ).append("\n"); 
		query.append("                   AND TRD_CD     = @[trade]" ).append("\n"); 
		query.append("            #end      " ).append("\n"); 
		query.append("        	#if (${subtrade} != '') " ).append("\n"); 
		query.append("        			AND SUB_TRD_CD LIKE @[subtrade] || '%'" ).append("\n"); 
		query.append("        	#end            " ).append("\n"); 
		query.append("            #if (${bound} != '')" ).append("\n"); 
		query.append("                   AND SKD_DIR_CD     = @[bound]" ).append("\n"); 
		query.append("            #end         " ).append("\n"); 
		query.append("        ) C             " ).append("\n"); 
		query.append("     WHERE A.TRD_CD        	= B.TRD_CD(+)" ).append("\n"); 
		query.append("       AND A.SUB_TRD_CD    	= B.SUB_TRD_CD(+)" ).append("\n"); 
		query.append("       AND SUBSTR(A.VVD,1,4)= B.VSL_CD(+)" ).append("\n"); 
		query.append("       AND SUBSTR(A.VVD,5,4)= B.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("       AND A.DIR_CD       	= B.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("       AND A.ORG_OPR_CD     = B.CRR_CD(+)" ).append("\n"); 
		query.append("       AND A.TRD_CD         = C.TRD_CD(+)" ).append("\n"); 
		query.append("       AND A.SUB_TRD_CD    	= C.SUB_TRD_CD(+)" ).append("\n"); 
		query.append("       AND SUBSTR(A.VVD,1,4)= C.VSL_CD(+)" ).append("\n"); 
		query.append("       AND A.DIR_CD      	= C.SKD_DIR_CD(+)   " ).append("\n"); 
		query.append("       AND A.ORG_OPR_CD     = C.CRR_CD(+)" ).append("\n"); 
		query.append(" )" ).append("\n"); 
		query.append(" ORDER BY" ).append("\n"); 
		query.append("         COST_WK" ).append("\n"); 
		query.append("        ,TRD_CD" ).append("\n"); 
		query.append("        ,SUB_TRD_CD" ).append("\n"); 
		query.append("        ,RLANE_CD" ).append("\n"); 
		query.append("        ,POL" ).append("\n"); 
		query.append("        ,OPR_CD" ).append("\n"); 
		query.append("        ,POD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", LV_VVD_INFO AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("-- 주차별 VVD 정보" ).append("\n"); 
		query.append("	SELECT TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,COST_WK,SUM(BSA) BSA,NUM," ).append("\n"); 
		query.append("       	   MAX(DECODE(GRP_SEQ,1,VVD))||MAX(DECODE(GRP_SEQ,2,'/'||VVD))||MAX(DECODE(GRP_SEQ,3,'/'||VVD))||MAX(DECODE(GRP_SEQ,4,'/'||VVD)) VVD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  FROM (" ).append("\n"); 
		query.append("    		SELECT  TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,COST_WK,NUM," ).append("\n"); 
		query.append("           			VVD," ).append("\n"); 
		query.append("           			SUM(BSA) BSA" ).append("\n"); 
		query.append("           			,ROW_NUMBER() OVER(PARTITION BY TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,COST_WK ORDER BY TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,COST_WK) GRP_SEQ" ).append("\n"); 
		query.append("    		  FROM LV_BASE_QTY" ).append("\n"); 
		query.append("    		 GROUP BY TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,COST_WK ,VVD ,NUM" ).append("\n"); 
		query.append("		   )" ).append("\n"); 
		query.append("	 GROUP BY TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,COST_WK,NUM" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("LV_QTY_FORM AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("-- QTY,BSA 정보 기본 FORM 완성" ).append("\n"); 
		query.append("SELECT DECODE(GRP_ID,'00001',1,'00000',2,'01101',1,'01100',2,'11101',1,'11100',2) LVL," ).append("\n"); 
		query.append("       100+ROWNUM*5 SEQ," ).append("\n"); 
		query.append("       COUNT(*) OVER(PARTITION BY KB, GRP_ID, TRD_CD, SUB_TRD_CD, RLANE_CD) CNT," ).append("\n"); 
		query.append("	   A.*" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("    	   #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("    	       KB,GROUPING(SUB_TRD_CD)||GROUPING(RLANE_CD)||GROUPING(DIR_CD)||GROUPING(POL)||GROUPING(POD) GRP_ID," ).append("\n"); 
		query.append("    	   #else" ).append("\n"); 
		query.append("    	   	   KB,GROUPING(SUB_TRD_CD)||GROUPING(RLANE_CD)||GROUPING(DIR_CD)||GROUPING(POD)||GROUPING(POL) GRP_ID," ).append("\n"); 
		query.append("    	   #end" ).append("\n"); 
		query.append("           TRD_CD," ).append("\n"); 
		query.append("           SUB_TRD_CD," ).append("\n"); 
		query.append("           RLANE_CD," ).append("\n"); 
		query.append("		   DIR_CD," ).append("\n"); 
		query.append("           #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("           	   POL," ).append("\n"); 
		query.append("           	   POD," ).append("\n"); 
		query.append("           #else" ).append("\n"); 
		query.append("           	   POD," ).append("\n"); 
		query.append("           	   POL," ).append("\n"); 
		query.append("           #end" ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("           SELECT SUM(BSA) FROM LV_BASE_QTY B" ).append("\n"); 
		query.append("            WHERE A.TRD_CD=B.TRD_CD" ).append("\n"); 
		query.append("            AND   A.SUB_TRD_CD=B.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND   A.RLANE_CD=B.RLANE_CD" ).append("\n"); 
		query.append("            AND   A.DIR_CD=B.DIR_CD" ).append("\n"); 
		query.append("           ) BSA," ).append("\n"); 
		query.append("           -- 1주차 합계" ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1HJS',DECODE(KB,1,TEU,BSA),0)) WK1_HJS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1HJS',DECODE(KB,1,WGT,BSA),0)) WK1_HJS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1COS',DECODE(KB,1,TEU,BSA),0)) WK1_COS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1COS',DECODE(KB,1,WGT,BSA),0)) WK1_COS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1KKL',DECODE(KB,1,TEU,BSA),0)) WK1_KKL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1KKL',DECODE(KB,1,WGT,BSA),0)) WK1_KKL_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1YML',DECODE(KB,1,TEU,BSA),0)) WK1_YML_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1YML',DECODE(KB,1,WGT,BSA),0)) WK1_YML_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1OTH',DECODE(KB,1,TEU,BSA),0)) WK1_OTH_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'1OTH',DECODE(KB,1,WGT,BSA),0)) WK1_OTH_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '1',  DECODE(KB,1,TEU,BSA),0)) WK1_POL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '1',  DECODE(KB,1,WGT,BSA),0)) WK1_POL_WGT," ).append("\n"); 
		query.append("           -- 2주차 합계" ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2HJS',DECODE(KB,1,TEU,BSA),0)) WK2_HJS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2HJS',DECODE(KB,1,WGT,BSA),0)) WK2_HJS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2COS',DECODE(KB,1,TEU,BSA),0)) WK2_COS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2COS',DECODE(KB,1,WGT,BSA),0)) WK2_COS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2KKL',DECODE(KB,1,TEU,BSA),0)) WK2_KKL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2KKL',DECODE(KB,1,WGT,BSA),0)) WK2_KKL_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2YML',DECODE(KB,1,TEU,BSA),0)) WK2_YML_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2YML',DECODE(KB,1,WGT,BSA),0)) WK2_YML_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2OTH',DECODE(KB,1,TEU,BSA),0)) WK2_OTH_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'2OTH',DECODE(KB,1,WGT,BSA),0)) WK2_OTH_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '2',  DECODE(KB,1,TEU,0),0))   WK2_POL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '2',  DECODE(KB,1,WGT,BSA),0)) WK2_POL_WGT," ).append("\n"); 
		query.append("           -- 3주차 합계" ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3HJS',DECODE(KB,1,TEU,BSA),0)) WK3_HJS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3HJS',DECODE(KB,1,WGT,BSA),0)) WK3_HJS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3COS',DECODE(KB,1,TEU,BSA),0)) WK3_COS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3COS',DECODE(KB,1,WGT,BSA),0)) WK3_COS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3KKL',DECODE(KB,1,TEU,BSA),0)) WK3_KKL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3KKL',DECODE(KB,1,WGT,BSA),0)) WK3_KKL_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3YML',DECODE(KB,1,TEU,BSA),0)) WK3_YML_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3YML',DECODE(KB,1,WGT,BSA),0)) WK3_YML_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3OTH',DECODE(KB,1,TEU,BSA),0)) WK3_OTH_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'3OTH',DECODE(KB,1,WGT,BSA),0)) WK3_OTH_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '3',  DECODE(KB,1,TEU,BSA),0)) WK3_POL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '3',  DECODE(KB,1,WGT,BSA),0)) WK3_POL_WGT," ).append("\n"); 
		query.append("           -- 4주차 합계" ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4HJS',DECODE(KB,1,TEU,BSA),0)) WK4_HJS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4HJS',DECODE(KB,1,WGT,BSA),0)) WK4_HJS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4COS',DECODE(KB,1,TEU,BSA),0)) WK4_COS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4COS',DECODE(KB,1,WGT,BSA),0)) WK4_COS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4KKL',DECODE(KB,1,TEU,BSA),0)) WK4_KKL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4KKL',DECODE(KB,1,WGT,BSA),0)) WK4_KKL_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4YML',DECODE(KB,1,TEU,BSA),0)) WK4_YML_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4YML',DECODE(KB,1,WGT,BSA),0)) WK4_YML_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4OTH',DECODE(KB,1,TEU,BSA),0)) WK4_OTH_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'4OTH',DECODE(KB,1,WGT,BSA),0)) WK4_OTH_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '4',  DECODE(KB,1,TEU,BSA),0)) WK4_POL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '4',  DECODE(KB,1,WGT,BSA),0)) WK4_POL_WGT," ).append("\n"); 
		query.append("           -- 5주차 합계" ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5HJS',DECODE(KB,1,TEU,BSA),0)) WK5_HJS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5HJS',DECODE(KB,1,WGT,BSA),0)) WK5_HJS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5COS',DECODE(KB,1,TEU,BSA),0)) WK5_COS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5COS',DECODE(KB,1,WGT,BSA),0)) WK5_COS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5KKL',DECODE(KB,1,TEU,BSA),0)) WK5_KKL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5KKL',DECODE(KB,1,WGT,BSA),0)) WK5_KKL_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5YML',DECODE(KB,1,TEU,BSA),0)) WK5_YML_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5YML',DECODE(KB,1,WGT,BSA),0)) WK5_YML_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5OTH',DECODE(KB,1,TEU,BSA),0)) WK5_OTH_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM||OPR_CD,'5OTH',DECODE(KB,1,WGT,BSA),0)) WK5_OTH_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '5',  DECODE(KB,1,TEU,BSA),0)) WK5_POL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(NUM,         '5',  DECODE(KB,1,WGT,BSA),0)) WK5_POL_WGT," ).append("\n"); 
		query.append("           -- 주차 합계" ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'HJS',DECODE(KB,1,TEU,BSA),0))       GTL_HJS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'HJS',DECODE(KB,1,WGT,BSA),0))       GTL_HJS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'COS',DECODE(KB,1,TEU,BSA),0))       GTL_COS_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'COS',DECODE(KB,1,WGT,BSA),0))       GTL_COS_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'KKL',DECODE(KB,1,TEU,BSA),0))       GTL_KKL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'KKL',DECODE(KB,1,WGT,BSA),0))       GTL_KKL_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'YML',DECODE(KB,1,TEU,BSA),0))       GTL_YML_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'YML',DECODE(KB,1,WGT,BSA),0))       GTL_YML_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'OTH',DECODE(KB,1,TEU,BSA),0))       GTL_OTH_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(OPR_CD,'OTH',DECODE(KB,1,WGT,BSA),0))       GTL_OTH_WGT," ).append("\n"); 
		query.append("           SUM(DECODE(KB,1,TEU,BSA))                              GTL_POL_QTY," ).append("\n"); 
		query.append("           SUM(DECODE(KB,1,WGT,BSA))                              GTL_POL_WGT" ).append("\n"); 
		query.append("    FROM LV_BASE_QTY A, (SELECT LEVEL AS KB FROM DUAL CONNECT BY LEVEL<=2) B" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY GROUPING SETS(" ).append("\n"); 
		query.append("    					   #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,POL),    --00001" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,POL,POD),--00000" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD),        --00011" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,POL),              --01101" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,POL,POD),          --01100" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD),                  --01111" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,POL),                         --11101" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,POL,POD),                     --11100" ).append("\n"); 
		query.append("	                           (KB,TRD_CD)                              --11111" ).append("\n"); 
		query.append("	                       #else" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,POD),    --00001" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD,POD,POL),--00000" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,RLANE_CD,DIR_CD),        --00011" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,POD),              --01101" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD,POD,POL),          --01100" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,SUB_TRD_CD),                  --01111" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,POD),                         --11101" ).append("\n"); 
		query.append("	                           (KB,TRD_CD,POD,POL),                     --11100" ).append("\n"); 
		query.append("	                           (KB,TRD_CD)                              --11111" ).append("\n"); 
		query.append("	                       #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                          )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ORDER BY TRD_CD" ).append("\n"); 
		query.append("            ,DECODE(A.SUB_TRD_CD,NULL,'1',A.SUB_TRD_CD) DESC" ).append("\n"); 
		query.append("            ,RLANE_CD" ).append("\n"); 
		query.append("            #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("            	,POL" ).append("\n"); 
		query.append("            	,NVL(POD,'AAAAA')" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("	            ,POD" ).append("\n"); 
		query.append("	            ,NVL(POL,'AAAAA')" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			,KB" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("    ) A" ).append("\n"); 
		query.append("    WHERE ((KB = 1) OR -- QTY 합" ).append("\n"); 
		query.append("           (KB =2 AND GRP_ID IN('00011','01111','11111')) -- BSA 합 중 필요 LEVEL만 선택" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", LV_TOTAL_QTY AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- LANE 별 VVD 정보" ).append("\n"); 
		query.append("SELECT 9 LVL,NEW_SEQ AS SEQ,GRP_ID,TRD_CD," ).append("\n"); 
		query.append("--       SUB_TRD_CD,RLANE_CD," ).append("\n"); 
		query.append("	   SUB_TRD_CD," ).append("\n"); 
		query.append("	   DIR_CD," ).append("\n"); 
		query.append("       SUB_TRD_CD||'/ '||SUBSTR(RLANE_CD,1,3) SUB_RLANE_CD," ).append("\n"); 
		query.append("       #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("       	   '' AS POL," ).append("\n"); 
		query.append("       	   '' AS POD," ).append("\n"); 
		query.append("       #else" ).append("\n"); 
		query.append("       	   '' AS POD," ).append("\n"); 
		query.append("       	   '' AS POL," ).append("\n"); 
		query.append("       #end" ).append("\n"); 
		query.append("	   BSA," ).append("\n"); 
		query.append("       VVD1 AS WK1_HJS_QTY," ).append("\n"); 
		query.append("       VVD1 AS WK1_HJS_WGT," ).append("\n"); 
		query.append("       VVD1 AS WK1_COS_QTY," ).append("\n"); 
		query.append("       VVD1 AS WK1_COS_WGT," ).append("\n"); 
		query.append("       VVD1 AS WK1_KKL_QTY," ).append("\n"); 
		query.append("       VVD1 AS WK1_KKL_WGT," ).append("\n"); 
		query.append("       VVD1 AS WK1_YML_QTY," ).append("\n"); 
		query.append("       VVD1 AS WK1_YML_WGT," ).append("\n"); 
		query.append("       VVD1 AS WK1_OTH_QTY," ).append("\n"); 
		query.append("       VVD1 AS WK1_OTH_WGT," ).append("\n"); 
		query.append("       VVD1 AS WK1_POL_QTY," ).append("\n"); 
		query.append("       VVD1 AS WK1_POL_WGT," ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       VVD2 AS WK2_HJS_QTY," ).append("\n"); 
		query.append("       VVD2 AS WK2_HJS_WGT," ).append("\n"); 
		query.append("       VVD2 AS WK2_COS_QTY," ).append("\n"); 
		query.append("       VVD2 AS WK2_COS_WGT," ).append("\n"); 
		query.append("       VVD2 AS WK2_KKL_QTY," ).append("\n"); 
		query.append("       VVD2 AS WK2_KKL_WGT," ).append("\n"); 
		query.append("       VVD2 AS WK2_YML_QTY," ).append("\n"); 
		query.append("       VVD2 AS WK2_YML_WGT," ).append("\n"); 
		query.append("       VVD2 AS WK2_OTH_QTY," ).append("\n"); 
		query.append("       VVD2 AS WK2_OTH_WGT," ).append("\n"); 
		query.append("       VVD2 AS WK2_POL_QTY," ).append("\n"); 
		query.append("       VVD2 AS WK2_POL_WGT," ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       VVD3 AS WK3_HJS_QTY," ).append("\n"); 
		query.append("       VVD3 AS WK3_HJS_WGT," ).append("\n"); 
		query.append("       VVD3 AS WK3_COS_QTY," ).append("\n"); 
		query.append("       VVD3 AS WK3_COS_WGT," ).append("\n"); 
		query.append("       VVD3 AS WK3_KKL_QTY," ).append("\n"); 
		query.append("       VVD3 AS WK3_KKL_WGT," ).append("\n"); 
		query.append("       VVD3 AS WK3_YML_QTY," ).append("\n"); 
		query.append("       VVD3 AS WK3_YML_WGT," ).append("\n"); 
		query.append("       VVD3 AS WK3_OTH_QTY," ).append("\n"); 
		query.append("       VVD3 AS WK3_OTH_WGT," ).append("\n"); 
		query.append("       VVD3 AS WK3_POL_QTY," ).append("\n"); 
		query.append("       VVD3 AS WK3_POL_WGT," ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       VVD4 AS WK4_HJS_QTY," ).append("\n"); 
		query.append("       VVD4 AS WK4_HJS_WGT," ).append("\n"); 
		query.append("       VVD4 AS WK4_COS_QTY," ).append("\n"); 
		query.append("       VVD4 AS WK4_COS_WGT," ).append("\n"); 
		query.append("       VVD4 AS WK4_KKL_QTY," ).append("\n"); 
		query.append("       VVD4 AS WK4_KKL_WGT," ).append("\n"); 
		query.append("       VVD4 AS WK4_YML_QTY," ).append("\n"); 
		query.append("       VVD4 AS WK4_YML_WGT," ).append("\n"); 
		query.append("       VVD4 AS WK4_OTH_QTY," ).append("\n"); 
		query.append("       VVD4 AS WK4_OTH_WGT," ).append("\n"); 
		query.append("       VVD4 AS WK4_POL_QTY," ).append("\n"); 
		query.append("       VVD4 AS WK4_POL_WGT," ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("       VVD5 AS WK5_HJS_QTY," ).append("\n"); 
		query.append("       VVD5 AS WK5_HJS_WGT," ).append("\n"); 
		query.append("       VVD5 AS WK5_COS_QTY," ).append("\n"); 
		query.append("       VVD5 AS WK5_COS_WGT," ).append("\n"); 
		query.append("       VVD5 AS WK5_KKL_QTY," ).append("\n"); 
		query.append("       VVD5 AS WK5_KKL_WGT," ).append("\n"); 
		query.append("       VVD5 AS WK5_YML_QTY," ).append("\n"); 
		query.append("       VVD5 AS WK5_YML_WGT," ).append("\n"); 
		query.append("       VVD5 AS WK5_OTH_QTY," ).append("\n"); 
		query.append("       VVD5 AS WK5_OTH_WGT," ).append("\n"); 
		query.append("       VVD5 AS WK5_POL_QTY," ).append("\n"); 
		query.append("       VVD5 AS WK5_POL_WGT," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("       '' AS GTL_HJS_QTY," ).append("\n"); 
		query.append("       '' AS GTL_HJS_WGT," ).append("\n"); 
		query.append("       '' AS GTL_COS_QTY," ).append("\n"); 
		query.append("       '' AS GTL_COS_WGT," ).append("\n"); 
		query.append("       '' AS GTL_KKL_QTY," ).append("\n"); 
		query.append("       '' AS GTL_KKL_WGT," ).append("\n"); 
		query.append("       '' AS GTL_YML_QTY," ).append("\n"); 
		query.append("       '' AS GTL_YML_WGT," ).append("\n"); 
		query.append("       '' AS GTL_OTH_QTY," ).append("\n"); 
		query.append("       '' AS GTL_OTH_WGT," ).append("\n"); 
		query.append("       '' AS GTL_POL_QTY," ).append("\n"); 
		query.append("       '' AS GTL_POL_WGT" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT A.SEQ-1 NEW_SEQ," ).append("\n"); 
		query.append("           (SELECT B.VVD" ).append("\n"); 
		query.append("            FROM LV_VVD_INFO B" ).append("\n"); 
		query.append("            WHERE A.TRD_CD=B.TRD_CD" ).append("\n"); 
		query.append("            AND   A.SUB_TRD_CD=B.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND   A.RLANE_CD=B.RLANE_CD" ).append("\n"); 
		query.append("		    AND	  A.DIR_CD=B.DIR_CD" ).append("\n"); 
		query.append("            AND   B.NUM=1" ).append("\n"); 
		query.append("            ) VVD1," ).append("\n"); 
		query.append("           (SELECT B.VVD" ).append("\n"); 
		query.append("            FROM LV_VVD_INFO B" ).append("\n"); 
		query.append("            WHERE A.TRD_CD=B.TRD_CD" ).append("\n"); 
		query.append("            AND   A.SUB_TRD_CD=B.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND   A.RLANE_CD=B.RLANE_CD" ).append("\n"); 
		query.append("		    AND	  A.DIR_CD=B.DIR_CD" ).append("\n"); 
		query.append("            AND   B.NUM=2" ).append("\n"); 
		query.append("            ) VVD2," ).append("\n"); 
		query.append("           (SELECT B.VVD" ).append("\n"); 
		query.append("            FROM LV_VVD_INFO B" ).append("\n"); 
		query.append("            WHERE A.TRD_CD=B.TRD_CD" ).append("\n"); 
		query.append("            AND   A.SUB_TRD_CD=B.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND   A.RLANE_CD=B.RLANE_CD" ).append("\n"); 
		query.append("		    AND	  A.DIR_CD=B.DIR_CD" ).append("\n"); 
		query.append("            AND   B.NUM=3" ).append("\n"); 
		query.append("            ) VVD3," ).append("\n"); 
		query.append("           (SELECT B.VVD" ).append("\n"); 
		query.append("            FROM LV_VVD_INFO B" ).append("\n"); 
		query.append("            WHERE A.TRD_CD=B.TRD_CD" ).append("\n"); 
		query.append("            AND   A.SUB_TRD_CD=B.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND   A.RLANE_CD=B.RLANE_CD" ).append("\n"); 
		query.append("		    AND	  A.DIR_CD=B.DIR_CD" ).append("\n"); 
		query.append("            AND   B.NUM=4" ).append("\n"); 
		query.append("            ) VVD4," ).append("\n"); 
		query.append("           (SELECT B.VVD" ).append("\n"); 
		query.append("            FROM LV_VVD_INFO B" ).append("\n"); 
		query.append("            WHERE A.TRD_CD=B.TRD_CD" ).append("\n"); 
		query.append("            AND   A.SUB_TRD_CD=B.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND   A.RLANE_CD=B.RLANE_CD" ).append("\n"); 
		query.append("		    AND	  A.DIR_CD=B.DIR_CD" ).append("\n"); 
		query.append("            AND   B.NUM=5" ).append("\n"); 
		query.append("            ) VVD5," ).append("\n"); 
		query.append("            A.*" ).append("\n"); 
		query.append("    FROM LV_QTY_FORM A" ).append("\n"); 
		query.append("    WHERE  A.SEQ IN  (SELECT MIN(B.SEQ)" ).append("\n"); 
		query.append("                      FROM   LV_QTY_FORM B" ).append("\n"); 
		query.append("                      WHERE  B.GRP_ID='00001'" ).append("\n"); 
		query.append("                      GROUP BY B.RLANE_CD,B.DIR_CD)" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("-- QTY & BSA 정보 편집" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	 LVL" ).append("\n"); 
		query.append("	,SEQ" ).append("\n"); 
		query.append("	,GRP_ID,TRD_CD" ).append("\n"); 
		query.append("	,SUB_TRD_CD" ).append("\n"); 
		query.append("	,DIR_CD" ).append("\n"); 
		query.append("    ,SUB_TRD_CD||DECODE(RLANE_CD,NULL,'','/ '||SUBSTR(RLANE_CD,1,3)) SUB_RLANE_CD" ).append("\n"); 
		query.append("    ,NVL(DECODE(KB||GRP_ID,'100011','TTL LOAD'," ).append("\n"); 
		query.append("                      '101111','TTL LOAD'," ).append("\n"); 
		query.append("                      '111111','TTL LOAD'," ).append("\n"); 
		query.append("                      '200011','BSA'," ).append("\n"); 
		query.append("                      '201111','BSA'," ).append("\n"); 
		query.append("                      '211111','BSA'," ).append("\n"); 
		query.append("                      #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("                      	   POL),'-') POL" ).append("\n"); 
		query.append("                      #else" ).append("\n"); 
		query.append("                      	   POD),'-') POD" ).append("\n"); 
		query.append("                      #end" ).append("\n"); 
		query.append("    ,NVL(DECODE(KB||GRP_ID,'100011','TTL LOAD'," ).append("\n"); 
		query.append("                      '101111','TTL LOAD'," ).append("\n"); 
		query.append("                      '111111','TTL LOAD'," ).append("\n"); 
		query.append("                      '200011','BSA'," ).append("\n"); 
		query.append("                      '201111','BSA'," ).append("\n"); 
		query.append("                      '211111','BSA'," ).append("\n"); 
		query.append("                      #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("	                      POD),'+') POD" ).append("\n"); 
		query.append("                      #else" ).append("\n"); 
		query.append("                      	  POL),'+') POL" ).append("\n"); 
		query.append("                      #end" ).append("\n"); 
		query.append("	                  " ).append("\n"); 
		query.append("	,BSA" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_HJS_QTY,'999,990')    WK1_HJS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_HJS_WGT,'999,990')    WK1_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_COS_QTY,'999,990')    WK1_COS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_COS_WGT,'999,990')    WK1_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_KKL_QTY,'999,990')    WK1_KKL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_KKL_WGT,'999,990')    WK1_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_YML_QTY,'999,990')    WK1_YML_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_YML_WGT,'999,990')    WK1_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_OTH_QTY,'999,990')    WK1_OTH_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_OTH_WGT,'999,990')    WK1_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_POL_QTY,'999,990')    WK1_POL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK1_POL_WGT,'999,990')    WK1_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_HJS_QTY,'999,990')    WK2_HJS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_HJS_WGT,'999,990')    WK2_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_COS_QTY,'999,990')    WK2_COS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_COS_WGT,'999,990')    WK2_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_KKL_QTY,'999,990')    WK2_KKL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_KKL_WGT,'999,990')    WK2_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_YML_QTY,'999,990')    WK2_YML_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_YML_WGT,'999,990')    WK2_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_OTH_QTY,'999,990')    WK2_OTH_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_OTH_WGT,'999,990')    WK2_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_POL_QTY,'999,990')    WK2_POL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK2_POL_WGT,'999,990')    WK2_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_HJS_QTY,'999,990')    WK3_HJS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_HJS_WGT,'999,990')    WK3_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_COS_QTY,'999,990')    WK3_COS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_COS_WGT,'999,990')    WK3_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_KKL_QTY,'999,990')    WK3_KKL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_KKL_WGT,'999,990')    WK3_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_YML_QTY,'999,990')    WK3_YML_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_YML_WGT,'999,990')    WK3_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_OTH_QTY,'999,990')    WK3_OTH_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_OTH_WGT,'999,990')    WK3_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_POL_QTY,'999,990')    WK3_POL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK3_POL_WGT,'999,990')    WK3_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_HJS_QTY,'999,990')    WK4_HJS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_HJS_WGT,'999,990')    WK4_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_COS_QTY,'999,990')    WK4_COS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_COS_WGT,'999,990')    WK4_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_KKL_QTY,'999,990')    WK4_KKL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_KKL_WGT,'999,990')    WK4_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_YML_QTY,'999,990')    WK4_YML_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_YML_WGT,'999,990')    WK4_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_OTH_QTY,'999,990')    WK4_OTH_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_OTH_WGT,'999,990')    WK4_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_POL_QTY,'999,990')    WK4_POL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK4_POL_WGT,'999,990')    WK4_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_HJS_QTY,'999,990')    WK5_HJS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_HJS_WGT,'999,990')    WK5_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_COS_QTY,'999,990')    WK5_COS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_COS_WGT,'999,990')    WK5_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_KKL_QTY,'999,990')    WK5_KKL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_KKL_WGT,'999,990')    WK5_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_YML_QTY,'999,990')    WK5_YML_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_YML_WGT,'999,990')    WK5_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_OTH_QTY,'999,990')    WK5_OTH_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_OTH_WGT,'999,990')    WK5_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_POL_QTY,'999,990')    WK5_POL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(WK5_POL_WGT,'999,990')    WK5_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_HJS_QTY,'999,990')    GTL_HJS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_HJS_WGT,'999,990')    GTL_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_COS_QTY,'999,990')    GTL_COS_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_COS_WGT,'999,990')    GTL_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_KKL_QTY,'999,990')    GTL_KKL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_KKL_WGT,'999,990')    GTL_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_YML_QTY,'999,990')    GTL_YML_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_YML_WGT,'999,990')    GTL_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_OTH_QTY,'999,990')    GTL_OTH_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_OTH_WGT,'999,990')    GTL_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_POL_QTY,'999,990')    GTL_POL_QTY" ).append("\n"); 
		query.append("    ,TO_CHAR(GTL_POL_WGT,'999,990')    GTL_POL_WGT" ).append("\n"); 
		query.append("FROM LV_QTY_FORM A" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("-- L/F 계산" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("    A.LVL" ).append("\n"); 
		query.append("    ,B.SEQ+6 SEQ" ).append("\n"); 
		query.append("	,A.GRP_ID" ).append("\n"); 
		query.append("	,A.TRD_CD" ).append("\n"); 
		query.append("	,A.SUB_TRD_CD" ).append("\n"); 
		query.append("	,A.DIR_CD" ).append("\n"); 
		query.append("    ,A.SUB_TRD_CD||DECODE(A.RLANE_CD,NULL,'','/ '||SUBSTR(A.RLANE_CD,1,3)) SUB_RLANE_CD" ).append("\n"); 
		query.append("    #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("	    ,'L/F' POL" ).append("\n"); 
		query.append("	    ,'L/F' POD" ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("	    ,'L/F' POD" ).append("\n"); 
		query.append("	    ,'L/F' POL" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	,A.BSA" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK1_HJS_QTY,0,0,A.WK1_HJS_QTY/B.WK1_HJS_QTY*100),'9,990.0')||'%'   WK1_HJS_QTY" ).append("\n"); 
		query.append("    ,'' WK1_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK1_COS_QTY,0,0,A.WK1_COS_QTY/B.WK1_COS_QTY*100),'9,990.0')||'%'   WK1_COS_QTY" ).append("\n"); 
		query.append("    ,'' WK1_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK1_KKL_QTY,0,0,A.WK1_KKL_QTY/B.WK1_KKL_QTY*100),'9,990.0')||'%'   WK1_KKL_QTY" ).append("\n"); 
		query.append("    ,'' WK1_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK1_YML_QTY,0,0,A.WK1_YML_QTY/B.WK1_YML_QTY*100),'9,990.0')||'%'   WK1_YML_QTY" ).append("\n"); 
		query.append("    ,'' WK1_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK1_OTH_QTY,0,0,A.WK1_OTH_QTY/B.WK1_OTH_QTY*100),'9,990.0')||'%'   WK1_OTH_QTY" ).append("\n"); 
		query.append("    ,'' WK1_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK1_POL_QTY,0,0,A.WK1_POL_QTY/B.WK1_POL_QTY*100),'9,990.0')||'%'   WK1_POL_QTY" ).append("\n"); 
		query.append("    ,'' WK1_POL_WGT" ).append("\n"); 
		query.append("                                                                       " ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK2_HJS_QTY,0,0,A.WK2_HJS_QTY/B.WK2_HJS_QTY*100),'9,990.0')||'%'   WK2_HJS_QTY" ).append("\n"); 
		query.append("    ,'' WK2_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK2_COS_QTY,0,0,A.WK2_COS_QTY/B.WK2_COS_QTY*100),'9,990.0')||'%'   WK2_COS_QTY" ).append("\n"); 
		query.append("    ,'' WK2_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK2_KKL_QTY,0,0,A.WK2_KKL_QTY/B.WK2_KKL_QTY*100),'9,990.0')||'%'   WK2_KKL_QTY" ).append("\n"); 
		query.append("    ,'' WK2_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK2_YML_QTY,0,0,A.WK2_YML_QTY/B.WK2_YML_QTY*100),'9,990.0')||'%'   WK2_YML_QTY" ).append("\n"); 
		query.append("    ,'' WK2_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK2_OTH_QTY,0,0,A.WK2_OTH_QTY/B.WK2_OTH_QTY*100),'9,990.0')||'%'   WK2_OTH_QTY" ).append("\n"); 
		query.append("    ,'' WK2_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK2_POL_QTY,0,0,A.WK2_POL_QTY/B.WK2_POL_QTY*100),'9,990.0')||'%'   WK2_POL_QTY" ).append("\n"); 
		query.append("    ,'' WK2_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK3_HJS_QTY,0,0,A.WK3_HJS_QTY/B.WK3_HJS_QTY*100),'9,990.0')||'%'   WK3_HJS_QTY" ).append("\n"); 
		query.append("    ,'' WK3_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK3_COS_QTY,0,0,A.WK3_COS_QTY/B.WK3_COS_QTY*100),'9,990.0')||'%'   WK3_COS_QTY" ).append("\n"); 
		query.append("    ,'' WK3_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK3_KKL_QTY,0,0,A.WK3_KKL_QTY/B.WK3_KKL_QTY*100),'9,990.0')||'%'   WK3_KKL_QTY" ).append("\n"); 
		query.append("    ,'' WK3_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK3_YML_QTY,0,0,A.WK3_YML_QTY/B.WK3_YML_QTY*100),'9,990.0')||'%'   WK3_YML_QTY" ).append("\n"); 
		query.append("    ,'' WK3_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK3_OTH_QTY,0,0,A.WK3_OTH_QTY/B.WK3_OTH_QTY*100),'9,990.0')||'%'   WK3_OTH_QTY" ).append("\n"); 
		query.append("    ,'' WK3_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK3_POL_QTY,0,0,A.WK3_POL_QTY/B.WK3_POL_QTY*100),'9,990.0')||'%'   WK3_POL_QTY" ).append("\n"); 
		query.append("    ,'' WK3_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK4_HJS_QTY,0,0,A.WK4_HJS_QTY/B.WK4_HJS_QTY*100),'9,990.0')||'%'   WK4_HJS_QTY" ).append("\n"); 
		query.append("    ,'' WK4_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK4_COS_QTY,0,0,A.WK4_COS_QTY/B.WK4_COS_QTY*100),'9,990.0')||'%'   WK4_COS_QTY" ).append("\n"); 
		query.append("    ,'' WK4_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK4_KKL_QTY,0,0,A.WK4_KKL_QTY/B.WK4_KKL_QTY*100),'9,990.0')||'%'   WK4_KKL_QTY" ).append("\n"); 
		query.append("    ,'' WK4_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK4_YML_QTY,0,0,A.WK4_YML_QTY/B.WK4_YML_QTY*100),'9,990.0')||'%'   WK4_YML_QTY" ).append("\n"); 
		query.append("    ,'' WK4_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK4_OTH_QTY,0,0,A.WK4_OTH_QTY/B.WK4_OTH_QTY*100),'9,990.0')||'%'   WK4_OTH_QTY" ).append("\n"); 
		query.append("    ,'' WK4_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK4_POL_QTY,0,0,A.WK4_POL_QTY/B.WK4_POL_QTY*100),'9,990.0')||'%'   WK4_POL_QTY" ).append("\n"); 
		query.append("    ,'' WK4_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK5_HJS_QTY,0,0,A.WK5_HJS_QTY/B.WK5_HJS_QTY*100),'9,990.0')||'%'   WK5_HJS_QTY" ).append("\n"); 
		query.append("    ,'' WK5_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK5_COS_QTY,0,0,A.WK5_COS_QTY/B.WK5_COS_QTY*100),'9,990.0')||'%'   WK5_COS_QTY" ).append("\n"); 
		query.append("    ,'' WK5_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK5_KKL_QTY,0,0,A.WK5_KKL_QTY/B.WK5_KKL_QTY*100),'9,990.0')||'%'   WK5_KKL_QTY" ).append("\n"); 
		query.append("    ,'' WK5_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK5_YML_QTY,0,0,A.WK5_YML_QTY/B.WK5_YML_QTY*100),'9,990.0')||'%'   WK5_YML_QTY" ).append("\n"); 
		query.append("    ,'' WK5_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK5_OTH_QTY,0,0,A.WK5_OTH_QTY/B.WK5_OTH_QTY*100),'9,990.0')||'%'   WK5_OTH_QTY" ).append("\n"); 
		query.append("    ,'' WK5_OTH_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.WK5_POL_QTY,0,0,A.WK5_POL_QTY/B.WK5_POL_QTY*100),'9,990.0')||'%'   WK5_POL_QTY" ).append("\n"); 
		query.append("    ,'' WK5_POL_WGT" ).append("\n"); 
		query.append("                                                                   " ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.GTL_HJS_QTY,0,0,A.GTL_HJS_QTY/B.GTL_HJS_QTY*100),'9,990.0')||'%'   GTL_HJS_QTY" ).append("\n"); 
		query.append("    ,'' GTL_HJS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.GTL_COS_QTY,0,0,A.GTL_COS_QTY/B.GTL_COS_QTY*100),'9,990.0')||'%'   GTL_COS_QTY" ).append("\n"); 
		query.append("    ,'' GTL_COS_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.GTL_KKL_QTY,0,0,A.GTL_KKL_QTY/B.GTL_KKL_QTY*100),'9,990.0')||'%'   GTL_KKL_QTY" ).append("\n"); 
		query.append("    ,'' GTL_KKL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.GTL_YML_QTY,0,0,A.GTL_YML_QTY/B.GTL_YML_QTY*100),'9,990.0')||'%'   GTL_YML_QTY" ).append("\n"); 
		query.append("    ,'' GTL_YML_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.GTL_OTH_QTY,0,0,A.GTL_OTH_QTY/B.GTL_OTH_QTY*100),'9,990.0')||'%'   GTL_OTH_QTY" ).append("\n"); 
		query.append("    ,'' GTL_POL_WGT" ).append("\n"); 
		query.append("    ,TO_CHAR(DECODE(B.GTL_POL_QTY,0,0,A.GTL_POL_QTY/B.GTL_POL_QTY*100),'9,990.0')||'%'   GTL_POL_QTY" ).append("\n"); 
		query.append("    ,'' GTL_POL_WGT" ).append("\n"); 
		query.append("FROM LV_QTY_FORM A, LV_QTY_FORM B" ).append("\n"); 
		query.append("WHERE (A.KB||A.GRP_ID) IN('100011','101111','111111') -- QTY" ).append("\n"); 
		query.append("AND   (B.KB||B.GRP_ID) IN('200011','201111','211111') -- BSA" ).append("\n"); 
		query.append("AND   B.SEQ = A.SEQ + (5 * B.CNT)" ).append("\n"); 
		query.append("ORDER BY SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("	 A.LVL LVL0" ).append("\n"); 
		query.append("    ,DECODE(A.LVL,1,1,2,2,0) LVL" ).append("\n"); 
		query.append("    ,A.SEQ+1 SEQ" ).append("\n"); 
		query.append("	,A.GRP_ID" ).append("\n"); 
		query.append("	,A.TRD_CD" ).append("\n"); 
		query.append("	,A.SUB_TRD_CD" ).append("\n"); 
		query.append("	,A.DIR_CD" ).append("\n"); 
		query.append("	#if (${vvd} != '') " ).append("\n"); 
		query.append("	    ,NVL(A.SUB_RLANE_CD,'-')	-- 6" ).append("\n"); 
		query.append("	#else " ).append("\n"); 
		query.append("		#if (${subtrade} != '' && ${rlane_cd} == '' && ${pol_cd} == '') " ).append("\n"); 
		query.append("		    ,NVL(DECODE(A.GRP_ID,'01100',A.SUB_RLANE_CD||' TTL', '01101',A.SUB_RLANE_CD||' TTL','01111',A.SUB_RLANE_CD||' TTL',    A.SUB_RLANE_CD),'-')	--1" ).append("\n"); 
		query.append("		#elseif (${subtrade} != '' && ${rlane_cd} != '' && ${pol_cd} == '') " ).append("\n"); 
		query.append("			,NVL(A.SUB_RLANE_CD,'-')	--2" ).append("\n"); 
		query.append("		#elseif ( ${subtrade} == '' && ${rlane_cd} == '' && ${pol_cd} != '' ) " ).append("\n"); 
		query.append("			,NVL(DECODE(A.GRP_ID,'11101',A.TRD_CD||' TTL',A.SUB_RLANE_CD),A.TRD_CD||' TTL')	--3" ).append("\n"); 
		query.append("		#elseif ( ${subtrade} != '' && ${rlane_cd} == '' && ${pol_cd} != '' ) " ).append("\n"); 
		query.append("			--,NVL(DECODE(A.GRP_ID,'0101',A.SUB_RLANE_CD||' TTL',A.SUB_RLANE_CD),'')	--4" ).append("\n"); 
		query.append("			,NVL(DECODE(A.GRP_ID,'01100',A.SUB_TRD_CD||' TTL','01101',A.SUB_TRD_CD||' TTL',A.SUB_RLANE_CD),A.TRD_CD||' TTL')	--4" ).append("\n"); 
		query.append("		#elseif ( ${subtrade} != ''  && ${rlane_cd} != '' && ${pol_cd} != '') " ).append("\n"); 
		query.append("			,NVL(A.SUB_RLANE_CD,'-')	--5" ).append("\n"); 
		query.append("		#else " ).append("\n"); 
		query.append("			,CASE WHEN A.GRP_ID LIKE '01%' THEN " ).append("\n"); 
		query.append("			    A.SUB_RLANE_CD||' TTL' " ).append("\n"); 
		query.append("             WHEN A.GRP_ID LIKE '11%' THEN " ).append("\n"); 
		query.append("			    A.TRD_CD||' TTL' 				    " ).append("\n"); 
		query.append("			 ELSE " ).append("\n"); 
		query.append("			    A.SUB_RLANE_CD" ).append("\n"); 
		query.append("			 END " ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("	#end SUB_RLANE_CD" ).append("\n"); 
		query.append("    #if (${polpod_flg} == 'POL')" ).append("\n"); 
		query.append("    	,NVL(A.POL,'-') POL" ).append("\n"); 
		query.append("    	,DECODE(A.LVL,NULL,'',A.POD) POD" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("	    ,NVL(A.POD,'-')  POD" ).append("\n"); 
		query.append("    	,DECODE(A.LVL,NULL,'',A.POL) POL" ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("	,NVL(A.BSA,0) BSA" ).append("\n"); 
		query.append("	,TRIM(A.WK1_HJS_QTY) WK1_HJS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_HJS_WGT) WK1_HJS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_COS_QTY) WK1_COS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_COS_WGT) WK1_COS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_KKL_QTY) WK1_KKL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_KKL_WGT) WK1_KKL_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_YML_QTY) WK1_YML_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_YML_WGT) WK1_YML_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_OTH_QTY) WK1_OTH_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_OTH_WGT) WK1_OTH_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_POL_QTY) WK1_POL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK1_POL_WGT) WK1_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TRIM(A.WK2_HJS_QTY) WK2_HJS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_HJS_WGT) WK2_HJS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_COS_QTY) WK2_COS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_COS_WGT) WK2_COS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_KKL_QTY) WK2_KKL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_KKL_WGT) WK2_KKL_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_YML_QTY) WK2_YML_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_YML_WGT) WK2_YML_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_OTH_QTY) WK2_OTH_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_OTH_WGT) WK2_OTH_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_POL_QTY) WK2_POL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK2_POL_WGT) WK2_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TRIM(A.WK3_HJS_QTY) WK3_HJS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_HJS_WGT) WK3_HJS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_COS_QTY) WK3_COS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_COS_WGT) WK3_COS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_KKL_QTY) WK3_KKL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_KKL_WGT) WK3_KKL_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_YML_QTY) WK3_YML_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_YML_WGT) WK3_YML_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_OTH_QTY) WK3_OTH_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_OTH_WGT) WK3_OTH_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_POL_QTY) WK3_POL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK3_POL_WGT) WK3_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TRIM(A.WK4_HJS_QTY) WK4_HJS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_HJS_WGT) WK4_HJS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_COS_QTY) WK4_COS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_COS_WGT) WK4_COS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_KKL_QTY) WK4_KKL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_KKL_WGT) WK4_KKL_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_YML_QTY) WK4_YML_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_YML_WGT) WK4_YML_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_OTH_QTY) WK4_OTH_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_OTH_WGT) WK4_OTH_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_POL_QTY) WK4_POL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK4_POL_WGT) WK4_POL_WGT" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ,TRIM(A.WK5_HJS_QTY) WK5_HJS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_HJS_WGT) WK5_HJS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_COS_QTY) WK5_COS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_COS_WGT) WK5_COS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_KKL_QTY) WK5_KKL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_KKL_WGT) WK5_KKL_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_YML_QTY) WK5_YML_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_YML_WGT) WK5_YML_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_OTH_QTY) WK5_OTH_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_OTH_WGT) WK5_OTH_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_POL_QTY) WK5_POL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.WK5_POL_WGT) WK5_POL_WGT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_HJS_QTY) GTL_HJS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_HJS_WGT) GTL_HJS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_COS_QTY) GTL_COS_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_COS_WGT) GTL_COS_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_KKL_QTY) GTL_KKL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_KKL_WGT) GTL_KKL_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_YML_QTY) GTL_YML_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_YML_WGT) GTL_YML_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_OTH_QTY) GTL_OTH_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_OTH_WGT) GTL_OTH_WGT" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_POL_QTY) GTL_POL_QTY" ).append("\n"); 
		query.append("    ,TRIM(A.GTL_POL_WGT) GTL_POL_WGT" ).append("\n"); 
		query.append("FROM LV_TOTAL_QTY A" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("#if (${vvd} != '') " ).append("\n"); 
		query.append("    AND A.GRP_ID LIKE '00%'	-- 6" ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("	#if (${subtrade} != '' && ${rlane_cd} == '' && ${pol_cd} == '') " ).append("\n"); 
		query.append("	    AND A.GRP_ID LIKE '00%' OR A.GRP_ID LIKE '01%'	-- 1" ).append("\n"); 
		query.append("	#elseif (${subtrade} != '' && ${rlane_cd} != '' && ${pol_cd} == '') " ).append("\n"); 
		query.append("		AND A.GRP_ID LIKE '00%'    -- 2" ).append("\n"); 
		query.append("	#elseif ( ${subtrade} == '' && ${rlane_cd} == '' && ${pol_cd} != '' ) " ).append("\n"); 
		query.append("		--AND A.GRP_ID LIKE '11%'	-- 3" ).append("\n"); 
		query.append("		AND A.GRP_ID NOT IN ('00011','01111','11111')" ).append("\n"); 
		query.append("	#elseif ( ${subtrade} != '' && ${rlane_cd} == '' && ${pol_cd} != '' ) " ).append("\n"); 
		query.append("		--AND A.GRP_ID LIKE '01%'	-- 4" ).append("\n"); 
		query.append("		--AND A.LVL IN (1,2)" ).append("\n"); 
		query.append("		AND A.GRP_ID NOT IN ('00011','01111','11111')" ).append("\n"); 
		query.append("	#elseif ( ${subtrade} != ''  && ${rlane_cd} != '' && ${pol_cd} != '') " ).append("\n"); 
		query.append("		AND A.GRP_ID LIKE '00%'	-- 5" ).append("\n"); 
		query.append("		AND A.GRP_ID NOT IN ('00011','01111','11111')" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("ORDER BY TRD_CD" ).append("\n"); 
		query.append("        ,DECODE(A.SUB_TRD_CD,NULL,'1',A.SUB_TRD_CD) DESC" ).append("\n"); 
		query.append("        ,DECODE(A.BSA,NULL,0,A.BSA) DESC" ).append("\n"); 
		query.append("        ,SUB_RLANE_CD" ).append("\n"); 
		query.append("        ,SEQ" ).append("\n"); 

	}
}