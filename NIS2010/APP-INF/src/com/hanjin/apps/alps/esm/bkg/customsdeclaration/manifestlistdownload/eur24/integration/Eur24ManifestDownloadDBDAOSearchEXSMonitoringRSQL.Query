<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="Eur24ManifestDownloadDBDAOSearchEXSMonitoringRSQL">
			<desc><![CDATA[EXS Monitoring 화면을 조회하는 쿼리]]></desc>
			<sql><![CDATA[
SELECT J.VVD
     , J.LANE
     , J.EU_POL
     , J.BKG_POL
     , J.OFC_CD
     , J.BL_TOT_CNT
     , J.EXS_SNT_CNT
     , J.EXS_SNT_ACCP
     , J.EXS_SNT_REJT
     , J.EXS_SNT_DONL
     , J.EXS_SNT_NRCV
     , J.EXS_SNT_HOLD
     , J.EXS_SNT_RELS
     , J.EXS_UNSNT_CNT
     , J.EXS_AMD_CNT
     , SUM(NVL(EXS_SNT_CNT, 0)) OVER() AS SENT_BL_CNT 
     , SUM(NVL(EXS_SNT_ACCP, 0)) OVER() AS ACC_BL_CNT 
     , SUM(NVL(EXS_SNT_REJT, 0)) OVER() AS REJ_BL_CNT 
     , SUM(NVL(EXS_SNT_DONL, 0)) OVER() AS DONLD_BL_CNT 
     , SUM(NVL(EXS_SNT_NRCV, 0)) OVER() AS NRCV_BL_CNT
     , SUM(NVL(EXS_SNT_HOLD, 0)) OVER() AS HOLD_BL_CNT
     , SUM(NVL(EXS_SNT_RELS, 0)) OVER() AS RELS_BL_CNT
     , SUM(NVL(EXS_UNSNT_CNT, 0)) OVER() AS UNSENT_BL_CNT 
     , SUM(NVL(BL_TOT_CNT, 0)) OVER() AS TOTAL_BL_CNT 
     , COUNT(DISTINCT VVD) OVER() AS TOTAL_VVD_CNT
     , SUM(NVL(EXS_AMD_CNT, 0)) OVER() AS TOTAL_AMD_CNT
FROM (

    SELECT J1.VVD
         , J1.LANE
         , J1.EU_POL
         , J1.BKG_POL
         , J1.OFC_CD 
    
         , COUNT(J1.VSL_CD) AS BL_TOT_CNT 
         , COUNT(J1.MSG_SND_NO) AS EXS_SNT_CNT
         , COUNT(DECODE(BKG_GET_TOKEN_FNC(RCV,3), 'A', 1)) AS EXS_SNT_ACCP
         , COUNT(CASE WHEN BKG_GET_TOKEN_FNC(RCV,3) = 'R' AND BKG_GET_TOKEN_FNC(RCV,5) !='351' THEN '1' END) AS EXS_SNT_REJT
         , COUNT(CASE WHEN BKG_GET_TOKEN_FNC(RCV,3) = 'R' AND BKG_GET_TOKEN_FNC(RCV,5) ='351' THEN '1' END) AS EXS_SNT_DONL
         , COUNT(DECODE(J1.MSG_SND_NO, NULL, NULL, DECODE(BKG_GET_TOKEN_FNC(RCV,3), NULL, 1))) AS EXS_SNT_NRCV

         , COUNT(CASE WHEN BKG_GET_TOKEN_FNC(RCV,5) = '561' OR BKG_GET_TOKEN_FNC(RCV,3) = 'D' OR BKG_GET_TOKEN_FNC(RCV,3) = 'P'
                      THEN 1
                 END) AS EXS_SNT_HOLD
         , COUNT(DECODE(BKG_GET_TOKEN_FNC(RCV,3), 'L', 1)) AS EXS_SNT_RELS
         
         , COUNT(J1.VSL_CD)-COUNT(J1.MSG_SND_NO) AS EXS_UNSNT_CNT
         , COUNT(DECODE(SUBSTR(J1.MSG_SND_NO, 18, 3), '613', J1.MSG_SND_NO, NULL)) AS EXS_AMD_CNT

    FROM (
    
        SELECT 
               T1.VSL_CD
             , T1.SKD_VOY_NO
             , T1.SKD_DIR_CD 
             , T1.VSL_SLAN_CD	AS LANE
             , T1.POL_YD_CD		AS EU_POL
             , T1.BKG_POL
             , T1.OFC_CD
             , T1.BL_NO
             , T1.EU_BL_NO
             , T1.MSG_SND_NO
             , T1.VVD
             
              , ( SELECT EDI_RCV_DT||','||EDI_RCV_SEQ||','|| ACK_RCV_STS_CD||','|| TO_CHAR(CRE_DT, 'YYYY-MM-DD HH24:MI')||','||EUR_CSTMS_ACK_CD||','||ACK_KND_ID
                     FROM BKG_CSTMS_EUR_IO_RCV
                    WHERE BND_TP_CD = 'O'
                      AND EDI_RCV_DT > ' '
                      AND EDI_RCV_SEQ > 0
                      AND RCV_TMS = ( SELECT MAX(RCV_TMS)
                                        FROM BKG_CSTMS_EUR_IO_RCV RCV
                                       WHERE RCV.BND_TP_CD = 'O'
                                         AND RCV.EDI_RCV_DT > ' '
                                         AND RCV.EDI_RCV_SEQ > 0
                                         AND RCV.MSG_RCV_NO = T1.MSG_SND_NO 
                                         AND (RCV.ACK_KND_ID != 'S' OR RCV.ACK_RCV_STS_CD != 'A') ) ) RCV
        FROM (
        
            SELECT EU_BL.BL_NO AS EU_BL_NO
                    , EU_BL.MSG_SND_NO
                    , BKG.VSL_CD || BKG.SKD_VOY_NO || BKG.SKD_DIR_CD VVD
                    , BKG.*

            FROM (
            
                SELECT VVD.VSL_CD
                     , VVD.SKD_VOY_NO
                     , VVD.SKD_DIR_CD 
                     , SKD.VSL_SLAN_CD
                     , VVD.POL_CD
                     , VVD.POL_YD_CD
                     , BKG.POL_CD       AS BKG_POL
                     , BKG.BL_NO
                     
                     #if (${p_rhq_gb} == 'BO')
                        , BKG.BKG_OFC_CD AS OFC_CD
                     #else
                        , MDM_LOC.EQ_CTRL_OFC_CD AS OFC_CD
                     #end

                     , BKG.BKG_OFC_CD
                     , MDM_LOC.EQ_CTRL_OFC_CD
                     
                  FROM BKG_VVD VVD
                     , VSK_VSL_SKD SKD
                     , BKG_BOOKING BKG
                     , VSK_VSL_PORT_SKD VSK
                     , BKG_CSTMS_CD_CONV_CTNT EU_CNT
                     , MDM_LOCATION MDM_LOC
                     
                 WHERE 1=1
                   AND VVD.VSL_CD = SKD.VSL_CD
                   AND VVD.SKD_VOY_NO = SKD.SKD_VOY_NO
                   AND VVD.SKD_DIR_CD = SKD.SKD_DIR_CD
                   AND BKG.BKG_NO = VVD.BKG_NO
                   AND BKG.BKG_STS_CD != 'X'

                   AND BKG.BKG_STS_CD IN ('F', 'W')
                   AND BKG.BKG_CGO_TP_CD IN ('F', 'R')

                   AND VVD.VSL_CD = VSK.VSL_CD
                   AND VVD.SKD_VOY_NO = VSK.SKD_VOY_NO
                   AND VVD.SKD_DIR_CD = VSK.SKD_DIR_CD
                   AND VVD.POL_CD = VSK.VPS_PORT_CD
                   AND VVD.POL_YD_CD = VSK.YD_CD
                   AND VVD.POD_CLPT_IND_SEQ = VSK.CLPT_IND_SEQ
                   
                   AND EU_CNT.CSTMS_DIV_ID = 'EU_MEMBER_CNT'
                   AND EU_CNT.CNT_CD = 'EU'
                   AND EU_CNT.DELT_FLG = 'N'
                   AND VSK.VPS_PORT_CD LIKE EU_CNT.ATTR_CTNT1 || '%'
                   
                   AND VVD.POL_CD = MDM_LOC.LOC_CD(+)


                   #if (${p_from_dt} != '')
                   		AND VSK.VPS_ETB_DT >= TO_DATE(REPLACE(@[p_from_dt],'-','')||' ' ||NVL(@[p_from_mt],'00:00') ,'YYYYMMDD HH24:MI')
				   #end
				   #if (${p_to_dt} != '')
                   		AND VSK.VPS_ETB_DT <= TO_DATE(REPLACE(@[p_to_dt],'-','')||' ' ||NVL(@[p_to_mt],'59:59'),'YYYYMMDD HH24:MI')
				   #end
                   
                   
                   #if (${p_pol} != '')				-- EU POL
                        AND VVD.POL_YD_CD LIKE @[p_pol]||'%'
                   #end
                   

                   #if (${p_b_ofc_cd} != '')		-- POL OFC / BKG_OFC
                        #if (${p_rhq_gb} == 'BO')
                            AND BKG.BKG_OFC_CD = @[p_b_ofc_cd]
                        #elseif (${p_rhq_gb} == 'PO')
                            AND MDM_LOC.EQ_CTRL_OFC_CD = @[p_b_ofc_cd] 
                        #end
                   #end
                   
                   
                   #if (${p_vvd} != '')				-- VVD
                        AND VVD.VSL_CD = SUBSTR(@[p_vvd], 1, 4)
                        AND VVD.SKD_VOY_NO = SUBSTR(@[p_vvd], 5, 4)
                        AND VVD.SKD_DIR_CD = SUBSTR(@[p_vvd], 9, 1)
                   #end
                   
                   
                   #if (${cond_lane} != '')			-- LANE
                        AND SKD.VSL_SLAN_CD = @[cond_lane]
                   #end
          
                ) BKG
                , BKG_CSTMS_EUR_IO_BL EU_BL
            WHERE 1=1
              AND BKG.BL_NO = EU_BL.BL_NO(+)    
              AND BKG.VSL_CD = EU_BL.VSL_CD(+)
              AND BKG.SKD_VOY_NO = EU_BL.SKD_VOY_NO(+)
              AND BKG.SKD_DIR_CD = EU_BL.SKD_DIR_CD(+)
              AND BKG.POL_CD = EU_BL.CSTMS_PORT_CD(+)
              AND EU_BL.BND_TP_CD(+) = 'O'
              ) T1
        ) J1
    GROUP BY J1.VVD, J1.LANE, J1.EU_POL, J1.BKG_POL, J1.OFC_CD

    ) J
 WHERE 1=1
ORDER BY VVD, LANE, EU_POL, BKG_POL, OFC_CD			]]></sql>
			<params>
				<param name="p_from_dt" type="12" value="" out="N"/>
				<param name="p_from_mt" type="12" value="" out="N"/>
				<param name="p_to_dt" type="12" value="" out="N"/>
				<param name="p_to_mt" type="12" value="" out="N"/>
				<param name="p_pol" type="12" value="" out="N"/>
				<param name="p_b_ofc_cd" type="12" value="" out="N"/>
				<param name="p_vvd" type="12" value="" out="N"/>
				<param name="cond_lane" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
