<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CMSummaryDBDAORsltPrsProposalSummaryRevenueDetailVORSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
WITH
#if (${frm_contract_type} != 'R') 
 VW_MAIN_NEW_SET AS (
	SELECT	  /*+ MATERIALIZE LEADING(DUR)  */ 
		 MN.PROP_OFC_CD
		, M_ORG.OFC_ENG_NM  AS PROP_OFC_NM--  AS PROP_OFC_NM -- REQUEST OFFICE
		, NVL(MN.REAL_CUST_CNT_CD,PTY.CUST_CNT_CD ) AS CUST_CNT_CD
		, NVL(MN.REAL_CUST_SEQ, PTY.CUST_SEQ ) AS CUST_SEQ
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT
		, (TO_DATE(TO_CHAR(CTRT_EXP_DT,'YYYYMMDD'),'YYYYMMDD')- TO_DATE(TO_CHAR(CTRT_EFF_DT,'YYYYMMDD'),'YYYYMMDD')) / 7 AS WEEK_NEW	-- WEEK(NEW)
		, DECODE( MN.REAL_CUST_CNT_CD, NULL, PTY.CTRT_PTY_NM, (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = MN.REAL_CUST_CNT_CD AND CUST_SEQ =MN.REAL_CUST_SEQ  )) AS CTRT_PTY_NM -- CTRT_PTY_NM/ CUSTOMER NAME
		, SCP_MN.SVC_SCP_CD
	FROM	PRI_SP_MN MN
		, PRI_SP_CTRT_PTY PTY
		, PRI_SP_SCP_DUR DUR
		, PRI_SP_SCP_MN SCP_MN
		, MDM_ORGANIZATION M_ORG
		, PRI_SP_CTRT_CUST_TP CTP
	WHERE	MN.PROP_OFC_CD = M_ORG.OFC_CD
		AND MN.PROP_NO = PTY.PROP_NO
		AND MN.AMDT_SEQ = PTY.AMDT_SEQ
		AND PTY.PRC_CTRT_PTY_TP_CD = 'C'
		AND SCP_MN.AMDT_SEQ = 0
		AND MN.PROP_NO = DUR.PROP_NO
		AND MN.AMDT_SEQ = DUR.AMDT_SEQ
		AND MN.PROP_NO = SCP_MN.PROP_NO
		AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ
		AND MN.PROP_NO = CTP.PROP_NO
		AND MN.AMDT_SEQ = CTP.AMDT_SEQ
		AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD
		AND CTP.PRC_CTRT_PTY_TP_CD = 'C'
		AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')

	#if(${frm_customer_type} == 'B')
				AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O')
	#elseif(${frm_customer_type} == 'N')
				AND CTP.PRC_CTRT_CUST_TP_CD IN ('N')
	#else 
			AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
	#end

	#if(${frm_prop_ofc_cd} != '')
				AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd]
	#end

	#if(${frm_prop_srep_cd} != '')
				AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]
	#end

	#if(${frm_prop_apro_ofc_cd} != '')
				AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
	#end



	#if(${frm_ctrt_eff_dt} != '' )
		AND DUR.CTRT_EFF_DT >= TO_DATE(@[frm_ctrt_eff_dt],'YYYY-MM-DD')
	#end
	#if ( ${frm_ctrt_exp_dt} != '' )
		AND DUR.CTRT_EXP_DT  <= TO_DATE(@[frm_ctrt_exp_dt],'YYYY-MM-DD') 
	#end

	#if(${frm_svc_scp_cd} != '' )
				AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]
	#end
			-- STATUS
	#if (${frm_status} == 'Q') 
				AND  MN.PROP_STS_CD IN ( 'I', 'Q', 'R' ) /* REQUESTED */
	#elseif(${frm_status} == 'A') 
				AND  MN.PROP_STS_CD IN ( 'A' ,'F') /* APPROVED */
	#end


	#if( $cust_list.size() != 0 ) 
		AND (PTY.CUST_CNT_CD , PTY.CUST_SEQ) IN (
		#foreach( ${key} in ${cust_list}) 
			#if($velocityCount != 1 ) 
				UNION ALL
			#end
			SELECT 
					substr('$key',1,2),substr('$key',3)
			FROM DUAL
		#end
		)
	#end 
		-- STATUS
	GROUP BY MN.PROP_OFC_CD,M_ORG.OFC_ENG_NM , MN.REAL_CUST_CNT_CD,PTY.CUST_CNT_CD,MN.REAL_CUST_SEQ, PTY.CUST_SEQ,PTY.CTRT_PTY_NM, MN.PROP_NO, MN.AMDT_SEQ, SCP_MN.SVC_SCP_CD, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT

),
VW_NEW_DATA AS (
	SELECT  /*+ MATERIALIZE */ PROP_OFC_CD
		, PROP_OFC_NM
		, PROP_NO
		, AMDT_SEQ
		, CUST_CNT_CD
		, CUST_SEQ
		, CTRT_EFF_DT
		, CTRT_EXP_DT
		, CTRT_PTY_NM						-- CUSTOMER NAME
		, G_REV							-- GROSS REVENUE

		, LOAD_NEW              -- LOAD(NEW)
		, BUC_SCG_AMT
		, IFC_SCG_AMT
		, PSC_SCG_AMT
		, OTHERS_SCG_AMT
		, OFT_AMT
	FROM (
		SELECT
			PROP_OFC_CD
			, MAX(PROP_OFC_NM) AS PROP_OFC_NM -- REQUEST OFFICE
			, PROP_NO
			, AMDT_SEQ
			, CUST_CNT_CD
			, CUST_SEQ
			, CTRT_EFF_DT, CTRT_EXP_DT
			, MAX(CTRT_PTY_NM) AS CTRT_PTY_NM								-- CUSTOMER NAME
			, SUM((PROP_FRT_RT_AMT + PRS_SCG_AMT)*PRS_ESTM_LOD_QTY_FOR_RATE) AS G_REV						-- GROSS REVENUE
			, SUM(PRS_ESTM_LOD_QTY / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1)) AS LOAD_NEW-- LOAD(NEW)
			, SUM(BUC_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS BUC_SCG_AMT
			, SUM(IFC_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS IFC_SCG_AMT
			, SUM(PSC_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS PSC_SCG_AMT
			, SUM(OTHERS_SCG_AMT *PRS_ESTM_LOD_QTY_FOR_RATE) AS OTHERS_SCG_AMT
			, SUM(PROP_FRT_RT_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS OFT_AMT
		FROM (
			SELECT	
				MAX(MN.PROP_OFC_CD ) AS PROP_OFC_CD
				, MAX(MN.PROP_OFC_NM) AS PROP_OFC_NM --  AS PROP_OFC_NM -- REQUEST OFFICE
				, MAX(MN.CUST_CNT_CD) AS CUST_CNT_CD
				, MAX(MN.CUST_SEQ) AS CUST_SEQ
				, MAX(MN.PROP_NO) AS PROP_NO
				, MAX(MN.AMDT_SEQ) AS AMDT_SEQ
				, MAX(MN.CTRT_EFF_DT) AS CTRT_EFF_DT, MAX(MN.CTRT_EXP_DT) AS CTRT_EXP_DT
				, MAX(MN.CTRT_PTY_NM) AS  CTRT_PTY_NM-- CTRT_PTY_NM								-- CUSTOMER NAME
				, MAX(RT.PROP_FRT_RT_AMT) AS PROP_FRT_RT_AMT
				, MAX(RT.PRS_SCG_AMT) AS PRS_SCG_AMT
				, MAX(CMDT_ROUT.PRS_ESTM_LOD_QTY )  AS PRS_ESTM_LOD_QTY -- LOAD(NEW)

				, SUM( 
						CASE WHEN SCG.CHG_CD= 'BUC' OR SCG.CHG_CD = 'BAF' OR SCG.CHG_CD = 'FRC' THEN
							SCG.ADJ_SCG_USD_AMT 
						ELSE 
							0
						END
					) AS BUC_SCG_AMT
				, SUM( 
						CASE WHEN SCG.CHG_CD= 'IFC' OR SCG.CHG_CD = 'IRF' OR SCG.CHG_CD = 'IFM' THEN
							SCG.ADJ_SCG_USD_AMT 
						ELSE 
							0
						END
					) AS IFC_SCG_AMT
				, SUM( 
						CASE WHEN SCG.CHG_CD= 'PSC' OR SCG.CHG_CD = 'PSS' THEN
							SCG.ADJ_SCG_USD_AMT 
						ELSE 
							0
						END
					) AS PSC_SCG_AMT
				, SUM(CASE WHEN SCG.CHG_CD <> 'BUC' AND SCG.CHG_CD <> 'BAF' AND SCG.CHG_CD <> 'FRC' 
								AND SCG.CHG_CD <> 'IFC' AND SCG.CHG_CD <> 'IRF' AND SCG.CHG_CD <> 'IFM'
								AND SCG.CHG_CD <> 'PSC' AND SCG.CHG_CD <> 'PSS'
					THEN SCG.ADJ_SCG_USD_AMT
					ELSE
						0
					END)  AS OTHERS_SCG_AMT    --  CM_NEW_OP_TRADE
				, MAX(CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' 
						THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  
	       				ELSE	
							 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2
	       		  END )  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  
			FROM	VW_MAIN_NEW_SET MN
				, PRI_SP_SCP_RT_CMDT_ROUT CMDT_ROUT
				, PRI_SP_SCP_RT RT
				, PRI_SP_SCP_RT_SCG SCG

#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_MAIN_NEW_SET MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_MAIN_NEW_SET MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
#if( $slane_list.size() != 0 ) 
				,(
					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.GEN_SPCL_RT_TP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ
					FROM VW_MAIN_NEW_SET MN_SET
						, PRI_SP_SCP_RT RT
					WHERE MN_SET.PROP_NO = RT.PROP_NO
						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ
						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD
	#if( $slane_list.size() != 0 ) 
		AND (RT.VSL_SLAN_CD) IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
				) SLANE
#end
			WHERE	 MN.PROP_NO = CMDT_ROUT.PROP_NO
				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ
				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD

#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = ORI_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = DEST_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
#if( $slane_list.size() != 0 ) 
				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = SLANE.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ
#end
-- BY CARGO TYPE
				#if (${crg_tp_str} != '' )
					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
				#end

				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)
				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)
				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = RT.GEN_SPCL_RT_TP_CD(+)
				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)
				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)
				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)
				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)

				AND RT.PROP_NO = SCG.PROP_NO(+)
				AND RT.AMDT_SEQ = SCG.AMDT_SEQ(+)
				AND RT.SVC_SCP_CD = SCG.SVC_SCP_CD(+)
				AND RT.GEN_SPCL_RT_TP_CD = SCG.GEN_SPCL_RT_TP_CD(+)
				AND RT.CMDT_HDR_SEQ =  SCG.CMDT_HDR_SEQ(+)
				AND RT.ROUT_SEQ  = SCG.ROUT_SEQ(+)
				AND RT.RT_SEQ = SCG.RT_SEQ(+)

			GROUP BY CMDT_ROUT.PROP_NO 
				 ,CMDT_ROUT.AMDT_SEQ
				 ,CMDT_ROUT.SVC_SCP_CD
				 ,CMDT_ROUT.GEN_SPCL_RT_TP_CD
				 ,CMDT_ROUT.CMDT_HDR_SEQ
				 ,CMDT_ROUT.ROUT_SEQ
				 ,RT.RT_SEQ  
	  
			


		)
		GROUP BY PROP_OFC_CD,CUST_CNT_CD,CUST_SEQ, PROP_NO, AMDT_SEQ, CTRT_EFF_DT, CTRT_EXP_DT
	)
) ,
VW_PRE_CONDITION AS (
	SELECT  /*+ MATERIALIZE */  'S' AS CTRT_TP_CD, OLD_PROP_NO, OLD_AMDT_SEQ, SVC_SCP_CD, SUBSTR(SC_NO, 17, 37) AS SC_NO ,SUBSTR(SC_NO, 1, 8) AS CTRT_EXP_DT,SUBSTR(SC_NO, 9, 8)
	FROM (
		SELECT /*+ ORDERED USE_HASH(M H D S) FULL(S) */  OLD_PROP_NO, OLD_AMDT_SEQ, S.SVC_SCP_CD, MAX(TO_CHAR(D.CTRT_EXP_DT, 'YYYYMMDD')||TO_CHAR(D.CTRT_EFF_DT, 'YYYYMMDD')||H.SC_NO) SC_NO
		FROM (SELECT  /*+ ORDERED USE_HASH(NW C M) INDEX_FFS(C XZK99PRI_SP_CTRT_PTY) */      
				M.PROP_NO, MAX(M.AMDT_SEQ) AS AMDT_SEQ
				,NW.PROP_NO AS OLD_PROP_NO, NW.AMDT_SEQ AS OLD_AMDT_SEQ
			FROM  VW_MAIN_NEW_SET NW, PRI_SP_CTRT_PTY C, PRI_SP_MN M 
			WHERE  M.PROP_NO = C.PROP_NO
				AND  M.AMDT_SEQ = C.AMDT_SEQ
                AND  NVL(M.REAL_CUST_CNT_CD,C.CUST_CNT_CD) = NW.CUST_CNT_CD
                AND  NVL(M.REAL_CUST_SEQ,C.CUST_SEQ)    = NW.CUST_SEQ
				AND  C.PRC_CTRT_PTY_TP_CD = 'C'
				AND  M.PROP_STS_CD IN ( 'F' ) 
			    AND  NW.PROP_NO <>  M.PROP_NO
				 AND  ROWNUM >=1
			GROUP BY M.PROP_NO, NW.PROP_NO, NW.AMDT_SEQ     ) M,
			PRI_SP_HDR H,
			PRI_SP_DUR D,
			PRI_SP_SCP_MN S
		WHERE H.PROP_NO  = M.PROP_NO
			AND M.PROP_NO  = D.PROP_NO
			AND M.AMDT_SEQ = D.AMDT_SEQ
			AND M.PROP_NO  = S.PROP_NO
			AND M.AMDT_SEQ = S.AMDT_SEQ
			AND S.SVC_SCP_CD =  @[frm_svc_scp_cd]
			AND H.SC_NO is not null
		GROUP BY OLD_PROP_NO, OLD_AMDT_SEQ, S.SVC_SCP_CD
	)
),
VW_PREVIOUS AS (
	SELECT	/*+ MATERIALIZE ORDERED */ VC.OLD_PROP_NO,VC.OLD_AMDT_SEQ
		, SUM(SR_CST_DTL.PRS_CRNT_LOD_QTY  / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) )      AS LOAD_PREVIOUS            -- Load(Previous)
		--, SUM(SR_CST_DTL.TEU_FRT_REV * SR_CST_DTL.PRS_CRNT_LOD_QTY)         AS G_REV_PREVIOUS            -- Gross Revenue(Previous)
		, SUM((SELECT NVL(SCG.SCG_AMT,0 )
		  		FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
		  		WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON              
					AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK            
					AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD    
					AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO       
					AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD        
					AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD   
					AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD            
					AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD        
					AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD          
					AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD     
					AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD     
					AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD    
					AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD    
					AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD  
					AND SCG.CHG_CD = 'OFT' ) * SR_CST_DTL.PRS_CRNT_LOD_QTY) AS OFT_AMT_PREVIOUS
		, SUM((SELECT NVL(SUM(SCG.SCG_AMT),0)
		  		FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
		  		WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON              
					AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK            
					AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD    
					AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO       
					AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD        
					AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD   
					AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD            
					AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD        
					AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD          
					AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD     
					AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD     
					AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD    
					AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD    
					AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD   
					AND (SCG.CHG_CD = 'BUC' OR SCG.CHG_CD = 'BAF' OR SCG.CHG_CD = 'FRC') ) * SR_CST_DTL.PRS_CRNT_LOD_QTY) AS BUC_SCG_AMT_PREVIOUS
		, SUM((SELECT NVL(SUM( SCG.SCG_AMT),0)
		  		FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
		  		WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON              
					AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK            
					AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD    
					AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO       
					AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD        
					AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD   
					AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD            
					AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD        
					AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD          
					AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD     
					AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD     
					AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD    
					AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD    
					AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD   
					AND (SCG.CHG_CD = 'IFC' OR SCG.CHG_CD = 'IFR' OR SCG.CHG_CD = 'IFM') ) * SR_CST_DTL.PRS_CRNT_LOD_QTY) AS IFC_SCG_AMT_PREVIOUS
		, SUM((SELECT NVL(SUM(SCG.SCG_AMT),0)
		  		FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
		  		WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON              
					AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK            
					AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD    
					AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO       
					AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD        
					AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD   
					AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD            
					AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD        
					AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD          
					AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD     
					AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD     
					AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD    
					AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD    
					AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD   
					AND (SCG.CHG_CD = 'PSC' OR SCG.CHG_CD = 'PSS') ) * SR_CST_DTL.PRS_CRNT_LOD_QTY) AS PSC_SCG_AMT_PREVIOUS
		, SUM((SELECT SUM(
							CASE WHEN SCG.CHG_CD <> 'BUC' AND SCG.CHG_CD <> 'BAF' AND SCG.CHG_CD <> 'FRC' 
								AND SCG.CHG_CD <> 'IFC' AND SCG.CHG_CD <> 'IRF' AND SCG.CHG_CD <> 'IFM'
								AND SCG.CHG_CD <> 'PSC' AND SCG.CHG_CD <> 'PSS' AND SCG.CHG_CD <> 'OFT'
							THEN SCG.SCG_AMT
							ELSE
								0
							END)
		  FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
		  WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON              
			AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK            
			AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD    
			AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO       
			AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD        
			AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD   
			AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD            
			AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD        
			AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD          
			AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD     
			AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD     
			AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD    
			AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD    
			AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD   ) * SR_CST_DTL.PRS_CRNT_LOD_QTY) AS OTHERS_SCG_AMT_PREVIOUS
	FROM VW_PRE_CONDITION VC
		, PRI_PRS_CTRT_SMRY SR_MN
		, PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL
	WHERE SR_MN.PRS_YRMON = SR_CST_DTL.PRS_YRMON
		AND SR_MN.PRC_CTRT_TP_CD = 'S' -- S/C
		AND SR_MN.PRS_WK = SR_CST_DTL.PRS_WK
		AND SR_MN.PRC_CTRT_TP_CD= VC.CTRT_TP_CD
		AND SR_MN.PRC_CTRT_NO    = VC.SC_NO
		AND SR_MN.PRC_CTRT_TP_CD= SR_CST_DTL.PRC_CTRT_TP_CD
		AND SR_MN.PRC_CTRT_NO   = SR_CST_DTL.PRC_CTRT_NO
		AND VC.SVC_SCP_CD       = SR_CST_DTL.SVC_SCP_CD

		-- BY CARGO TYPE
		#if (${crg_tp_str} != '' )
			AND SR_CST_DTL.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
		#end
#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND SR_CST_DTL.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND SR_CST_DTL.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
#if( $slane_list.size() != 0 ) 
		-- SLANE
	#if( $slane_list.size() != 0 ) 
		AND substr(SR_CST_DTL.RLANE_CD,0,3) IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 


#end
          
	GROUP BY VC.OLD_PROP_NO, VC.OLD_AMDT_SEQ

)

#end

#if (${frm_contract_type} == 'B') 
,
#end

#if (${frm_contract_type} != 'S') 
VW_RFA_MAIN_NEW_SET AS (

	SELECT	/*+ ORDERED USE_HASH(DUR MN HDR SCP_MN) INDEX_FFS(SCP_MN XPKPRI_RP_SCP_MN)*/     MN.PROP_OFC_CD
		, M_ORG.OFC_ENG_NM  AS PROP_OFC_NM--  AS PROP_OFC_NM -- REQUEST OFFICE
		, MN.CTRT_CUST_CNT_CD AS CUST_CNT_CD
		, MN.CTRT_CUST_SEQ AS CUST_SEQ
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT
		, (TO_DATE(TO_CHAR(CTRT_EXP_DT,'YYYYMMDD'),'YYYYMMDD')- TO_DATE(TO_CHAR(CTRT_EFF_DT,'YYYYMMDD'),'YYYYMMDD')) / 7 AS WEEK_NEW	-- WEEK(NEW)
		, CUST.CUST_LGL_ENG_NM AS CTRT_PTY_NM--PTY.CTRT_PTY_NM --  -- CUSTOMER NAME
		, SCP_MN.SVC_SCP_CD
	FROM	PRI_RP_SCP_DUR DUR
		, PRI_RP_MN MN
		, PRI_RP_HDR HDR
		, PRI_RP_SCP_MN SCP_MN
		, MDM_ORGANIZATION M_ORG
		, MDM_CUSTOMER CUST
	WHERE	MN.PROP_OFC_CD = M_ORG.OFC_CD
		AND MN.PROP_NO   = HDR.PROP_NO
		AND MN.AMDT_SEQ = 0
		AND MN.PROP_NO = DUR.PROP_NO
		AND MN.AMDT_SEQ = DUR.AMDT_SEQ
		AND MN.PROP_NO = SCP_MN.PROP_NO
		AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ
		AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD
		AND CUST.CUST_CNT_CD = MN.CTRT_CUST_CNT_CD
		AND CUST.CUST_SEQ = MN.CTRT_CUST_SEQ
 
		AND SCP_MN.SVC_SCP_CD =  @[frm_svc_scp_cd]
	#if(${frm_customer_type} == 'B')
				AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O')
	#elseif(${frm_customer_type} == 'N')
				AND MN.PRC_CTRT_CUST_TP_CD IN ('N')
	#else 
			AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
	#end

	#if(${frm_prop_ofc_cd} != '')
				AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd]
	#end

	#if(${frm_prop_srep_cd} != '')
				AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]
	#end

	#if(${frm_prop_apro_ofc_cd} != '')
				AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
	#end



	#if(${frm_ctrt_eff_dt} != '' )
		AND DUR.CTRT_EFF_DT >= TO_DATE(@[frm_ctrt_eff_dt],'YYYY-MM-DD')
	#end
	#if ( ${frm_ctrt_exp_dt} != '' )
		AND DUR.CTRT_EXP_DT  <= TO_DATE(@[frm_ctrt_exp_dt],'YYYY-MM-DD') 
	#end

	#if(${frm_svc_scp_cd} != '' )
				AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]
				AND DUR.SVC_SCP_CD = @[frm_svc_scp_cd]
	#end
			-- STATUS
	#if (${frm_status} == 'Q') 
				AND  MN.PROP_STS_CD IN ( 'I', 'Q', 'R' ) /* REQUESTED */
	#elseif(${frm_status} == 'A') 
				AND  MN.PROP_STS_CD IN ( 'A' ) /* APPROVED */
	#end


	#if( $cust_list.size() != 0 ) 
		AND (MN.CTRT_CUST_CNT_CD ,MN.CTRT_CUST_SEQ) IN (
		#foreach( ${key} in ${cust_list}) 
			#if($velocityCount != 1 ) 
				UNION ALL
			#end
			SELECT 
					substr('$key',1,2),substr('$key',3)
			FROM DUAL
		#end
		)
	#end 



),
VW_RFA_NEW_DATA AS (
	SELECT PROP_OFC_CD
		, PROP_OFC_NM
		, PROP_NO
		, AMDT_SEQ
		, CUST_CNT_CD
		, CUST_SEQ
		, CTRT_EFF_DT
		, CTRT_EXP_DT
		, CTRT_PTY_NM						-- CUSTOMER NAME
		, G_REV							-- GROSS REVENUE

		, LOAD_NEW              -- LOAD(NEW)
		, BUC_SCG_AMT
		, IFC_SCG_AMT
		, PSC_SCG_AMT
		, OTHERS_SCG_AMT
		, OFT_AMT
	FROM (
		SELECT
			PROP_OFC_CD
			, MAX(PROP_OFC_NM) AS PROP_OFC_NM -- REQUEST OFFICE
			, PROP_NO
			, AMDT_SEQ
			, CUST_CNT_CD
			, CUST_SEQ
			, CTRT_EFF_DT, CTRT_EXP_DT
			, MAX(CTRT_PTY_NM) AS CTRT_PTY_NM								-- CUSTOMER NAME
			, SUM((PROP_FRT_RT_AMT + PRS_SCG_AMT) * PRS_ESTM_LOD_QTY_FOR_RATE) AS G_REV						-- GROSS REVENUE
			, SUM(PRS_ESTM_LOD_QTY/ DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1)) AS LOAD_NEW-- LOAD(NEW)
			, SUM(BUC_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS BUC_SCG_AMT
			, SUM(IFC_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS IFC_SCG_AMT
			, SUM(PSC_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS PSC_SCG_AMT
			, SUM(OTHERS_SCG_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS OTHERS_SCG_AMT
			, SUM(PROP_FRT_RT_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS OFT_AMT
		FROM (
			SELECT	MAX(MN.PROP_OFC_CD ) AS PROP_OFC_CD
				, MAX(MN.PROP_OFC_NM) AS PROP_OFC_NM --  AS PROP_OFC_NM -- REQUEST OFFICE
				, MAX(MN.CUST_CNT_CD) AS CUST_CNT_CD
				, MAX(MN.CUST_SEQ) AS CUST_SEQ
				, MAX(MN.PROP_NO) AS PROP_NO
				, MAX(MN.AMDT_SEQ) AS AMDT_SEQ
				, MAX(MN.CTRT_EFF_DT) AS CTRT_EFF_DT, MAX(MN.CTRT_EXP_DT) AS CTRT_EXP_DT
				, MAX(MN.CTRT_PTY_NM) AS  CTRT_PTY_NM-- CTRT_PTY_NM								-- CUSTOMER NAME
				, MAX(RT.PROP_FRT_RT_AMT) AS PROP_FRT_RT_AMT
				, MAX(RT.PRS_SCG_AMT) AS PRS_SCG_AMT
				, MAX(CMDT_ROUT.PRS_ESTM_LOD_QTY  )  AS PRS_ESTM_LOD_QTY -- LOAD(NEW)

				, SUM(
					CASE WHEN SCG.CHG_CD= 'BUC' OR SCG.CHG_CD = 'BAF' OR SCG.CHG_CD = 'FRC' THEN
					SCG.ADJ_SCG_USD_AMT
					ELSE
					0
					END
				) AS BUC_SCG_AMT
				, SUM(
					CASE WHEN SCG.CHG_CD= 'IFC' OR SCG.CHG_CD = 'IRF' OR SCG.CHG_CD = 'IFM' THEN
					SCG.ADJ_SCG_USD_AMT
					ELSE
					0
					END
				) AS IFC_SCG_AMT
				, SUM(
					CASE WHEN SCG.CHG_CD= 'PSC' OR SCG.CHG_CD = 'PSS' THEN
					SCG.ADJ_SCG_USD_AMT
					ELSE
					0
					END
				) AS PSC_SCG_AMT
				, SUM(CASE WHEN SCG.CHG_CD <> 'BUC' AND SCG.CHG_CD <> 'BAF' AND SCG.CHG_CD <> 'FRC'
					AND SCG.CHG_CD <> 'IFC' AND SCG.CHG_CD <> 'IRF' AND SCG.CHG_CD <> 'IFM'
					AND SCG.CHG_CD <> 'PSC' AND SCG.CHG_CD <> 'PSS'
					THEN SCG.ADJ_SCG_USD_AMT
					ELSE
					0
					END
				)  AS OTHERS_SCG_AMT    --  CM_NEW_OP_TRADE
				, MAX(CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' 
						THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  
	       				ELSE	
							 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2
	       		  END )  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  
			FROM	VW_RFA_MAIN_NEW_SET MN
				, PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT
				, PRI_RP_SCP_RT RT
				, PRI_RP_SCP_RT_SCG SCG


#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE( @[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_RFA_MAIN_NEW_SET MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD,  CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE( @[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_RFA_MAIN_NEW_SET MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
#if( $slane_list.size() != 0 ) 
				,(
					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ
					FROM VW_RFA_MAIN_NEW_SET MN_SET
						, PRI_RP_SCP_RT RT
					WHERE MN_SET.PROP_NO = RT.PROP_NO
						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ
						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD
	#if( $slane_list.size() != 0 ) 
		AND RT.VSL_SLAN_CD IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
				) SLANE
#end

			WHERE	 MN.PROP_NO = CMDT_ROUT.PROP_NO
				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ
				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD
#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
#if( $slane_list.size() != 0 ) 
				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ
#end


				-- BY CARGO TYPE
				#if (${crg_tp_str} != '' )
					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
				#end




				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)
				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)
				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)
				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)
				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)
				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)
				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)
				AND RT.PROP_NO = SCG.PROP_NO(+)
				AND RT.AMDT_SEQ = SCG.AMDT_SEQ(+)
				AND RT.SVC_SCP_CD = SCG.SVC_SCP_CD(+)
				AND RT.CMDT_HDR_SEQ =  SCG.CMDT_HDR_SEQ(+)
				AND RT.ROUT_SEQ  = SCG.ROUT_SEQ(+)
				AND RT.RT_SEQ = SCG.RT_SEQ(+)
			GROUP BY CMDT_ROUT.PROP_NO
				,CMDT_ROUT.AMDT_SEQ
				,CMDT_ROUT.SVC_SCP_CD
				,CMDT_ROUT.CMDT_HDR_SEQ
				,CMDT_ROUT.ROUT_SEQ
				,RT.RT_SEQ

		)
		GROUP BY PROP_OFC_CD,CUST_CNT_CD,CUST_SEQ, PROP_NO, AMDT_SEQ, CTRT_EFF_DT, CTRT_EXP_DT
	)
) ,
VW_RFA_PRE_CONDITION AS (
	SELECT    /*+ MATERIALIZE ORDERED USE_HASH(M H D S) */  'R' AS CTRT_TP_CD, OLD_PROP_NO, OLD_AMDT_SEQ, SVC_SCP_CD, SUBSTR(RFA_NO, 17, 37) AS RFA_NO ,SUBSTR(RFA_NO, 1, 8) AS CTRT_EXP_DT,SUBSTR(RFA_NO, 9, 8) AS CTRT_EFF_DT
	FROM (
		SELECT OLD_PROP_NO, OLD_AMDT_SEQ, S.SVC_SCP_CD, MAX(TO_CHAR(D.CTRT_EXP_DT, 'YYYYMMDD')||TO_CHAR(D.CTRT_EFF_DT, 'YYYYMMDD')||H.RFA_NO) RFA_NO
		FROM (SELECT   /*+ ORDERED */  M.PROP_NO, MAX(M.AMDT_SEQ) AS AMDT_SEQ
			,	NW.PROP_NO AS OLD_PROP_NO, NW.AMDT_SEQ AS OLD_AMDT_SEQ
			FROM  VW_RFA_MAIN_NEW_SET NW, PRI_RP_MN M
			WHERE  M.CTRT_CUST_CNT_CD = NW.CUST_CNT_CD
				AND  M.CTRT_CUST_SEQ    = NW.CUST_SEQ
				AND  M.PROP_STS_CD IN ( 'A' ) /* APPROVED */
				AND  NW.PROP_NO <> M.PROP_NO
				AND  ROWNUM >=1
			GROUP BY M.PROP_NO, NW.PROP_NO, NW.AMDT_SEQ     ) M,
			PRI_RP_HDR H,
			PRI_RP_SCP_DUR D,
			PRI_RP_SCP_MN S
		WHERE H.PROP_NO  = M.PROP_NO
			AND M.PROP_NO  = D.PROP_NO
			AND M.AMDT_SEQ = D.AMDT_SEQ
			AND M.PROP_NO  = S.PROP_NO
			AND M.AMDT_SEQ = S.AMDT_SEQ
			AND S.SVC_SCP_CD = D.SVC_SCP_CD
			AND S.SVC_SCP_CD =  @[frm_svc_scp_cd]
            AND H.RFA_NO is not null
		GROUP BY OLD_PROP_NO, OLD_AMDT_SEQ, S.SVC_SCP_CD
	)
),
VW_RFA_PREVIOUS AS (
	SELECT	/*+ MATERIALIZE ORDERED */  VC.OLD_PROP_NO,VC.OLD_AMDT_SEQ
		, SUM(SR_CST_DTL.PRS_CRNT_LOD_QTY  / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) )      AS LOAD_PREVIOUS            -- Load(Previous)
		--, SUM(SR_CST_DTL.TEU_FRT_REV * SR_CST_DTL.PRS_CRNT_LOD_QTY )         AS G_REV_PREVIOUS            -- Gross Revenue(Previous)
		, SUM((	SELECT NVL(SCG.SCG_AMT,0 )
			FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
			WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON
				AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK
				AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD
				AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO
				AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD
				AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD
				AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD
				AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD
				AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD
				AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD
				AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD
				AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD
				AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD
				AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD
				AND SCG.CHG_CD = 'OFT' )  * SR_CST_DTL.PRS_CRNT_LOD_QTY
		) AS OFT_AMT_PREVIOUS
		, SUM((SELECT NVL(SUM(SCG.SCG_AMT),0)
			FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
			WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON
				AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK
				AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD
				AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO
				AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD
				AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD
				AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD
				AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD
				AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD
				AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD
				AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD
				AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD
				AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD
				AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD
				AND (SCG.CHG_CD = 'BUC' OR SCG.CHG_CD = 'BAF' OR SCG.CHG_CD = 'FRC') )  * SR_CST_DTL.PRS_CRNT_LOD_QTY
		) AS BUC_SCG_AMT_PREVIOUS
		, SUM((SELECT NVL(SUM( SCG.SCG_AMT),0)
			FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
			WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON
				AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK
				AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD
				AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO
				AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD
				AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD
				AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD
				AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD
				AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD
				AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD
				AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD
				AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD
				AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD
				AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD
				AND (SCG.CHG_CD = 'IFC' OR SCG.CHG_CD = 'IFR' OR SCG.CHG_CD = 'IFM') )  * SR_CST_DTL.PRS_CRNT_LOD_QTY
		) AS IFC_SCG_AMT_PREVIOUS
		, SUM((SELECT NVL(SUM(SCG.SCG_AMT),0)
			FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
			WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON
				AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK
				AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD
				AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO
				AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD
				AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD
				AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD
				AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD
				AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD
				AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD
				AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD
				AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD
				AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD
				AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD
				AND (SCG.CHG_CD = 'PSC' OR SCG.CHG_CD = 'PSS') )  * SR_CST_DTL.PRS_CRNT_LOD_QTY
		) AS PSC_SCG_AMT_PREVIOUS
		, SUM((SELECT SUM(
				CASE WHEN SCG.CHG_CD <> 'BUC' AND SCG.CHG_CD <> 'BAF' AND SCG.CHG_CD <> 'FRC'
				AND SCG.CHG_CD <> 'IFC' AND SCG.CHG_CD <> 'IRF' AND SCG.CHG_CD <> 'IFM'
				AND SCG.CHG_CD <> 'PSC' AND SCG.CHG_CD <> 'PSS' AND SCG.CHG_CD <> 'OFT'
				THEN SCG.SCG_AMT
				ELSE
				0
				END)
			FROM  PRI_PRS_CTRT_SMRY_SCG_DTL SCG
			WHERE  SR_CST_DTL.PRS_YRMON          = SCG.PRS_YRMON
				AND SR_CST_DTL.PRS_WK		  = SCG.PRS_WK
				AND SR_CST_DTL.PRC_CTRT_TP_CD	  = SCG.PRC_CTRT_TP_CD
				AND SR_CST_DTL.PRC_CTRT_NO	  = SCG.PRC_CTRT_NO
				AND SR_CST_DTL.SVC_SCP_CD	  = SCG.SVC_SCP_CD
				AND SR_CST_DTL.VSL_SLAN_DIR_CD	  = SCG.VSL_SLAN_DIR_CD
				AND SR_CST_DTL.TRD_CD		  = SCG.TRD_CD
				AND SR_CST_DTL.SUB_TRD_CD	  = SCG.SUB_TRD_CD
				AND SR_CST_DTL.RLANE_CD		  = SCG.RLANE_CD
				AND SR_CST_DTL.PRC_CGO_TP_CD	  = SCG.PRC_CGO_TP_CD
				AND SR_CST_DTL.ORG_LOC_TP_CD	  = SCG.ORG_LOC_TP_CD
				AND SR_CST_DTL.ORG_LOC_DEF_CD	  = SCG.ORG_LOC_DEF_CD
				AND SR_CST_DTL.DEST_LOC_TP_CD	  = SCG.DEST_LOC_TP_CD
				AND SR_CST_DTL.DEST_LOC_DEF_CD	  = SCG.DEST_LOC_DEF_CD   )  * SR_CST_DTL.PRS_CRNT_LOD_QTY
		) AS OTHERS_SCG_AMT_PREVIOUS
	FROM VW_RFA_PRE_CONDITION VC
		, PRI_PRS_CTRT_SMRY SR_MN
		, PRI_PRS_CTRT_SMRY_COST_DTL SR_CST_DTL
	WHERE SR_MN.PRS_YRMON = SR_CST_DTL.PRS_YRMON
		AND SR_MN.PRS_WK = SR_CST_DTL.PRS_WK
		AND SR_MN.PRC_CTRT_TP_CD= VC.CTRT_TP_CD
		AND SR_MN.PRC_CTRT_NO    = VC.RFA_NO
		AND SR_MN.PRC_CTRT_TP_CD= SR_CST_DTL.PRC_CTRT_TP_CD
		AND SR_MN.PRC_CTRT_NO   = SR_CST_DTL.PRC_CTRT_NO
		AND VC.SVC_SCP_CD       = SR_CST_DTL.SVC_SCP_CD
		AND SR_MN.PRC_CTRT_TP_CD = 'R' -- RFA

		-- BY CARGO TYPE
		#if (${crg_tp_str} != '' )
			AND SR_CST_DTL.PRC_CGO_TP_CD IN ( ${crg_tp_str} )
		#end

#if( ${frm_ori_rout_cd} != '' )
		-- origin
		AND SR_CST_DTL.ORG_LOC_DEF_CD= @[frm_ori_rout_cd]
#end
#if( ${frm_dest_rout_cd} != '' )
		-- DEST
		AND SR_CST_DTL.DEST_LOC_TP_CD= @[frm_dest_rout_cd]
#end
#if( $slane_list.size() != 0 ) 
		-- SLANE
	#if( $slane_list.size() != 0 ) 
		AND substr(SR_CST_DTL.RLANE_CD,0,3) IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
#end


	GROUP BY VC.OLD_PROP_NO, VC.OLD_AMDT_SEQ

)
#end
#if (${frm_contract_type} != 'R') 
SELECT
	  N.BUC_SCG_AMT
	, N.IFC_SCG_AMT
	, N.PSC_SCG_AMT
	, N.OTHERS_SCG_AMT
	, N.OFT_AMT
	, P.BUC_SCG_AMT_PREVIOUS
	, P.IFC_SCG_AMT_PREVIOUS
	, P.PSC_SCG_AMT_PREVIOUS
	, P.OTHERS_SCG_AMT_PREVIOUS
	, P.OFT_AMT_PREVIOUS

	,MN.PROP_OFC_CD
	, MN.PROP_OFC_NM
	, MN.PROP_NO
	, MN.AMDT_SEQ
	, MN.CUST_CNT_CD
	, MN.CUST_SEQ
	, TO_CHAR(MN.CTRT_EFF_DT,'YYYYMMDD') AS CTRT_EFF_DT
	, TO_CHAR(MN.CTRT_EXP_DT,'YYYYMMDD') AS CTRT_EXP_DT
	, MN.CTRT_PTY_NM						-- CUSTOMER NAME
	, N.G_REV						-- GROSS REVENUE

	, N.LOAD_NEW						-- LOAD(NEW)
	, P.LOAD_PREVIOUS					-- Load(Previous)
	, P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS  AS G_REV_PREVIOUS					-- Gross Revenue(Previous)
	, DECODE(P.LOAD_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.LOAD_NEW,0,TO_NUMBER(NULL), (N.LOAD_NEW - P.LOAD_PREVIOUS	) /  ABS(P.LOAD_PREVIOUS)  )) * 100  AS LOAD_DIFF -- NEW/PREIOUS * 100 (%)
	, DECODE(P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.G_REV,0,TO_NUMBER(NULL), (N.G_REV - (P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS)	) /  ABS(P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS)  )) * 100  AS G_REV_DIFF -- GROSS REVENUE -DIFF(%)
	, DECODE(P.OFT_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.OFT_AMT,0,TO_NUMBER(NULL), (N.OFT_AMT - P.LOAD_PREVIOUS	) /  ABS(P.OFT_AMT_PREVIOUS)  )) * 100 AS OFT_AMT_DIFF -- OFT -DIFF(%)
	, DECODE(P.BUC_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.BUC_SCG_AMT,0,TO_NUMBER(NULL), (N.BUC_SCG_AMT - P.BUC_SCG_AMT_PREVIOUS	) /  ABS(P.BUC_SCG_AMT_PREVIOUS)  )) * 100   AS BUC_SCG_AMT_DIFF -- BUF -DIFF(%)
	, DECODE(P.IFC_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.IFC_SCG_AMT,0,TO_NUMBER(NULL), (N.IFC_SCG_AMT - P.IFC_SCG_AMT_PREVIOUS	) /  ABS(P.IFC_SCG_AMT_PREVIOUS)  )) * 100  AS IFC_SCG_AMT_DIFF -- IFC -DIFF(%)
	, DECODE(P.PSC_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.PSC_SCG_AMT,0,TO_NUMBER(NULL), (N.PSC_SCG_AMT - P.PSC_SCG_AMT_PREVIOUS	) /  ABS(P.PSC_SCG_AMT_PREVIOUS)  )) * 100  AS PSC_SCG_AMT_DIFF -- PSC -DIFF(%)
	, DECODE(P.OTHERS_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.OTHERS_SCG_AMT,0,TO_NUMBER(NULL), (N.OTHERS_SCG_AMT - P.OTHERS_SCG_AMT_PREVIOUS	) /  ABS(P.OTHERS_SCG_AMT_PREVIOUS)  )) * 100   AS OTHERS_SCG_AMT_DIFF -- OTHERS -DIFF(%)
	, 'SC' AS CONTRACT_NM
FROM	VW_MAIN_NEW_SET MN
	,VW_NEW_DATA N
	, VW_PREVIOUS P
WHERE MN.PROP_NO = N.PROP_NO(+)
	AND   MN.AMDT_SEQ = N.AMDT_SEQ(+)
	AND   MN.PROP_NO = P.OLD_PROP_NO(+)
	AND   MN.AMDT_SEQ = P.OLD_AMDT_SEQ(+)
 
#end
#if (${frm_contract_type} == 'B') 
UNION ALL
#end
#if (${frm_contract_type} != 'S') 

SELECT
	N.BUC_SCG_AMT
	, N.IFC_SCG_AMT
	, N.PSC_SCG_AMT
	, N.OTHERS_SCG_AMT
	, N.OFT_AMT
	, P.BUC_SCG_AMT_PREVIOUS
	, P.IFC_SCG_AMT_PREVIOUS
	, P.PSC_SCG_AMT_PREVIOUS
	, P.OTHERS_SCG_AMT_PREVIOUS
	, P.OFT_AMT_PREVIOUS
	,MN.PROP_OFC_CD
	, MN.PROP_OFC_NM
	, MN.PROP_NO
	, MN.AMDT_SEQ
	, MN.CUST_CNT_CD
	, MN.CUST_SEQ
	, TO_CHAR(MN.CTRT_EFF_DT,'YYYYMMDD') AS CTRT_EFF_DT
	, TO_CHAR(MN.CTRT_EXP_DT,'YYYYMMDD') AS CTRT_EXP_DT
	, MN.CTRT_PTY_NM						-- CUSTOMER NAME
	, N.G_REV						-- GROSS REVENUE

	, N.LOAD_NEW						-- LOAD(NEW)
	, P.LOAD_PREVIOUS					-- Load(Previous)
	, P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS  AS G_REV_PREVIOUS		
	, DECODE(P.LOAD_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.LOAD_NEW,0,TO_NUMBER(NULL), (N.LOAD_NEW - P.LOAD_PREVIOUS	) /  ABS(P.LOAD_PREVIOUS)  )) * 100  AS LOAD_DIFF -- NEW/PREIOUS * 100 (%)
	, DECODE(P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.G_REV,0,TO_NUMBER(NULL), (N.G_REV - (P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS)	) /  ABS(P.BUC_SCG_AMT_PREVIOUS+P.IFC_SCG_AMT_PREVIOUS+P.PSC_SCG_AMT_PREVIOUS+P.OTHERS_SCG_AMT_PREVIOUS+P.OFT_AMT_PREVIOUS)  )) * 100  AS G_REV_DIFF -- GROSS REVENUE -DIFF(%)
	, DECODE(P.OFT_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.OFT_AMT,0,TO_NUMBER(NULL), (N.OFT_AMT - P.LOAD_PREVIOUS	) /  ABS(P.OFT_AMT_PREVIOUS)  )) * 100 AS OFT_AMT_DIFF -- OFT -DIFF(%)
	, DECODE(P.BUC_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.BUC_SCG_AMT,0,TO_NUMBER(NULL), (N.BUC_SCG_AMT - P.BUC_SCG_AMT_PREVIOUS	) /  ABS(P.BUC_SCG_AMT_PREVIOUS)  )) * 100   AS BUC_SCG_AMT_DIFF -- BUF -DIFF(%)
	, DECODE(P.IFC_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.IFC_SCG_AMT,0,TO_NUMBER(NULL), (N.IFC_SCG_AMT - P.IFC_SCG_AMT_PREVIOUS	) /  ABS(P.IFC_SCG_AMT_PREVIOUS)  )) * 100  AS IFC_SCG_AMT_DIFF -- IFC -DIFF(%)
	, DECODE(P.PSC_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.PSC_SCG_AMT,0,TO_NUMBER(NULL), (N.PSC_SCG_AMT - P.PSC_SCG_AMT_PREVIOUS	) /  ABS(P.PSC_SCG_AMT_PREVIOUS)  )) * 100  AS PSC_SCG_AMT_DIFF -- PSC -DIFF(%)
	, DECODE(P.OTHERS_SCG_AMT_PREVIOUS, 0, TO_NUMBER(NULL), DECODE(N.OTHERS_SCG_AMT,0,TO_NUMBER(NULL), (N.OTHERS_SCG_AMT - P.OTHERS_SCG_AMT_PREVIOUS	) /  ABS(P.OTHERS_SCG_AMT_PREVIOUS)  )) * 100   AS OTHERS_SCG_AMT_DIFF -- OTHERS -DIFF(%)
	, 'RFA' AS CONTRACT_NM
FROM	VW_RFA_MAIN_NEW_SET MN
	,VW_RFA_NEW_DATA N
	, VW_RFA_PREVIOUS P
WHERE MN.PROP_NO = N.PROP_NO(+)
	AND   MN.AMDT_SEQ = N.AMDT_SEQ(+)
	AND   MN.PROP_NO = P.OLD_PROP_NO(+)
	AND   MN.AMDT_SEQ = P.OLD_AMDT_SEQ(+)
#end
ORDER BY CONTRACT_NM DESC,PROP_OFC_CD, PROP_NO			]]></sql>
			<params>
				<param name="frm_prop_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_prop_srep_cd" type="12" value="" out="N"/>
				<param name="frm_prop_apro_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_ctrt_eff_dt" type="12" value="" out="N"/>
				<param name="frm_ctrt_exp_dt" type="12" value="" out="N"/>
				<param name="frm_svc_scp_cd" type="12" value="" out="N"/>
				<param name="frm_pfmc_unit" type="12" value="" out="N"/>
				<param name="frm_ori_loc_tp" type="12" value="" out="N"/>
				<param name="frm_ori_rout_cd" type="12" value="" out="N"/>
				<param name="frm_dest_loc_tp" type="12" value="" out="N"/>
				<param name="frm_dest_rout_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
