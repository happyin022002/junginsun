<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="QtaAdjustmentDBDAOSearchHOPotnFigureInquiryListRSQL">
			<desc><![CDATA[Portion Adjustment by H/O 내 Figure Inquiry팝업을 조회한다.

* 2015.06.15 김용습 [CHM-201536164] 주간 MAS Open에 따른 타모듈 프로그램 적용 요청
* 2015.08.20 김용습 [CHM-201536994] Split24-[그룹사 표준 코드 시행] SML 프로그램 대응 및 데이타 마이그레이션 작업 요청
20160422 CHM-201641278 [SQM] IAS Trade 판매목표 수립 Portion 연결 시스템 수정 요청 CSR]]></desc>
			<sql><![CDATA[
-- SQM_CNG_TP_CD <> 'I' 에 대해서 조회(그리드에 회색으로 표시)
         SELECT A1.BSE_YR
               ,A1.BSE_QTR_CD
               ,DECODE(A2.OFC_VW_CD, 'C', 'Contract', 'L', 'Loading') AS OFC_VW_CD
               ,A1.TRD_CD
               ,A1.RLANE_CD
               ,A1.DIR_CD
               ,A2.CONV_DIR_CD
               ,A1.SUB_TRD_CD
               ,SUBSTR(A4.HUL_BND_CD,0,1) || '/' || SUBSTR(A4.HUL_BND_CD, -1) AS HUL_BND_CD
               ,DECODE(A3.OB_DIV_CD, 'N', 'N.OB', 'O', 'OB') AS OB_DIV_CD
               ,A1.BSE_WK
               ,A1.VSL_CD || A1.SKD_VOY_NO || A1.SKD_DIR_CD AS VVD
               ,A2.RHQ_CD
#if (${f_gubun} == 'HO')
               ,0 AS LOD_POTN_RTO
               ,0 AS REV_POTN_RTO
               ,SUM(A2.LOD_QTY) AS LOD_QTY
               ,ROUND(SUM(A2.LOD_QTY * A2.GRS_RPB_REV)) AS GRS_REV
#elseif (${f_gubun} == 'RHQ')
               ,A2.RGN_OFC_CD
               ,0 AS LOD_POTN_RTO
               ,0 AS REV_POTN_RTO
               ,A2.LOD_QTY AS LOD_QTY
               ,ROUND(A2.LOD_QTY * A2.GRS_RPB_REV) AS GRS_REV
#end
               ,A2.SQM_CNG_TP_CD
               ,@[f_gubun] AS GUBUN

           FROM SQM_CFM_TGT_VVD   A1
               ,SQM_CFM_QTA       A2
               ,SQM_DAT_RLT       A3
               ,MAS_LANE_RGST     A4
               ,SQM_QTA_LANE_MGMT A5
          WHERE 1=1
            AND A1.QTA_RLSE_VER_NO = A2.QTA_RLSE_VER_NO
            AND A1.BSE_TP_CD     = A2.BSE_TP_CD
            AND A1.BSE_YR        = A2.BSE_YR
            AND A1.BSE_QTR_CD    = A2.BSE_QTR_CD
            AND A1.TRD_CD        = A2.TRD_CD
            AND A1.RLANE_CD      = A2.RLANE_CD
            AND A1.DIR_CD        = A2.DIR_CD
            AND A1.VSL_CD        = A2.VSL_CD
            AND A1.SKD_VOY_NO    = A2.SKD_VOY_NO
            AND A1.SKD_DIR_CD    = A2.SKD_DIR_CD

            AND A2.BSE_TP_CD     = A3.BSE_TP_CD
            AND A2.BSE_YR        = A3.BSE_YR
            AND A2.BSE_QTR_CD    = A3.BSE_QTR_CD
            AND A2.OFC_VW_CD     = A3.OFC_VW_CD
            AND A2.TRD_CD        = A3.TRD_CD
            AND A2.RLANE_CD      = DECODE(UPPER(A3.RLANE_CD),'ALL',A2.RLANE_CD, A3.RLANE_CD)
            AND A2.CONV_DIR_CD   = A3.CONV_DIR_CD
            AND DECODE(A2.BSE_YR||A2.BSE_QTR_CD, '20141Q', DECODE(A2.RGN_OFC_CD, 'SELSC', 'SELIB', 'TYOSC', 'TYOIB', A2.RHQ_CD), A2.RHQ_CD) = A3.RHQ_CD

            AND A1.RLANE_CD      = A4.RLANE_CD
            AND A1.DIR_CD        = A4.DIR_CD
            AND A1.TRD_CD        = A4.TRD_CD

            AND A1.RLANE_CD      = A5.RLANE_CD
            AND A1.TRD_CD        = A5.TRD_CD
--            AND A5.IAS_SCTR_FLG IS NULL

            AND A2.SQM_CNG_TP_CD <> 'I'
            AND A1.QTA_RLSE_VER_NO = (SELECT QTA_RLSE_VER_NO
                                        FROM SQM_QTA_RLSE_VER
                                       WHERE BSE_TP_CD  = @[f_bse_tp_cd]
                                         AND BSE_YR     = @[f_bse_yr]
                                         AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                                         AND SQM_VER_STS_CD = 'R'
                                      )
            AND A1.BSE_TP_CD     = @[f_bse_tp_cd]
            AND A1.BSE_YR        = @[f_bse_yr]
            AND A1.BSE_QTR_CD    = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
#if (${f_gubun} == 'HO')
            AND A3.TEAM_CD       = (SELECT CASE WHEN @[ofc_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A3.TEAM_CD
                                                ELSE @[ofc_cd]
                                           END TEAM_CD
                                      FROM DUAL)
#elseif (${f_gubun} == 'RHQ')
            AND A3.RHQ_CD        = (SELECT CASE WHEN @[ofc_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A3.RHQ_CD
                                                ELSE @[ofc_cd]
                                           END RHQ_CD
                                    FROM DUAL)
#end
#if (${f_ofc_vw_cd} != '' && ${f_ofc_vw_cd} != 'All')
            AND A2.OFC_VW_CD     = @[f_ofc_vw_cd]
#end
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
            AND A1.TRD_CD        = @[f_trd_cd]
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
            AND A1.RLANE_CD      IN (${f_rlane_cd})
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
            AND A1.DIR_CD        = @[f_dir_cd]
#end
#if (${f_click} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')
            AND A1.CONV_DIR_CD   = @[f_conv_dir_cd]
#end
#if (${f_click} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
            AND A4.HUL_BND_CD    = @[f_trd_dir]
#end

#if (${f_gubun} == 'HO')
      GROUP BY 
                A1.BSE_YR
               ,A1.BSE_QTR_CD
               ,DECODE(A2.OFC_VW_CD, 'C', 'Contract', 'L', 'Loading') 
               ,A1.TRD_CD
               ,A1.RLANE_CD
               ,A1.DIR_CD
               ,A2.CONV_DIR_CD
               ,A1.SUB_TRD_CD
               ,SUBSTR(A4.HUL_BND_CD,0,1) || '/' || SUBSTR(A4.HUL_BND_CD, -1) 
               ,DECODE(A3.OB_DIV_CD, 'N', 'N.OB', 'O', 'OB') 
               ,A1.BSE_WK
               ,A1.VSL_CD || A1.SKD_VOY_NO || A1.SKD_DIR_CD 
               ,A2.RHQ_CD
               ,A2.SQM_CNG_TP_CD
#end
UNION ALL
-- SQM_CNG_TP_CD = 'I' 에 대해서 조회
SELECT DISTINCT 
       T.BSE_YR
      ,T.BSE_QTR_CD
      ,DECODE(T.OFC_VW_CD, 'C', 'Contract', 'L', 'Loading') AS OFC_VW_CD
      ,T.TRD_CD
      ,T.RLANE_CD
      ,T.DIR_CD
      ,T.CONV_DIR_CD
      ,T.SUB_TRD_CD
      ,SUBSTR(T.HUL_BND_CD,0,1) || '/' || SUBSTR(T.HUL_BND_CD, -1) AS HUL_BND_CD
      ,DECODE(T.OB_DIV_CD, 'N', 'N.OB', 'O', 'OB') AS OB_DIV_CD
      ,T.BSE_WK
      ,T.VSL_CD||T.SKD_VOY_NO||T.SKD_DIR_CD AS VVD
      ,T.RHQ_CD
      ,T.RHQ_LOD_RTO * 100 AS LOD_POTN_RTO
      ,T.RHQ_REV_RTO * 100 AS REV_POTN_RTO
      ,T.RHQ_QTY           AS LOD_QTY
      ,T.RHQ_REV           AS GRS_REV
      ,T.SQM_CNG_TP_CD
      ,@[f_gubun] AS GUBUN
FROM 
    (
    SELECT SUBSTR(C1.BSE_YR,-2)||C1.BSE_QTR_CD||'02' AS QTA_RLSE_VER_NO
            ,C1.BSE_TP_CD
            ,C1.BSE_YR
            ,C1.BSE_QTR_CD
            ,C1.OFC_VW_CD
            ,C1.QTA_TGT_CD
            ,C1.TRD_CD
            ,C1.RLANE_CD
            ,C1.DIR_CD
            ,C1.CONV_DIR_CD
            ,C1.SUB_TRD_CD
            ,C1.HUL_BND_CD
            ,C1.OB_DIV_CD
            ,C1.BSE_WK
            ,C1.VSL_CD
            ,C1.SKD_VOY_NO
            ,C1.SKD_DIR_CD
            ,C1.RHQ_CD
    --      ,C1.LOAD_RNK AS RHQ_RNK
            ,C1.RHQ_LOD_RTO
            ,C1.RHQ_REV_RTO
            ,DECODE(C1.LOAD_RNK, '1', C1.RHQ_QTY + (C1.ORG_VVD_BSA - C1.SUM_RHQ_QTY), C1.RHQ_QTY) AS RHQ_QTY
    --        ,DECODE(C1.LOAD_RNK, '1', C1.RHQ_REV + (C1.ORG_VVD_REV - C1.SUM_RHQ_REV), C1.RHQ_REV) AS RHQ_REV
            ,C1.GRS_REV * C1.RHQ_REV_RTO AS RHQ_REV
            ,'I'  AS SQM_CNG_TP_CD
            ,@[f_gubun] AS GUBUN
    --      ,C1.RHQ_REV_RTO
    --      ,C1.RHQ_LOD_RTO
    --      ,C1.ORG_VVD_BSA AS ORG_LOD
    --      ,C1.ORG_VVD_REV AS ORG_REV
FROM (
             SELECT B2.BSE_TP_CD
                   ,B2.BSE_YR
                   ,B2.BSE_QTR_CD
                   ,B2.OFC_VW_CD
                   ,B2.QTA_TGT_CD
                   ,B2.TRD_CD
                   ,B2.SUB_TRD_CD
                   ,B2.HUL_BND_CD
                   ,B2.OB_DIV_CD
                   ,B2.FNL_BSA_CAPA                                                           
                   ,B2.RLANE_CD
                   ,B2.CONV_DIR_CD
                   ,B2.DIR_CD
                   ,B2.BSE_WK
                   ,SUBSTR(B1.APLY_FM_YRWK,-2) AS APLY_FM_WK
                   ,SUBSTR(B1.APLY_TO_YRWK,-2) AS APLY_TO_WK
                   ,B2.VSL_CD
                   ,B2.SKD_VOY_NO
                   ,B2.SKD_DIR_CD
                   ,B2.RHQ_CD
                   ,NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO) /100 AS RHQ_LOD_RTO
                   ,NVL(B1.REV_POTN_RTO,B2.RHQ_REV_RTO) /100 AS RHQ_REV_RTO
                   --RHQ 별 REV 구하기
                   ,B2.GRS_REV
    --               ,B2.GRS_REV AS ORG_VVD_REV
    --               ,ROUND(B2.GRS_REV * NVL(NVL(B1.REV_POTN_RTO,B2.RHQ_REV_RTO),0)/100, 0) AS RHQ_REV
    --               ,SUM(ROUND(B2.GRS_REV * NVL(NVL(B1.REV_POTN_RTO,B2.RHQ_REV_RTO),0)/100, 0)) OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD) AS SUM_RHQ_REV
                   -- RHQ 별 LOAD을 구하기
                   ,B2.LOD_QTY AS ORG_VVD_BSA
                   ,ROUND(B2.LOD_QTY * NVL(NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO),0)/100, 0) AS RHQ_QTY
                   ,SUM(ROUND(B2.LOD_QTY * NVL(NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO),0)/100, 0)) OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD) AS SUM_RHQ_QTY
                   ,ROW_NUMBER() OVER (PARTITION BY B2.OFC_VW_CD,B2.TRD_CD,B2.RLANE_CD,B2.CONV_DIR_CD,B2.VSL_CD || B2.SKD_VOY_NO || B2.SKD_DIR_CD ORDER BY NVL(B1.LOD_POTN_RTO,B2.RHQ_LOD_RTO) DESC, B1.RHQ_CD) LOAD_RNK
               FROM SQM_CFM_QTA_POTN_MGMT B1
                   ,(
                     SELECT DISTINCT 
                            A1.BSE_TP_CD
                           ,A1.BSE_YR
                           ,A1.BSE_QTR_CD
                           ,A5.OFC_VW_CD
                           ,NVL(A2.QTA_STEP_CD, '02') AS QTA_STEP_CD
                           ,A1.TRD_CD
                           ,A1.SUB_TRD_CD
                           ,A1.RLANE_CD
                           ,A4.HUL_BND_CD
                           ,A3.OB_DIV_CD
                           ,A1.FNL_BSA_CAPA 
                           ,A1.CONV_DIR_CD
                           ,A1.DIR_CD
                           ,A1.BSE_WK
                           ,A1.VSL_CD
                           ,A1.SKD_VOY_NO
                           ,A1.SKD_DIR_CD
                           ,A5.RHQ_CD
                           ,NVL(A2.LOD_POTN_RTO, 0) AS RHQ_LOD_RTO
                           ,NVL(A2.REV_POTN_RTO, 0) AS RHQ_REV_RTO
                           ,A1.GRS_REV
                           ,A1.LOD_QTY
                           ,A1.QTA_TGT_CD
                       FROM SQM_CFM_TGT_VVD     A1
                           ,SQM_QTA_POTN_MGMT   A2
                           ,SQM_DAT_RLT         A3
                           ,MAS_LANE_RGST       A4
                           ,SQM_QTA_LANE_OFC    A5
                           ,SQM_QTA_LANE_MGMT   A6
                      WHERE 1=1
                        AND A1.BSE_TP_CD     = A5.BSE_TP_CD
                        AND A1.BSE_YR        = A5.BSE_YR
                        AND A1.BSE_QTR_CD    = A5.BSE_QTR_CD
                        AND A1.TRD_CD        = A5.TRD_CD
                        AND A1.RLANE_CD      = A5.RLANE_CD
                        AND A1.DIR_CD        = A5.DIR_CD
                        AND A5.SQM_ACT_FLG   = 'Y'
                        
                        AND A5.BSE_TP_CD     = A2.BSE_TP_CD(+)
                        AND A5.BSE_YR        = A2.BSE_YR(+)
                        AND A5.BSE_QTR_CD    = A2.BSE_QTR_CD(+)
                        AND A5.OFC_VW_CD     = A2.OFC_VW_CD(+)
                        AND A5.TRD_CD        = A2.TRD_CD(+)
                        AND A5.RLANE_CD      = A2.RLANE_CD(+)
                        AND A5.DIR_CD        = A2.DIR_CD(+)
                        AND A5.RHQ_CD        = A2.RHQ_CD(+)

                        AND A5.BSE_TP_CD     = A3.BSE_TP_CD
                        AND A5.BSE_YR        = A3.BSE_YR
                        AND A5.BSE_QTR_CD    = A3.BSE_QTR_CD
                        AND A5.OFC_VW_CD     = A3.OFC_VW_CD
                        AND A5.TRD_CD        = A3.TRD_CD
                        AND A5.RLANE_CD      = DECODE(UPPER(A3.RLANE_CD),'ALL',A5.RLANE_CD, A3.RLANE_CD)
                        AND A1.CONV_DIR_CD   = A3.CONV_DIR_CD
                        AND A5.RHQ_CD        = A3.RHQ_CD

                        AND A1.RLANE_CD      = A4.RLANE_CD
                        AND A1.DIR_CD        = A4.DIR_CD
                        AND A1.TRD_CD        = A4.TRD_CD
                        AND A1.IOC_CD        = A4.IOC_CD

                        AND A1.RLANE_CD      = A6.RLANE_CD
                        AND A1.TRD_CD        = A6.TRD_CD
--                        AND A6.IAS_SCTR_FLG IS NULL

                        AND A1.QTA_RLSE_VER_NO = (SELECT QTA_RLSE_VER_NO
                                                    FROM SQM_QTA_RLSE_VER
                                                   WHERE BSE_TP_CD  = @[f_bse_tp_cd]
                                                     AND BSE_YR     = @[f_bse_yr]
                                                     AND BSE_QTR_CD = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                                                     AND SQM_VER_STS_CD = 'R'
                                                  )
                        AND A1.BSE_TP_CD     = @[f_bse_tp_cd]
                        AND A1.BSE_YR        = @[f_bse_yr]
                        AND A1.BSE_QTR_CD    = DECODE(@[f_bse_tp_cd],'Y','00',@[f_bse_qtr_cd])
                        AND A2.QTA_STEP_CD(+)= '02'
                        AND A3.TEAM_CD       = (SELECT CASE WHEN @[ofc_cd] IN (SELECT INTG_CD_VAL_CTNT FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03255') THEN A3.TEAM_CD
                                                            ELSE @[ofc_cd]
                                                       END TEAM_CD
                                                FROM DUAL)
#if (${f_ofc_vw_cd} != '' && ${f_ofc_vw_cd} != 'All')
                        AND A5.OFC_VW_CD     = @[f_ofc_vw_cd]
#end
                        AND A1.QTA_TGT_CD    = 'D'
#if (${f_trd_cd} != '' && ${f_trd_cd} != 'All')
                        AND A1.TRD_CD        = @[f_trd_cd]
#end
#if (${rlane_cd} != '' && ${rlane_cd} != 'All')
                		AND A1.RLANE_CD      = @[rlane_cd] -- Adjustment by VVD
#end
#if (${f_rlane_cd} != '' && ${f_rlane_cd} != 'All')
                        AND A1.RLANE_CD      IN (${f_rlane_cd})-- Portion Adjustment by HO/RHQ
#end
#if (${f_dir_cd} != '' && ${f_dir_cd} != 'All')
                        AND A1.DIR_CD        = @[f_dir_cd]
#end
#if (${f_click} != 'on' && ${f_conv_dir_cd} != '' && ${f_conv_dir_cd} != 'All')              
						AND A1.CONV_DIR_CD   = @[f_conv_dir_cd]
#end
#if (${f_click} == 'on' && ${f_trd_dir} != '' && ${f_trd_dir} != 'All')
                        AND A4.HUL_BND_CD    = @[f_trd_dir]
#end
#if (${mas_vvd} != '')
                        AND A1.VSL_CD || A1.SKD_VOY_NO || A1.SKD_DIR_CD = @[mas_vvd]
#end
                     ) B2
              WHERE 1=1
                AND B2.BSE_TP_CD     = B1.BSE_TP_CD(+)
                AND B2.BSE_YR        = B1.BSE_YR(+)
                AND B2.BSE_QTR_CD    = B1.BSE_QTR_CD(+)
                AND B2.OFC_VW_CD     = B1.OFC_VW_CD(+)
                AND B2.QTA_STEP_CD   = B1.QTA_STEP_CD(+)
                AND B2.TRD_CD        = B1.TRD_CD(+)
                AND B2.RLANE_CD      = B1.RLANE_CD(+)
                AND B2.DIR_CD        = B1.DIR_CD(+)
                AND B2.RHQ_CD        = B1.RHQ_CD(+)
                AND B2.BSE_WK        BETWEEN SUBSTR(B1.APLY_FM_YRWK(+),-2) AND SUBSTR(B1.APLY_TO_YRWK(+),-2)
              ORDER BY B2.OFC_VW_CD, B2.BSE_WK, B2.RHQ_CD
             ) C1
       )T, SQM_CFM_QTA Q
WHERE Q.QTA_RLSE_VER_NO = T.QTA_RLSE_VER_NO
  AND Q.BSE_TP_CD       = T.BSE_TP_CD 
  AND Q.BSE_YR          = T.BSE_YR
  AND Q.BSE_QTR_CD      = T.BSE_QTR_CD
  AND Q.OFC_VW_CD       = T.OFC_VW_CD
  AND Q.QTA_TGT_CD      = T.QTA_TGT_CD 
  AND Q.TRD_CD          = T.TRD_CD
  AND Q.RLANE_CD        = T.RLANE_CD
  AND Q.DIR_CD          = T.DIR_CD
  AND Q.VSL_CD          = T.VSL_CD
  AND Q.SKD_VOY_NO      = T.SKD_VOY_NO
  AND Q.SKD_DIR_CD      = T.SKD_DIR_CD
  AND Q.RHQ_CD          = T.RHQ_CD  
  AND Q.SQM_CNG_TP_CD   = 'I'

ORDER BY BSE_YR
        ,BSE_QTR_CD
        ,OFC_VW_CD
        ,TRD_CD
        ,RLANE_CD
        ,DIR_CD
        ,BSE_WK
        ,VVD
        ,RHQ_CD			]]></sql>
			<params>
				<param name="f_gubun" type="12" value="" out="N"/>
				<param name="f_bse_tp_cd" type="12" value="" out="N"/>
				<param name="f_bse_yr" type="12" value="" out="N"/>
				<param name="f_bse_qtr_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="f_ofc_vw_cd" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_conv_dir_cd" type="12" value="" out="N"/>
				<param name="f_trd_dir" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="mas_vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
