<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkCostDBDAOSearchBunkerTariffListRSQL">
			<desc><![CDATA[SearchBunkerTariffList SELECT
2010.09.08 이상용   [CHM-201005893] MIN 값이 아니라 SLS_YRMON 과 조인하도록 변경
2011.11.18 최윤성 [CHM-201110236-01] Bunker Fee 메뉴 컬럼 추가
 - SLANE, RLANE, DIR, VSL CLASS CAPA 에 따른 해당 주차의 VESSEL 정보 제공
   한주에 노선별 VVD정보는 하나만 오는 것이 일반적이나 그렇치 않은 경우가 존재하여
   아래와 같이 CONNECT BY를 사용하여 동일 노선의 동일 사이즈의 VESSEL 코드를 조회 하도록 함]]></desc>
			<sql><![CDATA[
SELECT DECODE(D1.COST_YRMON||D1.COST_WK, D2.COST_YRMON||D2.COST_WK, 'R', 'I') FLAG
      ,D2.COST_YRMON                                  COST_YRMON
      ,D2.COST_WK                                	  COST_WK
      ,D2.TRD_CD
      ,D2.SUB_TRD_CD
      ,D2.SLAN_CD                                     SLAN_CD
      ,D2.RLANE_CD                                    RLANE_CD
      ,D2.VSL_CLSS_CAPA                               VSL_CLSS_CAPA
      ,D2.DIR_CD                                      DIR_CD
	  ,D2.HUL_BND_CD
      ,D1.FOIL_CSM                                    FOIL_CSM
      ,D1.FOIL_UC_AMT                                 FOIL_UC_AMT
      ,D1.FOIL_AVG_CSM
      ,D2.VSL_INFO
  FROM MAS_BNK_TRF D1 
      ,(
          SELECT C1.COST_YRMON
                ,C1.COST_WK
                ,C1.TRD_CD
                ,C1.SUB_TRD_CD
                ,C1.SLAN_CD
                ,C1.RLANE_CD
                ,C1.DIR_CD
				,C1.HUL_BND_CD
                ,C1.VSL_CLSS_CAPA
                ,MAX(SYS_CONNECT_BY_PATH(C1.VSL_CD,'/'))  VSL_INFO
            FROM (
                  SELECT B1.COST_YRMON
                        ,B1.COST_WK
                        ,B1.TRD_CD
                        ,B1.SUB_TRD_CD
                        ,B1.SLAN_CD
                        ,B1.RLANE_CD
                        ,B1.DIR_CD
						,B1.HUL_BND_CD
                        ,B1.VSL_CD
                        ,ROW_NUMBER () OVER (PARTITION BY B1.COST_YRMON, B1.COST_WK, B1.SLAN_CD, B1.RLANE_CD, B1.DIR_CD, B1.VSL_CLSS_CAPA ORDER BY B1.VSL_CD) RNUM
                        ,B1.VSL_CLSS_CAPA
                    FROM (
                          SELECT DISTINCT 
#if (${f_yrtype} == 'yrwk')
                                 A1.SLS_YRMON COST_YRMON
                                ,A1.COST_WK COST_WK
#else
                                 A1.COST_YRMON AS COST_YRMON
                                ,A1.COST_WK COST_WK
#end
                                ,A1.TRD_CD
                                ,A1.SUB_TRD_CD
                                ,A1.SLAN_CD
                                ,A1.RLANE_CD
                                ,A1.DIR_CD
								,SUBSTR(A3.HUL_BND_CD,1,1)||'/'||SUBSTR(A3.HUL_BND_CD,-1) AS HUL_BND_CD
                                ,A1.VSL_CD
                                ,NVL(A2.VSL_CLSS_CAPA,0) VSL_CLSS_CAPA
                            FROM MAS_MON_VVD A1
                                ,MAS_VSL_RGST A2
                                ,MAS_LANE_RGST A3
                           WHERE 1=1
                             AND A1.TRD_CD                = A3.TRD_CD
                             AND A1.RLANE_CD              = A3.RLANE_CD
                             AND A1.IOC_CD                = A3.IOC_CD
                             AND A1.DIR_CD                = A3.DIR_CD 
                             AND A3.TRD_CD                <> 'COM'
                             AND A3.VSL_LANE_TP_CD        IN ('JO','SC')
                             AND A1.VSL_CD                = A2.VSL_CD
                             AND A1.N1ST_LODG_PORT_ETD_DT BETWEEN A2.VSL_APLY_FM_DT AND A2.VSL_APLY_TO_DT
                             AND A2.VOP_CD                = 'SML'
#if (${f_yrtype} == 'yrwk')
                             AND SUBSTR(A1.SLS_YRMON,1,4)||A1.COST_WK = @[f_cost_yrmon]
#else
                             AND A1.COST_YRMON            = @[f_cost_yrmon]
#end
#if(${f_trd_cd} != '')
   AND A1.TRD_CD     = @[f_trd_cd]
#end
#if(${f_rlane_cd} != '')
   AND A1.RLANE_CD   = @[f_rlane_cd]
#end
#if(${f_dir_cd} != '')
   AND A1.DIR_CD     = @[f_dir_cd]
#end
#if(${f_hul_bnd_cd} != '')
   AND A3.HUL_BND_CD = @[f_hul_bnd_cd]
#end
                             AND A1.DELT_FLG              = 'N'
                             AND A2.DELT_FLG              = 'N'
                             AND A3.DELT_FLG              = 'N'
							 AND A1.SUB_TRD_CD <> 'IP' 
                          ) B1
                  ) C1
             START WITH C1.RNUM = 1  
           CONNECT BY PRIOR C1.RNUM          = C1.RNUM -1
                        AND PRIOR C1.COST_YRMON    = C1.COST_YRMON
                        AND PRIOR C1.COST_WK       = C1.COST_WK
                        AND PRIOR C1.SLAN_CD       = C1.SLAN_CD
                        AND PRIOR C1.RLANE_CD      = C1.RLANE_CD
                        AND PRIOR C1.DIR_CD        = C1.DIR_CD
                        AND PRIOR C1.VSL_CLSS_CAPA = C1.VSL_CLSS_CAPA
             GROUP BY C1.COST_YRMON
                     ,C1.COST_WK
                     ,C1.TRD_CD
                     ,C1.SUB_TRD_CD
                     ,C1.SLAN_CD
                     ,C1.RLANE_CD
                     ,C1.DIR_CD
					 ,C1.HUL_BND_CD
                     ,C1.VSL_CLSS_CAPA
       ) D2
 WHERE 1=1
   AND D2.COST_YRMON    = D1.COST_YRMON    (+)
   AND D2.COST_WK       = D1.COST_WK       (+)
   AND D2.SLAN_CD       = D1.SLAN_CD       (+)
   AND D2.RLANE_CD      = D1.RLANE_CD      (+)
   AND D2.DIR_CD        = D1.SLAN_DIR_CD   (+)
   AND D2.VSL_CLSS_CAPA = D1.VSL_CLSS_CAPA (+)
 ORDER BY D2.COST_YRMON
         ,D2.COST_WK
         ,D2.TRD_CD
         ,D2.SUB_TRD_CD
         ,D2.SLAN_CD
         ,D2.RLANE_CD
         ,D2.DIR_CD
		 ,D2.HUL_BND_CD
         ,D2.VSL_CLSS_CAPA			]]></sql>
			<params>
				<param name="f_cost_yrmon" type="12" value="" out="N"/>
				<param name="f_trd_cd" type="12" value="" out="N"/>
				<param name="f_rlane_cd" type="12" value="" out="N"/>
				<param name="f_dir_cd" type="12" value="" out="N"/>
				<param name="f_hul_bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
