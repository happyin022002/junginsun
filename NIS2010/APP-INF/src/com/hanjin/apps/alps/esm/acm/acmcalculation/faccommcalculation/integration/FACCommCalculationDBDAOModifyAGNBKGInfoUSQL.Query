<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="FACCommCalculationDBDAOModifyAGNBKGInfoUSQL">
			<desc><![CDATA[FACCommCalculationDBDAOModifyAGNBKGInfoUSQL

2015.11.06 Sang-Hyun Kim [CHM-201538500] PDM Rev. Lane 귀속 로직 변경 관련 ACM 처리 요청
 - Revenue Lane direct code 조회 쿼리 변경(AR_FINC_DIR_CONV 조회 쿼리 변경 - POD 조건 추가)]]></desc>
			<sql><![CDATA[
MERGE INTO ACM_AGN_BKG_INFO TBL
USING (SELECT BKG.BKG_NO,
         (SELECT CASE WHEN BKG.BKG_STS_CD = 'X' THEN 1
                      WHEN DOC.BL_CVRD_TP_CD = 'B' THEN 1
                      WHEN DOC.BL_CVRD_TP_CD = 'C' THEN 1
                      ELSE 0
                 END
          FROM BKG_BL_DOC DOC
          WHERE DOC.BKG_NO = BKG.BKG_NO
         ) AS WDR_CHK,
         BKG.BL_NO,
         BKG.BL_NO_TP,
         BKG.BL_TP_CD,
         BKG.BKG_STS_CD,
         BKG.BKG_CGO_TP_CD,
         DOC.BL_CVRD_TP_CD,
         BKG.CHN_AGN_CD AS CHN_BKG_AGN_CD,
         BKG.BKG_OFC_CD,
         CRB.CLT_OFC_CD,
         BKG.BKG_CRE_DT,
         DOC.BDR_FLG,
         DOC.BDR_DT,
         BKG.POR_CD,
         BAR.POR_FINC_CTRL_OFC_CD,
         BAR.POR_AR_OFC_CD,
         BKG.POL_CD,
         BAR.POL_FINC_CTRL_OFC_CD,
         BAR.POL_AR_OFC_CD,
         BKG.POD_CD,
         BAR.POD_FINC_CTRL_OFC_CD,
         BAR.POD_AR_OFC_CD,
         BKG.DEL_CD,
         BAR.DEL_FINC_CTRL_OFC_CD,
         BAR.DEL_AR_OFC_CD,
         BKG.RCV_TERM_CD AS BKG_RCV_TERM_CD,
         BKG.DE_TERM_CD AS BKG_DE_TERM_CD,
         CRB.TRD_CD, -- [CHM-201324678] ACM 계산 시, Trade 정보 source 변경 요청
         BKG.SLAN_CD,
         CASE MAS_RANK_INFO_FNC(NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'), -- N1ST_RLANE_CD
                                  CASE WHEN VV2.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD) END, -- N2ND_RLANE_CD
                                  CASE WHEN VV3.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD) END, -- N3RD_RLANE_CD
                                  CASE WHEN VV4.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD) END, -- N4TH_RLANE_CD
                                  CASE WHEN ACM_GET_CONTI_FNC(POL1.LOC_CD, NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'))
                                              = ACM_GET_CONTI_FNC(POD1.LOC_CD, NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD1.LOC_CD, NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'))
                                       ELSE 'OO'
                                  END, -- N1ST_CONTI
                                  CASE WHEN ACM_GET_CONTI_FNC(POL2.LOC_CD, ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD))
                                              = ACM_GET_CONTI_FNC(POD2.LOC_CD, ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD2.LOC_CD, ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD))
                                       ELSE 'OO'
                                  END, -- N2ND_CONTI
                                  CASE WHEN ACM_GET_CONTI_FNC(POL3.LOC_CD, ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD))
                                              = ACM_GET_CONTI_FNC(POD3.LOC_CD, ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD3.LOC_CD, ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD))
                                       ELSE 'OO'
                                  END, -- N3RD_CONTI
                                  CASE WHEN ACM_GET_CONTI_FNC(POL4.LOC_CD, ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD))
                                              = ACM_GET_CONTI_FNC(POD4.LOC_CD, ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD4.LOC_CD, ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD))
                                       ELSE 'OO'
                                  END, -- N4TH_CONTI
                                  VV1.VSL_CD || VV1.SKD_VOY_NO || VV1.SKD_DIR_CD,
                                  VV2.VSL_CD || VV2.SKD_VOY_NO || VV2.SKD_DIR_CD,
                                  VV3.VSL_CD || VV3.SKD_VOY_NO || VV3.SKD_DIR_CD,
                                  VV4.VSL_CD || VV4.SKD_VOY_NO || VV4.SKD_DIR_CD 
              )
           WHEN 1 THEN NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO')
           WHEN 2 THEN CASE WHEN VV2.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD) END
           WHEN 3 THEN CASE WHEN VV3.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD) END
           WHEN 4 THEN CASE WHEN VV4.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD) END
         END AS RLANE_CD,
         CASE MAS_RANK_INFO_FNC(NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'), -- N1ST_RLANE_CD
                                  CASE WHEN VV2.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD) END, -- N2ND_RLANE_CD
                                  CASE WHEN VV3.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD) END, -- N3RD_RLANE_CD
                                  CASE WHEN VV4.SLAN_CD IS NULL THEN '' ELSE ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD) END, -- N4TH_RLANE_CD
                                  CASE WHEN ACM_GET_CONTI_FNC(POL1.LOC_CD, NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'))
                                              = ACM_GET_CONTI_FNC(POD1.LOC_CD, NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD1.LOC_CD, NVL(ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD), 'RBCCO'))
                                       ELSE 'OO'
                                  END, -- N1ST_CONTI
                                  CASE WHEN ACM_GET_CONTI_FNC(POL2.LOC_CD, ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD))
                                              = ACM_GET_CONTI_FNC(POD2.LOC_CD, ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD2.LOC_CD, ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD))
                                       ELSE 'OO'
                                  END, -- N2ND_CONTI
                                  CASE WHEN ACM_GET_CONTI_FNC(POL3.LOC_CD, ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD))
                                              = ACM_GET_CONTI_FNC(POD3.LOC_CD, ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD3.LOC_CD, ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD))
                                       ELSE 'OO'
                                  END, -- N3RD_CONTI
                                  CASE WHEN ACM_GET_CONTI_FNC(POL4.LOC_CD, ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD))
                                              = ACM_GET_CONTI_FNC(POD4.LOC_CD, ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD))
                                         THEN 'I' || ACM_GET_CONTI_FNC(POD4.LOC_CD, ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD))
                                       ELSE 'OO'
                                  END, -- N4TH_CONTI
                                  VV1.VSL_CD || VV1.SKD_VOY_NO || VV1.SKD_DIR_CD,
                                  VV2.VSL_CD || VV2.SKD_VOY_NO || VV2.SKD_DIR_CD,
                                  VV3.VSL_CD || VV3.SKD_VOY_NO || VV3.SKD_DIR_CD,
                                  VV4.VSL_CD || VV4.SKD_VOY_NO || VV4.SKD_DIR_CD
              )
           WHEN 1 THEN NVL(CASE 'RBCCO' WHEN ACM_GET_RLANE_FNC(VV1.SLAN_CD, VV1.POL_CD, VV1.POD_CD)
                                          THEN 'CFDR' || TO_CHAR(SYSDATE, 'YYMM') || 'EE'
                           END,
                           VV1.VSL_CD || VV1.SKD_VOY_NO || VV1.SKD_DIR_CD || NVL((SELECT NVL(POD_RLANE_DIR_CD, RLANE_DIR_CD) RLANE_DIR_CD
                                                                                  FROM AR_FINC_DIR_CONV
                                                                                  WHERE SLAN_CD = VV1.SLAN_CD
                                                                                    AND SCONTI_CD = POL1.SCONTI_CD
                                                                                    AND SLAN_DIR_CD = VV1.SKD_DIR_CD
                                                                                    AND DELT_FLG = 'N'
                                                                                    AND NVL(POD_CONTI_CD, '*') = CASE WHEN POD_CONTI_CD IS NULL THEN '*'
                                                                                                                      WHEN POD_CONTI_CD IS NOT NULL THEN POD1.CONTI_CD
                                                                                                                 END
                                                                                 ), VV1.SKD_DIR_CD
                                                                             )
                       )
           WHEN 2 THEN NVL(CASE 'RBCCO' WHEN ACM_GET_RLANE_FNC(VV2.SLAN_CD, VV2.POL_CD, VV2.POD_CD)
                                          THEN 'CFDR' || TO_CHAR(SYSDATE, 'YYMM') || 'EE'
                           END,
                           VV2.VSL_CD || VV2.SKD_VOY_NO || VV2.SKD_DIR_CD || NVL((SELECT NVL(POD_RLANE_DIR_CD, RLANE_DIR_CD) RLANE_DIR_CD
                                                                                  FROM AR_FINC_DIR_CONV
                                                                                  WHERE SLAN_CD = VV2.SLAN_CD
                                                                                    AND SCONTI_CD = POL2.SCONTI_CD
                                                                                    AND SLAN_DIR_CD = VV2.SKD_DIR_CD
                                                                                    AND DELT_FLG = 'N'
                                                                                    AND NVL(POD_CONTI_CD, '*') = CASE WHEN POD_CONTI_CD IS NULL THEN '*'
                                                                                                                      WHEN POD_CONTI_CD IS NOT NULL THEN POD2.CONTI_CD
                                                                                                                 END
                                                                                 ),
                                                                                 VV2.SKD_DIR_CD
                                                                             )
                       )
           WHEN 3 THEN NVL(CASE 'RBCCO' WHEN ACM_GET_RLANE_FNC(VV3.SLAN_CD, VV3.POL_CD, VV3.POD_CD)
                                          THEN 'CFDR' || TO_CHAR(SYSDATE, 'YYMM') || 'EE'
                           END,
                           VV3.VSL_CD || VV3.SKD_VOY_NO || VV3.SKD_DIR_CD || NVL((SELECT NVL(POD_RLANE_DIR_CD, RLANE_DIR_CD) RLANE_DIR_CD
                                                                                  FROM AR_FINC_DIR_CONV
                                                                                  WHERE SLAN_CD = VV3.SLAN_CD
                                                                                    AND SCONTI_CD = POL3.SCONTI_CD
                                                                                    AND SLAN_DIR_CD = VV3.SKD_DIR_CD
                                                                                    AND DELT_FLG = 'N'
                                                                                    AND NVL(POD_CONTI_CD, '*') = CASE WHEN POD_CONTI_CD IS NULL THEN '*'
                                                                                                                      WHEN POD_CONTI_CD IS NOT NULL THEN POD3.CONTI_CD
                                                                                                                 END
                                                                                 ),
                                                                                 VV3.SKD_DIR_CD
                                                                             )
                       )
           WHEN 4 THEN NVL(CASE 'RBCCO' WHEN ACM_GET_RLANE_FNC(VV4.SLAN_CD, VV4.POL_CD, VV4.POD_CD)
                                          THEN 'CFDR' || TO_CHAR(SYSDATE, 'YYMM') || 'EE'
                           END,
                           VV4.VSL_CD || VV4.SKD_VOY_NO || VV4.SKD_DIR_CD || NVL((SELECT NVL(POD_RLANE_DIR_CD, RLANE_DIR_CD) RLANE_DIR_CD
                                                                                  FROM AR_FINC_DIR_CONV
                                                                                  WHERE SLAN_CD = VV4.SLAN_CD
                                                                                    AND SCONTI_CD = POL4.SCONTI_CD
                                                                                    AND SLAN_DIR_CD = VV4.SKD_DIR_CD
                                                                                    AND DELT_FLG = 'N'
                                                                                    AND NVL(POD_CONTI_CD, '*') = CASE WHEN POD_CONTI_CD IS NULL THEN '*'
                                                                                                                      WHEN POD_CONTI_CD IS NOT NULL THEN POD4.CONTI_CD
                                                                                                                 END
                                                                                 ),
                                                                                 VV4.SKD_DIR_CD
                                                                             )
                       )
         END AS REV_VVD_CD,
         BKG.SLAN_CD AS TRNK_SLAN_CD,
         BKG.SLAN_CD || POL.CONTI_CD || POD.CONTI_CD AS TRNK_RLANE_CD, -- TRUNK의 RLANE_CD(TRUNK의 SLAN_CD(3자리) + POL의 CONTI(1자리) + POD의 CONTI(1자리))
         BKG.VSL_CD AS TRNK_VSL_CD,
         BKG.SKD_VOY_NO AS TRNK_SKD_VOY_NO,
         BKG.SKD_DIR_CD AS TRNK_SKD_DIR_CD,
         BKG.REV_DIR_CD AS TRNK_REV_DIR_CD,
         BKG.SVC_SCP_CD AS SVC_SCP_CD,
         NVL(BKG.PRE_RLY_PORT_CD, '*') AS PRE_PORT_CD,
         NVL(BKG.PST_RLY_PORT_CD, '*') AS PST_PORT_CD,
         (SELECT CASE WHEN BKG.BKG_STS_CD = 'X' THEN 'BKG Canceled'
                      WHEN DOC.BL_CVRD_TP_CD = 'B' THEN 'BL No[' || BKG.BL_NO || '] is CO-BIZ BL!'
                      WHEN DOC.BL_CVRD_TP_CD = 'C' THEN 'BL No[' || BKG.BL_NO || '] is Covered BL!'
                      ELSE @[comm_proc_rslt_rsn] 
                 END
          FROM BKG_BL_DOC DOC
          WHERE DOC.BKG_NO = BKG.BKG_NO
         ) AS COMM_PROC_RSLT_RSN,
         'ACM SYSTEM' AS UPD_USR_ID,
         SYSDATE AS UPD_DT,
         'ACM SYSTEM' AS CRE_USR_ID,
         SYSDATE AS CRE_DT
       FROM BKG_BOOKING BKG,
         MDM_LOCATION POL,
         MDM_LOCATION POD,
         BKG_VVD VV1,
         BKG_VVD VV2,
         BKG_VVD VV3,
         BKG_VVD VV4,
         MDM_LOCATION POL1,
         MDM_LOCATION POD1,
         MDM_LOCATION POL2,
         MDM_LOCATION POD2,
         MDM_LOCATION POL3,
         MDM_LOCATION POD3,
         MDM_LOCATION POL4,
         MDM_LOCATION POD4,
         BKG_BL_DOC DOC,
         MAS_RGST_BKG CRB,
         (SELECT B.BKG_NO,
            B.BKG_OFC_CD,
            OB.AR_OFC_CD AS BKG_OFC_AR,
            B.POR_CD,
            L1.FINC_CTRL_OFC_CD AS POR_FINC_CTRL_OFC_CD,
            O1.AR_OFC_CD AS POR_AR_OFC_CD,
            B.POL_CD,
            L2.FINC_CTRL_OFC_CD AS POL_FINC_CTRL_OFC_CD,
            O2.AR_OFC_CD AS POL_AR_OFC_CD,
            B.POD_CD,
            L3.FINC_CTRL_OFC_CD AS POD_FINC_CTRL_OFC_CD,
            O3.AR_OFC_CD AS POD_AR_OFC_CD,
            B.DEL_CD,
            L4.FINC_CTRL_OFC_CD AS DEL_FINC_CTRL_OFC_CD,
            O4.AR_OFC_CD AS DEL_AR_OFC_CD
          FROM BKG_BOOKING B,
            MDM_LOCATION L1,
            MDM_LOCATION L2,
            MDM_LOCATION L3,
            MDM_LOCATION L4,
            MDM_ORGANIZATION OB,
            MDM_ORGANIZATION O1,
            MDM_ORGANIZATION O2,
            MDM_ORGANIZATION O3,
            MDM_ORGANIZATION O4
          WHERE B.BKG_NO = @[bkg_no]
            AND B.POR_CD = L1.LOC_CD
            AND B.POL_CD = L2.LOC_CD
            AND B.POD_CD = L3.LOC_CD
            AND B.DEL_CD = L4.LOC_CD
            AND B.BKG_OFC_CD = OB.OFC_CD 
            AND L1.FINC_CTRL_OFC_CD = O1.OFC_CD
            AND L2.FINC_CTRL_OFC_CD = O2.OFC_CD
            AND L3.FINC_CTRL_OFC_CD = O3.OFC_CD
            AND L4.FINC_CTRL_OFC_CD = O4.OFC_CD
         ) BAR
       WHERE BKG.BKG_NO = BAR.BKG_NO
         AND BKG.BKG_NO = DOC.BKG_NO
         AND BKG.BKG_NO = CRB.BKG_NO
         AND BKG.POL_CD = POL.LOC_CD(+)
         AND BKG.POD_CD = POD.LOC_CD(+)
         AND VV1.BKG_NO = BKG.BKG_NO
         AND VV1.POL_CD = BKG.POL_CD
         AND VV1.BKG_NO = VV2.BKG_NO(+)
         AND VV2.BKG_NO = VV3.BKG_NO(+)
         AND VV3.BKG_NO = VV4.BKG_NO(+)
         AND VV1.POL_CD = VV2.POD_CD(+)
         AND VV2.POL_CD = VV3.POD_CD(+)
         AND VV3.POL_CD = VV4.POD_CD(+)
         AND VV1.POL_CD = POL1.LOC_CD(+)
         AND VV2.POL_CD = POL2.LOC_CD(+)
         AND VV3.POL_CD = POL3.LOC_CD(+)
         AND VV4.POL_CD = POL4.LOC_CD(+)
         AND VV1.POD_CD = POD1.LOC_CD(+)
         AND VV2.POD_CD = POD2.LOC_CD(+)
         AND VV3.POD_CD = POD3.LOC_CD(+)
         AND VV4.POD_CD = POD4.LOC_CD(+)
         AND VV1.VSL_SEQ <= '1'
         AND VV1.VSL_PRE_PST_CD IN (CASE WHEN EXISTS(SELECT 1
                                                     FROM BKG_VVD VV0
                                                     WHERE VV0.VSL_PRE_PST_CD = 'S'
                                                       AND VV0.BKG_NO = BKG.BKG_NO
                                              )
                                           THEN 'S'
                                         ELSE 'T'
                                    END
                                   )
         AND VV1.VSL_PRE_PST_CD = (CASE WHEN VV2.VSL_PRE_PST_CD(+) = 'T' AND VV1.VSL_SEQ < NVL((SELECT MAX(VV0.VSL_SEQ)
                                                                                                FROM BKG_VVD VV0
                                                                                                WHERE VV0.VSL_PRE_PST_CD = 'S'
                                                                                                  AND VV0.BKG_NO = BKG.BKG_NO
                                                                                               ),
                                                                                               0
                                                                                           )
                                          THEN 'X'
                                        WHEN VV2.VSL_PRE_PST_CD(+) = 'T' THEN 'S'
                                        WHEN VV2.VSL_PRE_PST_CD(+) = 'S' THEN 'S'
                                        WHEN VV2.VSL_PRE_PST_CD(+) = 'U' AND VV2.VSL_SEQ(+) = '1' THEN 'T'
                                        WHEN VV2.VSL_PRE_PST_CD(+) = 'U' AND VV2.VSL_SEQ(+) <> '1' THEN 'U'
                                        ELSE VV1.VSL_PRE_PST_CD
                                   END
                                  )
         AND VV2.VSL_PRE_PST_CD = (CASE WHEN VV3.VSL_PRE_PST_CD(+) = 'S' THEN 'S'
                                        WHEN VV3.VSL_PRE_PST_CD(+) = 'T' THEN 'S'
                                        WHEN VV3.VSL_PRE_PST_CD(+) = 'U' AND VV3.VSL_SEQ(+) = '1' THEN 'T'
                                        WHEN VV3.VSL_PRE_PST_CD(+) = 'U' AND VV3.VSL_SEQ(+) <> '1' THEN 'U'
                                        ELSE VV2.VSL_PRE_PST_CD
                                   END
                                  )
         AND VV3.VSL_PRE_PST_CD = (CASE WHEN VV4.VSL_PRE_PST_CD(+) = 'T' THEN 'S'
                                        WHEN VV4.VSL_PRE_PST_CD(+) = 'U' AND VV4.VSL_SEQ(+) = '1' THEN 'T'
                                        WHEN VV4.VSL_PRE_PST_CD(+) = 'U' AND VV4.VSL_SEQ(+) <> '1' THEN 'U'
                                        ELSE VV3.VSL_PRE_PST_CD
                                   END
                                  )
         AND VV2.VSL_SEQ = (CASE WHEN VV3.VSL_PRE_PST_CD(+) = 'S' THEN VV3.VSL_SEQ(+) - 1
                                 WHEN VV3.VSL_PRE_PST_CD(+) = 'U' THEN VV3.VSL_SEQ(+) - 1
                                 ELSE VV2.VSL_SEQ
                            END
                           )
         AND VV3.VSL_SEQ = (CASE WHEN VV4.VSL_PRE_PST_CD(+) = 'S' THEN VV4.VSL_SEQ(+) - 1
                                 WHEN VV4.VSL_PRE_PST_CD(+) = 'U' THEN VV4.VSL_SEQ(+) - 1
                                 ELSE VV3.VSL_SEQ
                            END
                           )
  ) PSD
ON (TBL.BKG_NO = PSD.BKG_NO)
WHEN MATCHED THEN
  UPDATE SET TBL.BL_NO = PSD.BL_NO,
    TBL.BL_NO_TP = PSD.BL_NO_TP,
    TBL.BL_TP_CD = PSD.BL_TP_CD,
    TBL.BKG_STS_CD = PSD.BKG_STS_CD,
    TBL.BKG_CGO_TP_CD = PSD.BKG_CGO_TP_CD,
    TBL.BL_CVRD_TP_CD = PSD.BL_CVRD_TP_CD,
    TBL.CHN_BKG_AGN_CD = PSD.CHN_BKG_AGN_CD,
    TBL.BKG_OFC_CD = PSD.BKG_OFC_CD,
    TBL.CLT_OFC_CD = PSD.CLT_OFC_CD,
    TBL.BKG_CRE_DT = PSD.BKG_CRE_DT,
    TBL.BDR_FLG = PSD.BDR_FLG,
    TBL.BDR_DT = PSD.BDR_DT,
    TBL.POR_CD = PSD.POR_CD,
    TBL.POR_FINC_CTRL_OFC_CD = PSD.POR_FINC_CTRL_OFC_CD,
    TBL.POR_AR_OFC_CD = PSD.POR_AR_OFC_CD,
    TBL.POL_CD = PSD.POL_CD,
    TBL.POL_FINC_CTRL_OFC_CD = PSD.POL_FINC_CTRL_OFC_CD,
    TBL.POL_AR_OFC_CD = PSD.POL_AR_OFC_CD,
    TBL.POD_CD = PSD.POD_CD,
    TBL.POD_FINC_CTRL_OFC_CD = PSD.POD_FINC_CTRL_OFC_CD,
    TBL.POD_AR_OFC_CD = PSD.POD_AR_OFC_CD,
    TBL.DEL_CD = PSD.DEL_CD,
    TBL.DEL_FINC_CTRL_OFC_CD = PSD.DEL_FINC_CTRL_OFC_CD,
    TBL.DEL_AR_OFC_CD = PSD.DEL_AR_OFC_CD,
    TBL.BKG_RCV_TERM_CD = PSD.BKG_RCV_TERM_CD,
    TBL.BKG_DE_TERM_CD = PSD.BKG_DE_TERM_CD,
    TBL.TRD_CD = PSD.TRD_CD,TBL.SLAN_CD = PSD.SLAN_CD,
    TBL.RLANE_CD = PSD.RLANE_CD,
    TBL.REV_VVD_CD = CASE WHEN PSD.WDR_CHK = 1 AND PSD.TRNK_VSL_CD IN ('SMXX', 'SMYY', 'SMZZ') THEN 'CNTC' || TO_CHAR(SYSDATE, 'YYMM') || 'MM'
                          ELSE PSD.REV_VVD_CD
                     END,
    TBL.TRNK_SLAN_CD = PSD.TRNK_SLAN_CD,
    TBL.TRNK_RLANE_CD = PSD.TRNK_RLANE_CD,
    TBL.TRNK_VSL_CD = PSD.TRNK_VSL_CD,
    TBL.TRNK_SKD_VOY_NO = PSD.TRNK_SKD_VOY_NO,
    TBL.TRNK_SKD_DIR_CD = PSD.TRNK_SKD_DIR_CD,
    TBL.TRNK_REV_DIR_CD = PSD.TRNK_REV_DIR_CD,
    TBL.SVC_SCP_CD = PSD.SVC_SCP_CD,
    TBL.PRE_PORT_CD = PSD.PRE_PORT_CD,
    TBL.PST_PORT_CD = PSD.PST_PORT_CD,
    TBL.COMM_PROC_RSLT_RSN = PSD.COMM_PROC_RSLT_RSN,
    TBL.CRE_USR_ID = PSD.CRE_USR_ID,
    TBL.CRE_DT = PSD.CRE_DT,
    TBL.UPD_USR_ID = PSD.UPD_USR_ID,
    TBL.UPD_DT = PSD.UPD_DT
WHEN NOT MATCHED THEN
  INSERT (
    TBL.BKG_NO,
    TBL.BL_NO,
    TBL.BL_NO_TP,
    TBL.BL_TP_CD,
    TBL.BKG_STS_CD,
    TBL.BKG_CGO_TP_CD,
    TBL.BL_CVRD_TP_CD,
    TBL.CHN_BKG_AGN_CD,
    TBL.BKG_OFC_CD,
    TBL.CLT_OFC_CD,
    TBL.BKG_CRE_DT,
    TBL.BDR_FLG,
    TBL.BDR_DT,
    TBL.POR_CD,
    TBL.POR_FINC_CTRL_OFC_CD,
    TBL.POR_AR_OFC_CD,
    TBL.POL_CD,
    TBL.POL_FINC_CTRL_OFC_CD,
    TBL.POL_AR_OFC_CD,
    TBL.POD_CD,
    TBL.POD_FINC_CTRL_OFC_CD,
    TBL.POD_AR_OFC_CD,
    TBL.DEL_CD,
    TBL.DEL_FINC_CTRL_OFC_CD,
    TBL.DEL_AR_OFC_CD,
    TBL.BKG_RCV_TERM_CD,
    TBL.BKG_DE_TERM_CD,
    TBL.TRD_CD,
    TBL.SLAN_CD,
    TBL.RLANE_CD,
    TBL.REV_VVD_CD,
    TBL.TRNK_SLAN_CD,
    TBL.TRNK_RLANE_CD,
    TBL.TRNK_VSL_CD,
    TBL.TRNK_SKD_VOY_NO,
    TBL.TRNK_SKD_DIR_CD,
    TBL.TRNK_REV_DIR_CD,
    TBL.SVC_SCP_CD,
    TBL.PRE_PORT_CD,
    TBL.PST_PORT_CD,
    TBL.COMM_PROC_RSLT_RSN,
    TBL.CRE_USR_ID,
    TBL.CRE_DT,
    TBL.UPD_USR_ID,
    TBL.UPD_DT
  )
  VALUES (
    PSD.BKG_NO,
    PSD.BL_NO,
    PSD.BL_NO_TP,
    PSD.BL_TP_CD,
    PSD.BKG_STS_CD,
    PSD.BKG_CGO_TP_CD,
    PSD.BL_CVRD_TP_CD,
    PSD.CHN_BKG_AGN_CD,
    PSD.BKG_OFC_CD,
    PSD.CLT_OFC_CD,
    PSD.BKG_CRE_DT,
    PSD.BDR_FLG,
    PSD.BDR_DT,
    PSD.POR_CD,
    PSD.POR_FINC_CTRL_OFC_CD,
    PSD.POR_AR_OFC_CD,
    PSD.POL_CD,
    PSD.POL_FINC_CTRL_OFC_CD,
    PSD.POL_AR_OFC_CD,
    PSD.POD_CD,
    PSD.POD_FINC_CTRL_OFC_CD,
    PSD.POD_AR_OFC_CD,
    PSD.DEL_CD,
    PSD.DEL_FINC_CTRL_OFC_CD,
    PSD.DEL_AR_OFC_CD,
    PSD.BKG_RCV_TERM_CD,
    PSD.BKG_DE_TERM_CD,
    PSD.TRD_CD,
    PSD.SLAN_CD,
    PSD.RLANE_CD,
    CASE WHEN PSD.WDR_CHK = 1 AND PSD.TRNK_VSL_CD IN ('SMXX', 'SMYY', 'SMZZ') THEN 'CNTC' || TO_CHAR(SYSDATE, 'YYMM') || 'MM'
         ELSE PSD.REV_VVD_CD
    END,
    PSD.TRNK_SLAN_CD,
    PSD.TRNK_RLANE_CD,
    PSD.TRNK_VSL_CD,
    PSD.TRNK_SKD_VOY_NO,
    PSD.TRNK_SKD_DIR_CD,
    PSD.TRNK_REV_DIR_CD,
    PSD.SVC_SCP_CD,
    PSD.PRE_PORT_CD,
    PSD.PST_PORT_CD,
    PSD.COMM_PROC_RSLT_RSN,
    PSD.CRE_USR_ID,
    PSD.CRE_DT,
    PSD.UPD_USR_ID,
    PSD.UPD_DT
  )			]]></sql>
			<params>
				<param name="comm_proc_rslt_rsn" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
