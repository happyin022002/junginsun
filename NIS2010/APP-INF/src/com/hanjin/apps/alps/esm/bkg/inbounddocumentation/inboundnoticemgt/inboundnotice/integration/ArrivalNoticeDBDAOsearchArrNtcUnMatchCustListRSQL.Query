<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ArrivalNoticeDBDAOsearchArrNtcUnMatchCustListRSQL">
			<desc><![CDATA[Inquery Arrival Notice Customer Validation Unmatch Customer List]]></desc>
			<sql><![CDATA[
/* Query 복잡도를 줄이기 위해 With 사용 Global Temporary 사용안함 - Comment Park Mangeon */
WITH SUBQ AS (
    SELECT /*+ USE_NL(BKGM BCST CVAL CNTC MLOC ECTT)*/
           BKGM.BKG_NO
         , '$dog' AS DOG
         , BKGM.SAM_CNEE_NTFY_FLG
         , BKGM.CUST_TO_ORD_FLG
		 , BKGM.POL_CD
         , BKGM.POD_CD
         , BKGM.DEL_CD
         , BKGM.BKG_OFC_CD
         , BCST.VAL_NM
         , BCST.CUST_CNT_CD
         , BCST.CUST_SEQ 
         , BCST.BKG_CUST_TP_CD
         , CVAL.CUST_CNT_CD AS VAL_CUST_CNT_CD -- Validation으로 찾은 것
         , CVAL.CUST_SEQ    AS VAL_CUST_SEQ    -- Validation으로 찾은 것
         , CVAL.VAL_CUST_ADDR AS VAL_CUST_ADDR -- Validation으로 찾은 것 
		 , CASE WHEN SUBSTR(BKGM.POD_CD,1,2)  = 'US' 
			    THEN ROW_NUMBER () OVER (PARTITION BY BCST.BKG_NO, BCST.BKG_CUST_TP_CD --BKG별, CONSIGNEE,NOTIFY별 추천
                                           ORDER BY DECODE(CVAL.CUST_CNT_CD, SUBSTR(BKGM.DEL_CD,1,2), 0, 1) -- 10자리로 찾은 것 중 
	                                      			/* 고객 주소 5자리 비교 - 특수문자,AVENUE|DRIVE|STREET|BOULEVARD 제거 */
    				                                ,DECODE(SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(TO_SINGLE_BYTE(CVAL.VAL_CUST_ADDR)),'AVENUE|DRIVE|STREET|BOULEVARD',''),'[^a-zA-Z]',''),1,5)
                                             		       ,SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(TO_SINGLE_BYTE(BCST.CUST_ADDR))    ,'AVENUE|DRIVE|STREET|BOULEVARD',''),'[^a-zA-Z]',''),1,5)
                                             		       ,0,1)
                                      				,DECODE(SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(TO_SINGLE_BYTE(CVAL.VAL_CUST_ADDR)),'AVENUE|DRIVE|STREET|BOULEVARD',''),'[^0-9]',''),1,3)
                                                           ,SUBSTR(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(TO_SINGLE_BYTE(BCST.CUST_ADDR))    ,'AVENUE|DRIVE|STREET|BOULEVARD',''),'[^0-9]',''),1,3)
                                                           ,0,1)
													/* 추천 코드와 BKG CUSTOMER CONSIGNEE,NOTIFY 가 같으면 우선 함 */
                                                    ,DECODE(CVAL.CUST_CNT_CD||CVAL.CUST_SEQ,BCST.CUST_CNT_CD||BCST.CUST_SEQ,0,1)
												    ,CVAL.ROWID --모든 조건이 같다면 ROWID로 일관성있는 결과를 리턴한다.
                                        	      /* 
                                		            BKG_NO로 검색할 경우와 기타 VVD등으로 검색할 경우, 동일한 BKG_NO의 추천코드가 달라 질 수있다.
        						                                        내부적으로 BKG별로 재 소팅을 하게 되어, 여러 BKG가 있을 경우 단일 BKG로 조회 했을 경우와 추천 코드가 달라 질 수 있다.
 	                                              */
 
                                          ) 
                ELSE ROW_NUMBER () OVER (PARTITION BY BCST.BKG_NO, BCST.BKG_CUST_TP_CD 
                                         ORDER BY   DECODE(CNTC.ROWID, NULL, 1, 0) -- 2015.08.04(기존 ROWID로 소팅되어 하위에서 더 나은 값이 있어도 우선 순위에서 밀려 바로 잡음) inbound contact person에  정보가 있는 것이 우선으로 처리된다.
                                                  , DECODE(CVAL.CUST_CNT_CD, SUBSTR(BKGM.DEL_CD,1,2), 1, BCST.CUST_CNT_CD, 2, 3) -- DEL EQ OFC가 BKG_IB_CUST_CNTC에 등록된 고객 중 국가 코드가 DEL > BCST 국가코드 같은 순
                                                  , DECODE(ECTT.OFC_CD, NULL, 1, 0)  -- DEL EQ OFC가 BKG_IB_CUST_CNTC에 등록된 고객 
                                                  , DECODE(MLOC.LOC_CD, NULL, 1, 0)  -- DEL_CD가 MDM에 존재(크게 의미 없는듯함)
													/* 추천 코드와 BKG CUSTOMER CONSIGNEE,NOTIFY 가 같으면 우선 함 */
                                                  , DECODE(CVAL.CUST_CNT_CD||CVAL.CUST_SEQ,BCST.CUST_CNT_CD||BCST.CUST_SEQ,0,1)
												  , CNTC.ROWID --모든 조건이 같다면 ROWID로 일관성있는 결과를 리턴한다.
                                        	      /* 
                                		            BKG_NO로 검색할 경우와 기타 VVD등으로 검색할 경우, 동일한 BKG_NO의 추천코드가 달라 질 수있다.
        						                                        내부적으로 BKG별로 재 소팅을 하게 되어, 여러 BKG가 있을 경우 단일 BKG로 조회 했을 경우와 추천 코드가 달라 질 수 있다.
 	                                              */
                              ) 
			END AS ODR
         , BCST.MTCH_FLG
         , BCST.VAL_CD
         , BCST.VAL_FAX_NO AS VAL_FAX_NO_BL
         , BCST.VAL_NM AS VAL_NM_BL
         , BCST.CUST_EML AS CUST_EML_BL
         , BCST.CUST_FAX_NO AS CUST_FAX_NO_BL
         , BCST.CUST_ADDR AS CUST_ADDR_BL
         , BCST.CUST_NM AS CUST_NM_BL
         , BCST.CUST_SEQ AS CUST_SEQ_BL
         , BCST.CUST_CNT_CD AS CUST_CNT_CD_BL
         , BKGM.BL_NO
         , MLOC.EQ_CTRL_OFC_CD
         , BKGM.PORT_CLZ_DT

		/* 2015.05.27  SC_NO,CTRT_CUST_CNT_CD,CTRT_CUST_SEQ 추가*/
         , NVL(BKGM.SC_NO,BKGM.RFA_NO) AS SC_NO 
         , BKGM.CTRT_CUST_CNT_CD
         , BKGM.CTRT_CUST_SEQ

    FROM BKG_BOOKING BKGM
         JOIN BKG_VVD BVVD
         ON ( BVVD.BKG_NO = BKGM.BKG_NO
#if ( ${ts_flg} != 'Y')     
              AND BVVD.POD_CD = BKGM.POD_CD
#else
              AND BVVD.POD_CD = BKGM.PST_RLY_PORT_CD
#end
              AND BKGM.BKG_STS_CD NOT IN ('X', 'S') -- 무효한 bkg제거 -- AS IS와 동일하게 하기위해 추가 20091124
              AND BKGM.BL_NO IS NOT NULL  -- AS IS와 동일하게 하기위해 추가 20091124
              AND BKGM.BKG_CGO_TP_CD IN ('F', 'R') -- full, revenue empty container
            ) 
#if (${sch_tp} == 'D') 
         JOIN VSK_VSL_PORT_SKD VSKD 
         ON ( BVVD.VSL_CD         = VSKD.VSL_CD 
              AND BVVD.SKD_VOY_NO = VSKD.SKD_VOY_NO
              AND BVVD.SKD_DIR_CD = VSKD.SKD_DIR_CD
              AND BVVD.POD_CD     = VSKD.VPS_PORT_CD
              AND BVVD.POD_CLPT_IND_SEQ = VSKD.CLPT_IND_SEQ 
            )
#end
         JOIN BKG_CUSTOMER BCST  -- BOOKING CUSTOMER
         ON ( BKGM.BKG_NO = BCST.BKG_NO
             AND BCST.BKG_CUST_TP_CD IN ('C', 'N')
             AND (
                      (BKGM.SAM_CNEE_NTFY_FLG = 'N' 
                       AND BKGM.CUST_TO_ORD_FLG = 'N' 
                       AND BCST.BKG_CUST_TP_CD IN ('C', 'N') 
                      )
                   OR (BKGM.SAM_CNEE_NTFY_FLG = 'Y' 
                       AND BCST.BKG_CUST_TP_CD = 'C'
                      )
                   OR (BKGM.CUST_TO_ORD_FLG = 'Y' 
                       AND BCST.BKG_CUST_TP_CD = 'N'
                      )
                 )
             AND BCST.MTCH_FLG = 'N' -- Not Auto Match
             AND (   BCST.VAL_CD IS NULL -- Not Execute Manual Validation
                  OR BCST.VAL_CD = 'X' -- Auto-Cancel된 것은 Un-Match Customer List에 조회되어야 한다. 20100201
                 )
             AND TRIM(REPLACE(REPLACE(BCST.CUST_NM, CHR(10), ''), CHR(13), '')) IS NOT NULL -- 고객명 없으면 처리안함 (20090716)
            )
         LEFT OUTER JOIN BKG_CUST_CD_VAL CVAL
         ON ( 
                --CVAL.VAL_CUST_NM = BCST.VAL_NM  -- NAME MATCH
                -- 2015.08.31 US의 경우 이름 10자리 비교 주소 10자리 비교
                CVAL.VAL_CUST_NM LIKE DECODE(SUBSTR(BKGM.DEL_CD,1,2), 'US',SUBSTR(BCST.VAL_NM,1,10),BCST.VAL_NM)||'%'
             AND BCST.VAL_NM IS NOT NULL /* NULL 인것 제외 LIKE 검색 전환으로 전체가 나옴 */
             AND CVAL.DELT_FLG = 'N' 
             AND NVL(CVAL.NMD_CUST_FLG, 'N')  <> 'Y')
         LEFT OUTER JOIN BKG_IB_CUST_CNTC CNTC
         /* US의 경우 고객명 , 고객 주소만으로 우선순위를 결정함 - 성능을 고려해 CNTC NULL 로 만듬 OLD DECODE(SUBSTR(BKGM.POD_CD,1,2),'CA','TORSC' ,'PHXSA') */
         ON (CNTC.OFC_CD = DECODE(SUBSTR(BKGM.DEL_CD,1,2), 'US','XXXXX',@[ofc_cd]) -- LOGIN OFFICE  
             AND CNTC.CUST_CNT_CD = CVAL.CUST_CNT_CD
             AND CNTC.CUST_SEQ = CVAL.CUST_SEQ )
         LEFT OUTER JOIN MDM_LOCATION MLOC
         ON (MLOC.LOC_CD = BKGM.DEL_CD )
         LEFT OUTER JOIN BKG_IB_CUST_CNTC ECTT
         /* US의 경우 고객명 , 고객 주소만으로 우선순위를 결정함 - 성능을 고려해 ECTT NULL */
         ON (ECTT.OFC_CD = DECODE(SUBSTR(BKGM.DEL_CD,1,2), 'US','XXXXX', MLOC.EQ_CTRL_OFC_CD )  
             AND ECTT.CUST_CNT_CD = CVAL.CUST_CNT_CD
             AND ECTT.CUST_SEQ = CVAL.CUST_SEQ )
     WHERE 1=1
#if (${sch_tp} == 'V') 
       AND BVVD.VSL_CD     = substr(@[vvd],1,4)      -- VVD (OPTIONAL 1)
       AND BVVD.SKD_VOY_NO = substr(@[vvd],5,4)   -- VVD (OPTIONAL 1)
       AND BVVD.SKD_DIR_CD = substr(@[vvd],9,1)   -- VVD (OPTIONAL 1)
       AND BVVD.POD_CD     IN (${pod_cd}) -- (OPTIONAL 3) 
#elseif (${sch_tp} == 'D') 
       AND VSKD.VPS_ETA_DT BETWEEN TO_DATE(@[vps_eta_dt_start], 'YYYYMMDD') 
                               AND (TO_DATE(@[vps_eta_dt_end], 'YYYYMMDD') +1)  -- DURATION (OPTIO함L 2)
       AND VSKD.VPS_PORT_CD = @[pod_cd] -- (OPTIONAL 3)
#elseif (${sch_tp} == 'B') 
       AND BKGM.BL_NO = @[bl_no]  -- BL NO (OPTIONAL 5-1)
#else
       AND 1 = 0
#end
#if (${sch_tp} != 'B' && ${del_cd} != '') 
       AND BKGM.DEL_CD LIKE @[del_cd] || '%'  -- DELIVERY PORT CD (OPTIONAL 4)
#end
#if (${sch_tp} != 'B' && ${pol_cd} != '') 
       AND BKGM.POL_CD = @[pol_cd] -- (OPTIONAL)
#end
)
, RSLT AS ( 
    SELECT /*+ USE_NL(MCST MADR VCST)*/
           DENSE_RANK() OVER (ORDER BY SUBQ.VAL_NM
                                     , SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0')
                                     , SUBSTR(SUBQ.CUST_ADDR_BL, 1, 10) 
                                     , NVL(SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0'), SUBQ.VAL_NM)
                                     , SUBQ.CUST_CNT_CD || LPAD(DECODE(SUBQ.CUST_SEQ, 0, NULL,SUBQ.CUST_SEQ) , 6, '0') 
                             ) AS GRP_SEQ
         , ROW_NUMBER() OVER (PARTITION BY SUBQ.VAL_NM
                                     , SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0')
                                     , SUBSTR(SUBQ.CUST_ADDR_BL, 1, 10) 
                                     , NVL(SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0'), SUBQ.VAL_NM)
                                     , SUBQ.CUST_CNT_CD || LPAD(DECODE(SUBQ.CUST_SEQ, 0, NULL,SUBQ.CUST_SEQ) , 6, '0') 
                              ORDER BY 1
                             )                AS MEMBER_ODR
         , COUNT(1) OVER (PARTITION BY SUBQ.VAL_NM
                                     , SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0')
                                     , SUBSTR(SUBQ.CUST_ADDR_BL, 1, 10) 
                                     , NVL(SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0'), SUBQ.VAL_NM)
                                     , SUBQ.CUST_CNT_CD || LPAD(DECODE(SUBQ.CUST_SEQ, 0, NULL,SUBQ.CUST_SEQ) , 6, '0') 
                          ) AS MEMBER_CNT
         , SUBQ.BKG_NO
         , SUBQ.BKG_CUST_TP_CD
         , SUBQ.BL_NO
         , SUBQ.CUST_CNT_CD || LPAD(DECODE(SUBQ.CUST_SEQ, 0, NULL,SUBQ.CUST_SEQ) , 6, '0') AS MDM_CUST_CD
         , MCST.CUST_LGL_ENG_NM  AS MDM_CUST_NM
         , MADR.VAL_CUST_ADDR    AS MDM_CUST_ADDR
         , SUBQ.CUST_CNT_CD_BL   AS BKG_CUST_CNT_CD
         , SUBQ.CUST_SEQ_BL      AS BKG_CUST_SEQ
         , SUBQ.CUST_NM_BL       AS BKG_CUST_NM
         , SUBQ.CUST_ADDR_BL     AS BKG_CUST_ADDR
         , SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0') AS VAL_CUST_CD
         , VCST.CUST_LGL_ENG_NM  AS VAL_CUST_NM
         , SUBQ.VAL_CUST_ADDR    AS VAL_CUST_ADDR
         , SUBQ.VAL_CUST_CNT_CD || LPAD(DECODE(SUBQ.VAL_CUST_SEQ, 0, NULL,SUBQ.VAL_CUST_SEQ) , 6, '0') AS COR_CUST_CD
         , SUBQ.VAL_NM
         , SUBQ.POL_CD
         , SUBQ.POD_CD
         , SUBQ.DEL_CD
         , SUBQ.BKG_OFC_CD
         , SUBQ.PORT_CLZ_DT
         , NVL(( SELECT BDR_FLG  FROM BKG_BL_DOC DOC WHERE DOC.BKG_NO = SUBQ.BKG_NO), 'N') AS BDR_FLG

		/* 2015.05.27  SC_NO,CTRT_CUST_CNT_CD,CTRT_CUST_SEQ 추가*/
         , SC_NO 
         , SUBQ.CTRT_CUST_CNT_CD
         , SUBQ.CTRT_CUST_SEQ     


      FROM SUBQ
           LEFT OUTER JOIN MDM_CUSTOMER MCST     -- Booking에 입력한 코드에 대한 고객명을 얻기 위함
           ON (MCST.CUST_CNT_CD = SUBQ.CUST_CNT_CD 
               AND MCST.CUST_SEQ = SUBQ.CUST_SEQ  
              )
           LEFT OUTER JOIN BKG_CUST_CD_VAL MADR  -- Booking에 입력한 코드에 대한 주소를 얻기 위함
           ON (MADR.CUST_CNT_CD = SUBQ.CUST_CNT_CD 
               AND MADR.CUST_SEQ = SUBQ.CUST_SEQ  
              )
           LEFT OUTER JOIN MDM_CUSTOMER VCST ON
              ( VCST.CUST_CNT_CD = SUBQ.VAL_CUST_CNT_CD
                AND VCST.CUST_SEQ = SUBQ.VAL_CUST_SEQ
              )
     WHERE ODR = 1
) -- END OF RSLT
SELECT RSLT.GRP_SEQ
     , DECODE(DMUX.RNUM, 2,       0, -1) AS GRP_IMG_IDX
     , DECODE(DMUX.RNUM, 2,       1, DECODE(RSLT.MEMBER_CNT, 1, 1, 2)) AS LVL_CD  -- Member Count가 1이면 단독 Leaf, 아니면 Group의 Leaf
     , DECODE(DMUX.RNUM, 2, GRP_SEQ, DECODE(RSLT.MEMBER_CNT, 1, RSLT.GRP_SEQ, NULL)) GRP_SEQ_VIEW
     , RSLT.VAL_CUST_CD
     , RSLT.BKG_CUST_NM
     , DECODE(DMUX.RNUM, 2, '', RSLT.BKG_NO ) AS BKG_NO
     , DECODE(DMUX.RNUM, 2, '', RSLT.BKG_CUST_TP_CD ) AS BKG_CUST_TP_CD
     , DECODE(DMUX.RNUM, 2, '', DECODE(RSLT.BKG_CUST_TP_CD, 'C', 'CNEE', 'NTFY')) AS BKG_CUST_TP_CD_VIEW
     , DECODE(DMUX.RNUM, 2, '', RSLT.BL_NO ) AS BL_NO
     , RSLT.MDM_CUST_CD
     , RSLT.MDM_CUST_NM
     , RSLT.MDM_CUST_ADDR
     , RSLT.BKG_CUST_CNT_CD
     , RSLT.BKG_CUST_SEQ
     , RSLT.BKG_CUST_ADDR
     , RSLT.VAL_CUST_NM
     , RSLT.VAL_CUST_ADDR
     , RSLT.COR_CUST_CD
     , NVL((
            SELECT DECODE(SUBSTR(O.LOC_CD,1,2),'US',DECODE(SUBSTR(RSLT.DEL_CD,1,2)||SUBSTR(RSLT.POD_CD,1,2),'USCA','TORSC' ,'PHXSA'),O.OFC_CD)
            FROM MDM_ORGANIZATION O
            WHERE O.OFC_CD = RSLT.BKG_OFC_CD
            )
          ,RSLT.BKG_OFC_CD)  AS BKG_OFC_CD
	 , CASE WHEN     COR_CUST_CD IS NOT NULL AND LENGTH(COR_CUST_CD) > 2 
                 AND COR_CUST_CD = BKG_CUST_CNT_CD||LPAD(DECODE(BKG_CUST_SEQ, 0, NULL,BKG_CUST_SEQ) , 6, '0')
                 /* 유럽 지역 불편으로 롤백 요청 2014.10.21  AND TRUNC(PORT_CLZ_DT  + 30 ) +1 >= SYSDATE */
            THEN 'O'
       END AS VAL_CD  
     , BDR_FLG
     , TO_CHAR(PORT_CLZ_DT,'YYYY-MM-DD') AS PORT_CLZ_DT
     /* 2014.10.10 PCT로 부터 한달이 지난 건을 Evaluation 하려고 하는 경우 */
     , CASE WHEN TRUNC(PORT_CLZ_DT  + 30 ) +1 < SYSDATE  THEN 'N'
       ELSE 'Y'
       END AS VAL_AVAL_FLG    

    /* 2015.05.27  SC_NO,CTRT_CUST_CNT_CD,CTRT_CUST_SEQ 추가*/
      , RSLT.SC_NO 
      , DECODE(RSLT.SC_NO ,NULL,'',NVL(RSLT.CTRT_CUST_CNT_CD,'00')||TRIM(TO_CHAR(RSLT.CTRT_CUST_SEQ,'000000'))) CTRT_CUST_CD
      , DECODE(RSLT.SC_NO ,NULL,'',( SELECT CTRT.CUST_LGL_ENG_NM
                                       FROM MDM_CUSTOMER CTRT
                                      WHERE CTRT.CUST_CNT_CD = RSLT.CTRT_CUST_CNT_CD
                                        AND CTRT.CUST_SEQ    = RSLT.CTRT_CUST_SEQ 
                                    )
               ) AS CTRT_CUST_NM 
      , RSLT.POL_CD
      , RSLT.POD_CD
  FROM RSLT
     , (SELECT ROWNUM RNUM
          FROM COM_INTG_CD
         WHERE ROWNUM < DECODE(@[excel_flg], 'Y', 2,3)) DMUX -- Excel일 경우 그룹 record는 나오면 안된다.
 WHERE DMUX.RNUM IN(1, DECODE(RSLT.MEMBER_ODR, 2, 2, 0))
 ORDER BY RSLT.GRP_SEQ
        , DECODE(DMUX.RNUM, 2,       0, -1) DESC			]]></sql>
			<params>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="vps_eta_dt_start" type="12" value="" out="N"/>
				<param name="vps_eta_dt_end" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="Y"/>
				<param name="bl_no" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="excel_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
