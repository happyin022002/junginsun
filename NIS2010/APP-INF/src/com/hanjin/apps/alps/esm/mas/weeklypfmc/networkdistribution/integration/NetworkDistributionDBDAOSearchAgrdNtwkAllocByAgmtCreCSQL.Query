<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="NetworkDistributionDBDAOSearchAgrdNtwkAllocByAgmtCreCSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
INSERT
  INTO MAS_ALOC_AGMT_EXPN ( FM_TRD_CD, FM_RLANE_CD, FM_IOC_CD, FM_VSL_CD, FM_SKD_VOY_NO, FM_DIR_CD, TS_UC_AMT, SML_SLS_AMT, CHT_OUT_AMT
                          , TO_TRD_CD, TO_RLANE_CD, TO_IOC_CD, TO_VSL_CD, TO_SKD_VOY_NO, TO_DIR_CD, LOCL_TS_STS_CD, BZC_ALOC_TP_CD, OVR_USD_ALOC_CHG_FLG
                          , BSA, AGRD_TEU, TS_TEU, OVR_TEU, OVR_USD_ALOC_CHG_RTO, OVR_SLT_PRC, BZC_ALOC_FX_AMT
                          , AGRD_EXPN_AMT, OVR_USD_AMT, FX_EXPN_AMT, CRE_DT, CRE_USR_ID, UPD_DT, UPD_USR_ID )
WITH 
AGRD_RTO_STUP AS (
SELECT A.COST_YRMON, A.COST_WK
     , A.TRD_CD, A.RLANE_CD, A.IOC_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD
     , B.COST_YRMON_SEQ, B.GRP_SEQ, B.LOCL_TS_STS_CD
     , B.BZC_ALOC_TP_CD, NVL(B.BZC_ALOC_RTO, 0) AS BZC_ALOC_RTO
     , NVL(B.BZC_ALOC_FX_AMT, 0) AS BZC_ALOC_FX_AMT
     , B.OVR_USD_ALOC_CHG_FLG, NVL(B.OVR_USD_ALOC_CHG_RTO, 0) AS OVR_USD_ALOC_CHG_RTO
  FROM MAS_MON_VVD A
     , MAS_AGRD_NTWK_COST_RTO B
     , MAS_LANE_RGST C
 WHERE A.TRD_CD       = B.TRD_CD
   AND A.RLANE_CD     = B.RLANE_CD
   AND A.IOC_CD       = B.IOC_CD
   AND A.DIR_CD       = B.DIR_CD
   AND A.COST_YRMON   = B.COST_YRMON
   AND A.TRD_CD       = C.TRD_CD
   AND A.RLANE_CD     = C.RLANE_CD
   AND A.IOC_CD       = C.IOC_CD
   AND A.DIR_CD       = C.DIR_CD
   AND A.DELT_FLG    <> 'Y'
   AND B.DELT_FLG    <> 'Y'
   AND C.DELT_FLG    <> 'Y'

#if (${fm_cost_wk} != '')
   AND A.COST_YRMON LIKE substr(@[cost_yrmon],0,4) || '%' 
   AND A.COST_WK BETWEEN @[fm_cost_wk] AND @[to_cost_wk]
#end
#if (${fm_cost_wk} == '')
    AND A.COST_YRMON = @[cost_yrmon]  
#end
 
)
, FM_VVD AS (
SELECT A.COST_YRMON, A.COST_WK
     , A.TRD_CD, A.RLANE_CD, A.IOC_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD
     , A.COST_YRMON_SEQ, A.GRP_SEQ
     , SUM(CASE WHEN B.STND_COST_CD NOT IN ('43102011', '54600000') 
                   THEN NVL(B.HJS_SLS_AMT, 0)
                ELSE 0 
            END) AS SML_SLS_AMT 
     , SUM(CASE WHEN B.STND_COST_CD IN ( '53101000', '53102000', '53200000', '54100000'
                                       , '54250000', '54300000', '54200000', '54150000'
                                       , '54450000', '54180000', '54550000', '54350000'
                                       , '54400000', '72100000') 
                   THEN NVL(B.CO_AMT, 0)
                ELSE 0 
            END) AS CHT_OUT_AMT
  FROM AGRD_RTO_STUP A, MAS_VVD_HIR B
 WHERE A.TRD_CD       = B.TRD_CD
   AND A.RLANE_CD     = B.RLANE_CD
   AND A.IOC_CD       = B.IOC_CD
   AND A.VSL_CD       = B.VSL_CD
   AND A.SKD_VOY_NO   = B.SKD_VOY_NO
   AND A.DIR_CD       = B.DIR_CD
   AND A.LOCL_TS_STS_CD  = 'LO'
 GROUP BY A.COST_YRMON, A.COST_WK
        , A.TRD_CD, A.RLANE_CD, A.IOC_CD, A.VSL_CD, A.SKD_VOY_NO, A.DIR_CD
        , A.COST_YRMON_SEQ, A.GRP_SEQ
)
, ALOC_BY_AGRD AS (
SELECT COST_YRMON, COST_YRMON_SEQ, GRP_SEQ
     , FM_COST_WK, FM_TRD_CD, FM_RLANE_CD, FM_IOC_CD, FM_VSL_CD, FM_SKD_VOY_NO, FM_DIR_CD
     , DECODE(BSA,0,0,SML_SLS_AMT / BSA) AS TS_UC_AMT, SML_SLS_AMT, CHT_OUT_AMT
     , TO_COST_WK, TO_TRD_CD, TO_RLANE_CD, TO_IOC_CD, TO_VSL_CD, TO_SKD_VOY_NO, TO_DIR_CD, LOCL_TS_STS_CD
     , BZC_ALOC_TP_CD, OVR_USD_ALOC_CHG_FLG
     , BSA, BZC_ALOC_RTO, BSA * BZC_ALOC_RTO / 100 AS AGRD_TEU, TS_TEU
     , DECODE(LOCL_TS_STS_CD
             , 'TS', (CASE WHEN TS_TEU - BSA * BZC_ALOC_RTO / 100 > 0 
                              THEN TS_TEU - BSA * BZC_ALOC_RTO / 100 
                           ELSE 0
                       END)
             , 0
       ) AS OVR_TEU
     , DECODE(LOCL_TS_STS_CD
             , 'TS', OVR_USD_ALOC_CHG_RTO
             , 0
       ) AS OVR_USD_ALOC_CHG_RTO
     , DECODE(LOCL_TS_STS_CD
             , 'TS', DECODE(BSA,0,0,SML_SLS_AMT / BSA) * OVR_USD_ALOC_CHG_RTO / 100
             , 0
       ) AS OVR_SLT_PRC
     , BZC_ALOC_FX_AMT
     , DECODE(LOCL_TS_STS_CD || BZC_ALOC_TP_CD
             , 'TSR', SML_SLS_AMT * BZC_ALOC_RTO / 100
             , 0
       ) AS AGRD_EXPN_AMT
     , DECODE(LOCL_TS_STS_CD || BZC_ALOC_TP_CD
             , 'TSR', ( DECODE(BSA,0,0,SML_SLS_AMT / BSA) * OVR_USD_ALOC_CHG_RTO / 100) 
                        * (CASE WHEN TS_TEU - BSA * BZC_ALOC_RTO / 100 > 0 
                                   THEN TS_TEU - BSA * BZC_ALOC_RTO / 100 
                                ELSE 0
                            END)
             , 0
       ) AS OVR_USD_AMT -- OVR_USD_AMT = OVR_SLT_PRC * OVR_TEU
     , DECODE(LOCL_TS_STS_CD || BZC_ALOC_TP_CD
             , 'TSF',  SML_SLS_AMT + CHT_OUT_AMT - BZC_ALOC_FX_AMT
             , 0
       ) AS FX_EXPN_AMT
  FROM (
        SELECT A.COST_YRMON, A.COST_WK AS FM_COST_WK
             , A.TRD_CD AS FM_TRD_CD, A.RLANE_CD AS FM_RLANE_CD, A.IOC_CD AS FM_IOC_CD
             , A.VSL_CD AS FM_VSL_CD, A.SKD_VOY_NO AS FM_SKD_VOY_NO, A.DIR_CD AS FM_DIR_CD
             , A.SML_SLS_AMT, A.CHT_OUT_AMT
             , B.COST_WK AS TO_COST_WK
             , B.TRD_CD AS TO_TRD_CD, B.RLANE_CD AS TO_RLANE_CD, B.IOC_CD AS TO_IOC_CD
             , B.VSL_CD AS TO_VSL_CD, B.SKD_VOY_NO AS TO_SKD_VOY_NO, B.DIR_CD AS TO_DIR_CD
             , B.LOCL_TS_STS_CD, B.BZC_ALOC_TP_CD, NVL(C.FNL_HJS_BSA_CAPA, 0) AS BSA, B.BZC_ALOC_RTO
             , (CASE WHEN B.LOCL_TS_STS_CD = 'TS' 
                            AND B.BZC_ALOC_TP_CD = 'R' 
                        THEN (
                              SELECT NVL(SUM(NVL(TS_QTY, 0)), 0)
                                FROM MAS_LANE_TS_QTY TS
                               WHERE 1=1
                                 AND TS.FM_TRD_CD     = A.TRD_CD
                                 AND TS.FM_RLANE_CD   = A.RLANE_CD
                                 AND TS.TO_TRD_CD     = B.TRD_CD    
                                 AND TS.TO_RLANE_CD   = B.RLANE_CD  
                                 AND TS.TO_IOC_CD     = B.IOC_CD    
                                 AND TS.TO_VSL_CD     = B.VSL_CD    
                                 AND TS.TO_SKD_VOY_NO = B.SKD_VOY_NO
                                 AND TS.TO_SKD_DIR_CD = B.DIR_CD
                             )
                      ELSE 0
                 END) AS TS_TEU
             , B.BZC_ALOC_FX_AMT
             , B.OVR_USD_ALOC_CHG_FLG, B.OVR_USD_ALOC_CHG_RTO
             , B.COST_YRMON_SEQ, B.GRP_SEQ
          FROM FM_VVD A, AGRD_RTO_STUP B, BSA_VVD_MST C
         WHERE A.COST_YRMON   = B.COST_YRMON
           AND A.COST_WK      = B.COST_WK
           AND A.GRP_SEQ      = B.GRP_SEQ
           AND A.TRD_CD       = C.TRD_CD(+)
           AND A.RLANE_CD     = C.RLANE_CD(+)
           AND A.IOC_CD       = C.IOC_CD(+)
           AND A.VSL_CD       = C.VSL_CD(+)
           AND A.SKD_VOY_NO   = C.SKD_VOY_NO(+)
           AND A.DIR_CD       = C.SKD_DIR_CD(+)
       )
)
SELECT A.FM_TRD_CD, A.FM_RLANE_CD, A.FM_IOC_CD, A.FM_VSL_CD, A.FM_SKD_VOY_NO, A.FM_DIR_CD
     , A.TS_UC_AMT, A.SML_SLS_AMT, A.CHT_OUT_AMT
     , A.TO_TRD_CD, A.TO_RLANE_CD, A.TO_IOC_CD, A.TO_VSL_CD, A.TO_SKD_VOY_NO, A.TO_DIR_CD, A.LOCL_TS_STS_CD
     , A.BZC_ALOC_TP_CD, A.OVR_USD_ALOC_CHG_FLG
     , A.BSA, A.AGRD_TEU, A.TS_TEU, A.OVR_TEU, A.OVR_USD_ALOC_CHG_RTO, A.OVR_SLT_PRC
     , A.BZC_ALOC_FX_AMT
     , DECODE(A.LOCL_TS_STS_CD
             , 'TS', A.AGRD_EXPN_AMT
             , 'LO', SUM(DECODE(A.LOCL_TS_STS_CD, 'TS', -A.AGRD_EXPN_AMT, 0)) 
                         OVER (PARTITION BY A.FM_TRD_CD, A.FM_RLANE_CD, A.FM_IOC_CD, A.FM_VSL_CD, A.FM_SKD_VOY_NO, A.FM_DIR_CD)
       ) AS AGRD_EXPN_AMT
     , DECODE(A.LOCL_TS_STS_CD
             , 'TS', A.OVR_USD_AMT
             , 'LO', SUM(DECODE(A.LOCL_TS_STS_CD, 'TS', -A.OVR_USD_AMT, 0)) 
                         OVER (PARTITION BY A.FM_TRD_CD, A.FM_RLANE_CD, A.FM_IOC_CD, A.FM_VSL_CD, A.FM_SKD_VOY_NO, A.FM_DIR_CD)
       ) AS OVR_USD_AMT
     , DECODE(A.LOCL_TS_STS_CD
             , 'TS', A.FX_EXPN_AMT
             , 'LO', SUM(DECODE(A.LOCL_TS_STS_CD, 'TS', -A.FX_EXPN_AMT, 0)) 
                         OVER (PARTITION BY A.FM_TRD_CD, A.FM_RLANE_CD, A.FM_IOC_CD, A.FM_VSL_CD, A.FM_SKD_VOY_NO, A.FM_DIR_CD)
       ) AS FX_EXPN_AMT
     , SYSDATE AS CRE_DT, @[cre_usr_id] AS CRE_USR_ID, SYSDATE AS UPD_DT, @[upd_usr_id] AS UPD_USR_ID
  FROM ALOC_BY_AGRD A			]]></sql>
			<params>
				<param name="cost_yrmon" type="12" value="" out="N"/>
				<param name="fm_cost_wk" type="12" value="" out="N"/>
				<param name="to_cost_wk" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
