<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CMSummaryDBDAORsltPrsProposalSummaryChartTargetListRSQL">
			<desc><![CDATA[chart화면 grid에서 사용될 대상 목록을 조회한다.]]></desc>
			<sql><![CDATA[
WITH 
#if (${frm_contract_type} != 'R') 
VW_MAIN_NEW_SET AS (
	SELECT /*+ MATERIALIZE */ MN.PROP_OFC_CD
		, M_ORG.OFC_ENG_NM  AS PROP_OFC_NM--  AS PROP_OFC_NM -- REQUEST OFFICE
		, NVL(MN.REAL_CUST_CNT_CD,PTY.CUST_CNT_CD ) AS CUST_CNT_CD
		, NVL(MN.REAL_CUST_SEQ, PTY.CUST_SEQ ) AS CUST_SEQ
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT
		, (TO_DATE(TO_CHAR(CTRT_EXP_DT,'YYYYMMDD'),'YYYYMMDD')- TO_DATE(TO_CHAR(CTRT_EFF_DT,'YYYYMMDD'),'YYYYMMDD')) / 7 AS WEEK_NEW -- WEEK(NEW)
		, DECODE( MN.REAL_CUST_CNT_CD, NULL, PTY.CTRT_PTY_NM, (SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = MN.REAL_CUST_CNT_CD AND CUST_SEQ =MN.REAL_CUST_SEQ  )) AS CTRT_PTY_NM -- CTRT_PTY_NM/ CUSTOMER NAME
		, MAX(
		CASE WHEN MQ.CNTR_LOD_UT_CD = 'F' AND @[frm_pfmc_unit] = 'TEU' THEN
		MQ.PROP_MQC_QTY * 2
		WHEN MQ.CNTR_LOD_UT_CD = 'T' AND @[frm_pfmc_unit] = 'FEU' THEN
		MQ.PROP_MQC_QTY /2
		ELSE MQ.PROP_MQC_QTY
		END
		) PROP_MQC_QTY  -- PROP_MQC_QTY		
		, SCP_MN.SVC_SCP_CD
		, MN.RESPB_SREP_CD  
		,DECODE(CTP.PRC_CTRT_CUST_TP_CD,'N','NON-BCO','BCO')  PRC_CTRT_CUST_TP_NM
		, MN.PROP_APRO_OFC_CD
	FROM PRI_SP_MN MN
		, PRI_SP_HDR HDR
		, PRI_SP_CTRT_PTY PTY
		, PRI_SP_MQC MQ
		, PRI_SP_SCP_DUR DUR
		, PRI_SP_SCP_MN SCP_MN
		, MDM_ORGANIZATION M_ORG
		, PRI_SP_CTRT_CUST_TP CTP
	WHERE MN.PROP_OFC_CD = M_ORG.OFC_CD
		AND MN.PROP_NO   = HDR.PROP_NO
		AND MN.PROP_NO = PTY.PROP_NO
		AND MN.AMDT_SEQ = PTY.AMDT_SEQ
		AND PTY.PRC_CTRT_PTY_TP_CD = 'C'
		AND MN.PROP_NO = MQ.PROP_NO
		AND MN.AMDT_SEQ = MQ.AMDT_SEQ
		AND MN.AMDT_SEQ = 0
		AND MN.PROP_NO = DUR.PROP_NO
		AND MN.AMDT_SEQ = DUR.AMDT_SEQ
		AND MN.PROP_NO = SCP_MN.PROP_NO
		AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ
		AND MN.PROP_NO = CTP.PROP_NO
		AND MN.AMDT_SEQ = CTP.AMDT_SEQ
		AND CTP.PRC_CTRT_PTY_TP_CD = 'C'
		AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD
		 


	#if(${frm_customer_type} == 'B')
				AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O')
	#elseif(${frm_customer_type} == 'N')
				AND CTP.PRC_CTRT_CUST_TP_CD IN ('N')
	#else 
			AND CTP.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
	#end

	#if(${frm_prop_ofc_cd} != '')
				AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd]
	#end

	#if(${frm_prop_srep_cd} != '')
				AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]
	#end

	#if(${frm_prop_apro_ofc_cd} != '')
				AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
	#end



	#if(${frm_ctrt_eff_dt} != '' )
		AND DUR.CTRT_EFF_DT >= TO_DATE(@[frm_ctrt_eff_dt],'YYYY-MM-DD')
	#end
	#if ( ${frm_ctrt_exp_dt} != '' )
		AND DUR.CTRT_EXP_DT  <= TO_DATE(@[frm_ctrt_exp_dt],'YYYY-MM-DD') 
	#end

	#if(${frm_svc_scp_cd} != '' )
				AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]
				AND DUR.SVC_SCP_CD = @[frm_svc_scp_cd]
	#end
			-- STATUS
	#if (${frm_status} == 'Q') 
				AND  MN.PROP_STS_CD IN ( 'I', 'Q', 'R' ) /* REQUESTED */
	#elseif(${frm_status} == 'A') 
				AND  MN.PROP_STS_CD IN ( 'A' ,'F') /* APPROVED */
	#end


	#if( $cust_list.size() != 0 ) 
		AND (PTY.CUST_CNT_CD , PTY.CUST_SEQ) IN (
		#foreach( ${key} in ${cust_list}) 
			#if($velocityCount != 1 ) 
				UNION ALL
			#end
			SELECT 
					substr('$key',1,2),substr('$key',3)
			FROM DUAL
		#end
		)
	#end 


		GROUP BY MN.PROP_OFC_CD,M_ORG.OFC_ENG_NM , MN.REAL_CUST_CNT_CD,PTY.CUST_CNT_CD,MN.REAL_CUST_SEQ, PTY.CUST_SEQ,PTY.CTRT_PTY_NM, MN.PROP_NO, MN.AMDT_SEQ, SCP_MN.SVC_SCP_CD, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT,
	         SCP_MN.SVC_SCP_CD, MN.RESPB_SREP_CD  ,DECODE(CTP.PRC_CTRT_CUST_TP_CD,'N','NON-BCO','BCO'), MN.PROP_APRO_OFC_CD

),
VW_NEW_DATA AS (
	SELECT  /*+ MATERIALIZE */   PROP_OFC_CD
		, PROP_OFC_NM
		, PROP_NO
		, AMDT_SEQ
		, CUST_CNT_CD
		, CUST_SEQ
		, CTRT_EFF_DT
		, CTRT_EXP_DT
		, WEEK_NEW      -- WEEK(NEW)
		, CTRT_PTY_NM      -- CUSTOMER NAME
		, PROP_MQC_QTY      -- MQC( TARGET VVD )
		, G_REV       -- GROSS REVENUE
		, COST_NEW_CM_OFFICE     -- COST(NEW)
		, COST_NEW_CM_TRADE     -- COST(NEW)
		, COST_NEW_OP_OFFICE     -- COST(NEW)
		, LOAD_NEW              -- LOAD(NEW)
		, NEW_RESPB_CM_AMT -- OFFICE PROPIT/CM
		, NEW_PFIT_CM_AMT -- TRADE PROPIT/CM
		, NEW_RESPB_OP_AMT -- OP(NEW)
		, CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB
		, CMPB_NEW_TRADE -- TRADE PROPIT/CMPB
		, OPB_NEW_OFFICE -- OPB(NEW)
	FROM (
		SELECT
			PROP_OFC_CD
			, MAX(PROP_OFC_NM) AS PROP_OFC_NM -- REQUEST OFFICE
			, PROP_NO
			, AMDT_SEQ
			, CUST_CNT_CD
			, CUST_SEQ
			, CTRT_EFF_DT, CTRT_EXP_DT
			, MAX(WEEK_NEW) AS WEEK_NEW
			, MAX(CTRT_PTY_NM) AS CTRT_PTY_NM        -- CUSTOMER NAME
			, MAX(PROP_MQC_QTY) AS PROP_MQC_QTY        -- MQC( TARGET VVD )
			, SUM((PROP_FRT_RT_AMT + PRS_SCG_AMT) * PRS_ESTM_LOD_QTY_FOR_RATE) AS G_REV      -- GROSS REVENUE
			, SUM(PRS_RESPB_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)
			, SUM(PRS_PFIT_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)
			, SUM(PRS_RESPB_OPFIT_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)
			, SUM(PRS_ESTM_LOD_QTY) AS LOAD_NEW-- LOAD(NEW)
			, SUM(ESTM_RESPB_CM_AMT) AS NEW_RESPB_CM_AMT    -- Office Profit -- CM(NEW)
			, SUM(ESTM_PFIT_CM_AMT) AS NEW_PFIT_CM_AMT    -- Trade Profit -- CM(NEW)
			, SUM(ESTM_RESPB_OP_AMT) AS NEW_RESPB_OP_AMT     --OP(NEW)
			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0, SUM(ESTM_RESPB_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB
			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0, SUM(ESTM_PFIT_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_TRADE -- TRADE PROPIT/CM
			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0, SUM(ESTM_RESPB_OP_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS OPB_NEW_OFFICE  --OPB(NEW)
		FROM (
			SELECT MN.PROP_OFC_CD
				, MN.PROP_OFC_NM --  AS PROP_OFC_NM -- REQUEST OFFICE
				, MN.CUST_CNT_CD
				, MN.CUST_SEQ
				, MN.PROP_NO
				, MN.AMDT_SEQ
				, MN.CTRT_EFF_DT, MN.CTRT_EXP_DT
				, MN.CTRT_PTY_NM -- CTRT_PTY_NM        -- CUSTOMER NAME
				, MN.PROP_MQC_QTY  -- PROP_MQC_QTY        -- MQC( TARGET VVD )
				, MN.WEEK_NEW
				, RT.PROP_FRT_RT_AMT
				, RT.PRS_SCG_AMT
				, RT.PRS_RESPB_CM_UC_AMT  -- COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)
				, RT.PRS_PFIT_CM_UC_AMT  -- COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)

				, RT.PRS_RESPB_OPFIT_UC_AMT  -- COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)

				, CMDT_ROUT.PRS_ESTM_LOD_QTY  / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_LOD_QTY -- LOAD(NEW)

				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'
				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT
				ELSE
				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT  / 2
				END  AS ESTM_RESPB_CM_AMT  -- AS CM_NEW_OFFICE
				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'
				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT
				ELSE
				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT  / 2
				END  AS ESTM_PFIT_CM_AMT    --  CM_NEW_OP_TRADE
				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'
				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT
				ELSE
				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT  / 2
				END  AS ESTM_RESPB_OP_AMT    --  CM_NEW_OP_TRADE
				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' 
						THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  
	       				ELSE	
							 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2
	       		  END  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  
			FROM VW_MAIN_NEW_SET MN
				, PRI_SP_SCP_RT_CMDT_ROUT CMDT_ROUT
				, PRI_SP_SCP_RT RT


#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_MAIN_NEW_SET MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, GEN_SPCL_RT_TP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.GEN_SPCL_RT_TP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE(@[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_MAIN_NEW_SET MN_SET
							, PRI_SP_SCP_RT_ROUT_PNT A
							, PRI_SP_SCP_GRP_LOC B
							, PRI_SP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
#if( $slane_list.size() != 0 ) 
				,(
					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.GEN_SPCL_RT_TP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ
					FROM VW_MAIN_NEW_SET MN_SET
						, PRI_SP_SCP_RT RT
					WHERE MN_SET.PROP_NO = RT.PROP_NO
						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ
						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD
	#if( $slane_list.size() != 0 ) 
		AND (RT.VSL_SLAN_CD) IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
				) SLANE
#end

			WHERE  MN.PROP_NO = CMDT_ROUT.PROP_NO
				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ
				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD


#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = ORI_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = DEST_LOC.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
#if( $slane_list.size() != 0 ) 
				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = SLANE.GEN_SPCL_RT_TP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ
#end

				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)
				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)
				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)
				AND CMDT_ROUT.GEN_SPCL_RT_TP_CD = RT.GEN_SPCL_RT_TP_CD(+)
				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)
				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)
				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)
				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)
				-- BY CARGO TYPE
				#if (${crg_tp_str} != '' )
					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
				#end


		)
		GROUP BY PROP_OFC_CD,CUST_CNT_CD,CUST_SEQ, PROP_NO, AMDT_SEQ, CTRT_EFF_DT, CTRT_EXP_DT
	)
) ,
VW_RESULT AS (
	SELECT
		round(N.CMPB_NEW_OFFICE,2) as CMPB_NEW_OFFICE     -- OFFICE PROPIT/CM
		, round(N.CMPB_NEW_TRADE,2) as  CMPB_NEW_TRADE   -- TRADE PROPIT/CM
		, MN.RESPB_SREP_CD  
		,MN.PROP_OFC_CD
		, MN.PROP_OFC_NM
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, MN.CUST_CNT_CD
		, MN.CUST_SEQ
		, MN.CUST_CNT_CD || TO_CHAR(MN.CUST_SEQ,'FM000000' ) AS CUST_CD
		, MN.PRC_CTRT_CUST_TP_NM
		, MN.PROP_APRO_OFC_CD
		, TO_CHAR(MN.CTRT_EFF_DT,'YYYYMMDD') AS CTRT_EFF_DT
		, TO_CHAR(MN.CTRT_EXP_DT,'YYYYMMDD') AS CTRT_EXP_DT
		, MN.WEEK_NEW      -- WEEK(NEW)
		, MN.CTRT_PTY_NM      -- CUSTOMER NAME
		, MN.PROP_MQC_QTY     -- MQC( TARGET VVD )
		, N.G_REV      -- GROSS REVENUE
		, N.COST_NEW_CM_OFFICE     -- COST(NEW)
		, N.COST_NEW_CM_TRADE     -- COST(NEW)
		, N.COST_NEW_OP_OFFICE     -- COST(NEW)
		, N.OPB_NEW_OFFICE  as OPB_NEW     -- OPB(NEW)
		, N.LOAD_NEW      -- LOAD(NEW)
		, N.NEW_RESPB_CM_AMT AS  CM_NEW_OFFICE
		, N.NEW_PFIT_CM_AMT AS CM_NEW_TRADE
		, N.NEW_RESPB_OP_AMT AS OP_NEW
	FROM VW_MAIN_NEW_SET MN
		,VW_NEW_DATA N
	WHERE MN.PROP_NO = N.PROP_NO(+)
		AND   MN.AMDT_SEQ = N.AMDT_SEQ(+)
) 
#end
#if (${frm_contract_type} == 'B') 
,
#end
#if (${frm_contract_type} != 'S') 
VW_RFA_MAIN_NEW_SET AS (
	SELECT /*+ ORDERED USE_HASH(DUR SCP_MN) INDEX_FFS(SCP_MN XPKPRI_RP_SCP_MN)*/  MN.PROP_OFC_CD
		, M_ORG.OFC_ENG_NM  AS PROP_OFC_NM--  AS PROP_OFC_NM -- REQUEST OFFICE
		, MN.CTRT_CUST_CNT_CD AS CUST_CNT_CD
		, MN.CTRT_CUST_SEQ AS CUST_SEQ
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, '' AS CTRT_PTY_NM  -- CUSTOMER NAME
		, DUR.CTRT_EFF_DT, DUR.CTRT_EXP_DT
		, (TO_DATE(TO_CHAR(CTRT_EXP_DT,'YYYYMMDD'),'YYYYMMDD')- TO_DATE(TO_CHAR(CTRT_EFF_DT,'YYYYMMDD'),'YYYYMMDD')) / 7 AS WEEK_NEW -- WEEK(NEW)
		, (
			CASE WHEN MN.CNTR_LOD_UT_CD = 'F' AND 'TEU' = 'TEU' THEN
			MN.TGT_MVC_QTY * 2
			WHEN MN.CNTR_LOD_UT_CD = 'T' AND 'TEU' = 'FEU' THEN
			MN.TGT_MVC_QTY /2
			ELSE MN.TGT_MVC_QTY
			END
		) PROP_MQC_QTY  -- PROP_MQC_QTY	
		, SCP_MN.SVC_SCP_CD
		, MN.RESPB_SREP_CD
		,DECODE( MN.PRC_CTRT_CUST_TP_CD,'N','NON-BCO','BCO')  PRC_CTRT_CUST_TP_NM
		, MN.PROP_APRO_OFC_CD
	FROM PRI_RP_SCP_DUR DUR
		, PRI_RP_MN MN
		, PRI_RP_SCP_MN SCP_MN
		, MDM_ORGANIZATION M_ORG
	WHERE MN.PROP_OFC_CD = M_ORG.OFC_CD
		AND MN.AMDT_SEQ = 0
		AND MN.PROP_NO = DUR.PROP_NO
		AND MN.AMDT_SEQ = DUR.AMDT_SEQ
		AND MN.PROP_NO = SCP_MN.PROP_NO
		AND MN.AMDT_SEQ = SCP_MN.AMDT_SEQ
		AND SCP_MN.SVC_SCP_CD = DUR.SVC_SCP_CD
	#if(${frm_customer_type} == 'B')
				AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O')
	#elseif(${frm_customer_type} == 'N')
				AND MN.PRC_CTRT_CUST_TP_CD IN ('N')
	#else 
			AND MN.PRC_CTRT_CUST_TP_CD IN ('I','A','O','N')
	#end

	#if(${frm_prop_ofc_cd} != '')
				AND MN.PROP_OFC_CD = @[frm_prop_ofc_cd]
	#end

	#if(${frm_prop_srep_cd} != '')
				AND MN.RESPB_SREP_CD = @[frm_prop_srep_cd]
	#end

	#if(${frm_prop_apro_ofc_cd} != '')
				AND MN.PROP_APRO_OFC_CD = @[frm_prop_apro_ofc_cd]
	#end



	#if(${frm_ctrt_eff_dt} != '' )
		AND DUR.CTRT_EFF_DT >= TO_DATE(@[frm_ctrt_eff_dt],'YYYY-MM-DD')
	#end
	#if ( ${frm_ctrt_exp_dt} != '' )
		AND DUR.CTRT_EXP_DT  <= TO_DATE(@[frm_ctrt_exp_dt],'YYYY-MM-DD') 
	#end

	#if(${frm_svc_scp_cd} != '' )
				AND SCP_MN.SVC_SCP_CD = @[frm_svc_scp_cd]
				AND DUR.SVC_SCP_CD = @[frm_svc_scp_cd]
	#end
			-- STATUS
	#if (${frm_status} == 'Q') 
				AND  MN.PROP_STS_CD IN ( 'I', 'Q', 'R' ) /* REQUESTED */
	#elseif(${frm_status} == 'A') 
				AND  MN.PROP_STS_CD IN ( 'A' ) /* APPROVED */
	#end


	#if( $cust_list.size() != 0 ) 
		AND (MN.CTRT_CUST_CNT_CD ,MN.CTRT_CUST_SEQ) IN (
		#foreach( ${key} in ${cust_list}) 
			#if($velocityCount != 1 ) 
				UNION ALL
			#end
			SELECT 
					substr('$key',1,2),substr('$key',3)
			FROM DUAL
		#end
		)
	#end 
),
VW_RFA_NEW_DATA AS (
	SELECT /*+ MATERIALIZE */
		PROP_OFC_CD
		, PROP_OFC_NM
		, PROP_NO
		, AMDT_SEQ
		, CUST_CNT_CD
		, CUST_SEQ
		, CTRT_EFF_DT
		, CTRT_EXP_DT
		, WEEK_NEW      -- WEEK(NEW)
		, CTRT_PTY_NM      -- CUSTOMER NAME
		, PROP_MQC_QTY      -- MQC( TARGET VVD )
		, G_REV       -- GROSS REVENUE
		, COST_NEW_CM_OFFICE     -- COST(NEW)
		, COST_NEW_CM_TRADE     -- COST(NEW)
		, COST_NEW_OP_OFFICE     -- COST(NEW)
		, LOAD_NEW              -- LOAD(NEW)
		, NEW_RESPB_CM_AMT -- OFFICE PROPIT/CM
		, NEW_PFIT_CM_AMT -- TRADE PROPIT/CM
		, NEW_RESPB_OP_AMT -- OP(NEW)
		, CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB
		, CMPB_NEW_TRADE -- TRADE PROPIT/CMPB
		, OPB_NEW_OFFICE -- OPB(NEW)
	FROM (
		SELECT
			PROP_OFC_CD
			, MAX(PROP_OFC_NM) AS PROP_OFC_NM -- REQUEST OFFICE
			, PROP_NO
			, AMDT_SEQ
			, CUST_CNT_CD
			, CUST_SEQ
			, CTRT_EFF_DT, CTRT_EXP_DT
			, MAX(WEEK_NEW) AS WEEK_NEW
			, MAX(CTRT_PTY_NM) AS CTRT_PTY_NM        -- CUSTOMER NAME
			, MAX(PROP_MQC_QTY) AS PROP_MQC_QTY        -- MQC( TARGET VVD )
			, SUM((PROP_FRT_RT_AMT + PRS_SCG_AMT)*PRS_ESTM_LOD_QTY_FOR_RATE) AS G_REV      -- GROSS REVENUE
			, SUM(PRS_RESPB_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)
			, SUM(PRS_PFIT_CM_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)
			, SUM(PRS_RESPB_OPFIT_UC_AMT * PRS_ESTM_LOD_QTY_FOR_RATE) AS COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)
			, SUM(PRS_ESTM_LOD_QTY) AS LOAD_NEW-- LOAD(NEW)
			, SUM(ESTM_RESPB_CM_AMT) AS NEW_RESPB_CM_AMT    -- Office Profit -- CM(NEW)
			, SUM(ESTM_PFIT_CM_AMT) AS NEW_PFIT_CM_AMT    -- Trade Profit -- CM(NEW)
			, SUM(ESTM_RESPB_OP_AMT) AS NEW_RESPB_OP_AMT     --OP(NEW)
			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0,SUM(ESTM_RESPB_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_OFFICE -- OFFICE PROPIT/CMPB
			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0,SUM(ESTM_PFIT_CM_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS CMPB_NEW_TRADE -- TRADE PROPIT/CM
			, DECODE(SUM(PRS_ESTM_LOD_QTY),0,0,SUM(ESTM_RESPB_OP_AMT) / SUM(PRS_ESTM_LOD_QTY)) AS OPB_NEW_OFFICE  --OPB(NEW)
		FROM (
			SELECT MN.PROP_OFC_CD
				, MN.PROP_OFC_NM --  AS PROP_OFC_NM -- REQUEST OFFICE
				, MN.CUST_CNT_CD
				, MN.CUST_SEQ
				, MN.PROP_NO
				, MN.AMDT_SEQ
				, MN.CTRT_EFF_DT, MN.CTRT_EXP_DT
				, MN.CTRT_PTY_NM -- CTRT_PTY_NM        -- CUSTOMER NAME
				, MN.PROP_MQC_QTY  -- PROP_MQC_QTY        -- MQC( TARGET VVD )
				, MN.WEEK_NEW
				, RT.PROP_FRT_RT_AMT
				, RT.PRS_SCG_AMT
				, RT.PRS_RESPB_CM_UC_AMT  -- COST_NEW_CM_OFFICE -- COST-NEW-OFFICE_PROFIT/CM  -- COST(NEW)
				, RT.PRS_PFIT_CM_UC_AMT  -- COST_NEW_CM_TRADE -- COST-NEW-TRADE_PROFIT/CM  -- COST(NEW)

				, RT.PRS_RESPB_OPFIT_UC_AMT  -- COST_NEW_OP_OFFICE  -- COST-NEW-OFFICE_PROFIT/OP -- COST(NEW)

				, CMDT_ROUT.PRS_ESTM_LOD_QTY  / DECODE(@[frm_pfmc_unit],'FEU',2,'TEU',1) AS PRS_ESTM_LOD_QTY -- LOAD(NEW)

				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'
				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT
				ELSE
				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_CMPB_AMT  / 2
				END  AS ESTM_RESPB_CM_AMT  -- AS CM_NEW_OFFICE
				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'
				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT
				ELSE
				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_PFIT_CMPB_AMT  / 2
				END  AS ESTM_PFIT_CM_AMT    --  CM_NEW_OP_TRADE
				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2'
				THEN CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT
				ELSE
				CMDT_ROUT.PRS_ESTM_LOD_QTY * CMDT_ROUT.PRS_ESTM_RESPB_OPB_AMT  / 2
				END  AS ESTM_RESPB_OP_AMT    --  CM_NEW_OP_TRADE
				, CASE WHEN SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,2,1) = '2' OR SUBSTR(CMDT_ROUT.PRS_RAT_UT_CD,1,1) = '2' 
						THEN CMDT_ROUT.PRS_ESTM_LOD_QTY  
	       				ELSE	
							 CMDT_ROUT.PRS_ESTM_LOD_QTY    / 2
	       		  END  AS PRS_ESTM_LOD_QTY_FOR_RATE    --  
			FROM VW_RFA_MAIN_NEW_SET MN
				, PRI_RP_SCP_RT_CMDT_ROUT CMDT_ROUT
				, PRI_RP_SCP_RT RT

#if( ${frm_ori_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD, CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE( @[frm_ori_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_RFA_MAIN_NEW_SET MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'O'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_ori_rout_cd]
				) ORI_LOC
#end
#if( ${frm_dest_rout_cd} != '' )
				,(
				       SELECT DISTINCT PROP_NO, AMDT_SEQ, SVC_SCP_CD,  CMDT_HDR_SEQ, ROUT_SEQ
				       FROM (
						SELECT A.PROP_NO, A.AMDT_SEQ, A.SVC_SCP_CD, A.CMDT_HDR_SEQ, A.ROUT_SEQ
							, DECODE( @[frm_dest_loc_tp]
								, 'C',
								       (
									  SELECT CNT_CD 
									  FROM MDM_LOCATION 
									  WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD) 
								       )
								, 'R', 
									(
									    SELECT RGN_CD 
									    FROM MDM_LOCATION 
									    WHERE LOC_CD = DECODE(A.ROUT_PNT_LOC_TP_CD, 'G', C.LOC_CD, A.ROUT_PNT_LOC_DEF_CD)
									 )
								, NULL 
							)   AS LOC_CD 
						FROM VW_RFA_MAIN_NEW_SET MN_SET
							, PRI_RP_SCP_RT_ROUT_PNT A
							, PRI_RP_SCP_GRP_LOC B
							, PRI_RP_SCP_GRP_LOC_DTL C
						WHERE MN_SET.PROP_NO = A.PROP_NO
							AND MN_SET.AMDT_SEQ = A.AMDT_SEQ
							AND MN_SET.SVC_SCP_CD = A.SVC_SCP_CD
							AND A.ORG_DEST_TP_CD = 'D'
							AND A.SRC_INFO_CD <> 'AD'
							AND A.PROP_NO     = B.PROP_NO(+)
							AND A.AMDT_SEQ    = B.AMDT_SEQ(+)
							AND A.SVC_SCP_CD  = B.SVC_SCP_CD(+)
							AND A.ROUT_PNT_LOC_DEF_CD = B.PRC_GRP_LOC_CD(+)
							AND B.PROP_NO     = C.PROP_NO(+)
							AND B.AMDT_SEQ    = C.AMDT_SEQ(+)
							AND B.SVC_SCP_CD  = C.SVC_SCP_CD(+)
							AND B.GRP_LOC_SEQ = C.GRP_LOC_SEQ(+)
							AND C.SRC_INFO_CD(+) <> 'AD'
					)
					WHERE LOC_CD  = @[frm_dest_rout_cd]
				) DEST_LOC
#end
#if( $slane_list.size() != 0 ) 
				,(
					SELECT  DISTINCT RT.PROP_NO, RT.AMDT_SEQ, RT.SVC_SCP_CD, RT.CMDT_HDR_SEQ, RT.ROUT_SEQ
					FROM VW_RFA_MAIN_NEW_SET MN_SET
						, PRI_RP_SCP_RT RT
					WHERE MN_SET.PROP_NO = RT.PROP_NO
						AND MN_SET.AMDT_SEQ = RT.AMDT_SEQ
						AND MN_SET.SVC_SCP_CD = RT.SVC_SCP_CD
	#if( $slane_list.size() != 0 ) 
		AND RT.VSL_SLAN_CD IN (
		#foreach( ${key} in ${slane_list}) 
			#if($velocityCount != 1 ) 
				,
			#end
				'$key'
		#end
		)
	#end 
				) SLANE
#end
			WHERE  MN.PROP_NO = CMDT_ROUT.PROP_NO
				AND MN.AMDT_SEQ = CMDT_ROUT.AMDT_SEQ
				AND MN.SVC_SCP_CD = CMDT_ROUT.SVC_SCP_CD


#if( ${frm_ori_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = ORI_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = ORI_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = ORI_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  ORI_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = ORI_LOC.ROUT_SEQ
#end
#if( ${frm_dest_rout_cd} != '' )
				AND CMDT_ROUT.PROP_NO = DEST_LOC.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = DEST_LOC.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = DEST_LOC.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  DEST_LOC.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = DEST_LOC.ROUT_SEQ
#end
#if( $slane_list.size() != 0 ) 
				AND CMDT_ROUT.PROP_NO = SLANE.PROP_NO
				AND CMDT_ROUT.AMDT_SEQ = SLANE.AMDT_SEQ
				AND CMDT_ROUT.SVC_SCP_CD = SLANE.SVC_SCP_CD
				AND CMDT_ROUT.CMDT_HDR_SEQ =  SLANE.CMDT_HDR_SEQ
				AND CMDT_ROUT.ROUT_SEQ  = SLANE.ROUT_SEQ
#end



				AND CMDT_ROUT.PROP_NO = RT.PROP_NO(+)
				AND CMDT_ROUT.AMDT_SEQ = RT.AMDT_SEQ(+)
				AND CMDT_ROUT.SVC_SCP_CD = RT.SVC_SCP_CD(+)
				AND CMDT_ROUT.CMDT_HDR_SEQ =  RT.CMDT_HDR_SEQ(+)
				AND CMDT_ROUT.ROUT_SEQ  = RT.ROUT_SEQ(+)
				AND CMDT_ROUT.PRS_RAT_UT_CD = RT.RAT_UT_CD(+)
				AND CMDT_ROUT.PRS_CGO_TP_CD = RT.PRC_CGO_TP_CD(+)
				-- BY CARGO TYPE
				#if (${crg_tp_str} != '' )
					AND CMDT_ROUT.PRS_CGO_TP_CD IN ( ${crg_tp_str} )
				#end
		)
		GROUP BY PROP_OFC_CD,CUST_CNT_CD,CUST_SEQ, PROP_NO, AMDT_SEQ, CTRT_EFF_DT, CTRT_EXP_DT
	)
) ,
VW_RFA_RESULT AS (
	SELECT
		round(N.CMPB_NEW_OFFICE,2) as CMPB_NEW_OFFICE     -- OFFICE PROPIT/CM
		, round(N.CMPB_NEW_TRADE,2) as  CMPB_NEW_TRADE   -- TRADE PROPIT/CM
		, MN.RESPB_SREP_CD
		,MN.PROP_OFC_CD
		, MN.PROP_OFC_NM
		, MN.PROP_NO
		, MN.AMDT_SEQ
		, MN.CUST_CNT_CD
		, MN.CUST_SEQ
		, MN.CUST_CNT_CD || TO_CHAR(MN.CUST_SEQ,'FM000000' ) AS CUST_CD
		, MN.PRC_CTRT_CUST_TP_NM
		, MN.PROP_APRO_OFC_CD
		, TO_CHAR(MN.CTRT_EFF_DT,'YYYYMMDD') AS CTRT_EFF_DT
		, TO_CHAR(MN.CTRT_EXP_DT,'YYYYMMDD') AS CTRT_EXP_DT
		, MN.WEEK_NEW      -- WEEK(NEW)
		, MN.CTRT_PTY_NM      -- CUSTOMER NAME
		, MN.PROP_MQC_QTY     -- MQC( TARGET VVD )
		, N.G_REV      -- GROSS REVENUE
		, N.COST_NEW_CM_OFFICE     -- COST(NEW)
		, N.COST_NEW_CM_TRADE     -- COST(NEW)
		, N.COST_NEW_OP_OFFICE     -- COST(NEW)
		, N.OPB_NEW_OFFICE  as OPB_NEW     -- OPB(NEW)
		, N.LOAD_NEW      -- LOAD(NEW)
		, N.NEW_RESPB_CM_AMT AS  CM_NEW_OFFICE
		, N.NEW_PFIT_CM_AMT AS CM_NEW_TRADE
		, N.NEW_RESPB_OP_AMT AS OP_NEW
	FROM VW_RFA_MAIN_NEW_SET MN
		,VW_RFA_NEW_DATA N
	WHERE MN.PROP_NO = N.PROP_NO(+)
		AND   MN.AMDT_SEQ = N.AMDT_SEQ(+)
)
#end
SELECT TARGET_CODE
	, CODE_TP_CD
	, TARGET_TP
FROM (
	SELECT TARGET_CODE
		, CASE WHEN @[grp_code] = 'PROP_OFC_CD' THEN
				'A'
				WHEN @[grp_code] = 'CUST_CD' THEN
				'B'
				WHEN @[grp_code] = 'RESPB_SREP_CD' THEN
				'C'
				ELSE
				'D'
		  END AS CODE_TP_CD
		, ${new_data_col} AS NEW_VALUE
		, RANK() OVER(ORDER BY  ${rank_order}  ) RN -- DESC 상위, ASC 하위
		, COUNT(*) OVER () TOT_CNT
		, TARGET_TP
	FROM (
#if (${frm_contract_type} != 'R') 
		SELECT 
			${grp_code}  AS TARGET_CODE
			,SUM(LOAD_NEW) AS LOAD_NEW
			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(OPB_NEW * LOAD_NEW) / SUM(LOAD_NEW) )  AS OPB_NEW
			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_OFFICE * LOAD_NEW) / SUM(LOAD_NEW) ) AS CMPB_NEW_OFFICE
			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_TRADE * LOAD_NEW) / SUM(LOAD_NEW)) AS CMPB_NEW_TRADE
			,SUM(CM_NEW_OFFICE) AS CM_NEW_OFFICE
			,SUM(CM_NEW_TRADE) AS CM_NEW_TRADE
			,SUM(OP_NEW) AS OP_NEW
			,'S' AS TARGET_TP
		FROM VW_RESULT 
		GROUP BY  ${grp_code}
#end
#if (${frm_contract_type} == 'B') 
		UNION ALL
#end

#if (${frm_contract_type} != 'S') 
		SELECT
			${grp_code}  AS TARGET_CODE
			,SUM(LOAD_NEW) AS LOAD_NEW
			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(OPB_NEW * LOAD_NEW) / SUM(LOAD_NEW) )  AS OPB_NEW
			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_OFFICE * LOAD_NEW) / SUM(LOAD_NEW) ) AS CMPB_NEW_OFFICE
			,DECODE(NVL(SUM(LOAD_NEW),0),0,0, SUM(CMPB_NEW_TRADE * LOAD_NEW) / SUM(LOAD_NEW)) AS CMPB_NEW_TRADE
			,SUM(CM_NEW_OFFICE) AS CM_NEW_OFFICE
			,SUM(CM_NEW_TRADE) AS CM_NEW_TRADE
			,SUM(OP_NEW) AS OP_NEW
			,'R' AS TARGET_TP
		FROM VW_RFA_RESULT
		GROUP BY  ${grp_code}
#end
	)


)
WHERE RN <=  ${range_val}-- 보고싶은 RANGE
ORDER BY  TARGET_CODE			]]></sql>
			<params>
				<param name="frm_pfmc_unit" type="12" value="" out="N"/>
				<param name="frm_prop_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_prop_srep_cd" type="12" value="" out="N"/>
				<param name="frm_prop_apro_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_ctrt_eff_dt" type="12" value="" out="N"/>
				<param name="frm_ctrt_exp_dt" type="12" value="" out="N"/>
				<param name="frm_svc_scp_cd" type="12" value="" out="N"/>
				<param name="frm_ori_loc_tp" type="12" value="" out="N"/>
				<param name="frm_ori_rout_cd" type="12" value="" out="N"/>
				<param name="frm_dest_loc_tp" type="12" value="" out="N"/>
				<param name="frm_dest_rout_cd" type="12" value="" out="N"/>
				<param name="grp_code" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
