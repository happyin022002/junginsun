/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : SpacecontrolinquiryDBDAO021AllocPortViewList5BySRepRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.12.17
*@LastModifier : 최성민
*@LastVersion : 1.0
* 2015.12.17 최성민
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author CHOI SUNGMIN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class SpacecontrolinquiryDBDAO021AllocPortViewList5BySRepRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * S.REP별 QTA, Projection, BKG 현형 조회
	  * 2012.11.22 최윤성 [CHM-201221575-01] S.REP 별 관리 화주 가지고 오는 로직 수정
	  * 2012.12.03 [CHM-201221639] 김시몬 R9와 동일하게 R8이 적용될 수 있도록 쿼리수정
	  * 2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
	  * 2014.01.13 김시몬 [선처리] SELSC/TYOSC RHQ변경에 따른 SQM SPC_OFC_LVL추가
	  * 2014.03.25 김시몬 [선처리] SQM 분기구하는 로직 관련 보완
	  * 2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청
	  * 2015.08.24 [CHM-201537009] Split23-[그룹사 표준 코드 시행] HJS 프로그램 대응 및 데이타 마이그레이션 작업 요청 반영 후 쿼리 튜닝
	  * </pre>
	  */
	public SpacecontrolinquiryDBDAO021AllocPortViewList5BySRepRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rhq1",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("from_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("duration1",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sales_office1",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("srep_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esm.spc.spacecontrolinquiry.spacecontrolinquiry.integration").append("\n"); 
		query.append("FileName : SpacecontrolinquiryDBDAO021AllocPortViewList5BySRepRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH PARAMS AS (" ).append("\n"); 
		query.append("    SELECT   M.VSL_CD" ).append("\n"); 
		query.append("           , M.SKD_VOY_NO" ).append("\n"); 
		query.append("           , M.DIR_CD" ).append("\n"); 
		query.append("           , M.VSL_CD||M.SKD_VOY_NO||M.DIR_CD AS VVD" ).append("\n"); 
		query.append("           , @[srep_cd] AS SREP_CD" ).append("\n"); 
		query.append("           , @[rhq1] AS SLS_RHQ_CD" ).append("\n"); 
		query.append("           , @[sales_office1] AS SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           , M.TRD_CD" ).append("\n"); 
		query.append("           , M.RLANE_CD" ).append("\n"); 
		query.append("           , M.SUB_TRD_CD --20130424 추가" ).append("\n"); 
		query.append("           , M.COST_YRMON" ).append("\n"); 
		query.append("           , M.COST_WK" ).append("\n"); 
		query.append("           , TO_CHAR(TO_DATE(REPLACE(@[from_dt], '-', ''), 'YYYYMMDD'), 'YYYYMMDD') AS TO_DT" ).append("\n"); 
		query.append("           , TO_CHAR((SELECT TO_DATE(REPLACE(@[from_dt], '-', ''), 'YYYYMMDD') - TO_NUMBER(@[duration1]) + 1" ).append("\n"); 
		query.append("                FROM DUAL), 'YYYYMMDD') AS FROM_DT" ).append("\n"); 
		query.append("           , ROW_NUMBER() OVER (ORDER BY M.TRD_CD, M.RLANE_CD, M.VSL_CD, M.SKD_VOY_NO, M.DIR_CD) AS RNUM" ).append("\n"); 
		query.append("           , CASE WHEN M.COST_YRMON >= '201501' " ).append("\n"); 
		query.append("                  THEN CEIL(TO_NUMBER(SUBSTR(M.COST_YRMON, -2))/3)||'Q' " ).append("\n"); 
		query.append("                  ELSE CEIL(TO_NUMBER(DECODE(M.COST_WK,'00','01','53','52',M.COST_WK))/13)||'Q'" ).append("\n"); 
		query.append("             END BSE_QTR_CD --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("          , SUBSTR(M.COST_YRMON, 1,4) AS BSE_YR" ).append("\n"); 
		query.append("       FROM MAS_MON_VVD M" ).append("\n"); 
		query.append("          , SPC_TGT_VVD T" ).append("\n"); 
		query.append("     WHERE M.TRD_CD     = T.TRD_CD" ).append("\n"); 
		query.append("       AND M.RLANE_CD   = T.RLANE_CD" ).append("\n"); 
		query.append("       AND M.VSL_CD     = T.VSL_CD" ).append("\n"); 
		query.append("       AND M.SKD_VOY_NO = T.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND M.DIR_CD     = T.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND DELT_FLG = 'N'" ).append("\n"); 
		query.append("#if(${trade7} != '')" ).append("\n"); 
		query.append("       AND T.TRD_CD     IN ($trade7)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${rlane7} != '')" ).append("\n"); 
		query.append("       AND T.RLANE_CD   IN ($rlane7)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", QTA_DATA AS (" ).append("\n"); 
		query.append("    SELECT MQ.TRD_CD    ," ).append("\n"); 
		query.append("           MQ.RLANE_CD  ," ).append("\n"); 
		query.append("           P.SLS_RGN_OFC_CD as RGN_OFC_CD," ).append("\n"); 
		query.append("           MQ.VSL_CD," ).append("\n"); 
		query.append("           MQ.SKD_VOY_NO," ).append("\n"); 
		query.append("           MQ.SKD_DIR_CD," ).append("\n"); 
		query.append("           SUM(MQ.LOD_QTY) AS LOD_QTY" ).append("\n"); 
		query.append("      FROM SQM_QTA_RLSE_VER MQR," ).append("\n"); 
		query.append("           SQM_CFM_QTA      MQ ," ).append("\n"); 
		query.append("           PARAMS           P," ).append("\n"); 
		query.append("           SPC_OFC_LVL      O" ).append("\n"); 
		query.append("     WHERE MQ.BSE_YR           = P.BSE_YR" ).append("\n"); 
		query.append("       --2015.03.04 CHM-201534435 SQM QTA주가 변경 관련 적용 요청" ).append("\n"); 
		query.append("       --AND MQ.BSE_QTR_CD       = CEIL(TO_NUMBER(DECODE(P.COST_WK,'00','01','53','52',P.COST_WK))/13)||'Q' --CEIL(TO_NUMBER(SUBSTR(P.COST_YRMON, 5, 4)) / 3)||'Q'" ).append("\n"); 
		query.append("	   AND MQ.BSE_QTR_CD       = P.BSE_QTR_CD" ).append("\n"); 
		query.append("	   AND MQR.SQM_VER_STS_CD  = 'R'" ).append("\n"); 
		query.append("       AND MQR.BSE_TP_CD       = 'Q' -- 분기 20131205추가" ).append("\n"); 
		query.append("       AND MQ.QTA_RLSE_VER_NO  = MQR.QTA_RLSE_VER_NO" ).append("\n"); 
		query.append("       AND MQ.BSE_TP_CD        = MQR.BSE_TP_CD -- 분기 20131205추가    " ).append("\n"); 
		query.append("       AND MQ.BSE_YR           = MQR.BSE_YR" ).append("\n"); 
		query.append("       AND MQ.BSE_QTR_CD       = MQR.BSE_QTR_CD" ).append("\n"); 
		query.append("       AND MQ.QTA_TGT_CD       = 'D'" ).append("\n"); 
		query.append("       AND MQ.OFC_VW_CD        = 'L'" ).append("\n"); 
		query.append("       AND MQ.TRD_CD           = P.TRD_CD" ).append("\n"); 
		query.append("       AND MQ.RLANE_CD         = P.RLANE_CD" ).append("\n"); 
		query.append("       AND MQ.DIR_CD           = P.DIR_CD" ).append("\n"); 
		query.append("       AND MQ.VSL_CD           = P.VSL_CD" ).append("\n"); 
		query.append("       AND MQ.SKD_VOY_NO       = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND MQ.SKD_DIR_CD       = P.DIR_CD" ).append("\n"); 
		query.append("       AND O.N2ND_PRNT_OFC_CD  = P.SLS_RHQ_CD" ).append("\n"); 
		query.append("       AND SPC_SCR_OFC_CONV_FNC(MQ.RGN_OFC_CD,'') = P.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("       AND SUBSTR(P.COST_YRMON,1,4) || P.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("       --AND MQ.RGN_OFC_CD        = O.OFC_CD" ).append("\n"); 
		query.append("       AND (" ).append("\n"); 
		query.append("             SELECT NVL(MAX(ROC.CONV_RGN_OFC_CD), MQ.RGN_OFC_CD)" ).append("\n"); 
		query.append("               FROM SPC_RGN_OFC_CONV ROC" ).append("\n"); 
		query.append("              WHERE ROC.SLS_RGN_OFC_CD = MQ.RGN_OFC_CD" ).append("\n"); 
		query.append("           ) = O.OFC_CD" ).append("\n"); 
		query.append("  GROUP BY MQ.TRD_CD    ," ).append("\n"); 
		query.append("           MQ.RLANE_CD  ," ).append("\n"); 
		query.append("           P.SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("           MQ.VSL_CD," ).append("\n"); 
		query.append("           MQ.SKD_VOY_NO," ).append("\n"); 
		query.append("           MQ.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALOC_DATA AS (" ).append("\n"); 
		query.append("    SELECT   A.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           , A.TRD_CD" ).append("\n"); 
		query.append("           , A.RLANE_CD" ).append("\n"); 
		query.append("           , A.VSL_CD" ).append("\n"); 
		query.append("           , A.SKD_VOY_NO" ).append("\n"); 
		query.append("           , A.SKD_DIR_CD" ).append("\n"); 
		query.append("           , SUM(A.ASGN_TTL_QTY) AS ALLOC_QTY" ).append("\n"); 
		query.append("      FROM   SPC_ALOC_POL_POD A" ).append("\n"); 
		query.append("           , PARAMS P" ).append("\n"); 
		query.append("     WHERE A.TRD_CD = P.TRD_CD" ).append("\n"); 
		query.append("       AND A.RLANE_CD = P.RLANE_CD" ).append("\n"); 
		query.append("       AND A.VSL_CD = P.VSL_CD" ).append("\n"); 
		query.append("       AND A.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND A.SKD_DIR_CD = P.DIR_CD" ).append("\n"); 
		query.append("       AND A.SLS_RHQ_CD = P.SLS_RHQ_CD" ).append("\n"); 
		query.append("       AND A.SLS_RGN_OFC_CD = P.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("     GROUP BY  A.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("             , A.TRD_CD" ).append("\n"); 
		query.append("             , A.RLANE_CD" ).append("\n"); 
		query.append("             , A.VSL_CD" ).append("\n"); 
		query.append("             , A.SKD_VOY_NO" ).append("\n"); 
		query.append("             , A.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", HIS_DATA AS (" ).append("\n"); 
		query.append("    SELECT   /*+ INDEX (H XPKSPC_DLY_FCAST_SLS_REP_HIS) */ H.BSE_DT" ).append("\n"); 
		query.append("           , M.RNUM" ).append("\n"); 
		query.append("           , H.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           , H.SREP_CD" ).append("\n"); 
		query.append("           , SR.SREP_NM" ).append("\n"); 
		query.append("           , H.CUST_CNT_CD" ).append("\n"); 
		query.append("           , H.CUST_SEQ" ).append("\n"); 
		query.append("           , CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("           , CTRT_CUST_SEQ" ).append("\n"); 
		query.append("           , H.POL_YD_CD" ).append("\n"); 
		query.append("           , H.POD_YD_CD" ).append("\n"); 
		query.append("           , H.TRD_CD" ).append("\n"); 
		query.append("           , H.RLANE_CD" ).append("\n"); 
		query.append("           , H.VSL_CD||H.SKD_VOY_NO||H.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("           , H.VSL_CD" ).append("\n"); 
		query.append("           , H.SKD_VOY_NO" ).append("\n"); 
		query.append("           , H.SKD_DIR_CD" ).append("\n"); 
		query.append("           , SUM(H.FCAST_20FT_QTY + (NVL(H.FCAST_40FT_QTY, 0) + NVL(H.FCAST_40FT_HC_QTY, 0) + NVL(H.FCAST_45FT_HC_QTY, 0) + NVL(H.FCAST_53FT_QTY, 0)) * 2 ) AS FCAST_TTL_QTY" ).append("\n"); 
		query.append("           , SUM(H.FCAST_20FT_QTY) AS FCAST_20FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.FCAST_40FT_QTY) AS FCAST_40FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_20FT_QTY + (NVL(H.BKG_40FT_QTY, 0) + NVL(H.BKG_40FT_HC_QTY, 0) + NVL(H.BKG_45FT_HC_QTY, 0) + NVL(H.BKG_53FT_QTY, 0)) * 2) AS BKG_TTL_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_20FT_QTY) AS BKG_20FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_40FT_QTY) AS BKG_40FT_QTY" ).append("\n"); 
		query.append("           , (SELECT ALLOC_QTY" ).append("\n"); 
		query.append("                FROM ALOC_DATA" ).append("\n"); 
		query.append("               WHERE TRD_CD = H.TRD_CD" ).append("\n"); 
		query.append("                 AND RLANE_CD = H.RLANE_CD" ).append("\n"); 
		query.append("                 AND VSL_CD = H.VSL_CD" ).append("\n"); 
		query.append("                 AND SKD_VOY_NO = H.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND SKD_DIR_CD = H.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND SLS_RGN_OFC_CD = H.SLS_RGN_OFC_CD) AS ALOC_QTY" ).append("\n"); 
		query.append("           , (SELECT LOD_QTY" ).append("\n"); 
		query.append("                FROM QTA_DATA" ).append("\n"); 
		query.append("               WHERE TRD_CD = H.TRD_CD" ).append("\n"); 
		query.append("                 AND RLANE_CD = H.RLANE_CD" ).append("\n"); 
		query.append("                 AND VSL_CD = H.VSL_CD" ).append("\n"); 
		query.append("                 AND SKD_VOY_NO = H.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND SKD_DIR_CD = H.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND RGN_OFC_CD = H.SLS_RGN_OFC_CD) AS QTA_QTY" ).append("\n"); 
		query.append("      FROM   SPC_DLY_FCAST_SLS_REP_HIS H" ).append("\n"); 
		query.append("           , PARAMS M" ).append("\n"); 
		query.append("           , MDM_SLS_REP SR" ).append("\n"); 
		query.append("     WHERE H.BSE_DT BETWEEN M.FROM_DT AND M.TO_DT" ).append("\n"); 
		query.append("       AND H.TRD_CD = M.TRD_CD" ).append("\n"); 
		query.append("       AND H.RLANE_CD = M.RLANE_CD" ).append("\n"); 
		query.append("       AND H.DIR_CD = M.DIR_CD" ).append("\n"); 
		query.append("       AND H.VSL_CD = M.VSL_CD" ).append("\n"); 
		query.append("       AND H.SKD_VOY_NO = M.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND H.SKD_DIR_CD = M.DIR_CD" ).append("\n"); 
		query.append("       AND H.SREP_CD  = NVL(M.SREP_CD, H.SREP_CD)" ).append("\n"); 
		query.append("       AND H.SREP_CD = SR.SREP_CD" ).append("\n"); 
		query.append("       AND H.SLS_OFC_CD = H.SLS_OFC_CD" ).append("\n"); 
		query.append("       AND H.CUST_CNT_CD = H.CUST_CNT_CD" ).append("\n"); 
		query.append("       AND H.CUST_SEQ = H.CUST_SEQ       " ).append("\n"); 
		query.append("       AND H.CTRT_CUST_CNT_CD = '00'" ).append("\n"); 
		query.append("       AND H.CTRT_CUST_SEQ = H.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("       AND H.SLS_RHQ_CD = M.SLS_RHQ_CD" ).append("\n"); 
		query.append("       AND H.SLS_RGN_OFC_CD = M.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("     GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD)," ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD)," ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.CUST_CNT_CD, H.CUST_SEQ, H.CTRT_CUST_CNT_CD, H.CTRT_CUST_SEQ, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD)," ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.CUST_CNT_CD, H.CUST_SEQ, H.CTRT_CUST_CNT_CD, H.CTRT_CUST_SEQ, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD, POL_YD_CD)," ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.CUST_CNT_CD, H.CUST_SEQ, H.CTRT_CUST_CNT_CD, H.CTRT_CUST_SEQ, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD, POL_YD_CD, POD_YD_CD)" ).append("\n"); 
		query.append("                           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", HIS_DATA1 AS (" ).append("\n"); 
		query.append("    SELECT   /*+ INDEX (H XPKSPC_DLY_FCAST_SLS_REP_HIS) */ H.BSE_DT" ).append("\n"); 
		query.append("           , M.RNUM" ).append("\n"); 
		query.append("           , H.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           , H.SREP_CD" ).append("\n"); 
		query.append("           , SR.SREP_NM" ).append("\n"); 
		query.append("           , H.CUST_CNT_CD" ).append("\n"); 
		query.append("           , H.CUST_SEQ" ).append("\n"); 
		query.append("           , H.CTRT_CUST_CNT_CD AS CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("           , H.CTRT_CUST_SEQ AS CTRT_CUST_SEQ" ).append("\n"); 
		query.append("           , H.POL_YD_CD" ).append("\n"); 
		query.append("           , H.POD_YD_CD" ).append("\n"); 
		query.append("           , H.TRD_CD" ).append("\n"); 
		query.append("           , H.RLANE_CD" ).append("\n"); 
		query.append("           , H.VSL_CD||H.SKD_VOY_NO||H.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("           , H.VSL_CD" ).append("\n"); 
		query.append("           , H.SKD_VOY_NO" ).append("\n"); 
		query.append("           , H.SKD_DIR_CD" ).append("\n"); 
		query.append("           , SUM(H.FCAST_20FT_QTY + (NVL(H.FCAST_40FT_QTY, 0) + NVL(H.FCAST_40FT_HC_QTY, 0) + NVL(H.FCAST_45FT_HC_QTY, 0) + NVL(H.FCAST_53FT_QTY, 0)) * 2 ) AS FCAST_TTL_QTY" ).append("\n"); 
		query.append("           , SUM(H.FCAST_20FT_QTY) AS FCAST_20FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.FCAST_40FT_QTY) AS FCAST_40FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_20FT_QTY + (NVL(H.BKG_40FT_QTY, 0) + NVL(H.BKG_40FT_HC_QTY, 0) + NVL(H.BKG_45FT_HC_QTY, 0) + NVL(H.BKG_53FT_QTY, 0)) * 2) AS BKG_TTL_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_20FT_QTY) AS BKG_20FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_40FT_QTY) AS BKG_40FT_QTY" ).append("\n"); 
		query.append("           , (SELECT ALLOC_QTY" ).append("\n"); 
		query.append("                FROM ALOC_DATA" ).append("\n"); 
		query.append("               WHERE TRD_CD = H.TRD_CD" ).append("\n"); 
		query.append("                 AND RLANE_CD = H.RLANE_CD" ).append("\n"); 
		query.append("                 AND VSL_CD = H.VSL_CD" ).append("\n"); 
		query.append("                 AND SKD_VOY_NO = H.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND SKD_DIR_CD = H.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND SLS_RGN_OFC_CD = H.SLS_RGN_OFC_CD) AS ALOC_QTY" ).append("\n"); 
		query.append("           , (SELECT LOD_QTY" ).append("\n"); 
		query.append("                FROM QTA_DATA" ).append("\n"); 
		query.append("               WHERE TRD_CD = H.TRD_CD" ).append("\n"); 
		query.append("                 AND RLANE_CD = H.RLANE_CD" ).append("\n"); 
		query.append("                 AND VSL_CD = H.VSL_CD" ).append("\n"); 
		query.append("                 AND SKD_VOY_NO = H.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND SKD_DIR_CD = H.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND RGN_OFC_CD = H.SLS_RGN_OFC_CD) AS QTA_QTY" ).append("\n"); 
		query.append("      FROM   SPC_DLY_FCAST_SLS_REP_HIS H" ).append("\n"); 
		query.append("           , PARAMS M" ).append("\n"); 
		query.append("           , MDM_SLS_REP SR" ).append("\n"); 
		query.append("     WHERE 1=1" ).append("\n"); 
		query.append("       AND H.BSE_DT BETWEEN M.FROM_DT AND M.TO_DT" ).append("\n"); 
		query.append("       AND H.TRD_CD = M.TRD_CD" ).append("\n"); 
		query.append("       AND H.RLANE_CD = M.RLANE_CD" ).append("\n"); 
		query.append("       AND H.DIR_CD = M.DIR_CD" ).append("\n"); 
		query.append("       AND H.VSL_CD = M.VSL_CD" ).append("\n"); 
		query.append("       AND H.SKD_VOY_NO = M.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND H.SKD_DIR_CD = M.DIR_CD" ).append("\n"); 
		query.append("       AND H.SREP_CD  = NVL(M.SREP_CD, H.SREP_CD)" ).append("\n"); 
		query.append("       AND H.SREP_CD = SR.SREP_CD" ).append("\n"); 
		query.append("       AND H.SLS_OFC_CD = H.SLS_OFC_CD" ).append("\n"); 
		query.append("       AND H.CUST_CNT_CD = H.CUST_CNT_CD" ).append("\n"); 
		query.append("       AND H.CUST_SEQ = H.CUST_SEQ  " ).append("\n"); 
		query.append("       AND H.CTRT_CUST_CNT_CD > '00'" ).append("\n"); 
		query.append("       AND H.SLS_RHQ_CD = M.SLS_RHQ_CD" ).append("\n"); 
		query.append("       AND H.CTRT_CUST_SEQ = H.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("       AND H.SLS_RGN_OFC_CD = M.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("     GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.CUST_CNT_CD, H.CUST_SEQ, H.CTRT_CUST_CNT_CD, H.CTRT_CUST_SEQ, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD)," ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.CUST_CNT_CD, H.CUST_SEQ, H.CTRT_CUST_CNT_CD, H.CTRT_CUST_SEQ, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD, POL_YD_CD)," ).append("\n"); 
		query.append("                                (H.BSE_DT, M.RNUM, H.SLS_RGN_OFC_CD, H.TRD_CD, H.SREP_CD, SR.SREP_NM, H.CUST_CNT_CD, H.CUST_SEQ, H.CTRT_CUST_CNT_CD, H.CTRT_CUST_SEQ, H.RLANE_CD, H.VSL_CD, H.SKD_VOY_NO, H.SKD_DIR_CD, POL_YD_CD, POD_YD_CD)" ).append("\n"); 
		query.append("                           )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#if(${sDate} == 'Y')" ).append("\n"); 
		query.append(", TODAY_DATA AS (" ).append("\n"); 
		query.append("    SELECT   TO_CHAR(SYSDATE, 'YYYYMMDD') AS BSE_DT" ).append("\n"); 
		query.append("           , H.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("           , H.SREP_CD" ).append("\n"); 
		query.append("           , SR.SREP_NM" ).append("\n"); 
		query.append("           , H.CUST_CNT_CD" ).append("\n"); 
		query.append("           , H.CUST_SEQ" ).append("\n"); 
		query.append("           , H.CTRT_CUST_CNT_CD AS CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("           , H.CTRT_CUST_SEQ AS CTRT_CUST_SEQ" ).append("\n"); 
		query.append("           , H.POL_YD_CD" ).append("\n"); 
		query.append("           , H.POD_YD_CD" ).append("\n"); 
		query.append("           , H.TRD_CD" ).append("\n"); 
		query.append("           , H.RLANE_CD" ).append("\n"); 
		query.append("           , H.VSL_CD||H.SKD_VOY_NO||H.SKD_DIR_CD AS VVD" ).append("\n"); 
		query.append("           , H.VSL_CD" ).append("\n"); 
		query.append("           , H.SKD_VOY_NO" ).append("\n"); 
		query.append("           , H.SKD_DIR_CD" ).append("\n"); 
		query.append("           , H.RNUM" ).append("\n"); 
		query.append("           , SUM(H.FCAST_20FT_QTY + (NVL(H.FCAST_40FT_QTY, 0) + NVL(H.FCAST_40FT_HC_QTY, 0) + NVL(H.FCAST_45FT_HC_QTY, 0) + NVL(H.FCAST_53FT_QTY, 0)) * 2 ) AS FCAST_TTL_QTY" ).append("\n"); 
		query.append("           , SUM(H.FCAST_20FT_QTY) AS FCAST_20FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.FCAST_40FT_QTY) AS FCAST_40FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_20FT_QTY + (NVL(H.BKG_40FT_QTY, 0) + NVL(H.BKG_40FT_HC_QTY, 0) + NVL(H.BKG_45FT_HC_QTY, 0) + NVL(H.BKG_53FT_QTY, 0)) * 2) AS BKG_TTL_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_20FT_QTY) AS BKG_20FT_QTY" ).append("\n"); 
		query.append("           , SUM(H.BKG_40FT_QTY) AS BKG_40FT_QTY" ).append("\n"); 
		query.append("           , (SELECT ALLOC_QTY" ).append("\n"); 
		query.append("                FROM ALOC_DATA" ).append("\n"); 
		query.append("               WHERE TRD_CD = H.TRD_CD" ).append("\n"); 
		query.append("                 AND RLANE_CD = H.RLANE_CD" ).append("\n"); 
		query.append("                 AND VSL_CD = H.VSL_CD" ).append("\n"); 
		query.append("                 AND SKD_VOY_NO = H.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND SKD_DIR_CD = H.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND SLS_RGN_OFC_CD = H.SLS_RGN_OFC_CD) AS ALOC_QTY" ).append("\n"); 
		query.append("           , (SELECT LOD_QTY" ).append("\n"); 
		query.append("                FROM QTA_DATA" ).append("\n"); 
		query.append("               WHERE TRD_CD = H.TRD_CD" ).append("\n"); 
		query.append("                 AND RLANE_CD = H.RLANE_CD" ).append("\n"); 
		query.append("                 AND VSL_CD = H.VSL_CD" ).append("\n"); 
		query.append("                 AND SKD_VOY_NO = H.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND SKD_DIR_CD = H.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND RGN_OFC_CD = H.SLS_RGN_OFC_CD) AS QTA_QTY" ).append("\n"); 
		query.append("	  FROM (" ).append("\n"); 
		query.append("	    SELECT " ).append("\n"); 
		query.append("	           F.TRD_CD                 ," ).append("\n"); 
		query.append("	           F.RLANE_CD               ," ).append("\n"); 
		query.append("	           F.DIR_CD                 ," ).append("\n"); 
		query.append("	           F.VSL_CD                 ," ).append("\n"); 
		query.append("	           F.SKD_VOY_NO             ," ).append("\n"); 
		query.append("	           F.SKD_DIR_CD             ," ).append("\n"); 
		query.append("	           V.RNUM                   ," ).append("\n"); 
		query.append("	           F.SREP_USR_ID AS SREP_CD ," ).append("\n"); 
		query.append("	           F.SLS_OFC_CD             ," ).append("\n"); 
		query.append("	           NVL(RC.CUST_CNT_CD, 'XX') AS CUST_CNT_CD," ).append("\n"); 
		query.append("	           NVL(RC.CUST_SEQ, 999999)  AS CUST_SEQ," ).append("\n"); 
		query.append("	           F.CUST_CNT_CD  AS CTRT_CUST_CNT_CD          ," ).append("\n"); 
		query.append("	           F.CUST_SEQ     AS CTRT_CUST_SEQ          ," ).append("\n"); 
		query.append("	           F.POL_YD_CD              ," ).append("\n"); 
		query.append("	           F.POD_YD_CD              ," ).append("\n"); 
		query.append("	           F.SLS_RGN_OFC_CD         ," ).append("\n"); 
		query.append("           	   NVL(FCAST_20FT_QTY, NVL(CFM_TTL_QTY, 0)) AS FCAST_20FT_QTY ," ).append("\n"); 
		query.append("	           NVL(FCAST_40FT_QTY, 0) 	 AS FCAST_40FT_QTY    ," ).append("\n"); 
		query.append("	           NVL(CFM_40FT_HC_QTY, 0) AS FCAST_40FT_HC_QTY ," ).append("\n"); 
		query.append("	           NVL(CFM_45FT_HC_QTY, 0) AS FCAST_45FT_HC_QTY ," ).append("\n"); 
		query.append("	           NVL(CFM_53FT_QTY, 0)    AS FCAST_53FT_QTY    ," ).append("\n"); 
		query.append("	           NVL(CFM_RF_QTY, 0)      AS FCAST_RF_QTY      ," ).append("\n"); 
		query.append("	           NVL(CFM_TTL_WGT, 0)     AS FCAST_TTL_WGT     ," ).append("\n"); 
		query.append("	           0 AS BKG_20FT_QTY        ," ).append("\n"); 
		query.append("	           0 AS BKG_40FT_QTY        ," ).append("\n"); 
		query.append("	           0 AS BKG_40FT_HC_QTY     ," ).append("\n"); 
		query.append("	           0 AS BKG_45FT_HC_QTY     ," ).append("\n"); 
		query.append("	           0 AS BKG_53FT_QTY        ," ).append("\n"); 
		query.append("	           0 AS BKG_RF_QTY          ," ).append("\n"); 
		query.append("	           0 AS BKG_TTL_WGT" ).append("\n"); 
		query.append("	      FROM SPC_DLY_FCAST_CUST F," ).append("\n"); 
		query.append("	           PARAMS             V," ).append("\n"); 
		query.append("	           SPC_SLS_REP_CUST   RC" ).append("\n"); 
		query.append("	     WHERE F.TRD_CD     = V.TRD_CD" ).append("\n"); 
		query.append("	       AND F.RLANE_CD   = V.RLANE_CD" ).append("\n"); 
		query.append("	       AND F.DIR_CD     = V.DIR_CD" ).append("\n"); 
		query.append("	       AND F.VSL_CD     = V.VSL_CD" ).append("\n"); 
		query.append("	       AND F.SKD_VOY_NO = V.SKD_VOY_NO" ).append("\n"); 
		query.append("	       AND F.SKD_DIR_CD = V.DIR_CD" ).append("\n"); 
		query.append("           AND F.SLS_RHQ_CD = V.SLS_RHQ_CD" ).append("\n"); 
		query.append("	       AND F.SLS_RGN_OFC_CD = V.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("	       AND F.SREP_USR_ID    = NVL(V.SREP_CD, F.SREP_USR_ID)" ).append("\n"); 
		query.append("	       AND F.TRD_CD         = RC.TRD_CD(+)     -- 20130424 추가" ).append("\n"); 
		query.append("	       AND F.SUB_TRD_CD     = RC.SUB_TRD_CD(+) -- 20130424 추가 " ).append("\n"); 
		query.append("	       AND F.SREP_USR_ID    = RC.SREP_CD(+)" ).append("\n"); 
		query.append("	       AND F.CUST_CNT_CD    = RC.CUST_CNT_CD(+)" ).append("\n"); 
		query.append("	       AND F.CUST_SEQ       = RC.CUST_SEQ(+)" ).append("\n"); 
		query.append("	       AND NVL(RC.DELT_FLG, 'N') = 'N'" ).append("\n"); 
		query.append("	    UNION ALL" ).append("\n"); 
		query.append("	    SELECT " ).append("\n"); 
		query.append("	            TRD_CD," ).append("\n"); 
		query.append("	            RLANE_CD," ).append("\n"); 
		query.append("	            DIR_CD," ).append("\n"); 
		query.append("	            VSL_CD," ).append("\n"); 
		query.append("	            SKD_VOY_NO," ).append("\n"); 
		query.append("	            SKD_DIR_CD," ).append("\n"); 
		query.append("	            RNUM," ).append("\n"); 
		query.append("	            SREP_CD," ).append("\n"); 
		query.append("	            SLS_OFC_CD," ).append("\n"); 
		query.append("	            CUST_CNT_CD," ).append("\n"); 
		query.append("	            CUST_SEQ," ).append("\n"); 
		query.append("	            CTRT_CUST_CNT_CD," ).append("\n"); 
		query.append("	            CTRT_CUST_SEQ," ).append("\n"); 
		query.append("	            POL_YD_CD," ).append("\n"); 
		query.append("	            POD_YD_CD," ).append("\n"); 
		query.append("	            SLS_RGN_OFC_CD," ).append("\n"); 
		query.append("	            0 AS FCAST_20FT_QTY        ," ).append("\n"); 
		query.append("	            0 AS FCAST_40FT_QTY        ," ).append("\n"); 
		query.append("	            0 AS FCAST_40FT_HC_QTY     ," ).append("\n"); 
		query.append("	            0 AS FCAST_45FT_HC_QTY     ," ).append("\n"); 
		query.append("	            0 AS FCAST_53FT_QTY        ," ).append("\n"); 
		query.append("	            0 AS FCAST_RF_QTY          ," ).append("\n"); 
		query.append("	            0 AS FCAST_TTL_WGT         ," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 15, 14), 0))) AS BKG_20FT_QTY   ," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 29, 14), 0))) AS BKG_40FT_QTY   ," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 43, 14), 0))) AS BKG_40FT_HC_QTY," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 57, 14), 0))) AS BKG_45FT_HC_QTY," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 71, 14), 0))) AS BKG_53FT_QTY   ," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 85, 14), 0))) AS BKG_RF_QTY     ," ).append("\n"); 
		query.append("	            (TO_NUMBER(NVL(SUBSTR(B.VAL, 99, 14), 0))) AS BKG_TTL_WGT" ).append("\n"); 
		query.append("	      FROM (" ).append("\n"); 
		query.append("	        SELECT RB.TRD_CD                  ," ).append("\n"); 
		query.append("	               VP.RLANE_CD                ," ).append("\n"); 
		query.append("	               VP.DIR_CD AS DIR_CD    ," ).append("\n"); 
		query.append("	               RB.IOC_CD  AS IOC_TS_CD               ," ).append("\n"); 
		query.append("	               O.N4TH_PRNT_OFC_CD  AS SLS_RGN_OFC_CD      ," ).append("\n"); 
		query.append("	               O.N3RD_PRNT_OFC_CD  AS SLS_AQ_CD     ," ).append("\n"); 
		query.append("	               O.N2ND_PRNT_OFC_CD  AS SLS_RHQ_CD       ," ).append("\n"); 
		query.append("	               O.OFC_CD AS SLS_OFC_CD," ).append("\n"); 
		query.append("	               B.OB_SREP_CD  AS SREP_CD   ," ).append("\n"); 
		query.append("	               --NVL(RC.CUST_CNT_CD, 'XX') AS CUST_CNT_CD," ).append("\n"); 
		query.append("	               --NVL(RC.CUST_SEQ, 999999)   AS CUST_SEQ," ).append("\n"); 
		query.append("                   NVL(" ).append("\n"); 
		query.append("                       (SELECT DISTINCT RC.CUST_CNT_CD" ).append("\n"); 
		query.append("                          FROM SPC_SLS_REP_CUST RC" ).append("\n"); 
		query.append("                         WHERE VP.TRD_CD            = RC.TRD_CD     -- 20130424 추가" ).append("\n"); 
		query.append("            	           AND VP.SUB_TRD_CD        = RC.SUB_TRD_CD -- 20130424 추가 " ).append("\n"); 
		query.append("            	           AND B.OB_SREP_CD         = RC.SREP_CD" ).append("\n"); 
		query.append("            	           AND B.CTRT_CUST_CNT_CD   = RC.CUST_CNT_CD" ).append("\n"); 
		query.append("            	           AND B.CTRT_CUST_SEQ      = RC.CUST_SEQ" ).append("\n"); 
		query.append("            	           AND NVL(RC.DELT_FLG, 'N') = 'N')" ).append("\n"); 
		query.append("                      , 'XX') AS CUST_CNT_CD," ).append("\n"); 
		query.append("	               NVL((" ).append("\n"); 
		query.append("	                    SELECT DISTINCT RC.CUST_SEQ" ).append("\n"); 
		query.append("                          FROM SPC_SLS_REP_CUST RC" ).append("\n"); 
		query.append("                         WHERE VP.TRD_CD            = RC.TRD_CD     -- 20130424 추가" ).append("\n"); 
		query.append("            	           AND VP.SUB_TRD_CD        = RC.SUB_TRD_CD -- 20130424 추가 " ).append("\n"); 
		query.append("            	           AND B.OB_SREP_CD         = RC.SREP_CD" ).append("\n"); 
		query.append("            	           AND B.CTRT_CUST_CNT_CD   = RC.CUST_CNT_CD" ).append("\n"); 
		query.append("            	           AND B.CTRT_CUST_SEQ      = RC.CUST_SEQ" ).append("\n"); 
		query.append("            	           AND NVL(RC.DELT_FLG, 'N') = 'N')" ).append("\n"); 
		query.append("	                  , 999999)   AS CUST_SEQ," ).append("\n"); 
		query.append("	               B.CTRT_CUST_CNT_CD AS CTRT_CUST_CNT_CD," ).append("\n"); 
		query.append("	               B.CTRT_CUST_SEQ    AS CTRT_CUST_SEQ," ).append("\n"); 
		query.append("	               NVL(BV.POL_YD_CD, BV.POL_CD) AS POL_YD_CD," ).append("\n"); 
		query.append("	               NVL(BV.POD_YD_CD, BV.POD_CD) AS POD_YD_CD," ).append("\n"); 
		query.append("	               BV.VSL_CD    ," ).append("\n"); 
		query.append("	               BV.SKD_VOY_NO," ).append("\n"); 
		query.append("	               BV.SKD_DIR_CD," ).append("\n"); 
		query.append("	               VP.RNUM," ).append("\n"); 
		query.append("	               (" ).append("\n"); 
		query.append("	                  SELECT    TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("	                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("	                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '4', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("	                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '5', Q.OP_CNTR_QTY, '9', Q.OP_CNTR_QTY, '8', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')	--R9,R8에 대해서 R5과 동일하게 HC으로 처리되도록 추가" ).append("\n"); 
		query.append("	                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '7', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("	                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'W', Q.OP_CNTR_QTY, 0) + DECODE(SPC_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), 'X', Q.OP_CNTR_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("	                         || TO_CHAR(SUM(DECODE(SPC_GET_CNTR_TP_FNC(Q.CNTR_TPSZ_CD), 'R', Q.OP_CNTR_QTY - Q.EQ_SUBST_CGO_QTY, 0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("	                         || TO_CHAR((BL.ACT_WGT * DECODE(BL.WGT_UT_CD, 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("	                                                                                                                         FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("	                                                                                                                        WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("	                    FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("	                   WHERE B.BKG_NO      = Q.BKG_NO" ).append("\n"); 
		query.append("	                     AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("	               ) AS VAL" ).append("\n"); 
		query.append("	          FROM BKG_BOOKING      B ," ).append("\n"); 
		query.append("	               BKG_VVD          BV," ).append("\n"); 
		query.append("	               PARAMS           VP," ).append("\n"); 
		query.append("	               MDM_DTL_REV_LANE RB," ).append("\n"); 
		query.append("	               BKG_BL_DOC       BL," ).append("\n"); 
		query.append("	               SPC_OFC_LVL      O " ).append("\n"); 
		query.append("	               --SPC_SLS_REP_CUST RC -- 20130424  SELECT 안으로 변경" ).append("\n"); 
		query.append("	         WHERE 1=1 " ).append("\n"); 
		query.append("	           AND B.BKG_STS_CD        IN ('W', 'F')" ).append("\n"); 
		query.append("	           AND B.BKG_CGO_TP_CD     IN ('F', 'B', 'R')" ).append("\n"); 
		query.append("	           AND B.BKG_NO             = BV.BKG_NO" ).append("\n"); 
		query.append("	           AND B.BKG_NO             = BL.BKG_NO" ).append("\n"); 
		query.append("	           AND RB.TRD_CD            = VP.TRD_CD" ).append("\n"); 
		query.append("	           AND RB.RLANE_CD          = VP.RLANE_CD" ).append("\n"); 
		query.append("	           AND RB.VSL_SLAN_DIR_CD   = VP.DIR_CD" ).append("\n"); 
		query.append("	           AND RB.FM_CONTI_CD       = ( SELECT SPC_CONTI_CONV_FNC(MLOC.CONTI_CD, RB.RLANE_CD,RB.VSL_SLAN_DIR_CD)" ).append("\n"); 
		query.append("	                                          FROM MDM_LOCATION MLOC" ).append("\n"); 
		query.append("	                                         WHERE MLOC.LOC_CD = BV.POL_CD )" ).append("\n"); 
		query.append("	           AND RB.TO_CONTI_CD       = ( SELECT SPC_CONTI_CONV_FNC(MLOC.CONTI_CD, RB.RLANE_CD,RB.VSL_SLAN_DIR_CD)" ).append("\n"); 
		query.append("	                                          FROM MDM_LOCATION MLOC" ).append("\n"); 
		query.append("	                                         WHERE MLOC.LOC_CD = BV.POD_CD )" ).append("\n"); 
		query.append("	           AND RB.DELT_FLG          = 'N'" ).append("\n"); 
		query.append("	           AND BV.VSL_CD            = VP.VSL_CD" ).append("\n"); 
		query.append("	           AND BV.SKD_VOY_NO        = VP.SKD_VOY_NO" ).append("\n"); 
		query.append("	           AND BV.SKD_DIR_CD        = VP.DIR_CD" ).append("\n"); 
		query.append("	           AND SPC_SCR_OFC_CONV_FNC(B.OB_SLS_OFC_CD) = O.OFC_CD" ).append("\n"); 
		query.append("	           AND B.OB_SREP_CD         = NVL(VP.SREP_CD, B.OB_SREP_CD)" ).append("\n"); 
		query.append("	           AND SUBSTR(VP.COST_YRMON, 1, 4)||VP.COST_WK BETWEEN O.OFC_APLY_FM_YRWK AND O.OFC_APLY_TO_YRWK" ).append("\n"); 
		query.append("               AND O.N2ND_PRNT_OFC_CD   = VP.SLS_RHQ_CD" ).append("\n"); 
		query.append("	           AND O.N4TH_PRNT_OFC_CD   = VP.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("	           --AND B.OB_SREP_CD         = RC.SREP_CD(+)   -- 20130424 변경" ).append("\n"); 
		query.append("	           --AND B.CTRT_CUST_CNT_CD   = RC.CUST_CNT_CD(+)" ).append("\n"); 
		query.append("	           --AND B.CTRT_CUST_SEQ      = RC.CUST_SEQ(+)" ).append("\n"); 
		query.append("	           --AND NVL(RC.DELT_FLG, 'N') = 'N'" ).append("\n"); 
		query.append("	       ) B" ).append("\n"); 
		query.append("	   ) H" ).append("\n"); 
		query.append("	   , MDM_SLS_REP SR" ).append("\n"); 
		query.append("	WHERE H.SREP_CD = SR.SREP_CD" ).append("\n"); 
		query.append("	GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, SLS_RGN_OFC_CD), " ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD), " ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ), " ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ, POL_YD_CD), " ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ, POL_YD_CD, POD_YD_CD), " ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ, CTRT_CUST_CNT_CD, CTRT_CUST_SEQ), " ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ, CTRT_CUST_CNT_CD, CTRT_CUST_SEQ, POL_YD_CD)," ).append("\n"); 
		query.append("	                            (TRD_CD, RLANE_CD, DIR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RNUM, H.SREP_CD, SR.SREP_NM, SLS_RGN_OFC_CD, CUST_CNT_CD, CUST_SEQ, CTRT_CUST_CNT_CD, CTRT_CUST_SEQ, POL_YD_CD, POD_YD_CD) " ).append("\n"); 
		query.append("	                       ) " ).append("\n"); 
		query.append("	HAVING NOT (CTRT_CUST_CNT_CD IS NOT NULL AND CUST_CNT_CD = NVL(CTRT_CUST_CNT_CD, 'X') AND CUST_SEQ = NVL(CTRT_CUST_SEQ, 1))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(", ALL_DATA AS (" ).append("\n"); 
		query.append("        SELECT   DECODE(H.CTRT_CUST_CNT_CD, '00', 1, NULL, 1, 2) AS LVL" ).append("\n"); 
		query.append("               , H.BSE_DT" ).append("\n"); 
		query.append("               , H.RNUM" ).append("\n"); 
		query.append("               , H.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("               , H.SREP_CD" ).append("\n"); 
		query.append("               , H.SREP_NM" ).append("\n"); 
		query.append("               , H.CUST_CNT_CD" ).append("\n"); 
		query.append("               , H.CUST_SEQ" ).append("\n"); 
		query.append("               , H.CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("               , H.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("               , H.POL_YD_CD" ).append("\n"); 
		query.append("               , H.POD_YD_CD" ).append("\n"); 
		query.append("               , H.RLANE_CD" ).append("\n"); 
		query.append("               , H.VSL_CD" ).append("\n"); 
		query.append("               , H.SKD_VOY_NO" ).append("\n"); 
		query.append("               , H.SKD_DIR_CD" ).append("\n"); 
		query.append("               , H.FCAST_TTL_QTY" ).append("\n"); 
		query.append("               , H.FCAST_20FT_QTY" ).append("\n"); 
		query.append("               , H.FCAST_40FT_QTY" ).append("\n"); 
		query.append("               , H.BKG_TTL_QTY" ).append("\n"); 
		query.append("               , H.BKG_20FT_QTY" ).append("\n"); 
		query.append("               , H.BKG_40FT_QTY" ).append("\n"); 
		query.append("               , H.ALOC_QTY" ).append("\n"); 
		query.append("               , H.QTA_QTY" ).append("\n"); 
		query.append("          FROM HIS_DATA H" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT   DECODE(H.CTRT_CUST_CNT_CD, '00', 1, NULL, 1, 2) AS LVL" ).append("\n"); 
		query.append("               , H.BSE_DT" ).append("\n"); 
		query.append("               , H.RNUM" ).append("\n"); 
		query.append("               , H.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("               , H.SREP_CD" ).append("\n"); 
		query.append("               , H.SREP_NM" ).append("\n"); 
		query.append("               , H.CUST_CNT_CD" ).append("\n"); 
		query.append("               , H.CUST_SEQ" ).append("\n"); 
		query.append("               , H.CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("               , H.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("               , H.POL_YD_CD" ).append("\n"); 
		query.append("               , H.POD_YD_CD" ).append("\n"); 
		query.append("               , H.RLANE_CD" ).append("\n"); 
		query.append("               , H.VSL_CD" ).append("\n"); 
		query.append("               , H.SKD_VOY_NO" ).append("\n"); 
		query.append("               , H.SKD_DIR_CD" ).append("\n"); 
		query.append("               , H.FCAST_TTL_QTY" ).append("\n"); 
		query.append("               , H.FCAST_20FT_QTY" ).append("\n"); 
		query.append("               , H.FCAST_40FT_QTY" ).append("\n"); 
		query.append("               , H.BKG_TTL_QTY" ).append("\n"); 
		query.append("               , H.BKG_20FT_QTY" ).append("\n"); 
		query.append("               , H.BKG_40FT_QTY" ).append("\n"); 
		query.append("               , H.ALOC_QTY" ).append("\n"); 
		query.append("               , H.QTA_QTY" ).append("\n"); 
		query.append("          FROM HIS_DATA1 H" ).append("\n"); 
		query.append("#if(${sDate} == 'Y')" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT   DECODE(H.CTRT_CUST_CNT_CD, '00', 1, NULL, 1, 2) AS LVL" ).append("\n"); 
		query.append("               , H.BSE_DT" ).append("\n"); 
		query.append("               , H.RNUM" ).append("\n"); 
		query.append("               , H.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("               , H.SREP_CD" ).append("\n"); 
		query.append("               , H.SREP_NM" ).append("\n"); 
		query.append("               , H.CUST_CNT_CD" ).append("\n"); 
		query.append("               , H.CUST_SEQ" ).append("\n"); 
		query.append("               , H.CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("               , H.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("               , H.POL_YD_CD" ).append("\n"); 
		query.append("               , H.POD_YD_CD" ).append("\n"); 
		query.append("               , H.RLANE_CD" ).append("\n"); 
		query.append("               , H.VSL_CD" ).append("\n"); 
		query.append("               , H.SKD_VOY_NO" ).append("\n"); 
		query.append("               , H.SKD_DIR_CD" ).append("\n"); 
		query.append("               , H.FCAST_TTL_QTY" ).append("\n"); 
		query.append("               , H.FCAST_20FT_QTY" ).append("\n"); 
		query.append("               , H.FCAST_40FT_QTY" ).append("\n"); 
		query.append("               , H.BKG_TTL_QTY" ).append("\n"); 
		query.append("               , H.BKG_20FT_QTY" ).append("\n"); 
		query.append("               , H.BKG_40FT_QTY" ).append("\n"); 
		query.append("               , H.ALOC_QTY" ).append("\n"); 
		query.append("               , H.QTA_QTY" ).append("\n"); 
		query.append("          FROM TODAY_DATA H" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT   0 AS GID" ).append("\n"); 
		query.append("       , 0 AS GID2" ).append("\n"); 
		query.append("       , 0 AS LVL" ).append("\n"); 
		query.append("       , '' AS BSE_DT" ).append("\n"); 
		query.append("       , '' AS SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("       , '' AS SREP_CD" ).append("\n"); 
		query.append("       , '' AS SREP_NM" ).append("\n"); 
		query.append("       , '' AS CUST_CNT_CD" ).append("\n"); 
		query.append("       , 0 AS CUST_SEQ" ).append("\n"); 
		query.append("       , '' AS CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("       , '' AS CTRT_CUST_SEQ" ).append("\n"); 
		query.append("       , '' AS POL_YD_CD" ).append("\n"); 
		query.append("       , '' AS POD_YD_CD" ).append("\n"); 
		query.append("       , SUBSTR(MAX(SYS_CONNECT_BY_PATH(SUBSTR(RLANE_CD, 1, 3), ',')), 2) AS RLANE_CD" ).append("\n"); 
		query.append("       , SUBSTR(MAX(SYS_CONNECT_BY_PATH(VVD, ',')), 2) AS VSL_CD" ).append("\n"); 
		query.append("       , '' AS SKD_VOY_NO" ).append("\n"); 
		query.append("       , '' AS SKD_DIR_CD" ).append("\n"); 
		query.append("       , 0 AS ALOC_QTY" ).append("\n"); 
		query.append("       , 0 AS QTA_QTY" ).append("\n"); 
		query.append("       , 0 AS FCAST_TTL_QTY" ).append("\n"); 
		query.append("       , 0 AS FCAST_20FT_QTY" ).append("\n"); 
		query.append("       , 0 AS FCAST_40FT_QTY" ).append("\n"); 
		query.append("       , 0 AS BKG_TTL_QTY" ).append("\n"); 
		query.append("       , 0 AS BKG_20FT_QTY" ).append("\n"); 
		query.append("       , 0 AS BKG_40FT_QTY" ).append("\n"); 
		query.append("       , 0 AS PFMC_TTL" ).append("\n"); 
		query.append("       , 0 AS PFMC_20FT" ).append("\n"); 
		query.append("       , 0 AS PFMC_40FT    " ).append("\n"); 
		query.append("       , 0 AS RNUM" ).append("\n"); 
		query.append("  FROM PARAMS" ).append("\n"); 
		query.append(" START WITH RNUM = 1" ).append("\n"); 
		query.append("CONNECT BY PRIOR RNUM = RNUM - 1" ).append("\n"); 
		query.append(" UNION ALL" ).append("\n"); 
		query.append("SELECT   GID" ).append("\n"); 
		query.append("       , GID2" ).append("\n"); 
		query.append("       , LVL" ).append("\n"); 
		query.append("       , BSE_DT" ).append("\n"); 
		query.append("       , SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("       , SREP_CD" ).append("\n"); 
		query.append("       , SREP_NM" ).append("\n"); 
		query.append("       , CUST_CNT_CD" ).append("\n"); 
		query.append("       , CUST_SEQ" ).append("\n"); 
		query.append("       , DECODE(CTRT_CUST_CNT_CD, '00', '', CTRT_CUST_CNT_CD) AS CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("       , DECODE(CTRT_CUST_SEQ, 0, '', CTRT_CUST_SEQ) AS CTRT_CUST_SEQ" ).append("\n"); 
		query.append("       , POL_YD_CD" ).append("\n"); 
		query.append("       , POD_YD_CD" ).append("\n"); 
		query.append("       , RLANE_CD" ).append("\n"); 
		query.append("       , VSL_CD" ).append("\n"); 
		query.append("       , SKD_VOY_NO" ).append("\n"); 
		query.append("       , SKD_DIR_CD" ).append("\n"); 
		query.append("       , ALOC_QTY" ).append("\n"); 
		query.append("       , QTA_QTY" ).append("\n"); 
		query.append("       , FCAST_TTL_QTY" ).append("\n"); 
		query.append("       , FCAST_20FT_QTY" ).append("\n"); 
		query.append("       , FCAST_40FT_QTY" ).append("\n"); 
		query.append("       , BKG_TTL_QTY" ).append("\n"); 
		query.append("       , BKG_20FT_QTY" ).append("\n"); 
		query.append("       , BKG_40FT_QTY" ).append("\n"); 
		query.append("       , PFMC_TTL" ).append("\n"); 
		query.append("       , PFMC_20FT" ).append("\n"); 
		query.append("       , PFMC_40FT    " ).append("\n"); 
		query.append("       , RNUM" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("        SELECT   DENSE_RANK() OVER(ORDER BY A.BSE_DT, A.SLS_RGN_OFC_CD, A.SREP_CD, A.CUST_CNT_CD, A.CUST_SEQ) AS GID" ).append("\n"); 
		query.append("               , DENSE_RANK() OVER(ORDER BY A.BSE_DT, A.SLS_RGN_OFC_CD, A.SREP_CD, A.CUST_CNT_CD, A.CUST_SEQ, A.CTRT_CUST_CNT_CD, A.CTRT_CUST_SEQ, A.POL_YD_CD) AS GID2" ).append("\n"); 
		query.append("               , A.LVL" ).append("\n"); 
		query.append("               , A.BSE_DT" ).append("\n"); 
		query.append("               , A.SLS_RGN_OFC_CD" ).append("\n"); 
		query.append("               , A.SREP_CD" ).append("\n"); 
		query.append("               , A.SREP_NM" ).append("\n"); 
		query.append("               , A.CUST_CNT_CD" ).append("\n"); 
		query.append("               , A.CUST_SEQ" ).append("\n"); 
		query.append("               , A.CTRT_CUST_CNT_CD" ).append("\n"); 
		query.append("               , A.CTRT_CUST_SEQ" ).append("\n"); 
		query.append("               , A.POL_YD_CD" ).append("\n"); 
		query.append("               , A.POD_YD_CD" ).append("\n"); 
		query.append("               , A.RLANE_CD" ).append("\n"); 
		query.append("               , A.VSL_CD" ).append("\n"); 
		query.append("               , A.SKD_VOY_NO" ).append("\n"); 
		query.append("               , A.SKD_DIR_CD" ).append("\n"); 
		query.append("               , A.ALOC_QTY" ).append("\n"); 
		query.append("               , A.QTA_QTY" ).append("\n"); 
		query.append("               , A.FCAST_TTL_QTY" ).append("\n"); 
		query.append("               , A.FCAST_20FT_QTY" ).append("\n"); 
		query.append("               , A.FCAST_40FT_QTY" ).append("\n"); 
		query.append("               , A.BKG_TTL_QTY" ).append("\n"); 
		query.append("               , A.BKG_20FT_QTY" ).append("\n"); 
		query.append("               , A.BKG_40FT_QTY" ).append("\n"); 
		query.append("               , DECODE(A.FCAST_TTL_QTY , 0, 0,  ROUND(A.BKG_TTL_QTY/ A.FCAST_TTL_QTY, 2))   * 100 AS PFMC_TTL" ).append("\n"); 
		query.append("               , DECODE(A.FCAST_20FT_QTY, 0, 0,  ROUND(A.BKG_20FT_QTY/ A.FCAST_20FT_QTY, 2)) * 100 AS PFMC_20FT" ).append("\n"); 
		query.append("               , DECODE(A.FCAST_40FT_QTY, 0, 0,  ROUND(A.BKG_40FT_QTY/ A.FCAST_40FT_QTY, 2)) * 100 AS PFMC_40FT    " ).append("\n"); 
		query.append("               , A.RNUM" ).append("\n"); 
		query.append("          FROM ALL_DATA A" ).append("\n"); 
		query.append("         ORDER BY   A.BSE_DT DESC" ).append("\n"); 
		query.append("                  , A.SREP_CD" ).append("\n"); 
		query.append("                  , NVL(CUST_CNT_CD, '0')" ).append("\n"); 
		query.append("                  , NVL(CUST_SEQ, '0')" ).append("\n"); 
		query.append("                  , NVL(CTRT_CUST_CNT_CD, '0')" ).append("\n"); 
		query.append("                  , NVL(CTRT_CUST_SEQ, '0')" ).append("\n"); 
		query.append("                  , NVL(POL_YD_CD, '0')" ).append("\n"); 
		query.append("                  , NVL(POD_YD_CD, '0')" ).append("\n"); 
		query.append("                  , RNUM" ).append("\n"); 
		query.append("                  , A.RLANE_CD" ).append("\n"); 
		query.append("                  , A.VSL_CD" ).append("\n"); 
		query.append("                  , A.SKD_VOY_NO" ).append("\n"); 
		query.append("                  , A.SKD_DIR_CD" ).append("\n"); 
		query.append("        )" ).append("\n"); 

	}
}