<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpaceAllocationManageDBDAOMultiSpcAlocPolPod1stSmpCSQL">
			<desc><![CDATA[성수기용 Alloc Copy

* 2013.06.26 진마리아 [CHM-201325016-01] 성수기 Alloc copy 기능 개발
* 2013.10.04 진마리아 Allocation Copy 시 Sub Office 없는 경우에 Sub Alloc 도 함께 copy되도록 로직 추가
2013.11.26 진마리아 [CHM-201326854] SAQ project로 인한 SPC 변경건_FNC 우선제거
2014.08.12 [CHM-201431081] SPC Allocation Control Option 추가 보완 요청건]]></desc>
			<sql><![CDATA[
INSERT INTO SPC_ALOC_CUST_POL_POD (
    RLANE_CD            ,
    DIR_CD              ,
    VSL_CD              ,
    SKD_VOY_NO          ,
    SKD_DIR_CD          ,
    SLS_OFC_CD          ,
    POL_YD_CD           ,
    POD_YD_CD           ,
    TS_FLG              ,
    MNL_FLG             ,
    
    -- SMP추가
    CUST_CNT_CD         ,
    CUST_SEQ            ,
    CTRT_NO             ,
    CUST_CTRL_CD        ,
    
    REP_TRD_CD          ,
    REP_SUB_TRD_CD      ,
    TRD_CD              ,
    SUB_TRD_CD          ,
    IOC_CD              ,
    SLS_RHQ_CD          ,
    SLS_AQ_CD           ,
    SLS_RGN_OFC_CD      ,
    ASGN_TTL_QTY        ,
    ASGN_20FT_QTY       ,
    ASGN_40FT_QTY       ,
    ASGN_40FT_HC_QTY    ,
    ASGN_45FT_HC_QTY    ,
    ASGN_53FT_QTY       ,
    ASGN_RF_QTY         ,
    --20140812 추가
    ASGN_20FT_DRY_QTY   ,
    ASGN_40FT_DRY_QTY   ,
    ASGN_RD_QTY         ,
    
    ASGN_TTL_WGT        ,
    BKG_AVAL_TTL_QTY    ,
    BKG_AVAL_20FT_QTY   ,
    BKG_AVAL_40FT_QTY   ,
    BKG_AVAL_40FT_HC_QTY,
    BKG_AVAL_45FT_HC_QTY,
    BKG_AVAL_53FT_QTY   ,
    BKG_AVAL_RF_QTY     ,
    --20140812 추가
    BKG_AVAL_20FT_DRY_QTY,
    BKG_AVAL_40FT_DRY_QTY,
    BKG_AVAL_RD_QTY     ,
    
    BKG_AVAL_TTL_WGT    ,
    MNL_ALOC_RMK        ,
    ALOC_USR_ID         ,
    ALOC_GDT            ,
    CRE_USR_ID          ,
    CRE_DT              ,
    UPD_USR_ID          ,
    UPD_DT              ,
    --20140812 추가
    USA_BKG_MOD_CD   ,
    DEST_LOC_CD 
)
           
(select   
    MAIN.RLANE_CD, 
    MAIN.DIR_CD              ,
   @[newVslVd] VSL_CD              ,
   @[newSkdVoyNo] SKD_VOY_NO          ,
   @[newSkdDirCd] SKD_DIR_CD          ,
    MAIN.SLS_OFC_CD          ,
    MAIN.POL_YD_CD           ,
    MAIN.POD_YD_CD           ,
    MAIN.TS_FLG              ,
    MAIN.MNL_FLG             ,
    
    -- SMP추가
    MAIN.CUST_CNT_CD         ,
    MAIN.CUST_SEQ            ,
    MAIN.CTRT_NO             ,
    MAIN.CUST_CTRL_CD        ,
    
    MAIN.REP_TRD_CD          ,
    MAIN.REP_SUB_TRD_CD      ,
    MAIN.TRD_CD              ,
    MAIN.SUB_TRD_CD          ,
    MAIN.IOC_CD              ,
    MAIN.SLS_RHQ_CD          ,
    MAIN.SLS_AQ_CD           ,
    MAIN.SLS_RGN_OFC_CD      ,
    MAIN.ASGN_TTL_QTY        ,
    MAIN.ASGN_20FT_QTY       ,
    MAIN.ASGN_40FT_QTY       ,
    MAIN.ASGN_40FT_HC_QTY    ,
    MAIN.ASGN_45FT_HC_QTY    ,
    MAIN.ASGN_53FT_QTY       ,
    MAIN.ASGN_RF_QTY         ,
    
    --20140812 추가
    MAIN.ASGN_20FT_DRY_QTY   ,
    MAIN.ASGN_40FT_DRY_QTY   ,
    MAIN.ASGN_RD_QTY         ,
    
    MAIN.ASGN_TTL_WGT        ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_TTL_QTY, NULL)        ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_20FT_QTY, NULL)       ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_40FT_QTY, NULL)       ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_40FT_HC_QTY, NULL)    ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_45FT_HC_QTY, NULL)    ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_53FT_QTY, NULL)       ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_RF_QTY, NULL)         ,
    --20140812 추가
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_20FT_DRY_QTY, NULL)   ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_40FT_DRY_QTY, NULL)   ,
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_RD_QTY, NULL)         ,    
    
    DECODE(SUB_CNT, 0, MAIN.BKG_AVAL_TTL_WGT, NULL)        ,
    MAIN.MNL_ALOC_RMK        ,
    @[upd_usr_id]          ,
    CAST(SYS_EXTRACT_UTC(TO_TIMESTAMP(@[aloc_gdt], 'YYYY/MM/DD HH24:MI:SS')) AS DATE) AS ALOC_GDT,
   @[upd_usr_id]          ,
   SYSDATE AS CRE_DT              ,
   @[upd_usr_id]          ,
    SYSDATE AS UPD_DT,
    --20140812 추가
    MAIN.USA_BKG_MOD_CD   ,
    MAIN.DEST_LOC_CD  
from (
  WITH PARAMS AS (
    SELECT @[year]             AS YEAR      ,
           @[week]              AS WEEK      ,
           o.ofc_cd             AS OFC_CD    ,
           @[lane]              AS RLANE_CD  ,
           @[bound]              AS DIR_CD    ,
           @[vsl_cd]  AS VSL_CD    ,
           @[skd_voy_no]  AS SKD_VOY_NO,
           @[skd_dir_cd]    AS SKD_DIR_CD,
           l.conti_cd           AS OFC_CONTI ,
           '2'             AS STS
      FROM MDM_LOCATION     L,
           MDM_ORGANIZATION O
     WHERE L.LOC_CD = O.LOC_CD
#if (${user_ofc} == 'SZPDC')
       AND O.OFC_CD = @[user_ofc]
#else
	#if (${office} == '')
       AND O.OFC_CD = 'SHARC'
	#else
       AND O.OFC_CD = @[office]
	#end
#end
    )
, REP_VVDS AS (
    SELECT V.TRD_CD     AS REP_TRD_CD    ,
           V.SUB_TRD_CD AS REP_SUB_TRD_CD,
           V.RLANE_CD,
           V.DIR_CD  ,
           SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR ,
           SUBSTR(V.SLS_YRMON, 5)    AS COST_MON,
           V.COST_WK             ,
           V.VSL_CD              ,
           V.SKD_VOY_NO          ,
           V.DIR_CD SKD_DIR_CD   ,
           V.LST_LODG_PORT_CD    ,
           V.LST_LODG_PORT_ETD_DT,
           P.OFC_CD              ,
           P.OFC_CONTI           ,
           P.STS                 ,
           (
              SELECT NVL(MAX(CO.CTRL_LVL_CD), 'L')
                FROM SPC_ALOC_CTRL_OPT CO
               WHERE CO.RLANE_CD   = P.RLANE_CD
                 AND CO.DIR_CD     = P.SKD_DIR_CD
                 AND CO.VSL_CD     = P.VSL_CD
                 AND CO.SKD_VOY_NO = P.SKD_VOY_NO
                 AND CO.SKD_DIR_CD = P.SKD_DIR_CD
           ) AS CTRL_LVL
      FROM MAS_MON_VVD V,
           PARAMS      P
     WHERE V.TRD_CD     = SPC_GET_REP_TRD_FNC(V.RLANE_CD)
       AND V.SUB_TRD_CD = SPC_GET_REP_SUB_TRD_FNC(V.RLANE_CD)
       AND V.RLANE_CD   = P.RLANE_CD
       AND V.VSL_CD     = P.VSL_CD
       AND V.SKD_VOY_NO = P.SKD_VOY_NO
       AND V.DIR_CD     = P.SKD_DIR_CD
       AND (V.DELT_FLG IS NULL OR V.DELT_FLG = 'N' OR EXISTS ( SELECT 1
                                                                 FROM MAS_MON_VVD N
                                                                WHERE N.SLAN_CD    = SUBSTR(V.RLANE_CD, 1, 3)
                                                                  AND N.VSL_CD     = V.VSL_CD
                                                                  AND N.SKD_VOY_NO = V.SKD_VOY_NO
                                                                  AND N.DIR_CD     = V.DIR_CD
                                                                  AND N.DELT_FLG   = 'N'))
)
, VSL_PORT_SKD AS (
    SELECT V.REP_TRD_CD    ,
           V.REP_SUB_TRD_CD,
           V.RLANE_CD      ,
           V.DIR_CD        ,
           V.COST_YR       ,
           V.COST_MON      ,
           V.COST_WK       ,
           V.VSL_CD        ,
           V.SKD_VOY_NO    ,
           V.SKD_DIR_CD    ,
           NVL(VPS.YD_CD, VPS.VPS_PORT_CD) AS PORT_CD,
           VPS.CALL_YD_IND_SEQ ,
           VPS.VPS_PORT_CD,
           VPS.CLPT_SEQ         AS PORT_SEQ,
           VPS.TURN_PORT_IND_CD AS PORT_IND,
           SPC_CONTI_CONV_FNC(L.CONTI_CD, V.RLANE_CD, V.DIR_CD) AS CONTI_CD,
           DECODE(SIGN(VPS.VPS_ETD_DT - GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS.VPS_PORT_CD)), -1, 'Y', 'N') AS PORT_PAST,
           VPS.VPS_ETA_DT AS ETA_DT,
           VPS.VPS_ETD_DT AS ETD_DT,
           V.LST_LODG_PORT_CD      ,
           V.LST_LODG_PORT_ETD_DT  ,
           V.OFC_CD                ,
           V.OFC_CONTI             ,
           V.STS                   ,
           DECODE(VPS.SKD_CNG_STS_CD, 'S', 1, 0) AS SKIPPED,
           MAX(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MAX_SEQ,
           MIN(VPS.CLPT_SEQ) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS MIN_SEQ,
           VPS.CLPT_IND_SEQ  AS CLPT_IND_SEQ,
           COUNT(*) OVER (PARTITION BY NVL(VPS.YD_CD, VPS.VPS_PORT_CD)) AS PORT_CNT
      FROM MDM_LOCATION     L  ,
           VSK_VSL_PORT_SKD VPS,
           REP_VVDS         V
     WHERE L.LOC_CD       = VPS.VPS_PORT_CD
       AND VPS.VSL_CD     = V.VSL_CD
       AND VPS.SKD_VOY_NO = V.SKD_VOY_NO
       AND VPS.SKD_DIR_CD = V.SKD_DIR_CD
)
, VVD_POL_POD AS (
    SELECT REP_TRD_CD          ,
           REP_SUB_TRD_CD      ,
           RLANE_CD            ,
           DIR_CD              ,
           TRD_CD              ,
           SUB_TRD_CD          ,
           COST_YR             ,
           COST_MON            ,
           COST_WK             ,
           VSL_CD              ,
           SKD_VOY_NO          ,
           SKD_DIR_CD          ,
           POL_CD              ,
           POL_SEQ             ,
           POL_CONTI           ,
           POL_PAST            ,     
           POD_CD              ,
           POD_SEQ             ,
           POD_CONTI           ,
           POD_PAST            ,
           IOC_CD              ,          
           OFC_CD              ,
           OFC_CONTI            
           , POL_YD_SEQ
           , POD_YD_SEQ
           , PL_VPS_PORT_CD
           , PD_VPS_PORT_CD
           , PL_CLPT_IND_SEQ
           , PD_CLPT_IND_SEQ
      FROM (
              SELECT REP_TRD_CD          ,
                     REP_SUB_TRD_CD      ,
                     RLANE_CD            ,
                     DIR_CD              ,
                     TRD_CD              ,
                     SUB_TRD_CD          ,
                     COST_YR             ,
                     COST_MON            ,
                     COST_WK             ,
                     VSL_CD              ,
                     SKD_VOY_NO          ,
                     SKD_DIR_CD          ,
                     POL_CD              ,
                     POL_SEQ             ,
                     POL_CONTI           ,
                     POL_PAST            ,                
                     POD_CD              ,
                     POD_SEQ             ,
                     POD_CONTI           ,
                     POD_PAST            ,             
                     IOC_CD              ,
                     PAST                ,                  
                     OFC_CD              ,
                     OFC_CONTI           ,                  
                     PL_PORT_CNT         ,
                    PD_PORT_CNT         ,
                    PL_PD_PORT_CNT     , 
                    MAX(PL_PD_PORT_CNT) OVER (PARTITION BY POL_CD,POD_CD ORDER BY POL_CD,POD_CD) AS PL_PD_PORT_MAX
                    , POL_YD_SEQ
                    , POD_YD_SEQ
                    , PL_VPS_PORT_CD
                    , PD_VPS_PORT_CD
                    , PL_CLPT_IND_SEQ
                    , PD_CLPT_IND_SEQ
                FROM (
                        SELECT PL.REP_TRD_CD    ,
                               PL.REP_SUB_TRD_CD,
                               PL.RLANE_CD      ,
                               PL.DIR_CD        ,
                               DRL.TRD_CD       ,
                               DRL.SUB_TRD_CD   ,
                               PL.COST_YR       ,
                               PL.COST_MON      ,
                               PL.COST_WK       ,
                               PL.VSL_CD        ,
                               PL.SKD_VOY_NO    ,
                               PL.SKD_DIR_CD    ,
                               PL.PORT_CD         AS POL_CD    ,
                               MAX(PL.PORT_SEQ)   AS POL_SEQ   ,
                               PL.CONTI_CD        AS POL_CONTI ,
                               MIN(PL.PORT_PAST)  AS POL_PAST  ,
                                PD.PORT_CD         AS POD_CD    ,
                          
                               (CASE
                                     WHEN MAX(PL.PORT_SEQ) < MAX(PD.MIN_SEQ) THEN MAX(PD.MIN_SEQ)
                                     ELSE CASE
                                               WHEN MAX(PL.PORT_SEQ) > MAX(PD.MIN_SEQ) THEN MAX(PD.MAX_SEQ)
                                          END
                                 END) AS POD_SEQ ,                            
                               PD.CONTI_CD       AS POD_CONTI ,
                               MIN(PD.PORT_PAST) AS POD_PAST  ,                         
                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')            AS IOC_CD,
                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y') AS PAST  ,
                               PL.LST_LODG_PORT_CD    ,
                               PL.LST_LODG_PORT_ETD_DT,
                               PL.OFC_CD              ,
                               PL.OFC_CONTI           ,
                               PL.STS                 ,                            
                               SUBSTR(( SELECT MAX(LTRIM(TO_CHAR(S1.PORT_SEQ,'FM000'))|| S1.PORT_CD)
                                          FROM VSL_PORT_SKD S1
                                         WHERE S1.SKIPPED <> 1), 4) AS LD_PORT,
                               PL.PORT_CNT AS PL_PORT_CNT,
                               PD.PORT_CNT AS PD_PORT_CNT,
                               ROW_NUMBER()OVER (PARTITION BY PL.PORT_CD,PD.PORT_CD ORDER BY PL.PORT_CD,PD.PORT_CD) AS PL_PD_PORT_CNT
                              , PL.CALL_YD_IND_SEQ AS POL_YD_SEQ
                              , PD.CALL_YD_IND_SEQ AS POD_YD_SEQ
                              , PL.VPS_PORT_CD     AS PL_VPS_PORT_CD
                              , PD.VPS_PORT_CD     AS PD_VPS_PORT_CD
                              , PL.CLPT_IND_SEQ    AS PL_CLPT_IND_SEQ
                              , PD.CLPT_IND_SEQ    AS PD_CLPT_IND_SEQ
                          FROM MDM_DTL_REV_LANE DRL,
                               VSL_PORT_SKD     PD ,
                               VSL_PORT_SKD     PL
                         WHERE DRL.RLANE_CD        = PL.RLANE_CD
                           AND DRL.VSL_SLAN_DIR_CD = PL.DIR_CD
                           AND DRL.FM_CONTI_CD     = PL.CONTI_CD
                           AND DRL.TO_CONTI_CD     = PD.CONTI_CD
                           AND PD.REP_TRD_CD       = PL.REP_TRD_CD
                           AND PD.REP_SUB_TRD_CD   = PL.REP_SUB_TRD_CD
                           AND PD.RLANE_CD         = PL.RLANE_CD
                           AND PD.VSL_CD           = PL.VSL_CD 
                           AND PD.SKD_VOY_NO       = PL.SKD_VOY_NO
                           AND PD.SKD_DIR_CD       = PL.SKD_DIR_CD
                           AND PD.PORT_CD         <> PL.PORT_CD
                           AND PD.PORT_SEQ         > PL.PORT_SEQ
                           AND (    PL.PORT_SEQ = DECODE(PD.CONTI_CD, PL.CONTI_CD, PL.MIN_SEQ, PL.MAX_SEQ)  --  단독 CALLING 또는 DOUBLE CALLING 인데 마지막 PORT 경우는 모두
                                 OR PD.PORT_SEQ < PL.MAX_SEQ ) -- DOUBLE CALLING PORT중 POD 가 LAST DOUBLE CALLING PORT 보다 앞인 경우만 FILTERING
                      GROUP BY 
                               PL.REP_TRD_CD    ,
                               PL.REP_SUB_TRD_CD,
                               PL.RLANE_CD      ,
                               PL.DIR_CD        ,
                               DRL.TRD_CD       ,
                               DRL.SUB_TRD_CD   ,
                               PL.COST_YR       ,
                               PL.COST_MON      ,
                               PL.COST_WK       ,
                               PL.VSL_CD        ,
                               PL.SKD_VOY_NO    ,
                               PL.SKD_DIR_CD    ,
                               PL.PORT_CD       ,
                               PL.CONTI_CD      ,
                               PD.PORT_CD       ,
                               PD.CONTI_CD      ,                      
                               DECODE(PL.CONTI_CD, PD.CONTI_CD, 'I', 'O')           ,
                               DECODE(PL.STS, '1', PL.PORT_PAST, '2', 'N', '3', 'Y'),
                               PL.LST_LODG_PORT_CD    ,
                               PL.LST_LODG_PORT_ETD_DT,
                               PL.OFC_CD              ,
                               PL.OFC_CONTI           ,
                               PL.STS                 ,
                               PL.CLPT_IND_SEQ        ,
                               PL.PORT_CNT            ,
                               PD.PORT_CNT
                              , PL.CALL_YD_IND_SEQ
                              , PD.CALL_YD_IND_SEQ
                              , PL.VPS_PORT_CD
                              , PD.VPS_PORT_CD
                              , PL.CLPT_IND_SEQ
                              , PD.CLPT_IND_SEQ
                     )
           ) A
     WHERE A.PL_PD_PORT_CNT = PL_PD_PORT_MAX
)
,  ALL_DATA AS (
               --Allocation
              SELECT 
                   
                     A.RLANE_CD,    
                     A.DIR_CD ,     
                     A.VSL_CD,   
                     A.SKD_VOY_NO,   
                     A.SKD_DIR_CD ,
                     
                     -- SMP추가
                     A.CUST_CNT_CD         ,
                     A.CUST_SEQ            ,
                     A.CTRT_NO             ,
                     A.CUST_CTRL_CD        ,

#if (${office} == '')
                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.SLS_RHQ_CD, 'SINRS', A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD)))) AS SLS_OFC_CD ,
#else
                     DECODE(VPP.OFC_CD, A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD, DECODE(A.RLANE_CD, 'WAFIE', A.SLS_RGN_OFC_CD, DECODE(A.TS_FLG, 'Y', A.SLS_RHQ_CD, A.SLS_RGN_OFC_CD))) AS SLS_OFC_CD ,
#end
 
                     VPP.POL_CD POL_YD_CD,   
                     VPP.POD_CD POD_YD_CD,  
                     A.TS_FLG TS_FLG,   
                     A.MNL_FLG  ,
                     --20140812 추가
                     A.USA_BKG_MOD_CD,
                     A.DEST_LOC_CD
                FROM SPC_ALOC_CUST_POL_POD A  ,
                     
                     VVD_POL_POD      VPP
               WHERE A.RLANE_CD   = VPP.RLANE_CD
                 AND A.DIR_CD     = VPP.DIR_CD
                 AND A.VSL_CD     = VPP.VSL_CD
                 AND A.SKD_VOY_NO = VPP.SKD_VOY_NO
                 AND A.SKD_DIR_CD = VPP.SKD_DIR_CD
		 AND A.POL_YD_CD  = VPP.POL_CD
		 AND A.POD_YD_CD  = VPP.POD_CD
		 AND A.POL_YD_IND_SEQ = VPP.POL_YD_SEQ
		 AND A.POD_YD_IND_SEQ = VPP.POD_YD_SEQ
                 AND (   (     VPP.POL_CONTI = VPP.OFC_CONTI
                           AND (   (     A.TS_FLG     = 'N'
                                     AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                                 OR A.SLS_RGN_OFC_CD IS NULL )
                         ) 
         			OR VPP.RLANE_CD = 'WAFIE' 
                      OR
#if (${office} == '')
                         (     A.SLS_RHQ_CD = VPP.OFC_CD
                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                      OR (     A.SLS_RHQ_CD = 'SINRS'
                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                     )
#else
                         (     A.SLS_RHQ_CD = VPP.OFC_CD
                           AND A.SLS_OFC_CD = A.SLS_RGN_OFC_CD )
                     )
#end
                      
)
   SELECT  
             Z.RLANE_CD,    
             Z.DIR_CD ,     
             Z.VSL_CD,   
             Z.SKD_VOY_NO,   
             Z.SKD_DIR_CD ,
             
             -- SMP추가
             Z.CUST_CNT_CD         ,
             Z.CUST_SEQ            ,
             Z.CTRT_NO             ,
             Z.CUST_CTRL_CD        ,
                     
             Z.SLS_OFC_CD , 
             Z.POL_YD_CD,   
             Z.POD_YD_CD,  
             Z.TS_FLG,   
             Z.MNL_FLG    ,
             (SELECT COUNT(1)
                FROM MDM_ORGANIZATION O
               WHERE O.PRNT_OFC_CD = Z.SLS_OFC_CD
                 AND O.DELT_FLG    = 'N'
             ) AS SUB_CNT  ,
             --20140812 추가
             Z.USA_BKG_MOD_CD,
             Z.DEST_LOC_CD          
        FROM ALL_DATA Z 
#if (${office} == '')
     UNION ALL 
        --Allocation
      SELECT
             A.RLANE_CD,    
             A.DIR_CD ,     
             A.VSL_CD,   
             A.SKD_VOY_NO,   
             A.SKD_DIR_CD ,
             
             -- SMP추가
             A.CUST_CNT_CD         ,
             A.CUST_SEQ            ,
             A.CTRT_NO             ,
             A.CUST_CTRL_CD        ,
             
             A.SLS_OFC_CD , 
             A.POL_YD_CD,   
             A.POD_YD_CD,  
             A.TS_FLG,   
             A.MNL_FLG   ,
             1 AS SUB_CNT   ,
             --20140812 추가
             A.USA_BKG_MOD_CD,
             A.DEST_LOC_CD           
        FROM SPC_ALOC_CUST_POL_POD A  ,
             PARAMS      P           
       WHERE A.RLANE_CD   = P.RLANE_CD
         AND A.DIR_CD     = P.DIR_CD
         AND A.VSL_CD     = P.VSL_CD
         AND A.SKD_VOY_NO = P.SKD_VOY_NO
         AND A.SKD_DIR_CD = P.SKD_DIR_CD
         AND A.SLS_OFC_CD IN ('HAMRU', 'NYCRA')
         AND P.RLANE_CD   = 'WAFIE'
#end                 
    )  INFO, SPC_ALOC_CUST_POL_POD MAIN
        WHERE
           INFO.RLANE_CD       = MAIN.RLANE_CD    
        AND   INFO.DIR_CD      = MAIN.DIR_CD
        AND   INFO.VSL_CD      = MAIN.VSL_CD   
        AND   INFO.SKD_VOY_NO  = MAIN.SKD_VOY_NO 
        AND   INFO.SKD_DIR_CD  = MAIN.SKD_DIR_CD
        -- SMP추가
        AND   INFO.CUST_CNT_CD  = MAIN.CUST_CNT_CD   
        AND   INFO.CUST_SEQ     = MAIN.CUST_SEQ
        AND   INFO.CTRT_NO      = MAIN.CTRT_NO
        AND   INFO.CUST_CTRL_CD = MAIN.CUST_CTRL_CD
        
        AND   INFO.SLS_OFC_CD  = MAIN.SLS_OFC_CD
        AND   INFO.POL_YD_CD   = MAIN.POL_YD_CD 
        AND   INFO.POD_YD_CD   = MAIN.POD_YD_CD
        AND   INFO.TS_FLG      = MAIN.TS_FLG
        AND   INFO.MNL_FLG     = MAIN.MNL_FLG
        --20140812 추가
        AND   INFO.USA_BKG_MOD_CD = MAIN.USA_BKG_MOD_CD
        AND   INFO.DEST_LOC_CD    = MAIN.DEST_LOC_CD
        )			]]></sql>
			<params>
				<param name="newVslVd" type="12" value="" out="N"/>
				<param name="newSkdVoyNo" type="12" value="" out="N"/>
				<param name="newSkdDirCd" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="aloc_gdt" type="12" value="" out="N"/>
				<param name="year" type="12" value="" out="N"/>
				<param name="week" type="12" value="" out="N"/>
				<param name="lane" type="12" value="" out="N"/>
				<param name="bound" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="user_ofc" type="12" value="" out="N"/>
				<param name="office" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
