/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : MTYWeeklySimulationDBDAOsearchMtyWeeklySimulationRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.20
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.20 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.mtyequipmentforecast.mtyweeklysimulation.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MTYWeeklySimulationDBDAOsearchMtyWeeklySimulationRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * weekly simulation을 조회
	  * </pre>
	  */
	public MTYWeeklySimulationDBDAOsearchMtyWeeklySimulationRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ori_loc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ori_ori_loc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("present_flag",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("head_week",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("condition_value",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.mtyequipmentforecast.mtyweeklysimulation.integration").append("\n"); 
		query.append("FileName : MTYWeeklySimulationDBDAOsearchMtyWeeklySimulationRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("/*" ).append("\n"); 
		query.append("--IN : Inventory  CIM에서 추출된 INVENTORY   " ).append("\n"); 
		query.append("--RI : Reposition In  COD에서 추출된 Repostion In  " ).append("\n"); 
		query.append("--OT : Other(LT/ST/OW)  Balance Report 에서 추출된 Other Value(LT/ST/OW) " ).append("\n"); 
		query.append("--IF : IB Forecast  Balance Report 에서 추출된 IB Forecast  " ).append("\n"); 
		query.append("--OF : OB Forecast  Balance Report 에서 추출된 OB Forecast " ).append("\n"); 
		query.append("--RO : Reposition Out  Balance Report 에서 추출된 Reposition Out " ).append("\n"); 
		query.append("--IC : IC  MOVEMENT IC 수량정보  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--:loc_grp_cd -- L/E/S" ).append("\n"); 
		query.append("--:loc_cd     -- KRPUS, CNSHA" ).append("\n"); 
		query.append("--:ofc_cd     -- HGHBS(항저우),  HOUBB(휴스턴), INCBO(인천), NBOBB (닝보지점) " ).append("\n"); 
		query.append("--:level_cd   -- 1,2,3 (3일때만 검색조건 적용)" ).append("\n"); 
		query.append("--:head_week  -- grid head 주차정보(1 : -1주차, 2 : 0주차, 3: 1주차, 4 : 2주차, 5 : 3주차, 6 : 4주차)" ).append("\n"); 
		query.append("*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WITH " ).append("\n"); 
		query.append("BASIC_WEEK AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT PLN_YR||PLN_WK WEEK" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(WK_ST_DT , 'YYYYMMDD'), 'YYYYMMDD') WK_ST_DT" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(WK_END_DT, 'YYYYMMDD'), 'YYYYMMDD') WK_END_DT       " ).append("\n"); 
		query.append("          ,ROWNUM-1 ROW_SEQ " ).append("\n"); 
		query.append("    FROM EQR_WK_PRD" ).append("\n"); 
		query.append("    WHERE WK_ST_DT  >= TO_CHAR(SYSDATE-(7*3), 'YYYYMMDD') -- -2주차부터" ).append("\n"); 
		query.append("    AND   WK_END_DT <= TO_CHAR(SYSDATE+(7*5), 'YYYYMMDD') -- +4주차까지" ).append("\n"); 
		query.append("    ORDER BY ROWNUM" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 지역검색조건으로 사용" ).append("\n"); 
		query.append(",DUMMY_LOCATION AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ( ${present_flag} == 'L') " ).append("\n"); 
		query.append("    SELECT DISTINCT LCC_CD LOC_CD " ).append("\n"); 
		query.append("#elseif( ${present_flag} == 'E' )" ).append("\n"); 
		query.append("    SELECT DISTINCT ECC_CD LOC_CD" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("    SELECT DISTINCT SCC_CD LOC_CD  " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("    WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩" ).append("\n"); 
		query.append("    AND  DELT_FLG = 'N'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${condition_value} != '' ) -- RCC : ALL 일대는 쿼리 감춤" ).append("\n"); 
		query.append("  #if(${condition_flag} == 'R')" ).append("\n"); 
		query.append("	 AND   RCC_CD = @[condition_value]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" #elseif( ${condition_flag} == 'L' )" ).append("\n"); 
		query.append("     #if    ( ${condition_value} == 'CNSZP' )" ).append("\n"); 
		query.append("     AND   ECC_CD IN ('CNCWN','CNSHU','CNYIT')" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'JPTYO' )" ).append("\n"); 
		query.append("     AND   ECC_CD IN ('JPTYO','JPYOK')" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'JPOSA' )" ).append("\n"); 
		query.append("     AND   ECC_CD IN ('JPOSA','JPUKB','JPNGO')" ).append("\n"); 
		query.append("     #else" ).append("\n"); 
		query.append("     AND   LCC_CD = @[condition_value]" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" #elseif( ${condition_flag} == 'E')" ).append("\n"); 
		query.append("     #if    ( ${condition_value} == 'CNCWN' )" ).append("\n"); 
		query.append("     AND   SCC_CD = 'CNCWN'" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'KRPUS' )" ).append("\n"); 
		query.append("     AND   SCC_CD = 'KRPUS'" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'KRKAN' )" ).append("\n"); 
		query.append("     AND   SCC_CD = 'KRKAN'" ).append("\n"); 
		query.append("     #else" ).append("\n"); 
		query.append("	 AND   ECC_CD = @[condition_value]        " ).append("\n"); 
		query.append("     #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" #else    --SCC" ).append("\n"); 
		query.append("	 AND   SCC_CD = @[condition_value]    " ).append("\n"); 
		query.append(" #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("  " ).append("\n"); 
		query.append("    -- 지점 office 검색범위 (CDO_EQ, 지역본부 OFFICE 는 아래조건을 제거함)" ).append("\n"); 
		query.append("#if( ${level_cd} == '3' ) " ).append("\n"); 
		query.append("    AND LCC_CD IN (" ).append("\n"); 
		query.append("                      SELECT LCC_CD" ).append("\n"); 
		query.append("                      FROM MDM_EQ_ORZ_CHT                         " ).append("\n"); 
		query.append("                      WHERE SCC_CD IN (                                     " ).append("\n"); 
		query.append("                                          SELECT SCC_CD                      " ).append("\n"); 
		query.append("                                          FROM MDM_LOCATION                  " ).append("\n"); 
		query.append("                                          WHERE LOC_CD IN ( SELECT LOC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd] )                            " ).append("\n"); 
		query.append("                                      )      " ).append("\n"); 
		query.append("                  )" ).append("\n"); 
		query.append("#end                    " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 좌측 헤더" ).append("\n"); 
		query.append(",GRID_HEAD AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT A.LOC_CD" ).append("\n"); 
		query.append("          ,B.CODE" ).append("\n"); 
		query.append("          ,B.NAME" ).append("\n"); 
		query.append("          ,B.SORT" ).append("\n"); 
		query.append("          ,@[present_flag] LOC_GRP_CD" ).append("\n"); 
		query.append("    FROM      " ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("#if( ${present_flag} == 'L'  )  -- ALL" ).append("\n"); 
		query.append("        SELECT DISTINCT LCC_CD LOC_CD" ).append("\n"); 
		query.append("#elseif( ${present_flag} == 'E' )   " ).append("\n"); 
		query.append("        SELECT DISTINCT ECC_CD LOC_CD  " ).append("\n"); 
		query.append("#else  --SCC일때" ).append("\n"); 
		query.append("        SELECT DISTINCT SCC_CD LOC_CD   " ).append("\n"); 
		query.append("#end       " ).append("\n"); 
		query.append("        FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("        WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩" ).append("\n"); 
		query.append("        AND  DELT_FLG = 'N'" ).append("\n"); 
		query.append("        -- 지점 office 검색범위 (CDO_EQ, 지역본부 OFFICE 는 아래조건을 제거함)" ).append("\n"); 
		query.append("#if( ${level_cd} == '3' ) " ).append("\n"); 
		query.append("        AND LCC_CD IN (" ).append("\n"); 
		query.append("                         SELECT LCC_CD" ).append("\n"); 
		query.append("                         FROM MDM_EQ_ORZ_CHT                         " ).append("\n"); 
		query.append("                         WHERE SCC_CD IN (                                     " ).append("\n"); 
		query.append("                                             SELECT SCC_CD                      " ).append("\n"); 
		query.append("                                             FROM MDM_LOCATION                  " ).append("\n"); 
		query.append("                                             WHERE LOC_CD IN ( SELECT LOC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = @[ofc_cd] )                            " ).append("\n"); 
		query.append("                                          )      " ).append("\n"); 
		query.append("                      )" ).append("\n"); 
		query.append("#end                " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("#if( ${condition_value} != '' ) -- RCC : ALL 일대는 쿼리 감춤" ).append("\n"); 
		query.append("  #if(${condition_flag} == 'R')" ).append("\n"); 
		query.append("	 AND   RCC_CD = @[condition_value]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" #elseif( ${condition_flag} == 'L' )" ).append("\n"); 
		query.append("     #if    ( ${condition_value} == 'CNSZP' )" ).append("\n"); 
		query.append("     AND   ECC_CD IN ('CNCWN','CNSHU','CNYIT')" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'JPTYO' )" ).append("\n"); 
		query.append("     AND   ECC_CD IN ('JPTYO','JPYOK')" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'JPOSA' )" ).append("\n"); 
		query.append("     AND   ECC_CD IN ('JPOSA','JPUKB','JPNGO')" ).append("\n"); 
		query.append("     #else" ).append("\n"); 
		query.append("     AND   LCC_CD = @[condition_value]" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" #elseif( ${condition_flag} == 'E')" ).append("\n"); 
		query.append("     #if    ( ${condition_value} == 'CNCWN' )" ).append("\n"); 
		query.append("     AND   SCC_CD = 'CNCWN'" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'KRPUS' )" ).append("\n"); 
		query.append("     AND   SCC_CD = 'KRPUS'" ).append("\n"); 
		query.append("     #elseif( ${condition_value} == 'KRKAN' )" ).append("\n"); 
		query.append("     AND   SCC_CD = 'KRKAN'" ).append("\n"); 
		query.append("     #else" ).append("\n"); 
		query.append("	 AND   ECC_CD = @[condition_value]        " ).append("\n"); 
		query.append("     #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" #else    --SCC" ).append("\n"); 
		query.append("	 AND   SCC_CD = @[condition_value]    " ).append("\n"); 
		query.append(" #end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("    ) A," ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT 'IN' CODE, 'Inventory' NAME,       '1' SORT FROM DUAL UNION ALL" ).append("\n"); 
		query.append("        SELECT 'RI' CODE, 'Reposition In' NAME,   '2' SORT FROM DUAL UNION ALL" ).append("\n"); 
		query.append("        SELECT 'OT' CODE, 'Other(LT/ST/OW)' NAME, '3' SORT FROM DUAL UNION ALL" ).append("\n"); 
		query.append("        SELECT 'IF' CODE, 'MG Forecast' NAME,     '4' SORT FROM DUAL UNION ALL" ).append("\n"); 
		query.append("        SELECT 'OF' CODE, 'OP Forecast' NAME,     '5' SORT FROM DUAL UNION ALL" ).append("\n"); 
		query.append("        SELECT 'RO' CODE, 'Reposition Out' NAME,  '6' SORT FROM DUAL UNION ALL" ).append("\n"); 
		query.append("        SELECT 'IC' CODE, 'IC' NAME,              '7' SORT FROM DUAL UNION ALL  " ).append("\n"); 
		query.append("        SELECT 'BA' CODE, 'Balance' NAME,         '8' SORT FROM DUAL          " ).append("\n"); 
		query.append("    ) B" ).append("\n"); 
		query.append("    ORDER BY LOC_CD,SORT" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${head_week} != 1 )  -- 1주차 아닌 경우만 조회" ).append("\n"); 
		query.append(",ADD_DAY_SCC AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("     SELECT SCC_CD " ).append("\n"); 
		query.append("     FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("     WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩                           " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if( ${condition_value} != '' ) -- RCC : ALL 일대는 쿼리 감춤" ).append("\n"); 
		query.append("  #if(${condition_flag} == 'R')" ).append("\n"); 
		query.append("	 AND   RCC_CD = @[condition_value]" ).append("\n"); 
		query.append(" #elseif( ${condition_flag} == 'L' )" ).append("\n"); 
		query.append("     AND   LCC_CD = @[condition_value]" ).append("\n"); 
		query.append(" #elseif( ${condition_flag} == 'E')" ).append("\n"); 
		query.append("	 AND   ECC_CD = @[condition_value]        " ).append("\n"); 
		query.append(" #else    --SCC" ).append("\n"); 
		query.append("	 AND   SCC_CD = @[condition_value]    " ).append("\n"); 
		query.append(" #end" ).append("\n"); 
		query.append("#end  " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- REPO IN 집계 LCC 가중치" ).append("\n"); 
		query.append(",ADD_DAY AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT B.LCC_CD" ).append("\n"); 
		query.append("          ,B.ECC_CD" ).append("\n"); 
		query.append("          ,B.SCC_CD" ).append("\n"); 
		query.append("          ,B.LOC_CD" ).append("\n"); 
		query.append("          ,NVL(A.REPO_ADD_DYS, 0) DAYS -- 테이블에 등록되지 않은 LCC는 0" ).append("\n"); 
		query.append("    FROM EQR_WK_PRD_ADD_DY A," ).append("\n"); 
		query.append("         (                                  " ).append("\n"); 
		query.append("             SELECT DISTINCT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD " ).append("\n"); 
		query.append("             FROM MDM_EQ_ORZ_CHT A," ).append("\n"); 
		query.append("                  MDM_LOCATION B," ).append("\n"); 
		query.append("                  ADD_DAY_SCC C" ).append("\n"); 
		query.append("             WHERE A.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("             AND   B.SCC_CD = C.SCC_CD                " ).append("\n"); 
		query.append("             AND A.DELT_FLG = 'N'                                                                                           " ).append("\n"); 
		query.append("         ) B" ).append("\n"); 
		query.append("    WHERE A.LCC_CD(+) = B.LCC_CD -- 테이블에 등록되지 않은 LCC 0으로 조회                " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",DIVISION AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L4, L3, L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4," ).append("\n"); 
		query.append("                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("	WHERE   M0  = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = @[head_week]) -- -1WEEK	" ).append("\n"); 
		query.append(")	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",REPOIN_VVD AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT DISTINCT VVD" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT WEEKDIVISION" ).append("\n"); 
		query.append("          ,WEEK" ).append("\n"); 
		query.append("          ,DIV" ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,LANE" ).append("\n"); 
		query.append("          ,REMARKFLAG" ).append("\n"); 
		query.append("          ,DCLPTSQL" ).append("\n"); 
		query.append("          ,REMARK" ).append("\n"); 
		query.append("          ,CODCFMCTSCD" ).append("\n"); 
		query.append("          ,FIRSTETB" ).append("\n"); 
		query.append("          ,MNLINPFLG" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT WEEKDIVISION" ).append("\n"); 
		query.append("              ,WEEK" ).append("\n"); 
		query.append("              ,DIV" ).append("\n"); 
		query.append("              ,VVD" ).append("\n"); 
		query.append("              ,LANE" ).append("\n"); 
		query.append("              ,REMARKFLAG" ).append("\n"); 
		query.append("              ,DCLPTSQL" ).append("\n"); 
		query.append("              ,REMARK" ).append("\n"); 
		query.append("              ,CODCFMCTSCD" ).append("\n"); 
		query.append("              ,FIRSTETB" ).append("\n"); 
		query.append("              ,MNLINPFLG" ).append("\n"); 
		query.append("              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (  " ).append("\n"); 
		query.append("        SELECT" ).append("\n"); 
		query.append("        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("        		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("        		INDEX ( WEK XAK1EQR_WK_PRD )" ).append("\n"); 
		query.append("        		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1'," ).append("\n"); 
		query.append("												DIV.L3,	'0'," ).append("\n"); 
		query.append("                                                DIV.L2,	'1'," ).append("\n"); 
		query.append("        										DIV.L1,	'2'," ).append("\n"); 
		query.append("        										DIV.M0,	'3'," ).append("\n"); 
		query.append("        										DIV.R1,	'4'," ).append("\n"); 
		query.append("        										DIV.R2,	'5'," ).append("\n"); 
		query.append("        												NULL) weekDivision," ).append("\n"); 
		query.append("        												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("        		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("        		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("        		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM	" ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			SELECT	" ).append("\n"); 
		query.append("        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("        					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("        					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("        					" ).append("\n"); 
		query.append("        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("        					/*" ).append("\n"); 
		query.append("        					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("        					*/" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        						AND     ROWNUM = 1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					)										FM_PKEY												" ).append("\n"); 
		query.append("        			FROM	" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("        								P2_END 		END_DATE				" ).append("\n"); 
		query.append("        						FROM	(" ).append("\n"); 
		query.append("        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START, -- -3주차부터 조회                                            " ).append("\n"); 
		query.append("        											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                 " ).append("\n"); 
		query.append("        									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("        								)" ).append("\n"); 
		query.append("        						WHERE	CUR_WEEK	=	(SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = @[head_week]) -- -1WEEK		" ).append("\n"); 
		query.append("        					)					PERIOD	," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("        					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("        			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    " ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		)					DST		," ).append("\n"); 
		query.append("        		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("        		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("        		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("        		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("                    FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			" ).append("\n"); 
		query.append("        		)                   TRD     ," ).append("\n"); 
		query.append("        		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("        		DIVISION            DIV     ," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("        -- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("        AND	(" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR		" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("               OR" ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR " ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬" ).append("\n"); 
		query.append("        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬" ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("        							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	" ).append("\n"); 
		query.append("												DV.L3,	'0'," ).append("\n"); 
		query.append("                                                DV.L2,	'1'," ).append("\n"); 
		query.append("        										DV.L1,	'2'," ).append("\n"); 
		query.append("        										DV.M0,	'3'," ).append("\n"); 
		query.append("        										DV.R1,	'4'," ).append("\n"); 
		query.append("        										DV.R2,	'5'," ).append("\n"); 
		query.append("        											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("        	--	1 dclptsql," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("        			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD" ).append("\n"); 
		query.append("        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    " ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */" ).append("\n"); 
		query.append("        			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("        		)											dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/" ).append("\n"); 
		query.append("        		'21001231'				firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        FROM    DIVISION            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        /* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("                DISTINCT		" ).append("\n"); 
		query.append("        		DECODE	( " ).append("\n"); 
		query.append("        					VD.N1ST_ETB_YRWK , " ).append("\n"); 
		query.append("                            DV.L4, '-1'," ).append("\n"); 
		query.append("                            DV.L3, '0'," ).append("\n"); 
		query.append("                            DV.L2, '1'," ).append("\n"); 
		query.append("        					DV.L1, '2'," ).append("\n"); 
		query.append("        					DV.M0, '3'," ).append("\n"); 
		query.append("        					DV.R1, '4'," ).append("\n"); 
		query.append("        					DV.R2, '5'," ).append("\n"); 
		query.append("        					NULL" ).append("\n"); 
		query.append("        				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("        		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("        		1 dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM    DIVISION            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        ) " ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT CASE WHEN LOC_CD IS NULL THEN 'TOTAL'" ).append("\n"); 
		query.append("			ELSE LOC_CD||'('||LOC_GRP_CD||')' END  LOC_CD" ).append("\n"); 
		query.append("	  ,LOC_GRP_CD" ).append("\n"); 
		query.append("	  ,CODE" ).append("\n"); 
		query.append("  	  ,NAME" ).append("\n"); 
		query.append("	  ,SORT" ).append("\n"); 
		query.append("	  ,WEEK" ).append("\n"); 
		query.append("	  ,GTOTAL" ).append("\n"); 
		query.append("	  ,DTOTAL" ).append("\n"); 
		query.append("	  ,STOTAL" ).append("\n"); 
		query.append("	  ,D2_Q" ).append("\n"); 
		query.append("      ,D4_Q" ).append("\n"); 
		query.append("      ,D5_Q" ).append("\n"); 
		query.append("      ,D7_Q" ).append("\n"); 
		query.append("      ,R2_Q" ).append("\n"); 
		query.append("      ,R5_Q" ).append("\n"); 
		query.append("      ,R9_Q" ).append("\n"); 
		query.append("      ,O2_Q" ).append("\n"); 
		query.append("      ,S2_Q" ).append("\n"); 
		query.append("      ,O4_Q" ).append("\n"); 
		query.append("      ,S4_Q" ).append("\n"); 
		query.append("      ,F2_Q" ).append("\n"); 
		query.append("      ,A2_Q" ).append("\n"); 
		query.append("      ,F4_Q" ).append("\n"); 
		query.append("      ,A4_Q" ).append("\n"); 
		query.append("      ,F5_Q   " ).append("\n"); 
		query.append("      ,D2_F	--del 버튼 여부(글씨 색)" ).append("\n"); 
		query.append("      ,D4_F" ).append("\n"); 
		query.append("      ,D5_F" ).append("\n"); 
		query.append("      ,D7_F" ).append("\n"); 
		query.append("      ,R2_F" ).append("\n"); 
		query.append("      ,R5_F" ).append("\n"); 
		query.append("      ,R9_F" ).append("\n"); 
		query.append("      ,O2_F" ).append("\n"); 
		query.append("      ,S2_F" ).append("\n"); 
		query.append("      ,O4_F" ).append("\n"); 
		query.append("      ,S4_F" ).append("\n"); 
		query.append("      ,F2_F" ).append("\n"); 
		query.append("      ,A2_F" ).append("\n"); 
		query.append("      ,F4_F" ).append("\n"); 
		query.append("      ,A4_F" ).append("\n"); 
		query.append("      ,F5_F" ).append("\n"); 
		query.append("	  ,CASE WHEN LOC_CD IS NULL THEN NULL" ).append("\n"); 
		query.append("			ELSE '+' END TREE" ).append("\n"); 
		query.append("	  ,@[condition_value] ORI_LOC_CD" ).append("\n"); 
		query.append("	  ,@[ori_loc_cd] ORI_ORI_LOC_CD" ).append("\n"); 
		query.append("	  ,@[ori_ori_loc_cd] ORI_ORI_ORI_LOC_CD" ).append("\n"); 
		query.append("	  ,@[head_week] HEAD_WEEK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("-- RCC : ALL일때 표현 (RCC : ALL)" ).append("\n"); 
		query.append("#if ( ${condition_value} == '' && ${present_flag} == 'L' )" ).append("\n"); 
		query.append("SELECT A.RCC_CD LOC_CD" ).append("\n"); 
		query.append("      ,'R' LOC_GRP_CD" ).append("\n"); 
		query.append("      ,A.CODE" ).append("\n"); 
		query.append("      ,A.NAME" ).append("\n"); 
		query.append("      ,A.SORT" ).append("\n"); 
		query.append("      ,A.WEEK  " ).append("\n"); 
		query.append("      ,SUM(A.GTOTAL) GTOTAL" ).append("\n"); 
		query.append("      ,SUM(A.DTOTAL) DTOTAL" ).append("\n"); 
		query.append("      ,SUM(A.STOTAL) STOTAL" ).append("\n"); 
		query.append("      ,SUM(A.D2_Q) D2_Q" ).append("\n"); 
		query.append("      ,SUM(A.D4_Q) D4_Q" ).append("\n"); 
		query.append("      ,SUM(A.D5_Q) D5_Q" ).append("\n"); 
		query.append("      ,SUM(A.D7_Q) D7_Q" ).append("\n"); 
		query.append("      ,SUM(A.R2_Q) R2_Q" ).append("\n"); 
		query.append("      ,SUM(A.R5_Q) R5_Q" ).append("\n"); 
		query.append("      ,SUM(A.R9_Q) R9_Q" ).append("\n"); 
		query.append("      ,SUM(A.O2_Q) O2_Q" ).append("\n"); 
		query.append("      ,SUM(A.S2_Q) S2_Q" ).append("\n"); 
		query.append("      ,SUM(A.O4_Q) O4_Q" ).append("\n"); 
		query.append("      ,SUM(A.S4_Q) S4_Q" ).append("\n"); 
		query.append("      ,SUM(A.F2_Q) F2_Q" ).append("\n"); 
		query.append("      ,SUM(A.A2_Q) A2_Q" ).append("\n"); 
		query.append("      ,SUM(A.F4_Q) F4_Q" ).append("\n"); 
		query.append("      ,SUM(A.A4_Q) A4_Q" ).append("\n"); 
		query.append("      ,SUM(A.F5_Q) F5_Q   " ).append("\n"); 
		query.append("      ,'N' D2_F	--del 버튼 여부(글씨 색)" ).append("\n"); 
		query.append("      ,'N' D4_F" ).append("\n"); 
		query.append("      ,'N' D5_F" ).append("\n"); 
		query.append("      ,'N' D7_F" ).append("\n"); 
		query.append("      ,'N' R2_F" ).append("\n"); 
		query.append("      ,'N' R5_F" ).append("\n"); 
		query.append("      ,'N' R9_F" ).append("\n"); 
		query.append("      ,'N' O2_F" ).append("\n"); 
		query.append("      ,'N' S2_F" ).append("\n"); 
		query.append("      ,'N' O4_F" ).append("\n"); 
		query.append("      ,'N' S4_F" ).append("\n"); 
		query.append("      ,'N' F2_F" ).append("\n"); 
		query.append("      ,'N' A2_F" ).append("\n"); 
		query.append("      ,'N' F4_F" ).append("\n"); 
		query.append("      ,'N' A4_F" ).append("\n"); 
		query.append("      ,'N' F5_F" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("SELECT LOC_CD" ).append("\n"); 
		query.append("      ,(SELECT DISTINCT RCC_CD FROM MDM_EQ_ORZ_CHT X WHERE X.LCC_CD = LOC_CD) RCC_CD" ).append("\n"); 
		query.append("      ,LOC_GRP_CD" ).append("\n"); 
		query.append("      ,CODE" ).append("\n"); 
		query.append("      ,NAME" ).append("\n"); 
		query.append("      ,SORT" ).append("\n"); 
		query.append("      ,WEEK" ).append("\n"); 
		query.append("      ,SUM(D2_Q)+SUM(D4_Q)+SUM(D5_Q)+SUM(D7_Q)+SUM(R2_Q)+SUM(R5_Q)+SUM(R9_Q)+SUM(O2_Q)+SUM(S2_Q)+SUM(O4_Q)+SUM(S4_Q)+SUM(F2_Q)+SUM(A2_Q)+SUM(F4_Q)+SUM(A4_Q)+SUM(F5_Q) GTOTAL" ).append("\n"); 
		query.append("      ,SUM(D2_Q)+SUM(D4_Q)+SUM(D5_Q)+SUM(D7_Q) DTOTAL" ).append("\n"); 
		query.append("      ,SUM(R2_Q)+SUM(R5_Q)+SUM(R9_Q)+SUM(O2_Q)+SUM(S2_Q)+SUM(O4_Q)+SUM(S4_Q)+SUM(F2_Q)+SUM(A2_Q)+SUM(F4_Q)+SUM(A4_Q)+SUM(F5_Q) STOTAL            " ).append("\n"); 
		query.append("      ,SUM(D2_Q) D2_Q" ).append("\n"); 
		query.append("      ,SUM(D4_Q) D4_Q" ).append("\n"); 
		query.append("      ,SUM(D5_Q) D5_Q" ).append("\n"); 
		query.append("      ,SUM(D7_Q) D7_Q" ).append("\n"); 
		query.append("      ,SUM(R2_Q) R2_Q" ).append("\n"); 
		query.append("      ,SUM(R5_Q) R5_Q" ).append("\n"); 
		query.append("      ,SUM(R9_Q) R9_Q" ).append("\n"); 
		query.append("      ,SUM(O2_Q) O2_Q" ).append("\n"); 
		query.append("      ,SUM(S2_Q) S2_Q" ).append("\n"); 
		query.append("      ,SUM(O4_Q) O4_Q" ).append("\n"); 
		query.append("      ,SUM(S4_Q) S4_Q" ).append("\n"); 
		query.append("      ,SUM(F2_Q) F2_Q" ).append("\n"); 
		query.append("      ,SUM(A2_Q) A2_Q" ).append("\n"); 
		query.append("      ,SUM(F4_Q) F4_Q" ).append("\n"); 
		query.append("      ,SUM(A4_Q) A4_Q" ).append("\n"); 
		query.append("      ,SUM(F5_Q) F5_Q" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      ,MAX(D2_F) D2_F" ).append("\n"); 
		query.append("      ,MAX(D4_F) D4_F" ).append("\n"); 
		query.append("      ,MAX(D5_F) D5_F" ).append("\n"); 
		query.append("      ,MAX(D7_F) D7_F" ).append("\n"); 
		query.append("      ,MAX(R2_F) R2_F" ).append("\n"); 
		query.append("      ,MAX(R5_F) R5_F" ).append("\n"); 
		query.append("      ,MAX(R9_F) R9_F" ).append("\n"); 
		query.append("      ,MAX(O2_F) O2_F" ).append("\n"); 
		query.append("      ,MAX(S2_F) S2_F" ).append("\n"); 
		query.append("      ,MAX(O4_F) O4_F" ).append("\n"); 
		query.append("      ,MAX(S4_F) S4_F" ).append("\n"); 
		query.append("      ,MAX(F2_F) F2_F" ).append("\n"); 
		query.append("      ,MAX(A2_F) A2_F" ).append("\n"); 
		query.append("      ,MAX(F4_F) F4_F" ).append("\n"); 
		query.append("      ,MAX(A4_F) A4_F" ).append("\n"); 
		query.append("      ,MAX(F5_F) F5_F  " ).append("\n"); 
		query.append("FROM " ).append("\n"); 
		query.append("(      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT B.LOC_CD" ).append("\n"); 
		query.append("          ,B.LOC_GRP_CD" ).append("\n"); 
		query.append("          ,B.CODE" ).append("\n"); 
		query.append("          ,B.NAME" ).append("\n"); 
		query.append("          ,B.SORT" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("          ,(SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]) WEEK" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY))),0) D2_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY))),0) D4_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY))),0) D5_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY))),0) D7_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY))),0) R2_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY))),0) R5_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY))),0) R9_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY))),0) O2_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY))),0) S2_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY))),0) O4_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY))),0) S4_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY))),0) F2_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY))),0) A2_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY))),0) F4_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY))),0) A4_Q" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY))),0) F5_Q" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D2', A.TMP_SAV_FLG))),'N') D2_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D4', A.TMP_SAV_FLG))),'N') D4_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D5', A.TMP_SAV_FLG))),'N') D5_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'D7', A.TMP_SAV_FLG))),'N') D7_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'R2', A.TMP_SAV_FLG))),'N') R2_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'R5', A.TMP_SAV_FLG))),'N') R5_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'R9', A.TMP_SAV_FLG))),'N') R9_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'O2', A.TMP_SAV_FLG))),'N') O2_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'S2', A.TMP_SAV_FLG))),'N') S2_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'O4', A.TMP_SAV_FLG))),'N') O4_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'S4', A.TMP_SAV_FLG))),'N') S4_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'F2', A.TMP_SAV_FLG))),'N') F2_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'A2', A.TMP_SAV_FLG))),'N') A2_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'F4', A.TMP_SAV_FLG))),'N') F4_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'A4', A.TMP_SAV_FLG))),'N') A4_F" ).append("\n"); 
		query.append("          ,NVL(DECODE(A.WKY_SIM_TP_CD, B.CODE, DECODE(WEEK, (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]), DECODE(A.CNTR_TPSZ_CD, 'F5', A.TMP_SAV_FLG))),'N') F5_F" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("    FROM " ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        -- INVENTORY ------------------------------------------------------------------" ).append("\n"); 
		query.append("        -- INVENTORY (-1주차)" ).append("\n"); 
		query.append("        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("              ,A.LOC_CD" ).append("\n"); 
		query.append("              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("              ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,A.CNTR_QTY" ).append("\n"); 
		query.append("              ,'N' TMP_SAV_FLG         " ).append("\n"); 
		query.append("        FROM EQR_MTY_WKY_SIM A" ).append("\n"); 
		query.append("            ,DUMMY_LOCATION B" ).append("\n"); 
		query.append("        WHERE A.FCAST_YRWK = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1주차      " ).append("\n"); 
		query.append("        AND   A.LOC_GRP_CD = @[present_flag] " ).append("\n"); 
		query.append("        AND   A.WKY_SIM_TP_CD = 'IN' -- INVENTORY" ).append("\n"); 
		query.append("        AND   A.LOC_CD      = B.LOC_CD" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- INVENTORY (0주차)     " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT A.BSE_DT WEEK" ).append("\n"); 
		query.append("              ,A.LOC_CD" ).append("\n"); 
		query.append("              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("              ,'IN' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,SUM(A.CNTR_QTY) CNTR_QTY" ).append("\n"); 
		query.append("              ,'N' TMP_SAV_FLG       " ).append("\n"); 
		query.append("        FROM  CIM_ETC_INVT A" ).append("\n"); 
		query.append("             ,DUMMY_LOCATION B" ).append("\n"); 
		query.append("        WHERE A.CO_CD ='H'" ).append("\n"); 
		query.append("        AND   A.LOC_GRP_CD = @[present_flag]" ).append("\n"); 
		query.append("        AND   A.INVT_USE_TP_CD = '1'" ).append("\n"); 
		query.append("        AND   A.BSE_DT = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 2) -- 0주차    " ).append("\n"); 
		query.append("        AND   A.LOC_CD = B.LOC_CD" ).append("\n"); 
		query.append("        GROUP BY A.BSE_DT" ).append("\n"); 
		query.append("                ,A.LOC_CD" ).append("\n"); 
		query.append("                ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- REPO IN ------------------------------------------------------------------" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT WEEK" ).append("\n"); 
		query.append("              ,LOC_CD" ).append("\n"); 
		query.append("              ,LOC_GRP_CD" ).append("\n"); 
		query.append("              ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,NVL(SUM(CNTR_QTY),0) CNTR_QTY" ).append("\n"); 
		query.append("              ,MAX(TMP_SAV_FLG)  TMP_SAV_FLG" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            --SELECT ROW_NUMBER() OVER (PARTITION BY WEEK, LOC_CD, CNTR_TPSZ_CD ORDER BY TMP_SAV_FLG DESC) DP_SEQ" ).append("\n"); 
		query.append("            --      ,WEEK" ).append("\n"); 
		query.append("            --      ,LOC_CD" ).append("\n"); 
		query.append("            --      ,LOC_GRP_CD" ).append("\n"); 
		query.append("            --      ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("            --      ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("            --      ,CNTR_QTY" ).append("\n"); 
		query.append("            --      ,TMP_SAV_FLG" ).append("\n"); 
		query.append("            --FROM" ).append("\n"); 
		query.append("            --(      " ).append("\n"); 
		query.append("#if(${head_week} == 1)" ).append("\n"); 
		query.append("                -- -1주차 수동입력" ).append("\n"); 
		query.append("                SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD" ).append("\n"); 
		query.append("                      ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_QTY" ).append("\n"); 
		query.append("                      ,A.TMP_SAV_FLG" ).append("\n"); 
		query.append("                FROM EQR_MTY_WKY_SIM A" ).append("\n"); 
		query.append("                    ,DUMMY_LOCATION B   " ).append("\n"); 
		query.append("                --WHERE A.FCAST_YRWK BETWEEN (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) AND (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=6) -- -1주차~+4주차" ).append("\n"); 
		query.append("                WHERE A.FCAST_YRWK =(SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1주차 만 수집(20130315)     " ).append("\n"); 
		query.append("                AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                AND   A.WKY_SIM_TP_CD = 'RI'        -- REPOSITION IN" ).append("\n"); 
		query.append("                AND   A.LOC_CD        = B.LOC_CD" ).append("\n"); 
		query.append("                --AND   A.TMP_SAV_FLG   = 'Y'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else -- 2,3,4,5,6 일때 가동" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("    			-- REPO IN DETAIL(EES_EQR_5009에서 수기입력) 은 적색으로 표시됨." ).append("\n"); 
		query.append("				SELECT A.WEEK" ).append("\n"); 
		query.append("                     #if ( ${present_flag} == 'L')" ).append("\n"); 
		query.append("                      ,C.LCC_CD LOC_CD" ).append("\n"); 
		query.append("                     #elseif( ${present_flag} == 'E')" ).append("\n"); 
		query.append("                      ,C.ECC_CD LOC_CD    " ).append("\n"); 
		query.append("                     #else  --'S'" ).append("\n"); 
		query.append("                      ,C.SCC_CD LOC_CD                          " ).append("\n"); 
		query.append("                     #end" ).append("\n"); 
		query.append("			          ,@[present_flag] LOC_GRP_CD" ).append("\n"); 
		query.append("			          ,'RI' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("			          ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("			          ,NVL(SUM(A.CNTR_QTY),0) CNTR_QTY" ).append("\n"); 
		query.append("			          ,'Y' TMP_SAV_FLG -- 0보다 큰 값만 추출" ).append("\n"); 
		query.append("    			FROM " ).append("\n"); 
		query.append("    			(" ).append("\n"); 
		query.append("    				SELECT X.WEEK" ).append("\n"); 
		query.append("				          ,Y.LOC_CD" ).append("\n"); 
		query.append("                          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                END CNTR_QTY                           " ).append("\n"); 
		query.append("    				FROM EQR_MTY_BAL_RPT_DCHG_MNL A" ).append("\n"); 
		query.append(" 				        ,COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("				        ,BASIC_WEEK X  " ).append("\n"); 
		query.append(" 				        ,ADD_DAY Y" ).append("\n"); 
		query.append("    				WHERE B.INTG_CD_ID        = 'CD00830'  " ).append("\n"); 
		query.append("    				AND   A.ETD_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999  " ).append("\n"); 
		query.append("    				AND   A.LOC_CD = Y.LOC_CD    " ).append("\n"); 
		query.append("    				AND   X.ROW_SEQ = @[head_week] -- 0주차                    " ).append("\n"); 
		query.append("    			) A," ).append("\n"); 
		query.append("                (" ).append("\n"); 
		query.append("                    SELECT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD" ).append("\n"); 
		query.append("                    FROM MDM_EQ_ORZ_CHT A" ).append("\n"); 
		query.append("                        ,MDM_LOCATION B" ).append("\n"); 
		query.append("                    WHERE A.SCC_CD = B.SCC_CD     " ).append("\n"); 
		query.append("                ) C" ).append("\n"); 
		query.append("                WHERE A.LOC_CD(+)  = C.LOC_CD" ).append("\n"); 
		query.append("    			GROUP BY A.WEEK " ).append("\n"); 
		query.append("                     #if ( ${present_flag} == 'L' )" ).append("\n"); 
		query.append("                        ,C.LCC_CD " ).append("\n"); 
		query.append("                     #elseif ( ${present_flag} == 'E' )" ).append("\n"); 
		query.append("                        ,C.ECC_CD " ).append("\n"); 
		query.append("                     #else  --'E'" ).append("\n"); 
		query.append("                        ,C.SCC_CD                             " ).append("\n"); 
		query.append("                     #end  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("    			HAVING  NVL(SUM(A.CNTR_QTY),0) > 0" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("              #if( ${head_week} == 3 || ${head_week} == 4 || ${head_week} == 5 || ${head_week} == 6 )  " ).append("\n"); 
		query.append("                -- +1WEEK, +2WEEK, +3WEEK, +4WEEK 에서만 사용" ).append("\n"); 
		query.append("                -- Repo In (COD SIMULATION, PLUS OTHER추출)" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("             " ).append("\n"); 
		query.append("                SELECT A.WEEK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD                                          " ).append("\n"); 
		query.append("                      ,@[present_flag] LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,'RI' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SUM(A.CNTR_QTY) CNTR_QTY" ).append("\n"); 
		query.append("                      ,'N' TMP_SAV_FLG                   " ).append("\n"); 
		query.append("                FROM " ).append("\n"); 
		query.append("                (   " ).append("\n"); 
		query.append("                    -- PLUS OTHER " ).append("\n"); 
		query.append("                    -- INP_YRWK가 -1WEEK 가 곧 현재주차에 사용된다." ).append("\n"); 
		query.append("                    SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                          ,A.LOC_CD" ).append("\n"); 
		query.append("                          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                END CNTR_QTY" ).append("\n"); 
		query.append("                    FROM EQR_MTY_BAL_RPT_OTR A" ).append("\n"); 
		query.append("                        ,COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("                        ,DUMMY_LOCATION C   " ).append("\n"); 
		query.append("                    WHERE B.INTG_CD_ID        = 'CD00830'         " ).append("\n"); 
		query.append("                    AND   A.INP_YRWK          = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- +other는 -1WEEK가 곧 현재주차로 인식된다." ).append("\n"); 
		query.append("                    AND   A.LOC_CD            = C.LOC_CD" ).append("\n"); 
		query.append("                    AND   A.LOC_GRP_CD        = @[present_flag]" ).append("\n"); 
		query.append("                    AND   A.MTY_BAL_OTR_TP_CD = 2 -- PLUS OTHER (REPO IN 에 포함)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                    UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                    -- COD SIMULATION " ).append("\n"); 
		query.append("                    SELECT A.WEEK WEEK" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                         #if ( ${present_flag} == 'L')" ).append("\n"); 
		query.append("                          ,C.LCC_CD LOC_CD" ).append("\n"); 
		query.append("                         #elseif( ${present_flag} == 'E')" ).append("\n"); 
		query.append("                          ,C.ECC_CD LOC_CD    " ).append("\n"); 
		query.append("                         #else  --'S'" ).append("\n"); 
		query.append("                          ,C.SCC_CD LOC_CD                          " ).append("\n"); 
		query.append("                         #end" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("                            " ).append("\n"); 
		query.append("                          ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          ,SUM(A.CNTR_QTY) CNTR_QTY                " ).append("\n"); 
		query.append("                    FROM " ).append("\n"); 
		query.append("                    ( " ).append("\n"); 
		query.append("                    	-- BAY PLAN, I" ).append("\n"); 
		query.append("                        SELECT /*+ NO_MERGE(B) */ B.WEEK" ).append("\n"); 
		query.append("                   	          ,A.VSL_CD" ).append("\n"); 
		query.append("                              ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,B.SLAN_CD" ).append("\n"); 
		query.append("                              ,A.POD_CD" ).append("\n"); 
		query.append("                              ,B.YD_CD" ).append("\n"); 
		query.append("                              ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                              ,'I' DIV" ).append("\n"); 
		query.append("                              ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                              ,COUNT(1) CNTR_QTY" ).append("\n"); 
		query.append("                        FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                        ( " ).append("\n"); 
		query.append("                            SELECT /*+ ORDERED USE_NL(A) INDEX(A XAK10VSK_VSL_PORT_SKD) */" ).append("\n"); 
		query.append("                                   A.VSL_CD" ).append("\n"); 
		query.append("                                  ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,A.SLAN_CD" ).append("\n"); 
		query.append("                                  ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                                  ,A.YD_CD" ).append("\n"); 
		query.append("                                  ,A.VPS_ETB_DT" ).append("\n"); 
		query.append("                                  ,X.WEEK                           " ).append("\n"); 
		query.append("                            FROM ADD_DAY Y" ).append("\n"); 
		query.append("                                ,BASIC_WEEK X" ).append("\n"); 
		query.append("                                ,VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                                ,REPOIN_VVD Z" ).append("\n"); 
		query.append("                            WHERE A.VPS_PORT_CD(+) = Y.LOC_CD " ).append("\n"); 
		query.append("                            AND   X.ROW_SEQ        = @[head_week] -- 0주차 " ).append("\n"); 
		query.append("                            AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                        SELECT /*+ NO_UNNEST */ A.LOC_CD " ).append("\n"); 
		query.append("                                                        FROM MDM_LOCATION A" ).append("\n"); 
		query.append("                                                            ,ADD_DAY_SCC C " ).append("\n"); 
		query.append("                                                        WHERE A.SCC_CD = C.SCC_CD" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                                             " ).append("\n"); 
		query.append("                            AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999                              " ).append("\n"); 
		query.append("                            AND   A.CLPT_IND_SEQ = '1'	      " ).append("\n"); 
		query.append("                            AND   A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                            AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                            AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)" ).append("\n"); 
		query.append("                                            " ).append("\n"); 
		query.append("                        ) B" ).append("\n"); 
		query.append("                        WHERE A.LODG_DCHG_IND_CD =	'C'" ).append("\n"); 
		query.append("                        AND	  A.FULL_MTY_CD	     =	'E'" ).append("\n"); 
		query.append("                        AND	  A.CRR_CD		     =	'SML'" ).append("\n"); 
		query.append("                        AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                        AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                        GROUP BY B.WEEK" ).append("\n"); 
		query.append("                                ,A.VSL_CD" ).append("\n"); 
		query.append("                                ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                ,B.SLAN_CD" ).append("\n"); 
		query.append("                                ,A.POD_CD" ).append("\n"); 
		query.append("                                ,B.YD_CD" ).append("\n"); 
		query.append("                                ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                                ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                        SELECT /*+ NO_MERGE(Z) ORDERED */ Z.WEEK" ).append("\n"); 
		query.append("                              ,Z.VSL_CD" ).append("\n"); 
		query.append("                              ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,Z.SLAN_CD" ).append("\n"); 
		query.append("                              ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                              ,Z.YD_CD" ).append("\n"); 
		query.append("                              ,Z.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                              ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(P.D2_QTY,0) " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(P.D4_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(P.D5_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(P.D7_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(P.R2_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(P.R5_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(P.R9_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(P.O2_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(P.O4_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(P.S2_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(P.S4_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(P.F2_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(P.F4_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(P.F5_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(P.A2_QTY,0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(P.A4_QTY,0)       " ).append("\n"); 
		query.append("                                    END CNTR_QTY" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT /*+ ORDERED USE_NL(A) INDEX(A XAK10VSK_VSL_PORT_SKD) */ " ).append("\n"); 
		query.append("                                       A.VSL_CD" ).append("\n"); 
		query.append("                                      ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      ,A.SLAN_CD" ).append("\n"); 
		query.append("                                      ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                                      ,A.YD_CD" ).append("\n"); 
		query.append("                                      ,A.VPS_ETB_DT" ).append("\n"); 
		query.append("                                      ,X.WEEK" ).append("\n"); 
		query.append("                                FROM ADD_DAY Y" ).append("\n"); 
		query.append("                                    ,BASIC_WEEK X " ).append("\n"); 
		query.append("                                    ,VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                                    ,REPOIN_VVD Z     " ).append("\n"); 
		query.append("                                WHERE A.VPS_PORT_CD(+)    = Y.LOC_CD " ).append("\n"); 
		query.append("                                AND   X.ROW_SEQ           = @[head_week] -- 0주차                                                                  " ).append("\n"); 
		query.append("                                AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                          SELECT /*+ NO_UNNEST */ A.LOC_CD " ).append("\n"); 
		query.append("                                                          FROM MDM_LOCATION A" ).append("\n"); 
		query.append("                                                              ,ADD_DAY_SCC C " ).append("\n"); 
		query.append("                                                          WHERE A.SCC_CD = C.SCC_CD                                                          " ).append("\n"); 
		query.append("                                                       )                                                 " ).append("\n"); 
		query.append("                                                      " ).append("\n"); 
		query.append("                                AND	  A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS  AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999   " ).append("\n"); 
		query.append("                                AND   A.CLPT_IND_SEQ      = '1'	 " ).append("\n"); 
		query.append("                                AND   A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                                AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                                AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)     " ).append("\n"); 
		query.append("                                                             		        " ).append("\n"); 
		query.append("                            ) Z" ).append("\n"); 
		query.append("                            ,EQR_MTY_COD_PORT P " ).append("\n"); 
		query.append("							,EQR_MTY_COD_VVD  V                       " ).append("\n"); 
		query.append("                            ,COM_INTG_CD_DTL B " ).append("\n"); 
		query.append("                                                                                      " ).append("\n"); 
		query.append("                        WHERE B.INTG_CD_ID      = 'CD00830'                               " ).append("\n"); 
		query.append("                        AND	  V.VSL_CD			=	P.VSL_CD" ).append("\n"); 
		query.append("                        AND	  V.SKD_VOY_NO		=	P.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND	  V.SKD_DIR_CD		=	P.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND	  V.COD_CFM_DIV_CD	=	P.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                        AND	  'D'				=	P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                        AND   P.VSL_CD          = Z.VSL_CD" ).append("\n"); 
		query.append("                        AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND   P.PORT_CD         = Z.VPS_PORT_CD   " ).append("\n"); 
		query.append("                                                                 " ).append("\n"); 
		query.append("                    ) A," ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                        SELECT VSL_CD" ).append("\n"); 
		query.append("                              ,SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,VPS_PORT_CD" ).append("\n"); 
		query.append("                              ,DIV" ).append("\n"); 
		query.append("                              ,WEEK" ).append("\n"); 
		query.append("                        FROM " ).append("\n"); 
		query.append("                        (    " ).append("\n"); 
		query.append("                            -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                            SELECT /*+ ORDERED USE_NL(B) INDEX(B XAK10VSK_VSL_PORT_SKD) */" ).append("\n"); 
		query.append("                                   ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                                  ,B.VSL_CD" ).append("\n"); 
		query.append("                                  ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                                  ,NVL(A.COD_CFM_STS_CD,'I') DIV" ).append("\n"); 
		query.append("                                  ,X.WEEK" ).append("\n"); 
		query.append("                            FROM ADD_DAY Y" ).append("\n"); 
		query.append("                                ,BASIC_WEEK X                                " ).append("\n"); 
		query.append("                                ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                                ,EQR_MTY_COD_VVD A" ).append("\n"); 
		query.append("                            WHERE B.VSL_CD        = A.VSL_CD(+)" ).append("\n"); 
		query.append("                            AND   B.SKD_VOY_NO    = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                            AND   B.SKD_DIR_CD    = A.SKD_DIR_CD(+)  " ).append("\n"); 
		query.append("                            AND   X.ROW_SEQ       = @[head_week] -- 0주차   " ).append("\n"); 
		query.append("                            AND   B.VPS_PORT_CD(+)= Y.LOC_CD                              " ).append("\n"); 
		query.append("                            AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                          SELECT /*+ NO_UNNEST */ A.LOC_CD " ).append("\n"); 
		query.append("                                                          FROM MDM_LOCATION A" ).append("\n"); 
		query.append("                                                              ,ADD_DAY_SCC C " ).append("\n"); 
		query.append("                                                          WHERE A.SCC_CD = C.SCC_CD       " ).append("\n"); 
		query.append("                                                   )" ).append("\n"); 
		query.append("                                                                                                                                            " ).append("\n"); 
		query.append("                            AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                            AND   B.CLPT_IND_SEQ = '1'                                                         " ).append("\n"); 
		query.append("                            AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("                          " ).append("\n"); 
		query.append("                        ) " ).append("\n"); 
		query.append("                        WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("                    ) B," ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                        SELECT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD" ).append("\n"); 
		query.append("                        FROM MDM_EQ_ORZ_CHT A" ).append("\n"); 
		query.append("                            ,MDM_LOCATION B" ).append("\n"); 
		query.append("                        WHERE A.SCC_CD = B.SCC_CD     " ).append("\n"); 
		query.append("                    ) C" ).append("\n"); 
		query.append("                    WHERE A.WEEK       = B.WEEK" ).append("\n"); 
		query.append("                    AND   A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                    AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                    AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                    AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                    AND   A.DIV        = B.DIV" ).append("\n"); 
		query.append("                    AND   A.POD_CD(+)  = C.LOC_CD" ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("                    GROUP BY A.WEEK " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                         #if ( ${present_flag} == 'L' )" ).append("\n"); 
		query.append("                            ,C.LCC_CD " ).append("\n"); 
		query.append("                         #elseif ( ${present_flag} == 'E' )" ).append("\n"); 
		query.append("                            ,C.ECC_CD " ).append("\n"); 
		query.append("                         #else  --'E'" ).append("\n"); 
		query.append("                            ,C.SCC_CD                             " ).append("\n"); 
		query.append("                         #end  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                            ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                ) A " ).append("\n"); 
		query.append("                GROUP BY A.WEEK" ).append("\n"); 
		query.append("                        ,A.LOC_CD                                          " ).append("\n"); 
		query.append("                        ,A.CNTR_TPSZ_CD    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            #elseif( ${head_week} == 2 )  " ).append("\n"); 
		query.append("                -- Current Week 에서만 사용 (VD 동일지역 이송을 뺀 로직이 추가됨)" ).append("\n"); 
		query.append("                -- Repo In (PLUS OTHER +COD SIMULATION - 동일지역 VD이송 제거 )" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("             " ).append("\n"); 
		query.append("                SELECT A.WEEK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD                                          " ).append("\n"); 
		query.append("                      ,@[present_flag] LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,'RI' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SUM(A.CNTR_QTY) CNTR_QTY" ).append("\n"); 
		query.append("                      ,'N' TMP_SAV_FLG                   " ).append("\n"); 
		query.append("                FROM " ).append("\n"); 
		query.append("                (   " ).append("\n"); 
		query.append("                    -- PLUS OTHER " ).append("\n"); 
		query.append("                    -- INP_YRWK가 -1WEEK 가 곧 현재주차에 사용된다." ).append("\n"); 
		query.append("                    SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                          ,A.LOC_CD" ).append("\n"); 
		query.append("                          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                END CNTR_QTY" ).append("\n"); 
		query.append("                    FROM EQR_MTY_BAL_RPT_OTR A" ).append("\n"); 
		query.append("                        ,COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("                        ,DUMMY_LOCATION C   " ).append("\n"); 
		query.append("                    WHERE B.INTG_CD_ID        = 'CD00830'         " ).append("\n"); 
		query.append("                    AND   A.INP_YRWK          = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- +other는 -1WEEK가 곧 현재주차로 인식된다." ).append("\n"); 
		query.append("                    AND   A.LOC_CD            = C.LOC_CD" ).append("\n"); 
		query.append("                    AND   A.LOC_GRP_CD        = @[present_flag]" ).append("\n"); 
		query.append("                    AND   A.MTY_BAL_OTR_TP_CD = 2 -- PLUS OTHER (REPO IN 에 포함)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                    UNION ALL" ).append("\n"); 
		query.append("					-- COD SIMULATION - 동일지역 VD 데이터" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                    SELECT A.WEEK WEEK" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                         #if ( ${present_flag} == 'L' )" ).append("\n"); 
		query.append("                          ,C.LCC_CD LOC_CD" ).append("\n"); 
		query.append("                         #elseif( ${present_flag} == 'E' )" ).append("\n"); 
		query.append("                          ,C.ECC_CD LOC_CD    " ).append("\n"); 
		query.append("                         #else  --'S'" ).append("\n"); 
		query.append("                          ,C.SCC_CD LOC_CD                          " ).append("\n"); 
		query.append("                         #end " ).append("\n"); 
		query.append("                           " ).append("\n"); 
		query.append("                          ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          ,SUM(A.CNTR_QTY) CNTR_QTY                " ).append("\n"); 
		query.append("                    FROM " ).append("\n"); 
		query.append("                    ( " ).append("\n"); 
		query.append("                        SELECT B.WEEK WEEK" ).append("\n"); 
		query.append("                              ,B.VSL_CD" ).append("\n"); 
		query.append("                              ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,B.SLAN_CD" ).append("\n"); 
		query.append("                              ,B.YD_CD    " ).append("\n"); 
		query.append("                              ,B.CNTR_TPSZ_CD               " ).append("\n"); 
		query.append("                              -- RI 수량 - VD 수량 빼기(결과값이 0보다 작으면 0처리)                                                                 " ).append("\n"); 
		query.append("                              ,CASE WHEN SUM(NVL(B.CNTR_QTY,0)-NVL(A.CNTR_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.CNTR_QTY,0)-NVL(A.CNTR_QTY,0)) END CNTR_QTY         " ).append("\n"); 
		query.append("                        FROM" ).append("\n"); 
		query.append("                        (   " ).append("\n"); 
		query.append("                            -- MVMT VD  ( LCC별 시작일부터 이번주 월요일까지 )" ).append("\n"); 
		query.append("                            SELECT X.WEEK" ).append("\n"); 
		query.append("                                  ,A.VSL_CD" ).append("\n"); 
		query.append("                                  ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,A.VSL_LANE_CD " ).append("\n"); 
		query.append("                                  ,A.YD_CD" ).append("\n"); 
		query.append("                                  ,A.ETD_DT ETB_DT" ).append("\n"); 
		query.append("				        		  ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("				        		  ,SUM(A.CNTR_QTY) CNTR_QTY                                                                       " ).append("\n"); 
		query.append("                            FROM EQR_MTY_BAL_RPT_DCHG_SNAP A        " ).append("\n"); 
		query.append("                                ,BASIC_WEEK X      " ).append("\n"); 
		query.append("                                ,ADD_DAY Y                                      " ).append("\n"); 
		query.append("                            WHERE A.ETD_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE((SELECT TO_CHAR(NEXT_DAY(SYSDATE, 2)-7, 'YYYYMMDD') FROM DUAL), 'YYYYMMDD')+0.99999                      " ).append("\n"); 
		query.append("                            AND   X.ROW_SEQ        = @[head_week] -- 현재주차" ).append("\n"); 
		query.append("                            AND   SUBSTR(A.YD_CD, 0, 5)  = Y.LOC_CD (+)   " ).append("\n"); 
		query.append("		                	GROUP BY X.WEEK" ).append("\n"); 
		query.append("                                    ,A.VSL_CD" ).append("\n"); 
		query.append("                                    ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                    ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                    ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("                                    ,A.YD_CD" ).append("\n"); 
		query.append("                                    ,A.ETD_DT" ).append("\n"); 
		query.append("                                    ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        ) A" ).append("\n"); 
		query.append("				        ,(" ).append("\n"); 
		query.append("                            -- COD SIMULATION " ).append("\n"); 
		query.append("                            SELECT A.WEEK" ).append("\n"); 
		query.append("                                  ,A.VSL_CD" ).append("\n"); 
		query.append("                                  ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,A.SLAN_CD" ).append("\n"); 
		query.append("                                  ,A.YD_CD          " ).append("\n"); 
		query.append("                                  ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                  ,SUM(A.CNTR_QTY) CNTR_QTY                " ).append("\n"); 
		query.append("                            FROM " ).append("\n"); 
		query.append("                            ( " ).append("\n"); 
		query.append("                            	-- BAY PLAN, I" ).append("\n"); 
		query.append("                                SELECT /*+ NO_MERGE(B) */ B.WEEK -->SQL TUNNING" ).append("\n"); 
		query.append("                           	          ,A.VSL_CD" ).append("\n"); 
		query.append("                                      ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      ,B.SLAN_CD" ).append("\n"); 
		query.append("                                      ,A.POD_CD" ).append("\n"); 
		query.append("                                      ,B.YD_CD" ).append("\n"); 
		query.append("                                      ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                                      ,'I' DIV" ).append("\n"); 
		query.append("                                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                      ,COUNT(1) CNTR_QTY" ).append("\n"); 
		query.append("                                FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                                ( " ).append("\n"); 
		query.append("                                    SELECT /*+ ORDERED USE_NL(A) INDEX(A XAK10VSK_VSL_PORT_SKD) */ --> SQL TUNNING" ).append("\n"); 
		query.append("                                           A.VSL_CD" ).append("\n"); 
		query.append("                                          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                          ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                          ,A.SLAN_CD" ).append("\n"); 
		query.append("                                          ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                                          ,A.YD_CD" ).append("\n"); 
		query.append("                                          ,A.VPS_ETB_DT" ).append("\n"); 
		query.append("                                          ,X.WEEK                           " ).append("\n"); 
		query.append("                                    FROM ADD_DAY Y   --> SQL TUNNING" ).append("\n"); 
		query.append("                                        ,BASIC_WEEK X                                           " ).append("\n"); 
		query.append("                                        ,VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                                        ,REPOIN_VVD Z                                                                                                                           " ).append("\n"); 
		query.append("                                    WHERE A.VPS_PORT_CD(+) = Y.LOC_CD " ).append("\n"); 
		query.append("                                    AND   X.ROW_SEQ        = @[head_week] -- 0주차" ).append("\n"); 
		query.append("                                    AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                               SELECT /*+ NO_UNNEST */ A.LOC_CD --> SQL TUNNING" ).append("\n"); 
		query.append("                                                               FROM MDM_LOCATION A" ).append("\n"); 
		query.append("                                                                   ,ADD_DAY_SCC C " ).append("\n"); 
		query.append("                                                               WHERE A.SCC_CD = C.SCC_CD       " ).append("\n"); 
		query.append("                                                            )" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("                                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999                              " ).append("\n"); 
		query.append("                                    AND   A.CLPT_IND_SEQ = '1'	 " ).append("\n"); 
		query.append("                                    AND   A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                     " ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                                ) B" ).append("\n"); 
		query.append("                                WHERE A.LODG_DCHG_IND_CD =	'C'" ).append("\n"); 
		query.append("                                AND	  A.FULL_MTY_CD	     =	'E'" ).append("\n"); 
		query.append("                                AND	  A.CRR_CD		     =	'SML'" ).append("\n"); 
		query.append("                                AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                                GROUP BY B.WEEK" ).append("\n"); 
		query.append("                                        ,A.VSL_CD" ).append("\n"); 
		query.append("                                        ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                        ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                        ,B.SLAN_CD" ).append("\n"); 
		query.append("                                        ,A.POD_CD" ).append("\n"); 
		query.append("                                        ,B.YD_CD" ).append("\n"); 
		query.append("                                        ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                                        ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                " ).append("\n"); 
		query.append("                                -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                                SELECT /*+ NO_MERGE(Z) ORDERED */ Z.WEEK  --> SQL TUNNING" ).append("\n"); 
		query.append("                                      ,Z.VSL_CD" ).append("\n"); 
		query.append("                                      ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                                      ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                                      ,Z.SLAN_CD" ).append("\n"); 
		query.append("                                      ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                                      ,Z.YD_CD" ).append("\n"); 
		query.append("                                      ,Z.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                                      ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                                      ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                                      ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(P.D2_QTY,0) " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(P.D4_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(P.D5_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(P.D7_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(P.R2_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(P.R5_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(P.R9_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(P.O2_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(P.O4_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(P.S2_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(P.S4_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(P.F2_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(P.F4_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(P.F5_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(P.A2_QTY,0)       " ).append("\n"); 
		query.append("                                            WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(P.A4_QTY,0)       " ).append("\n"); 
		query.append("                                            END CNTR_QTY" ).append("\n"); 
		query.append("                                FROM (" ).append("\n"); 
		query.append("                                        SELECT /*+ ORDERED USE_NL(A) INDEX(A XAK10VSK_VSL_PORT_SKD) */ A.VSL_CD  --> SQL TUNNING" ).append("\n"); 
		query.append("                                              ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                              ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                              ,A.SLAN_CD" ).append("\n"); 
		query.append("                                              ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                                              ,A.YD_CD" ).append("\n"); 
		query.append("                                              ,A.VPS_ETB_DT" ).append("\n"); 
		query.append("                                              ,X.WEEK" ).append("\n"); 
		query.append("                                        FROM ADD_DAY Y" ).append("\n"); 
		query.append("                                            ,BASIC_WEEK X " ).append("\n"); 
		query.append("                                            ,VSK_VSL_PORT_SKD A " ).append("\n"); 
		query.append("                                            ,REPOIN_VVD Z     " ).append("\n"); 
		query.append("                                        WHERE A.VPS_PORT_CD(+)    = Y.LOC_CD  " ).append("\n"); 
		query.append("                                        AND   X.ROW_SEQ           = @[head_week] -- 0주차                                                                                                                                     " ).append("\n"); 
		query.append("                                        AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                                   SELECT /*+ NO_UNNEST */ A.LOC_CD " ).append("\n"); 
		query.append("                                                                   FROM MDM_LOCATION A" ).append("\n"); 
		query.append("                                                                       ,ADD_DAY_SCC C " ).append("\n"); 
		query.append("                                                                   WHERE A.SCC_CD = C.SCC_CD       " ).append("\n"); 
		query.append("                                                               )   " ).append("\n"); 
		query.append("                                        AND	  A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS  AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999      " ).append("\n"); 
		query.append("                                        AND   A.CLPT_IND_SEQ      = '1'	                                               " ).append("\n"); 
		query.append("                                        AND   A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                                        AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                                        AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                 " ).append("\n"); 
		query.append(" 		                " ).append("\n"); 
		query.append("                                    ) Z                                     " ).append("\n"); 
		query.append("                                    ,EQR_MTY_COD_PORT P " ).append("\n"); 
		query.append("                                    ,EQR_MTY_COD_VVD  V                       " ).append("\n"); 
		query.append("                                    ,COM_INTG_CD_DTL B " ).append("\n"); 
		query.append("                                                                                                 " ).append("\n"); 
		query.append("                                WHERE Z.VSL_CD          = P.VSL_CD" ).append("\n"); 
		query.append("                                AND   Z.SKD_VOY_NO      = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND   Z.SKD_DIR_CD      = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND   Z.VPS_PORT_CD     = P.PORT_CD                                                             " ).append("\n"); 
		query.append("                                AND	  P.VSL_CD			= V.VSL_CD" ).append("\n"); 
		query.append("                                AND	  P.SKD_VOY_NO		= V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND	  P.SKD_DIR_CD		= V.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND	  P.COD_CFM_DIV_CD	= V.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                                AND	  'D' = P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                                AND   B.INTG_CD_ID      = 'CD00830'  " ).append("\n"); 
		query.append("                                                             " ).append("\n"); 
		query.append("                            ) A," ).append("\n"); 
		query.append("                            (" ).append("\n"); 
		query.append("                                SELECT VSL_CD" ).append("\n"); 
		query.append("                                      ,SKD_VOY_NO" ).append("\n"); 
		query.append("                                      ,SKD_DIR_CD" ).append("\n"); 
		query.append("                                      ,VPS_PORT_CD" ).append("\n"); 
		query.append("                                      ,DIV" ).append("\n"); 
		query.append("                                      ,WEEK" ).append("\n"); 
		query.append("                                FROM " ).append("\n"); 
		query.append("                                (    " ).append("\n"); 
		query.append("                                    -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                                    SELECT /*+ ORDERED USE_NL(B) INDEX(B XAK10VSK_VSL_PORT_SKD) */" ).append("\n"); 
		query.append("                                           ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                                          ,B.VSL_CD" ).append("\n"); 
		query.append("                                          ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                          ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                          ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                                          ,NVL(A.COD_CFM_STS_CD,'I') DIV" ).append("\n"); 
		query.append("                                          ,X.WEEK" ).append("\n"); 
		query.append("                                    FROM ADD_DAY Y" ).append("\n"); 
		query.append("                                        ,BASIC_WEEK X" ).append("\n"); 
		query.append("                                        ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                                        ,EQR_MTY_COD_VVD A                                                                              " ).append("\n"); 
		query.append("                            		WHERE B.VSL_CD        = A.VSL_CD(+)" ).append("\n"); 
		query.append("                            		AND   B.SKD_VOY_NO    = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                            		AND   B.SKD_DIR_CD    = A.SKD_DIR_CD(+)  " ).append("\n"); 
		query.append("                            		AND   X.ROW_SEQ       = @[head_week] -- 0주차   " ).append("\n"); 
		query.append("                            		AND   B.VPS_PORT_CD(+)= Y.LOC_CD                              " ).append("\n"); 
		query.append("                            		AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                           		                               	  SELECT /*+ NO_UNNEST */ A.LOC_CD " ).append("\n"); 
		query.append("                            		                              FROM MDM_LOCATION A" ).append("\n"); 
		query.append("                           		                                   ,ADD_DAY_SCC C " ).append("\n"); 
		query.append("                            		                              WHERE A.SCC_CD = C.SCC_CD       " ).append("\n"); 
		query.append("                                                  			)" ).append("\n"); 
		query.append("                                                                                                                                            " ).append("\n"); 
		query.append("                            		AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                            		AND   B.CLPT_IND_SEQ = '1'                                                         " ).append("\n"); 
		query.append("                            		AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                  " ).append("\n"); 
		query.append("                                ) " ).append("\n"); 
		query.append("                                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("                            ) B" ).append("\n"); 
		query.append("                            WHERE A.WEEK       = B.WEEK" ).append("\n"); 
		query.append("                            AND   A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                            AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                            AND   A.DIV        = B.DIV" ).append("\n"); 
		query.append("                            " ).append("\n"); 
		query.append("                            GROUP BY A.WEEK" ).append("\n"); 
		query.append("                                    ,A.VSL_CD" ).append("\n"); 
		query.append("                                    ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                    ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                    ,A.SLAN_CD" ).append("\n"); 
		query.append("                                    ,A.YD_CD          " ).append("\n"); 
		query.append("                                    ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("				        ) B --COD SIMULATION 종료" ).append("\n"); 
		query.append("                        WHERE  A.VSL_CD      (+) = B.VSL_CD" ).append("\n"); 
		query.append("                        AND    A.SKD_VOY_NO  (+) = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND    A.SKD_DIR_CD  (+) = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND    A.VSL_LANE_CD (+) = B.SLAN_CD" ).append("\n"); 
		query.append("                        AND    A.YD_CD       (+) = B.YD_CD" ).append("\n"); 
		query.append("				        AND    A.CNTR_TPSZ_CD(+) = B.CNTR_TPSZ_CD	                " ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        GROUP BY B.WEEK" ).append("\n"); 
		query.append("                                ,B.VSL_CD" ).append("\n"); 
		query.append("                                ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                ,B.SLAN_CD" ).append("\n"); 
		query.append("                                ,B.YD_CD  " ).append("\n"); 
		query.append("                                ,B.CNTR_TPSZ_CD " ).append("\n"); 
		query.append("				    ) A" ).append("\n"); 
		query.append("                    ,(" ).append("\n"); 
		query.append("                        SELECT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD, C.YD_CD" ).append("\n"); 
		query.append("                        FROM MDM_EQ_ORZ_CHT A" ).append("\n"); 
		query.append("                            ,MDM_LOCATION B" ).append("\n"); 
		query.append("                            ,MDM_YARD C" ).append("\n"); 
		query.append("                        WHERE A.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("                        AND   B.LOC_CD = C.LOC_CD  " ).append("\n"); 
		query.append("                    ) C" ).append("\n"); 
		query.append("                    WHERE A.YD_CD(+)  = C.YD_CD" ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("                    GROUP BY A.WEEK " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                         #if( ${present_flag} == 'L' )" ).append("\n"); 
		query.append("                            ,C.LCC_CD " ).append("\n"); 
		query.append("                         #elseif( ${present_flag} == 'E')" ).append("\n"); 
		query.append("                            ,C.ECC_CD " ).append("\n"); 
		query.append("                         #else    --SCC" ).append("\n"); 
		query.append("                            ,C.SCC_CD                             " ).append("\n"); 
		query.append("                         #end  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                            ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                ) A  -- PLUS OTHER + COD SIMULATION(-동일지역 VD)" ).append("\n"); 
		query.append("                GROUP BY A.WEEK" ).append("\n"); 
		query.append("                        ,A.LOC_CD                                          " ).append("\n"); 
		query.append("                        ,A.CNTR_TPSZ_CD " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#end                                " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        --    )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        --WHERE DP_SEQ = 1 -- 유저수정 데이터를 우선으로 추출" ).append("\n"); 
		query.append("        GROUP BY WEEK" ).append("\n"); 
		query.append("                ,LOC_CD        " ).append("\n"); 
		query.append("                ,LOC_GRP_CD" ).append("\n"); 
		query.append("                ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                --,TMP_SAV_FLG" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- LT/ST/OW ------------------------------------------------------------------" ).append("\n"); 
		query.append("        -- LT/ST/OW 전체데이터(-1,0,1,2,3,4)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("              ,A.LOC_CD" ).append("\n"); 
		query.append("              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("              ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,A.CNTR_QTY" ).append("\n"); 
		query.append("              ,A.TMP_SAV_FLG         " ).append("\n"); 
		query.append("        FROM EQR_MTY_WKY_SIM A" ).append("\n"); 
		query.append("            ,DUMMY_LOCATION B" ).append("\n"); 
		query.append("        WHERE A.FCAST_YRWK BETWEEN (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) AND (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=6) -- -1주차~+4주차" ).append("\n"); 
		query.append("        AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("        AND   A.WKY_SIM_TP_CD = 'OT' -- LT/ST/OW" ).append("\n"); 
		query.append("        AND   A.LOC_CD        = B.LOC_CD" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- MG FORECAST ------------------------------------------------------------------" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT WEEK" ).append("\n"); 
		query.append("              ,LOC_CD" ).append("\n"); 
		query.append("              ,LOC_GRP_CD" ).append("\n"); 
		query.append("              ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,NVL(SUM(CNTR_QTY),0) CNTR_QTY" ).append("\n"); 
		query.append("              ,TMP_SAV_FLG" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT ROW_NUMBER() OVER (PARTITION BY WEEK, LOC_CD, CNTR_TPSZ_CD ORDER BY TMP_SAV_FLG DESC) DP_SEQ" ).append("\n"); 
		query.append("                  ,WEEK" ).append("\n"); 
		query.append("                  ,LOC_CD" ).append("\n"); 
		query.append("                  ,LOC_GRP_CD" ).append("\n"); 
		query.append("                  ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                  ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                  ,CNTR_QTY" ).append("\n"); 
		query.append("                  ,TMP_SAV_FLG" ).append("\n"); 
		query.append("            FROM" ).append("\n"); 
		query.append("            (      " ).append("\n"); 
		query.append("                -- -1주차~+4주차 수동입력" ).append("\n"); 
		query.append("                SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD" ).append("\n"); 
		query.append("                      ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_QTY" ).append("\n"); 
		query.append("                      ,A.TMP_SAV_FLG" ).append("\n"); 
		query.append("                FROM EQR_MTY_WKY_SIM A " ).append("\n"); 
		query.append("                    ,DUMMY_LOCATION B   " ).append("\n"); 
		query.append("                WHERE A.FCAST_YRWK BETWEEN (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) AND (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=6) -- -1주차~+4주차      " ).append("\n"); 
		query.append("                AND   A.LOC_GRP_CD = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                AND   A.WKY_SIM_TP_CD = 'IF' -- MG FORECAST" ).append("\n"); 
		query.append("                AND   A.LOC_CD        = B.LOC_CD" ).append("\n"); 
		query.append("                --AND   A.TMP_SAV_FLG   = 'Y'" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("			#if(${head_week} == 1)        -- -1주차 는 조회대상 제거" ).append("\n"); 
		query.append("                -- -1주차 는 조회대상 제거" ).append("\n"); 
		query.append("            #elseif( ${head_week} == 2 )  -- Current Week(0주차) 일때 사용" ).append("\n"); 
		query.append("                -- 0주차  BALANCE REPORT 데이터" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD" ).append("\n"); 
		query.append("                      ,A.LOC_GRP_CD " ).append("\n"); 
		query.append("                      ,'IF' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                      ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            END CNTR_QTY" ).append("\n"); 
		query.append("                      ,'N' TMP_SAV_FLG      " ).append("\n"); 
		query.append("                FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("                    ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                    ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("                AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                AND   A.MTY_BAL_TP_CD = '1'             --IF FORECAST" ).append("\n"); 
		query.append("                AND   A.LOC_CD        = C.LOC_CD        " ).append("\n"); 
		query.append("                AND   A.INP_YRWK   = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 1) -- -1주차" ).append("\n"); 
		query.append("                AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                        ,A.LOC_CD" ).append("\n"); 
		query.append("                        ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                        ,B.INTG_CD_VAL_CTNT         " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#else  -- +1/+2/+3/+4 주차 일때 사용 (headweek = 3/4/5/6)" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                -- +1주차~+4주차 BALANCE REPORT 데이터" ).append("\n"); 
		query.append("                SELECT WEEK" ).append("\n"); 
		query.append("                      ,LOC_CD" ).append("\n"); 
		query.append("                      ,LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,'IF' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,CNTR_QTY" ).append("\n"); 
		query.append("                      ,TMP_SAV_FLG " ).append("\n"); 
		query.append("                FROM" ).append("\n"); 
		query.append("                (            " ).append("\n"); 
		query.append("                    SELECT WEEK" ).append("\n"); 
		query.append("                          ,LOC_CD" ).append("\n"); 
		query.append("                          ,LOC_GRP_CD" ).append("\n"); 
		query.append("                          ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          ,DECODE(SUM(CNTR_QTY_1), NULL, SUM(CNTR_QTY_2), 0, SUM(CNTR_QTY_2), SUM(CNTR_QTY_1)) CNTR_QTY" ).append("\n"); 
		query.append("                          ,DECODE(SUM(CNTR_QTY_1), NULL, 'N', 0, 'N', 'X') TMP_SAV_FLG -- N:은 아무표시 없음, X : BOLD 로 표시함" ).append("\n"); 
		query.append("                    FROM   " ).append("\n"); 
		query.append("                    (      " ).append("\n"); 
		query.append("                        -- REPO PLAN ID 의 주차 기준" ).append("\n"); 
		query.append("                        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                              ,A.LOC_CD" ).append("\n"); 
		query.append("                              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                              ,0 CNTR_QTY_1                        " ).append("\n"); 
		query.append("                              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)   " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O5' THEN NVL(SUM(O5_FCAST_QTY),0)    " ).append("\n"); 
		query.append("                                    END CNTR_QTY_2          " ).append("\n"); 
		query.append("                        FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("                            ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                            ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                        WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("                        AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                        AND   A.MTY_BAL_TP_CD = '1' --IF FORECAST" ).append("\n"); 
		query.append("                        AND   A.LOC_CD        = C.LOC_CD      " ).append("\n"); 
		query.append("                        AND   A.INP_YRWK    = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 1)   -- WEEK주차" ).append("\n"); 
		query.append("                        AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                        GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                                ,A.LOC_CD" ).append("\n"); 
		query.append("                                ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                                ,B.INTG_CD_VAL_CTNT     " ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        -- REPO PLAN ID +1주차의 데이터 " ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                              ,A.LOC_CD" ).append("\n"); 
		query.append("                              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)   " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O5' THEN NVL(SUM(O5_FCAST_QTY),0)    " ).append("\n"); 
		query.append("                               END CNTR_QTY_1" ).append("\n"); 
		query.append("                              ,0 CNTR_QTY_2   " ).append("\n"); 
		query.append("                        FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("                            ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                            ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                        WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("                        AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                        AND   A.MTY_BAL_TP_CD = '1' --IF FORECAST" ).append("\n"); 
		query.append("                        AND   A.LOC_CD        = C.LOC_CD     " ).append("\n"); 
		query.append("                        AND   A.INP_YRWK    = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 2) -- WEEK + 1" ).append("\n"); 
		query.append("                        AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                        GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                                ,A.LOC_CD" ).append("\n"); 
		query.append("                                ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                                ,B.INTG_CD_VAL_CTNT                            " ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("                    GROUP BY WEEK" ).append("\n"); 
		query.append("                            ,LOC_CD" ).append("\n"); 
		query.append("                            ,LOC_GRP_CD" ).append("\n"); 
		query.append("                            ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("                WHERE CNTR_QTY > 0                " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    		#end" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        WHERE DP_SEQ = 1 -- 유저수정 데이터를 우선으로 추출" ).append("\n"); 
		query.append("        GROUP BY WEEK" ).append("\n"); 
		query.append("                ,LOC_CD        " ).append("\n"); 
		query.append("                ,LOC_GRP_CD" ).append("\n"); 
		query.append("                ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,TMP_SAV_FLG" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- OP FORECAST ------------------------------------------------------------------" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT WEEK" ).append("\n"); 
		query.append("              ,LOC_CD" ).append("\n"); 
		query.append("              ,LOC_GRP_CD" ).append("\n"); 
		query.append("              ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,NVL(SUM(CNTR_QTY),0) CNTR_QTY" ).append("\n"); 
		query.append("              ,TMP_SAV_FLG" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT ROW_NUMBER() OVER (PARTITION BY WEEK, LOC_CD, CNTR_TPSZ_CD ORDER BY TMP_SAV_FLG DESC) DP_SEQ" ).append("\n"); 
		query.append("                  ,WEEK" ).append("\n"); 
		query.append("                  ,LOC_CD" ).append("\n"); 
		query.append("                  ,LOC_GRP_CD" ).append("\n"); 
		query.append("                  ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                  ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                  ,CNTR_QTY" ).append("\n"); 
		query.append("                  ,TMP_SAV_FLG" ).append("\n"); 
		query.append("            FROM" ).append("\n"); 
		query.append("            (      " ).append("\n"); 
		query.append("                -- -1주차~+4주차 수동입력" ).append("\n"); 
		query.append("                SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD" ).append("\n"); 
		query.append("                      ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_QTY" ).append("\n"); 
		query.append("                      ,A.TMP_SAV_FLG" ).append("\n"); 
		query.append("                FROM EQR_MTY_WKY_SIM A" ).append("\n"); 
		query.append("                    ,DUMMY_LOCATION B   " ).append("\n"); 
		query.append("                WHERE A.FCAST_YRWK BETWEEN (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) AND (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=6) -- -1주차~+4주차      " ).append("\n"); 
		query.append("                AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                AND   A.WKY_SIM_TP_CD = 'OF' -- OP FORECAST" ).append("\n"); 
		query.append("                AND   A.LOC_CD        = B.LOC_CD" ).append("\n"); 
		query.append("                --AND   A.TMP_SAV_FLG   = 'Y'" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if(${head_week} == 1)        -- -1주차 는 조회대상 제거" ).append("\n"); 
		query.append("                -- -1주차 는 조회대상 제거" ).append("\n"); 
		query.append("            #elseif( ${head_week} == 2 )  -- Current Week(0주차) 일때 사용" ).append("\n"); 
		query.append("                -- 0주차  BALANCE REPORT 데이터" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD" ).append("\n"); 
		query.append("                      ,A.LOC_GRP_CD " ).append("\n"); 
		query.append("                      ,'OF' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                      ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                            END CNTR_QTY" ).append("\n"); 
		query.append("                      ,'N' TMP_SAV_FLG      " ).append("\n"); 
		query.append("                FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("                    ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                    ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("                AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                AND   A.MTY_BAL_TP_CD = '3'             --OUT FORECAST" ).append("\n"); 
		query.append("                AND   A.LOC_CD        = C.LOC_CD        " ).append("\n"); 
		query.append("                AND   A.INP_YRWK   = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 1) -- -1주차" ).append("\n"); 
		query.append("                AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                        ,A.LOC_CD" ).append("\n"); 
		query.append("                        ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                        ,B.INTG_CD_VAL_CTNT         " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#else  -- +1/+2/+3/+4 주차 일때 사용 (headweek = 3/4/5/6)" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                -- +1주차~+4주차 BALANCE REPORT 데이터" ).append("\n"); 
		query.append("                SELECT WEEK" ).append("\n"); 
		query.append("                      ,LOC_CD" ).append("\n"); 
		query.append("                      ,LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,'OF' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,CNTR_QTY" ).append("\n"); 
		query.append("                      ,TMP_SAV_FLG " ).append("\n"); 
		query.append("                FROM" ).append("\n"); 
		query.append("                (            " ).append("\n"); 
		query.append("                    SELECT WEEK" ).append("\n"); 
		query.append("                          ,LOC_CD" ).append("\n"); 
		query.append("                          ,LOC_GRP_CD" ).append("\n"); 
		query.append("                          ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          ,DECODE(SUM(CNTR_QTY_1), NULL, SUM(CNTR_QTY_2), 0, SUM(CNTR_QTY_2), SUM(CNTR_QTY_1)) CNTR_QTY" ).append("\n"); 
		query.append("                          ,DECODE(SUM(CNTR_QTY_1), NULL, 'N', 0, 'N', 'X') TMP_SAV_FLG -- N:은 아무표시 없음, X : BOLD 로 표시함" ).append("\n"); 
		query.append("                    FROM   " ).append("\n"); 
		query.append("                    (      " ).append("\n"); 
		query.append("                        -- REPO PLAN ID 의 주차 기준" ).append("\n"); 
		query.append("                        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                              ,A.LOC_CD" ).append("\n"); 
		query.append("                              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                              ,0 CNTR_QTY_1                        " ).append("\n"); 
		query.append("                              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)   " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O5' THEN NVL(SUM(O5_FCAST_QTY),0)    " ).append("\n"); 
		query.append("                                    END CNTR_QTY_2          " ).append("\n"); 
		query.append("                        FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("                            ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                            ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                        WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("                        AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                        AND   A.MTY_BAL_TP_CD = '3' --OUT FORECAST" ).append("\n"); 
		query.append("                        AND   A.LOC_CD        = C.LOC_CD      " ).append("\n"); 
		query.append("                        AND   A.INP_YRWK    = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 1)   -- WEEK주차" ).append("\n"); 
		query.append("                        AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                        GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                                ,A.LOC_CD" ).append("\n"); 
		query.append("                                ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                                ,B.INTG_CD_VAL_CTNT     " ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        -- REPO PLAN ID +1주차의 데이터 " ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                              ,A.LOC_CD" ).append("\n"); 
		query.append("                              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)   " ).append("\n"); 
		query.append("                                    WHEN B.INTG_CD_VAL_CTNT='O5' THEN NVL(SUM(O5_FCAST_QTY),0)    " ).append("\n"); 
		query.append("                               END CNTR_QTY_1" ).append("\n"); 
		query.append("                              ,0 CNTR_QTY_2   " ).append("\n"); 
		query.append("                        FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("                            ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                            ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                        WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("                        AND   A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                        AND   A.MTY_BAL_TP_CD = '3'             --OUT FORECAST" ).append("\n"); 
		query.append("                        AND   A.LOC_CD        = C.LOC_CD     " ).append("\n"); 
		query.append("                        AND   A.INP_YRWK    = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 2) -- WEEK + 1" ).append("\n"); 
		query.append("                        AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                        GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                                ,A.LOC_CD" ).append("\n"); 
		query.append("                                ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                                ,B.INTG_CD_VAL_CTNT                            " ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("                    GROUP BY WEEK" ).append("\n"); 
		query.append("                            ,LOC_CD" ).append("\n"); 
		query.append("                            ,LOC_GRP_CD" ).append("\n"); 
		query.append("                            ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("                WHERE CNTR_QTY > 0                " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    		#end" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        WHERE DP_SEQ = 1 -- 유저수정 데이터를 우선으로 추출" ).append("\n"); 
		query.append("        GROUP BY WEEK" ).append("\n"); 
		query.append("                ,LOC_CD        " ).append("\n"); 
		query.append("                ,LOC_GRP_CD" ).append("\n"); 
		query.append("                ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,TMP_SAV_FLG" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- REPO OUT ------------------------------------------------------------------" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT WEEK" ).append("\n"); 
		query.append("              ,LOC_CD" ).append("\n"); 
		query.append("              ,LOC_GRP_CD" ).append("\n"); 
		query.append("              ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,NVL(SUM(CNTR_QTY),0) CNTR_QTY" ).append("\n"); 
		query.append("              ,TMP_SAV_FLG" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT ROW_NUMBER() OVER (PARTITION BY WEEK, LOC_CD, CNTR_TPSZ_CD ORDER BY TMP_SAV_FLG DESC) DP_SEQ" ).append("\n"); 
		query.append("                  ,WEEK" ).append("\n"); 
		query.append("                  ,LOC_CD" ).append("\n"); 
		query.append("                  ,LOC_GRP_CD" ).append("\n"); 
		query.append("                  ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                  ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                  ,CNTR_QTY" ).append("\n"); 
		query.append("                  ,TMP_SAV_FLG" ).append("\n"); 
		query.append("            FROM" ).append("\n"); 
		query.append("            (      " ).append("\n"); 
		query.append("                -- -1주차~+4주차 수동입력" ).append("\n"); 
		query.append("                SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                      ,A.LOC_CD" ).append("\n"); 
		query.append("                      ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,A.CNTR_QTY" ).append("\n"); 
		query.append("                      ,A.TMP_SAV_FLG" ).append("\n"); 
		query.append("                FROM EQR_MTY_WKY_SIM A" ).append("\n"); 
		query.append("                    ,DUMMY_LOCATION B   " ).append("\n"); 
		query.append("                WHERE A.FCAST_YRWK BETWEEN (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) AND (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=6) -- -1주차~+4주차      " ).append("\n"); 
		query.append("                AND   A.LOC_GRP_CD    = @[present_flag]  -- L/E/S" ).append("\n"); 
		query.append("                AND   A.WKY_SIM_TP_CD = 'RO'      -- REPO OUT" ).append("\n"); 
		query.append("                AND   A.LOC_CD        = B.LOC_CD" ).append("\n"); 
		query.append("                --AND   A.TMP_SAV_FLG   = 'Y'" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("				SELECT WEEK" ).append("\n"); 
		query.append("                      ,LOC_CD" ).append("\n"); 
		query.append("                      ,LOC_GRP_CD" ).append("\n"); 
		query.append("                      ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                      ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,SUM(CNTR_QTY) AS CNTR_QTY" ).append("\n"); 
		query.append("                      ,TMP_SAV_FLG" ).append("\n"); 
		query.append("				FROM" ).append("\n"); 
		query.append("                (" ).append("\n"); 
		query.append("                    -- REPO OUT 포함 (MINUS OTHER )" ).append("\n"); 
		query.append("                    SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                          ,A.LOC_CD" ).append("\n"); 
		query.append("                          ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                          ,'RO' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("                          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       " ).append("\n"); 
		query.append("                                END CNTR_QTY" ).append("\n"); 
		query.append("                          ,'N' TMP_SAV_FLG" ).append("\n"); 
		query.append("                    FROM EQR_MTY_BAL_RPT_OTR A" ).append("\n"); 
		query.append("                        ,COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("                        ,DUMMY_LOCATION C   " ).append("\n"); 
		query.append("                    WHERE B.INTG_CD_ID        = 'CD00830'         " ).append("\n"); 
		query.append("                    AND   A.INP_YRWK          = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1WEEK (HARD CODING)" ).append("\n"); 
		query.append("                    AND   A.LOC_CD            = C.LOC_CD" ).append("\n"); 
		query.append("                    AND   A.LOC_GRP_CD        = @[present_flag]" ).append("\n"); 
		query.append("                    AND   A.MTY_BAL_OTR_TP_CD = '4' --MINUS OTHER (REPO OUT 에 포함)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("					UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                	-- 0주차~+4주차 REPO OUT 데이터" ).append("\n"); 
		query.append("                	SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("                	      ,A.LOC_CD" ).append("\n"); 
		query.append("                	      ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                	      ,'RO' WKY_SIM_TP_CD" ).append("\n"); 
		query.append("               	          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD " ).append("\n"); 
		query.append("               	          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(A.D2_FCAST_QTY),0)" ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(A.D4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("               	                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(A.D5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(A.D7_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(A.R2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(A.R5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(A.R9_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(A.O2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(A.O4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(A.S2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(A.S4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(A.F2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(A.F4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(A.F5_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A.A2_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A.A4_FCAST_QTY),0)       " ).append("\n"); 
		query.append("                                END CNTR_QTY" ).append("\n"); 
		query.append("                          ,'N' TMP_SAV_FLG      " ).append("\n"); 
		query.append("                    FROM EQR_MTY_BAL_RPT_REPO_OUT A" ).append("\n"); 
		query.append("                        ,COM_INTG_CD_DTL B   " ).append("\n"); 
		query.append("                        ,DUMMY_LOCATION C      " ).append("\n"); 
		query.append("                    WHERE A.LOC_GRP_CD    = @[present_flag] --L/E/S" ).append("\n"); 
		query.append("                    AND   A.LOC_CD        = C.LOC_CD" ).append("\n"); 
		query.append("                    AND   A.INP_YRWK   = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ = 1)  -- 1주차 " ).append("\n"); 
		query.append("                    AND   B.INTG_CD_ID    = 'CD00830'" ).append("\n"); 
		query.append("                    GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("                            ,A.LOC_CD" ).append("\n"); 
		query.append("                            ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("                            ,B.INTG_CD_VAL_CTNT   " ).append("\n"); 
		query.append("				)" ).append("\n"); 
		query.append("                GROUP BY WEEK" ).append("\n"); 
		query.append("                        ,LOC_CD" ).append("\n"); 
		query.append("                        ,LOC_GRP_CD" ).append("\n"); 
		query.append("                        ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                        ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                        ,TMP_SAV_FLG                                " ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        WHERE DP_SEQ = 1 -- 유저수정 데이터를 우선으로 추출" ).append("\n"); 
		query.append("        GROUP BY WEEK" ).append("\n"); 
		query.append("                ,LOC_CD        " ).append("\n"); 
		query.append("                ,LOC_GRP_CD" ).append("\n"); 
		query.append("                ,WKY_SIM_TP_CD" ).append("\n"); 
		query.append("                ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,TMP_SAV_FLG" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- IC ------------------------------------------------------------------" ).append("\n"); 
		query.append("        -- IC (-1주차)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT A.FCAST_YRWK WEEK" ).append("\n"); 
		query.append("              ,A.LOC_CD" ).append("\n"); 
		query.append("              ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("              ,A.WKY_SIM_TP_CD" ).append("\n"); 
		query.append("              ,A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("              ,A.CNTR_QTY" ).append("\n"); 
		query.append("              ,'N' TMP_SAV_FLG                     " ).append("\n"); 
		query.append("        FROM EQR_MTY_WKY_SIM A" ).append("\n"); 
		query.append("            ,DUMMY_LOCATION B" ).append("\n"); 
		query.append("        WHERE A.FCAST_YRWK    = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1주차      " ).append("\n"); 
		query.append("        AND   A.LOC_GRP_CD    = @[present_flag] " ).append("\n"); 
		query.append("        AND   A.WKY_SIM_TP_CD = 'IC' -- IC" ).append("\n"); 
		query.append("        AND   A.LOC_CD        = B.LOC_CD   " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ) A," ).append("\n"); 
		query.append("    GRID_HEAD B" ).append("\n"); 
		query.append("    WHERE A.LOC_CD(+)        = B.LOC_CD" ).append("\n"); 
		query.append("    AND   A.WKY_SIM_TP_CD(+) = B.CODE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("-- RCC : ALL일때 표현 (RCC : ALL)" ).append("\n"); 
		query.append("#if ( ${condition_value} == '' && ${present_flag} == 'L')  " ).append("\n"); 
		query.append("GROUP BY LOC_CD -- LOC CD 별 전체합" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("GROUP BY ROLLUP(LOC_CD) -- LOC CD 별 전체합" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("        ,LOC_GRP_CD" ).append("\n"); 
		query.append("        ,CODE" ).append("\n"); 
		query.append("        ,NAME" ).append("\n"); 
		query.append("        ,SORT" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("-- RCC : ALL일때 표현 (RCC : ALL)" ).append("\n"); 
		query.append("#if ( ${condition_value} == '' && ${present_flag} == 'L')        " ).append("\n"); 
		query.append(") A" ).append("\n"); 
		query.append("GROUP BY ROLLUP(A.RCC_CD) -- RCC CD 별 전체합" ).append("\n"); 
		query.append("        ,A.LOC_GRP_CD" ).append("\n"); 
		query.append("        ,A.CODE" ).append("\n"); 
		query.append("        ,A.NAME" ).append("\n"); 
		query.append("        ,A.SORT" ).append("\n"); 
		query.append("        ,A.WEEK" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("ORDER BY 1" ).append("\n"); 
		query.append("        ,SORT" ).append("\n"); 
		query.append(")" ).append("\n"); 

	}
}