/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : MTYRepositionPerformanceAnalysisDBDAOMTYMonthlyWeeklyTrendSetVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.05.18
*@LastModifier : 
*@LastVersion : 1.0
* 2016.05.18 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.cim.cntroperationperformancemgt.mtyrepositionperformanceanalysis.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MTYRepositionPerformanceAnalysisDBDAOMTYMonthlyWeeklyTrendSetVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 2012.02.22 신자영 [CHM-201216310-01] mvmt pfmc by cy 기능 보완
	  * 2012.05.23 신자영 [CHM-201217983-01] MVMT PFMC BY CY 기능에 검색 가능 MVMT 추가
	  * 2013.02.08 이영두 [CHM-201322887-01] MG 조건 NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 조건 삭제
	  * 2013.07.30 이영두 [CHM-201325984] MVMT PFMC에 MO(MTY REPO OUT) 추가
	  * 2014.04.30 김창영 [CHM-201429600] Movement performance by CY Tab별 조회조건 추가
	  * </pre>
	  */
	public MTYRepositionPerformanceAnalysisDBDAOMTYMonthlyWeeklyTrendSetVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("location",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("from",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mtymvmt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd_nm",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.cim.cntroperationperformancemgt.mtyrepositionperformanceanalysis.integration").append("\n"); 
		query.append("FileName : MTYRepositionPerformanceAnalysisDBDAOMTYMonthlyWeeklyTrendSetVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${mtymvmt} == 'MTIDMG' || ${mtymvmt} == 'MTVDVD-MT' || ${mtymvmt} == 'MTOPOP-MT' || ${mtymvmt} == 'VLMTMT-VL'" ).append("\n"); 
		query.append(" || ${mtymvmt} == 'MTOCOC-MT' || ${mtymvmt} == 'OCIDID-OC' || ${mtymvmt} == 'MTIDID-MT' ||${mtymvmt} == 'OPMTMT-OP'||${mtymvmt} == 'TNMTMT-TN'||" ).append("\n"); 
		query.append("${mtymvmt} == 'ENMTMT-EN'||${mtymvmt} == 'IDICIC-ID'||${mtymvmt} == 'ENICIC-EN'||${mtymvmt} == 'TNICIC-TN')" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD AS inout," ).append("\n"); 
		query.append("		L.MOV_STS as division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09, " ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			SUBSTR(@[mtymvmt],5)		MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				SUBSTR(@[mtymvmt],5)	MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ		WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = SUBSTR(@[mtymvmt],0,2)" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		SUBSTR(@[mtymvmt],3,2)	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,SUBSTR(@[mtymvmt],5),					" ).append("\n"); 
		query.append("				W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			L.CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			L.MOV_STS," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VDMTVL')" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD AS inout," ).append("\n"); 
		query.append("		L.MOV_STS as division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09, " ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'VD-MT-VL'		        MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'VD-MT-VL'	            MOV_STS," ).append("\n"); 
		query.append("				CNTR_TPSZ_CD," ).append("\n"); 
		query.append("				WK_SEQ," ).append("\n"); 
		query.append("				COUNT(MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("              FROM (SELECT M.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          ,M.CNTR_NO" ).append("\n"); 
		query.append("                          ,W.WK_SEQ" ).append("\n"); 
		query.append("                          ,M.MVMT_STS_CD" ).append("\n"); 
		query.append("                          ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("								   MM.CNMV_YR  " ).append("\n"); 
		query.append("							  FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("						     WHERE MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("							   AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                               AND ROWNUM = 1) PRE_CNMV_YR" ).append("\n"); 
		query.append("                          ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("								   MM.CNMV_SEQ  " ).append("\n"); 
		query.append("							  FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("						     WHERE MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("							   AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                               AND ROWNUM = 1) PRE_CNMV_SEQ" ).append("\n"); 
		query.append("                          ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("								   MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("						      FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("						     WHERE MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("							   AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                               AND ROWNUM = 1) PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("            AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND	'MT'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("                   ) A" ).append("\n"); 
		query.append("                                        WHERE  'VD'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                           MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                      FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                     WHERE MM.CNTR_NO = A.CNTR_NO" ).append("\n"); 
		query.append("                                       AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                           A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1)" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				CNTR_TPSZ_CD,'VD-MT-VL',					" ).append("\n"); 
		query.append("				WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			L.CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			L.MOV_STS," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VDMTTNENMTVL')" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD AS inout," ).append("\n"); 
		query.append("		L.MOV_STS as division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09, " ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'VD-MT-(TN or EN)-MT-VL' MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'VD-MT-(TN or EN)-MT-VL' MOV_STS," ).append("\n"); 
		query.append("				CNTR_TPSZ_CD," ).append("\n"); 
		query.append("				WK_SEQ," ).append("\n"); 
		query.append("				COUNT(MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("              FROM (SELECT *" ).append("\n"); 
		query.append("                      FROM (SELECT AA.*, " ).append("\n"); 
		query.append("                                  (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										    MM.CNMV_YR  " ).append("\n"); 
		query.append("								      FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								     WHERE  MM.CNTR_NO = AA.CNTR_NO  " ).append("\n"); 
		query.append("								       AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								            AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1" ).append("\n"); 
		query.append("                                      ) AAPRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										     MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								        FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								       WHERE  MM.CNTR_NO = AA.CNTR_NO  " ).append("\n"); 
		query.append("								         AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								              AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                         AND ROWNUM = 1" ).append("\n"); 
		query.append("                                      ) AAPRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										     MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								       FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								      WHERE  MM.CNTR_NO = AA.CNTR_NO  " ).append("\n"); 
		query.append("								        AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								             AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                        AND ROWNUM = 1     " ).append("\n"); 
		query.append("								      ) AAPRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                FROM (SELECT A.*,  " ).append("\n"); 
		query.append("                                            (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										            MM.CNMV_YR  " ).append("\n"); 
		query.append("								               FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								              WHERE  MM.CNTR_NO = A.CNTR_NO  " ).append("\n"); 
		query.append("								                AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                     A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                AND ROWNUM = 1" ).append("\n"); 
		query.append("                                              ) APRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                             (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										             MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								                FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								               WHERE  MM.CNTR_NO = A.CNTR_NO  " ).append("\n"); 
		query.append("								                 AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                      A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                 AND ROWNUM = 1" ).append("\n"); 
		query.append("                                              ) APRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                             (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										             MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								               FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								              WHERE  MM.CNTR_NO = A.CNTR_NO  " ).append("\n"); 
		query.append("								                AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                     A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                AND ROWNUM = 1     " ).append("\n"); 
		query.append("								              ) APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                        FROM (SELECT (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                                             MM.CNMV_YR  " ).append("\n"); 
		query.append("								                       FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                      WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								                        AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                             M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                        AND ROWNUM = 1" ).append("\n"); 
		query.append("                                                      ) PRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                                      (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										                      MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								                         FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                        WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								                          AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                               M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                          AND ROWNUM = 1" ).append("\n"); 
		query.append("                                                      ) PRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                                      (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										                      MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								                         FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                        WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								                          AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                               M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                          AND ROWNUM = 1     " ).append("\n"); 
		query.append("								                       ) PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                      ,M.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                                      ,M.CNTR_NO" ).append("\n"); 
		query.append("                                                      ,W.WK_SEQ" ).append("\n"); 
		query.append("                                                      ,M.MVMT_STS_CD" ).append("\n"); 
		query.append("                                                 FROM CTM_MOVEMENT M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					                                  EQR_WK_PRD K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					                                  MST_CONTAINER C," ).append("\n"); 
		query.append("					                                 (" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					                                  SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							                                 PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							                                 ROWNUM WK_SEQ" ).append("\n"); 
		query.append("					                                    FROM EQR_WK_PRD" ).append("\n"); 
		query.append("					                                   WHERE PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					                                     AND PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						                              SELECT DAY_UNIT DAY_UNIT," ).append("\n"); 
		query.append("							                                 ROWNUM WK_SEQ" ).append("\n"); 
		query.append("						                                FROM (SELECT DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									                            FROM EQR_WK_PRD" ).append("\n"); 
		query.append("									                           WHERE PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									                             AND PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									                         ORDER BY PLN_YR||PLN_MON)" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					                                  ) W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			                                    WHERE M.CNMV_EVNT_DT	BETWEEN	(SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							                                                       FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							                                                      WHERE  K.PLN_YR||K.PLN_WK = @[from])	" ).append("\n"); 
		query.append("			                                                                AND	(SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							                                                       FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							                                                      WHERE  K.PLN_YR||K.PLN_WK = @[to]) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			                               WHERE M.CNMV_EVNT_DT BETWEEN TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		                                                            AND TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			                                     AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD') BETWEEN K.WK_ST_DT" ).append("\n"); 
		query.append("			                                                                                AND K.WK_END_DT 	" ).append("\n"); 
		query.append("			                                     AND K.PLN_YR||K.PLN_WK	= W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			                                     AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			                                     AND M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				                                 AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					                                                      '$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					                                                      '') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("                                                 AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("                                                                    '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("                                                                    '')" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				                                 AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				                                 AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				                                 AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							                                   FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							                                  WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							                                    AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							                                    AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						                                     )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			                                     AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			                                     AND M.ORG_YD_CD IN (SELECT /*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								                                            Y.YD_CD" ).append("\n"); 
		query.append("        				                                               FROM MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						                                            MDM_LOCATION L," ).append("\n"); 
		query.append("								                                            MDM_YARD Y" ).append("\n"); 
		query.append("						                                              WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						                                                AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						                                                AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						                                                AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						                                                AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					                                                  ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		                                         AND 'MT' = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														            MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												              FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												             WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												              AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																  M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												              AND ROWNUM = 1)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("                                                 AND M.CNTR_NO = C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("                                                 AND NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	                                             AND NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("                                            ) A" ).append("\n"); 
		query.append("                                      WHERE 1=1" ).append("\n"); 
		query.append("                                        AND ('TN'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                                             MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                                        FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                                       WHERE MM.CNTR_NO = A.CNTR_NO" ).append("\n"); 
		query.append("                                                         AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                                             A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                         AND ROWNUM = 1)" ).append("\n"); 
		query.append("                                               OR" ).append("\n"); 
		query.append("                                              'EN'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                                              MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                                        FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                                       WHERE MM.CNTR_NO = A.CNTR_NO" ).append("\n"); 
		query.append("                                                         AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                                             A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                         AND ROWNUM = 1))" ).append("\n"); 
		query.append("                                      ) AA" ).append("\n"); 
		query.append("                                 WHERE  1=1" ).append("\n"); 
		query.append("                                   AND  'MT'  = (SELECT  /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                                         MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                                   FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                                  WHERE MM.CNTR_NO = AA.CNTR_NO" ).append("\n"); 
		query.append("                                                    AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                                        AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                    AND ROWNUM = 1)" ).append("\n"); 
		query.append("                                ) AAA" ).append("\n"); 
		query.append("                                WHERE  1=1" ).append("\n"); 
		query.append("                                  AND  'VD'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  " ).append("\n"); 
		query.append("                                                       MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                                  FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                                 WHERE MM.CNTR_NO = AAA.CNTR_NO" ).append("\n"); 
		query.append("                                                   AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                                        AAA.AAPRE_CNMV_YR||TO_CHAR(AAA.AAPRE_CNMV_SEQ,'0000')||AAA.AAPRE_CNMV_SPLIT_NO " ).append("\n"); 
		query.append("                                                   AND ROWNUM = 1))" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				CNTR_TPSZ_CD,'VD-MT-(TN or EN)-MT-VL',					" ).append("\n"); 
		query.append("				WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			L.CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			L.MOV_STS," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MP')" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD inout," ).append("\n"); 
		query.append("		L.MOV_STS division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'MP'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("					'MP'					MOV_STS," ).append("\n"); 
		query.append("					M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("					W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("					COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("			PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("			ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("	FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("	WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("	AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("		SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("			   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("		FROM   (          	" ).append("\n"); 
		query.append("					SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("					ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("			   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	)	W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	AND 	M.CNTR_NO = C.CNTR_NO" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("  #end" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      /* ----------------> 2014.05.08 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("      #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("      		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("      					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("      					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("						   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("						   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("								   )" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      /* ----------------> 2014.05.08 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'XX'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		 GROUP BY M.CNTR_TPSZ_CD, 'MP', W.WK_SEQ " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("	SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("			'MP'					MOV_STS," ).append("\n"); 
		query.append("			M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("			W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			COUNT(M.MVMT_STS_CD)	CNT      " ).append("\n"); 
		query.append("	FROM	CTM_MOVEMENT M," ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			EQR_WK_PRD   K," ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			MST_CONTAINER C," ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("			PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("			ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("	FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("	WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("	AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("		SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("			   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("		FROM   (          	" ).append("\n"); 
		query.append("					SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("					ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("			   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	)	W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("		AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("		AND 	M.CNTR_NO = C.CNTR_NO" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("		AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  	AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("		AND M.CNMV_CYC_NO = 1 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  	AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("	  				  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("	  				 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("	  				   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("	  				   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("	  			   )" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("		AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("		AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        			SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("							Y.YD_CD" ).append("\n"); 
		query.append("        			FROM " ).append("\n"); 
		query.append("          					MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          					MDM_LOCATION L," ).append("\n"); 
		query.append("							MDM_YARD Y" ).append("\n"); 
		query.append("					WHERE	Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("					AND		L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("					#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("					#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("					#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("				  ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("    GROUP BY M.CNTR_TPSZ_CD,'MP', W.WK_SEQ )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY 	" ).append("\n"); 
		query.append("			L.CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			L.MOV_STS," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MR')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD inout," ).append("\n"); 
		query.append("		L.MOV_STS division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("					'MR'				MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ			DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					A.WK_SEQ WK_SEQ,	" ).append("\n"); 
		query.append("					NVL(CNT,0)			CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT " ).append("\n"); 
		query.append("								'MR'					MOV_STS," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								W.WK_SEQ WK_SEQ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)		CNT" ).append("\n"); 
		query.append("						FROM	CTM_MOVEMENT	M," ).append("\n"); 
		query.append("								MST_CONTAINER	C," ).append("\n"); 
		query.append("								#if (${period} == 'W')" ).append("\n"); 
		query.append("								EQR_WK_PRD	K," ).append("\n"); 
		query.append("								#end" ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("			PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("			ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("	FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("	WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("	AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("		SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("			   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("		FROM   (          	" ).append("\n"); 
		query.append("					SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("					ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("			   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	)	W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("		AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  	AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("	  				  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("	  				 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("	  				   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("	  				   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("	  			   )" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("			AND		'OK'	=	(   		  " ).append("\n"); 
		query.append("									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("											  DECODE(GG.SCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("											  DECODE(GG.LCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("											  DECODE(GG.ECC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("											  DECODE(MM.ORG_YD_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#end" ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'EN','OK'," ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'TN','OK','NO')))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									--		MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("									FROM    CTM_MOVEMENT	MM," ).append("\n"); 
		query.append("											MDM_LOCATION	LL," ).append("\n"); 
		query.append("											MDM_EQ_ORZ_CHT	GG" ).append("\n"); 
		query.append("									WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("									AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("													M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("									AND		SUBSTR(MM.ORG_YD_CD, 1, 5)	= LL.LOC_CD" ).append("\n"); 
		query.append("									AND		LL.SCC_CD	= GG.SCC_CD" ).append("\n"); 
		query.append("									AND     ROWNUM		= 1" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */	" ).append("\n"); 
		query.append("		AND		M.CNTR_NO	=	C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("        AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	    AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY M.CNTR_TPSZ_CD,'MR', W.WK_SEQ ) A,CIM_TP_SZ_DP_SEQ	S" ).append("\n"); 
		query.append("	WHERE	A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("GROUP BY L.CNTR_TPSZ_CD,L.MOV_STS,L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY L.DSP_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MO')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD inout," ).append("\n"); 
		query.append("		L.MOV_STS division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("					'MO'				MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ			DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					A.WK_SEQ WK_SEQ,	" ).append("\n"); 
		query.append("					NVL(CNT,0)			CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT " ).append("\n"); 
		query.append("								'MO'					MOV_STS," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								W.WK_SEQ WK_SEQ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)		CNT" ).append("\n"); 
		query.append("						FROM	CTM_MOVEMENT	M," ).append("\n"); 
		query.append("							MST_CONTAINER	C," ).append("\n"); 
		query.append("								#if (${period} == 'W')" ).append("\n"); 
		query.append("								EQR_WK_PRD	K," ).append("\n"); 
		query.append("								#end" ).append("\n"); 
		query.append("		(" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("			PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("			ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("	FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("	WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("	AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("		SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("			   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("		FROM   (          	" ).append("\n"); 
		query.append("					SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("					ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("			   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	)	W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("		AND 	M.MVMT_STS_CD IN ('TN', 'EN')" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end " ).append("\n"); 
		query.append("      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("      AND	M.FCNTR_FLG = 'N'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      /* ----------------> 2014.05.08 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("      #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("      		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("      					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("      					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("						   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("						   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("								   )" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      /* ----------------> 2014.05.08 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("			AND		'OK'	=	(   		  " ).append("\n"); 
		query.append("									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_ASC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("											  DECODE(GG.SCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("											  DECODE(GG.LCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("											  DECODE(GG.ECC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("											  DECODE(MM.ORG_YD_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#end" ).append("\n"); 
		query.append("											DECODE(M.MVMT_STS_CD,'EN','OK'," ).append("\n"); 
		query.append("                DECODE(M.MVMT_STS_CD,'TN','OK','NO')))" ).append("\n"); 
		query.append("            FROM CTM_MOVEMENT  MM," ).append("\n"); 
		query.append("                MDM_LOCATION  LL," ).append("\n"); 
		query.append("                MDM_EQ_ORZ_CHT  GG" ).append("\n"); 
		query.append("            WHERE MM.CNTR_NO = M.CNTR_NO" ).append("\n"); 
		query.append("            AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO >" ).append("\n"); 
		query.append("                M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("            AND SUBSTR(MM.ORG_YD_CD, 1, 5)  = LL.LOC_CD" ).append("\n"); 
		query.append("            AND LL.SCC_CD = GG.SCC_CD" ).append("\n"); 
		query.append("            AND MM.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("            AND MM.CNMV_CYC_NO = M.CNMV_CYC_NO" ).append("\n"); 
		query.append("            AND	MM.FCNTR_FLG = 'N'" ).append("\n"); 
		query.append("            AND ROWNUM    = 1 " ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */	" ).append("\n"); 
		query.append("		AND		M.CNTR_NO	=	C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("        AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	    AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        GROUP BY M.CNTR_TPSZ_CD,'MO', W.WK_SEQ ) A,CIM_TP_SZ_DP_SEQ	S" ).append("\n"); 
		query.append("	WHERE	A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("GROUP BY L.CNTR_TPSZ_CD,L.MOV_STS,L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY L.DSP_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MT')" ).append("\n"); 
		query.append("WITH W AS(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("     )" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		DECODE(L.MOV_STS,'',1,'MG',2,'MP',3,'MR',4,'VD-MT',5) AS seq," ).append("\n"); 
		query.append("		NVL(L.CNTR_TPSZ_CD,'') AS inout," ).append("\n"); 
		query.append("		NVL(L.MOV_STS,'MT') as division," ).append("\n"); 
		query.append("		NVL(SUM(CNT),0) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'MG'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'MG'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end " ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			AND	NVL(M.MVMT_CRE_TP_CD,'  ')	NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'ID'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("      		AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("			#if (${soc} == 'E')" ).append("\n"); 
		query.append("			AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("			#elseif(${soc} == 'O')" ).append("\n"); 
		query.append("			AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,'MG',W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  S.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'MP'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'MP'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	AND 	M.CNTR_NO = C.CNTR_NO" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      /* ----------------> 2014.05.08 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("      #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("      		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("      					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("      					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("						   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("						   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("								   )" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      /* ----------------> 2014.05.08 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'XX'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		 GROUP BY M.CNTR_TPSZ_CD, 'MP', W.WK_SEQ " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("		'MP'					MOV_STS," ).append("\n"); 
		query.append("		M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("		W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("		COUNT(M.MVMT_STS_CD)	CNT      " ).append("\n"); 
		query.append("	FROM	CTM_MOVEMENT M," ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			EQR_WK_PRD   K," ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			MST_CONTAINER C," ).append("\n"); 
		query.append("			W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("		AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("		AND 	M.CNTR_NO = C.CNTR_NO" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end " ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("		AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  	AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("		AND M.CNMV_CYC_NO = 1 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  	AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("	  				  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("	  				 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("	  				   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("	  				   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("	  			   )" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("		AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("		AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        			SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("							Y.YD_CD" ).append("\n"); 
		query.append("        			FROM " ).append("\n"); 
		query.append("          					MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          					MDM_LOCATION L," ).append("\n"); 
		query.append("							MDM_YARD Y" ).append("\n"); 
		query.append("					WHERE	Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("					AND		L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("					#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("					#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("					#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("				  ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("    GROUP BY M.CNTR_TPSZ_CD,'MP', W.WK_SEQ )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  S.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("					'MR'				MOV_STS," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					S.DP_SEQ			DSP_SEQ," ).append("\n"); 
		query.append("					A.WK_SEQ 			WK_SEQ,	" ).append("\n"); 
		query.append("					NVL(CNT,0)			CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT " ).append("\n"); 
		query.append("								'MR'					MOV_STS," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								W.WK_SEQ 				WK_SEQ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)		CNT" ).append("\n"); 
		query.append("						FROM	CTM_MOVEMENT	M," ).append("\n"); 
		query.append("								MST_CONTAINER	C," ).append("\n"); 
		query.append("								#if (${period} == 'W')" ).append("\n"); 
		query.append("								EQR_WK_PRD	K," ).append("\n"); 
		query.append("								#end" ).append("\n"); 
		query.append("								W                " ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("					SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("					FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("					)	" ).append("\n"); 
		query.append("	AND				( " ).append("\n"); 
		query.append("					 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("					 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("					 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("					) " ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W')" ).append("\n"); 
		query.append("	AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("						     AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("	AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("	#elseif (${period} == 'M') " ).append("\n"); 
		query.append("	AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("	AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  #if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("	  	AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	  	AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("	  				  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("	  				 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("	  				   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("	  				   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("	  			   )" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	  /* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("			AND		'OK'	=	(   		  " ).append("\n"); 
		query.append("									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("											  DECODE(GG.SCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("											  DECODE(GG.LCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("											  DECODE(GG.ECC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("											  DECODE(MM.ORG_YD_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#end" ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'EN','OK'," ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'TN','OK','NO')))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									--		MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("									FROM    CTM_MOVEMENT	MM," ).append("\n"); 
		query.append("											MDM_LOCATION	LL," ).append("\n"); 
		query.append("											MDM_EQ_ORZ_CHT	GG" ).append("\n"); 
		query.append("									WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("									AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("													M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("									AND		SUBSTR(MM.ORG_YD_CD, 1, 5)	= LL.LOC_CD" ).append("\n"); 
		query.append("									AND		LL.SCC_CD	= GG.SCC_CD" ).append("\n"); 
		query.append("									AND     ROWNUM		= 1" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */	" ).append("\n"); 
		query.append("		AND		M.CNTR_NO	=	C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("        AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	    AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY M.CNTR_TPSZ_CD,'MR', W.WK_SEQ ) A,CIM_TP_SZ_DP_SEQ	S" ).append("\n"); 
		query.append("	WHERE	A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("	AND  S.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'VD-MT'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'VD-MT'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("			AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("			#if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("   #end" ).append("\n"); 
		query.append("			--AND	NVL(M.MVMT_CRE_TP_CD,'  ')	NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'VD'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      		AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("			#if (${soc} == 'E')" ).append("\n"); 
		query.append("			AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("			#elseif(${soc} == 'O')" ).append("\n"); 
		query.append("			AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,'VD-MT',W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  S.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			ROLLUP(L.CNTR_TPSZ_CD,L.MOV_STS)," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ||seq" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VL')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		DECODE(L.MOV_STS,'',1,'OC-VL',2,'TS-VL',3) AS seq," ).append("\n"); 
		query.append("		NVL(L.CNTR_TPSZ_CD,'') AS inout," ).append("\n"); 
		query.append("		NVL(L.MOV_STS,'VL(Full)') as division," ).append("\n"); 
		query.append("		NVL(SUM(CNT),0) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'OC-VL'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'OC-VL'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ		WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("     #end" ).append("\n"); 
		query.append("			#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      		AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'OC'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,'OC-VL',					" ).append("\n"); 
		query.append("				W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'TS-VL'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'TS-VL'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ		WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("			#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      		AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'TS'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,'TS-VL',					" ).append("\n"); 
		query.append("				W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			ROLLUP(L.CNTR_TPSZ_CD,L.MOV_STS)," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ||seq" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VD')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		DECODE(L.MOV_STS,'',1,'VD-IC',2,'VD-TS',3) AS seq," ).append("\n"); 
		query.append("		NVL(L.CNTR_TPSZ_CD,'') AS inout," ).append("\n"); 
		query.append("		NVL(L.MOV_STS,'VD(Full)') as division," ).append("\n"); 
		query.append("		NVL(SUM(CNT),0) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'VD-IC'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'VD-IC'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ		WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'IC'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("			#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      		AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("               AND @[vvd_nm] =     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("                               MM.CRNT_VSL_CD||MM.CRNT_SKD_VOY_NO||MM.CRNT_SKD_DIR_CD" ).append("\n"); 
		query.append("                          FROM CTM_MOVEMENT MM, MDM_VSL_CNTR C" ).append("\n"); 
		query.append("                         WHERE MM.CNTR_NO = M.CNTR_NO" ).append("\n"); 
		query.append("                           AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                               M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                           AND MM.MVMT_STS_CD = 'VD' " ).append("\n"); 
		query.append("                           AND MM.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("                           AND C.FDR_DIV_CD  = 'O' " ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                        )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'VD'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,'VD-IC',					" ).append("\n"); 
		query.append("				W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			'VD-TS'					MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				'VD-TS'					MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ		WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("			AND 	M.MVMT_STS_CD = 'TS'" ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("				AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("			#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      		AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("				AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("							  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("							 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("							   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("							   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("						   )" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 수정 */" ).append("\n"); 
		query.append("		AND		'VD'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 수정 */		" ).append("\n"); 
		query.append("		" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			GROUP BY" ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD,'VD-TS',					" ).append("\n"); 
		query.append("				W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			ROLLUP(L.CNTR_TPSZ_CD,L.MOV_STS)," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ||seq" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT	" ).append("\n"); 
		query.append("		L.CNTR_TPSZ_CD AS inout," ).append("\n"); 
		query.append("		L.MOV_STS as division," ).append("\n"); 
		query.append("		SUM(CNT) AS total," ).append("\n"); 
		query.append(" 		SUM( DECODE( L.WK_SEQ,  1, CNT ,0) )   AS count01," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  2, CNT ,0) )   AS count02," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  3, CNT ,0) )   AS count03," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  4, CNT ,0) )   AS count04," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  5, CNT ,0) )   AS count05," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  6, CNT ,0) )   AS count06," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  7, CNT ,0) )   AS count07," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  8, CNT ,0) )   AS count08," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ,  9, CNT ,0) )   AS count09," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 10, CNT ,0) )   AS count10," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 11, CNT ,0) )   AS count11," ).append("\n"); 
		query.append("		SUM( DECODE( L.WK_SEQ, 12, CNT ,0) )   AS count12" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("	SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			SUBSTR(@[mtymvmt],0,2)	MOV_STS," ).append("\n"); 
		query.append("			S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("			A.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("			A.CNT	                CNT" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT 	/*+ INDEX( M XIE6CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("				SUBSTR(@[mtymvmt],0,2)	MOV_STS," ).append("\n"); 
		query.append("				M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("				W.WK_SEQ				WK_SEQ," ).append("\n"); 
		query.append("				COUNT(M.MVMT_STS_CD)	CNT" ).append("\n"); 
		query.append("			FROM    CTM_MOVEMENT        M," ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					EQR_WK_PRD			K," ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					MST_CONTAINER		C," ).append("\n"); 
		query.append("					(" ).append("\n"); 
		query.append("					#if (${period} == 'W')" ).append("\n"); 
		query.append("					SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ " ).append("\n"); 
		query.append("							PLN_YR||PLN_WK     DAY_UNIT," ).append("\n"); 
		query.append("							ROWNUM             WK_SEQ" ).append("\n"); 
		query.append("					FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("					WHERE   PLN_YR||PLN_WK >= @[from]" ).append("\n"); 
		query.append("					AND     PLN_YR||PLN_WK <= @[to]" ).append("\n"); 
		query.append("					#elseif (${period} == 'M') " ).append("\n"); 
		query.append("						SELECT DAY_UNIT    DAY_UNIT," ).append("\n"); 
		query.append("							   ROWNUM      WK_SEQ" ).append("\n"); 
		query.append("						FROM   (          	" ).append("\n"); 
		query.append("									SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     " ).append("\n"); 
		query.append("									FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("									WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)" ).append("\n"); 
		query.append("									AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)" ).append("\n"); 
		query.append("									ORDER BY PLN_YR||PLN_MON" ).append("\n"); 
		query.append("							   )" ).append("\n"); 
		query.append("					#end" ).append("\n"); 
		query.append("					)	W                " ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD k" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("    			WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  		AND 				TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${period} == 'W')" ).append("\n"); 
		query.append("			AND	TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD')   BETWEEN    K.WK_ST_DT" ).append("\n"); 
		query.append("			                                             AND 	K.WK_END_DT 	" ).append("\n"); 
		query.append("			AND	K.PLN_YR||K.PLN_WK	=	W.DAY_UNIT		/* if ( :period = 'W' ) */" ).append("\n"); 
		query.append("			#elseif (${period} == 'M') " ).append("\n"); 
		query.append("			AND TO_CHAR(M.CNMV_EVNT_DT,'YYYYMM') = W.DAY_UNIT		/* ( period = 'M' ) */" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = SUBSTR(@[mtymvmt],0,2)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} == 'ENF' || ${mtymvmt} == 'TNF' || ${mtymvmt} == 'ENM' || ${mtymvmt} == 'TNM') " ).append("\n"); 
		query.append("		#if (${mtymvmt} == 'ENF' || ${mtymvmt} == 'TNF') " ).append("\n"); 
		query.append("			AND	M.FCNTR_FLG = 'Y'" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND	M.FCNTR_FLG = 'N'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("			#if (${tpsz} != '') " ).append("\n"); 
		query.append("			AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("				#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("					'$cntrtpszcd',  " ).append("\n"); 
		query.append("					#end  " ).append("\n"); 
		query.append("					'') " ).append("\n"); 
		query.append("			#end " ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("        AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("        '')" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("		--	AND	NVL(M.MVMT_CRE_TP_CD,'  ')	NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("				AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      #if (${mtymvmt} == 'OP' || ${mtymvmt} == 'OC')" ).append("\n"); 
		query.append("         AND @[vvd_nm] = " ).append("\n"); 
		query.append("              (SELECT /*+ INDEX_ASC( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("                      MM.CRNT_VSL_CD||MM.CRNT_SKD_VOY_NO||MM.CRNT_SKD_DIR_CD" ).append("\n"); 
		query.append("               FROM CTM_MOVEMENT MM, MDM_VSL_CNTR C" ).append("\n"); 
		query.append("               WHERE MM.CNTR_NO = M.CNTR_NO" ).append("\n"); 
		query.append("                AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO >" ).append("\n"); 
		query.append("                   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                AND MM.MVMT_STS_CD = 'VL' " ).append("\n"); 
		query.append("                AND MM.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("                AND C.FDR_DIV_CD  = 'O' " ).append("\n"); 
		query.append("                AND ROWNUM = 1" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("	        AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	        AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("          				     FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("          				     WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("          				     AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("          				     AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("            		      )" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			/* ----------------> 2014.05.09 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("			" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("			#else" ).append("\n"); 
		query.append("			AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        				SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("        				FROM " ).append("\n"); 
		query.append("          						MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          						MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("					   ) " ).append("\n"); 
		query.append("			#end			" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	GROUP BY" ).append("\n"); 
		query.append("			M.CNTR_TPSZ_CD,SUBSTR(@[mtymvmt],0,2),					" ).append("\n"); 
		query.append("			W.WK_SEQ)A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE 	A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		)	L" ).append("\n"); 
		query.append("GROUP BY " ).append("\n"); 
		query.append("			L.CNTR_TPSZ_CD," ).append("\n"); 
		query.append("			L.MOV_STS," ).append("\n"); 
		query.append("			L.DSP_SEQ" ).append("\n"); 
		query.append("ORDER BY 	L.DSP_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}