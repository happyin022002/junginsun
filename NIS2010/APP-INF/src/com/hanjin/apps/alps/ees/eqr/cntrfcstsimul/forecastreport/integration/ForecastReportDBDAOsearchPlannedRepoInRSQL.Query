<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ForecastReportDBDAOsearchPlannedRepoInRSQL">
			<desc><![CDATA[Forecast Report 화면의 Planned Repo In 데이터를 조회한다.]]></desc>
			<sql><![CDATA[
--/*
--  < 로직정리 >
--  1과 2중에 1우선 + 0 ADD
--    0. MANUAL 조회 (M)
--    +
--    -- TYPE SIZE 별 MANUAL 우선 (1>2)
--      1. MANUAL 조회 (P+G)  
--      -- PLAN > GUIDE  
--      2. plan 조회 (EQR_CTRL_MTY_DCHG_PLN + EQR_CTRL_MTY_DCHG_PLN_QTY)
--      +
--      2. guide line view 조회
--      
--  < 입력값 >
--  loc_cd    = 'KRPUS'    
--  wk_st_dt  = '20130714'
--  wk_end_dt = '20130720'
--*/
--
--/*
--  < 로직정리 >
--  1과 2중에 1우선 + 0 ADD
--    0. MANUAL 조회 (M)
--    +
--    -- TYPE SIZE 별 MANUAL 우선 (1>2)
--      1. MANUAL 조회 (P+G)  
--      -- PLAN > GUIDE  
--      2. plan 조회 (EQR_CTRL_MTY_DCHG_PLN + EQR_CTRL_MTY_DCHG_PLN_QTY)
--      +
--      2. guide line view 조회
--      
--  < 입력값 >
--  loc_cd    = 'KRPUS'    
--  wk_st_dt  = '20130714'
--  wk_end_dt = '20130720'
--  week      = '201329'
--*/

WITH DUMMY_YARD AS 
(
    SELECT C.YD_CD, B.LOC_CD, A.SCC_CD
    FROM MDM_EQ_ORZ_CHT A
        ,MDM_LOCATION B
        ,MDM_YARD C                      
       
  #if(${loc_grp_cd} == 'L')          
    WHERE A.LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC 
  #elseif(${loc_grp_cd} == 'E')         
    WHERE A.ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC
  #elseif(${loc_grp_cd} == 'S')    
    WHERE A.SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC 
  #else
    WHERE 1=1
  #end        	                 	     
    AND   A.SCC_CD = B.SCC_CD
    AND   B.LOC_CD = C.LOC_CD
) 


,REPO_IN_RESULT AS 
(    

    SELECT A.WEEK
          ,A.STS
          ,A.LANE
          ,A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.SKD_DIR_CD
          ,A.YARD
          ,A.ETB
          ,A.ETB_DAY
          ,A.D2_QTY
          ,A.D4_QTY
          ,A.D5_QTY
          ,A.D7_QTY
          ,A.R2_QTY
          ,A.R5_QTY
          ,A.R9_QTY
          ,A.O2_QTY
          ,A.S2_QTY
          ,A.O4_QTY
          ,A.S4_QTY
          ,A.O5_QTY
          ,A.F2_QTY
          ,A.A2_QTY
          ,A.F4_QTY
          ,A.A4_QTY
          ,A.A5_QTY
          ,A.F5_QTY
          ,A.D2_F
          ,A.D4_F
          ,A.D5_F
          ,A.D7_F
          ,A.R2_F
          ,A.R5_F
          ,A.R9_F
          ,A.O2_F
          ,A.S2_F
          ,A.O4_F
          ,A.S4_F
          ,A.O5_F
          ,A.F2_F
          ,A.A2_F
          ,A.F4_F
          ,A.A4_F
          ,A.A5_F
          ,A.F5_F
          ,B.BSA_QTY
          ,B.MTY_LDF_RTO
    FROM
    (      
        -- <MANUAL 조회> -----------------------------------------------------------------------------------------
        SELECT A.FCAST_YRWK                         WEEK
              ,A.PLN_REPO_STS_CD                    STS 
              ,A.VSL_LANE_CD                        LANE
              ,A.VSL_CD      -- HIDDEN
              ,A.SKD_VOY_NO  -- HIDDEN
              ,A.SKD_DIR_CD  -- HIDDEN      
              ,A.POD_YD_CD                          YARD
              ,TO_CHAR(A.TO_ETB_DT, 'YYYY-MM-DD')   ETB
              ,SUBSTR(TO_CHAR(A.TO_ETB_DT, 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1,3) ETB_DAY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY)),0) D2_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY)),0) D4_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY)),0) D5_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY)),0) D7_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY)),0) R2_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY)),0) R5_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY)),0) R9_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY)),0) O2_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY)),0) S2_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY)),0) O4_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY)),0) S4_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY)),0) O5_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY)),0) F2_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY)),0) A2_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY)),0) F4_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY)),0) A4_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'A5', B.CNTR_QTY)),0) A5_QTY
              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY)),0) F5_QTY
              ,'N' D2_F  -- RED 표시여부
              ,'N' D4_F
              ,'N' D5_F
              ,'N' D7_F
              ,'N' R2_F
              ,'N' R5_F
              ,'N' R9_F
              ,'N' O2_F
              ,'N' S2_F
              ,'N' O4_F
              ,'N' S4_F
              ,'N' O5_F
              ,'N' F2_F
              ,'N' A2_F
              ,'N' F4_F
              ,'N' A4_F
              ,'N' A5_F
              ,'N' F5_F          
    
        FROM EQR_CTRL_PLN_REPO_IN A
            ,EQR_CTRL_PLN_REPO_IN_QTY B
            ,DUMMY_YARD C
        -- LCC 별 FM_DT, TO_DT 의 ADD DAY 적용된 조건임.    
        WHERE A.TO_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999            
        AND   A.POD_YD_CD       = C.YD_CD      
        AND   A.FCAST_YRWK      = B.FCAST_YRWK
        AND   A.VSL_CD          = B.VSL_CD
        AND   A.SKD_VOY_NO      = B.SKD_VOY_NO
        AND   A.SKD_DIR_CD      = B.SKD_DIR_CD
        AND   A.PLN_REPO_STS_CD = B.PLN_REPO_STS_CD
        AND   A.POD_YD_CD       = B.POD_YD_CD
        AND   A.TO_ETB_DT       = B.TO_ETB_DT
        AND   A.PLN_REPO_STS_CD = 'M' -- MANUAL
        GROUP BY A.FCAST_YRWK      
                ,A.PLN_REPO_STS_CD  
                ,A.VSL_LANE_CD     
                ,A.VSL_CD
                ,A.SKD_VOY_NO
                ,A.SKD_DIR_CD 
                ,A.POD_YD_CD     
                ,A.TO_ETB_DT
          
        UNION ALL      
    
        -- <MANUAL 조회(P+G) > (PLAN > GUIDELINE) > ----------------------------------------------------------------------- 
        SELECT WEEK
              ,STS
              ,LANE
              ,VSL_CD
              ,SKD_VOY_NO
              ,SKD_DIR_CD
              ,YARD
              ,ETB
              ,SUBSTR(TO_CHAR(TO_DATE(REPLACE(ETB, '-', ''),'YYYYMMDD'), 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1, 3) ETB_DAY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D2', CNTR_QTY)),0) D2_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D4', CNTR_QTY)),0) D4_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D5', CNTR_QTY)),0) D5_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D7', CNTR_QTY)),0) D7_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'R2', CNTR_QTY)),0) R2_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'R5', CNTR_QTY)),0) R5_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'R9', CNTR_QTY)),0) R9_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'O2', CNTR_QTY)),0) O2_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', CNTR_QTY)),0) S2_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'O4', CNTR_QTY)),0) O4_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', CNTR_QTY)),0) S4_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'O5', CNTR_QTY)),0) O5_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F2', CNTR_QTY)),0) F2_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', CNTR_QTY)),0) A2_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F4', CNTR_QTY)),0) F4_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', CNTR_QTY)),0) A4_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A5', CNTR_QTY)),0) A5_QTY
              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', CNTR_QTY)),0) F5_QTY
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D2', CHK_FLG)), 'N') D2_F  
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D4', CHK_FLG)), 'N') D4_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D5', CHK_FLG)), 'N') D5_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D7', CHK_FLG)), 'N') D7_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'R2', CHK_FLG)), 'N') R2_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'R5', CHK_FLG)), 'N') R5_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'R9', CHK_FLG)), 'N') R9_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'O2', CHK_FLG)), 'N') O2_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'S2', CHK_FLG)), 'N') S2_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'O4', CHK_FLG)), 'N') O4_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'S4', CHK_FLG)), 'N') S4_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'O5', CHK_FLG)), 'N') O5_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'F2', CHK_FLG)), 'N') F2_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'A2', CHK_FLG)), 'N') A2_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'F4', CHK_FLG)), 'N') F4_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'A4', CHK_FLG)), 'N') A4_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'A5', CHK_FLG)), 'N') A5_F
              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'F5', CHK_FLG)), 'N') F5_F               
        FROM
        (             
            SELECT ROW_NUMBER() OVER (PARTITION BY WEEK, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, YARD, ETB, CNTR_TPSZ_CD ORDER BY DP_SEQ ASC) FIN_SEQ -- MANUAL 조회(P+G) > (PLAN > GUIDELINE)
                  ,WEEK
                  ,STS
                  ,LANE
                  ,VSL_CD
                  ,SKD_VOY_NO
                  ,SKD_DIR_CD
                  ,YARD
                  ,ETB
                  ,CNTR_TPSZ_CD
                  ,CNTR_QTY
                  ,CHK_FLG
            FROM
            (
                -- <MANUAL 조회 (P+G) > ----------------------------------------------------------------------------------------- 
                SELECT 1                                    DP_SEQ  -- 우선순위 구분자
                      ,A.FCAST_YRWK                         WEEK
                      ,A.PLN_REPO_STS_CD                    STS 
                      ,A.VSL_LANE_CD                        LANE
                      ,A.VSL_CD        
                      ,A.SKD_VOY_NO  
                      ,A.SKD_DIR_CD        
                      ,A.POD_YD_CD                          YARD
                      ,TO_CHAR(A.TO_ETB_DT, 'YYYY-MM-DD')   ETB
                      ,B.CNTR_TPSZ_CD
                      ,NVL(B.CNTR_QTY, 0) CNTR_QTY
                      ,'Y' CHK_FLG -- 적색표시
                FROM EQR_CTRL_PLN_REPO_IN A
                    ,EQR_CTRL_PLN_REPO_IN_QTY B
                    ,DUMMY_YARD C
                -- LCC 별 FM_DT, TO_DT 의 ADD DAY 적용된 조건임.    
                WHERE A.TO_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999            
                AND   A.POD_YD_CD       = C.YD_CD      
                AND   A.FCAST_YRWK      = B.FCAST_YRWK
                AND   A.VSL_CD          = B.VSL_CD
                AND   A.SKD_VOY_NO      = B.SKD_VOY_NO
                AND   A.SKD_DIR_CD      = B.SKD_DIR_CD
                AND   A.PLN_REPO_STS_CD = B.PLN_REPO_STS_CD
                AND   A.POD_YD_CD       = B.POD_YD_CD
                AND   A.TO_ETB_DT       = B.TO_ETB_DT
                AND   A.PLN_REPO_STS_CD IN ('P', 'G') -- P, G 수동입력
                
                -- < PLAN 조회 > ----------------------------------------------------------------------------------------- 
                -- PLAN, GUIDE LINE 중에 PLAN > GUIDELINE 순으로 집계
                UNION ALL
                SELECT 2 DP_SEQ  -- MANUAL P/G이 1순위이고 PLAN-GUIDELINE은 2순위
                      ,@[fcast_yrwk] WEEK
                      ,PLN_REPO_STS_CD STS
                      ,SLAN_CD         LANE      
                      ,VSL_CD      
                      ,SKD_VOY_NO  
                      ,SKD_DIR_CD  
                      ,POD_YD_CD       YARD
                      ,TO_CHAR(VPS_ETB_DT, 'YYYY-MM-DD')   ETB  
                      ,CNTR_TPSZ_CD
                      ,CNTR_QTY 
                      ,'N' CHK_FLG -- 적색표시
                FROM
                (         
                    SELECT ROW_NUMBER() OVER (PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, POD_YD_CD, CNTR_TPSZ_CD, VPS_ETB_DT ORDER BY DP_SEQ ASC) SEL_CD -- PLAN > GUIDELINE
                          ,PLN_REPO_STS_CD
                          ,VSL_CD      
                          ,SKD_VOY_NO  
                          ,SKD_DIR_CD  
                          ,POD_YD_CD   
                          ,CNTR_TPSZ_CD
                          ,CNTR_QTY 
                          ,SLAN_CD
                          ,VPS_PORT_CD
                          ,VPS_ETB_DT   
                    FROM
                    (         
                        --- < PLAN > --------------------------  
                        SELECT 1 DP_SEQ
                              ,'P' PLN_REPO_STS_CD 
                              ,B.VSL_CD      
                              ,B.SKD_VOY_NO  
                              ,B.SKD_DIR_CD  
                              ,B.POD_YD_CD   
                              ,B.CNTR_TPSZ_CD
                              ,NVL(SUM(B.CNTR_QTY),0)  CNTR_QTY
                              ,A.SLAN_CD
                              ,A.VPS_PORT_CD
                              ,A.VPS_ETB_DT   
                        FROM VSK_VSL_PORT_SKD A
                            ,(
                                SELECT A.VSL_CD
                                  ,A.SKD_VOY_NO
                                  ,A.SKD_DIR_CD
                                  ,A.POL_YD_CD
                                  ,A.POD_YD_CD
                                  ,B.CNTR_TPSZ_CD           
                                  ,B.CNTR_QTY
                                FROM EQR_CTRL_MTY_DCHG_PLN A
                                    ,EQR_CTRL_MTY_DCHG_PLN_QTY B
                                    ,DUMMY_YARD C
                                WHERE A.POD_YD_CD  = C.YD_CD          
                                AND   A.VSL_CD     = B.VSL_CD
                                AND   A.SKD_VOY_NO = B.SKD_VOY_NO
                                AND   A.SKD_DIR_CD = B.SKD_DIR_CD
                                AND   A.POL_YD_CD  = B.POL_YD_CD 
                                AND   A.POD_YD_CD  = B.POD_YD_CD  
                                AND   A.MTY_PLN_SHW_FLG = 'Y'   -- 하드코딩  
                            ) B
                        WHERE A.VSL_CD(+)     = B.VSL_CD
                        AND   A.SKD_VOY_NO(+) = B.SKD_VOY_NO
                        AND   A.SKD_DIR_CD(+) = B.SKD_DIR_CD  
                        AND   A.YD_CD(+)      = B.POD_YD_CD
                        AND   A.CLPT_IND_SEQ = '1'  -- 하드코딩    
                        AND   A.VPS_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999
                        GROUP BY B.VSL_CD      
                                ,B.SKD_VOY_NO  
                                ,B.SKD_DIR_CD  
                                ,B.POD_YD_CD   
                                ,B.CNTR_TPSZ_CD
                                ,A.SLAN_CD
                                ,A.VPS_PORT_CD
                                ,A.VPS_ETB_DT   
                            -- < GUIDELINE 조회 > -----------------------------------------------------------------------------------------
                        UNION ALL         
                        SELECT 2 DP_SEQ
                              ,'G' PLN_REPO_STS_CD 
                              ,B.VSL_CD      
                              ,B.SKD_VOY_NO  
                              ,B.SKD_DIR_CD  
                              ,B.POD_YD_CD   
                              ,B.CNTR_TPSZ_CD
                              ,B.CNTR_QTY 
                              ,A.SLAN_CD
                              ,A.VPS_PORT_CD
                              ,A.VPS_ETB_DT   
                        FROM VSK_VSL_PORT_SKD A
                            ,(
                                SELECT A.VSL_CD
                                  ,A.SKD_VOY_NO
                                  ,A.SKD_DIR_CD
                                  ,A.POD_YD_CD
                                  ,B.CNTR_TPSZ_CD           
                                  ,B.CNTR_QTY
                                FROM EQR_CTRL_PLN_SNAP A
                                    ,EQR_CTRL_PLN_SNAP_QTY B
                                    ,DUMMY_YARD C
                                WHERE A.POD_YD_CD  = C.YD_CD          
                                AND   A.VSL_CD     = B.VSL_CD
                                AND   A.SKD_VOY_NO = B.SKD_VOY_NO
                                AND   A.SKD_DIR_CD = B.SKD_DIR_CD
                                AND   A.POD_YD_CD  = B.POD_YD_CD  
                                AND   A.TO_ETB_DT  = B.TO_ETB_DT
                                AND   A.TO_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999
                            ) B
                        WHERE A.VSL_CD(+)     = B.VSL_CD
                        AND   A.SKD_VOY_NO(+) = B.SKD_VOY_NO
                        AND   A.SKD_DIR_CD(+) = B.SKD_DIR_CD  
                        AND   A.YD_CD(+)      = B.POD_YD_CD
                        AND   A.CLPT_IND_SEQ  = '1'  -- 하드코딩    
                    )      
                )
                WHERE SEL_CD = 1   
            )
        )
        WHERE FIN_SEQ = 1
        GROUP BY WEEK
                  ,STS
                  ,LANE
                  ,VSL_CD
                  ,SKD_VOY_NO
                  ,SKD_DIR_CD
                  ,YARD
                  ,ETB
    ) A
    ,EQR_CTRL_PLN_VVD_SNAP B
    WHERE A.VSL_CD     = B.VSL_CD(+)
    AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
    AND   A.SKD_DIR_CD = B.SKD_DIR_CD(+)

    AND (A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.WEEK) NOT IN -- REPO IN 과 중복되는 VVD, WEEK 는 데이터 산출에서 제외함(중요, 송현애 과장 요청)
               (
                    SELECT DISTINCT A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD                  
                          ,@[fcast_yrwk] WEEK                                         
                    FROM EQR_CTRL_REPO_SNAP A 
                        ,DUMMY_YARD         C                          
                    WHERE A.YD_CD = C.YD_CD                                                 
                    AND   A.ETB_DT BETWEEN TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999
                    AND   A.INTR_ASIA_FLG  = 'N' -- WORLD VERSION, 2015-11-10, 신용찬, CHM-201537372
                                                
                    UNION 
    				SELECT DISTINCT A.VSL_CD
				          ,A.SKD_VOY_NO
				          ,A.SKD_DIR_CD   
				          ,@[fcast_yrwk] WEEK  
    				FROM EQR_CTRL_BAL_RPT_DCHG_MNL A
                        ,DUMMY_YARD                C        				
    				WHERE A.LOC_CD = C.LOC_CD
    				AND   A.ETD_DT BETWEEN TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999				
--
               ) 
    
)

-- < MAIN QUERY > ------------------------------------------
SELECT LVL
      ,STS 
      ,WEEK        -- HIDDEN
      ,LANE        -- HIDDEN
      ,VSL_CD      -- HIDDEN
      ,SKD_VOY_NO  -- HIDDEN
      ,SKD_DIR_CD  -- HIDDEN      
      ,YARD                          
      ,ETB
      ,ETB_DAY
      ,D2_QTY
      ,D4_QTY
      ,D5_QTY
      ,D7_QTY
      ,R2_QTY
      ,R5_QTY
      ,R9_QTY
      ,O2_QTY
      ,S2_QTY
      ,O4_QTY
      ,O5_QTY
      ,S4_QTY
      ,F2_QTY
      ,A2_QTY
      ,F4_QTY
      ,A4_QTY
      ,A5_QTY
      ,F5_QTY
      ,D2_F  -- RED 표시여부
      ,D4_F
      ,D5_F
      ,D7_F
      ,R2_F
      ,R5_F
      ,R9_F
      ,O2_F
      ,S2_F
      ,O4_F
      ,S4_F
      ,O5_F
      ,F2_F
      ,A2_F
      ,F4_F
      ,A4_F
      ,A5_F
      ,F5_F      
      ,BSA
      ,EQLF
      ,WK_ST_DT
      ,WK_END_DT    
      ,DECODE(STS,'M','',VSL_CD||SKD_VOY_NO||SKD_DIR_CD) SHOW_VVD  
      ,DECODE(STS,'M','',LANE)                           SHOW_LANE
      ,SUBSTR(WEEK,5,2)                                  SHOW_WEEK
      ,@[loc_cd]                                         LOC_CD
FROM
(
    SELECT '000000' LVL
          ,WEEK
          ,STS 
          ,LANE
          ,VSL_CD      -- HIDDEN
          ,SKD_VOY_NO  -- HIDDEN
          ,SKD_DIR_CD  -- HIDDEN      
          ,YARD                          
          ,ETB
          ,ETB_DAY
          ,D2_QTY
          ,D4_QTY
          ,D5_QTY
          ,D7_QTY
          ,R2_QTY
          ,R5_QTY
          ,R9_QTY
          ,O2_QTY
          ,S2_QTY
          ,O4_QTY
          ,S4_QTY
          ,O5_QTY
          ,F2_QTY
          ,A2_QTY
          ,F4_QTY
          ,A4_QTY
          ,A5_QTY
          ,F5_QTY
          ,D2_F  -- RED 표시여부
          ,D4_F
          ,D5_F
          ,D7_F
          ,R2_F
          ,R5_F
          ,R9_F
          ,O2_F
          ,S2_F
          ,O4_F
          ,S4_F
          ,O5_F
          ,F2_F
          ,A2_F
          ,F4_F
          ,A4_F
          ,A5_F
          ,F5_F      
          ,BSA_QTY     BSA
          ,MTY_LDF_RTO EQLF
          ,TO_CHAR(TO_DATE(@[wk_st_dt], 'YYYYMMDD'), 'YYYY/MM/DD') 	WK_ST_DT  -- HIDDEN
          ,TO_CHAR(TO_DATE(@[wk_end_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_END_DT -- HIDDEN
    FROM REPO_IN_RESULT       

    UNION ALL
    -- TOTAL
    SELECT '111111' LVL
          ,'' WEEK
          ,'' STS 
          ,'' LANE
          ,'' VSL_CD      -- HIDDEN
          ,'' SKD_VOY_NO  -- HIDDEN
          ,'' SKD_DIR_CD  -- HIDDEN      
          ,'' YARD                          
          ,'' ETB
          ,'' ETB_DAY
          ,SUM(D2_QTY) D2_FCAST_QTY
          ,SUM(D4_QTY) D4_FCAST_QTY
          ,SUM(D5_QTY) D5_FCAST_QTY
          ,SUM(D7_QTY) D7_FCAST_QTY
          ,SUM(R2_QTY) R2_FCAST_QTY  
          ,SUM(R5_QTY) R5_FCAST_QTY
          ,SUM(R9_QTY) R9_FCAST_QTY
          ,SUM(O2_QTY) O2_FCAST_QTY
          ,SUM(S2_QTY) S2_FCAST_QTY
          ,SUM(O4_QTY) O4_FCAST_QTY
          ,SUM(S4_QTY) S4_FCAST_QTY
          ,SUM(O5_QTY) O5_FCAST_QTY
          ,SUM(F2_QTY) F2_FCAST_QTY
          ,SUM(A2_QTY) A2_FCAST_QTY
          ,SUM(F4_QTY) F4_FCAST_QTY
          ,SUM(A4_QTY) A4_FCAST_QTY
          ,SUM(A5_QTY) A5_FCAST_QTY
          ,SUM(F5_QTY) F5_FCAST_QTY
          ,NULL D2_F  -- RED 표시여부
          ,NULL D4_F
          ,NULL D5_F
          ,NULL D7_F
          ,NULL R2_F
          ,NULL R5_F
          ,NULL R9_F
          ,NULL O2_F
          ,NULL S2_F
          ,NULL O4_F
          ,NULL S4_F
          ,NULL O5_F
          ,NULL F2_F
          ,NULL A2_F
          ,NULL F4_F
          ,NULL A4_F
          ,NULL A5_F
          ,NULL F5_F           
          ,NULL BSA
          ,NULL EQLF
    	  ,TO_CHAR(TO_DATE(@[wk_st_dt],  'YYYYMMDD'), 'YYYY/MM/DD')	WK_ST_DT
          ,TO_CHAR(TO_DATE(@[wk_end_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_END_DT
    FROM REPO_IN_RESULT 
) 
ORDER BY LVL, ETB ASC			]]></sql>
			<params>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="wk_st_dt" type="12" value="" out="N"/>
				<param name="wk_end_dt" type="12" value="" out="N"/>
				<param name="fcast_yrwk" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
