/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : ForecastReportDBDAOsearchPlannedRepoInRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.02.18
*@LastModifier : 
*@LastVersion : 1.0
* 2016.02.18 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.cntrfcstsimul.forecastreport.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class ForecastReportDBDAOsearchPlannedRepoInRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Forecast Report 화면의 Planned Repo In 데이터를 조회한다.
	  * </pre>
	  */
	public ForecastReportDBDAOsearchPlannedRepoInRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("loc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast_yrwk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("wk_end_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("wk_st_dt",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.cntrfcstsimul.forecastreport.integration").append("\n"); 
		query.append("FileName : ForecastReportDBDAOsearchPlannedRepoInRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("--/*" ).append("\n"); 
		query.append("--  < 로직정리 >" ).append("\n"); 
		query.append("--  1과 2중에 1우선 + 0 ADD" ).append("\n"); 
		query.append("--    0. MANUAL 조회 (M)" ).append("\n"); 
		query.append("--    +" ).append("\n"); 
		query.append("--    -- TYPE SIZE 별 MANUAL 우선 (1>2)" ).append("\n"); 
		query.append("--      1. MANUAL 조회 (P+G)  " ).append("\n"); 
		query.append("--      -- PLAN > GUIDE  " ).append("\n"); 
		query.append("--      2. plan 조회 (EQR_CTRL_MTY_DCHG_PLN + EQR_CTRL_MTY_DCHG_PLN_QTY)" ).append("\n"); 
		query.append("--      +" ).append("\n"); 
		query.append("--      2. guide line view 조회" ).append("\n"); 
		query.append("--      " ).append("\n"); 
		query.append("--  < 입력값 >" ).append("\n"); 
		query.append("--  loc_cd    = 'KRPUS'    " ).append("\n"); 
		query.append("--  wk_st_dt  = '20130714'" ).append("\n"); 
		query.append("--  wk_end_dt = '20130720'" ).append("\n"); 
		query.append("--*/" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("--/*" ).append("\n"); 
		query.append("--  < 로직정리 >" ).append("\n"); 
		query.append("--  1과 2중에 1우선 + 0 ADD" ).append("\n"); 
		query.append("--    0. MANUAL 조회 (M)" ).append("\n"); 
		query.append("--    +" ).append("\n"); 
		query.append("--    -- TYPE SIZE 별 MANUAL 우선 (1>2)" ).append("\n"); 
		query.append("--      1. MANUAL 조회 (P+G)  " ).append("\n"); 
		query.append("--      -- PLAN > GUIDE  " ).append("\n"); 
		query.append("--      2. plan 조회 (EQR_CTRL_MTY_DCHG_PLN + EQR_CTRL_MTY_DCHG_PLN_QTY)" ).append("\n"); 
		query.append("--      +" ).append("\n"); 
		query.append("--      2. guide line view 조회" ).append("\n"); 
		query.append("--      " ).append("\n"); 
		query.append("--  < 입력값 >" ).append("\n"); 
		query.append("--  loc_cd    = 'KRPUS'    " ).append("\n"); 
		query.append("--  wk_st_dt  = '20130714'" ).append("\n"); 
		query.append("--  wk_end_dt = '20130720'" ).append("\n"); 
		query.append("--  week      = '201329'" ).append("\n"); 
		query.append("--*/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WITH DUMMY_YARD AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT C.YD_CD, B.LOC_CD, A.SCC_CD" ).append("\n"); 
		query.append("    FROM MDM_EQ_ORZ_CHT A" ).append("\n"); 
		query.append("        ,MDM_LOCATION B" ).append("\n"); 
		query.append("        ,MDM_YARD C                      " ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append("  #if(${loc_grp_cd} == 'L')          " ).append("\n"); 
		query.append("    WHERE A.LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC " ).append("\n"); 
		query.append("  #elseif(${loc_grp_cd} == 'E')         " ).append("\n"); 
		query.append("    WHERE A.ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC" ).append("\n"); 
		query.append("  #elseif(${loc_grp_cd} == 'S')    " ).append("\n"); 
		query.append("    WHERE A.SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC " ).append("\n"); 
		query.append("  #else" ).append("\n"); 
		query.append("    WHERE 1=1" ).append("\n"); 
		query.append("  #end        	                 	     " ).append("\n"); 
		query.append("    AND   A.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("    AND   B.LOC_CD = C.LOC_CD" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",REPO_IN_RESULT AS " ).append("\n"); 
		query.append("(    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    SELECT A.WEEK" ).append("\n"); 
		query.append("          ,A.STS" ).append("\n"); 
		query.append("          ,A.LANE" ).append("\n"); 
		query.append("          ,A.VSL_CD" ).append("\n"); 
		query.append("          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("          ,A.YARD" ).append("\n"); 
		query.append("          ,A.ETB" ).append("\n"); 
		query.append("          ,A.ETB_DAY" ).append("\n"); 
		query.append("          ,A.D2_QTY" ).append("\n"); 
		query.append("          ,A.D4_QTY" ).append("\n"); 
		query.append("          ,A.D5_QTY" ).append("\n"); 
		query.append("          ,A.D7_QTY" ).append("\n"); 
		query.append("          ,A.R2_QTY" ).append("\n"); 
		query.append("          ,A.R5_QTY" ).append("\n"); 
		query.append("          ,A.R9_QTY" ).append("\n"); 
		query.append("          ,A.O2_QTY" ).append("\n"); 
		query.append("          ,A.S2_QTY" ).append("\n"); 
		query.append("          ,A.O4_QTY" ).append("\n"); 
		query.append("          ,A.S4_QTY" ).append("\n"); 
		query.append("          ,A.O5_QTY" ).append("\n"); 
		query.append("          ,A.F2_QTY" ).append("\n"); 
		query.append("          ,A.A2_QTY" ).append("\n"); 
		query.append("          ,A.F4_QTY" ).append("\n"); 
		query.append("          ,A.A4_QTY" ).append("\n"); 
		query.append("          ,A.A5_QTY" ).append("\n"); 
		query.append("          ,A.F5_QTY" ).append("\n"); 
		query.append("          ,A.D2_F" ).append("\n"); 
		query.append("          ,A.D4_F" ).append("\n"); 
		query.append("          ,A.D5_F" ).append("\n"); 
		query.append("          ,A.D7_F" ).append("\n"); 
		query.append("          ,A.R2_F" ).append("\n"); 
		query.append("          ,A.R5_F" ).append("\n"); 
		query.append("          ,A.R9_F" ).append("\n"); 
		query.append("          ,A.O2_F" ).append("\n"); 
		query.append("          ,A.S2_F" ).append("\n"); 
		query.append("          ,A.O4_F" ).append("\n"); 
		query.append("          ,A.S4_F" ).append("\n"); 
		query.append("          ,A.O5_F" ).append("\n"); 
		query.append("          ,A.F2_F" ).append("\n"); 
		query.append("          ,A.A2_F" ).append("\n"); 
		query.append("          ,A.F4_F" ).append("\n"); 
		query.append("          ,A.A4_F" ).append("\n"); 
		query.append("          ,A.A5_F" ).append("\n"); 
		query.append("          ,A.F5_F" ).append("\n"); 
		query.append("          ,B.BSA_QTY" ).append("\n"); 
		query.append("          ,B.MTY_LDF_RTO" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (      " ).append("\n"); 
		query.append("        -- <MANUAL 조회> -----------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("        SELECT A.FCAST_YRWK                         WEEK" ).append("\n"); 
		query.append("              ,A.PLN_REPO_STS_CD                    STS " ).append("\n"); 
		query.append("              ,A.VSL_LANE_CD                        LANE" ).append("\n"); 
		query.append("              ,A.VSL_CD      -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SKD_VOY_NO  -- HIDDEN" ).append("\n"); 
		query.append("              ,A.SKD_DIR_CD  -- HIDDEN      " ).append("\n"); 
		query.append("              ,A.POD_YD_CD                          YARD" ).append("\n"); 
		query.append("              ,TO_CHAR(A.TO_ETB_DT, 'YYYY-MM-DD')   ETB" ).append("\n"); 
		query.append("              ,SUBSTR(TO_CHAR(A.TO_ETB_DT, 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1,3) ETB_DAY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY)),0) D2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY)),0) D4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY)),0) D5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY)),0) D7_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY)),0) R2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY)),0) R5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY)),0) R9_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY)),0) O2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY)),0) S2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY)),0) O4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY)),0) S4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY)),0) O5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY)),0) F2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY)),0) A2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY)),0) F4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY)),0) A4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'A5', B.CNTR_QTY)),0) A5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY)),0) F5_QTY" ).append("\n"); 
		query.append("              ,'N' D2_F  -- RED 표시여부" ).append("\n"); 
		query.append("              ,'N' D4_F" ).append("\n"); 
		query.append("              ,'N' D5_F" ).append("\n"); 
		query.append("              ,'N' D7_F" ).append("\n"); 
		query.append("              ,'N' R2_F" ).append("\n"); 
		query.append("              ,'N' R5_F" ).append("\n"); 
		query.append("              ,'N' R9_F" ).append("\n"); 
		query.append("              ,'N' O2_F" ).append("\n"); 
		query.append("              ,'N' S2_F" ).append("\n"); 
		query.append("              ,'N' O4_F" ).append("\n"); 
		query.append("              ,'N' S4_F" ).append("\n"); 
		query.append("              ,'N' O5_F" ).append("\n"); 
		query.append("              ,'N' F2_F" ).append("\n"); 
		query.append("              ,'N' A2_F" ).append("\n"); 
		query.append("              ,'N' F4_F" ).append("\n"); 
		query.append("              ,'N' A4_F" ).append("\n"); 
		query.append("              ,'N' A5_F" ).append("\n"); 
		query.append("              ,'N' F5_F          " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        FROM EQR_CTRL_PLN_REPO_IN A" ).append("\n"); 
		query.append("            ,EQR_CTRL_PLN_REPO_IN_QTY B" ).append("\n"); 
		query.append("            ,DUMMY_YARD C" ).append("\n"); 
		query.append("        -- LCC 별 FM_DT, TO_DT 의 ADD DAY 적용된 조건임.    " ).append("\n"); 
		query.append("        WHERE A.TO_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999            " ).append("\n"); 
		query.append("        AND   A.POD_YD_CD       = C.YD_CD      " ).append("\n"); 
		query.append("        AND   A.FCAST_YRWK      = B.FCAST_YRWK" ).append("\n"); 
		query.append("        AND   A.VSL_CD          = B.VSL_CD" ).append("\n"); 
		query.append("        AND   A.SKD_VOY_NO      = B.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND   A.SKD_DIR_CD      = B.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND   A.PLN_REPO_STS_CD = B.PLN_REPO_STS_CD" ).append("\n"); 
		query.append("        AND   A.POD_YD_CD       = B.POD_YD_CD" ).append("\n"); 
		query.append("        AND   A.TO_ETB_DT       = B.TO_ETB_DT" ).append("\n"); 
		query.append("        AND   A.PLN_REPO_STS_CD = 'M' -- MANUAL" ).append("\n"); 
		query.append("        GROUP BY A.FCAST_YRWK      " ).append("\n"); 
		query.append("                ,A.PLN_REPO_STS_CD  " ).append("\n"); 
		query.append("                ,A.VSL_LANE_CD     " ).append("\n"); 
		query.append("                ,A.VSL_CD" ).append("\n"); 
		query.append("                ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                ,A.SKD_DIR_CD " ).append("\n"); 
		query.append("                ,A.POD_YD_CD     " ).append("\n"); 
		query.append("                ,A.TO_ETB_DT" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("        UNION ALL      " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("        -- <MANUAL 조회(P+G) > (PLAN > GUIDELINE) > ----------------------------------------------------------------------- " ).append("\n"); 
		query.append("        SELECT WEEK" ).append("\n"); 
		query.append("              ,STS" ).append("\n"); 
		query.append("              ,LANE" ).append("\n"); 
		query.append("              ,VSL_CD" ).append("\n"); 
		query.append("              ,SKD_VOY_NO" ).append("\n"); 
		query.append("              ,SKD_DIR_CD" ).append("\n"); 
		query.append("              ,YARD" ).append("\n"); 
		query.append("              ,ETB" ).append("\n"); 
		query.append("              ,SUBSTR(TO_CHAR(TO_DATE(REPLACE(ETB, '-', ''),'YYYYMMDD'), 'DAY', 'NLS_DATE_LANGUAGE=ENGLISH'), 1, 3) ETB_DAY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D2', CNTR_QTY)),0) D2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D4', CNTR_QTY)),0) D4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D5', CNTR_QTY)),0) D5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'D7', CNTR_QTY)),0) D7_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'R2', CNTR_QTY)),0) R2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'R5', CNTR_QTY)),0) R5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'R9', CNTR_QTY)),0) R9_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'O2', CNTR_QTY)),0) O2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', CNTR_QTY)),0) S2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'O4', CNTR_QTY)),0) O4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', CNTR_QTY)),0) S4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'O5', CNTR_QTY)),0) O5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F2', CNTR_QTY)),0) F2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', CNTR_QTY)),0) A2_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F4', CNTR_QTY)),0) F4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', CNTR_QTY)),0) A4_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A5', CNTR_QTY)),0) A5_QTY" ).append("\n"); 
		query.append("              ,NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', CNTR_QTY)),0) F5_QTY" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D2', CHK_FLG)), 'N') D2_F  " ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D4', CHK_FLG)), 'N') D4_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D5', CHK_FLG)), 'N') D5_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'D7', CHK_FLG)), 'N') D7_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'R2', CHK_FLG)), 'N') R2_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'R5', CHK_FLG)), 'N') R5_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'R9', CHK_FLG)), 'N') R9_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'O2', CHK_FLG)), 'N') O2_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'S2', CHK_FLG)), 'N') S2_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'O4', CHK_FLG)), 'N') O4_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'S4', CHK_FLG)), 'N') S4_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'O5', CHK_FLG)), 'N') O5_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'F2', CHK_FLG)), 'N') F2_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'A2', CHK_FLG)), 'N') A2_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'F4', CHK_FLG)), 'N') F4_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'A4', CHK_FLG)), 'N') A4_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'A5', CHK_FLG)), 'N') A5_F" ).append("\n"); 
		query.append("              ,NVL(MAX(DECODE(CNTR_TPSZ_CD, 'F5', CHK_FLG)), 'N') F5_F               " ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (             " ).append("\n"); 
		query.append("            SELECT ROW_NUMBER() OVER (PARTITION BY WEEK, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, YARD, ETB, CNTR_TPSZ_CD ORDER BY DP_SEQ ASC) FIN_SEQ -- MANUAL 조회(P+G) > (PLAN > GUIDELINE)" ).append("\n"); 
		query.append("                  ,WEEK" ).append("\n"); 
		query.append("                  ,STS" ).append("\n"); 
		query.append("                  ,LANE" ).append("\n"); 
		query.append("                  ,VSL_CD" ).append("\n"); 
		query.append("                  ,SKD_VOY_NO" ).append("\n"); 
		query.append("                  ,SKD_DIR_CD" ).append("\n"); 
		query.append("                  ,YARD" ).append("\n"); 
		query.append("                  ,ETB" ).append("\n"); 
		query.append("                  ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                  ,CNTR_QTY" ).append("\n"); 
		query.append("                  ,CHK_FLG" ).append("\n"); 
		query.append("            FROM" ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("                -- <MANUAL 조회 (P+G) > ----------------------------------------------------------------------------------------- " ).append("\n"); 
		query.append("                SELECT 1                                    DP_SEQ  -- 우선순위 구분자" ).append("\n"); 
		query.append("                      ,A.FCAST_YRWK                         WEEK" ).append("\n"); 
		query.append("                      ,A.PLN_REPO_STS_CD                    STS " ).append("\n"); 
		query.append("                      ,A.VSL_LANE_CD                        LANE" ).append("\n"); 
		query.append("                      ,A.VSL_CD        " ).append("\n"); 
		query.append("                      ,A.SKD_VOY_NO  " ).append("\n"); 
		query.append("                      ,A.SKD_DIR_CD        " ).append("\n"); 
		query.append("                      ,A.POD_YD_CD                          YARD" ).append("\n"); 
		query.append("                      ,TO_CHAR(A.TO_ETB_DT, 'YYYY-MM-DD')   ETB" ).append("\n"); 
		query.append("                      ,B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,NVL(B.CNTR_QTY, 0) CNTR_QTY" ).append("\n"); 
		query.append("                      ,'Y' CHK_FLG -- 적색표시" ).append("\n"); 
		query.append("                FROM EQR_CTRL_PLN_REPO_IN A" ).append("\n"); 
		query.append("                    ,EQR_CTRL_PLN_REPO_IN_QTY B" ).append("\n"); 
		query.append("                    ,DUMMY_YARD C" ).append("\n"); 
		query.append("                -- LCC 별 FM_DT, TO_DT 의 ADD DAY 적용된 조건임.    " ).append("\n"); 
		query.append("                WHERE A.TO_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999            " ).append("\n"); 
		query.append("                AND   A.POD_YD_CD       = C.YD_CD      " ).append("\n"); 
		query.append("                AND   A.FCAST_YRWK      = B.FCAST_YRWK" ).append("\n"); 
		query.append("                AND   A.VSL_CD          = B.VSL_CD" ).append("\n"); 
		query.append("                AND   A.SKD_VOY_NO      = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   A.SKD_DIR_CD      = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   A.PLN_REPO_STS_CD = B.PLN_REPO_STS_CD" ).append("\n"); 
		query.append("                AND   A.POD_YD_CD       = B.POD_YD_CD" ).append("\n"); 
		query.append("                AND   A.TO_ETB_DT       = B.TO_ETB_DT" ).append("\n"); 
		query.append("                AND   A.PLN_REPO_STS_CD IN ('P', 'G') -- P, G 수동입력" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- < PLAN 조회 > ----------------------------------------------------------------------------------------- " ).append("\n"); 
		query.append("                -- PLAN, GUIDE LINE 중에 PLAN > GUIDELINE 순으로 집계" ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                SELECT 2 DP_SEQ  -- MANUAL P/G이 1순위이고 PLAN-GUIDELINE은 2순위" ).append("\n"); 
		query.append("                      ,@[fcast_yrwk] WEEK" ).append("\n"); 
		query.append("                      ,PLN_REPO_STS_CD STS" ).append("\n"); 
		query.append("                      ,SLAN_CD         LANE      " ).append("\n"); 
		query.append("                      ,VSL_CD      " ).append("\n"); 
		query.append("                      ,SKD_VOY_NO  " ).append("\n"); 
		query.append("                      ,SKD_DIR_CD  " ).append("\n"); 
		query.append("                      ,POD_YD_CD       YARD" ).append("\n"); 
		query.append("                      ,TO_CHAR(VPS_ETB_DT, 'YYYY-MM-DD')   ETB  " ).append("\n"); 
		query.append("                      ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                      ,CNTR_QTY " ).append("\n"); 
		query.append("                      ,'N' CHK_FLG -- 적색표시" ).append("\n"); 
		query.append("                FROM" ).append("\n"); 
		query.append("                (         " ).append("\n"); 
		query.append("                    SELECT ROW_NUMBER() OVER (PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, POD_YD_CD, CNTR_TPSZ_CD, VPS_ETB_DT ORDER BY DP_SEQ ASC) SEL_CD -- PLAN > GUIDELINE" ).append("\n"); 
		query.append("                          ,PLN_REPO_STS_CD" ).append("\n"); 
		query.append("                          ,VSL_CD      " ).append("\n"); 
		query.append("                          ,SKD_VOY_NO  " ).append("\n"); 
		query.append("                          ,SKD_DIR_CD  " ).append("\n"); 
		query.append("                          ,POD_YD_CD   " ).append("\n"); 
		query.append("                          ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          ,CNTR_QTY " ).append("\n"); 
		query.append("                          ,SLAN_CD" ).append("\n"); 
		query.append("                          ,VPS_PORT_CD" ).append("\n"); 
		query.append("                          ,VPS_ETB_DT   " ).append("\n"); 
		query.append("                    FROM" ).append("\n"); 
		query.append("                    (         " ).append("\n"); 
		query.append("                        --- < PLAN > --------------------------  " ).append("\n"); 
		query.append("                        SELECT 1 DP_SEQ" ).append("\n"); 
		query.append("                              ,'P' PLN_REPO_STS_CD " ).append("\n"); 
		query.append("                              ,B.VSL_CD      " ).append("\n"); 
		query.append("                              ,B.SKD_VOY_NO  " ).append("\n"); 
		query.append("                              ,B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                              ,B.POD_YD_CD   " ).append("\n"); 
		query.append("                              ,B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                              ,NVL(SUM(B.CNTR_QTY),0)  CNTR_QTY" ).append("\n"); 
		query.append("                              ,A.SLAN_CD" ).append("\n"); 
		query.append("                              ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                              ,A.VPS_ETB_DT   " ).append("\n"); 
		query.append("                        FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                            ,(" ).append("\n"); 
		query.append("                                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                  ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,A.POL_YD_CD" ).append("\n"); 
		query.append("                                  ,A.POD_YD_CD" ).append("\n"); 
		query.append("                                  ,B.CNTR_TPSZ_CD           " ).append("\n"); 
		query.append("                                  ,B.CNTR_QTY" ).append("\n"); 
		query.append("                                FROM EQR_CTRL_MTY_DCHG_PLN A" ).append("\n"); 
		query.append("                                    ,EQR_CTRL_MTY_DCHG_PLN_QTY B" ).append("\n"); 
		query.append("                                    ,DUMMY_YARD C" ).append("\n"); 
		query.append("                                WHERE A.POD_YD_CD  = C.YD_CD          " ).append("\n"); 
		query.append("                                AND   A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND   A.POL_YD_CD  = B.POL_YD_CD " ).append("\n"); 
		query.append("                                AND   A.POD_YD_CD  = B.POD_YD_CD  " ).append("\n"); 
		query.append("                                AND   A.MTY_PLN_SHW_FLG = 'Y'   -- 하드코딩  " ).append("\n"); 
		query.append("                            ) B" ).append("\n"); 
		query.append("                        WHERE A.VSL_CD(+)     = B.VSL_CD" ).append("\n"); 
		query.append("                        AND   A.SKD_VOY_NO(+) = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND   A.SKD_DIR_CD(+) = B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                        AND   A.YD_CD(+)      = B.POD_YD_CD" ).append("\n"); 
		query.append("                        AND   A.CLPT_IND_SEQ = '1'  -- 하드코딩    " ).append("\n"); 
		query.append("                        AND   A.VPS_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999" ).append("\n"); 
		query.append("                        GROUP BY B.VSL_CD      " ).append("\n"); 
		query.append("                                ,B.SKD_VOY_NO  " ).append("\n"); 
		query.append("                                ,B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                                ,B.POD_YD_CD   " ).append("\n"); 
		query.append("                                ,B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                                ,A.SLAN_CD" ).append("\n"); 
		query.append("                                ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                                ,A.VPS_ETB_DT   " ).append("\n"); 
		query.append("                            -- < GUIDELINE 조회 > -----------------------------------------------------------------------------------------" ).append("\n"); 
		query.append("                        UNION ALL         " ).append("\n"); 
		query.append("                        SELECT 2 DP_SEQ" ).append("\n"); 
		query.append("                              ,'G' PLN_REPO_STS_CD " ).append("\n"); 
		query.append("                              ,B.VSL_CD      " ).append("\n"); 
		query.append("                              ,B.SKD_VOY_NO  " ).append("\n"); 
		query.append("                              ,B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                              ,B.POD_YD_CD   " ).append("\n"); 
		query.append("                              ,B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                              ,B.CNTR_QTY " ).append("\n"); 
		query.append("                              ,A.SLAN_CD" ).append("\n"); 
		query.append("                              ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                              ,A.VPS_ETB_DT   " ).append("\n"); 
		query.append("                        FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                            ,(" ).append("\n"); 
		query.append("                                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                  ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,A.POD_YD_CD" ).append("\n"); 
		query.append("                                  ,B.CNTR_TPSZ_CD           " ).append("\n"); 
		query.append("                                  ,B.CNTR_QTY" ).append("\n"); 
		query.append("                                FROM EQR_CTRL_PLN_SNAP A" ).append("\n"); 
		query.append("                                    ,EQR_CTRL_PLN_SNAP_QTY B" ).append("\n"); 
		query.append("                                    ,DUMMY_YARD C" ).append("\n"); 
		query.append("                                WHERE A.POD_YD_CD  = C.YD_CD          " ).append("\n"); 
		query.append("                                AND   A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND   A.POD_YD_CD  = B.POD_YD_CD  " ).append("\n"); 
		query.append("                                AND   A.TO_ETB_DT  = B.TO_ETB_DT" ).append("\n"); 
		query.append("                                AND   A.TO_ETB_DT BETWEEN  TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999" ).append("\n"); 
		query.append("                            ) B" ).append("\n"); 
		query.append("                        WHERE A.VSL_CD(+)     = B.VSL_CD" ).append("\n"); 
		query.append("                        AND   A.SKD_VOY_NO(+) = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND   A.SKD_DIR_CD(+) = B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                        AND   A.YD_CD(+)      = B.POD_YD_CD" ).append("\n"); 
		query.append("                        AND   A.CLPT_IND_SEQ  = '1'  -- 하드코딩    " ).append("\n"); 
		query.append("                    )      " ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("                WHERE SEL_CD = 1   " ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        WHERE FIN_SEQ = 1" ).append("\n"); 
		query.append("        GROUP BY WEEK" ).append("\n"); 
		query.append("                  ,STS" ).append("\n"); 
		query.append("                  ,LANE" ).append("\n"); 
		query.append("                  ,VSL_CD" ).append("\n"); 
		query.append("                  ,SKD_VOY_NO" ).append("\n"); 
		query.append("                  ,SKD_DIR_CD" ).append("\n"); 
		query.append("                  ,YARD" ).append("\n"); 
		query.append("                  ,ETB" ).append("\n"); 
		query.append("    ) A" ).append("\n"); 
		query.append("    ,EQR_CTRL_PLN_VVD_SNAP B" ).append("\n"); 
		query.append("    WHERE A.VSL_CD     = B.VSL_CD(+)" ).append("\n"); 
		query.append("    AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("    AND   A.SKD_DIR_CD = B.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    AND (A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.WEEK) NOT IN -- REPO IN 과 중복되는 VVD, WEEK 는 데이터 산출에서 제외함(중요, 송현애 과장 요청)" ).append("\n"); 
		query.append("               (" ).append("\n"); 
		query.append("                    SELECT DISTINCT A.VSL_CD" ).append("\n"); 
		query.append("                          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,A.SKD_DIR_CD                  " ).append("\n"); 
		query.append("                          ,@[fcast_yrwk] WEEK                                         " ).append("\n"); 
		query.append("                    FROM EQR_CTRL_REPO_SNAP A " ).append("\n"); 
		query.append("                        ,DUMMY_YARD         C                          " ).append("\n"); 
		query.append("                    WHERE A.YD_CD = C.YD_CD                                                 " ).append("\n"); 
		query.append("                    AND   A.ETB_DT BETWEEN TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999" ).append("\n"); 
		query.append("                    AND   A.INTR_ASIA_FLG  = 'N' -- WORLD VERSION, 2015-11-10, 신용찬, CHM-201537372" ).append("\n"); 
		query.append("                                                " ).append("\n"); 
		query.append("                    UNION " ).append("\n"); 
		query.append("    				SELECT DISTINCT A.VSL_CD" ).append("\n"); 
		query.append("				          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("				          ,A.SKD_DIR_CD   " ).append("\n"); 
		query.append("				          ,@[fcast_yrwk] WEEK  " ).append("\n"); 
		query.append("    				FROM EQR_CTRL_BAL_RPT_DCHG_MNL A" ).append("\n"); 
		query.append("                        ,DUMMY_YARD                C        				" ).append("\n"); 
		query.append("    				WHERE A.LOC_CD = C.LOC_CD" ).append("\n"); 
		query.append("    				AND   A.ETD_DT BETWEEN TO_DATE(@[wk_st_dt],'YYYYMMDD') AND TO_DATE(@[wk_end_dt],'YYYYMMDD')+0.9999				" ).append("\n"); 
		query.append("--" ).append("\n"); 
		query.append("               ) " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- < MAIN QUERY > ------------------------------------------" ).append("\n"); 
		query.append("SELECT LVL" ).append("\n"); 
		query.append("      ,STS " ).append("\n"); 
		query.append("      ,WEEK        -- HIDDEN" ).append("\n"); 
		query.append("      ,LANE        -- HIDDEN" ).append("\n"); 
		query.append("      ,VSL_CD      -- HIDDEN" ).append("\n"); 
		query.append("      ,SKD_VOY_NO  -- HIDDEN" ).append("\n"); 
		query.append("      ,SKD_DIR_CD  -- HIDDEN      " ).append("\n"); 
		query.append("      ,YARD                          " ).append("\n"); 
		query.append("      ,ETB" ).append("\n"); 
		query.append("      ,ETB_DAY" ).append("\n"); 
		query.append("      ,D2_QTY" ).append("\n"); 
		query.append("      ,D4_QTY" ).append("\n"); 
		query.append("      ,D5_QTY" ).append("\n"); 
		query.append("      ,D7_QTY" ).append("\n"); 
		query.append("      ,R2_QTY" ).append("\n"); 
		query.append("      ,R5_QTY" ).append("\n"); 
		query.append("      ,R9_QTY" ).append("\n"); 
		query.append("      ,O2_QTY" ).append("\n"); 
		query.append("      ,S2_QTY" ).append("\n"); 
		query.append("      ,O4_QTY" ).append("\n"); 
		query.append("      ,O5_QTY" ).append("\n"); 
		query.append("      ,S4_QTY" ).append("\n"); 
		query.append("      ,F2_QTY" ).append("\n"); 
		query.append("      ,A2_QTY" ).append("\n"); 
		query.append("      ,F4_QTY" ).append("\n"); 
		query.append("      ,A4_QTY" ).append("\n"); 
		query.append("      ,A5_QTY" ).append("\n"); 
		query.append("      ,F5_QTY" ).append("\n"); 
		query.append("      ,D2_F  -- RED 표시여부" ).append("\n"); 
		query.append("      ,D4_F" ).append("\n"); 
		query.append("      ,D5_F" ).append("\n"); 
		query.append("      ,D7_F" ).append("\n"); 
		query.append("      ,R2_F" ).append("\n"); 
		query.append("      ,R5_F" ).append("\n"); 
		query.append("      ,R9_F" ).append("\n"); 
		query.append("      ,O2_F" ).append("\n"); 
		query.append("      ,S2_F" ).append("\n"); 
		query.append("      ,O4_F" ).append("\n"); 
		query.append("      ,S4_F" ).append("\n"); 
		query.append("      ,O5_F" ).append("\n"); 
		query.append("      ,F2_F" ).append("\n"); 
		query.append("      ,A2_F" ).append("\n"); 
		query.append("      ,F4_F" ).append("\n"); 
		query.append("      ,A4_F" ).append("\n"); 
		query.append("      ,A5_F" ).append("\n"); 
		query.append("      ,F5_F      " ).append("\n"); 
		query.append("      ,BSA" ).append("\n"); 
		query.append("      ,EQLF" ).append("\n"); 
		query.append("      ,WK_ST_DT" ).append("\n"); 
		query.append("      ,WK_END_DT    " ).append("\n"); 
		query.append("      ,DECODE(STS,'M','',VSL_CD||SKD_VOY_NO||SKD_DIR_CD) SHOW_VVD  " ).append("\n"); 
		query.append("      ,DECODE(STS,'M','',LANE)                           SHOW_LANE" ).append("\n"); 
		query.append("      ,SUBSTR(WEEK,5,2)                                  SHOW_WEEK" ).append("\n"); 
		query.append("      ,@[loc_cd]                                         LOC_CD" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT '000000' LVL" ).append("\n"); 
		query.append("          ,WEEK" ).append("\n"); 
		query.append("          ,STS " ).append("\n"); 
		query.append("          ,LANE" ).append("\n"); 
		query.append("          ,VSL_CD      -- HIDDEN" ).append("\n"); 
		query.append("          ,SKD_VOY_NO  -- HIDDEN" ).append("\n"); 
		query.append("          ,SKD_DIR_CD  -- HIDDEN      " ).append("\n"); 
		query.append("          ,YARD                          " ).append("\n"); 
		query.append("          ,ETB" ).append("\n"); 
		query.append("          ,ETB_DAY" ).append("\n"); 
		query.append("          ,D2_QTY" ).append("\n"); 
		query.append("          ,D4_QTY" ).append("\n"); 
		query.append("          ,D5_QTY" ).append("\n"); 
		query.append("          ,D7_QTY" ).append("\n"); 
		query.append("          ,R2_QTY" ).append("\n"); 
		query.append("          ,R5_QTY" ).append("\n"); 
		query.append("          ,R9_QTY" ).append("\n"); 
		query.append("          ,O2_QTY" ).append("\n"); 
		query.append("          ,S2_QTY" ).append("\n"); 
		query.append("          ,O4_QTY" ).append("\n"); 
		query.append("          ,S4_QTY" ).append("\n"); 
		query.append("          ,O5_QTY" ).append("\n"); 
		query.append("          ,F2_QTY" ).append("\n"); 
		query.append("          ,A2_QTY" ).append("\n"); 
		query.append("          ,F4_QTY" ).append("\n"); 
		query.append("          ,A4_QTY" ).append("\n"); 
		query.append("          ,A5_QTY" ).append("\n"); 
		query.append("          ,F5_QTY" ).append("\n"); 
		query.append("          ,D2_F  -- RED 표시여부" ).append("\n"); 
		query.append("          ,D4_F" ).append("\n"); 
		query.append("          ,D5_F" ).append("\n"); 
		query.append("          ,D7_F" ).append("\n"); 
		query.append("          ,R2_F" ).append("\n"); 
		query.append("          ,R5_F" ).append("\n"); 
		query.append("          ,R9_F" ).append("\n"); 
		query.append("          ,O2_F" ).append("\n"); 
		query.append("          ,S2_F" ).append("\n"); 
		query.append("          ,O4_F" ).append("\n"); 
		query.append("          ,S4_F" ).append("\n"); 
		query.append("          ,O5_F" ).append("\n"); 
		query.append("          ,F2_F" ).append("\n"); 
		query.append("          ,A2_F" ).append("\n"); 
		query.append("          ,F4_F" ).append("\n"); 
		query.append("          ,A4_F" ).append("\n"); 
		query.append("          ,A5_F" ).append("\n"); 
		query.append("          ,F5_F      " ).append("\n"); 
		query.append("          ,BSA_QTY     BSA" ).append("\n"); 
		query.append("          ,MTY_LDF_RTO EQLF" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(@[wk_st_dt], 'YYYYMMDD'), 'YYYY/MM/DD') 	WK_ST_DT  -- HIDDEN" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(@[wk_end_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_END_DT -- HIDDEN" ).append("\n"); 
		query.append("    FROM REPO_IN_RESULT       " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    -- TOTAL" ).append("\n"); 
		query.append("    SELECT '111111' LVL" ).append("\n"); 
		query.append("          ,'' WEEK" ).append("\n"); 
		query.append("          ,'' STS " ).append("\n"); 
		query.append("          ,'' LANE" ).append("\n"); 
		query.append("          ,'' VSL_CD      -- HIDDEN" ).append("\n"); 
		query.append("          ,'' SKD_VOY_NO  -- HIDDEN" ).append("\n"); 
		query.append("          ,'' SKD_DIR_CD  -- HIDDEN      " ).append("\n"); 
		query.append("          ,'' YARD                          " ).append("\n"); 
		query.append("          ,'' ETB" ).append("\n"); 
		query.append("          ,'' ETB_DAY" ).append("\n"); 
		query.append("          ,SUM(D2_QTY) D2_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(D4_QTY) D4_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(D5_QTY) D5_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(D7_QTY) D7_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(R2_QTY) R2_FCAST_QTY  " ).append("\n"); 
		query.append("          ,SUM(R5_QTY) R5_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(R9_QTY) R9_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(O2_QTY) O2_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(S2_QTY) S2_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(O4_QTY) O4_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(S4_QTY) S4_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(O5_QTY) O5_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(F2_QTY) F2_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(A2_QTY) A2_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(F4_QTY) F4_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(A4_QTY) A4_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(A5_QTY) A5_FCAST_QTY" ).append("\n"); 
		query.append("          ,SUM(F5_QTY) F5_FCAST_QTY" ).append("\n"); 
		query.append("          ,NULL D2_F  -- RED 표시여부" ).append("\n"); 
		query.append("          ,NULL D4_F" ).append("\n"); 
		query.append("          ,NULL D5_F" ).append("\n"); 
		query.append("          ,NULL D7_F" ).append("\n"); 
		query.append("          ,NULL R2_F" ).append("\n"); 
		query.append("          ,NULL R5_F" ).append("\n"); 
		query.append("          ,NULL R9_F" ).append("\n"); 
		query.append("          ,NULL O2_F" ).append("\n"); 
		query.append("          ,NULL S2_F" ).append("\n"); 
		query.append("          ,NULL O4_F" ).append("\n"); 
		query.append("          ,NULL S4_F" ).append("\n"); 
		query.append("          ,NULL O5_F" ).append("\n"); 
		query.append("          ,NULL F2_F" ).append("\n"); 
		query.append("          ,NULL A2_F" ).append("\n"); 
		query.append("          ,NULL F4_F" ).append("\n"); 
		query.append("          ,NULL A4_F" ).append("\n"); 
		query.append("          ,NULL A5_F" ).append("\n"); 
		query.append("          ,NULL F5_F           " ).append("\n"); 
		query.append("          ,NULL BSA" ).append("\n"); 
		query.append("          ,NULL EQLF" ).append("\n"); 
		query.append("    	  ,TO_CHAR(TO_DATE(@[wk_st_dt],  'YYYYMMDD'), 'YYYY/MM/DD')	WK_ST_DT" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(@[wk_end_dt], 'YYYYMMDD'), 'YYYY/MM/DD')	WK_END_DT" ).append("\n"); 
		query.append("    FROM REPO_IN_RESULT " ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("ORDER BY LVL, ETB ASC" ).append("\n"); 

	}
}