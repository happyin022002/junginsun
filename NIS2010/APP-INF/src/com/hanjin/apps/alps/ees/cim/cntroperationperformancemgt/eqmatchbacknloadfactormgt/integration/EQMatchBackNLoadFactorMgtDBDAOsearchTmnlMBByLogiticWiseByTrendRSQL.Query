<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EQMatchBackNLoadFactorMgtDBDAOsearchTmnlMBByLogiticWiseByTrendRSQL">
			<desc><![CDATA[TMNL M/B by Logistic-Wise
2012.03.26 신자영 [CHM-201216788-01] M/B 기능 보완 요청
2012.07.06 신자영 [CHM-201218595-01] M/B 기능으로 Trend 검색 시, Type별 total 컬럼 추가]]></desc>
			<sql><![CDATA[
SELECT  
		X.LOC_CD,
		X.YARD_CD,
        X.DSP_SEQ IBFLAG,
        X.TPSZ VVD,
		DECODE(Y.NO,'1','AA','2','BB','3','CC','4','DD') LINE,
		DECODE(MAX(Y.NO),'1','I/B','2','O/B','3','Balance','4','M/B(%)') DIVISION,
		DECODE	(
					MAX(Y.NO),'1',SUM(X.IN_QTY),'2',SUM(X.OUT_QTY),'3',SUM(BALANCE),'4',
					CASE
					WHEN SUM(X.IN_QTY) >= SUM(X.OUT_QTY) THEN ROUND( SUM(X.OUT_QTY) / SUM(X.IN_QTY) * 100 )
					WHEN SUM(X.OUT_QTY) >0 THEN ROUND( SUM(X.IN_QTY) / SUM(X.OUT_QTY) * -1 * 100 )
					ELSE 0
					END
				) TOTAL,
		SUM(DECODE(X.DAY_SEQ, 1,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_0,
		SUM(DECODE(X.DAY_SEQ, 2,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_1,
		SUM(DECODE(X.DAY_SEQ, 3,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_2,
		SUM(DECODE(X.DAY_SEQ, 4,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_3,
		SUM(DECODE(X.DAY_SEQ, 5,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_4,
		SUM(DECODE(X.DAY_SEQ, 6,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_5,
		SUM(DECODE(X.DAY_SEQ, 7,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_6,
		SUM(DECODE(X.DAY_SEQ, 8,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_7,
		SUM(DECODE(X.DAY_SEQ, 9,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_8,
		SUM(DECODE(X.DAY_SEQ,10,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_9,
		SUM(DECODE(X.DAY_SEQ,11,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_10,
		SUM(DECODE(X.DAY_SEQ,12,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_11,
		SUM(DECODE(X.DAY_SEQ,13,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_12,
		SUM(DECODE(X.DAY_SEQ,14,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_13,
		SUM(DECODE(X.DAY_SEQ,15,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_14,
		SUM(DECODE(X.DAY_SEQ,16,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_15,
		SUM(DECODE(X.DAY_SEQ,17,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_16,
		SUM(DECODE(X.DAY_SEQ,18,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_17,
		SUM(DECODE(X.DAY_SEQ,19,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_18,
		SUM(DECODE(X.DAY_SEQ,20,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_19,
		SUM(DECODE(X.DAY_SEQ,21,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_20,
		SUM(DECODE(X.DAY_SEQ,22,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_21,
		SUM(DECODE(X.DAY_SEQ,23,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_22,
		SUM(DECODE(X.DAY_SEQ,24,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_23,
		SUM(DECODE(X.DAY_SEQ,25,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_24,
		SUM(DECODE(X.DAY_SEQ,26,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_25
FROM    (

			SELECT	/*+ ORDERED USE_NL(O L T S) */
					/*(#if ( ${inquiryLevel} == 'R' )
					 O.RCC_CD
					 #elseif( ${inquiryLevel} == 'L' )
					 O.LCC_CD
					 #elseif( ${inquiryLevel} == 'E' )
					 O.ECC_CD
					 #elseif( ${inquiryLevel} == 'P' )
					 T.LOC_CD
					 #elseif( ${inquiryLevel} == 'Y' )
					 T.YD_CD
					 #else
					 O.RCC_CD
					 #end) */  
					SUBSTR(T.YD_CD, 1, 5)	LOC_CD,     /* inquiryLevel */
					T.YD_CD YARD_CD,
					T.CNTR_TPSZ_CD TPSZ,
					W.DAY_SEQ DAY_SEQ,
					S.DP_SEQ DSP_SEQ,
					SUM (T.IB_QTY) IN_QTY,
					SUM (T.OB_QTY) OUT_QTY,
					( SUM (T.IB_QTY) - SUM(T.OB_QTY) ) BALANCE,
					CASE
					WHEN SUM (T.IB_QTY) >= SUM (T.OB_QTY) THEN ROUND( SUM (T.OB_QTY) / SUM (T.IB_QTY) * 100 )
					WHEN SUM (T.OB_QTY) >0 THEN ROUND(  SUM (T.IB_QTY) / SUM (T.OB_QTY) * -1  * 100 )
					ELSE 0
					END AS MB

			FROM	
					MDM_EQ_ORZ_CHT		O,
					MDM_LOCATION		L,
					--CIM_LOC_MTCH_BAK_SMRY	T,
					CIM_PORT_MTCH_BAK_SMRY	T,
					CIM_TP_SZ_DP_SEQ	S,
					(
						#if ( ${period} == 'W' )
						SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ 
								PLN_YR||PLN_WK DAY_UNIT,
								ROWNUM         DAY_SEQ
						FROM    EQR_WK_PRD
						WHERE   PLN_YR||PLN_WK >= SUBSTR(@[from],0,6)
						AND     PLN_YR||PLN_WK <= SUBSTR(@[to],0,6)
						#end
						#if ( ${period} == 'M' )
					    SELECT DAY_UNIT DAY_UNIT,
					           ROWNUM   DAY_SEQ
					    FROM   (          	
            						SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     
            						FROM    EQR_WK_PRD
            						WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)
               						AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)
               						ORDER BY PLN_YR||PLN_MON
                               )
						#end
				   )                   W    
			#if (${period} == 'M')
		    WHERE T.TGT_MVMT_DT BETWEEN    @[from] AND @[to]
		    #end
		    #if (${period} == 'W')
		    WHERE T.TGT_YRWK BETWEEN    @[from] AND @[to]
		    #end

			#if (${period} == 'W') 	 								 
			AND T.TGT_YRWK = W.DAY_UNIT
			#end
			#if (${period} == 'M')
			AND SUBSTR(T.TGT_MVMT_DT,1,6) = W.DAY_UNIT	
			#end
		   
			AND T.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD
			AND T.LOC_CD       = L.LOC_CD
			AND L.SCC_CD       = O.SCC_CD	
			
			/* location */

		    #if (${inquiryLevel} == 'R') 
		    AND O.RCC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'L') 
		    AND O.LCC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'E') 
		    AND O.ECC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'P') 
		    AND T.LOC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'Y') 
		    AND T.YD_CD = @[location] 
		    #end 
	
			/* cargoType */

			#if (${cargotype} == 'F')
			AND T.FULL_MTY_CD			=	'F'		
			#end
			#if (${cargotype} == 'M')
			AND T.FULL_MTY_CD			=	'M'		
			#end


			/* tpsz */

			#if (${tpsz} == 'A') 
			AND S.CNTR_TPSZ_DIV_CD = S.CNTR_TPSZ_DIV_CD
			#else
			AND S.CNTR_TPSZ_DIV_CD = @[tpsz]
			#end

			/* rdType */

			#if (${rdtype} == 'E') 
			AND  T.RD_FLG  = 'N'
			#end
			#if (${rdtype} == 'O') 
			AND  T.RD_FLG  = 'Y'
			#end

			/* T/S CNTR */

			#if (${tscntr} == 'E') 
			AND T.TS_FLG = 'N' 
			#elseif (${tscntr} == 'O') 
			AND T.TS_FLG = 'Y' 
			#end 

			/* soc */
			
			#if (${soc} == 'E') 
		    AND T.SOC_FLG = 'N' 
		    #elseif (${soc} == 'O') 
		    AND T.SOC_FLG = 'Y' 
		    #end 

			/* company */
		
			#if (${company} == 'L')
			AND T.MVMT_CO_CD = 'L'      /* H :HJS, S :SEN, L:Hanjin Logistics */
			#elseif(${company} == 'E')
			AND T.MVMT_CO_CD IN ('H','S') 
			#end
						
			GROUP BY
			/*
			#if ( ${inquiryLevel} == 'R' )
		    O.RCC_CD,
			#elseif( ${inquiryLevel} == 'L' )
			O.LCC_CD,
			#elseif( ${inquiryLevel} == 'E' )
			O.ECC_CD,
			#elseif( ${inquiryLevel} == 'P' )
			T.LOC_CD,
			#elseif( ${inquiryLevel} == 'Y' )
			T.YD_CD,
			#else
			O.RCC_CD,
			#end
			*/
			SUBSTR(T.YD_CD, 1, 5),
			T.YD_CD,
			T.CNTR_TPSZ_CD, W.DAY_SEQ, S.DP_SEQ		

        )   X,
		(
			SELECT '1' AS NO FROM DUAL UNION SELECT '2' AS NO FROM DUAL UNION SELECT '3' AS NO FROM DUAL UNION SELECT '4' AS NO FROM DUAL
		) Y
GROUP BY X.LOC_CD, X.YARD_CD, X.DSP_SEQ, X.TPSZ, DECODE(Y.NO,'1','AA','2','BB','3','CC','4','DD')
--ORDER BY X.LOC_CD, X.YARD_CD, X.DSP_SEQ
UNION ALL
SELECT  
		X.LOC_CD,
		X.YARD_CD,
        X.DSP_SEQ IBFLAG,
        X.TPSZ VVD,
		DECODE(Y.NO,'1','AA','2','BB','3','CC','4','DD') LINE,
		DECODE(MAX(Y.NO),'1','I/B','2','O/B','3','Balance','4','M/B(%)') DIVISION,
		DECODE	(
					MAX(Y.NO),'1',SUM(X.IN_QTY),'2',SUM(X.OUT_QTY),'3',SUM(BALANCE),'4',
					CASE
					WHEN SUM(X.IN_QTY) >= SUM(X.OUT_QTY) THEN ROUND( SUM(X.OUT_QTY) / SUM(X.IN_QTY) * 100 )
					WHEN SUM(X.OUT_QTY) >0 THEN ROUND( SUM(X.IN_QTY) / SUM(X.OUT_QTY) * -1 * 100 )
					ELSE 0
					END
				) TOTAL,
		SUM(DECODE(X.DAY_SEQ, 1,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_0,
		SUM(DECODE(X.DAY_SEQ, 2,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_1,
		SUM(DECODE(X.DAY_SEQ, 3,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_2,
		SUM(DECODE(X.DAY_SEQ, 4,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_3,
		SUM(DECODE(X.DAY_SEQ, 5,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_4,
		SUM(DECODE(X.DAY_SEQ, 6,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_5,
		SUM(DECODE(X.DAY_SEQ, 7,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_6,
		SUM(DECODE(X.DAY_SEQ, 8,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_7,
		SUM(DECODE(X.DAY_SEQ, 9,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_8,
		SUM(DECODE(X.DAY_SEQ,10,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_9,
		SUM(DECODE(X.DAY_SEQ,11,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_10,
		SUM(DECODE(X.DAY_SEQ,12,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_11,
		SUM(DECODE(X.DAY_SEQ,13,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_12,
		SUM(DECODE(X.DAY_SEQ,14,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_13,
		SUM(DECODE(X.DAY_SEQ,15,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_14,
		SUM(DECODE(X.DAY_SEQ,16,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_15,
		SUM(DECODE(X.DAY_SEQ,17,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_16,
		SUM(DECODE(X.DAY_SEQ,18,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_17,
		SUM(DECODE(X.DAY_SEQ,19,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_18,
		SUM(DECODE(X.DAY_SEQ,20,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_19,
		SUM(DECODE(X.DAY_SEQ,21,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_20,
		SUM(DECODE(X.DAY_SEQ,22,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_21,
		SUM(DECODE(X.DAY_SEQ,23,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_22,
		SUM(DECODE(X.DAY_SEQ,24,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_23,
		SUM(DECODE(X.DAY_SEQ,25,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_24,
		SUM(DECODE(X.DAY_SEQ,26,DECODE(Y.NO,'1',X.IN_QTY,'2',X.OUT_QTY,'3',BALANCE,'4',MB),0)) AS qty_25
FROM    (

			SELECT	/*+ ORDERED USE_NL(O L T S) */
					/*(#if ( ${inquiryLevel} == 'R' )
					 O.RCC_CD
					 #elseif( ${inquiryLevel} == 'L' )
					 O.LCC_CD
					 #elseif( ${inquiryLevel} == 'E' )
					 O.ECC_CD
					 #elseif( ${inquiryLevel} == 'P' )
					 T.LOC_CD
					 #elseif( ${inquiryLevel} == 'Y' )
					 T.YD_CD
					 #else
					 O.RCC_CD
					 #end) */  
					--SUBSTR(T.YD_CD, 1, 5)	LOC_CD,     /* inquiryLevel */
					'ZZZZZ'	LOC_CD,
					--T.YD_CD YARD_CD,
					'ZZZZZZZ' YARD_CD,
					T.CNTR_TPSZ_CD TPSZ,
					W.DAY_SEQ DAY_SEQ,
					S.DP_SEQ DSP_SEQ,
					SUM (T.IB_QTY) IN_QTY,
					SUM (T.OB_QTY) OUT_QTY,
					( SUM (T.IB_QTY) - SUM(T.OB_QTY) ) BALANCE,
					CASE
					WHEN SUM (T.IB_QTY) >= SUM (T.OB_QTY) THEN ROUND( SUM (T.OB_QTY) / SUM (T.IB_QTY) * 100 )
					WHEN SUM (T.OB_QTY) >0 THEN ROUND(  SUM (T.IB_QTY) / SUM (T.OB_QTY) * -1  * 100 )
					ELSE 0
					END AS MB

			FROM	
					MDM_EQ_ORZ_CHT		O,
					MDM_LOCATION		L,
					--CIM_LOC_MTCH_BAK_SMRY	T,
					CIM_PORT_MTCH_BAK_SMRY	T,
					CIM_TP_SZ_DP_SEQ	S,
					(
						#if ( ${period} == 'W' )
						SELECT  /*+ INDEX ( XPKEQR_WK_PRD ) */ 
								PLN_YR||PLN_WK DAY_UNIT,
								ROWNUM         DAY_SEQ
						FROM    EQR_WK_PRD
						WHERE   PLN_YR||PLN_WK >= SUBSTR(@[from],0,6)
						AND     PLN_YR||PLN_WK <= SUBSTR(@[to],0,6)
						#end
						#if ( ${period} == 'M' )
					    SELECT DAY_UNIT DAY_UNIT,
					           ROWNUM   DAY_SEQ
					    FROM   (          	
            						SELECT  DISTINCT PLN_YR||PLN_MON  DAY_UNIT     
            						FROM    EQR_WK_PRD
            						WHERE   PLN_YR||PLN_MON >= SUBSTR(@[from],0,6)
               						AND     PLN_YR||PLN_MON <= SUBSTR(@[to],0,6)
               						ORDER BY PLN_YR||PLN_MON
                               )
						#end
				   )                   W    
			#if (${period} == 'M')
		    WHERE T.TGT_MVMT_DT BETWEEN    @[from] AND @[to]
		    #end
		    #if (${period} == 'W')
		    WHERE T.TGT_YRWK BETWEEN    @[from] AND @[to]
		    #end

			#if (${period} == 'W') 	 								 
			AND T.TGT_YRWK = W.DAY_UNIT
			#end
			#if (${period} == 'M')
			AND SUBSTR(T.TGT_MVMT_DT,1,6) = W.DAY_UNIT	
			#end
		   
			AND T.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD
			AND T.LOC_CD       = L.LOC_CD
			AND L.SCC_CD       = O.SCC_CD	
			
			/* location */

		    #if (${inquiryLevel} == 'R') 
		    AND O.RCC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'L') 
		    AND O.LCC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'E') 
		    AND O.ECC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'P') 
		    AND T.LOC_CD = @[location] 
		    #elseif (${inquiryLevel} == 'Y') 
		    AND T.YD_CD = @[location] 
		    #end 
	
			/* cargoType */

			#if (${cargotype} == 'F')
			AND T.FULL_MTY_CD			=	'F'		
			#end
			#if (${cargotype} == 'M')
			AND T.FULL_MTY_CD			=	'M'		
			#end


			/* tpsz */

			#if (${tpsz} == 'A') 
			AND S.CNTR_TPSZ_DIV_CD = S.CNTR_TPSZ_DIV_CD
			#else
			AND S.CNTR_TPSZ_DIV_CD = @[tpsz]
			#end

			/* rdType */

			#if (${rdtype} == 'E') 
			AND  T.RD_FLG  = 'N'
			#end
			#if (${rdtype} == 'O') 
			AND  T.RD_FLG  = 'Y'
			#end

			/* T/S CNTR */

			#if (${tscntr} == 'E') 
			AND T.TS_FLG = 'N' 
			#elseif (${tscntr} == 'O') 
			AND T.TS_FLG = 'Y' 
			#end 

			/* soc */
			
			#if (${soc} == 'E') 
		    AND T.SOC_FLG = 'N' 
		    #elseif (${soc} == 'O') 
		    AND T.SOC_FLG = 'Y' 
		    #end 

			/* company */
		
			#if (${company} == 'L')
			AND T.MVMT_CO_CD = 'L'      /* H :HJS, S :SEN, L:Hanjin Logistics */
			#elseif(${company} == 'E')
			AND T.MVMT_CO_CD IN ('H','S') 
			#end
						
			GROUP BY
			/*
			#if ( ${inquiryLevel} == 'R' )
		    O.RCC_CD,
			#elseif( ${inquiryLevel} == 'L' )
			O.LCC_CD,
			#elseif( ${inquiryLevel} == 'E' )
			O.ECC_CD,
			#elseif( ${inquiryLevel} == 'P' )
			T.LOC_CD,
			#elseif( ${inquiryLevel} == 'Y' )
			T.YD_CD,
			#else
			O.RCC_CD,
			#end
			*/
			T.CNTR_TPSZ_CD, W.DAY_SEQ, S.DP_SEQ		

        )   X,
		(
			SELECT '1' AS NO FROM DUAL UNION SELECT '2' AS NO FROM DUAL UNION SELECT '3' AS NO FROM DUAL UNION SELECT '4' AS NO FROM DUAL
		) Y
GROUP BY X.LOC_CD, X.YARD_CD, X.DSP_SEQ, X.TPSZ, DECODE(Y.NO,'1','AA','2','BB','3','CC','4','DD')
--ORDER BY X.LOC_CD, X.YARD_CD, X.DSP_SEQ
ORDER BY LOC_CD, YARD_CD, IBFLAG, LINE			]]></sql>
			<params>
				<param name="from" type="12" value="" out="N"/>
				<param name="to" type="12" value="" out="N"/>
				<param name="location" type="12" value="" out="N"/>
				<param name="tpsz" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
