<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYWeeklySimulationDBDAOsearchMtyWeeklySimulationOriginRSQL">
			<desc><![CDATA[해당 셀의 원래 값을 찾아온다]]></desc>
			<sql><![CDATA[
/*
--  1.정의 : 현재데이터 조회
--  2.변수
--    :loc_grp_cd
--    :loc_cd
--    :week 
--    :cntr_tpsz
--    :head_week  -- grid head 주차정보(1 : -1주차, 2 : 0주차, 3: 1주차, 4 : 2주차, 5 : 3주차, 6 : 4주차)
--    :sim_tp_cd
*/
WITH 
BASIC_WEEK AS
(
    SELECT PLN_YR||PLN_WK WEEK
          ,TO_CHAR(TO_DATE(WK_ST_DT , 'YYYYMMDD'), 'YYYYMMDD') WK_ST_DT
          ,TO_CHAR(TO_DATE(WK_END_DT, 'YYYYMMDD'), 'YYYYMMDD') WK_END_DT       
          ,ROWNUM-1 ROW_SEQ 
    FROM EQR_WK_PRD
    WHERE WK_ST_DT  >= TO_CHAR(SYSDATE-(7*3), 'YYYYMMDD') -- -2주차부터
    AND   WK_END_DT <= TO_CHAR(SYSDATE+(7*5), 'YYYYMMDD') -- +4주차까지
    ORDER BY ROWNUM
)

#if(${sim_tp_cd} == 'RO')
-- REPO OUT 조회
SELECT WEEK
      ,LOC_CD
      ,LOC_GRP_CD
      ,CNTR_TPSZ_CD
      ,NVL(SUM(CNTR_QTY), 0) AS CNTR_QTY
FROM
(              
    -- REPO OUT 포함 (MINUS OTHER )
    SELECT A.FCAST_YRWK WEEK
          ,A.LOC_CD
          ,A.LOC_GRP_CD
          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) 
                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       
                END CNTR_QTY
    FROM EQR_MTY_BAL_RPT_OTR A
        ,COM_INTG_CD_DTL B
    WHERE B.INTG_CD_ID        = 'CD00830'         
    AND   A.INP_YRWK          = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1WEEK (HARD CODING)
    AND   A.FCAST_YRWK        = @[week]  
    AND   A.LOC_CD            = @[loc_cd]
    AND   A.LOC_GRP_CD        = @[loc_grp_cd]
    AND   A.MTY_BAL_OTR_TP_CD = '4' --MINUS OTHER (REPO IN 에 포함)

    UNION ALL
    
    -- REPO OUT 조회(메인)         
    SELECT A.FCAST_YRWK WEEK
          ,A.LOC_CD
          ,A.LOC_GRP_CD
          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0)
                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       
                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       
                END CNTR_QTY  
    FROM EQR_MTY_BAL_RPT_REPO_OUT A
        ,COM_INTG_CD_DTL B    
    WHERE A.LOC_GRP_CD    = @[loc_grp_cd] --L/E/S
    AND   A.LOC_CD        = @[loc_cd] 
    AND   A.INP_YRWK      = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1WEEK(HARD CODING)              
    AND   A.FCAST_YRWK    = @[week]    
    AND   B.INTG_CD_ID    = 'CD00830'

 
) 
WHERE CNTR_TPSZ_CD = UPPER(@[cntr_tpsz])
GROUP BY WEEK 
        ,LOC_CD
        ,LOC_GRP_CD
        ,CNTR_TPSZ_CD 

#elseif(${sim_tp_cd} == 'OF')
-- OP FORECAST
SELECT WEEK
      ,LOC_CD
      ,LOC_GRP_CD
      ,CNTR_TPSZ_CD
      ,NVL(CNTR_QTY, 0) AS CNTR_QTY
FROM
(                  
    SELECT A.FCAST_YRWK WEEK
          ,A.LOC_CD
          ,A.LOC_GRP_CD
          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) 
                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)       
                END CNTR_QTY   
    FROM EQR_MTY_BAL_RPT A
        ,COM_INTG_CD_DTL B     
    WHERE A.CO_CD         = 'H'
    AND   A.MTY_BAL_TP_CD = '3'         --OUT FORECAST
    AND   A.LOC_GRP_CD    = @[loc_grp_cd] --L/E/S
    AND   A.LOC_CD        = @[loc_cd] 
    AND   A.INP_YRWK      = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1WEEK(HARD CODING)                
    AND   A.FCAST_YRWK    = @[week] 
    AND   B.INTG_CD_ID    = 'CD00830'
    GROUP BY A.FCAST_YRWK 
            ,A.LOC_CD
            ,A.LOC_GRP_CD
            ,B.INTG_CD_VAL_CTNT    
) 
WHERE CNTR_TPSZ_CD = UPPER(@[cntr_tpsz])

#elseif(${sim_tp_cd} == 'IF')
-- MG FORECAST
SELECT WEEK
      ,LOC_CD
      ,LOC_GRP_CD
      ,CNTR_TPSZ_CD
      ,NVL(CNTR_QTY, 0)  AS CNTR_QTY
FROM
(                    
    SELECT A.FCAST_YRWK WEEK
          ,A.LOC_CD
          ,A.LOC_GRP_CD
          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(SUM(D2_FCAST_QTY),0) 
                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(SUM(D4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(SUM(D5_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(SUM(D7_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(SUM(R2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(SUM(R5_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(SUM(R9_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(SUM(O2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(SUM(O4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(SUM(S2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(SUM(S4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(SUM(F2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(SUM(F4_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(SUM(F5_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(SUM(A2_FCAST_QTY),0)       
                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(SUM(A4_FCAST_QTY),0)       
                END CNTR_QTY    
    FROM EQR_MTY_BAL_RPT A
        ,COM_INTG_CD_DTL B        
    WHERE A.CO_CD         = 'H'
    AND   A.MTY_BAL_TP_CD = '1'         --(MG)IF FORECAST
    AND   A.LOC_GRP_CD    = @[loc_grp_cd] --L/E/S
    AND   A.LOC_CD        = @[loc_cd] 
    AND   A.INP_YRWK      = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1WEEK(HARD CODING)                
    AND   A.FCAST_YRWK    = @[week] 
    AND   B.INTG_CD_ID    = 'CD00830'
    GROUP BY A.FCAST_YRWK 
            ,A.LOC_CD
            ,A.LOC_GRP_CD
            ,B.INTG_CD_VAL_CTNT             
) 
WHERE CNTR_TPSZ_CD = UPPER(@[cntr_tpsz])

#elseif(${sim_tp_cd} == 'RI')

-- REPO IN 조회
,ADD_DAY AS
(
    -- REPO IN 집계 LCC 가중치
    SELECT B.LCC_CD
          ,B.ECC_CD
          ,B.SCC_CD
          ,B.LOC_CD
          ,NVL(A.REPO_ADD_DYS, 0) DAYS -- 테이블에 등록되지 않은 LCC는 0
    FROM EQR_WK_PRD_ADD_DY A,
         (                                  
             SELECT DISTINCT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD 
             FROM MDM_EQ_ORZ_CHT A,
                  MDM_LOCATION B
             WHERE A.SCC_CD = B.SCC_CD
             AND   B.SCC_CD IN (
                                   SELECT SCC_CD 
                                   FROM MDM_EQ_ORZ_CHT 
                                   WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                               #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                 #if( ${loc_grp_cd} == 'L' )
                                   AND   LCC_CD = @[loc_cd]
                                 #elseif( ${loc_grp_cd} == 'E' )
                                   AND   ECC_CD = @[loc_cd]    
                                 #else    --SCC
                                   AND   SCC_CD = @[loc_cd]    
                                 #end
                               #end                                      
                               )                
             AND A.DELT_FLG = 'N'                                                                                           
         ) B
    WHERE A.LCC_CD(+) = B.LCC_CD -- 테이블에 등록되지 않은 LCC 0으로 조회                
)

,DIVISION AS 
(
	SELECT	L4, L3, L2, L1, M0, R1, R2
	FROM	(
				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4,
                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3,
						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2,
						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1,
						PLN_YR||PLN_WK										        M0,
						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1,
						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2
				FROM	EQR_WK_PRD
			)
	WHERE   M0  = @[week] 	
)	

,REPOIN_VVD AS
(
	SELECT DISTINCT VVD
    FROM
    (
    SELECT WEEKDIVISION
          ,WEEK
          ,DIV
          ,VVD
          ,LANE
          ,REMARKFLAG
          ,DCLPTSQL
          ,REMARK
          ,CODCFMCTSCD
          ,FIRSTETB
          ,MNLINPFLG
    FROM
    (
        SELECT WEEKDIVISION
              ,WEEK
              ,DIV
              ,VVD
              ,LANE
              ,REMARKFLAG
              ,DCLPTSQL
              ,REMARK
              ,CODCFMCTSCD
              ,FIRSTETB
              ,MNLINPFLG
              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		
        FROM
        (  
        SELECT
        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )
        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )
        		INDEX ( OCNT XPKMDM_COUNTRY )
        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )
        		INDEX ( WEK XAK1EQR_WK_PRD )
        		*/
        
        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1',
                                                DIV.L3,	'0', 
                                                DIV.L2,	'1',
        										DIV.L1,	'2',
        										DIV.M0,	'3',
        										DIV.R1,	'4',
        										DIV.R2,	'5',
        												NULL) weekDivision,
        												/*	WEEK_DIV	*/
        
        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/
        
        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/
        
        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd,
        		ORG.SLAN_CD						lane,	/*	LANE		*/
        
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	
        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */
        		RMK.DIFF_RMK			remark,
        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		DST.VPS_ETB_DT			firstetb,
        		EVD.MNL_INP_FLG			mnlInpFlg
        
        FROM	
        		(
        
        			SELECT	
        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */
        					VPS2.SLAN_CD							SLAN_CD     ,
        					VPS2.VSL_CD								VSL_CD      ,			
        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		
        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, 
        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	,
        					
        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	
        					/*
        					VPS2.VPS_PORT_CD						VPS_PORT_CD ,
        					*/
        					(
        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ
        						FROM    VSK_VSL_PORT_SKD    VPS1
        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD
        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO
        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD
        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ
        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */
        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        						AND     ROWNUM = 1
        
        					)										FM_PKEY												
        			FROM	
        					(
        						SELECT	M2_START	START_DATE,
        								P2_END 		END_DATE				
        						FROM	(
        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ 
        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,  -- -3주차부터 조회                                           
        											PLN_YR||PLN_WK										CUR_WEEK,
        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                 
        									FROM	EQR_WK_PRD    
        								)
        						WHERE	CUR_WEEK	=	@[week]
        					)					PERIOD	,
        
        					VSK_VSL_PORT_SKD	VPS2,	
        					MDM_COUNTRY			CNT2,	
        					MDM_SUBCONTINENT	SCNT2			
        
        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')
        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999
        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */
        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */
        			AND		VPS2.CLPT_SEQ		<>	'1'
        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)
        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD
        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    
        		
        		)					DST		,
        		VSK_VSL_PORT_SKD	ORG		,
        		MDM_COUNTRY			OCNT	,	
        		MDM_SUBCONTINENT	OSCNT	,
        		--MDM_DTL_REV_LANE	RLN		,
        		(
                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ 
        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD
                    FROM	BSA_VVD_MST   -- 108 건
        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			
        		)                   TRD     ,
        		EQR_WK_PRD			WEK		,
        		DIVISION            DIV     ,
        		EQR_MTY_COD_VVD		EVD		,
        		EQR_MTY_COD_RMK     RMK
        WHERE   ORG.VSL_CD			=	DST.VSL_CD
        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO
        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD
        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)
        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)
        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)
        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD
        -- AND     OSCNT.CONTI_CD		<>    'A'  
        
        AND		ORG.SLAN_CD			=	TRD.LANE_CD
        AND	(
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR		
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )
               OR
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR 
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )
               
        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬
        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬
		OR
	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) 
		OR		
		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
        OR
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
		OR 
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	

        		
            )
        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') 
        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT
        							AND			WEK.WK_END_DT
        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)
        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)
        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)
        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) 
        UNION ALL
        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */
        
        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',
                                                DV.L3,	'0',	
                                                DV.L2,	'1',
        										DV.L1,	'2',
        										DV.M0,	'3',
        										DV.R1,	'4',
        										DV.R2,	'5',
        											NULL)	weekDivision,		/*	WEEK_DIV	*/
        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/
        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			
        		VD.SLAN_CD									lane,				/*	LANE		*/
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/
        	--	1 dclptsql,
        		(
        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        					VPS1.CLPT_SEQ
        			FROM	VSK_VSL_PORT_SKD	VPS1,
        			        MDM_COUNTRY         CNT,    
        					MDM_SUBCONTINENT    SCT   
        
        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              
        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          
        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD
        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    
        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )
        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD
                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD
        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */
        			AND		ROWNUM				=	1
        		)											dclptsql,
        		RMK.DIFF_RMK								remark,				/*	REMARK		*/
        		
        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/
        		'21001231'				firstetb,
        		VD.MNL_INP_FLG			mnlInpFlg
        FROM    DIVISION            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_VVD		SV,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */
        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */
        AND		VD.VSL_CD			=	PT.VSL_CD		
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		VD.VSL_CD			=	SV.VSL_CD			(+)
        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)
        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)
        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)
        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)
        
        UNION ALL
        
        /* To Get Arelady Simulated Data Without Vessel Schedule */
        
        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */
                DISTINCT		
        		DECODE	( 
        					VD.N1ST_ETB_YRWK , 
                            DV.L4, '-1',
                            DV.L3, '0',
                            DV.L2, '1',
        					DV.L1, '2',
        					DV.M0, '3',
        					DV.R1, '4',
        					DV.R2, '5',
        					NULL
        				)									weekDivision,	/* WEEK_DIV */
        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */
        		VD.COD_CFM_STS_CD							div			,	/* DIV   */
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   
        		VD.SLAN_CD									lane		,	/* LANE  */
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */
        		1 dclptsql,
        		RMK.DIFF_RMK									remark		,	/* REMARK  */
        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		VD.N1ST_ETB_YRWK							firstetb,
        		VD.MNL_INP_FLG								mnlinpflg
        
        FROM    DIVISION            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */
        AND		VD.VSL_CD			=	PT.VSL_CD  
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO 
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD 
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD 
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)
        ) 
    ) 
    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거
    )
)

	#if( ${head_week} == 2 )  
    -- Current Week 에서만 사용 (VD 동일지역 이송을 뺀 로직이 추가됨)
    -- Repo In (PLUS OTHER +COD SIMULATION - 동일지역 VD이송 제거 )             
    SELECT A.WEEK WEEK
          ,A.LOC_CD                                          
          ,@[loc_grp_cd] LOC_GRP_CD
          ,'RI' WKY_SIM_TP_CD
          ,A.CNTR_TPSZ_CD
          ,SUM(A.CNTR_QTY) CNTR_QTY
          ,'N' TMP_SAV_FLG                   
    FROM 
    (   
        -- PLUS OTHER 
        -- INP_YRWK가 -1WEEK 가 곧 현재주차에 사용된다.
        SELECT A.FCAST_YRWK WEEK
              ,A.LOC_CD
              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) 
                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       
                    END CNTR_QTY
        FROM EQR_MTY_BAL_RPT_OTR A
            ,COM_INTG_CD_DTL B
        WHERE B.INTG_CD_ID        = 'CD00830'         
        AND   A.INP_YRWK          = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- +other는 -1WEEK가 곧 현재주차로 인식된다.
        AND   A.FCAST_YRWK        = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]) 
        AND   A.LOC_CD            = @[loc_cd]
        AND   A.LOC_GRP_CD        = @[loc_grp_cd]
        AND   A.MTY_BAL_OTR_TP_CD = 2 -- PLUS OTHER (REPO IN 에 포함)

        UNION ALL
		-- COD SIMULATION - 동일지역 VD 데이터

        SELECT A.WEEK WEEK
             #if ( ${loc_grp_cd} == 'L' )
              ,C.LCC_CD LOC_CD
             #elseif( ${loc_grp_cd} == 'E' )
              ,C.ECC_CD LOC_CD    
             #else  --'S'
              ,C.SCC_CD LOC_CD                          
             #end                                   
              ,A.CNTR_TPSZ_CD
              ,SUM(A.CNTR_QTY) CNTR_QTY                
        FROM 
        ( 
            SELECT B.WEEK WEEK
                  ,B.VSL_CD
                  ,B.SKD_VOY_NO
                  ,B.SKD_DIR_CD
                  ,B.SLAN_CD
                  ,B.YD_CD    
                  ,B.CNTR_TPSZ_CD               
                  -- RI 수량 - VD 수량 빼기(결과값이 0보다 작으면 0처리)                                                                 
                  ,CASE WHEN SUM(NVL(B.CNTR_QTY,0)-NVL(A.CNTR_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.CNTR_QTY,0)-NVL(A.CNTR_QTY,0)) END CNTR_QTY         
            FROM
            (   
                -- MVMT VD  ( LCC별 시작일부터 이번주 월요일까지 )
                SELECT X.WEEK
                      ,A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,A.VSL_LANE_CD 
                      ,A.YD_CD
                      ,A.ETD_DT ETB_DT
	        		  ,A.CNTR_TPSZ_CD
	        		  ,SUM(A.CNTR_QTY) CNTR_QTY                                                                        
                FROM EQR_MTY_BAL_RPT_DCHG_SNAP A       
                    ,BASIC_WEEK X      
                    ,ADD_DAY Y                                      
                WHERE A.ETD_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE((SELECT TO_CHAR(NEXT_DAY(SYSDATE, 2)-7, 'YYYYMMDD') FROM DUAL), 'YYYYMMDD')+0.99999                      
                AND   X.ROW_SEQ        = @[head_week] -- 현재주차
                AND   SUBSTR(A.YD_CD, 0, 5)  = Y.LOC_CD (+)   
                AND   A.YD_CD IN (
		                            SELECT A.YD_CD FROM MDM_YARD A
                                                       ,MDM_LOCATION B
                                    WHERE A.LOC_CD = B.LOC_CD                   
                                    AND   B.SCC_CD IN ( 
                                                         SELECT SCC_CD 
                                                         FROM MDM_EQ_ORZ_CHT 
                                                         WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                         AND   DELT_FLG = 'N'
                                                     #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                       #if( ${loc_grp_cd} == 'L' )
                                                         AND   LCC_CD = @[loc_cd]
                                                       #elseif( ${loc_grp_cd} == 'E' )
                                                         AND   ECC_CD = @[loc_cd]    
                                                       #else    --SCC
                                                         AND   SCC_CD = @[loc_cd]    
                                                       #end
                                                     #end        
                                                       )
								 )
	        	GROUP BY X.WEEK
                        ,A.VSL_CD
                        ,A.SKD_VOY_NO
                        ,A.SKD_DIR_CD
                        ,A.VSL_LANE_CD
                        ,A.YD_CD
                        ,A.ETD_DT
                        ,A.CNTR_TPSZ_CD
            
            ) A
	        ,(
                -- COD SIMULATION 
                SELECT A.WEEK
                      ,A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,A.SLAN_CD
                      ,A.YD_CD          
                      ,A.CNTR_TPSZ_CD
                      ,SUM(A.CNTR_QTY) CNTR_QTY                
                FROM 
                ( 
                	-- BAY PLAN, I
                    SELECT B.WEEK
               	          ,A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,B.SLAN_CD
                          ,A.POD_CD
                          ,B.YD_CD
                          ,B.VPS_ETB_DT ETB_DT
                          ,'I' DIV
                          ,A.CNTR_TPSZ_CD
                          ,COUNT(1) CNTR_QTY
                    FROM OPF_BAY_PLN_LDIS A,
                    ( 
                        SELECT A.VSL_CD
                              ,A.SKD_VOY_NO
                              ,A.SKD_DIR_CD
                              ,A.SLAN_CD
                              ,A.VPS_PORT_CD
                              ,A.YD_CD
                              ,A.VPS_ETB_DT
                              ,X.WEEK                           
                        FROM VSK_VSL_PORT_SKD A
                            ,REPOIN_VVD Z
                            ,BASIC_WEEK X
                            ,ADD_DAY Y
                        WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                        AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                        AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                        AND   A.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                        SELECT SCC_CD 
                                                                        FROM MDM_EQ_ORZ_CHT 
                                                                        WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                                        AND   DELT_FLG = 'N'
                                                                       #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                                         #if( ${loc_grp_cd} == 'L' )
                                                                           AND   LCC_CD = @[loc_cd]
                                                                         #elseif( ${loc_grp_cd} == 'E' )
                                                                           AND   ECC_CD = @[loc_cd]    
                                                                         #else    --SCC
                                                                           AND   SCC_CD = @[loc_cd]    
                                                                         #end
                                                                       #end                                                                                                          
                                                                     )
                                                )
                        AND   A.CLPT_IND_SEQ = '1'	     
                        AND   A.VPS_PORT_CD(+) = Y.LOC_CD    
                        AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999                              
                        AND   X.ROW_SEQ        = @[head_week] -- 0주차
            
                    ) B
                    WHERE A.LODG_DCHG_IND_CD =	'C'
                    AND	  A.FULL_MTY_CD	     =	'E'
                    AND	  A.CRR_CD		     =	'SML'
                    AND   A.VSL_CD           = B.VSL_CD
                    AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
                    AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
                    AND   A.POD_CD           = B.VPS_PORT_CD
                    GROUP BY B.WEEK
                            ,A.VSL_CD
                            ,A.SKD_VOY_NO
                            ,A.SKD_DIR_CD
                            ,B.SLAN_CD
                            ,A.POD_CD
                            ,B.YD_CD
                            ,B.VPS_ETB_DT
                            ,A.CNTR_TPSZ_CD
            
                    UNION ALL
                    
                    -- SIMULATION, CONFIRMATION, BASIC 
                    SELECT Z.WEEK
                          ,Z.VSL_CD
                          ,Z.SKD_VOY_NO
                          ,Z.SKD_DIR_CD
                          ,Z.SLAN_CD
                          ,Z.VPS_PORT_CD POD_CD
                          ,Z.YD_CD
                          ,Z.VPS_ETB_DT ETB_DT
                          ,P.COD_CFM_DIV_CD DIV
                          ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
                          ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(P.D2_QTY,0) 
                                WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(P.D4_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(P.D5_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(P.D7_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(P.R2_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(P.R5_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(P.R9_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(P.O2_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(P.O4_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(P.S2_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(P.S4_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(P.F2_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(P.F4_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(P.F5_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(P.A2_QTY,0)       
                                WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(P.A4_QTY,0)       
                                END CNTR_QTY
                    FROM EQR_MTY_COD_VVD  V
                        ,EQR_MTY_COD_PORT P                        
                        ,COM_INTG_CD_DTL B 
                        ,(
                            SELECT A.VSL_CD
                                  ,A.SKD_VOY_NO
                                  ,A.SKD_DIR_CD
                                  ,A.SLAN_CD
                                  ,A.VPS_PORT_CD
                                  ,A.YD_CD
                                  ,A.VPS_ETB_DT
                                  ,X.WEEK
                            FROM VSK_VSL_PORT_SKD A
                                ,REPOIN_VVD Z
                                ,ADD_DAY Y
                                ,BASIC_WEEK X       
                            WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                            AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                            AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                 
                            AND   A.VPS_PORT_CD IN (
                                                       SELECT LOC_CD FROM MDM_LOCATION 
                                                       WHERE SCC_CD IN ( 
                                                                           SELECT SCC_CD 
                                                                           FROM MDM_EQ_ORZ_CHT 
                                                                           WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                                           AND   DELT_FLG = 'N'
                                                                       #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                                         #if( ${loc_grp_cd} == 'L' )
                                                                           AND   LCC_CD = @[loc_cd]
                                                                         #elseif( ${loc_grp_cd} == 'E' )
                                                                           AND   ECC_CD = @[loc_cd]    
                                                                         #else    --SCC
                                                                           AND   SCC_CD = @[loc_cd]    
                                                                         #end
                                                                       #end                                                                                                        
                                                                        )
                                                  )                                                 
                            AND   A.CLPT_IND_SEQ      = '1'	                        
                            AND   A.VPS_PORT_CD(+)    = Y.LOC_CD 
                            AND	  A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS  AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999      
                            AND   X.ROW_SEQ           = @[head_week] -- 0주차                               
	        
                        ) Z                                                              
                    WHERE B.INTG_CD_ID      = 'CD00830'                               
                    AND	  V.VSL_CD			=	P.VSL_CD
                    AND	  V.SKD_VOY_NO		=	P.SKD_VOY_NO
                    AND	  V.SKD_DIR_CD		=	P.SKD_DIR_CD
                    AND	  V.COD_CFM_DIV_CD	=	P.COD_CFM_DIV_CD
                    AND	  'D'				=	P.LODG_DCHG_DIV_CD
                    AND   P.VSL_CD          = Z.VSL_CD
                    AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
                    AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
                    AND   P.PORT_CD         = Z.VPS_PORT_CD                                                                
                ) A,
                (
                    SELECT VSL_CD
                          ,SKD_VOY_NO
                          ,SKD_DIR_CD
                          ,VPS_PORT_CD
                          ,DIV
                          ,WEEK
                    FROM 
                    (    
                        -- VVD 별 I/S/C 확인
                        SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                              ,B.VSL_CD
                              ,B.SKD_VOY_NO
                              ,B.SKD_DIR_CD
                              ,B.VPS_PORT_CD
                              ,NVL(A.COD_CFM_STS_CD,'I') DIV
                              ,X.WEEK
                        FROM VSK_VSL_PORT_SKD B
                            ,EQR_MTY_COD_VVD A
                            ,BASIC_WEEK X
                            ,ADD_DAY Y
                        WHERE B.VSL_CD        = A.VSL_CD(+)
                        AND   B.SKD_VOY_NO    = A.SKD_VOY_NO(+)
                        AND   B.SKD_DIR_CD    = A.SKD_DIR_CD(+)  
                        AND   B.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                        SELECT SCC_CD 
                                                                        FROM MDM_EQ_ORZ_CHT 
                                                                        WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                                        AND   DELT_FLG = 'N'
                                                                    #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                                      #if( ${loc_grp_cd} == 'L' )
                                                                        AND   LCC_CD = @[loc_cd]
                                                                      #elseif( ${loc_grp_cd} == 'E' )
                                                                        AND   ECC_CD = @[loc_cd]    
                                                                      #else    --SCC
                                                                        AND   SCC_CD = @[loc_cd]    
                                                                      #end
                                                                    #end                                                                                                               
                                                                     )
                                               )
                        AND   B.CLPT_IND_SEQ = '1'
                        AND   B.VPS_PORT_CD(+)= Y.LOC_CD                                                                                              
                        AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999                           
                        AND   X.ROW_SEQ       = @[head_week] -- 0주차
                        AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외
                      
                    ) 
                    WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
                ) B
                WHERE A.WEEK       = B.WEEK
                AND   A.VSL_CD     = B.VSL_CD
                AND   A.SKD_VOY_NO = B.SKD_VOY_NO
                AND   A.SKD_DIR_CD = B.SKD_DIR_CD
                AND   A.POD_CD     = B.VPS_PORT_CD
                AND   A.DIV        = B.DIV
                
                GROUP BY A.WEEK
                        ,A.VSL_CD
                        ,A.SKD_VOY_NO
                        ,A.SKD_DIR_CD
                        ,A.SLAN_CD
                        ,A.YD_CD          
                        ,A.CNTR_TPSZ_CD
            
	        ) B --COD SIMULATION 종료
            WHERE  A.VSL_CD      (+) = B.VSL_CD
            AND    A.SKD_VOY_NO  (+) = B.SKD_VOY_NO
            AND    A.SKD_DIR_CD  (+) = B.SKD_DIR_CD
            AND    A.VSL_LANE_CD (+) = B.SLAN_CD
            AND    A.YD_CD       (+) = B.YD_CD
	        AND    A.CNTR_TPSZ_CD(+) = B.CNTR_TPSZ_CD	                
            
            GROUP BY B.WEEK
                    ,B.VSL_CD
                    ,B.SKD_VOY_NO
                    ,B.SKD_DIR_CD
                    ,B.SLAN_CD
                    ,B.YD_CD  
                    ,B.CNTR_TPSZ_CD 
	    ) A
        ,(
            SELECT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD, C.YD_CD
            FROM MDM_EQ_ORZ_CHT A
                ,MDM_LOCATION B
                ,MDM_YARD C
            WHERE A.SCC_CD = B.SCC_CD
            AND   B.LOC_CD = C.LOC_CD  
        ) C
        WHERE A.YD_CD(+)  = C.YD_CD
        
        GROUP BY A.WEEK 
             #if ( ${loc_grp_cd} == 'L' )
                ,C.LCC_CD 
             #elseif ( ${loc_grp_cd} == 'E' )
                ,C.ECC_CD 
             #else  --'E'
                ,C.SCC_CD                             
             #end  
                ,A.CNTR_TPSZ_CD

    ) A  -- PLUS OTHER + COD SIMULATION(-동일지역 VD)
    WHERE A.CNTR_TPSZ_CD = UPPER(@[cntr_tpsz])
    GROUP BY A.WEEK
            ,A.LOC_CD                                          
            ,A.CNTR_TPSZ_CD 


	#else      
             
    -- Current Week 아닌 경우의 Repo In Original
    SELECT A.WEEK WEEK
          ,A.LOC_CD                                          
          ,@[loc_grp_cd] LOC_GRP_CD
          ,'RI' WKY_SIM_TP_CD
          ,A.CNTR_TPSZ_CD
          ,SUM(A.CNTR_QTY) CNTR_QTY                  
    FROM 
    (   
        -- PLUS OTHER 
        SELECT A.FCAST_YRWK WEEK
              ,A.LOC_CD
              ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
              ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(A.D2_FCAST_QTY,0) 
                    WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(A.D4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(A.D5_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(A.D7_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(A.R2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(A.R5_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(A.R9_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(A.O2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(A.O4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(A.S2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(A.S4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(A.F2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(A.F4_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(A.F5_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(A.A2_FCAST_QTY,0)       
                    WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(A.A4_FCAST_QTY,0)       
                    END CNTR_QTY
        FROM EQR_MTY_BAL_RPT_OTR A
            ,COM_INTG_CD_DTL B
        WHERE B.INTG_CD_ID        = 'CD00830'         
        AND   A.INP_YRWK          = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=1) -- -1WEEK
        AND   A.FCAST_YRWK        = (SELECT WEEK FROM BASIC_WEEK WHERE ROW_SEQ=@[head_week]) 
        AND   A.LOC_CD            = @[loc_cd]
        AND   A.LOC_GRP_CD        = @[loc_grp_cd]
        AND   A.MTY_BAL_OTR_TP_CD = 2 -- PLUS OTHER (REPO IN 에 포함)

        UNION ALL

         --Repo In (COD SIMULATION 추출)
        SELECT A.WEEK WEEK
             #if ( ${loc_grp_cd} == 'L' )
              ,C.LCC_CD LOC_CD
             #elseif( ${loc_grp_cd} == 'E' )
              ,C.ECC_CD LOC_CD    
             #else  --'S'
              ,C.SCC_CD LOC_CD                          
             #end  
             
              ,A.CNTR_TPSZ_CD
              ,NVL(SUM(A.CNTR_QTY), 0) CNTR_QTY
        
        FROM 
        (       
            -- BAY PLAN, I
            SELECT B.WEEK
                  ,A.VSL_CD
                  ,A.SKD_VOY_NO
                  ,A.SKD_DIR_CD
                  ,B.SLAN_CD
                  ,A.POD_CD
                  ,B.YD_CD
                  ,B.VPS_ETB_DT ETB_DT
                  ,'I' DIV
                  ,A.CNTR_TPSZ_CD
                  ,COUNT(1) CNTR_QTY
            FROM OPF_BAY_PLN_LDIS A,
            ( 
                SELECT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,A.SLAN_CD
                      ,A.VPS_PORT_CD
                      ,A.YD_CD
                      ,A.VPS_ETB_DT
                      ,X.WEEK                           
                FROM VSK_VSL_PORT_SKD A
                    ,REPOIN_VVD Z
                    ,BASIC_WEEK X
                    ,ADD_DAY Y
                WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                AND   A.VPS_PORT_CD IN (
                                            SELECT LOC_CD FROM MDM_LOCATION 
                                            WHERE SCC_CD IN ( 
                                                                SELECT SCC_CD 
                                                                FROM MDM_EQ_ORZ_CHT 
                                                                WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                                AND   DELT_FLG = 'N'
                                                            #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                              #if( ${loc_grp_cd} == 'L' )
                                                                AND   LCC_CD = @[loc_cd]
                                                              #elseif( ${loc_grp_cd} == 'E' )
                                                                AND   ECC_CD = @[loc_cd]    
                                                              #else    --SCC
                                                                AND   SCC_CD = @[loc_cd]    
                                                              #end
                                                            #end                                                                                                           
                                                             )
                                        )
                AND   A.CLPT_IND_SEQ = '1'	
                AND   VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999      
                AND   A.VPS_PORT_CD(+) = Y.LOC_CD                              
                AND   X.ROW_SEQ        = @[head_week] -- 0주차
                
            ) B
            WHERE A.LODG_DCHG_IND_CD =	'C'
            AND	  A.FULL_MTY_CD	     =	'E'
            AND	  A.CRR_CD		     =	'SML'
            AND   A.VSL_CD           = B.VSL_CD
            AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
            AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
            AND   A.POD_CD           = B.VPS_PORT_CD
            GROUP BY B.WEEK
                    ,A.VSL_CD
                    ,A.SKD_VOY_NO
                    ,A.SKD_DIR_CD
                    ,B.SLAN_CD
                    ,A.POD_CD
                    ,B.YD_CD
                    ,B.VPS_ETB_DT
                    ,A.CNTR_TPSZ_CD
                    
            UNION ALL
            
            -- SIMULATION, CONFIRMATION, BASIC 
            SELECT Z.WEEK
                  ,Z.VSL_CD
                  ,Z.SKD_VOY_NO
                  ,Z.SKD_DIR_CD
                  ,Z.SLAN_CD
                  ,Z.VPS_PORT_CD POD_CD
                  ,Z.YD_CD
                  ,Z.VPS_ETB_DT ETB_DT
                  ,P.COD_CFM_DIV_CD DIV
                  ,B.INTG_CD_VAL_CTNT CNTR_TPSZ_CD 
                  ,CASE WHEN B.INTG_CD_VAL_CTNT='D2' THEN NVL(P.D2_QTY,0) 
                        WHEN B.INTG_CD_VAL_CTNT='D4' THEN NVL(P.D4_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='D5' THEN NVL(P.D5_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='D7' THEN NVL(P.D7_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='R2' THEN NVL(P.R2_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='R5' THEN NVL(P.R5_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='R9' THEN NVL(P.R9_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='O2' THEN NVL(P.O2_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='O4' THEN NVL(P.O4_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='S2' THEN NVL(P.S2_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='S4' THEN NVL(P.S4_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='F2' THEN NVL(P.F2_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='F4' THEN NVL(P.F4_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='F5' THEN NVL(P.F5_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='A2' THEN NVL(P.A2_QTY,0)       
                        WHEN B.INTG_CD_VAL_CTNT='A4' THEN NVL(P.A4_QTY,0)       
                        END CNTR_QTY
            FROM EQR_MTY_COD_VVD  V
                ,EQR_MTY_COD_PORT P                
                ,COM_INTG_CD_DTL B 
                ,(
                    SELECT A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.SLAN_CD
                          ,A.VPS_PORT_CD
                          ,A.YD_CD
                          ,A.VPS_ETB_DT
                          ,X.WEEK
                    FROM VSK_VSL_PORT_SKD A
                        ,REPOIN_VVD Z     
                        ,ADD_DAY Y
                        ,BASIC_WEEK X   
                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                           
                    AND   VPS_PORT_CD IN (
                                               SELECT LOC_CD FROM MDM_LOCATION 
                                               WHERE SCC_CD IN ( 
                                                                   SELECT SCC_CD 
                                                                   FROM MDM_EQ_ORZ_CHT 
                                                                   WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                                   AND   DELT_FLG = 'N'
                                                                 #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                                   #if( ${loc_grp_cd} == 'L' )
                                                                   AND   LCC_CD = @[loc_cd]
                                                                   #elseif( ${loc_grp_cd} == 'E' )
                                                                   AND   ECC_CD = @[loc_cd]    
                                                                   #else    --SCC
                                                                   AND   SCC_CD = @[loc_cd]    
                                                                   #end
                                                                 #end                                                                                                            
                                                                )
                                          )                                                 
                    AND   CLPT_IND_SEQ = '1'  
                    AND	  VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS  AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999                     
                    AND   VPS_PORT_CD(+)    = Y.LOC_CD 
                    AND   X.ROW_SEQ         = @[head_week] -- 0주차   
                           
			    
                ) Z                                                              
            WHERE B.INTG_CD_ID      = 'CD00830'                               
            AND	  V.VSL_CD			= P.VSL_CD
            AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO
            AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD
            AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD
            AND	  'D'				= P.LODG_DCHG_DIV_CD
            AND   P.VSL_CD          = Z.VSL_CD
            AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
            AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
            AND   P.PORT_CD         = Z.VPS_PORT_CD                                                                
        ) A,
        (
            SELECT VSL_CD
                  ,SKD_VOY_NO
                  ,SKD_DIR_CD
                  ,VPS_PORT_CD
                  ,DIV
                  ,WEEK
            FROM 
            (    
                -- VVD 별 I/S/C 확인
                SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                      ,B.VSL_CD
                      ,B.SKD_VOY_NO
                      ,B.SKD_DIR_CD
                      ,B.VPS_PORT_CD
                      ,NVL(A.COD_CFM_STS_CD,'I') DIV
                      ,X.WEEK
                FROM EQR_MTY_COD_VVD A
                    ,VSK_VSL_PORT_SKD B
                    ,BASIC_WEEK X
                    ,ADD_DAY Y
                WHERE B.VSL_CD        = A.VSL_CD(+)
                AND   B.SKD_VOY_NO    = A.SKD_VOY_NO(+)
                AND   B.SKD_DIR_CD    = A.SKD_DIR_CD(+)                         
                AND   X.ROW_SEQ       = @[head_week] -- 0주차
                AND   B.VPS_PORT_CD(+)= Y.LOC_CD                                                                                              
                AND   B.VPS_PORT_CD IN (
                                            SELECT LOC_CD FROM MDM_LOCATION 
                                            WHERE SCC_CD IN ( 
                                                                SELECT SCC_CD 
                                                                FROM MDM_EQ_ORZ_CHT 
                                                                WHERE RCC_CD IN ('CNSHA', 'CNHKG', 'TWTPE', 'KRSEL', 'JPTYO', 'SGSIN') -- 하드코딩
                                                                AND   DELT_FLG = 'N'
                                                            #if( ${loc_cd} != '' ) -- ALL 일대는 쿼리 감춤
                                                              #if( ${loc_grp_cd} == 'L' )
                                                                AND   LCC_CD = @[loc_cd]
                                                              #elseif( ${loc_grp_cd} == 'E' )
                                                                AND   ECC_CD = @[loc_cd]    
                                                              #else    --SCC
                                                                AND   SCC_CD = @[loc_cd]    
                                                              #end
                                                            #end                                                                                                           
                                                             )
                                       )
                AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') - Y.DAYS AND TO_DATE(X.WK_END_DT, 'YYYYMMDD') - Y.DAYS+0.99999     
			    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외                     
                AND   B.CLPT_IND_SEQ = '1'
            ) 
            WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
        ) B,
        (
            SELECT A.LCC_CD, A.ECC_CD, A.SCC_CD, B.LOC_CD
            FROM MDM_EQ_ORZ_CHT A
                ,MDM_LOCATION B
            WHERE A.SCC_CD = B.SCC_CD     
        ) C
        WHERE A.WEEK       = B.WEEK
        AND   A.VSL_CD     = B.VSL_CD
        AND   A.SKD_VOY_NO = B.SKD_VOY_NO
        AND   A.SKD_DIR_CD = B.SKD_DIR_CD
        AND   A.POD_CD     = B.VPS_PORT_CD
        AND   A.DIV        = B.DIV
        AND   A.POD_CD     = C.LOC_CD
        
        GROUP BY A.WEEK 
             #if ( ${loc_grp_cd} == 'L' )
                ,C.LCC_CD 
             #elseif ( ${loc_grp_cd} == 'E' )
                ,C.ECC_CD 
             #else  --'S'
                ,C.SCC_CD                             
             #end  
                ,A.CNTR_TPSZ_CD 

    ) A
    WHERE A.CNTR_TPSZ_CD = UPPER(@[cntr_tpsz])
    GROUP BY A.WEEK
            ,A.LOC_CD                                          
            ,A.CNTR_TPSZ_CD    
	
	-- current week 아닌경우의 repo in
	#end

#end			]]></sql>
			<params>
				<param name="week" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="loc_grp_cd" type="12" value="" out="N"/>
				<param name="cntr_tpsz" type="12" value="" out="N"/>
				<param name="head_week" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
