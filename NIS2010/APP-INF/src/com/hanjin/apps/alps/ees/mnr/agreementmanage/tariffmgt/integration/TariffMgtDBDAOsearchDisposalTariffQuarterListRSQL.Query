<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TariffMgtDBDAOsearchDisposalTariffQuarterListRSQL">
			<desc><![CDATA[분기별 지역별 매각기준 가격정보 현황을 조회합니다.]]></desc>
			<sql><![CDATA[
SELECT  A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.EQ_KND_CD,
        A.TRF_EFF_QTR_NO||'/4 QTA' AS TRF_EFF_QTR_NM,           
        DECODE(A.EQ_KND_CD, 'U', 'Container','Z','Chassis','M.G.Set') AS EQ_KND_NM, 
        A.RCC_CD, A.LOC_CD, A.LOC_CNT, A.CURR_CD,    
        NVL2(A.LOC_CD, A.TPSZ_DP01, A.TPSZ_DP01/A.LOC_CNT) AS TPSZ_DP01,         
        NVL2(A.LOC_CD, A.TPSZ_DP02, A.TPSZ_DP02/A.LOC_CNT) AS TPSZ_DP02,
        NVL2(A.LOC_CD, A.TPSZ_DP03, A.TPSZ_DP03/A.LOC_CNT) AS TPSZ_DP03,
        NVL2(A.LOC_CD, A.TPSZ_DP04, A.TPSZ_DP04/A.LOC_CNT) AS TPSZ_DP04,         
        NVL2(A.LOC_CD, A.TPSZ_DP05, A.TPSZ_DP05/A.LOC_CNT) AS TPSZ_DP05,
        NVL2(A.LOC_CD, A.TPSZ_DP06, A.TPSZ_DP06/A.LOC_CNT) AS TPSZ_DP06,
        NVL2(A.LOC_CD, A.TPSZ_DP07, A.TPSZ_DP07/A.LOC_CNT) AS TPSZ_DP07,
        NVL2(A.LOC_CD, A.TPSZ_DP08, A.TPSZ_DP08/A.LOC_CNT) AS TPSZ_DP08,
        NVL2(A.LOC_CD, A.TPSZ_DP09, A.TPSZ_DP09/A.LOC_CNT) AS TPSZ_DP09,
        NVL2(A.LOC_CD, A.TPSZ_DP10, A.TPSZ_DP10/A.LOC_CNT) AS TPSZ_DP10,
        NVL2(A.LOC_CD, A.TPSZ_DP11, A.TPSZ_DP11/A.LOC_CNT) AS TPSZ_DP11,
        NVL2(A.LOC_CD, A.TPSZ_DP12, A.TPSZ_DP12/A.LOC_CNT) AS TPSZ_DP12,
        NVL2(A.LOC_CD, A.TPSZ_DP13, A.TPSZ_DP13/A.LOC_CNT) AS TPSZ_DP13,
        NVL2(A.LOC_CD, A.TPSZ_DP14, A.TPSZ_DP14/A.LOC_CNT) AS TPSZ_DP14,         
        NVL2(A.LOC_CD, A.TPSZ_DP15, A.TPSZ_DP15/A.LOC_CNT) AS TPSZ_DP15,
        NVL2(A.LOC_CD, A.TPSZ_DP16, A.TPSZ_DP16/A.LOC_CNT) AS TPSZ_DP16,
        NVL2(A.LOC_CD, A.TPSZ_DP17, A.TPSZ_DP17/A.LOC_CNT) AS TPSZ_DP17,
        NVL2(A.LOC_CD, A.TPSZ_DP18, A.TPSZ_DP18/A.LOC_CNT) AS TPSZ_DP18,
        NVL2(A.LOC_CD, A.TPSZ_DP19, A.TPSZ_DP19/A.LOC_CNT) AS TPSZ_DP19,
        NVL2(A.LOC_CD, A.TPSZ_DP20, A.TPSZ_DP20/A.LOC_CNT) AS TPSZ_DP20,
        NVL2(A.LOC_CD, A.TPSZ_DP21, A.TPSZ_DP21/A.LOC_CNT) AS TPSZ_DP21,
        NVL2(A.LOC_CD, A.TPSZ_DP22, A.TPSZ_DP22/A.LOC_CNT) AS TPSZ_DP22,
        NVL2(A.LOC_CD, A.TPSZ_DP23, A.TPSZ_DP23/A.LOC_CNT) AS TPSZ_DP23,
        NVL2(A.LOC_CD, A.TPSZ_DP24, A.TPSZ_DP24/A.LOC_CNT) AS TPSZ_DP24,         
        NVL2(A.LOC_CD, A.TPSZ_DP25, A.TPSZ_DP25/A.LOC_CNT) AS TPSZ_DP25,
        NVL2(A.LOC_CD, A.TPSZ_DP26, A.TPSZ_DP26/A.LOC_CNT) AS TPSZ_DP26,
        NVL2(A.LOC_CD, A.TPSZ_DP27, A.TPSZ_DP27/A.LOC_CNT) AS TPSZ_DP27,
        NVL2(A.LOC_CD, A.TPSZ_DP28, A.TPSZ_DP28/A.LOC_CNT) AS TPSZ_DP28,
        NVL2(A.LOC_CD, A.TPSZ_DP29, A.TPSZ_DP29/A.LOC_CNT) AS TPSZ_DP29,
        NVL2(A.LOC_CD, A.TPSZ_DP30, A.TPSZ_DP30/A.LOC_CNT) AS TPSZ_DP30
FROM   (SELECT  MAX(A.TRF_EFF_YR) AS TRF_EFF_YR, A.TRF_EFF_QTR_NO, 
                MAX(A.EQ_KND_CD) AS EQ_KND_CD, A.RCC_CD, A.LOC_CD, A.CURR_CD,
				CASE WHEN A.RCC_CD IS NULL THEN 1
                     ELSE COUNT(A.LOC_CD) OVER(PARTITION BY A.TRF_EFF_QTR_NO, A.RCC_CD, A.CURR_CD)
                END LOC_CNT,                                         
                SUM(CASE WHEN A.RPT_DP_SEQ = 1 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP01,
                SUM(CASE WHEN A.RPT_DP_SEQ = 2 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP02,  
                SUM(CASE WHEN A.RPT_DP_SEQ = 3 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP03,
                SUM(CASE WHEN A.RPT_DP_SEQ = 4 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP04,
                SUM(CASE WHEN A.RPT_DP_SEQ = 5 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP05,
                SUM(CASE WHEN A.RPT_DP_SEQ = 6 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP06,
                SUM(CASE WHEN A.RPT_DP_SEQ = 7 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP07,
                SUM(CASE WHEN A.RPT_DP_SEQ = 8 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP08,
                SUM(CASE WHEN A.RPT_DP_SEQ = 9 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP09,
                SUM(CASE WHEN A.RPT_DP_SEQ =10 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP10,
                SUM(CASE WHEN A.RPT_DP_SEQ =11 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP11,
                SUM(CASE WHEN A.RPT_DP_SEQ =12 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP12,
                SUM(CASE WHEN A.RPT_DP_SEQ =13 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP13,
                SUM(CASE WHEN A.RPT_DP_SEQ =14 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP14,
                SUM(CASE WHEN A.RPT_DP_SEQ =15 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP15,
                SUM(CASE WHEN A.RPT_DP_SEQ =16 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP16,
                SUM(CASE WHEN A.RPT_DP_SEQ =17 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP17,
                SUM(CASE WHEN A.RPT_DP_SEQ =18 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP18,
                SUM(CASE WHEN A.RPT_DP_SEQ =19 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP19,
                SUM(CASE WHEN A.RPT_DP_SEQ =20 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP20,
                SUM(CASE WHEN A.RPT_DP_SEQ =21 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP21,
                SUM(CASE WHEN A.RPT_DP_SEQ =22 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP22,  
                SUM(CASE WHEN A.RPT_DP_SEQ =23 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP23,
                SUM(CASE WHEN A.RPT_DP_SEQ =24 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP24,
                SUM(CASE WHEN A.RPT_DP_SEQ =25 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP25,
                SUM(CASE WHEN A.RPT_DP_SEQ =26 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP26,
                SUM(CASE WHEN A.RPT_DP_SEQ =27 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP27,
                SUM(CASE WHEN A.RPT_DP_SEQ =28 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP28,
                SUM(CASE WHEN A.RPT_DP_SEQ =29 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP29,
                SUM(CASE WHEN A.RPT_DP_SEQ =30 THEN A.MNR_DISP_TRF_AMT END) AS TPSZ_DP30 
        FROM   (SELECT  A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.EQ_KND_CD, A.EQ_TPSZ_CD,
                        DECODE(@[p_loc_tp], '1',A.LCC_CD, '2',A.SCC_CD, A.RCC_CD) AS RCC_CD,
                        A.LOC_CD, A.CURR_CD, A.MNR_DISP_TRF_AMT, B.RPT_DP_SEQ
                FROM   (SELECT  A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.MNR_DISP_TRF_SEQ, A.EQ_KND_CD, 
                                A.EQ_TPSZ_CD, B.RCC_CD, B.LCC_CD, B.SCC_CD,     
                                A.LOC_CD, A.CURR_CD, 
                                A.MNR_DISP_TRF_AMT, A.MNR_TRF_RMK, 
                                A.CRE_OFC_CD, A.CRE_USR_ID, A.CRE_DT, A.UPD_USR_ID, A.UPD_DT        
                        FROM    MNR_DISP_TRF A,
                               (SELECT  A.LOC_CD, A.RGN_CD, A.SCC_CD, A.EQ_CTRL_OFC_CD,
                                        C.LCC_CD, C.ECC_CD, C.RCC_CD
                                FROM    MDM_LOCATION A,  
                                        MDM_EQ_ORZ_CHT C        
                                WHERE   A.SCC_CD = C.SCC_CD
                                AND     NVL(A.DELT_FLG, 'N') <> 'Y'
                                ) B
                        WHERE   A.LOC_CD = B.LOC_CD
                        AND     A.TRF_EFF_YR = @[p_trf_eff_yr]
#if (${p_trf_eff_qtr_no} != '') 
                        AND     A.TRF_EFF_QTR_NO = @[p_trf_eff_qtr_no]
#end
#if (${p_eq_knd_cd} != '') 
                        AND     A.EQ_KND_CD = @[p_eq_knd_cd]
#end
#if (${p_loc_tp} == '1' && ${p_loc_cd} != '')
                        AND     B.RCC_CD = @[p_loc_cd]
#elseif (${p_loc_tp} == '2' && ${p_loc_cd} != '')
                        AND     B.LCC_CD = @[p_loc_cd]
#end
                        ) A,
                       (SELECT  A.EQ_KND_CD, A.EQ_TPSZ_CD, 
                                ROW_NUMBER() OVER(PARTITION BY A.EQ_KND_CD ORDER BY A.DP_SEQ) AS RPT_DP_SEQ
                        FROM   (SELECT  EQ_KND_CD, EQ_TPSZ_CD, DP_SEQ
                                FROM    CGM_EQ_TP_SZ
                                UNION ALL
                                SELECT  'U' AS EQ_KND_CD, CNTR_TPSZ_CD, RPT_DP_SEQ   
                                FROM    MDM_CNTR_TP_SZ
                                ) A                
                        ) B
                WHERE   A.EQ_KND_CD  = B.EQ_KND_CD
                AND     A.EQ_TPSZ_CD = B.EQ_TPSZ_CD   
                ) A                  
#if (${p_loc_tp} != '2')                      
        GROUP BY ROLLUP(A.TRF_EFF_QTR_NO, A.RCC_CD, A.CURR_CD, A.LOC_CD)
#else                                    
        GROUP BY A.TRF_EFF_QTR_NO, A.RCC_CD, A.CURR_CD, A.LOC_CD
#end        
        ) A                  
WHERE  (A.CURR_CD IS NOT NULL    
OR      A.RCC_CD IS NULL)
ORDER BY A.TRF_EFF_QTR_NO, A.RCC_CD, A.CURR_CD, A.LOC_CD			]]></sql>
			<params>
				<param name="p_loc_tp" type="12" value="" out="N"/>
				<param name="p_trf_eff_yr" type="12" value="" out="N"/>
				<param name="p_trf_eff_qtr_no" type="12" value="" out="N"/>
				<param name="p_eq_knd_cd" type="12" value="" out="N"/>
				<param name="p_loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
