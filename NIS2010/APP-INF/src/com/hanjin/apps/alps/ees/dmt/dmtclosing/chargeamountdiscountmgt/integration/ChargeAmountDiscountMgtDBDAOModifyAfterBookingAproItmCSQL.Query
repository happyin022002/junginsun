<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChargeAmountDiscountMgtDBDAOModifyAfterBookingAproItmCSQL">
			<desc><![CDATA[ChargeAmountDiscountMgtDBDAOModifyAfterBookingAproItm]]></desc>
			<sql><![CDATA[
MERGE INTO DMT_AFT_BKG_APRO_ITM A
  USING (
            SELECT @[aft_expt_dar_no] AS DAR_NO, A.ATTR_CTNT1 ITM_LVL, A.ATTR_CTNT2 ITM_NM

             , CASE ATTR_CTNT1 WHEN '1' THEN TO_CHAR(SUM_CM)
                                             WHEN '2' THEN TO_CHAR(ROUND(TTL_BIL_AFT_DC_AMT,2))
                                             WHEN '3' THEN TO_CHAR(ROUND((EXPT_DC_AMT+SC_RFA_EXPT_AMT),2))
                                             WHEN '4' THEN ' '
                                             WHEN '5' THEN TO_CHAR(L_STS_CNT)
                                             WHEN '6' THEN TO_CHAR(COLL_PFMC)
                                             WHEN '7' THEN TO_CHAR(WAIVE_PFMC)
                                             ELSE '' 
                        END
                   AS VALUE_1
                 , CASE ATTR_CTNT1 WHEN '1' THEN TO_CHAR(ROUND(OTS_AMT,2))
                                             WHEN '2' THEN TO_CHAR(TOT_COST_AMT)
                                             WHEN '3' THEN TO_CHAR(ROUND(INCURR_50,2))
                                             WHEN '4' THEN ' '
                                             WHEN '5' THEN TO_CHAR(UCLM_CNT)
                                             WHEN '6' THEN TO_CHAR(COLL_PFMC)
                                             WHEN '7' THEN TO_CHAR(WAIVE_PFMC)
                                             ELSE ''
                        END
                   AS VALUE_2
                  , CASE ATTR_CTNT1 WHEN '1' THEN 
                            CASE WHEN ROUND(SUM_CM,0) > ROUND(ROUND(OTS_AMT,2) * 0.3,0) THEN '0'
                                 WHEN ROUND(SUM_CM,0) = ROUND(ROUND(OTS_AMT,2) * 0.3,0) THEN '1'
                                 ELSE '2' END
                       WHEN '2' THEN
                            CASE WHEN ROUND(TTL_BIL_AFT_DC_AMT,0) > ROUND(TOT_COST_AMT,0) THEN '0'
                                 WHEN ROUND(TTL_BIL_AFT_DC_AMT,0) = ROUND(TOT_COST_AMT,0) THEN '1'
                                 ELSE '2' END
                       WHEN '3' THEN
                            CASE WHEN ROUND((EXPT_DC_AMT+SC_RFA_EXPT_AMT),2) <= ROUND(INCURR_50,2) THEN '0'
                                 ELSE '2' END
                       WHEN '4' THEN ' '
                       WHEN '5' THEN 
                            CASE WHEN NVL(L_STS_CNT,0) = 0 AND NVL(UCLM_CNT,0) = 0 THEN '0'
                                 WHEN NVL(UCLM_CNT,0) > 0 THEN '2'
                                 WHEN NVL(L_STS_CNT,0) > 0 THEN '1'
                                 END
                       WHEN '6' THEN
                            CASE WHEN ROUND(COLL_PFMC,0) > 90 THEN '0'
                                 WHEN ROUND(COLL_PFMC,0) = 90 THEN '1'
                                 ELSE '2'
                                 END
                       WHEN '7' THEN 
                            CASE WHEN ROUND(WAIVE_PFMC,0) < 50 THEN '0'
                                 WHEN ROUND(WAIVE_PFMC,0) = 50 THEN '1'
                                 ELSE '2'
                                 END
            END AS VALUE_3 
                   
            FROM dmt_hrd_cdg_ctnt A,
               ( SELECT MAX(
                           (
                            SELECT SUM(NVL(BB.BIL_AFT_DC_AMT/AA.AFT_BKG_XCH_RT,0))
                            FROM DMT_AFT_BKG_CNTR BB, DMT_AFT_BKG_ADJ_RQST_DTL AA
                            WHERE 1=1
                            AND BB.AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO
                            AND AA.AFT_EXPT_DAR_NO = BB.AFT_EXPT_DAR_NO
                            AND AA.AFT_EXPT_ADJ_SEQ = BB.AFT_EXPT_ADJ_SEQ
                           ))  AS TTL_BIL_AFT_DC_AMT,             
                           MAX(NVL((SELECT SUM(AFT_BKG_ACT_COST_AMT) FROM DMT_AFT_BKG_ACT_COST_RQST WHERE AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO ),0)) TOT_COST_AMT,            
                           MAX((SELECT SUM(AFT_BKG_CM_AMT) FROM DMT_AFT_BKG_ADJ_RQST_DTL WHERE AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO )) AS SUM_CM,               
                           SUM((C.ORG_CHG_AMT - C.SC_RFA_EXPT_AMT)/A.AFT_BKG_XCH_RT) AS OTS_AMT,               
                           MAX((SELECT ROUND(DECODE(SUM(BIL_AMT),0,0,(SUM(INV_PAY_AMT)/SUM(BIL_AMT)))*100,2) FROM DMT_AFT_BKG_PERF_RQST WHERE AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO )) AS COLL_PFMC,               

                           MAX(
                           (
                            SELECT SUM(NVL(BB.RQST_DC_AMT/AA.AFT_BKG_XCH_RT,0))
                            FROM DMT_AFT_BKG_CNTR BB, DMT_AFT_BKG_ADJ_RQST_DTL AA
                            WHERE 1=1
                            AND BB.AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO
                            AND AA.AFT_EXPT_DAR_NO = BB.AFT_EXPT_DAR_NO
                            AND AA.AFT_EXPT_ADJ_SEQ = BB.AFT_EXPT_ADJ_SEQ
                           ))  AS EXPT_DC_AMT,               
                           ROUND(SUM(C.ORG_CHG_AMT/A.AFT_BKG_XCH_RT)*0.5,2) INCURR_50,               
                           SUM(DECODE(C.DMDT_CHG_STS_CD,'L',1,0)) L_STS_CNT,               
                           SUM(DECODE(C.UCLM_FLG,'Y',1,0)) UCLM_CNT,   
             
                           MAX((SELECT DECODE(SUM(ORG_CHG_AMT-DMDT_EXPT_AMT),0,0,ROUND(DECODE(SUM(ORG_CHG_AMT-DMDT_EXPT_AMT),0,0,SUM(AFT_EXPT_DC_AMT)/SUM(ORG_CHG_AMT-DMDT_EXPT_AMT)*100),2)) FROM DMT_AFT_BKG_PERF_RQST WHERE AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO)) AS DC_PFMC,               
                           MAX((SELECT DECODE(SUM(ORG_CHG_AMT),0,0,ROUND(SUM(DMDT_EXPT_AMT+AFT_EXPT_DC_AMT)/SUM(ORG_CHG_AMT)*100,2)) FROM DMT_AFT_BKG_PERF_RQST WHERE AFT_EXPT_DAR_NO = A.AFT_EXPT_DAR_NO)) AS WAIVE_PFMC       
            			 
						 , SUM(C.SC_RFA_EXPT_AMT/A.AFT_BKG_XCH_RT) SC_RFA_EXPT_AMT   
                    FROM DMT_AFT_BKG_ADJ_RQST_DTL A, DMT_CHG_BKG_CNTR B, DMT_CHG_CALC C
                    WHERE 1=1
                    AND A.AFT_EXPT_DAR_NO = @[aft_expt_dar_no]
                    AND A.BKG_NO = B.BKG_NO
                    AND A.DMDT_TRF_CD = C.DMDT_TRF_CD
                    AND B.SYS_AREA_GRP_ID = C.SYS_AREA_GRP_ID
                    AND B.CNTR_NO = C.CNTR_NO
                    AND B.CNTR_CYC_NO = C.CNTR_CYC_NO
                    ) ITME
            WHERE HRD_CDG_ID = 'AFT_BKG_APRO_ITME'
        ) B
        
  ON (      A.AFT_EXPT_DAR_NO  =   B.DAR_NO 
     AND    A.AFT_BKG_ITM_LVL  =   B.ITM_LVL
     )
  WHEN MATCHED THEN
    UPDATE
      SET A.AFT_BKG_ITM_NM      =   B.ITM_NM
        , A.AFT_BKG_ITM_CTNT1   =   B.VALUE_1
        , A.AFT_BKG_ITM_CTNT2   =   B.VALUE_2
        , A.AFT_BKG_ITM_CTNT3   =   B.VALUE_3
        , A.UPD_USR_ID          =   @[upd_usr_id]
        , A.UPD_DT              =   SYSDATE
  WHEN NOT MATCHED THEN
    INSERT (AFT_EXPT_DAR_NO
          , AFT_BKG_ITM_LVL
          , AFT_BKG_ITM_NM
          , AFT_BKG_ITM_CTNT1
          , AFT_BKG_ITM_CTNT2
          , AFT_BKG_ITM_CTNT3
          , CRE_USR_ID
          , CRE_DT
          , UPD_USR_ID
          , UPD_DT )
    VALUES (B.DAR_NO
          , B.ITM_LVL
          , B.ITM_NM
          , B.VALUE_1
          , B.VALUE_2
		  , B.VALUE_3
          , @[upd_usr_id]
          , sysdate
          , @[upd_usr_id]
          , sysdate
   )			]]></sql>
			<params>
				<param name="aft_expt_dar_no" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
