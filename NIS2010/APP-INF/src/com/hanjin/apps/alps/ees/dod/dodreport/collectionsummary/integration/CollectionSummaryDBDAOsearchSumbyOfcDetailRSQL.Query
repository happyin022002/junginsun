<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CollectionSummaryDBDAOsearchSumbyOfcDetailRSQL">
			<desc><![CDATA[Detail 조회]]></desc>
			<sql><![CDATA[
SELECT A.*
FROM
(  
SELECT   CFM_OFC_CD	
        ,CNTR_NO
        ,CNTR_TPSZ_CD
        ,TRO_CNTR_RTN_YD_CD
        ,ACTUAL_RTN_YARD
        ,RTN_DATE
        ,TRO_DT
        ,BKG_NO
        ,POR_CD
        ,POL_CD
        ,POD_CD
        ,DEL_CD
        ,SC_NO
        ,RFA_NO
        ,CUST_CNT_CD
        ,CUST_SEQ
        ,CUSTOMER
        ,CUST_LGL_ENG_NM
        ,INVOICE_CUST_CD
        ,INVOICE_CUST_NAME
        ,CURR_CD
        ,DECODE(NVL(PENDING_AMT, 0), 0, GEN_TRF_AMT, GEN_AMT) GEN_TRF_AMT
        ,DECODE(NVL(PENDING_AMT, 0), 0, SPCL_TRF_AMT, SPC_AMT) SPCL_TRF_AMT
        ,ADJUST_AMT

        #if(${ar_if} == 'N')
           ,0 INVOICE_AMT
           ,0 INVOICE_USD_AMT
        #else
           ,INVOICE_AMT
           ,INVOICE_USD_AMT
        #end

        ,SPC_AMT
        ,GEN_AMT
        ,EXEMPTION
        ,INV_OFC
        ,AR_IF_DT
        ,CRE_USR_ID
        ,PENDING_AMT
        ,BKG_DEL
        ,INV_CNTR
FROM
(
SELECT A.*, 
       DECODE(SPC_AMT, NULL, GEN_AMT, SPC_AMT)  PENDING_AMT
	   ,A.DEL_CD                                BKG_DEL
FROM
    (
    SELECT E.CFM_OFC_CD
       , E.CNTR_NO
       , E.CNTR_TPSZ_CD
       , E.CNTR_RTN_YD_CD TRO_CNTR_RTN_YD_CD
      
       ,(SELECT /*+ INDEX( M XIE6CTM_MOVEMENT ) */
                M.ORG_YD_CD AS ACT_TRN_YARD
            FROM CTM_MOVEMENT M
               , MST_CONTAINER C
           WHERE 1 = 1
             AND M.CNTR_NO = E.CNTR_NO
             AND M.BKG_NO = E.BKG_NO
             AND M.MVMT_STS_CD = 'MT'
             AND M.CNTR_NO = C.CNTR_NO
             AND NVL(C.LSTM_CD, '  ') <> 'SH' /* SOC  */
             AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )
             AND 'ID' = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
                                MM.MVMT_STS_CD /*  PRE_MVMT_STS_CD   */
                         FROM CTM_MOVEMENT MM
                         WHERE 1 = 1
                           AND MM.CNTR_NO = M.CNTR_NO
                           --AND MM.BKG_NO = E.BKG_NO
                           AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO < M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                           AND ROWNUM = 1 
                         )
         ) ACTUAL_RTN_YARD
       
       ,(SELECT /*+ INDEX( M XIE6CTM_MOVEMENT ) */
                TO_CHAR(M.CNMV_EVNT_DT,'YYYY-MM-DD')
            FROM CTM_MOVEMENT M
               , MST_CONTAINER C
           WHERE 1 = 1
             AND M.CNTR_NO = E.CNTR_NO
             AND M.BKG_NO = E.BKG_NO
             AND M.MVMT_STS_CD = 'MT'
             AND M.CNTR_NO = C.CNTR_NO
             AND NVL(C.LSTM_CD, '  ') <> 'SH' /* SOC  */
             AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )
             AND 'ID' = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
                                MM.MVMT_STS_CD /*  PRE_MVMT_STS_CD   */
                         FROM CTM_MOVEMENT MM
                         WHERE 1 = 1
                           AND MM.CNTR_NO = M.CNTR_NO
                           --AND MM.BKG_NO = E.BKG_NO
                           AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO < M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                           AND ROWNUM = 1 
                         )
         ) RTN_DATE                                    
    
       , TO_CHAR(E.CFM_DT, 'YYYY-MM-DD') TRO_DT  -- TRO DATE
       
       , E.BKG_NO
       , B.POR_CD
       , B.POL_CD
       , B.POD_CD
       , B.DEL_CD
       , B.SC_NO
       , B.RFA_NO
       , (SELECT U.CUST_CNT_CD
            FROM BKG_CUSTOMER U
           WHERE U.BKG_NO = B.BKG_NO
             AND U.BKG_CUST_TP_CD = 'S' ) CUST_CNT_CD
       , (SELECT U.CUST_SEQ
            FROM BKG_CUSTOMER U
           WHERE U.BKG_NO = B.BKG_NO
             AND U.BKG_CUST_TP_CD = 'S' ) CUST_SEQ
       , (SELECT U.CUST_CNT_CD || LPAD(U.CUST_SEQ, 6, '0')
            FROM BKG_CUSTOMER U
           WHERE U.BKG_NO = B.BKG_NO
             AND U.BKG_CUST_TP_CD = 'S' ) CUSTOMER
       , (SELECT SUBSTR(C.CUST_LGL_ENG_NM, 1, 50)
            FROM MDM_CUSTOMER C
               , BKG_CUSTOMER U
           WHERE C.CUST_CNT_CD = U.CUST_CNT_CD
             AND C.CUST_SEQ = U.CUST_SEQ
             AND U.BKG_NO = B.BKG_NO
             AND U.BKG_CUST_TP_CD = 'S' ) CUST_LGL_ENG_NM
             
       , (SELECT G.CUST_CNT_CD || LPAD(G.CUST_SEQ, 6, '0')
         FROM DOD_DRP_OFF_CHG G
         WHERE G.BKG_NO = E.BKG_NO
           AND G.CNTR_NO = E.CNTR_NO
           AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                                    FROM DOD_DRP_OFF_CHG C
                                   WHERE C.BKG_NO = G.BKG_NO
                                     AND C.CNTR_NO = G.CNTR_NO
                                   )) INVOICE_CUST_CD
                                   
      , (SELECT SUBSTR(R.CUST_LGL_ENG_NM, 1, 50)
         FROM DOD_DRP_OFF_CHG G, MDM_CUSTOMER R
         WHERE G.BKG_NO = E.BKG_NO
           AND G.CNTR_NO = E.CNTR_NO
           AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                                    FROM DOD_DRP_OFF_CHG C
                                   WHERE C.BKG_NO = G.BKG_NO
                                     AND C.CNTR_NO = G.CNTR_NO
                                   ) 
           AND G.CUST_CNT_CD = R.CUST_CNT_CD
           AND G.CUST_SEQ = R.CUST_SEQ   )  INVOICE_CUST_NAME

       -- Currenct Change Appy     
       , E.CFM_CURR_CD  CURR_CD

		    --G.GEN_TRF_AMT 
			-- Currency Convert

            #if(${ar_if} == 'A')
              , (SELECT CASE WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, G.GEN_TRF_AMT, 0) > 0 THEN 			
			          ROUND( G.GEN_TRF_AMT,2 )

                      WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, G.GEN_TRF_AMT, 0) < 0 THEN 0
                      ELSE 0
                      END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) GEN_TRF_AMT
           #end
           #if(${ar_if} == 'N')
              , (SELECT CASE WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, G.GEN_TRF_AMT, 0) > 0 THEN 
                   ROUND( G.GEN_TRF_AMT,2 )

                      WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, G.GEN_TRF_AMT, 0) < 0 THEN 0
                      ELSE 0
                      END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) GEN_TRF_AMT
           #end
           #if(${ar_if} == 'Y')
              , (SELECT CASE WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, G.GEN_TRF_AMT, 0) > 0 THEN 
                   ROUND( G.GEN_TRF_AMT,2 )

                      WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, G.GEN_TRF_AMT, 0) < 0 THEN 0
                      ELSE 0
                      END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NOT NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) GEN_TRF_AMT
           #end

         #if(${ar_if} == 'A')
           , (SELECT CASE WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, 0, G.SPCL_TRF_AMT) > 0 THEN 

			--G.SPCL_TRF_AMT
			-- Currency Convert

			          ROUND( G.SPCL_TRF_AMT,2 )

                      WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, 0, G.SPCL_TRF_AMT) < 0 THEN 0
                      ELSE 0
                      END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) SPCL_TRF_AMT
                     
       --, (SELECT G.DC_AMT
       , (SELECT ROUND( (-G.DC_AMT + G.SVC_FEE_AMT)*-1 ,2 )
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) ADJUST_AMT

       , (SELECT CASE WHEN G.TTL_AMT > 0 AND G.AR_IF_NO IS NOT NULL THEN ROUND( G.TTL_AMT, 2 )
                   WHEN G.TTL_AMT < 0 THEN 0
                   ELSE 0
                   END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) INVOICE_AMT
                     
       --, (SELECT MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(G.UPD_DT, 'YYYYMM'), G.CURR_CD, 'USD', G.TTL_AMT)
       , (SELECT CASE WHEN G.TTL_AMT > 0 AND G.AR_IF_NO IS NOT NULL THEN 
                        ROUND( MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC( TO_CHAR(G.TRO_IB_CFM_DT , 'YYYYMM') , G.CURR_CD, 'USD' ,G.TTL_AMT), 2 )
                      WHEN G.TTL_AMT < 0 THEN 0
                      ELSE 0
                      END END 
           FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) INVOICE_USD_AMT
         #end

         #if(${ar_if} == 'N')
             , (SELECT CASE WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, 0, G.SPCL_TRF_AMT) > 0 THEN 

			--G.SPCL_TRF_AMT
			-- Currency Convert

			          ROUND( G.SPCL_TRF_AMT,2 )

                      WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, 0, G.SPCL_TRF_AMT) < 0 THEN 0
                      ELSE 0
                      END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) SPCL_TRF_AMT
                     
       --, (SELECT G.DC_AMT
       , (SELECT ROUND( (-G.DC_AMT + G.SVC_FEE_AMT)*-1 ,2 )
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) ADJUST_AMT

       , (SELECT CASE WHEN G.TTL_AMT > 0 THEN ROUND( G.TTL_AMT, 2 )
                   WHEN G.TTL_AMT < 0 THEN 0
                   ELSE 0
                   END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) INVOICE_AMT
                     
       --, (SELECT MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(G.UPD_DT, 'YYYYMM'), G.CURR_CD, 'USD', G.TTL_AMT)
       , (SELECT CASE WHEN G.TTL_AMT > 0 THEN 
                        ROUND( MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC( TO_CHAR(G.TRO_IB_CFM_DT , 'YYYYMM') , G.CURR_CD, 'USD' ,G.TTL_AMT), 2 )
                      WHEN G.TTL_AMT < 0 THEN 0
                      ELSE 0
                      END END 
           FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
            AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) INVOICE_USD_AMT

         #end

         #if(${ar_if} == 'Y')
             , (SELECT CASE WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, 0, G.SPCL_TRF_AMT) > 0 THEN 

			--G.SPCL_TRF_AMT
			-- Currency Convert

			          ROUND( G.SPCL_TRF_AMT,2 )

                      WHEN DECODE(G.DRP_OFF_CHG_TRF_SPCL_SEQ, NULL, 0, G.SPCL_TRF_AMT) < 0 THEN 0
                      ELSE 0
                      END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NOT NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) SPCL_TRF_AMT
                     
       --, (SELECT G.DC_AMT
       , (SELECT ROUND( (-G.DC_AMT + G.SVC_FEE_AMT)*-1 ,2 )
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NOT NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) ADJUST_AMT

       , (SELECT CASE WHEN G.TTL_AMT > 0 AND G.AR_IF_NO IS NOT NULL THEN ROUND( G.TTL_AMT, 2 )
                   WHEN G.TTL_AMT < 0 THEN 0
                   ELSE 0
                   END END
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NOT NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) INVOICE_AMT
                     
       --, (SELECT MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(G.UPD_DT, 'YYYYMM'), G.CURR_CD, 'USD', G.TTL_AMT)
       , (SELECT CASE WHEN G.TTL_AMT > 0 AND G.AR_IF_NO IS NOT NULL THEN
                        ROUND( MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC( TO_CHAR(G.TRO_IB_CFM_DT , 'YYYYMM') , G.CURR_CD, 'USD' ,G.TTL_AMT), 2 )
                      WHEN G.TTL_AMT < 0 THEN 0
                      ELSE 0
                      END END 
           FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
            AND G.AR_IF_NO IS NOT NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) INVOICE_USD_AMT

         #end
    
         , (SELECT 			
			
			-- D.DRP_OFF_CHG_TRF_AMT 
			-- Currency Convert

			 ROUND( D.DRP_OFF_CHG_TRF_AMT ,2 ) 

              FROM DOD_DRP_OFF_CHG_TRF D
             WHERE 1 = 1
               AND DECODE(D.DEL_CD, NULL, '1', D.DEL_CD) = DECODE(D.DEL_CD, NULL, '1', B.POD_CD)
               AND D.CNTR_RTN_LOC_CD = SUBSTR(E.CNTR_RTN_YD_CD, 1, 5)
               AND DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', D.CNTR_RTN_YD_SFX_CD) = DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', SUBSTR(E.CNTR_RTN_YD_CD, 6, 2))
               AND D.POL_CONTI_CD = SUBSTR(B.ORG_SCONTI_CD, 1, 1)
               AND D.CNTR_TPSZ_CD = E.CNTR_TPSZ_CD
               AND D.DRP_OFF_CHG_TRF_DIV_CD = 'S'
               AND D.DRP_OFF_CHG_TRF_CFM_FLG = 'Y'
               AND D.DRP_OFF_CHG_TRF_EXPT_FLG = 'N'
               AND B.POL_ETD_DT BETWEEN TO_DATE(D.DRP_OFF_CHG_TRF_EFF_DT, 'YYYYMMDD') + .0 AND TO_DATE(D.DRP_OFF_CHG_TRF_EXP_DT, 'YYYYMMDD') + .99999
               AND DECODE(D.SPCL_CUST_CNT_CD, NULL, '1', D.SPCL_CUST_CNT_CD) = DECODE(D.SPCL_CUST_CNT_CD, NULL, '1', B.AGMT_ACT_CNT_CD)
               AND DECODE(D.SPCL_CUST_SEQ, NULL, 1, D.SPCL_CUST_SEQ) = DECODE(D.SPCL_CUST_SEQ, NULL, 1, B.AGMT_ACT_CUST_SEQ)
               AND DECODE(D.SC_NO, NULL, D.RFA_NO, D.SC_NO) = DECODE(D.SC_NO, NULL, B.RFA_NO, B.SC_NO)
    
               AND NVL(D.DEL_CD||D.CNTR_RTN_YD_SFX_CD, 1) = 
                 (SELECT NVL(MAX(D.DEL_CD)||MAX(D.CNTR_RTN_YD_SFX_CD), 1)
                    FROM DOD_DRP_OFF_CHG_TRF D
                     WHERE 1 = 1
                       AND DECODE(D.DEL_CD, NULL, '1', D.DEL_CD) = DECODE(D.DEL_CD, NULL, '1', B.POD_CD)
                       AND D.CNTR_RTN_LOC_CD = SUBSTR(E.CNTR_RTN_YD_CD, 1, 5)
                       AND DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', D.CNTR_RTN_YD_SFX_CD) = DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', SUBSTR(E.CNTR_RTN_YD_CD, 6, 2))
                       AND D.POL_CONTI_CD = SUBSTR(B.ORG_SCONTI_CD, 1, 1)
                       AND D.CNTR_TPSZ_CD = E.CNTR_TPSZ_CD
                       AND D.DRP_OFF_CHG_TRF_DIV_CD = 'S'
                       AND D.DRP_OFF_CHG_TRF_CFM_FLG = 'Y'
                       AND D.DRP_OFF_CHG_TRF_EXPT_FLG = 'N'
                       AND B.POL_ETD_DT BETWEEN TO_DATE(D.DRP_OFF_CHG_TRF_EFF_DT, 'YYYYMMDD') + .0 AND TO_DATE(D.DRP_OFF_CHG_TRF_EXP_DT, 'YYYYMMDD') + .99999
                       AND DECODE(D.SPCL_CUST_CNT_CD, NULL, '1', D.SPCL_CUST_CNT_CD) = DECODE(D.SPCL_CUST_CNT_CD, NULL, '1', B.AGMT_ACT_CNT_CD)
                       AND DECODE(D.SPCL_CUST_SEQ, NULL, 1, D.SPCL_CUST_SEQ) = DECODE(D.SPCL_CUST_SEQ, NULL, 1, B.AGMT_ACT_CUST_SEQ)
                       AND DECODE(D.SC_NO, NULL, D.RFA_NO, D.SC_NO) = DECODE(D.SC_NO, NULL, B.RFA_NO, B.SC_NO)
                       )
               
                      AND NVL(D.SPCL_CUST_CNT_CD||D.SPCL_CUST_SEQ, 1) = 
                          (SELECT NVL(MAX(D.SPCL_CUST_CNT_CD||D.SPCL_CUST_SEQ), 1)
                            FROM DOD_DRP_OFF_CHG_TRF D
                           WHERE 1 = 1
                             AND DECODE(D.DEL_CD, NULL, '1', D.DEL_CD) = DECODE(D.DEL_CD, NULL, '1', B.POD_CD)
                             AND D.CNTR_RTN_LOC_CD = SUBSTR(E.CNTR_RTN_YD_CD, 1, 5)
                             AND DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', D.CNTR_RTN_YD_SFX_CD) = DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', SUBSTR(E.CNTR_RTN_YD_CD, 6, 2))
                             AND D.POL_CONTI_CD = SUBSTR(B.ORG_SCONTI_CD, 1, 1)
                             AND D.CNTR_TPSZ_CD = E.CNTR_TPSZ_CD
                             AND D.DRP_OFF_CHG_TRF_DIV_CD = 'S'
                             AND D.DRP_OFF_CHG_TRF_CFM_FLG = 'Y'
                             AND D.DRP_OFF_CHG_TRF_EXPT_FLG = 'N'
                             AND B.POL_ETD_DT BETWEEN TO_DATE(D.DRP_OFF_CHG_TRF_EFF_DT, 'YYYYMMDD') + .0 AND TO_DATE(D.DRP_OFF_CHG_TRF_EXP_DT, 'YYYYMMDD') + .99999
                             AND DECODE(D.SPCL_CUST_CNT_CD, NULL, '1', D.SPCL_CUST_CNT_CD) = DECODE(D.SPCL_CUST_CNT_CD, NULL, '1', B.AGMT_ACT_CNT_CD)
                             AND DECODE(D.SPCL_CUST_SEQ, NULL, 1, D.SPCL_CUST_SEQ) = DECODE(D.SPCL_CUST_SEQ, NULL, 1, B.AGMT_ACT_CUST_SEQ)
                             AND DECODE(D.SC_NO, NULL, D.RFA_NO, D.SC_NO) = DECODE(D.SC_NO, NULL, B.RFA_NO, B.SC_NO)         
                             )   
                       AND NOT EXISTS (SELECT 'OK'
                                      FROM DOD_DRP_OFF_CHG G
                                     WHERE G.BKG_NO = E.BKG_NO
                                       AND G.CNTR_NO = E.CNTR_NO
                                       )      
                            
        ) SPC_AMT
        
        ,( SELECT 

			-- D.DRP_OFF_CHG_TRF_AMT 
			-- Currency Convert

			ROUND( D.DRP_OFF_CHG_TRF_AMT ,2 ) 

            FROM DOD_DRP_OFF_CHG_TRF D
           WHERE 1 = 1
             AND DECODE(D.DEL_CD, NULL, '1', D.DEL_CD) = DECODE(D.DEL_CD, NULL, '1', B.POD_CD)
             AND D.CNTR_RTN_LOC_CD = SUBSTR(E.CNTR_RTN_YD_CD, 1, 5)
             AND DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', D.CNTR_RTN_YD_SFX_CD) = DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', SUBSTR(E.CNTR_RTN_YD_CD, 6, 2))
             AND D.POL_CONTI_CD = SUBSTR(B.ORG_SCONTI_CD, 1, 1)
             AND D.CNTR_TPSZ_CD = E.CNTR_TPSZ_CD
             AND D.DRP_OFF_CHG_TRF_DIV_CD = 'G'
             AND D.DRP_OFF_CHG_TRF_CFM_FLG = 'Y'
             AND D.DRP_OFF_CHG_TRF_EXPT_FLG = 'N'
             AND B.POL_ETD_DT BETWEEN TO_DATE(D.DRP_OFF_CHG_TRF_EFF_DT, 'YYYYMMDD') + .0 AND TO_DATE(D.DRP_OFF_CHG_TRF_EXP_DT, 'YYYYMMDD') + .99999
    
              AND NVL(D.DEL_CD||D.CNTR_RTN_YD_SFX_CD, 1) = 
                   (SELECT NVL(MAX(D.DEL_CD)||MAX(D.CNTR_RTN_YD_SFX_CD), 1)
                     FROM DOD_DRP_OFF_CHG_TRF D
                        WHERE 1 = 1
                     AND DECODE(D.DEL_CD, NULL, '1', D.DEL_CD) = DECODE(D.DEL_CD, NULL, '1', B.POD_CD)
                          AND D.CNTR_RTN_LOC_CD = SUBSTR(E.CNTR_RTN_YD_CD, 1, 5)
                          AND DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', D.CNTR_RTN_YD_SFX_CD) = DECODE(D.CNTR_RTN_YD_SFX_CD, NULL, '1', SUBSTR(E.CNTR_RTN_YD_CD, 6, 2))
                          AND D.POL_CONTI_CD = SUBSTR(B.ORG_SCONTI_CD, 1, 1)
                          AND D.CNTR_TPSZ_CD = E.CNTR_TPSZ_CD
                          AND D.DRP_OFF_CHG_TRF_DIV_CD = 'G'
                          AND D.DRP_OFF_CHG_TRF_CFM_FLG = 'Y'
                          AND D.DRP_OFF_CHG_TRF_EXPT_FLG = 'N'
                          AND B.POL_ETD_DT BETWEEN TO_DATE(D.DRP_OFF_CHG_TRF_EFF_DT, 'YYYYMMDD') + .0 AND TO_DATE(D.DRP_OFF_CHG_TRF_EXP_DT, 'YYYYMMDD') + .99999
                     )
             AND NOT EXISTS (SELECT 'OK'
                                      FROM DOD_DRP_OFF_CHG G
                                     WHERE G.BKG_NO = E.BKG_NO
                                       AND G.CNTR_NO = E.CNTR_NO
                             )     
          ) GEN_AMT
      
        , (SELECT  
               NVL((CASE WHEN G.DRP_OFF_CHG_TRF_SPCL_SEQ IS NULL
                    THEN (SELECT F.DRP_OFF_CHG_TRF_EXPT_FLG
                            FROM DOD_DRP_OFF_CHG D, DOD_DRP_OFF_CHG_TRF F
                           WHERE D.BKG_NO = G.BKG_NO
                             AND D.CNTR_NO = G.CNTR_NO
                             AND D.DRP_OFF_CHG_TRF_SEQ = F.DRP_OFF_CHG_TRF_SEQ
                             AND D.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                                    FROM DOD_DRP_OFF_CHG C
                                   WHERE C.BKG_NO = G.BKG_NO
                                     AND C.CNTR_NO = G.CNTR_NO))
                     ELSE (SELECT F.DRP_OFF_CHG_TRF_EXPT_FLG
                            FROM DOD_DRP_OFF_CHG D, DOD_DRP_OFF_CHG_TRF F
                           WHERE D.BKG_NO = G.BKG_NO
                             AND D.CNTR_NO = G.CNTR_NO
                             AND D.DRP_OFF_CHG_TRF_SPCL_SEQ = F.DRP_OFF_CHG_TRF_SEQ
                             AND D.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                                    FROM DOD_DRP_OFF_CHG C
                                   WHERE C.BKG_NO = G.BKG_NO
                                     AND C.CNTR_NO = G.CNTR_NO))
                    END), 'N')
             FROM DOD_DRP_OFF_CHG G
             WHERE G.BKG_NO = E.BKG_NO
               AND G.CNTR_NO = E.CNTR_NO
               AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                                          FROM DOD_DRP_OFF_CHG C
                                         WHERE C.BKG_NO = G.BKG_NO
                                           AND C.CNTR_NO = G.CNTR_NO) )    EXEMPTION
           
     #if(${ar_if} != 'N')
      , (SELECT G.TRO_IB_CFM_OFC_CD
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) INV_OFC  

      , (SELECT TO_CHAR(G.CRE_DT, 'YYYY-MM-DD')
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) AR_IF_DT
                     
      , (SELECT G.CRE_USR_ID
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                    FROM DOD_DRP_OFF_CHG C
                   WHERE C.BKG_NO = G.BKG_NO
                     AND C.CNTR_NO = G.CNTR_NO) ) CRE_USR_ID
      #else
     , (SELECT G.TRO_IB_CFM_OFC_CD
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.AR_IF_NO IS NULL
                         AND C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) INV_OFC  

      , (SELECT TO_CHAR(G.CRE_DT, 'YYYY-MM-DD')
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
             AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.AR_IF_NO IS NULL
                         AND C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) AR_IF_DT
                     
      , (SELECT G.CRE_USR_ID
            FROM DOD_DRP_OFF_CHG G
           WHERE G.BKG_NO = E.BKG_NO
             AND G.CNTR_NO = E.CNTR_NO
            AND G.AR_IF_NO IS NULL
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.AR_IF_NO IS NULL
                         AND C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) CRE_USR_ID
    #end

    , (SELECT 1
                FROM DOD_DRP_OFF_CHG G
               WHERE G.BKG_NO = E.BKG_NO
                 AND G.CNTR_NO = E.CNTR_NO
                 AND G.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                        FROM DOD_DRP_OFF_CHG C
                       WHERE C.BKG_NO = G.BKG_NO
                         AND C.CNTR_NO = G.CNTR_NO) ) INV_CNTR 

    FROM BKG_EUR_TRO E
       , BKG_BOOKING B
    WHERE 1=1
     AND E.BKG_NO = B.BKG_NO
     AND E.IO_BND_CD = 'I'
     AND E.HLG_TP_CD = 'M'
     AND SUBSTR(E.CNTR_RTN_YD_CD, 1, 5) <> B.DEL_CD
     AND E.CXL_FLG = 'N'
     AND E.CFM_FLG = 'Y'
     AND E.TRO_SEQ = (SELECT MAX(TT.TRO_SEQ)
                               FROM BKG_EUR_TRO TT
                              WHERE TT.BKG_NO = E.BKG_NO
                                AND TT.CNTR_NO = E.CNTR_NO
                                AND TT.IO_BND_CD = 'I') 

	-- MultiCheck Detail
     #if(${item_list} != '')

        AND ( E.CFM_OFC_CD || SUBSTR(E.CNTR_RTN_YD_CD,1,5) || E.CNTR_TPSZ_CD )
          IN (
        
       #foreach( $an_item in ${item_list} )
          #if($velocityCount < $item_list.size()) $an_item, #else $an_item #end
       #end

     #end   
           )
           
           
   #if(${ar_if} == 'Y')
                
       AND EXISTS  (SELECT 'OK'
                FROM DOD_DRP_OFF_CHG GG
               WHERE GG.BKG_NO = E.BKG_NO
                 AND GG.CNTR_NO = E.CNTR_NO
                 AND GG.AR_IF_NO IS NOT NULL
                 AND GG.DRP_OFF_CHG_SEQ = (SELECT MAX(C.DRP_OFF_CHG_SEQ)
                                             FROM DOD_DRP_OFF_CHG C
                                            WHERE C.AR_IF_NO IS NOT NULL
                                              AND C.BKG_NO = GG.BKG_NO
                                              AND C.CNTR_NO = GG.CNTR_NO)) 
  
   #end

  #if(${cust_cd} != '')
    AND EXISTS (SELECT 'OK'
                FROM DOD_DRP_OFF_CHG GG
                WHERE GG.BKG_NO = E.BKG_NO
                  AND GG.CNTR_NO = E.CNTR_NO

    AND GG.CUST_CNT_CD || LPAD(GG.CUST_SEQ, 6, '0') = @[cust_cd]
	)
  #end

      -- TRO DATE (DATE, MONTH, WEEK 별) 
	#if (${period} == 'W') 
		AND	E.CFM_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[s_from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[s_to]
							) 
	
	#elseif (${period} == 'D' || ${period} == 'M') 
    	AND 	E.CFM_DT BETWEEN 	TO_DATE( @[s_from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[s_to], 'YYYYMMDD') + .99999
	#end
) A
) A
) A
#if(${ar_if} == 'N')
WHERE A.PENDING_AMT > 0
 OR A.EXEMPTION = 'Y'
 OR INV_CNTR > 0 
#end
#if(${ar_if} == 'A')
WHERE A.PENDING_AMT > 0
  OR INV_CNTR > 0
#end
			]]></sql>
			<params>
				<param name="cust_cd" type="12" value="" out="N"/>
				<param name="s_from" type="12" value="" out="N"/>
				<param name="s_to" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
