<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InvoiceIssueCollectionMgtDBDAOSearchOTSInquiryByDetailList2RSQL">
			<desc><![CDATA[down to excel detail rate]]></desc>
			<sql><![CDATA[
WITH INV_DATA AS (
select  case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then ''
				else MAIN.DMDT_INV_NO
		end																	as INVNOO
       ,MAIN.DMDT_TRF_CD 													as CHARGE
       ,MAIN.VSL_CD||MAIN.SKD_VOY_NO||MAIN.SKD_DIR_CD 						as VVDCDD
       ,MAIN.SC_NO 															as SCNOOO
       ,MAIN.BL_NO 															as BLNOOO
       ,decode(MAIN.DMDT_TRF_CD, 'DMIF', MAIN.POD_CD
                               , 'DMOF', MAIN.POL_CD 
                               , 'DTIC', MAIN.DEL_CD 
                               , 'CTIC', MAIN.DEL_CD 
                               , 'DTOC', MAIN.POR_CD 
                               , 'CTOC', MAIN.POR_CD 
                               , '') 										as LOCCDD
       ,DTIL.CNTR_NO 														as CNTRNO
       ,DTIL.CNTR_TPSZ_CD 													as TYSZCD
       ,to_char(DTIL.FM_MVMT_DT , 'DDMonYY' , 'NLS_DATE_LANGUAGE=ENGLISH') 	as STPDFR
       ,to_char(DTIL.TO_MVMT_DT , 'DDMonYY' , 'NLS_DATE_LANGUAGE=ENGLISH') 	as STPDTO
       ,to_char(DTIL.FT_CMNC_DT , 'DDMonYY' , 'NLS_DATE_LANGUAGE=ENGLISH') 	as FTCMNC
       ,to_char(DTIL.FT_END_DT  , 'DDMonYY' , 'NLS_DATE_LANGUAGE=ENGLISH') 	as FTCMPL
       ,DTIL.FT_DYS 														as FREEDY
--       ,DTIL.FX_FT_OVR_DYS 													as OVERDY
       ,NVL(DTIL.FX_FT_OVR_DYS, DECODE(SUBSTR(MAIN.DMDT_INV_NO, 3,1), 'M', 
            (SELECT SUM(RT_OVR_DYS) 
             FROM DMT_INV_RT RATE 
             WHERE DTIL.DMDT_INV_NO = RATE.DMDT_INV_NO 
                AND DTIL.CRE_OFC_CD = RATE.CRE_OFC_CD 
                AND DTIL.INV_DTL_SEQ = RATE.INV_DTL_SEQ
            ), 0
        ))    as OVERDY
       ,MAIN.CHG_CURR_CD 													as CURRCY
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then (
						select  BIL_AMT
						  FROM  DMT_CHG_CALC
						 WHERE  SYS_AREA_GRP_ID 	= DTIL.SYS_AREA_GRP_ID
						   AND  CNTR_NO 			= DTIL.CNTR_NO
						   AND  CNTR_CYC_NO 		= DTIL.CNTR_CYC_NO
						   AND  DMDT_TRF_CD 		= DTIL.DMDT_TRF_CD
						   AND  DMDT_CHG_LOC_DIV_CD = DTIL.DMDT_CHG_LOC_DIV_CD
						   AND  CHG_SEQ 			= DTIL.CHG_SEQ
					 )				
			 when(substr(MAIN.DMDT_INV_NO, 3,1) = 'M' AND nvl(DTIL.CNTR_NO,'N') = 'N') 
				then MAIN.INV_CHG_AMT
             when(substr(MAIN.DMDT_INV_NO, 3,1) = 'M' AND nvl(DTIL.CNTR_INV_AMT,0) = 0) 
				then (
						select  SUM(RT_OVR_CHG_AMT) 
						  FROM  DMT_INV_RT RATE
                         WHERE  DTIL.DMDT_INV_NO = RATE.DMDT_INV_NO
                           AND  DTIL.CRE_OFC_CD = RATE.CRE_OFC_CD
                           AND  DTIL.INV_DTL_SEQ = RATE.INV_DTL_SEQ
					 )
             else DTIL.CNTR_INV_AMT
        end 																as NETAMT
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then 0
			 when(substr(MAIN.DMDT_INV_NO, 3,1) = 'M' AND nvl(DTIL.CNTR_NO,'N') = 'N') 
				then MAIN.TAX_AMT
             when(substr(MAIN.DMDT_INV_NO, 3,1) = 'M' AND nvl(DTIL.CNTR_INV_AMT,0) = 0) 
				then (
						select  SUM(RT_OVR_CHG_AMT * MAIN.TAX_RTO * 0.01) 
						  FROM  DMT_INV_RT RATE
                         WHERE  DTIL.DMDT_INV_NO = RATE.DMDT_INV_NO
                           AND  DTIL.CRE_OFC_CD  = RATE.CRE_OFC_CD
                           AND  DTIL.INV_DTL_SEQ = RATE.INV_DTL_SEQ
					 )
             else DTIL.TAX_AMT
        end 																as TAXAMT
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then (
						select  BIL_AMT
						  FROM  DMT_CHG_CALC
						 WHERE  SYS_AREA_GRP_ID 	= DTIL.SYS_AREA_GRP_ID
						   AND  CNTR_NO 			= DTIL.CNTR_NO
						   AND  CNTR_CYC_NO 		= DTIL.CNTR_CYC_NO
						   AND  DMDT_TRF_CD 		= DTIL.DMDT_TRF_CD
						   AND  DMDT_CHG_LOC_DIV_CD = DTIL.DMDT_CHG_LOC_DIV_CD
						   AND  CHG_SEQ 			= DTIL.CHG_SEQ
					 )
			 when(substr(MAIN.DMDT_INV_NO, 3,1) = 'M' AND nvl(DTIL.CNTR_NO,'N') = 'N') 
				then MAIN.INV_AMT
             when(substr(MAIN.DMDT_INV_NO, 3,1) = 'M' AND nvl(DTIL.CNTR_INV_AMT,0) = 0) 
				then (
						select  SUM((RT_OVR_CHG_AMT * MAIN.TAX_RTO * 0.01)+RT_OVR_CHG_AMT) 
						  FROM  DMT_INV_RT RATE
                         WHERE  DTIL.DMDT_INV_NO = RATE.DMDT_INV_NO
                           AND  DTIL.CRE_OFC_CD  = RATE.CRE_OFC_CD
                           AND  DTIL.INV_DTL_SEQ = RATE.INV_DTL_SEQ
				     ) 
            else ( DTIL.CNTR_INV_AMT + DTIL.TAX_AMT )
        end TOTAMT
##     ,DTIL.CNTR_INV_AMT NETAMT
##     ,DTIL.TAX_AMT AS TAXAMT
##     ,(DTIL.CNTR_INV_AMT + DTIL.TAX_AMT ) AS TOTAMT
	   ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then ''
			 else
				to_char(MAIN.CRE_DT , 'DDMonYY' , 'NLS_DATE_LANGUAGE=ENGLISH')
		end 																as ISSUDT
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then 0
			 else
				to_date(to_char(sysdate, 'YYYYMMDD') , 'YYYYMMDD') - to_date(to_char(MAIN.CRE_DT , 'YYYYMMDD') , 'YYYYMMDD')
		end 																as OVEDAY
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then (
						select  ORG_CHG_AMT
						  FROM  DMT_CHG_CALC
						 WHERE  SYS_AREA_GRP_ID 	= DTIL.SYS_AREA_GRP_ID
						   AND  CNTR_NO 			= DTIL.CNTR_NO
						   AND  CNTR_CYC_NO 		= DTIL.CNTR_CYC_NO
						   AND  DMDT_TRF_CD 		= DTIL.DMDT_TRF_CD
						   AND  DMDT_CHG_LOC_DIV_CD = DTIL.DMDT_CHG_LOC_DIV_CD
						   AND  CHG_SEQ 			= DTIL.CHG_SEQ
					 )		 
			 else
					(
						select  ORG_CHG_AMT     
						  FROM  DMT_CHG_CALC 
						 WHERE  DMDT_INV_NO = DTIL.DMDT_INV_NO 
						   AND  CNTR_NO     = DTIL.CNTR_NO 
						   AND  ROWNUM      = 1
					)
		end																	as ORG_CHG_AMT
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then (
						select  CMDT_EXPT_AMT
						  FROM  DMT_CHG_CALC
						 WHERE  SYS_AREA_GRP_ID 	= DTIL.SYS_AREA_GRP_ID
						   AND  CNTR_NO 			= DTIL.CNTR_NO
						   AND  CNTR_CYC_NO 		= DTIL.CNTR_CYC_NO
						   AND  DMDT_TRF_CD 		= DTIL.DMDT_TRF_CD
						   AND  DMDT_CHG_LOC_DIV_CD = DTIL.DMDT_CHG_LOC_DIV_CD
						   AND  CHG_SEQ 			= DTIL.CHG_SEQ
					 )		 
			 else
					(
						select  CMDT_EXPT_AMT     
						  FROM  DMT_CHG_CALC 
						 WHERE  DMDT_INV_NO = DTIL.DMDT_INV_NO 
						   AND  CNTR_NO     = DTIL.CNTR_NO 
						   AND  ROWNUM      = 1
					)
		end																	as CMDT_EXPT_AMT		
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then (
						select  SC_RFA_EXPT_AMT
						  FROM  DMT_CHG_CALC
						 WHERE  SYS_AREA_GRP_ID 	= DTIL.SYS_AREA_GRP_ID
						   AND  CNTR_NO 			= DTIL.CNTR_NO
						   AND  CNTR_CYC_NO 		= DTIL.CNTR_CYC_NO
						   AND  DMDT_TRF_CD 		= DTIL.DMDT_TRF_CD
						   AND  DMDT_CHG_LOC_DIV_CD = DTIL.DMDT_CHG_LOC_DIV_CD
						   AND  CHG_SEQ 			= DTIL.CHG_SEQ
					 )		 
			 else
					(
						select  SC_RFA_EXPT_AMT     
						  FROM  DMT_CHG_CALC 
						 WHERE  DMDT_INV_NO = DTIL.DMDT_INV_NO 
						   AND  CNTR_NO     = DTIL.CNTR_NO 
						   AND  ROWNUM      = 1
					)
		end																	as SC_RFA_EXPT_AMT		
       ,case when MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C'
				then (
						select  AFT_EXPT_DC_AMT
						  FROM  DMT_CHG_CALC
						 WHERE  SYS_AREA_GRP_ID 	= DTIL.SYS_AREA_GRP_ID
						   AND  CNTR_NO 			= DTIL.CNTR_NO
						   AND  CNTR_CYC_NO 		= DTIL.CNTR_CYC_NO
						   AND  DMDT_TRF_CD 		= DTIL.DMDT_TRF_CD
						   AND  DMDT_CHG_LOC_DIV_CD = DTIL.DMDT_CHG_LOC_DIV_CD
						   AND  CHG_SEQ 			= DTIL.CHG_SEQ
					 )		 
			 else
					(
						select  AFT_EXPT_DC_AMT     
						  FROM  DMT_CHG_CALC 
						 WHERE  DMDT_INV_NO = DTIL.DMDT_INV_NO 
						   AND  CNTR_NO     = DTIL.CNTR_NO 
						   AND  ROWNUM      = 1
					)
		end																	as AFT_EXPT_DC_AMT			
	   ,(
			select  TAA_NO          
			  FROM  BKG_BOOKING  
			 WHERE  BKG_NO = MAIN.BKG_NO 
		) 																	as TAA_NO
       ,MAIN.RFA_NO
	   ,MAIN.POL_CD
	   ,MAIN.POD_CD
	   ,MAIN.DEL_CD
	   ,CASE
			WHEN MAIN.DMDT_INV_STS_CD = 'X' AND MAIN.DMDT_VT_INV_STS_CD = 'C' THEN
				''
			ELSE
				MAIN.INV_RMK
		END																as INV_RMK
	   ,SH.CUST_CNT_CD||SH.CUST_SEQ SH_CUST_CD
	   ,SH.CUST_NM SH_CUST_NM
	   ,CN.CUST_CNT_CD||CN.CUST_SEQ CN_CUST_CD
       ,CN.CUST_NM CN_CUST_NM
   	   ,CASE 
			WHEN ATTR_CTNT1 IS NULL THEN -- AUTO I/F 가 아닐 경우 (INVOICE 발행 OFFICE 가 AUTO I/F 대상 OFFICE 가 아닐 경우)
				CASE 
					WHEN DMDT_INV_STS_CD = 'I' AND DMDT_AR_IF_CD = 'Y' THEN 
						'Y'
                    ELSE 
						'N'
                END
            ELSE -- AUTO I/F 일 경우 (INVOICE 발행 OFFICE 가 AUTO I/F 대상 OFFICE 일 경우)
				NVL(OTS_CLT_FLG, 'N')
        END V_COLLECTED
	   ,INV_XCH_RT
	   ,INV_CURR_CD
	   ,BKG_CNTR_QTY
	   ,INV_DTL_SEQ
	   ,MAIN.BIL_AMT
		 
  FROM  DMT_INV_MN  		MAIN
       ,DMT_INV_DTL 		DTIL
       ,BKG_CUSTOMER 		SH
       ,BKG_CUSTOMER 		CN
       ,DMT_HRD_CDG_CTNT 	D
	   
 WHERE  MAIN.DMDT_INV_NO 	 = DTIL.DMDT_INV_NO(+)
   AND  MAIN.CRE_OFC_CD  	 = DTIL.CRE_OFC_CD(+)
   AND  MAIN.CRE_OFC_CD      = D.ATTR_CTNT1(+)
   AND  D.HRD_CDG_ID(+)      = 'AUTO_AR_IF_OFC'
   AND  MAIN.BKG_NO 		 = SH.BKG_NO(+)
   AND  SH.BKG_CUST_TP_CD(+) = 'S'
   AND  MAIN.BKG_NO 		 = CN.BKG_NO(+)
   AND  CN.BKG_CUST_TP_CD(+) = 'C'
#if ( ${invno} != '' )
   AND  MAIN.DMDT_INV_NO in
		(
			#foreach( $dmdt_inv_no_p in ${tempINVNOList}) 
				#if($velocityCount < $tempINVNOList.size()) 
				   '$dmdt_inv_no_p', 
				#else 
				   '$dmdt_inv_no_p' 
				#end 
			#end
        )
#end

#if ( ${creof} != '' )
   AND  MAIN.CRE_OFC_CD in 
		(
			#foreach( $cre_ofc_cd_p in ${tempCREOFList}) 
				#if($velocityCount < $tempCREOFList.size()) 
				   '$cre_ofc_cd_p', 
				#else 
				   '$cre_ofc_cd_p' 
				#end 
			#end
        )
#end
)   
SELECT M.* 
-- overpayment 관련 마이너스 금액 표시되도록 그대로 금액 반영
--	,DECODE(V_COLLECTED,'Y','',COL_CHARGE1) AS COL_CHARGE
--	,DECODE(V_COLLECTED,'Y','',COL_TAX1) AS COL_TAX
	,COL_CHARGE1 AS COL_CHARGE
	,COL_TAX1 AS COL_TAX
	,NVL(NETAMT,0) - (NVL(COL_CHARGE1,0))  AS UNCOL_AMT
FROM (
SELECT T1.*
--   ,CASE 
-- overpayment 관련 마이너스 금액 표시되도록 그대로 금액 반영
--		WHEN (V_COLLECTED = 'Y')
--        THEN NETAMT	
--        ELSE 
--           CASE 
--			WHEN BKG_CNTR_QTY != 1                      
--               THEN ROUND( COL_CHARGE * NETAMT/BIL_AMT,2)                      
--               ELSE COL_CHARGE 
--           END
--     END AS COL_CHARGE1
	, COL_CHARGE AS COL_CHARGE1
-- overpayment 관련 마이너스 금액 표시되도록 그대로 금액 반영
--	 CASE WHEN (V_COLLECTED = 'Y')
--        THEN COL_TAX	
--        ELSE 
--           CASE WHEN BKG_CNTR_QTY != 1                   
--               THEN ROUND( COL_TAX * NETAMT/BIL_AMT,2)
--               ELSE COL_TAX 
--           END
--     END AS COL_TAX1	
	, COL_TAX AS COL_TAX1
    , TO_CHAR(T2.COL_DATE, 'YYYY-MM-DD') AS COL_DATE
    FROM INV_DATA T1
    ,(
    SELECT 
    	A.DMDT_INV_NO 
	    , SUM(DECODE(DMDT_INV_PAY_TP_CD,'M',ROUND((NETAMT/BIL_AMT)*INV_PAY_AMT/DECODE(A.INV_CURR_CD,B.CURRCY,1,INV_XCH_RT),4),0)) AS COL_CHARGE
    	, SUM(DECODE(DMDT_INV_PAY_TP_CD,'V',ROUND((NETAMT/BIL_AMT)*INV_PAY_AMT/DECODE(A.INV_CURR_CD,B.CURRCY,1,INV_XCH_RT),4),0)) AS COL_TAX
		, MAX(INV_PAY_DT)  AS COL_DATE
		, MAX(INV_PAY_COFF_DT) AS COL_DUE_DT, CNTRNO
    FROM DMT_INV_OTS_PAY_RCV A , INV_DATA B
    WHERE B.INVNOO = A.DMDT_INV_NO(+)
    GROUP BY A.DMDT_INV_NO, CNTRNO
    ) T2
    WHERE T1.INVNOO = T2.DMDT_INV_NO(+)
    AND T1.CNTRNO = T2.CNTRNO(+)
ORDER BY T1.INVNOO,T1.CNTRNO
) M			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
