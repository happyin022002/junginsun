<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrRepoPlanKpiAnalysisDBDAOSearchForecastedMatchBackInfoRSQL">
			<desc><![CDATA[forecast MatchBack 데이터 조회]]></desc>
			<sql><![CDATA[
#if(${atStatus} != '') 				
    ## RCC
    #if(${atStatus} == 'R') 
		--RCC
        #set($typeStr = "rcc_cd") 
    #end
    ## LCC
    #if(${atStatus} == 'L') 
		-- LCC
        #set($typeStr = "lcc_cd") 
    #end
    ## ECC
    #if(${atStatus} == 'E') 
		-- ECC
        #set($typeStr = "ecc_cd") 
    #end					
#end
	#if(${locOrTrade} == '1') 

    	#if( ${locOrTrade} == '1' && ${byLocation} == 'P' )	 
  		
    		#if(${report} == 'P')       													
				SELECT  	
					''	##AAAA##																			
                 	, PLN_YRWK   
					, CO_CD  
					#if(${locOrTrade} == '1' && ${byLocation} == 'P')	
		    			,PORT																					
		    			,VSL_LANE_CD   																							
		    			,VVD   														
		    			,TRADE   													
	    			#end										
					,SUM(LOFUL_20) LOFUL_20																								
				    ,SUM(LOFUL_40) LOFUL_40																								
				   	,SUM(LOFUL_HC) LOFUL_HC																								
				   	,SUM(LOFUL_45) LOFUL_45																								
				   	,SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) LOFUL_TTL					
				   	,SUM(LOEMP_20) LOEMP_20																									
				   	,SUM(LOEMP_40) LOEMP_40																								
				   	,SUM(LOEMP_HC) LOEMP_HC																								
				   	,SUM(LOEMP_45) LOEMP_45																								
				   	,SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) LOEMP_TTL					
				   	,SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45									
				        + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45)   LO_TOTAL					
				   	,SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP)    LO_TEU																   			
				   	,SUM(DCFUL_20) DCFUL_20																									
				   	,SUM(DCFUL_40) DCFUL_40																									
				  	,SUM(DCFUL_HC) DCFUL_HC																									
				  	,SUM(DCFUL_45) DCFUL_45																								
				   	,SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) DCFUL_TTL						
				   	,SUM(DCEMP_20) DCEMP_20																								
				    ,SUM(DCEMP_40) DCEMP_40																								
				    ,SUM(DCEMP_HC) DCEMP_HC																								
				    ,SUM(DCEMP_45) DCEMP_45																								
				    ,SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) DCEMP_TTL					
				    ,SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45									
				    	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)    DC_TOTAL				
				    ,SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)    DC_TEU					
				    ,CASE WHEN SUM(LOFUL_20) = SUM(DCFUL_20)                           
				    	THEN                                                         
				        	CASE WHEN SUM(LOFUL_20) = 0  AND SUM(DCFUL_20) = 0           
				       	    	THEN  													
				            		0													
				               	ELSE 															
				       		    	1													
				       	    END  		   											
				    	ELSE 														
				        	CASE WHEN SUM(LOFUL_20) > SUM(DCFUL_20)						                                                                
				            	THEN                                                                                                               
				               		ROUND(SUM(DCFUL_20) / SUM(LOFUL_20) * 100,1)                                                                                 
				               	ELSE                                                                                                               
				            		-ROUND((SUM(LOFUL_20) /  SUM(DCFUL_20)) * 100,1)                                                                                        
				            END 													 
				   	END   MATFUL20												
				 	,CASE WHEN SUM(LOFUL_40) = SUM(DCFUL_40)								
				    	THEN															
				        	CASE WHEN SUM(LOFUL_40) = 0  AND SUM(LOFUL_40) = 0				
				       			THEN  												
				       		    	0												
				       			ELSE 												
				       			    1												
				       		END  		   										
				    	ELSE 														
				        	CASE WHEN SUM(LOFUL_40) > SUM(DCFUL_40)                                                                                                  
				            	THEN                                                                                                               
				            		ROUND(SUM(DCFUL_40) / SUM(LOFUL_40) * 100,1)                                                                                 
				               	ELSE                                                                                                               
				            		-ROUND((SUM(LOFUL_40) /  SUM(DCFUL_40))* 100,1)                                                                                         
				            END 													
				 	END   MATFUL40													
				    ,CASE WHEN SUM(LOFUL_HC) = SUM(DCFUL_HC)							
				    	THEN															
				        	CASE WHEN SUM(LOFUL_HC) = 0  AND SUM(DCFUL_HC) = 0				
				       			THEN  												
				       				0												
				       			ELSE 															
				       				1											
				       		END  		   										
				    	ELSE 														
				        	CASE WHEN SUM(LOFUL_HC) > SUM(DCFUL_HC)                           	                                                                      
				            	THEN                                                                                                               
				            		ROUND(SUM(DCFUL_HC) / SUM(LOFUL_HC)* 100,1)                                                                                  
				               	ELSE                                                                                                               
				             		-ROUND((SUM(LOFUL_HC) / SUM(DCFUL_HC)) * 100,1)                                                                                        
				            END														  
				  	END   MATFULHC 												
				    ,CASE WHEN SUM(LOFUL_45) = SUM(DCFUL_45)							
				      	THEN															
				           	CASE WHEN SUM(LOFUL_45) = 0  AND SUM(DCFUL_45) = 0			
				    	    	THEN  												
				    		    	0											
				    		 	ELSE 												
				    		       	1												
				    	    END  		   											
				      	ELSE 														
				       		CASE WHEN SUM(LOFUL_45) > SUM(DCFUL_45)                           	                                                                       
				               	THEN                                                                                                               
				                   	ROUND(SUM(DCFUL_45) / SUM(LOFUL_45) * 100,1)                                                                                 
				           		ELSE                                                                                                               
				                   	-ROUND((SUM(LOFUL_45) / SUM(DCFUL_45)) * 100,1)                                                                                         
				           	END														  
					END   MATFUL45 												
				    ,CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) = SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45)  
				    	THEN															
				        	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) = 0  AND SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) = 0			
				       			THEN  												
				       				0											
				       			ELSE 														
				       				1											
				       		END  		   										
				   		ELSE 															
				        	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) > SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45)		                                                           
				           		THEN														                                                                                                               
				              		ROUND(SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) / SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) * 100,1)        
				               	ELSE                                                                                                                                                                   
				              		-ROUND((SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) / SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) * 100),1)                                                    
				            END                                                      
				   	END   MATFULTTL                                                          
				   	,CASE WHEN SUM(LOEMP_20) = SUM(DCEMP_20)                            
				    	THEN                                                          
				        	CASE WHEN SUM(LOEMP_20) = 0  AND SUM(DCEMP_20) = 0            
				       			THEN                                                
				       				0                                             
				       			ELSE                                                
				       			 	1                                             
				       		END  		                                          
				    	ELSE                                                          
				        	CASE WHEN SUM(LOEMP_20) > SUM(DCEMP_20)                                                                                                                        
				            	THEN                                                                                                                                       
				                	ROUND(SUM(DCEMP_20) / SUM(LOEMP_20) * 100,1)                                                                                                  
				            	ELSE                                                                                                                                   
				               		-ROUND((SUM(LOEMP_20) /  SUM(DCEMP_20)) * 100,1)                                                                                                        
				       		END                                                   
					END   MATEMP20                                                
				 	,CASE WHEN SUM(LOEMP_40) = SUM(DCEMP_40)                            
				   		THEN                                                          
				        	CASE WHEN SUM(LOEMP_40) = 0  AND SUM(DCEMP_40) = 0            
				       			THEN                                                
				       				0                                              
				       			ELSE                                                
				       			 	1                                             
				       		END  		                                         
				   		ELSE                                                          
				        	CASE WHEN SUM(LOEMP_40) > SUM(DCEMP_40)                                                                                                                     
				             	THEN                                                                                                               
				         			ROUND(SUM(DCEMP_40) / SUM(LOEMP_40) * 100 ,1)                                                                                
				               	ELSE                                                                                                               
				               		-ROUND((SUM(LOEMP_40) /  SUM(DCEMP_40)) * 100,1)                                                                                        
				       		END  													 
				 	END   MATEMP40                                                
					,CASE WHEN SUM(LOEMP_HC) = SUM(DCEMP_HC)                            
				    	THEN                                                          
				        	CASE WHEN SUM(LOEMP_HC) = 0  AND SUM(DCEMP_HC) = 0            
				       			THEN                                                
				       			 	0                                             
				       			ELSE                                                
				       				1                                             
				       		END                                                 		   
				  		ELSE                                                          
				        	CASE WHEN SUM(LOEMP_HC) > SUM(DCEMP_HC)                                                                                                   
				            	THEN                                                                                                               
				              		ROUND(SUM(DCEMP_HC) / SUM(LOEMP_HC) * 100,1)                                                                                 
				               	ELSE                                                                                                               
				                    -ROUND((SUM(LOEMP_HC) / SUM(DCEMP_HC)* 100),1)                                                                                         
				        	END                                                       
					END   MATEMPHC                                                
				  	,CASE WHEN SUM(LOEMP_45) = SUM(DCEMP_45)                             
				    	THEN                                                          
				        	CASE WHEN SUM(LOEMP_45) = 0  AND SUM(DCEMP_45) = 0            
				       		 	THEN                                                
				       				0                                             
				       			ELSE                                                
				       				1                                             
				       		END  		                                         
				    	ELSE                                                           
				        	CASE WHEN SUM(LOEMP_45) > SUM(DCEMP_45)                                                                                                                          
				          		THEN                                                                                                                                                              
				             		ROUND(SUM(DCEMP_45) / SUM(LOEMP_45) * 100,1)                                                                                 
				               	ELSE                                                                                                               
				              		-ROUND((SUM(LOEMP_45) / SUM(DCEMP_45)* 100 ),1)                                                                                        
				      		END                                                      
				  	END   MATEMP45                                                
				   	,CASE WHEN SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)                 
				    	THEN															 		
				          	CASE WHEN SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = 0  AND SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) = 0  
				       			THEN   											 
				       				0											 
				       			ELSE 												 			
				       			 	1											 	
				       		END  		   										 	
				     	ELSE 														 	
				        	CASE WHEN SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) > SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)					                                                                                                  
				            	THEN                                                                                                        		       
				               		ROUND(SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) / SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) *100 ,1)   	                                                                                   
				               	ELSE                                                                                                            		    
				                    -ROUND((SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) / SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)) * 100,1)                                                                                                
				        	END  													
				 	END   MATEMPTTL 												
					## 2007.11.20 류문필 부장님 요청으로 (%)로 구하는 로직으로 변경 
				    ,CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)         
				    	THEN															 		
				        	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = 0  AND SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) = 0  
				       			THEN   											 
				       			 	0											 
				       			ELSE 												 			
				       			 	1											 	
				      		END  		   										 	
				   		ELSE 														 	
				     		CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) > SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)					                                                                                                  
				           		THEN                                                                                                        		       
				               		ROUND(SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) / SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) *100 ,1)   	                                                                                   
				               	ELSE                                                                                                            		    
				                    -ROUND((SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) / SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)) * 100,1)                                                                                                
				    		END  													
					END   MATBOXTOTAL 												
				    ,CASE WHEN SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) = SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)         
				    	THEN															 		
				       		CASE WHEN SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) = 0  AND SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP) = 0  
				       			THEN   											 
				       				0											 
				       			ELSE 												 			
				       				1											 	
				       		END  		   										 	
				     	ELSE 														 	
				        	CASE WHEN SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) > SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)					                                                                                                  
				           		THEN                                                                                                        		       
				                    ROUND(SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP) / SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) *100 ,1)   	                                                                                   
				               	ELSE                                                                                                            		    
				                    -ROUND((SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) / SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)) * 100,1)                                                                                                
				         	END  													
				 	END   MATTEUTOTAL 	
				    ,''      														

				FROM 
					(																
				 		## (1)															
				 		SELECT 												
				   		   	PLN_YRWK  												 													
							,CO_CD  
				   		  	,PORT   																											
				   		  	,VSL_LANE_CD   																								
				   		  	,LST_PORT																											
				   		  	,VVD   																											
				   		  	,TRADE   													
						##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
							,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D2', CNTR_QTY_FULL 		         			
						                	 	 		  , 'R2', CNTR_QTY_FULL		              				
				  		                      			  , 'O2', CNTR_QTY_FULL		               				
				 		                    			  , 'F2', CNTR_QTY_FULL		              				
				 		                    			  , 'S2', CNTR_QTY_FULL		            
				 		                    	 		  , 'A2', CNTR_QTY_FULL , 0)) LOFUL_20	   	
				 			,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D4', CNTR_QTY_FULL   							
				 		                    	 		  , 'O4', CNTR_QTY_FULL	   				
				 		                    			  , 'A4', CNTR_QTY_FULL		            
				 		                    			  , 'S4', CNTR_QTY_FULL		            
				 		                    			  , 'F5', CNTR_QTY_FULL		            
				 		                    	 		  , 'F4', CNTR_QTY_FULL , 0)) LOFUL_40		
				 			,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D5', CNTR_QTY_FULL   							
							                    	 	  , 'R5', CNTR_QTY_FULL , 0)) LOFUL_HC		
							,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D7', CNTR_QTY_FULL , 0)) LOFUL_45 	  							
							,SUM(0) LOEMP_20											   	
							,SUM(0) LOEMP_40											   	
							,SUM(0) LOEMP_HC											   	
							,SUM(0) LOEMP_45 										
							,SUM(0) DCFUL_20											   	
							,SUM(0) DCFUL_40											   	
							,SUM(0) DCFUL_HC											   	
							,SUM(0) DCFUL_45											   	
							,SUM(0) DCEMP_20											   	
							,SUM(0) DCEMP_40											   	
							,SUM(0) DCEMP_HC											   	
							,SUM(0) DCEMP_45											
				            ,SUM(CNTR_QTY_TEU_LOFULL) CNTR_TEU_LOFUL                  
				            ,SUM(0)                  CNTR_TEU_LOEMP                   
				            ,SUM(0)                  CNTR_TEU_DCFUL                   
				            ,SUM(0)                  CNTR_TEU_DCEMP		            
				 		FROM 
							(   																									
				 				SELECT                            											
				    	   			(
										SELECT 
											PLN_YR||PLN_WK 
										FROM 
											EQR_WK_PRD 
										WHERE 
											TO_CHAR(PL.FM_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
									) PLN_YRWK								
				    	   		  	,PL.CO_CD		    CO_CD										
				     	   		  	,CM.TRD_CD		  	TRADE														
				     	   		  	,PL.VSL_LANE_CD  	VSL_LANE_CD 					  						
				     	   		  	,(
										SELECT 
											ECC_CD 
										FROM 
											MDM_EQ_ORZ_CHT 
										WHERE 
											SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
											AND DELT_FLG = 'N'
									) PORT		   							
				    	   			,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD		    		
	    		 					,CM.LST_LODG_PORT_CD LST_PORT										
				  					,BC.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_FULL				
				  					,BC.CNTR_VOL_QTY	CNTR_QTY_FULL					
				                   	,DECODE(BC.CNTR_TPSZ_CD 
											, 'D2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
				         					, 'R2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
				         					, 'O2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
				         					, 'F2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
				         					, 'A2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB') 	                        
				         					, 'S2', BC.CNTR_VOL_QTY                          	             																				
				         					, 'D4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                        
				         					, 'O4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
				         					, 'F4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
##				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
				         					, 'F5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
				         					, 'A4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')) 						
				         					, 'S4', ( BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))       				
				         					, 'D5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
				         					, 'R5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
				         					, 'D7', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  
											,    0
									) CNTR_QTY_TEU_LOFULL  
								FROM  
									BKG_BOOKING BK
									, BKG_VVD BV
									, BKG_CONTAINER BC
									, COA_MON_VVD CM 
									,		
									(  																									
				        				SELECT 
											DISTINCT VSL_CD 
											,SKD_VOY_NO
											, SKD_DIR_CD
											, FM_YD_CD 
											, FM_ETD_DT
											, VSL_LANE_CD 	
											, CO_CD 				
										FROM 
											EQR_VSL_LODG_DCHG_EXE_PLN 															
										WHERE 
											FM_ETD_DT BETWEEN                													                   
				                     							(
																	SELECT 
																		TO_DATE(WK_ST_DT,'YYYYMMDD') 
																	FROM 
																		EQR_WK_PRD 
																	WHERE 
																		PLN_YR || PLN_WK = @[fmPlnYrWk]
																)  	        
				                     				 			AND                                                                             	            
				                     							(	
																	SELECT 
																		TO_DATE(WK_END_DT,'yyyymmdd') 
																	FROM 
																		EQR_WK_PRD 
																	WHERE 
																		PLN_YR || PLN_WK = @[toPlnYrWk]
																)	
				     				)    PL	
	    		           		WHERE 
									PL.VSL_CD = CM.VSL_CD                              
	    		                	AND PL.SKD_VOY_NO = CM.SKD_VOY_NO                      
	    		                	AND PL.SKD_DIR_CD = CM.DIR_CD                          
	    		                	AND CM.DELT_FLG = 'N'                                  
	    		          			AND PL.VSL_LANE_CD = CM.SLAN_CD  
									#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
										#if(${vslSlanCd} != '') 
		        							AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
										#end
			
										#if(${vvd} != '') 
											AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
										#end	
    								#end
									#if(${locOrTrade} != '1')	
										#if(${trade} != '') 
			   								AND CM.TRD_CD IN( ${arrTradeStr} )
										#end			
									#end
                                    #if(${locOrTrade} == '1') 
                        	    	## from loc 검색조건
                        	    	    #if(${atStatus} != ''  && ${atLocation} != '') 
                            	    		#if(${report} == 'R')
                            	    		    AND PL.FM_YD_CD IN (SELECT ECC_CD FROM NISADM.EQR_ECC_MST WHERE DELT_FLG='N' AND $typeStr IN (
                            	    		#elseif(${report} == 'P')
                            	    		    AND SUBSTR(PL.FM_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                            	    		#end
                            	    		    ${fromEccArrStr}
                            	        	    ) 
                            	        	) 
                        	    	    #end
                        	    	#end  
				 				 	AND BK.BKG_NO = BV.BKG_NO 									
				 				 	AND BK.BKG_NO = BC.BKG_NO									
								 	##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT						
				 				 	##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT						
				 				 	AND BK.BKG_CGO_TP_CD = 'F' 									
				 				 	AND BV.VSL_CD = PL.VSL_CD 										
				 				 	AND BV.SKD_VOY_NO = PL.SKD_VOY_NO 								
				 				 	AND BV.SKD_DIR_CD = PL.SKD_DIR_CD 								
				 				 	AND BV.POL_CD = SUBSTR(PL.FM_YD_CD,0,5) 	## loading  		
					 	 	)		   																							
				 		GROUP BY  
							PLN_YRWK
							, CO_CD
							, VSL_LANE_CD
							, VVD, TRADE	
							, PORT
							, LST_PORT				
					UNION ALL 	## (2)													
						SELECT 												   												
				  			PLN_YRWK  												 													
							,CO_CD 
							,PORT   																									
							,VSL_LANE_CD 											  													
							,LST_PORT																									
							,VVD   																										
							,TRADE  												
							,SUM(0) LOFUL_20											   	
							,SUM(0) LOFUL_40										   	
							,SUM(0) LOFUL_HC										   	
							,SUM(0) LOFUL_45  										
							,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D2', CNTR_QTY_EMP 		 			
						                	  			 , 'R2', CNTR_QTY_EMP		  				
				  		                     			 , 'O2', CNTR_QTY_EMP		   				
				 		                    			 , 'F2', CNTR_QTY_EMP		  				
				 		                    			 , 'S2', CNTR_QTY_EMP		
				 		                     			 , 'A2', CNTR_QTY_EMP , 0)) LOEMP_20	   	
				 			,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D4', CNTR_QTY_EMP   							
				 		                    	 		 , 'O4', CNTR_QTY_EMP	   				
				 		                    			 , 'A4', CNTR_QTY_EMP		            
				 		                    			 , 'S4', CNTR_QTY_EMP		            
##				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
				 		                   				 , 'F5', CNTR_QTY_EMP		            
				 		                   	 			 , 'F4', CNTR_QTY_EMP , 0)) LOEMP_40		
				 			,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D5', CNTR_QTY_EMP   							
							                   	 		 , 'R5', CNTR_QTY_EMP , 0)) LOEMP_HC		
							,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) LOEMP_45 	  
							,SUM(0) DCFUL_20											   	
							,SUM(0) DCFUL_40											   	
							,SUM(0) DCFUL_HC											   	
							,SUM(0) DCFUL_45										   	
							,SUM(0) DCEMP_20										   	
							,SUM(0) DCEMP_40										   	
							,SUM(0) DCEMP_HC										   	
							,SUM(0) DCEMP_45										
							,SUM(0) CNTR_TEU_LOFUL                                  
							,SUM(CNTR_QTY_TEU_DCEMP) CNTR_TEU_LOEMP                 
							,SUM(0)                  CNTR_TEU_DCFUL                 
							,SUM(0)                  CNTR_TEU_DCEMP	                
				 		FROM 
							(   																			
				 				SELECT 																				
				   	   		  		(
										SELECT 	
											PLN_YR||PLN_WK 
										FROM 
											EQR_WK_PRD 
										WHERE 
											TO_CHAR(PL.FM_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
									) PLN_YRWK													
				    	   		  	,PL.CO_CD			CO_CD										
				   	   		  		,CM.TRD_CD		  	TRADE														
				   	   		  		,PL.VSL_LANE_CD  	VSL_LANE_CD 					  						
				    	   		  	,(
										SELECT 
											ECC_CD 
										FROM 
											MDM_EQ_ORZ_CHT 
										WHERE 
											SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
											AND DELT_FLG = 'N' 
									) PORT		   							
				   	   				,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD 		  
	    		 					,CM.LST_LODG_PORT_CD LST_PORT							
				 	   				,Q.CNTR_TPSZ_CD   	CNTR_TPSZ_CD_EMP 				
				 	   				,Q.CNTR_QTY  		CNTR_QTY_EMP  					
				                   ,DECODE(Q.CNTR_TPSZ_CD , 'D2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
				         					, 'R2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
				         					, 'O2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
				         					, 'F2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
				         					, 'A2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                            
				         					, 'S2', Q.CNTR_QTY	* (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                     	
				         					, 'D4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
				         					, 'O4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
				         					, 'F4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
				         					, 'F5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
				         					, 'A4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     					
				         					, 'S4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                    	
				         					, 'D5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
				         					, 'R5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
				         					, 'D7', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  
											,    0
									) CNTR_QTY_TEU_DCEMP   
				    			FROM  
									EQR_VSL_LODG_DCHG_EXE_PLN PL
									, EQR_VSL_EXE_PLN_QTY Q
									, COA_MON_VVD CM 					 	 					
				            	WHERE 
				            	    PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	    AND PL.PLN_YRWK = Q.PLN_YRWK
				            	    AND PL.PLN_SEQ = Q.PLN_SEQ
				            	    AND PL.REF_ID = Q.REF_ID
									AND PL.FM_ETD_DT BETWEEN                                                                     
	    		                       					(
															SELECT 
																TO_DATE(WK_ST_DT,'YYYYMMDD') 
															FROM 
																EQR_WK_PRD 
															WHERE 
																PLN_YR || PLN_WK = @[fmPlnYrWk]
														)  		                                   
	    		                    					AND		                                                                             	                   
	    		                       					(
															SELECT 
																TO_DATE(WK_END_DT,'yyyymmdd') 
															FROM 
																EQR_WK_PRD 
															WHERE 
																PLN_YR || PLN_WK = @[toPlnYrWk]
									)		  
	    		               		AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD = CM.VSL_CD||CM.SKD_VOY_NO||CM.DIR_CD 
	    		               		AND CM.DELT_FLG = 'N'                                  
	    		          			AND PL.VSL_LANE_CD = CM.SLAN_CD 
									#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                            			#if(${vslSlanCd} != '') 
                            		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                            			#end
                            			
                            			#if(${vvd} != '') 
                            				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                            			#end	
                                	#end
                              
                            		
                            		#if(${locOrTrade} != '1')	
                            			#if(${trade} != '') 
                            			    AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end
									#if(${locOrTrade} == '1') 
                        	    	## from loc 검색조건
                        	    	    #if(${atStatus} != ''  && ${atLocation} != '') 
                            	    		#if(${report} == 'R')
                            	    		    AND PL.FM_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN (
                            	    		#elseif(${report} == 'P')
                            	    		    AND SUBSTR(PL.FM_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                            	    		#end
                            	    		    ${fromEccArrStr}
                            	        	    ) 
                            	        	) 
                        	    	    #end
                        	    	#end 
				 			 )		   																						
				 		GROUP BY  
							PLN_YRWK
							, CO_CD
							, VSL_LANE_CD
							, VVD, TRADE	
							, PORT
							, LST_PORT		
					UNION ALL 	## (3)																								   					
						SELECT 													   												
				 			PLN_YRWK   																							
							,CO_CD   
			 				,PORT   																								
			 				,VSL_LANE_CD   																							
			 				,LST_PORT																								
			 				,VVD   																									
			 				,TRADE   																								
							,SUM(0) LOFUL_20										   	
			 				,SUM(0) LOFUL_40										   	
			 				,SUM(0) LOFUL_HC										   	
			 				,SUM(0) LOFUL_45										   	
			 				,SUM(0) LOEMP_20										   	
			 				,SUM(0) LOEMP_40										   	
			 				,SUM(0) LOEMP_HC										   	
			 				,SUM(0) LOEMP_45										
			##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
							,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D2', CNTR_QTY_FULL 		         			
					                	 	 			  , 'R2', CNTR_QTY_FULL		              				
			  		                      				  , 'O2', CNTR_QTY_FULL		               				
			 		                    				  , 'F2', CNTR_QTY_FULL		              				
			 		                    				  , 'S2', CNTR_QTY_FULL		            
			 		                    	 			  , 'A2', CNTR_QTY_FULL , 0)) DCFUL_20	   	
			 				,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D4', CNTR_QTY_FULL   							
			 		                    	 			  , 'O4', CNTR_QTY_FULL	   				
			 		                    				  , 'A4', CNTR_QTY_FULL		            
			 		                    				  , 'S4', CNTR_QTY_FULL		            
			 		                    				  , 'F5', CNTR_QTY_FULL		            
			 		                    	 			  , 'F4', CNTR_QTY_FULL , 0)) DCFUL_40		
			 				,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D5', CNTR_QTY_FULL   							
						                    	 		  , 'R5', CNTR_QTY_FULL , 0)) DCFUL_HC		
							,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D7', CNTR_QTY_FULL , 0)) DCFUL_45 	  		
							,SUM(0) DCEMP_20										   	
							,SUM(0) DCEMP_40										   	
							,SUM(0) DCEMP_HC										   	
							,SUM(0) DCEMP_45										
			               	,SUM(0) CNTR_TEU_LOFUL                                   
			               	,SUM(0) CNTR_TEU_LOEMP                                  
			               	,SUM(CNTR_QTY_TEU_DCFULL) CNTR_TEU_DCFUL                 
			              	,SUM(0)                   CNTR_TEU_DCEMP                
			 			FROM 
							(   																									
			  					SELECT 												
			  						(
										SELECT 
											PLN_YR||PLN_WK 
										FROM 
											EQR_WK_PRD 
										WHERE 
											TO_CHAR(PL.TO_ETB_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
									) PLN_YRWK 	
			    	   		  		,PL.CO_CD		    CO_CD										
			    	   		  		,CM.TRD_CD		  	TRADE													
			    	   		  		,PL.VSL_LANE_CD  	VSL_LANE_CD  										
			    	   		  		,(
										SELECT 
											ECC_CD 
										FROM 
											MDM_EQ_ORZ_CHT 
										WHERE 
											SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) 
											AND DELT_FLG = 'N' 
									) PORT			  							
			   	   					,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD 		  
    		 						,CM.LST_LODG_PORT_CD LST_PORT			 					
			 						,BC.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_FULL				
			  						,BC.CNTR_VOL_QTY	CNTR_QTY_FULL					
			                   		,DECODE(BC.CNTR_TPSZ_CD , 'D2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
			         					, 'R2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
			         					, 'O2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
			         					, 'F2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
			         					, 'A2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         
			         					, 'S2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     					
			         					, 'D4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                        
			         					, 'O4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
			         					, 'F4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
##               project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록				
			         					, 'F5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
			         					, 'A4',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                		
			         					, 'S4',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')   					
			         					, 'D5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
			         					, 'R5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
			         					, 'D7', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0
									) CNTR_QTY_TEU_DCFULL  
			     				FROM  
									BKG_BOOKING BK
									, BKG_VVD BV
									, BKG_CONTAINER BC
									, COA_MON_VVD CM 
									,(  																									
			        					SELECT 
											DISTINCT VSL_CD 
											, SKD_VOY_NO
											, SKD_DIR_CD
											, TO_YD_CD 
											, TO_ETB_DT
											, VSL_LANE_CD 
											, CO_CD 				
			              				FROM 
											EQR_VSL_LODG_DCHG_EXE_PLN 															
			              				WHERE 
											TO_ETB_DT BETWEEN                													                   
			                     							(
																SELECT 
																	TO_DATE(WK_ST_DT,'YYYYMMDD') 
																FROM 
																	EQR_WK_PRD 
																WHERE 
																	PLN_YR || PLN_WK = @[fmPlnYrWk]
															)  	        
			                     				 			AND                                                                             	            
			                     							(
																SELECT 
																	TO_DATE(WK_END_DT,'YYYYMMDD') 
																FROM 
																	EQR_WK_PRD 
																WHERE 
																	PLN_YR || PLN_WK = @[toPlnYrWk]
											)	
			     					)    PL																								
    		               		WHERE 
									PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD = CM.VSL_CD||CM.SKD_VOY_NO||CM.DIR_CD 
    		                     	AND CM.DELT_FLG = 'N'                                  
    		          			 	AND PL.VSL_LANE_CD = CM.SLAN_CD 
									#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                            			#if(${vslSlanCd} != '') 
                            		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                            			#end
                            			
                            			#if(${vvd} != '') 
                            				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                            			#end	
                                	#end
                              
                            		
                            		#if(${locOrTrade} != '1')	
                            			#if(${trade} != '') 
                            			    AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end
									#if(${locOrTrade} == '1')	   
                                    	## to loc 검색조건
                                    	#if(${atStatus} != ''  && ${atLocation} != '') 
                                    
                                    		#if(${report} == 'R')
                                    			AND PL.TO_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN ( 
                                    		#elseif(${report} == 'P')
                                    			AND SUBSTR(PL.TO_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                    		#end
                                    		    ${toEccArrStr}
                                            	) 
                                            )
                                    	#end
                                    
                                    #end
			  			  			AND BK.BKG_NO = BV.BKG_NO 											
			 			  			AND BK.BKG_NO = BC.BKG_NO											
						  			##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT					
						  			##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT						
						  			AND BK.BKG_CGO_TP_CD = 'F' 										
						  			AND BV.VSL_CD = PL.VSL_CD 											
						  			AND BV.SKD_VOY_NO = PL.SKD_VOY_NO 							
						  			AND BV.SKD_DIR_CD = PL.SKD_DIR_CD 							
						  			AND BV.POD_CD = SUBSTR(PL.TO_YD_CD,0,5) 	## DISCHARGING  	
			 		 	 	)		   																							
			 			GROUP BY  
							PLN_YRWK
							, CO_CD
							, VSL_LANE_CD
							, VVD
							, TRADE
							, PORT
							, LST_PORT			
					UNION ALL 	 ## (4)													
						SELECT 													   												
			    			PLN_YRWK  												 													
							,CO_CD 
			 				,PORT   																									
			  				,VSL_LANE_CD 											  													
			  				,LST_PORT																									
			  				,VVD   																										
			  				,TRADE  												
			 				,SUM(0) LOFUL_20										   	
			 				,SUM(0) LOFUL_40										   	
			 				,SUM(0) LOFUL_HC										   	
							,SUM(0) LOFUL_45										 														
							,SUM(0) LOEMP_20										   	
							,SUM(0) LOEMP_40										   	
							,SUM(0) LOEMP_HC										   	
							,SUM(0) LOEMP_45										
							,SUM(0) DCFUL_20										   	
			 				,SUM(0) DCFUL_40										   	
			 				,SUM(0) DCFUL_HC										   	
			 				,SUM(0) DCFUL_45	 									
			  				,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D2', CNTR_QTY_EMP 					  			
			    		                	 	 		 , 'R2', CNTR_QTY_EMP					   				
			   		                      	 		 	 , 'O2', CNTR_QTY_EMP					   				
			   		                    	 		 	 , 'F2', CNTR_QTY_EMP	 				
			   		                    	 		 	 , 'S2', CNTR_QTY_EMP	 				
			  		                    	 			 , 'A2', CNTR_QTY_EMP , 0)) DCEMP_20		
			  				,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D4', CNTR_QTY_EMP   							
			  		        			            	 , 'O4', CNTR_QTY_EMP	  				
			  		        			            	 , 'A4', CNTR_QTY_EMP	  				
			  		        			            	 , 'S4', CNTR_QTY_EMP	  				
##				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
			  		        			            	 , 'F5', CNTR_QTY_EMP	  				
			  		         				           	 , 'F4', CNTR_QTY_EMP , 0)) DCEMP_40		
			  				,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D5', CNTR_QTY_EMP   							
			 			                    	 		 , 'R5', CNTR_QTY_EMP , 0)) DCEMP_HC		
			 				,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) DCEMP_45 	
			               	,SUM(0) CNTR_TEU_LOFUL                                              
			               	,SUM(0) CNTR_TEU_LOEMP                                              
			               	,SUM(0) CNTR_TEU_DCFUL                                               
			               	,SUM(CNTR_QTY_TEU_DCEMP) CNTR_TEU_DCEMP                              
			 			FROM 
							(   																											
			   					SELECT 																
			  						(
										SELECT 
											PLN_YR||PLN_WK 
										FROM 
											EQR_WK_PRD 
										WHERE 
											TO_CHAR(PL.TO_ETB_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
									) PLN_YRWK 	
			     	   		  		,PL.CO_CD		    CO_CD												
			     	   		  		,CM.TRD_CD  		TRADE																
			     	   		  		,PL.VSL_LANE_CD  	VSL_LANE_CD  														
			     	   		  		,(
										SELECT 
											ECC_CD 
										FROM 
											MDM_EQ_ORZ_CHT 
										WHERE 
											SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) 
											AND DELT_FLG = 'N'
									) PORT    							
			    	   				,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD  					  	
    		 						,CM.LST_LODG_PORT_CD LST_PORT	
				 	   				,Q.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_EMP   							
			 	   					,Q.CNTR_QTY  		CNTR_QTY_EMP  					
			                   		,DECODE(Q.CNTR_TPSZ_CD , 'D2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
			         					, 'R2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
			         					, 'O2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
			         					, 'F2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         
			         					, 'A2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         
			         					, 'S2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')						
			         					, 'D4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
			         					, 'O4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
##				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
			         					, 'F5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
			         					, 'F4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
			         					, 'A4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      																								
			         					, 'S4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                       
			         					, 'D5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
			         					, 'R5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
			         					, 'D7', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0
									) CNTR_QTY_TEU_DCEMP  
			 			  		FROM  
									EQR_VSL_LODG_DCHG_EXE_PLN PL
									, EQR_VSL_EXE_PLN_QTY Q
									, COA_MON_VVD CM							
    		                    WHERE 
    		                        PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	    AND PL.PLN_YRWK = Q.PLN_YRWK
				            	    AND PL.PLN_SEQ = Q.PLN_SEQ
				            	    AND PL.REF_ID = Q.REF_ID
									AND PL.TO_ETB_DT BETWEEN                                                                     
    		                       						(
															SELECT 
																TO_DATE(WK_ST_DT,'YYYYMMDD') 
															FROM 
																EQR_WK_PRD 
															WHERE 
																PLN_YR || PLN_WK = @[fmPlnYrWk]
														)  		                                   
    		                    						AND		                                                                             	                   
    		                       						(
															SELECT 
																TO_DATE(WK_END_DT,'YYYYMMDD') 
															FROM 
																EQR_WK_PRD 
															WHERE 
																PLN_YR || PLN_WK = @[toPlnYrWk]
									)		  
    		                    	AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD = CM.VSL_CD||CM.SKD_VOY_NO||CM.DIR_CD 
    		                   	 	AND CM.DELT_FLG = 'N'                                  
    		          			 	AND PL.VSL_LANE_CD = CM.SLAN_CD 
									#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                            			#if(${vslSlanCd} != '') 
                            		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                            			#end
                            			
                            			#if(${vvd} != '') 
                            				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                            			#end	
                                	#end
                              
                            		
                            		#if(${locOrTrade} != '1')	
                            			#if(${trade} != '') 
                            			    AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end
									#if(${locOrTrade} == '1')	   
                                    	## to loc 검색조건
                                    	#if(${atStatus} != ''  && ${atLocation} != '') 
                                    
                                    		#if(${report} == 'R')
                                    			AND PL.TO_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN ( 
                                    		#elseif(${report} == 'P')
                                    			AND SUBSTR(PL.TO_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                    		#end
                                    		    ${toEccArrStr}
                                            	) 
                                            )
                                    	#end
                                    
                                    #end
				 	 	 	)		   																						
	   		 			GROUP BY  
							PLN_YRWK
						, CO_CD
						, VSL_LANE_CD
						, VVD
						, TRADE
						, PORT
						, LST_PORT	
					)																													   					

    			#if(${locOrTrade} == '1' && ${byLocation} == 'P')	
	    			GROUP BY 
						PLN_YRWK
						, CO_CD
						, PORT
						, VSL_LANE_CD
						, VVD
						, TRADE			
	    			ORDER BY 
						PLN_YRWK
						, CO_CD
						, VVD
						, VSL_LANE_CD
						, TRADE
						, PORT			
	    		
    			#elseif(${locOrTrade} == '2')
    			 	GROUP BY 
						PLN_YRWK
						, CO_CD
						, VSL_LANE_CD
						, VVD
						, TRADE
						, LST_PORT		
	    		 	ORDER BY 
						PLN_YRWK
						, CO_CD
						, VVD
						, VSL_LANE_CD
						, TRADE
						, LST_PORT		    		
    			#end
    		
        	#end
    	#else 
        	## ECC 계열 선택일 경우
    		#if(${report} == 'P')
        		SELECT 	
    				''			####B######									                
                 	, PLN_YRWK   													
    				,CO_CD 
    				,(SELECT RCC_CD FROM MDM_EQ_ORZ_CHT  WHERE SCC_CD = PORT  ) RCC     							
    		    	,(SELECT LCC_CD FROM MDM_EQ_ORZ_CHT  WHERE SCC_CD = PORT  ) LCC													
    		    	,(SELECT ECC_CD FROM MDM_EQ_ORZ_CHT  WHERE SCC_CD = PORT  ) ECC  	
    		    	,SUM(LOFUL_20) LOFUL_20																								
    				,SUM(LOFUL_40) LOFUL_40																								
    				,SUM(LOFUL_HC) LOFUL_HC																								
    				,SUM(LOFUL_45) LOFUL_45																								
    				,SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) LOFUL_TTL					
    				,SUM(LOEMP_20) LOEMP_20																									
    				,SUM(LOEMP_40) LOEMP_40																								
    				,SUM(LOEMP_HC) LOEMP_HC																								
    				,SUM(LOEMP_45) LOEMP_45																								
    				,SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) LOEMP_TTL					
    				,SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45									
    				        + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45)   LO_TOTAL					
    				,SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP)    LO_TEU																   			
    				,SUM(DCFUL_20) DCFUL_20																									
    				,SUM(DCFUL_40) DCFUL_40																									
    				,SUM(DCFUL_HC) DCFUL_HC																									
    				,SUM(DCFUL_45) DCFUL_45																								
    				,SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) DCFUL_TTL						
    				,SUM(DCEMP_20) DCEMP_20																								
    				,SUM(DCEMP_40) DCEMP_40																								
    				,SUM(DCEMP_HC) DCEMP_HC																								
    				,SUM(DCEMP_45) DCEMP_45																								
    				,SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) DCEMP_TTL					
    				,SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45									
    				    	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)    DC_TOTAL				
    				,SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)    DC_TEU					
    				,CASE WHEN SUM(LOFUL_20) = SUM(DCFUL_20)                           
    					THEN                                                         
    				    	CASE WHEN SUM(LOFUL_20) = 0  AND SUM(DCFUL_20) = 0           
    				       		THEN  													
    				            	0													
    				          	ELSE 															
    				       		    1													
    				     	END  		   											
    				 	ELSE 														
    				    	CASE WHEN SUM(LOFUL_20) > SUM(DCFUL_20)						                                                                
    				       		THEN                                                                                                               
    				            	ROUND((SUM(DCFUL_20) / SUM(LOFUL_20)) * 100,1)                                                                               
    				          	ELSE                                                                                                               
    				              	-ROUND((SUM(LOFUL_20) /  SUM(DCFUL_20)) * 100,1)                                                                                              
    				      	END 													 
    				END   MATFUL20												
    				,CASE WHEN SUM(LOFUL_40) = SUM(DCFUL_40)								
    					THEN															
    				    	CASE WHEN SUM(LOFUL_40) = 0  AND SUM(LOFUL_40) = 0				
    				       		THEN  												
    				       			0												
    				       		ELSE 												
    				       			1												
    				      	END  		   										
    				  	ELSE 														
    				     	CASE WHEN SUM(LOFUL_40) > SUM(DCFUL_40)                                                                                                  
    				         	THEN                                                                                                               
    				          		ROUND((SUM(DCFUL_40) / SUM(LOFUL_40)) *100,1)                                                                                
    				         	ELSE                                                                                                               
    				            	-ROUND((SUM(LOFUL_40) /  SUM(DCFUL_40)) * 100,1)                                                                                        
    				      	END 													
    				END   MATFUL40													
    				,CASE WHEN SUM(LOFUL_HC) = SUM(DCFUL_HC)							
    				 	THEN															
    				  		CASE WHEN SUM(LOFUL_HC) = 0  AND SUM(DCFUL_HC) = 0				
    				       		THEN  												
    				       			0												
    				       		ELSE 															
    				       			1											
    				    	END  		   										
    				 	ELSE 														
    				    	CASE WHEN SUM(LOFUL_HC) > SUM(DCFUL_HC)                           	                                                                      
    				        	THEN                                                                                                               
    				            	ROUND((SUM(DCFUL_HC) / SUM(LOFUL_HC))*100,1)                                                                                 
    				        	ELSE                                                                                                               
    				             	-ROUND((SUM(LOFUL_HC) / SUM(DCFUL_HC)) * 100,1)                                                                                        
    				    	END														  
    				END   MATFULHC 												
    				,CASE WHEN SUM(LOFUL_45) = SUM(DCFUL_45)							
    				 	THEN															
    				    	CASE WHEN SUM(LOFUL_45) = 0  AND SUM(DCFUL_45) = 0			
    				       		THEN  												
    				       			0											
    				       		ELSE 												
    				       			1												
    				     	END  		   											
    				 	ELSE 														
    				     	CASE WHEN SUM(LOFUL_45) > SUM(DCFUL_45)                           	                                                                       
    				         	THEN                                                                                                               
    				             	ROUND((SUM(DCFUL_45) / SUM(LOFUL_45)) * 100,1)                                                                               
    				         	ELSE                                                                                                               
    				            	-ROUND((SUM(LOFUL_45) / SUM(DCFUL_45)) * 100,1)                                                                                        
    				     	END														  
    				END   MATFUL45 												
    				,CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) = SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45)  
    					THEN															
    				     	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) = 0  AND SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) = 0			
    				       		THEN  												
    				       			0											
    				       		ELSE 														
    				       			1											
    				     	END  		   										
    				 	ELSE 															
    				    	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) > SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45)		                                                           
    				        	THEN														                                                                                                               
    				             	ROUND((SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) / SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45)) * 100,1)         
    				          	ELSE                                                                                                                                                                   
    				              	-ROUND((SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) / SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45)) * 100,1)                                                    
    				    	END                                                      
    				END   MATFULTTL                                                             
    				,CASE WHEN SUM(LOEMP_20) = SUM(DCEMP_20)                            
    					THEN                                                          
    				    	CASE WHEN SUM(LOEMP_20) = 0  AND SUM(DCEMP_20) = 0            
    				       		THEN                                                
    				       			0                                             
    				       		ELSE                                                
    				       			1                                             
    				   		END  		                                          
    					ELSE                                                          
    				     	CASE WHEN SUM(LOEMP_20) > SUM(DCEMP_20)                                                                                                                        
    				        	THEN                                                                                                                                       
    				            	ROUND((SUM(DCEMP_20) / SUM(LOEMP_20)) * 100,1)                                                                                                
    				         	ELSE                                                                                                                                   
    				             	-ROUND((SUM(LOEMP_20) /  SUM(DCEMP_20)) * 100,1)                                                                                                              
    				     	END                                                   
    				END   MATEMP20                                                
    				,CASE WHEN SUM(LOEMP_40) = SUM(DCEMP_40)                            
    					THEN                                                          
    				      	CASE WHEN SUM(LOEMP_40) = 0  AND SUM(DCEMP_40) = 0            
    				       		THEN                                                
    				       			0                                              
    				       		ELSE                                                
    				       			1                                             
    						END  		                                         
    					ELSE                                                          
    				      	CASE WHEN SUM(LOEMP_40) > SUM(DCEMP_40)                                                                                                                     
    				        	THEN                                                                                                               
    				            	ROUND((SUM(DCEMP_40) / SUM(LOEMP_40)) * 100,1)                                                                                       
    				        	ELSE                                                                                                               
    				             	-ROUND((SUM(LOEMP_40) /  SUM(DCEMP_40)) * 100,1)                                                                                              
    				     	END  													 
    				END   MATEMP40                                                
    				,CASE WHEN SUM(LOEMP_HC) = SUM(DCEMP_HC)                            
    				 	THEN                                                          
    				    	CASE WHEN SUM(LOEMP_HC) = 0  AND SUM(DCEMP_HC) = 0            
    				       		THEN                                                
    				       			0                                             
    				       		ELSE                                                
    				       			1                                             
    				   		END                                                 		   
    				   	ELSE                                                          
    				    	CASE WHEN SUM(LOEMP_HC) > SUM(DCEMP_HC)                                                                                                   
    				        	THEN                                                                                                               
    				            	ROUND((SUM(DCEMP_HC) / SUM(LOEMP_HC)) * 100,1)                                                                                       
    				          	ELSE                                                                                                               
    				               	-ROUND((SUM(LOEMP_HC) / SUM(DCEMP_HC)) * 100,1)                                                                                              
    				      	END                                                       
    				END   MATEMPHC                                                
    				,CASE WHEN SUM(LOEMP_45) = SUM(DCEMP_45)                             
    					THEN                                                          
    				    	CASE WHEN SUM(LOEMP_45) = 0  AND SUM(DCEMP_45) = 0            
    				       		THEN                                                
    				       			0                                             
    				       		ELSE                                                
    				       			1                                             
    				     	END  		                                         
    				  	ELSE                                                           
    				    	CASE WHEN SUM(LOEMP_45) > SUM(DCEMP_45)                                                                                                                          
    				       		THEN                                                                                                                                                              
    				             	ROUND((SUM(DCEMP_45) / SUM(LOEMP_45)) * 100,1)                                                                               
    				          	ELSE                                                                                                               
    				              	-ROUND((SUM(LOEMP_45) / SUM(DCEMP_45)) * 100,1)                                                                                        
    				     	END                                                      
    				END   MATEMP45                                                
    				,CASE WHEN SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)                 
    					THEN															 		
    				    	CASE WHEN SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = 0  AND SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) = 0  
    				       		THEN   											 
    				       			0											 
    				       		ELSE 												 			
    				       			1											 	
    				     	END  		   										 	
    					ELSE 														 	
    				     	CASE WHEN SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) > SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)			                                                                                                  
    				        	THEN                                                                                                               
    				             	ROUND((SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) / SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45)) * 100,1)                                                                                      
    				        	ELSE                                                                                                                
    				              	-ROUND((SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) / SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)) * 100 ,1)                                                                                              
    				      	END  													
    				END   MATEMPTTL 												
    				,CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)         
    					THEN															 		
    				    	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) = 0  AND SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) = 0  
    				       		THEN   											 
    				       			0											 
    				       		ELSE 												 			
    				       			1											 	
    				     	END  		   										 	
    				 	ELSE 														 	
    				    	CASE WHEN SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) > SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)					                                                                                                  
    				        	THEN                                                                                                        		       
    				           		ROUND(SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) / SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) *100 ,1)   	                                                                                   
    				         	ELSE                                                                                                            		    
    				            	-ROUND((SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45 + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) / SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)) * 100,1)                                                                                                
    				    	END  													
    				END   MATBOXTOTAL 												
    				,CASE WHEN SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) = SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)         
    					THEN															 		
    				    	CASE WHEN SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) = 0  AND SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP) = 0  
    				       		THEN   											 
    				       			0											 
    				       		ELSE 												 			
    				       			1											 	
    				    	END  		   										 	
    					ELSE 														 	
    				    	CASE WHEN SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) > SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)					                                                                                                  
    				        	THEN                                                                                                        		       
    				            	ROUND(SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP) / SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) *100 ,1)   	                                                                                   
    				         	ELSE                                                                                                            		    
    				             	-ROUND((SUM(CNTR_TEU_LOFUL+CNTR_TEU_LOEMP) / SUM(CNTR_TEU_DCFUL+CNTR_TEU_DCEMP)) * 100,1)                                                                                                
    				     	END  													
    				END   MATTEUTOTAL 			
    				,''      														
    
    			FROM 
    				(																
    				 		## (1)															
    				 	SELECT 												        
    				  		PLN_YRWK  												 													
    						,CO_CD 
    				 		,PORT   												
    				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    						,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D2', CNTR_QTY_FULL 		         			
    				                	 	 			  , 'R2', CNTR_QTY_FULL		              				
    		  		                      				  , 'O2', CNTR_QTY_FULL		               				
    		 		                    				  , 'F2', CNTR_QTY_FULL		              				
    		 		                    				  , 'S2', CNTR_QTY_FULL		            
    		 		                    	 			  , 'A2', CNTR_QTY_FULL , 0)) LOFUL_20	   	
    		 				,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D4', CNTR_QTY_FULL   							
    		 		                    	 			  , 'O4', CNTR_QTY_FULL	   				
    		 		                    				  , 'A4', CNTR_QTY_FULL		            
    		 		                    				  , 'S4', CNTR_QTY_FULL		            
    		 		                    				  , 'F5', CNTR_QTY_FULL		            
    		 		                    	 			  , 'F4', CNTR_QTY_FULL , 0)) LOFUL_40		
    		 				,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D5', CNTR_QTY_FULL   							
    					                    	 		  , 'R5', CNTR_QTY_FULL , 0)) LOFUL_HC		
    						,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D7', CNTR_QTY_FULL , 0)) LOFUL_45 	  
    					
    					    ,SUM(0) LOEMP_20											   	
    					    ,SUM(0) LOEMP_40											   	
                            ,SUM(0) LOEMP_HC											   	
                            ,SUM(0) LOEMP_45 										
                            ,SUM(0) DCFUL_20											   	
                            ,SUM(0) DCFUL_40											   	
                            ,SUM(0) DCFUL_HC											   	
                            ,SUM(0) DCFUL_45											   	
                            ,SUM(0) DCEMP_20											   	
                            ,SUM(0) DCEMP_40											   	
                            ,SUM(0) DCEMP_HC											   	
                            ,SUM(0) DCEMP_45											
                            ,SUM(CNTR_QTY_TEU_LOFULL) CNTR_TEU_LOFUL                  
                            ,SUM(0)                  CNTR_TEU_LOEMP                   
                            ,SUM(0)                  CNTR_TEU_DCFUL                   
                            ,SUM(0)                  CNTR_TEU_DCEMP		            
    			        FROM 
    						(   																
    							SELECT 																		
    								(
    									SELECT 
    										PLN_YR||PLN_WK 
    									FROM 
    										EQR_WK_PRD 
    									WHERE 
    										TO_CHAR(PL.FM_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    								) PLN_YRWK						
    				    	   		,PL.CO_CD		    CO_CD										
    				     	   		,(
    									SELECT 
    										ECC_CD 
    									FROM 
    										MDM_EQ_ORZ_CHT 
    									WHERE 
    										SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
    										AND DELT_FLG = 'N'
    								) PORT		   							
    				  				,BC.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_FULL				
    				  				,BC.CNTR_VOL_QTY	CNTR_QTY_FULL					
    				             	,DECODE(BC.CNTR_TPSZ_CD , 'D2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
    				         					, 'R2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
    				         					, 'O2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'F2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'A2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                            
    				         					, 'S2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')          				
    				         					, 'D4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                        
    				         					, 'O4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
    				         					, 'F4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				         					, 'F5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				         					, 'A4',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')					     
    				         					, 'S4',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')						
    				         					, 'D5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'R5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'D7', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_LOFULL  
    			  	     		FROM  
    								BKG_BOOKING BK
    								, BKG_VVD BV
    								, BKG_CONTAINER BC 
    								, (  																									
    				        			SELECT 
    										DISTINCT VSL_CD 
    										, SKD_VOY_NO
    										, SKD_DIR_CD
    										, FM_YD_CD 
    										, FM_ETD_DT
    										, VSL_LANE_CD 
    										, CO_CD 				
    				              		FROM 
    										EQR_VSL_LODG_DCHG_EXE_PLN 															
    				              		WHERE 
    										FM_ETD_DT BETWEEN                													                   
    				                     					(
    															SELECT 
    																TO_DATE(WK_ST_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[fmPlnYrWk]
    														)  	        
    				                     				 	AND                                                                             	            
    				                     					(
    															SELECT 
    																TO_DATE(WK_END_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[toPlnYrWk]
    										)	
    								)    PL			
    				          		WHERE 1=1
    									#if(${locOrTrade} == '1') 
                            	    	## from loc 검색조건
                            	    	    #if(${atStatus} != ''  && ${atLocation} != '') 
                                	    		#if(${report} == 'R')
                                	    		    AND PL.FM_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN (
                                	    		#elseif(${report} == 'P')
                                	    		    AND SUBSTR(PL.FM_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                	    		#end
                                	    		    ${fromEccArrStr}
                                	        	    ) 
                                	        	) 
                            	    	    #end
                            	    	#end 
    				 				 	AND BK.BKG_NO = BV.BKG_NO 									
    				 				 	AND BK.BKG_NO = BC.BKG_NO									
    								 	##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT						
    				 				 	##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT						
    				 				 	AND BK.BKG_CGO_TP_CD = 'F' 									
    				 				 	AND BV.VSL_CD = PL.VSL_CD 										
    				 				 	AND BV.SKD_VOY_NO = PL.SKD_VOY_NO 								
    				 				 	AND BV.SKD_DIR_CD = PL.SKD_DIR_CD 								
    				 				 	AND BV.POL_CD = SUBSTR(PL.FM_YD_CD,0,5) 	## LOADING  		
    					 		)		   									 		
    				 		GROUP BY  
    							PLN_YRWK
    							, CO_CD
    							,  PORT  
    					UNION ALL 	## (2)												
    						SELECT 												            
    				  			PLN_YRWK  												 													
    							,CO_CD
    			 				,PORT   												
    							,SUM(0) LOFUL_20											   	
    							,SUM(0) LOFUL_40										   	
    							,SUM(0) LOFUL_HC										   	
    							,SUM(0) LOFUL_45  										
    							,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D2', CNTR_QTY_EMP 		 			
    					                	 	 			 , 'R2', CNTR_QTY_EMP		  				
    			  		                      				 , 'O2', CNTR_QTY_EMP		   				
    			 		                    				 , 'F2', CNTR_QTY_EMP		
    			 		                    				 , 'S2', CNTR_QTY_EMP		
    			 		                    	 			 , 'A2', CNTR_QTY_EMP , 0)) LOEMP_20	   	
    			 				,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D4', CNTR_QTY_EMP   							
    			 		                    	 			 , 'O4', CNTR_QTY_EMP	   				
    			 		                    	 			 , 'A4', CNTR_QTY_EMP	   				
    			 		                    	 			 , 'S4', CNTR_QTY_EMP	   				
    ##    				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    			 		                    	 			 , 'F5', CNTR_QTY_EMP	   				
    			 		                    	 			 , 'F4', CNTR_QTY_EMP , 0)) LOEMP_40		
    			 				,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D5', CNTR_QTY_EMP   							
    						                    	 		 , 'R5', CNTR_QTY_EMP , 0)) LOEMP_HC		
    							,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) LOEMP_45 	  
    							,SUM(0) DCFUL_20											   	
    							,SUM(0) DCFUL_40											   	
    							,SUM(0) DCFUL_HC											   	
    							,SUM(0) DCFUL_45										   	
    							,SUM(0) DCEMP_20										   	
    							,SUM(0) DCEMP_40										   	
    							,SUM(0) DCEMP_HC										   	
    							,SUM(0) DCEMP_45										
    							,SUM(0) CNTR_TEU_LOFUL                                  
    							,SUM(CNTR_QTY_TEU_DCEMP) CNTR_TEU_LOEMP                 
    							,SUM(0)                  CNTR_TEU_DCFUL                 
    							,SUM(0)                  CNTR_TEU_DCEMP	                
    				 		FROM 
    							(   														
    				 				SELECT  													
    				   	   		  		(
    										SELECT 
    											PLN_YR||PLN_WK 
    										FROM 
    											EQR_WK_PRD 
    										WHERE 
    											TO_CHAR(PL.FM_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    									) PLN_YRWK 								
    				    	   		  	,PL.CO_CD			CO_CD										
    				    	   		  	,(
    										SELECT 
    											ECC_CD 
    										FROM 
    											MDM_EQ_ORZ_CHT 
    										WHERE 
    											SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
    											AND DELT_FLG = 'N'
    									) PORT		   							
    				 	   				,Q.CNTR_TPSZ_CD   	CNTR_TPSZ_CD_EMP 				    				
    				 	   				,Q.CNTR_QTY  		CNTR_QTY_EMP  					
    				                   	,DECODE(Q.CNTR_TPSZ_CD , 'D2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
    				         					, 'R2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
    				         					, 'O2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'F2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'A2', Q.CNTR_QTY  * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						
    				         					, 'S2', Q.CNTR_QTY  * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')							
    				         					, 'D4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'O4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
    				         					, 'F4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				         					, 'F5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				         					, 'A4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      	
    				         					, 'S4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                     	
    				         					, 'D5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'R5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'D7', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_DCEMP  
     				    			FROM  
    									EQR_VSL_LODG_DCHG_EXE_PLN PL 
    									, EQR_VSL_EXE_PLN_QTY Q	 					
    								WHERE 
    									PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	        AND PL.PLN_YRWK = Q.PLN_YRWK
				            	        AND PL.PLN_SEQ = Q.PLN_SEQ
				            	        AND PL.REF_ID = Q.REF_ID
									    AND PL.FM_ETD_DT BETWEEN																			
    														(
    															SELECT 
    																TO_DATE(WK_ST_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE PLN_YR || PLN_WK = @[fmPlnYrWk]
    														)   			       
    														AND                                                                               			          
    														(
    															SELECT 
    																TO_DATE(WK_END_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[toPlnYrWk]
    									) 
    	    		          			#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') ) ## 사용되지 않음 로직상 구현되지 않음
                                			#if(${vslSlanCd} != '')  
                                		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                                			#end
                                			
                                			#if(${vvd} != '') 
                                				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                                			#end	
                                    	#end
                                  
                                		
                                		#if(${locOrTrade} != '1')	## 사용되지 않음 로직상 구현되지 않음
                                			#if(${trade} != '') 
                                			    AND CM.TRD_CD IN( ${arrTradeStr} ) 
                                			#end			
                                		#end
    									#if(${locOrTrade} == '1') 
                            	    	## from loc 검색조건
                            	    	    #if(${atStatus} != ''  && ${atLocation} != '') 
                                	    		#if(${report} == 'R')
                                	    		    AND PL.FM_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN (
                                	    		#elseif(${report} == 'P')
                                	    		    AND SUBSTR(PL.FM_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                	    		#end
                                	    		    ${fromEccArrStr}
                                	        	    ) 
                                	        	) 
                            	    	    #end
                            	    	#end 
    							)		   										
    				 		GROUP BY  
    							PLN_YRWK
    							, CO_CD
    							,  PORT	
    					UNION ALL 	## (3)														
    						SELECT 												           
    				 			PLN_YRWK   											   												
    							,CO_CD 
    			 				,PORT   												
    							,SUM(0) LOFUL_20										   	
    			 				,SUM(0) LOFUL_40										   	
    			 				,SUM(0) LOFUL_HC										   	
    			 				,SUM(0) LOFUL_45										   	
    			 				,SUM(0) LOEMP_20										   	
    			 				,SUM(0) LOEMP_40										   	
    			 				,SUM(0) LOEMP_HC										   	
    			 				,SUM(0) LOEMP_45										
    			##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    							,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D2', CNTR_QTY_FULL 		         			
    					                	 	 			  , 'R2', CNTR_QTY_FULL		              				
    			  		                      				  , 'O2', CNTR_QTY_FULL		               				
    			 		                    				  , 'F2', CNTR_QTY_FULL		              				
    			 		                    				  , 'S2', CNTR_QTY_FULL		            
    			 		                    	 			  , 'A2', CNTR_QTY_FULL , 0)) DCFUL_20	   	
    			 				,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D4', CNTR_QTY_FULL   							
    			 		                    	 			  , 'O4', CNTR_QTY_FULL	   				
    			 		                    				  , 'A4', CNTR_QTY_FULL		            
    			 		                    				  , 'S4', CNTR_QTY_FULL		            
    			 		                    				  , 'F5', CNTR_QTY_FULL		            
    			 		                    	 			  , 'F4', CNTR_QTY_FULL , 0)) DCFUL_40		
    			 				,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D5', CNTR_QTY_FULL   							
    						                    	 		  , 'R5', CNTR_QTY_FULL , 0)) DCFUL_HC		
    							,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D7', CNTR_QTY_FULL , 0)) DCFUL_45 	  
    
    							,SUM(0) DCEMP_20										   	
    							,SUM(0) DCEMP_40										   	
    							,SUM(0) DCEMP_HC										   	
    							,SUM(0) DCEMP_45										
                                ,SUM(0) CNTR_TEU_LOFUL                                   
                                ,SUM(0) CNTR_TEU_LOEMP                                  
                                ,SUM(CNTR_QTY_TEU_DCFULL) CNTR_TEU_DCFUL                 
                                ,SUM(0)                   CNTR_TEU_DCEMP                
    				 		FROM 
    							(   																									
    				  				SELECT   						                            						
    				  					(
    										SELECT 
    											PLN_YR||PLN_WK 
    										FROM 
    											EQR_WK_PRD 
    										WHERE 
    											TO_CHAR(PL.TO_ETB_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    									) PLN_YRWK 	
    				    	   		  	,PL.CO_CD		    CO_CD										
    				    	   		  	,(
    										SELECT 
    											ECC_CD 
    										FROM 
    											MDM_EQ_ORZ_CHT 
    										WHERE 
    											SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) 
    											AND DELT_FLG = 'N'
    									) PORT		 					
    				 					,BC.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_FULL				
    				  					,BC.CNTR_VOL_QTY	CNTR_QTY_FULL					
    				                   	,DECODE(BC.CNTR_TPSZ_CD , 'D2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
    				         					, 'R2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
    				         					, 'O2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'F2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'A2', BC.CNTR_VOL_QTY  * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'S2', BC.CNTR_VOL_QTY  * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                        	
    				         					, 'D4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         			 		, 'O4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
    				         					, 'F4',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      		
    				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				         					, 'F5',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      		
    				         					, 'A4',  BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      		
    				         					, 'S4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				         					, 'D5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'R5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'D7', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_DCFULL  
    			    		 		FROM  
    									BKG_BOOKING BK
    									, BKG_VVD BV
    									, BKG_CONTAINER BC
    									, 	
    									(  																									
    				        				SELECT 
    											DISTINCT  VSL_CD
    											,SKD_VOY_NO
    											, SKD_DIR_CD
    											, TO_YD_CD
    											, TO_ETB_DT 
    											, VSL_LANE_CD 
    											, CO_CD 		
    				               			FROM 
    											EQR_VSL_LODG_DCHG_EXE_PLN 															
    				             			WHERE 
    											TO_ETB_DT BETWEEN 																                                 
    				                    						(
    																SELECT 
    																	TO_DATE(WK_ST_DT,'YYYYMMDD') 
    																FROM 
    																	EQR_WK_PRD 
    																WHERE 
    																	PLN_YR || PLN_WK = @[fmPlnYrWk]
    															)  		        
    				                   			 				AND                                                                             		            
    				                   							(	
    																SELECT 
    																	TO_DATE(WK_END_DT,'YYYYMMDD') 
    																FROM 
    																	EQR_WK_PRD 
    																WHERE 
    																	PLN_YR || PLN_WK = @[toPlnYrWk]
    											)		
    				    				)    PL		
    	    		          		WHERE 1=1
    									#if(${locOrTrade} == '1')	   
                                        	## to loc 검색조건
                                        	#if(${atStatus} != ''  && ${atLocation} != '') 
                                        
                                        		#if(${report} == 'R')
                                        			AND PL.TO_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN ( 
                                        		#elseif(${report} == 'P')
                                        			AND SUBSTR(PL.TO_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                        		#end
                                        		    ${toEccArrStr}
                                                	) 
                                                )
                                        	#end
                                        
                                        #end
    				  			  		AND BK.BKG_NO = BV.BKG_NO 											
    				 			  		AND BK.BKG_NO = BC.BKG_NO											
    							  		##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT					
    							  		##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT						
    							  		AND BK.BKG_CGO_TP_CD = 'F' 										
    							  		AND BV.VSL_CD = PL.VSL_CD 											
    							  		AND BV.SKD_VOY_NO = PL.SKD_VOY_NO 							
    							  		AND BV.SKD_DIR_CD = PL.SKD_DIR_CD 							
    							  		AND BV.POD_CD = SUBSTR(PL.TO_YD_CD,0,5) 	## DISCHARGING  	
    							)		   																							
    				 		GROUP BY  
    							PLN_YRWK
    							, CO_CD
    							,  PORT			
    					UNION ALL 	 ## (4)
    						SELECT												            
    				    		PLN_YRWK  												 													
    							,CO_CD   
    							,PORT   																									
    				 			,SUM(0) LOFUL_20										   	
    				 			,SUM(0) LOFUL_40										   	
    				 			,SUM(0) LOFUL_HC										   	
    							,SUM(0) LOFUL_45										 														
    							,SUM(0) LOEMP_20										   	
    							,SUM(0) LOEMP_40										   	
    							,SUM(0) LOEMP_HC										   	
    							,SUM(0) LOEMP_45										
    							,SUM(0) DCFUL_20										   	
    				 			,SUM(0) DCFUL_40										   	
    				 			,SUM(0) DCFUL_HC										   	
    				 			,SUM(0) DCFUL_45	 									
    				  			,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D2', CNTR_QTY_EMP 					  			
    				    		               	 	 		 , 'R2', CNTR_QTY_EMP					   				
    				   		                      	 		 , 'O2', CNTR_QTY_EMP					   				
    				   		                    	 		 , 'F2', CNTR_QTY_EMP	 				
    				   		                    	 		 , 'S2', CNTR_QTY_EMP	 				
    				  		                   	 			 , 'A2', CNTR_QTY_EMP , 0)) DCEMP_20		
    				  			,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D4', CNTR_QTY_EMP   							
    				  		       			            	 , 'O4', CNTR_QTY_EMP	  				
    				  		       			            	 , 'A4', CNTR_QTY_EMP	  				
    				  		       			            	 , 'S4', CNTR_QTY_EMP	  				
    ##    				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				  		       			            	 , 'F5', CNTR_QTY_EMP	  				
    				  		       				           	 , 'F4', CNTR_QTY_EMP , 0)) DCEMP_40		
    				  			,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D5', CNTR_QTY_EMP   							
    				 				                    	 , 'R5', CNTR_QTY_EMP , 0)) DCEMP_HC				
    				 			,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) DCEMP_45 	
    				            ,SUM(0) CNTR_TEU_LOFUL                                              
    				            ,SUM(0) CNTR_TEU_LOEMP                                              
    				            ,SUM(0) CNTR_TEU_DCFUL                                               
    				            ,SUM(CNTR_QTY_TEU_DCEMP) CNTR_TEU_DCEMP                              
    				 		FROM 
    							(   																											
    				   				SELECT   														
    				     	   		  	(
    										SELECT 
    											PLN_YR||PLN_WK 
    										FROM 
    											EQR_WK_PRD 
    										WHERE 
    											TO_CHAR(PL.TO_ETB_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    									) PLN_YRWK										
    				     	   		  	,PL.CO_CD		    CO_CD												
    				     	   		  	,(
    										SELECT 
    											ECC_CD 
    										FROM 
    											MDM_EQ_ORZ_CHT 
    										WHERE 
    											SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) 
    											AND DELT_FLG = 'N'
    									) PORT    							
    					 	   			,Q.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_EMP   												
    				 	   				,Q.CNTR_QTY  		CNTR_QTY_EMP  					
    				                   	,DECODE(Q.CNTR_TPSZ_CD , 'D2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')     		                
    				         					, 'R2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')      						 
    				         					, 'O2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'F2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'A2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                        	
    				         					, 'S2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                         	
    				         					, 'D4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'O4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                         
    				         					, 'F4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				         					, 'F5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                       
    				         					, 'A4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      	
    				         					, 'S4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                      	
    				         					, 'D5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'R5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                          
    				         					, 'D7', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_DCEMP  
     				 			  	FROM  
    									EQR_VSL_LODG_DCHG_EXE_PLN PL
    									, EQR_VSL_EXE_PLN_QTY Q	
    	    		                WHERE 
    								     PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	         AND PL.PLN_YRWK = Q.PLN_YRWK
				            	         AND PL.PLN_SEQ = Q.PLN_SEQ
				            	         AND PL.REF_ID = Q.REF_ID
									     AND PL.TO_ETB_DT BETWEEN                                                                     
    	    		                       					(
    															SELECT 
    																TO_DATE(WK_ST_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[fmPlnYrWk]
    														)  		                                   
    	    		                    					AND		                                                                             	                   
    	    		                       					(
    															SELECT 
    																TO_DATE(WK_END_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[toPlnYrWk]
    									)	
    	    		          			#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                                			#if(${vslSlanCd} != '')  ## 사용하지 않음
                                		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                                			#end
                                			
                                			#if(${vvd} != '') 
                                				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                                			#end	
                                    	#end
                                  
                                		
                                		#if(${locOrTrade} != '1')	## 사용하지 않음 로직상 구현되지 않음 
                                			#if(${trade} != '') 
                                			    AND CM.TRD_CD IN( ${arrTradeStr} )
                                			#end			
                                		#end
    									#if(${locOrTrade} == '1')	   
                                        	## to loc 검색조건
                                        	#if(${atStatus} != ''  && ${atLocation} != '') 
                                        
                                        		#if(${report} == 'R')
                                        			AND PL.TO_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN ( 
                                        		#elseif(${report} == 'P')
                                        			AND SUBSTR(PL.TO_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                        		#end
                                        		    ${toEccArrStr}
                                                	) 
                                                )
                                        	#end
                                        
                                        #end
    							)		   								
    		   		 		GROUP BY  
    							PLN_YRWK
    							, CO_CD
    							,  PORT 
    				)																													   					
    
    			GROUP BY  
    				PLN_YRWK
    				, CO_CD 	
    				, PORT			
    			ORDER BY  
    				PLN_YRWK
    				, CO_CD 
    				, PORT
        	#end        		
        	#if(${report} == 'R')     	## 현재 로직을 수행하지 않음 report P 로 고정되어 있음 R 인 경우 기존로직에 에러 발생함
    	    	SELECT 					######C######											
    				PLN_YRWK   																									
    				,CO_CD   																											
    	    		,PORT																						
    	    		,VSL_LANE_CD   																								
    	    		,VVD   															
    	    		,TRADE   														
    				,SUM(LOFUL_20) LOFUL_20																								
    				,SUM(LOFUL_40) LOFUL_40																								
    				,SUM(LOFUL_HC) LOFUL_HC																								
    				,SUM(LOFUL_45) LOFUL_45																								
    				,SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45) LOFUL_TTL					
    				,SUM(LOEMP_20) LOEMP_20																									
    				,SUM(LOEMP_40) LOEMP_40																								
    				,SUM(LOEMP_HC) LOEMP_HC																								
    				,SUM(LOEMP_45) LOEMP_45																								
    				,SUM(LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45) LOEMP_TTL					
    				,SUM(LOFUL_20 + LOFUL_40 + LOFUL_HC + LOFUL_45									
    				      + LOEMP_20 + LOEMP_40 + LOEMP_HC + LOEMP_45)   LO_TOTAL					
    				,''																											   			
    				,SUM(DCFUL_20) DCFUL_20																									
    				,SUM(DCFUL_40) DCFUL_40																									
    				,SUM(DCFUL_HC) DCFUL_HC																									
    				,SUM(DCFUL_45) DCFUL_45																								
    				,SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45) DCFUL_TTL						
    				,SUM(DCEMP_20) DCEMP_20																								
    				,SUM(DCEMP_40) DCEMP_40																								
    				,SUM(DCEMP_HC) DCEMP_HC																								
    				,SUM(DCEMP_45) DCEMP_45																								
    				,SUM(DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45) DCEMP_TTL					
    				,SUM(DCFUL_20 + DCFUL_40 + DCFUL_HC + DCFUL_45									
    				   	+ DCEMP_20 + DCEMP_40 + DCEMP_HC + DCEMP_45)    DC_TOTAL				
    				    	,''																										   			
    			FROM 
    				(																
    				 		## (1)															
    					SELECT 												            
    				   		PLN_YRWK  												 													
    				   		,CO_CD   																											
    				   		,PORT   																											
    				   		,VSL_LANE_CD   																								
    				   		,VVD   																											
    				   		,TRADE   													
       				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
                            ,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D2', CNTR_QTY_FULL 		         			
                                    	 	 			  , 'R2', CNTR_QTY_FULL		              				
                                          				  , 'O2', CNTR_QTY_FULL		               				
                                        				  , 'F2', CNTR_QTY_FULL		              				
                                        				  , 'S2', CNTR_QTY_FULL		            
                                        	 			  , 'A2', CNTR_QTY_FULL , 0)) LOFUL_20	   	
                            ,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D4', CNTR_QTY_FULL   							
                                        	 			  , 'O4', CNTR_QTY_FULL	   				
                                        				  , 'A4', CNTR_QTY_FULL		            
                                        				  , 'S4', CNTR_QTY_FULL		            
                                        				  , 'F5', CNTR_QTY_FULL		            
                                        	 			  , 'F4', CNTR_QTY_FULL , 0)) LOFUL_40		
                            ,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D5', CNTR_QTY_FULL   							
                                            	 		  , 'R5', CNTR_QTY_FULL , 0)) LOFUL_HC		
                            ,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D7', CNTR_QTY_FULL , 0)) LOFUL_45 	  
                            					
                            ,SUM(0) LOEMP_20											   	
                            ,SUM(0) LOEMP_40											   	
                            ,SUM(0) LOEMP_HC											   	
                            ,SUM(0) LOEMP_45 										
                            ,SUM(0) DCFUL_20											   	
                            ,SUM(0) DCFUL_40											   	
                            ,SUM(0) DCFUL_HC											   	
                            ,SUM(0) DCFUL_45											   	
                            ,SUM(0) DCEMP_20											   	
                            ,SUM(0) DCEMP_40											   	
                            ,SUM(0) DCEMP_HC											   	
                            ,SUM(0) DCEMP_45											   	
                        FROM 
    						(   																									
    							SELECT 						
    				    	   		(
    									SELECT 
    										PLN_YR||PLN_WK 
    									FROM 
    										EQR_WK_PRD 
    									WHERE 
    										TO_CHAR(PL.FM_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    								) PLN_YRWK   							
    			    	   		  	,PL.CO_CD		    CO_CD										
    				     	   		,ML.REP_TRD_CD  	TRADE														
    				     	   		,PL.VSL_LANE_CD  	VSL_LANE_CD 					  						
    				     	   		,(
    									SELECT 
    										ECC_CD 
    									FROM 
    										MDM_EQ_ORZ_CHT 
    									WHERE 
    										SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
    										AND DELT_FLG = 'N'
    								) PORT		   							
    				    	   		,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD		    		
    				 	   			,PL.CNTR_TPSZ_CD   	CNTR_TPSZ_CD_EMP 								
    				 	   			,PL.CNTR_QTY  		CNTR_QTY_EMP  										
    				  				,BC.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_FULL				
    				  				,BC.CNTR_VOL_QTY	CNTR_QTY_FULL		 				
    				     		FROM  
    								BKG_BOOKING BK
    								, BKG_VVD BV
    								, BKG_CONTAINER BC
    								, COA_MON_VVD CM 
    								, MDM_REV_LANE ML ## 구문 오류 수정 AS-IS 에는 빠져 있음 09.10.06 modify by ChungEunHo
    								,(  																									
    				        			SELECT 
    										DISTINCT A.VSL_CD 
    										, A.SKD_VOY_NO
    										, A.SKD_DIR_CD
    										, A.FM_YD_CD 
    										, A.FM_ETD_DT
    										, A.VSL_LANE_CD 
    										, A.CO_CD 
    										, Q.CNTR_QTY
    										, Q.CNTR_TPSZ_CD				
    									FROM 
    										EQR_VSL_LODG_DCHG_EXE_PLN A 
    										,EQR_VSL_EXE_PLN_QTY Q															
    									WHERE 
    									    A.REPO_PLN_ID = Q.REPO_PLN_ID
				            	            AND A.PLN_YRWK = Q.PLN_YRWK
				            	            AND A.PLN_SEQ = Q.PLN_SEQ
				            	            AND A.REF_ID = Q.REF_ID
    										AND A.FM_ETD_DT BETWEEN                													                   
    				                     					(
    															SELECT 
    																TO_DATE(WK_ST_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[fmPlnYrWk]
    														)  	        
    				                     				 	AND                                                                             	            
    				                     					(
    															SELECT 
    																TO_DATE(WK_END_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[toPlnYrWk]
    										)	
    								)    PL	
    							WHERE 1=1 ## AS-IS 구문오류 구문 추가 09.10.05 Add By ChungEunHo 로직상 현재 구문을 타지 않음																							
    				          		AND PL.VSL_LANE_CD = ML.VSL_SLAN_CD  
    								#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                                		#if(${vslSlanCd} != '') 
                                	        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                                		#end
                                	
                                		#if(${vvd} != '') 
                                			AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                                		#end	
                                    #end
                                  
                                	#if(${locOrTrade} != '1')	
                                		#if(${trade} != '') 
                                		    AND CM.TRD_CD IN( ${arrTradeStr} )
                                		#end			
                                	#end
    								#if(${locOrTrade} == '1') 
                        	    	## from loc 검색조건
                        	    	    #if(${atStatus} != ''  && ${atLocation} != '') 
                            	    		#if(${report} == 'R')
                            	    		    AND PL.FM_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN (
                            	    		#elseif(${report} == 'P')
                            	    		    AND SUBSTR(PL.FM_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                            	    		#end
                            	    		    ${fromEccArrStr}
                            	        	    ) 
                            	        	) 
                        	    	    #end
                        	    	#end 
    				 				AND BK.BKG_NO = BV.BKG_NO 									
    				 				AND BK.BKG_NO = BC.BKG_NO									
    								##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT						
    				 				##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT						
    				 				AND BK.BKG_CGO_TP_CD = 'F' 									
    				 				AND BV.VSL_CD = PL.VSL_CD 										
    				 				AND BV.SKD_VOY_NO = PL.SKD_VOY_NO 								
    				 				AND BV.SKD_DIR_CD = PL.SKD_DIR_CD 								
    				 				AND BV.POL_CD = (SELECT ECC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) AND DELT_FLG = 'N') 	## LOADING  		
    						)		   		
    					GROUP BY  
    					   PLN_YRWK
    					   , CO_CD
    					   , VSL_LANE_CD
    					   , VVD
    					   , TRADE	
    					   , PORT	
    				UNION 	## (2)															
    					SELECT  												        	   												
    				  		PLN_YRWK  												
    				 		,CO_CD   																										
    						,PORT   																									
    						,VSL_LANE_CD 											  													
    						,VVD   																										
    						,TRADE  												
    						,SUM(0) LOFUL_20											   	
    						,SUM(0) LOFUL_40										   	
    						,SUM(0) LOFUL_HC										   	
    						,SUM(0) LOFUL_45  										
    				  		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D2', CNTR_QTY_EMP 					  			
    				    	               	 	 		 , 'R2', CNTR_QTY_EMP					   				
    				   		                   	 		 , 'O2', CNTR_QTY_EMP					   				
    				   		                  	 		 , 'F2', CNTR_QTY_EMP	 				
    				   		                   	 		 , 'S2', CNTR_QTY_EMP	 				
    				  		               	 			 , 'A2', CNTR_QTY_EMP , 0)
    						) LOEMP_20		
    				  		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D4', CNTR_QTY_EMP   							
    				  		   			            	 , 'O4', CNTR_QTY_EMP	  				
    				  		   			            	 , 'A4', CNTR_QTY_EMP	  				
    				  		   			            	 , 'S4', CNTR_QTY_EMP	  				
    ##    				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				  		   			            	 , 'F5', CNTR_QTY_EMP	  				
    				  		   				           	 , 'F4', CNTR_QTY_EMP , 0)
    						) LOEMP_40		
    				  		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D5', CNTR_QTY_EMP   							
    				 			                    	 , 'R5', CNTR_QTY_EMP , 0)) LOEMP_HC				
    				 		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) LOEMP_45 	
      
    						,SUM(0) DCFUL_20											   	
    						,SUM(0) DCFUL_40											   	
    						,SUM(0) DCFUL_HC											   	
    						,SUM(0) DCFUL_45										   	
    						,SUM(0) DCEMP_20										   	
    						,SUM(0) DCEMP_40										   	
    						,SUM(0) DCEMP_HC										   	
    						,SUM(0) DCEMP_45										   	
    			 		FROM 
    						(   															
    				 			SELECT  					
    				            	(
    									SELECT 
    										PLN_YR||PLN_WK 
    									FROM 
    										EQR_WK_PRD 
    									WHERE 
    										TO_CHAR(PL.FM_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    								) PLN_YRWK   
    				    	   		,PL.CO_CD			CO_CD										
    				   	   		  	,ML.REP_TRD_CD  	TRADE														
    				   	   		  	,PL.VSL_LANE_CD  	VSL_LANE_CD 					  						
    				    	   		,(
    									SELECT 
    										ECC_CD 
    									FROM 
    										MDM_EQ_ORZ_CHT 
    									WHERE 
    										SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
    										AND DELT_FLG = 'N'
    								) PORT		   							
    				   	   			,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD 		  		
    				 	   			,Q.CNTR_TPSZ_CD   	CNTR_TPSZ_CD_EMP 								
    				 	   			,Q.CNTR_QTY  		CNTR_QTY_EMP  										
    				    		FROM  
    								EQR_VSL_LODG_DCHG_EXE_PLN PL
    								, EQR_VSL_EXE_PLN_QTY Q
    								, MDM_REV_LANE ML						 	 					
    							WHERE 
    								PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	    AND PL.PLN_YRWK = Q.PLN_YRWK
				            	    AND PL.PLN_SEQ = Q.PLN_SEQ
				            	    AND PL.REF_ID = Q.REF_ID
									AND PL.FM_ETD_DT BETWEEN																
    													(
    														SELECT 
    															TO_DATE(WK_ST_DT,'YYYYMMDD') 
    														FROM 
    															EQR_WK_PRD 
    														WHERE 
    															PLN_YR || PLN_WK = @[fmPlnYrWk]
    													) 		         
    													AND     																				                                       
    													(
    														SELECT 
    															TO_DATE(WK_END_DT,'YYYYMMDD') 
    														FROM 
    															EQR_WK_PRD 
    														WHERE 
    															PLN_YR || PLN_WK = @[toPlnYrWk]
    								)  		
    				          		AND PL.VSL_LANE_CD = ML.VSL_SLAN_CD  
    								#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') ) ## 사용되지 않음 로직상 구현되지 않음
                                		#if(${vslSlanCd} != '') 
                                	        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                                		#end
                                		
                                		#if(${vvd} != '') 
                                			AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                                		#end	
                                    #end
                                                            		
                                	#if(${locOrTrade} != '1')	## 사용되지 않음 로직상 구현되지 않음
                                		#if(${trade} != '') 
                                		    AND CM.TRD_CD IN( ${arrTradeStr} )
                                		#end			
                                	#end
    								#if(${locOrTrade} == '1') 
                        	    	## from loc 검색조건
                        	    	    #if(${atStatus} != ''  && ${atLocation} != '') 
                            	    		#if(${report} == 'R')
                            	    		    AND PL.FM_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN (
                            	    		#elseif(${report} == 'P')
                            	    		    AND SUBSTR(PL.FM_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                            	    		#end
                            	    		    ${fromEccArrStr}
                            	        	    ) 
                            	        	) 
                        	    	    #end
                        	    	#end
    				 		)		   																						
    				 	GROUP BY  
    						PLN_YRWK
    						, CO_CD
    						, VSL_LANE_CD
    						, VVD
    						, TRADE	
    						, PORT		
    				 UNION 	## (3)																								   					
    					SELECT 												            	   												
    				 		PLN_YRWK   																							
    				 		,CO_CD   																								
    				 		,PORT   																								
    				 		,VSL_LANE_CD   																							
    				 		,VVD   																									
    				 		,TRADE   																								
    						,SUM(0) LOFUL_20										   	
    				 		,SUM(0) LOFUL_40										   	
    				 		,SUM(0) LOFUL_HC										   	
    				 		,SUM(0) LOFUL_45										   	
    				 		,SUM(0) LOEMP_20										   	
    				 		,SUM(0) LOEMP_40										   	
    				 		,SUM(0) LOEMP_HC										   	
    				 		,SUM(0) LOEMP_45										
      				##project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    						,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D2', CNTR_QTY_FULL 		         			
    						           	 	 			  , 'R2', CNTR_QTY_FULL		              				
    				  		               				  , 'O2', CNTR_QTY_FULL		               				
    				 		               				  , 'F2', CNTR_QTY_FULL		              				
    				 		               				  , 'S2', CNTR_QTY_FULL		            
    				 		               	 			  , 'A2', CNTR_QTY_FULL , 0)) DCFUL_20	   	
    				 		,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D4', CNTR_QTY_FULL   							
    				 		               	 			  , 'O4', CNTR_QTY_FULL	   				
    				 		               				  , 'A4', CNTR_QTY_FULL		            
    				 		               				  , 'S4', CNTR_QTY_FULL		            
    				 		               				  , 'F5', CNTR_QTY_FULL		            
    				 		               	 			  , 'F4', CNTR_QTY_FULL , 0)) DCFUL_40		
    				 		,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D5', CNTR_QTY_FULL   							
    						                   	 		  , 'R5', CNTR_QTY_FULL , 0)) DCFUL_HC		
    						,SUM(DECODE(CNTR_TPSZ_CD_FULL , 'D7', CNTR_QTY_FULL , 0)) DCFUL_45 	  
    	
    						,SUM(0) DCEMP_20										   	
    						,SUM(0) DCEMP_40										   	
    						,SUM(0) DCEMP_HC										   	
    						,SUM(0) DCEMP_45										
    			 		FROM 
    						(   																									
    				  			SELECT  																			
    				    	   		(
    									SELECT 
    										PLN_YR||PLN_WK 
    									FROM 
    										EQR_WK_PRD 
    									WHERE 
    										TO_CHAR(PL.TO_ETB_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    								) PLN_YRWK												
    				    	   		,PL.CO_CD		    CO_CD										
    				    	   		,ML.REP_TRD_CD  	TRADE													
    				    	   		,PL.VSL_LANE_CD  	VSL_LANE_CD  										
    				    	   		,(
    									SELECT 
    										ECC_CD 
    									FROM 
    										MDM_EQ_ORZ_CHT 
    									WHERE 
    										SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) 
    										AND DELT_FLG = 'N'
    								) PORT			  							
    				   	   			,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD 		   		
    				 	   			,PL.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_EMP   									
    				 	   			,PL.CNTR_QTY  		CNTR_QTY_EMP    				 					
    				 				,BC.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_FULL				
    				  				,BC.CNTR_VOL_QTY	CNTR_QTY_FULL		 				
    				     		FROM  
    								BKG_BOOKING BK
    								, BKG_VVD BV
    								, BKG_CONTAINER BC
    								, COA_MON_VVD CM 
    								, MDM_REV_LANE ML ## 구문 오류 수정 AS-IS 에는 빠져 있음 09.10.06 modify by ChungEunHo
    								,(  																									
    				        			SELECT 
    										DISTINCT A.VSL_CD 
    										, A.SKD_VOY_NO
    										, A.SKD_DIR_CD
    										, A.FM_YD_CD 
    										, A.FM_ETD_DT
    										, A.TO_YD_CD
    										, A.VSL_LANE_CD 
    										, A.CO_CD 	
    										, A.TO_ETB_DT
    										, Q.CNTR_QTY 	
    										, Q.CNTR_TPSZ_CD 				
    				              		FROM 
    										EQR_VSL_LODG_DCHG_EXE_PLN A
    										, EQR_VSL_EXE_PLN_QTY Q															
    				              		WHERE 
    										A.REPO_PLN_ID = Q.REPO_PLN_ID
				            	            AND A.PLN_YRWK = Q.PLN_YRWK
				            	            AND A.PLN_SEQ = Q.PLN_SEQ
				            	            AND A.REF_ID = Q.REF_ID
									        AND TO_ETB_DT BETWEEN                													                   
    				                     					(
    															SELECT 
    																TO_DATE(WK_ST_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[fmPlnYrWk]
    														)  	        
    				                     				 	AND                                                                             	            
    				                     					(
    															SELECT 
    																TO_DATE(WK_END_DT,'YYYYMMDD') 
    															FROM 
    																EQR_WK_PRD 
    															WHERE 
    																PLN_YR || PLN_WK = @[toPlnYrWk]
    										)	
    				     			)    PL																								
    				          	WHERE 
    				          	    
    								PL.VSL_LANE_CD = ML.VSL_SLAN_CD  
    								#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                            			#if(${vslSlanCd} != '') 
                            		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                            			#end
                            			
                            			#if(${vvd} != '') 
                            				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                            			#end	
                                	#end
                              
                            		
                            		#if(${locOrTrade} != '1')	
                            			#if(${trade} != '') 
                            			    AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end
    								#if(${locOrTrade} == '1')	   
                                    	## to loc 검색조건
                                    	#if(${atStatus} != ''  && ${atLocation} != '') 
                                    
                                    		#if(${report} == 'R')
                                    			AND PL.TO_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN ( 
                                    		#elseif(${report} == 'P')
                                    			AND SUBSTR(PL.TO_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                    		#end
                                    		    ${toEccArrStr}
                                            	) 
                                            )
                                    	#end
                                    
                                    #end
    				  			  	AND BK.BKG_NO = BV.BKG_NO 											
    				 			  	AND BK.BKG_NO = BC.BKG_NO											
    							  	##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT					
    							  	##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT						
    							  	AND BK.BKG_CGO_TP_CD = 'F' 										
    							  	AND BV.VSL_CD = PL.VSL_CD 											
    							  	AND BV.SKD_VOY_NO = PL.SKD_VOY_NO 							
    							  	AND BV.SKD_DIR_CD = PL.SKD_DIR_CD 							
    							  	AND BV.POD_CD = (SELECT ECC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) AND DELT_FLG = 'N') 	## DISCHARGING  	
    						)		   																							
    				 	GROUP BY  
    						PLN_YRWK
    						, CO_CD
    						, VSL_LANE_CD
    						, VVD
    						, TRADE
    						, PORT			
    				UNION 	 ## (4)													
    					SELECT 												            		   												
    				    	PLN_YRWK  												 													
    				  		,CO_CD   																										
    				 		,PORT   																									
    				  		,VSL_LANE_CD 											  													
    				  		,VVD   																										
    				  		,TRADE  												
    				 		,SUM(0) LOFUL_20										   	
    				 		,SUM(0) LOFUL_40										   	
    				 		,SUM(0) LOFUL_HC										   	
    						,SUM(0) LOFUL_45										 														
    						,SUM(0) LOEMP_20										   	
    						,SUM(0) LOEMP_40										   	
    						,SUM(0) LOEMP_HC										   	
    						,SUM(0) LOEMP_45										
    						,SUM(0) DCFUL_20										   	
    				 		,SUM(0) DCFUL_40										   	
    				 		,SUM(0) DCFUL_HC										   	
    				 		,SUM(0) DCFUL_45	 									
    				  		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D2', CNTR_QTY_EMP 					  			
    				    	               	 	 		 , 'R2', CNTR_QTY_EMP					   				
    				   		                   	 		 , 'O2', CNTR_QTY_EMP					   				
    				   		                  	 		 , 'F2', CNTR_QTY_EMP	 				
    				   		                   	 		 , 'S2', CNTR_QTY_EMP	 				
    				  		               	 			 , 'A2', CNTR_QTY_EMP , 0)) DCEMP_20		
    				  		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D4', CNTR_QTY_EMP   							
    				  		   			            	 , 'O4', CNTR_QTY_EMP	  				
    				  		   			            	 , 'A4', CNTR_QTY_EMP	  				
    				  		  			            	 , 'S4', CNTR_QTY_EMP	  				
    ##    				project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록
    				  		   			            	 , 'F5', CNTR_QTY_EMP	  				
    				  		   				           	 , 'F4', CNTR_QTY_EMP , 0)) DCEMP_40		
    				  		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D5', CNTR_QTY_EMP   							
    				 			                    	 , 'R5', CNTR_QTY_EMP , 0)) DCEMP_HC				
    				 		,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) DCEMP_45 	
    
    					
    				 	FROM 
    						(   																											
    				   			SELECT 														
    				     	   		(
    									SELECT 
    										PLN_YR||PLN_WK 
    									FROM 
    										EQR_WK_PRD 
    									WHERE 
    										TO_CHAR(PL.TO_ETB_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    								) PLN_YRWK															
    				     	   		,PL.CO_CD		    CO_CD												
    				     	   		,ML.REP_TRD_CD  	TRADE																
    				     	   		,PL.VSL_LANE_CD  	VSL_LANE_CD  														
    				     	   		,(
    									SELECT 
    										ECC_CD 
    									FROM 
    										MDM_EQ_ORZ_CHT 
    									WHERE 
    										SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) 
    										AND DELT_FLG = 'N'
    								) PORT    							
    				    	   		,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD  					  		
    					 	   		,Q.CNTR_TPSZ_CD  	CNTR_TPSZ_CD_EMP   												
    					 	   		,Q.CNTR_QTY  		CNTR_QTY_EMP     												
    				 			FROM  
    								EQR_VSL_LODG_DCHG_EXE_PLN PL
    								, EQR_VSL_EXE_PLN_QTY Q
    								, MDM_REV_LANE ML	 								
    							WHERE 
    								PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	    AND PL.PLN_YRWK = Q.PLN_YRWK
				            	    AND PL.PLN_SEQ = Q.PLN_SEQ
				            	    AND PL.REF_ID = Q.REF_ID
									AND PL.TO_ETB_DT BETWEEN															
    				 									(
    														SELECT 
    															TO_DATE(WK_ST_DT,'YYYYMMDD') 
    														FROM 
    															EQR_WK_PRD 
    														WHERE PLN_YR || PLN_WK = @[fmPlnYrWk]
    													)		          
    				 									AND                                                                          		               
    				 									(
    														SELECT 
    															TO_DATE(WK_END_DT,'YYYYMMDD') 
    														FROM 
    															EQR_WK_PRD 
    														WHERE 
    															PLN_YR || PLN_WK = @[toPlnYrWk]
    								)   
                	          		AND PL.VSL_LANE_CD = ML.VSL_SLAN_CD  
    								#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') ) ## 사용되지 않음 로직상 구현되지 않음
                            			#if(${vslSlanCd} != '') 
                            		        AND CM.SLAN_CD IN( ${arrVslSlanCdStr} )
                            			#end
                            			
                            			#if(${vvd} != '') 
                            				AND PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD IN( ${arrVvdStr} )
                            			#end	
                                	#end
                              
                            		
                            		#if(${locOrTrade} != '1')	## 사용되지 않음 로직상 구현되지 않음
                            			#if(${trade} != '') 
                            			    AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end
    								#if(${locOrTrade} == '1')	   
                                    	## to loc 검색조건
                                    	#if(${atStatus} != ''  && ${atLocation} != '') 
                                    
                                    		#if(${report} == 'R')
                                    			AND PL.TO_YD_CD IN (SELECT ECC_CD FROM EQR_ECC_MST WHERE 1 = 1 AND $typeStr IN ( 
                                    		#elseif(${report} == 'P')
                                    			AND SUBSTR(PL.TO_YD_CD,1,5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE 1 = 1 AND $typeStr IN ( 	
                                    		#end
                                    		    ${toEccArrStr}
                                            	) 
                                            )
                                    	#end
                                    
                                    #end
    					 	)		   																						
    		   		 	GROUP BY  
    						PLN_YRWK
    						, CO_CD
    						, VSL_LANE_CD
    						, VVD, TRADE
    						, PORT		
    				)																													   					
        		GROUP BY  
    				PLN_YRWK 
    				, CO_CD 
    				, PORT 
    				, VSL_LANE_CD 
    				, VVD 
    				, TRADE     
    		#end   		
    	
    	#end
    #else 
    	##  CSRNO : N200806030017 의거 추가  시작 
    	WITH TGT_OUTBOUND AS(                                                                                                                                                                                                                                                                  
    		SELECT  
				DISTINCT  '1' LD_DS  
				, SLAN_CD 
				, VSL_CD
				, SKD_VOY_NO
				, SKD_DIR_CD 
				, FROM_RGN
				, TO_RGN 
				,(ROWNUM)SEQ                                                
    		FROM   
				(                                                                                                                                            
    		    	SELECT  
						VPS1.VSL_CD
						, VPS1.SKD_VOY_NO
						, VPS1.SKD_DIR_CD
						, VPS1.VPS_PORT_CD
						, VPS1.CLPT_IND_SEQ
						, VPS1.CLPT_SEQ
						, VPS1.VPS_ETD_DT
						, VPS1.SLAN_CD
						, MD.TRD_CD
						, DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) FROM_RGN
						, SUBSTR(MIN(LPAD(vps2.CLPT_SEQ, 4)||DECODE(cnt2.CONTI_CD, 'F', 'E', CNT2.CONTI_CD)), 5, 1) TO_RGN                                         
    		        FROM    
						VSK_VSL_PORT_SKD VPS1
						, MDM_LOCATION CNT1
						, VSK_VSL_PORT_SKD VPS2
						, MDM_LOCATION CNT2
						,(  
								SELECT 
									DISTINCT VSL_CD
									, SKD_VOY_NO
									, DIR_CD
									,  SLAN_CD 
									, TRD_CD                                                                                                                             
    		              		FROM 
									COA_MON_VVD  ## , MDM_VSL_SVC_LANE_DIR MV                                                                                       
    		               		WHERE 
									DELT_FLG ='N'                                                                                                                  
    		                	    AND IOC_CD =  DECODE(TRD_CD,'IAS',DECODE(SUB_TRD_CD,'IA','I','O'), 'IMS', 'I', 'O')                                                  
    		               	     AND IOC_CD ='O'                                                                                                                     
    		                                                                                                                                                         
    		             	UNION ALL                                                                                                                            
    		                                                                                                                                                         
    		               		SELECT 
									DISTINCT VSL_CD
									, SKD_VOY_NO
									, DIR_CD
									,  SLAN_CD 
									, TRD_CD                                                                                                                         
    		              		FROM 
									COA_MON_VVD CV 
									, MDM_VSL_SVC_LANE_DIR MV                                                                                        
    		                 	WHERE 
									CV.DELT_FLG ='N'                                                                                                               
    		                    	AND MV.DELT_FLG='N'                                                                                                                  
    		                    	AND CV.SLAN_CD = MV.VSL_SLAN_CD                                                                                                      
    		                     	AND CV.DIR_CD = MV.VSL_SLAN_DIR_CD                                                                                                  
    		                      	AND MV.VSL_SLAN_DIR_SEQ =2                                                                                                         
    		                                                                                                                                                         
    		                    	AND IOC_CD =  DECODE(TRD_CD,'IAS',DECODE(SUB_TRD_CD,'IA','I','O'), 'IMS', 'I', 'O')                                                  
    		                     	AND IOC_CD ='I'                                                                                                                     
    		      		) CM
						,( 
							SELECT 
								DISTINCT SUBSTR(A.RLANE_CD, 1, 3) LANE
								, VSL_SLAN_DIR_CD DIR_CD
								, FM_CONTI_CD FM_CONTI
								, TO_CONTI_CD TO_CONTI
								, DECODE(SUBSTR(A.RLANE_CD,1,3),  'MIX', DECODE(A.FM_CONTI_CD,'M','TAS','A','AES', B.REP_TRD_CD),                                   
    		                                                      'MAP', DECODE(A.FM_CONTI_CD,'M','TPS','A','AES', B.REP_TRD_CD),                                   
    		                                                      'KPM', DECODE(A.FM_CONTI_CD,'M','TPS','A','AES', B.REP_TRD_CD),                                   
    		                                                      'AEC','AES', B.REP_TRD_CD
								) TRD_CD                                                                                                                             
    		            	FROM 
								MDM_DTL_REV_LANE A  
								, MDM_REV_LANE B                                                                                                                                                                                                                                                                                                                                                  
    		              	WHERE   
								A.DELT_FLG ='N'                                                                                                              
    		                	AND  A.RLANE_CD =B.RLANE_CD                                                                                                          
    		                                                                                                                                                         
    		        	) MD                                                                                                                                     
    		        WHERE   
						NVL(VPS1.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')                                                                                     
    		        	AND NVL(VPS1.TURN_PORT_IND_CD, ' ') NOT IN ('D', 'F', 'V')                                                                                       
    		        	AND NVL(VPS1.SKD_CNG_STS_CD, ' ') <> 'S'                                                                                                             
    		                                                                                                                                                         
    		        	AND VPS1.VPS_ETD_DT BETWEEN (
														SELECT 
															TO_DATE(WK_ST_DT,'YYYYMMDD') 
														FROM 
															EQR_WK_PRD 
														WHERE 
															PLN_YR||PLN_WK = @[fmPlnYrWk]
													)                                       
    		        								AND 
													(
														SELECT 
															TO_DATE(WK_END_DT,'YYYYMMDD') 
														FROM 
															EQR_WK_PRD 
														WHERE 
															PLN_YR||PLN_WK = @[toPlnYrWk]
													) +0.99999                                                     
    		        	AND VPS2.VSL_CD = VPS1.VSL_CD                                                                                                                    
    		        	AND VPS2.SKD_VOY_NO = VPS1.SKD_VOY_NO                                                                                                            
    		        	AND VPS2.SKD_DIR_CD = VPS1.SKD_DIR_CD                                                                                                            
    		        	AND VPS2.CLPT_SEQ > VPS1.CLPT_SEQ                                                                                                                
    		        	AND NVL(VPS2.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')                                                                                         
    		        	AND NVL(VPS2.SKD_CNG_STS_CD, ' ') <> 'S'                                                                                                             
    		        	AND CNT1.LOC_CD = VPS1.VPS_PORT_CD                                                                                                               
    		        	AND CNT2.LOC_CD = VPS2.VPS_PORT_CD                                                                                                               
    		                                                                                                                                                         
    		        	AND VPS1.SLAN_CD = MD.LANE                                                                                                                       
    		        	AND VPS1.SKD_DIR_CD = MD.DIR_CD                                                                                                                  
    		                                                                                                                                                         
    		        	AND VPS1.VSL_CD = CM.VSL_CD                                                                                                                      
    		        	AND VPS1.SKD_VOY_NO = CM.SKD_VOY_NO                                                                                                              
    		        	AND VPS1.SKD_DIR_CD = CM.DIR_CD                                                                                                                  
    		        	AND VPS1.SLAN_CD = CM.SLAN_CD                                                                                                                    
    		        	AND CM.TRD_CD = MD.TRD_CD                                                                                                                        
    		        	#if(${locOrTrade} == '2' || ( ${locOrTrade} == '1' && ${byLocation} == 'P') )
                			#if(${vslSlanCd} != '') 
                			## CSRNO : N200806030017에 의거 추가
                				AND VPS1.SLAN_CD IN ( ${arrVslSlanCdStr} )
                			#end
                			
                			#if(${vvd} != '') 
                				## CSRNO : N200806030017에 의거 추가  
                				AND VPS1.VSL_CD||VPS1.SKD_VOY_NO||VPS1.SKD_DIR_CD IN ( ${arrVvdStr} )
                			#end	
                    	#end
                  
                		
                		#if(${locOrTrade} != '1')	
                	    
                			#if(${trade} != '') 
                            ## CSRNO : N200806030017에 의거 추가 
                				AND CM.TRD_CD IN( ${arrTradeStr} )
                			#end			
                		#end
    		        	AND DECODE( MD.LANE,                                                                                                                                        
    		                   	'MIX',DECODE(CNT1.CONTI_CD,'F','E',CNT1.CONTI_CD),                                                                                    
    		                    'NMX',DECODE(CNT1.CONTI_CD,'F','E',CNT1.CONTI_CD),                                                                                   
    		                    'CMX',DECODE(CNT1.CONTI_CD,'F','E',CNT1.CONTI_CD),                                                                                   
    		                    'JES',DECODE(CNT1.CONTI_CD,'F','E',CNT1.CONTI_CD),                                                                                   
    		                    'JMS',DECODE(CNT1.CONTI_CD,'F','E',CNT1.CONTI_CD),                                                                                   
    		                    'INX',DECODE(CNT1.CONTI_CD,'F','A',CNT1.CONTI_CD),                                                                                   
    		                    'GIX',DECODE(CNT1.CNT_CD,'IL','E',CNT1.CONTI_CD),CNT1.CONTI_CD) = MD.FM_CONTI                                                         
    		                                                                                                                                                         
    		        	AND (                                                                                                                                            
    		            	   (CM.TRD_CD = 'TPS' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'M')                                                                 
    		            	OR (CM.TRD_CD = 'TPS' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'A')                                                              
    		             	OR (CM.TRD_CD = 'TAS' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'M')                                                            
    		             	OR (CM.TRD_CD = 'TAS' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'E')                                                             
    		             	OR (CM.TRD_CD = 'IAS' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'A')                                                             
    		             	OR (CM.TRD_CD = 'AES' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'E')                                                             
    		             	OR (CM.TRD_CD = 'AES' AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'A')                                                             
    		      		)                                                                                                                                                
    		                                                                                                                                                         
    		  		GROUP BY                                                                                                                                         
    		    		VPS1.VSL_CD
						, VPS1.SKD_VOY_NO
						, VPS1.SKD_DIR_CD
						, VPS1.VPS_PORT_CD
						, VPS1.CLPT_IND_SEQ
						, VPS1.CLPT_SEQ
						, VPS1.VPS_ETD_DT
						, VPS1.SLAN_CD, MD.TRD_CD,                                                                                  
    		        	DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD)                                                                                               
				)                                                                                                                                                    
			where 
					(
						   (TRD_CD = 'TPS' AND FROM_RGN = 'M' AND TO_RGN = 'A')                                                                                          
    		            OR (TRD_CD = 'TAS' AND FROM_RGN = 'M' AND TO_RGN = 'E')                                                                                 
    		           	OR (TRD_CD = 'TAS' AND FROM_RGN = 'E' AND TO_RGN = 'M')                                                                                 
    		            OR (TRD_CD = 'IAS' AND FROM_RGN = 'A' AND TO_RGN = 'A')                                                                                 
    		           	OR (TRD_CD = 'IMS' AND FROM_RGN = 'M' AND TO_RGN = 'M')                                                                                 
    		           	OR (TRD_CD = 'AES' AND FROM_RGN = 'E' AND TO_RGN = 'A')                                                                                 
    		           	OR (TRD_CD = 'TPS' AND FROM_RGN = 'M' AND TO_RGN = DECODE(SLAN_CD, 'INX', 'E','X'))                                                     
    		          	OR (TRD_CD = 'TPS' AND FROM_RGN = DECODE(SLAN_CD, 'INX','E','X') AND TO_RGN = 'M')
					)                                                     
		), ## WITH TGT_OUTBOUND END                                                                                                                                                       
    	TGT_INBOUND AS (                                                                                                                                         
    		##    SELECT  DISTINCT  '1' LD_DS  ,slan_cd ,VSL_CD, SKD_VOY_NO, SKD_DIR_CD , from_rgn, to_rgn , '' from_rgn1, '' to_rgn1,seq                            
    		##            FROM tgt_outbound                                                                                                                          
    		##    union all                                                                                                                                          
    		
			SELECT 
				DISTINCT '2' LD_DS
				, SLAN_CD
				,  VSL_CD
				, SKD_VOY_NO
				, SKD_DIR_CD
				, FROM_RGN
				, TO_RGN
				, FROM1
				, TO1 
				, SEQ                                               
    		                                                                                                                                                         
    		FROM                                                                                                                                                 
				(                                                                                                                                                
					SELECT  
						VPS1.VSL_CD
						, VPS1.SKD_VOY_NO
						, VPS1.SKD_DIR_CD
						, VPS1.VPS_PORT_CD
						, VPS1.CLPT_IND_SEQ
						, VPS1.CLPT_SEQ
						, VPS1.VPS_ETD_DT
						, VPS1.SLAN_CD
						, DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) FROM_RGN
						, SUBSTR(MIN(LPAD(VPS2.CLPT_SEQ, 4)||                                                                                                  
    		                    	 DECODE(CNT2.CONTI_CD, 'F', 'E', CNT2.CONTI_CD)), 5, 1) TO_RGN                                                                        
    		            , BASE.FROM_RGN FROM1
						, BASE.TO_RGN TO1 
						, BASE.SEQ                                                                                    
					FROM    
						VSK_VSL_PORT_SKD VPS
						, VSK_VSL_PORT_SKD VPS1
						, MDM_LOCATION CNT1
						, VSK_VSL_PORT_SKD VPS2
						, MDM_LOCATION CNT2
						, TGT_OUTBOUND BASE                                                                                                                    
    		      	WHERE   
						NVL(VPS1.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')                                                                                 
    		            AND NVL(VPS1.TURN_PORT_IND_CD, ' ') NOT IN ('D', 'F', 'V')                                                                               
    		            AND NVL(VPS1.SKD_CNG_STS_CD, ' ') <> 'S'                                                                                                     
    		            AND CNT1.LOC_CD = VPS1.VPS_PORT_CD                                                                                                       
    		            ##  AND vps1.vps_etd_dt BETWEEN (SELECT TO_DATE(WK_ST_DT,'YYYYMMDD') FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = '200814')                      
    		            ##  AND (SELECT TO_DATE(WK_END_DT,'YYYYMMDD') FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = '200821') +0.99999                                    
    		            AND VPS1.VSL_CD = VPS.VSL_CD                                                                                                             
    		            AND VPS1.SKD_VOY_NO = VPS.TURN_SKD_VOY_NO                                                                                                
    		            AND VPS1.SKD_DIR_CD = VPS.TURN_SKD_DIR_CD                                                                                                
    		            AND VPS2.VSL_CD = VPS1.VSL_CD                                                                                                            
    		            AND VPS2.SKD_VOY_NO = VPS1.SKD_VOY_NO                                                                                                    
    		            AND VPS2.SKD_DIR_CD = VPS1.SKD_DIR_CD                                                                                                    
    		            AND VPS2.CLPT_SEQ > VPS1.CLPT_SEQ                                                                                                        
    		            AND NVL(VPS2.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')                                                                                 
    		            AND NVL(VPS2.SKD_CNG_STS_CD, ' ') <> 'S'                                                                                                     
    		            AND CNT2.LOC_CD = VPS2.VPS_PORT_CD                                                                                                       
    		            AND VPS.SLAN_CD = BASE.SLAN_CD                                                                                                           
    		            AND VPS.VSL_CD = BASE.VSL_CD                                                                                                             
    		            AND VPS.SKD_VOY_NO = BASE.SKD_VOY_NO                                                                                                     
    		            AND VPS.SKD_DIR_CD = BASE.SKD_DIR_CD                                                                                                     
    		            AND VPS.CLPT_SEQ = 1                                                                                                                     
    		            AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = BASE.TO_RGN                                                                         
    		            ##    AND DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD) = 'A'                                                                               
    		     	GROUP BY                                                                                                                                     
    		          	VPS1.VSL_CD
						, VPS1.SKD_VOY_NO
						, VPS1.SKD_DIR_CD
						, VPS1.VPS_PORT_CD
						, VPS1.CLPT_IND_SEQ
						, VPS1.CLPT_SEQ
						, VPS1.VPS_ETD_DT
						, VPS1.SLAN_CD
						, DECODE(CNT1.CONTI_CD, 'F', 'E', CNT1.CONTI_CD)                                                                                           
    		           	, BASE.FROM_RGN 
						, BASE.TO_RGN 
						, BASE.SEQ                                                                                                  
    		    )                                                                                                                                                    
    		    ##WHERE (from_rgn = 'A' AND to_rgn = 'E')                                                                                                            
    		    ##WHERE (from_rgn = to_rgn AND to_rgn = from_rgn)                                                                                                    
    		WHERE 
				( 
					FROM_RGN = TO1 
					AND TO_RGN = FROM1
				)                                                                                                            
    		                                                                                                                                                         
    		GROUP BY 
				SEQ 
				, SLAN_CD 
				, VSL_CD
				, SKD_VOY_NO
				, SKD_DIR_CD
				, FROM_RGN
				, TO_RGN
				, FROM1
				, TO1                                                                  
			ORDER BY 
				SEQ 
				, LD_DS
				, SLAN_CD 
				, VSL_CD
				, SKD_VOY_NO
				, SKD_DIR_CD                                                                                          
		)   ## WITH TGT_INBOUND END                                                                                                                                                     
    	
		SELECT                                                                                                                                                
    		'' SEQ                                                                                                                                             
    		,CASE  
				WHEN NO = '1' 
					THEN 
						LD_TRADE                                                                                                              
				WHEN NO = '2' 
					THEN 
						DS_TRADE                                                                                                              
				WHEN NO = '2' 
					THEN 
						MATCH_TRADE                                                                                                           
    		END TRADE                                                                                                                                      
    		,CASE 
				WHEN NO = '1' 
					THEN 
						LD_VSL_LANE_CD                                                                                                        
				WHEN NO = '2' 
					THEN 
						DS_VSL_LANE_CD                                                                                                        
				WHEN NO = '3' 
					THEN 
						MATCH_VSL_LANE_CD                                                                                                     
    		END AS VSL_LANE_CD                                                                                                                             
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_LAST_PORT_CD                                                                                                       
				WHEN NO = '2' 
					THEN 
						DS_LAST_PORT_CD                                                                                                       
				WHEN NO = '3' 
					THEN 
						MATCH_LAST_PORT_CD                                                                                                    
			END AS VVD                                                                                                                                     
    		,CASE 
				WHEN NO = '1' 
					THEN 
						LD_VVD                                                                                                                
				WHEN NO = '2' 
					THEN 
						DS_VVD                                                                                                                
				WHEN NO = '3' 
					THEN 
						MATCH_VVD                                                                                                             
    		END AS VVD                                                                                                                                     
			,CASE 
				WHEN NO = '1' 
					THEN 
						'LD'                                                                                                                  
				WHEN NO = '2' 
					THEN 
						'DS'                                                                                                                  
				WHEN NO = '3' 
					THEN 
						'Match Back(%)'                                                                                                       
			END AS FLG                                                                                                                                     
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_LAST_PORT_YRWK                                                                                                     
				WHEN NO = '2' 
					THEN 
						DS_LAST_PORT_YRWK                                                                                                     
				WHEN NO = '3' 
					THEN 
						MATCH_LAST_PORT_YRWK                                                                                                  
			END AS LAST_PORT_YRWK                                                                                                                          
    		## FULL                                                                                              
    		,CASE 
				WHEN NO = '1' 
					THEN 
						LD_FULL_20                                                                                                            
				WHEN NO = '2' 
					THEN 
						DS_FULL_20                                                                                                            
				WHEN NO = '3' 
					THEN 
						MATCH_LDFULL_20                                                                                                       
			END AS FULL_20                                                                                                                                 
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_FULL_40                                                                                                            
				WHEN NO = '2' 
					THEN 
						DS_FULL_40                                                                                                            
				WHEN NO = '3' 
					THEN 
						MATCH_LDFULL_40                                                                                                       
			END AS FULL_40                                                                                                                                 
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_FULL_HC                                                                                                            
				WHEN NO = '2' 
					THEN 
						DS_FULL_HC                                                                                                            
				WHEN NO = '3' 
					THEN 
						MATCH_LDFULL_HC                                                                                                       
			END AS FULL_HC                                                                                                                                 
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_FULL_45                                                                                                            
				WHEN NO = '2' 
					THEN 
						DS_FULL_45                                                                                                            
				WHEN NO = '3' 
					THEN 
						MATCH_LDFULL_45                                                                                                       
			END AS FULL_45                                                                                                                                 
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_FULL_TTL                                                                                                           
				WHEN NO = '2' 
					THEN 
						DS_FULL_TTL                                                                                                           
				WHEN NO = '3'
					THEN 
						MATCH_LDFULL_TTL                                                                                                      
			END AS FULL_TTL                                                                                                                                
			## empty 
    		,CASE 
				WHEN NO = '1' 
					THEN 
						LD_EMPTY_20                                                                                                          
				WHEN NO = '2' 
					THEN 
						DS_EMPTY_20                                                                                                           
				WHEN NO = '3' 
					THEN 
						MATCH_LDEMPTY_20                                                                                                      
			END AS EMPTY_20                                                                                                                                
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_EMPTY_40                                                                                                           
				WHEN NO = '2' 
					THEN 
						DS_EMPTY_40                                                                                                           
				WHEN NO = '3' 
					THEN 
						MATCH_LDEMPTY_40                                                                                                      
			END AS EMPTY_40                                                                                                                                
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_EMPTY_HC                                                                                                           
				WHEN NO = '2' 
					THEN 
						DS_EMPTY_HC                                                                                                           
				WHEN NO = '3' 
					THEN 
						MATCH_LDEMPTY_HC                                                                                                      
			END AS EMPTY_HC                                                                                                                                
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_EMPTY_45                                                                                                           
				WHEN NO = '2' 
					THEN 
						DS_EMPTY_45                                                                                                           
				WHEN NO = '3' 
					THEN 
						MATCH_LDEMPTY_45                                                                                                      
			END AS EMPTY_45                                                                                                                                
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_EMPTY_TTL                                                                                                          
				WHEN NO = '2' 
					THEN 
						DS_EMPTY_TTL                                                                                                          
				WHEN NO = '3' 
					THEN 
						MATCH_LDEMPTY_TTL                                                                                                     
			END AS EMPTY_TTL                                                                                                                               
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_TOTAL                                                                                                             
				WHEN NO = '2' 
					THEN 
						DS_TOTAL                                                                                                             
				WHEN NO = '3' 
					THEN 
						MATCH_TOTAL                                                                                                          
			END AS TOTAL                                                                                                                                   
			,CASE 
				WHEN NO = '1' 
					THEN 
						LD_TEU                                                                                                               
				WHEN NO = '2' 
					THEN 
						DS_TEU                                                                                                               
				WHEN NO = '3' 
					THEN 
						MATCH_TEU                                                                                                            
			END AS TOTAL                                                                                                                                   
    		                                                                                                                                                         
		FROM  
			(                                                                                                                                              
                SELECT    
                    OUTBOUND.TRADE          LD_TRADE                                                                                                   
                    ,OUTBOUND.VSL_LANE_CD    LD_VSL_LANE_CD                                                                                             
                    ,OUTBOUND.LST_PORT       LD_LAST_PORT_CD                                                                                            
                    ,OUTBOUND.VVD            LD_VVD                                                                                                     
                    ,OUTBOUND.PLN_YRWK       LD_LAST_PORT_YRWK                                                                                          
                    ,OUTBOUND.LD_DS          FLG_1                                                                                                      
                    ,MAX(LD_LOFUL_20)  LD_FULL_20                                                                                                       
                    ,MAX(LD_LOFUL_40) LD_FULL_40                                                                                                        
                    ,MAX(LD_LOFUL_HC) LD_FULL_HC                                                                                                        
                    ,MAX(LD_LOFUL_45) LD_FULL_45                                                                                                        
                    ,MAX(LD_LOFUL_20 + LD_LOFUL_40 + LD_LOFUL_HC + LD_LOFUL_45) LD_FULL_TTL                                                             
                    ,MAX(LD_LOEMP_20) LD_EMPTY_20                                                                                                       
                    ,MAX(LD_LOEMP_40) LD_EMPTY_40                                                                                                       
                    ,MAX(LD_LOEMP_HC) LD_EMPTY_HC                                                                                                       
                    ,MAX(LD_LOEMP_45) LD_EMPTY_45                                                                                                       
                    ,MAX(LD_LOEMP_20) + MAX(LD_LOEMP_40) + MAX(LD_LOEMP_HC) + MAX(LD_LOEMP_45) LD_EMPTY_TTL                                                            
                    ,MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45)                                                                          
                    + MAX(LD_LOEMP_20) + MAX(LD_LOEMP_40) + MAX(LD_LOEMP_HC) + MAX(LD_LOEMP_45)   LD_TOTAL                                                                
                    ,MAX(OUTBOUND.LD_CNTR_TEU_LOFUL)+MAX(OUTBOUND.LD_CNTR_TEU_LOEMP)    LD_TEU                                                               
                    ,MAX(OUTBOUND.SEQ)                                                                                                                  
                    ############## inbound ################################-                                                                            
                    ,INBOUND.DS_TRADE          DS_TRADE                                                                                                 
                    ,INBOUND.DS_VSL_LANE_CD    DS_VSL_LANE_CD                                                                                           
                    ,INBOUND.DS_LST_PORT       DS_LAST_PORT_CD                                                                                          
                    ,INBOUND.DS_VVD            DS_VVD                                                                                                   
                    ,INBOUND.DS_PLN_YRWK       DS_LAST_PORT_YRWK                                                                                        
                    ,INBOUND.DS_LD_DS          FLG_2                                                                                                    
                    ,MAX(INBOUND.DS_LOFUL_20) DS_FULL_20                                                                                                
                    ,MAX(INBOUND.DS_LOFUL_40) DS_FULL_40                                                                                                
                    ,MAX(INBOUND.DS_LOFUL_HC) DS_FULL_HC                                                                                                
                    ,MAX(INBOUND.DS_LOFUL_45) DS_FULL_45                                                                                                
                    ,MAX(INBOUND.DS_LOFUL_20 + INBOUND.DS_LOFUL_40 + INBOUND.DS_LOFUL_HC + INBOUND.DS_LOFUL_45) DS_FULL_TTL                             
                    ,MAX(DS_LOEMP_20) DS_EMPTY_20                                                                                                       
                    ,MAX(DS_LOEMP_40) DS_EMPTY_40                                                                                                       
                    ,MAX(DS_LOEMP_HC) DS_EMPTY_HC                                                                                                       
                    ,MAX(DS_LOEMP_45) DS_EMPTY_45                                                                                                       
                    ,MAX(DS_LOEMP_20) +MAX(DS_LOEMP_40) + MAX(DS_LOEMP_HC) + MAX(DS_LOEMP_45) DS_EMPTY_TTL                                              
                    ,MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45)                          
                    + MAX(DS_LOEMP_20) + MAX(DS_LOEMP_40) + MAX(DS_LOEMP_HC) + MAX(DS_LOEMP_45)   DS_TOTAL                                                            
                    ,MAX(INBOUND.DS_CNTR_TEU_LOFUL)+ MAX(INBOUND.DS_CNTR_TEU_LOEMP)    DS_TEU                                                                                 
                    ,MAX(INBOUND.SEQ)                                                                                                                   
                    ,''                        MATCH_TRADE                                                                                              
                    ,''                        MATCH_VSL_LANE_CD                                                                                        
                    ,''                        MATCH_LAST_PORT_CD                                                                                       
                    ,''                        MATCH_VVD                                                                                                
                    ,''                        MATCH_LAST_PORT_YRWK                                                                                     
                    ,'3'                       FLG_3                                                                                                    
                    ###################### match full 계산   ##########################                                                                                                                                                                                                                                             
                    ,CASE WHEN NVL(MAX(LD_LOFUL_20),0) >  NVL(MAX(INBOUND.DS_LOFUL_20),0)                                                                                                                                                                                                                                       
                        THEN                                                                                                                                                                                                                                                                                                       
                            - ROUND((NVL(MAX(INBOUND.DS_LOFUL_20),0) / DECODE(NVL(MAX(LD_LOFUL_20),1),0,1,MAX(LD_LOFUL_20)) )* 100,1)                                                                                                                                                                                          
                        ELSE                                                                                                                                                                                                                                                                                                       
                           ROUND((NVL(MAX(LD_LOFUL_20),0)         / DECODE(NVL(MAX(INBOUND.DS_LOFUL_20),1),0,1,MAX(INBOUND.DS_LOFUL_20)) ) * 100,1)                                                                                                                                                                         
                    END MATCH_LDFULL_20                                                                                                                                                                                                                                                                                             
                    ,CASE WHEN NVL(MAX(LD_LOFUL_40),0) >  NVL(MAX(INBOUND.DS_LOFUL_40),0)                                                                                                                                                                                                                                       
                        THEN                                                                                                                                                                                                                                                                                                       
                            -  ROUND((NVL(MAX(INBOUND.DS_LOFUL_40),0)  / DECODE(NVL(MAX(LD_LOFUL_40),1),0,1,MAX(LD_LOFUL_40))) * 100,1)                                                                                                                                                                                         
                        ELSE                                                                                                                                                                                                                                                                                                       
                           ROUND((NVL(MAX(LD_LOFUL_40),0)          / DECODE(NVL(MAX(INBOUND.DS_LOFUL_40),1),0,1,MAX(INBOUND.DS_LOFUL_40)) ) * 100,1)                                                                                                                                                                        
                    END MATCH_LDFULL_40                                                                                                                                                                                                                                                                                             
                    ,CASE WHEN  NVL(MAX(LD_LOFUL_HC),0) >  NVL(MAX(INBOUND.DS_LOFUL_HC),0)                                                                                                                                                                                                                                       
                        THEN                                                                                                                                                                                                                                                                                                       
                            -    ROUND((NVL(MAX(INBOUND.DS_LOFUL_HC),0) / DECODE(NVL(MAX(LD_LOFUL_HC),1),0,1,MAX(LD_LOFUL_HC)) ) * 100,1)                                                                                                                                                                                         
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND((NVL(MAX(LD_LOFUL_HC),0)        /  DECODE(NVL(MAX(INBOUND.DS_LOFUL_HC),1),0,1,MAX(INBOUND.DS_LOFUL_HC)) ) * 100,1)                                                                                                                                                                         
                    END MATCH_LDFULL_HC                                                                                                                                                                                                                                                                                             
                    ,CASE WHEN NVL(MAX(LD_LOFUL_45),0) >  NVL(MAX(INBOUND.DS_LOFUL_45),0)                                                                                                                                                                                                                                       
                        THEN                                                                                                                                                                                                                                                                                                       
                            -    ROUND((NVL(MAX(INBOUND.DS_LOFUL_45),0) / DECODE(NVL(MAX(LD_LOFUL_45),1),0,1,MAX(LD_LOFUL_45)) ) * 100,1)                                                                                                                                                                                         
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND((NVL(MAX(LD_LOFUL_45),0)         / DECODE(NVL(MAX(INBOUND.DS_LOFUL_45),1),0,1,MAX(INBOUND.DS_LOFUL_45)) ) * 100,1)                                                                                                                                                                         
                    END MATCH_LDFULL_45                                                                                                                                                                                                                                                                                             
                    , CASE WHEN NVL(MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45),0) >  NVL(MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45),0)                                                                                                                           
                        THEN                                                                                                                                                                                                                                                                                                       
                            -   ROUND(NVL(MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45),0) / DECODE(NVL(MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45),1),0,1,MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45) )* 100,1)                                    
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND(NVL(MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45),0) / DECODE(NVL( MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45),1),0,1,MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45) )* 100,1)     
                    END MATCH_LDFULL_TTL                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                                                                                                                             
                    ##  MATCH EMPTY  계산식 시작                                                                                                                                                                                                           
                    ,CASE WHEN NVL(MAX(LD_LOEMP_20),0) >  NVL(MAX(DS_LOEMP_20),0)                                                                                                                                                                                                                                               
                        THEN                                                                                                                                                                                                                                                                                                       
                            -   ROUND((NVL(MAX(DS_LOEMP_20),0) / DECODE(NVL(MAX(LD_LOEMP_20),1),0,1,MAX(LD_LOEMP_20)) ) * 100,1)                                                                                                                                                                                                 
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND((NVL(MAX(LD_LOEMP_20),0) / DECODE(NVL(MAX(DS_LOEMP_20),1),0,1,MAX(DS_LOEMP_20)) ) * 100,1)                                                                                                                                                                                                 
                    END MATCH_LDEMPTY_20                                                                                                                                                                                                                                                                                             
                    ,CASE WHEN NVL(MAX(LD_LOEMP_40),0) >  NVL(MAX(DS_LOEMP_40),0)                                                                                                                                                                                                                                               
                        THEN                                                                                                                                                                                                                                                                                                       
                            -   ROUND((NVL(MAX(DS_LOEMP_40),0) / DECODE(NVL(MAX(LD_LOEMP_40),1),0,1,MAX(LD_LOEMP_40)) ) * 100,1)                                                                                                                                                                                                 
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND((NVL(MAX(LD_LOEMP_40),0) / DECODE(NVL(MAX(DS_LOEMP_40),1),0,1,MAX(DS_LOEMP_40)) ) * 100,1)                                                                                                                                                                                                 
                    END MATCH_LDEMPTY_40                                                                                                                                                                                                                                                                                            
                    ,CASE WHEN NVL(MAX(LD_LOEMP_HC),0) >  NVL(MAX(DS_LOEMP_HC),0)                                                                                                                                                                                                                                               
                        THEN                                                                                                                                                                                                                                                                                                       
                            -   ROUND((NVL(MAX(DS_LOEMP_HC),0) / DECODE(NVL(MAX(LD_LOEMP_HC),1),0,1,MAX(LD_LOEMP_HC)) )* 100,1)                                                                                                                                                                                                  
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND((NVL(MAX(LD_LOEMP_HC),0) / DECODE(NVL(MAX(DS_LOEMP_HC),1),0,1,MAX(DS_LOEMP_HC)) )* 100,1)                                                                                                                                                                                                  
                    END MATCH_LDEMPTY_HC                                                                                                                                                                                                                                                                                            
                    ,CASE WHEN NVL(MAX(LD_LOEMP_45),0) >  NVL(MAX(DS_LOEMP_45),0)                                                                                                                                                                                                                                               
                        THEN                                                                                                                                                                                                                                                                                                       
                            -    ROUND((NVL(MAX(DS_LOEMP_45),0) / DECODE(NVL(MAX(LD_LOEMP_45),1),0,1,MAX(LD_LOEMP_45)) )* 100,1)                                                                                                                                                                                                  
                        ELSE                                                                                                                                                                                                                                                                                                       
                            ROUND((NVL(MAX(LD_LOEMP_45),0) / DECODE(NVL(MAX(DS_LOEMP_45),1),0,1,MAX(DS_LOEMP_45)) ) * 100,1)                                                                                                                                                                                                 
                    END MATCH_LDEMPTY_45                                                                                                                                                                                                                                                                                            
                    , CASE WHEN      NVL(MAX(LD_LOEMP_20 + LD_LOEMP_40 + LD_LOEMP_HC + LD_LOEMP_45),0) >  NVL(MAX(DS_LOEMP_20 + DS_LOEMP_40 + DS_LOEMP_HC + DS_LOEMP_45),0)                                                                                                                                                           
                        THEN                                                                                                                                                                                                                                                                                                       
                            -    ROUND((NVL(MAX(DS_LOEMP_20 + DS_LOEMP_40 + DS_LOEMP_HC + DS_LOEMP_45),0) / DECODE(NVL(MAX(LD_LOEMP_20 + LD_LOEMP_40 + LD_LOEMP_HC + LD_LOEMP_45),1),0,1,MAX(LD_LOEMP_20 + LD_LOEMP_40 + LD_LOEMP_HC + LD_LOEMP_45)) )* 100,1)                                                                    
                        ELSE                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                            ROUND((NVL(MAX(LD_LOEMP_20 + LD_LOEMP_40 + LD_LOEMP_HC + LD_LOEMP_45),0) / DECODE(NVL(MAX(DS_LOEMP_20 + DS_LOEMP_40 + DS_LOEMP_HC + DS_LOEMP_45),1),0,1,MAX(DS_LOEMP_20 + DS_LOEMP_40 + DS_LOEMP_HC + DS_LOEMP_45)) )* 100,1)                                                                                                                                                                                                                                            
                    END MATCH_LDEMPTY_TTL                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
                    ## TOTAL , TEU 계산 로직 
                    , CASE WHEN NVL(MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45)+ MAX(LD_LOEMP_20) + MAX(LD_LOEMP_40) + MAX(LD_LOEMP_HC) + MAX(LD_LOEMP_45),0) >  NVL(MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45) + MAX(DS_LOEMP_20) + MAX(DS_LOEMP_40) + MAX(DS_LOEMP_HC) + MAX(DS_LOEMP_45),0)                                                                                                                                                                                    
                        THEN                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                            -    ROUND((NVL(MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45) + MAX(DS_LOEMP_20) + MAX(DS_LOEMP_40) + MAX(DS_LOEMP_HC) + MAX(DS_LOEMP_45),0) / DECODE(NVL(MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45)+ MAX(LD_LOEMP_20) + MAX(LD_LOEMP_40) + MAX(LD_LOEMP_HC) + MAX(LD_LOEMP_45),1),0,1,MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45) + MAX(LD_LOEMP_20) + MAX(LD_LOEMP_40) + MAX(LD_LOEMP_HC) + MAX(LD_LOEMP_45)) )* 100,1)                                      
                        ELSE                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                            ROUND((NVL(MAX(LD_LOFUL_20) + MAX(LD_LOFUL_40) + MAX(LD_LOFUL_HC) + MAX(LD_LOFUL_45)+ MAX(LD_LOEMP_20) + MAX(LD_LOEMP_40) + MAX(LD_LOEMP_HC) + MAX(LD_LOEMP_45),0) / DECODE(NVL(MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45) + MAX(DS_LOEMP_20) + MAX(DS_LOEMP_40) + MAX(DS_LOEMP_HC) + MAX(DS_LOEMP_45),1),0,1,MAX(INBOUND.DS_LOFUL_20) + MAX(INBOUND.DS_LOFUL_40) + MAX(INBOUND.DS_LOFUL_HC) + MAX(INBOUND.DS_LOFUL_45) + MAX(DS_LOEMP_20) + MAX(DS_LOEMP_40) + MAX(DS_LOEMP_HC) + MAX(DS_LOEMP_45)) )* 100,1)     
                    END MATCH_TOTAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
                    ,CASE WHEN NVL(MAX(OUTBOUND.LD_CNTR_TEU_LOFUL)+MAX(OUTBOUND.LD_CNTR_TEU_LOEMP),0) >  NVL(MAX(INBOUND.DS_CNTR_TEU_LOFUL)+MAX(INBOUND.DS_CNTR_TEU_LOEMP),0)                                                                                                                                                                                                                                                                                                                                                     
                        THEN                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                            -    ROUND((NVL(MAX(INBOUND.DS_CNTR_TEU_LOFUL)+MAX(INBOUND.DS_CNTR_TEU_LOEMP),0) / DECODE(NVL(MAX(OUTBOUND.LD_CNTR_TEU_LOFUL)+MAX(OUTBOUND.LD_CNTR_TEU_LOEMP),1),0,1,MAX(OUTBOUND.LD_CNTR_TEU_LOFUL)+MAX(OUTBOUND.LD_CNTR_TEU_LOEMP)) )* 100,1)                                                                                                                                                                                                                                                              
                        ELSE                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                            ROUND((NVL(MAX(OUTBOUND.LD_CNTR_TEU_LOFUL)+MAX(OUTBOUND.LD_CNTR_TEU_LOEMP),0) / DECODE(NVL(MAX(INBOUND.DS_CNTR_TEU_LOFUL)+MAX(INBOUND.DS_CNTR_TEU_LOEMP),1),0,1,MAX(INBOUND.DS_CNTR_TEU_LOFUL)+MAX(INBOUND.DS_CNTR_TEU_LOEMP)) ) * 100,1)                                                                                                                                                                                                                                                                               
                    END MATCH_TEU                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
                FROM                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
    		                     ## (1)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
    		         (                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
                        ## outbound fULL 물량 구하기 
    		            SELECT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
                          	PLN_YRWK                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
                         	,VSL_LANE_CD                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
                         	,LST_PORT                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
                         	,VVD                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
                         	,TRADE                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                         	,LD_DS                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                        	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D2', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                        	, 'R2', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                          	, 'O2', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                         
                                                       	    , 'F2', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                       	    , 'S2', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                        	, 'A2', CNTR_QTY_FULL , 0)) LD_LOFUL_20                                                                                                                                                                                                                                                                                                                                                                                                         
                         	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D4', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                         
                                                        	, 'O4', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                       	    , 'A4', CNTR_QTY_FULL                                                                                                                                                                                                                                                                                                                                                                                                                           
                                                       	    , 'S4', CNTR_QTY_FULL                                                                                                                                                 
                                                       	    , 'F5', CNTR_QTY_FULL                                                                                                                                                 
                                                        	, 'F4', CNTR_QTY_FULL , 0)) LD_LOFUL_40                                                                                                                               
                         	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D5', CNTR_QTY_FULL                                                                                                                                               
                                                      	    , 'R5', CNTR_QTY_FULL , 0)) LD_LOFUL_HC                                                                                                                                 
                        	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D7', CNTR_QTY_FULL , 0)) LD_LOFUL_45                                                                                                                               
                          	,SUM(0) LD_LOEMP_20                                                                                                                                                                                     
                          	,SUM(0) LD_LOEMP_40                                                                                                                                                                                     
                          	,SUM(0) LD_LOEMP_HC                                                                                                                                                                                     
                          	,SUM(0) LD_LOEMP_45                                                                                                                                                                                     
                          	,SUM(0) DS_LOFUL_20                                                                                                                                                                                     
                          	,SUM(0) DS_LOFUL_40                                                                                                                                                                                     
                          	,SUM(0) DS_LOFUL_HC                                                                                                                                                                                     
                          	,SUM(0) DS_LOFUL_45                                                                                                                                                                                     
                          	,SUM(0) DS_LOEMP_20                                                                                                                                                                                     
                          	,SUM(0) DS_LOEMP_40                                                                                                                                                                                     
                          	,SUM(0) DS_LOEMP_HC                                                                                                                                                                                     
                          	,SUM(0) DS_LOEMP_45                                                                                                                                                                                     
                         	,SUM(CNTR_QTY_TEU_LOFULL) LD_CNTR_TEU_LOFUL                                                                                                                                                             
                         	,SUM(0)                  LD_CNTR_TEU_LOEMP                                                                                                                                                              
                         	,SUM(0)                  DS_CNTR_TEU_LOFUL                                                                                                                                                              
                         	,SUM(0)                  DS_CNTR_TEU_LOEMP                                                                                                                                                              
                         	,SEQ                                                                                                                                                                                                    
    		                                                                                                                                                                                                                                   
    		            FROM 
    		                (                                                                                                                                                                                                      
	                         	SELECT /*+ FULL(ML) FULL(MO) */DISTINCT                                                                                                                                                                                         
    	                        	(
    	                        	    SELECT 
    	                        	        PLN_YR||PLN_WK 
    	                        	    FROM 
    	                        	        EQR_WK_PRD 
    	                        	    WHERE 
    	                        	        TO_CHAR(CM.LST_LODG_PORT_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
    	                        	) PLN_YRWK                                                                        
    	                      		,CM.TRD_CD              TRADE                                                                                                                                                                             
    	                      		,BV.SLAN_CD      VSL_LANE_CD                                                                                                                                                                              
    	                    		,BV.POD_CD ##, BV.VSL_POD_CD                                                                                                                                                                            
    	                    		,BV.VSL_CD||BV.SKD_VOY_NO||BV.SKD_DIR_CD  VVD                                                                                                                                                               
    	                    		,CM.LST_LODG_PORT_CD LST_PORT                                                                                                                                                                               
    	                    		,BC.CNTR_TPSZ_CD      CNTR_TPSZ_CD_FULL                                                                                                                                                                     
    	                    		,BC.CNTR_VOL_QTY    CNTR_QTY_FULL                                                                                                                                                                           
    	                    		,TGT_BASE.LD_DS                                                                                                                                                                                             
    	                    		,TGT_BASE.SEQ                                                                                                                                                                                               
    	                     		,BC.CNTR_NO ##    , BC.BKG_NO                                                                                                                                                                             
    	                   		    ,DECODE(BC.CNTR_TPSZ_CD , 'D2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                
            	                            				, 'R2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                            
            	                            				, 'O2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                            
            	                            				, 'F2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                            
            	                            				, 'A2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F2' AND TEU_CMPU_TP_CD='EB')                                                                       
            	                            				, 'S2', BC.CNTR_VOL_QTY *  (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O2' AND TEU_CMPU_TP_CD='EB')                                                                                                                                                      
            	                            				, 'D4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
            	                            				, 'O4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
            	                            				, 'F4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
            	                                       		, 'F5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB'))                                                           
            	                            				, 'A4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB'))                                                                     
            	                            				, 'S4', ( BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O4' AND TEU_CMPU_TP_CD='EB'))                                                                    
            	                            				, 'D5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
            	                            				, 'R5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
            	                            				, 'D7', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_LOFULL                             
    		                    FROM  
    		                        BKG_BOOKING BK
    		                        , BKG_VVD BV
    		                        , BKG_CONTAINER BC
    		                        , COA_MON_VVD CM 
    		                        , MDM_LOCATION ML
    		                        , MDM_LOCATION MO
    		                        ,(
    		                            SELECT 
    		                                DISTINCT SUBSTR(RLANE_CD,1,3) LANE
    		                                , VSL_SLAN_DIR_CD DIR_CD 
    		                                , FM_CONTI_CD FM_CONTI
    		                                , TO_CONTI_CD TO_CONTI
    		                                , TRD_CD                                                                                                                                                                   
    		                            FROM 
    		                                MDM_DTL_REV_LANE                                                                                                                                                                                 
                                        WHERE 	
                                            DELT_FLG='N'                                                                                                                                                                                
    		                        	    AND SUB_TRD_CD NOT IN ('IP')                                                                                                                                                                      
    		                   	    ) MD 
    		                   	    , VSK_VSL_PORT_SKD VP 
    		                   	    , TGT_OUTBOUND TGT_BASE                                                                                                                                                        
                                WHERE 	
                                    CM.DELT_FLG = 'N'                                                                                                                                                                                     
    		                    ##CSRNO : R200807047819로 의거 조건 추가 
    		                        #if(${locOrTrade} != '1')			
                            			#if(${trade} != '') 
                            				AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end                                                                                              
	                 				AND BK.BKG_NO = BV.BKG_NO                                                                                                                                                                                 
	                				AND BK.BKG_NO = BC.BKG_NO                                                                                                                                                                                   
	                 				##AND BK.BKG_NO_SPLIT = BV.BKG_NO_SPLIT                                                                                                                                                                     
	                 				##AND BK.BKG_NO_SPLIT = BC.BKG_NO_SPLIT                                                                                                                                                                     
	                 				AND BK.BKG_CGO_TP_CD IN ('F')                                                                                                                                                                             
	                      			AND CM.VSL_CD = BV.VSL_CD                                                                                                                                                                             
	                 				AND CM.SKD_VOY_NO = BV.SKD_VOY_NO                                                                                                                                                                         
	                 				AND CM.DIR_CD  = BV.SKD_DIR_CD                                                                                                                                                                            
	                 				AND CM.SLAN_CD = BV.SLAN_CD                                                                                                                                                                               
	                       			AND VP.VSL_CD  = TGT_BASE.VSL_CD                                                                                                                                                                    
	                 				AND VP.SKD_VOY_NO = TGT_BASE.SKD_VOY_NO                                                                                                                                                                   
	                 				AND VP.SKD_DIR_CD = TGT_BASE.SKD_DIR_CD                                                                                                                                                                   
	                				AND VP.SLAN_CD =  TGT_BASE.SLAN_CD                                                                                                                                                                          
	                				                                                                                                                                                                                 
	                 				AND BV.VSL_CD = CM.VSL_CD                                                                                                                                                                                 
	                 				AND BV.SKD_VOY_NO = CM.SKD_VOY_NO                                                                                                                                                                         
	                 				AND BV.SKD_DIR_CD = CM.DIR_CD                                                                                                                                                                             
	                 				AND BV.SLAN_CD  = CM.SLAN_CD                                                                                                                                                                              
	                 				AND BV.VSL_CD = VP.VSL_CD                                                                                                                                                                                 
	                 				AND BV.SKD_VOY_NO = VP.SKD_VOY_NO                                                                                                                                                                         
	                 				AND BV.SKD_DIR_CD = VP.SKD_DIR_CD                                                                                                                                                                         
	                 				AND BV.POL_CD = VP.VPS_PORT_CD                                                                                                                                                                        
	                 				AND BV.SLAN_CD    = VP.SLAN_CD                                                                                                                                                                            
	                                                                                                                                                                                                                                   
	                                ##AND VSL_PRE_PST_CD ='T'                                                                                                                                                            
	                 				AND BV.VSL_CD =TGT_BASE.VSL_CD                                                                                                                                                                            
	                 				AND BV.SKD_VOY_NO =TGT_BASE.SKD_VOY_NO                                                                                                                                                                    
	                 				AND BV.SKD_DIR_CD =TGT_BASE.SKD_DIR_CD                                                                                                                                                                    
	                 				AND BV.SLAN_CD    =TGT_BASE.SLAN_CD                                                                                                                                                                       
	                 				AND BV.POL_CD = ML.LOC_CD                                                                                                                                                                             
	                 				AND BV.POD_CD = MO.LOC_CD                                                                                                                                                                             
	                 				AND MD.TRD_CD = CM.TRD_CD                                                                                                                                                                                 
	                 				AND BV.SLAN_CD  = MD.LANE                                                                                                                                                                                 
	                 				AND BV.SLAN_CD  = CM.SLAN_CD                                                                                                                                                                              
	                 				AND BV.SKD_DIR_CD = MD.DIR_CD                                                                                                                                                                             
	                 				AND MD.FM_CONTI = ML.CONTI_CD                                                                                                                                                                             
	                 				AND MD.TO_CONTI = MO.CONTI_CD                                                                                                                                                                             
	                 				AND BK.BKG_STS_CD NOT IN 'X'                                                                                                                                                                              
	                   		)                                                                                                                                                                                                     
    		                                                                                                                                                                                                                                   
    		          	GROUP BY   
							PLN_YRWK 
							, TRADE
							, VSL_LANE_CD
							, VVD
							, LST_PORT   
							, LD_DS 
							, SEQ                                                                                                                                
					UNION ALL     ## OUTBOUND EMPTY 물량 구하기                                                                                                                                                                    
    		        	SELECT                                                                                                                                                                                                        
    		            	PLN_YRWK                                                                                                                                                                                            
    		              	, VSL_LANE_CD                                                                                                                                                                                         
    		              	,LST_PORT                                                                                                                                                                                             
                        	,VVD                                                                                                                                                                                                  
                        	,TRADE                                                                                                                                                                                                
                        	,LD_DS                                                                                                                                                                                                
                        	,SUM(0) LOFUL_20                                                                                                                                                                                      
                        	,SUM(0) LOFUL_40                                                                                                                                                                                      
                        	,SUM(0) LOFUL_HC                                                                                                                                                                                      
                        	,SUM(0) LOFUL_45                                                                                                                                                                                      
                        	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D2', CNTR_QTY_EMP                                                                                                                                                    
                                                       	    , 'R2', CNTR_QTY_EMP                                                                                                                                                  
                                                         	, 'O2', CNTR_QTY_EMP                                                                                                                                                
                                                      	    , 'F2', CNTR_QTY_EMP                                                                                                                                                    
                                                      	    , 'S2', CNTR_QTY_EMP                                                                                                                                                    
                                                       	    , 'A2', CNTR_QTY_EMP , 0)) LD_LOEMP_20                                                                                                                                
                         	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D4', CNTR_QTY_EMP                                                                                                                                                  
                                                       	    , 'O4', CNTR_QTY_EMP                                                                                                                                                  
                                                      	    , 'A4', CNTR_QTY_EMP                                                                                                                                                    
                                                      	    , 'S4', CNTR_QTY_EMP                                                                                                                                                    
                                                      	    , 'F5', CNTR_QTY_EMP                                                                                                                                                    
                                                       	    , 'F4', CNTR_QTY_EMP , 0)) LD_LOEMP_40                                                                                                                                
                         	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D5', CNTR_QTY_EMP                                                                                                                                                  
                                                      	    , 'R5', CNTR_QTY_EMP , 0)) LD_LOEMP_HC                                                                                                                                  
                        	,SUM(DECODE(CNTR_TPSZ_CD_EMP , 'D7', CNTR_QTY_EMP , 0)) LD_LOEMP_45                                                                                                                                   
                        	,SUM(0) DCFUL_20                                                                                                                                                                                      
                        	,SUM(0) DCFUL_40                                                                                                                                                                                      
                        	,SUM(0) DCFUL_HC                                                                                                                                                                                      
                        	,SUM(0) DCFUL_45                                                                                                                                                                                      
                        	,SUM(0) DCEMP_20                                                                                                                                                                                      
                        	,SUM(0) DCEMP_40                                                                                                                                                                                      
                        	,SUM(0) DCEMP_HC                                                                                                                                                                                      
                        	,SUM(0) DCEMP_45                                                                                                                                                                                      
                        	,SUM(0) LD_CNTR_TEU_LOFUL                                                                                                                                                                             
                        	,SUM(CNTR_QTY_TEU_DCEMP) LD_CNTR_TEU_LOEMP                                                                                                                                                            
                        	,SUM(0)                  DS_CNTR_TEU_LOFUL                                                                                                                                                            
                        	,SUM(0)                  DS_CNTR_TEU_LOEMP                                                                                                                                                            
                        	,SEQ                                                                                                                                                                                                  
                 	    FROM 
                 	        (                                                                                                                                                                                                      
                     	        SELECT                                                                                                                                                                                                  
                                    (
                                        SELECT 
                                            PLN_YR||PLN_WK 
                                        FROM 
                                            EQR_WK_PRD 
                                        WHERE 
                                            TO_CHAR(CM.LST_LODG_PORT_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
                                    ) PLN_YRWK                                                            
                                 	,PL.CO_CD            	CO_CD                                                                                                                                                                 
                                	,CM.TRD_CD              TRADE                                                                                                                                                                 
                                	,PL.VSL_LANE_CD      	VSL_LANE_CD                                                                                                                                                             
                                 	,(
                                 	    SELECT 
                                 	        ECC_CD 
                                 	    FROM 
                                 	        MDM_EQ_ORZ_CHT 
                                 	    WHERE 
                                 	        SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) AND DELT_FLG = 'N' 
                                 	) PORT                                                                                        
                              	    ,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  VVD                                                                                                                                                   
                             	    ,CM.LST_LODG_PORT_CD 	LST_PORT                                                                                                                                                                  
                                	,Q.CNTR_TPSZ_CD       	CNTR_TPSZ_CD_EMP                                                                                                                                                      
                                	,Q.CNTR_QTY          	CNTR_QTY_EMP                                                                                                                                                          
                                	,TGT_BASE.LD_DS                                                                                                                                                                               
                                	,TGT_BASE.SEQ                                                                                                                                                                                 
                           		    ,DECODE(Q.CNTR_TPSZ_CD 
                           		                , 'D2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                        
                                     			, 'R2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                    
                                     			, 'O2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                    
                                     			, 'F2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                    
                                     			, 'A2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F2' AND TEU_CMPU_TP_CD='EB')                                                               
                                     			, 'S2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O2' AND TEU_CMPU_TP_CD='EB')                                                               
                                     			, 'D4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'O4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'F5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB'))                                                             
                                     			, 'F4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'A4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB')                                                                                                                      
                                     			, 'S4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O4' AND TEU_CMPU_TP_CD='EB')                                                              
                                     			, 'D5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'R5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'D7', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_DCEMP                      
                    	        FROM  
                    	            EQR_VSL_LODG_DCHG_EXE_PLN PL
                    	            , EQR_VSL_EXE_PLN_QTY Q
                    	            , COA_MON_VVD CM 
                    	            , MDM_LOCATION ML 
                    	            , MDM_LOCATION MO
                    	            ,(
                    	                SELECT 
                    	                    DISTINCT SUBSTR(RLANE_CD,1,3) LANE
                    	                    , VSL_SLAN_DIR_CD DIR_CD 
                    	                    , FM_CONTI_CD FM_CONTI
                    	                    , TO_CONTI_CD TO_CONTI
                    	                    , TRD_CD                                                                                                                                     
                    				    FROM 
                    				        MDM_DTL_REV_LANE                                                                                                                                                                               
                    				    WHERE 
                    				        DELT_FLG='N'                                                                                                                                                                                  
                    				        AND SUB_TRD_CD NOT IN ('IP')                                                                                                                                                                        
               			            ) MD 
               			            , TGT_OUTBOUND TGT_BASE                                                                                                                                                                               
                 		        WHERE    	
                 		            PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	    AND PL.PLN_YRWK = Q.PLN_YRWK
				            	    AND PL.PLN_SEQ = Q.PLN_SEQ
				            	    AND PL.REF_ID = Q.REF_ID
									AND PL.VSL_CD =TGT_BASE.VSL_CD                                                                                                                                                                      
                			        AND PL.SKD_VOY_NO =TGT_BASE.SKD_VOY_NO                                                                                                                                                                
                			        AND PL.SKD_DIR_CD =TGT_BASE.SKD_DIR_CD                                                                                                                                                                
                                                                                                                                                                                                                               
                			        ##  AND pl.vsl_lane_cd = cm.slan_cd 
                			        ##  AND cm.trd_cd IN ('TPS')  
                			        ##  AND pl.co_cd = 'H'     
                			        ##  AND cm.trd_cd IN ('TPS')                                                                                       
                                    ##    		CSRNO : R200807047819로 의거 조건 추가 
                                    #if(${locOrTrade} != '1')			
                            			#if(${trade} != '') 
                            				AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end                                                                                                        
                                	AND	CM.VSL_CD = PL.VSL_CD                                                                                                                                                                       
                              		AND	CM.SKD_VOY_NO = PL.SKD_VOY_NO                                                                                                                                                               
                              		AND	CM.DIR_CD  = PL.SKD_DIR_CD                                                                                                                                                                  
                              		AND	CM.SLAN_CD = PL.VSL_LANE_CD                                                                                                                                                                 
                             		AND	CM.DELT_FLG = 'N'                                                                                                                                                                           
                              		AND	MD.TRD_CD = CM.TRD_CD                                                                                                                                                                       
                              		AND	PL.VSL_LANE_CD  = MD.LANE                                                                                                                                                                   
                              		AND	PL.SKD_DIR_CD = MD.DIR_CD                                                                                                                                                                   
                              		AND	SUBSTR(PL.FM_YD_CD,0,5) = ML.LOC_CD                                                                                                                                                         
                              		AND	(SELECT ECC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) AND DELT_FLG = 'N' ) = ML.LOC_CD                                                                                  
                              		AND	(SELECT ECC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) AND DELT_FLG = 'N' ) = MO.LOC_CD                                                                                  
                              		AND	MD.FM_CONTI = ML.CONTI_CD                                                                                                                                                                   
                              		AND	MD.TO_CONTI = MO.CONTI_CD                                                                                                                                                                     
                                                                                                                                                                                                                               
                            )                                                                                                                                                                                                       
                        GROUP BY    
                            PLN_YRWK 
                            , VSL_LANE_CD
                            , VVD
                            , TRADE    
                            , LST_PORT 
                            , LD_DS 
                            ,SEQ
                    )   OUTBOUND
                    ,                                                                                                                                                                                                              
                    ## INBOUND  FULL구하기                                                                                                                                                                                                                                
                    (                                                                                                                                                                                                                 
                        SELECT                                                                                                                                                                                                 
                          	DS_PLN_YRWK                                                                                                                                                                                             
                         	,DS_VSL_LANE_CD                                                                                                                                                                                         
                         	,DS_LST_PORT                                                                                                                                                                                            
                         	,DS_VVD                                                                                                                                                                                                 
                         	,DS_TRADE                                                                                                                                                                                               
                         	,DS_LD_DS                                                                                                                                                                                               
                         	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D2', CNTR_QTY_FULL                                                                                                                                                   
                                                           	, 'R2', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'O2', CNTR_QTY_FULL                                                                                                                                               
                                                           	, 'F2', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'S2', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'A2', CNTR_QTY_FULL , 0)) DS_LOFUL_20                                                                                                                               
                         	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D4', CNTR_QTY_FULL                                                                                                                                                   
                                                           	, 'O4', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'A4', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'S4', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'F5', CNTR_QTY_FULL                                                                                                                                                 
                                                           	, 'F4', CNTR_QTY_FULL , 0)) DS_LOFUL_40                                                                                                                               
                          	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D5', CNTR_QTY_FULL                                                                                                                                                   
                                                           	, 'R5', CNTR_QTY_FULL , 0)) DS_LOFUL_HC                                                                                                                               
                          	,SUM(DECODE(CNTR_TPSZ_CD_FULL 	, 'D7', CNTR_QTY_FULL , 0)) DS_LOFUL_45                                                                                                                                 
                          	,SUM(0) DCEMP_20                                                                                                                                                                                        
                          	,SUM(0) DCEMP_40                                                                                                                                                                                        
                          	,SUM(0) DCEMP_HC                                                                                                                                                                                        
                          	,SUM(0) DCEMP_45                                                                                                                                                                                        
                         	,SUM(0) LD_CNTR_TEU_LOFUL                                                                                                                                                                               
                         	,SUM(0)                  LD_CNTR_TEU_LOEMP                                                                                                                                                              
                         	,SUM(CNTR_QTY_TEU_LOFULL)   DS_CNTR_TEU_LOFUL                                                                                                                                                           
                         	,SUM(0)                  DS_CNTR_TEU_LOEMP                                                                                                                                                              
                         	,SEQ                                                                                                                                                                                                    
                        FROM 
                            (                                                                                                                                                                                                      
                     	        SELECT /*+ FULL(ML) FULL(MO) */
                     	            DISTINCT                                                                                                                                                                                         
                	                (
                	                    SELECT 
                	                        PLN_YR||PLN_WK 
                	                    FROM 
                	                        EQR_WK_PRD 
                	                    WHERE 
                	                        TO_CHAR(CM.LST_LODG_PORT_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
                	                ) DS_PLN_YRWK                                                                     
                              		,CM.TRD_CD              DS_TRADE                                                                                                                                                                          
                              		,BV.SLAN_CD      DS_VSL_LANE_CD                                                                                                                                                                           
                            		,BV.POL_CD      ##, BV.VSL_POD_CD                                                                                                                                                                            
                            		,BV.VSL_CD||BV.SKD_VOY_NO||BV.SKD_DIR_CD  DS_VVD                                                                                                                                                            
                            		,CM.LST_LODG_PORT_CD DS_LST_PORT                                                                                                                                                                            
                            		,BC.CNTR_TPSZ_CD     CNTR_TPSZ_CD_FULL                                                                                                                                                                      
                            		,BC.CNTR_VOL_QTY    CNTR_QTY_FULL                                                                                                                                                                           
                            		,TGT_BASE.LD_DS     DS_LD_DS                                                                                                                                                                                
                            		,TGT_BASE.SEQ                                                                                                                                                                                               
                             		,BC.CNTR_NO     ##    , BC.BKG_NO                                                                                                                                                                             
               		                ,DECODE(BC.CNTR_TPSZ_CD 
               		                    , 'D2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                
                        				, 'R2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                            
                        				, 'O2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                            
                        				, 'F2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                            
                        				, 'A2', BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F2' AND TEU_CMPU_TP_CD='EB')                                                                       
                        				, 'S2', BC.CNTR_VOL_QTY *  (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O2' AND TEU_CMPU_TP_CD='EB')                                                                                                                                                      
                        				, 'D4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
                        				, 'O4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
                        				, 'F4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
                                     	, 'F5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB'))                                                           
                        				, 'A4', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB'))                                                                     
                        				, 'S4', ( BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O4' AND TEU_CMPU_TP_CD='EB'))                                                                    
                        				, 'D5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
                        				, 'R5', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                          
                        				, 'D7', (BC.CNTR_VOL_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =BC.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_LOFULL                             
         		                FROM  
         		                    BKG_BOOKING BK
         		                    , BKG_VVD BV
         		                    , BKG_CONTAINER BC
         		                    , COA_MON_VVD CM 
         		                    , MDM_LOCATION ML
         		                    , MDM_LOCATION MO
         		                    ,(
         		                        SELECT 
         		                            DISTINCT SUBSTR(RLANE_CD,1,3) LANE
         		                            , VSL_SLAN_DIR_CD DIR_CD 
         		                            , FM_CONTI_CD FM_CONTI
         		                            , TO_CONTI_CD TO_CONTI
         		                            , TRD_CD                                                                                                                                                                  
                    		            FROM 
                    		                MDM_DTL_REV_LANE                                                                                                                                                                                   
                                		WHERE 
                                    		DELT_FLG='N'                                                                                                                                                                                      
                                    		AND SUB_TRD_CD NOT IN ('IP')                                                                                                                                                                            
               		                ) MD 
               		                , VSK_VSL_PORT_SKD VP 
               		                , TGT_INBOUND TGT_BASE                                                                                                                                                          
           			            WHERE 	
           			                CM.DELT_FLG = 'N'                                                                                                                                                                                     
          				        ##  AND cm.trd_cd IN ('TPS')                                                                                                                                                                                  
                                ##    		CSRNO : R200807047819로 의거 조건 추가 
                                    #if(${locOrTrade} != '1')			
                            			#if(${trade} != '') 
                            				AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end                                                                                                        
                         			AND BK.BKG_NO = BV.BKG_NO                                                                                                                                                                                   
                         			AND BK.BKG_NO = BC.BKG_NO                                                                                                                                                                                   
                         			##AND bk.bkg_no_split = bv.bkg_no_split                                                                                                                                                                       
                         			##AND bk.bkg_no_split = bc.bkg_no_split                                                                                                                                                                       
                         			AND BK.BKG_CGO_TP_CD IN ('F')                                                                                                                                                                               
                                                                                                                                                                                                                                           
                         			AND CM.VSL_CD = BV.VSL_CD                                                                                                                                                                                   
                         			AND CM.SKD_VOY_NO = BV.SKD_VOY_NO                                                                                                                                                                           
                         			AND CM.DIR_CD  = BV.SKD_DIR_CD                                                                                                                                                                              
                         			AND CM.SLAN_CD = BV.SLAN_CD                                                                                                                                                                                 
                                                                                                                                                                                                                                           
                         			AND VP.VSL_CD  = TGT_BASE.VSL_CD                                                                                                                                                                            
                         			AND VP.SKD_VOY_NO = TGT_BASE.SKD_VOY_NO                                                                                                                                                                     
                         			AND VP.SKD_DIR_CD = TGT_BASE.SKD_DIR_CD                                                                                                                                                                     
                         			AND VP.SLAN_CD =  TGT_BASE.SLAN_CD                                                                                                                                                                          
                                                                                                                                                                                                                                           
                         			AND BV.VSL_CD = CM.VSL_CD                                                                                                                                                                                   
                         			AND BV.SKD_VOY_NO = CM.SKD_VOY_NO                                                                                                                                                                           
                         			AND BV.SKD_DIR_CD = CM.DIR_CD                                                                                                                                                                               
                         			AND BV.SLAN_CD  = CM.SLAN_CD                                                                                                                                                                                
                         			AND BV.VSL_CD = VP.VSL_CD                                                                                                                                                                                   
                         			AND BV.SKD_VOY_NO = VP.SKD_VOY_NO                                                                                                                                                                           
                         			AND BV.SKD_DIR_CD = VP.SKD_DIR_CD                                                                                                                                                                           
                         			AND BV.POL_CD = VP.VPS_PORT_CD                                                                                                                                                                          
                         			AND BV.SLAN_CD    = VP.SLAN_CD                                                                                                                                                                              
                                                                                                                                                                                                                                           
                    			##      and VSL_PRE_PST_CD ='T'                                                                                                                                                                                   
                         			AND BV.VSL_CD =TGT_BASE.VSL_CD                                                                                                                                                                              
                         			AND BV.SKD_VOY_NO =TGT_BASE.SKD_VOY_NO                                                                                                                                                                      
                         			AND BV.SKD_DIR_CD =TGT_BASE.SKD_DIR_CD                                                                                                                                                                      
                         			AND BV.SLAN_CD    =TGT_BASE.SLAN_CD                                                                                                                                                                         
                         			AND BV.POL_CD = ML.LOC_CD                                                                                                                                                                               
                         			AND BV.POD_CD = MO.LOC_CD                                                                                                                                                                               
                         			AND MD.TRD_CD = CM.TRD_CD                                                                                                                                                                                   
                         			AND BV.SLAN_CD  = MD.LANE                                                                                                                                                                                   
                         			AND BV.SLAN_CD  = CM.SLAN_CD                                                                                                                                                                                
                         			AND BV.SKD_DIR_CD = MD.DIR_CD                                                                                                                                                                               
                         			AND MD.FM_CONTI = ML.CONTI_CD                                                                                                                                                                               
                         			AND MD.TO_CONTI = MO.CONTI_CD                                                                                                                                                                               
                         			AND BK.BKG_STS_CD NOT IN 'X'                                                                                                                                                                                
                            )                                                                                                                                                                                                    
                                                                                                                                                                                                                               
                        GROUP BY   
                            DS_PLN_YRWK 
                            , DS_TRADE
                            , DS_VSL_LANE_CD
                            , DS_VVD
                            , DS_LST_PORT   
                            , DS_LD_DS 
                            , SEQ                                                                                                                      
                	UNION ALL     ## (4)                                                                                                                                                                                          
                	    SELECT                                                                                                                                                                                                        
                            DS_PLN_YRWK                                                                                                                                                                                         
                        	,DS_VSL_LANE_CD                                                                                                                                                                                       
                        	,DS_LST_PORT                                                                                                                                                                                          
                        	,DS_VVD                                                                                                                                                                                               
                        	,DS_TRADE                                                                                                                                                                                             
                        	,DS_LD_DS                                                                                                                                                                                             
                        	,SUM(0) DS_LOFUL_20                                                                                                                                                                                   
                        	,SUM(0) DS_LOFUL_40                                                                                                                                                                                   
                        	,SUM(0) DS_LOFUL_HC                                                                                                                                                                                   
                        	,SUM(0) DS_LOFUL_45                                                                                                                                                                                   
                        	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D2', CNTR_QTY_EMP                                                                                                                                                    
                                                       	    , 'R2', CNTR_QTY_EMP                                                                                                                                                  
                                                         	, 'O2', CNTR_QTY_EMP                                                                                                                                                
                                                      	    , 'F2', CNTR_QTY_EMP                                                                                                                                                    
                                                      	    , 'S2', CNTR_QTY_EMP                                                                                                                                                    
                                                       	    , 'A2', CNTR_QTY_EMP , 0)) DS_LOEMP_20                                                                                                                                
                         	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D4', CNTR_QTY_EMP                                                                                                                                                  
                                                       	    , 'O4', CNTR_QTY_EMP                                                                                                                                                  
                                                      	    , 'A4', CNTR_QTY_EMP                                                                                                                                                    
                                                      	    , 'S4', CNTR_QTY_EMP                                                                                                                                                    
                                                      	    , 'F5', CNTR_QTY_EMP                                                                                                                                                    
                                                       	    , 'F4', CNTR_QTY_EMP , 0)) DS_LOEMP_40                                                                                                                                
                         	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D5', CNTR_QTY_EMP                                                                                                                                                  
                                                      	    , 'R5', CNTR_QTY_EMP , 0)) DS_LOEMP_HC                                                                                                                                  
                        	,SUM(DECODE(CNTR_TPSZ_CD_EMP 	, 'D7', CNTR_QTY_EMP , 0)) DS_LOEMP_45                                                                                                                                  
                        	,SUM(0) LD_CNTR_TEU_LOFUL                                                                                                                                                                             
                        	,SUM(0) LD_CNTR_TEU_LOEMP                                                                                                                                                                             
                        	,SUM(0) DS_CNTR_TEU_LOFUL                                                                                                                                                                             
                        	,SUM(CNTR_QTY_TEU_DCEMP)   DS_CNTR_TEU_LOEMP                                                                                                                                                          
                        	,SEQ                                                                                                                                                                                                  
                        FROM 
                            (                                                                                                                                                                                                        
                     	        SELECT                                                                                                                                                                                                  
                                	(
                                	    SELECT 
                                	        PLN_YR||PLN_WK 
                                	    FROM 
                                	        EQR_WK_PRD 
                                	    WHERE 
                                	        TO_CHAR(CM.LST_LODG_PORT_ETD_DT,'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
                                	) DS_PLN_YRWK                                                         
                                 	,PL.CO_CD            DS_CO_CD                                                                                                                                                               
                                	,CM.TRD_CD              DS_TRADE                                                                                                                                                              
                                	,PL.VSL_LANE_CD      DS_VSL_LANE_CD                                                                                                                                                           
                                 	,(
                                 	    SELECT 
                                 	        ECC_CD 
                                 	    FROM 
                                 	        MDM_EQ_ORZ_CHT 
                                 	    WHERE 
                                 	        SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) 
                                 	        AND DELT_FLG = 'N' 
                                 	) DS_PORT                                                                                     
                              	    ,PL.VSL_CD||PL.SKD_VOY_NO||PL.SKD_DIR_CD  DS_VVD                                                                                                                                                
                             	    ,CM.LST_LODG_PORT_CD DS_LST_PORT                                                                                                                                                                
                                	,Q.CNTR_TPSZ_CD       CNTR_TPSZ_CD_EMP                                                                                                                                                       
                                	,Q.CNTR_QTY          CNTR_QTY_EMP                                                                                                                                                            
                                	,TGT_BASE.LD_DS      DS_LD_DS                                                                                                                                                                 
                                	,TGT_BASE.SEQ                                                                                                                                                                                 
                           		    ,DECODE(Q.CNTR_TPSZ_CD 
                           		                , 'D2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                        
                                     			, 'R2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                    
                                     			, 'O2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                    
                                     			, 'F2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB')                                                    
                                     			, 'A2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F2' AND TEU_CMPU_TP_CD='EB')                                                               
                                     			, 'S2', Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O2' AND TEU_CMPU_TP_CD='EB')                                                               
                                     			, 'D4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'O4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'F5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB'))                                                             
                                     			, 'F4', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'A4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='F4' AND TEU_CMPU_TP_CD='EB')                                                                                                                      
                                     			, 'S4',  Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD ='O4' AND TEU_CMPU_TP_CD='EB')                                                              
                                     			, 'D5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'R5', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))                                                  
                                     			, 'D7', (Q.CNTR_QTY * (SELECT  TEU_FCTR_RT FROM EQR_ENG_INP_TEU_EQV WHERE CNTR_TPSZ_CD =Q.CNTR_TPSZ_CD AND TEU_CMPU_TP_CD='EB'))  ,    0) CNTR_QTY_TEU_DCEMP                      
                   			    FROM  
                   			        EQR_VSL_LODG_DCHG_EXE_PLN PL
                   			        , EQR_VSL_EXE_PLN_QTY Q
                   			        , COA_MON_VVD CM 
                   			        , MDM_LOCATION ML 
                   			        , MDM_LOCATION MO
                   			        ,(
                   			            SELECT 
                   			                DISTINCT SUBSTR(RLANE_CD,1,3) LANE
                   			                , VSL_SLAN_DIR_CD DIR_CD 
                   			                , FM_CONTI_CD FM_CONTI
                   			                , TO_CONTI_CD TO_CONTI
                   			                , TRD_CD                                                                                                                                   
                    				    FROM 
                    				        MDM_DTL_REV_LANE                                                                                                                                                                               
                    			        WHERE 
                    			            DELT_FLG='N'                                                                                                                                                                                    
                    				        AND SUB_TRD_CD NOT IN ('IP')                                                                                                                                                                        
               				        ) MD 
               				        , TGT_INBOUND TGT_BASE                                                                                                                                                                              
                			    WHERE    	
                			        PL.REPO_PLN_ID = Q.REPO_PLN_ID
				            	    AND PL.PLN_YRWK = Q.PLN_YRWK
				            	    AND PL.PLN_SEQ = Q.PLN_SEQ
				            	    AND PL.REF_ID = Q.REF_ID
									AND PL.VSL_CD =TGT_BASE.VSL_CD                                                                                                                                                                      
                				    AND PL.SKD_VOY_NO =TGT_BASE.SKD_VOY_NO                                                                                                                                                              
                				    AND PL.SKD_DIR_CD =TGT_BASE.SKD_DIR_CD                                                                                                                                                              
    			                ##  AND pl.vsl_lane_cd = cm.slan_cd ##AND cm.trd_cd IN ('TPS')  ##  AND pl.co_cd = 'H'     AND cm.trd_cd IN ('TPS')                                                                                                   
                                ##    		CSRNO : R200807047819로 의거 조건 추가 
                                    #if(${locOrTrade} != '1')			
                            			#if(${trade} != '') 
                            				AND CM.TRD_CD IN( ${arrTradeStr} )
                            			#end			
                            		#end                                                                                             
                          			AND CM.VSL_CD = PL.VSL_CD                                                                                                                                                                       
                          			AND CM.SKD_VOY_NO = PL.SKD_VOY_NO                                                                                                                                                               
                          			AND CM.DIR_CD  = PL.SKD_DIR_CD                                                                                                                                                                  
                          			AND CM.SLAN_CD = PL.VSL_LANE_CD                                                                                                                                                                 
                          			AND CM.DELT_FLG = 'N'                                                                                                                                                                      
                          			AND MD.TRD_CD = CM.TRD_CD                                                                                                                                                                       
                          			AND PL.VSL_LANE_CD  = MD.LANE                                                                                                                                                                   
                          			AND PL.SKD_DIR_CD = MD.DIR_CD                                                                                                                                                                   
                          			AND SUBSTR(PL.FM_YD_CD,0,5) = ML.LOC_CD                                                                                                                                                         
                          			AND (SELECT ECC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = SUBSTR(PL.FM_YD_CD,0,5) AND DELT_FLG = 'N' ) = ML.LOC_CD                                                                                  
                          			AND (SELECT ECC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = SUBSTR(PL.TO_YD_CD,0,5) AND DELT_FLG = 'N' ) = MO.LOC_CD                                                                                  
                          			AND MD.FM_CONTI = ML.CONTI_CD                                                                                                                                                                   
                          			AND MD.TO_CONTI = MO.CONTI_CD                                                                                                                                                                   
                            )                                                                                                                                                                                                      
                 		GROUP BY    
                 		    DS_PLN_YRWK 
                 		    , DS_VSL_LANE_CD
                 		    , DS_VVD, DS_TRADE    
                 		    , DS_LST_PORT 
                 		    , DS_LD_DS 
                 		    , SEQ                                                                                                               
                                                                                                                                                                                                                               
                    )  INBOUND                                                                                                                                                                                                     
                                                                                                                                                                                                                               
            	WHERE 	
					OUTBOUND.SEQ = INBOUND.SEQ(+)                                                                                                                                                                               
                 	AND OUTBOUND.TRADE = INBOUND.DS_TRADE(+)                                                                                                                                                                    
                 	AND OUTBOUND.VSL_LANE_CD = INBOUND.DS_VSL_LANE_CD(+)                                                                                                                                                        
				GROUP BY    
					OUTBOUND.TRADE                                                                                                                                                                                   
                    ,OUTBOUND.VSL_LANE_CD                                                                                                                                                                             
                   	,OUTBOUND.LST_PORT                                                                                                                                                                                 
                 	,OUTBOUND.VVD                                                                                                                                                                                      
                 	,OUTBOUND.PLN_YRWK                                                                                                                                                                                 
                  	,OUTBOUND.LD_DS                                                                                                                                                                                    
                  	,INBOUND.DS_TRADE                                                                                                                                                                                  
                  	,INBOUND.DS_VSL_LANE_CD                                                                                                                                                                            
                   	,INBOUND.DS_LST_PORT                                                                                                                                                                               
                   	,INBOUND.DS_VVD                                                                                                                                                                                    
                  	,INBOUND.DS_PLN_YRWK                                                                                                                                                                               
                   	,INBOUND.DS_LD_DS                                                                                                                                                                                  
                                                                                                                                                                                                                               
     		) MATCH_DATA   
			,(
					SELECT '1' NO FROM DUAL                                                                                                                                                                                
				UNION ALL                                                                                                                                                                                               
         			SELECT '2' NO FROM DUAL                                                                                                                                                                                 
              	UNION ALL                                                                                                                                                                                               
             		SELECT '3' NO FROM DUAL
			) X                                                                                                                                                                                                                                                                                                                                                                                                                                

	##  CSRNO : N200806030017 의거 추가  끝    

	#end ##			]]></sql>
			<params>
				<param name="fmPlnYrWk" type="12" value="" out="N"/>
				<param name="toPlnYrWk" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
