<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChargeCollectionReportDBDAOUnissuedInvoiceDetailByAgingVORSQL">
			<desc><![CDATA[해당기간에 발생한 Charge를 기준으로 하여 조회시점까지 관련 Charge Detail 정보를 조회한다]]></desc>
			<sql><![CDATA[
SELECT  C.SYS_AREA_GRP_ID                               AS SVR_ID
       ,C.DMDT_CHG_STS_CD
       ,C.OFC_CD
       ,C.DMDT_TRF_CD
       ,C.CNTR_NO
       ,B.CNTR_TPSZ_CD
       ,C.FM_MVMT_YD_CD
       ,C.TO_MVMT_YD_CD
       ,C.FM_MVMT_STS_CD
       ,C.TO_MVMT_STS_CD
       ,C.FT_DYS
       ,C.FX_FT_OVR_DYS
       ,TO_CHAR(C.FM_MVMT_DT, 'YYYYMMDD')              AS FM_MVMT_DT
       ,TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD')              AS TO_MVMT_DT
       ,TO_CHAR(C.FT_CMNC_DT, 'YYYYMMDD')              AS FT_CMNC_DT
       ,TO_CHAR(C.FT_END_DT , 'YYYYMMDD')              AS FT_END_DT
       ,C.BZC_TRF_CURR_CD
       ,C.ORG_CHG_AMT
       ,C.SC_RFA_EXPT_AMT                              AS EXPT_AMT
       ,C.AFT_EXPT_DC_AMT
       ,C.BIL_AMT
       ,B.BKG_NO
       ,B.BL_NO
       ,B.VSL_CD || B.SKD_VOY_NO || B.SKD_DIR_CD       AS VVD_CD
       ,(
			SELECT  V.VSL_SLAN_CD LANE
			  FROM  VSK_VSL_SKD V
			 WHERE  B.VSL_CD         = V.VSL_CD
			   AND  B.SKD_VOY_NO     = V.SKD_VOY_NO
			   AND  B.SKD_DIR_CD     = V.SKD_DIR_CD
        )                                                AS LANE
       ,B.POR_CD
       ,B.POL_CD
       ,B.POD_CD
       ,B.DEL_CD
       ,B.BKG_RCV_TERM_CD
       ,B.BKG_DE_TERM_CD
       ,B.SC_NO
       ,B.RFA_NO
       ,DECODE(C.CHG_SEQ, 1, 'G', 'B')                 AS CHG_TYPE
       ,C.CHG_SEQ
       ,NVL(B.SOC_FLG, 'N')                            AS SOC_FLG
       ,V.DMDT_AR_IF_CD
       ,V.INV_CURR_CD
       ,NVL(ID.CNTR_INV_AMT, 0)                        AS INV_CHG_AMT
       ,V.DMDT_INV_NO
       ,TO_CHAR(V.CRE_DT, 'YYYYMMDD')                  AS ISS_DT
       ,C.CNTR_CYC_NO
       ,C.DMDT_CHG_LOC_DIV_CD
       ,C.OFC_RHQ_CD
       ,B.DMDT_CNTR_TP_CD
       ,C.CMDT_EXPT_AMT
       ,CASE 
			WHEN V.BIL_AMT != 0 AND NVL(HRD.ATTR_CTNT1, 'N') != 'N' AND C.DMDT_CHG_STS_CD = 'I' THEN 
				NVL(ROUND(( SELECT SUM( AA.INV_PAY_AMT*ID.CNTR_INV_AMT/V.INV_AMT ) 
							FROM DMT_INV_OTS_PAY_RCV AA
							WHERE AA.DMDT_INV_NO = V.DMDT_INV_NO 
							  AND AA.DMDT_INV_PAY_TP_CD = 'M'), 2 ), 0)
		    WHEN NVL(V.DMDT_AR_IF_CD,'N') = 'Y' THEN 
				NVL(ID.CNTR_INV_AMT, 0)
			ELSE 
				0 
		END COLL_AMT
       ,CASE 
			WHEN V.BIL_AMT != 0 THEN 
				V.INV_CURR_CD
			WHEN NVL(HRD.ATTR_CTNT1, 'N') != 'N' AND C.DMDT_CHG_STS_CD = 'I' THEN 
				( SELECT MAX(INV_CURR_CD) FROM DMT_INV_OTS_PAY_RCV WHERE DMDT_INV_NO = V.DMDT_INV_NO AND DMDT_INV_PAY_TP_CD = 'M')
			WHEN NVL(V.DMDT_AR_IF_CD,'N') = 'Y' THEN 
				V.INV_CURR_CD
			ELSE 
				''
		END COLL_CURR_CD
       ,CASE 
			WHEN V.BIL_AMT != 0 AND NVL(HRD.ATTR_CTNT1,'N') != 'N' AND C.DMDT_CHG_STS_CD = 'I' THEN 
				 ROUND(
						NVL(ID.CNTR_INV_AMT, 0) - NVL(( SELECT SUM( AA.INV_PAY_AMT*ID.CNTR_INV_AMT/V.INV_AMT ) 
														FROM DMT_INV_OTS_PAY_RCV AA
														WHERE AA.DMDT_INV_NO = V.DMDT_INV_NO
														  AND AA.DMDT_INV_PAY_TP_CD = 'M' ), 0)
				, 2)
			WHEN NVL(V.DMDT_AR_IF_CD,'N') = 'N' AND C.DMDT_CHG_STS_CD = 'I' THEN 
				NVL(ID.CNTR_INV_AMT, 0)
		ELSE 
			0 
		END UNCOLL_AMT
       ,CASE 
			WHEN V.BIL_AMT != 0 THEN 
				V.INV_CURR_CD
			WHEN NVL(HRD.ATTR_CTNT1, 'N') != 'N' AND C.DMDT_CHG_STS_CD = 'I' THEN 
				NVL(( SELECT MAX(INV_CURR_CD) FROM DMT_INV_OTS_PAY_RCV WHERE DMDT_INV_NO = V.DMDT_INV_NO AND DMDT_INV_PAY_TP_CD = 'M' ),V.INV_CURR_CD)
			WHEN NVL(V.DMDT_AR_IF_CD,'N') = 'N' AND C.DMDT_CHG_STS_CD = 'I' THEN 
				V.INV_CURR_CD
		ELSE 
			'' 
		END UNCOLL_CURR_CD
       ,C.CORR_RMK
	   
  FROM  DMT_CHG_CALC        C
       ,DMT_CHG_BKG_CNTR    B
       ,DMT_INV_MN          V
       ,DMT_INV_DTL         ID
       ,DMT_HRD_CDG_CTNT    HRD
	   
 WHERE  1 = 1

AND (1=0
	          OR ( C.DMDT_CHG_STS_CD IN ( 'F',
	                  'C',
	                  'I' )
	              AND ( C.TO_MVMT_DT BETWEEN TO_DATE(@[start_dt], 'YYYYMMDD') AND TO_DATE(@[end_dt], 'YYYYMMDD') + 0.99999 ) )
	          OR ( C.DMDT_CHG_STS_CD IN ( 'L',
	                  'U' )
	              AND ( C.FM_MVMT_DT BETWEEN TO_DATE(@[start_dt], 'YYYYMMDD') AND TO_DATE(@[end_dt], 'YYYYMMDD') + 0.99999 ) ) )

-- 조건추가(S) 2013.10.23
#if(${uclm_flg} != 'ALL')          
AND    NVL(C.UCLM_FLG, 'N') =  @[uclm_flg]
#end
-- 조건추가(E)
#if(${sts_cd_list} != '')
AND		 C.DMDT_CHG_STS_CD IN (
               #foreach( $sts_cd in ${sts_cd_list} )
					#if($velocityCount < $sts_cd_list.size()) '$sts_cd', #else '$sts_cd' #end
               #end
			)
#else   
	#if (${dtl_flg} == 'B') 
AND     C.DMDT_CHG_STS_CD     IN     ( 'F' ,'C', 'I' )
	#elseif (${dtl_flg} == 'C') 
AND     C.DMDT_CHG_STS_CD = 'I'
	#else 
AND     C.DMDT_CHG_STS_CD     IN     ( 'F' ,'C', 'I', 'N')
	#end
#end

#if (${grp_flg} == 'R') 
AND     C.OFC_RHQ_CD = @[ofc_cd]
#else
AND     C.OFC_CD = @[ofc_cd]
#end
#if (${trf_cd_list} != '')
AND     C.DMDT_TRF_CD IN (
#foreach( $trf_cd in ${trf_cd_list} )
     #if($velocityCount < $trf_cd_list.size()) '$trf_cd', #else '$trf_cd' #end
#end
)
#end
AND      B.SYS_AREA_GRP_ID   = C.SYS_AREA_GRP_ID
AND      B.CNTR_NO           = C.CNTR_NO
AND      B.CNTR_CYC_NO       = C.CNTR_CYC_NO
AND      C.DMDT_INV_NO       = V.DMDT_INV_NO(+)
AND      V.DMDT_INV_NO       = ID.DMDT_INV_NO(+)          -- 20091222 수정
AND      C.DMDT_CHG_LOC_DIV_CD <> 'SZP'               -- 2010/03/18 추가

-- CUR.TTL Detail 조회를 위해 추가 (2016.08.10)
#if (${bzc_trf_curr_cd} != '')
AND 	 C.BZC_TRF_CURR_CD = @[bzc_trf_curr_cd]
#end

AND
(
    (C.DUL_TP_EXPT_FLG = 'Y' AND SUBSTR(C.DMDT_TRF_CD, 1, 1) = 'C')
    OR        
    (C.DUL_TP_EXPT_FLG = 'N')
)   
AND (
         (C.DMDT_CHG_STS_CD <> 'I')
         OR
        (
                        C.DMDT_CHG_STS_CD   =     'I'
                AND     V.DMDT_INV_STS_CD     = 'I'
                AND     V.DMDT_AR_IF_CD       <> 'H'
                AND     C.SYS_AREA_GRP_ID     = ID.SYS_AREA_GRP_ID
                AND     C.CNTR_NO             = ID.CNTR_NO
                AND     C.CNTR_CYC_NO         = ID.CNTR_CYC_NO
                AND     C.DMDT_TRF_CD         = ID.DMDT_TRF_CD
                AND     C.DMDT_CHG_LOC_DIV_CD = ID.DMDT_CHG_LOC_DIV_CD
                AND     C.CHG_SEQ             = ID.CHG_SEQ
        )
    )
#if (${dmdt_cntr_tp_cd} != 'A')
AND    B.DMDT_CNTR_TP_CD     IN (
               #foreach( $cntr_tp in ${cntr_tp_list} )
                    #if ($cntr_tp == 'S')
                          'F', 'O', 'T', 'P', 'S', 'A'
                    #elseif ($cntr_tp == 'D' || $cntr_tp == 'R') 
                         '$cntr_tp'
                    #end

                    #if($velocityCount < $cntr_tp_list.size()) , #end
               #end
               )
#end

AND     ( NVL(C.ORG_CHG_AMT, 0) > 0 OR NVL(C.BIL_AMT, 0) > 0 )

#if (${dtl_flg} != '')
     #if (${dtl_flg} != 'A')     
AND     C.BIL_AMT > 0
     #end
AND     V.DMDT_AR_IF_CD(+) = 'N'
#end

   AND  HRD.HRD_CDG_ID(+) = 'AUTO_AR_IF_OFC'
   AND  HRD.ATTR_CTNT1(+) = V.CRE_OFC_CD


ORDER BY C.OFC_CD
        ,C.DMDT_TRF_CD
        ,C.DMDT_CHG_STS_CD
        ,V.DMDT_AR_IF_CD
        ,C.CNTR_NO			]]></sql>
			<params>
				<param name="start_dt" type="12" value="" out="N"/>
				<param name="end_dt" type="12" value="" out="N"/>
				<param name="uclm_flg" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="bzc_trf_curr_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
