<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralCodeCheckMgtDBDAOcalculateEstimateMaterialCostDataUSQL">
			<desc><![CDATA[Incident Ticket : ICM-201200829 
Ticket ID: CHM-201221355
Developer: 조경완
Title : [MNR] Estimate Creation - Calculation시 Timeout Error 발생 문제 해결을 위한 변경 관리
Description: Calculation시 SQL 수행속도 저하로 인한 Timeout Error 발생 문제 해결(SQL 튜닝)

2012.11.23 조경완 [CHM-201220893-01] Estimate Group Auditing 모듈에서 Repair code 및 division code 수정 기능 추가
- verifying 기능 개선을 위한 SQL 튜닝]]></desc>
			<sql><![CDATA[
UPDATE   MNR_DAT_VRFY A
SET      ( A.INP_MSG17, A.INP_MSG37 ) =
         (
           SELECT   DECODE(VOL_TP_CD, 'Q', DECODE(RANGE_TYPE, 'F', F_MATERIAL, 'A', DECODE(DFLT_RANGE, 'F', ROUND((RPR_QTY/F_SIZE) + 0.49)*F_MATERIAL, F_MATERIAL + ((RPR_QTY - F_SIZE)*(A_MATERIAL/F_SIZE)))), 
                                           DECODE(RANGE_TYPE, 'F', F_MATERIAL, 'A', DECODE(DFLT_RANGE, 'F', ROUND((RPR_SIZE/F_SIZE) + 0.49)*F_MATERIAL, F_MATERIAL + ROUND((RPR_SIZE - F_SIZE)/A_SIZE + 0.49)*A_MATERIAL))
                    ) AS RPR_MTRL
                  , SUBSTR(A.INP_MSG37, 1, 2)||'Y'
           FROM     (
                      SELECT   /*+ INDEX(MRTD XPKMNR_RPR_TRF_DTL) */
                               MRTD.COST_GRP_CD
                             , A.INP_MSG1 LOC_CD
                             , MRTD.VOL_TP_CD
                             , NVL(A.INP_MSG9, A.INP_MSG10) AS RPR_QTY
                             , A.INP_MSG10 AS RPR_SIZE
                             , MRTD.EQ_CMPO_CD
                             , MRTD.EQ_RPR_CD
                             , MRTD.TRF_DIV_CD
                             , MAX(DECODE(
                                   DECODE(MRTD.MNR_RNG_TP_CD, 'F', DECODE(MRTD.VOL_TP_CD, 'Q', SIGN(MRTD.RPR_QTY - A.INP_MSG9), SIGN(MRTD.RPR_SZ_NO - A.INP_MSG10)), -1),
                                   -1, 'A', 'F'      
                               )) RANGE_TYPE
                             , MIN(MRTD.MNR_RNG_TP_CD) DFLT_RANGE
                             , MAX(DECODE(MRTD.MNR_RNG_TP_CD, 'F', MRTD.RPR_LBR_HRS,0)) F_LABOR
                             , MAX(DECODE(MRTD.MNR_RNG_TP_CD, 'F', MRTD.MTRL_COST_AMT,0)) F_MATERIAL
                             , MAX(DECODE(MRTD.MNR_RNG_TP_CD, 'F', DECODE(MRTD.VOL_TP_CD, 'Q', MRTD.RPR_QTY, MRTD.RPR_SZ_NO),0)) AS F_SIZE
                             , TO_NUMBER(SUBSTR(MIN(MRTD.MNR_RNG_TP_CD||MRTD.RPR_LBR_HRS), 2)) AS A_LABOR
                             , TO_NUMBER(SUBSTR(MIN(MRTD.MNR_RNG_TP_CD||MRTD.MTRL_COST_AMT), 2)) AS A_MATERIAL
                             , TO_NUMBER(SUBSTR(MIN(MRTD.MNR_RNG_TP_CD||DECODE(MRTD.VOL_TP_CD, 'Q', MRTD.RPR_QTY, MRTD.RPR_SZ_NO)), 2)) AS A_SIZE
                      FROM     MNR_DAT_VRFY A
                             , MNR_AGMT_HDR MAH
                             , MNR_RPR_TRF_DTL MRTD
                      WHERE    1 = 1
                      AND      A.INP_MSG35              = MAH.AGMT_OFC_CTY_CD
                      AND      A.INP_MSG36              = MAH.AGMT_SEQ
                      AND      MAH.AGMT_LST_VER_FLG     = 'Y'
                      AND      MAH.TRF_NO               = MRTD.TRF_NO
                      AND      SUBSTRB(A.INP_MSG19,1,3) = SUBSTR(MRTD.COST_GRP_CD, 1, 3)         
                      AND      A.INP_MSG2               = MRTD.EQ_CMPO_CD
                      AND      A.INP_MSG5               = MRTD.EQ_RPR_CD
                      AND      NVL(RTRIM(A.INP_MSG7), 'XXXX')  = NVL(RTRIM(MRTD.TRF_DIV_CD), 'XXXX')
                      AND      A.INP_MSG8               = MRTD.VOL_TP_CD
                      AND      TO_NUMBER(DECODE(A.INP_MSG8, 'Q', A.INP_MSG9, A.INP_MSG10))         BETWEEN TO_NUMBER(MRTD.FM_RNG_SZ_NO) AND TO_NUMBER(DECODE(MRTD.TO_RNG_SZ_NO, 0, 9999999999, MRTD.TO_RNG_SZ_NO))  
                      AND      A.TMP_SEQ = @[tmp_seq]
                      AND      A.INP_MSG4 = 'SS'
                      GROUP BY MRTD.COST_GRP_CD, A.INP_MSG1, MRTD.VOL_TP_CD, NVL(A.INP_MSG9, A.INP_MSG10), A.INP_MSG10, MRTD.EQ_CMPO_CD, MRTD.EQ_RPR_CD, MRTD.TRF_DIV_CD
                    )
           WHERE    SUBSTRB(A.INP_MSG19,1,3) = SUBSTR(COST_GRP_CD, 1, 3)
           AND      A.INP_MSG1               = LOC_CD
           AND      A.INP_MSG2               = EQ_CMPO_CD
           AND      A.INP_MSG5               = EQ_RPR_CD
           AND      NVL(RTRIM(A.INP_MSG7), 'XXXX')  = NVL(RTRIM(TRF_DIV_CD), 'XXXX')
           AND      A.INP_MSG8               = VOL_TP_CD
		   AND      NVL(A.INP_MSG9, A.INP_MSG10)  = RPR_QTY
           AND      ROWNUM = 1
         )     
WHERE    1 = 1
AND      A.TMP_SEQ = @[tmp_seq]
AND      A.INP_MSG4 = 'SS'
AND      EXISTS
         (
      	   SELECT   'X'
      	   FROM     (
                      SELECT   /*+ INDEX(MRTD XPKMNR_RPR_TRF_DTL) */
                               MRTD.COST_GRP_CD
                             , A.INP_MSG1 AS LOC_CD
                             , MRTD.VOL_TP_CD
                             , NVL(A.INP_MSG9, A.INP_MSG10) AS RPR_QTY
                             , A.INP_MSG10 AS RPR_SIZE
                             , MRTD.EQ_CMPO_CD
                             , MRTD.EQ_RPR_CD
                             , MRTD.TRF_DIV_CD
                             , MAX(DECODE(
                                   DECODE(MRTD.MNR_RNG_TP_CD, 'F', DECODE(MRTD.VOL_TP_CD, 'Q', SIGN(MRTD.RPR_QTY - A.INP_MSG9), SIGN(MRTD.RPR_SZ_NO - A.INP_MSG10)), -1),
                                   -1, 'A', 'F'      
                               )) RANGE_TYPE
                             , MAX(DECODE(MRTD.MNR_RNG_TP_CD, 'F', MRTD.RPR_LBR_HRS,0)) AS F_LABOR
                             , MAX(DECODE(MRTD.MNR_RNG_TP_CD, 'F', MRTD.MTRL_COST_AMT,0)) AS F_MATERIAL
                             , MAX(DECODE(MRTD.MNR_RNG_TP_CD, 'F', DECODE(MRTD.VOL_TP_CD, 'Q', MRTD.RPR_QTY, MRTD.RPR_SZ_NO),0)) AS F_SIZE
                             , TO_NUMBER(SUBSTR(MIN(MRTD.MNR_RNG_TP_CD||MRTD.RPR_LBR_HRS), 2)) AS A_LABOR
                             , TO_NUMBER(SUBSTR(MIN(MRTD.MNR_RNG_TP_CD||MRTD.MTRL_COST_AMT), 2)) AS A_MATERIAL
                             , TO_NUMBER(SUBSTR(MIN(MRTD.MNR_RNG_TP_CD||DECODE(MRTD.VOL_TP_CD, 'Q', MRTD.RPR_QTY, MRTD.RPR_SZ_NO)), 2)) AS A_SIZE
                      FROM     MNR_DAT_VRFY A
                             , MNR_AGMT_HDR MAH
                             , MNR_RPR_TRF_DTL MRTD
                      WHERE    1 = 1
                      AND      A.INP_MSG35              = MAH.AGMT_OFC_CTY_CD
                      AND      A.INP_MSG36              = MAH.AGMT_SEQ
                      AND      MAH.AGMT_LST_VER_FLG     = 'Y'
                      AND      MAH.TRF_NO               = MRTD.TRF_NO
                      AND      SUBSTRB(A.INP_MSG19,1,3) = SUBSTR(MRTD.COST_GRP_CD, 1, 3)        
                      AND      A.INP_MSG2               = MRTD.EQ_CMPO_CD
                      AND      A.INP_MSG5               = MRTD.EQ_RPR_CD
                      AND      NVL(RTRIM(A.INP_MSG7), 'XXXX')  = NVL(RTRIM(MRTD.TRF_DIV_CD), 'XXXX')
                      AND      A.INP_MSG8               = MRTD.VOL_TP_CD
                      AND      TO_NUMBER(DECODE(A.INP_MSG8, 'Q', A.INP_MSG9, A.INP_MSG10))          BETWEEN TO_NUMBER(MRTD.FM_RNG_SZ_NO) AND TO_NUMBER(DECODE(MRTD.TO_RNG_SZ_NO, 0, 9999999999, MRTD.TO_RNG_SZ_NO))  
                      AND      A.TMP_SEQ = @[tmp_seq]
                      AND      A.INP_MSG4 = 'SS'
                      GROUP BY MRTD.COST_GRP_CD
                             , A.INP_MSG1
                             , MRTD.VOL_TP_CD
                             , NVL(A.INP_MSG9, A.INP_MSG10)
                             , A.INP_MSG10
                             , MRTD.EQ_CMPO_CD
                             , MRTD.EQ_RPR_CD
                             , MRTD.TRF_DIV_CD
                    )
      	   WHERE   SUBSTRB(A.INP_MSG19,1,3) = SUBSTR(COST_GRP_CD, 1, 3)
           AND     A.INP_MSG1               = LOC_CD        
           AND     A.INP_MSG2               = EQ_CMPO_CD
           AND     A.INP_MSG5               = EQ_RPR_CD
           AND     NVL(RTRIM(A.INP_MSG7), 'XXXX')  = NVL(RTRIM(TRF_DIV_CD), 'XXXX')
           AND     A.INP_MSG8               = VOL_TP_CD
           AND     NVL(A.INP_MSG9, A.INP_MSG10)  = RPR_QTY
           AND     ROWNUM = 1
         )			]]></sql>
			<params>
				<param name="tmp_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
