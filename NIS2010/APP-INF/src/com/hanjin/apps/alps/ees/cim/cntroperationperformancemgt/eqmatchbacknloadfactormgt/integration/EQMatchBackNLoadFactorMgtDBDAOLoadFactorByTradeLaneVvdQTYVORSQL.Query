<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EQMatchBackNLoadFactorMgtDBDAOLoadFactorByTradeLaneVvdQTYVORSQL">
			<desc><![CDATA[2011.11.08 신자영 [CHM-201114141-01] [CIM] L/F by trade & M/B by vessel 기능에 EM1 & EM2 Lane 추가
2012.01.12 신자영 [CHM-201215617-01] [CIM] LOAD-FACTOR / M/B by Vessel 기능 수정
2012.08.02 신자영 [CHM-201219416-01] ALPS / LF 기능 로직 수정
2012.08.20 신자영 [CHM-201219767-01] [CIM] Match-Back by Vessel BKG CNTR QTY 반올림해 정수로 산출 기능 보완]]></desc>
			<sql><![CDATA[
SELECT
			/*+
			ORDERED USE_NL ( RD BV SL SD BK BC )
			INDEX( BV XAK2BKG_VVD )
			INDEX( BC XAK3BKG_CONTAINER )
			INDEX( BK XPKBKG_BOOKING )
			INDEX( SL XPKVSK_VSL_PORT_SKD )
			INDEX( SD XPKVSK_VSL_PORT_SKD )
			*/
		   
			RD.R_DATASOURCE dataSource,				
			round(RD.R_FULL20QTY,0)	full20Qty ,	
			round(RD.R_FULL40QTY,0)	full40Qty,	
			round(RD.R_FULLHCQTY,0)	fullHcQty,	
			round(RD.R_FULL45QTY,0)	full45Qty,	
			round(RD.R_MTY20QTY,0)	mty20Qty,	
			round(RD.R_MTY40QTY,0)	mty40Qty,	
			round(RD.R_MTYHCQTY,0)	mtyHcQty,	
			round(RD.R_MTY45QTY,0)	mty45Qty,	
			NVL(RD.R_WEIGHTTTL,0)	weightTotal,	
			-------------------------------        
			
			'BKG' 																			                dataSource_b,																									
--			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '2', BC.CNTR_TPSZ_CD))) full20Qty_b	,		
--			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '4', BC.CNTR_TPSZ_CD))) full40Qty_b	,		
--			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '5', BC.CNTR_TPSZ_CD))) + COUNT(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '9', BC.CNTR_TPSZ_CD)))fullHcQty_b	,		
--			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '7', BC.CNTR_TPSZ_CD))) full45Qty_b	,	
			round(NVL(SUM(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '2', BC.CNTR_VOL_QTY))),0),0) full20Qty_b ,
			round(NVL(SUM(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '4', BC.CNTR_VOL_QTY))),0),0) full40Qty_b ,
			round(NVL(SUM(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '5', BC.CNTR_VOL_QTY))),0),0) + round(NVL(SUM(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '9', BC.CNTR_VOL_QTY))),0),0) fullHcQty_b ,
			round(NVL(SUM(DECODE(BK.BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '7', BC.CNTR_VOL_QTY))),0),0) full45Qty_b ,

			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '2', BC.CNTR_TPSZ_CD))) mty20Qty_b	,		
			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '4', BC.CNTR_TPSZ_CD))) mty40Qty_b	,		
			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '5', BC.CNTR_TPSZ_CD))) + COUNT(DECODE(BK.BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '9', BC.CNTR_TPSZ_CD))) mtyHcQty_b	,		
			COUNT(DECODE(BK.BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(BC.CNTR_TPSZ_CD,2,1), '7', BC.CNTR_TPSZ_CD))) mty45Qty_b	,		
			COUNT(DECODE(BC.AWK_CGO_FLG, 'Y', BC.CNTR_NO)) 												    deadSlot		

	FROM
			(
				SELECT	/*+ ORDERED USE_NL(H M) */
						SUBSTR(@[vvd],1,4)																	R_VSL		,
						SUBSTR(@[vvd],5,4)																	R_VOY		,
						SUBSTR(@[vvd],9,1)																	R_DIR		,
						'RDR'																					R_DATASOURCE,	
						--  DECODE(CNTR_SIZE,'2','20','3','2H','4','40','H','4H','L','45') CNTR_SIZE, SUM(M.QTY) QTY,  WGT

						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'F', DECODE( M.CNTR_SIZE, '2', M.QTY, 0  ), 0 )),0)) R_FULL20QTY	,	
						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'F', DECODE( M.CNTR_SIZE, '4', M.QTY, 0  ), 0 )),0)) R_FULL40QTY	,	
						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'F', DECODE( M.CNTR_SIZE, 'H', M.QTY, 0  ), 0 )),0)) R_FULLHCQTY	,	
						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'F', DECODE( M.CNTR_SIZE, 'L', M.QTY, 0  ), 0 )),0)) R_FULL45QTY	,	

						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'E', DECODE( M.CNTR_SIZE, '2', M.QTY, 0  ), 0 )),0)) R_MTY20QTY	,
						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'E', DECODE( M.CNTR_SIZE, '4', M.QTY, 0  ), 0 )),0)) R_MTY40QTY	,	
						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'E', DECODE( M.CNTR_SIZE, 'H', M.QTY, 0  ), 0 )),0)) R_MTYHCQTY	,	
						MAX(NVL(SUM( DECODE(  M.CNTR_TYPE, 'E', DECODE( M.CNTR_SIZE, 'L', M.QTY, 0  ), 0 )),0)) R_MTY45QTY	,

						MAX(NVL(SUM( DECODE( M.CNTR_SIZE, '2', M.WEIGHT, 0  ) ),0)) +
						MAX(NVL(SUM( DECODE( M.CNTR_SIZE, '4', M.WEIGHT, 0  ) ),0)) +
						MAX(NVL(SUM( DECODE( M.CNTR_SIZE, 'H', M.WEIGHT, 0  ) ),0)) +
						MAX(NVL(SUM( DECODE( M.CNTR_SIZE, 'L', M.WEIGHT, 0  ) ),0))								R_WEIGHTTTL

				FROM	RDR_HEADER		H,
						RDR_SUMMARY		M
				WHERE	H.VSL_CD 	= SUBSTR(@[vvd],1,4) 
				AND		H.VOY_NO 	= SUBSTR(@[vvd],5,4) 
				AND		H.DIR_CD 	= SUBSTR(@[vvd],9,1) 
				AND     H.REGION    = @[fromregion]       /* from_region */ 
--				AND		H.PORT_CD	= 'SGSIN'   /* 삭제 */ 
				AND		H.VSL_CD	= M.VSL_CD
				AND		H.VOY_NO	= M.VOY_NO
				AND		H.DIR_CD	= M.DIR_CD
				AND		H.REGION	= M.REGION
				AND		M.OPR_CD	= @[company]
				GROUP BY 1
			)					RD,
			BKG_VVD		        BV,
			VSK_VSL_PORT_SKD	SL,
			VSK_VSL_PORT_SKD	SD,
			BKG_BOOKING			BK,
			BKG_CONTAINER		BC
	WHERE  	RD.R_VSL			=	BV.VSL_CD
	AND		RD.R_VOY			=	BV.SKD_VOY_NO
	AND		RD.R_DIR			=	BV.SKD_DIR_CD
	AND    	BK.BKG_NO			=	BV.BKG_NO
	AND		BK.BKG_NO			=	BC.BKG_NO
	AND    	SL.VSL_CD 			=	BV.VSL_CD
	AND    	SL.SKD_VOY_NO		=	BV.SKD_VOY_NO
	AND    	SL.SKD_DIR_CD		=	BV.SKD_DIR_CD
	AND    	SL.VPS_PORT_CD		=	BV.POL_CD
	AND    	SL.CLPT_SEQ			<= @[callSeq]
	AND 	SL.CLPT_IND_SEQ 	= NVL(BV.POL_CLPT_IND_SEQ,1)
	AND 	NVL(SL.VPS_PORT_CD,   ' ') NOT IN ('PAPAC', 'EGSUZ')   --추가
	AND 	NVL(SL.TURN_PORT_IND_CD, ' ') NOT IN ('D', 'F', 'V')   --추가
	AND 	NVL(SL.SKD_CNG_STS_CD, ' ') <> 'S'                    --추가
	AND    	SD.VSL_CD			=	BV.VSL_CD
	AND    	SD.SKD_VOY_NO		=	BV.SKD_VOY_NO
	AND    	SD.SKD_DIR_CD		=	BV.SKD_DIR_CD
	AND    	SD.VPS_PORT_CD		=	DECODE(BV.POD_CD, 'XXXXX', BV.POL_CD, BV.POD_CD)
	AND    	SD.CLPT_SEQ			>	DECODE(BV.POD_CD, 'XXXXX', SD.CLPT_SEQ-1, @[callSeq])
	AND     SD.CLPT_IND_SEQ 	= NVL(BV.POD_CLPT_IND_SEQ,1)
	AND 	NVL(SD.VPS_PORT_CD,   ' ') NOT IN ('PAPAC', 'EGSUZ')   --추가
	AND 	NVL(SD.SKD_CNG_STS_CD, ' ') <> 'S'                    --추가
--	AND 	NVL(BK.BKG_STS_CD, ' ')  NOT IN ('X', 'S')
	AND 	NVL(BK.BKG_STS_CD, ' ')  = 'F'
	GROUP BY
			RD.R_DATASOURCE ,				
			round(RD.R_FULL20QTY,0)	,	
			round(RD.R_FULL40QTY,0)	,	
			round(RD.R_FULLHCQTY,0)	,	
			round(RD.R_FULL45QTY,0)	,	
			round(RD.R_MTY20QTY,0)	,	
			round(RD.R_MTY40QTY,0)	,	
			round(RD.R_MTYHCQTY,0)	,	
			round(RD.R_MTY45QTY,0)	,	
			RD.R_WEIGHTTTL			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="fromregion" type="12" value="" out="N"/>
				<param name="company" type="12" value="" out="N"/>
				<param name="callSeq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
