/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : MTYEquipmentForecastDBDAOsearchMtyBalanceListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.20
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.20 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.mtyequipmentforecast.mtyequipmentforecast.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MTYEquipmentForecastDBDAOsearchMtyBalanceListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 지점별로 향후 2~4 weeks의 예상 MTY 장비 Supply & Demand를 항목별로 입력/수정/ 조회하며, MTY Balance를 예상하는 화면
	  * 
	  * 2011.06.13 나상보 [CHM-201111555-01] [EQR] R9 코드 생성에 따른 EQR 모듈 보완 작업 요청
	  * 2012.05.23 신용찬 [CHM-201217713] Balance Report 기능 Logic 수정 
	  * </pre>
	  */
	public MTYEquipmentForecastDBDAOsearchMtyBalanceListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("loc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("loc_grp_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fcast_yrwk",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.mtyequipmentforecast.mtyequipmentforecast.integration").append("\n"); 
		query.append("FileName : MTYEquipmentForecastDBDAOsearchMtyBalanceListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH LV_DUMMY_ITEM AS" ).append("\n"); 
		query.append("( " ).append("\n"); 
		query.append("    SELECT LEVEL TP_CD, @[fcast_yrwk] FCAST_YRWK0, @[loc_cd] LOC_CD, " ).append("\n"); 
		query.append("           (SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ PLN_YR||PLN_WK" ).append("\n"); 
		query.append("            FROM EQR_WK_PRD A" ).append("\n"); 
		query.append("            WHERE PLN_YR||PLN_WK < @[fcast_yrwk]" ).append("\n"); 
		query.append("            AND   ROWNUM = 1) INP_YRWK" ).append("\n"); 
		query.append("    FROM DUAL" ).append("\n"); 
		query.append("    CONNECT BY LEVEL < =4" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", LV_DUMMY_WEEK AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ ROWNUM WK_SEQ,PLN_YR||PLN_WK AS FCAST_YRWK" ).append("\n"); 
		query.append("    FROM EQR_WK_PRD A" ).append("\n"); 
		query.append("    WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]" ).append("\n"); 
		query.append("    AND   ROWNUM <=4" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", LV_DUMMY_FNL AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT A.TP_CD,A.FCAST_YRWK0, B.FCAST_YRWK,A.LOC_CD,A.INP_YRWK" ).append("\n"); 
		query.append("    FROM LV_DUMMY_ITEM A,LV_DUMMY_WEEK B" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",LV_YD_LIST AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT C.YD_CD, A.SCC_CD" ).append("\n"); 
		query.append("	FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	WHERE A.ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("#elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	WHERE A.LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("#elseif (${loc_grp_cd} == 'S') " ).append("\n"); 
		query.append("	WHERE A.SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("	" ).append("\n"); 
		query.append("	AND   A.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("	AND   B.LOC_CD = C.LOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",ADD_DAY AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT REPO_ADD_DYS" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT A.REPO_ADD_DYS" ).append("\n"); 
		query.append("        FROM EQR_WK_PRD_ADD_DY A," ).append("\n"); 
		query.append("             (" ).append("\n"); 
		query.append("                 SELECT DISTINCT LCC_CD " ).append("\n"); 
		query.append("                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("              #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("              #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("              #else -- 'S' " ).append("\n"); 
		query.append("	             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("              #end                                      " ).append("\n"); 
		query.append("             ) B" ).append("\n"); 
		query.append("        WHERE A.LCC_CD = B.LCC_CD" ).append("\n"); 
		query.append("        UNION " ).append("\n"); 
		query.append("        SELECT 0 REPO_ADD_DYS FROM DUAL " ).append("\n"); 
		query.append("        ORDER BY REPO_ADD_DYS DESC  " ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("    WHERE ROWNUM=1    " ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(",REPO_IN_WEEK AS" ).append("\n"); 
		query.append("(       " ).append("\n"); 
		query.append("    SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ " ).append("\n"); 
		query.append("           ROWNUM AS SEQ" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(A.WK_ST_DT , 'YYYYMMDD') - X.REPO_ADD_DYS, 'YYYYMMDD') WK_ST_DT" ).append("\n"); 
		query.append("          ,TO_CHAR(TO_DATE(A.WK_END_DT, 'YYYYMMDD') - X.REPO_ADD_DYS, 'YYYYMMDD') WK_END_DT" ).append("\n"); 
		query.append("          ,A.PLN_YR||A.PLN_WK WEEK" ).append("\n"); 
		query.append("    FROM EQR_WK_PRD A" ).append("\n"); 
		query.append("        ,ADD_DAY X                     " ).append("\n"); 
		query.append("    WHERE A.PLN_YR||A.PLN_WK >= @[fcast_yrwk]" ).append("\n"); 
		query.append("    AND   A.PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)" ).append("\n"); 
		query.append("    AND   ROWNUM <=4    " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 1주차 REPO IN 의 VVD 검색 (-4주차부터 +2주차까지)" ).append("\n"); 
		query.append(",DIVISION1 AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L4, L3, L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4," ).append("\n"); 
		query.append("					    LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("    WHERE M0 = @[fcast_yrwk] " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(")	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 2주차 REPO IN 의 VVD 검색(-3주차부터 +2주차까지)" ).append("\n"); 
		query.append(",DIVISION2 AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L4, L3, L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4," ).append("\n"); 
		query.append("                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("    WHERE M0 = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=2 ) -- 2주차" ).append("\n"); 
		query.append(")	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 3주차 REPO IN 의 VVD 검색(-3주차부터 +2주차까지)" ).append("\n"); 
		query.append(",DIVISION3 AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L4, L3, L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4," ).append("\n"); 
		query.append("                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("    WHERE M0 = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=3 ) -- 3주차" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 4주차 REPO IN 의 VVD 검색" ).append("\n"); 
		query.append(",DIVISION4 AS " ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("	SELECT	L4, L3, L2, L1, M0, R1, R2" ).append("\n"); 
		query.append("	FROM	(" ).append("\n"); 
		query.append("				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4," ).append("\n"); 
		query.append("                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2," ).append("\n"); 
		query.append("						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1," ).append("\n"); 
		query.append("						PLN_YR||PLN_WK										        M0," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1," ).append("\n"); 
		query.append("						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2" ).append("\n"); 
		query.append("				FROM	EQR_WK_PRD" ).append("\n"); 
		query.append("			)" ).append("\n"); 
		query.append("    WHERE M0 = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=4 ) -- 4주차" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 1주차 REPO IN VVD" ).append("\n"); 
		query.append(",REPOIN_VVD1 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT DISTINCT VVD" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT WEEKDIVISION" ).append("\n"); 
		query.append("          ,WEEK" ).append("\n"); 
		query.append("          ,DIV" ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,LANE" ).append("\n"); 
		query.append("          ,REMARKFLAG" ).append("\n"); 
		query.append("          ,DCLPTSQL" ).append("\n"); 
		query.append("          ,REMARK" ).append("\n"); 
		query.append("          ,CODCFMCTSCD" ).append("\n"); 
		query.append("          ,FIRSTETB" ).append("\n"); 
		query.append("          ,MNLINPFLG" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT WEEKDIVISION" ).append("\n"); 
		query.append("              ,WEEK" ).append("\n"); 
		query.append("              ,DIV" ).append("\n"); 
		query.append("              ,VVD" ).append("\n"); 
		query.append("              ,LANE" ).append("\n"); 
		query.append("              ,REMARKFLAG" ).append("\n"); 
		query.append("              ,DCLPTSQL" ).append("\n"); 
		query.append("              ,REMARK" ).append("\n"); 
		query.append("              ,CODCFMCTSCD" ).append("\n"); 
		query.append("              ,FIRSTETB" ).append("\n"); 
		query.append("              ,MNLINPFLG" ).append("\n"); 
		query.append("              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (  " ).append("\n"); 
		query.append("        SELECT" ).append("\n"); 
		query.append("        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("        		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("        		INDEX ( WEK XAK1EQR_WK_PRD )" ).append("\n"); 
		query.append("        		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', " ).append("\n"); 
		query.append("                                                DIV.L3,	'0'," ).append("\n"); 
		query.append("                                                DIV.L2,	'1'," ).append("\n"); 
		query.append("        										DIV.L1,	'2'," ).append("\n"); 
		query.append("        										DIV.M0,	'3'," ).append("\n"); 
		query.append("        										DIV.R1,	'4'," ).append("\n"); 
		query.append("        										DIV.R2,	'5'," ).append("\n"); 
		query.append("        												NULL) weekDivision," ).append("\n"); 
		query.append("        												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("        		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("        		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("        		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM	" ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			SELECT	" ).append("\n"); 
		query.append("        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("        					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("        					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("        					" ).append("\n"); 
		query.append("        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("        					/*" ).append("\n"); 
		query.append("        					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("        					*/" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        						AND     ROWNUM = 1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					)										FM_PKEY												" ).append("\n"); 
		query.append("        			FROM	" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("        								P2_END 		END_DATE				" ).append("\n"); 
		query.append("        						FROM	(" ).append("\n"); 
		query.append("        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,  -- -3주차부터 조회                                             " ).append("\n"); 
		query.append("        											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    " ).append("\n"); 
		query.append("        									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("        								)" ).append("\n"); 
		query.append("                                WHERE  CUR_WEEK = @[fcast_yrwk]	" ).append("\n"); 
		query.append("							" ).append("\n"); 
		query.append("        					)					PERIOD	," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("        					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("        			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    " ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		)					DST		," ).append("\n"); 
		query.append("        		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("        		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("        		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("        		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("                    FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			" ).append("\n"); 
		query.append("        		)                   TRD     ," ).append("\n"); 
		query.append("        		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("        		DIVISION1            DIV     ," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("        -- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("        AND	(" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR		" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("               OR" ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR " ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬" ).append("\n"); 
		query.append("        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬" ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("        							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	" ).append("\n"); 
		query.append("												DV.L3,	'0'," ).append("\n"); 
		query.append("                                                DV.L2,	'1'," ).append("\n"); 
		query.append("        										DV.L1,	'2'," ).append("\n"); 
		query.append("        										DV.M0,	'3'," ).append("\n"); 
		query.append("        										DV.R1,	'4'," ).append("\n"); 
		query.append("        										DV.R2,	'5'," ).append("\n"); 
		query.append("        											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("        	--	1 dclptsql," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("        			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD" ).append("\n"); 
		query.append("        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    " ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */" ).append("\n"); 
		query.append("        			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("        		)											dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/" ).append("\n"); 
		query.append("        		'21001231'				firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        FROM    DIVISION1            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 ) -- COD SIMULATION 보다 1주더 과거까지 조회" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        /* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("                DISTINCT		" ).append("\n"); 
		query.append("        		DECODE	( " ).append("\n"); 
		query.append("        					VD.N1ST_ETB_YRWK , " ).append("\n"); 
		query.append("                            DV.L4, '-1', " ).append("\n"); 
		query.append("                            DV.L3, '0', " ).append("\n"); 
		query.append("                            DV.L2, '1'," ).append("\n"); 
		query.append("        					DV.L1, '2'," ).append("\n"); 
		query.append("        					DV.M0, '3'," ).append("\n"); 
		query.append("        					DV.R1, '4'," ).append("\n"); 
		query.append("        					DV.R2, '5'," ).append("\n"); 
		query.append("        					NULL" ).append("\n"); 
		query.append("        				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("        		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("        		1 dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM    DIVISION1           DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        ) " ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",REPOIN_VVD2 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT DISTINCT VVD" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT WEEKDIVISION" ).append("\n"); 
		query.append("          ,WEEK" ).append("\n"); 
		query.append("          ,DIV" ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,LANE" ).append("\n"); 
		query.append("          ,REMARKFLAG" ).append("\n"); 
		query.append("          ,DCLPTSQL" ).append("\n"); 
		query.append("          ,REMARK" ).append("\n"); 
		query.append("          ,CODCFMCTSCD" ).append("\n"); 
		query.append("          ,FIRSTETB" ).append("\n"); 
		query.append("          ,MNLINPFLG" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT WEEKDIVISION" ).append("\n"); 
		query.append("              ,WEEK" ).append("\n"); 
		query.append("              ,DIV" ).append("\n"); 
		query.append("              ,VVD" ).append("\n"); 
		query.append("              ,LANE" ).append("\n"); 
		query.append("              ,REMARKFLAG" ).append("\n"); 
		query.append("              ,DCLPTSQL" ).append("\n"); 
		query.append("              ,REMARK" ).append("\n"); 
		query.append("              ,CODCFMCTSCD" ).append("\n"); 
		query.append("              ,FIRSTETB" ).append("\n"); 
		query.append("              ,MNLINPFLG" ).append("\n"); 
		query.append("              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (  " ).append("\n"); 
		query.append("        SELECT" ).append("\n"); 
		query.append("        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("        		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("        		INDEX ( WEK XAK1EQR_WK_PRD )" ).append("\n"); 
		query.append("        		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', " ).append("\n"); 
		query.append("												DIV.L3,	'0'," ).append("\n"); 
		query.append("                                                DIV.L2,	'1'," ).append("\n"); 
		query.append("        										DIV.L1,	'2'," ).append("\n"); 
		query.append("        										DIV.M0,	'3'," ).append("\n"); 
		query.append("        										DIV.R1,	'4'," ).append("\n"); 
		query.append("        										DIV.R2,	'5'," ).append("\n"); 
		query.append("        												NULL) weekDivision," ).append("\n"); 
		query.append("        												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("        		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("        		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("        		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM	" ).append("\n"); 
		query.append("        		(        " ).append("\n"); 
		query.append("        			SELECT	" ).append("\n"); 
		query.append("        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("        					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("        					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("        					" ).append("\n"); 
		query.append("        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("        					/*" ).append("\n"); 
		query.append("        					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("        					*/" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        						AND     ROWNUM = 1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					)										FM_PKEY												" ).append("\n"); 
		query.append("        			FROM	" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("        								P2_END 		END_DATE				" ).append("\n"); 
		query.append("        						FROM	(" ).append("\n"); 
		query.append("        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,  -- -3주차부터 조회                                            " ).append("\n"); 
		query.append("        											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    " ).append("\n"); 
		query.append("        									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("        								)" ).append("\n"); 
		query.append("                                WHERE  CUR_WEEK = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=2 ) 	" ).append("\n"); 
		query.append("							" ).append("\n"); 
		query.append("        					)					PERIOD	," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("        					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("        			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    " ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		)					DST		," ).append("\n"); 
		query.append("        		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("        		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("        		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("        		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("                    FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			" ).append("\n"); 
		query.append("        		)                   TRD     ," ).append("\n"); 
		query.append("        		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("        		DIVISION2            DIV     ," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("        -- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("        AND	(" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR		" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("               OR" ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR " ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬" ).append("\n"); 
		query.append("        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬" ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("        							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	" ).append("\n"); 
		query.append("												DV.L3,	'0',	" ).append("\n"); 
		query.append("                                                DV.L2,	'1'," ).append("\n"); 
		query.append("        										DV.L1,	'2'," ).append("\n"); 
		query.append("        										DV.M0,	'3'," ).append("\n"); 
		query.append("        										DV.R1,	'4'," ).append("\n"); 
		query.append("        										DV.R2,	'5'," ).append("\n"); 
		query.append("        											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("        	--	1 dclptsql," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("        			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD" ).append("\n"); 
		query.append("        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    " ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */" ).append("\n"); 
		query.append("        			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("        		)											dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/" ).append("\n"); 
		query.append("        		'21001231'				firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        FROM    DIVISION2            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        /* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("                DISTINCT		" ).append("\n"); 
		query.append("        		DECODE	( " ).append("\n"); 
		query.append("        					VD.N1ST_ETB_YRWK ," ).append("\n"); 
		query.append("                            DV.L4, '-1', " ).append("\n"); 
		query.append("                            DV.L3, '0', " ).append("\n"); 
		query.append("                            DV.L2, '1'," ).append("\n"); 
		query.append("        					DV.L1, '2'," ).append("\n"); 
		query.append("        					DV.M0, '3'," ).append("\n"); 
		query.append("        					DV.R1, '4'," ).append("\n"); 
		query.append("        					DV.R2, '5'," ).append("\n"); 
		query.append("        					NULL" ).append("\n"); 
		query.append("        				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("        		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("        		1 dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM    DIVISION2            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        ) " ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 3주차 REPO IN VVD" ).append("\n"); 
		query.append(",REPOIN_VVD3 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT DISTINCT VVD" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT WEEKDIVISION" ).append("\n"); 
		query.append("          ,WEEK" ).append("\n"); 
		query.append("          ,DIV" ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,LANE" ).append("\n"); 
		query.append("          ,REMARKFLAG" ).append("\n"); 
		query.append("          ,DCLPTSQL" ).append("\n"); 
		query.append("          ,REMARK" ).append("\n"); 
		query.append("          ,CODCFMCTSCD" ).append("\n"); 
		query.append("          ,FIRSTETB" ).append("\n"); 
		query.append("          ,MNLINPFLG" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT WEEKDIVISION" ).append("\n"); 
		query.append("              ,WEEK" ).append("\n"); 
		query.append("              ,DIV" ).append("\n"); 
		query.append("              ,VVD" ).append("\n"); 
		query.append("              ,LANE" ).append("\n"); 
		query.append("              ,REMARKFLAG" ).append("\n"); 
		query.append("              ,DCLPTSQL" ).append("\n"); 
		query.append("              ,REMARK" ).append("\n"); 
		query.append("              ,CODCFMCTSCD" ).append("\n"); 
		query.append("              ,FIRSTETB" ).append("\n"); 
		query.append("              ,MNLINPFLG" ).append("\n"); 
		query.append("              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (  " ).append("\n"); 
		query.append("        SELECT" ).append("\n"); 
		query.append("        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("        		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("        		INDEX ( WEK XAK1EQR_WK_PRD )" ).append("\n"); 
		query.append("        		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', " ).append("\n"); 
		query.append("												DIV.L3,	'0'," ).append("\n"); 
		query.append("                                                DIV.L2,	'1'," ).append("\n"); 
		query.append("        										DIV.L1,	'2'," ).append("\n"); 
		query.append("        										DIV.M0,	'3'," ).append("\n"); 
		query.append("        										DIV.R1,	'4'," ).append("\n"); 
		query.append("        										DIV.R2,	'5'," ).append("\n"); 
		query.append("        												NULL) weekDivision," ).append("\n"); 
		query.append("        												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("        		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("        		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("        		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM	" ).append("\n"); 
		query.append("        		(        " ).append("\n"); 
		query.append("        			SELECT	" ).append("\n"); 
		query.append("        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("        					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("        					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("        					" ).append("\n"); 
		query.append("        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("        					/*" ).append("\n"); 
		query.append("        					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("        					*/" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        						AND     ROWNUM = 1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					)										FM_PKEY												" ).append("\n"); 
		query.append("        			FROM	" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("        								P2_END 		END_DATE				" ).append("\n"); 
		query.append("        						FROM	(" ).append("\n"); 
		query.append("        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START, -- -3주차부터 조회                                              " ).append("\n"); 
		query.append("        											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    " ).append("\n"); 
		query.append("        									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("        								)" ).append("\n"); 
		query.append("                                WHERE  CUR_WEEK = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=3 ) -- 3주차	" ).append("\n"); 
		query.append("							" ).append("\n"); 
		query.append("        					)					PERIOD	," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("        					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("        			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    " ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		)					DST		," ).append("\n"); 
		query.append("        		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("        		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("        		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("        		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("                    FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			" ).append("\n"); 
		query.append("        		)                   TRD     ," ).append("\n"); 
		query.append("        		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("        		DIVISION3            DIV     ," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("        -- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("        AND	(" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR		" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("               OR" ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR " ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬" ).append("\n"); 
		query.append("        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬" ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("        							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	" ).append("\n"); 
		query.append("												DV.L3,	'0'," ).append("\n"); 
		query.append("                                                DV.L2,	'1'," ).append("\n"); 
		query.append("        										DV.L1,	'2'," ).append("\n"); 
		query.append("        										DV.M0,	'3'," ).append("\n"); 
		query.append("        										DV.R1,	'4'," ).append("\n"); 
		query.append("        										DV.R2,	'5'," ).append("\n"); 
		query.append("        											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("        	--	1 dclptsql," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("        			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD" ).append("\n"); 
		query.append("        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    " ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */" ).append("\n"); 
		query.append("        			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("        		)											dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/" ).append("\n"); 
		query.append("        		'21001231'				firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        FROM    DIVISION3            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        /* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("                DISTINCT		" ).append("\n"); 
		query.append("        		DECODE	( " ).append("\n"); 
		query.append("        					VD.N1ST_ETB_YRWK , " ).append("\n"); 
		query.append("                            DV.L4, '-1'," ).append("\n"); 
		query.append("                            DV.L3, '0'," ).append("\n"); 
		query.append("                            DV.L2, '1'," ).append("\n"); 
		query.append("        					DV.L1, '2'," ).append("\n"); 
		query.append("        					DV.M0, '3'," ).append("\n"); 
		query.append("        					DV.R1, '4'," ).append("\n"); 
		query.append("        					DV.R2, '5'," ).append("\n"); 
		query.append("        					NULL" ).append("\n"); 
		query.append("        				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("        		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("        		1 dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM    DIVISION3            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        ) " ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 4주차 REPO IN VVD" ).append("\n"); 
		query.append(",REPOIN_VVD4 AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT DISTINCT VVD" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("    SELECT WEEKDIVISION" ).append("\n"); 
		query.append("          ,WEEK" ).append("\n"); 
		query.append("          ,DIV" ).append("\n"); 
		query.append("          ,VVD" ).append("\n"); 
		query.append("          ,LANE" ).append("\n"); 
		query.append("          ,REMARKFLAG" ).append("\n"); 
		query.append("          ,DCLPTSQL" ).append("\n"); 
		query.append("          ,REMARK" ).append("\n"); 
		query.append("          ,CODCFMCTSCD" ).append("\n"); 
		query.append("          ,FIRSTETB" ).append("\n"); 
		query.append("          ,MNLINPFLG" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT WEEKDIVISION" ).append("\n"); 
		query.append("              ,WEEK" ).append("\n"); 
		query.append("              ,DIV" ).append("\n"); 
		query.append("              ,VVD" ).append("\n"); 
		query.append("              ,LANE" ).append("\n"); 
		query.append("              ,REMARKFLAG" ).append("\n"); 
		query.append("              ,DCLPTSQL" ).append("\n"); 
		query.append("              ,REMARK" ).append("\n"); 
		query.append("              ,CODCFMCTSCD" ).append("\n"); 
		query.append("              ,FIRSTETB" ).append("\n"); 
		query.append("              ,MNLINPFLG" ).append("\n"); 
		query.append("              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (  " ).append("\n"); 
		query.append("        SELECT" ).append("\n"); 
		query.append("        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )" ).append("\n"); 
		query.append("        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )" ).append("\n"); 
		query.append("        		INDEX ( OCNT XPKMDM_COUNTRY )" ).append("\n"); 
		query.append("        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )" ).append("\n"); 
		query.append("        		INDEX ( WEK XAK1EQR_WK_PRD )" ).append("\n"); 
		query.append("        		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', " ).append("\n"); 
		query.append("												DIV.L3,	'0'," ).append("\n"); 
		query.append("                                                DIV.L2,	'1'," ).append("\n"); 
		query.append("        										DIV.L1,	'2'," ).append("\n"); 
		query.append("        										DIV.M0,	'3'," ).append("\n"); 
		query.append("        										DIV.R1,	'4'," ).append("\n"); 
		query.append("        										DIV.R2,	'5'," ).append("\n"); 
		query.append("        												NULL) weekDivision," ).append("\n"); 
		query.append("        												/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd," ).append("\n"); 
		query.append("        		ORG.SLAN_CD						lane,	/*	LANE		*/" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	" ).append("\n"); 
		query.append("        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */" ).append("\n"); 
		query.append("        		RMK.DIFF_RMK			remark," ).append("\n"); 
		query.append("        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		DST.VPS_ETB_DT			firstetb," ).append("\n"); 
		query.append("        		EVD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM	" ).append("\n"); 
		query.append("        		(        " ).append("\n"); 
		query.append("        			SELECT	" ).append("\n"); 
		query.append("        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */" ).append("\n"); 
		query.append("        					VPS2.SLAN_CD							SLAN_CD     ," ).append("\n"); 
		query.append("        					VPS2.VSL_CD								VSL_CD      ,			" ).append("\n"); 
		query.append("        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		" ).append("\n"); 
		query.append("        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, " ).append("\n"); 
		query.append("        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	," ).append("\n"); 
		query.append("        					" ).append("\n"); 
		query.append("        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	" ).append("\n"); 
		query.append("        					/*" ).append("\n"); 
		query.append("        					VPS2.VPS_PORT_CD						VPS_PORT_CD ," ).append("\n"); 
		query.append("        					*/" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        						FROM    VSK_VSL_PORT_SKD    VPS1" ).append("\n"); 
		query.append("        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO" ).append("\n"); 
		query.append("        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD" ).append("\n"); 
		query.append("        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        						AND     ROWNUM = 1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					)										FM_PKEY												" ).append("\n"); 
		query.append("        			FROM	" ).append("\n"); 
		query.append("        					(" ).append("\n"); 
		query.append("        						SELECT	M2_START	START_DATE," ).append("\n"); 
		query.append("        								P2_END 		END_DATE				" ).append("\n"); 
		query.append("        						FROM	(" ).append("\n"); 
		query.append("        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ " ).append("\n"); 
		query.append("        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START, -- -3주차부터 조회                                              " ).append("\n"); 
		query.append("        											PLN_YR||PLN_WK										CUR_WEEK," ).append("\n"); 
		query.append("        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    " ).append("\n"); 
		query.append("        									FROM	EQR_WK_PRD    " ).append("\n"); 
		query.append("        								)" ).append("\n"); 
		query.append("                                WHERE  CUR_WEEK = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=4 ) -- 4주차	" ).append("\n"); 
		query.append("							" ).append("\n"); 
		query.append("        					)					PERIOD	," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        					VSK_VSL_PORT_SKD	VPS2,	" ).append("\n"); 
		query.append("        					MDM_COUNTRY			CNT2,	" ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT	SCNT2			" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')" ).append("\n"); 
		query.append("        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */" ).append("\n"); 
		query.append("        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')" ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */" ).append("\n"); 
		query.append("        			AND		VPS2.CLPT_SEQ		<>	'1'" ).append("\n"); 
		query.append("        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    " ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		)					DST		," ).append("\n"); 
		query.append("        		VSK_VSL_PORT_SKD	ORG		," ).append("\n"); 
		query.append("        		MDM_COUNTRY			OCNT	,	" ).append("\n"); 
		query.append("        		MDM_SUBCONTINENT	OSCNT	," ).append("\n"); 
		query.append("        		--MDM_DTL_REV_LANE	RLN		," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ " ).append("\n"); 
		query.append("        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD" ).append("\n"); 
		query.append("                    FROM	BSA_VVD_MST   -- 108 건" ).append("\n"); 
		query.append("        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			" ).append("\n"); 
		query.append("        		)                   TRD     ," ).append("\n"); 
		query.append("        		EQR_WK_PRD			WEK		," ).append("\n"); 
		query.append("        		DIVISION4            DIV     ," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		EVD		," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE   ORG.VSL_CD			=	DST.VSL_CD" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)" ).append("\n"); 
		query.append("        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)" ).append("\n"); 
		query.append("        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)" ).append("\n"); 
		query.append("        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD" ).append("\n"); 
		query.append("        -- AND     OSCNT.CONTI_CD		<>    'A'  " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        AND		ORG.SLAN_CD			=	TRD.LANE_CD" ).append("\n"); 
		query.append("        AND	(" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR		" ).append("\n"); 
		query.append("		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )" ).append("\n"); 
		query.append("               OR" ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )" ).append("\n"); 
		query.append("		       OR " ).append("\n"); 
		query.append("               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )" ).append("\n"); 
		query.append("               " ).append("\n"); 
		query.append("        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬" ).append("\n"); 
		query.append("        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬" ).append("\n"); 
		query.append("		OR" ).append("\n"); 
		query.append("	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) " ).append("\n"); 
		query.append("		OR		" ).append("\n"); 
		query.append("		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("        OR" ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))" ).append("\n"); 
		query.append("		OR " ).append("\n"); 
		query.append("        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') " ).append("\n"); 
		query.append("        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT" ).append("\n"); 
		query.append("        							AND			WEK.WK_END_DT" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	" ).append("\n"); 
		query.append("												DV.L3,	'0',	" ).append("\n"); 
		query.append("                                                DV.L2,	'1'," ).append("\n"); 
		query.append("        										DV.L1,	'2'," ).append("\n"); 
		query.append("        										DV.M0,	'3'," ).append("\n"); 
		query.append("        										DV.R1,	'4'," ).append("\n"); 
		query.append("        										DV.R2,	'5'," ).append("\n"); 
		query.append("        											NULL)	weekDivision,		/*	WEEK_DIV	*/" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/" ).append("\n"); 
		query.append("        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			" ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane,				/*	LANE		*/" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/" ).append("\n"); 
		query.append("        	--	1 dclptsql," ).append("\n"); 
		query.append("        		(" ).append("\n"); 
		query.append("        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */" ).append("\n"); 
		query.append("        					VPS1.CLPT_SEQ" ).append("\n"); 
		query.append("        			FROM	VSK_VSL_PORT_SKD	VPS1," ).append("\n"); 
		query.append("        			        MDM_COUNTRY         CNT,    " ).append("\n"); 
		query.append("        					MDM_SUBCONTINENT    SCT   " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          " ).append("\n"); 
		query.append("        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD" ).append("\n"); 
		query.append("        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    " ).append("\n"); 
		query.append("        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )" ).append("\n"); 
		query.append("        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ " ).append("\n"); 
		query.append("        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD" ).append("\n"); 
		query.append("                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD" ).append("\n"); 
		query.append("        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */" ).append("\n"); 
		query.append("        			AND		ROWNUM				=	1" ).append("\n"); 
		query.append("        		)											dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK								remark,				/*	REMARK		*/" ).append("\n"); 
		query.append("        		" ).append("\n"); 
		query.append("        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/" ).append("\n"); 
		query.append("        		'21001231'				firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG			mnlInpFlg" ).append("\n"); 
		query.append("        FROM    DIVISION4            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		SV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */" ).append("\n"); 
		query.append("        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD		" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	" ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	SV.VSL_CD			(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)" ).append("\n"); 
		query.append("        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)" ).append("\n"); 
		query.append("        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        /* To Get Arelady Simulated Data Without Vessel Schedule */" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */" ).append("\n"); 
		query.append("                DISTINCT		" ).append("\n"); 
		query.append("        		DECODE	( " ).append("\n"); 
		query.append("        					VD.N1ST_ETB_YRWK ," ).append("\n"); 
		query.append("							DV.L4, '-1', " ).append("\n"); 
		query.append("                            DV.L3, '0', " ).append("\n"); 
		query.append("                            DV.L2, '1'," ).append("\n"); 
		query.append("        					DV.L1, '2'," ).append("\n"); 
		query.append("        					DV.M0, '3'," ).append("\n"); 
		query.append("        					DV.R1, '4'," ).append("\n"); 
		query.append("        					DV.R2, '5'," ).append("\n"); 
		query.append("        					NULL" ).append("\n"); 
		query.append("        				)									weekDivision,	/* WEEK_DIV */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */" ).append("\n"); 
		query.append("        		VD.COD_CFM_STS_CD							div			,	/* DIV   */" ).append("\n"); 
		query.append("        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   " ).append("\n"); 
		query.append("        		VD.SLAN_CD									lane		,	/* LANE  */" ).append("\n"); 
		query.append("        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */" ).append("\n"); 
		query.append("        		1 dclptsql," ).append("\n"); 
		query.append("        		RMK.DIFF_RMK									remark		,	/* REMARK  */" ).append("\n"); 
		query.append("        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */" ).append("\n"); 
		query.append("        		VD.N1ST_ETB_YRWK							firstetb," ).append("\n"); 
		query.append("        		VD.MNL_INP_FLG								mnlinpflg" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        FROM    DIVISION4            DV," ).append("\n"); 
		query.append("        		EQR_MTY_COD_VVD		VD," ).append("\n"); 
		query.append("        		EQR_MTY_COD_PORT	PT," ).append("\n"); 
		query.append("        		EQR_MTY_COD_RMK     RMK" ).append("\n"); 
		query.append("        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	PT.VSL_CD  " ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO " ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD " ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD " ).append("\n"); 
		query.append("        AND		'D'					=	PT.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */" ).append("\n"); 
		query.append("        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)" ).append("\n"); 
		query.append("        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)" ).append("\n"); 
		query.append("        ) " ).append("\n"); 
		query.append("    ) " ).append("\n"); 
		query.append("    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT DP_SEQ" ).append("\n"); 
		query.append("      ,TITLE" ).append("\n"); 
		query.append("      ,ITEM" ).append("\n"); 
		query.append("      ,FCAST_YRWK0" ).append("\n"); 
		query.append("      ,TP_CD" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("      ,D2_FCAST_QTY+D4_FCAST_QTY+D5_FCAST_QTY+D7_FCAST_QTY+R2_FCAST_QTY+R5_FCAST_QTY+R9_FCAST_QTY+O2_FCAST_QTY+S2_FCAST_QTY+O4_FCAST_QTY+S4_FCAST_QTY+F2_FCAST_QTY+A2_FCAST_QTY+F4_FCAST_QTY+A4_FCAST_QTY+F5_FCAST_QTY+O5_FCAST_QTY G_TOTAL" ).append("\n"); 
		query.append("      ,D2_FCAST_QTY+D4_FCAST_QTY+D5_FCAST_QTY+D7_FCAST_QTY   D_TOTAL" ).append("\n"); 
		query.append("      ,D2_FCAST_QTY D2_FCAST_QTY" ).append("\n"); 
		query.append("      ,D4_FCAST_QTY D4_FCAST_QTY" ).append("\n"); 
		query.append("      ,D5_FCAST_QTY D5_FCAST_QTY" ).append("\n"); 
		query.append("      ,D7_FCAST_QTY D7_FCAST_QTY" ).append("\n"); 
		query.append("      ,R2_FCAST_QTY+R5_FCAST_QTY+R9_FCAST_QTY+O2_FCAST_QTY+S2_FCAST_QTY+O4_FCAST_QTY+S4_FCAST_QTY+F2_FCAST_QTY+A2_FCAST_QTY+F4_FCAST_QTY+A4_FCAST_QTY+F5_FCAST_QTY+O5_FCAST_QTY S_TOTAL" ).append("\n"); 
		query.append("      " ).append("\n"); 
		query.append("      ,R2_FCAST_QTY R2_FCAST_QTY   " ).append("\n"); 
		query.append("      ,R5_FCAST_QTY R5_FCAST_QTY " ).append("\n"); 
		query.append("      ,R9_FCAST_QTY R9_FCAST_QTY " ).append("\n"); 
		query.append("      ,O2_FCAST_QTY O2_FCAST_QTY" ).append("\n"); 
		query.append("      ,S2_FCAST_QTY S2_FCAST_QTY " ).append("\n"); 
		query.append("      ,O4_FCAST_QTY O4_FCAST_QTY " ).append("\n"); 
		query.append("      ,S4_FCAST_QTY S4_FCAST_QTY  " ).append("\n"); 
		query.append("      ,F2_FCAST_QTY F2_FCAST_QTY " ).append("\n"); 
		query.append("      ,A2_FCAST_QTY A2_FCAST_QTY " ).append("\n"); 
		query.append("      ,F4_FCAST_QTY F4_FCAST_QTY " ).append("\n"); 
		query.append("      ,A4_FCAST_QTY A4_FCAST_QTY " ).append("\n"); 
		query.append("      ,F5_FCAST_QTY F5_FCAST_QTY" ).append("\n"); 
		query.append("      ,O5_FCAST_QTY O5_FCAST_QTY" ).append("\n"); 
		query.append("  	  ,(" ).append("\n"); 
		query.append("  	      SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ PLN_YR||PLN_WK" ).append("\n"); 
		query.append("          FROM EQR_WK_PRD A" ).append("\n"); 
		query.append("          WHERE PLN_YR||PLN_WK < @[fcast_yrwk]" ).append("\n"); 
		query.append("          AND   ROWNUM = 1" ).append("\n"); 
		query.append("       ) INP_YRWK" ).append("\n"); 
		query.append("	  ,(SELECT @[loc_cd] LOC_CD FROM DUAL P) LOC_CD   " ).append("\n"); 
		query.append("      ,(SELECT @[loc_grp_cd] LOC_GRP_CD FROM DUAL P) LOC_GRP_CD  " ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT A.DP_SEQ" ).append("\n"); 
		query.append("          ,A.TITLE" ).append("\n"); 
		query.append("          ,A.ITEM" ).append("\n"); 
		query.append("          ,'' IMAGE_BUTTON" ).append("\n"); 
		query.append("          ,A.FCAST_YRWK0" ).append("\n"); 
		query.append("          ,A.TP_CD" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("          ,A.D2_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.D4_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.D5_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.D7_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.R2_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.R5_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.R9_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.O2_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.S2_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.O4_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.S4_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.F2_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.A2_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.F4_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.A4_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.F5_FCAST_QTY" ).append("\n"); 
		query.append("          ,A.O5_FCAST_QTY" ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        -- Sound MT, Damage MT (첫번째주)" ).append("\n"); 
		query.append("        SELECT B.TP_CD DP_SEQ" ).append("\n"); 
		query.append("              ,DECODE(B.TP_CD, 1,'Sound MT','Damage MT') TITLE" ).append("\n"); 
		query.append("              ,DECODE(B.TP_CD, 1,'Sound MT','Damage MT') ITEM" ).append("\n"); 
		query.append("              ,B.FCAST_YRWK0" ).append("\n"); 
		query.append("              ,B.TP_CD" ).append("\n"); 
		query.append("              ,NVL(D2_FCAST_QTY,0) D2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(D4_FCAST_QTY,0) D4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(D5_FCAST_QTY,0) D5_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(D7_FCAST_QTY,0) D7_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(R2_FCAST_QTY,0) R2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(R5_FCAST_QTY,0) R5_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(R9_FCAST_QTY,0) R9_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(O2_FCAST_QTY,0) O2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(S2_FCAST_QTY,0) S2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(O4_FCAST_QTY,0) O4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(S4_FCAST_QTY,0) S4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(F2_FCAST_QTY,0) F2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A2_FCAST_QTY,0) A2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(F4_FCAST_QTY,0) F4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A4_FCAST_QTY,0) A4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(F5_FCAST_QTY,0) F5_FCAST_QTY               " ).append("\n"); 
		query.append("              ,NVL(O5_FCAST_QTY,0) O5_FCAST_QTY               " ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT A.DMG_FLG" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',CNTR_QTY,0)) D2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',CNTR_QTY,0)) D4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',CNTR_QTY,0)) D5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',CNTR_QTY,0)) D7_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',CNTR_QTY,0)) R2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',CNTR_QTY,0)) R5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',CNTR_QTY,0)) R9_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',CNTR_QTY,0)) O2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',CNTR_QTY,0)) S2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',CNTR_QTY,0)) O4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',CNTR_QTY,0)) S4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',CNTR_QTY,0)) F2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',CNTR_QTY,0)) A2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',CNTR_QTY,0)) F4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',CNTR_QTY,0)) A4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',CNTR_QTY,0)) F5_FCAST_QTY " ).append("\n"); 
		query.append("                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',CNTR_QTY,0)) O5_FCAST_QTY " ).append("\n"); 
		query.append("            FROM  CIM_ETC_INVT A" ).append("\n"); 
		query.append("            WHERE A.CO_CD (+)         = 'H'" ).append("\n"); 
		query.append("            AND   A.LOC_GRP_CD(+)     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("            AND   A.INVT_USE_TP_CD(+) = '1'" ).append("\n"); 
		query.append("            AND   A.BSE_DT (+)        = @[fcast_yrwk]" ).append("\n"); 
		query.append("            AND   A.LOC_CD(+)         = @[loc_cd]" ).append("\n"); 
		query.append("            GROUP BY A.DMG_FLG" ).append("\n"); 
		query.append("        )," ).append("\n"); 
		query.append("        LV_DUMMY_ITEM  B" ).append("\n"); 
		query.append("        WHERE DECODE(DMG_FLG(+),'Y',2,1) = B.TP_CD -- 1 : sound, 2 : damage" ).append("\n"); 
		query.append("        AND   B.TP_CD IN (1,2)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        -- MG FCST, OP FCST (모든주차)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT DECODE(A.DP_SEQ,1,3,2,4,3,8,4,9,5,16,7,20,9,27,11,31,13,38,15,42) DP_SEQ,    " ).append("\n"); 
		query.append("               DECODE(A.DP_SEQ,1,'Supply',2,'Supply',3,'Demand',4,'Demand'," ).append("\n"); 
		query.append("                               5,'Supply',7,'Demand', 9,'Supply',11,'Demand'," ).append("\n"); 
		query.append("                               13,'Supply',15,'Demand') TITLE," ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("               DECODE(A.DP_SEQ,1,'MG FCST',2,'I/B Remaining (F~S)',3,'OP FCST',4,'O/B Remaining (F~S)'," ).append("\n"); 
		query.append("                               5,'MG FCST',7,'OP FCST', 9,'MG FCST',11,'OP FCST'," ).append("\n"); 
		query.append("                               13,'MG FCST',15,'OP FCST') ITEM" ).append("\n"); 
		query.append("               ,A.FCAST_YRWK" ).append("\n"); 
		query.append("               ,A.TP_CD" ).append("\n"); 
		query.append("               ,A.D2_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.D4_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.D5_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.D7_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.R2_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.R5_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.R9_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.O2_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.S2_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.O4_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.S4_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.F2_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.A2_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.F4_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.A4_FCAST_QTY" ).append("\n"); 
		query.append("               ,A.F5_FCAST_QTY                 " ).append("\n"); 
		query.append("               ,A.O5_FCAST_QTY   " ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT ROW_NUMBER() OVER (ORDER BY B.FCAST_YRWK,B.TP_CD) DP_SEQ" ).append("\n"); 
		query.append("                  ,B.FCAST_YRWK0" ).append("\n"); 
		query.append("                  ,1" ).append("\n"); 
		query.append("                  ,B.FCAST_YRWK" ).append("\n"); 
		query.append("                  ,B.TP_CD" ).append("\n"); 
		query.append("                  ,NVL(A.D2_FCAST_QTY,0) D2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.D4_FCAST_QTY,0) D4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.D5_FCAST_QTY,0) D5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.D7_FCAST_QTY,0) D7_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.R2_FCAST_QTY,0) R2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.R5_FCAST_QTY,0) R5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.R9_FCAST_QTY,0) R9_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.O2_FCAST_QTY,0) O2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.S2_FCAST_QTY,0) S2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.O4_FCAST_QTY,0) O4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.S4_FCAST_QTY,0) S4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.F2_FCAST_QTY,0) F2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.A2_FCAST_QTY,0) A2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.F4_FCAST_QTY,0) F4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.A4_FCAST_QTY,0) A4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.F5_FCAST_QTY,0) F5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(A.O5_FCAST_QTY,0) O5_FCAST_QTY" ).append("\n"); 
		query.append("            FROM EQR_MTY_BAL_RPT A " ).append("\n"); 
		query.append("                ,LV_DUMMY_FNL B" ).append("\n"); 
		query.append("            WHERE A.CO_CD(+)         = 'H'" ).append("\n"); 
		query.append("            AND   A.LOC_GRP_CD(+)    = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)            " ).append("\n"); 
		query.append("            AND   A.LOC_CD(+)        = B.LOC_CD" ).append("\n"); 
		query.append("            AND   A.INP_YRWK(+)      = B.INP_YRWK" ).append("\n"); 
		query.append("            AND   A.FCAST_YRWK(+)    = B.FCAST_YRWK" ).append("\n"); 
		query.append("            AND   A.MTY_BAL_TP_CD(+) = B.TP_CD" ).append("\n"); 
		query.append("        ) A" ).append("\n"); 
		query.append("        WHERE A.FCAST_YRWK0 = A.FCAST_YRWK " ).append("\n"); 
		query.append("        OR    (A.FCAST_YRWK0 <> A.FCAST_YRWK  AND A.TP_CD IN(1,3))    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        --OW&On-hire, + Others, - Others (모든주차)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT DECODE(A.DP_SEQ,1,6,2,7,3,12,4,18,5,19,6,23,7,29,8,30,9,34,10,40,11,41,12,45) DP_SEQ" ).append("\n"); 
		query.append("              ,DECODE(A.TP_CD,1,'Supply',2,'Supply',4,'Demand') TITLE" ).append("\n"); 
		query.append("              ,DECODE(A.TP_CD,1,'OW&On-hire',2,'+ Others',4,'- Others') ITEM" ).append("\n"); 
		query.append("              ,A.FCAST_YRWK,A.TP_CD" ).append("\n"); 
		query.append("              ,A.D2_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.D4_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.D5_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.D7_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.R2_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.R5_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.R9_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.O2_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.S2_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.O4_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.S4_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.F2_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.A2_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.F4_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.A4_FCAST_QTY" ).append("\n"); 
		query.append("              ,A.F5_FCAST_QTY       " ).append("\n"); 
		query.append("              ,A.O5_FCAST_QTY       " ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT   ROW_NUMBER() OVER (ORDER BY B.FCAST_YRWK,B.TP_CD) DP_SEQ" ).append("\n"); 
		query.append("                    ,B.FCAST_YRWK" ).append("\n"); 
		query.append("                    ,B.TP_CD" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.D2_FCAST_QTY),0) D2_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.D4_FCAST_QTY),0) D4_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.D5_FCAST_QTY),0) D5_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.D7_FCAST_QTY),0) D7_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.R2_FCAST_QTY),0) R2_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.R5_FCAST_QTY),0) R5_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.R9_FCAST_QTY),0) R9_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.O2_FCAST_QTY),0) O2_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.S2_FCAST_QTY),0) S2_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.O4_FCAST_QTY),0) O4_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.S4_FCAST_QTY),0) S4_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.F2_FCAST_QTY),0) F2_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.A2_FCAST_QTY),0) A2_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.F4_FCAST_QTY),0) F4_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.A4_FCAST_QTY),0) A4_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.F5_FCAST_QTY),0) F5_FCAST_QTY" ).append("\n"); 
		query.append("                    ,NVL(SUM(A.O5_FCAST_QTY),0) O5_FCAST_QTY" ).append("\n"); 
		query.append("            FROM  EQR_MTY_BAL_RPT_OTR A " ).append("\n"); 
		query.append("                 ,LV_DUMMY_FNL B" ).append("\n"); 
		query.append("            WHERE A.CO_CD(+) = 'H'" ).append("\n"); 
		query.append("            AND   A.LOC_GRP_CD(+) = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)            " ).append("\n"); 
		query.append("            AND   A.LOC_CD(+) = B.LOC_CD" ).append("\n"); 
		query.append("            AND   A.INP_YRWK(+) = B.INP_YRWK" ).append("\n"); 
		query.append("            AND   A.FCAST_YRWK(+) = B.FCAST_YRWK" ).append("\n"); 
		query.append("            AND   A.MTY_BAL_OTR_TP_CD(+) = B.TP_CD" ).append("\n"); 
		query.append("            AND   B.TP_CD IN(1,2,4)" ).append("\n"); 
		query.append("            GROUP BY  B.FCAST_YRWK,B.TP_CD" ).append("\n"); 
		query.append("        ) A        " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        -- Repo In (COD SIMULATION 추출)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT    DP_SEQ" ).append("\n"); 
		query.append("                 ,'Demand', 'Repo In', A.FCAST_YRWK FCAST_YRWK0, 1" ).append("\n"); 
		query.append("                 ,SUM(A.D2_QTY)  D2_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.D4_QTY)  D4_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.D5_QTY)  D5_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.D7_QTY)  D7_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.R2_QTY)  R2_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.R5_QTY)  R5_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.R9_QTY)  R9_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.O2_QTY)  O2_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.S2_QTY)  S2_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.O4_QTY)  O4_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.S4_QTY)  S4_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.F2_QTY)  F2_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.A2_QTY)  A2_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.F4_QTY)  F4_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.A4_QTY)  A4_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.F5_QTY)  F5_FCAST_QTY" ).append("\n"); 
		query.append("                 ,SUM(A.O5_QTY)  O5_FCAST_QTY" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#if(${curr_flag} =='F')	-- 입력된 주차가 현재주차 아닐때" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            -- 첫번째 주차 (SEQ = 1)           " ).append("\n"); 
		query.append("            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ" ).append("\n"); 
		query.append("                  ,@[fcast_yrwk] FCAST_YRWK" ).append("\n"); 
		query.append("                  ,A.D2_QTY" ).append("\n"); 
		query.append("                  ,A.D4_QTY" ).append("\n"); 
		query.append("                  ,A.D5_QTY" ).append("\n"); 
		query.append("                  ,A.D7_QTY" ).append("\n"); 
		query.append("                  ,A.R2_QTY  " ).append("\n"); 
		query.append("                  ,A.R5_QTY" ).append("\n"); 
		query.append("                  ,A.R9_QTY" ).append("\n"); 
		query.append("                  ,A.O2_QTY" ).append("\n"); 
		query.append("                  ,A.S2_QTY" ).append("\n"); 
		query.append("                  ,A.O4_QTY" ).append("\n"); 
		query.append("                  ,A.S4_QTY" ).append("\n"); 
		query.append("                  ,A.F2_QTY" ).append("\n"); 
		query.append("                  ,A.A2_QTY" ).append("\n"); 
		query.append("                  ,A.F4_QTY" ).append("\n"); 
		query.append("                  ,A.A4_QTY" ).append("\n"); 
		query.append("                  ,A.F5_QTY     " ).append("\n"); 
		query.append("                  ,A.O5_QTY" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            FROM " ).append("\n"); 
		query.append("            (       " ).append("\n"); 
		query.append("              " ).append("\n"); 
		query.append("                -- BAY PLAN, I" ).append("\n"); 
		query.append("                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                      ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,B.SLAN_CD" ).append("\n"); 
		query.append("                      ,A.POD_CD" ).append("\n"); 
		query.append("                      ,B.YD_CD" ).append("\n"); 
		query.append("                      ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                      ,'I' DIV" ).append("\n"); 
		query.append("                      ,B.SEQ" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY" ).append("\n"); 
		query.append("                FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                (" ).append("\n"); 
		query.append("                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ" ).append("\n"); 
		query.append("                    FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                        ,REPOIN_VVD1 Z" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)" ).append("\n"); 
		query.append("                    AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                            SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                            WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                          " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                    AND   A.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 " ).append("\n"); 
		query.append("			        AND   X.SEQ = 1  -- 1주차" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)" ).append("\n"); 
		query.append("                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER" ).append("\n"); 
		query.append("                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN" ).append("\n"); 
		query.append("                AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                        ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                        ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                        ,B.SLAN_CD" ).append("\n"); 
		query.append("                        ,A.POD_CD" ).append("\n"); 
		query.append("                        ,B.YD_CD" ).append("\n"); 
		query.append("                        ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                        ,B.SEQ" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                SELECT Z.VSL_CD" ).append("\n"); 
		query.append("                      ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,Z.SLAN_CD" ).append("\n"); 
		query.append("                      ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                      ,Z.YD_CD" ).append("\n"); 
		query.append("                      ,Z.ETB_DT" ).append("\n"); 
		query.append("                      ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                      ,Z.SEQ" ).append("\n"); 
		query.append("                      ,P.D2_QTY" ).append("\n"); 
		query.append("                      ,P.D4_QTY" ).append("\n"); 
		query.append("                      ,P.D5_QTY" ).append("\n"); 
		query.append("                      ,P.D7_QTY" ).append("\n"); 
		query.append("                      ,P.R2_QTY" ).append("\n"); 
		query.append("                      ,P.R5_QTY" ).append("\n"); 
		query.append("                      ,P.R9_QTY" ).append("\n"); 
		query.append("                      ,P.O2_QTY" ).append("\n"); 
		query.append("                      ,P.S2_QTY" ).append("\n"); 
		query.append("                      ,P.O4_QTY" ).append("\n"); 
		query.append("                      ,P.S4_QTY" ).append("\n"); 
		query.append("                      ,P.F2_QTY" ).append("\n"); 
		query.append("                      ,P.A2_QTY" ).append("\n"); 
		query.append("                      ,P.F4_QTY" ).append("\n"); 
		query.append("                      ,P.A4_QTY" ).append("\n"); 
		query.append("                      ,P.F5_QTY" ).append("\n"); 
		query.append("                      ,P.O5_QTY" ).append("\n"); 
		query.append("                FROM EQR_MTY_COD_VVD  V," ).append("\n"); 
		query.append("                     EQR_MTY_COD_PORT P," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                         SELECT A.VSL_CD" ).append("\n"); 
		query.append("                               ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                               ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                               ,A.SLAN_CD" ).append("\n"); 
		query.append("                               ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                               ,A.YD_CD" ).append("\n"); 
		query.append("                               ,A.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                               ,X.WEEK" ).append("\n"); 
		query.append("                               ,X.SEQ" ).append("\n"); 
		query.append("                         FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                             ,REPOIN_VVD1 Z " ).append("\n"); 
		query.append("                             ,REPO_IN_WEEK X       " ).append("\n"); 
		query.append("                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   " ).append("\n"); 
		query.append("                         AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                    SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                    WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                             " ).append("\n"); 
		query.append("                                                                     )" ).append("\n"); 
		query.append("                                               )    " ).append("\n"); 
		query.append("                         AND   A.CLPT_IND_SEQ = '1'		                                                                  " ).append("\n"); 
		query.append("                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  " ).append("\n"); 
		query.append("	                     AND   X.SEQ = 1  -- 1주차" ).append("\n"); 
		query.append("                     ) Z                              " ).append("\n"); 
		query.append("                WHERE V.VSL_CD			= P.VSL_CD" ).append("\n"); 
		query.append("                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                AND	  'D'				= P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                AND   P.VSL_CD          = Z.VSL_CD" ).append("\n"); 
		query.append("                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   P.PORT_CD         = Z.VPS_PORT_CD  " ).append("\n"); 
		query.append("            ) A," ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("                SELECT VSL_CD" ).append("\n"); 
		query.append("                      ,SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,VPS_PORT_CD" ).append("\n"); 
		query.append("                      ,DIV" ).append("\n"); 
		query.append("                      ,SEQ" ).append("\n"); 
		query.append("                FROM " ).append("\n"); 
		query.append("                (    " ).append("\n"); 
		query.append("                    -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                          ,B.VSL_CD" ).append("\n"); 
		query.append("                          ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                          ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     " ).append("\n"); 
		query.append("                          ,X.SEQ" ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                    FROM EQR_MTY_COD_VVD A" ).append("\n"); 
		query.append("                        ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE B.VSL_CD     = A.VSL_CD(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                    AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                             SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                             WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                            " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("	                AND   X.SEQ = 1  -- 1주차" ).append("\n"); 
		query.append("                    AND   B.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("                ) " ).append("\n"); 
		query.append("                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("            ) B" ).append("\n"); 
		query.append("            WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("            AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("            AND   A.DIV        = B.DIV   " ).append("\n"); 
		query.append("            AND   A.SEQ        = B.SEQ   " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		#elseif(${curr_flag} =='T')  -- 입력주차가 현재주차이고 첫번째주차일때" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		  SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ" ).append("\n"); 
		query.append("                ,A.FCAST_YRWK" ).append("\n"); 
		query.append("                ,D2_QTY" ).append("\n"); 
		query.append("                ,D4_QTY                  " ).append("\n"); 
		query.append("                ,D5_QTY                  " ).append("\n"); 
		query.append("                ,D7_QTY                  " ).append("\n"); 
		query.append("                ,R2_QTY                  " ).append("\n"); 
		query.append("                ,R5_QTY                  " ).append("\n"); 
		query.append("                ,R9_QTY                  " ).append("\n"); 
		query.append("                ,O2_QTY                  " ).append("\n"); 
		query.append("                ,O4_QTY                  " ).append("\n"); 
		query.append("                ,S2_QTY                  " ).append("\n"); 
		query.append("                ,S4_QTY                  " ).append("\n"); 
		query.append("                ,F2_QTY                  " ).append("\n"); 
		query.append("                ,F4_QTY                  " ).append("\n"); 
		query.append("                ,F5_QTY                  " ).append("\n"); 
		query.append("                ,A2_QTY                  " ).append("\n"); 
		query.append("                ,A4_QTY                  " ).append("\n"); 
		query.append("                ,O5_QTY   " ).append("\n"); 
		query.append("           FROM" ).append("\n"); 
		query.append("           (                       " ).append("\n"); 
		query.append("                SELECT B.SEQ" ).append("\n"); 
		query.append("                      ,@[fcast_yrwk] FCAST_YRWK" ).append("\n"); 
		query.append("                      ,B.VSL_CD" ).append("\n"); 
		query.append("                      ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,B.SLAN_CD" ).append("\n"); 
		query.append("                      ,B.YD_CD                   " ).append("\n"); 
		query.append("                      -- RI 수량 - VD 수량 빼기(결과값이 0보다 작으면 0처리)                                                                 " ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) END D2_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) END D4_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) END D5_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) END D7_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) END R2_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) END R5_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) END R9_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) END O2_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) END O4_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) END S2_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) END S4_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) END F2_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) END F4_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) END F5_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) END A2_QTY" ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) END A4_QTY                                   " ).append("\n"); 
		query.append("                     ,CASE WHEN SUM(NVL(B.O5_QTY,0)-NVL(A.O5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O5_QTY,0)-NVL(A.O5_QTY,0)) END O5_QTY      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                            " ).append("\n"); 
		query.append("                FROM" ).append("\n"); 
		query.append("                (   " ).append("\n"); 
		query.append("                    -- MVMT VD  " ).append("\n"); 
		query.append("                    SELECT A.VSL_CD" ).append("\n"); 
		query.append("                          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                          ,A.VSL_LANE_CD " ).append("\n"); 
		query.append("                          ,A.YD_CD" ).append("\n"); 
		query.append("                          ,A.ETD_DT ETB_DT" ).append("\n"); 
		query.append("                          ,X.SEQ" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY)),0) D2_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY)),0) D4_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY)),0) D5_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY)),0) D7_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY)),0) R2_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY)),0) R5_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY)),0) R9_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY)),0) O2_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY)),0) S2_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY)),0) O4_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY)),0) S4_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY)),0) F2_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY)),0) A2_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY)),0) F4_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY)),0) A4_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY)),0) F5_QTY" ).append("\n"); 
		query.append("                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY)),0) O5_QTY " ).append("\n"); 
		query.append("                                                         " ).append("\n"); 
		query.append("                          ,'VD' FLAG                  " ).append("\n"); 
		query.append("                    FROM EQR_MTY_BAL_RPT_DCHG_SNAP A       " ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X                                            " ).append("\n"); 
		query.append("                    WHERE A.ETD_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE((SELECT TO_CHAR(NEXT_DAY(SYSDATE, 2)-7, 'YYYYMMDD') FROM DUAL), 'YYYYMMDD')+0.99999  -- LCC별 시작일부터 이번주 월요일까지                  " ).append("\n"); 
		query.append("		        	AND   X.SEQ = 1  -- 1주차         " ).append("\n"); 
		query.append("		        	GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                            ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                            ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                            ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("                            ,A.YD_CD" ).append("\n"); 
		query.append("                            ,A.ETD_DT" ).append("\n"); 
		query.append("                            ,X.SEQ" ).append("\n"); 
		query.append("                ) A" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("           ,    ( " ).append("\n"); 
		query.append("                    -- COD SIMULATION 첫번째 주차 (SEQ = 1)           " ).append("\n"); 
		query.append("                    SELECT A.VSL_CD" ).append("\n"); 
		query.append("                          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                          ,A.SLAN_CD" ).append("\n"); 
		query.append("                          ,A.YD_CD" ).append("\n"); 
		query.append("                          ,A.ETB_DT" ).append("\n"); 
		query.append("                          ,A.SEQ" ).append("\n"); 
		query.append("                          ,SUM(A.D2_QTY) D2_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.D4_QTY) D4_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.D5_QTY) D5_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.D7_QTY) D7_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.R2_QTY) R2_QTY  " ).append("\n"); 
		query.append("                          ,SUM(A.R5_QTY) R5_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.R9_QTY) R9_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.O2_QTY) O2_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.S2_QTY) S2_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.O4_QTY) O4_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.S4_QTY) S4_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.F2_QTY) F2_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.A2_QTY) A2_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.F4_QTY) F4_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.A4_QTY) A4_QTY" ).append("\n"); 
		query.append("                          ,SUM(A.F5_QTY) F5_QTY    " ).append("\n"); 
		query.append("                          ,SUM(A.O5_QTY) O5_QTY" ).append("\n"); 
		query.append("                          ,'RI' FLAG" ).append("\n"); 
		query.append("                    FROM " ).append("\n"); 
		query.append("                    (                  " ).append("\n"); 
		query.append("                  " ).append("\n"); 
		query.append("                        -- BAY PLAN, I" ).append("\n"); 
		query.append("                        SELECT A.VSL_CD" ).append("\n"); 
		query.append("                              ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,B.SLAN_CD" ).append("\n"); 
		query.append("                              ,A.POD_CD" ).append("\n"); 
		query.append("                              ,B.YD_CD" ).append("\n"); 
		query.append("                              ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                              ,'I' DIV" ).append("\n"); 
		query.append("                              ,B.SEQ" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY" ).append("\n"); 
		query.append("                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY" ).append("\n"); 
		query.append("                        FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                        (" ).append("\n"); 
		query.append("                            SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ" ).append("\n"); 
		query.append("                            FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                                ,REPOIN_VVD1 Z" ).append("\n"); 
		query.append("                                ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                            WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                            AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                            AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)" ).append("\n"); 
		query.append("                            AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                    SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                    WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                         SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                         FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                                       #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                                     WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                                     WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #else -- 'S' " ).append("\n"); 
		query.append("	                                                                     WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #end                                                                                                          " ).append("\n"); 
		query.append("                                                                     )" ).append("\n"); 
		query.append("                                                 )" ).append("\n"); 
		query.append("                            AND   A.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                            AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 " ).append("\n"); 
		query.append("			                AND   X.SEQ = 1  -- 1주차" ).append("\n"); 
		query.append("                        ) B" ).append("\n"); 
		query.append("                        WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)" ).append("\n"); 
		query.append("                        AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER" ).append("\n"); 
		query.append("                        AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN" ).append("\n"); 
		query.append("                        AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                        AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                        GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                                ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                ,B.SLAN_CD" ).append("\n"); 
		query.append("                                ,A.POD_CD" ).append("\n"); 
		query.append("                                ,B.YD_CD" ).append("\n"); 
		query.append("                                ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                                ,B.SEQ" ).append("\n"); 
		query.append("                                " ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                        -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                        SELECT Z.VSL_CD" ).append("\n"); 
		query.append("                              ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,Z.SLAN_CD" ).append("\n"); 
		query.append("                              ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                              ,Z.YD_CD" ).append("\n"); 
		query.append("                              ,Z.ETB_DT" ).append("\n"); 
		query.append("                              ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                              ,Z.SEQ" ).append("\n"); 
		query.append("                              ,P.D2_QTY" ).append("\n"); 
		query.append("                              ,P.D4_QTY" ).append("\n"); 
		query.append("                              ,P.D5_QTY" ).append("\n"); 
		query.append("                              ,P.D7_QTY" ).append("\n"); 
		query.append("                              ,P.R2_QTY" ).append("\n"); 
		query.append("                              ,P.R5_QTY" ).append("\n"); 
		query.append("                              ,P.R9_QTY" ).append("\n"); 
		query.append("                              ,P.O2_QTY" ).append("\n"); 
		query.append("                              ,P.S2_QTY" ).append("\n"); 
		query.append("                              ,P.O4_QTY" ).append("\n"); 
		query.append("                              ,P.S4_QTY" ).append("\n"); 
		query.append("                              ,P.F2_QTY" ).append("\n"); 
		query.append("                              ,P.A2_QTY" ).append("\n"); 
		query.append("                              ,P.F4_QTY" ).append("\n"); 
		query.append("                              ,P.A4_QTY" ).append("\n"); 
		query.append("                              ,P.F5_QTY" ).append("\n"); 
		query.append("                              ,P.O5_QTY" ).append("\n"); 
		query.append("                        FROM EQR_MTY_COD_VVD  V," ).append("\n"); 
		query.append("                             EQR_MTY_COD_PORT P," ).append("\n"); 
		query.append("                             (" ).append("\n"); 
		query.append("                                 SELECT A.VSL_CD" ).append("\n"); 
		query.append("                                       ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                                       ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                                       ,A.SLAN_CD" ).append("\n"); 
		query.append("                                       ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                                       ,A.YD_CD" ).append("\n"); 
		query.append("                                       ,A.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                                       ,X.WEEK" ).append("\n"); 
		query.append("                                       ,X.SEQ" ).append("\n"); 
		query.append("                                 FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                                     ,REPOIN_VVD1 Z " ).append("\n"); 
		query.append("                                     ,REPO_IN_WEEK X       " ).append("\n"); 
		query.append("                                 WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                                 AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                                 AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   " ).append("\n"); 
		query.append("                                 AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                            SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                            WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                         SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                         FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                                       #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                                     WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                                     WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #else -- 'S' " ).append("\n"); 
		query.append("	                                                                     WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #end                                                                                                             " ).append("\n"); 
		query.append("                                                                             )" ).append("\n"); 
		query.append("                                                       )    " ).append("\n"); 
		query.append("                                 AND   A.CLPT_IND_SEQ = '1'		                                                                  " ).append("\n"); 
		query.append("                                 AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  " ).append("\n"); 
		query.append("	                             AND   X.SEQ = 1  -- 1주차" ).append("\n"); 
		query.append("                             ) Z                              " ).append("\n"); 
		query.append("                        WHERE V.VSL_CD			= P.VSL_CD" ).append("\n"); 
		query.append("                        AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                        AND	  'D'				= P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                        AND   P.VSL_CD          = Z.VSL_CD" ).append("\n"); 
		query.append("                        AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND   P.PORT_CD         = Z.VPS_PORT_CD  " ).append("\n"); 
		query.append("                    ) A," ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                        SELECT VSL_CD" ).append("\n"); 
		query.append("                              ,SKD_VOY_NO" ).append("\n"); 
		query.append("                              ,SKD_DIR_CD" ).append("\n"); 
		query.append("                              ,VPS_PORT_CD" ).append("\n"); 
		query.append("                              ,DIV" ).append("\n"); 
		query.append("                              ,SEQ" ).append("\n"); 
		query.append("                        FROM " ).append("\n"); 
		query.append("                        (    " ).append("\n"); 
		query.append("                            -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                            SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                                  ,B.VSL_CD" ).append("\n"); 
		query.append("                                  ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                                  ,NVL(A.COD_CFM_STS_CD,'I') DIV     " ).append("\n"); 
		query.append("                                  ,X.SEQ" ).append("\n"); 
		query.append("                                                       " ).append("\n"); 
		query.append("                            FROM EQR_MTY_COD_VVD A" ).append("\n"); 
		query.append("                                ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                                ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                            WHERE B.VSL_CD     = A.VSL_CD(+)" ).append("\n"); 
		query.append("                            AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                            AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                            AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                     SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                     WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                         SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                         FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                                       #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                                     WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                                     WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #else -- 'S' " ).append("\n"); 
		query.append("	                                                                     WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                                       #end                                                                                            " ).append("\n"); 
		query.append("                                                                     )" ).append("\n"); 
		query.append("                                                   )" ).append("\n"); 
		query.append("                            AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("	                        AND   X.SEQ = 1  -- 1주차" ).append("\n"); 
		query.append("                            AND   B.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                            AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("                        ) " ).append("\n"); 
		query.append("                        WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("                    ) B" ).append("\n"); 
		query.append("                    WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                    AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                    AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                    AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                    AND   A.DIV        = B.DIV   " ).append("\n"); 
		query.append("                    AND   A.SEQ        = B.SEQ   " ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                    GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                            ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                            ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                            ,A.SLAN_CD" ).append("\n"); 
		query.append("                            ,A.YD_CD" ).append("\n"); 
		query.append("                            ,A.ETB_DT" ).append("\n"); 
		query.append("                            ,A.SEQ                                                                        " ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("                WHERE  A.VSL_CD     (+) = B.VSL_CD" ).append("\n"); 
		query.append("                AND    A.SKD_VOY_NO (+) = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND    A.SKD_DIR_CD (+) = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND    A.VSL_LANE_CD(+) = B.SLAN_CD" ).append("\n"); 
		query.append("                AND    A.YD_CD      (+) = B.YD_CD" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                GROUP BY B.SEQ" ).append("\n"); 
		query.append("                        ,B.VSL_CD" ).append("\n"); 
		query.append("                        ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                        ,B.SLAN_CD" ).append("\n"); 
		query.append("                        ,B.YD_CD      " ).append("\n"); 
		query.append("			) A" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			UNION ALL" ).append("\n"); 
		query.append("            -- 2번째 주차 (SEQ = 2)           " ).append("\n"); 
		query.append("            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ" ).append("\n"); 
		query.append("                  ,@[fcast_yrwk] FCAST_YRWK" ).append("\n"); 
		query.append("                  ,A.D2_QTY" ).append("\n"); 
		query.append("                  ,A.D4_QTY" ).append("\n"); 
		query.append("                  ,A.D5_QTY" ).append("\n"); 
		query.append("                  ,A.D7_QTY" ).append("\n"); 
		query.append("                  ,A.R2_QTY  " ).append("\n"); 
		query.append("                  ,A.R5_QTY" ).append("\n"); 
		query.append("                  ,A.R9_QTY" ).append("\n"); 
		query.append("                  ,A.O2_QTY" ).append("\n"); 
		query.append("                  ,A.S2_QTY" ).append("\n"); 
		query.append("                  ,A.O4_QTY" ).append("\n"); 
		query.append("                  ,A.S4_QTY" ).append("\n"); 
		query.append("                  ,A.F2_QTY" ).append("\n"); 
		query.append("                  ,A.A2_QTY" ).append("\n"); 
		query.append("                  ,A.F4_QTY" ).append("\n"); 
		query.append("                  ,A.A4_QTY" ).append("\n"); 
		query.append("                  ,A.F5_QTY     " ).append("\n"); 
		query.append("                  ,A.O5_QTY" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            FROM " ).append("\n"); 
		query.append("            (       " ).append("\n"); 
		query.append("              " ).append("\n"); 
		query.append("                -- BAY PLAN, I" ).append("\n"); 
		query.append("                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                      ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,B.SLAN_CD" ).append("\n"); 
		query.append("                      ,A.POD_CD" ).append("\n"); 
		query.append("                      ,B.YD_CD" ).append("\n"); 
		query.append("                      ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                      ,'I' DIV" ).append("\n"); 
		query.append("                      ,B.SEQ" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY" ).append("\n"); 
		query.append("                FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                (" ).append("\n"); 
		query.append("                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ" ).append("\n"); 
		query.append("                    FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                        ,REPOIN_VVD2 Z" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)" ).append("\n"); 
		query.append("                    AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                            SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                            WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                          " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                    AND   A.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 " ).append("\n"); 
		query.append("			        AND   X.SEQ = 2  -- 2주차" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)" ).append("\n"); 
		query.append("                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER" ).append("\n"); 
		query.append("                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN" ).append("\n"); 
		query.append("                AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                        ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                        ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                        ,B.SLAN_CD" ).append("\n"); 
		query.append("                        ,A.POD_CD" ).append("\n"); 
		query.append("                        ,B.YD_CD" ).append("\n"); 
		query.append("                        ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                        ,B.SEQ" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                SELECT Z.VSL_CD" ).append("\n"); 
		query.append("                      ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,Z.SLAN_CD" ).append("\n"); 
		query.append("                      ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                      ,Z.YD_CD" ).append("\n"); 
		query.append("                      ,Z.ETB_DT" ).append("\n"); 
		query.append("                      ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                      ,Z.SEQ" ).append("\n"); 
		query.append("                      ,P.D2_QTY" ).append("\n"); 
		query.append("                      ,P.D4_QTY" ).append("\n"); 
		query.append("                      ,P.D5_QTY" ).append("\n"); 
		query.append("                      ,P.D7_QTY" ).append("\n"); 
		query.append("                      ,P.R2_QTY" ).append("\n"); 
		query.append("                      ,P.R5_QTY" ).append("\n"); 
		query.append("                      ,P.R9_QTY" ).append("\n"); 
		query.append("                      ,P.O2_QTY" ).append("\n"); 
		query.append("                      ,P.S2_QTY" ).append("\n"); 
		query.append("                      ,P.O4_QTY" ).append("\n"); 
		query.append("                      ,P.S4_QTY" ).append("\n"); 
		query.append("                      ,P.F2_QTY" ).append("\n"); 
		query.append("                      ,P.A2_QTY" ).append("\n"); 
		query.append("                      ,P.F4_QTY" ).append("\n"); 
		query.append("                      ,P.A4_QTY" ).append("\n"); 
		query.append("                      ,P.F5_QTY" ).append("\n"); 
		query.append("                      ,P.O5_QTY" ).append("\n"); 
		query.append("                FROM EQR_MTY_COD_VVD  V," ).append("\n"); 
		query.append("                     EQR_MTY_COD_PORT P," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                         SELECT A.VSL_CD" ).append("\n"); 
		query.append("                               ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                               ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                               ,A.SLAN_CD" ).append("\n"); 
		query.append("                               ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                               ,A.YD_CD" ).append("\n"); 
		query.append("                               ,A.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                               ,X.WEEK" ).append("\n"); 
		query.append("                               ,X.SEQ" ).append("\n"); 
		query.append("                         FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                             ,REPOIN_VVD2 Z " ).append("\n"); 
		query.append("                             ,REPO_IN_WEEK X       " ).append("\n"); 
		query.append("                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   " ).append("\n"); 
		query.append("                         AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                    SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                    WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                             " ).append("\n"); 
		query.append("                                                                     )" ).append("\n"); 
		query.append("                                               )    " ).append("\n"); 
		query.append("                         AND   A.CLPT_IND_SEQ = '1'		                                                                  " ).append("\n"); 
		query.append("                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  " ).append("\n"); 
		query.append("	                     AND   X.SEQ = 2  -- 2주차" ).append("\n"); 
		query.append("                     ) Z                              " ).append("\n"); 
		query.append("                WHERE V.VSL_CD			= P.VSL_CD" ).append("\n"); 
		query.append("                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                AND	  'D'				= P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                AND   P.VSL_CD          = Z.VSL_CD" ).append("\n"); 
		query.append("                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   P.PORT_CD         = Z.VPS_PORT_CD  " ).append("\n"); 
		query.append("            ) A," ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("                SELECT VSL_CD" ).append("\n"); 
		query.append("                      ,SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,VPS_PORT_CD" ).append("\n"); 
		query.append("                      ,DIV" ).append("\n"); 
		query.append("                      ,SEQ" ).append("\n"); 
		query.append("                FROM " ).append("\n"); 
		query.append("                (    " ).append("\n"); 
		query.append("                    -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                          ,B.VSL_CD" ).append("\n"); 
		query.append("                          ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                          ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     " ).append("\n"); 
		query.append("                          ,X.SEQ" ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                    FROM EQR_MTY_COD_VVD A" ).append("\n"); 
		query.append("                        ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE B.VSL_CD     = A.VSL_CD(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                    AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                             SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                             WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                            " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("	                AND   X.SEQ = 2  -- 2주차" ).append("\n"); 
		query.append("                    AND   B.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("                ) " ).append("\n"); 
		query.append("                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("            ) B" ).append("\n"); 
		query.append("            WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("            AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("            AND   A.DIV        = B.DIV   " ).append("\n"); 
		query.append("            AND   A.SEQ        = B.SEQ          " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			UNION ALL" ).append("\n"); 
		query.append("            -- 3번째 주차 (SEQ = 3)           " ).append("\n"); 
		query.append("            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ" ).append("\n"); 
		query.append("                  ,@[fcast_yrwk] FCAST_YRWK" ).append("\n"); 
		query.append("                  ,A.D2_QTY" ).append("\n"); 
		query.append("                  ,A.D4_QTY" ).append("\n"); 
		query.append("                  ,A.D5_QTY" ).append("\n"); 
		query.append("                  ,A.D7_QTY" ).append("\n"); 
		query.append("                  ,A.R2_QTY  " ).append("\n"); 
		query.append("                  ,A.R5_QTY" ).append("\n"); 
		query.append("                  ,A.R9_QTY" ).append("\n"); 
		query.append("                  ,A.O2_QTY" ).append("\n"); 
		query.append("                  ,A.S2_QTY" ).append("\n"); 
		query.append("                  ,A.O4_QTY" ).append("\n"); 
		query.append("                  ,A.S4_QTY" ).append("\n"); 
		query.append("                  ,A.F2_QTY" ).append("\n"); 
		query.append("                  ,A.A2_QTY" ).append("\n"); 
		query.append("                  ,A.F4_QTY" ).append("\n"); 
		query.append("                  ,A.A4_QTY" ).append("\n"); 
		query.append("                  ,A.F5_QTY     " ).append("\n"); 
		query.append("                  ,A.O5_QTY" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            FROM " ).append("\n"); 
		query.append("            (       " ).append("\n"); 
		query.append("              " ).append("\n"); 
		query.append("                -- BAY PLAN, I" ).append("\n"); 
		query.append("                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                      ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,B.SLAN_CD" ).append("\n"); 
		query.append("                      ,A.POD_CD" ).append("\n"); 
		query.append("                      ,B.YD_CD" ).append("\n"); 
		query.append("                      ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                      ,'I' DIV" ).append("\n"); 
		query.append("                      ,B.SEQ" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY" ).append("\n"); 
		query.append("                FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                (" ).append("\n"); 
		query.append("                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ" ).append("\n"); 
		query.append("                    FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                        ,REPOIN_VVD3 Z" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)" ).append("\n"); 
		query.append("                    AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                            SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                            WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                          " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                    AND   A.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 " ).append("\n"); 
		query.append("			        AND   X.SEQ = 3  -- 3주차" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)" ).append("\n"); 
		query.append("                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER" ).append("\n"); 
		query.append("                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN" ).append("\n"); 
		query.append("                AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                        ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                        ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                        ,B.SLAN_CD" ).append("\n"); 
		query.append("                        ,A.POD_CD" ).append("\n"); 
		query.append("                        ,B.YD_CD" ).append("\n"); 
		query.append("                        ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                        ,B.SEQ" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                SELECT Z.VSL_CD" ).append("\n"); 
		query.append("                      ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,Z.SLAN_CD" ).append("\n"); 
		query.append("                      ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                      ,Z.YD_CD" ).append("\n"); 
		query.append("                      ,Z.ETB_DT" ).append("\n"); 
		query.append("                      ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                      ,Z.SEQ" ).append("\n"); 
		query.append("                      ,P.D2_QTY" ).append("\n"); 
		query.append("                      ,P.D4_QTY" ).append("\n"); 
		query.append("                      ,P.D5_QTY" ).append("\n"); 
		query.append("                      ,P.D7_QTY" ).append("\n"); 
		query.append("                      ,P.R2_QTY" ).append("\n"); 
		query.append("                      ,P.R5_QTY" ).append("\n"); 
		query.append("                      ,P.R9_QTY" ).append("\n"); 
		query.append("                      ,P.O2_QTY" ).append("\n"); 
		query.append("                      ,P.S2_QTY" ).append("\n"); 
		query.append("                      ,P.O4_QTY" ).append("\n"); 
		query.append("                      ,P.S4_QTY" ).append("\n"); 
		query.append("                      ,P.F2_QTY" ).append("\n"); 
		query.append("                      ,P.A2_QTY" ).append("\n"); 
		query.append("                      ,P.F4_QTY" ).append("\n"); 
		query.append("                      ,P.A4_QTY" ).append("\n"); 
		query.append("                      ,P.F5_QTY" ).append("\n"); 
		query.append("                      ,P.O5_QTY" ).append("\n"); 
		query.append("                FROM EQR_MTY_COD_VVD  V," ).append("\n"); 
		query.append("                     EQR_MTY_COD_PORT P," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                         SELECT A.VSL_CD" ).append("\n"); 
		query.append("                               ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                               ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                               ,A.SLAN_CD" ).append("\n"); 
		query.append("                               ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                               ,A.YD_CD" ).append("\n"); 
		query.append("                               ,A.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                               ,X.WEEK" ).append("\n"); 
		query.append("                               ,X.SEQ" ).append("\n"); 
		query.append("                         FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                             ,REPOIN_VVD3 Z " ).append("\n"); 
		query.append("                             ,REPO_IN_WEEK X       " ).append("\n"); 
		query.append("                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   " ).append("\n"); 
		query.append("                         AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                    SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                    WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                             " ).append("\n"); 
		query.append("                                                                     )" ).append("\n"); 
		query.append("                                               )    " ).append("\n"); 
		query.append("                         AND   A.CLPT_IND_SEQ = '1'		                                                                  " ).append("\n"); 
		query.append("                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  " ).append("\n"); 
		query.append("	                     AND   X.SEQ = 3  -- 2주차" ).append("\n"); 
		query.append("                     ) Z                              " ).append("\n"); 
		query.append("                WHERE V.VSL_CD			= P.VSL_CD" ).append("\n"); 
		query.append("                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                AND	  'D'				= P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                AND   P.VSL_CD          = Z.VSL_CD" ).append("\n"); 
		query.append("                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   P.PORT_CD         = Z.VPS_PORT_CD  " ).append("\n"); 
		query.append("            ) A," ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("                SELECT VSL_CD" ).append("\n"); 
		query.append("                      ,SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,VPS_PORT_CD" ).append("\n"); 
		query.append("                      ,DIV" ).append("\n"); 
		query.append("                      ,SEQ" ).append("\n"); 
		query.append("                FROM " ).append("\n"); 
		query.append("                (    " ).append("\n"); 
		query.append("                    -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                          ,B.VSL_CD" ).append("\n"); 
		query.append("                          ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                          ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     " ).append("\n"); 
		query.append("                          ,X.SEQ" ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                    FROM EQR_MTY_COD_VVD A" ).append("\n"); 
		query.append("                        ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE B.VSL_CD     = A.VSL_CD(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                    AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                             SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                             WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                            " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("	                AND   X.SEQ = 3  -- 3주차" ).append("\n"); 
		query.append("                    AND   B.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("                ) " ).append("\n"); 
		query.append("                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("            ) B" ).append("\n"); 
		query.append("            WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("            AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("            AND   A.DIV        = B.DIV   " ).append("\n"); 
		query.append("            AND   A.SEQ        = B.SEQ      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			UNION ALL" ).append("\n"); 
		query.append("            -- 4번째 주차 (SEQ = 4)           " ).append("\n"); 
		query.append("            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ" ).append("\n"); 
		query.append("                  ,@[fcast_yrwk] FCAST_YRWK" ).append("\n"); 
		query.append("                  ,A.D2_QTY" ).append("\n"); 
		query.append("                  ,A.D4_QTY" ).append("\n"); 
		query.append("                  ,A.D5_QTY" ).append("\n"); 
		query.append("                  ,A.D7_QTY" ).append("\n"); 
		query.append("                  ,A.R2_QTY  " ).append("\n"); 
		query.append("                  ,A.R5_QTY" ).append("\n"); 
		query.append("                  ,A.R9_QTY" ).append("\n"); 
		query.append("                  ,A.O2_QTY" ).append("\n"); 
		query.append("                  ,A.S2_QTY" ).append("\n"); 
		query.append("                  ,A.O4_QTY" ).append("\n"); 
		query.append("                  ,A.S4_QTY" ).append("\n"); 
		query.append("                  ,A.F2_QTY" ).append("\n"); 
		query.append("                  ,A.A2_QTY" ).append("\n"); 
		query.append("                  ,A.F4_QTY" ).append("\n"); 
		query.append("                  ,A.A4_QTY" ).append("\n"); 
		query.append("                  ,A.F5_QTY     " ).append("\n"); 
		query.append("                  ,A.O5_QTY" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            FROM " ).append("\n"); 
		query.append("            (       " ).append("\n"); 
		query.append("              " ).append("\n"); 
		query.append("                -- BAY PLAN, I" ).append("\n"); 
		query.append("                SELECT A.VSL_CD" ).append("\n"); 
		query.append("                      ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,B.SLAN_CD" ).append("\n"); 
		query.append("                      ,A.POD_CD" ).append("\n"); 
		query.append("                      ,B.YD_CD" ).append("\n"); 
		query.append("                      ,B.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                      ,'I' DIV" ).append("\n"); 
		query.append("                      ,B.SEQ" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY" ).append("\n"); 
		query.append("                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY" ).append("\n"); 
		query.append("                FROM OPF_BAY_PLN_LDIS A," ).append("\n"); 
		query.append("                (" ).append("\n"); 
		query.append("                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ" ).append("\n"); 
		query.append("                    FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                        ,REPOIN_VVD4 Z" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)" ).append("\n"); 
		query.append("                    AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                            SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                            WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                          " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                    AND   A.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 " ).append("\n"); 
		query.append("			        AND   X.SEQ = 4  -- 4주차" ).append("\n"); 
		query.append("                ) B" ).append("\n"); 
		query.append("                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)" ).append("\n"); 
		query.append("                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER" ).append("\n"); 
		query.append("                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN" ).append("\n"); 
		query.append("                AND   A.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   A.POD_CD           = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                GROUP BY A.VSL_CD" ).append("\n"); 
		query.append("                        ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                        ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                        ,B.SLAN_CD" ).append("\n"); 
		query.append("                        ,A.POD_CD" ).append("\n"); 
		query.append("                        ,B.YD_CD" ).append("\n"); 
		query.append("                        ,B.VPS_ETB_DT" ).append("\n"); 
		query.append("                        ,B.SEQ" ).append("\n"); 
		query.append("                        " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                -- SIMULATION, CONFIRMATION, BASIC " ).append("\n"); 
		query.append("                SELECT Z.VSL_CD" ).append("\n"); 
		query.append("                      ,Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,Z.SLAN_CD" ).append("\n"); 
		query.append("                      ,Z.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("                      ,Z.YD_CD" ).append("\n"); 
		query.append("                      ,Z.ETB_DT" ).append("\n"); 
		query.append("                      ,P.COD_CFM_DIV_CD DIV" ).append("\n"); 
		query.append("                      ,Z.SEQ" ).append("\n"); 
		query.append("                      ,P.D2_QTY" ).append("\n"); 
		query.append("                      ,P.D4_QTY" ).append("\n"); 
		query.append("                      ,P.D5_QTY" ).append("\n"); 
		query.append("                      ,P.D7_QTY" ).append("\n"); 
		query.append("                      ,P.R2_QTY" ).append("\n"); 
		query.append("                      ,P.R5_QTY" ).append("\n"); 
		query.append("                      ,P.R9_QTY" ).append("\n"); 
		query.append("                      ,P.O2_QTY" ).append("\n"); 
		query.append("                      ,P.S2_QTY" ).append("\n"); 
		query.append("                      ,P.O4_QTY" ).append("\n"); 
		query.append("                      ,P.S4_QTY" ).append("\n"); 
		query.append("                      ,P.F2_QTY" ).append("\n"); 
		query.append("                      ,P.A2_QTY" ).append("\n"); 
		query.append("                      ,P.F4_QTY" ).append("\n"); 
		query.append("                      ,P.A4_QTY" ).append("\n"); 
		query.append("                      ,P.F5_QTY" ).append("\n"); 
		query.append("                      ,P.O5_QTY" ).append("\n"); 
		query.append("                FROM EQR_MTY_COD_VVD  V," ).append("\n"); 
		query.append("                     EQR_MTY_COD_PORT P," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                         SELECT A.VSL_CD" ).append("\n"); 
		query.append("                               ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                               ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                               ,A.SLAN_CD" ).append("\n"); 
		query.append("                               ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                               ,A.YD_CD" ).append("\n"); 
		query.append("                               ,A.VPS_ETB_DT ETB_DT" ).append("\n"); 
		query.append("                               ,X.WEEK" ).append("\n"); 
		query.append("                               ,X.SEQ" ).append("\n"); 
		query.append("                         FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                             ,REPOIN_VVD4 Z " ).append("\n"); 
		query.append("                             ,REPO_IN_WEEK X       " ).append("\n"); 
		query.append("                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)" ).append("\n"); 
		query.append("                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   " ).append("\n"); 
		query.append("                         AND   A.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                                    SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                                    WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                                             " ).append("\n"); 
		query.append("                                                                     )" ).append("\n"); 
		query.append("                                               )    " ).append("\n"); 
		query.append("                         AND   A.CLPT_IND_SEQ = '1'		                                                                  " ).append("\n"); 
		query.append("                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  " ).append("\n"); 
		query.append("	                     AND   X.SEQ = 4  -- 4주차" ).append("\n"); 
		query.append("                     ) Z                              " ).append("\n"); 
		query.append("                WHERE V.VSL_CD			= P.VSL_CD" ).append("\n"); 
		query.append("                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD" ).append("\n"); 
		query.append("                AND	  'D'				= P.LODG_DCHG_DIV_CD" ).append("\n"); 
		query.append("                AND   P.VSL_CD          = Z.VSL_CD" ).append("\n"); 
		query.append("                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND   P.PORT_CD         = Z.VPS_PORT_CD  " ).append("\n"); 
		query.append("            ) A," ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("                SELECT VSL_CD" ).append("\n"); 
		query.append("                      ,SKD_VOY_NO" ).append("\n"); 
		query.append("                      ,SKD_DIR_CD" ).append("\n"); 
		query.append("                      ,VPS_PORT_CD" ).append("\n"); 
		query.append("                      ,DIV" ).append("\n"); 
		query.append("                      ,SEQ" ).append("\n"); 
		query.append("                FROM " ).append("\n"); 
		query.append("                (    " ).append("\n"); 
		query.append("                    -- VVD 별 I/S/C 확인" ).append("\n"); 
		query.append("                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN" ).append("\n"); 
		query.append("                          ,B.VSL_CD" ).append("\n"); 
		query.append("                          ,B.SKD_VOY_NO" ).append("\n"); 
		query.append("                          ,B.SKD_DIR_CD" ).append("\n"); 
		query.append("                          ,B.VPS_PORT_CD" ).append("\n"); 
		query.append("                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     " ).append("\n"); 
		query.append("                          ,X.SEQ" ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                    FROM EQR_MTY_COD_VVD A" ).append("\n"); 
		query.append("                        ,VSK_VSL_PORT_SKD B" ).append("\n"); 
		query.append("                        ,REPO_IN_WEEK X" ).append("\n"); 
		query.append("                    WHERE B.VSL_CD     = A.VSL_CD(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                    AND   B.VPS_PORT_CD IN (" ).append("\n"); 
		query.append("                                             SELECT LOC_CD FROM MDM_LOCATION " ).append("\n"); 
		query.append("                                             WHERE SCC_CD IN ( " ).append("\n"); 
		query.append("                                                                 SELECT SCC_CD " ).append("\n"); 
		query.append("                                                                 FROM MDM_EQ_ORZ_CHT " ).append("\n"); 
		query.append("                                                               #if (${loc_grp_cd} == 'E') " ).append("\n"); 
		query.append("	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #elseif (${loc_grp_cd} == 'L') " ).append("\n"); 
		query.append("	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #else -- 'S' " ).append("\n"); 
		query.append("	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)" ).append("\n"); 
		query.append("                                                               #end                                                                                            " ).append("\n"); 
		query.append("                                                             )" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("	                AND   X.SEQ = 4  -- 4주차" ).append("\n"); 
		query.append("                    AND   B.CLPT_IND_SEQ = '1'" ).append("\n"); 
		query.append("                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외" ).append("\n"); 
		query.append("                ) " ).append("\n"); 
		query.append("                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   " ).append("\n"); 
		query.append("            ) B" ).append("\n"); 
		query.append("            WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("            AND   A.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND   A.POD_CD     = B.VPS_PORT_CD" ).append("\n"); 
		query.append("            AND   A.DIV        = B.DIV   " ).append("\n"); 
		query.append("            AND   A.SEQ        = B.SEQ      " ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("            SELECT DECODE(LEVEL,1,5,2,17,3,28,4,39) DP_SEQ" ).append("\n"); 
		query.append("                  ,@[fcast_yrwk] FCAST_YRWK" ).append("\n"); 
		query.append("                  ,0 D2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 D4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 D5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 D7_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 R2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 R5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 R9_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 O2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 S2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 O4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 S4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 F2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 A2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 F4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 A4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 F5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,0 O5_FCAST_QTY" ).append("\n"); 
		query.append("            FROM DUAL" ).append("\n"); 
		query.append("            CONNECT BY LEVEL <=4" ).append("\n"); 
		query.append("        ) A" ).append("\n"); 
		query.append("        GROUP BY DP_SEQ, FCAST_YRWK" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- REPO OUT (EQR_MTY_BAL_RPT_REPO_OUT)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT DECODE(B.SEQ,1,10,2,21,3,32,4,43) DP_SEQ" ).append("\n"); 
		query.append("              ,'Demand', 'Repo Out', B.WEEK FCAST_YRWK0, 1" ).append("\n"); 
		query.append("              ,NVL(A.D2_QTY,0) D2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.D4_QTY,0) D4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.D5_QTY,0) D5_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.D7_QTY,0) D7_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.R2_QTY,0) R2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.R5_QTY,0) R5_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.R9_QTY,0) R9_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.O2_QTY,0) O2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.S2_QTY,0) S2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.O4_QTY,0) O4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.S4_QTY,0) S4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.F2_QTY,0) F2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.A2_QTY,0) A2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.F4_QTY,0) F4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.A4_QTY,0) A4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.F5_QTY,0) F5_FCAST_QTY " ).append("\n"); 
		query.append("              ,NVL(A.O5_QTY,0) O5_FCAST_QTY " ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT /*+ ordered use_nl(D Y A) */  " ).append("\n"); 
		query.append("                   A.FCAST_YRWK" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D2_FCAST_QTY),0) D2_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D4_FCAST_QTY),0) D4_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D5_FCAST_QTY),0) D5_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D7_FCAST_QTY),0) D7_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.R2_FCAST_QTY),0) R2_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.R5_FCAST_QTY),0) R5_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.R9_FCAST_QTY),0) R9_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.O2_FCAST_QTY),0) O2_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.S2_FCAST_QTY),0) S2_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.O4_FCAST_QTY),0) O4_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.S4_FCAST_QTY),0) S4_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.F2_FCAST_QTY),0) F2_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.A2_FCAST_QTY),0) A2_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.F4_FCAST_QTY),0) F4_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.A4_FCAST_QTY),0) A4_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.F5_FCAST_QTY),0) F5_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.O5_FCAST_QTY),0) O5_QTY" ).append("\n"); 
		query.append("            FROM LV_YD_LIST Y" ).append("\n"); 
		query.append("                ,EQR_MTY_BAL_RPT_REPO_OUT A" ).append("\n"); 
		query.append("                ,(" ).append("\n"); 
		query.append("                     SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ " ).append("\n"); 
		query.append("                            ROWNUM AS SEQ,PLN_YR||PLN_WK, WK_ST_DT, WK_END_DT, @[fcast_yrwk] FCAST_YRWK , @[loc_cd] LOC_CD" ).append("\n"); 
		query.append("                     FROM EQR_WK_PRD A" ).append("\n"); 
		query.append("                     WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]" ).append("\n"); 
		query.append("                     AND   PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)" ).append("\n"); 
		query.append("                     AND   ROWNUM <=4" ).append("\n"); 
		query.append("                  ) D" ).append("\n"); 
		query.append("            WHERE A.FM_ETD_DT BETWEEN TO_DATE(D.WK_ST_DT,'YYYYMMDD') AND TO_DATE(D.WK_END_DT,'YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("            AND   A.INP_YRWK = (SELECT INP_YRWK FROM LV_DUMMY_ITEM WHERE TP_CD=1)" ).append("\n"); 
		query.append("            AND   A.FM_YD_CD = Y.YD_CD" ).append("\n"); 
		query.append("            AND   A.LOC_GRP_CD(+) = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)                     " ).append("\n"); 
		query.append("            GROUP BY A.FCAST_YRWK" ).append("\n"); 
		query.append("        ) A" ).append("\n"); 
		query.append("       ,(" ).append("\n"); 
		query.append("            SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ " ).append("\n"); 
		query.append("                   ROWNUM AS SEQ,PLN_YR||PLN_WK WEEK, WK_ST_DT, WK_END_DT, @[fcast_yrwk] FCAST_YRWK , @[loc_cd] LOC_CD" ).append("\n"); 
		query.append("            FROM EQR_WK_PRD A" ).append("\n"); 
		query.append("            WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]" ).append("\n"); 
		query.append("            AND   PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)" ).append("\n"); 
		query.append("            AND   ROWNUM <=4" ).append("\n"); 
		query.append("         ) B   " ).append("\n"); 
		query.append("         WHERE A.FCAST_YRWK(+) = B.WEEK " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- OFF-HIRE (EQR_MTY_BAL_RPT, TYPE_CD = 5 로 추출)" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT  DECODE(B.SEQ,1,11,2,22,3,33,4,44) DP_SEQ" ).append("\n"); 
		query.append("              ,'Demand', 'Off-hire', B.WEEK FCAST_YRWK0, 5 TP_CD" ).append("\n"); 
		query.append("              ,NVL(A.D2_FCAST_QTY,0) D2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.D4_FCAST_QTY,0) D4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.D5_FCAST_QTY,0) D5_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.D7_FCAST_QTY,0) D7_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.R2_FCAST_QTY,0) R2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.R5_FCAST_QTY,0) R5_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.R9_FCAST_QTY,0) R9_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.O2_FCAST_QTY,0) O2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.S2_FCAST_QTY,0) S2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.O4_FCAST_QTY,0) O4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.S4_FCAST_QTY,0) S4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.F2_FCAST_QTY,0) F2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.A2_FCAST_QTY,0) A2_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.F4_FCAST_QTY,0) F4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.A4_FCAST_QTY,0) A4_FCAST_QTY" ).append("\n"); 
		query.append("              ,NVL(A.F5_FCAST_QTY,0) F5_FCAST_QTY  " ).append("\n"); 
		query.append("              ,NVL(A.O5_FCAST_QTY,0) O5_FCAST_QTY  " ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                   A.FCAST_YRWK" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D2_FCAST_QTY),0) D2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D4_FCAST_QTY),0) D4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D5_FCAST_QTY),0) D5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.D7_FCAST_QTY),0) D7_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.R2_FCAST_QTY),0) R2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.R5_FCAST_QTY),0) R5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.R9_FCAST_QTY),0) R9_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.O2_FCAST_QTY),0) O2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.S2_FCAST_QTY),0) S2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.O4_FCAST_QTY),0) O4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.S4_FCAST_QTY),0) S4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.F2_FCAST_QTY),0) F2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.A2_FCAST_QTY),0) A2_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.F4_FCAST_QTY),0) F4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.A4_FCAST_QTY),0) A4_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.F5_FCAST_QTY),0) F5_FCAST_QTY" ).append("\n"); 
		query.append("                  ,NVL(SUM(A.O5_FCAST_QTY),0) O5_FCAST_QTY" ).append("\n"); 
		query.append("            FROM EQR_MTY_BAL_RPT A" ).append("\n"); 
		query.append("            WHERE A.CO_CD         = 'H'" ).append("\n"); 
		query.append("            AND   A.LOC_GRP_CD    = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)            " ).append("\n"); 
		query.append("            AND   A.LOC_CD        = @[loc_cd]" ).append("\n"); 
		query.append("            AND   A.MTY_BAL_TP_CD = '5' -- OFF-HIRE " ).append("\n"); 
		query.append("            GROUP BY A.FCAST_YRWK " ).append("\n"); 
		query.append("        ) A            " ).append("\n"); 
		query.append("       ,(" ).append("\n"); 
		query.append("                     SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ " ).append("\n"); 
		query.append("                            ROWNUM AS SEQ" ).append("\n"); 
		query.append("                           ,A.PLN_YR||A.PLN_WK WEEK" ).append("\n"); 
		query.append("                           ,A.WK_ST_DT" ).append("\n"); 
		query.append("                           ,A.WK_END_DT" ).append("\n"); 
		query.append("                           ,@[fcast_yrwk] FCAST_YRWK " ).append("\n"); 
		query.append("                           ,@[loc_cd] LOC_CD" ).append("\n"); 
		query.append("                     FROM  EQR_WK_PRD A" ).append("\n"); 
		query.append("                     WHERE A.PLN_YR||A.PLN_WK >= @[fcast_yrwk]" ).append("\n"); 
		query.append("                     AND   A.PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)" ).append("\n"); 
		query.append("                     AND   ROWNUM <=4" ).append("\n"); 
		query.append("         ) B  " ).append("\n"); 
		query.append("         WHERE A.FCAST_YRWK(+) = B.WEEK" ).append("\n"); 
		query.append("       " ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("        -- MTY BALANCE" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT DECODE(WK_SEQ,1,13,2,24,3,35,4,46) DP_SEQ, 'MTY Balance', 'MTY Balance' ,'2000929' FCAST_YRWK0, 1" ).append("\n"); 
		query.append("                   ,0 D2_QTY" ).append("\n"); 
		query.append("                   ,0 D4_QTY" ).append("\n"); 
		query.append("                   ,0 D5_QTY" ).append("\n"); 
		query.append("                   ,0 D7_QTY" ).append("\n"); 
		query.append("                   ,0 R2_QTY" ).append("\n"); 
		query.append("                   ,0 R5_QTY" ).append("\n"); 
		query.append("                   ,0 R9_QTY" ).append("\n"); 
		query.append("                   ,0 O2_QTY" ).append("\n"); 
		query.append("                   ,0 S2_QTY" ).append("\n"); 
		query.append("                   ,0 O4_QTY" ).append("\n"); 
		query.append("                   ,0 S4_QTY" ).append("\n"); 
		query.append("                   ,0 F2_QTY" ).append("\n"); 
		query.append("                   ,0 A2_QTY" ).append("\n"); 
		query.append("                   ,0 F4_QTY" ).append("\n"); 
		query.append("                   ,0 A4_QTY" ).append("\n"); 
		query.append("                   ,0 F5_QTY" ).append("\n"); 
		query.append("                   ,0 O5_QTY" ).append("\n"); 
		query.append("        FROM LV_DUMMY_WEEK" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT DECODE(WK_SEQ,2,14,3,25,4,36,5,47) DP_SEQ,FCAST_YRWK, FCAST_YRWK ,'2000929' FCAST_YRWK0, 1" ).append("\n"); 
		query.append("                   ,0 D2_QTY" ).append("\n"); 
		query.append("                   ,0 D4_QTY" ).append("\n"); 
		query.append("                   ,0 D5_QTY" ).append("\n"); 
		query.append("                   ,0 D7_QTY" ).append("\n"); 
		query.append("                   ,0 R2_QTY" ).append("\n"); 
		query.append("                   ,0 R5_QTY" ).append("\n"); 
		query.append("                   ,0 R9_QTY" ).append("\n"); 
		query.append("                   ,0 O2_QTY" ).append("\n"); 
		query.append("                   ,0 S2_QTY" ).append("\n"); 
		query.append("                   ,0 O4_QTY" ).append("\n"); 
		query.append("                   ,0 S4_QTY" ).append("\n"); 
		query.append("                   ,0 F2_QTY" ).append("\n"); 
		query.append("                   ,0 A2_QTY" ).append("\n"); 
		query.append("                   ,0 F4_QTY" ).append("\n"); 
		query.append("                   ,0 A4_QTY" ).append("\n"); 
		query.append("                   ,0 F5_QTY" ).append("\n"); 
		query.append("                   ,0 O5_QTY" ).append("\n"); 
		query.append("        FROM LV_DUMMY_WEEK" ).append("\n"); 
		query.append("        WHERE WK_SEQ > 1" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        -- Estimated Sound MT" ).append("\n"); 
		query.append("    	UNION ALL" ).append("\n"); 
		query.append("    	SELECT DECODE(WK_SEQ,2,15,3,26,4,37) DP_SEQ,'Estimated Sound MT', 'Estimated Sound MT' ,FCAST_YRWK, 1" ).append("\n"); 
		query.append("                   ,0 D2_QTY" ).append("\n"); 
		query.append("                   ,0 D4_QTY" ).append("\n"); 
		query.append("                   ,0 D5_QTY" ).append("\n"); 
		query.append("                   ,0 D7_QTY" ).append("\n"); 
		query.append("                   ,0 R2_QTY" ).append("\n"); 
		query.append("                   ,0 R5_QTY" ).append("\n"); 
		query.append("                   ,0 R9_QTY" ).append("\n"); 
		query.append("                   ,0 O2_QTY" ).append("\n"); 
		query.append("                   ,0 S2_QTY" ).append("\n"); 
		query.append("                   ,0 O4_QTY" ).append("\n"); 
		query.append("                   ,0 S4_QTY" ).append("\n"); 
		query.append("                   ,0 F2_QTY" ).append("\n"); 
		query.append("                   ,0 A2_QTY" ).append("\n"); 
		query.append("                   ,0 F4_QTY" ).append("\n"); 
		query.append("                   ,0 A4_QTY" ).append("\n"); 
		query.append("                   ,0 F5_QTY    		" ).append("\n"); 
		query.append("                   ,0 O5_QTY    " ).append("\n"); 
		query.append("    	FROM LV_DUMMY_WEEK" ).append("\n"); 
		query.append("    	WHERE WK_SEQ > 1  " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ) A" ).append("\n"); 
		query.append("    ORDER BY DP_SEQ" ).append("\n"); 
		query.append(")" ).append("\n"); 

	}
}