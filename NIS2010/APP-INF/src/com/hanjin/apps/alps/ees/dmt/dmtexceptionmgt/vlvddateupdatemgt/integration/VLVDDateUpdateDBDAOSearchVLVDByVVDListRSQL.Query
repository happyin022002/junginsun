<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VLVDDateUpdateDBDAOSearchVLVDByVVDListRSQL">
			<desc><![CDATA[VL/VD DATE UPDATE 등록	
UI_DMT_2012	
VL/VD Date Update by VVD]]></desc>
			<sql><![CDATA[
SELECT DISTINCT LANE, VVD, ETA, ETD, FIRSTVL, LASTVL, VLDATEN, VLDATEB, UPDATED, UPDATEO, UPDATEI, UPDATEN,
       CLPT_IND_SEQ, PF_ETA, PF_ETB, PF_ETD
FROM (
SELECT
/*+ ORDERED */
K.SLAN_CD                                           LANE    ,
K.VSL_CD||K.SKD_VOY_NO||K.SKD_DIR_CD                VVD     ,
TO_CHAR( MAX(VPS_ETA_DT)     , 'yyyy-mm-dd' )       ETA     ,
TO_CHAR( MAX(VPS_ETD_DT)     , 'yyyy-mm-dd' )       ETD     ,

TO_CHAR( MIN(( SELECT  M.CNMV_EVNT_DT  FROM CTM_MOVEMENT
WHERE CNTR_NO = M.CNTR_NO
AND CNMV_YR = M.CNMV_YR
AND CNMV_ID_NO = M.CNMV_ID_NO
AND CNMV_SEQ = M.CNMV_SEQ
AND M.CNMV_EVNT_DT BETWEEN VPS_ETA_DT AND VPS_ETD_DT
)) , 'yyyy-mm-dd hh24:mi' ) FIRSTVL ,
TO_CHAR( MAX(( SELECT  M.CNMV_EVNT_DT  FROM CTM_MOVEMENT
WHERE CNTR_NO = M.CNTR_NO
AND CNMV_YR = M.CNMV_YR
AND CNMV_ID_NO = M.CNMV_ID_NO
AND CNMV_SEQ = M.CNMV_SEQ
AND M.CNMV_EVNT_DT BETWEEN VPS_ETA_DT AND VPS_ETD_DT
)) , 'yyyy-mm-dd hh24:mi' ) LASTVL ,

TO_CHAR( MAX(
(
SELECT
DECODE( @[mvmt] , 'VD' , C.FT_CMNC_DT ,
'VL' , C.TO_MVMT_DT )
FROM
DMT_CHG_BKG_CNTR    B,
DMT_CHG_CALC        C,
BKG_VVD				V
WHERE
V.VSL_CD            = K.VSL_CD
AND     V.SKD_VOY_NO        = K.SKD_VOY_NO
AND     V.SKD_DIR_CD        = K.SKD_DIR_CD
AND		V.BKG_NO			= B.BKG_NO
AND     DECODE( @[mvmt] , 'VD' , V.POD_CD , 'VL' , V.POL_CD ) = DECODE( @[mvmt] , 'VD' , B.POD_CD , 'VL' , B.POL_CD )
AND     DECODE( @[mvmt] , 'VD' , B.POD_CD ,
'VL' , B.POL_CD ) = @[port]
AND     B.CNTR_NO           = C.CNTR_NO
AND     B.CNTR_CYC_NO       = C.CNTR_CYC_NO

#if ( ${mvmt} == 'VD' )
AND     C.DMDT_TRF_CD       IN ('DMIF', 'CTIC')
#else
AND     C.DMDT_TRF_CD       IN ('DMOF', 'CTOC')
#end

AND     DECODE( @[mvmt] , 'VD' , SUBSTR(C.FM_MVMT_YD_CD,1,5)
, 'VL' , SUBSTR(C.TO_MVMT_YD_CD,1,5) ) = @[port]
AND     DECODE( @[mvmt] , 'VD' , C.FT_CMNC_DT
, 'VL' , C.TO_MVMT_DT ) IS NOT NULL
AND     DECODE( @[mvmt] , 'VD' , NVL( C.FM_MVMT_STS_CD , 'VD' )
, 'VL' , NVL( C.TO_MVMT_STS_CD , 'VL' ) ) = @[mvmt]

AND     DECODE( @[mvmt] , 'VD' , C.FM_MVMT_DT
, 'VL' , NVL( C.TO_MVMT_DT , VPS_ETA_DT + 0.01 ) ) BETWEEN VPS_ETA_DT AND VPS_ETD_DT

AND 	ROWNUM = 1
)
)                , 'yyyy-mm-dd' )       VLDATEN ,
TO_CHAR( MAX(U.FX_DT)        , 'yyyy-mm-dd' )       VLDATEB ,
TO_CHAR( MAX(U.UPD_DT)       , 'yyyy-mm-dd' )       UPDATED ,
MAX(U.UPD_OFC_CD)                                   UPDATEO ,
MAX(U.UPD_USR_ID)                                   UPDATEI ,
MAX((SELECT USR_NM FROM COM_USER WHERE U.UPD_USR_ID        = USR_ID )) UPDATEN,
K.CLPT_IND_SEQ,

TO_CHAR(K.PF_ETA_DT, 'yyyy-mm-dd hh24:mi') AS PF_ETA,
TO_CHAR(K.PF_ETB_DT, 'yyyy-mm-dd hh24:mi') AS PF_ETB,
TO_CHAR(K.PF_ETD_DT, 'yyyy-mm-dd hh24:mi') AS PF_ETD

FROM
CTM_MOVEMENT     M,
BKG_BOOKING      B,
BKG_CONTAINER    BC,
VSK_VSL_PORT_SKD K,
DMT_VSL_DT_UPD   U

WHERE
K.VSL_CD                        = M.CRNT_VSL_CD
AND     K.SKD_VOY_NO                    = M.CRNT_SKD_VOY_NO
AND     K.SKD_DIR_CD                    = M.CRNT_SKD_DIR_CD
--AND     K.CLPT_IND_SEQ                  = '1'
AND     M.BKG_NO                        = B.BKG_NO
AND     B.BKG_STS_CD                    NOT IN ( 'S' , 'X' )
AND     B.BKG_CGO_TP_CD                 = 'F'
AND     M.BKG_NO                        = BC.BKG_NO
AND     M.CNTR_NO                       = BC.CNTR_NO

#if ( ${vvdc} != '' )
AND     K.VSL_CD                        = SUBSTR( @[vvdc] , 1 , 4 )
AND     K.SKD_VOY_NO                    = SUBSTR( @[vvdc] , 5 , 4 )
AND     K.SKD_DIR_CD                    = SUBSTR( @[vvdc] , 9 , 1 )
#end

AND     K.VPS_PORT_CD                   = @[port]
AND     M.MVMT_STS_CD                   = @[mvmt]

#if ( ${frdt} != '' && ${todt} != '' )
AND     M.CNMV_EVNT_DT                  BETWEEN TO_DATE(@[frdt],'yyyy-mm-dd')
AND TO_DATE(@[todt],'yyyy-mm-dd') + .99999
#end

AND     M.ORG_YD_CD         LIKE @[port]||'%'
AND     SUBSTR( M.ORG_YD_CD , 1 , 5 )   = DECODE( @[mvmt] , 'VD' , B.POD_CD , B.POL_CD )
AND     K.VSL_CD            = U.VSL_CD (+)
AND     K.SKD_VOY_NO        = U.SKD_VOY_NO (+)
AND     K.SKD_DIR_CD        = U.SKD_DIR_CD(+)
AND     K.VPS_PORT_CD       = U.LOC_CD(+)
AND     K.CLPT_IND_SEQ      = U.CLPT_IND_SEQ(+)
AND     VL_VD_DIV_CD (+)    = @[mvmt]
GROUP BY K.SLAN_CD , K.VSL_CD , K.SKD_VOY_NO , K.SKD_DIR_CD, K.CLPT_IND_SEQ, K.PF_ETA_DT, K.PF_ETB_DT,K.PF_ETD_DT

UNION ALL

SELECT LANE, VVD, ETA, ETD, FIRSTVL, LASTVL, VLDATEN, VLDATEB, UPDATED, UPDATEO, UPDATEI, UPDATEN, CLPT_IND_SEQ,
       PF_ETA, PF_ETB, PF_ETD
FROM (
    SELECT LANE, 
    RANK() OVER (PARTITION BY VSL, ETA, ETD ORDER BY VSL, TURN_SEQ) RANK,
    TURN_IND, VVD, ETA, ETD, FIRSTVL, LASTVL, 
    VLDATEN ,    VLDATEB ,      UPDATED ,   UPDATEO ,
     UPDATEI ,    UPDATEN,            SEQ,
                PF_ETA,           PF_ETB,            PF_ETD , CLPT_IND_SEQ
    FROM (
            SELECT  
            		/*+ ORDERED */
                    K.SLAN_CD                                           LANE    ,
                    K.VSL_CD||K.SKD_VOY_NO||K.SKD_DIR_CD                VVD     ,
                    TO_CHAR( MAX(VPS_ETA_DT)     , 'yyyy-mm-dd' )       ETA     ,
                    TO_CHAR( MAX(VPS_ETD_DT)     , 'yyyy-mm-dd' )       ETD     ,
            
                    TO_CHAR( MIN(( 
                         SELECT MIN(M.CNMV_EVNT_DT)
                           FROM CTM_MOVEMENT M
                              , BKG_BOOKING B
                              , BKG_CONTAINER    BC
                         WHERE 1=1
                           AND K.VSL_CD        	= M.CRNT_VSL_CD
                           AND K.SKD_VOY_NO    	= M.CRNT_SKD_VOY_NO
                           AND K.SKD_DIR_CD    	= M.CRNT_SKD_DIR_CD
                           AND B.BKG_NO 	   	= M.BKG_NO
						   AND B.BKG_CGO_TP_CD  = 'F'
                           AND M.BKG_NO 		= BC.BKG_NO
                           AND M.CNTR_NO 		= BC.CNTR_NO
                           AND M.MVMT_STS_CD 	= @[mvmt]
                           AND SUBSTR( M.ORG_YD_CD , 1 , 5 )   = DECODE( @[mvmt] , 'VD' , B.POD_CD , B.POL_CD )
                           AND M.CNMV_EVNT_DT BETWEEN K.VPS_ETA_DT AND K.VPS_ETD_DT
                      )) , 'yyyy-mm-dd hh24:mi' ) FIRSTVL ,
            
                    TO_CHAR( MAX(( 
                         SELECT MAX(M.CNMV_EVNT_DT)
                           FROM CTM_MOVEMENT M
                              , BKG_BOOKING B
                              , BKG_CONTAINER    BC
                         WHERE 1=1
                           AND K.VSL_CD        	= M.CRNT_VSL_CD
                           AND K.SKD_VOY_NO    	= M.CRNT_SKD_VOY_NO
                           AND K.SKD_DIR_CD    	= M.CRNT_SKD_DIR_CD
                           AND B.BKG_NO 		= M.BKG_NO
						   AND B.BKG_CGO_TP_CD  = 'F'
                           AND M.BKG_NO 		= BC.BKG_NO
                           AND M.CNTR_NO 		= BC.CNTR_NO
                           AND M.MVMT_STS_CD 	= @[mvmt]
                           AND SUBSTR( M.ORG_YD_CD , 1 , 5 )   = DECODE( @[mvmt] , 'VD' , B.POD_CD , B.POL_CD )
                           AND M.CNMV_EVNT_DT BETWEEN K.VPS_ETA_DT AND K.VPS_ETD_DT
                      )) , 'yyyy-mm-dd hh24:mi' ) LASTVL ,
            
                    TO_CHAR( MAX( 
                                    (
                                        SELECT
                                                DECODE( @[mvmt] , 'VD' , C.FT_CMNC_DT ,
                                                                  'VL' , C.TO_MVMT_DT )
                                        FROM
                                                DMT_CHG_BKG_CNTR    B,
                                                DMT_CHG_CALC        C,
            									BKG_VVD				V
                                        WHERE
                                                V.VSL_CD            = K.VSL_CD
                                        AND     V.SKD_VOY_NO        = K.SKD_VOY_NO
                                        AND     V.SKD_DIR_CD        = K.SKD_DIR_CD
            							AND		V.BKG_NO			= B.BKG_NO
            							AND     DECODE( 'VD' , 'VD' , V.POD_CD , 'VL' , V.POL_CD ) = DECODE( 'VD' , 'VD' , B.POD_CD , 'VL' , B.POL_CD )
                                        AND     DECODE( @[mvmt] , 'VD' , B.POD_CD ,
                                                                  'VL' , B.POL_CD ) = @[port]
                                        AND     B.CNTR_NO           = C.CNTR_NO
                                        AND     B.CNTR_CYC_NO       = C.CNTR_CYC_NO
            
            #if ( ${mvmt} == 'VD' )
                                        AND     C.DMDT_TRF_CD       IN ('DMIF', 'CTIC')
            #else
                                        AND     C.DMDT_TRF_CD       IN ('DMOF', 'CTOC')
            #end
            
                                        AND     DECODE( @[mvmt] , 'VD' , SUBSTR(C.FM_MVMT_YD_CD,1,5)
                                                                , 'VL' , SUBSTR(C.TO_MVMT_YD_CD,1,5) ) = @[port]
                                        AND     DECODE( @[mvmt] , 'VD' , C.FT_CMNC_DT                
                                                                , 'VL' , C.TO_MVMT_DT ) IS NOT NULL
                                        AND     DECODE( @[mvmt] , 'VD' , NVL( C.FM_MVMT_STS_CD , 'VD' )
                                                                , 'VL' , NVL( C.TO_MVMT_STS_CD , 'VL' ) ) = @[mvmt]
            							
                                        AND     DECODE( @[mvmt] , 'VD' , C.FM_MVMT_DT
                                                                , 'VL' , NVL( C.TO_MVMT_DT , VPS_ETA_DT + 0.01 ) ) BETWEEN VPS_ETA_DT AND VPS_ETD_DT
            
            							AND 	ROWNUM = 1
                                    )
                                )                , 'yyyy-mm-dd' )       VLDATEN ,
                    TO_CHAR( MAX(U.FX_DT)        , 'yyyy-mm-dd' )       VLDATEB ,
                    TO_CHAR( MAX(U.UPD_DT)       , 'yyyy-mm-dd' )       UPDATED ,
                    MAX(U.UPD_OFC_CD)                                   UPDATEO ,
                    MAX(U.UPD_USR_ID)                                   UPDATEI ,
                    MAX((SELECT USR_NM FROM COM_USER WHERE U.UPD_USR_ID        = USR_ID )) UPDATEN,
                    K.CLPT_IND_SEQ,
            
                    TO_CHAR(K.PF_ETA_DT, 'yyyy-mm-dd hh24:mi') AS PF_ETA,
                    TO_CHAR(K.PF_ETB_DT, 'yyyy-mm-dd hh24:mi') AS PF_ETB,
                    TO_CHAR(K.PF_ETD_DT, 'yyyy-mm-dd hh24:mi') AS PF_ETD,

                 	K.VSL_CD VSL,
                	K.TURN_PORT_IND_CD   TURN_IND,
                	K.CLPT_IND_SEQ SEQ,
					/* D,V,F 는 VD 시점, Y,N 은 VL, VD 양쪽 다 가능하기 때문에 우선순위를 둠. */
                    DECODE(K.TURN_PORT_IND_CD,'D','1','V','1','F','1','2')   TURN_SEQ
            
            FROM VSK_VSL_PORT_SKD K
               , DMT_VSL_DT_UPD U
            WHERE 1=1
            
            #if ( ${frdt} != '' && ${todt} != '' )
            AND     K.VPS_ETA_DT                  BETWEEN TO_DATE(@[frdt],'yyyy-mm-dd') 
                                                        AND TO_DATE(@[todt],'yyyy-mm-dd') + .99999
            #end
            
            #if ( ${vvdc} != '' )
            AND     K.VSL_CD                        = SUBSTR( @[vvdc] , 1 , 4 )
            AND     K.SKD_VOY_NO                    = SUBSTR( @[vvdc] , 5 , 4 )
            AND     K.SKD_DIR_CD                    = SUBSTR( @[vvdc] , 9 , 1 )
            #end
            
            AND     K.VPS_PORT_CD                   = @[port]
            AND     K.VSL_CD            = U.VSL_CD (+)
            AND     K.SKD_VOY_NO        = U.SKD_VOY_NO (+)
            AND     K.SKD_DIR_CD        = U.SKD_DIR_CD(+)
            AND     K.VPS_PORT_CD       = U.LOC_CD(+)
            AND     K.CLPT_IND_SEQ      = U.CLPT_IND_SEQ(+)
            AND     VL_VD_DIV_CD (+)    = @[mvmt]
            AND     NVL (K.SKD_CNG_STS_CD, ' ') != 'S'
            
            #if ( ${mvmt} == 'VL' )
            AND EXISTS ( SELECT /*+ NO_UNNEST */  'X' FROM MDM_VSL_SVC_LANE WHERE K.SLAN_CD = VSL_SLAN_CD AND ((VSL_SVC_TP_CD <> 'O' AND K.TURN_PORT_IND_CD in ('Y', 'N')) or VSL_SVC_TP_CD = 'O') )
            #end
                        
            GROUP BY K.SLAN_CD, K.VSL_CD, K.SKD_VOY_NO, K.SKD_DIR_CD, K.CLPT_IND_SEQ, K.PF_ETA_DT, K.PF_ETB_DT,K.PF_ETD_DT, K.TURN_PORT_IND_CD
        )
)
WHERE RANK ='1'
)
ORDER BY LANE, VVD, ETA, CLPT_IND_SEQ			]]></sql>
			<params>
				<param name="mvmt" type="12" value="" out="N"/>
				<param name="port" type="12" value="" out="N"/>
				<param name="vvdc" type="12" value="" out="N"/>
				<param name="frdt" type="12" value="" out="N"/>
				<param name="todt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
