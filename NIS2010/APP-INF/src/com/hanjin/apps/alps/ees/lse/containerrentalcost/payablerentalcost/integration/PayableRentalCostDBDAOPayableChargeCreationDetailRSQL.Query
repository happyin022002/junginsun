<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PayableRentalCostDBDAOPayableChargeCreationDetailRSQL">
			<desc><![CDATA[Payable Rental Charge Creation : Charge Detail Search
2010.12.09 남궁진호 [CHM-201007442-01] LT일때 Per-Diem LCC로 변경]]></desc>
			<sql><![CDATA[
WITH
  CNTR_LIST_DATA AS
         (
           SELECT   TLS.AGMT_CTY_CD
                  , TLS.AGMT_SEQ
                  , TLS.LSTM_CD
                  , TLS.CNTR_NO
                  , TLS.CNTR_TPSZ_CD
                  , TLS.ONH_DT
                  , TLS.OFFH_DT
                  , TLS.ONH_LOC_CD
                  , TLS.OFFH_LOC_CD
                  , TLS.CHG_FREE_DYS
                  , TLS.USE_STRT_DT
                  , NVL(TLS.OFFH_DT, LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM'))) - TLS.USE_STRT_DT + 1 AS COST_DYS -- TTL_DYS
                  , TLS.PYBL_USE_STRT_DT
                  , CASE WHEN TLS.PYBL_USE_STRT_DT <= NVL(TLS.OFFH_DT, LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM'))) + 0.99999 THEN NVL(TLS.OFFH_DT, LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM'))) - TLS.PYBL_USE_STRT_DT + 1 ELSE 0 END BIL_DYS
                  , TLS.CNTR_LSTM_CNG_FLG
                  , TLS.ONH_STS_CD
                  , TLS.OFH_STS_CD
                  , TLS.LFT_ON_CHG_AMT
                  , TLS.LFT_OF_CHG_AMT
                  , TLS.PUC_PCR_CHG_AMT
                  , TLS.DOC_DCR_CHG_AMT
                  , TLS.ONH_YD_CD
                  , DECODE(TLS.LSTM_CD,'LT',CHT.LCC_CD,LOC.SCC_CD) AS ONH_YD_SCC_CD
           FROM     (
                      SELECT   OF_LSI_DATA.AGMT_CTY_CD
                             , OF_LSI_DATA.AGMT_SEQ
                             , OF_LSI_DATA.LSTM_CD
                             , OF_LSO_DATA.CNTR_NO
                             , OF_LSO_DATA.CNTR_TPSZ_CD
                             , OF_LSI_DATA.CNTR_STS_CD      AS ONH_STS_CD
                             , OF_LSI_DATA.CNTR_STS_EVNT_DT AS ONH_DT
                             , OF_LSI_DATA.LOC_CD           AS ONH_LOC_CD
                             , OF_LSO_DATA.CNTR_STS_CD      AS OFH_STS_CD
                             , OF_LSO_DATA.CNTR_STS_EVNT_DT AS OFFH_DT
                             , OF_LSO_DATA.LOC_CD           AS OFFH_LOC_CD
                             , OF_LSO_DATA.CNTR_LFT_CHG_AMT
                             , OF_LSO_DATA.CNTR_LSTM_CNG_FLG
                             , OF_LSI_DATA.RNTL_CHG_FREE_DYS AS CHG_FREE_DYS
                             , CASE WHEN TO_CHAR(OF_LSI_DATA.CNTR_STS_EVNT_DT, 'YYYYMM') = TO_CHAR(TO_DATE(@[chg_cost_yrmon], 'YYYYMM'), 'YYYYMM') THEN OF_LSI_DATA.CNTR_STS_EVNT_DT ELSE TO_DATE(@[chg_cost_yrmon], 'YYYYMM') END AS USE_STRT_DT
                             , CASE WHEN TO_CHAR(OF_LSI_DATA.CNTR_STS_EVNT_DT + OF_LSI_DATA.RNTL_CHG_FREE_DYS, 'YYYYMM') < TO_CHAR(TO_DATE(@[chg_cost_yrmon], 'YYYYMM'), 'YYYYMM') THEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM')
                                    ELSE OF_LSI_DATA.CNTR_STS_EVNT_DT + OF_LSI_DATA.RNTL_CHG_FREE_DYS
                               END AS PYBL_USE_STRT_DT
                             , OF_LSI_DATA.CNTR_LFT_CHG_AMT  AS LFT_ON_CHG_AMT
                             , OF_LSO_DATA.CNTR_LFT_CHG_AMT  AS LFT_OF_CHG_AMT
                             , OF_LSI_DATA.CNTR_PKUP_CHG_AMT AS PUC_PCR_CHG_AMT
                             , OF_LSO_DATA.CNTR_DRFF_CR_AMT  AS DOC_DCR_CHG_AMT
                             , OF_LSI_DATA.ONH_YD_CD
                      FROM     (
                                 SELECT   CNTR.CNTR_NO
                                        , LSI.CNTR_STS_SEQ
                                        , LSI.CNTR_STS_CD
                                        , LSI.CNTR_STS_EVNT_DT
                                        , LSI.LOC_CD
                                        , NVL(LSI.RNTL_CHG_FREE_DYS,0) AS RNTL_CHG_FREE_DYS
                                        , LSI.AGMT_CTY_CD
                                        , LSI.AGMT_SEQ
                                        , CNTR.LSTM_CD
                                        , LSI.CNTR_LFT_CHG_AMT
                                        , LSI.CNTR_PKUP_CHG_AMT
                                        , LSI.LCC_CD
                                        , CNTR.ONH_YD_CD
                                 FROM     MST_CONTAINER     CNTR
                                        , MST_CNTR_STS_HIS  LSI
                                 WHERE    1 = 1
                                 AND      CNTR.CNTR_NO    = LSI.CNTR_NO
                                 AND      LSI.CNTR_STS_EVNT_DT <= LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
                                 AND      LSI.CNTR_STS_CD IN ('DII','LSI')
                                 AND      LSI.AGMT_SEQ    = @[agmt_seq]
                                 AND      LSI.AGMT_CTY_CD = @[agmt_cty_cd]
                               ) OF_LSI_DATA
                             , (
                                 SELECT   LSO.CNTR_NO
                                        , CNTR.CNTR_TPSZ_CD
                                        , LSO.CNTR_STS_CD
                                        , DECODE(LSO.CNTR_STS_CD, 'TLL', LSO.CNTR_LOST_NTFY_DT
                                                                       , LSO.CNTR_STS_EVNT_DT) AS CNTR_STS_EVNT_DT
                                        , LSO.LOC_CD
                                        , LSO.PRNR_STS_SEQ
                                        , LSO.CNTR_LFT_CHG_AMT
                                        , LSO.CNTR_LSTM_CNG_FLG
                                        , LSO.CNTR_DRFF_CR_AMT
                                 FROM     MST_CONTAINER     CNTR
                                        , MST_CNTR_STS_HIS  LSO
                                 WHERE    1 = 1
                                 AND      CNTR.CNTR_NO    = LSO.CNTR_NO
                                 AND      DECODE(LSO.CNTR_STS_CD, 'TLL', CNTR_LOST_NTFY_DT, CNTR_STS_EVNT_DT) BETWEEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM') AND LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
                                 AND      LSO.CNTR_STS_CD IN ('TLL', 'DIO', 'LSO', 'SCR', 'SRO')
                                 AND      LSO.AGMT_SEQ    = @[agmt_seq]
                                 AND      LSO.AGMT_CTY_CD = @[agmt_cty_cd]
                               ) OF_LSO_DATA
                      WHERE    1 = 1
                      AND      OF_LSI_DATA.CNTR_NO      = OF_LSO_DATA.CNTR_NO
                      AND      OF_LSI_DATA.CNTR_STS_SEQ = OF_LSO_DATA.PRNR_STS_SEQ
                      UNION ALL
                      SELECT   LSI.AGMT_CTY_CD
                             , LSI.AGMT_SEQ
                             , CNTR.LSTM_CD
                             , LSI.CNTR_NO
                             , CNTR.CNTR_TPSZ_CD
                             , LSI.CNTR_STS_CD      AS ONH_STS_CD
                             , LSI.CNTR_STS_EVNT_DT AS ONH_DT
                             , LSI.LOC_CD           AS ONH_LOC_CD
                             , NULL                 AS OFH_STS_CD
                             , NULL                 AS OFFH_DT
                             , NULL                 AS OFFH_LOC_CD
                             , LSI.CNTR_LFT_CHG_AMT
                             , LSI.CNTR_LSTM_CNG_FLG
                             , NVL(LSI.RNTL_CHG_FREE_DYS,0) AS CHG_FREE_DYS
                             , CASE WHEN TO_CHAR(LSI.CNTR_STS_EVNT_DT, 'YYYYMM') = TO_CHAR(TO_DATE(@[chg_cost_yrmon], 'YYYYMM'), 'YYYYMM') THEN LSI.CNTR_STS_EVNT_DT ELSE TO_DATE(@[chg_cost_yrmon], 'YYYYMM') END AS USE_STRT_DT
                             , CASE WHEN TO_CHAR(LSI.CNTR_STS_EVNT_DT + NVL(LSI.RNTL_CHG_FREE_DYS,0), 'YYYYMM') < TO_CHAR(TO_DATE(@[chg_cost_yrmon], 'YYYYMM'), 'YYYYMM') THEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM')
                                    ELSE LSI.CNTR_STS_EVNT_DT + NVL(LSI.RNTL_CHG_FREE_DYS,0)
                               END                   AS PYBL_USE_STRT_DT
                             , LSI.CNTR_LFT_CHG_AMT  AS LFT_ON_CHG_AMT
                             , 0                     AS LFT_OF_CHG_AMT
                             , LSI.CNTR_PKUP_CHG_AMT AS PUC_PCR_CHG_AMT
                             , 0                     AS DOC_DCR_CHG_AMT
                             , CNTR.ONH_YD_CD
                      FROM     MST_CONTAINER     CNTR
                             , MST_CNTR_STS_HIS  LSI
                      WHERE    1 = 1
                      AND      CNTR.CNTR_NO     = LSI.CNTR_NO
                      AND      LSI.AGMT_SEQ     = @[agmt_seq]
                      AND      LSI.AGMT_CTY_CD  = @[agmt_cty_cd]
                      AND      ( LSI.ROWID ) IN
                               (
                                 SELECT   SUBSTR(MAX(TO_CHAR(HIS.CNTR_STS_EVNT_DT,'RRRRMMDD') || TO_CHAR(HIS.CNTR_STS_SEQ, '000000000') || HIS.ROWID), 19) AS ROW_ID
                                 FROM     MST_CNTR_STS_HIS  HIS
                                 WHERE    1 = 1
                                 AND      HIS.CNTR_STS_CD IN ('TLL', 'DIO', 'LSO', 'DII', 'LSI', 'SCR', 'SRO','FND')
                                 AND      DECODE(HIS.CNTR_STS_CD, 'TLL', HIS.CNTR_LOST_NTFY_DT, HIS.CNTR_STS_EVNT_DT) <= LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM'))
                                 AND      HIS.AGMT_SEQ    = @[agmt_seq]
                                 AND      HIS.AGMT_CTY_CD = @[agmt_cty_cd]
                                 GROUP BY HIS.CNTR_NO 
                                 HAVING   SUBSTR(MAX(TO_CHAR(DECODE(HIS.CNTR_STS_CD, 'TLL', HIS.CNTR_LOST_NTFY_DT, HIS.CNTR_STS_EVNT_DT),'RRRRMMDD')
                                                   || TO_CHAR(HIS.CNTR_STS_SEQ, '000000000')
                                                   || HIS.CNTR_STS_CD), 19, 3)
                                           IN ('DII','LSI','FND')
                               )
                    ) TLS
                  , MDM_YARD     YARD
                  , MDM_LOCATION LOC 			
  	              , MDM_EQ_ORZ_CHT  CHT
           WHERE    1 = 1
           AND      TLS.ONH_YD_CD = YARD.YD_CD
           AND      YARD.LOC_CD = LOC.LOC_CD
	       AND      LOC.SCC_CD = CHT.SCC_CD
         )
, APP_PDGM_DATA AS
         (
           SELECT   PDGVA.AGMT_CTY_CD
                  , PDGVA.AGMT_SEQ
                  , PDGVA.PDGV_SCC_CD
                  , PDGVA.TEU_NO
                  , NVL(PDGVB.TEU_NO2, 999999) AS TEU_NO2
                  , PDGVA.CNTR_TPSZ_CD
                  , PDGVA.PDM_RT
           FROM     (
                      SELECT   RT.AGMT_CTY_CD
                             , RT.AGMT_SEQ
                             , RANK() OVER (PARTITION BY RT.AGMT_CTY_CD, RT.AGMT_SEQ, RT.CNTR_TPSZ_CD ORDER BY RT.AGMT_CTY_CD, RT.AGMT_SEQ, RT.CNTR_TPSZ_CD, RT.AGMT_CHG_VAL) AS PDGV_RANK
                             , RT.LOC_CD AS PDGV_SCC_CD
                             , RT.AGMT_CHG_VAL AS TEU_NO
                             , RT.CNTR_TPSZ_CD
                             , RT.N1ST_CHG_AMT AS PDM_RT
                      FROM     LSE_AGMT_RT RT
                      WHERE    1 = 1
                      AND      RT.CNTR_RNTL_CHG_TP_CD = 'PDGV'
                      AND      RT.AGMT_SEQ    = @[agmt_seq] 
                      AND      RT.AGMT_CTY_CD = @[agmt_cty_cd]
                    ) PDGVA
                  , (
                      SELECT   AGMT_CTY_CD
                             , AGMT_SEQ
                             , PDGV_RANK - 1 AS PDGV_RANK2
                             , CNTR_TPSZ_CD
                             , PDGV_SCC_CD
                             , TEU_NO-1 AS TEU_NO2
                      FROM     (
                                 SELECT   RT.AGMT_CTY_CD
                                        , RT.AGMT_SEQ
                                        , RANK() OVER (PARTITION BY RT.AGMT_CTY_CD, RT.AGMT_SEQ, RT.CNTR_TPSZ_CD ORDER BY RT.AGMT_CTY_CD, RT.AGMT_SEQ, RT.CNTR_TPSZ_CD, RT.AGMT_CHG_VAL) AS PDGV_RANK
                                        , RT.LOC_CD AS PDGV_SCC_CD
                                        , RT.AGMT_CHG_VAL AS TEU_NO
                                        , RT.CNTR_TPSZ_CD
                                        , RT.N1ST_CHG_AMT AS PDM_RT
                                 FROM     LSE_AGMT_RT RT
                                 WHERE    1 = 1
                                 AND      RT.CNTR_RNTL_CHG_TP_CD = 'PDGV'
                                 AND      RT.AGMT_SEQ    = @[agmt_seq] 
                                 AND      RT.AGMT_CTY_CD = @[agmt_cty_cd]
                               ) AGMT_PDGV_DATA
                      WHERE    1 = 1
                      AND      PDGV_RANK > 1
                    ) PDGVB
           WHERE    PDGVA.AGMT_CTY_CD  = PDGVB.AGMT_CTY_CD(+) 
           AND      PDGVA.AGMT_SEQ     = PDGVB.AGMT_SEQ(+)
           AND      PDGVA.PDGV_RANK    = PDGVB.PDGV_RANK2(+)
           AND      PDGVA.CNTR_TPSZ_CD = PDGVB.CNTR_TPSZ_CD(+)
           AND      PDGVA.PDGV_SCC_CD  = PDGVB.PDGV_SCC_CD(+)
         )
SELECT   @[chg_seq] AS CHG_SEQ
       , CLD.CNTR_NO
       , 'PDM' AS LSE_PAY_CHG_TP_CD
       , CLD.AGMT_CTY_CD
       , CLD.AGMT_SEQ
       , CLD.CNTR_TPSZ_CD
       , TO_CHAR(CLD.ONH_DT,'YYYYMMDD')  AS ONH_DT
       , TO_CHAR(CLD.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , CLD.ONH_LOC_CD
       , CLD.OFFH_LOC_CD
       , CLD.CHG_FREE_DYS
       , PDGT.PDM_RT AS PD_RT_AMT
       , ROUND(CLD.BIL_DYS * PDGT.PDM_RT,2) AS TTL_COST_AMT
       , CLD.COST_DYS
       , CLD.BIL_DYS
       , @[usr_id] AS CRE_USR_ID
       , @[usr_id] AS UPD_USR_ID
FROM     CNTR_LIST_DATA CLD
       , (
           SELECT   TS.CNTR_TPSZ_CD
                  , NULL AS ONH_YD_SCC_CD
                  , TS.MNTHLY_TTL_CNT
                  , PDGM.PDM_RT
           FROM     (
                      SELECT   CNTR_TPSZ_CD
                             , COUNT(CNTR_NO) AS MNTHLY_TTL_CNT
                      FROM     CNTR_LIST_DATA
                      GROUP BY CNTR_TPSZ_CD
                    ) TS
                  , APP_PDGM_DATA PDGM
                  , LSE_AGREEMENT A
           WHERE    1 = 1
           AND      TS.CNTR_TPSZ_CD = PDGM.CNTR_TPSZ_CD
           AND      PDGM.TEU_NO <= TS.MNTHLY_TTL_CNT
           AND      PDGM.TEU_NO2 >= TS.MNTHLY_TTL_CNT
           AND      PDGM.AGMT_CTY_CD = A.AGMT_CTY_CD
           AND      PDGM.AGMT_SEQ = A.AGMT_SEQ
           AND      A.LSTM_CD <> 'LT'
           UNION ALL
           SELECT   TS.CNTR_TPSZ_CD
                  , TS.ONH_YD_SCC_CD
                  , TS.MNTHLY_TTL_CNT
                  , PDGM.PDM_RT
           FROM     (
                      SELECT CNTR_TPSZ_CD
                           , ONH_YD_SCC_CD
                           , COUNT(CNTR_NO) AS MNTHLY_TTL_CNT
                      FROM   CNTR_LIST_DATA
                      GROUP  BY CNTR_TPSZ_CD
                              , ONH_YD_SCC_CD
                    ) TS
                  , APP_PDGM_DATA PDGM
                  , LSE_AGREEMENT A
           WHERE    1 = 1
           AND      TS.CNTR_TPSZ_CD = PDGM.CNTR_TPSZ_CD
           AND      TS.ONH_YD_SCC_CD = PDGM.PDGV_SCC_CD
           AND      PDGM.AGMT_CTY_CD = A.AGMT_CTY_CD
           AND      PDGM.AGMT_SEQ = A.AGMT_SEQ
           AND      A.LSTM_CD = 'LT'
         ) PDGT
WHERE    1 = 1
AND      CLD.ONH_YD_SCC_CD = DECODE(CLD.LSTM_CD, 'LT', PDGT.ONH_YD_SCC_CD, CLD.ONH_YD_SCC_CD)
AND      CLD.CNTR_TPSZ_CD = PDGT.CNTR_TPSZ_CD
UNION ALL
SELECT   @[chg_seq] AS CHG_SEQ
       , CLD.CNTR_NO
       , 'LON' AS LSE_PAY_CHG_TP_CD
       , CLD.AGMT_CTY_CD
       , CLD.AGMT_SEQ
       , CLD.CNTR_TPSZ_CD
       , TO_CHAR(CLD.ONH_DT,'YYYYMMDD')  AS ONH_DT
       , TO_CHAR(CLD.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , CLD.ONH_LOC_CD
       , CLD.OFFH_LOC_CD
       , CLD.CHG_FREE_DYS
       , NVL(CLD.LFT_ON_CHG_AMT, 0) AS PD_RT_AMT
       , NVL(CLD.LFT_ON_CHG_AMT, 0) AS TTL_COST_AMT
       , 0 AS COST_DYS --CLD.COST_DYS
       , CLD.BIL_DYS
       , @[usr_id] AS CRE_USR_ID
       , @[usr_id] AS UPD_USR_ID
FROM     CNTR_LIST_DATA CLD
WHERE    CLD.ONH_STS_CD IN ('DII', 'LSI')
AND      CLD.CNTR_LSTM_CNG_FLG <> 'Y'
AND      CLD.ONH_DT BETWEEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM') AND LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
UNION ALL
SELECT   @[chg_seq] AS CHG_SEQ
       , CLD.CNTR_NO
       , 'LOF' AS LSE_PAY_CHG_TP_CD
       , CLD.AGMT_CTY_CD
       , CLD.AGMT_SEQ
       , CLD.CNTR_TPSZ_CD
       , TO_CHAR(CLD.ONH_DT,'YYYYMMDD')  AS ONH_DT
       , TO_CHAR(CLD.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , CLD.ONH_LOC_CD
       , CLD.OFFH_LOC_CD
       , CLD.CHG_FREE_DYS
       , 0 AS PD_RT_AMT --CLD.LFT_OF_CHG_AMT AS PD_RT_AMT
       , NVL(CLD.LFT_OF_CHG_AMT, 0) AS TTL_COST_AMT
       , 0 AS COST_DYS --CLD.COST_DYS
       , CLD.BIL_DYS
       , @[usr_id] AS CRE_USR_ID
       , @[usr_id] AS UPD_USR_ID
FROM     CNTR_LIST_DATA CLD
WHERE    1 = 1
AND      CLD.CNTR_LSTM_CNG_FLG <> 'Y'
AND      CLD.OFH_STS_CD IN ('DIO', 'LSO')
AND      CLD.OFFH_DT BETWEEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM') AND LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
UNION ALL
SELECT   @[chg_seq] AS CHG_SEQ
       , CLD.CNTR_NO
       , CASE WHEN CLD.PUC_PCR_CHG_AMT > 0 THEN 'PUC'
              WHEN CLD.PUC_PCR_CHG_AMT < 0 THEN 'PCR'
         END AS LSE_PAY_CHG_TP_CD
       , CLD.AGMT_CTY_CD
       , CLD.AGMT_SEQ
       , CLD.CNTR_TPSZ_CD
       , TO_CHAR(CLD.ONH_DT,'YYYYMMDD')  AS ONH_DT
       , TO_CHAR(CLD.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , CLD.ONH_LOC_CD
       , CLD.OFFH_LOC_CD
       , CLD.CHG_FREE_DYS
       , 0 AS PD_RT_AMT --CLD.PUC_PCR_CHG_AMT AS PD_RT_AMT
       , NVL(CLD.PUC_PCR_CHG_AMT, 0) AS TTL_COST_AMT
       , 0 AS COST_DYS --CLD.COST_DYS
       , CLD.BIL_DYS
       , @[usr_id] AS CRE_USR_ID
       , @[usr_id] AS UPD_USR_ID
FROM     CNTR_LIST_DATA CLD
WHERE    (CLD.PUC_PCR_CHG_AMT > 0 OR CLD.PUC_PCR_CHG_AMT < 0)
AND      CLD.ONH_STS_CD IN ('DII', 'LSI')
AND      CLD.CNTR_LSTM_CNG_FLG <> 'Y'
AND      CLD.ONH_DT BETWEEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM') AND LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
UNION ALL
SELECT   @[chg_seq] AS CHG_SEQ
       , CLD.CNTR_NO
       , CASE WHEN CLD.DOC_DCR_CHG_AMT > 0 THEN 'DOC'
              WHEN CLD.DOC_DCR_CHG_AMT < 0 THEN 'DCR'
         END AS LSE_PAY_CHG_TP_CD
       , CLD.AGMT_CTY_CD
       , CLD.AGMT_SEQ
       , CLD.CNTR_TPSZ_CD
       , TO_CHAR(CLD.ONH_DT,'YYYYMMDD')  AS ONH_DT
       , TO_CHAR(CLD.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , CLD.ONH_LOC_CD
       , CLD.OFFH_LOC_CD
       , CLD.CHG_FREE_DYS
       , 0 AS PD_RT_AMT --CLD.DOC_DCR_CHG_AMT AS PD_RT_AMT
       , NVL(CLD.DOC_DCR_CHG_AMT, 0) AS TTL_COST_AMT
       , 0 AS COST_DYS --CLD.COST_DYS
       , CLD.BIL_DYS
       , @[usr_id] AS CRE_USR_ID
       , @[usr_id] AS UPD_USR_ID
FROM     CNTR_LIST_DATA CLD
WHERE    1 = 1
AND      ( CLD.DOC_DCR_CHG_AMT > 0 OR CLD.DOC_DCR_CHG_AMT < 0 )
AND      CLD.OFH_STS_CD IN ('DIO', 'LSO')
AND      CLD.OFFH_DT BETWEEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM') AND LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
UNION ALL
SELECT   @[chg_seq] AS CHG_SEQ
       , CLD.CNTR_NO
       , 'DPP' AS LSE_PAY_CHG_TP_CD
       , CLD.AGMT_CTY_CD
       , CLD.AGMT_SEQ
       , CLD.CNTR_TPSZ_CD
       , TO_CHAR(CLD.ONH_DT,'YYYYMMDD')  AS ONH_DT
       , TO_CHAR(CLD.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , CLD.ONH_LOC_CD
       , CLD.OFFH_LOC_CD
       , CLD.CHG_FREE_DYS
       , 0 AS PD_RT_AMT --RT.AGMT_CHG_VAL AS PD_RT_AMT
       , NVL(RT.AGMT_CHG_VAL, 0) AS TTL_COST_AMT
       , 0 AS COST_DYS --CLD.COST_DYS
       , CLD.BIL_DYS
       , @[usr_id] AS CRE_USR_ID
       , @[usr_id] AS UPD_USR_ID
FROM     CNTR_LIST_DATA CLD
       , LSE_AGMT_RT RT
       , LSE_AGREEMENT A
WHERE    1 = 1
AND      CLD.CNTR_TPSZ_CD = RT.CNTR_TPSZ_CD
AND      CLD.AGMT_CTY_CD = RT.AGMT_CTY_CD
AND      CLD.AGMT_SEQ = RT.AGMT_SEQ
AND      CLD.AGMT_CTY_CD = A.AGMT_CTY_CD
AND      CLD.AGMT_SEQ = A.AGMT_SEQ
AND      CLD.CNTR_LSTM_CNG_FLG <> 'Y'
AND      CLD.OFH_STS_CD IN ('DIO', 'LSO')
AND      CLD.OFFH_DT BETWEEN TO_DATE(@[chg_cost_yrmon], 'YYYYMM') AND LAST_DAY(TO_DATE(@[chg_cost_yrmon],'YYYYMM')) + 0.99999
AND      RT.CNTR_RNTL_CHG_TP_CD = 'DPPV'
AND      RT.AGMT_SEQ = @[agmt_seq]
AND      RT.AGMT_CTY_CD = @[agmt_cty_cd]
AND      A.DPP_TP_CD = 'Y'			]]></sql>
			<params>
				<param name="chg_cost_yrmon" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="chg_seq" type="2" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
