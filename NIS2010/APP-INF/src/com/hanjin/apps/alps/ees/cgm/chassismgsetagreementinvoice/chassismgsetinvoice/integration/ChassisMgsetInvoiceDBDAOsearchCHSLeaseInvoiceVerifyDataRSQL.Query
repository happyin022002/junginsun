<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChassisMgsetInvoiceDBDAOsearchCHSLeaseInvoiceVerifyDataRSQL">
			<desc><![CDATA[chungpa 20091208 1030 추가사항]]></desc>
			<sql><![CDATA[
SELECT 
/*+  USE_NL( A B D)   */
 A.EQ_KND_CD
    ,A.COST_YRMON
,A.EQ_NO
    ,A.CHG_CRE_SEQ
    ,A.INV_CUST_EQ_NO
    ,A.INV_EQ_NO
    ,A.INV_REF_NO
    ,A.INV_NO
	,A.INV_CHG_TP_NM
    ,A.CHG_CD
    ,A.INV_EQ_ONH_LOC_NM
    ,A.INV_EQ_ONH_DT
    ,A.INV_BIL_ST_DT
    ,A.INV_EQ_OFFH_LOC_NM
    ,A.INV_EQ_OFFH_DT
    ,A.INV_BIL_END_DT
    ,A.INV_LSE_USE_DYS
    ,A.INV_LSE_RT_AMT
    ,A.INV_LSE_CHG_AMT
    ,A.INV_TAX_AMT
    ,A.AGMT_OFC_CTY_CD
    ,A.AGMT_SEQ
    ,A.AGMT_VER_NO
    ,A.AGMT_LSTM_CD
    ,A.COST_CD
    ,A.ACCT_CD      
    ,A.CURR_CD
,CASE WHEN A.CHG_CD NOT IN ('CRD') AND  -- CRD 일때 EQ Dup 체크 제외. CRD 일때 EQ_NO 는 Seq하게 생성되므로 관계없음. 
           A.EQ_NO = LAG(A.EQ_NO) OVER (PARTITION BY  A.EQ_NO, A.CHG_CD, A.INV_LSE_RT_AMT ORDER BY EQ_NO  )  THEN 'Equipment No. Duplicated!'
      ELSE A.VRFY_RSLT_DESC
 END AS VRFY_RSLT_DESC
,CASE WHEN A.CHG_CD NOT IN ('CRD') AND  -- CRD 일때 EQ Dup 체크 제외. CRD 일때 EQ_NO 는 Seq하게 생성되므로 관계없음.
           A.EQ_NO = LAG(A.EQ_NO) OVER (PARTITION BY  A.EQ_NO, A.CHG_CD, A.INV_LSE_RT_AMT ORDER BY EQ_NO  )  THEN 'N'
      ELSE A.VRFY_SCS_FLG
 END AS VRFY_SCS_FLG
,A.INV_SEQ
, CASE 
    WHEN B.EQ_NO  IS NOT NULL THEN  
        CASE WHEN B.LSE_CHG_AMT = A.INV_LSE_CHG_AMT THEN 'C'
             ELSE 'D'
        END   --CHG_AMT 같으면 C , 다르면 D
    ELSE  -- RATE 도 다르고..
    'I'        -- 대응 CHG_SEQ 없으면 I
  END LSE_CHG_AUD_STS_CD

, CASE 
  WHEN B.EQ_NO IS NULL THEN NVL(  (    CASE 
                                       WHEN D.EQ_ASET_STS_CD = 'LSO' THEN 'P'
                                       WHEN D.EQ_ASET_STS_CD = 'LST' THEN 'Q'
                                       WHEN D.EQ_ASET_STS_CD = 'TLL' THEN 'R'
                                       ELSE 'I' 
                                       END ) , 'O') 
  WHEN B.LSE_CHG_AMT <> REPLACE(REPLACE(A.INV_LSE_CHG_AMT,' ',''),',','') THEN
       CASE 
       WHEN B.LSE_USE_DYS <> REPLACE(REPLACE(A.INV_LSE_USE_DYS,' ',''),',','') AND B.LSE_RT_AMT  <> REPLACE(REPLACE(A.INV_LSE_RT_AMT,' ',''),',','') THEN 'E'
       WHEN B.LSE_RT_AMT  <> REPLACE(REPLACE(A.INV_LSE_RT_AMT,' ',''),',','') THEN 'F'
       WHEN B.LSE_USE_DYS <> REPLACE(REPLACE(A.INV_LSE_USE_DYS,' ',''),',','') THEN 'G'
       ELSE 'D' 
       END
  END AS LSE_CHG_AUD_RSLT_RSN_CD

    FROM (
    SELECT
    EQ_KND_CD
    ,COST_YRMON
    ,CHG_CRE_SEQ
    ,INV_CUST_EQ_NO
    ,INV_EQ_NO
    ,INV_REF_NO
    ,INV_NO
    ,INV_CHG_TP_NM
    ,CHG_CD
    ,INV_EQ_ONH_LOC_NM
    ,INV_EQ_ONH_DT
    ,INV_BIL_ST_DT
    ,INV_EQ_OFFH_LOC_NM
    ,INV_EQ_OFFH_DT
    ,INV_BIL_END_DT
    ,INV_LSE_USE_DYS
    ,INV_LSE_RT_AMT
    ,INV_LSE_CHG_AMT
    ,INV_TAX_AMT
    ,VRFY_RSLT_DESC
    ,VRFY_SCS_FLG
    ,AGMT_OFC_CTY_CD
    ,AGMT_SEQ
    ,AGMT_VER_NO
    ,AGMT_LSTM_CD
    ,COST_CD
    ,ACCT_CD
    ,EQ_NO
    ,CURR_CD
    ,ROW_NUMBER() OVER (PARTITION BY A.AGMT_OFC_CTY_CD,A.AGMT_SEQ,A.AGMT_VER_NO,A.COST_YRMON,A.EQ_NO,CHG_CD ORDER BY INV_BIL_ST_DT,INV_LSE_RT_AMT) INV_SEQ
    
    
 FROM (
SELECT  
    A.EQ_KND_CD
    ,A.COST_YRMON
    ,A.CHG_CRE_SEQ
    
    ,A.INV_CUST_EQ_NO
    ,A.INV_EQ_NO
    ,A.INV_REF_NO
    ,A.INV_NO
	,A.INV_CHG_TP_NM
    ,A.CHG_CD
    ,A.INV_EQ_ONH_LOC_NM
    ,TO_CHAR(A.INV_EQ_ONH_DT,'YYYY-MM-DD') AS INV_EQ_ONH_DT
    ,TO_CHAR(A.INV_BIL_ST_DT,'YYYY-MM-DD') AS INV_BIL_ST_DT
    ,A.INV_EQ_OFFH_LOC_NM
    ,TO_CHAR(A.INV_EQ_OFFH_DT,'YYYY-MM-DD') AS INV_EQ_OFFH_DT
    ,TO_CHAR(A.INV_BIL_END_DT,'YYYY-MM-DD') AS INV_BIL_END_DT
    ,A.INV_LSE_USE_DYS
    ,A.INV_LSE_RT_AMT
    ,A.INV_LSE_CHG_AMT
    ,A.INV_TAX_AMT

    ,NVL( CASE 
          WHEN  LENGTH( TO_CHAR(INV_EQ_ONH_DT  ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the On-Hire Date!'
          WHEN  LENGTH( TO_CHAR(INV_EQ_OFFH_DT ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the Off-Hire Date!'
          WHEN  LENGTH( TO_CHAR(INV_BIL_ST_DT  ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the Billing Start Date!'
          WHEN  LENGTH( TO_CHAR(INV_BIL_END_DT ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the Billing End Date!'
          WHEN  SUBSTR(INV_CHG_TP_NM,1,3) IN ('HON','DON') AND LENGTH( TO_CHAR(INV_EQ_ONH_DT,'YYYYMMDD' ) ) <> 8 THEN  'Please check up the On-Hire Date!'
          WHEN  INV_CHG_TP_NM IN ('HOF','DOF') AND LENGTH( TO_CHAR(INV_EQ_OFFH_DT,'YYYYMMDD' ) ) <> 8 THEN  'Please check up the Off-Hire Date!'
          WHEN  G.AGMT_OFC_CTY_CD IS NULL THEN     'Please check up the Reference No!(AGMT NO Does Not Matching or Invalid Agreement No)'
          ELSE
              CASE 
			  WHEN SUBSTR(INV_CHG_TP_NM,1,3) NOT IN ('X S', 'X V', 'X W', 'XSE', 'XVI', 'XWA', 'CRD','TAX') THEN
                          CASE 
                          WHEN D.EQ_NO IS NULL AND E.EQ_NO IS NULL AND F.EQ_NO IS NULL AND D2.EQ_NO IS NULL AND D3.EQ_NO IS NULL THEN 'Chassis No does not exist!'
                          WHEN A.INV_EQ_NO IS NULL AND A.INV_CUST_EQ_NO IS NOT NULL AND E.EQ_NO IS NULL AND F.EQ_NO IS NULL THEN  'Lessor Chassis No does not exist!'
                          END
              END
          END ,'OK') VRFY_RSLT_DESC
    ,DECODE(NVL( CASE 
          WHEN  LENGTH( TO_CHAR(INV_EQ_ONH_DT  ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the On-Hire Date!'
          WHEN  LENGTH( TO_CHAR(INV_EQ_OFFH_DT ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the Off-Hire Date!'
          WHEN  LENGTH( TO_CHAR(INV_BIL_ST_DT  ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the Billing Start Date!'
          WHEN  LENGTH( TO_CHAR(INV_BIL_END_DT ,'YYYYMMDD' ) ) <>8  THEN  'Please check up the Billing End Date!'
          WHEN  SUBSTR(INV_CHG_TP_NM,1,3) IN ('HON','DON') AND LENGTH( TO_CHAR(INV_EQ_ONH_DT,'YYYYMMDD' ) ) <> 8 THEN  'Please check up the On-Hire Date!'
          WHEN  INV_CHG_TP_NM IN ('HOF','DOF') AND LENGTH( TO_CHAR(INV_EQ_OFFH_DT,'YYYYMMDD' ) ) <> 8 THEN  'Please check up the Off-Hire Date!'
          WHEN  G.AGMT_OFC_CTY_CD IS NULL THEN     'Please check up the Reference No!(AGMT NO Does Not Matching or Invalid Agreement No)'
          ELSE
              CASE 
			  WHEN SUBSTR(INV_CHG_TP_NM,1,3) NOT IN ('X S', 'X V', 'X W', 'XSE', 'XVI', 'XWA', 'CRD','TAX') THEN
                          CASE 
                          WHEN D.EQ_NO IS NULL AND E.EQ_NO IS NULL AND F.EQ_NO IS NULL AND D2.EQ_NO IS NULL AND D3.EQ_NO IS NULL THEN 'Chassis No does not exist!'
                          WHEN A.INV_EQ_NO IS NULL AND A.INV_CUST_EQ_NO IS NOT NULL AND E.EQ_NO IS NULL AND F.EQ_NO IS NULL THEN  'Lessor Chassis No does not exist!'
                          END
              END
          END ,'OK'),'OK','Y','N') AS VRFY_SCS_FLG
    ,B.AGMT_OFC_CTY_CD
    ,B.AGMT_SEQ
    ,C.AGMT_VER_NO
    ,C.AGMT_LSTM_CD

    , CASE 
      WHEN A.CHG_CD = 'PDM' THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN 'EQCZLT'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN 'EQCZLT'
           WHEN C.AGMT_LSTM_CD = 'LP' THEN 'EQCZLP' 
           ELSE 'EQCZLT'
           END
      WHEN A.CHG_CD = 'WDP' THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN 'EQCZLT'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN 'EQCZLT'
           WHEN C.AGMT_LSTM_CD = 'LP' THEN 'EQCZLP' 
           ELSE 'EQCZLT'
           END
      WHEN A.CHG_CD = 'DOC' THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN 'EQCZLT'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN 'EQCZLT'
           ELSE 'EQCZLT'
           END
      WHEN A.CHG_CD IN ('HON','DON') THEN 'EQCZLT'
      WHEN A.CHG_CD IN ('HOF','DOF') THEN 'EQCZLT'
      WHEN A.CHG_CD IN ('GTO','GTI') THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'FO' THEN 'EQCZSB'
           WHEN C.AGMT_LSTM_CD = 'SB' THEN 'EQCZSB'
           WHEN C.AGMT_LSTM_CD = 'SO' THEN 'EQCZSB' 
           END
      ELSE 
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN 'EQXTXX'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN 'EQXTXX'
           ELSE 'EQXTXX'
           END
      END AS COST_CD
    , CASE 
      WHEN A.CHG_CD = 'PDM' THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'LP' THEN '510831' 
           ELSE '510831'
           END
      WHEN A.CHG_CD = 'WDP' THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'LP' THEN '510831' 
           ELSE '510831'
           END
      WHEN A.CHG_CD = 'DOC' THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN '510831'
           ELSE '510831'
           END
      WHEN A.CHG_CD IN ('HON','DON') THEN '510831'
      WHEN A.CHG_CD IN ('HOF','DOF') THEN '510831'
      WHEN A.CHG_CD IN ('GTO','GTI') THEN
           CASE 
           WHEN C.AGMT_LSTM_CD = 'FO' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'SB' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'SO' THEN '510831' 
           END
      ELSE 
           CASE 
           WHEN C.AGMT_LSTM_CD = 'ST' THEN '510831'
           WHEN C.AGMT_LSTM_CD = 'LT' THEN '510831'
           ELSE '510831'
           END
      END AS ACCT_CD      
                
            ,CASE WHEN A.CHG_CD IN ('X S', 'XSE') THEN 'SEA'||SUBSTR(A.COST_YRMON,3,4) || LPAD(RANK() OVER (PARTITION BY A.CHG_CD  ORDER BY ROWNUM ),3,0)
            WHEN A.CHG_CD IN ('X V', 'XVI') THEN 'VIR'||SUBSTR(A.COST_YRMON,3,4)|| LPAD(RANK() OVER (PARTITION BY A.CHG_CD  ORDER BY ROWNUM ),3,0)
            WHEN A.CHG_CD IN ('X W', 'XWA') THEN 'WAS'||SUBSTR(A.COST_YRMON,3,4)|| LPAD(RANK() OVER (PARTITION BY A.CHG_CD  ORDER BY ROWNUM ),3,0)
            WHEN A.CHG_CD IN ('CRD')        THEN 'CRD'||SUBSTR(A.COST_YRMON,3,4)|| LPAD(RANK() OVER (PARTITION BY A.CHG_CD  ORDER BY ROWNUM ),3,0)
        	WHEN A.CHG_CD IN ('TAX')        THEN 'TAX'||SUBSTR(A.COST_YRMON,3,4)|| LPAD(RANK() OVER (PARTITION BY A.CHG_CD  ORDER BY ROWNUM ),3,0)
            ELSE NVL( D.EQ_NO, NVL(E.EQ_NO, NVL(F.EQ_NO,NVL(D2.EQ_NO,D3.EQ_NO))) )
            END EQ_NO
        
                
    ,C.CURR_CD
    
FROM 
    CGM_LSE_INV_TMP A 
    LEFT JOIN CGM_INV_REF_NO_RGST B ON (A.INV_REF_NO = B.INV_REF_NO)
    LEFT JOIN CGM_AGREEMENT C ON (B.AGMT_OFC_CTY_CD = C.AGMT_OFC_CTY_CD AND B.AGMT_SEQ = C.AGMT_SEQ AND C.LST_VER_FLG = 'Y')


    LEFT JOIN CGM_EQUIPMENT D ON (A.INV_EQ_NO = D.EQ_NO AND D.EQ_KND_CD= @[eq_knd_cd])      --EQ_NO JN
	LEFT JOIN CGM_EQUIPMENT D2 ON (A.INV_EQ_NO = D2.CHSS_ALS_NO) --INV_EQ_NO, ALIAS1 JN
	LEFT JOIN CGM_EQUIPMENT D3 ON (A.INV_EQ_NO = D3.N2ND_CHSS_ALS_NO) -- INV_EQ_NO, ALIAS2 JN
    LEFT JOIN CGM_EQUIPMENT E ON (A.INV_CUST_EQ_NO = E.CHSS_ALS_NO)                         --CUST_EQ_NO ,ALIAS1 JN
    LEFT JOIN CGM_EQUIPMENT F ON (A.INV_CUST_EQ_NO = F.N2ND_CHSS_ALS_NO)                    --CUST_EQ_NO ,ALIAS2 JN
    LEFT JOIN CGM_LSE_CHG_HDR G ON ( 
			C.AGMT_OFC_CTY_CD = G.AGMT_OFC_CTY_CD 
			AND C.AGMT_SEQ = G.AGMT_SEQ  
			AND C.AGMT_VER_NO = G.AGMT_VER_NO
			AND G.COST_YRMON= A.COST_YRMON 
			AND G.CHG_CRE_SEQ = A.CHG_CRE_SEQ
    )    

WHERE
    A.CHG_CRE_SEQ = @[chg_cre_seq]

)   A
)   A
    -- B 에서, CHG_SEQ 하나에 대해서만 체크하여 C,D / InvOnly 판별.
    LEFT JOIN CGM_LSE_CHG_DTL B ON (    A.AGMT_OFC_CTY_CD = B.AGMT_OFC_CTY_CD 
                                        AND A.AGMT_SEQ = B.AGMT_SEQ
                                        AND A.AGMT_VER_NO = B.AGMT_VER_NO 
                                        AND A.COST_YRMON = B.COST_YRMON
                                        AND A.EQ_NO = B.EQ_NO
                                        AND A.CHG_CD = B.CHG_CD
                                        AND A.INV_SEQ = B.CHG_SEQ  
                                        AND B.EQ_KND_CD = @[eq_knd_cd]
										AND B.LSE_CHG_AUD_STS_CD  <>  'I') 								
    LEFT JOIN CGM_EQUIPMENT C   ON (    A.EQ_NO = C.EQ_NO )
    LEFT JOIN CGM_EQ_STS_HIS D  ON (    C.EQ_NO = D.EQ_NO AND C.EQ_STS_SEQ =  D.EQ_STS_SEQ)			]]></sql>
			<params>
				<param name="eq_knd_cd" type="12" value="" out="N"/>
				<param name="chg_cre_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
