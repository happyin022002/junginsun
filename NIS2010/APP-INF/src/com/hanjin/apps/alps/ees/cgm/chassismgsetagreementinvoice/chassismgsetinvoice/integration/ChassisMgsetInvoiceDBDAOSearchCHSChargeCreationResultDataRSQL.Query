<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChassisMgsetInvoiceDBDAOSearchCHSChargeCreationResultDataRSQL">
			<desc><![CDATA[2015-02 [CHM-201431711] COPS Charge Creation - Charge Audit Result & Payable Amount Confirm
2015 조직코드개편 Chang-Young Kim
CHM-201640236 COPS INVOICE 생성시 INVOICE 표기 로직 변경 version no에 해당하는 데이터 출력으로 변경]]></desc>
			<sql><![CDATA[
SELECT 
(SELECT INTG_CD_VAL_DP_DESC
   FROM COM_INTG_CD_DTL
  WHERE INTG_CD_ID = 'CD01944'
	AND INTG_CD_VAL_CTNT = A.LSE_CHG_STS_CD) LSE_CHG_STS_DESC,
  LSE_CHG_STS_CD,
  LSE_CHG_SMRY_AMT,
  INV_SMRY_AMT,
  INV_CR_AMT_DTL,
  PAY_LSE_CHG_AMT,
  DEBIT_AMT,
  CR_SMRY_AMT,
  TAX_SMRY_AMT,
  CRE_OFC_CD,
  CRE_USR_ID,
  CRE_DT,
  CHG_CRE_SEQ,
  COST_YRMON_SEQ,
  ORG_INV_NO,
  INV_NO,
  AGMT_OFC_CTY_CD,
  AGMT_SEQ,
  ( SELECT AGMT_REF_NO FROM CGM_AGREEMENT
     WHERE AGMT_OFC_CTY_CD = @[agmt_ofc_cty_cd]
       AND AGMT_SEQ        = @[agmt_seq]
       AND AGMT_VER_NO     = A.AGMT_VER_NO ) AS AGMT_REF_NO,
  CHSS_COP_INV_TP_CD,
  AGMT_VER_NO,
  ( SELECT LST_VER_FLG FROM CGM_AGREEMENT
     WHERE AGMT_OFC_CTY_CD = @[agmt_ofc_cty_cd]
       AND AGMT_SEQ        = @[agmt_seq]
       AND AGMT_VER_NO     = A.AGMT_VER_NO) AS LST_VER_FLG
FROM
(SELECT
MAX(A.LSE_CHG_STS_CD) AS LSE_CHG_STS_CD,
SUM(B.LSE_CHG_AMT) AS LSE_CHG_SMRY_AMT,
--SUM(
--CASE WHEN B.LSE_CHG_AUD_STS_CD IS NOT NULL THEN NVL( B.INV_LSE_CHG_AMT,0) + NVL(B.INV_TAX_AMT,0) - ABS(NVL(B.INV_CR_AMT,0)) 
--     ELSE 0
--     END
--)  INV_SMRY_AMT ,
-- 2015.03.20 Chang Young Kim Load, Audit을 거치지않은 데이터(lse_chg_aud_sts_cd is NULL)도 금액을 보여달라는 요청 ( by PHXSA 지연차장 )
SUM( NVL(B.INV_LSE_CHG_AMT,0) + NVL(B.INV_TAX_AMT,0) - ABS(NVL(B.INV_CR_AMT,0))) AS INV_SMRY_AMT ,
SUM( NVL(B.INV_TAX_AMT,0) ) AS INV_TAX_AMT_DTL,
SUM( NVL(B.INV_CR_AMT ,0) ) AS INV_CR_AMT_DTL,

SUM (CASE WHEN B.PAY_LSE_CHG_STS_CD = 'C' AND A.LSE_CHG_STS_CD IN ('S','C')  THEN
        NVL( B.PAY_LSE_CHG_AMT,0) + NVL(B.PAY_TAX_AMT,0) - ABS(NVL(B.PAY_CR_AMT,0))  
     ELSE 0 END   ) PAY_LSE_CHG_AMT,
SUM (CASE WHEN B.PAY_LSE_CHG_STS_CD = 'C' AND A.LSE_CHG_STS_CD IN ('S','C') THEN
        NVL( B.PAY_LSE_CHG_AMT,0) 
     ELSE 0 END   ) DEBIT_AMT,
SUM (CASE WHEN B.PAY_LSE_CHG_STS_CD = 'C' AND A.LSE_CHG_STS_CD IN ('S','C') THEN
        ABS(NVL(B.PAY_CR_AMT,0))  
     ELSE 0 END   ) CR_SMRY_AMT,
SUM (CASE WHEN B.PAY_LSE_CHG_STS_CD = 'C' AND A.LSE_CHG_STS_CD IN ('S','C') THEN
        NVL(B.PAY_TAX_AMT,0) 
     ELSE 0 END   ) TAX_SMRY_AMT,
MAX(A.CRE_OFC_CD) AS CRE_OFC_CD,
MAX(A.CRE_USR_ID) AS CRE_USR_ID,
MAX(TO_CHAR(A.CRE_DT, 'YYYY-MM-DD')) AS CRE_DT,
A.CHG_CRE_SEQ,
A.COST_YRMON_SEQ,
MAX(A.ORG_INV_NO)       ORG_INV_NO,
MAX(A.INV_NO)           INV_NO,
MAX(A.AGMT_OFC_CTY_CD)  AGMT_OFC_CTY_CD,
MAX(A.AGMT_SEQ)         AGMT_SEQ,
MAX(A.CHSS_COP_INV_TP_CD) CHSS_COP_INV_TP_CD,
A.AGMT_VER_NO

FROM CGM_LSE_CHG_HDR A , CGM_LSE_CHG_DTL B
WHERE 
A.AGMT_OFC_CTY_CD = B.AGMT_OFC_CTY_CD(+)
AND A.AGMT_SEQ = B.AGMT_SEQ(+)
AND A.COST_YRMON = B.COST_YRMON(+)
AND A.COST_YRMON_SEQ = B.COST_YRMON_SEQ(+)
AND A.EQ_KND_CD = @[eq_knd_cd]
AND B.EQ_KND_CD(+) = @[eq_knd_cd]

AND A.AGMT_OFC_CTY_CD = @[agmt_ofc_cty_cd]
AND A.AGMT_SEQ = @[agmt_seq]
AND A.COST_YRMON = @[cost_yrmon]
#if(${agmt_ver_no} != '')
AND A.AGMT_VER_NO = @[agmt_ver_no]
#end

GROUP BY A.CHG_CRE_SEQ, A.COST_YRMON_SEQ, A.AGMT_VER_NO) A

ORDER BY A.COST_YRMON_SEQ			]]></sql>
			<params>
				<param name="agmt_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="12" value="" out="N"/>
				<param name="eq_knd_cd" type="12" value="" out="N"/>
				<param name="cost_yrmon" type="12" value="" out="N"/>
				<param name="agmt_ver_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
