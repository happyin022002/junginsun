<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OnhireBalanceDBDAOsearchPlanAndApprovalRSQL">
			<desc><![CDATA[LT/ST/OW Plan & Approval 화면 조회 쿼리]]></desc>
			<sql><![CDATA[
-- LT/ST/OW Plan & Approval 화면 조회 쿼리
-- EES_EQR_1040
-- 2013/12/18, ONH_ORD_YR, ONH_PKUP_YRWK 추가, 신용찬

SELECT   A.LSE_RQST_NO
       , A.ONH_ORD_YR
       , A.ONH_PLN_YRWK
       , A.ONH_PKUP_YRWK
       , A.RCC_CD
       , A.LCC_CD
       , A.EQ_LSTM_CD
       , A.LSE_PLN_SEQ -- HIDDEN
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D2' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D2' )
         END D2_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D4' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D4' )
         END D4_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D5' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D5' )
         END D5_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D7' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D7' )
         END D7_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'R2' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'R2' )
         END R2_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'R5' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'R5' )
         END R5_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'D9', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D9' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'D9' )
         END R9_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'O2' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'O2' )
         END O2_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'O4' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'O4' )
         END O4_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'O5' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'O5' )
         END O5_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'S2' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'S2' )
         END S2_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'S4' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'S4' )
         END S4_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'F2' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'F2' )
         END F2_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'F4' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'F4' )
         END F4_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'F5' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'F5' )
         END F5_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'A2' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'A2' )
         END A2_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'A4' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'A4' )
         END A4_QTY
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN SUM(DECODE(B.CNTR_TPSZ_CD, 'A5', B.CNTR_QTY))
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'A5' )
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN ( SELECT SUM(ONH_QTY) FROM LSE_ONH_APRO_QTY Q WHERE Q.CNTR_ONH_AUTH_NO = C.CNTR_ONH_AUTH_NO AND Q.AGMT_CTY_CD = C.AGMT_CTY_CD AND Q.AGMT_SEQ = C.AGMT_SEQ AND CNTR_TPSZ_CD = 'A5' )
         END A5_QTY
       , C.CNTR_ONH_AUTH_NO
       , C.MFT_YR
       , C.AGMT_CTY_CD||C.AGMT_SEQ AGMT_NO
       , C.ONH_LOC_CD
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN 'S'
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN 'R'
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN 'A'
         END STS_CD  -- HIDDEN
       , CASE WHEN A.LSE_RQST_NO IS NULL     AND C.CNTR_ONH_AUTH_NO IS NULL     THEN 'Saved'
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NULL     THEN 'Requested'
              WHEN A.LSE_RQST_NO IS NOT NULL AND C.CNTR_ONH_AUTH_NO IS NOT NULL THEN 'Approved'
         END STS_NM   
FROM     EQR_CTRL_ONH_PLN_APRO A
       , EQR_CTRL_ONH_PLN_APRO_QTY B
       , (
           SELECT   LSE_RQST_NO
                  , CNTR_ONH_AUTH_NO
                  , MFT_YR
                  , AGMT_CTY_CD
                  , AGMT_SEQ AGMT_NO
                  , AGMT_SEQ
                  , ONH_LOC_CD
           FROM     LSE_ONH_APRO
           WHERE    1 = 1
           AND      DELT_FLG  = 'N'
         ) C
WHERE    1 = 1
AND      A.ONH_PLN_YRWK = B.ONH_PLN_YRWK
AND      A.LCC_CD       = B.LCC_CD
AND      A.EQ_LSTM_CD   = B.EQ_LSTM_CD
AND      A.LSE_PLN_SEQ  = B.LSE_PLN_SEQ
AND      A.LSE_RQST_NO  = C.LSE_RQST_NO(+)


-- <검색조건> [S] ------------

-- WEEK
#if(${div_flag} == '1') -- APPROVAL WEEK
AND      A.ONH_PLN_YRWK = @[yrwk]

#elseif(${div_flag} == '2') -- APPROVAL WEEK - PERIOD
    #if(${periodtp} == 'W') -- PERIOD WEEK
AND      A.ONH_PLN_YRWK BETWEEN @[fmperiod] AND @[toperiod]
    #else -- PERIOD MONTH
AND      A.ONH_PLN_YRWK BETWEEN ( SELECT MIN(PLN_YR)||MIN(PLN_WK) FMPERIOD FROM EQR_WK_PRD WHERE PLN_YR = SUBSTR(@[fmperiod],1,4) AND PLN_MON = SUBSTR(@[fmperiod],5,6) )
                        AND     ( SELECT MIN(PLN_YR)||MAX(PLN_WK) TOPERIOD FROM EQR_WK_PRD WHERE PLN_YR = SUBSTR(@[toperiod],1,4) AND PLN_MON = SUBSTR(@[toperiod],5,6) )
    #end

#elseif(${div_flag} == '3') -- PICK-UP WEEK
AND      A.ONH_PKUP_YRWK = @[yrwk_pkup]

#elseif(${div_flag} == '4') -- PICK-UP WEEK - PERIOD
    #if(${periodtp_pkup} == 'W') -- PERIOD WEEK
AND      A.ONH_PKUP_YRWK BETWEEN @[fmperiod_pkup] AND @[toperiod_pkup]
    #else -- PERIOD MONTH
AND      A.ONH_PKUP_YRWK BETWEEN ( SELECT MIN(PLN_YR)||MIN(PLN_WK) FMPERIOD FROM EQR_WK_PRD WHERE PLN_YR = SUBSTR(@[fmperiod_pkup],1,4) AND PLN_MON = SUBSTR(@[fmperiod_pkup],5,6) )
                         AND     ( SELECT MIN(PLN_YR)||MAX(PLN_WK) TOPERIOD FROM EQR_WK_PRD WHERE PLN_YR = SUBSTR(@[toperiod_pkup],1,4) AND PLN_MON = SUBSTR(@[toperiod_pkup],5,6) )
    #end

#end

-- LOCATION
AND      A.LCC_CD IN (
                       SELECT   LCC_CD
                       FROM     MDM_EQ_ORZ_CHT
                       WHERE    1 = 1
#if(${rcc_cd} != '' && ${rcc_cd} != 'ALL')
                       AND      RCC_CD = @[rcc_cd] -- RCC
#end
#if(${lcc_cd} != '' && ${lcc_cd} != 'ALL')
                       AND      LCC_CD = @[lcc_cd] -- LCC
#end
                     )

-- STATUS
-- R
#if(${sts_cd} == 'R')
AND      A.LSE_RQST_NO IS NOT NULL
AND      C.CNTR_ONH_AUTH_NO IS NULL 
-- S
#elseif(${sts_cd} == 'S')
AND      A.LSE_RQST_NO IS NULL
AND      C.CNTR_ONH_AUTH_NO IS NULL
---- A
#elseif(${sts_cd} == 'A')
AND      A.LSE_RQST_NO IS NOT NULL
AND      C.CNTR_ONH_AUTH_NO IS NOT NULL
#end

-- <검색조건> [E] ------------

GROUP BY A.LSE_RQST_NO
       , A.ONH_ORD_YR
       , A.ONH_PLN_YRWK
       , A.ONH_PKUP_YRWK
       , A.RCC_CD
       , A.LCC_CD
       , A.EQ_LSTM_CD
       , A.LSE_PLN_SEQ
       , C.CNTR_ONH_AUTH_NO
       , C.MFT_YR
       , C.AGMT_CTY_CD
       , C.AGMT_SEQ
       , C.ONH_LOC_CD
ORDER BY A.ONH_PLN_YRWK
       , A.RCC_CD
       , A.LCC_CD
       , A.EQ_LSTM_CD
       , A.LSE_PLN_SEQ			]]></sql>
			<params>
				<param name="yrwk" type="12" value="" out="N"/>
				<param name="fmperiod" type="12" value="" out="N"/>
				<param name="toperiod" type="12" value="" out="N"/>
				<param name="yrwk_pkup" type="12" value="" out="N"/>
				<param name="fmperiod_pkup" type="12" value="" out="N"/>
				<param name="toperiod_pkup" type="12" value="" out="N"/>
				<param name="rcc_cd" type="12" value="" out="N"/>
				<param name="lcc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
