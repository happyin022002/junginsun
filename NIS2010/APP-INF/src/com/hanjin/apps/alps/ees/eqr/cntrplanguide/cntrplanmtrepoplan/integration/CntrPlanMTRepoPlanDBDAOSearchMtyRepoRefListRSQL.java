/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : CntrPlanMTRepoPlanDBDAOSearchMtyRepoRefListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.20
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.20 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.cntrplanguide.cntrplanmtrepoplan.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CntrPlanMTRepoPlanDBDAOSearchMtyRepoRefListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Mt Ref list 조회
	  * - CHM-201537079, 2015-08-10, 신용찬, 표준코드 변환
	  * </pre>
	  */
	public CntrPlanMTRepoPlanDBDAOSearchMtyRepoRefListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_eta_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("subtrade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("last_pol_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_vvd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("trade",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rlane",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qty_tp",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.cntrplanguide.cntrplanmtrepoplan.integration").append("\n"); 
		query.append("FileName : CntrPlanMTRepoPlanDBDAOSearchMtyRepoRefListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH " ).append("\n"); 
		query.append("PARAMS AS (" ).append("\n"); 
		query.append("    SELECT @[rlane]       AS RLANE_CD," ).append("\n"); 
		query.append("           SUBSTR(@[s_vvd_cd],1,4)     AS VSL_CD," ).append("\n"); 
		query.append("           SUBSTR(@[s_vvd_cd],5,4) AS SKD_VOY_NO," ).append("\n"); 
		query.append("           SUBSTR(@[s_vvd_cd],9) AS SKD_DIR_CD," ).append("\n"); 
		query.append("           '1'           AS STS," ).append("\n"); 
		query.append("           @[qty_tp]      AS QTY_TP," ).append("\n"); 
		query.append("           'Y'   AS VOID_FLG" ).append("\n"); 
		query.append("    FROM DUAL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", CUR_PORTS AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD       , " ).append("\n"); 
		query.append("           VSL_CD         ," ).append("\n"); 
		query.append("           SKD_VOY_NO     , " ).append("\n"); 
		query.append("           SKD_DIR_CD     ," ).append("\n"); 
		query.append("           PORT_CD        ," ).append("\n"); 
		query.append("           YD_CD          ," ).append("\n"); 
		query.append("           CLPT_SEQ       ," ).append("\n"); 
		query.append("           CLPT_IND_SEQ   ," ).append("\n"); 
		query.append("           TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("           TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("           TURN_CLPT_IND_SEQ   ," ).append("\n"); 
		query.append("           FLG            ," ).append("\n"); 
		query.append("           BSA            ," ).append("\n"); 
		query.append("           STS" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT P.RLANE_CD   ," ).append("\n"); 
		query.append("                     S1.VSL_CD    ," ).append("\n"); 
		query.append("                     S1.SKD_VOY_NO," ).append("\n"); 
		query.append("                     S1.SKD_DIR_CD," ).append("\n"); 
		query.append("                     S1.VPS_PORT_CD AS PORT_CD," ).append("\n"); 
		query.append("                     S1.YD_CD     ," ).append("\n"); 
		query.append("                     S1.CLPT_SEQ           AS CLPT_SEQ," ).append("\n"); 
		query.append("                     S1.CLPT_IND_SEQ       AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     S1.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                     S1.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                     S1.TURN_CLPT_IND_SEQ       AS TURN_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                            WHEN TRIM(S1.TURN_SKD_VOY_NO) IS NULL  THEN 2" ).append("\n"); 
		query.append("                            WHEN S1.TURN_PORT_IND_CD IN ('Y', 'N') THEN 1" ).append("\n"); 
		query.append("                                                                   ELSE 3" ).append("\n"); 
		query.append("                        END" ).append("\n"); 
		query.append("                     ) AS FLG," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT (" ).append("\n"); 
		query.append("                                  SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                                    FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                                         MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                                   WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                                     AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.BSA_OP_JB_CD(+) = DECODE(P.QTY_TP, '1', '007', '016') -- Port별 Weight 정보" ).append("\n"); 
		query.append("                                     AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                                     AND A.PORT_CD     (+) = NVL(SUBSTR(S1.YD_CD, 1, 5), S1.VPS_PORT_CD)" ).append("\n"); 
		query.append("                               ) AS BSA" ).append("\n"); 
		query.append("                          FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("                         WHERE C.RLANE_CD     = P.RLANE_CD" ).append("\n"); 
		query.append("                           AND C.VSL_CD       = P.VSL_CD" ).append("\n"); 
		query.append("                           AND C.SKD_VOY_NO   = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND C.SKD_DIR_CD   = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND C.BSA_OP_JB_CD = DECODE(P.QTY_TP, '1', '007', '009')" ).append("\n"); 
		query.append("                           AND C.CRR_CD       = 'SML'" ).append("\n"); 
		query.append("                     ) AS BSA," ).append("\n"); 
		query.append("                     P.STS" ).append("\n"); 
		query.append("                FROM VSK_VSL_PORT_SKD S1," ).append("\n"); 
		query.append("                     PARAMS           P" ).append("\n"); 
		query.append("               WHERE (S1.SKD_CNG_STS_CD IS NULL OR S1.SKD_CNG_STS_CD <> 'S')" ).append("\n"); 
		query.append("                 AND S1.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("                 AND S1.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND S1.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND S1.VPS_PORT_CD NOT IN ('EGSUZ')" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_BASE AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD  ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           MAX(STS) AS STS," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '1', TURN_SKD_VOY_NO)) AS PRE_SKD_VOY_NO," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '1', TURN_SKD_DIR_CD)) AS PRE_SKD_DIR_CD," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '3', TURN_SKD_VOY_NO)) AS PST_SKD_VOY_NO," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '3', TURN_SKD_DIR_CD)) AS PST_SKD_DIR_CD" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT S1.RLANE_CD       ," ).append("\n"); 
		query.append("                     S1.VSL_CD         ," ).append("\n"); 
		query.append("                     S1.SKD_VOY_NO     ," ).append("\n"); 
		query.append("                     S1.SKD_DIR_CD     ," ).append("\n"); 
		query.append("                     S1.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                     S1.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                     DECODE(S2.SKD_VOY_NO, NULL, '', S1.FLG) AS FLG," ).append("\n"); 
		query.append("                     S1.STS" ).append("\n"); 
		query.append("                FROM CUR_PORTS        S1," ).append("\n"); 
		query.append("                     VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("               WHERE S1.VSL_CD          = S2.VSL_CD    (+)" ).append("\n"); 
		query.append("                 AND S1.TURN_SKD_VOY_NO = S2.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                 AND S1.TURN_SKD_DIR_CD = S2.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                 AND S1.YD_CD           = S2.YD_CD     (+)" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("  GROUP BY RLANE_CD  ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SKD AS (" ).append("\n"); 
		query.append("    SELECT B.RLANE_CD," ).append("\n"); 
		query.append("           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS BASE_VVD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             DECODE(S1.SKD_VOY_NO||S1.SKD_DIR_CD, B.PRE_SKD_VOY_NO||B.PRE_SKD_DIR_CD, '1'," ).append("\n"); 
		query.append("                                                  B.SKD_VOY_NO||B.SKD_DIR_CD        , '2'," ).append("\n"); 
		query.append("                                                  B.PST_SKD_VOY_NO||B.PST_SKD_DIR_CD, '3'  )" ).append("\n"); 
		query.append("           ) AS TP," ).append("\n"); 
		query.append("           S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("           S1.VSL_CD     ," ).append("\n"); 
		query.append("           S1.SKD_VOY_NO ," ).append("\n"); 
		query.append("           S1.SKD_DIR_CD ," ).append("\n"); 
		query.append("           S1.VPS_PORT_CD," ).append("\n"); 
		query.append("           S1.YD_CD      ," ).append("\n"); 
		query.append("           S1.CLPT_SEQ   ," ).append("\n"); 
		query.append("           S1.CLPT_IND_SEQ," ).append("\n"); 
		query.append("           S1.TURN_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           SPC_CONTI_CONV_FNC(LOC.CONTI_CD, B.RLANE_CD) AS PORT_CONTI," ).append("\n"); 
		query.append("           S1.TURN_PORT_IND_CD," ).append("\n"); 
		query.append("           NVL(S1.SKD_CNG_STS_CD, ' ') AS CNG_STS_CD," ).append("\n"); 
		query.append("           S1.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("           S1.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("           S1.VSL_CD||S1.TURN_SKD_VOY_NO||S1.TURN_SKD_DIR_CD AS TURN_VVD," ).append("\n"); 
		query.append("           B.PRE_SKD_VOY_NO," ).append("\n"); 
		query.append("           B.PRE_SKD_DIR_CD," ).append("\n"); 
		query.append("           B.PST_SKD_VOY_NO," ).append("\n"); 
		query.append("           B.PST_SKD_DIR_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             SELECT PRD.COST_YR||LPAD(CEIL((TO_CHAR(S1.VPS_ETD_DT, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 2, '0')" ).append("\n"); 
		query.append("               FROM MAS_WK_PRD PRD" ).append("\n"); 
		query.append("              WHERE PRD.COST_YR = TO_CHAR(S1.VPS_ETD_DT, 'YYYY')" ).append("\n"); 
		query.append("                AND PRD.COST_WK = '01'" ).append("\n"); 
		query.append("           ) AS COST_YRWK," ).append("\n"); 
		query.append("           MAX(S1.CLPT_SEQ) OVER (PARTITION BY S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD||S1.YD_CD) AS MAX_SEQ," ).append("\n"); 
		query.append("           B.STS          " ).append("\n"); 
		query.append("      FROM MDM_LOCATION     LOC," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("           VVD_BASE         B" ).append("\n"); 
		query.append("     WHERE LOC.LOC_CD = S1.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND S1.VSL_CD  = B.VSL_CD" ).append("\n"); 
		query.append("       AND ((S1.SKD_VOY_NO, S1.SKD_DIR_CD) IN ((B.SKD_VOY_NO, B.SKD_DIR_CD), (B.PRE_SKD_VOY_NO, B.PRE_SKD_DIR_CD), (B.PST_SKD_VOY_NO, B.PST_SKD_DIR_CD)))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SEQ AS (" ).append("\n"); 
		query.append("    SELECT TP        ," ).append("\n"); 
		query.append("           VVD       ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           POL_CD," ).append("\n"); 
		query.append("           POD_CD," ).append("\n"); 
		query.append("           POL_SEQ  ," ).append("\n"); 
		query.append("           POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           POD_SEQ  ," ).append("\n"); 
		query.append("           POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           POL_CONTI," ).append("\n"); 
		query.append("           POD_CONTI," ).append("\n"); 
		query.append("           POL_YRWK ," ).append("\n"); 
		query.append("           POD_YRWK ,        " ).append("\n"); 
		query.append("           (SELECT " ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                   DECODE(S1.STS, '1', CASE WHEN VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS_PORT_CD ) THEN 'Y'" ).append("\n"); 
		query.append("                                                                                                                                               ELSE 'N'" ).append("\n"); 
		query.append("                                       END, '2', 'N', '3', 'Y')" ).append("\n"); 
		query.append("                 )" ).append("\n"); 
		query.append("             FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("             WHERE VSL_CD = S1.VSL_CD" ).append("\n"); 
		query.append("             AND SKD_VOY_NO = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("             AND SKD_DIR_CD = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("             AND CLPT_SEQ = S1.CLPT_SEQ ) AS PAST" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT S1.TP        ," ).append("\n"); 
		query.append("                   S1.VVD       ," ).append("\n"); 
		query.append("                   S1.VSL_CD    ," ).append("\n"); 
		query.append("                   S1.SKD_VOY_NO," ).append("\n"); 
		query.append("                   S1.SKD_DIR_CD," ).append("\n"); 
		query.append("                   S1.CLPT_SEQ  ," ).append("\n"); 
		query.append("                   S1.STS       ," ).append("\n"); 
		query.append("                   NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD," ).append("\n"); 
		query.append("                   NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD," ).append("\n"); 
		query.append("                   S1.CLPT_SEQ   AS POL_SEQ  ," ).append("\n"); 
		query.append("                   S1.TURN_PORT_IND_CD," ).append("\n"); 
		query.append("                   S1.CLPT_IND_SEQ AS POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                   DECODE(S1.BASE_VVD, S1.TURN_VVD, S1.TURN_CLPT_IND_SEQ, S1.CLPT_IND_SEQ) AS POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("                   S2.CLPT_SEQ   AS POD_SEQ  ," ).append("\n"); 
		query.append("                   S2.TURN_PORT_IND_CD," ).append("\n"); 
		query.append("                   S2.CLPT_IND_SEQ AS POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                   DECODE(S2.BASE_VVD, S2.TURN_VVD, S2.TURN_CLPT_IND_SEQ, S2.CLPT_IND_SEQ) AS POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("                   S1.PORT_CONTI AS POL_CONTI," ).append("\n"); 
		query.append("                   S2.PORT_CONTI AS POD_CONTI," ).append("\n"); 
		query.append("                   S1.COST_YRWK  AS POL_YRWK ," ).append("\n"); 
		query.append("                   S2.COST_YRWK  AS POD_YRWK " ).append("\n"); 
		query.append("              FROM PORT_SKD S1," ).append("\n"); 
		query.append("                   PORT_SKD S2" ).append("\n"); 
		query.append("             WHERE S1.VSL_CD     = S2.VSL_CD" ).append("\n"); 
		query.append("               AND S1.SKD_VOY_NO = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND S1.SKD_DIR_CD = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("               AND S1.CLPT_SEQ   < S2.CLPT_SEQ" ).append("\n"); 
		query.append("               AND S1.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("               AND S1.CNG_STS_CD <> 'S'" ).append("\n"); 
		query.append("               AND ( S1.CLPT_SEQ = S1.MAX_SEQ OR S2.CLPT_SEQ < S1.MAX_SEQ )" ).append("\n"); 
		query.append("               AND DECODE(S1.TP, 1, S2.TURN_VVD, 2, S1.VVD, 3, S1.TURN_VVD) = S1.BASE_VVD" ).append("\n"); 
		query.append("        )    S1       " ).append("\n"); 
		query.append("  ORDER BY TP     ," ).append("\n"); 
		query.append("           POL_SEQ," ).append("\n"); 
		query.append("           POD_SEQ" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_LD_PORT AS (" ).append("\n"); 
		query.append("    SELECT S1.VSL_CD    ," ).append("\n"); 
		query.append("           S1.SKD_VOY_NO," ).append("\n"); 
		query.append("           S1.SKD_DIR_CD," ).append("\n"); 
		query.append("           SUBSTR(MAX(LTRIM(TO_CHAR(S1.POD_SEQ, 'FM000'))|| S1.POD_CD), 4) AS LD_PORT" ).append("\n"); 
		query.append("      FROM PORT_SEQ S1" ).append("\n"); 
		query.append("  GROUP BY S1.VSL_CD    ," ).append("\n"); 
		query.append("           S1.SKD_VOY_NO," ).append("\n"); 
		query.append("           S1.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", COPY AS (" ).append("\n"); 
		query.append("    SELECT LEVEL SEQ" ).append("\n"); 
		query.append("      FROM DUAL" ).append("\n"); 
		query.append("CONNECT BY LEVEL <= 5" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA AS (" ).append("\n"); 
		query.append("    SELECT 2 AS SRC       ," ).append("\n"); 
		query.append("           Z.TP           ," ).append("\n"); 
		query.append("           Z.POL_CD       ," ).append("\n"); 
		query.append("           Z.POL_SEQ      ," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.POD_CD       ," ).append("\n"); 
		query.append("           Z.POD_SEQ      ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.IOC_CD       ," ).append("\n"); 
		query.append("           Z.BKG_CGO_TP_CD," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           Z.QTY_D2 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_D4 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_D5 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_D7 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_R2 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_R5 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_R9 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_O2 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_O4 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_S2 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_S4 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_F2 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_F4 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_F5 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_A2 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_A4 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_A5 , --20131115" ).append("\n"); 
		query.append("           Z.QTY_WT_TTL , --20131115" ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           Z.QTY_TTL ," ).append("\n"); 
		query.append("           Z.QTY_HC_TTL," ).append("\n"); 
		query.append("           Z.QTY_45_TTL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                   Z.TP           ," ).append("\n"); 
		query.append("                   Z.POL_CD       ," ).append("\n"); 
		query.append("                   Z.POL_SEQ      ," ).append("\n"); 
		query.append("                   Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.POD_CD       ," ).append("\n"); 
		query.append("                   Z.POD_SEQ      ," ).append("\n"); 
		query.append("                   Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.IOC_CD       ," ).append("\n"); 
		query.append("                   Z.BKG_CGO_TP_CD," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(Z.VAL_WT, 0))) AS QTY_WT_TTL, --20131115" ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP, '1', SUBSTR(Z.VAL, 1, 14), SUBSTR(Z.VAL, 15)), 0))) AS QTY_TTL," ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP, '1', DECODE(Z.VOID_FLG, 'Y',SUBSTR(Z.VAL_HC, 1, 14),0),0), 0))) AS QTY_HC_TTL, --20130807" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP, '1', DECODE(Z.VOID_FLG, 'Y',SUBSTR(Z.VAL_45, 1, 14),0),0), 0))) AS QTY_45_TTL, --20130807" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_D2,1,14),SUBSTR(Z.VAL_D2,15)),0))) AS QTY_D2, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_D4,1,14),SUBSTR(Z.VAL_D4,15)),0))) AS QTY_D4, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_D5,1,14),SUBSTR(Z.VAL_D5,15)),0))) AS QTY_D5, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_D7,1,14),SUBSTR(Z.VAL_D7,15)),0))) AS QTY_D7, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_R2,1,14),SUBSTR(Z.VAL_R2,15)),0))) AS QTY_R2, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_R5,1,14),SUBSTR(Z.VAL_R5,15)),0))) AS QTY_R5, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_R9,1,14),SUBSTR(Z.VAL_R9,15)),0))) AS QTY_R9, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_O2,1,14),SUBSTR(Z.VAL_O2,15)),0))) AS QTY_O2, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_O4,1,14),SUBSTR(Z.VAL_O4,15)),0))) AS QTY_O4, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_S2,1,14),SUBSTR(Z.VAL_S2,15)),0))) AS QTY_S2, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_S4,1,14),SUBSTR(Z.VAL_S4,15)),0))) AS QTY_S4, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_F2,1,14),SUBSTR(Z.VAL_F2,15)),0))) AS QTY_F2, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_F4,1,14),SUBSTR(Z.VAL_F4,15)),0))) AS QTY_F4, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_F5,1,14),SUBSTR(Z.VAL_F5,15)),0))) AS QTY_F5, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_A2,1,14),SUBSTR(Z.VAL_A2,15)),0))) AS QTY_A2, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_A4,1,14),SUBSTR(Z.VAL_A4,15)),0))) AS QTY_A4, --20131115" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP,'1',SUBSTR(Z.VAL_A5,1,14),SUBSTR(Z.VAL_A5,15)),0))) AS QTY_A5 --20131115" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT B.TP    ," ).append("\n"); 
		query.append("                             B.POL_CD," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                             B.POD_CD," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             B.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                             DECODE(BK.BKG_CGO_TP_CD, 'P', 'M', 'F') AS BKG_CGO_TP_CD," ).append("\n"); 
		query.append("                             DECODE(BV.VSL_PRE_PST_CD, 'T', DECODE(B.POL_CONTI, B.POD_CONTI, 2, 1), 3) AS IOC_CD," ).append("\n"); 
		query.append("                             (" ).append("\n"); 
		query.append("                               SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                      || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                              FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                             WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                            ) AS VAL," ).append("\n"); 
		query.append("                             (" ).append("\n"); 
		query.append("                               SELECT    TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                              FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                             WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                            ) AS VAL_WT," ).append("\n"); 
		query.append("                            P.QTY_TP,                  " ).append("\n"); 
		query.append("                            " ).append("\n"); 
		query.append("                            --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='D2') AS VAL_D2, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='D4') AS VAL_D4, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='D5') AS VAL_D5, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='D7') AS VAL_D7, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='R2') AS VAL_R2, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='R5') AS VAL_R5, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='R9') AS VAL_R9, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='O2') AS VAL_O2, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='O4') AS VAL_O4, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='S2') AS VAL_S2, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='S4') AS VAL_S4, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='F2') AS VAL_F2, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='F4') AS VAL_F4, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='F5') AS VAL_F5, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='A2') AS VAL_A2, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='A4') AS VAL_A4, --20131115" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(SUM(Q.OP_CNTR_QTY),'FM0000000000.000')||TO_CHAR((MAX(D.ACT_WGT)*DECODE(MAX(D.WGT_UT_CD),'LBS',0.00045,0.001)) + SUM(Q.OP_CNTR_QTY*(SELECT TS.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ TS WHERE TS.CNTR_TPSZ_CD=Q.CNTR_TPSZ_CD))*0.001,'FM0000000000.000') FROM BKG_QUANTITY Q WHERE BK.BKG_NO=Q.BKG_NO AND Q.OP_CNTR_QTY>0 AND Q.CNTR_TPSZ_CD='A5') AS VAL_A5, --20131115" ).append("\n"); 
		query.append("                            " ).append("\n"); 
		query.append("                            (" ).append("\n"); 
		query.append("                               SELECT TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD),'5',Q.OP_CNTR_QTY,'8',Q.OP_CNTR_QTY,'9',Q.OP_CNTR_QTY,0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                  AND SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD) IN ('5','8','9')" ).append("\n"); 
		query.append("                            ) AS VAL_HC, --20130807" ).append("\n"); 
		query.append("                            (" ).append("\n"); 
		query.append("                               SELECT TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD),'7',Q.OP_CNTR_QTY,0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                  AND SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD) = '7'" ).append("\n"); 
		query.append("                            ) AS VAL_45, --20130807                          " ).append("\n"); 
		query.append("                            P.VOID_FLG    --20130807                         " ).append("\n"); 
		query.append("                       FROM BKG_BOOKING BK," ).append("\n"); 
		query.append("                            BKG_VVD     BV," ).append("\n"); 
		query.append("                            PORT_SEQ    B ," ).append("\n"); 
		query.append("                            PARAMS      P ," ).append("\n"); 
		query.append("                            VVD_LD_PORT LD," ).append("\n"); 
		query.append("                            BKG_BL_DOC  D" ).append("\n"); 
		query.append("                      WHERE BV.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                        AND BV.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND BV.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND BV.VSL_CD     = LD.VSL_CD" ).append("\n"); 
		query.append("                        AND BV.SKD_VOY_NO = LD.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND BV.SKD_DIR_CD = LD.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND BV.POL_YD_CD   = B.POL_CD" ).append("\n"); 
		query.append("                        AND BV.POL_CLPT_IND_SEQ  = B.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                        AND DECODE(BV.POD_CD, 'XXXXX', LD.LD_PORT, BV.POD_YD_CD) = B.POD_CD" ).append("\n"); 
		query.append("                        AND BV.POD_CLPT_IND_SEQ  = B.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                        AND BK.BKG_NO      = BV.BKG_NO" ).append("\n"); 
		query.append("                        AND BK.BKG_STS_CD IN ('F', 'W')" ).append("\n"); 
		query.append("                        AND BK.BKG_NO      = D.BKG_NO" ).append("\n"); 
		query.append("                   ) Z" ).append("\n"); 
		query.append("          GROUP BY Z.TP    ," ).append("\n"); 
		query.append("                   Z.POL_CD       ," ).append("\n"); 
		query.append("                   Z.POL_SEQ      ," ).append("\n"); 
		query.append("                   Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.POD_CD       ," ).append("\n"); 
		query.append("                   Z.POD_SEQ      ," ).append("\n"); 
		query.append("                   Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.IOC_CD," ).append("\n"); 
		query.append("                   Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("        ) Z                  " ).append("\n"); 
		query.append("  ORDER BY Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.POD_CD       ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", MT_DATA AS (" ).append("\n"); 
		query.append("    SELECT T.SEQ SRC," ).append("\n"); 
		query.append("           Z.TP     ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.IOC_CD ," ).append("\n"); 
		query.append("           SUM(Z.QTY_D2) AS QTY_D2," ).append("\n"); 
		query.append("           SUM(Z.QTY_D4) AS QTY_D4," ).append("\n"); 
		query.append("           SUM(Z.QTY_D5) AS QTY_D5," ).append("\n"); 
		query.append("           SUM(Z.QTY_D7) AS QTY_D7," ).append("\n"); 
		query.append("           SUM(Z.QTY_R2) AS QTY_R2," ).append("\n"); 
		query.append("           SUM(Z.QTY_R5) AS QTY_R5," ).append("\n"); 
		query.append("           SUM(Z.QTY_R9) AS QTY_R9," ).append("\n"); 
		query.append("           SUM(Z.QTY_O2) AS QTY_O2," ).append("\n"); 
		query.append("           SUM(Z.QTY_O4) AS QTY_O4," ).append("\n"); 
		query.append("           SUM(Z.QTY_S2) AS QTY_S2," ).append("\n"); 
		query.append("           SUM(Z.QTY_S4) AS QTY_S4," ).append("\n"); 
		query.append("           SUM(Z.QTY_F2) AS QTY_F2," ).append("\n"); 
		query.append("           SUM(Z.QTY_F4) AS QTY_F4," ).append("\n"); 
		query.append("           SUM(Z.QTY_F5) AS QTY_F5," ).append("\n"); 
		query.append("           SUM(Z.QTY_A2) AS QTY_A2," ).append("\n"); 
		query.append("           SUM(Z.QTY_A4) AS QTY_A4," ).append("\n"); 
		query.append("           SUM(Z.QTY_A5) AS QTY_A5," ).append("\n"); 
		query.append("           SUM(Z.QTY_WT_TTL) AS QTY_WT_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_HC_TTL) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_45_TTL) AS QTY_45_TTL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT TP         ," ).append("\n"); 
		query.append("                     POL_CD     ," ).append("\n"); 
		query.append("                     POL_SEQ    ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD     ," ).append("\n"); 
		query.append("                     POD_SEQ    ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     4 AS IOC_CD," ).append("\n"); 
		query.append("                     QTY_D2 , --20131115" ).append("\n"); 
		query.append("                     QTY_D4 , --20131115" ).append("\n"); 
		query.append("                     QTY_D5 , --20131115" ).append("\n"); 
		query.append("                     QTY_D7 , --20131115" ).append("\n"); 
		query.append("                     QTY_R2 , --20131115" ).append("\n"); 
		query.append("                     QTY_R5 , --20131115" ).append("\n"); 
		query.append("                     QTY_R9 , --20131115" ).append("\n"); 
		query.append("                     QTY_O2 , --20131115" ).append("\n"); 
		query.append("                     QTY_O4 , --20131115" ).append("\n"); 
		query.append("                     QTY_S2 , --20131115" ).append("\n"); 
		query.append("                     QTY_S4 , --20131115" ).append("\n"); 
		query.append("                     QTY_F2 , --20131115" ).append("\n"); 
		query.append("                     QTY_F4 , --20131115" ).append("\n"); 
		query.append("                     QTY_F5 , --20131115" ).append("\n"); 
		query.append("                     QTY_A2 , --20131115" ).append("\n"); 
		query.append("                     QTY_A4 , --20131115" ).append("\n"); 
		query.append("                     QTY_A5 , --20131115" ).append("\n"); 
		query.append("                     QTY_WT_TTL , --20131115" ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     QTY_HC_TTL," ).append("\n"); 
		query.append("                     QTY_45_TTL" ).append("\n"); 
		query.append("                FROM BKG_DATA" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'M'" ).append("\n"); 
		query.append("           ) Z," ).append("\n"); 
		query.append("           COPY T" ).append("\n"); 
		query.append("     WHERE T.SEQ <= 4" ).append("\n"); 
		query.append("  GROUP BY T.SEQ   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALL_DATA AS (" ).append("\n"); 
		query.append("    SELECT 1 AS SRC," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_D2, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_D2, 0), DECODE(Z.SRC, 1, Z.QTY_D2, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_D2), DECODE(Z.SRC, 1, Z.QTY_D2)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_D2, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_D4, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_D4, 0), DECODE(Z.SRC, 1, Z.QTY_D4, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_D4), DECODE(Z.SRC, 1, Z.QTY_D4)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_D4, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_D5, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_D5, 0), DECODE(Z.SRC, 1, Z.QTY_D5, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_D5), DECODE(Z.SRC, 1, Z.QTY_D5)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_D5, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_D7, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_D7, 0), DECODE(Z.SRC, 1, Z.QTY_D7, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_D7), DECODE(Z.SRC, 1, Z.QTY_D7)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_D7, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_R2, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_R2, 0), DECODE(Z.SRC, 1, Z.QTY_R2, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_R2), DECODE(Z.SRC, 1, Z.QTY_R2)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_R2, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_R5, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_R5, 0), DECODE(Z.SRC, 1, Z.QTY_R5, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_R5), DECODE(Z.SRC, 1, Z.QTY_R5)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_R5, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_R9, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_R9, 0), DECODE(Z.SRC, 1, Z.QTY_R9, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_R9), DECODE(Z.SRC, 1, Z.QTY_R9)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_R9, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_O2, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_O2, 0), DECODE(Z.SRC, 1, Z.QTY_O2, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_O2), DECODE(Z.SRC, 1, Z.QTY_O2)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_O2, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_O4, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_O4, 0), DECODE(Z.SRC, 1, Z.QTY_O4, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_O4), DECODE(Z.SRC, 1, Z.QTY_O4)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_O4, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_S2, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_S2, 0), DECODE(Z.SRC, 1, Z.QTY_S2, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_S2), DECODE(Z.SRC, 1, Z.QTY_S2)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_S2, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_S4, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_S4, 0), DECODE(Z.SRC, 1, Z.QTY_S4, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_S4), DECODE(Z.SRC, 1, Z.QTY_S4)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_S4, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_F2, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_F2, 0), DECODE(Z.SRC, 1, Z.QTY_F2, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_F2), DECODE(Z.SRC, 1, Z.QTY_F2)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_F2, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_F4, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_F4, 0), DECODE(Z.SRC, 1, Z.QTY_F4, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_F4), DECODE(Z.SRC, 1, Z.QTY_F4)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_F4, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_F5, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_F5, 0), DECODE(Z.SRC, 1, Z.QTY_F5, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_F5), DECODE(Z.SRC, 1, Z.QTY_F5)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_F5, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_A2, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_A2, 0), DECODE(Z.SRC, 1, Z.QTY_A2, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_A2), DECODE(Z.SRC, 1, Z.QTY_A2)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_A2, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_A4, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_A4, 0), DECODE(Z.SRC, 1, Z.QTY_A4, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_A4), DECODE(Z.SRC, 1, Z.QTY_A4)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_A4, --20131115" ).append("\n"); 
		query.append("           ( CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_A5, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_A5, 0), DECODE(Z.SRC, 1, Z.QTY_A5, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_A5), DECODE(Z.SRC, 1, Z.QTY_A5)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_A5, --20131115" ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_WT_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_WT_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_WT_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_WT_TTL), DECODE(Z.SRC, 1, Z.QTY_WT_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_WT_TTL, --20131115" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("           -- 이미 지난경우는 BKG물량 사용, 나머지의 경우 OCEAN이고 이전항차와 겹치면 BKG물량, 나머지의 경우 ALLOCATION 물량" ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_TTL), DECODE(Z.SRC, 1, Z.QTY_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_TTL," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_HC_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_HC_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_HC_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_HC_TTL), DECODE(Z.SRC, 1, Z.QTY_HC_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_45_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_45_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_45_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_45_TTL), DECODE(Z.SRC, 1, Z.QTY_45_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_45_TTL,           " ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT SRC   ," ).append("\n"); 
		query.append("                     TP    ," ).append("\n"); 
		query.append("                     POL_CD," ).append("\n"); 
		query.append("                     POL_SEQ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD ," ).append("\n"); 
		query.append("                     POD_SEQ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     IOC_CD," ).append("\n"); 
		query.append("                     QTY_D2 , --20131115" ).append("\n"); 
		query.append("                     QTY_D4 , --20131115" ).append("\n"); 
		query.append("                     QTY_D5 , --20131115" ).append("\n"); 
		query.append("                     QTY_D7 , --20131115" ).append("\n"); 
		query.append("                     QTY_R2 , --20131115" ).append("\n"); 
		query.append("                     QTY_R5 , --20131115" ).append("\n"); 
		query.append("                     QTY_R9 , --20131115" ).append("\n"); 
		query.append("                     QTY_O2 , --20131115" ).append("\n"); 
		query.append("                     QTY_O4 , --20131115" ).append("\n"); 
		query.append("                     QTY_S2 , --20131115" ).append("\n"); 
		query.append("                     QTY_S4 , --20131115" ).append("\n"); 
		query.append("                     QTY_F2 , --20131115" ).append("\n"); 
		query.append("                     QTY_F4 , --20131115" ).append("\n"); 
		query.append("                     QTY_F5 , --20131115" ).append("\n"); 
		query.append("                     QTY_A2 , --20131115" ).append("\n"); 
		query.append("                     QTY_A4 , --20131115" ).append("\n"); 
		query.append("                     QTY_A5 , --20131115" ).append("\n"); 
		query.append("                     QTY_WT_TTL , --20131115" ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     QTY_HC_TTL AS QTY_HC_TTL," ).append("\n"); 
		query.append("                     QTY_45_TTL AS QTY_45_TTL" ).append("\n"); 
		query.append("                FROM BKG_DATA" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("           ) Z," ).append("\n"); 
		query.append("           PORT_SEQ P" ).append("\n"); 
		query.append("     WHERE P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT Z.SRC   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           SUM(Z.QTY_D2) AS QTY_D2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_D4) AS QTY_D4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_D5) AS QTY_D5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_D7) AS QTY_D7, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_R2) AS QTY_R2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_R5) AS QTY_R5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_R9) AS QTY_R9, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_O2) AS QTY_O2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_O4) AS QTY_O4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_S2) AS QTY_S2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_S4) AS QTY_S4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_F2) AS QTY_F2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_F4) AS QTY_F4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_F5) AS QTY_F5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_A2) AS QTY_A2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_A4) AS QTY_A4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_A5) AS QTY_A5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_WT_TTL) AS QTY_WT_TTL, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_HC_TTL) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_45_TTL) AS QTY_45_TTL," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM BKG_DATA Z," ).append("\n"); 
		query.append("           PORT_SEQ P" ).append("\n"); 
		query.append("     WHERE Z.BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("       AND P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.SRC   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT Z.SRC    ," ).append("\n"); 
		query.append("           Z.TP     ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD ," ).append("\n"); 
		query.append("           SUM(Z.QTY_D2) AS QTY_D2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_D4) AS QTY_D4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_D5) AS QTY_D5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_D7) AS QTY_D7, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_R2) AS QTY_R2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_R5) AS QTY_R5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_R9) AS QTY_R9, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_O2) AS QTY_O2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_O4) AS QTY_O4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_S2) AS QTY_S2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_S4) AS QTY_S4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_F2) AS QTY_F2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_F4) AS QTY_F4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_F5) AS QTY_F5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_A2) AS QTY_A2, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_A4) AS QTY_A4, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_A5) AS QTY_A5, --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_WT_TTL) AS QTY_WT_TTL , --20131115" ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL ," ).append("\n"); 
		query.append("           SUM(Z.QTY_HC_TTL) AS QTY_HC_TTL ," ).append("\n"); 
		query.append("           SUM(Z.QTY_45_TTL) AS QTY_45_TTL ," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM MT_DATA Z," ).append("\n"); 
		query.append("           PORT_SEQ P" ).append("\n"); 
		query.append("     WHERE P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.SRC   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_MAP AS (" ).append("\n"); 
		query.append("    SELECT C1.SEQ AS SRC   ," ).append("\n"); 
		query.append("           C2.SEQ AS IOC_CD," ).append("\n"); 
		query.append("           P.PORT_CD ," ).append("\n"); 
		query.append("           P.YD_CD   ," ).append("\n"); 
		query.append("           P.CLPT_SEQ," ).append("\n"); 
		query.append("           P.CLPT_IND_SEQ," ).append("\n"); 
		query.append("           P.FLG     ," ).append("\n"); 
		query.append("--           P.PAST    ," ).append("\n"); 
		query.append("           P.BSA" ).append("\n"); 
		query.append("      FROM CUR_PORTS P ," ).append("\n"); 
		query.append("           COPY      C1," ).append("\n"); 
		query.append("           COPY      C2" ).append("\n"); 
		query.append("     WHERE C1.SEQ <= 4" ).append("\n"); 
		query.append("       AND C2.SEQ <= 5" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", WK_PRD AS (" ).append("\n"); 
		query.append("    SELECT MAX(A.SLS_FM_DT) AS WK_FM_DT" ).append("\n"); 
		query.append("      FROM MAS_WK_PRD A" ).append("\n"); 
		query.append("     WHERE (A.COST_YR,COST_WK) =" ).append("\n"); 
		query.append("           (SELECT SUBSTR(SLS_YRMON,1,4),COST_WK" ).append("\n"); 
		query.append("              FROM MAS_MON_VVD CMV," ).append("\n"); 
		query.append("                   PARAMS      P" ).append("\n"); 
		query.append("             WHERE CMV.TRD_CD     = SAQ_GET_REP_TRD_FNC(P.RLANE_CD)" ).append("\n"); 
		query.append("               AND CMV.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("               AND CMV.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("               AND CMV.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND CMV.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("               AND CMV.DELT_FLG   = 'N'" ).append("\n"); 
		query.append("               AND ROWNUM         = 1)" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("VOID_CALC_BASIC AS (" ).append("\n"); 
		query.append("SELECT DISTINCT RLANE_CD, " ).append("\n"); 
		query.append("       VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("       --YD_CD ," ).append("\n"); 
		query.append("       (SELECT WK_FM_DT" ).append("\n"); 
		query.append("          FROM WK_PRD" ).append("\n"); 
		query.append("       ) AS WK_FM_DT       " ).append("\n"); 
		query.append("  FROM CUR_PORTS" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", SPC_BTLNK_TPSZ AS (" ).append("\n"); 
		query.append("  SELECT PS.RLANE_CD, PS.VSL_CD, PS.SKD_VOY_NO, PS.SKD_DIR_CD, " ).append("\n"); 
		query.append("         DECODE(SRC, 1, 'A', 2, 'B', 3, 'F', 4, 'M') AS SRC," ).append("\n"); 
		query.append("         DECODE(IOC_CD, 1, 'OCN', 2, 'IPC', 3, 'T/S', 4, 'MT', 5, 'TOTAL') AS IOC_CD," ).append("\n"); 
		query.append("         PORT_CD ," ).append("\n"); 
		query.append("         PORT_SEQ," ).append("\n"); 
		query.append("         FLG     ," ).append("\n"); 
		query.append("         LOD_TTL ," ).append("\n"); 
		query.append("         DIS_TTL ," ).append("\n"); 
		query.append("         ON_TTL  ," ).append("\n"); 
		query.append("         " ).append("\n"); 
		query.append("         ROUND(NVL(SPC_LANE_RGST_QTY_FNC('HC',VCB.RLANE_CD, VCB.WK_FM_DT, SUBSTR(PORT_CD,1,5),  VCB.VVD, Z.BSA, NVL(Z.ON_HC_TTL, 0)),0)) +" ).append("\n"); 
		query.append("         ROUND(NVL(SPC_LANE_RGST_QTY_FNC('45',VCB.RLANE_CD, VCB.WK_FM_DT, SUBSTR(PORT_CD,1,5),  VCB.VVD, Z.BSA, NVL(Z.ON_45_TTL, 0)),0)) AS VOID_TEU," ).append("\n"); 
		query.append("         " ).append("\n"); 
		query.append("         --20131115" ).append("\n"); 
		query.append("         LOD_D2_TTL," ).append("\n"); 
		query.append("         LOD_D4_TTL," ).append("\n"); 
		query.append("         LOD_D5_TTL," ).append("\n"); 
		query.append("         LOD_D7_TTL," ).append("\n"); 
		query.append("         LOD_R2_TTL," ).append("\n"); 
		query.append("         LOD_R5_TTL," ).append("\n"); 
		query.append("         LOD_R9_TTL," ).append("\n"); 
		query.append("         LOD_O2_TTL," ).append("\n"); 
		query.append("         LOD_O4_TTL," ).append("\n"); 
		query.append("         LOD_S2_TTL," ).append("\n"); 
		query.append("         LOD_S4_TTL," ).append("\n"); 
		query.append("         LOD_F2_TTL," ).append("\n"); 
		query.append("         LOD_F4_TTL," ).append("\n"); 
		query.append("         LOD_F5_TTL," ).append("\n"); 
		query.append("         LOD_A2_TTL," ).append("\n"); 
		query.append("         LOD_A4_TTL," ).append("\n"); 
		query.append("         LOD_A5_TTL," ).append("\n"); 
		query.append("         DIS_D2_TTL," ).append("\n"); 
		query.append("         DIS_D4_TTL," ).append("\n"); 
		query.append("         DIS_D5_TTL," ).append("\n"); 
		query.append("         DIS_D7_TTL," ).append("\n"); 
		query.append("         DIS_R2_TTL," ).append("\n"); 
		query.append("         DIS_R5_TTL," ).append("\n"); 
		query.append("         DIS_R9_TTL," ).append("\n"); 
		query.append("         DIS_O2_TTL," ).append("\n"); 
		query.append("         DIS_O4_TTL," ).append("\n"); 
		query.append("         DIS_S2_TTL," ).append("\n"); 
		query.append("         DIS_S4_TTL," ).append("\n"); 
		query.append("         DIS_F2_TTL," ).append("\n"); 
		query.append("         DIS_F4_TTL," ).append("\n"); 
		query.append("         DIS_F5_TTL," ).append("\n"); 
		query.append("         DIS_A2_TTL," ).append("\n"); 
		query.append("         DIS_A4_TTL," ).append("\n"); 
		query.append("         DIS_A5_TTL," ).append("\n"); 
		query.append("         ON_D2_TTL," ).append("\n"); 
		query.append("         ON_D4_TTL," ).append("\n"); 
		query.append("         ON_D5_TTL," ).append("\n"); 
		query.append("         ON_D7_TTL," ).append("\n"); 
		query.append("         ON_R2_TTL," ).append("\n"); 
		query.append("         ON_R5_TTL," ).append("\n"); 
		query.append("         ON_R9_TTL," ).append("\n"); 
		query.append("         ON_O2_TTL," ).append("\n"); 
		query.append("         ON_O4_TTL," ).append("\n"); 
		query.append("         ON_S2_TTL," ).append("\n"); 
		query.append("         ON_S4_TTL," ).append("\n"); 
		query.append("         ON_F2_TTL," ).append("\n"); 
		query.append("         ON_F4_TTL," ).append("\n"); 
		query.append("         ON_F5_TTL," ).append("\n"); 
		query.append("         ON_A2_TTL," ).append("\n"); 
		query.append("         ON_A4_TTL," ).append("\n"); 
		query.append("         ON_A5_TTL," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         PAST    ," ).append("\n"); 
		query.append("         BSA" ).append("\n"); 
		query.append("    FROM VOID_CALC_BASIC VCB," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("            SELECT Z.SRC     ," ).append("\n"); 
		query.append("                   Z.IOC_CD  ," ).append("\n"); 
		query.append("                   Z.PORT_CD ," ).append("\n"); 
		query.append("                   Z.PORT_SEQ," ).append("\n"); 
		query.append("                   Z.FLG     ," ).append("\n"); 
		query.append("                   Z.LOD_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_TTL + Z.PRE_TTL) AS DIS_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_TTL + Z.LOD_TTL - Z.DIS_TTL - Z.PRE_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   Z.LOD_HC_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_HC_TTL + Z.PRE_HC_TTL) AS DIS_HC_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_HC_TTL + Z.LOD_HC_TTL - Z.DIS_HC_TTL - Z.PRE_HC_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_HC_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   Z.LOD_45_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_45_TTL + Z.PRE_45_TTL) AS DIS_45_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_45_TTL + Z.LOD_45_TTL - Z.DIS_45_TTL - Z.PRE_45_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_45_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   --20131115" ).append("\n"); 
		query.append("                   Z.LOD_D2_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_D2_TTL + Z.PRE_D2_TTL) AS DIS_D2_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_D2_TTL + Z.LOD_D2_TTL - Z.DIS_D2_TTL - Z.PRE_D2_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_D2_TTL," ).append("\n"); 
		query.append("                   Z.LOD_D4_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_D4_TTL + Z.PRE_D4_TTL) AS DIS_D4_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_D4_TTL + Z.LOD_D4_TTL - Z.DIS_D4_TTL - Z.PRE_D4_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_D4_TTL," ).append("\n"); 
		query.append("                   Z.LOD_D5_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_D5_TTL + Z.PRE_D5_TTL) AS DIS_D5_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_D5_TTL + Z.LOD_D5_TTL - Z.DIS_D5_TTL - Z.PRE_D5_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_D5_TTL," ).append("\n"); 
		query.append("                   Z.LOD_D7_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_D7_TTL + Z.PRE_D7_TTL) AS DIS_D7_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_D7_TTL + Z.LOD_D7_TTL - Z.DIS_D7_TTL - Z.PRE_D7_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_D7_TTL," ).append("\n"); 
		query.append("                   Z.LOD_R2_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_R2_TTL + Z.PRE_R2_TTL) AS DIS_R2_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_R2_TTL + Z.LOD_R2_TTL - Z.DIS_R2_TTL - Z.PRE_R2_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_R2_TTL," ).append("\n"); 
		query.append("                   Z.LOD_R5_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_R5_TTL + Z.PRE_R5_TTL) AS DIS_R5_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_R5_TTL + Z.LOD_R5_TTL - Z.DIS_R5_TTL - Z.PRE_R5_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_R5_TTL," ).append("\n"); 
		query.append("                   Z.LOD_R9_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_R9_TTL + Z.PRE_R9_TTL) AS DIS_R9_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_R9_TTL + Z.LOD_R9_TTL - Z.DIS_R9_TTL - Z.PRE_R9_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_R9_TTL," ).append("\n"); 
		query.append("                   Z.LOD_O2_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_O2_TTL + Z.PRE_O2_TTL) AS DIS_O2_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_O2_TTL + Z.LOD_O2_TTL - Z.DIS_O2_TTL - Z.PRE_O2_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_O2_TTL," ).append("\n"); 
		query.append("                   Z.LOD_O4_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_O4_TTL + Z.PRE_O4_TTL) AS DIS_O4_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_O4_TTL + Z.LOD_O4_TTL - Z.DIS_O4_TTL - Z.PRE_O4_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_O4_TTL," ).append("\n"); 
		query.append("                   Z.LOD_S2_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_S2_TTL + Z.PRE_S2_TTL) AS DIS_S2_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_S2_TTL + Z.LOD_S2_TTL - Z.DIS_S2_TTL - Z.PRE_S2_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_S2_TTL," ).append("\n"); 
		query.append("                   Z.LOD_S4_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_S4_TTL + Z.PRE_S4_TTL) AS DIS_S4_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_S4_TTL + Z.LOD_S4_TTL - Z.DIS_S4_TTL - Z.PRE_S4_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_S4_TTL," ).append("\n"); 
		query.append("                   Z.LOD_F2_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_F2_TTL + Z.PRE_F2_TTL) AS DIS_F2_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_F2_TTL + Z.LOD_F2_TTL - Z.DIS_F2_TTL - Z.PRE_F2_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_F2_TTL," ).append("\n"); 
		query.append("                   Z.LOD_F4_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_F4_TTL + Z.PRE_F4_TTL) AS DIS_F4_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_F4_TTL + Z.LOD_F4_TTL - Z.DIS_F4_TTL - Z.PRE_F4_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_F4_TTL," ).append("\n"); 
		query.append("                   Z.LOD_F5_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_F5_TTL + Z.PRE_F5_TTL) AS DIS_F5_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_F5_TTL + Z.LOD_F5_TTL - Z.DIS_F5_TTL - Z.PRE_F5_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_F5_TTL," ).append("\n"); 
		query.append("                   Z.LOD_A2_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_A2_TTL + Z.PRE_A2_TTL) AS DIS_A2_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_A2_TTL + Z.LOD_A2_TTL - Z.DIS_A2_TTL - Z.PRE_A2_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_A2_TTL," ).append("\n"); 
		query.append("                   Z.LOD_A4_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_A4_TTL + Z.PRE_A4_TTL) AS DIS_A4_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_A4_TTL + Z.LOD_A4_TTL - Z.DIS_A4_TTL - Z.PRE_A4_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_A4_TTL," ).append("\n"); 
		query.append("                   Z.LOD_A5_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_A5_TTL + Z.PRE_A5_TTL) AS DIS_A5_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_A5_TTL + Z.LOD_A5_TTL - Z.DIS_A5_TTL - Z.PRE_A5_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_A5_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   Z.PAST," ).append("\n"); 
		query.append("                   Z.BSA ," ).append("\n"); 
		query.append("                   '' AS T" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT M.SRC   ," ).append("\n"); 
		query.append("                             M.IOC_CD," ).append("\n"); 
		query.append("                             NVL(NVL(M.YD_CD, M.PORT_CD), 'TOTAL') AS PORT_CD," ).append("\n"); 
		query.append("                             NVL(M.CLPT_SEQ, 0) AS PORT_SEQ," ).append("\n"); 
		query.append("                             M.FLG ," ).append("\n"); 
		query.append("                             Z.PAST, " ).append("\n"); 
		query.append("                             M.BSA ," ).append("\n"); 
		query.append("--                             Z.PORT_SEQ, Z.LOD_TTL, Z.DIS_TTL" ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_TTL)) AS LOD_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_TTL)) AS DIS_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_TTL)) AS PRE_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_TTL), 0) AS ON_TTL," ).append("\n"); 
		query.append("                             " ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_HC_TTL)) AS LOD_HC_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_HC_TTL)) AS DIS_HC_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_HC_TTL)) AS PRE_HC_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_HC_TTL), 0) AS ON_HC_TTL," ).append("\n"); 
		query.append("                             " ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_45_TTL)) AS LOD_45_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_45_TTL)) AS DIS_45_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_45_TTL)) AS PRE_45_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_45_TTL), 0) AS ON_45_TTL," ).append("\n"); 
		query.append("                             " ).append("\n"); 
		query.append("                             --20131115" ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_D2_TTL)) AS LOD_D2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_D2_TTL)) AS DIS_D2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_D2_TTL)) AS PRE_D2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_D2_TTL), 0) AS ON_D2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_D4_TTL)) AS LOD_D4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_D4_TTL)) AS DIS_D4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_D4_TTL)) AS PRE_D4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_D4_TTL), 0) AS ON_D4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_D5_TTL)) AS LOD_D5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_D5_TTL)) AS DIS_D5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_D5_TTL)) AS PRE_D5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_D5_TTL), 0) AS ON_D5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_D7_TTL)) AS LOD_D7_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_D7_TTL)) AS DIS_D7_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_D7_TTL)) AS PRE_D7_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_D7_TTL), 0) AS ON_D7_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_R2_TTL)) AS LOD_R2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_R2_TTL)) AS DIS_R2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_R2_TTL)) AS PRE_R2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_R2_TTL), 0) AS ON_R2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_R5_TTL)) AS LOD_R5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_R5_TTL)) AS DIS_R5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_R5_TTL)) AS PRE_R5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_R5_TTL), 0) AS ON_R5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_R9_TTL)) AS LOD_R9_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_R9_TTL)) AS DIS_R9_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_R9_TTL)) AS PRE_R9_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_R9_TTL), 0) AS ON_R9_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_O2_TTL)) AS LOD_O2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_O2_TTL)) AS DIS_O2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_O2_TTL)) AS PRE_O2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_O2_TTL), 0) AS ON_O2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_O4_TTL)) AS LOD_O4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_O4_TTL)) AS DIS_O4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_O4_TTL)) AS PRE_O4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_O4_TTL), 0) AS ON_O4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_S2_TTL)) AS LOD_S2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_S2_TTL)) AS DIS_S2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_S2_TTL)) AS PRE_S2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_S2_TTL), 0) AS ON_S2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_S4_TTL)) AS LOD_S4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_S4_TTL)) AS DIS_S4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_S4_TTL)) AS PRE_S4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_S4_TTL), 0) AS ON_S4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_F2_TTL)) AS LOD_F2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_F2_TTL)) AS DIS_F2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_F2_TTL)) AS PRE_F2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_F2_TTL), 0) AS ON_F2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_F4_TTL)) AS LOD_F4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_F4_TTL)) AS DIS_F4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_F4_TTL)) AS PRE_F4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_F4_TTL), 0) AS ON_F4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_F5_TTL)) AS LOD_F5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_F5_TTL)) AS DIS_F5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_F5_TTL)) AS PRE_F5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_F5_TTL), 0) AS ON_F5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_A2_TTL)) AS LOD_A2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_A2_TTL)) AS DIS_A2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_A2_TTL)) AS PRE_A2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_A2_TTL), 0) AS ON_A2_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_A4_TTL)) AS LOD_A4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_A4_TTL)) AS DIS_A4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_A4_TTL)) AS PRE_A4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_A4_TTL), 0) AS ON_A4_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_A5_TTL)) AS LOD_A5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_A5_TTL)) AS DIS_A5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_A5_TTL)) AS PRE_A5_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_A5_TTL), 0) AS ON_A5_TTL" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT A.SRC," ).append("\n"); 
		query.append("                                       MIN(A.PAST) OVER (PARTITION BY A.SRC, A.IOC_CD, A.PORT_CD) AS PAST," ).append("\n"); 
		query.append("                                       A.IOC_CD," ).append("\n"); 
		query.append("                                       A.SEQ," ).append("\n"); 
		query.append("                                       A.PORT_CD," ).append("\n"); 
		query.append("                                       A.PORT_SEQ," ).append("\n"); 
		query.append("                                       A.CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                       A.LOD_TTL," ).append("\n"); 
		query.append("                                       A.DIS_TTL," ).append("\n"); 
		query.append("                                       A.PRE_TTL," ).append("\n"); 
		query.append("                                       A.LOD_HC_TTL," ).append("\n"); 
		query.append("                                       A.DIS_HC_TTL," ).append("\n"); 
		query.append("                                       A.PRE_HC_TTL," ).append("\n"); 
		query.append("                                       A.LOD_45_TTL," ).append("\n"); 
		query.append("                                       A.DIS_45_TTL," ).append("\n"); 
		query.append("                                       A.PRE_45_TTL," ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                       --20131115" ).append("\n"); 
		query.append("                                       A.LOD_D2_TTL," ).append("\n"); 
		query.append("                                       A.DIS_D2_TTL," ).append("\n"); 
		query.append("                                       A.PRE_D2_TTL," ).append("\n"); 
		query.append("                                       A.LOD_D4_TTL," ).append("\n"); 
		query.append("                                       A.DIS_D4_TTL," ).append("\n"); 
		query.append("                                       A.PRE_D4_TTL," ).append("\n"); 
		query.append("                                       A.LOD_D5_TTL," ).append("\n"); 
		query.append("                                       A.DIS_D5_TTL," ).append("\n"); 
		query.append("                                       A.PRE_D5_TTL," ).append("\n"); 
		query.append("                                       A.LOD_D7_TTL," ).append("\n"); 
		query.append("                                       A.DIS_D7_TTL," ).append("\n"); 
		query.append("                                       A.PRE_D7_TTL," ).append("\n"); 
		query.append("                                       A.LOD_R2_TTL," ).append("\n"); 
		query.append("                                       A.DIS_R2_TTL," ).append("\n"); 
		query.append("                                       A.PRE_R2_TTL," ).append("\n"); 
		query.append("                                       A.LOD_R5_TTL," ).append("\n"); 
		query.append("                                       A.DIS_R5_TTL," ).append("\n"); 
		query.append("                                       A.PRE_R5_TTL," ).append("\n"); 
		query.append("                                       A.LOD_R9_TTL," ).append("\n"); 
		query.append("                                       A.DIS_R9_TTL," ).append("\n"); 
		query.append("                                       A.PRE_R9_TTL," ).append("\n"); 
		query.append("                                       A.LOD_O2_TTL," ).append("\n"); 
		query.append("                                       A.DIS_O2_TTL," ).append("\n"); 
		query.append("                                       A.PRE_O2_TTL," ).append("\n"); 
		query.append("                                       A.LOD_O4_TTL," ).append("\n"); 
		query.append("                                       A.DIS_O4_TTL," ).append("\n"); 
		query.append("                                       A.PRE_O4_TTL," ).append("\n"); 
		query.append("                                       A.LOD_S2_TTL," ).append("\n"); 
		query.append("                                       A.DIS_S2_TTL," ).append("\n"); 
		query.append("                                       A.PRE_S2_TTL," ).append("\n"); 
		query.append("                                       A.LOD_S4_TTL," ).append("\n"); 
		query.append("                                       A.DIS_S4_TTL," ).append("\n"); 
		query.append("                                       A.PRE_S4_TTL," ).append("\n"); 
		query.append("                                       A.LOD_F2_TTL," ).append("\n"); 
		query.append("                                       A.DIS_F2_TTL," ).append("\n"); 
		query.append("                                       A.PRE_F2_TTL," ).append("\n"); 
		query.append("                                       A.LOD_F4_TTL," ).append("\n"); 
		query.append("                                       A.DIS_F4_TTL," ).append("\n"); 
		query.append("                                       A.PRE_F4_TTL," ).append("\n"); 
		query.append("                                       A.LOD_F5_TTL," ).append("\n"); 
		query.append("                                       A.DIS_F5_TTL," ).append("\n"); 
		query.append("                                       A.PRE_F5_TTL," ).append("\n"); 
		query.append("                                       A.LOD_A2_TTL," ).append("\n"); 
		query.append("                                       A.DIS_A2_TTL," ).append("\n"); 
		query.append("                                       A.PRE_A2_TTL," ).append("\n"); 
		query.append("                                       A.LOD_A4_TTL," ).append("\n"); 
		query.append("                                       A.DIS_A4_TTL," ).append("\n"); 
		query.append("                                       A.PRE_A4_TTL," ).append("\n"); 
		query.append("                                       A.LOD_A5_TTL," ).append("\n"); 
		query.append("                                       A.DIS_A5_TTL," ).append("\n"); 
		query.append("                                       A.PRE_A5_TTL," ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                       A.TP" ).append("\n"); 
		query.append("                                  FROM (    " ).append("\n"); 
		query.append("                                        SELECT A.SRC," ).append("\n"); 
		query.append("                                               A.PAST," ).append("\n"); 
		query.append("                                               Q.SEQ," ).append("\n"); 
		query.append("                                               DECODE(T.SEQ, 2, 5, A.IOC_CD)                        AS IOC_CD ," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.POL_CD, A.POD_CD)                 AS PORT_CD," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.POL_SEQ, A.POD_SEQ)              AS PORT_SEQ," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.POL_CLPT_IND_SEQ1, A.POD_CLPT_IND_SEQ1)              AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_TTL, 0)                       AS LOD_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_TTL), 0) AS DIS_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_TTL, 0)                      AS PRE_TTL," ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_HC_TTL, 0)                       AS LOD_HC_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_HC_TTL), 0) AS DIS_HC_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_HC_TTL, 0)                      AS PRE_HC_TTL," ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_45_TTL, 0)                       AS LOD_45_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_45_TTL), 0) AS DIS_45_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_45_TTL, 0)                      AS PRE_45_TTL,                                               " ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               --20131115" ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_D2, 0)                       AS LOD_D2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_D2), 0) AS DIS_D2_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_D2, 0)                      AS PRE_D2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_D4, 0)                       AS LOD_D4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_D4), 0) AS DIS_D4_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_D4, 0)                      AS PRE_D4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_D5, 0)                       AS LOD_D5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_D5), 0) AS DIS_D5_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_D5, 0)                      AS PRE_D5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_D7, 0)                       AS LOD_D7_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_D7), 0) AS DIS_D7_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_D7, 0)                      AS PRE_D7_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_R2, 0)                       AS LOD_R2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_R2), 0) AS DIS_R2_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_R2, 0)                      AS PRE_R2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_R5, 0)                       AS LOD_R5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_R5), 0) AS DIS_R5_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_R5, 0)                      AS PRE_R5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_R9, 0)                       AS LOD_R9_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_R9), 0) AS DIS_R9_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_R9, 0)                      AS PRE_R9_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_O2, 0)                       AS LOD_O2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_O2), 0) AS DIS_O2_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_O2, 0)                      AS PRE_O2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_O4, 0)                       AS LOD_O4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_O4), 0) AS DIS_O4_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_O4, 0)                      AS PRE_O4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_S2, 0)                       AS LOD_S2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_S2), 0) AS DIS_S2_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_S2, 0)                      AS PRE_S2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_S4, 0)                       AS LOD_S4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_S4), 0) AS DIS_S4_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_S4, 0)                      AS PRE_S4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_F2, 0)                       AS LOD_F2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_F2), 0) AS DIS_F2_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_F2, 0)                      AS PRE_F2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_F4, 0)                       AS LOD_F4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_F4), 0) AS DIS_F4_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_F4, 0)                      AS PRE_F4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_F5, 0)                       AS LOD_F5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_F5), 0) AS DIS_F5_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_F5, 0)                      AS PRE_F5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_A2, 0)                       AS LOD_A2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_A2), 0) AS DIS_A2_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_A2, 0)                      AS PRE_A2_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_A4, 0)                       AS LOD_A4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_A4), 0) AS DIS_A4_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_A4, 0)                      AS PRE_A4_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_A5, 0)                       AS LOD_A5_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_A5), 0) AS DIS_A5_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_A5, 0)                      AS PRE_A5_TTL," ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               A.TP," ).append("\n"); 
		query.append("                                               '' AS T" ).append("\n"); 
		query.append("                                          FROM ALL_DATA A," ).append("\n"); 
		query.append("                                               COPY     Q," ).append("\n"); 
		query.append("                                               COPY     T" ).append("\n"); 
		query.append("                                         WHERE Q.SEQ IN (DECODE(A.TP, 1, '2', 2, '1'), DECODE(A.TP, 3, '1', 2, '2'))" ).append("\n"); 
		query.append("                                           AND T.SEQ <= 2" ).append("\n"); 
		query.append("                                           AND DECODE(A.SRC, 4, A.IOC_CD, 1) <> DECODE(A.SRC, 4, 4, 0)" ).append("\n"); 
		query.append("                                       ) A" ).append("\n"); 
		query.append("                             ) Z," ).append("\n"); 
		query.append("                             PORT_MAP M" ).append("\n"); 
		query.append("                       WHERE Z.SRC    (+) = M.SRC" ).append("\n"); 
		query.append("--                         AND Z.TP     (+) = M.FLG" ).append("\n"); 
		query.append("                         AND Z.IOC_CD (+) = M.IOC_CD" ).append("\n"); 
		query.append("                         AND Z.PORT_CD(+) = NVL(M.YD_CD, M.PORT_CD)" ).append("\n"); 
		query.append("                         AND Z.CLPT_IND_SEQ(+) = M.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                                             (M.SRC, M.IOC_CD, M.CLPT_SEQ, NVL(M.YD_CD, M.PORT_CD), M.FLG, Z.PAST, M.BSA)," ).append("\n"); 
		query.append("                                             (M.SRC, M.IOC_CD)" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                    ORDER BY M.SRC   ," ).append("\n"); 
		query.append("                             M.IOC_CD," ).append("\n"); 
		query.append("                             NVL(M.CLPT_SEQ, 0)" ).append("\n"); 
		query.append("                   ) Z" ).append("\n"); 
		query.append("         ) Z," ).append("\n"); 
		query.append("         PARAMS PS" ).append("\n"); 
		query.append("   WHERE PORT_SEQ > 0" ).append("\n"); 
		query.append("     AND DECODE(SRC, 4, IOC_CD, 1) <> DECODE(SRC, 4, 4, 0)" ).append("\n"); 
		query.append("     AND SRC = '2'" ).append("\n"); 
		query.append("ORDER BY Z.SRC     ," ).append("\n"); 
		query.append("         Z.PORT_SEQ," ).append("\n"); 
		query.append("         Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", EQR_SMY_01_TPSZ AS (" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("    DISTINCT" ).append("\n"); 
		query.append("    X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.PORT_CD, X.PORT_SEQ" ).append("\n"); 
		query.append("    , SUM(X.VOID_TEU) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) VOID_TEU_TTL" ).append("\n"); 
		query.append("    /** ONBOARD **/" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'MT',X.ON_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_D2, SUM(DECODE(X.IOC_CD,'MT',X.ON_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_D2, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_D2_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_D2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_D4, SUM(DECODE(X.IOC_CD,'MT',X.ON_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_D4, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_D4_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_D4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_D5, SUM(DECODE(X.IOC_CD,'MT',X.ON_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_D5, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_D5_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_D5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_D7, SUM(DECODE(X.IOC_CD,'MT',X.ON_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_D7, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_D7_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_D7" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_R2, SUM(DECODE(X.IOC_CD,'MT',X.ON_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_R2, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_R2_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_R2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_R5, SUM(DECODE(X.IOC_CD,'MT',X.ON_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_R5, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_R5_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_R5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_R9, SUM(DECODE(X.IOC_CD,'MT',X.ON_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_R9, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_R9_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_R9" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_O2, SUM(DECODE(X.IOC_CD,'MT',X.ON_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_O2, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_O2_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_O2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_O4, SUM(DECODE(X.IOC_CD,'MT',X.ON_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_O4, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_O4_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_O4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_S2, SUM(DECODE(X.IOC_CD,'MT',X.ON_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_S2, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_S2_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_S2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_S4, SUM(DECODE(X.IOC_CD,'MT',X.ON_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_S4, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_S4_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_S4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_F2, SUM(DECODE(X.IOC_CD,'MT',X.ON_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_F2, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_F2_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_F2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_F4, SUM(DECODE(X.IOC_CD,'MT',X.ON_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_F4, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_F4_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_F4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_F5, SUM(DECODE(X.IOC_CD,'MT',X.ON_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_F5, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_F5_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_F5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_A2, SUM(DECODE(X.IOC_CD,'MT',X.ON_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_A2, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_A2_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_A2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_A4, SUM(DECODE(X.IOC_CD,'MT',X.ON_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_A4, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_A4_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_A4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.ON_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_TTL_A5, SUM(DECODE(X.IOC_CD,'MT',X.ON_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_MT_A5, SUM(DECODE(X.IOC_CD,'MT',0,'TOTAL',0,X.ON_A5_TTL)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) ON_SUM_FL_A5" ).append("\n"); 
		query.append("    /** FULL EXPORT **/" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'OCN',X.LOD_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'IPC',X.LOD_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'T/S',X.LOD_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'MT',X.LOD_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_D2, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_D2, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_D2, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_D2, SUM(DECODE(X.IOC_CD,'MT',X.LOD_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_D2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_D4, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_D4, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_D4, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_D4, SUM(DECODE(X.IOC_CD,'MT',X.LOD_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_D4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_D5, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_D5, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_D5, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_D5, SUM(DECODE(X.IOC_CD,'MT',X.LOD_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_D5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_D7, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_D7, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_D7, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_D7, SUM(DECODE(X.IOC_CD,'MT',X.LOD_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_D7" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_R2, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_R2, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_R2, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_R2, SUM(DECODE(X.IOC_CD,'MT',X.LOD_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_R2                                                                                        " ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_R5, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_R5, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_R5, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_R5, SUM(DECODE(X.IOC_CD,'MT',X.LOD_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_R5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_R9, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_R9, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_R9, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_R9, SUM(DECODE(X.IOC_CD,'MT',X.LOD_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_R9" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_O2, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_O2, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_O2, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_O2, SUM(DECODE(X.IOC_CD,'MT',X.LOD_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_O2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_O4, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_O4, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_O4, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_O4, SUM(DECODE(X.IOC_CD,'MT',X.LOD_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_O4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_S2, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_S2, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_S2, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_S2, SUM(DECODE(X.IOC_CD,'MT',X.LOD_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_S2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_S4, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_S4, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_S4, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_S4, SUM(DECODE(X.IOC_CD,'MT',X.LOD_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_S4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_F2, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_F2, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_F2, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_F2, SUM(DECODE(X.IOC_CD,'MT',X.LOD_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_F2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_F4, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_F4, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_F4, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_F4, SUM(DECODE(X.IOC_CD,'MT',X.LOD_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_F4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_F5, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_F5, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_F5, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_F5, SUM(DECODE(X.IOC_CD,'MT',X.LOD_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_F5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_A2, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_A2, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_A2, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_A2, SUM(DECODE(X.IOC_CD,'MT',X.LOD_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_A2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_A4, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_A4, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_A4, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_A4, SUM(DECODE(X.IOC_CD,'MT',X.LOD_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_A4    " ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.LOD_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TTL_A5, SUM(DECODE(X.IOC_CD,'OCN',X.LOD_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_OCN_A5, SUM(DECODE(X.IOC_CD,'IPC',X.LOD_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_IPC_A5, SUM(DECODE(X.IOC_CD,'T/S',X.LOD_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_TS_A5, SUM(DECODE(X.IOC_CD,'MT',X.LOD_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLEX_SUM_MT_A5    " ).append("\n"); 
		query.append("    /** FULL IMPORT **/" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'OCN',X.DIS_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'IPC',X.DIS_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'T/S',X.DIS_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'MT',X.DIS_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_TEU" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_D2, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_D2, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_D2, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_D2, SUM(DECODE(X.IOC_CD,'MT',X.DIS_D2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_D2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_D4, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_D4, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_D4, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_D4, SUM(DECODE(X.IOC_CD,'MT',X.DIS_D4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_D4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_D5, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_D5, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_D5, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_D5, SUM(DECODE(X.IOC_CD,'MT',X.DIS_D5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_D5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_D7, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_D7, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_D7, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_D7, SUM(DECODE(X.IOC_CD,'MT',X.DIS_D7_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_D7" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_R2, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_R2, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_R2, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_R2, SUM(DECODE(X.IOC_CD,'MT',X.DIS_R2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_R2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_R5, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_R5, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_R5, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_R5, SUM(DECODE(X.IOC_CD,'MT',X.DIS_R5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_R5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_R9, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_R9, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_R9, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_R9, SUM(DECODE(X.IOC_CD,'MT',X.DIS_R9_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_R9" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_O2, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_O2, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_O2, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_O2, SUM(DECODE(X.IOC_CD,'MT',X.DIS_O2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_O2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_O4, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_O4, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_O4, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_O4, SUM(DECODE(X.IOC_CD,'MT',X.DIS_O4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_O4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_S2, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_S2, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_S2, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_S2, SUM(DECODE(X.IOC_CD,'MT',X.DIS_S2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_S2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_S4, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_S4, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_S4, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_S4, SUM(DECODE(X.IOC_CD,'MT',X.DIS_S4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_S4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_F2, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_F2, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_F2, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_F2, SUM(DECODE(X.IOC_CD,'MT',X.DIS_F2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_F2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_F4, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_F4, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_F4, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_F4, SUM(DECODE(X.IOC_CD,'MT',X.DIS_F4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_F4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_F5, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_F5, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_F5, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_F5, SUM(DECODE(X.IOC_CD,'MT',X.DIS_F5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_F5" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_A2, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_A2, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_A2, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_A2, SUM(DECODE(X.IOC_CD,'MT',X.DIS_A2_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_A2" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_A4, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_A4, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_A4, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_A4, SUM(DECODE(X.IOC_CD,'MT',X.DIS_A4_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_A4" ).append("\n"); 
		query.append("    , SUM(DECODE(X.IOC_CD,'TOTAL',X.DIS_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TTL_A5, SUM(DECODE(X.IOC_CD,'OCN',X.DIS_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_OCN_A5, SUM(DECODE(X.IOC_CD,'IPC',X.DIS_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_IPC_A5, SUM(DECODE(X.IOC_CD,'T/S',X.DIS_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_TS_A5, SUM(DECODE(X.IOC_CD,'MT',X.DIS_A5_TTL,0)) OVER (PARTITION BY X.PORT_CD, X.PORT_SEQ) FLIM_SUM_MT_A5" ).append("\n"); 
		query.append("    FROM SPC_BTLNK_TPSZ X    " ).append("\n"); 
		query.append("    ORDER BY X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.PORT_SEQ, X.PORT_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BSA_DATA_TPSZ AS (" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.PORT_CD, X.PORT_SEQ, X.TTL_TEU, X.TTL_WT" ).append("\n"); 
		query.append("        , NVL((" ).append("\n"); 
		query.append("            SELECT" ).append("\n"); 
		query.append("            MAX(S.ALOC_HC_BZC_BX_QTY)" ).append("\n"); 
		query.append("            FROM SPC_LANE_RGST S" ).append("\n"); 
		query.append("            WHERE S.REP_TRD_CD = @[trade]" ).append("\n"); 
		query.append("            AND S.SUB_TRD_CD = @[subtrade]" ).append("\n"); 
		query.append("            AND S.RLANE_CD = @[rlane]" ).append("\n"); 
		query.append("            AND S.DIR_CD = SUBSTR(@[s_vvd_cd],9)" ).append("\n"); 
		query.append("            AND @[s_eta_dt] BETWEEN S.EFF_FM_DT AND S.EFF_TO_DT" ).append("\n"); 
		query.append("            AND S.BSA_CAPA = (" ).append("\n"); 
		query.append("                SELECT " ).append("\n"); 
		query.append("                    NVL(SUM(DECODE(D.CRR_CD, 'SML', D.CRR_BSA_CAPA)),0) FNL_HJS_BSA_CAPA" ).append("\n"); 
		query.append("                FROM BSA_VVD_MST C, BSA_VVD_OTR_CRR D" ).append("\n"); 
		query.append("                WHERE 1=1" ).append("\n"); 
		query.append("                    AND C.TRD_CD     = D.TRD_CD(+) " ).append("\n"); 
		query.append("                    AND C.RLANE_CD   = D.RLANE_CD(+) " ).append("\n"); 
		query.append("                    AND C.VSL_CD     = D.VSL_CD(+) " ).append("\n"); 
		query.append("                    AND C.SKD_VOY_NO = D.SKD_VOY_NO(+) " ).append("\n"); 
		query.append("                    AND C.SKD_DIR_CD = D.SKD_DIR_CD(+) " ).append("\n"); 
		query.append("                    AND D.BSA_OP_JB_CD(+) = '007'" ).append("\n"); 
		query.append("                    AND C.TRD_CD = @[trade]" ).append("\n"); 
		query.append("                    AND C.RLANE_CD = @[rlane]" ).append("\n"); 
		query.append("                    AND C.VSL_CD = SUBSTR(@[s_vvd_cd],1,4)" ).append("\n"); 
		query.append("                    AND C.SKD_VOY_NO = SUBSTR(@[s_vvd_cd],5,4)" ).append("\n"); 
		query.append("                    AND C.SKD_DIR_CD = SUBSTR(@[s_vvd_cd],9)" ).append("\n"); 
		query.append("                GROUP BY C.TRD_CD, C.RLANE_CD, DECODE(C.BSA_OP_CD, 'J', 'JO', 'SC')" ).append("\n"); 
		query.append("                        , C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, C.VOP_CD, C.CRR_CD" ).append("\n"); 
		query.append("                        , C.BSA_CAPA, C.N2ND_FNL_HJS_BSA_CAPA, C.SPC_OTR_SWAP_FLG" ).append("\n"); 
		query.append("                        , C.IOC_CD, C.BSA_OP_CD, C.N1ST_PORT_ETD_DT " ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("            ),0) TTL_HC" ).append("\n"); 
		query.append("        , NVL((" ).append("\n"); 
		query.append("            SELECT" ).append("\n"); 
		query.append("            MAX(S.ALOC_45FT_BZC_BX_QTY)" ).append("\n"); 
		query.append("            FROM SPC_LANE_RGST S" ).append("\n"); 
		query.append("            WHERE S.REP_TRD_CD = @[trade]" ).append("\n"); 
		query.append("            AND S.SUB_TRD_CD = @[subtrade]" ).append("\n"); 
		query.append("            AND S.RLANE_CD = @[rlane]" ).append("\n"); 
		query.append("            AND S.DIR_CD = SUBSTR(@[s_vvd_cd],9)" ).append("\n"); 
		query.append("            AND @[s_eta_dt] BETWEEN S.EFF_FM_DT AND S.EFF_TO_DT" ).append("\n"); 
		query.append("            AND S.BSA_CAPA = (" ).append("\n"); 
		query.append("                SELECT " ).append("\n"); 
		query.append("                    NVL(SUM(DECODE(D.CRR_CD, 'SML', D.CRR_BSA_CAPA)),0) FNL_HJS_BSA_CAPA" ).append("\n"); 
		query.append("                FROM BSA_VVD_MST C, BSA_VVD_OTR_CRR D" ).append("\n"); 
		query.append("                WHERE 1=1" ).append("\n"); 
		query.append("                    AND C.TRD_CD     = D.TRD_CD(+) " ).append("\n"); 
		query.append("                    AND C.RLANE_CD   = D.RLANE_CD(+) " ).append("\n"); 
		query.append("                    AND C.VSL_CD     = D.VSL_CD(+) " ).append("\n"); 
		query.append("                    AND C.SKD_VOY_NO = D.SKD_VOY_NO(+) " ).append("\n"); 
		query.append("                    AND C.SKD_DIR_CD = D.SKD_DIR_CD(+) " ).append("\n"); 
		query.append("                    AND D.BSA_OP_JB_CD(+) = '007'" ).append("\n"); 
		query.append("                    AND C.TRD_CD = @[trade]" ).append("\n"); 
		query.append("                    AND C.RLANE_CD = @[rlane]" ).append("\n"); 
		query.append("                    AND C.VSL_CD = SUBSTR(@[s_vvd_cd],1,4)" ).append("\n"); 
		query.append("                    AND C.SKD_VOY_NO = SUBSTR(@[s_vvd_cd],5,4)" ).append("\n"); 
		query.append("                    AND C.SKD_DIR_CD = SUBSTR(@[s_vvd_cd],9)" ).append("\n"); 
		query.append("                GROUP BY C.TRD_CD, C.RLANE_CD, DECODE(C.BSA_OP_CD, 'J', 'JO', 'SC')" ).append("\n"); 
		query.append("                        , C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, C.VOP_CD, C.CRR_CD" ).append("\n"); 
		query.append("                        , C.BSA_CAPA, C.N2ND_FNL_HJS_BSA_CAPA, C.SPC_OTR_SWAP_FLG" ).append("\n"); 
		query.append("                        , C.IOC_CD, C.BSA_OP_CD, C.N1ST_PORT_ETD_DT " ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("            ),0) TTL_45" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("            P.RLANE_CD, P.VSL_CD, P.SKD_VOY_NO, P.SKD_DIR_CD, P.YD_CD PORT_CD, P.CLPT_SEQ PORT_SEQ" ).append("\n"); 
		query.append("            , NVL(SUM(DECODE(X.BSA_OP_JB_CD,'007',X.BSA_VAL,0)),0) + NVL(SUM(DECODE(X.BSA_OP_JB_CD,'007',X.FREE_ADD_TEU_CAPA,0)),0) TTL_TEU" ).append("\n"); 
		query.append("            ,(" ).append("\n"); 
		query.append("                 SELECT (" ).append("\n"); 
		query.append("                          SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                            FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                                 MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                           WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                             AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                             AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                             AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                             AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                             AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                             AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                             AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                             AND A.BSA_OP_JB_CD(+) = DECODE('2', '1', '007', '016')" ).append("\n"); 
		query.append("                             AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                             AND A.PORT_CD     (+) = P.YD_CD " ).append("\n"); 
		query.append("                             AND ROWNUM = 1" ).append("\n"); 
		query.append("                       ) AS BSA" ).append("\n"); 
		query.append("                  FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("                 WHERE C.RLANE_CD     = @[rlane] " ).append("\n"); 
		query.append("                   AND C.VSL_CD       = SUBSTR(@[s_vvd_cd],1,4)" ).append("\n"); 
		query.append("                   AND C.SKD_VOY_NO   = SUBSTR(@[s_vvd_cd],5,4)" ).append("\n"); 
		query.append("                   AND C.SKD_DIR_CD   = SUBSTR(@[s_vvd_cd],9)" ).append("\n"); 
		query.append("                   AND C.BSA_OP_JB_CD = DECODE('2', '1', '007', '009')" ).append("\n"); 
		query.append("                   AND C.CRR_CD       = 'SML'    " ).append("\n"); 
		query.append("                   AND ROWNUM = 1" ).append("\n"); 
		query.append("            ) TTL_WT" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("            C.TRD_CD, C.RLANE_CD, C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, C.REV_PORT_CD, D.BSA_OP_JB_CD" ).append("\n"); 
		query.append("            ,NVL(C.N2ND_FNL_HJS_BSA_CAPA,NVL(C.BSA_CAPA,0)) BSA_VAL" ).append("\n"); 
		query.append("            ,NVL(MAX(F.FREE_ADD_TEU_CAPA),0) FREE_ADD_TEU_CAPA" ).append("\n"); 
		query.append("            FROM PARAMS P, BSA_VVD_MST C, BSA_VVD_OTR_CRR D, BSA_VVD_SWAP_INFO F " ).append("\n"); 
		query.append("            WHERE 1=1" ).append("\n"); 
		query.append("            AND C.VSL_CD        = P.VSL_CD" ).append("\n"); 
		query.append("            AND C.SKD_VOY_NO    = P.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND C.SKD_DIR_CD    = P.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND C.RLANE_CD      = P.RLANE_CD" ).append("\n"); 
		query.append("            AND C.TRD_CD     = D.TRD_CD(+) " ).append("\n"); 
		query.append("            AND C.RLANE_CD   = D.RLANE_CD(+) " ).append("\n"); 
		query.append("            AND C.VSL_CD     = D.VSL_CD(+) " ).append("\n"); 
		query.append("            AND C.SKD_VOY_NO = D.SKD_VOY_NO(+) " ).append("\n"); 
		query.append("            AND C.SKD_DIR_CD = D.SKD_DIR_CD(+) " ).append("\n"); 
		query.append("            AND D.TRD_CD     = F.TRD_CD(+) " ).append("\n"); 
		query.append("            AND D.RLANE_CD   = F.RLANE_CD(+) " ).append("\n"); 
		query.append("            AND D.VSL_CD     = F.VSL_CD(+) " ).append("\n"); 
		query.append("            AND D.SKD_VOY_NO = F.SKD_VOY_NO(+) " ).append("\n"); 
		query.append("            AND D.SKD_DIR_CD = F.SKD_DIR_CD(+) " ).append("\n"); 
		query.append("            AND D.BSA_OP_JB_CD= F.BSA_OP_JB_CD(+) " ).append("\n"); 
		query.append("            AND D.CRR_CD      = F.CRR_CD(+) " ).append("\n"); 
		query.append("            GROUP BY C.TRD_CD, C.RLANE_CD, C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, C.REV_PORT_CD, D.BSA_OP_JB_CD, C.BSA_CAPA, C.N2ND_FNL_HJS_BSA_CAPA" ).append("\n"); 
		query.append("            ) X, CUR_PORTS P" ).append("\n"); 
		query.append("        WHERE 1=1" ).append("\n"); 
		query.append("        AND X.VSL_CD(+) = P.VSL_CD" ).append("\n"); 
		query.append("        AND X.SKD_VOY_NO(+) = P.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND X.SKD_DIR_CD(+) = P.SKD_DIR_CD" ).append("\n"); 
		query.append("        GROUP BY P.RLANE_CD, P.VSL_CD, P.SKD_VOY_NO, P.SKD_DIR_CD, P.YD_CD, P.CLPT_SEQ" ).append("\n"); 
		query.append("    ) X" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/** Yard Mt Plan 시작 **/" ).append("\n"); 
		query.append(", DUMMY_HEAD AS (" ).append("\n"); 
		query.append("    SELECT DISTINCT " ).append("\n"); 
		query.append("           B.TRD_CD" ).append("\n"); 
		query.append("          ,B.SUB_TRD_CD" ).append("\n"); 
		query.append("          ,B.RLANE_CD" ).append("\n"); 
		query.append("          ,A.SLAN_CD" ).append("\n"); 
		query.append("          ,SUBSTR(A.SLS_YRMON, 0, 4)||A.COST_WK WEEK" ).append("\n"); 
		query.append("          ,A.VSL_CD||A.SKD_VOY_NO||A.DIR_CD VVD " ).append("\n"); 
		query.append("          ,A.VSL_CD" ).append("\n"); 
		query.append("          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,A.DIR_CD" ).append("\n"); 
		query.append("          ,D.YD_CD " ).append("\n"); 
		query.append("          ,D.VPS_PORT_CD" ).append("\n"); 
		query.append("          ,D.CLPT_SEQ" ).append("\n"); 
		query.append("          ,D.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ,B.FM_CONTI_CD " ).append("\n"); 
		query.append("          ,E.CONTI_CD" ).append("\n"); 
		query.append("          ,D.VPS_ETA_DT" ).append("\n"); 
		query.append("          ,D.VPS_ETB_DT " ).append("\n"); 
		query.append("          ,D.VPS_ETD_DT" ).append("\n"); 
		query.append("    FROM MAS_MON_VVD A" ).append("\n"); 
		query.append("        ,MDM_DTL_REV_LANE B" ).append("\n"); 
		query.append("        ,VSK_VSL_PORT_SKD D" ).append("\n"); 
		query.append("        ,MDM_LOCATION E" ).append("\n"); 
		query.append("        ,MDM_REV_LANE F" ).append("\n"); 
		query.append("    WHERE A.RLANE_CD   = B.RLANE_CD" ).append("\n"); 
		query.append("    AND   A.DIR_CD     = B.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("    AND   A.IOC_CD     = B.IOC_CD   " ).append("\n"); 
		query.append("    AND   A.VSL_CD     = D.VSL_CD" ).append("\n"); 
		query.append("    AND   A.SKD_VOY_NO = D.SKD_VOY_NO" ).append("\n"); 
		query.append("    AND   A.DIR_CD     = D.SKD_DIR_CD " ).append("\n"); 
		query.append("    AND   D.VPS_PORT_CD= E.LOC_CD" ).append("\n"); 
		query.append("    AND   SUBSTR(B.RLANE_CD,0,3) = D.SLAN_CD" ).append("\n"); 
		query.append("    AND   B.FM_CONTI_CD= E.CONTI_CD  -- VSK SKD" ).append("\n"); 
		query.append("    AND   B.RLANE_CD   = F.RLANE_CD" ).append("\n"); 
		query.append("    AND   B.TRD_CD     = F.REP_TRD_CD" ).append("\n"); 
		query.append("    AND   A.DELT_FLG = 'N'" ).append("\n"); 
		query.append("    AND   B.DELT_FLG = 'N'" ).append("\n"); 
		query.append("    AND   F.DELT_FLG = 'N'" ).append("\n"); 
		query.append("    AND   NVL(D.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')" ).append("\n"); 
		query.append("    AND (" ).append("\n"); 
		query.append("            B.TRD_CD = 'IAS'" ).append("\n"); 
		query.append("            OR" ).append("\n"); 
		query.append("           (B.TRD_CD <> 'IAS' AND E.CONTI_CD <> 'A')" ).append("\n"); 
		query.append("        )   " ).append("\n"); 
		query.append("    AND   A.VSL_CD     = SUBSTR(@[s_vvd_cd], 0, 4)" ).append("\n"); 
		query.append("    AND   A.SKD_VOY_NO = SUBSTR(@[s_vvd_cd], 5, 4)" ).append("\n"); 
		query.append("    AND   A.DIR_CD     = SUBSTR(@[s_vvd_cd], 9, 1)" ).append("\n"); 
		query.append("    ORDER BY 1,2,3,4,CLPT_SEQ" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", DUMMY_PLAN AS (" ).append("\n"); 
		query.append("    SELECT SUB_TRD_CD" ).append("\n"); 
		query.append("          ,VSL_LANE_CD" ).append("\n"); 
		query.append("          ,VSL_CD" ).append("\n"); 
		query.append("          ,SKD_VOY_NO" ).append("\n"); 
		query.append("          ,SKD_DIR_CD" ).append("\n"); 
		query.append("          ,POL_YD_CD" ).append("\n"); 
		query.append("          ,FCBF_DT" ).append("\n"); 
		query.append("          ,TEU_QTY" ).append("\n"); 
		query.append("          ,TON_WGT" ).append("\n"); 
		query.append("          ,TYPE1" ).append("\n"); 
		query.append("          ,TYPE2" ).append("\n"); 
		query.append("          ,PLN_RSN_RMK" ).append("\n"); 
		query.append("          ,NVL(SUM(CNTR_QTY), 0) QTY_BOX" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("          ,1 CLPT_IND_SEQ                                                                " ).append("\n"); 
		query.append("    FROM" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT A.TRD_CD" ).append("\n"); 
		query.append("              ,A.SUB_TRD_CD" ).append("\n"); 
		query.append("              ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("              ,A.VSL_CD" ).append("\n"); 
		query.append("              ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("              ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("              ,A.POL_YD_CD " ).append("\n"); 
		query.append("              ,TO_CHAR(A.FNL_CBF_DT, 'YYYY-MM-DD') FCBF_DT" ).append("\n"); 
		query.append("              ,A.MTY_LODG_PLN_TEU_QTY TEU_QTY" ).append("\n"); 
		query.append("              ,A.MTY_LODG_PLN_TON_WGT TON_WGT" ).append("\n"); 
		query.append("              ,D.PLN_RSN_HDR_NM TYPE1" ).append("\n"); 
		query.append("              ,E.PLN_RSN_SUB_NM TYPE2" ).append("\n"); 
		query.append("              ,PLN_RSN_RMK      " ).append("\n"); 
		query.append("              ,C.CNTR_TPSZ_CD TPSZ_CD" ).append("\n"); 
		query.append("              ,C.CNTR_QTY" ).append("\n"); 
		query.append("        FROM EQR_CTRL_MTY_LODG_PLN A" ).append("\n"); 
		query.append("            ,EQR_CTRL_MTY_DCHG_PLN B" ).append("\n"); 
		query.append("            ,EQR_CTRL_MTY_DCHG_PLN_QTY C" ).append("\n"); 
		query.append("            ,EQR_CTRL_PLN_RSN_HDR D" ).append("\n"); 
		query.append("            ,EQR_CTRL_PLN_RSN_SUB E" ).append("\n"); 
		query.append("            ,DUMMY_HEAD Z" ).append("\n"); 
		query.append("        WHERE A.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("        AND   A.SKD_VOY_NO = B.SKD_VOY_NO    " ).append("\n"); 
		query.append("        AND   A.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND   A.POL_YD_CD  = B.POL_YD_CD" ).append("\n"); 
		query.append("        AND   B.VSL_CD     = C.VSL_CD" ).append("\n"); 
		query.append("        AND   B.SKD_VOY_NO = C.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND   B.SKD_DIR_CD = C.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND   B.POL_YD_CD  = C.POL_YD_CD" ).append("\n"); 
		query.append("        AND   B.POD_YD_CD  = C.POD_YD_CD" ).append("\n"); 
		query.append("        AND   A.PLN_RSN_HDR_CD = D.PLN_RSN_HDR_CD(+)" ).append("\n"); 
		query.append("        AND   A.PLN_RSN_HDR_CD = E.PLN_RSN_HDR_CD(+)" ).append("\n"); 
		query.append("        AND   A.PLN_RSN_SUB_CD = E.PLN_RSN_SUB_CD(+)" ).append("\n"); 
		query.append("        AND   A.SUB_TRD_CD = Z.SUB_TRD_CD" ).append("\n"); 
		query.append("        AND   A.VSL_LANE_CD= Z.SLAN_CD" ).append("\n"); 
		query.append("        AND   A.VSL_CD     = Z.VSL_CD" ).append("\n"); 
		query.append("        AND   A.SKD_VOY_NO = Z.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND   A.SKD_DIR_CD = Z.DIR_CD  " ).append("\n"); 
		query.append("        AND   A.POL_YD_CD  = Z.YD_CD" ).append("\n"); 
		query.append("        AND   Z.CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("    GROUP BY SUB_TRD_CD" ).append("\n"); 
		query.append("            ,VSL_LANE_CD" ).append("\n"); 
		query.append("            ,VSL_CD" ).append("\n"); 
		query.append("            ,SKD_VOY_NO" ).append("\n"); 
		query.append("            ,SKD_DIR_CD" ).append("\n"); 
		query.append("            ,POL_YD_CD" ).append("\n"); 
		query.append("            ,FCBF_DT" ).append("\n"); 
		query.append("            ,TEU_QTY" ).append("\n"); 
		query.append("            ,TON_WGT" ).append("\n"); 
		query.append("            ,TYPE1" ).append("\n"); 
		query.append("            ,TYPE2" ).append("\n"); 
		query.append("            ,PLN_RSN_RMK" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append(", TREND_PORT_DATA AS (" ).append("\n"); 
		query.append("    SELECT A.TRD_CD" ).append("\n"); 
		query.append("          ,A.SUB_TRD_CD" ).append("\n"); 
		query.append("          ,A.SLAN_CD" ).append("\n"); 
		query.append("          ,A.SLAN_CD||SUBSTR(A.TRD_CD,1,2) RLANE_CD" ).append("\n"); 
		query.append("          ,A.WEEK" ).append("\n"); 
		query.append("          ,A.VSL_CD" ).append("\n"); 
		query.append("          ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,A.DIR_CD SKD_DIR_CD" ).append("\n"); 
		query.append("          ,A.YD_CD PORT_CD" ).append("\n"); 
		query.append("          ,A.CLPT_SEQ PORT_SEQ" ).append("\n"); 
		query.append("          ,TO_CHAR(A.VPS_ETA_DT, 'YYYY-MM-DD HH24:MM') VPS_ETA_DT" ).append("\n"); 
		query.append("          ,TO_CHAR(A.VPS_ETD_DT, 'YYYY-MM-DD HH24:MM') VPS_ETD_DT " ).append("\n"); 
		query.append("          ,B.FCBF_DT" ).append("\n"); 
		query.append("          ,NVL(B.TEU_QTY,0) P_TEU" ).append("\n"); 
		query.append("          ,NVL(B.QTY_BOX,0) P_BOX            " ).append("\n"); 
		query.append("          ,NVL(B.TON_WGT,0) P_WGT" ).append("\n"); 
		query.append("    FROM DUMMY_HEAD      A" ).append("\n"); 
		query.append("        ,DUMMY_PLAN      B" ).append("\n"); 
		query.append("    WHERE A.VSL_CD     = B.VSL_CD(+)" ).append("\n"); 
		query.append("    AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("    AND   A.DIR_CD     = B.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("    AND   A.YD_CD      = B.POL_YD_CD(+)" ).append("\n"); 
		query.append("    AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)" ).append("\n"); 
		query.append("    AND   A.VPS_ETA_DT BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE+7)" ).append("\n"); 
		query.append("    ORDER BY SUB_TRD_CD, SLAN_CD, WEEK, VVD, CLPT_SEQ, YD_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("/** Yard Mt Plan 끝 **/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", EQR_SMY_02_TPSZ AS (" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        /** 1. BSA조회 **/" ).append("\n"); 
		query.append("        X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.PORT_CD, X.PORT_SEQ" ).append("\n"); 
		query.append("        , 1 DP_SEQ, 1 SEQ, 'BSA' ITEM_TITLE, 'BSA' ITEM_TP_CD" ).append("\n"); 
		query.append("        , X.TTL_TEU" ).append("\n"); 
		query.append("        , TO_NUMBER(X.TTL_WT) TTL_WT" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_BOX" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_20" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_40" ).append("\n"); 
		query.append("        , X.TTL_HC" ).append("\n"); 
		query.append("        , X.TTL_45" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D7" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R9" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_O2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_O4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_S2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_S4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A4                " ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A5" ).append("\n"); 
		query.append("    FROM BSA_DATA_TPSZ X" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        /** 2. L/F  **/" ).append("\n"); 
		query.append("        T.RLANE_CD" ).append("\n"); 
		query.append("        , T.VSL_CD" ).append("\n"); 
		query.append("        , T.SKD_VOY_NO" ).append("\n"); 
		query.append("        , T.SKD_DIR_CD" ).append("\n"); 
		query.append("        , T.PORT_CD" ).append("\n"); 
		query.append("        , T.PORT_SEQ" ).append("\n"); 
		query.append("        , T.DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , T.ITEM_TITLE" ).append("\n"); 
		query.append("        , T.ITEM_TP_CD" ).append("\n"); 
		query.append("        ," ).append("\n"); 
		query.append("        CASE " ).append("\n"); 
		query.append("        WHEN NVL((SELECT B.TTL_TEU FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) <> 0 " ).append("\n"); 
		query.append("        THEN TRUNC(T.TTL_TEU / NVL((SELECT B.TTL_TEU FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) * 100,2)" ).append("\n"); 
		query.append("        ELSE 0" ).append("\n"); 
		query.append("        END TTL_TEU" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_WT" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_BOX" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_20" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_40" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_HC" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_45" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D7" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R9" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_O2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_O4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_S2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_S4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A4 " ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A5" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("        E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("        , 2 DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , 'L/F' ITEM_TITLE" ).append("\n"); 
		query.append("        , DECODE(T.SEQ,'1','TTL','2','FULL','3','MT','') ITEM_TP_CD" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TEU,'2',E1.ON_SUM_FL_TEU,'3',E1.ON_SUM_MT_TEU,0)) TTL_TEU" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D2,'2',E1.ON_SUM_FL_D2,'3',E1.ON_SUM_MT_D2,0)) BOX_D2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D4,'2',E1.ON_SUM_FL_D4,'3',E1.ON_SUM_MT_D4,0)) BOX_D4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D5,'2',E1.ON_SUM_FL_D5,'3',E1.ON_SUM_MT_D5,0)) BOX_D5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D7,'2',E1.ON_SUM_FL_D7,'3',E1.ON_SUM_MT_D7,0)) BOX_D7" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_R2,'2',E1.ON_SUM_FL_R2,'3',E1.ON_SUM_MT_R2,0)) BOX_R2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_R5,'2',E1.ON_SUM_FL_R5,'3',E1.ON_SUM_MT_R5,0)) BOX_R5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_R9,'2',E1.ON_SUM_FL_R9,'3',E1.ON_SUM_MT_R9,0)) BOX_R9" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_O2,'2',E1.ON_SUM_FL_O2,'3',E1.ON_SUM_MT_O2,0)) BOX_O2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_O4,'2',E1.ON_SUM_FL_O4,'3',E1.ON_SUM_MT_O4,0)) BOX_O4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_S2,'2',E1.ON_SUM_FL_S2,'3',E1.ON_SUM_MT_S2,0)) BOX_S2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_S4,'2',E1.ON_SUM_FL_S4,'3',E1.ON_SUM_MT_S4,0)) BOX_S4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_F2,'2',E1.ON_SUM_FL_F2,'3',E1.ON_SUM_MT_F2,0)) BOX_F2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_F4,'2',E1.ON_SUM_FL_F4,'3',E1.ON_SUM_MT_F4,0)) BOX_F4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_F5,'2',E1.ON_SUM_FL_F5,'3',E1.ON_SUM_MT_F5,0)) BOX_F5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_A2,'2',E1.ON_SUM_FL_A2,'3',E1.ON_SUM_MT_A2,0)) BOX_A2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_A4,'2',E1.ON_SUM_FL_A4,'3',E1.ON_SUM_MT_A4,0)) BOX_A4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_A5,'2',E1.ON_SUM_FL_A5,'3',E1.ON_SUM_MT_A5,0)) BOX_A5" ).append("\n"); 
		query.append("        FROM EQR_SMY_01_TPSZ E1, COPY T" ).append("\n"); 
		query.append("        WHERE T.SEQ <= 3" ).append("\n"); 
		query.append("        GROUP BY T.SEQ, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("        ) T" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        T.RLANE_CD" ).append("\n"); 
		query.append("        , T.VSL_CD" ).append("\n"); 
		query.append("        , T.SKD_VOY_NO" ).append("\n"); 
		query.append("        , T.SKD_DIR_CD" ).append("\n"); 
		query.append("        , T.PORT_CD" ).append("\n"); 
		query.append("        , T.PORT_SEQ" ).append("\n"); 
		query.append("        , T.DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , T.ITEM_TITLE" ).append("\n"); 
		query.append("        , T.ITEM_TP_CD" ).append("\n"); 
		query.append("        , T.TTL_TEU" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_WT" ).append("\n"); 
		query.append("        , (T.BOX_D2 + T.BOX_R2 + T.BOX_O2 + T.BOX_S2 + T.BOX_F2 + T.BOX_A2 + T.BOX_D4 + T.BOX_O4 + T.BOX_S4 + T.BOX_F4 + T.BOX_A4 + T.BOX_A5 + T.BOX_D5 + T.BOX_F5 + T.BOX_R5 + T.BOX_D7 + T.BOX_R9) TTL_BOX" ).append("\n"); 
		query.append("        , (T.BOX_D2 + T.BOX_R2 + T.BOX_O2 + T.BOX_S2 + T.BOX_F2 + T.BOX_A2) TTL_20" ).append("\n"); 
		query.append("        , (T.BOX_D4 + T.BOX_O4 + T.BOX_S4 + T.BOX_F4 + T.BOX_A4 + T.BOX_A5) TTL_40" ).append("\n"); 
		query.append("        , (T.BOX_D5 + T.BOX_F5 + T.BOX_R5) TTL_HC" ).append("\n"); 
		query.append("        , (T.BOX_D7 + T.BOX_R9) TTL_45" ).append("\n"); 
		query.append("        , T.BOX_D2" ).append("\n"); 
		query.append("        , T.BOX_D4" ).append("\n"); 
		query.append("        , T.BOX_D5" ).append("\n"); 
		query.append("        , T.BOX_D7" ).append("\n"); 
		query.append("        , T.BOX_R2" ).append("\n"); 
		query.append("        , T.BOX_R5" ).append("\n"); 
		query.append("        , T.BOX_R9" ).append("\n"); 
		query.append("        , T.BOX_O2" ).append("\n"); 
		query.append("        , T.BOX_O4" ).append("\n"); 
		query.append("        , T.BOX_S2" ).append("\n"); 
		query.append("        , T.BOX_S4" ).append("\n"); 
		query.append("        , T.BOX_F2" ).append("\n"); 
		query.append("        , T.BOX_F4" ).append("\n"); 
		query.append("        , T.BOX_F5" ).append("\n"); 
		query.append("        , T.BOX_A2" ).append("\n"); 
		query.append("        , T.BOX_A4" ).append("\n"); 
		query.append("        , T.BOX_A5" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("        /** 3. ONBOARD **/" ).append("\n"); 
		query.append("        E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("        , 3 DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , 'ONBOARD' ITEM_TITLE" ).append("\n"); 
		query.append("        , DECODE(T.SEQ,'1','TTL','2','FULL','3','MT','') ITEM_TP_CD" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TEU,'2',E1.ON_SUM_FL_TEU,'3',E1.ON_SUM_MT_TEU,0)) TTL_TEU" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D2,'2',E1.ON_SUM_FL_D2,'3',E1.ON_SUM_MT_D2,0)) BOX_D2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D4,'2',E1.ON_SUM_FL_D4,'3',E1.ON_SUM_MT_D4,0)) BOX_D4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D5,'2',E1.ON_SUM_FL_D5,'3',E1.ON_SUM_MT_D5,0)) BOX_D5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_D7,'2',E1.ON_SUM_FL_D7,'3',E1.ON_SUM_MT_D7,0)) BOX_D7" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_R2,'2',E1.ON_SUM_FL_R2,'3',E1.ON_SUM_MT_R2,0)) BOX_R2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_R5,'2',E1.ON_SUM_FL_R5,'3',E1.ON_SUM_MT_R5,0)) BOX_R5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_R9,'2',E1.ON_SUM_FL_R9,'3',E1.ON_SUM_MT_R9,0)) BOX_R9" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_O2,'2',E1.ON_SUM_FL_O2,'3',E1.ON_SUM_MT_O2,0)) BOX_O2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_O4,'2',E1.ON_SUM_FL_O4,'3',E1.ON_SUM_MT_O4,0)) BOX_O4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_S2,'2',E1.ON_SUM_FL_S2,'3',E1.ON_SUM_MT_S2,0)) BOX_S2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_S4,'2',E1.ON_SUM_FL_S4,'3',E1.ON_SUM_MT_S4,0)) BOX_S4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_F2,'2',E1.ON_SUM_FL_F2,'3',E1.ON_SUM_MT_F2,0)) BOX_F2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_F4,'2',E1.ON_SUM_FL_F4,'3',E1.ON_SUM_MT_F4,0)) BOX_F4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_F5,'2',E1.ON_SUM_FL_F5,'3',E1.ON_SUM_MT_F5,0)) BOX_F5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_A2,'2',E1.ON_SUM_FL_A2,'3',E1.ON_SUM_MT_A2,0)) BOX_A2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_A4,'2',E1.ON_SUM_FL_A4,'3',E1.ON_SUM_MT_A4,0)) BOX_A4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.ON_SUM_TTL_A5,'2',E1.ON_SUM_FL_A5,'3',E1.ON_SUM_MT_A5,0)) BOX_A5" ).append("\n"); 
		query.append("        FROM EQR_SMY_01_TPSZ E1, COPY T" ).append("\n"); 
		query.append("        WHERE T.SEQ <= 3" ).append("\n"); 
		query.append("        GROUP BY T.SEQ, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_SEQ, E1.PORT_CD" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT" ).append("\n"); 
		query.append("        /** 4. FULL EXPORT **/" ).append("\n"); 
		query.append("        E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("        , 4 DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , 'FULL EXPORT' ITEM_TITLE" ).append("\n"); 
		query.append("        , DECODE(T.SEQ,'1','TTL','2','OCN','3','IPC','4','T/S','') ITEM_TP_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TEU - FLEX_SUM_MT_TEU,'2',E1.FLEX_SUM_OCN_TEU,'3',E1.FLEX_SUM_IPC_TEU,'4',E1.FLEX_SUM_TS_TEU,0)) TTL_TEU" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_D2 - E1.FLEX_SUM_MT_D2,'2',E1.FLEX_SUM_OCN_D2,'3',E1.FLEX_SUM_IPC_D2,'4',E1.FLEX_SUM_TS_D2,0)) BOX_D2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_D4 - E1.FLEX_SUM_MT_D4,'2',E1.FLEX_SUM_OCN_D4,'3',E1.FLEX_SUM_IPC_D4,'4',E1.FLEX_SUM_TS_D4,0)) BOX_D4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_D5 - E1.FLEX_SUM_MT_D5,'2',E1.FLEX_SUM_OCN_D5,'3',E1.FLEX_SUM_IPC_D5,'4',E1.FLEX_SUM_TS_D5,0)) BOX_D5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_D7 - E1.FLEX_SUM_MT_D7,'2',E1.FLEX_SUM_OCN_D7,'3',E1.FLEX_SUM_IPC_D7,'4',E1.FLEX_SUM_TS_D7,0)) BOX_D7" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_R2 - E1.FLEX_SUM_MT_R2,'2',E1.FLEX_SUM_OCN_R2,'3',E1.FLEX_SUM_IPC_R2,'4',E1.FLEX_SUM_TS_R2,0)) BOX_R2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_R5 - E1.FLEX_SUM_MT_R5,'2',E1.FLEX_SUM_OCN_R5,'3',E1.FLEX_SUM_IPC_R5,'4',E1.FLEX_SUM_TS_R5,0)) BOX_R5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_R9 - E1.FLEX_SUM_MT_R9,'2',E1.FLEX_SUM_OCN_R9,'3',E1.FLEX_SUM_IPC_R9,'4',E1.FLEX_SUM_TS_R9,0)) BOX_R9" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_O2 - E1.FLEX_SUM_MT_O2,'2',E1.FLEX_SUM_OCN_O2,'3',E1.FLEX_SUM_IPC_O2,'4',E1.FLEX_SUM_TS_O2,0)) BOX_O2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_O4 - E1.FLEX_SUM_MT_O4,'2',E1.FLEX_SUM_OCN_O4,'3',E1.FLEX_SUM_IPC_O4,'4',E1.FLEX_SUM_TS_O4,0)) BOX_O4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_S2 - E1.FLEX_SUM_MT_S2,'2',E1.FLEX_SUM_OCN_S2,'3',E1.FLEX_SUM_IPC_S2,'4',E1.FLEX_SUM_TS_S2,0)) BOX_S2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_S4 - E1.FLEX_SUM_MT_S4,'2',E1.FLEX_SUM_OCN_S4,'3',E1.FLEX_SUM_IPC_S4,'4',E1.FLEX_SUM_TS_S4,0)) BOX_S4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_F2 - E1.FLEX_SUM_MT_F2,'2',E1.FLEX_SUM_OCN_F2,'3',E1.FLEX_SUM_IPC_F2,'4',E1.FLEX_SUM_TS_F2,0)) BOX_F2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_F4 - E1.FLEX_SUM_MT_F4,'2',E1.FLEX_SUM_OCN_F4,'3',E1.FLEX_SUM_IPC_F4,'4',E1.FLEX_SUM_TS_F4,0)) BOX_F4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_F5 - E1.FLEX_SUM_MT_F5,'2',E1.FLEX_SUM_OCN_F5,'3',E1.FLEX_SUM_IPC_F5,'4',E1.FLEX_SUM_TS_F5,0)) BOX_F5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_A2 - E1.FLEX_SUM_MT_A2,'2',E1.FLEX_SUM_OCN_A2,'3',E1.FLEX_SUM_IPC_A2,'4',E1.FLEX_SUM_TS_A2,0)) BOX_A2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_A4 - E1.FLEX_SUM_MT_A4,'2',E1.FLEX_SUM_OCN_A4,'3',E1.FLEX_SUM_IPC_A4,'4',E1.FLEX_SUM_TS_A4,0)) BOX_A4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLEX_SUM_TTL_A5 - E1.FLEX_SUM_MT_A5,'2',E1.FLEX_SUM_OCN_A5,'3',E1.FLEX_SUM_IPC_A5,'4',E1.FLEX_SUM_TS_A5,0)) BOX_A5" ).append("\n"); 
		query.append("        FROM EQR_SMY_01_TPSZ E1, COPY T" ).append("\n"); 
		query.append("        WHERE T.SEQ <= 4" ).append("\n"); 
		query.append("        GROUP BY T.SEQ, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_SEQ, E1.PORT_CD" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("        /** 6. FULL IMPORT **/" ).append("\n"); 
		query.append("        E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("        , 6 DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , 'FULL IMPORT' ITEM_TITLE" ).append("\n"); 
		query.append("        , DECODE(T.SEQ,'1','TTL','2','OCN','3','IPC','4','T/S','') ITEM_TP_CD" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TEU - E1.FLIM_SUM_MT_TEU,'2',E1.FLIM_SUM_OCN_TEU,'3',E1.FLIM_SUM_IPC_TEU,'4',E1.FLIM_SUM_TS_TEU,0)) TTL_TEU" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_D2 - E1.FLIM_SUM_MT_D2,'2',E1.FLIM_SUM_OCN_D2,'3',E1.FLIM_SUM_IPC_D2,'4',E1.FLIM_SUM_TS_D2,0)) BOX_D2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_D4 - E1.FLIM_SUM_MT_D4,'2',E1.FLIM_SUM_OCN_D4,'3',E1.FLIM_SUM_IPC_D4,'4',E1.FLIM_SUM_TS_D4,0)) BOX_D4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_D5 - E1.FLIM_SUM_MT_D5,'2',E1.FLIM_SUM_OCN_D5,'3',E1.FLIM_SUM_IPC_D5,'4',E1.FLIM_SUM_TS_D5,0)) BOX_D5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_D7 - E1.FLIM_SUM_MT_D7,'2',E1.FLIM_SUM_OCN_D7,'3',E1.FLIM_SUM_IPC_D7,'4',E1.FLIM_SUM_TS_D7,0)) BOX_D7" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_R2 - E1.FLIM_SUM_MT_R2,'2',E1.FLIM_SUM_OCN_R2,'3',E1.FLIM_SUM_IPC_R2,'4',E1.FLIM_SUM_TS_R2,0)) BOX_R2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_R5 - E1.FLIM_SUM_MT_R5,'2',E1.FLIM_SUM_OCN_R5,'3',E1.FLIM_SUM_IPC_R5,'4',E1.FLIM_SUM_TS_R5,0)) BOX_R5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_R9 - E1.FLIM_SUM_MT_R9,'2',E1.FLIM_SUM_OCN_R9,'3',E1.FLIM_SUM_IPC_R9,'4',E1.FLIM_SUM_TS_R9,0)) BOX_R9" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_O2 - E1.FLIM_SUM_MT_O2,'2',E1.FLIM_SUM_OCN_O2,'3',E1.FLIM_SUM_IPC_O2,'4',E1.FLIM_SUM_TS_O2,0)) BOX_O2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_O4 - E1.FLIM_SUM_MT_O4,'2',E1.FLIM_SUM_OCN_O4,'3',E1.FLIM_SUM_IPC_O4,'4',E1.FLIM_SUM_TS_O4,0)) BOX_O4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_S2 - E1.FLIM_SUM_MT_S2,'2',E1.FLIM_SUM_OCN_S2,'3',E1.FLIM_SUM_IPC_S2,'4',E1.FLIM_SUM_TS_S2,0)) BOX_S2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_S4 - E1.FLIM_SUM_MT_S4,'2',E1.FLIM_SUM_OCN_S4,'3',E1.FLIM_SUM_IPC_S4,'4',E1.FLIM_SUM_TS_S4,0)) BOX_S4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_F2 - E1.FLIM_SUM_MT_F2,'2',E1.FLIM_SUM_OCN_F2,'3',E1.FLIM_SUM_IPC_F2,'4',E1.FLIM_SUM_TS_F2,0)) BOX_F2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_F4 - E1.FLIM_SUM_MT_F4,'2',E1.FLIM_SUM_OCN_F4,'3',E1.FLIM_SUM_IPC_F4,'4',E1.FLIM_SUM_TS_F4,0)) BOX_F4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_F5 - E1.FLIM_SUM_MT_F5,'2',E1.FLIM_SUM_OCN_F5,'3',E1.FLIM_SUM_IPC_F5,'4',E1.FLIM_SUM_TS_F5,0)) BOX_F5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_A2 - E1.FLIM_SUM_MT_A2,'2',E1.FLIM_SUM_OCN_A2,'3',E1.FLIM_SUM_IPC_A2,'4',E1.FLIM_SUM_TS_A2,0)) BOX_A2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_A4 - E1.FLIM_SUM_MT_A4,'2',E1.FLIM_SUM_OCN_A4,'3',E1.FLIM_SUM_IPC_A4,'4',E1.FLIM_SUM_TS_A4,0)) BOX_A4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_TTL_A5 - E1.FLIM_SUM_MT_A5,'2',E1.FLIM_SUM_OCN_A5,'3',E1.FLIM_SUM_IPC_A5,'4',E1.FLIM_SUM_TS_A5,0)) BOX_A5" ).append("\n"); 
		query.append("        FROM EQR_SMY_01_TPSZ E1, COPY T" ).append("\n"); 
		query.append("        WHERE T.SEQ <= 4" ).append("\n"); 
		query.append("        GROUP BY T.SEQ, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_SEQ, E1.PORT_CD" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("        /** 7. OTHERS **/" ).append("\n"); 
		query.append("        E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("        , 7 DP_SEQ" ).append("\n"); 
		query.append("        , T.SEQ" ).append("\n"); 
		query.append("        , 'OTHERS' ITEM_TITLE" ).append("\n"); 
		query.append("        , DECODE(T.SEQ,'1','MT Disch','2','HC&45'' void','3','Moves','') ITEM_TP_CD" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'1',E1.FLIM_SUM_MT_TEU,'2',E1.VOID_TEU_TTL,'3',TO_NUMBER(''),0)) TTL_TEU" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_D2,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_D2,0)) BOX_D2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_D4,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_D4,0)) BOX_D4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_D5,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_D5,0)) BOX_D5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_D7,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_D7,0)) BOX_D7" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_R2,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_R2,0)) BOX_R2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_R5,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_R5,0)) BOX_R5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_R9,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_R9,0)) BOX_R9" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_O2,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_O2,0)) BOX_O2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_O4,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_O4,0)) BOX_O4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_S2,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_S2,0)) BOX_S2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_S4,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_S4,0)) BOX_S4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_F2,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_F2,0)) BOX_F2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_F4,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_F4,0)) BOX_F4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_F5,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_F5,0)) BOX_F5" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_A2,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_A2,0)) BOX_A2" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_A4,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_A4,0)) BOX_A4" ).append("\n"); 
		query.append("        , MAX(DECODE(T.SEQ,'3',E1.FLEX_SUM_TTL_A5,0)) + MAX(DECODE(T.SEQ,'3',E1.FLIM_SUM_TTL_A5,0)) BOX_A5" ).append("\n"); 
		query.append("        FROM EQR_SMY_01_TPSZ E1, COPY T" ).append("\n"); 
		query.append("        WHERE T.SEQ <= 3" ).append("\n"); 
		query.append("        GROUP BY T.SEQ, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_SEQ, E1.PORT_CD   " ).append("\n"); 
		query.append("    ) T" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        L.RLANE_CD, L.VSL_CD, L.SKD_VOY_NO, L.SKD_DIR_CD, L.PORT_CD, L.PORT_SEQ PORT_SEQ,  L.DP_SEQ, L.SEQ, L.ITEM_TITLE, L.ITEM_TP_CD" ).append("\n"); 
		query.append("        , NVL((L.BOX_D2 + L.BOX_R2 + L.BOX_O2 + L.BOX_S2 + L.BOX_F2 + L.BOX_A2 + L.BOX_D4*2 + L.BOX_O4*2 + L.BOX_S4*2 + L.BOX_F4*2 + L.BOX_A4*2 + L.BOX_A5*2 + L.BOX_F5*2 + L.BOX_D5*2 + L.BOX_R5*2 + L.BOX_D7*2 + L.BOX_R9*2),0) TTL_TEU" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_WT" ).append("\n"); 
		query.append("        , NVL((L.BOX_D2 + L.BOX_R2 + L.BOX_O2 + L.BOX_S2 + L.BOX_F2 + L.BOX_A2 + L.BOX_D4 + L.BOX_O4 + L.BOX_S4 + L.BOX_F4 + L.BOX_A4 + L.BOX_A5 + L.BOX_D5 + L.BOX_F5 + L.BOX_R5 + L.BOX_D7 + L.BOX_R9),0) TTL_BOX" ).append("\n"); 
		query.append("        , NVL((L.BOX_D2 + L.BOX_R2 + L.BOX_O2 + L.BOX_S2 + L.BOX_F2 + L.BOX_A2),0) TTL_20" ).append("\n"); 
		query.append("        , NVL((L.BOX_D4 + L.BOX_O4 + L.BOX_S4 + L.BOX_F4 + L.BOX_A4 + L.BOX_A5),0) TTL_40" ).append("\n"); 
		query.append("        , NVL((L.BOX_D5 + L.BOX_F5 + L.BOX_R5),0) TTL_HC" ).append("\n"); 
		query.append("        , NVL((L.BOX_D7 + L.BOX_R9),0) TTL_45" ).append("\n"); 
		query.append("        , NVL(L.BOX_D2,0) BOX_D2" ).append("\n"); 
		query.append("        , NVL(L.BOX_D4,0) BOX_D4" ).append("\n"); 
		query.append("        , NVL(L.BOX_D5,0) BOX_D5" ).append("\n"); 
		query.append("        , NVL(L.BOX_D7,0) BOX_D7" ).append("\n"); 
		query.append("        , NVL(L.BOX_R2,0) BOX_R2" ).append("\n"); 
		query.append("        , NVL(L.BOX_R5,0) BOX_R5" ).append("\n"); 
		query.append("        , NVL(L.BOX_R9,0) BOX_R9" ).append("\n"); 
		query.append("        , NVL(L.BOX_O2,0) BOX_O2" ).append("\n"); 
		query.append("        , NVL(L.BOX_O4,0) BOX_O4" ).append("\n"); 
		query.append("        , NVL(L.BOX_S2,0) BOX_S2" ).append("\n"); 
		query.append("        , NVL(L.BOX_S4,0) BOX_S4" ).append("\n"); 
		query.append("        , NVL(L.BOX_F2,0) BOX_F2" ).append("\n"); 
		query.append("        , NVL(L.BOX_F4,0) BOX_F4" ).append("\n"); 
		query.append("        , NVL(L.BOX_F5,0) BOX_F5" ).append("\n"); 
		query.append("        , NVL(L.BOX_A2,0) BOX_A2" ).append("\n"); 
		query.append("        , NVL(L.BOX_A4,0) BOX_A4" ).append("\n"); 
		query.append("        , NVL(L.BOX_A5,0) BOX_A5" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("            /** 5. MOVEMENT **/" ).append("\n"); 
		query.append("                E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("                , 5 DP_SEQ" ).append("\n"); 
		query.append("                , T.SEQ" ).append("\n"); 
		query.append("                , 'MOVEMENT' ITEM_TITLE" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1','OP/OC','2','EN/TN/OTHS','3','NO MVMT','') ITEM_TP_CD" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_D2)+MAX(X.OC_KNT_D2),'2',MAX(X.ETN_KNT_D2)+MAX(X.OT_KNT_D2),'3',MAX(X.MT_KNT_D2),0) BOX_D2" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_D4)+MAX(X.OC_KNT_D4),'2',MAX(X.ETN_KNT_D4)+MAX(X.OT_KNT_D4),'3',MAX(X.MT_KNT_D4),0) BOX_D4" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_D5)+MAX(X.OC_KNT_D5),'2',MAX(X.ETN_KNT_D5)+MAX(X.OT_KNT_D5),'3',MAX(X.MT_KNT_D5),0) BOX_D5" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_D7)+MAX(X.OC_KNT_D7),'2',MAX(X.ETN_KNT_D7)+MAX(X.OT_KNT_D7),'3',MAX(X.MT_KNT_D7),0) BOX_D7" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_R2)+MAX(X.OC_KNT_R2),'2',MAX(X.ETN_KNT_R2)+MAX(X.OT_KNT_R2),'3',MAX(X.MT_KNT_R2),0) BOX_R2" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_R5)+MAX(X.OC_KNT_R5),'2',MAX(X.ETN_KNT_R5)+MAX(X.OT_KNT_R5),'3',MAX(X.MT_KNT_R5),0) BOX_R5" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_R9)+MAX(X.OC_KNT_R9),'2',MAX(X.ETN_KNT_R9)+MAX(X.OT_KNT_R9),'3',MAX(X.MT_KNT_R9),0) BOX_R9" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_O2)+MAX(X.OC_KNT_O2),'2',MAX(X.ETN_KNT_O2)+MAX(X.OT_KNT_O2),'3',MAX(X.MT_KNT_O2),0) BOX_O2" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_O4)+MAX(X.OC_KNT_O4),'2',MAX(X.ETN_KNT_O4)+MAX(X.OT_KNT_O4),'3',MAX(X.MT_KNT_O4),0) BOX_O4" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_S2)+MAX(X.OC_KNT_S2),'2',MAX(X.ETN_KNT_S2)+MAX(X.OT_KNT_S2),'3',MAX(X.MT_KNT_S2),0) BOX_S2" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_S4)+MAX(X.OC_KNT_S4),'2',MAX(X.ETN_KNT_S4)+MAX(X.OT_KNT_S4),'3',MAX(X.MT_KNT_S4),0) BOX_S4" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_F2)+MAX(X.OC_KNT_F2),'2',MAX(X.ETN_KNT_F2)+MAX(X.OT_KNT_F2),'3',MAX(X.MT_KNT_F2),0) BOX_F2" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_F4)+MAX(X.OC_KNT_F4),'2',MAX(X.ETN_KNT_F4)+MAX(X.OT_KNT_F4),'3',MAX(X.MT_KNT_F4),0) BOX_F4" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_F5)+MAX(X.OC_KNT_F5),'2',MAX(X.ETN_KNT_F5)+MAX(X.OT_KNT_F5),'3',MAX(X.MT_KNT_F5),0) BOX_F5" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_A2)+MAX(X.OC_KNT_A2),'2',MAX(X.ETN_KNT_A2)+MAX(X.OT_KNT_A2),'3',MAX(X.MT_KNT_A2),0) BOX_A2" ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_A4)+MAX(X.OC_KNT_A4),'2',MAX(X.ETN_KNT_A4)+MAX(X.OT_KNT_A4),'3',MAX(X.MT_KNT_A4),0) BOX_A4            " ).append("\n"); 
		query.append("                , DECODE(T.SEQ,'1',MAX(X.OP_KNT_A5)+MAX(X.OC_KNT_A5),'2',MAX(X.ETN_KNT_A5)+MAX(X.OT_KNT_A5),'3',MAX(X.MT_KNT_A5),0) BOX_A5            " ).append("\n"); 
		query.append("            FROM (" ).append("\n"); 
		query.append("                SELECT" ).append("\n"); 
		query.append("                    T.ORG_YD_CD PORT_CD, T.RLANE_CD, T.VSL_CD, T.SKD_VOY_NO, T.SKD_DIR_CD " ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.OP ELSE 0 END) OP_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.OP ELSE 0 END) OP_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.OP ELSE 0 END) OP_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.OP ELSE 0 END) OP_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.OP ELSE 0 END) OP_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.OP ELSE 0 END) OP_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.OP ELSE 0 END) OP_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.OP ELSE 0 END) OP_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.OP ELSE 0 END) OP_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.OP ELSE 0 END) OP_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.OP ELSE 0 END) OP_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.OP ELSE 0 END) OP_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.OP ELSE 0 END) OP_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.OP ELSE 0 END) OP_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.OP ELSE 0 END) OP_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.OP ELSE 0 END) OP_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.OP ELSE 0 END) OP_KNT_A5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.OC ELSE 0 END) OC_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.OC ELSE 0 END) OC_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.OC ELSE 0 END) OC_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.OC ELSE 0 END) OC_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.OC ELSE 0 END) OC_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.OC ELSE 0 END) OC_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.OC ELSE 0 END) OC_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.OC ELSE 0 END) OC_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.OC ELSE 0 END) OC_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.OC ELSE 0 END) OC_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.OC ELSE 0 END) OC_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.OC ELSE 0 END) OC_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.OC ELSE 0 END) OC_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.OC ELSE 0 END) OC_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.OC ELSE 0 END) OC_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.OC ELSE 0 END) OC_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.OC ELSE 0 END) OC_KNT_A5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.ETN ELSE 0 END) ETN_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.ETN ELSE 0 END) ETN_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.ETN ELSE 0 END) ETN_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.ETN ELSE 0 END) ETN_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.ETN ELSE 0 END) ETN_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.ETN ELSE 0 END) ETN_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.ETN ELSE 0 END) ETN_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.ETN ELSE 0 END) ETN_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.ETN ELSE 0 END) ETN_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.ETN ELSE 0 END) ETN_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.ETN ELSE 0 END) ETN_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.ETN ELSE 0 END) ETN_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.ETN ELSE 0 END) ETN_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.ETN ELSE 0 END) ETN_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.ETN ELSE 0 END) ETN_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.ETN ELSE 0 END) ETN_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.ETN ELSE 0 END) ETN_KNT_A5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.CY ELSE 0 END) CY_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.CY ELSE 0 END) CY_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.CY ELSE 0 END) CY_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.CY ELSE 0 END) CY_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.CY ELSE 0 END) CY_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.CY ELSE 0 END) CY_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.CY ELSE 0 END) CY_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.CY ELSE 0 END) CY_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.CY ELSE 0 END) CY_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.CY ELSE 0 END) CY_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.CY ELSE 0 END) CY_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.CY ELSE 0 END) CY_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.CY ELSE 0 END) CY_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.CY ELSE 0 END) CY_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.CY ELSE 0 END) CY_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.CY ELSE 0 END) CY_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.CY ELSE 0 END) CY_KNT_A5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.VL ELSE 0 END) VL_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.VL ELSE 0 END) VL_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.VL ELSE 0 END) VL_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.VL ELSE 0 END) VL_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.VL ELSE 0 END) VL_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.VL ELSE 0 END) VL_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.VL ELSE 0 END) VL_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.VL ELSE 0 END) VL_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.VL ELSE 0 END) VL_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.VL ELSE 0 END) VL_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.VL ELSE 0 END) VL_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.VL ELSE 0 END) VL_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.VL ELSE 0 END) VL_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.VL ELSE 0 END) VL_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.VL ELSE 0 END) VL_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.VL ELSE 0 END) VL_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.VL ELSE 0 END) VL_KNT_A5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.MT ELSE 0 END) MT_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.MT ELSE 0 END) MT_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.MT ELSE 0 END) MT_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.MT ELSE 0 END) MT_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.MT ELSE 0 END) MT_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.MT ELSE 0 END) MT_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.MT ELSE 0 END) MT_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.MT ELSE 0 END) MT_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.MT ELSE 0 END) MT_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.MT ELSE 0 END) MT_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.MT ELSE 0 END) MT_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.MT ELSE 0 END) MT_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.MT ELSE 0 END) MT_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.MT ELSE 0 END) MT_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.MT ELSE 0 END) MT_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.MT ELSE 0 END) MT_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.MT ELSE 0 END) MT_KNT_A5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D2' THEN T.OT ELSE 0 END) OT_KNT_D2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D4' THEN T.OT ELSE 0 END) OT_KNT_D4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D5' THEN T.OT ELSE 0 END) OT_KNT_D5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='D7' THEN T.OT ELSE 0 END) OT_KNT_D7" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R2' THEN T.OT ELSE 0 END) OT_KNT_R2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R5' THEN T.OT ELSE 0 END) OT_KNT_R5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='R9' THEN T.OT ELSE 0 END) OT_KNT_R9" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O2' THEN T.OT ELSE 0 END) OT_KNT_O2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='O4' THEN T.OT ELSE 0 END) OT_KNT_O4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S2' THEN T.OT ELSE 0 END) OT_KNT_S2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='S4' THEN T.OT ELSE 0 END) OT_KNT_S4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F2' THEN T.OT ELSE 0 END) OT_KNT_F2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F4' THEN T.OT ELSE 0 END) OT_KNT_F4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='F5' THEN T.OT ELSE 0 END) OT_KNT_F5" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A2' THEN T.OT ELSE 0 END) OT_KNT_A2" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A4' THEN T.OT ELSE 0 END) OT_KNT_A4" ).append("\n"); 
		query.append("                    , MAX(CASE WHEN T.CNTR_TPSZ_CD='A5' THEN T.OT ELSE 0 END) OT_KNT_A5" ).append("\n"); 
		query.append("                FROM (" ).append("\n"); 
		query.append("                    SELECT  " ).append("\n"); 
		query.append("                          SUB1.ORG_YD_CD, SUB1.RLANE_CD" ).append("\n"); 
		query.append("                          , SUB1.VSL_CD, SUB1.SKD_VOY_NO, SUB1.SKD_DIR_CD " ).append("\n"); 
		query.append("                          , SUB1.CNTR_TPSZ_CD_MV CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                          , SUM(SUB1.OP) OP" ).append("\n"); 
		query.append("                          , SUM(SUB1.OC) OC" ).append("\n"); 
		query.append("                          , SUM(SUB1.ETN) ETN" ).append("\n"); 
		query.append("                          , SUM(SUB1.CY) CY" ).append("\n"); 
		query.append("                          , SUM(SUB1.VL) VL" ).append("\n"); 
		query.append("                          , SUM(SUB1.MT) MT" ).append("\n"); 
		query.append("                          , SUM(SUB1.OT) OT" ).append("\n"); 
		query.append("                    FROM    (" ).append("\n"); 
		query.append("                              SELECT  TRD_CD" ).append("\n"); 
		query.append("                                    , SUB_TRD_CD" ).append("\n"); 
		query.append("                                    , RLANE_CD" ).append("\n"); 
		query.append("                                    , VSL_CD" ).append("\n"); 
		query.append("                                    , SKD_VOY_NO" ).append("\n"); 
		query.append("                                    , SKD_DIR_CD                " ).append("\n"); 
		query.append("                                    , ORG_YD_CD" ).append("\n"); 
		query.append("                                    , CNTR_TPSZ_CD_MV CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("                                    , 0 BKG_QTY" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'OP',NVL(CNTR_VOL_QTY,0),0)) OP" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'OC',NVL(CNTR_VOL_QTY,0) ,0)) OC" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'EN',NVL(CNTR_VOL_QTY,0) ,DECODE(CNMV_STS_CD,'TN',NVL(CNTR_VOL_QTY,0),0))) ETN" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'CY',NVL(CNTR_VOL_QTY,0) ,0)) CY" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'VL',NVL(CNTR_VOL_QTY,0) ,0)) VL" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'MT',NVL(CNTR_VOL_QTY,0) ,0)) MT" ).append("\n"); 
		query.append("                                    , SUM(DECODE(CNMV_STS_CD ,'OT',NVL(CNTR_VOL_QTY,0) ,0)) OT" ).append("\n"); 
		query.append("                                    , SUM(NVL(CNTR_VOL_QTY,0)) TTL" ).append("\n"); 
		query.append("                              FROM    (" ).append("\n"); 
		query.append("                                        SELECT  DISTINCT VB.TRUNK_VVD" ).append("\n"); 
		query.append("                                              , BVD.TRD_CD" ).append("\n"); 
		query.append("                                              , BVD.SUB_TRD_CD" ).append("\n"); 
		query.append("                                              , BVD.RLANE_CD" ).append("\n"); 
		query.append("                                              , BVD.VSL_CD" ).append("\n"); 
		query.append("                                              , BVD.SKD_VOY_NO" ).append("\n"); 
		query.append("                                              , BVD.SKD_DIR_CD" ).append("\n"); 
		query.append("                                              , VB.BKG_NO" ).append("\n"); 
		query.append("                                              , VB.BKG_STS_CD" ).append("\n"); 
		query.append("                                              , VB.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                                              , VB.POR_CD" ).append("\n"); 
		query.append("                                              , VB.POD_CD" ).append("\n"); 
		query.append("                                              , VB.POL_CD" ).append("\n"); 
		query.append("                                              , B.RCV_TERM_CD" ).append("\n"); 
		query.append("                                              , B.DE_TERM_CD" ).append("\n"); 
		query.append("                                              , B.CNTR_NO" ).append("\n"); 
		query.append("                                              , B.CNTR_TPSZ_CD CNTR_TPSZ_CD_MV" ).append("\n"); 
		query.append("                                              , B.CNTR_VOL_QTY" ).append("\n"); 
		query.append("                                              , CASE WHEN B.CNMV_STS_CD IN ('OP', 'OC', 'EN', 'TN', 'CY','VL','MT') THEN B.CNMV_STS_CD ELSE 'OT' END CNMV_STS_CD" ).append("\n"); 
		query.append("                                              , B.ORG_YD_CD" ).append("\n"); 
		query.append("                                        FROM    BKG_WORK_V VB" ).append("\n"); 
		query.append("                                              , VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                                              , BKG_CONTAINER B" ).append("\n"); 
		query.append("                                              , BKG_BOOKING BK" ).append("\n"); 
		query.append("                                              , CTM_MOVEMENT MOVE" ).append("\n"); 
		query.append("                                              , (      SELECT  B.BKG_NO" ).append("\n"); 
		query.append("                                                             , BV.SLAN_CD" ).append("\n"); 
		query.append("                                                             , BV.VSL_CD" ).append("\n"); 
		query.append("                                                             , BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                             , BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                             , DRL.TRD_CD" ).append("\n"); 
		query.append("                                                             , DRL.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                             , DRL.RLANE_CD" ).append("\n"); 
		query.append("                                                             , BV.POL_CD" ).append("\n"); 
		query.append("                                                             , BV.POD_CD" ).append("\n"); 
		query.append("                                                             , B.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("                                                             , (" ).append("\n"); 
		query.append("                                                                  SELECT  SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, BV.SKD_DIR_CD)" ).append("\n"); 
		query.append("                                                                  FROM    MDM_LOCATION L" ).append("\n"); 
		query.append("                                                                  WHERE   L.LOC_CD = BV.POL_CD" ).append("\n"); 
		query.append("                                                               ) FM_CONTI_CD," ).append("\n"); 
		query.append("                                                               (" ).append("\n"); 
		query.append("                                                                  SELECT  SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, BV.SKD_DIR_CD)" ).append("\n"); 
		query.append("                                                                  FROM    MDM_LOCATION L" ).append("\n"); 
		query.append("                                                                  WHERE   L.LOC_CD = BV.POD_CD" ).append("\n"); 
		query.append("                                                               ) TO_CONTI_CD" ).append("\n"); 
		query.append("                                                       FROM    BKG_VVD BV" ).append("\n"); 
		query.append("                                                             , BKG_BOOKING B" ).append("\n"); 
		query.append("                                                             , (" ).append("\n"); 
		query.append("                                                                   SELECT  SUBSTR(V.SLS_YRMON, 1, 4) AS COST_YR" ).append("\n"); 
		query.append("                                                                         , V.COST_WK" ).append("\n"); 
		query.append("                                                                         , V.SLS_YRMON" ).append("\n"); 
		query.append("                                                                         , V.TRD_CD" ).append("\n"); 
		query.append("                                                                         , V.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                                         , V.RLANE_CD" ).append("\n"); 
		query.append("                                                                         , V.DIR_CD" ).append("\n"); 
		query.append("                                                                         , V.VSL_CD" ).append("\n"); 
		query.append("                                                                         , V.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                                         , V.DIR_CD AS SKD_DIR_CD" ).append("\n"); 
		query.append("                                                                         , V.IOC_CD" ).append("\n"); 
		query.append("                                                                   FROM    MDM_REV_LANE RL" ).append("\n"); 
		query.append("                                                                         , MAS_MON_VVD V" ).append("\n"); 
		query.append("                                                                   WHERE   RL.RLANE_CD = V.RLANE_CD" ).append("\n"); 
		query.append("                                                                   AND     V.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                                                   AND     V.VSL_CD = SUBSTR(@[s_vvd_cd], 1, 4)" ).append("\n"); 
		query.append("                                                                   AND     V.SKD_VOY_NO = SUBSTR(@[s_vvd_cd], 5, 4)" ).append("\n"); 
		query.append("                                                                   AND     V.DIR_CD = SUBSTR(@[s_vvd_cd], 9, 1)" ).append("\n"); 
		query.append("                                                             ) M" ).append("\n"); 
		query.append("                                                             , MDM_DTL_REV_LANE DRL" ).append("\n"); 
		query.append("                                                             , MDM_REV_LANE RL" ).append("\n"); 
		query.append("                                                       WHERE   B.BKG_NO = BV.BKG_NO" ).append("\n"); 
		query.append("                                                       AND     M.VSL_CD = BV.VSL_CD" ).append("\n"); 
		query.append("                                                       AND     M.SKD_VOY_NO = BV.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                       AND     M.SKD_DIR_CD = BV.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                       AND     RL.VSL_SLAN_CD = BV.SLAN_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.RLANE_CD = RL.RLANE_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.RLANE_CD = M.RLANE_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.VSL_SLAN_DIR_CD = M.DIR_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.IOC_CD = M.IOC_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.TRD_CD = M.TRD_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.SUB_TRD_CD = M.SUB_TRD_CD" ).append("\n"); 
		query.append("                                                       AND     DRL.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                                       AND     DRL.FM_CONTI_CD = ( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, M.DIR_CD) FROM MDM_LOCATION L WHERE L.LOC_CD = BV.POL_CD )" ).append("\n"); 
		query.append("                                                       AND     DRL.TO_CONTI_CD = ( SELECT SPC_CONTI_CONV_FNC(L.CONTI_CD, BV.SLAN_CD, M.DIR_CD) FROM MDM_LOCATION L WHERE L.LOC_CD = BV.POD_CD )" ).append("\n"); 
		query.append("                                                       AND     RL.RLANE_CD = M.RLANE_CD" ).append("\n"); 
		query.append("                                                       AND     RL.VSL_TP_CD = 'C'" ).append("\n"); 
		query.append("                                                       AND     RL.DELT_FLG = 'N'" ).append("\n"); 
		query.append("                                              ) BVD" ).append("\n"); 
		query.append("                                        WHERE   V.VSL_CD(+) = VB.KEY_VSL_CD" ).append("\n"); 
		query.append("                                        AND     V.SKD_VOY_NO(+) = VB.KEY_SKD_VOY_NO" ).append("\n"); 
		query.append("                                        AND     V.SKD_DIR_CD(+) = VB.KEY_SKD_DIR_CD" ).append("\n"); 
		query.append("                                        AND     (DECODE(VB.PRE_1_POL_CD, NULL, VB.TRUNK_POL, VB.PRE_1_POL_CD) = V.VPS_PORT_CD(+))" ).append("\n"); 
		query.append("                                        AND     VB.BKG_NO = BK.BKG_NO" ).append("\n"); 
		query.append("                                        AND     VB.BKG_NO = B.BKG_NO(+)" ).append("\n"); 
		query.append("                                        AND     B.CNTR_NO = MOVE.CNTR_NO(+)" ).append("\n"); 
		query.append("                                        AND     B.CNMV_YR = MOVE.CNMV_YR(+)" ).append("\n"); 
		query.append("                                        AND     B.CNMV_ID_NO = MOVE.CNMV_ID_NO(+)" ).append("\n"); 
		query.append("                                        AND     VB.BKG_STS_CD IN ('F','W','A')" ).append("\n"); 
		query.append("                                        AND     VB.BKG_NO = BVD.BKG_NO(+)" ).append("\n"); 
		query.append("                                        AND     VB.KEY_VSL_CD = SUBSTR(@[s_vvd_cd],1,4)" ).append("\n"); 
		query.append("                                        AND     VB.KEY_SKD_VOY_NO = SUBSTR(@[s_vvd_cd],5,4)" ).append("\n"); 
		query.append("                                        AND     VB.KEY_SKD_DIR_CD =  SUBSTR(@[s_vvd_cd],9,1)" ).append("\n"); 
		query.append("                                        AND     BVD.RLANE_CD = @[rlane]" ).append("\n"); 
		query.append("                                      ) T" ).append("\n"); 
		query.append("                              GROUP BY TRD_CD, SUB_TRD_CD, RLANE_CD, CNTR_TPSZ_CD_MV, ORG_YD_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD " ).append("\n"); 
		query.append("                            ) SUB1" ).append("\n"); 
		query.append("                    WHERE   SUB1.CNTR_TPSZ_CD_MV IS NOT NULL" ).append("\n"); 
		query.append("                    GROUP BY SUB1.ORG_YD_CD, SUB1.RLANE_CD, SUB1.CNTR_TPSZ_CD_MV, SUB1.VSL_CD, SUB1.SKD_VOY_NO, SUB1.SKD_DIR_CD " ).append("\n"); 
		query.append("                ) T" ).append("\n"); 
		query.append("                GROUP BY T.ORG_YD_CD, T.RLANE_CD, T.VSL_CD, T.SKD_VOY_NO, T.SKD_DIR_CD " ).append("\n"); 
		query.append("            ) X, COPY T, EQR_SMY_01_TPSZ E1" ).append("\n"); 
		query.append("            WHERE T.SEQ <= 3" ).append("\n"); 
		query.append("            AND E1.RLANE_CD = X.RLANE_CD(+)" ).append("\n"); 
		query.append("            AND E1.VSL_CD = X.VSL_CD(+)" ).append("\n"); 
		query.append("            AND E1.SKD_VOY_NO = X.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("            AND E1.SKD_DIR_CD = X.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("            AND E1.PORT_CD = X.PORT_CD(+)" ).append("\n"); 
		query.append("            GROUP BY T.SEQ, E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ" ).append("\n"); 
		query.append("    ) L   " ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        /** 8. Inventory  **/" ).append("\n"); 
		query.append("        E1.RLANE_CD RLANE_CD" ).append("\n"); 
		query.append("        , E1.VSL_CD VSL_CD" ).append("\n"); 
		query.append("        , E1.SKD_VOY_NO SKD_VOY_NO" ).append("\n"); 
		query.append("        , E1.SKD_DIR_CD SKD_DIR_CD" ).append("\n"); 
		query.append("        , E1.PORT_CD PORT_CD" ).append("\n"); 
		query.append("        , E1.PORT_SEQ PORT_SEQ" ).append("\n"); 
		query.append("        , 8 DP_SEQ" ).append("\n"); 
		query.append("        , C.SEQ" ).append("\n"); 
		query.append("        , 'Inventory' ITEM_TITLE" ).append("\n"); 
		query.append("        , DECODE(C.SEQ,'1','MT','2','H/R, H/Bar') ITEM_TP_CD" ).append("\n"); 
		query.append("        , NVL(CASE " ).append("\n"); 
		query.append("          WHEN C.SEQ = '1' " ).append("\n"); 
		query.append("          THEN (T.BOX_D2 + T.BOX_R2 + T.BOX_O2 + T.BOX_S2 + T.BOX_F2 + T.BOX_A2 + T.BOX_D4*2 + T.BOX_O4*2 + T.BOX_S4*2 + T.BOX_F4*2 + T.BOX_A4*2 + T.BOX_A5*2 + T.BOX_D5*2 + T.BOX_F5*2 + T.BOX_R5*2 + T.BOX_D7*2 + T.BOX_R9*2) " ).append("\n"); 
		query.append("          ELSE (T.HG_BOX_D2 + T.HG_BOX_R2 + T.HG_BOX_O2 + T.HG_BOX_S2 + T.HG_BOX_F2 + T.HG_BOX_A2 + T.HG_BOX_D4*2 + T.HG_BOX_O4*2 + T.HG_BOX_S4*2 + T.HG_BOX_F4*2 + T.HG_BOX_A4*2 + T.HG_BOX_A5*2 + T.HG_BOX_D5*2 + T.HG_BOX_F5*2 + T.HG_BOX_R5*2 + T.HG_BOX_D7*2 + T.HG_BOX_R9*2) " ).append("\n"); 
		query.append("          END,0) TTL_TEU" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_WT" ).append("\n"); 
		query.append("        , NVL(CASE " ).append("\n"); 
		query.append("          WHEN C.SEQ = '1' " ).append("\n"); 
		query.append("          THEN (T.BOX_D2 + T.BOX_R2 + T.BOX_O2 + T.BOX_S2 + T.BOX_F2 + T.BOX_A2 + T.BOX_D4 + T.BOX_O4 + T.BOX_S4 + T.BOX_F4 + T.BOX_A4 + T.BOX_A5 + T.BOX_D5 + T.BOX_F5 + T.BOX_R5 + T.BOX_D7 + T.BOX_R9) " ).append("\n"); 
		query.append("          ELSE (T.HG_BOX_D2 + T.HG_BOX_R2 + T.HG_BOX_O2 + T.HG_BOX_S2 + T.HG_BOX_F2 + T.HG_BOX_A2 + T.HG_BOX_D4 + T.HG_BOX_O4 + T.HG_BOX_S4 + T.HG_BOX_F4 + T.HG_BOX_A4 + T.HG_BOX_A5 + T.HG_BOX_D5 + T.HG_BOX_F5 + T.HG_BOX_R5 + T.HG_BOX_D7 + T.HG_BOX_R9) " ).append("\n"); 
		query.append("          END,0) TTL_BOX" ).append("\n"); 
		query.append("        , NVL(CASE " ).append("\n"); 
		query.append("          WHEN C.SEQ = '1' " ).append("\n"); 
		query.append("          THEN (T.BOX_D2 + T.BOX_R2 + T.BOX_O2 + T.BOX_S2 + T.BOX_F2 + T.BOX_A2) " ).append("\n"); 
		query.append("          ELSE (T.HG_BOX_D2 + T.HG_BOX_R2 + T.HG_BOX_O2 + T.HG_BOX_S2 + T.HG_BOX_F2 + T.HG_BOX_A2) " ).append("\n"); 
		query.append("          END,0) TTL_20" ).append("\n"); 
		query.append("        , NVL(CASE " ).append("\n"); 
		query.append("          WHEN C.SEQ = '1' " ).append("\n"); 
		query.append("          THEN (T.BOX_D4 + T.BOX_O4 + T.BOX_S4 + T.BOX_F4 + T.BOX_A4 + T.BOX_A5) " ).append("\n"); 
		query.append("          ELSE (T.HG_BOX_D4 + T.HG_BOX_O4 + T.HG_BOX_S4 + T.HG_BOX_F4 + T.HG_BOX_A4 + T.HG_BOX_A5) " ).append("\n"); 
		query.append("          END,0) TTL_40" ).append("\n"); 
		query.append("        , NVL(CASE " ).append("\n"); 
		query.append("          WHEN C.SEQ = '1' " ).append("\n"); 
		query.append("          THEN (T.BOX_D5 + T.BOX_F5 + T.BOX_R5) " ).append("\n"); 
		query.append("          ELSE (T.HG_BOX_D5 + T.HG_BOX_F5 + T.HG_BOX_R5) " ).append("\n"); 
		query.append("          END,0) TTL_HC" ).append("\n"); 
		query.append("        , NVL(CASE " ).append("\n"); 
		query.append("          WHEN C.SEQ = '1' " ).append("\n"); 
		query.append("          THEN (T.BOX_D7 + T.BOX_R9) " ).append("\n"); 
		query.append("          ELSE (T.HG_BOX_D7 + T.HG_BOX_R9) " ).append("\n"); 
		query.append("          END,0) TTL_45" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_D2 ELSE T.HG_BOX_D2 END,0) BOX_D2" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_D4 ELSE T.HG_BOX_D4 END,0) BOX_D4    " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_D5 ELSE T.HG_BOX_D5 END,0) BOX_D5" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_D7 ELSE T.HG_BOX_D7 END,0) BOX_D7        " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_R2 ELSE T.HG_BOX_R2 END,0) BOX_R2" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_R5 ELSE T.HG_BOX_R5 END,0) BOX_R5    " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_R9 ELSE T.HG_BOX_R9 END,0) BOX_R9" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_O2 ELSE T.HG_BOX_O2 END,0) BOX_O2        " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_O4 ELSE T.HG_BOX_O4 END,0) BOX_O4" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_S2 ELSE T.HG_BOX_S2 END,0) BOX_S2    " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_S4 ELSE T.HG_BOX_S4 END,0) BOX_S4" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_F2 ELSE T.HG_BOX_F2 END,0) BOX_F2        " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_F4 ELSE T.HG_BOX_F4 END,0) BOX_F4" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_F5 ELSE T.HG_BOX_F5 END,0) BOX_F5    " ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_A2 ELSE T.HG_BOX_A2 END,0) BOX_A2" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_A4 ELSE T.HG_BOX_A4 END,0) BOX_A4" ).append("\n"); 
		query.append("        , NVL(CASE WHEN C.SEQ = '1' THEN T.BOX_A5 ELSE T.HG_BOX_A5 END,0) BOX_A5" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("        A.CRNT_YD_CD PORT_CD" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_D2) HG_BOX_D2" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_D4) HG_BOX_D4" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_D5) HG_BOX_D5" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_D7) HG_BOX_D7" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_R2) HG_BOX_R2" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_R5) HG_BOX_R5" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_R9) HG_BOX_R9" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_O2) HG_BOX_O2" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_O4) HG_BOX_O4" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_S2) HG_BOX_S2" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_S4) HG_BOX_S4" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_F2) HG_BOX_F2" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_F4) HG_BOX_F4" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_F5) HG_BOX_F5" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_A2) HG_BOX_A2" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_A4) HG_BOX_A4" ).append("\n"); 
		query.append("        ,SUM(A.HG_BOX_A5) HG_BOX_A5" ).append("\n"); 
		query.append("        ,SUM(A.BOX_D2) BOX_D2" ).append("\n"); 
		query.append("        ,SUM(A.BOX_D4) BOX_D4" ).append("\n"); 
		query.append("        ,SUM(A.BOX_D5) BOX_D5" ).append("\n"); 
		query.append("        ,SUM(A.BOX_D7) BOX_D7" ).append("\n"); 
		query.append("        ,SUM(A.BOX_R2) BOX_R2" ).append("\n"); 
		query.append("        ,SUM(A.BOX_R5) BOX_R5" ).append("\n"); 
		query.append("        ,SUM(A.BOX_R9) BOX_R9" ).append("\n"); 
		query.append("        ,SUM(A.BOX_O2) BOX_O2" ).append("\n"); 
		query.append("        ,SUM(A.BOX_O4) BOX_O4" ).append("\n"); 
		query.append("        ,SUM(A.BOX_S2) BOX_S2" ).append("\n"); 
		query.append("        ,SUM(A.BOX_S4) BOX_S4" ).append("\n"); 
		query.append("        ,SUM(A.BOX_F2) BOX_F2" ).append("\n"); 
		query.append("        ,SUM(A.BOX_F4) BOX_F4" ).append("\n"); 
		query.append("        ,SUM(A.BOX_F5) BOX_F5" ).append("\n"); 
		query.append("        ,SUM(A.BOX_A2) BOX_A2" ).append("\n"); 
		query.append("        ,SUM(A.BOX_A4) BOX_A4" ).append("\n"); 
		query.append("        ,SUM(A.BOX_A5) BOX_A5" ).append("\n"); 
		query.append("        FROM (" ).append("\n"); 
		query.append("            SELECT A.CRNT_YD_CD" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'D2', A.VOL,0)) ELSE 0 END HG_BOX_D2" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'D4', A.VOL,0)) ELSE 0 END HG_BOX_D4" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'D5', A.VOL,0)) ELSE 0 END HG_BOX_D5" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'D7', A.VOL,0)) ELSE 0 END HG_BOX_D7" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'R2', A.VOL,0)) ELSE 0 END HG_BOX_R2" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'R5', A.VOL,0)) ELSE 0 END HG_BOX_R5" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'R9', A.VOL,0)) ELSE 0 END HG_BOX_R9" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'O2', A.VOL,0)) ELSE 0 END HG_BOX_O2" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'O4', A.VOL,0)) ELSE 0 END HG_BOX_O4" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'S2', A.VOL,0)) ELSE 0 END HG_BOX_S2" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'S4', A.VOL,0)) ELSE 0 END HG_BOX_S4" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'F2', A.VOL,0)) ELSE 0 END HG_BOX_F2" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'F4', A.VOL,0)) ELSE 0 END HG_BOX_F4" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'F5', A.VOL,0)) ELSE 0 END HG_BOX_F5" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'A2', A.VOL,0)) ELSE 0 END HG_BOX_A2" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'A4', A.VOL,0)) ELSE 0 END HG_BOX_A4" ).append("\n"); 
		query.append("                ,CASE WHEN A.CNTR_HNGR_RCK_CD IS NOT NULL OR A.CNTR_HNGR_BAR_ATCH_KNT > 0 THEN SUM(DECODE(A.CNTR_TPSZ_CD,'A5', A.VOL,0)) ELSE 0 END HG_BOX_A5" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2', A.VOL,0)) BOX_D2" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4', A.VOL,0)) BOX_D4" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5', A.VOL,0)) BOX_D5" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7', A.VOL,0)) BOX_D7" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2', A.VOL,0)) BOX_R2" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5', A.VOL,0)) BOX_R5" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9', A.VOL,0)) BOX_R9" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2', A.VOL,0)) BOX_O2" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4', A.VOL,0)) BOX_O4" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2', A.VOL,0)) BOX_S2" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4', A.VOL,0)) BOX_S4" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2', A.VOL,0)) BOX_F2" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4', A.VOL,0)) BOX_F4" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5', A.VOL,0)) BOX_F5" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2', A.VOL,0)) BOX_A2" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4', A.VOL,0)) BOX_A4" ).append("\n"); 
		query.append("                ,SUM(DECODE(A.CNTR_TPSZ_CD,'A5', A.VOL,0)) BOX_A5" ).append("\n"); 
		query.append("            FROM (" ).append("\n"); 
		query.append("                SELECT A.CRNT_YD_CD, A.CNMV_STS_CD, A.CNTR_TPSZ_CD, COUNT(1) VOL, A.CNTR_HNGR_RCK_CD, A.CNTR_HNGR_BAR_ATCH_KNT" ).append("\n"); 
		query.append("                FROM MST_CONTAINER A" ).append("\n"); 
		query.append("                WHERE A.ACIAC_DIV_CD='A'" ).append("\n"); 
		query.append("                    AND A.CNMV_STS_CD IN('CD','CE','CI','CM','CO','CP','CT','CX','EN','IC','ID','MT','OC','OP','TN','TS')" ).append("\n"); 
		query.append("                    AND A.CNTR_USE_CO_CD = 'H'" ).append("\n"); 
		query.append("                    AND A.CNMV_STS_CD = 'MT' " ).append("\n"); 
		query.append("                    AND A.LSTM_CD <> 'SH'" ).append("\n"); 
		query.append("                GROUP BY A.CRNT_YD_CD, A.CNMV_STS_CD , A.CNTR_TPSZ_CD, A.CNTR_HNGR_RCK_CD, A.CNTR_HNGR_BAR_ATCH_KNT" ).append("\n"); 
		query.append("                ) A" ).append("\n"); 
		query.append("            GROUP BY A.CRNT_YD_CD, A.CNMV_STS_CD, A.CNTR_HNGR_RCK_CD, A.CNTR_HNGR_BAR_ATCH_KNT " ).append("\n"); 
		query.append("            ORDER BY A.CRNT_YD_CD, A.CNMV_STS_CD, A.CNTR_HNGR_RCK_CD, A.CNTR_HNGR_BAR_ATCH_KNT " ).append("\n"); 
		query.append("            ) A" ).append("\n"); 
		query.append("        GROUP BY A.CRNT_YD_CD    " ).append("\n"); 
		query.append("    ) T, (SELECT DISTINCT E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ FROM EQR_SMY_01_TPSZ E1) E1, COPY C" ).append("\n"); 
		query.append("    WHERE 1=1" ).append("\n"); 
		query.append("    AND E1.PORT_CD = T.PORT_CD(+)" ).append("\n"); 
		query.append("    AND C.SEQ <= 2    " ).append("\n"); 
		query.append("    UNION ALL    " ).append("\n"); 
		query.append("    SELECT " ).append("\n"); 
		query.append("        /** 9. Yard MT Plan Total  **/" ).append("\n"); 
		query.append("        E1.RLANE_CD RLANE_CD" ).append("\n"); 
		query.append("        , E1.VSL_CD VSL_CD" ).append("\n"); 
		query.append("        , E1.SKD_VOY_NO SKD_VOY_NO" ).append("\n"); 
		query.append("        , E1.SKD_DIR_CD SKD_DIR_CD" ).append("\n"); 
		query.append("        , E1.PORT_CD " ).append("\n"); 
		query.append("        , E1.PORT_SEQ" ).append("\n"); 
		query.append("        , 9 DP_SEQ" ).append("\n"); 
		query.append("        , 1 SEQ" ).append("\n"); 
		query.append("        , 'Yard MT Plan Total ' ITEM_TITLE" ).append("\n"); 
		query.append("        , 'NEXT 7DAYS' ITEM_TP_CD" ).append("\n"); 
		query.append("        , T.P_TEU TTL_TEU" ).append("\n"); 
		query.append("        , T.P_WGT TTL_WT" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_BOX" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_20" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_40" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_HC" ).append("\n"); 
		query.append("        , TO_NUMBER('') TTL_45" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_D7" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_R9" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_O2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_O4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_S2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_S4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_F5" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A2" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A4" ).append("\n"); 
		query.append("        , TO_NUMBER('') BOX_A5" ).append("\n"); 
		query.append("    FROM (" ).append("\n"); 
		query.append("        SELECT Y.* FROM TREND_PORT_DATA Y" ).append("\n"); 
		query.append("        ORDER BY Y.RLANE_CD, Y.VSL_CD, Y.SKD_VOY_NO, Y.SKD_DIR_CD, Y.PORT_CD" ).append("\n"); 
		query.append("    ) T, (SELECT DISTINCT E1.RLANE_CD, E1.VSL_CD, E1.SKD_VOY_NO, E1.SKD_DIR_CD, E1.PORT_CD, E1.PORT_SEQ FROM EQR_SMY_01_TPSZ E1) E1" ).append("\n"); 
		query.append("    WHERE 1=1" ).append("\n"); 
		query.append("    AND E1.RLANE_CD = T.RLANE_CD(+)" ).append("\n"); 
		query.append("    AND E1.VSL_CD = T.VSL_CD(+)" ).append("\n"); 
		query.append("    AND E1.SKD_VOY_NO = T.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("    AND E1.SKD_DIR_CD = T.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("    AND E1.PORT_CD = T.PORT_CD(+)" ).append("\n"); 
		query.append("    AND E1.PORT_SEQ = T.PORT_SEQ(+)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/** SPC BOTTLENECK TON 시작 **/" ).append("\n"); 
		query.append(", PARAMS_TON AS (" ).append("\n"); 
		query.append("	SELECT RLANE_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, STS, '2' QTY_TP, VOID_FLG FROM PARAMS" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", CUR_PORTS_TON AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD       ," ).append("\n"); 
		query.append("           VSL_CD         ," ).append("\n"); 
		query.append("           SKD_VOY_NO     ," ).append("\n"); 
		query.append("           SKD_DIR_CD     ," ).append("\n"); 
		query.append("           PORT_CD        ," ).append("\n"); 
		query.append("           YD_CD          ," ).append("\n"); 
		query.append("           CLPT_SEQ       ," ).append("\n"); 
		query.append("           CLPT_IND_SEQ   ," ).append("\n"); 
		query.append("           TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("           TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("           TURN_CLPT_IND_SEQ   ," ).append("\n"); 
		query.append("           FLG            ," ).append("\n"); 
		query.append("           BSA            ," ).append("\n"); 
		query.append("           STS" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT P.RLANE_CD   ," ).append("\n"); 
		query.append("                     S1.VSL_CD    ," ).append("\n"); 
		query.append("                     S1.SKD_VOY_NO," ).append("\n"); 
		query.append("                     S1.SKD_DIR_CD," ).append("\n"); 
		query.append("                     S1.VPS_PORT_CD AS PORT_CD," ).append("\n"); 
		query.append("                     S1.YD_CD     ," ).append("\n"); 
		query.append("                     S1.CLPT_SEQ           AS CLPT_SEQ," ).append("\n"); 
		query.append("                     S1.CLPT_IND_SEQ       AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     S1.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                     S1.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                     S1.TURN_CLPT_IND_SEQ       AS TURN_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                            WHEN TRIM(S1.TURN_SKD_VOY_NO) IS NULL  THEN 2" ).append("\n"); 
		query.append("                            WHEN S1.TURN_PORT_IND_CD IN ('Y', 'N') THEN 1" ).append("\n"); 
		query.append("                                                                   ELSE 3" ).append("\n"); 
		query.append("                        END" ).append("\n"); 
		query.append("                     ) AS FLG," ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                        SELECT (" ).append("\n"); 
		query.append("                                  SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                                    FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                                         MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                                   WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                                     AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                                     AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                                     AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                                     AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     AND A.BSA_OP_JB_CD(+) = DECODE(P.QTY_TP, '1', '007', '016') -- Port별 Weight 정보" ).append("\n"); 
		query.append("                                     AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                                     AND A.PORT_CD     (+) = NVL(SUBSTR(S1.YD_CD, 1, 5), S1.VPS_PORT_CD)" ).append("\n"); 
		query.append("                               ) AS BSA" ).append("\n"); 
		query.append("                          FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("                         WHERE C.RLANE_CD     = P.RLANE_CD" ).append("\n"); 
		query.append("                           AND C.VSL_CD       = P.VSL_CD" ).append("\n"); 
		query.append("                           AND C.SKD_VOY_NO   = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND C.SKD_DIR_CD   = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND C.BSA_OP_JB_CD = DECODE(P.QTY_TP, '1', '007', '009')" ).append("\n"); 
		query.append("                           AND C.CRR_CD       = 'SML'" ).append("\n"); 
		query.append("                     ) AS BSA," ).append("\n"); 
		query.append("                     P.STS" ).append("\n"); 
		query.append("                FROM VSK_VSL_PORT_SKD S1," ).append("\n"); 
		query.append("                     PARAMS_TON           P" ).append("\n"); 
		query.append("               WHERE (S1.SKD_CNG_STS_CD IS NULL OR S1.SKD_CNG_STS_CD <> 'S')" ).append("\n"); 
		query.append("                 AND S1.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("                 AND S1.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND S1.SKD_DIR_CD = P.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND S1.VPS_PORT_CD NOT IN ('EGSUZ')" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_BASE_TON AS (" ).append("\n"); 
		query.append("    SELECT RLANE_CD  ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           MAX(STS) AS STS," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '1', TURN_SKD_VOY_NO)) AS PRE_SKD_VOY_NO," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '1', TURN_SKD_DIR_CD)) AS PRE_SKD_DIR_CD," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '3', TURN_SKD_VOY_NO)) AS PST_SKD_VOY_NO," ).append("\n"); 
		query.append("           MIN(DECODE(FLG, '3', TURN_SKD_DIR_CD)) AS PST_SKD_DIR_CD" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT S1.RLANE_CD       ," ).append("\n"); 
		query.append("                     S1.VSL_CD         ," ).append("\n"); 
		query.append("                     S1.SKD_VOY_NO     ," ).append("\n"); 
		query.append("                     S1.SKD_DIR_CD     ," ).append("\n"); 
		query.append("                     S1.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                     S1.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                     DECODE(S2.SKD_VOY_NO, NULL, '', S1.FLG) AS FLG," ).append("\n"); 
		query.append("                     S1.STS" ).append("\n"); 
		query.append("                FROM CUR_PORTS_TON        S1," ).append("\n"); 
		query.append("                     VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("               WHERE S1.VSL_CD          = S2.VSL_CD    (+)" ).append("\n"); 
		query.append("                 AND S1.TURN_SKD_VOY_NO = S2.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                 AND S1.TURN_SKD_DIR_CD = S2.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("                 AND S1.YD_CD           = S2.YD_CD     (+)" ).append("\n"); 
		query.append("           )" ).append("\n"); 
		query.append("  GROUP BY RLANE_CD  ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SKD_TON AS (" ).append("\n"); 
		query.append("    SELECT B.RLANE_CD," ).append("\n"); 
		query.append("           B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS BASE_VVD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             DECODE(S1.SKD_VOY_NO||S1.SKD_DIR_CD, B.PRE_SKD_VOY_NO||B.PRE_SKD_DIR_CD, '1'," ).append("\n"); 
		query.append("                                                  B.SKD_VOY_NO||B.SKD_DIR_CD        , '2'," ).append("\n"); 
		query.append("                                                  B.PST_SKD_VOY_NO||B.PST_SKD_DIR_CD, '3'  )" ).append("\n"); 
		query.append("           ) AS TP," ).append("\n"); 
		query.append("           S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("           S1.VSL_CD     ," ).append("\n"); 
		query.append("           S1.SKD_VOY_NO ," ).append("\n"); 
		query.append("           S1.SKD_DIR_CD ," ).append("\n"); 
		query.append("           S1.VPS_PORT_CD," ).append("\n"); 
		query.append("           S1.YD_CD      ," ).append("\n"); 
		query.append("           S1.CLPT_SEQ   ," ).append("\n"); 
		query.append("           S1.CLPT_IND_SEQ," ).append("\n"); 
		query.append("           S1.TURN_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           SPC_CONTI_CONV_FNC(LOC.CONTI_CD, B.RLANE_CD) AS PORT_CONTI," ).append("\n"); 
		query.append("           S1.TURN_PORT_IND_CD," ).append("\n"); 
		query.append("           NVL(S1.SKD_CNG_STS_CD, ' ') AS CNG_STS_CD," ).append("\n"); 
		query.append("           S1.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("           S1.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("           S1.VSL_CD||S1.TURN_SKD_VOY_NO||S1.TURN_SKD_DIR_CD AS TURN_VVD," ).append("\n"); 
		query.append("           B.PRE_SKD_VOY_NO," ).append("\n"); 
		query.append("           B.PRE_SKD_DIR_CD," ).append("\n"); 
		query.append("           B.PST_SKD_VOY_NO," ).append("\n"); 
		query.append("           B.PST_SKD_DIR_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             SELECT PRD.COST_YR||LPAD(CEIL((TO_CHAR(S1.VPS_ETD_DT, 'DDD') + 7 - TO_CHAR(TO_DATE(PRD.SLS_TO_DT, 'YYYYMMDD'), 'DDD')) / 7), 2, '0')" ).append("\n"); 
		query.append("               FROM MAS_WK_PRD PRD" ).append("\n"); 
		query.append("              WHERE PRD.COST_YR = TO_CHAR(S1.VPS_ETD_DT, 'YYYY')" ).append("\n"); 
		query.append("                AND PRD.COST_WK = '01'" ).append("\n"); 
		query.append("           ) AS COST_YRWK," ).append("\n"); 
		query.append("           MAX(S1.CLPT_SEQ) OVER (PARTITION BY S1.VSL_CD||S1.SKD_VOY_NO||S1.SKD_DIR_CD||S1.YD_CD) AS MAX_SEQ," ).append("\n"); 
		query.append("           B.STS          " ).append("\n"); 
		query.append("      FROM MDM_LOCATION     LOC," ).append("\n"); 
		query.append("           VSK_VSL_PORT_SKD S1 ," ).append("\n"); 
		query.append("           VVD_BASE_TON         B" ).append("\n"); 
		query.append("     WHERE LOC.LOC_CD = S1.VPS_PORT_CD" ).append("\n"); 
		query.append("       AND S1.VSL_CD  = B.VSL_CD" ).append("\n"); 
		query.append("       AND ((S1.SKD_VOY_NO, S1.SKD_DIR_CD) IN ((B.SKD_VOY_NO, B.SKD_DIR_CD), (B.PRE_SKD_VOY_NO, B.PRE_SKD_DIR_CD), (B.PST_SKD_VOY_NO, B.PST_SKD_DIR_CD)))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_SEQ_TON AS (" ).append("\n"); 
		query.append("    SELECT TP        ," ).append("\n"); 
		query.append("           VVD       ," ).append("\n"); 
		query.append("           VSL_CD    ," ).append("\n"); 
		query.append("           SKD_VOY_NO," ).append("\n"); 
		query.append("           SKD_DIR_CD," ).append("\n"); 
		query.append("           POL_CD," ).append("\n"); 
		query.append("           POD_CD," ).append("\n"); 
		query.append("           POL_SEQ  ," ).append("\n"); 
		query.append("           POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           POD_SEQ  ," ).append("\n"); 
		query.append("           POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           POL_CONTI," ).append("\n"); 
		query.append("           POD_CONTI," ).append("\n"); 
		query.append("           POL_YRWK ," ).append("\n"); 
		query.append("           POD_YRWK ,        " ).append("\n"); 
		query.append("           (SELECT " ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                   DECODE(S1.STS, '1', CASE WHEN VPS_ETD_DT < GLOBALDATE_PKG.TIME_CONV_FNC('GMT', SYS_EXTRACT_UTC(SYSTIMESTAMP), VPS_PORT_CD ) THEN 'Y'" ).append("\n"); 
		query.append("                                                                                                                                               ELSE 'N'" ).append("\n"); 
		query.append("                                       END, '2', 'N', '3', 'Y')" ).append("\n"); 
		query.append("                 )" ).append("\n"); 
		query.append("             FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("             WHERE VSL_CD = S1.VSL_CD" ).append("\n"); 
		query.append("             AND SKD_VOY_NO = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("             AND SKD_DIR_CD = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("             AND CLPT_SEQ = S1.CLPT_SEQ ) AS PAST" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT S1.TP        ," ).append("\n"); 
		query.append("                   S1.VVD       ," ).append("\n"); 
		query.append("                   S1.VSL_CD    ," ).append("\n"); 
		query.append("                   S1.SKD_VOY_NO," ).append("\n"); 
		query.append("                   S1.SKD_DIR_CD," ).append("\n"); 
		query.append("                   S1.CLPT_SEQ  ," ).append("\n"); 
		query.append("                   S1.STS       ," ).append("\n"); 
		query.append("                   NVL(S1.YD_CD, S1.VPS_PORT_CD) AS POL_CD," ).append("\n"); 
		query.append("                   NVL(S2.YD_CD, S2.VPS_PORT_CD) AS POD_CD," ).append("\n"); 
		query.append("                   S1.CLPT_SEQ   AS POL_SEQ  ," ).append("\n"); 
		query.append("                   S1.TURN_PORT_IND_CD," ).append("\n"); 
		query.append("                   S1.CLPT_IND_SEQ AS POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                   DECODE(S1.BASE_VVD, S1.TURN_VVD, S1.TURN_CLPT_IND_SEQ, S1.CLPT_IND_SEQ) AS POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("                   S2.CLPT_SEQ   AS POD_SEQ  ," ).append("\n"); 
		query.append("                   S2.TURN_PORT_IND_CD," ).append("\n"); 
		query.append("                   S2.CLPT_IND_SEQ AS POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                   DECODE(S2.BASE_VVD, S2.TURN_VVD, S2.TURN_CLPT_IND_SEQ, S2.CLPT_IND_SEQ) AS POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("                   S1.PORT_CONTI AS POL_CONTI," ).append("\n"); 
		query.append("                   S2.PORT_CONTI AS POD_CONTI," ).append("\n"); 
		query.append("                   S1.COST_YRWK  AS POL_YRWK ," ).append("\n"); 
		query.append("                   S2.COST_YRWK  AS POD_YRWK " ).append("\n"); 
		query.append("              FROM PORT_SKD_TON S1," ).append("\n"); 
		query.append("                   PORT_SKD_TON S2" ).append("\n"); 
		query.append("             WHERE S1.VSL_CD     = S2.VSL_CD" ).append("\n"); 
		query.append("               AND S1.SKD_VOY_NO = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND S1.SKD_DIR_CD = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("               AND S1.CLPT_SEQ   < S2.CLPT_SEQ" ).append("\n"); 
		query.append("               AND S1.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("               AND S1.CNG_STS_CD <> 'S'" ).append("\n"); 
		query.append("               AND ( S1.CLPT_SEQ = S1.MAX_SEQ OR S2.CLPT_SEQ < S1.MAX_SEQ )" ).append("\n"); 
		query.append("               AND DECODE(S1.TP, 1, S2.TURN_VVD, 2, S1.VVD, 3, S1.TURN_VVD) = S1.BASE_VVD" ).append("\n"); 
		query.append("        )    S1       " ).append("\n"); 
		query.append("  ORDER BY TP     ," ).append("\n"); 
		query.append("           POL_SEQ," ).append("\n"); 
		query.append("           POD_SEQ" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", VVD_LD_PORT_TON AS (" ).append("\n"); 
		query.append("    SELECT S1.VSL_CD    ," ).append("\n"); 
		query.append("           S1.SKD_VOY_NO," ).append("\n"); 
		query.append("           S1.SKD_DIR_CD," ).append("\n"); 
		query.append("           SUBSTR(MAX(LTRIM(TO_CHAR(S1.POD_SEQ, 'FM000'))|| S1.POD_CD), 4) AS LD_PORT" ).append("\n"); 
		query.append("      FROM PORT_SEQ_TON S1" ).append("\n"); 
		query.append("  GROUP BY S1.VSL_CD    ," ).append("\n"); 
		query.append("           S1.SKD_VOY_NO," ).append("\n"); 
		query.append("           S1.SKD_DIR_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", COPY_TON AS (" ).append("\n"); 
		query.append("    SELECT LEVEL SEQ" ).append("\n"); 
		query.append("      FROM DUAL" ).append("\n"); 
		query.append("CONNECT BY LEVEL <= 5" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", BKG_DATA_TON AS (" ).append("\n"); 
		query.append("    SELECT 2 AS SRC       ," ).append("\n"); 
		query.append("           Z.TP           ," ).append("\n"); 
		query.append("           Z.POL_CD       ," ).append("\n"); 
		query.append("           Z.POL_SEQ      ," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.POD_CD       ," ).append("\n"); 
		query.append("           Z.POD_SEQ      ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.IOC_CD       ," ).append("\n"); 
		query.append("           Z.BKG_CGO_TP_CD," ).append("\n"); 
		query.append("           Z.QTY_TTL ," ).append("\n"); 
		query.append("           Z.QTY_HC_TTL," ).append("\n"); 
		query.append("           Z.QTY_45_TTL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                   Z.TP           ," ).append("\n"); 
		query.append("                   Z.POL_CD       ," ).append("\n"); 
		query.append("                   Z.POL_SEQ      ," ).append("\n"); 
		query.append("                   Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.POD_CD       ," ).append("\n"); 
		query.append("                   Z.POD_SEQ      ," ).append("\n"); 
		query.append("                   Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.IOC_CD       ," ).append("\n"); 
		query.append("                   Z.BKG_CGO_TP_CD," ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP, '1', SUBSTR(Z.VAL, 1, 14), SUBSTR(Z.VAL, 15)), 0))) AS QTY_TTL," ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP, '1', DECODE(Z.VOID_FLG, 'Y',SUBSTR(Z.VAL_HC, 1, 14),0),0), 0))) AS QTY_HC_TTL, --20130807" ).append("\n"); 
		query.append("                   SUM(TO_NUMBER(NVL(DECODE(Z.QTY_TP, '1', DECODE(Z.VOID_FLG, 'Y',SUBSTR(Z.VAL_45, 1, 14),0),0), 0))) AS QTY_45_TTL --20130807" ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT B.TP    ," ).append("\n"); 
		query.append("                             B.POL_CD," ).append("\n"); 
		query.append("                             B.POL_SEQ," ).append("\n"); 
		query.append("                             B.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                             B.POD_CD," ).append("\n"); 
		query.append("                             B.POD_SEQ," ).append("\n"); 
		query.append("                             B.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                             DECODE(BK.BKG_CGO_TP_CD, 'P', 'M', 'F') AS BKG_CGO_TP_CD," ).append("\n"); 
		query.append("                             DECODE(BV.VSL_PRE_PST_CD, 'T', DECODE(B.POL_CONTI, B.POD_CONTI, 2, 1), 3) AS IOC_CD," ).append("\n"); 
		query.append("                             (" ).append("\n"); 
		query.append("                               SELECT    TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD), '2', 1, 2) * Q.OP_CNTR_QTY), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                      || TO_CHAR((MAX(D.ACT_WGT) * DECODE(MAX(D.WGT_UT_CD), 'LBS', 0.00045, 0.001)) + SUM(Q.OP_CNTR_QTY * ( SELECT TS.CNTR_TPSZ_TARE_WGT" ).append("\n"); 
		query.append("                                                                                                                                              FROM MDM_CNTR_TP_SZ TS" ).append("\n"); 
		query.append("                                                                                                                                             WHERE TS.CNTR_TPSZ_CD = Q.CNTR_TPSZ_CD)) * 0.001, 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                            ) AS VAL," ).append("\n"); 
		query.append("                            P.QTY_TP,                  " ).append("\n"); 
		query.append("                            (" ).append("\n"); 
		query.append("                               SELECT TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD),'5',Q.OP_CNTR_QTY,'8',Q.OP_CNTR_QTY,'9',Q.OP_CNTR_QTY,0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                  AND SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD) IN ('5','8','9')" ).append("\n"); 
		query.append("                            ) AS VAL_HC, --20130807" ).append("\n"); 
		query.append("                            (" ).append("\n"); 
		query.append("                               SELECT TO_CHAR(SUM(DECODE(SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD),'7',Q.OP_CNTR_QTY,0)), 'FM0000000000.000')" ).append("\n"); 
		query.append("                                 FROM BKG_QUANTITY Q" ).append("\n"); 
		query.append("                                WHERE BK.BKG_NO     = Q.BKG_NO" ).append("\n"); 
		query.append("                                  AND Q.OP_CNTR_QTY > 0" ).append("\n"); 
		query.append("                                  AND SAQ_GET_CNTR_SZ_FNC(Q.CNTR_TPSZ_CD) = '7'" ).append("\n"); 
		query.append("                            ) AS VAL_45, --20130807                            " ).append("\n"); 
		query.append("                            P.VOID_FLG    --20130807                         " ).append("\n"); 
		query.append("                       FROM BKG_BOOKING BK," ).append("\n"); 
		query.append("                            BKG_VVD     BV," ).append("\n"); 
		query.append("                            PORT_SEQ_TON    B ," ).append("\n"); 
		query.append("                            PARAMS_TON      P ," ).append("\n"); 
		query.append("                            VVD_LD_PORT_TON LD," ).append("\n"); 
		query.append("                            BKG_BL_DOC  D" ).append("\n"); 
		query.append("                      WHERE BV.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                        AND BV.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND BV.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND BV.VSL_CD     = LD.VSL_CD" ).append("\n"); 
		query.append("                        AND BV.SKD_VOY_NO = LD.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND BV.SKD_DIR_CD = LD.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND BV.POL_YD_CD   = B.POL_CD" ).append("\n"); 
		query.append("                        AND BV.POL_CLPT_IND_SEQ  = B.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                        AND DECODE(BV.POD_CD, 'XXXXX', LD.LD_PORT, BV.POD_YD_CD) = B.POD_CD" ).append("\n"); 
		query.append("                        AND BV.POD_CLPT_IND_SEQ  = B.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                        AND BK.BKG_NO      = BV.BKG_NO" ).append("\n"); 
		query.append("                        AND BK.BKG_STS_CD IN ('F', 'W')" ).append("\n"); 
		query.append("                        AND BK.BKG_NO      = D.BKG_NO" ).append("\n"); 
		query.append("                   ) Z" ).append("\n"); 
		query.append("          GROUP BY Z.TP    ," ).append("\n"); 
		query.append("                   Z.POL_CD       ," ).append("\n"); 
		query.append("                   Z.POL_SEQ      ," ).append("\n"); 
		query.append("                   Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.POD_CD       ," ).append("\n"); 
		query.append("                   Z.POD_SEQ      ," ).append("\n"); 
		query.append("                   Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                   Z.IOC_CD," ).append("\n"); 
		query.append("                   Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append("        ) Z                  " ).append("\n"); 
		query.append("  ORDER BY Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.POD_CD       ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ, " ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           Z.BKG_CGO_TP_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALC_DATA_TON AS (" ).append("\n"); 
		query.append("    SELECT 1 AS SRC," ).append("\n"); 
		query.append("           B.TP    ," ).append("\n"); 
		query.append("           B.POL_CD," ).append("\n"); 
		query.append("           B.POL_SEQ," ).append("\n"); 
		query.append("           B.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           B.POD_CD," ).append("\n"); 
		query.append("           B.POD_SEQ," ).append("\n"); 
		query.append("           B.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           DECODE(M.TS_FLG, 'Y', 3, DECODE(M.IOC_CD, 'I', 2, 'O', 1, 5)) AS IOC_CD ," ).append("\n"); 
		query.append("           SUM(DECODE(P.QTY_TP, '1', M.ASGN_TTL_QTY, M.ASGN_TTL_WGT))    AS QTY_TTL" ).append("\n"); 
		query.append("      FROM SPC_ALOC_POL_POD M," ).append("\n"); 
		query.append("           PORT_SEQ_TON         B," ).append("\n"); 
		query.append("           PARAMS_TON           P" ).append("\n"); 
		query.append("     WHERE M.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("       AND M.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND M.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND SUBSTR(M.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD" ).append("\n"); 
		query.append("       AND NVL(M.POL_IND_SEQ, 1) = DECODE(M.POL_IND_SEQ, NULL, 1, B.POL_CLPT_IND_SEQ)" ).append("\n"); 
		query.append("       AND SUBSTR(M.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD" ).append("\n"); 
		query.append("       AND NVL(M.POD_IND_SEQ, 1) = DECODE(M.POD_IND_SEQ, NULL, 1, B.POD_CLPT_IND_SEQ)" ).append("\n"); 
		query.append("       AND M.RLANE_CD   LIKE DECODE(SUBSTR(P.RLANE_CD, 1, 3), 'PSG', 'PSG', P.RLANE_CD)||'%'	-- R.Lane 조건 추가" ).append("\n"); 
		query.append("       -- CHM-201537079, 2015-08-10, 신용찬, 표준코드 변환" ).append("\n"); 
		query.append("       --AND (M.TS_FLG = 'N' OR M.SLS_RHQ_CD = 'SHAAS' OR M.SLS_RHQ_CD = 'SINWA' OR M.SLS_RGN_OFC_CD IS NULL)" ).append("\n"); 
		query.append("       AND (M.TS_FLG = 'N' OR M.SLS_RHQ_CD = 'SHARC' OR M.SLS_RHQ_CD = 'SINRS' OR M.SLS_RGN_OFC_CD IS NULL)" ).append("\n"); 
		query.append("  GROUP BY B.TP    ," ).append("\n"); 
		query.append("           B.POL_CD," ).append("\n"); 
		query.append("           B.POL_SEQ," ).append("\n"); 
		query.append("           B.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           B.POD_CD," ).append("\n"); 
		query.append("           B.POD_SEQ," ).append("\n"); 
		query.append("           B.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           DECODE(M.TS_FLG, 'Y', 3, DECODE(M.IOC_CD, 'I', 2, 'O', 1, 5))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", FCT_DATA_TON AS (" ).append("\n"); 
		query.append("    SELECT 3 AS SRC," ).append("\n"); 
		query.append("           B.TP    ," ).append("\n"); 
		query.append("           B.POL_CD," ).append("\n"); 
		query.append("           B.POL_SEQ," ).append("\n"); 
		query.append("           B.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           B.POD_CD," ).append("\n"); 
		query.append("           B.POD_SEQ," ).append("\n"); 
		query.append("           B.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           DECODE(F.IOC_TS_CD, 'O', 1, 'I', 2, 'T', 3, 5) AS IOC_CD," ).append("\n"); 
		query.append("           DECODE(P.QTY_TP, '1', (NVL(F.CFM_TTL_QTY, 0) + NVL(F.CFM_40FT_HC_QTY, 0) * 2 + NVL(F.CFM_45FT_HC_QTY, 0) * 2 + NVL(F.CFM_53FT_QTY, 0) * 2), F.CFM_TTL_WGT) AS QTY_TTL," ).append("\n"); 
		query.append("           CASE WHEN P.QTY_TP = '1' AND P.VOID_FLG = 'Y' THEN  " ).append("\n"); 
		query.append("                NVL(F.CFM_40FT_HC_QTY, 0) " ).append("\n"); 
		query.append("           ELSE " ).append("\n"); 
		query.append("                0" ).append("\n"); 
		query.append("           END AS QTY_HC_TTL," ).append("\n"); 
		query.append("           " ).append("\n"); 
		query.append("           CASE WHEN P.QTY_TP = '1' AND P.VOID_FLG = 'Y' THEN  " ).append("\n"); 
		query.append("                NVL(F.CFM_45FT_HC_QTY, 0) " ).append("\n"); 
		query.append("           ELSE " ).append("\n"); 
		query.append("                0" ).append("\n"); 
		query.append("           END AS QTY_45_TTL" ).append("\n"); 
		query.append("      FROM SPC_DLY_FCAST_CUST F," ).append("\n"); 
		query.append("           PORT_SEQ_TON           B," ).append("\n"); 
		query.append("           PARAMS_TON             P" ).append("\n"); 
		query.append("     WHERE F.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("       AND F.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND F.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("       AND SUBSTR(F.POL_YD_CD, 1, LENGTH(B.POL_CD)) = B.POL_CD" ).append("\n"); 
		query.append("       AND NVL(F.POL_IND_SEQ, 1) = DECODE(F.POL_IND_SEQ, NULL, 1, B.POL_CLPT_IND_SEQ)" ).append("\n"); 
		query.append("       AND SUBSTR(F.POD_YD_CD, 1, LENGTH(B.POD_CD)) = B.POD_CD" ).append("\n"); 
		query.append("       AND NVL(F.POD_IND_SEQ, 1) = DECODE(F.POD_IND_SEQ, NULL, 1, B.POD_CLPT_IND_SEQ)" ).append("\n"); 
		query.append("       AND F.RLANE_CD   LIKE DECODE(SUBSTR(P.RLANE_CD, 1, 3), 'PSG', 'PSG', P.RLANE_CD)||'%'	-- R.Lane 조건 추가" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", MT_DATA_TON AS (" ).append("\n"); 
		query.append("    SELECT T.SEQ SRC," ).append("\n"); 
		query.append("           Z.TP     ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.IOC_CD ," ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_HC_TTL) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_45_TTL) AS QTY_45_TTL" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT TP         ," ).append("\n"); 
		query.append("                     POL_CD     ," ).append("\n"); 
		query.append("                     POL_SEQ    ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD     ," ).append("\n"); 
		query.append("                     POD_SEQ    ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     4 AS IOC_CD," ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     QTY_HC_TTL," ).append("\n"); 
		query.append("                     QTY_45_TTL" ).append("\n"); 
		query.append("                FROM BKG_DATA_TON" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'M'" ).append("\n"); 
		query.append("           ) Z," ).append("\n"); 
		query.append("           COPY_TON T" ).append("\n"); 
		query.append("     WHERE T.SEQ <= 4" ).append("\n"); 
		query.append("  GROUP BY T.SEQ   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           Z.POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           Z.POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", ALL_DATA_TON AS (" ).append("\n"); 
		query.append("    SELECT 1 AS SRC," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1'" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_TTL), DECODE(Z.SRC, 1, Z.QTY_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_TTL," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_HC_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_HC_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_HC_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_HC_TTL), DECODE(Z.SRC, 1, Z.QTY_HC_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_45_TTL, 0), DECODE(Z.IOC_CD || '' || P.TP, '11', DECODE(Z.SRC, 2, Z.QTY_45_TTL, 0), DECODE(Z.SRC, 1, Z.QTY_45_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_45_TTL), DECODE(Z.SRC, 1, Z.QTY_45_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_45_TTL,           " ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT SRC   ," ).append("\n"); 
		query.append("                     TP    ," ).append("\n"); 
		query.append("                     POL_CD," ).append("\n"); 
		query.append("                     POL_SEQ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD ," ).append("\n"); 
		query.append("                     POD_SEQ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     IOC_CD," ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     0 AS QTY_HC_TTL," ).append("\n"); 
		query.append("                     0 AS QTY_45_TTL" ).append("\n"); 
		query.append("                FROM ALC_DATA_TON" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              SELECT SRC   ," ).append("\n"); 
		query.append("                     TP    ," ).append("\n"); 
		query.append("                     POL_CD," ).append("\n"); 
		query.append("                     POL_SEQ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD ," ).append("\n"); 
		query.append("                     POD_SEQ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     IOC_CD," ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     QTY_HC_TTL AS QTY_HC_TTL," ).append("\n"); 
		query.append("                     QTY_45_TTL AS QTY_45_TTL" ).append("\n"); 
		query.append("                FROM BKG_DATA_TON" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("           ) Z," ).append("\n"); 
		query.append("           PORT_SEQ_TON P" ).append("\n"); 
		query.append("     WHERE P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT Z.SRC   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_HC_TTL) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           SUM(Z.QTY_45_TTL) AS QTY_45_TTL," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM BKG_DATA_TON Z," ).append("\n"); 
		query.append("           PORT_SEQ_TON P" ).append("\n"); 
		query.append("     WHERE Z.BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("       AND P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.SRC   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT 3 AS SRC," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_TTL, 0) ,DECODE(Z.IOC_CD || '' || P.TP ,'11', DECODE(Z.SRC, 2, Z.QTY_TTL, 0) ,DECODE(Z.SRC, 3, Z.QTY_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_TTL), DECODE(Z.SRC, 3, Z.QTY_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_TTL," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_HC_TTL, 0) ,DECODE(Z.IOC_CD || '' || P.TP ,'11', DECODE(Z.SRC, 2, Z.QTY_HC_TTL, 0) ,DECODE(Z.SRC, 3, Z.QTY_HC_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_HC_TTL), DECODE(Z.SRC, 3, Z.QTY_HC_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_HC_TTL," ).append("\n"); 
		query.append("           (" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("                  WHEN Z.TP = '1' -- POL인경우 DISCHARGING 룰량" ).append("\n"); 
		query.append("                  THEN SUM(DECODE(P.PAST ,'Y', DECODE(Z.SRC, 2, Z.QTY_45_TTL, 0) ,DECODE(Z.IOC_CD || '' || P.TP ,'11', DECODE(Z.SRC, 2, Z.QTY_45_TTL, 0) ,DECODE(Z.SRC, 3, Z.QTY_45_TTL, 0))))" ).append("\n"); 
		query.append("                  ELSE SUM(DECODE(P.PAST, 'Y', DECODE(Z.SRC, 2, Z.QTY_45_TTL), DECODE(Z.SRC, 3, Z.QTY_45_TTL)))" ).append("\n"); 
		query.append("              END" ).append("\n"); 
		query.append("           ) AS QTY_45_TTL," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("              SELECT SRC    ," ).append("\n"); 
		query.append("                     TP     ," ).append("\n"); 
		query.append("                     POL_CD ," ).append("\n"); 
		query.append("                     POL_SEQ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD ," ).append("\n"); 
		query.append("                     POD_SEQ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     IOC_CD ," ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     QTY_HC_TTL AS QTY_HC_TTL," ).append("\n"); 
		query.append("                     QTY_45_TTL AS QTY_45_TTL" ).append("\n"); 
		query.append("                FROM FCT_DATA_TON" ).append("\n"); 
		query.append("              UNION ALL" ).append("\n"); 
		query.append("              SELECT SRC    ," ).append("\n"); 
		query.append("                     TP     ," ).append("\n"); 
		query.append("                     POL_CD ," ).append("\n"); 
		query.append("                     POL_SEQ," ).append("\n"); 
		query.append("                     POL_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     POD_CD ," ).append("\n"); 
		query.append("                     POD_SEQ," ).append("\n"); 
		query.append("                     POD_CLPT_IND_SEQ," ).append("\n"); 
		query.append("                     IOC_CD ," ).append("\n"); 
		query.append("                     QTY_TTL," ).append("\n"); 
		query.append("                     QTY_HC_TTL AS QTY_HC_TTL," ).append("\n"); 
		query.append("                     QTY_45_TTL AS QTY_45_TTL" ).append("\n"); 
		query.append("                FROM BKG_DATA_TON" ).append("\n"); 
		query.append("               WHERE BKG_CGO_TP_CD = 'F'" ).append("\n"); 
		query.append("           ) Z," ).append("\n"); 
		query.append("           PORT_SEQ_TON P" ).append("\n"); 
		query.append("     WHERE P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT 4 AS SRC," ).append("\n"); 
		query.append("           Z.TP      ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD  ," ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL ," ).append("\n"); 
		query.append("           0 AS QTY_HC_TTL ," ).append("\n"); 
		query.append("           0 AS QTY_45_TTL ," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM ALC_DATA_TON Z," ).append("\n"); 
		query.append("           PORT_SEQ_TON P" ).append("\n"); 
		query.append("     WHERE P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append("    UNION ALL" ).append("\n"); 
		query.append("    SELECT Z.SRC    ," ).append("\n"); 
		query.append("           Z.TP     ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD ," ).append("\n"); 
		query.append("           SUM(Z.QTY_TTL) AS QTY_TTL ," ).append("\n"); 
		query.append("           SUM(Z.QTY_HC_TTL) AS QTY_HC_TTL ," ).append("\n"); 
		query.append("           SUM(Z.QTY_45_TTL) AS QTY_45_TTL ," ).append("\n"); 
		query.append("           MAX(P.PAST) AS PAST" ).append("\n"); 
		query.append("      FROM MT_DATA_TON Z," ).append("\n"); 
		query.append("           PORT_SEQ_TON P" ).append("\n"); 
		query.append("     WHERE P.TP = Z.TP" ).append("\n"); 
		query.append("       AND P.POL_CD = Z.POL_CD" ).append("\n"); 
		query.append("       AND P.POL_CLPT_IND_SEQ = Z.POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("       AND P.POD_CD = Z.POD_CD" ).append("\n"); 
		query.append("       AND P.POD_CLPT_IND_SEQ = Z.POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("  GROUP BY Z.SRC   ," ).append("\n"); 
		query.append("           Z.TP    ," ).append("\n"); 
		query.append("           Z.POL_CD," ).append("\n"); 
		query.append("           Z.POL_SEQ," ).append("\n"); 
		query.append("           P.POL_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.POD_CD," ).append("\n"); 
		query.append("           Z.POD_SEQ," ).append("\n"); 
		query.append("           P.POD_CLPT_IND_SEQ1," ).append("\n"); 
		query.append("           Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", PORT_MAP_TON AS (" ).append("\n"); 
		query.append("    SELECT C1.SEQ AS SRC   ," ).append("\n"); 
		query.append("           C2.SEQ AS IOC_CD," ).append("\n"); 
		query.append("           P.PORT_CD ," ).append("\n"); 
		query.append("           P.YD_CD   ," ).append("\n"); 
		query.append("           P.CLPT_SEQ," ).append("\n"); 
		query.append("           P.CLPT_IND_SEQ," ).append("\n"); 
		query.append("           P.FLG     ," ).append("\n"); 
		query.append("--           P.PAST    ," ).append("\n"); 
		query.append("           P.BSA" ).append("\n"); 
		query.append("      FROM CUR_PORTS_TON P ," ).append("\n"); 
		query.append("           COPY_TON      C1," ).append("\n"); 
		query.append("           COPY_TON      C2" ).append("\n"); 
		query.append("     WHERE C1.SEQ <= 4" ).append("\n"); 
		query.append("       AND C2.SEQ <= 5" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", WK_PRD_TON AS (" ).append("\n"); 
		query.append("    SELECT MAX(A.SLS_FM_DT) AS WK_FM_DT" ).append("\n"); 
		query.append("      FROM MAS_WK_PRD A" ).append("\n"); 
		query.append("     WHERE (A.COST_YR,COST_WK) =" ).append("\n"); 
		query.append("           (SELECT SUBSTR(SLS_YRMON,1,4),COST_WK" ).append("\n"); 
		query.append("              FROM MAS_MON_VVD CMV," ).append("\n"); 
		query.append("                   PARAMS_TON      P" ).append("\n"); 
		query.append("             WHERE CMV.TRD_CD     = SAQ_GET_REP_TRD_FNC(P.RLANE_CD)" ).append("\n"); 
		query.append("               AND CMV.RLANE_CD   = P.RLANE_CD" ).append("\n"); 
		query.append("               AND CMV.VSL_CD     = P.VSL_CD" ).append("\n"); 
		query.append("               AND CMV.SKD_VOY_NO = P.SKD_VOY_NO" ).append("\n"); 
		query.append("               AND CMV.DIR_CD     = P.SKD_DIR_CD" ).append("\n"); 
		query.append("               AND CMV.DELT_FLG   = 'N'" ).append("\n"); 
		query.append("               AND ROWNUM         = 1)" ).append("\n"); 
		query.append(")," ).append("\n"); 
		query.append("VOID_CALC_BASIC_TON AS (" ).append("\n"); 
		query.append("SELECT DISTINCT RLANE_CD, " ).append("\n"); 
		query.append("       VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD," ).append("\n"); 
		query.append("       --YD_CD ," ).append("\n"); 
		query.append("       (SELECT WK_FM_DT" ).append("\n"); 
		query.append("          FROM WK_PRD_TON" ).append("\n"); 
		query.append("       ) AS WK_FM_DT       " ).append("\n"); 
		query.append("  FROM CUR_PORTS_TON" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", SPC_BKG_DATA_TON AS (" ).append("\n"); 
		query.append("  SELECT PS.RLANE_CD, PS.VSL_CD, PS.SKD_VOY_NO, PS.SKD_DIR_CD," ).append("\n"); 
		query.append("         DECODE(SRC, 1, 'A', 2, 'B', 3, 'F', 4, 'M') AS SRC," ).append("\n"); 
		query.append("         DECODE(IOC_CD, 1, 'OCN', 2, 'IPC', 3, 'T/S', 4, 'MT', 5, 'TOTAL') AS IOC_CD," ).append("\n"); 
		query.append("         PORT_CD ," ).append("\n"); 
		query.append("         PORT_SEQ," ).append("\n"); 
		query.append("         FLG     ," ).append("\n"); 
		query.append("         LOD_TTL ," ).append("\n"); 
		query.append("         DIS_TTL ," ).append("\n"); 
		query.append("         ON_TTL  ," ).append("\n"); 
		query.append("         " ).append("\n"); 
		query.append("         ROUND(NVL(SPC_LANE_RGST_QTY_FNC('HC',VCB.RLANE_CD, VCB.WK_FM_DT, SUBSTR(PORT_CD,1,5),  VCB.VVD, Z.BSA, NVL(Z.ON_HC_TTL, 0)),0)) +" ).append("\n"); 
		query.append("         ROUND(NVL(SPC_LANE_RGST_QTY_FNC('45',VCB.RLANE_CD, VCB.WK_FM_DT, SUBSTR(PORT_CD,1,5),  VCB.VVD, Z.BSA, NVL(Z.ON_45_TTL, 0)),0)) AS ON_HC_TTL," ).append("\n"); 
		query.append("         PAST    ," ).append("\n"); 
		query.append("         BSA" ).append("\n"); 
		query.append("    FROM VOID_CALC_BASIC_TON VCB," ).append("\n"); 
		query.append("         (" ).append("\n"); 
		query.append("            SELECT Z.SRC     ," ).append("\n"); 
		query.append("                   Z.IOC_CD  ," ).append("\n"); 
		query.append("                   Z.PORT_CD ," ).append("\n"); 
		query.append("                   Z.PORT_SEQ," ).append("\n"); 
		query.append("                   Z.FLG     ," ).append("\n"); 
		query.append("                   Z.LOD_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_TTL + Z.PRE_TTL) AS DIS_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_TTL + Z.LOD_TTL - Z.DIS_TTL - Z.PRE_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   Z.LOD_HC_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_HC_TTL + Z.PRE_HC_TTL) AS DIS_HC_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_HC_TTL + Z.LOD_HC_TTL - Z.DIS_HC_TTL - Z.PRE_HC_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_HC_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   Z.LOD_45_TTL ," ).append("\n"); 
		query.append("                   (Z.DIS_45_TTL + Z.PRE_45_TTL) AS DIS_45_TTL," ).append("\n"); 
		query.append("                   SUM(Z.ON_45_TTL + Z.LOD_45_TTL - Z.DIS_45_TTL - Z.PRE_45_TTL) OVER (PARTITION BY Z.SRC, Z.IOC_CD ORDER BY PORT_SEQ) AS ON_45_TTL," ).append("\n"); 
		query.append("                   " ).append("\n"); 
		query.append("                   Z.PAST," ).append("\n"); 
		query.append("                   Z.BSA ," ).append("\n"); 
		query.append("                   '' AS T" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                      SELECT M.SRC   ," ).append("\n"); 
		query.append("                             M.IOC_CD," ).append("\n"); 
		query.append("                             NVL(NVL(M.YD_CD, M.PORT_CD), 'TOTAL') AS PORT_CD," ).append("\n"); 
		query.append("                             NVL(M.CLPT_SEQ, 0) AS PORT_SEQ," ).append("\n"); 
		query.append("                             M.FLG ," ).append("\n"); 
		query.append("                             Z.PAST, " ).append("\n"); 
		query.append("                             M.BSA ," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_TTL)) AS LOD_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_TTL)) AS DIS_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_TTL)) AS PRE_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_TTL), 0) AS ON_TTL," ).append("\n"); 
		query.append("                             " ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_HC_TTL)) AS LOD_HC_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_HC_TTL)) AS DIS_HC_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_HC_TTL)) AS PRE_HC_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_HC_TTL), 0) AS ON_HC_TTL," ).append("\n"); 
		query.append("                             " ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.LOD_45_TTL)) AS LOD_45_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.DIS_45_TTL)) AS DIS_45_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, 0, SUM(Z.PRE_45_TTL)) AS PRE_45_TTL," ).append("\n"); 
		query.append("                             DECODE(NVL(M.YD_CD, M.PORT_CD), NULL, SUM(Z.PRE_45_TTL), 0) AS ON_45_TTL" ).append("\n"); 
		query.append("                        FROM (" ).append("\n"); 
		query.append("                                SELECT A.SRC," ).append("\n"); 
		query.append("                                       MIN(A.PAST) OVER (PARTITION BY A.SRC, A.IOC_CD, A.PORT_CD) AS PAST," ).append("\n"); 
		query.append("                                       A.IOC_CD," ).append("\n"); 
		query.append("                                       A.SEQ," ).append("\n"); 
		query.append("                                       A.PORT_CD," ).append("\n"); 
		query.append("                                       A.PORT_SEQ," ).append("\n"); 
		query.append("                                       A.CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                       A.LOD_TTL," ).append("\n"); 
		query.append("                                       A.DIS_TTL," ).append("\n"); 
		query.append("                                       A.PRE_TTL," ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                       A.LOD_HC_TTL," ).append("\n"); 
		query.append("                                       A.DIS_HC_TTL," ).append("\n"); 
		query.append("                                       A.PRE_HC_TTL," ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                       A.LOD_45_TTL," ).append("\n"); 
		query.append("                                       A.DIS_45_TTL," ).append("\n"); 
		query.append("                                       A.PRE_45_TTL," ).append("\n"); 
		query.append("                                       " ).append("\n"); 
		query.append("                                       A.TP" ).append("\n"); 
		query.append("                                  FROM (    " ).append("\n"); 
		query.append("                                        SELECT A.SRC," ).append("\n"); 
		query.append("                                               A.PAST," ).append("\n"); 
		query.append("                                               Q.SEQ," ).append("\n"); 
		query.append("                                               DECODE(T.SEQ, 2, 5, A.IOC_CD)                        AS IOC_CD ," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.POL_CD, A.POD_CD)                 AS PORT_CD," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.POL_SEQ, A.POD_SEQ)              AS PORT_SEQ," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.POL_CLPT_IND_SEQ1, A.POD_CLPT_IND_SEQ1)              AS CLPT_IND_SEQ," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_TTL, 0)                       AS LOD_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_TTL), 0) AS DIS_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_TTL, 0)                      AS PRE_TTL," ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_HC_TTL, 0)                       AS LOD_HC_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_HC_TTL), 0) AS DIS_HC_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_HC_TTL, 0)                      AS PRE_HC_TTL," ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 1, A.QTY_45_TTL, 0)                       AS LOD_45_TTL," ).append("\n"); 
		query.append("                                               DECODE(Q.SEQ, 2, DECODE(A.TP, '1', 0, A.QTY_45_TTL), 0) AS DIS_45_TTL," ).append("\n"); 
		query.append("                                               DECODE(A.TP, '1', A.QTY_45_TTL, 0)                      AS PRE_45_TTL,                                               " ).append("\n"); 
		query.append("                                               " ).append("\n"); 
		query.append("                                               --A.QTY_HC_TTL                                         AS QTY_HC_TTL," ).append("\n"); 
		query.append("                                               --A.QTY_45_TTL                                         AS QTY_45_TTL," ).append("\n"); 
		query.append("                                               A.TP," ).append("\n"); 
		query.append("                                               '' AS T" ).append("\n"); 
		query.append("                                          FROM ALL_DATA_TON A," ).append("\n"); 
		query.append("                                               COPY_TON     Q," ).append("\n"); 
		query.append("                                               COPY_TON     T" ).append("\n"); 
		query.append("                                         WHERE Q.SEQ IN (DECODE(A.TP, 1, '2', 2, '1'), DECODE(A.TP, 3, '1', 2, '2'))" ).append("\n"); 
		query.append("                                           AND T.SEQ <= 2" ).append("\n"); 
		query.append("                                           AND DECODE(A.SRC, 4, A.IOC_CD, 1) <> DECODE(A.SRC, 4, 4, 0)" ).append("\n"); 
		query.append("                                       ) A" ).append("\n"); 
		query.append("                             ) Z," ).append("\n"); 
		query.append("                             PORT_MAP_TON M" ).append("\n"); 
		query.append("                       WHERE Z.SRC    (+) = M.SRC" ).append("\n"); 
		query.append("                         AND Z.IOC_CD (+) = M.IOC_CD" ).append("\n"); 
		query.append("                         AND Z.PORT_CD(+) = NVL(M.YD_CD, M.PORT_CD)" ).append("\n"); 
		query.append("                         AND Z.CLPT_IND_SEQ(+) = M.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    GROUP BY GROUPING SETS (" ).append("\n"); 
		query.append("                                             (M.SRC, M.IOC_CD, M.CLPT_SEQ, NVL(M.YD_CD, M.PORT_CD), M.FLG, Z.PAST, M.BSA)," ).append("\n"); 
		query.append("                                             (M.SRC, M.IOC_CD)" ).append("\n"); 
		query.append("                                           )" ).append("\n"); 
		query.append("                    ORDER BY M.SRC   ," ).append("\n"); 
		query.append("                             M.IOC_CD," ).append("\n"); 
		query.append("                             NVL(M.CLPT_SEQ, 0)" ).append("\n"); 
		query.append("                   ) Z" ).append("\n"); 
		query.append("         ) Z," ).append("\n"); 
		query.append("         PARAMS_TON PS" ).append("\n"); 
		query.append("   WHERE PORT_SEQ > 0" ).append("\n"); 
		query.append("     AND SRC = '2'" ).append("\n"); 
		query.append("ORDER BY Z.SRC     ," ).append("\n"); 
		query.append("         Z.PORT_SEQ," ).append("\n"); 
		query.append("         Z.IOC_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", SPC_ORG_RESULT_DATA_TON AS (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("S.RLANE_CD, S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD, S.PORT_CD" ).append("\n"); 
		query.append(", MAX(S.ON_TTL) ON_TTL" ).append("\n"); 
		query.append(", MAX(S.ON_OCN) ON_OCN" ).append("\n"); 
		query.append(", MAX(S.ON_IPC) ON_IPC" ).append("\n"); 
		query.append(", MAX(S.ON_TS) ON_TS" ).append("\n"); 
		query.append(", MAX(S.ON_MT) ON_MT" ).append("\n"); 
		query.append(", MAX(S.LOD_TTL) LOD_TTL" ).append("\n"); 
		query.append(", MAX(S.LOD_OCN) LOD_OCN" ).append("\n"); 
		query.append(", MAX(S.LOD_IPC) LOD_IPC" ).append("\n"); 
		query.append(", MAX(S.LOD_TS) LOD_TS" ).append("\n"); 
		query.append(", MAX(S.LOD_MT) LOD_MT" ).append("\n"); 
		query.append(", MAX(S.DIS_TTL) DIS_TTL" ).append("\n"); 
		query.append(", MAX(S.DIS_OCN) DIS_OCN" ).append("\n"); 
		query.append(", MAX(S.DIS_IPC) DIS_IPC" ).append("\n"); 
		query.append(", MAX(S.DIS_TS) DIS_TS" ).append("\n"); 
		query.append(", MAX(S.DIS_MT) DIS_MT" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("S.RLANE_CD, S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD, S.PORT_CD" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'TOTAL',S.ON_TTL,0)) ON_TTL" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'OCN',S.ON_TTL,0)) ON_OCN" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'IPC',S.ON_TTL,0)) ON_IPC" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'T/S',S.ON_TTL,0)) ON_TS" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'MT',S.ON_TTL,0)) ON_MT" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'TOTAL',S.LOD_TTL,0)) LOD_TTL" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'OCN',S.LOD_TTL,0)) LOD_OCN" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'IPC',S.LOD_TTL,0)) LOD_IPC" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'T/S',S.LOD_TTL,0)) LOD_TS" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'MT',S.LOD_TTL,0)) LOD_MT" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'TOTAL',S.DIS_TTL,0)) DIS_TTL" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'OCN',S.DIS_TTL,0)) DIS_OCN" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'IPC',S.DIS_TTL,0)) DIS_IPC" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'T/S',S.DIS_TTL,0)) DIS_TS" ).append("\n"); 
		query.append(", SUM(DECODE(S.IOC_CD,'MT',S.DIS_TTL,0)) DIS_MT" ).append("\n"); 
		query.append("FROM SPC_BKG_DATA_TON S" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("GROUP BY S.RLANE_CD, S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD, S.PORT_CD, S.IOC_CD" ).append("\n"); 
		query.append(") S" ).append("\n"); 
		query.append("GROUP BY S.RLANE_CD, S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD, S.PORT_CD" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("/** SPC BOTTLENECK TON 끝 **/" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", EQR_SMY_03_TTL AS (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("E.RLANE_CD" ).append("\n"); 
		query.append(", E.VSL_CD" ).append("\n"); 
		query.append(", E.SKD_VOY_NO" ).append("\n"); 
		query.append(", E.SKD_DIR_CD" ).append("\n"); 
		query.append(", E.PORT_CD" ).append("\n"); 
		query.append(", E.PORT_SEQ" ).append("\n"); 
		query.append(", E.DP_SEQ" ).append("\n"); 
		query.append(", E.SEQ" ).append("\n"); 
		query.append(", E.ITEM_TITLE" ).append("\n"); 
		query.append(", E.ITEM_TP_CD" ).append("\n"); 
		query.append(", E.TTL_TEU" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='2' AND E.SEQ='1' THEN " ).append("\n"); 
		query.append("    CASE " ).append("\n"); 
		query.append("    WHEN NVL((SELECT B.TTL_WT FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) <> 0 " ).append("\n"); 
		query.append("    THEN TRUNC(T.ON_TTL / NVL((SELECT B.TTL_WT FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) * 100,2)" ).append("\n"); 
		query.append("    ELSE 0" ).append("\n"); 
		query.append("    END" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='2' AND E.SEQ='2' THEN" ).append("\n"); 
		query.append("    CASE " ).append("\n"); 
		query.append("    WHEN NVL((SELECT B.TTL_WT FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) <> 0 " ).append("\n"); 
		query.append("    THEN TRUNC((T.ON_TTL - T.ON_MT) / NVL((SELECT B.TTL_WT FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) * 100,2)" ).append("\n"); 
		query.append("    ELSE 0" ).append("\n"); 
		query.append("    END" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='2' AND E.SEQ='3' THEN" ).append("\n"); 
		query.append("    CASE " ).append("\n"); 
		query.append("    WHEN NVL((SELECT B.TTL_WT FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) <> 0 " ).append("\n"); 
		query.append("    THEN TRUNC(T.ON_MT / NVL((SELECT B.TTL_WT FROM BSA_DATA_TPSZ B WHERE ROWNUM=1),1) * 100,2)" ).append("\n"); 
		query.append("    ELSE 0" ).append("\n"); 
		query.append("    END" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='3' AND E.SEQ='1' THEN T.ON_TTL" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='3' AND E.SEQ='2' THEN (T.ON_TTL - T.ON_MT)" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='3' AND E.SEQ='3' THEN T.ON_MT" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='4' AND E.SEQ='1' THEN T.LOD_TTL - T.LOD_MT" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='4' AND E.SEQ='2' THEN T.LOD_OCN" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='4' AND E.SEQ='3' THEN T.LOD_IPC" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='4' AND E.SEQ='4' THEN T.LOD_TS" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='6' AND E.SEQ='1' THEN T.DIS_TTL - T.DIS_MT" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='6' AND E.SEQ='2' THEN T.DIS_OCN" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='6' AND E.SEQ='3' THEN T.DIS_IPC" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='6' AND E.SEQ='4' THEN T.DIS_TS" ).append("\n"); 
		query.append("WHEN E.DP_SEQ='7' AND E.SEQ='1' THEN T.DIS_MT" ).append("\n"); 
		query.append("ELSE E.TTL_WT" ).append("\n"); 
		query.append("END TTL_WT" ).append("\n"); 
		query.append(", E.TTL_BOX" ).append("\n"); 
		query.append(", E.TTL_20" ).append("\n"); 
		query.append(", E.TTL_40" ).append("\n"); 
		query.append(", E.TTL_HC" ).append("\n"); 
		query.append(", E.TTL_45" ).append("\n"); 
		query.append(", E.BOX_D2" ).append("\n"); 
		query.append(", E.BOX_D4" ).append("\n"); 
		query.append(", E.BOX_D5" ).append("\n"); 
		query.append(", E.BOX_D7" ).append("\n"); 
		query.append(", E.BOX_R2" ).append("\n"); 
		query.append(", E.BOX_R5" ).append("\n"); 
		query.append(", E.BOX_R9" ).append("\n"); 
		query.append(", E.BOX_O2" ).append("\n"); 
		query.append(", E.BOX_O4" ).append("\n"); 
		query.append(", E.BOX_S2" ).append("\n"); 
		query.append(", E.BOX_S4" ).append("\n"); 
		query.append(", E.BOX_F2" ).append("\n"); 
		query.append(", E.BOX_F4" ).append("\n"); 
		query.append(", E.BOX_F5" ).append("\n"); 
		query.append(", E.BOX_A2" ).append("\n"); 
		query.append(", E.BOX_A4" ).append("\n"); 
		query.append(", E.BOX_A5" ).append("\n"); 
		query.append("FROM EQR_SMY_02_TPSZ E, SPC_ORG_RESULT_DATA_TON T" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("AND E.RLANE_CD = T.RLANE_CD(+)" ).append("\n"); 
		query.append("AND E.VSL_CD = T.VSL_CD(+)" ).append("\n"); 
		query.append("AND E.SKD_VOY_NO = T.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("AND E.SKD_DIR_CD = T.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND E.PORT_CD = T.PORT_CD(+)" ).append("\n"); 
		query.append("#if(${s_pol_cd} != '') " ).append("\n"); 
		query.append("AND E.PORT_CD IN (" ).append("\n"); 
		query.append("#foreach($key IN ${s_pol_cd})" ).append("\n"); 
		query.append("    #if($velocityCount == 1 )" ).append("\n"); 
		query.append("        '$key'" ).append("\n"); 
		query.append("    #else" ).append("\n"); 
		query.append("        ,'$key'" ).append("\n"); 
		query.append("    #end                " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("ORDER BY E.RLANE_CD, E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD, E.PORT_CD, E.DP_SEQ, E.SEQ" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("SELECT L.* FROM (" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.PORT_CD, X.PORT_SEQ" ).append("\n"); 
		query.append(", X.DP_SEQ" ).append("\n"); 
		query.append(", X.SEQ" ).append("\n"); 
		query.append(", X.ITEM_TITLE" ).append("\n"); 
		query.append(", X.ITEM_TP_CD" ).append("\n"); 
		query.append(", X.TTL_TEU" ).append("\n"); 
		query.append(", X.TTL_WT" ).append("\n"); 
		query.append(", X.TTL_BOX" ).append("\n"); 
		query.append(", X.TTL_20" ).append("\n"); 
		query.append(", X.TTL_40" ).append("\n"); 
		query.append(", X.TTL_HC" ).append("\n"); 
		query.append(", X.TTL_45" ).append("\n"); 
		query.append(", X.BOX_D2" ).append("\n"); 
		query.append(", X.BOX_D4" ).append("\n"); 
		query.append(", X.BOX_D5" ).append("\n"); 
		query.append(", X.BOX_D7" ).append("\n"); 
		query.append(", X.BOX_R2" ).append("\n"); 
		query.append(", X.BOX_R5" ).append("\n"); 
		query.append(", X.BOX_R9" ).append("\n"); 
		query.append(", X.BOX_O2" ).append("\n"); 
		query.append(", X.BOX_O4" ).append("\n"); 
		query.append(", X.BOX_S2" ).append("\n"); 
		query.append(", X.BOX_S4" ).append("\n"); 
		query.append(", X.BOX_F2" ).append("\n"); 
		query.append(", X.BOX_F4" ).append("\n"); 
		query.append(", X.BOX_F5" ).append("\n"); 
		query.append(", X.BOX_A2" ).append("\n"); 
		query.append(", X.BOX_A4" ).append("\n"); 
		query.append(", X.BOX_A5" ).append("\n"); 
		query.append("FROM EQR_SMY_03_TTL X" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("--AND X.DP_SEQ NOT IN ('5')" ).append("\n"); 
		query.append("AND X.DP_SEQ||X.SEQ||'' <> '73'" ).append("\n"); 
		query.append("ORDER BY X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.PORT_SEQ, X.PORT_CD, X.DP_SEQ, X.SEQ" ).append("\n"); 
		query.append(") L" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT L.* FROM (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("/** 10. TTL  **/" ).append("\n"); 
		query.append("X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, 'TTL' PORT_CD, TO_NUMBER('') PORT_SEQ" ).append("\n"); 
		query.append(", MAX(X.DP_SEQ) DP_SEQ" ).append("\n"); 
		query.append(", MAX(X.SEQ) SEQ" ).append("\n"); 
		query.append(", MAX(X.ITEM_TITLE) ITEM_TITLE" ).append("\n"); 
		query.append(", MAX(X.ITEM_TP_CD) ITEM_TP_CD" ).append("\n"); 
		query.append(", CASE" ).append("\n"); 
		query.append("WHEN X.DP_SEQ IN ('1','2') THEN (SELECT T.TTL_TEU FROM EQR_SMY_03_TTL T WHERE T.PORT_CD=@[last_pol_cd] AND T.DP_SEQ=X.DP_SEQ AND T.SEQ=X.SEQ AND ROWNUM=1)" ).append("\n"); 
		query.append("ELSE SUM(X.TTL_TEU)" ).append("\n"); 
		query.append("END TTL_TEU" ).append("\n"); 
		query.append(", CASE" ).append("\n"); 
		query.append("WHEN X.DP_SEQ IN ('1','2') THEN (SELECT T.TTL_WT FROM EQR_SMY_03_TTL T WHERE T.PORT_CD=@[last_pol_cd] AND T.DP_SEQ=X.DP_SEQ AND T.SEQ=X.SEQ AND ROWNUM=1)" ).append("\n"); 
		query.append("ELSE SUM(X.TTL_WT)" ).append("\n"); 
		query.append("END TTL_WT" ).append("\n"); 
		query.append(", SUM(X.TTL_BOX) TTL_BOX" ).append("\n"); 
		query.append(", SUM(X.TTL_20) TTL_20" ).append("\n"); 
		query.append(", SUM(X.TTL_40) TTL_40" ).append("\n"); 
		query.append(", CASE" ).append("\n"); 
		query.append("WHEN X.DP_SEQ IN ('1','2') THEN (SELECT T.TTL_HC FROM EQR_SMY_03_TTL T WHERE T.PORT_CD=@[last_pol_cd] AND T.DP_SEQ=X.DP_SEQ AND T.SEQ=X.SEQ AND ROWNUM=1)" ).append("\n"); 
		query.append("ELSE SUM(X.TTL_HC)" ).append("\n"); 
		query.append("END TTL_HC" ).append("\n"); 
		query.append(", CASE" ).append("\n"); 
		query.append("WHEN X.DP_SEQ IN ('1','2') THEN (SELECT T.TTL_45 FROM EQR_SMY_03_TTL T WHERE T.PORT_CD=@[last_pol_cd] AND T.DP_SEQ=X.DP_SEQ AND T.SEQ=X.SEQ AND ROWNUM=1)" ).append("\n"); 
		query.append("ELSE SUM(X.TTL_45)" ).append("\n"); 
		query.append("END TTL_45" ).append("\n"); 
		query.append(", SUM(X.BOX_D2) BOX_D2" ).append("\n"); 
		query.append(", SUM(X.BOX_D4) BOX_D4" ).append("\n"); 
		query.append(", SUM(X.BOX_D5) BOX_D5" ).append("\n"); 
		query.append(", SUM(X.BOX_D7) BOX_D7" ).append("\n"); 
		query.append(", SUM(X.BOX_R2) BOX_R2" ).append("\n"); 
		query.append(", SUM(X.BOX_R5) BOX_R5" ).append("\n"); 
		query.append(", SUM(X.BOX_R9) BOX_R9" ).append("\n"); 
		query.append(", SUM(X.BOX_O2) BOX_O2" ).append("\n"); 
		query.append(", SUM(X.BOX_O4) BOX_O4" ).append("\n"); 
		query.append(", SUM(X.BOX_S2) BOX_S2" ).append("\n"); 
		query.append(", SUM(X.BOX_S4) BOX_S4" ).append("\n"); 
		query.append(", SUM(X.BOX_F2) BOX_F2" ).append("\n"); 
		query.append(", SUM(X.BOX_F4) BOX_F4" ).append("\n"); 
		query.append(", SUM(X.BOX_F5) BOX_F5" ).append("\n"); 
		query.append(", SUM(X.BOX_A2) BOX_A2" ).append("\n"); 
		query.append(", SUM(X.BOX_A4) BOX_A4" ).append("\n"); 
		query.append(", SUM(X.BOX_A5) BOX_A5" ).append("\n"); 
		query.append("FROM EQR_SMY_03_TTL X" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("--AND X.DP_SEQ NOT IN ('5')" ).append("\n"); 
		query.append("AND X.DP_SEQ||X.SEQ||'' <> '73'" ).append("\n"); 
		query.append("GROUP BY X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.DP_SEQ, X.SEQ" ).append("\n"); 
		query.append("ORDER BY X.RLANE_CD, X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.DP_SEQ, X.SEQ" ).append("\n"); 
		query.append(") L" ).append("\n"); 

	}
}