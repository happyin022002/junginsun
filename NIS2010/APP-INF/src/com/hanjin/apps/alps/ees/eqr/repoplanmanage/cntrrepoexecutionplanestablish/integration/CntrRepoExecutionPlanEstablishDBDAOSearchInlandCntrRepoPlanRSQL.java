/*=========================================================
*Copyright(c) 2010 CyberLogitec
*@FileName : CntrRepoExecutionPlanEstablishDBDAOSearchInlandCntrRepoPlanRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2010.04.09
*@LastModifier : 신용찬
*@LastVersion : 1.0
* 2010.04.09 신용찬
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.repoplanmanage.cntrrepoexecutionplanestablish.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author SHIN YONGCHAN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CntrRepoExecutionPlanEstablishDBDAOSearchInlandCntrRepoPlanRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 컨테이너 이송 실행 계획 조회/수정 Truck And Rail And Barge (EES_EQR_080) 정보 조회
	  * </pre>
	  */
	public CntrRepoExecutionPlanEstablishDBDAOSearchInlandCntrRepoPlanRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("sosend",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("repoPlanID",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("toWeek",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fromWeek",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mty",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.repoplanmanage.cntrrepoexecutionplanestablish.integration").append("\n"); 
		query.append("FileName : CntrRepoExecutionPlanEstablishDBDAOSearchInlandCntrRepoPlanRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("--SELECT /*+ NO_QUERY_TRANSFORMATION */" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YRWK" ).append("\n"); 
		query.append(",COMPANY" ).append("\n"); 
		query.append(",DIVISION" ).append("\n"); 
		query.append(",ITEM" ).append("\n"); 
		query.append(",LANE" ).append("\n"); 
		query.append(",VVD" ).append("\n"); 
		query.append(",FRLOC" ).append("\n"); 
		query.append(",ETD" ).append("\n"); 
		query.append(",TOLOC" ).append("\n"); 
		query.append(",ETA" ).append("\n"); 
		query.append(",PURPOSE" ).append("\n"); 
		query.append(",CNTRNO" ).append("\n"); 
		query.append(",SOSEND" ).append("\n"); 
		query.append(",DECODE(ITEM, 'W', REPOBKG, '') REPOBKG" ).append("\n"); 
		query.append(",REF_ID" ).append("\n"); 
		query.append(",BKG_NO" ).append("\n"); 
		query.append("--    ,BKG_NO_SPLIT" ).append("\n"); 
		query.append(",REASON" ).append("\n"); 
		query.append(",REASONREMARK" ).append("\n"); 
		query.append(",SUM(TOTALVOL)  TOTALVOL" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(${key}VOL)     ${key}VOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",SUM(TOTALCOST) TOTALCOST" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(${key}COST)    ${key}COST" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",PLN_SEQ		-- HIDDEN" ).append("\n"); 
		query.append(",REPO_PLN_ID 	-- HIDDEN" ).append("\n"); 
		query.append(",SORTNUM    	-- HIDDEN	PLAN(1), Execution(2), SO(3)를 구분" ).append("\n"); 
		query.append(",NUM        	-- HIDDEN 	NORMAL ROW(1), SUB TOTAL(2), GRAND TOTAL(3) 구분" ).append("\n"); 
		query.append(",PAST_REPO_PLN_FLG  -- HIDDEN 과거에서 내려온 PLAN (Y)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",(SELECT DISTINCT RCC_CD FROM EQR_ECC_MST WHERE ECC_CD = FM_ECC) FM_RCC     -- From ecc's RCC" ).append("\n"); 
		query.append(",(SELECT DISTINCT RCC_CD FROM EQR_ECC_MST WHERE ECC_CD = TO_ECC) TO_RCC     -- To   ecc's RCC" ).append("\n"); 
		query.append(",(SELECT DISTINCT LCC_CD FROM EQR_ECC_MST WHERE ECC_CD = FM_ECC) FM_LCC     -- From ecc's LCC" ).append("\n"); 
		query.append(",(SELECT DISTINCT LCC_CD FROM EQR_ECC_MST WHERE ECC_CD = TO_ECC) TO_LCC     -- To   ecc's LCC" ).append("\n"); 
		query.append(",FM_ECC     -- FM ECC" ).append("\n"); 
		query.append(",TO_ECC     -- TO ECC" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",'' CNTRNOINPUT  -- HIDDEN" ).append("\n"); 
		query.append(",'' TPSZINPUT    -- HIDDEN" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(${key}CNTRVOL) ${key}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPE SIZE별 수정된 VOL 정보를 확인하기 위한 FLAG" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",'F' ${key}FLAG" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",'' VVDCNT" ).append("\n"); 
		query.append(",'F' SOCANCEL_FLAG    -- HIDDEN (SO CANCEL CHECK)" ).append("\n"); 
		query.append(",'F' REOPBKG_FLAG     -- HIDDEN (REPO BKG CHECK)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",SUBSTR(FRLOC, 0, 5) SORT_FRLOC" ).append("\n"); 
		query.append(",SUBSTR(TOLOC, 0, 5) SORT_TOLOC" ).append("\n"); 
		query.append(",FM_ECC||TO_ECC SORT1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",(SELECT WK_ST_DT  FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = PLN_YRWK ) WK_ST_DT  -- week from date" ).append("\n"); 
		query.append(",(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = PLN_YRWK ) WK_END_DT -- week to date" ).append("\n"); 
		query.append(",(SELECT TO_CHAR(TO_DATE(WK_END_DT, 'YYYYMMDD')+49, 'YYYYMMDD') WK_MAX_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = PLN_YRWK ) WK_MAX_DT -- WEEK MAX DATE +7" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",TRSPNO_P     -- TRSP CD COUNT" ).append("\n"); 
		query.append(",TRSPNO_D     -- TRSP CD COUNT" ).append("\n"); 
		query.append(",TRSPNO_A" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 특정 PLAN에 포함된 EXECUTE의 TYPESIZE별 VOL 전체" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(${key}MAXVOL) ${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE VOL별 FEEDBACK 정보" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(${key}BASICRATIO) ${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",SUM(${key}BASICVOL)   ${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE UNIT COST, FROM COST, TO COST" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(${key}UNITCOST) ${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",SUM(${key}FROMCOST) ${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",SUM(${key}TOCOST)   ${key}TOCOST   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL') PLN_YRWK" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PLN_SEQ , 2, '', 3, '') PLN_SEQ" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')                      COMPANY" ).append("\n"); 
		query.append(",A.DIVISION" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')      ITEM" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')      FRLOC" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL) ETD" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')      TOLOC" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETA  ,  2, NULL, 3, NULL)  ETA" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')      VVD" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')      LANE" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')    PURPOSE" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.CNTRNO,  2, '', 3, '')     CNTRNO" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.SOSEND,  2, '', 3, '')     SOSEND" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REPOBKG,  2, '', 3, '')    REPOBKG" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')     REASON" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '') REASONREMARK" ).append("\n"); 
		query.append(",SUM(A.TOTALVOL)  TOTALVOL" ).append("\n"); 
		query.append(",SUM(A.TOTALCOST) TOTALCOST" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(A.${key}VOL)     ${key}VOL" ).append("\n"); 
		query.append(",SUM(A.${key}COST)    ${key}COST" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- TPSZ별 CNTR 갯수" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(A.${key}CNTRVOL) ${key}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')     REF_ID" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.BKG_NO,  2, '', 3, '')     BKG_NO" ).append("\n"); 
		query.append("--        ,DECODE(B.NUM, 1, A.BKG_NO_SPLIT,  2, '', 3, '') BKG_NO_SPLIT" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REPO_PLN_ID,  2, '', 3, '') REPO_PLN_ID -- HIDDEN" ).append("\n"); 
		query.append(",A.SORTNUM    	    -- HIDDEN" ).append("\n"); 
		query.append(",B.NUM           		-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FM_ECC,  2, '', 3, '') FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TO_ECC,  2, '', 3, '') TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TRSPNO_P,  2, '', 3, '') TRSPNO_P" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TRSPNO_D,  2, '', 3, '') TRSPNO_D" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TRSPNO_A,  2, '', 3, '') TRSPNO_A" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PAST_REPO_PLN_FLG,  2, '', 3, '') PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 특정 PLAN에 포함된 EXECUTE의 TYPESIZE별 VOL 전체" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(A.${key}MAXVOL) ${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE VOL별 FEEDBACK 정보" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(A.${key}BASICRATIO) ${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}BASICVOL)   ${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE UNIT COST, FROM COST, TO COST" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",SUM(A.${key}UNITCOST)   ${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}FROMCOST)   ${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}TOCOST)     ${key}TOCOST   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("-- query 시작(NORMAL, SUB, GRAND TOTAL 공동사용)" ).append("\n"); 
		query.append("-- PLAN -------------------------------------------" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",''		 		COMPANY    -- E.CO_CD" ).append("\n"); 
		query.append(",'Plan' 		DIVISION" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD 	ITEM" ).append("\n"); 
		query.append(",A.FM_ECC_CD 	FRLOC" ).append("\n"); 
		query.append(",A.FM_YRWK 		ETD" ).append("\n"); 
		query.append(",A.TO_ECC_CD 	TOLOC" ).append("\n"); 
		query.append(",A.TO_YRWK 		ETA" ).append("\n"); 
		query.append(",'' 			VVD" ).append("\n"); 
		query.append(",'' 			LANE" ).append("\n"); 
		query.append(",'' 			PURPOSE" ).append("\n"); 
		query.append(",'' 			CNTRNO" ).append("\n"); 
		query.append(",'' 			SOSEND" ).append("\n"); 
		query.append(",'' 			REPOBKG" ).append("\n"); 
		query.append(",'' 			REASON" ).append("\n"); 
		query.append(",'' 			REASONREMARK" ).append("\n"); 
		query.append("--              ,SUM(A.CNTR_QTY) 		   TOTALVOL" ).append("\n"); 
		query.append("--              ,SUM(A.TRSP_COST_AMT) 	   TOTALCOST" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.CNTR_QTY)),0)" ).append("\n"); 
		query.append("#if($velocityCount < $tpszArr.size())" ).append("\n"); 
		query.append("+" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALVOL" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.TRSP_COST_AMT)),0)" ).append("\n"); 
		query.append("#if($velocityCount < $tpszArr.size())" ).append("\n"); 
		query.append("+" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALCOST" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.CNTR_QTY)),0) 	  ${key}VOL" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.TRSP_COST_AMT)),0) ${key}COST" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- TPSZ별 CNTR 갯수" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0 ${key}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",'' REF_ID" ).append("\n"); 
		query.append(",'' BKG_NO" ).append("\n"); 
		query.append("--                ,'' BKG_NO_SPLIT" ).append("\n"); 
		query.append(",A.REPO_PLN_ID 	-- HIDDEN" ).append("\n"); 
		query.append(",1 SORTNUM    	-- HIDDEN" ).append("\n"); 
		query.append(",A.FM_ECC_CD FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",A.TO_ECC_CD TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",0 TRSPNO_P" ).append("\n"); 
		query.append(",0 TRSPNO_D" ).append("\n"); 
		query.append(",0 TRSPNO_A" ).append("\n"); 
		query.append(",A.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 특정 PLAN에 포함된 EXECUTE의 TYPESIZE별 VOL 전체" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(E.CNTR_TPSZ_CD, '${key}', E.MAX_QTY)),0) ${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE VOL별 FEEDBACK 정보" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${key} == 'S2')" ).append("\n"); 
		query.append("#set($tranTpsz = \"O2\")" ).append("\n"); 
		query.append("#elseif(${key} == 'S4')" ).append("\n"); 
		query.append("#set($tranTpsz = \"O4\")" ).append("\n"); 
		query.append("#elseif(${key} == 'A2')" ).append("\n"); 
		query.append("#set($tranTpsz = \"F2\")" ).append("\n"); 
		query.append("#elseif(${key} == 'A4')" ).append("\n"); 
		query.append("#set($tranTpsz = \"F4\")" ).append("\n"); 
		query.append("--        	 project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록" ).append("\n"); 
		query.append("#elseif(${key} == 'F5')" ).append("\n"); 
		query.append("#set($tranTpsz = \"F4\")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("#set($tranTpsz = ${key})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(F.CNTR_TPSZ_CD, '$tranTpsz', F.FB_RTO)),0)       ${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(F.CNTR_TPSZ_CD, '$tranTpsz', F.CNTR_VOL_QTY)),0) ${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${key} == 'S2')" ).append("\n"); 
		query.append("#set($tranTpsz = \"O2\")" ).append("\n"); 
		query.append("#elseif(${key} == 'S4')" ).append("\n"); 
		query.append("#set($tranTpsz = \"O4\")" ).append("\n"); 
		query.append("#elseif(${key} == 'A2')" ).append("\n"); 
		query.append("#set($tranTpsz = \"F2\")" ).append("\n"); 
		query.append("#elseif(${key} == 'A4')" ).append("\n"); 
		query.append("#set($tranTpsz = \"F4\")" ).append("\n"); 
		query.append("--        	 project_name : 신규 장비(F5-40ft H/C Flat rack) 발주에 따른 NIS 상에 F5 등록" ).append("\n"); 
		query.append("#elseif(${key} == 'F5')" ).append("\n"); 
		query.append("#set($tranTpsz = \"F4\")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("#set($tranTpsz = ${key})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$tranTpsz', A.PLN_UC_AMT)),0)      ${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$tranTpsz', A.FM_ECC_COST_AMT)),0) ${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$tranTpsz', A.TO_ECC_COST_AMT)),0) ${key}TOCOST --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("select" ).append("\n"); 
		query.append("A0.REPO_PLN_ID" ).append("\n"); 
		query.append(",A0.PLN_YRWK" ).append("\n"); 
		query.append(",A0.PLN_SEQ" ).append("\n"); 
		query.append(",A0.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A0.FM_ECC_CD" ).append("\n"); 
		query.append(",A0.FM_YRWK" ).append("\n"); 
		query.append(",A0.TO_ECC_CD" ).append("\n"); 
		query.append(",A0.TO_YRWK" ).append("\n"); 
		query.append(",A0.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",A0.XTER_RQST_PLN_OWNR_CD" ).append("\n"); 
		query.append(",A0.CRE_USR_ID" ).append("\n"); 
		query.append(",A0.CRE_DT" ).append("\n"); 
		query.append(",A0.UPD_USR_ID" ).append("\n"); 
		query.append(",A0.UPD_DT" ).append("\n"); 
		query.append(",Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",Q.FM_ECC_COST_AMT" ).append("\n"); 
		query.append(",Q.TO_ECC_COST_AMT" ).append("\n"); 
		query.append(",Q.PLN_UC_AMT" ).append("\n"); 
		query.append(",Q.TRSP_COST_AMT" ).append("\n"); 
		query.append(",Q.CNTR_QTY" ).append("\n"); 
		query.append("from" ).append("\n"); 
		query.append("EQR_INLND_TRSP_PLN A0," ).append("\n"); 
		query.append("EQR_INLND_TRSP_PLN_QTY Q" ).append("\n"); 
		query.append("where" ).append("\n"); 
		query.append("A0.REPO_PLN_ID = Q.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A0.PLN_YRWK = Q.PLN_YRWK" ).append("\n"); 
		query.append("AND A0.PLN_SEQ = Q.PLN_SEQ" ).append("\n"); 
		query.append(") A," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- reason, company, sosend 검색정보 사용시만 조인쿼리를 사용합니다." ).append("\n"); 
		query.append("#if(${reason} != '' || ${sosend} != '' || ${mty} != '' || ${lane} != '' || ${vvd} != '')" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("DISTINCT A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.VSL_CD" ).append("\n"); 
		query.append(",A.SKD_VOY_NO" ).append("\n"); 
		query.append(",A.SKD_DIR_CD" ).append("\n"); 
		query.append(",A.FM_YD_CD" ).append("\n"); 
		query.append(",A.FM_ETD_DT" ).append("\n"); 
		query.append(",A.TO_YD_CD" ).append("\n"); 
		query.append(",A.TO_ETA_DT" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK" ).append("\n"); 
		query.append(",Q.CNTR_QTY" ).append("\n"); 
		query.append(",Q.TRSP_COST_AMT" ).append("\n"); 
		query.append("--                          ,A.EXE_RQST_DT" ).append("\n"); 
		query.append(",A.EXE_ISS_FLG" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",B.ECC_CD FM_ECC" ).append("\n"); 
		query.append(",C.ECC_CD TO_ECC" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN_QTY Q," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT B," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("A.REPO_PLN_ID = Q.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A.PLN_YRWK = Q.PLN_YRWK" ).append("\n"); 
		query.append("AND A.PLN_SEQ = Q.PLN_SEQ" ).append("\n"); 
		query.append("AND A.REF_ID = Q.REF_ID" ).append("\n"); 
		query.append("AND SUBSTR(A.FM_YD_CD, 0, 5) = B.SCC_CD" ).append("\n"); 
		query.append("AND   SUBSTR(A.TO_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND A.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND A.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND A.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND A.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '')" ).append("\n"); 
		query.append("AND A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") B," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",B.ECC_CD FM_ECC" ).append("\n"); 
		query.append(",C.ECC_CD TO_ECC" ).append("\n"); 
		query.append(",Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",SUM(Q.CNTR_QTY) MAX_QTY" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN_QTY Q," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT B," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("A.REPO_PLN_ID = Q.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A.PLN_YRWK = Q.PLN_YRWK" ).append("\n"); 
		query.append("AND A.PLN_SEQ = Q.PLN_SEQ" ).append("\n"); 
		query.append("AND A.REF_ID = Q.REF_ID" ).append("\n"); 
		query.append("AND SUBSTR(A.FM_YD_CD, 0, 5) = B.SCC_CD" ).append("\n"); 
		query.append("AND   SUBSTR(A.TO_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("AND   A.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("--                  AND   A.PLN_YRWK BETWEEN fromWeek AND toWeek    --원본" ).append("\n"); 
		query.append("--                  CSR No : N200906040080 의거 변경" ).append("\n"); 
		query.append("--                  추가 내용 : Fm/To , At일 경우는 PLN_YRWK으로 조건을 걸고 Fm ETD 경우 FM_ETD_DT로, To ETA일경우 TO_ETA_DT로 조건을 건다." ).append("\n"); 
		query.append("#if(${fmtoat} == '3') --Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_ST_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_END_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4') --To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_ST_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_END_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#else  -- Fm/To , At일경우" ).append("\n"); 
		query.append("AND   A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",B.ECC_CD" ).append("\n"); 
		query.append(",C.ECC_CD" ).append("\n"); 
		query.append(",Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") E," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("FB_ITM_CD ITEM" ).append("\n"); 
		query.append(",A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",A.FB_RTO" ).append("\n"); 
		query.append(",A.CNTR_VOL_QTY" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_REPO_EXE_PLN_FB A," ).append("\n"); 
		query.append("COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("A.FB_ITM_CD = B.INTG_CD_VAL_CTNT" ).append("\n"); 
		query.append("AND   B.INTG_CD_ID = 'CD00565'" ).append("\n"); 
		query.append("--GROUP BY FB_ITM_CD" ).append("\n"); 
		query.append(") F" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- reason, company, sosend 검색정보 사용시만 조인쿼리를 사용합니다." ).append("\n"); 
		query.append("#if(${reason} != '' || ${sosend} != '' || ${mty} != '' || ${lane} != '' || ${vvd} != '')" ).append("\n"); 
		query.append("AND   A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND   A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND   A.PLN_SEQ     = B.PLN_SEQ" ).append("\n"); 
		query.append("--AND   A.FM_ECC_CD   = B.FM_ECC" ).append("\n"); 
		query.append("--AND   A.TO_ECC_CD   = B.TO_ECC" ).append("\n"); 
		query.append("--AND   A.TRSP_MOD_CD = B.TRSP_MOD_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND   A.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("AND   A.PLN_YRWK       = E.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND   A.PLN_SEQ        = E.PLN_SEQ(+)" ).append("\n"); 
		query.append("--AND   A.TRSP_MOD_CD    = E.TRSP_MOD_CD(+)" ).append("\n"); 
		query.append("--AND   A.FM_ECC_CD      = E.FM_ECC(+)" ).append("\n"); 
		query.append("--AND   A.TO_ECC_CD      = E.TO_ECC(+)" ).append("\n"); 
		query.append("AND   A.TRSP_MOD_CD    = F.ITEM(+)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- user location" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND ( A.FM_ECC_CD IN ( ${userECCStrArr} ) OR A.TO_ECC_CD IN ( ${userECCStrArr} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("-- 내역 :  Fm ETD , To ETA 조건값 추가" ).append("\n"); 
		query.append("#if(${fmtoat} == '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND A.FM_ECC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND A.TO_ECC_CD IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '3') -- Fm ETD" ).append("\n"); 
		query.append("AND   A.FM_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND A.FM_ECC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND A.TO_ECC_CD IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4')  --To ETA" ).append("\n"); 
		query.append("AND   A.TO_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND A.FM_ECC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND A.TO_ECC_CD IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("--          modified by shin yongchan 20070612 - confirmed by whang youngshin" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.FM_ECC_CD IN ( ${fromECCStrArr} )	 AND A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.TO_ECC_CD IN ( ${fromECCStrArr} )	 AND A.TO_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.TO_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("AND A.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND A.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",E.CO_CD" ).append("\n"); 
		query.append(",A.FM_ECC_CD" ).append("\n"); 
		query.append(",A.FM_YRWK" ).append("\n"); 
		query.append(",A.TO_ECC_CD" ).append("\n"); 
		query.append(",A.TO_YRWK" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- Execution ---------------------------------------" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.PLN_YRWK 		PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.CO_CD 			COMPANY" ).append("\n"); 
		query.append(",'Execution' 		DIVISION" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD 	ITEM" ).append("\n"); 
		query.append(",A.FM_YD_CD  		FRLOC" ).append("\n"); 
		query.append(",TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD') 		ETD" ).append("\n"); 
		query.append(",A.TO_YD_CD  		TOLOC" ).append("\n"); 
		query.append(",TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') 		ETA" ).append("\n"); 
		query.append(",A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD     VVD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD 	 LANE" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD PURPOSE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",CASE WHEN A.MTY_BKG_NO IS NULL" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("-- ORIGINAL CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.PLN_YRWK = C.PLN_YRWK AND A.REF_ID = C.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("'0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("'1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("-- NIS SYNC CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.MTY_BKG_NO = F.BKG_NO --AND A.MTY_BKG_NO_SPLIT = F.BKG_NO_SPLIT" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("'0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("'1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("END CNTRNO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",A.EXE_ISS_FLG    	 SOSEND" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG	 REPOBKG" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD  REASON" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK     REASONREMARK" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.CNTR_QTY)),0)" ).append("\n"); 
		query.append("#if($velocityCount < $tpszArr.size())" ).append("\n"); 
		query.append("+" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALVOL" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.TRSP_COST_AMT)),0)" ).append("\n"); 
		query.append("#if($velocityCount < $tpszArr.size())" ).append("\n"); 
		query.append("+" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALCOST" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.CNTR_QTY)),0) 	 ${key}VOL" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.TRSP_COST_AMT)),0) ${key}COST" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- TPSZ별 CNTR 갯수" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', D.REFCOUNT)),0) ${key}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",A.MTY_BKG_NO BKG_NO" ).append("\n"); 
		query.append("--                ,A.MTY_BKG_NO_SPLIT  BKG_NO_SPLIT" ).append("\n"); 
		query.append(",A.REPO_PLN_ID 				-- HIDDEN" ).append("\n"); 
		query.append(",2 SORTNUM   					-- HIDDEN" ).append("\n"); 
		query.append(",A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",CASE WHEN A.PLN_YRWK = E.PLN_YRWK AND A.REF_ID = E.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("E.TRSPCOUNT_P  -- TRSP 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("0              -- TRSP 존재안함" ).append("\n"); 
		query.append("END TRSPNO_P" ).append("\n"); 
		query.append(",CASE WHEN A.PLN_YRWK = E.PLN_YRWK AND A.REF_ID = E.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("E.TRSPCOUNT_D  -- TRSP 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("0              -- TRSP 존재안함" ).append("\n"); 
		query.append("END TRSPNO_D" ).append("\n"); 
		query.append(",CASE WHEN A.PLN_YRWK = G.PLN_YRWK AND A.REF_ID = G.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("G.TRSPCOUNT_A" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("0" ).append("\n"); 
		query.append("END TRSPNO_A" ).append("\n"); 
		query.append("--        	  ,'' AS PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",DECODE(A.PAST_REPO_PLN_FLG, '', 'N', null, 'N', A.PAST_REPO_PLN_FLG) AS PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 특정 PLAN에 포함된 EXECUTE의 TYPESIZE별 VOL 전체" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0 ${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE VOL별 FEEDBACK 정보" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0   ${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",0   ${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE UNIT COST, FROM COST, TO COST" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.PLN_UC_AMT)),0)    ${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.FM_ECC_UC_AMT)),0) ${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '${key}', A.TO_ECC_UC_AMT)),0) ${key}TOCOST   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.VSL_CD" ).append("\n"); 
		query.append(",A.SKD_VOY_NO" ).append("\n"); 
		query.append(",A.SKD_DIR_CD" ).append("\n"); 
		query.append(",A.FM_YD_CD" ).append("\n"); 
		query.append(",A.FM_ETD_DT" ).append("\n"); 
		query.append(",A.TO_YD_CD" ).append("\n"); 
		query.append(",A.TO_ETA_DT" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK" ).append("\n"); 
		query.append(",Q.CNTR_QTY" ).append("\n"); 
		query.append(",Q.TRSP_COST_AMT" ).append("\n"); 
		query.append("--                    ,A.EXE_RQST_DT" ).append("\n"); 
		query.append(",A.EXE_ISS_FLG" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",A.MTY_BKG_NO" ).append("\n"); 
		query.append("--                    ,A.MTY_BKG_NO_SPLIT" ).append("\n"); 
		query.append(",B.ECC_CD FM_ECC" ).append("\n"); 
		query.append(",C.ECC_CD TO_ECC" ).append("\n"); 
		query.append(",A.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",Q.PLN_UC_AMT" ).append("\n"); 
		query.append(",Q.FM_ECC_UC_AMT" ).append("\n"); 
		query.append(",Q.TO_ECC_UC_AMT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN_QTY Q," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT B," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("A.REPO_PLN_ID = Q.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A.PLN_YRWK = Q.PLN_YRWK" ).append("\n"); 
		query.append("AND A.PLN_SEQ = Q.PLN_SEQ" ).append("\n"); 
		query.append("AND A.REF_ID = Q.REF_ID" ).append("\n"); 
		query.append("AND SUBSTR(A.FM_YD_CD, 0, 5) = B.SCC_CD" ).append("\n"); 
		query.append("AND SUBSTR(A.TO_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append(") A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_PLN     B," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",NVL(COUNT(*), 0) REFCOUNT" ).append("\n"); 
		query.append("FROM EQR_EXE_PLN_CNTR A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN B" ).append("\n"); 
		query.append("WHERE A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND   A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND   A.REF_ID      = B.REF_ID" ).append("\n"); 
		query.append("AND   B.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fmtoat}== '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN ( SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN ( SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("-- 내역 :  Fm ETD , To ETA 로직 추가" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '3')    -- Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(B.FM_ETD_DT ,'YYYYMMDD') BETWEEN" ).append("\n"); 
		query.append("( SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("( SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek] )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN ( SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN ( SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4')    -- To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(B.TO_ETA_DT ,'YYYYMMDD') BETWEEN" ).append("\n"); 
		query.append("( SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN ( SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("-- CSR No :N200906040080 추가 끝" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} )	)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} )	)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- user location" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userECCStrArr} ))" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userECCStrArr} ))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND   B.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND   B.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND   B.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND   B.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '' )" ).append("\n"); 
		query.append("AND   B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND   B.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY  A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append("HAVING NVL(COUNT(*), 0) > 0" ).append("\n"); 
		query.append(") C," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append(", Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(", NVL(COUNT(*), 0) REFCOUNT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_EXE_PLN_CNTR A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN B," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN_QTY Q" ).append("\n"); 
		query.append("WHERE A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND   A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND   A.REF_ID      = B.REF_ID" ).append("\n"); 
		query.append("AND   A.PLN_SEQ     = B.PLN_SEQ" ).append("\n"); 
		query.append("AND   A.CNTR_TPSZ_CD= Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("AND   B.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("AND B.REPO_PLN_ID = Q.REPO_PLN_ID" ).append("\n"); 
		query.append("AND B.PLN_YRWK = Q.PLN_YRWK" ).append("\n"); 
		query.append("AND B.PLN_SEQ = Q.PLN_SEQ" ).append("\n"); 
		query.append("AND B.REF_ID = Q.REF_ID" ).append("\n"); 
		query.append("#if(${fmtoat} == '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("-- 내역 :  Fm ETD , To ETA 로직 추가" ).append("\n"); 
		query.append("#elseif(${fmtoat} =='3')    -- Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(B.FM_ETD_DT ,'YYYYMMDD') BETWEEN" ).append("\n"); 
		query.append("(SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4')    -- To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(B.TO_ETA_DT ,'YYYYMMDD') BETWEEN" ).append("\n"); 
		query.append("(SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- CSR No :N200906040080 추가 끝" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)" ).append("\n"); 
		query.append("BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)" ).append("\n"); 
		query.append("BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- user location" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("AND Q.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND B.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND B.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND B.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND B.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '' )" ).append("\n"); 
		query.append("AND B.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append(", Q.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") D," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append(",NVL(SUM(DECODE(A.TRSP_SO_STS_CD, 'P', 1, 0)), 0) TRSPCOUNT_P" ).append("\n"); 
		query.append(",NVL(SUM(DECODE(A.TRSP_SO_STS_CD, 'D', 1, 0)), 0) TRSPCOUNT_D" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append(", A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(", A.TRSP_SO_STS_CD" ).append("\n"); 
		query.append("FROM EQR_REPO_EXE_SO_IF A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN B" ).append("\n"); 
		query.append("WHERE A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND   A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND   A.PLN_SEQ     = B.PLN_SEQ" ).append("\n"); 
		query.append("AND   A.REF_ID      = B.REF_ID" ).append("\n"); 
		query.append("AND   B.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- modified by shin yongchan - 20081020" ).append("\n"); 
		query.append("-- CSR NO : N200810240024" ).append("\n"); 
		query.append("-- 'P' - S/O Send 최초" ).append("\n"); 
		query.append("-- 'D' - TRS모듈에서 W/O 시도후 취소 상태" ).append("\n"); 
		query.append("-- P, D 모두 S/O Cancel 대상으로 포함" ).append("\n"); 
		query.append("-- AND   A.TRSP_SO_STS_CD = 'P'                         -- 중요" ).append("\n"); 
		query.append("AND   A.TRSP_SO_STS_CD IN ('P', 'D')                  -- 중요" ).append("\n"); 
		query.append("#if(${fmtoat} == '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("-- 내역 :  Fm ETD , To ETA 로직 추가" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '3')    -- Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(B.FM_ETD_DT ,'YYYYMMDD') BETWEEN 	(SELECT WK_ST_DT FROM  EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat}  == '4')    -- To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(B.TO_ETA_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- CSR No :N200906040080 추가 끝" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- user location" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SUBSTR(B.FM_YD_CD, 0, 5) IN (" ).append("\n"); 
		query.append("SELECT SCC_CD" ).append("\n"); 
		query.append("FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("WHERE ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("SUBSTR(B.TO_YD_CD, 0, 5) IN (" ).append("\n"); 
		query.append("SELECT SCC_CD" ).append("\n"); 
		query.append("FROM MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("WHERE ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("--AND Q.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND B.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND B.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND B.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND B.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND B.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") A" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") E," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.BKG_NO" ).append("\n"); 
		query.append(", NVL(COUNT(*), 0) REFCOUNT" ).append("\n"); 
		query.append("FROM BKG_CONTAINER A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN B" ).append("\n"); 
		query.append("WHERE B.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("-- CSR No : N200906040080 의거 변경" ).append("\n"); 
		query.append("-- 추가 내용 : Fm/To , At일 경우는 PLN_YRWK으로 조건을 걸고 Fm ETD 경우 FM_ETD_DT로, To ETA일경우 TO_ETA_DT로 조건을 건다." ).append("\n"); 
		query.append("#if(${fmtoat} == '3' ) --Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(B.FM_ETD_DT ,'YYYYMMDD') BETWEEN (" ).append("\n"); 
		query.append("SELECT WK_ST_DT" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT WK_END_DT" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4') --To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(B.TO_ETA_DT ,'YYYYMMDD') BETWEEN (" ).append("\n"); 
		query.append("SELECT WK_ST_DT" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT WK_END_DT" ).append("\n"); 
		query.append("FROM EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#else  -- Fm/To , At일경우" ).append("\n"); 
		query.append("AND   B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("--          CSR No : N200906040080 끝" ).append("\n"); 
		query.append("--AND   B.CO_CD = 'H'" ).append("\n"); 
		query.append("AND   A.BKG_NO = B.MTY_BKG_NO" ).append("\n"); 
		query.append("--AND   A.BKG_NO_SPLIT = B.MTY_BKG_NO_SPLIT" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("--AND   Q.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.BKG_NO" ).append("\n"); 
		query.append("--, A.BKG_NO_SPLIT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- SENATOR query delete" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") F," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID" ).append("\n"); 
		query.append(", NVL(COUNT(*), 0) TRSPCOUNT_A" ).append("\n"); 
		query.append("FROM EQR_REPO_EXE_SO_IF A," ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN B" ).append("\n"); 
		query.append("WHERE A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND   A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND   A.REF_ID      = B.REF_ID" ).append("\n"); 
		query.append("AND   B.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fmtoat} == '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--          CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("--          내역 :  Fm ETD , To ETA 로직 추가" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '3')    -- Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(B.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND   SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4')    -- To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(B.TO_ETA_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fromWeek])" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(SELECT WK_END_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[toWeek])" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND  SUBSTR(B.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND  SUBSTR(B.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toECCStrArr} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- CSR No :N200906040080  끝" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.FM_YD_CD, 0, 5) IN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("SCC_CD" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("ECC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND SUBSTR(B.TO_YD_CD, 0, 5) IN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("SCC_CD" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("ECC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("B.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("TO_CHAR(B.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- user location" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SUBSTR(B.FM_YD_CD, 0, 5) IN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("SCC_CD" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("SUBSTR(B.TO_YD_CD, 0, 5) IN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("SCC_CD" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("--AND Q.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND B.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND B.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND B.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND B.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND B.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.REPO_PLN_ID" ).append("\n"); 
		query.append(", A.PLN_YRWK" ).append("\n"); 
		query.append(", A.PLN_SEQ" ).append("\n"); 
		query.append(", A.REF_ID        -- 중요" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") G" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND   A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND   A.PLN_SEQ     = B.PLN_SEQ" ).append("\n"); 
		query.append("AND   A.PLN_YRWK = C.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND   A.REF_ID   = C.REF_ID(+)" ).append("\n"); 
		query.append("AND   A.PLN_YRWK = D.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND   A.PLN_SEQ = D.PLN_SEQ(+)" ).append("\n"); 
		query.append("AND   A.REF_ID   = D.REF_ID(+)" ).append("\n"); 
		query.append("AND   A.CNTR_TPSZ_CD = D.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("AND   A.PLN_YRWK = E.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND   A.PLN_SEQ = E.PLN_SEQ(+)" ).append("\n"); 
		query.append("AND   A.REF_ID   = E.REF_ID(+)" ).append("\n"); 
		query.append("AND   A.MTY_BKG_NO = F.BKG_NO(+)" ).append("\n"); 
		query.append("--                AND   A.MTY_BKG_NO_SPLIT = F.BKG_NO_SPLIT(+)" ).append("\n"); 
		query.append("AND   A.PLN_YRWK = G.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND   A.PLN_SEQ = G.PLN_SEQ(+)" ).append("\n"); 
		query.append("AND   A.REF_ID   = G.REF_ID(+)" ).append("\n"); 
		query.append("AND   A.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("#if(${fmtoat} == '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND A.FM_ECC IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND A.TO_ECC IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("-- 내역 :  Fm ETD , To ETA 로직 추가" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '3')    -- Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_ST_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_END_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND A.FM_ECC IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND A.TO_ECC IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4')    -- To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_ST_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_END_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND A.FM_ECC IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND A.TO_ECC IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- CSR No :N200906040080 끝" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND A.FM_ECC IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND A.TO_ECC IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.FM_ECC IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("A.TO_ECC IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("AND   A.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND   A.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND   A.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND   A.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND   A.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '')" ).append("\n"); 
		query.append("AND   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND   A.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.FM_YD_CD" ).append("\n"); 
		query.append(",TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD')" ).append("\n"); 
		query.append(",A.TO_YD_CD" ).append("\n"); 
		query.append(",TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD')" ).append("\n"); 
		query.append(",A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD" ).append("\n"); 
		query.append(",CASE WHEN A.MTY_BKG_NO IS NULL" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("-- ORIGINAL CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.PLN_YRWK = C.PLN_YRWK AND A.REF_ID = C.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("'0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("'1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("-- NIS SYNC CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.MTY_BKG_NO = F.BKG_NO --AND A.MTY_BKG_NO_SPLIT = F.BKG_NO_SPLIT" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("'0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("'1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append(",A.EXE_ISS_FLG" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK" ).append("\n"); 
		query.append(",A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",A.MTY_BKG_NO" ).append("\n"); 
		query.append("--,A.MTY_BKG_NO_SPLIT" ).append("\n"); 
		query.append(",A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",DECODE(A.PAST_REPO_PLN_FLG, '', 'N', null, 'N', A.PAST_REPO_PLN_FLG)" ).append("\n"); 
		query.append(",CASE WHEN A.PLN_YRWK = E.PLN_YRWK AND A.REF_ID = E.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("E.TRSPCOUNT_P  -- TRSP 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("0            -- TRSP 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append(",CASE WHEN A.PLN_YRWK = E.PLN_YRWK AND A.REF_ID = E.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("E.TRSPCOUNT_D  -- TRSP 존재" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("0            -- TRSP 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append(",CASE WHEN A.PLN_YRWK = G.PLN_YRWK AND A.REF_ID = G.REF_ID" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("G.TRSPCOUNT_A" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("0" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("--                	    ,CASE WHEN A.PLN_YRWK = G.PLN_YRWK AND A.REF_ID = G.REF_ID AND G.SO_STATUS='Y' -- WATER에만 사용됨" ).append("\n"); 
		query.append("--                	    							 THEN 1   						-- 삭제가능 상태 'Y'" ).append("\n"); 
		query.append("--                	   								 ELSE 0               			-- 삭제불가 상태 'N'" ).append("\n"); 
		query.append("--                	     							 END" ).append("\n"); 
		query.append("-- W/O Issue ------------------------------------------" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("--			SELECT /*+ PARALLEL(OUTER,4) */" ).append("\n"); 
		query.append("SELECT PLN_YRWK 		PLN_YRWK" ).append("\n"); 
		query.append(",PLN_SEQ" ).append("\n"); 
		query.append(",CO_CD 			COMPANY" ).append("\n"); 
		query.append(",'W/O Issue' 		DIVISION" ).append("\n"); 
		query.append("--        	            ,TRSP_MOD_CD      ITEM" ).append("\n"); 
		query.append(",TRSP_MOD_CD      ITEM" ).append("\n"); 
		query.append(",FM_YD_CD 		FRLOC" ).append("\n"); 
		query.append(",FM_DT 			ETD" ).append("\n"); 
		query.append(",TO_YD_CD 		TOLOC" ).append("\n"); 
		query.append(",TO_DT 			ETA" ).append("\n"); 
		query.append(",VSL_CD||SKD_VOY_NO||SKD_DIR_CD   VVD" ).append("\n"); 
		query.append(",VSL_LANE_CD 	 					LANE" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("--        	            ,'' VVD" ).append("\n"); 
		query.append("--        	            ,'' LANE" ).append("\n"); 
		query.append(",'' PURPOSE" ).append("\n"); 
		query.append(",'' CNTRNO" ).append("\n"); 
		query.append(",'' SOSEND" ).append("\n"); 
		query.append(",'' REPOBKG" ).append("\n"); 
		query.append(",'' REASON" ).append("\n"); 
		query.append(",'' REASONREMARK" ).append("\n"); 
		query.append(",COUNT(CNTR_TPSZ_CD) TOTALVOL" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append("NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', REPO_COST_AMT)),0)" ).append("\n"); 
		query.append("#if($velocityCount < $tpszArr.size())" ).append("\n"); 
		query.append("+" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALCOST" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",COUNT(DECODE(CNTR_TPSZ_CD, '${key}', CNTR_TPSZ_CD))  ${key}VOL" ).append("\n"); 
		query.append(",SUM(DECODE(CNTR_TPSZ_CD,   '${key}', REPO_COST_AMT)) ${key}COST" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("-- TPSZ별 CNTR 갯수" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0 ${key}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(",REF_ID REFNO" ).append("\n"); 
		query.append(",'' BKG_NO" ).append("\n"); 
		query.append("--                ,'' BKG_NO_SPLIT" ).append("\n"); 
		query.append(",REPO_PLN_ID 	    -- HIDDEN" ).append("\n"); 
		query.append(",3 SORTNUM	 	-- HIDDEN" ).append("\n"); 
		query.append(",B.ECC_CD FM_ECC  -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",C.ECC_CD TO_ECC  -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",0 TRSPNO_P" ).append("\n"); 
		query.append(",0 TRSPNO_D" ).append("\n"); 
		query.append(",0 TRSPNO_A" ).append("\n"); 
		query.append("--        	        ,'' AS PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",DECODE(PAST_REPO_PLN_FLG, '', 'N', null, 'N', PAST_REPO_PLN_FLG) AS PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- 특정 PLAN에 포함된 EXECUTE의 TYPESIZE별 VOL 전체" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0 ${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE VOL별 FEEDBACK 정보" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0   ${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",0   ${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- TYPESIZE UNIT COST, FROM COST, TO COST" ).append("\n"); 
		query.append("#foreach(${key} in ${tpszArr})" ).append("\n"); 
		query.append(",0   ${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",0   ${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",0   ${key}TOCOST   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_REPO_EXE_SO_IF OUTER," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT B," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("SUBSTR(OUTER.FM_YD_CD, 0, 5) = B.SCC_CD" ).append("\n"); 
		query.append("AND   SUBSTR(OUTER.TO_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("AND   OUTER.WO_EXE_FLG = 'Y'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND   EXISTS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("'X'" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_INLND_TRSP_EXE_PLN A," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT B," ).append("\n"); 
		query.append("MDM_EQ_ORZ_CHT C," ).append("\n"); 
		query.append("EQR_INLND_TRSP_PLN	D," ).append("\n"); 
		query.append("EQR_INLND_TRSP_PLN_QTY Q" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("SUBSTR(A.FM_YD_CD, 0, 5) = B.SCC_CD" ).append("\n"); 
		query.append("AND	SUBSTR(A.TO_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("AND	A.REPO_PLN_ID = D.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A.PLN_YRWK    = D.PLN_YRWK" ).append("\n"); 
		query.append("AND A.TRSP_MOD_CD = D.TRSP_MOD_CD" ).append("\n"); 
		query.append("AND B.ECC_CD      = D.FM_ECC_CD" ).append("\n"); 
		query.append("AND	C.ECC_CD      = D.TO_ECC_CD" ).append("\n"); 
		query.append("AND	A.REPO_PLN_ID = @[repoPlanID]" ).append("\n"); 
		query.append("AND D.REPO_PLN_ID = Q.REPO_PLN_ID" ).append("\n"); 
		query.append("AND D.PLN_YRWK = Q.PLN_YRWK" ).append("\n"); 
		query.append("AND D.PLN_SEQ = Q.PLN_SEQ" ).append("\n"); 
		query.append("#if(${fmtoat} == '1')    -- FROM TO" ).append("\n"); 
		query.append("AND   A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND B.SCC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND C.SCC_CD IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("-- CSR No :N200906040080 로 의거 추가" ).append("\n"); 
		query.append("-- 내역 :  Fm ETD , To ETA 로직 추가" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '3')    -- Fm ETD" ).append("\n"); 
		query.append("AND  TO_CHAR(A.FM_ETD_DT ,'YYYYMMDD') BETWEEN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_ST_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_END_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND B.SCC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND C.SCC_CD IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif(${fmtoat} == '4')    -- To ETA" ).append("\n"); 
		query.append("AND  TO_CHAR(A.TO_ETA_DT ,'YYYYMMDD') BETWEEN (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_ST_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[fromWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("WK_END_DT" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("PLN_YR||PLN_WK = @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${fromStatus} != '')" ).append("\n"); 
		query.append("AND B.SCC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${toStatus} != '')" ).append("\n"); 
		query.append("AND C.SCC_CD IN ( ${toECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("--          CSR No :N200906040080 끝" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else                     -- AT" ).append("\n"); 
		query.append("#if(${atStatus} != '')" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND B.SCC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append("AND C.SCC_CD IN ( ${fromECCStrArr} )" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("A.PLN_YRWK BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE" ).append("\n"); 
		query.append("TO_CHAR(A.TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT" ).append("\n"); 
		query.append(") BETWEEN @[fromWeek] AND @[toWeek]" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if(${userECC} != '')" ).append("\n"); 
		query.append("AND B.ECC_CD IN ( ${userECCStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpsz} != '' && ${tpsztype} != '')" ).append("\n"); 
		query.append("AND Q.CNTR_TPSZ_CD IN ( ${tpszStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemname} != '')" ).append("\n"); 
		query.append("AND D.TRSP_MOD_CD IN ( ${itemnameStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reason} != '')" ).append("\n"); 
		query.append("AND A.REPO_PLN_FB_RSN_CD IN ( ${reasonStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${sosend} != '')" ).append("\n"); 
		query.append("AND A.EXE_ISS_FLG = @[sosend]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${lane} != '')" ).append("\n"); 
		query.append("AND A.VSL_LANE_CD IN ( ${laneStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvd} != '')" ).append("\n"); 
		query.append("AND A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdStrArr} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND A.REPO_MTY_BKG_FLG = @[mty]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("AND	A.REPO_PLN_ID	= OUTER.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	A.PLN_YRWK		= OUTER.PLN_YRWK" ).append("\n"); 
		query.append("AND	A.PLN_SEQ		= OUTER.PLN_SEQ" ).append("\n"); 
		query.append("AND	A.REF_ID		= OUTER.REF_ID" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("PLN_YRWK" ).append("\n"); 
		query.append(",PLN_SEQ" ).append("\n"); 
		query.append(",CO_CD" ).append("\n"); 
		query.append(",TRSP_MOD_CD" ).append("\n"); 
		query.append("--        	        ,B.VNDR_ABBR_NM" ).append("\n"); 
		query.append(",FM_YD_CD" ).append("\n"); 
		query.append(",FM_DT" ).append("\n"); 
		query.append(",TO_YD_CD" ).append("\n"); 
		query.append(",TO_DT" ).append("\n"); 
		query.append(",VSL_CD||SKD_VOY_NO||SKD_DIR_CD" ).append("\n"); 
		query.append(",VSL_LANE_CD" ).append("\n"); 
		query.append(",REF_ID" ).append("\n"); 
		query.append(",REPO_PLN_ID" ).append("\n"); 
		query.append(",B.ECC_CD -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",C.ECC_CD -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",DECODE(PAST_REPO_PLN_FLG, '', 'N', null, 'N', PAST_REPO_PLN_FLG)" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") A," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT 1 NUM, '' NAME FROM DUAL" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("SELECT 2 NUM, 'TOTAL' NAME FROM DUAL" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("SELECT 3 NUM, 'GRAND TOTAL' NAME FROM DUAL" ).append("\n"); 
		query.append(") B" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PLN_SEQ , 2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')" ).append("\n"); 
		query.append(",A.DIVISION" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL)" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETA  ,  2, NULL, 3, NULL)" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.CNTRNO,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.SOSEND,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REPOBKG,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.BKG_NO,  2, '', 3, '')" ).append("\n"); 
		query.append("--        ,DECODE(B.NUM, 1, A.BKG_NO_SPLIT,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REPO_PLN_ID,  2, '', 3, '')  -- HIDDEN" ).append("\n"); 
		query.append(",A.SORTNUM    	    -- HIDDEN" ).append("\n"); 
		query.append(",B.NUM           		-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FM_ECC,  2, '', 3, '') -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TO_ECC,  2, '', 3, '') -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TRSPNO_P,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TRSPNO_D,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TRSPNO_A,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PAST_REPO_PLN_FLG,  2, '', 3, '')" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("GROUP BY" ).append("\n"); 
		query.append("PLN_YRWK" ).append("\n"); 
		query.append(",PLN_SEQ" ).append("\n"); 
		query.append(",COMPANY" ).append("\n"); 
		query.append(",DIVISION" ).append("\n"); 
		query.append(",ITEM" ).append("\n"); 
		query.append(",FRLOC" ).append("\n"); 
		query.append(",ETD" ).append("\n"); 
		query.append(",TOLOC" ).append("\n"); 
		query.append(",ETA" ).append("\n"); 
		query.append(",VVD" ).append("\n"); 
		query.append(",LANE" ).append("\n"); 
		query.append(",PURPOSE" ).append("\n"); 
		query.append(",CNTRNO" ).append("\n"); 
		query.append(",SOSEND" ).append("\n"); 
		query.append(",DECODE(ITEM, 'W', REPOBKG, '')" ).append("\n"); 
		query.append(",REASON" ).append("\n"); 
		query.append(",REASONREMARK" ).append("\n"); 
		query.append(",REF_ID" ).append("\n"); 
		query.append(",BKG_NO" ).append("\n"); 
		query.append("--    ,BKG_NO_SPLIT" ).append("\n"); 
		query.append(",REPO_PLN_ID -- HIDDEN" ).append("\n"); 
		query.append(",SORTNUM     -- HIDDEN  PLAN(1), Execution(2), SO(3)를 구분" ).append("\n"); 
		query.append(",NUM         -- HIDDEN  NORMAL(1), SUB TOTAL(2), GRAND TOTAL(3)" ).append("\n"); 
		query.append(",FM_ECC||TO_ECC" ).append("\n"); 
		query.append(",FM_ECC" ).append("\n"); 
		query.append(",TO_ECC" ).append("\n"); 
		query.append(",TRSPNO_P     -- TRSP CD COUNT" ).append("\n"); 
		query.append(",TRSPNO_D     -- TRSP CD COUNT" ).append("\n"); 
		query.append(",TRSPNO_A     -- TRSP CD COUNT" ).append("\n"); 
		query.append(",PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("ORDER BY" ).append("\n"); 
		query.append("1" ).append("\n"); 
		query.append(", ITEM" ).append("\n"); 
		query.append(", SORT1" ).append("\n"); 
		query.append(", PAST_REPO_PLN_FLG||REF_ID||SORTNUM" ).append("\n"); 

	}
}