<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChargeCalculationReportDBDAOSummaryReportByCustomerVORSQL">
			<desc><![CDATA[Customer별 발생 Charge정보의 Summary조회]]></desc>
			<sql><![CDATA[
WITH RSLT AS ( 
SELECT    RFA_NO 
        , SC_NO 
        , POR_CD 
        , POL_CD 
        , POD_CD 
        , DEL_CD 
        , TRF_CD 
        , DMDT_OFC
        , CHG_SEQ 
        , TO_MVMT_DT 
        , FM_MVMT_DT 
        , DMDT_CHG_STS_CD 
        , FX_FT_OVR_DYS 
        , BZ_FT_DYS                                                       -- Add 2013.06.13 Basic F/T : ?대떦 Coverage??Basic F/T 
        , CASE WHEN SUBSTR( EXC_FT_DYS, 1, 1) = 'Y' THEN  
                -- Case : Additional Free Time 
                BZ_FT_DYS + NVL( TO_NUMBER(SUBSTR( EXC_FT_DYS, 2 )), 0) 
            ELSE 
                -- Case : Total Free Time 
                NVL( TO_NUMBER(SUBSTR( EXC_FT_DYS, 2 )), 0 ) 
            END         AS  EX_FT_DYS                                     -- Add 2013.06.13  Extended F/T : ?대떦 Coverage???뱀씤??Extra F/T 
        , CASE WHEN SIGN( TO_MVMT_DT - FT_END_DT ) IN (1, 0) THEN 
               -- To MVMT DT媛?F/T End DT蹂대떎 ?섏쨷??寃쎌슦 
                    FT_END_DT - FM_MVMT_DT + 1 
               ELSE 
               -- To MVMT DT媛?F/T End DT蹂대떎 ?섏쨷??寃쎌슦 
                    TO_MVMT_DT - FM_MVMT_DT + 1 
               END      AS USED_FT                                        -- Add 2013.06.13  Used F/T : ?대떦 Coverage???뱀씤??Used F/T 
        , ROUND( NVL(TO_MVMT_DT, SYSDATE) - FM_MVMT_DT) + 1 AS STYG_DYS   -- Add 2013.06.13 Staying Days Used F/T : ?ъ슜??F/T ?쇱닔 
        , BZC_TRF_CURR_CD 
        , ORG_CHG_AMT 
        , CMDT_EXPT_AMT 
        , SC_RFA_EXPT_AMT 
        , AFT_EXPT_DC_AMT 
        , BIL_AMT 
        , DMDT_INV_NO 
        , CNTR_NO 
        , CVR 
FROM    ( 
        SELECT  T1.RFA_NO        RFA_NO, 
                T1.SC_NO         SC_NO, 
                T1.POR_CD        POR_CD, 
                T1.POL_CD        POL_CD, 
                T1.POD_CD        POD_CD, 
                T1.DEL_CD        DEL_CD, 
                T2.DMDT_TRF_CD   TRF_CD, 
                T2.OFC_CD        DMDT_OFC, 
                T2.CHG_SEQ, 
                T2.TO_MVMT_DT, 
                T2.FM_MVMT_DT, 
                T2.FT_END_DT, 
                T2.DMDT_CHG_STS_CD, 
                ( 
                SELECT  FT_DYS 
                FROM    DMT_TRF_FREE_TM S 
                WHERE   S.SYS_AREA_GRP_ID 	= T2.SYS_AREA_GRP_ID 
                AND     S.DMDT_TRF_CD 		= T2.DMDT_TRF_CD 
                AND     S.TRF_SEQ 			= T2.BZC_TRF_SEQ 
                AND     S.DMDT_DE_TERM_CD   = NVL(T2.BZC_DMDT_DE_TERM_CD, 'N') 
                AND     S.TRF_GRP_SEQ 		= T2.BZC_TRF_GRP_SEQ 
                AND     (   (    S.FT_FM_QTY <= T1.BKG_CNTR_QTY  AND S.FT_TO_QTY = 0) 
                     OR (    S.FT_FM_QTY <= T1.BKG_CNTR_QTY  AND S.FT_TO_QTY IS NULL) 
                     OR (    S.FT_FM_QTY <= T1.BKG_CNTR_QTY  AND S.FT_TO_QTY >= T1.BKG_CNTR_QTY) 
                    ) 
                )       AS BZ_FT_DYS, 
                CASE WHEN T2.SC_RFA_EXPT_APLY_DT IS NOT NULL THEN 
                ( 
                    CASE WHEN  T2.RFA_EXPT_DAR_NO IS NOT NULL THEN 
                        ( 
                        SELECT S1.FT_USE_FLG || DECODE(S1.FT_USE_FLG, 'Y', S1.ADD_DYS, S1.TTL_DYS) 
                        FROM   DMT_RFA_EXPT_TRF_DTL  S1, 
                               DMT_RFA_EXPT_TRF      S2 
                        WHERE  1=1 
                        AND    S1.RFA_EXPT_DAR_NO     = T2.RFA_EXPT_DAR_NO 
                        AND    S1.RFA_EXPT_MAPG_SEQ   = T2.RFA_EXPT_MAPG_SEQ 
                        AND    S1.RFA_EXPT_VER_SEQ    = T2.RFA_EXPT_VER_SEQ 
                        AND    S1.RFA_RQST_DTL_SEQ    = T2.RFA_RQST_DTL_SEQ 
                        AND    S1.RFA_EXPT_DAR_NO     = S2.RFA_EXPT_DAR_NO 
                        AND    S1.RFA_EXPT_MAPG_SEQ   = S2.RFA_EXPT_MAPG_SEQ 
                        AND    S1.RFA_EXPT_VER_SEQ    = S2.RFA_EXPT_VER_SEQ 
                        AND    ROWNUM                 = 1 
                        ) 
                    ELSE 
                        ( 
                        SELECT   
                                D.FT_ADD_FLG || 
                                CASE WHEN D.FT_ADD_FLG = 'Y' THEN 
                                        D.FT_ADD_DYS 
                                ELSE 
                                  CASE WHEN NVL(D.FT_ADD_FLG, 'N') = 'N' AND NVL(D.FT_ADJ_FLG, 'N') = 'N' THEN 
                                       D.FT_ADD_DYS 
                                       WHEN D.FT_ADD_FLG = 'N' AND D.FT_ADJ_FLG = 'Y' THEN 
                                       F.FT_DYS 
                                  END 
                                END 
                        FROM    DMT_SC_EXPT_GRP     D, 
                                DMT_SC_EXPT_FREE_TM F, 
                                PRI_SP_HDR          P 
                        WHERE   D.PROP_NO          =	P.PROP_NO 
                        AND     D.SC_EXPT_VER_SEQ  =	T2.SC_EXPT_VER_SEQ 
                        AND     D.SC_EXPT_GRP_SEQ  =	T2.SC_EXPT_GRP_SEQ 
                        AND     P.SC_NO            =	T2.SC_NO 
                        AND     D.PROP_NO          =	F.PROP_NO        (+) 
                        AND     D.SC_EXPT_VER_SEQ  =	F.SC_EXPT_VER_SEQ(+) 
                        AND     D.SC_EXPT_GRP_SEQ  =	F.SC_EXPT_GRP_SEQ(+) 
                        AND     F.FT_SEQ      (+)  =	1 
                        ) 
                    END 
                ) 
                ELSE 
                    NULL 
                END   AS EXC_FT_DYS, 
                T2.FX_FT_OVR_DYS, 
                T2.BZC_TRF_CURR_CD, 
                T2.ORG_CHG_AMT, 
                T2.CMDT_EXPT_AMT, 
                T2.SC_RFA_EXPT_AMT, 
                T2.AFT_EXPT_DC_AMT, 
                T2.BIL_AMT, 
                T2.DMDT_INV_NO, 
                T2.CNTR_NO, 
                CASE WHEN T2.DMDT_TRF_CD = 'DMOF' OR T2.DMDT_TRF_CD = 'DMIF' THEN 
                          SUBSTR (T2.FM_MVMT_YD_CD, 1, 5) 
                     WHEN T2.DMDT_TRF_CD = 'DTIC' OR T2.DMDT_TRF_CD = 'CTIC' THEN 
                          T1.DEL_CD 
                     WHEN T2.DMDT_TRF_CD = 'DTOC' OR T2.DMDT_TRF_CD = 'CTOC' THEN 
                          T1.POR_CD 
                END AS CVR 
        FROM      DMT_CHG_BKG_CNTR T1 
                , DMT_CHG_CALC     T2 
#if (${opt_date} == 'REV_MON') 
                , MAS_MON_VVD      T3 
                , MAS_RGST_BKG     T4 
        WHERE   1=1 
        AND     T1.BKG_NO             = T4.BKG_NO        
        AND     T3.TRD_CD             = T4.TRD_CD 
        AND     T3.RLANE_CD           = T4.RLANE_CD 
        AND     T3.IOC_CD             = T4.IOC_CD 
        AND     T3.VSL_CD             = T4.VSL_CD 
        AND     T3.SKD_VOY_NO         = T4.SKD_VOY_NO 
        AND     T3.DIR_CD             = T4.DIR_CD 
        AND     NVL(T3.DELT_FLG, 'N') = 'N' 
        AND     T4.BKG_STS_CD        IN ('F', 'S', 'W') 
        AND     T4.BKG_CGO_TP_CD     <> 'P' 
        AND     T4.BL_NO_TP          IN ('M', '0') 
#else 
        WHERE   1=1 
#end 
 
#if  (${opt_date} == 'MVMT_DT') 
        AND     T2.TO_MVMT_DT BETWEEN TO_DATE(@[start_dt], 'YYYYMMDD') 
			                  AND     TO_DATE(@[end_dt], 'YYYYMMDD') + .99999 
#elseif (${opt_date} == 'APP_DT') 
        AND     T2.BZC_TRF_APLY_DT BETWEEN TO_DATE(@[fm_aply_dt], 'YYYYMMDD') 
			                       AND     TO_DATE(@[to_aply_dt], 'YYYYMMDD') + .99999 
#elseif (${opt_date} == 'REV_MON') 
      --  AND     T3.COST_YRMON        = [cost_yrmon] 
        AND     T3.COST_YRMON BETWEEN '201005' AND '201104' 
#end 
 
#if (${ofc_flg} == 'O') 
        	AND	T2.OFC_CD	IN ( 
        		#foreach( $an_ofc in ${ofc_cd_list} ) 
        			#if($velocityCount < $ofc_cd_list.size()) '$an_ofc', #else '$an_ofc' #end 
        		#end 
        		) 
#elseif (${ofc_flg} == 'R' && ${ofc_cd} != 'All') 
        AND	T2.OFC_RHQ_CD = @[ofc_cd] 
#end 
 
        AND T2.DMDT_TRF_CD	IN ( 
        				#foreach( $trf_cd in ${trf_cd_list} ) 
        					#if($velocityCount < $trf_cd_list.size()) '$trf_cd', #else '$trf_cd' #end 
        				#end 
        				) 
        AND T2.DMDT_CHG_STS_CD	IN ('F', 'C', 'I', 'N') 
        AND T2.SYS_AREA_GRP_ID	= T1.SYS_AREA_GRP_ID 
        AND T2.CNTR_NO			= T1.CNTR_NO 
        AND T2.CNTR_CYC_NO		= T1.CNTR_CYC_NO 
        AND	T2.DMDT_CHG_LOC_DIV_CD <> 'SZP'				-- 2010/03/18 異붽? 
        AND	-- 2010/03/25 異붽? 
            ( 
            (T2.DUL_TP_EXPT_FLG = 'Y' AND SUBSTR(T2.DMDT_TRF_CD, 1, 1) = 'C') 
            OR 
            (T2.DUL_TP_EXPT_FLG = 'N') 
            ) 
        ) T01 
WHERE   1=1 
) 
 
SELECT 
	X.ORD, 
	X.SC_NO, 
	X.RFA_NO, 
	X.SC_NO || X.RFA_NO AS SC_RFA_NO, 
	X.CUST_CD, 
	X.CUST_NAME AS CUST_NM, 
	X.CTRT_OFC, 
	X.DMDT_OFC, 
	X.TRF_CD, 
	X.CVR AS CVR_CD, 
	X.POR_CD, 
	X.POL_CD, 
	X.POD_CD, 
	X.DEL_CD, 
	SUM(ROUND(X.TO_MVMT_DT - X.FM_MVMT_DT, 0) + 1) TTL_STY, 
	SUM(DECODE(X.CHG_SEQ, 1, 1, 0)) TTL_CNTR, 
    CASE 
        WHEN COUNT(X.CNTR_NO) = 0 THEN 0 
        ELSE ROUND( SUM(ROUND(X.TO_MVMT_DT - X.FM_MVMT_DT, 0) + 1) / COUNT(X.CNTR_NO), 0)  
    END AVG_STY,     
    SUM(DECODE(X.DMDT_CHG_STS_CD, 'F', X.FX_FT_OVR_DYS, 'C', X.FX_FT_OVR_DYS, 'I', X.FX_FT_OVR_DYS, 0)) TTL_OVER,     
	SUM(DECODE(X.DMDT_CHG_STS_CD, 'F', DECODE(X.CHG_SEQ, 1, 1, 0), 'C', DECODE(X.CHG_SEQ, 1, 1, 0), 'I', DECODE(X.CHG_SEQ, 1, 1, 0), 0)) OVER_CNTR, 
    CASE 
        WHEN SUM(DECODE(X.DMDT_CHG_STS_CD, 'F', 1, 'C', 1, 'I', 1, 0)) = 0 THEN 0 
        ELSE ROUND(SUM(DECODE(X.DMDT_CHG_STS_CD, 'F', X.FX_FT_OVR_DYS, 'C', X.FX_FT_OVR_DYS, 'I', X.FX_FT_OVR_DYS, 0)) 
                 / SUM(DECODE(X.DMDT_CHG_STS_CD, 'F', 1, 'C', 1, 'I', 1, 0)), 0)  
    END AVG_OVER, 
    BZ_FT_DYS ,  
    EX_FT_DYS ,  
    ROUND ( AVG( USED_FT  ) ) USED_FT,  
    ROUND ( AVG( STYG_DYS ) ) STYG_DYS, 
	DECODE( @[curr_flg], 'U', 'USD', X.BZC_TRF_CURR_CD ) CURR_CD, 
	SUM( DECODE( NVL(X.ORG_CHG_AMT, 0), 0, 0, DECODE(X.CHG_SEQ, 1, 1, 0) ) ) INCUR_CNTR, 
	ROUND ( SUM ( DECODE( @[curr_flg], 'U', X.ORG_CHG_AMT  / F.USD_LOCL_XCH_RT, X.ORG_CHG_AMT  ) ), 2 ) INCUR_AMT, 
	SUM( DECODE( NVL(X.CMDT_EXPT_AMT, 0), 0, 0, DECODE(X.CHG_SEQ, 1, 1, 0) ) ) CMDT_CNTR, 
	ROUND ( SUM ( DECODE( @[curr_flg], 'U', NVL(X.CMDT_EXPT_AMT, 0) / F.USD_LOCL_XCH_RT, NVL(X.CMDT_EXPT_AMT, 0) ) ), 2 ) CMDT_AMT, 
	SUM( DECODE( NVL(X.SC_RFA_EXPT_AMT, 0), 0, 0, DECODE(X.CHG_SEQ, 1, 1, 0) ) ) EXPT_CNTR, 
	ROUND ( SUM ( DECODE( @[curr_flg], 'U', X.SC_RFA_EXPT_AMT / F.USD_LOCL_XCH_RT, X.SC_RFA_EXPT_AMT) ), 2 ) EXPT_AMT, 
	SUM( DECODE( NVL(X.AFT_EXPT_DC_AMT, 0), 0, 0, DECODE(X.CHG_SEQ, 1, 1, 0) ) ) DC_CNTR, 
	ROUND ( SUM ( DECODE( @[curr_flg], 'U', X.AFT_EXPT_DC_AMT  / F.USD_LOCL_XCH_RT, X.AFT_EXPT_DC_AMT  ) ), 2 ) DC_AMT, 
	/* BILLABLE */ 
	SUM( DECODE( NVL(X.BIL_AMT, 0), 0, 0, DECODE(X.CHG_SEQ, 1, 1, 0) ) ) BILL_CNTR, 
	ROUND( SUM( DECODE( @[curr_flg], 'U', X.BIL_AMT / F.USD_LOCL_XCH_RT, X.BIL_AMT ) ), 2 ) BILL_AMT, 
	/* INVOICE */ 
	SUM( DECODE( V.DMDT_INV_STS_CD, 'I', DECODE(X.CHG_SEQ, 1, 1, 0), 0 ) ) INV_CNTR, 
	ROUND( SUM( DECODE( V.DMDT_INV_STS_CD, 'I', DECODE( @[curr_flg], 'U', X.BIL_AMT / F.USD_LOCL_XCH_RT, X.BIL_AMT), 0) ), 2 ) INV_AMT, 

  SUM( DECODE( V.DMDT_AR_IF_CD, 'Y', DECODE(X.CHG_SEQ, 1, 1, 0), 0 ) ) AR_IF_CNTR,
  ROUND( SUM( DECODE (V.DMDT_AR_IF_CD, 'Y', DECODE( @[curr_flg], 'U', X.BIL_AMT / F.USD_LOCL_XCH_RT, X.BIL_AMT ), 0) ), 2 ) AR_IF_AMT,
  SUM( DECODE( V.DMDT_AR_IF_CD, 'Y', DECODE(X.CHG_SEQ, 1, ( SELECT CASE WHEN NVL(SUM(INV_PAY_AMT),0) = 0 THEN 0
                                                                        ELSE 1 END
                                                              FROM DMT_INV_OTS_PAY_RCV
                                                             WHERE DMDT_INV_NO = V.DMDT_INV_NO AND DMDT_INV_PAY_TP_CD = 'M' )
                                                      , 0)
                                   , 0 )
     ) COLL_CNTR,   
  ROUND( SUM( DECODE (V.DMDT_AR_IF_CD, 'Y', DECODE( @[curr_flg], 'U', NVL(( SELECT SUM(A.INV_PAY_AMT/B.INV_XCH_RT/B.BKG_CNTR_QTY)
                                                                  FROM DMT_INV_OTS_PAY_RCV A, DMT_INV_MN B
                                                                  WHERE A.DMDT_INV_NO = V.DMDT_INV_NO
                                                                    AND A.DMDT_INV_NO = B.DMDT_INV_NO
                                                                    AND DMDT_INV_PAY_TP_CD = 'M' ),0) / F.USD_LOCL_XCH_RT ,
                                                               NVL(( SELECT SUM(A.INV_PAY_AMT/B.INV_XCH_RT/B.BKG_CNTR_QTY)
                                                                  FROM DMT_INV_OTS_PAY_RCV A, DMT_INV_MN B
                                                                  WHERE A.DMDT_INV_NO = V.DMDT_INV_NO
                                                                    AND A.DMDT_INV_NO = B.DMDT_INV_NO
                                                                    AND DMDT_INV_PAY_TP_CD = 'M' ),0) ), 0) ), 2 ) COLL_AMT
FROM    DMT_INV_MN		V, 
		GL_MON_XCH_RT	F, 
		( 
		SELECT	2 AS ORD, 
				CTRT.RFA_NO, 
				'' AS SC_NO, 
				CTRT.CTRT_CUST_CNT_CD || LPAD(CTRT.CTRT_CUST_SEQ, 6, '0') AS CUST_CD, 
				(	SELECT  MC.CUST_LGL_ENG_NM 
					FROM    MDM_CUSTOMER MC 
					WHERE   MC.CUST_CNT_CD  = CTRT.CTRT_CUST_CNT_CD 
					AND     MC.CUST_SEQ     = CTRT.CTRT_CUST_SEQ 
				) AS CUST_NAME, 
				CTRT.PROP_OFC_CD CTRT_OFC, 
				R.DMDT_OFC, 
				R.TRF_CD, 
				R.POR_CD POR_CD, 
				R.POL_CD POL_CD, 
				R.POD_CD POD_CD, 
				R.DEL_CD DEL_CD, 
				R.CHG_SEQ, 
				R.TO_MVMT_DT, 
				R.FM_MVMT_DT, 
				R.DMDT_CHG_STS_CD, 
				R.FX_FT_OVR_DYS, 
				R.BZC_TRF_CURR_CD, 
				R.ORG_CHG_AMT, 
				R.CMDT_EXPT_AMT, 
				R.SC_RFA_EXPT_AMT, 
				R.AFT_EXPT_DC_AMT, 
				R.BIL_AMT, 
				R.DMDT_INV_NO, 
				R.CNTR_NO, 
				R.CVR, 
				R.BZ_FT_DYS ,  
				R.EX_FT_DYS ,  
				R.USED_FT   ,  
				R.STYG_DYS  
		FROM ( 
            SELECT	RFH.RFA_NO,  
            		CTRT_CUST_CNT_CD,  
            		CTRT_CUST_SEQ,  
            		PROP_OFC_CD 
              FROM	PRI_RP_HDR RFH,  
              		PRI_RP_MN RFA 
             WHERE RFA.PROP_NO = RFH.PROP_NO 
               AND RFA.AMDT_SEQ = (SELECT MAX (AMDT_SEQ) 
                                     FROM PRI_RP_MN 
                                    WHERE PROP_NO = RFH.PROP_NO 
                                      AND ROWNUM <= 1) 
			 
			#if (${sch_flg} == 'RFA' && ${sc_rfa_no} != '')  
				AND RFH.RFA_NO	IN ( 
									#foreach( $rfa_cd in ${sc_rfa_cd_list} ) 
										#if($velocityCount < $sc_rfa_cd_list.size()) '$rfa_cd', #else '$rfa_cd' #end 
									#end 
									) 
			#elseif (${sch_flg} == 'SC' && ${sc_rfa_no} != '')
				AND 1=2
			#end
			#if (${ctrt_ofc} != '')
				AND RFA.PROP_OFC_CD   = @[ctrt_ofc] 
			#end
			#if (${cust_flg} == 'CUST' && ${cust_cd} != '')
				AND RFA.CTRT_CUST_CNT_CD = SUBSTR(@[cust_cd], 1, 2) 
				AND RFA.CTRT_CUST_SEQ	= SUBSTR(@[cust_cd], 3)    
			#end 
           ) CTRT, 
           RSLT R 
 
		WHERE 1=1 
		-- DB.RFA_NO IS NOT NULL 
		AND R.RFA_NO = CTRT.RFA_NO 
 
		UNION ALL 
 
    	SELECT	1 AS ORD, 
				'' AS RFA_NO, 
				CTRT.SC_NO, 
				CTRT.CTRT_CUST_CNT_CD || LPAD (CTRT.CTRT_CUST_SEQ, 6, '0') AS CUST_CD, 
				CTRT.CUST_NAME AS CUST_NAME, 
				CTRT.PROP_OFC_CD AS CTRT_OFC, 
				R.DMDT_OFC, 
				R.TRF_CD, 
				R.POR_CD POR_CD, 
				R.POL_CD POL_CD, 
				R.POD_CD POD_CD, 
				R.DEL_CD DEL_CD, 
				R.CHG_SEQ, 
				R.TO_MVMT_DT, 
				R.FM_MVMT_DT, 
				R.DMDT_CHG_STS_CD, 
				R.FX_FT_OVR_DYS, 
				R.BZC_TRF_CURR_CD, 
				R.ORG_CHG_AMT, 
				R.CMDT_EXPT_AMT, 
				R.SC_RFA_EXPT_AMT, 
				R.AFT_EXPT_DC_AMT, 
				R.BIL_AMT, 
				R.DMDT_INV_NO, 
				R.CNTR_NO, 
				R.CVR, 
				R.BZ_FT_DYS ,  
				R.EX_FT_DYS ,  
				R.USED_FT   ,  
				R.STYG_DYS  
		FROM ( 
			SELECT	SPH.SC_NO,  
					SCP.CUST_CNT_CD AS CTRT_CUST_CNT_CD, 
					SCP.CUST_SEQ AS CTRT_CUST_SEQ,  
					SC.PROP_OFC_CD,  
					SCP.CTRT_PTY_NM CUST_NAME 
              FROM	PRI_SP_HDR SPH,  
              		PRI_SP_MN SC,  
              		PRI_SP_CTRT_PTY SCP 
             WHERE	SPH.PROP_NO = SC.PROP_NO 
               AND	SCP.PROP_NO = SPH.PROP_NO 
               AND	SC.AMDT_SEQ = SCP.AMDT_SEQ 
               AND	SCP.PRC_CTRT_PTY_TP_CD = 'C' 
               AND	SC.AMDT_SEQ = (	SELECT MAX (AMDT_SEQ) 
                                      FROM PRI_SP_MN 
                                     WHERE PROP_NO = SPH.PROP_NO 
                                       AND ROWNUM <= 1) 
 
				#if (${sch_flg} == 'SC' && ${sc_rfa_no} != '')  
					AND SPH.SC_NO	IN ( 
									#foreach( $sc_cd in ${sc_rfa_cd_list} ) 
										#if($velocityCount < $sc_rfa_cd_list.size()) '$sc_cd', #else '$sc_cd' #end 
									#end 
									) 
				#elseif (${sch_flg} == 'RFA' && ${sc_rfa_no} != '')
					AND 1=2
				#end
				#if (${ctrt_ofc} != '')
					AND SC.PROP_OFC_CD	= @[ctrt_ofc]	 
				#end
				#if (${cust_flg} == 'CUST' && ${cust_cd} != '') 
               		AND SCP.CUST_CNT_CD = SUBSTR(@[cust_cd], 1, 2) 
               		AND SCP.CUST_SEQ	= SUBSTR(@[cust_cd], 3) 
				#end 
           ) CTRT, 
            RSLT R 
 
     WHERE 1=1 
     	-- DB.SC_NO IS NOT NULL 
       AND R.SC_NO = CTRT.SC_NO 
) X 
 
WHERE	X.DMDT_INV_NO			= V.DMDT_INV_NO(+) 
AND		V.DMDT_INV_STS_CD(+)	= 'I'     /* IF 'Y' IS CANCEL AMT */ 
AND (    
        (X.DMDT_INV_NO IS  NULL) 
        OR 
        (	X.DMDT_INV_NO IS NOT NULL 
        AND V.DMDT_AR_IF_CD	<>	'H' 
        )     	/* HOLD EXCEPTION   */ 
    ) 
AND  F.ACCT_XCH_RT_YRMON	=	TO_CHAR(X.TO_MVMT_DT,'YYYYMM') 
AND  F.ACCT_XCH_RT_LVL		=	'1' 
AND  F.CURR_CD				=	X.BZC_TRF_CURR_CD 
 
#if (${cvr_cd} != '')	 
	##${cvr_cd} 
	#if ($cvr_cd.length() == 2) 
		AND	SUBSTR(X.CVR, 1, 2) = @[cvr_cd] 
	#else 
		AND	X.CVR = @[cvr_cd] 
	#end 
#end 
 
#if (${por_cd} != '') 
	##${por_cd} 
	#if ($por_cd.length() == 2) 
		AND	SUBSTR(X.POR_CD, 1, 2) = @[por_cd] 
	#else 
		AND	X.POR_CD = @[por_cd] 
	#end 
#end 
 
#if (${pol_cd} != '') 
	##${pol_cd} 
	#if ($pol_cd.length() == 2) 
		AND	SUBSTR(X.POL_CD, 1, 2) = @[pol_cd] 
	#else 
		AND	X.POL_CD = @[pol_cd] 
	#end 
#end 
 
#if (${pod_cd} != '') 
	##${pod_cd} 
	#if ($pod_cd.length() == 2) 
		AND	SUBSTR(X.POD_CD, 1, 2) = @[pod_cd] 
	#else 
		AND	X.POD_CD = @[pod_cd] 
	#end 
#end 
 
#if (${del_cd} != '') 
	##${del_cd} 
	#if ($del_cd.length() == 2) 
		AND	SUBSTR(X.DEL_CD, 1, 2) = @[del_cd] 
	#else 
		AND	X.DEL_CD = @[del_cd] 
	#end 
#end 
GROUP BY	X.ORD, X.SC_NO, X.RFA_NO, X.SC_NO||X.RFA_NO, X.CUST_CD, X.CUST_NAME, X.CTRT_OFC, X.DMDT_OFC, 
			X.TRF_CD, X.CVR, X.POR_CD, X.POL_CD, X.POD_CD, X.DEL_CD, X.BZC_TRF_CURR_CD, BZ_FT_DYS, EX_FT_DYS 
ORDER BY	X.ORD, X.SC_NO, X.RFA_NO, X.CTRT_OFC, X.TRF_CD, X.DMDT_OFC, X.CVR, X.POR_CD, X.POL_CD,X.POD_CD, X.DEL_CD			]]></sql>
			<params>
				<param name="start_dt" type="12" value=" " out="N"/>
				<param name="end_dt" type="12" value="" out="N"/>
				<param name="fm_aply_dt" type="12" value="" out="N"/>
				<param name="to_aply_dt" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="curr_flg" type="12" value="" out="N"/>
				<param name="ctrt_ofc" type="12" value="" out="N"/>
				<param name="cust_cd" type="12" value="" out="N"/>
				<param name="cvr_cd" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
