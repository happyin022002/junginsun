<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChargeCollectionReportDBDAOSearchYearlyCollectionByRHQRSQL">
			<desc><![CDATA[년도, RHQ 별로 Collection 대상을 조회한다.]]></desc>
			<sql><![CDATA[
SELECT COVER.* FROM

( SELECT  OFC_CD, DMDT_TRF_CD
		
		-- Won Ki Eo 추가
		, BZC_TRF_CURR_CD 

        , ROUND(SUM(DECODE(GD, 'G015', INCR_QTY         , 0)), 2) AS G015_INCR_QTY
        , ROUND(SUM(DECODE(GD, 'G015', INCR_AMT / XCH_RT, 0)), 2) AS G015_INCR_AMT
        , ROUND(SUM(DECODE(GD, 'G015', EXPT_QTY         , 0)), 2) AS G015_EXPT_QTY
        , ROUND(SUM(DECODE(GD, 'G015', EXPT_AMT / XCH_RT, 0)), 2) AS G015_EXPT_AMT
        , ROUND(SUM(DECODE(GD, 'G015', DCNT_QTY         , 0)), 2) AS G015_DCNT_QTY
        , ROUND(SUM(DECODE(GD, 'G015', DCNT_AMT / XCH_RT, 0)), 2) AS G015_DCNT_AMT
        , ROUND(SUM(DECODE(GD, 'G015', BILL_QTY         , 0)), 2) AS G015_BILL_QTY
        , ROUND(SUM(DECODE(GD, 'G015', BILL_AMT / XCH_RT, 0)), 2) AS G015_BILL_AMT

        , ROUND(SUM(DECODE(GD, 'G030', INCR_QTY         , 0)), 2) AS G030_INCR_QTY
        , ROUND(SUM(DECODE(GD, 'G030', INCR_AMT / XCH_RT, 0)), 2) AS G030_INCR_AMT
        , ROUND(SUM(DECODE(GD, 'G030', EXPT_QTY         , 0)), 2) AS G030_EXPT_QTY
        , ROUND(SUM(DECODE(GD, 'G030', EXPT_AMT / XCH_RT, 0)), 2) AS G030_EXPT_AMT
        , ROUND(SUM(DECODE(GD, 'G030', DCNT_QTY         , 0)), 2) AS G030_DCNT_QTY
        , ROUND(SUM(DECODE(GD, 'G030', DCNT_AMT / XCH_RT, 0)), 2) AS G030_DCNT_AMT
        , ROUND(SUM(DECODE(GD, 'G030', BILL_QTY         , 0)), 2) AS G030_BILL_QTY
        , ROUND(SUM(DECODE(GD, 'G030', BILL_AMT / XCH_RT, 0)), 2) AS G030_BILL_AMT
        
        , ROUND(SUM(DECODE(GD, 'G060', INCR_QTY         , 0)), 2) AS G060_INCR_QTY
        , ROUND(SUM(DECODE(GD, 'G060', INCR_AMT / XCH_RT, 0)), 2) AS G060_INCR_AMT
        , ROUND(SUM(DECODE(GD, 'G060', EXPT_QTY         , 0)), 2) AS G060_EXPT_QTY
        , ROUND(SUM(DECODE(GD, 'G060', EXPT_AMT / XCH_RT, 0)), 2) AS G060_EXPT_AMT
        , ROUND(SUM(DECODE(GD, 'G060', DCNT_QTY         , 0)), 2) AS G060_DCNT_QTY
        , ROUND(SUM(DECODE(GD, 'G060', DCNT_AMT / XCH_RT, 0)), 2) AS G060_DCNT_AMT
        , ROUND(SUM(DECODE(GD, 'G060', BILL_QTY         , 0)), 2) AS G060_BILL_QTY
        , ROUND(SUM(DECODE(GD, 'G060', BILL_AMT / XCH_RT, 0)), 2) AS G060_BILL_AMT
        
        , ROUND(SUM(DECODE(GD, 'G090', INCR_QTY         , 0)), 2) AS G090_INCR_QTY
        , ROUND(SUM(DECODE(GD, 'G090', INCR_AMT / XCH_RT, 0)), 2) AS G090_INCR_AMT
        , ROUND(SUM(DECODE(GD, 'G090', EXPT_QTY         , 0)), 2) AS G090_EXPT_QTY
        , ROUND(SUM(DECODE(GD, 'G090', EXPT_AMT / XCH_RT, 0)), 2) AS G090_EXPT_AMT
        , ROUND(SUM(DECODE(GD, 'G090', DCNT_QTY         , 0)), 2) AS G090_DCNT_QTY
        , ROUND(SUM(DECODE(GD, 'G090', DCNT_AMT / XCH_RT, 0)), 2) AS G090_DCNT_AMT
        , ROUND(SUM(DECODE(GD, 'G090', BILL_QTY         , 0)), 2) AS G090_BILL_QTY
        , ROUND(SUM(DECODE(GD, 'G090', BILL_AMT / XCH_RT, 0)), 2) AS G090_BILL_AMT
        
        , ROUND(SUM(DECODE(GD, 'G180', INCR_QTY         , 0)), 2) AS G180_INCR_QTY
        , ROUND(SUM(DECODE(GD, 'G180', INCR_AMT / XCH_RT, 0)), 2) AS G180_INCR_AMT
        , ROUND(SUM(DECODE(GD, 'G180', EXPT_QTY         , 0)), 2) AS G180_EXPT_QTY
        , ROUND(SUM(DECODE(GD, 'G180', EXPT_AMT / XCH_RT, 0)), 2) AS G180_EXPT_AMT
        , ROUND(SUM(DECODE(GD, 'G180', DCNT_QTY         , 0)), 2) AS G180_DCNT_QTY
        , ROUND(SUM(DECODE(GD, 'G180', DCNT_AMT / XCH_RT, 0)), 2) AS G180_DCNT_AMT
        , ROUND(SUM(DECODE(GD, 'G180', BILL_QTY         , 0)), 2) AS G180_BILL_QTY
        , ROUND(SUM(DECODE(GD, 'G180', BILL_AMT / XCH_RT, 0)), 2) AS G180_BILL_AMT
        
        , ROUND(SUM(DECODE(GD, 'G181', INCR_QTY         , 0)), 2) AS G181_INCR_QTY
        , ROUND(SUM(DECODE(GD, 'G181', INCR_AMT / XCH_RT, 0)), 2) AS G181_INCR_AMT
        , ROUND(SUM(DECODE(GD, 'G181', EXPT_QTY         , 0)), 2) AS G181_EXPT_QTY
        , ROUND(SUM(DECODE(GD, 'G181', EXPT_AMT / XCH_RT, 0)), 2) AS G181_EXPT_AMT
        , ROUND(SUM(DECODE(GD, 'G181', DCNT_QTY         , 0)), 2) AS G181_DCNT_QTY
        , ROUND(SUM(DECODE(GD, 'G181', DCNT_AMT / XCH_RT, 0)), 2) AS G181_DCNT_AMT
        , ROUND(SUM(DECODE(GD, 'G181', BILL_QTY         , 0)), 2) AS G181_BILL_QTY
        , ROUND(SUM(DECODE(GD, 'G181', BILL_AMT / XCH_RT, 0)), 2) AS G181_BILL_AMT   
FROM    (
        SELECT    
                  #if (${grp_flg} == 'R')
        			 DECODE(C.OFC_RHQ_CD, 'NYCHQ', 'NYCRA', C.OFC_RHQ_CD)
        		  #else
        			 C.OFC_CD
        		  #end
        		  AS OFC_CD
                , C.DMDT_TRF_CD

		-- WONKI_EO추가
		, CASE
		  WHEN  @[curr_flg] = 'U' THEN
			'USD'
		  ELSE
			C.BZC_TRF_CURR_CD 
		  END 
			AS BZC_TRF_CURR_CD

                , C.ORG_CHG_AMT       AS INCR_AMT
                , DECODE(NVL(C.ORG_CHG_AMT,     0), 0, 0, 1) INCR_QTY
                , C.SC_RFA_EXPT_AMT   AS EXPT_AMT
                , DECODE(NVL(C.SC_RFA_EXPT_AMT, 0), 0, 0, 1) EXPT_QTY
                , C.AFT_EXPT_DC_AMT   AS DCNT_AMT
                , DECODE(NVL(C.AFT_EXPT_DC_AMT, 0), 0, 0, 1) DCNT_QTY
                , C.BIL_AMT           AS BILL_AMT
                , DECODE(NVL(C.BIL_AMT,         0), 0, 0, 1) BILL_QTY
                , CASE
                  WHEN  @[curr_flg] = 'U' THEN
                        (
                        SELECT  USD_LOCL_XCH_RT
                        FROM    GL_MON_XCH_RT S
                        WHERE   S.ACCT_XCH_RT_LVL   = '1'
                        AND     S.CURR_CD           = C.BZC_TRF_CURR_CD
                        AND     S.ACCT_XCH_RT_YRMON = TO_CHAR(SYSDATE, 'YYYYMM')
                        ) 
                  ELSE
                        1
                  END               AS XCH_RT
                , CASE 
 				  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.FT_END_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  15 THEN  'G015'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.FT_END_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  30 THEN  'G030'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.FT_END_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  60 THEN  'G060'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.FT_END_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  90 THEN  'G090'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.FT_END_DT, 'YYYYMMDD'), 'YYYYMMDD') <= 180 THEN  'G180'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.FT_END_DT, 'YYYYMMDD'), 'YYYYMMDD') >= 181 THEN  'G181'
                  END AS GD
        FROM    DMT_CHG_CALC        C,
                DMT_CHG_BKG_CNTR	B,
                BKG_BOOKING         T1
        WHERE   1=1
        AND		C.SYS_AREA_GRP_ID	= B.SYS_AREA_GRP_ID
		AND		C.CNTR_NO			= B.CNTR_NO
		AND		C.CNTR_CYC_NO		= B.CNTR_CYC_NO
		AND		B.BKG_NO			= T1.BKG_NO
        AND     C.DMDT_CHG_STS_CD  	= 'L'
        AND     C.DMDT_CHG_LOC_DIV_CD <> 'SZP'
        AND     C.FM_MVMT_DT BETWEEN TO_DATE(@[f_year]||'0101', 'YYYYMMDD') AND TO_DATE(@[f_year]||'1231', 'YYYYMMDD') + 0.99999
        AND     ( (C.DUL_TP_EXPT_FLG = 'Y' AND SUBSTR(C.DMDT_TRF_CD, 1, 1) = 'C')
                  OR (C.DUL_TP_EXPT_FLG = 'N'))
                 
        --DEM/DET Office          
        #if (${ofc_flg} == 'O')
        AND		C.OFC_CD  IN (
                        		#foreach( $an_ofc in ${ofc_cd_list} )
                        			#if($velocityCount < $ofc_cd_list.size()) '$an_ofc', #else '$an_ofc' #end
                        		#end
                            )
        #elseif (${ofc_flg} == 'R' && ${ofc_cd} != 'All')
        AND		C.OFC_RHQ_CD = @[ofc_cd]
        #end
        
        --UC
        #if(${uclm_flg} != 'ALL')          
        AND     NVL(C.UCLM_FLG, 'N') =  @[uclm_flg]
        #end
        
        --TARIFF TYPE
        AND		C.DMDT_TRF_CD  IN	(		/*_________ MULTI TARIFF TYPE	*/
                            			#foreach( $trf_cd in ${trf_cd_list} )
                            				#if($velocityCount < $trf_cd_list.size()) '$trf_cd', #else '$trf_cd' #end
                            			#end
                            		)
                            		
        --CNTR TYPE
        AND		B.DMDT_CNTR_TP_CD	IN (
                        					#foreach( $cntr_tp in ${cntr_tp_list} )
                        						#if ($cntr_tp == 'S')
                        							'F', 'O', 'T', 'P', 'S', 'A'
                        						#elseif ($cntr_tp == 'D' || $cntr_tp == 'R')
                        							'$cntr_tp'
                        						#end
                        
                        						#if($velocityCount < $cntr_tp_list.size()) , #end
                        					#end
                        				)
     
        --Status
        AND		C.DMDT_CHG_STS_CD  IN	(	
                            			#foreach( $sts_cd in ${status_list} )
                            				#if($velocityCount < $status_list.size()) '$sts_cd', #else '$sts_cd' #end
                            			#end
                            		)
                            		

        UNION ALL
        SELECT    
                  #if (${grp_flg} == 'R')
        			 DECODE(C.OFC_RHQ_CD, 'NYCHQ', 'NYCRA', C.OFC_RHQ_CD)
        		  #else
        			 C.OFC_CD
        		  #end
        		  AS OFC_CD
                , C.DMDT_TRF_CD

		-- WONKI_EO추가
		, CASE
		  WHEN  @[curr_flg] = 'U' THEN
			'USD'
		  ELSE
			C.BZC_TRF_CURR_CD 
		  END 
			AS BZC_TRF_CURR_CD             
			 
				, C.ORG_CHG_AMT       AS INCR_AMT
                , DECODE(NVL(C.ORG_CHG_AMT,     0), 0, 0, 1) INCR_QTY
                , C.SC_RFA_EXPT_AMT   AS EXPT_AMT
                , DECODE(NVL(C.SC_RFA_EXPT_AMT, 0), 0, 0, 1) EXPT_QTY
                , C.AFT_EXPT_DC_AMT   AS DCNT_AMT
                , DECODE(NVL(C.AFT_EXPT_DC_AMT, 0), 0, 0, 1) DCNT_QTY
                , C.BIL_AMT           AS BILL_AMT
                , DECODE(NVL(C.BIL_AMT,         0), 0, 0, 1) BILL_QTY
				, CASE
                  WHEN  @[curr_flg] = 'U' THEN
                        (
                        SELECT  USD_LOCL_XCH_RT
                        FROM    GL_MON_XCH_RT S
                        WHERE   S.ACCT_XCH_RT_LVL   = '1'
                        AND     S.CURR_CD           = C.BZC_TRF_CURR_CD
                        AND     S.ACCT_XCH_RT_YRMON = TO_CHAR(SYSDATE, 'YYYYMM')
                        ) 
                  ELSE
                        1
                  END               AS XCH_RT
                , CASE 
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  15 THEN  'G015'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  30 THEN  'G030'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  60 THEN  'G060'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  90 THEN  'G090'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <= 180 THEN  'G180'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') >= 181 THEN  'G181'
                  END AS GD
        FROM    DMT_CHG_CALC        C,
                DMT_CHG_BKG_CNTR	B,
                BKG_BOOKING         T1
        WHERE   1=1
        AND		C.SYS_AREA_GRP_ID	= B.SYS_AREA_GRP_ID
		AND		C.CNTR_NO			= B.CNTR_NO
		AND		C.CNTR_CYC_NO		= B.CNTR_CYC_NO
		AND		B.BKG_NO			= T1.BKG_NO
        AND     C.DMDT_CHG_STS_CD IN ('F', 'C')
        AND     C.DMDT_CHG_LOC_DIV_CD <> 'SZP'
        AND     C.TO_MVMT_DT BETWEEN TO_DATE(@[f_year]||'0101', 'YYYYMMDD') AND TO_DATE(@[f_year]||'1231', 'YYYYMMDD') + 0.99999
        AND     ( (C.DUL_TP_EXPT_FLG = 'Y' AND SUBSTR(C.DMDT_TRF_CD, 1, 1) = 'C')
                  OR (C.DUL_TP_EXPT_FLG = 'N') )
                  
        --DEM/DET Office
        #if (${ofc_flg} == 'O')
        AND		C.OFC_CD IN (
                        		#foreach( $an_ofc in ${ofc_cd_list} )
                        			#if($velocityCount < $ofc_cd_list.size()) '$an_ofc', #else '$an_ofc' #end
                        		#end
                            )
        #elseif (${ofc_flg} == 'R' && ${ofc_cd} != 'All')
        AND		C.OFC_RHQ_CD = @[ofc_cd]
        #end  
        
        --UC
        #if(${uclm_flg} != 'ALL')          
        AND     NVL(C.UCLM_FLG, 'N') =  @[uclm_flg]
        #end
        
        --TARIFF TYPE
        AND		C.DMDT_TRF_CD	IN	(		/*_________ MULTI TARIFF TYPE	*/
                            			#foreach( $trf_cd in ${trf_cd_list} )
                            				#if($velocityCount < $trf_cd_list.size()) '$trf_cd', #else '$trf_cd' #end
                            			#end
                            		)
                            		
        --CNTR TYPE
        AND		B.DMDT_CNTR_TP_CD	IN (
                        					#foreach( $cntr_tp in ${cntr_tp_list} )
                        						#if ($cntr_tp == 'S')
                        							'F', 'O', 'T', 'P', 'S', 'A'
                        						#elseif ($cntr_tp == 'D' || $cntr_tp == 'R')
                        							'$cntr_tp'
                        						#end
                        
                        						#if($velocityCount < $cntr_tp_list.size()) , #end
                        					#end
                        				)
     
        --Status
        AND		C.DMDT_CHG_STS_CD  IN	(	
                            			#foreach( $sts_cd in ${status_list} )
                            				#if($velocityCount < $status_list.size()) '$sts_cd', #else '$sts_cd' #end
                            			#end
                            		)


        UNION ALL
        SELECT    
                  #if (${grp_flg} == 'R')
        			 DECODE(C.OFC_RHQ_CD, 'NYCHQ', 'NYCRA', C.OFC_RHQ_CD)
        		  #else
        			 C.OFC_CD
        		  #end
        		  AS OFC_CD
                , C.DMDT_TRF_CD

		-- WONKI_EO추가
		, CASE
		  WHEN  @[curr_flg] = 'U' THEN
			'USD'
		  ELSE
			C.BZC_TRF_CURR_CD 
		  END 
			AS BZC_TRF_CURR_CD

                , C.ORG_CHG_AMT       AS INCR_AMT
                , DECODE(NVL(C.ORG_CHG_AMT,     0), 0, 0, 1) INCR_QTY
                , C.SC_RFA_EXPT_AMT   AS EXPT_AMT
                , DECODE(NVL(C.SC_RFA_EXPT_AMT, 0), 0, 0, 1) EXPT_QTY
                , C.AFT_EXPT_DC_AMT   AS DCNT_AMT
                , DECODE(NVL(C.AFT_EXPT_DC_AMT, 0), 0, 0, 1) DCNT_QTY
                , C.BIL_AMT           AS BILL_AMT
                , DECODE(NVL(C.BIL_AMT,         0), 0, 0, 1) BILL_QTY
                , CASE
                  WHEN  @[curr_flg] = 'U' THEN
                        (
                        SELECT  USD_LOCL_XCH_RT
                        FROM    GL_MON_XCH_RT S
                        WHERE   S.ACCT_XCH_RT_LVL   = '1'
                        AND     S.CURR_CD           = C.BZC_TRF_CURR_CD
                        AND     S.ACCT_XCH_RT_YRMON = TO_CHAR(SYSDATE, 'YYYYMM')
                        ) 
                  ELSE
                        1
                  END               AS XCH_RT
                , CASE 
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  15 THEN  'G015'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  30 THEN  'G030'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  60 THEN  'G060'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <=  90 THEN  'G090'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') <= 180 THEN  'G180'
                  WHEN TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(C.TO_MVMT_DT, 'YYYYMMDD'), 'YYYYMMDD') >= 181 THEN  'G181'
                  END AS GD
        FROM    DMT_CHG_CALC        C,
                DMT_CHG_BKG_CNTR	B,
                BKG_BOOKING         T1
        WHERE   1=1
        AND		C.SYS_AREA_GRP_ID	= B.SYS_AREA_GRP_ID
		AND		C.CNTR_NO			= B.CNTR_NO
		AND		C.CNTR_CYC_NO		= B.CNTR_CYC_NO
		AND		B.BKG_NO			= T1.BKG_NO
        AND     C.DMDT_CHG_STS_CD  = 'I'
        AND     C.DMDT_CHG_LOC_DIV_CD <> 'SZP'
        AND     C.TO_MVMT_DT BETWEEN TO_DATE(@[f_year]||'0101', 'YYYYMMDD') AND TO_DATE(@[f_year]||'1231', 'YYYYMMDD') + 0.99999
        AND     ( (C.DUL_TP_EXPT_FLG = 'Y' AND SUBSTR(C.DMDT_TRF_CD, 1, 1) = 'C')
                  OR (C.DUL_TP_EXPT_FLG = 'N') )
        AND     EXISTS  (SELECT 1 FROM  DMT_INV_MN S WHERE S.DMDT_INV_NO = C.DMDT_INV_NO AND DMDT_AR_IF_CD != 'Y' AND ROWNUM=1)
        
        --DEM/DET Office
        #if (${ofc_flg} == 'O')
        AND		C.OFC_CD IN (
                        		#foreach( $an_ofc in ${ofc_cd_list} )
                        			#if($velocityCount < $ofc_cd_list.size()) '$an_ofc', #else '$an_ofc' #end
                        		#end
                            )
        #elseif (${ofc_flg} == 'R' && ${ofc_cd} != 'All')
        AND		C.OFC_RHQ_CD = @[ofc_cd]
        #end
        
        --UC
        #if(${uclm_flg} != 'ALL')          
        AND     NVL(C.UCLM_FLG, 'N') =  @[uclm_flg]
        #end  
        
        --TARIFF TYPE
        AND		C.DMDT_TRF_CD	IN	(		/*_________ MULTI TARIFF TYPE	*/
                            			#foreach( $trf_cd in ${trf_cd_list} )
                            				#if($velocityCount < $trf_cd_list.size()) '$trf_cd', #else '$trf_cd' #end
                            			#end
                            		)
        --CNTR TYPE
        AND		B.DMDT_CNTR_TP_CD	IN (
                        					#foreach( $cntr_tp in ${cntr_tp_list} )
                        						#if ($cntr_tp == 'S')
                        							'F', 'O', 'T', 'P', 'S', 'A'
                        						#elseif ($cntr_tp == 'D' || $cntr_tp == 'R')
                        							'$cntr_tp'
                        						#end
                        
                        						#if($velocityCount < $cntr_tp_list.size()) , #end
                        					#end
                        				)   
     
        --Status
        AND		C.DMDT_CHG_STS_CD  IN	(	
                            			#foreach( $sts_cd in ${status_list} )
                            				#if($velocityCount < $status_list.size()) '$sts_cd', #else '$sts_cd' #end
                            			#end
                            		)
        
        ) T
WHERE   1=1
AND     BILL_AMT > 0
--GROUP BY GROUPING SETS ((OFC_CD, DMDT_TRF_CD), ())
GROUP BY ROLLUP(OFC_CD, BZC_TRF_CURR_CD, DMDT_TRF_CD)
ORDER BY 1

) COVER
WHERE 1=1 

-- Currency = Local 일 경우 Last Row의 Total 제외
#if (${curr_flg} != 'U')
	AND     COVER.BZC_TRF_CURR_CD IS NOT NULL
#end			]]></sql>
			<params>
				<param name="curr_flg" type="12" value="" out="N"/>
				<param name="f_year" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="uclm_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
