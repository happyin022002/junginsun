<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InvoiceIssueCollectionMgtDBDAOSearchOTSInquiryBySummaryListRSQL">
			<desc><![CDATA[INVOICE 생성 및 징수관리
EES_DMT_4009
Outstanding Inquiry by Customer N Issue
이성훈
SungHoon, Lee
2011.06.02 김현화[] DATE 조건 형식변경]]></desc>
			<sql><![CDATA[
WITH MN_DATA AS (
SELECT  DISTINCT
        DMDT_INV_NO
       ,M.ACT_PAYR_CNT_CD
       ,M.ACT_PAYR_SEQ 
       ,DMDT_VT_INV_STS_CD
       ,V.VNDR_LGL_ENG_NM 
       ,M.INV_CURR_CD 
       ,V.DELT_FLG 
       ,U.DELT_FLG
       ,U.CUST_LGL_ENG_NM
       ,M.DMDT_TRF_CD 
       ,M.INV_CHG_AMT
       ,M.TAX_AMT
       ,M.DMDT_INV_STS_CD 
       ,M.TAX_RTO
       ,M.INV_AMT
       ,V.DELT_FLG AS V_DELT_FLG
       ,U.DELT_FLG AS U_DELT_FLG
       ,M.CRE_OFC_CD
       ,INV_XCH_RT
       ,TO_CHAR(AR_IF_DT, 'YYYY-MM-DD') AS AR_IF_DT
--     ,CASE 
--			WHEN (NVL(OTS_CLT_FLG,'N') !='Y' AND DMDT_INV_STS_CD = 'I' AND DMDT_AR_IF_CD = 'Y' AND ATTR_CTNT1 IS NULL) THEN
--				'Y'
--          ELSE 
--				'N'
--      END V_COLLECTED  
       ,CASE 
			WHEN ATTR_CTNT1 IS NULL THEN 	-- AUTO I/F 가 아닐 경우 (INVOICE 발행 OFFICE 가 AUTO I/F 대상 OFFICE 가 아닐 경우)
				CASE 
					WHEN DMDT_INV_STS_CD = 'I' AND DMDT_AR_IF_CD = 'Y' THEN 
						'Y'
					ELSE 
						'N'
				END
			ELSE 	-- AUTO I/F 일 경우 (INVOICE 발행 OFFICE 가 AUTO I/F 대상 OFFICE 일 경우)
				NVL(OTS_CLT_FLG, 'N')
		END V_COLLECTED				
       ,CASE 
			WHEN ATTR_CTNT1 IS NOT NULL THEN 
				'Y' 
			ELSE 
				'N' 
		END AUTO_AR_IF_OFC_FLG       -- AUTO I/F OFFICE 인지 여부를 나타내는 FLAG	 
       ,(
			SELECT  SYS_AREA_GRP_ID SVR_ID 
			  FROM  COM_SYS_AREA_GRP_ID
			 WHERE  CNT_CD = 
					(
						SELECT  CNT_CD 
						  FROM  MDM_LOCATION 
						 WHERE  LOC_CD = 
								(
									SELECT  LOC_CD 
									  FROM  MDM_ORGANIZATION 
									 WHERE  OFC_CD = SUBSTR(M.CRE_OFC_CD, 0, 5)
								)
					) 
			   AND  CO_IND_CD = 'H'
		) SVR_ID
	#if ( ${chk_srep_flg} == 'Y' )
       ,B.OB_SREP_CD
	#end
	
  FROM  DMT_INV_MN    		M				
       ,MDM_CUSTOMER  		U
       ,MDM_VENDOR    		V
	   ,DMT_HRD_CDG_CTNT 	D
	#if ( ${chk_srep_flg} == 'Y' )
       ,BKG_BOOKING   B
	#end     
	#if ( ${h_rhq_off} != 'SELHO' )
       ,MDM_ORGANIZATION MO
	#end
	
 WHERE  1 = 1
   AND  M.CRE_OFC_CD = D.ATTR_CTNT1(+)
   AND  D.HRD_CDG_ID(+) = 'AUTO_AR_IF_OFC'
#if ( ${chk_srep_flg} == 'Y' )
   AND  M.BKG_NO     = B.BKG_NO (+) -- Purge Booking data exists.
	#if ( ${ob_srep_cd} != '' )
   AND  B.OB_SREP_CD = @[ob_srep_cd]
	#end
#end
   AND  M.CRE_DT BETWEEN TO_DATE(REPLACE(@[frdt],'-',''), 'YYYYMMDD') AND TO_DATE(REPLACE(@[todt],'-',''), 'YYYYMMDD') + .99999       /* INVOICE ISSUE DATE */

#if ( ${isof} != '' )
   AND  M.CRE_OFC_CD IN (
			#foreach( $cre_ofc_cd_p in ${tempISOFList}) 
				#if($velocityCount < $tempISOFList.size()) '$cre_ofc_cd_p', #else '$cre_ofc_cd_p' #end 
			#end
		)
#end

   AND  (M.DMDT_INV_STS_CD = 'I' or (M.DMDT_INV_STS_CD = 'X' and M.DMDT_VT_INV_STS_CD = 'C'))	-- NOT CANCELED INVOICE or VIRTUAL INVOICE modified 2014.12.30 by jameskai

#if ( ${h_rhq_off} != 'SELHO' )
   and  M.CRE_OFC_CD         = MO.OFC_CD
   and  MO.AR_HD_QTR_OFC_CD  = @[h_rhq_off]
#end

#if ( ${arif} != '' )
	AND ( 1!=1 
		#if (${uncollected} == 'N')
        OR ( DMDT_INV_STS_CD = 'I' AND DMDT_AR_IF_CD = 'N' )
		OR ( DMDT_INV_STS_CD = 'X' AND DMDT_AR_IF_CD = 'N' AND M.DMDT_VT_INV_STS_CD = 'C' )
		#end 
		#if (${collected} == 'Y')
		OR DMDT_AR_IF_CD = 'Y'
		#end 
		#if (${hold} == 'H')
		OR DMDT_AR_IF_CD = 'H'
		#end 
		#if (${hold_Litigation} == 'L')
		OR (DMDT_AR_IF_CD = 'H' AND INV_HLD_RSN_CD = 'LIT')
		#end 
		)
#end

   and  M.ACT_PAYR_CNT_CD   =   U.CUST_CNT_CD(+)                                    /* PAYER NAME 가져오기 위해 OUTER JOIN */
   and  M.ACT_PAYR_SEQ      =   U.CUST_SEQ(+)
   and  M.ACT_PAYR_SEQ      =   V.VNDR_SEQ(+)

#if ( ${tftp} != 'A' )
   and  M.DMDT_TRF_CD in 
		(
			#foreach( $dmdt_trf_cd_p in ${tempTFTPList}) 
				#if($velocityCount < $tempTFTPList.size()) 
				   '$dmdt_trf_cd_p', 
				#else 
				   '$dmdt_trf_cd_p' 
				#end 
			#end
		)
#end
   and  M.ACT_PAYR_CNT_CD     =   decode(length(@[payc]), 8, nvl(substr(@[payc], 1, 2), M.ACT_PAYR_CNT_CD), 6, M.ACT_PAYR_CNT_CD, M.ACT_PAYR_CNT_CD)
   and  M.ACT_PAYR_SEQ        =   decode(length(@[payc]), 8, nvl(substr(@[payc], 3, 6), M.ACT_PAYR_SEQ),    6, @[payc],           M.ACT_PAYR_SEQ)
   and  (   /* ------------------------------------------------------------------- SC NO */
			M.SC_NO     =   nvl(substr(@[scno], 1, 10), M.SC_NO)
			or
			nvl(M.SC_NO, ' ') = nvl(substr( @[scno], 1, 10), ' ')
		)
   and  (   /* ------------------------------------------------------------------- RFA NO */
			M.RFA_NO     =   nvl(substr(@[rfan], 1, 10), M.RFA_NO)
			or
			nvl(M.RFA_NO, ' ') = nvl(substr(@[rfan], 1, 10), ' ')
		)
#if ( ${prg_ex_in_cd} == 'EX' )
   and  nvl(M.PRG_FLG, 'N') = 'N'   -- PURGE BOOKING 제외
#elseif ( ${prg_ex_in_cd} == 'ON' )
   and  nvl(M.PRG_FLG, 'N') = 'Y'   -- PURGE BOOKING 제외
#end

#if ( ${cuno} != '' )
   and  M.BKG_NO in
		(
			select  BKG_NO
			  from  BKG_CUSTOMER    BC
			 where  BC.CUST_CNT_CD = 
					(
						case when @[cuno] is null then BC.CUST_CNT_CD else substr(@[cuno], 1, 2) end
					) -- 2013.10.22 (ALPS 통합 로그 Error) 숫자 컬럼에 문자 입력시 ORACLE Exception Error가 발생하지 않도록 처리함.
			   and  BC.CUST_SEQ = 
					(
						case when @[cuno] is null then BC.CUST_SEQ
							 when REGEXP_INSTR(substr(@[cuno], 3, 6), '[[:alpha:]]', 1, 1) = 0 then to_number(substr(@[cuno], 3, 6))
							 else -999999
						end
					)	-- 2013.10.22 (ALPS 통합 로그 Error) 숫자 컬럼에 문자 입력시 ORACLE Exception Error가 발생하지 않도록 처리함.;
														
	#if ( ${cutp} != 'A,S,C,N' )
		#if ( ${cutp} == '' )
			   and  1 = 1
		#else
			   and  BKG_CUST_TP_CD in 
					(
						#foreach( $bkg_cust_tp_cd_p in ${tempCUTPList}) 
							#if($velocityCount < $tempCUTPList.size()) 
							   '$bkg_cust_tp_cd_p', 
							#else 
							   '$bkg_cust_tp_cd_p' 
							#end 
						#end
					)
		#end
	#else
			   and  BKG_CUST_TP_CD in ('S','C','N')
	#end
		)
#end
)
select  PAYERC
       ,PAYERN
#if ( ${chk_srep_flg} == 'Y' )
       ,OB_SREP_CD
#end
       ,sum(INVOCN )                     					as INVOCN
       ,INVOCR
       ,sum(BLLAMT )                     					as BLLAMT
       ,sum(TAXAMT )                     					as TAXAMT
       ,sum(TOTAMT )                     					as TOTAMT
       ,USEFLG
       ,sum(decode(TARFTP, 'DMIF', 1, 0)) 					as DMIFYN
       ,sum(decode(TARFTP, 'DTIC', 1, 0)) 					as DTICYN
       ,sum(decode(TARFTP, 'DMOF', 1, 0)) 					as DMOFYN
       ,sum(decode(TARFTP, 'DTOC', 1, 0)) 					as DTOCYN
       ,sum(decode(TARFTP, 'CTIC', 1, 0)) 					as CTICYN
       ,sum(decode(TARFTP, 'CTOC', 1, 0)) 					as CTOCYN
	   ,case when sum(VTINVCNT) > 0 then 'Y' else 'N' end	as DMDT_VT_INV_YN
       ,sum(COL_CHARGE) AS COL_CHARGE
       ,sum(COL_TAX) AS COL_TAX
       ,MAX(COL_DATE) AS COL_DATE
	   ,sum(UNCOL_AMT) AS UNCOL_AMT
--       , SND_CYC_CD
       , (SELECT INTG_CD_VAL_DP_DESC
            FROM   COM_INTG_CD_DTL
            WHERE  INTG_CD_ID = 'CD03506'
            AND INTG_CD_VAL_CTNT = SND_CYC_CD
            AND    APLY_ST_DT <= TO_CHAR(SYSDATE, 'YYYYMMDD')
            AND    APLY_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')) AS SND_CYC_CD
--	   , OTS_SH_GRP_CD       
       , (SELECT INTG_CD_VAL_DP_DESC
            FROM   COM_INTG_CD_DTL
            WHERE  INTG_CD_ID = 'CD03507'
            AND INTG_CD_VAL_CTNT = OTS_SH_GRP_CD
            AND    APLY_ST_DT <= TO_CHAR(SYSDATE, 'YYYYMMDD')
            AND    APLY_END_DT >= TO_CHAR(SYSDATE, 'YYYYMMDD')) AS OTS_SH_GRP_CD
	   , SND_CNTR_LIST_FLG
	   , SND_INV_FLG
       , EML_EXIST_FLG
from    (
			select  PAYERC
				   ,PAYERN
				#if ( ${chk_srep_flg} == 'Y' )        
				   ,OB_SREP_CD
				#end 				   
				   ,INVOCR
				   ,USEFLG
				   ,TARFTP
				   ,nvl(count(*) , 0 )                                         												as INVOCN     /* INVOICE 개수 */
				   ,nvl(sum(INV_CHG_AMT ) , 0 )                                                                     		as BLLAMT     /* TOTAL INVOICE BILLING AMOUNT */
				   ,nvl(sum(TAX_AMT     ) , 0 )                                                                     		as TAXAMT     /* TOTAL INVOICE TAX AMOUNT */
				   ,nvl(sum(INV_AMT     ) , 0 )                                                                     		as TOTAMT     /* TOTAL INVOICE AMOUNT = TOTAL BILLING AMOUNT + TOTAL TAX AMOUNT */			
   				   ,sum(VTINVCNT)																							as VTINVCNT
				   ,sum(UNCOL_AMT) 											AS UNCOL_AMT
				   ,sum(COL_CHARGE)											AS COL_CHARGE
				   ,sum(COL_TAX)											AS COL_TAX
                   ,max(COL_DATE)											AS COL_DATE
--				   ,SUM(DECODE(AUTO_AR_IF_OFC_FLG, 'Y', COL_CHARGE, 0))		AS COL_CHARGE
--    			   ,SUM(DECODE(AUTO_AR_IF_OFC_FLG, 'Y', COL_TAX,    0))		AS COL_TAX
--    			   ,MAX(DECODE(AUTO_AR_IF_OFC_FLG, 'Y', COL_DATE, NULL))	AS COL_DATE
				   , OTS_SH_GRP_CD
				   , SND_CYC_CD
				   , SND_CNTR_LIST_FLG
				   , SND_INV_FLG
                   , EML_EXIST_FLG
			  from  (
						select  decode(M.ACT_PAYR_CNT_CD , '00' , '' , M.ACT_PAYR_CNT_CD)||to_char(M.ACT_PAYR_SEQ , 'FM000000')		as PAYERC
							   ,REPLACE( nvl(M.CUST_LGL_ENG_NM , M.VNDR_LGL_ENG_NM ) , '/' , '_' )									as PAYERN     /* PAYER NAME - CUSTOMER NAME OR VENDOR NAME */
							   ,M.INV_CURR_CD                                               										as INVOCR     /* INVOICE CURRENCY */
							   ,decode(nvl(M.CUST_LGL_ENG_NM , 'A' ) , 'A' , V_DELT_FLG , U_DELT_FLG )                          	as USEFLG
							   ,M.DMDT_TRF_CD                                                                                      	as TARFTP
							   ,case when M.DMDT_INV_STS_CD = 'X' and M.DMDT_VT_INV_STS_CD = 'C' 
									 then 1
                                     else 0
                                end																									as VTINVCNT
							   ,case when M.DMDT_INV_STS_CD = 'X' and M.DMDT_VT_INV_STS_CD = 'C' 
									 then
											(
												select  sum(T3.BIL_AMT)
												  from  DMT_INV_MN   	T1
													   ,DMT_INV_DTL  	T2
													   ,DMT_CHG_CALC	T3
												 where  T1.DMDT_INV_NO			= M.DMDT_INV_NO
												   and  T1.CRE_OFC_CD  			= M.CRE_OFC_CD
												   and  T1.DMDT_INV_NO 			= T2.DMDT_INV_NO
												   and  T1.CRE_OFC_CD  			= T2.CRE_OFC_CD
												   and  T2.SYS_AREA_GRP_ID 		= T3.SYS_AREA_GRP_ID
												   and  T2.CNTR_NO 				= T3.CNTR_NO
												   and  T2.CNTR_CYC_NO 			= T3.CNTR_CYC_NO
												   and  T2.DMDT_TRF_CD 			= T3.DMDT_TRF_CD
												   and  T2.DMDT_CHG_LOC_DIV_CD 	= T3.DMDT_CHG_LOC_DIV_CD 
												   and  T2.CHG_SEQ				= T3.CHG_SEQ
											)
									 else
											M.INV_CHG_AMT
								end																								as INV_CHG_AMT
							   ,case when M.DMDT_INV_STS_CD = 'X' and M.DMDT_VT_INV_STS_CD = 'C' 
									 then
											case when nvl(M.TAX_RTO, 0) = 0
											     then 0
												 else
														(
															select  sum(T3.BIL_AMT/M.TAX_RTO)
															  from  DMT_INV_MN   	T1
																   ,DMT_INV_DTL  	T2
																   ,DMT_CHG_CALC	T3
															 where  T1.DMDT_INV_NO			= M.DMDT_INV_NO
															   and  T1.CRE_OFC_CD  			= M.CRE_OFC_CD
															   and  T1.DMDT_INV_NO 			= T2.DMDT_INV_NO
															   and  T1.CRE_OFC_CD  			= T2.CRE_OFC_CD
															   and  T2.SYS_AREA_GRP_ID 		= T3.SYS_AREA_GRP_ID
															   and  T2.CNTR_NO 				= T3.CNTR_NO
															   and  T2.CNTR_CYC_NO 			= T3.CNTR_CYC_NO
															   and  T2.DMDT_TRF_CD 			= T3.DMDT_TRF_CD
															   and  T2.DMDT_CHG_LOC_DIV_CD 	= T3.DMDT_CHG_LOC_DIV_CD 
															   and  T2.CHG_SEQ				= T3.CHG_SEQ
															)
											end

									 else
											M.TAX_AMT
								end																								as TAX_AMT   
							   ,case when M.DMDT_INV_STS_CD = 'X' and M.DMDT_VT_INV_STS_CD = 'C' 
									 then
											case when nvl(M.TAX_RTO, 0) = 0
												 then 
														(
															select  sum(T3.BIL_AMT)
															  from  DMT_INV_MN   	T1
																   ,DMT_INV_DTL  	T2
																   ,DMT_CHG_CALC	T3
															 where  T1.DMDT_INV_NO			= M.DMDT_INV_NO
															   and  T1.CRE_OFC_CD  			= M.CRE_OFC_CD
															   and  T1.DMDT_INV_NO 			= T2.DMDT_INV_NO
															   and  T1.CRE_OFC_CD  			= T2.CRE_OFC_CD
															   and  T2.SYS_AREA_GRP_ID 		= T3.SYS_AREA_GRP_ID
															   and  T2.CNTR_NO 				= T3.CNTR_NO
															   and  T2.CNTR_CYC_NO 			= T3.CNTR_CYC_NO
															   and  T2.DMDT_TRF_CD 			= T3.DMDT_TRF_CD
															   and  T2.DMDT_CHG_LOC_DIV_CD 	= T3.DMDT_CHG_LOC_DIV_CD 
															   and  T2.CHG_SEQ				= T3.CHG_SEQ															
														)
												 else
														(
															select  sum(T3.BIL_AMT + T3.BIL_AMT/M.TAX_RTO)
															  from  DMT_INV_MN   	T1
																   ,DMT_INV_DTL  	T2
																   ,DMT_CHG_CALC	T3
															 where  T1.DMDT_INV_NO			= M.DMDT_INV_NO
															   and  T1.CRE_OFC_CD  			= M.CRE_OFC_CD
															   and  T1.DMDT_INV_NO 			= T2.DMDT_INV_NO
															   and  T1.CRE_OFC_CD  			= T2.CRE_OFC_CD
															   and  T2.SYS_AREA_GRP_ID 		= T3.SYS_AREA_GRP_ID
															   and  T2.CNTR_NO 				= T3.CNTR_NO
															   and  T2.CNTR_CYC_NO 			= T3.CNTR_CYC_NO
															   and  T2.DMDT_TRF_CD 			= T3.DMDT_TRF_CD
															   and  T2.DMDT_CHG_LOC_DIV_CD 	= T3.DMDT_CHG_LOC_DIV_CD 
															   and  T2.CHG_SEQ				= T3.CHG_SEQ														
														)
											end
									 else
											M.INV_AMT
								end																												AS INV_AMT
							#if ( ${chk_srep_flg} == 'Y' )        
							   ,M.OB_SREP_CD
							#end       
						   ,DECODE(AUTO_AR_IF_OFC_FLG, 'Y', COL_CHARGE, DECODE(V_COLLECTED, 'Y', INV_CHG_AMT, 0)) 								AS COL_CHARGE
						   ,DECODE(AUTO_AR_IF_OFC_FLG, 'Y', COL_TAX,    DECODE(V_COLLECTED, 'Y', TAX_AMT, 0)) 									AS COL_TAX
						   ,DECODE(AUTO_AR_IF_OFC_FLG, 'Y', TO_CHAR(B.COL_DATE, 'YYYY-MM-DD'), DECODE(V_COLLECTED, 'Y', AR_IF_DT, NULL)) 		AS COL_DATE						   
							-- 미수금(INVOICE CURRENCY)
						   ,DECODE(AUTO_AR_IF_OFC_FLG, 'Y', INV_AMT-(NVL(COL_CHARGE,0)+NVL(COL_TAX,0)), DECODE(V_COLLECTED, 'Y', 0, INV_AMT))  	AS UNCOL_AMT
                           ,TO_CHAR(B.COL_DUE_DT, 'YYYY-MM-DD') AS COL_DUE_DT
						   , OTS_SH_GRP_CD, SND_CYC_CD, SND_CNTR_LIST_FLG, SND_INV_FLG
                           , (SELECT DECODE(COUNT(PAYR_CNTC_PNT_EML), 0, 'N', 'Y')
                              FROM   DMT_PAYR_CNTC_PNT
                              WHERE  SYS_AREA_GRP_ID = M.SVR_ID
                              AND    CUST_CNT_CD = M.ACT_PAYR_CNT_CD
                              AND    CUST_SEQ = M.ACT_PAYR_SEQ
                              AND    REGEXP_LIKE(PAYR_CNTC_PNT_EML, @[reg_ex])) EML_EXIST_FLG
						FROM MN_DATA M, DMT_PAYR_INFO P
                        ,(
                             SELECT 
                                 A.DMDT_INV_NO 
							    ,SUM(DECODE(DMDT_INV_PAY_TP_CD,'M',INV_PAY_AMT*DECODE(A.INV_CURR_CD,B.INV_CURR_CD,1,INV_XCH_RT),0)) AS COL_CHARGE
    	                        ,SUM(DECODE(DMDT_INV_PAY_TP_CD,'V',INV_PAY_AMT*DECODE(A.INV_CURR_CD,B.INV_CURR_CD,1,INV_XCH_RT),0)) AS COL_TAX
                                ,MAX(INV_PAY_DT) AS COL_DATE
                                ,MAX(INV_PAY_COFF_DT) AS COL_DUE_DT
                              FROM DMT_INV_OTS_PAY_RCV A, MN_DATA B
                              WHERE A.DMDT_INV_NO = B.DMDT_INV_NO
                              GROUP BY A.DMDT_INV_NO
                          ) B
                          WHERE M.DMDT_INV_NO = B.DMDT_INV_NO(+)
                            AND M.ACT_PAYR_CNT_CD = P.CUST_CNT_CD(+)
                            AND M.ACT_PAYR_SEQ = P.CUST_SEQ(+)
                            AND M.SVR_ID = P.SYS_AREA_GRP_ID(+)
#if ( ${coll} != '' && ${coll} != 'A' )	 
				AND  
	#if ( ${coll} == 'N' ) 
					DECODE(AUTO_AR_IF_OFC_FLG, 'Y', INV_AMT-(NVL(COL_CHARGE,0)+NVL(COL_TAX,0)), DECODE(V_COLLECTED, 'Y', 0, INV_AMT)) != 0 
	#else 
					DECODE(AUTO_AR_IF_OFC_FLG, 'Y', INV_AMT-(NVL(COL_CHARGE,0)+NVL(COL_TAX,0)), DECODE(V_COLLECTED, 'Y', 0, INV_AMT)) = 0 
	#end 
#end  
					)
			group by PAYERC
                    ,PAYERN
					,INVOCR
					,USEFLG
					,TARFTP
					, OTS_SH_GRP_CD
					, SND_CYC_CD
					, SND_CNTR_LIST_FLG
					, SND_INV_FLG
					, EML_EXIST_FLG
				#if ( ${chk_srep_flg} == 'Y' )
					,OB_SREP_CD
				#end
		)
 where  1 = 1
group by PAYERC
        ,PAYERN
        ,INVOCR
        ,USEFLG
		, OTS_SH_GRP_CD
		, SND_CYC_CD
		, SND_CNTR_LIST_FLG
		, SND_INV_FLG
        , EML_EXIST_FLG
	#if ( ${chk_srep_flg} == 'Y' )
        ,OB_SREP_CD
	#end
order by PAYERC
	#if ( ${chk_srep_flg} == 'Y' )
        ,OB_SREP_CD
	#end			]]></sql>
			<params>
				<param name="ob_srep_cd" type="12" value="" out="N"/>
				<param name="frdt" type="12" value="" out="N"/>
				<param name="todt" type="12" value="" out="N"/>
				<param name="h_rhq_off" type="12" value="" out="N"/>
				<param name="payc" type="12" value="" out="N"/>
				<param name="scno" type="12" value="" out="N"/>
				<param name="rfan" type="12" value="" out="N"/>
				<param name="cuno" type="12" value="" out="N"/>
				<param name="reg_ex" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
