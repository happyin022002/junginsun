<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InvoiceIssueCollectionMgtDBDAOSearchOTSCleanListRSQL">
			<desc><![CDATA[InvoiceIssueCollectionMgtDBDAOSearchOTSCleanListRSQL]]></desc>
			<sql><![CDATA[
SELECT    PAYERC
        , PAYERN
		, SH_CD
		, SH_NM
#if ( ${chk_srep_flg} == 'Y' )
        , OB_SREP_CD
#end
        , SUM(ROUND(DECODE(@[curr_sel],'KRW',ORG_CHG_AMT * NVL(V_CHG_CURR_RT,CHG_CURR_RT),'USD',ORG_CHG_AMT / NVL(V_CHG_CURR_RT,CHG_CURR_RT), ORG_CHG_AMT) , 2 )) AS ORG_CHG_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',CMDT_EXPT_AMT * NVL(V_CHG_CURR_RT,CHG_CURR_RT),'USD',CMDT_EXPT_AMT / NVL(V_CHG_CURR_RT,CHG_CURR_RT), CMDT_EXPT_AMT) , 2 )) AS CMDT_EXPT_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',DMDT_EXPT_AMT * NVL(V_CHG_CURR_RT,CHG_CURR_RT),'USD',DMDT_EXPT_AMT / NVL(V_CHG_CURR_RT,CHG_CURR_RT), DMDT_EXPT_AMT) , 2 )) AS DMDT_EXPT_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',(ORG_CHG_AMT - CMDT_EXPT_AMT - DMDT_EXPT_AMT) * NVL(V_CHG_CURR_RT,CHG_CURR_RT),'USD',(ORG_CHG_AMT - CMDT_EXPT_AMT - DMDT_EXPT_AMT) / NVL(V_CHG_CURR_RT,CHG_CURR_RT), (ORG_CHG_AMT - CMDT_EXPT_AMT - DMDT_EXPT_AMT)) , 2 )) AS NET_EXPT_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',DC_AMT * NVL(V_CHG_CURR_RT,CHG_CURR_RT),'USD',DC_AMT / NVL(V_CHG_CURR_RT,CHG_CURR_RT), DC_AMT) , 2 )) AS DC_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',BIL_AMT * NVL(V_INV_CURR_RT,INV_CURR_RT),'USD',BIL_AMT / NVL(V_INV_CURR_RT,INV_CURR_RT), BIL_AMT) , 2 )) AS BIL_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',TAX_AMT * NVL(V_INV_CURR_RT,INV_CURR_RT),'USD',TAX_AMT / NVL(V_INV_CURR_RT,INV_CURR_RT), TAX_AMT) , 2 )) AS TAX_AMT
		, SUM(ROUND(DECODE(@[curr_sel],'KRW',INV_AMT * NVL(V_INV_CURR_RT,INV_CURR_RT),'USD',INV_AMT / NVL(V_INV_CURR_RT,INV_CURR_RT), INV_AMT) , 2 )) AS INV_CHG_AMT
		, SUM(ROUND(DECODE(DMDT_AR_IF_CD,'Y',DECODE(@[curr_sel],'KRW',INV_AMT * NVL(V_INV_CURR_RT,INV_CURR_RT),'USD',INV_AMT / NVL(V_INV_CURR_RT,INV_CURR_RT), INV_AMT),0) , 2 )) AS INV_AMT

		, MAX(( SELECT 
            REPLACE(
            NVL(PAYR.DMDT_PAYR_OTS_RMK        ,' ')
            ,'@*',CHR(10)
            ) AS DMDT_PAYR_OTS_RMK
            FROM
            DMT_PAYR_INFO PAYR
            ,COM_SYS_AREA_GRP_ID    CS
            WHERE   1=1
            AND     PAYR.CUST_CNT_CD    = SUBSTR(PAYERC, 1, 2)
            AND     PAYR.CUST_SEQ       = SUBSTR(PAYERC, 3, 6)
            AND     PAYR.SYS_AREA_GRP_ID= CS.SYS_AREA_GRP_ID
            AND     CS.CO_IND_CD        = 'H'
            AND     CS.CNT_CD           = SUBSTR(PAYERC, 1, 2))) AS DMDT_PAYR_OTS_RMK
		, MAX(( SELECT 
            REPLACE(
            NVL(PAYR.OTS_RMK        ,' ')
            ,'@*',CHR(10)
            ) AS OTS_RMK
            FROM
            DMT_PAYR_INFO PAYR
            ,COM_SYS_AREA_GRP_ID    CS
            WHERE   1=1
            AND     PAYR.CUST_CNT_CD    = SUBSTR(PAYERC, 1, 2)
            AND     PAYR.CUST_SEQ       = SUBSTR(PAYERC, 3, 6)
            AND     PAYR.SYS_AREA_GRP_ID= CS.SYS_AREA_GRP_ID
            AND     CS.CO_IND_CD        = 'H'
            AND     CS.CNT_CD           = SUBSTR(PAYERC, 1, 2))) AS OTS_RMK

        , SUM(DECODE(TARFTP, 'DMIF', 1, 0)) AS DMIFYN
        , SUM(DECODE(TARFTP, 'DTIC', 1, 0)) AS DTICYN
        , SUM(DECODE(TARFTP, 'DMOF', 1, 0)) AS DMOFYN
        , SUM(DECODE(TARFTP, 'DTOC', 1, 0)) AS DTOCYN
        , SUM(DECODE(TARFTP, 'CTIC', 1, 0)) AS CTICYN
        , SUM(DECODE(TARFTP, 'CTOC', 1, 0)) AS CTOCYN


FROM    (
SELECT  DECODE( M.ACT_PAYR_CNT_CD , '00' , '' , M.ACT_PAYR_CNT_CD )||TO_CHAR( M.ACT_PAYR_SEQ , 'FM000000' )	PAYERC,
        REPLACE( NVL( U.CUST_LGL_ENG_NM , V.VNDR_LGL_ENG_NM ) , '/' , '_' )									PAYERN,         /* PAYER NAME - CUSTOMER NAME OR VENDOR NAME */
		CUST.CUST_CNT_CD||TO_CHAR( CUST.CUST_SEQ , 'FM000000' ) AS SH_CD,
		NVL(( SELECT CUST_LGL_ENG_NM FROM MDM_CUSTOMER WHERE CUST_CNT_CD = CUST.CUST_CNT_CD AND CUST_SEQ = CUST.CUST_SEQ ),'') AS SH_NM,
        
		A.ORG_CHG_AMT AS ORG_CHG_AMT,
        NVL((
             SELECT SUM(CMDT_EXPT_AMT)
               FROM DMT_CHG_CALC
              WHERE DMDT_INV_NO = M.DMDT_INV_NO ),0) CMDT_EXPT_AMT,
        A.SC_RFA_EXPT_AMT AS DMDT_EXPT_AMT,

        A.AFT_EXPT_DC_AMT AS DC_AMT,
        A.CNTR_INV_AMT AS BIL_AMT,
        A.TAX_AMT AS TAX_AMT,
        A.CNTR_INV_AMT + A.TAX_AMT AS INV_AMT,
		M.DMDT_TRF_CD AS TARFTP, M.DMDT_AR_IF_CD,
		NVL(( 
				SELECT  INV_XCH_RT TMP_USD_LCL
                FROM    DMT_CHG_CALC CALC, DMT_CHG_BKG_CNTR MAIN, INV_VVD_XCH_RT RT
                WHERE   1=1
				AND     MAIN.SYS_AREA_GRP_ID = CALC.SYS_AREA_GRP_ID
				AND     MAIN.CNTR_NO = CALC.CNTR_NO
				AND     MAIN.CNTR_CYC_NO = CALC.CNTR_CYC_NO
				AND     MAIN.BKG_NO = M.BKG_NO
				AND     CALC.DMDT_TRF_CD = M.DMDT_TRF_CD
                AND     RT.VSL_CD      = MAIN.VSL_CD
                AND     RT.SKD_VOY_NO  = MAIN.SKD_VOY_NO
                AND     RT.SKD_DIR_CD  = MAIN.SKD_DIR_CD
                AND     RT.PORT_CD     = DECODE( SUBSTR(CALC.DMDT_TRF_CD,1,1), 'I', MAIN.POD_CD, MAIN.POL_CD )
                AND     RT.LOCL_CURR_CD= @[curr_sel] -- fm_cur_cd : Charge Currency (From)
                AND     RT.CHG_CURR_CD = M.CHG_CURR_CD
                AND     RT.IO_BND_CD   = SUBSTR(CALC.DMDT_TRF_CD,1,1)
                AND     RT.INV_XCH_RT  > 0
				AND		ROWNUM = 1
				), '') V_CHG_CURR_RT,
		NVL(( 
				SELECT  INV_XCH_RT TMP_USD_LCL
                FROM    DMT_CHG_CALC CALC, DMT_CHG_BKG_CNTR MAIN, INV_VVD_XCH_RT RT
                WHERE   1=1
				AND     MAIN.SYS_AREA_GRP_ID = CALC.SYS_AREA_GRP_ID
				AND     MAIN.CNTR_NO = CALC.CNTR_NO
				AND     MAIN.CNTR_CYC_NO = CALC.CNTR_CYC_NO
				AND     MAIN.BKG_NO = M.BKG_NO
				AND     CALC.DMDT_TRF_CD = M.DMDT_TRF_CD
                AND     RT.VSL_CD      = MAIN.VSL_CD
                AND     RT.SKD_VOY_NO  = MAIN.SKD_VOY_NO
                AND     RT.SKD_DIR_CD  = MAIN.SKD_DIR_CD
                AND     RT.PORT_CD     = DECODE( SUBSTR(CALC.DMDT_TRF_CD,1,1), 'I', MAIN.POD_CD, MAIN.POL_CD )
                AND     RT.LOCL_CURR_CD= @[curr_sel] -- fm_cur_cd : Charge Currency (From)
                AND     RT.CHG_CURR_CD = M.INV_CURR_CD
                AND     RT.IO_BND_CD   = SUBSTR(CALC.DMDT_TRF_CD,1,1)
                AND     RT.INV_XCH_RT  > 0
				AND		ROWNUM = 1
				), '') V_INV_CURR_RT,
		NVL(( 
				SELECT MAX(DECODE(@[curr_sel],'KRW',F.LOCL_KRW_XCH_RT,'USD',F.USD_LOCL_XCH_RT,1))
                  FROM GL_MON_XCH_RT F
				 WHERE 1=1
				   AND F.ACCT_XCH_RT_YRMON = TO_CHAR(M.CRE_DT, 'YYYYMM')
				   AND F.ACCT_XCH_RT_LVL   = '1'
                   AND F.CURR_CD           = M.CHG_CURR_CD
				), 1) CHG_CURR_RT,
		NVL(( 
				SELECT MAX(DECODE(@[curr_sel],'KRW',F.LOCL_KRW_XCH_RT,'USD',F.USD_LOCL_XCH_RT,1))
                  FROM GL_MON_XCH_RT F
				 WHERE 1=1
				   AND F.ACCT_XCH_RT_YRMON = TO_CHAR(M.CRE_DT, 'YYYYMM')
				   AND F.ACCT_XCH_RT_LVL   = '1'
                   AND F.CURR_CD           = M.INV_CURR_CD
				), 1) INV_CURR_RT
     
#if ( ${chk_srep_flg} == 'Y' )        
        , B.OB_SREP_CD
#end       
FROM 
     MDM_CUSTOMER  U,
      DMT_INV_DTL A ,
#if ( ${chk_srep_flg} == 'Y' )
     BKG_BOOKING   B,
#end   
     MDM_VENDOR    V,
      ( SELECT DISTINCT B.*,
          NVL(DECODE(IB_SLS_OFC_CD,HRD.ATTR_CTNT1,HRD.ATTR_CTNT1,'Others'),'Others') IB_SLS_OFC_CD,
          IB_SREP_CD
        FROM DMT_INV_DTL A,
          DMT_INV_MN B,
          DMT_OTS_DTL F,
          DMT_HRD_CDG_CTNT HRD
        WHERE 1=1
          AND A.DMDT_INV_NO = B.DMDT_INV_NO
          AND A.CRE_OFC_CD = B.CRE_OFC_CD
          AND B.BKG_NO = F.BKG_NO
          AND A.CNTR_NO = F.CNTR_NO
          AND B.DMDT_TRF_CD = F.DMDT_TRF_CD
          AND F.IB_SLS_OFC_CD = HRD.ATTR_CTNT1 (+)
          AND HRD.HRD_CDG_ID (+) = 'OTS_SALES_TEAM'
          AND HRD.ATTR_CTNT2 (+) = 'Y'
          AND A.TO_MVMT_DT BETWEEN TO_DATE(REPLACE(@[frdt],'-',''), 'YYYYMMDD') 
                               AND TO_DATE(REPLACE(@[todt],'-',''), 'YYYYMMDD') + .99999  
#if ( ${isof} != '' )
AND B.CRE_OFC_CD IN (
	#foreach( $cre_ofc_cd_p in ${tempISOFList}) 
       #if($velocityCount < $tempISOFList.size()) 
	       '$cre_ofc_cd_p', 
	   #else 
	       '$cre_ofc_cd_p' 
	   #end 
	#end
	)
#end

#if ( ${arif} != '' )
	#if(${ar_if_cnt} > 0)
	AND ( 
		B.DMDT_AR_IF_CD IN (
	    #foreach( $dmdt_ar_if_cd_p in ${tempARIFList}) 
	        #if($velocityCount < $tempARIFList.size()) 
	           '$dmdt_ar_if_cd_p', 
	        #else 
	           '$dmdt_ar_if_cd_p' 
	        #end 
	    #end
		)
		#if (${s_ar_if_l_yn} != '')	
			OR (B.DMDT_AR_IF_CD = 'H' AND B.INV_HLD_RSN_CD = 'LIT')
		#end
	)
	#else
		#if (${s_ar_if_l_yn} != '')	
	AND (B.DMDT_AR_IF_CD = 'H' AND B.INV_HLD_RSN_CD = 'LIT')
		#else
	AND B.DMDT_AR_IF_CD = @[arif]
		#end
	#end
#end

	#if ( ${tftp} != 'A' )
	AND B.DMDT_TRF_CD IN (
	    #foreach( $dmdt_trf_cd_p in ${tempTFTPList}) 
	        #if($velocityCount < $tempTFTPList.size()) 
	           '$dmdt_trf_cd_p', 
	        #else 
	           '$dmdt_trf_cd_p' 
	        #end 
	    #end
	    )
	#end

#if ( ${payc} != '' )
AND     B.ACT_PAYR_CNT_CD     =   DECODE(LENGTH(@[payc]), 8, NVL(SUBSTR(@[payc], 1, 2), B.ACT_PAYR_CNT_CD), 6, B.ACT_PAYR_CNT_CD, B.ACT_PAYR_CNT_CD)
AND     B.ACT_PAYR_SEQ        =   DECODE(LENGTH(@[payc]), 8, NVL(SUBSTR(@[payc], 3, 6), B.ACT_PAYR_SEQ), 6, @[payc], B.ACT_PAYR_SEQ)
#end

AND     (   /* ------------------------------------------------------------------- SC NO */
            B.SC_NO     =   NVL( SUBSTR( @[scno], 1, 10), B.SC_NO)
            OR
            NVL(B.SC_NO, ' ') = NVL( SUBSTR( @[scno], 1, 10), ' ')
        )
AND     (   /* ------------------------------------------------------------------- RFA NO */
            B.RFA_NO     =   NVL( SUBSTR( @[rfan], 1, 10), B.RFA_NO)
            OR
            NVL(B.RFA_NO, ' ') = NVL( SUBSTR( @[rfan], 1, 10), ' ')
        )
#if ( ${prg_ex_in_cd} == 'EX' )
AND    NVL(B.PRG_FLG, 'N') = 'N'   -- PURGE BOOKING 제외
#elseif ( ${prg_ex_in_cd} == 'ON' )
AND    NVL(B.PRG_FLG, 'N') = 'Y'   -- PURGE BOOKING 제외
#end

) M,
	 BKG_CUSTOMER CUST
#if ( ${h_rhq_off} != 'SELHO' )
	, MDM_ORGANIZATION MO
#end
WHERE  1=1
AND     M.DMDT_INV_NO       = A.DMDT_INV_NO 
AND     M.CRE_OFC_CD        = A.CRE_OFC_CD  
AND    M.BKG_NO = CUST.BKG_NO(+)
AND    CUST.BKG_CUST_TP_CD(+) = 'S'
#if ( ${chk_srep_flg} == 'Y' )
AND    M.BKG_NO     = B.BKG_NO (+) -- Purge Booking data exists.
    #if ( ${ob_srep_cd} != '' )
AND    B.OB_SREP_CD = @[ob_srep_cd]
    #end
#end

AND     M.DMDT_INV_STS_CD =   'I'                                                   /* NOT CANCELED INVOICE */
#if ( ${h_rhq_off} != 'SELHO' )
AND  M.CRE_OFC_CD         = MO.OFC_CD
AND  MO.AR_HD_QTR_OFC_CD  = @[h_rhq_off]
#end

AND     M.ACT_PAYR_CNT_CD   =   U.CUST_CNT_CD(+)                                    /* PAYER NAME 가져오기 위해 OUTER JOIN */
AND     M.ACT_PAYR_SEQ      =   U.CUST_SEQ(+)
AND     M.ACT_PAYR_SEQ      =   V.VNDR_SEQ(+)


	#if ( ${sal_tm} != '' )
        AND     M.IB_SLS_OFC_CD IN (
            #foreach( $ib_sls_ofc_cd in ${tempSALTMList}) 
                #if($velocityCount < $tempSALTMList.size()) 
                   '$ib_sls_ofc_cd', 
                #else 
                   '$ib_sls_ofc_cd' 
                #end 
            #end
                )
    #end

	#if ( ${sal_rep} != '' )
		AND     M.IB_SREP_CD = @[sal_rep]
	#end


#if ( ${cuno} != '' )
AND     M.BKG_NO        IN  (
                            SELECT  BKG_NO
                            FROM    BKG_CUSTOMER    BC
                            WHERE   BC.CUST_CNT_CD  =   (
                                                        CASE
                                                        WHEN @[cuno] IS NULL THEN
                                                            BC.CUST_CNT_CD
                                                        ELSE
                                                            SUBSTR(@[cuno], 1, 2)
                                                        END
                                                        ) -- 2013.10.22 (ALPS 통합 로그 Error) 숫자 컬럼에 문자 입력시 ORACLE Exception Error가 발생하지 않도록 처리함.
                            AND     BC.CUST_SEQ     =   (
                                                        CASE
                                                        WHEN @[cuno] IS NULL THEN
                                                             BC.CUST_SEQ
                                                        WHEN REGEXP_INSTR( SUBSTR(@[cuno], 3, 6), '[[:alpha:]]', 1, 1) = 0 THEN
                                                             TO_NUMBER( SUBSTR(@[cuno], 3, 6) )
                                                        ELSE
                                                             -999999
                                                        END
                                                        ) -- 2013.10.22 (ALPS 통합 로그 Error) 숫자 컬럼에 문자 입력시 ORACLE Exception Error가 발생하지 않도록 처리함.;
                                                        
	#if ( ${cutp} != 'A,S,C,N' )
        #if ( ${cutp} == '' )
AND     1=1
        #else
AND     BKG_CUST_TP_CD IN (
    	    #foreach( $bkg_cust_tp_cd_p in ${tempCUTPList}) 
    	        #if($velocityCount < $tempCUTPList.size()) 
    	           '$bkg_cust_tp_cd_p', 
    	        #else 
    	           '$bkg_cust_tp_cd_p' 
    	        #end 
    	    #end
	    )
        #end

	#else
	AND BKG_CUST_TP_CD IN ( 'S','C','N' )
	#end
                         )
#end
)
WHERE 1 = 1
GROUP BY PAYERC
       , PAYERN
       , SH_CD
       , SH_NM
#if ( ${chk_srep_flg} == 'Y' )
       , OB_SREP_CD
#end
ORDER BY PAYERC
#if ( ${chk_srep_flg} == 'Y' )
       , OB_SREP_CD
#end			]]></sql>
			<params>
				<param name="curr_sel" type="12" value="" out="N"/>
				<param name="frdt" type="12" value="" out="N"/>
				<param name="todt" type="12" value="" out="N"/>
				<param name="arif" type="12" value="" out="N"/>
				<param name="payc" type="12" value="" out="N"/>
				<param name="scno" type="12" value="" out="N"/>
				<param name="rfan" type="12" value="" out="N"/>
				<param name="ob_srep_cd" type="12" value=" " out="N"/>
				<param name="h_rhq_off" type="12" value="" out="N"/>
				<param name="sal_rep" type="12" value="" out="N"/>
				<param name="cuno" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
