<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrPlanGuidelineManageDBDAOSearchGuidelineListRSQL">
			<desc><![CDATA[SEARCH GUIDELNINE  LIST
- modified lane search condition ]]></desc>
			<sql><![CDATA[
SELECT M.TRD_CD
      ,M.SUB_TRD_CD
      ,M.VSL_LANE_CD
      ,M.VVD
      ,M.POL_CD
      ,TO_CHAR(TO_DATE(M.EFF_ST_DT,'YYYYMMDD'),'MON-DD') ETA_DT
      ,M.POD_CD
      ,DECODE(M.D2_QTY,0,'',M.D2_QTY) D2_QTY
      ,M.D2_UT
      ,DECODE(M.D4_QTY,0,'',M.D4_QTY) D4_QTY
      ,M.D4_UT
      ,DECODE(M.D5_QTY,0,'',M.D5_QTY) D5_QTY
      ,M.D5_UT 
      ,DECODE(M.D7_QTY,0,'',M.D7_QTY) D7_QTY
      ,M.D7_UT
	  ,DECODE(M.R2_QTY,0,'',M.R2_QTY) R2_QTY
	  ,M.R2_UT
	  ,DECODE(M.R5_QTY,0,'',M.R5_QTY) R5_QTY
	  ,M.R5_UT
	  ,DECODE(M.R9_QTY,0,'',M.R9_QTY) R9_QTY
	  ,M.R9_UT
	  ,DECODE(M.O2_QTY,0,'',M.O2_QTY) O2_QTY
	  ,M.O2_UT
	  ,DECODE(M.O4_QTY,0,'',M.O4_QTY) O4_QTY
	  ,M.O4_UT
	  ,DECODE(M.O5_QTY,0,'',M.O5_QTY) O5_QTY
	  ,M.O5_UT
	  ,DECODE(M.S2_QTY,0,'',M.S2_QTY) S2_QTY
	  ,M.S2_UT
	  ,DECODE(M.S4_QTY,0,'',M.S4_QTY) S4_QTY
	  ,M.S4_UT
	  ,DECODE(M.F2_QTY,0,'',M.F2_QTY) F2_QTY
	  ,M.F2_UT
	  ,DECODE(M.F4_QTY,0,'',M.F4_QTY) F4_QTY
	  ,M.F4_UT
	  ,DECODE(M.F5_QTY,0,'',M.F5_QTY) F5_QTY
	  ,M.F5_UT
	  ,DECODE(M.A2_QTY,0,'',M.A2_QTY) A2_QTY
	  ,M.A2_UT
	  ,DECODE(M.A4_QTY,0,'',M.A4_QTY) A4_QTY
	  ,M.A4_UT
      ,DECODE(M.A5_QTY,0,'',M.A5_QTY) A5_QTY
	  ,M.A5_UT
      ,M.OLD_EFF_ST_DT
	  -- SET GRID COLOR START --
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D2_QTY,0) <> NVL(M.OLD_D2_QTY,0) THEN 'D'
	        WHEN NVL(M.D2_QTY,0) =  NVL(M.OLD_D2_QTY,0) THEN 'S'
	   END AS OLD_D2_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D2_UT,' ') <> NVL(M.OLD_D2_UT,' ') THEN 'D'
	        WHEN NVL(M.D2_UT,' ') =  NVL(M.OLD_D2_UT,' ') THEN 'S'
	   END AS OLD_D2_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D4_QTY,0) <> NVL(M.OLD_D4_QTY,0) THEN 'D'
	        WHEN NVL(M.D4_QTY,0) =  NVL(M.OLD_D4_QTY,0) THEN 'S'
	   END AS OLD_D4_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D4_UT,' ') <> NVL(M.OLD_D4_UT,' ') THEN 'D'
	        WHEN NVL(M.D4_UT,' ') =  NVL(M.OLD_D4_UT,' ') THEN 'S'
	   END AS OLD_D4_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D5_QTY,0) <> NVL(M.OLD_D5_QTY,0) THEN 'D'
	        WHEN NVL(M.D5_QTY,0) =  NVL(M.OLD_D5_QTY,0) THEN 'S'
	   END AS OLD_D5_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D5_UT,' ') <> NVL(M.OLD_D5_UT,' ') THEN 'D'
	        WHEN NVL(M.D5_UT,' ') =  NVL(M.OLD_D5_UT,' ') THEN 'S'
	   END AS OLD_D5_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D7_QTY,0) <> NVL(M.OLD_D7_QTY,0) THEN 'D'
	        WHEN NVL(M.D7_QTY,0) =  NVL(M.OLD_D7_QTY,0) THEN 'S'
	   END AS OLD_D7_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.D7_UT,' ') <> NVL(M.OLD_D7_UT,' ') THEN 'D'
	        WHEN NVL(M.D7_UT,' ') =  NVL(M.OLD_D7_UT,' ') THEN 'S'
	   END AS OLD_D7_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.R2_QTY,0) <> NVL(M.OLD_R2_QTY,0) THEN 'D'
	        WHEN NVL(M.R2_QTY,0) =  NVL(M.OLD_R2_QTY,0) THEN 'S'
	   END AS OLD_R2_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.R2_UT,' ') <> NVL(M.OLD_R2_UT,' ') THEN 'D'
	        WHEN NVL(M.R2_UT,' ') =  NVL(M.OLD_R2_UT,' ') THEN 'S'
	   END AS OLD_R2_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.R5_QTY,0) <> NVL(M.OLD_R5_QTY,0) THEN 'D'
	        WHEN NVL(M.R5_QTY,0) =  NVL(M.OLD_R5_QTY,0) THEN 'S'
	   END AS OLD_R5_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.R5_UT,' ') <> NVL(M.OLD_R5_UT,' ') THEN 'D'
	        WHEN NVL(M.R5_UT,' ') =  NVL(M.OLD_R5_UT,' ') THEN 'S'
	   END AS OLD_R5_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.R9_QTY,0) <> NVL(M.OLD_R9_QTY,0) THEN 'D'
	        WHEN NVL(M.R9_QTY,0) =  NVL(M.OLD_R9_QTY,0) THEN 'S'
	   END AS OLD_R9_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.R9_UT,' ') <> NVL(M.OLD_R9_UT,' ') THEN 'D'
	        WHEN NVL(M.R9_UT,' ') =  NVL(M.OLD_R9_UT,' ') THEN 'S'
	   END AS OLD_R9_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.O2_QTY,0) <> NVL(M.OLD_O2_QTY,0) THEN 'D'
	        WHEN NVL(M.O2_QTY,0) =  NVL(M.OLD_O2_QTY,0) THEN 'S'
	   END AS OLD_O2_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.O2_UT,' ') <> NVL(M.OLD_O2_UT,' ') THEN 'D'
	        WHEN NVL(M.O2_UT,' ') =  NVL(M.OLD_O2_UT,' ') THEN 'S'
	   END AS OLD_O2_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.O4_QTY,0) <> NVL(M.OLD_O4_QTY,0) THEN 'D'
	        WHEN NVL(M.O4_QTY,0) =  NVL(M.OLD_O4_QTY,0) THEN 'S'
	   END AS OLD_O4_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.O4_UT,' ') <> NVL(M.OLD_O4_UT,' ') THEN 'D'
	        WHEN NVL(M.O4_UT,' ') =  NVL(M.OLD_O4_UT,' ') THEN 'S'
	   END AS OLD_O4_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.O5_QTY,0) <> NVL(M.OLD_O5_QTY,0) THEN 'D'
	        WHEN NVL(M.O5_QTY,0) =  NVL(M.OLD_O5_QTY,0) THEN 'S'
	   END AS OLD_O5_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.O5_UT,' ') <> NVL(M.OLD_O5_UT,' ') THEN 'D'
	        WHEN NVL(M.O5_UT,' ') =  NVL(M.OLD_O5_UT,' ') THEN 'S'
	   END AS OLD_O5_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.S2_QTY,0) <> NVL(M.OLD_S2_QTY,0) THEN 'D'
	        WHEN NVL(M.S2_QTY,0) =  NVL(M.OLD_S2_QTY,0) THEN 'S'
	   END AS OLD_S2_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.S2_UT,' ') <> NVL(M.OLD_S2_UT,' ') THEN 'D'
	        WHEN NVL(M.S2_UT,' ') =  NVL(M.OLD_S2_UT,' ') THEN 'S'
	   END AS OLD_S2_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.S4_QTY,0) <> NVL(M.OLD_S4_QTY,0) THEN 'D'
	        WHEN NVL(M.S4_QTY,0) =  NVL(M.OLD_S4_QTY,0) THEN 'S'
	   END AS OLD_S4_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.S4_UT,' ') <> NVL(M.OLD_S4_UT,' ') THEN 'D'
	        WHEN NVL(M.S4_UT,' ') =  NVL(M.OLD_S4_UT,' ') THEN 'S'
	   END AS OLD_S4_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.F2_QTY,0) <> NVL(M.OLD_F2_QTY,0) THEN 'D'
	        WHEN NVL(M.F2_QTY,0) =  NVL(M.OLD_F2_QTY,0) THEN 'S'
	   END AS OLD_F2_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.F2_UT,' ') <> NVL(M.OLD_F2_UT,' ') THEN 'D'
	        WHEN NVL(M.F2_UT,' ') =  NVL(M.OLD_F2_UT,' ') THEN 'S'
	   END AS OLD_F2_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.F4_QTY,0) <> NVL(M.OLD_F4_QTY,0) THEN 'D'
	        WHEN NVL(M.F4_QTY,0) =  NVL(M.OLD_F4_QTY,0) THEN 'S'
	   END AS OLD_F4_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.F4_UT,' ') <> NVL(M.OLD_F4_UT,' ') THEN 'D'
	        WHEN NVL(M.F4_UT,' ') =  NVL(M.OLD_F4_UT,' ') THEN 'S'
	   END AS OLD_F4_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.F5_QTY,0) <> NVL(M.OLD_F5_QTY,0) THEN 'D'
	        WHEN NVL(M.F5_QTY,0) =  NVL(M.OLD_F5_QTY,0) THEN 'S'
	   END AS OLD_F5_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.F5_UT,' ') <> NVL(M.OLD_F5_UT,' ') THEN 'D'
	        WHEN NVL(M.F5_UT,' ') =  NVL(M.OLD_F5_UT,' ') THEN 'S'
	   END AS OLD_F5_UT	   
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.A2_QTY,0) <> NVL(M.OLD_A2_QTY,0) THEN 'D'
	        WHEN NVL(M.A2_QTY,0) =  NVL(M.OLD_A2_QTY,0) THEN 'S'
	   END AS OLD_A2_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.A2_UT,' ') <> NVL(M.OLD_A2_UT,' ') THEN 'D'
	        WHEN NVL(M.A2_UT,' ') =  NVL(M.OLD_A2_UT,' ') THEN 'S'
	   END AS OLD_A2_UT
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.A4_QTY,0) <> NVL(M.OLD_A4_QTY,0) THEN 'D'
	        WHEN NVL(M.A4_QTY,0) =  NVL(M.OLD_A4_QTY,0) THEN 'S'
	   END AS OLD_A4_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.A4_UT,' ') <> NVL(M.OLD_A4_UT,' ') THEN 'D'
	        WHEN NVL(M.A4_UT,' ') =  NVL(M.OLD_A4_UT,' ') THEN 'S'
	   END AS OLD_A4_UT
       ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.A5_QTY,0) <> NVL(M.OLD_A5_QTY,0) THEN 'D'
	        WHEN NVL(M.A5_QTY,0) =  NVL(M.OLD_A5_QTY,0) THEN 'S'
	   END AS OLD_A5_QTY
	  ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.A5_UT,' ') <> NVL(M.OLD_A5_UT,' ') THEN 'D'
	        WHEN NVL(M.A5_UT,' ') =  NVL(M.OLD_A5_UT,' ') THEN 'S'
	   END AS OLD_A5_UT
      ,CASE WHEN M.ORG_EQ_GLINE_SEQ IS NULL THEN 'O'
	        WHEN NVL(M.REPO_GLINE_RMK,' ') <> NVL(M.OLD_REPO_GLINE_RMK,' ') THEN 'D'
	        WHEN NVL(M.REPO_GLINE_RMK,' ') =  NVL(M.OLD_REPO_GLINE_RMK,' ') THEN 'S'
	   END AS OLD_REPO_GLINE_RMK
	  -- SET GRID COLOR END --
      ,NVL(M.REPO_GLINE_RMK,' ') REPO_GLINE_RMK 
      ,M.EFF_END_DT
      ,(SELECT MAX(USR_NM) FROM COM_USER WHERE USR_ID = M.UPD_USR_ID)  UPD_USR_NM
      ,M.UPD_DT
      ,M.CFM_FLG
      ,M.UPD_USR_ID   -- HIDDEN
      ,M.EFF_ST_DT    -- HIDDEN
      ,M.EQ_GLINE_SEQ -- HIDDEN
      ,M.VSL_CD       -- HIDDEN
      ,M.SKD_VOY_NO   -- HIDDEN
      ,M.SKD_DIR_CD   -- HIDDEN
      ,M.SORT_ID      -- HIDDEN
      ,SKD.CLPT_SEQ
  FROM ( -- GUIDELINE HEDER + LOADING(PRIORITY)
		SELECT A.TRD_CD
              ,A.SUB_TRD_CD
              ,A.VSL_LANE_CD
              ,A.VVD
              ,A.POL_CD
              ,A.EFF_ST_DT
              ,A.POD_CD
              ,'' D2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.PRIO_SEQ,''))) D2_UT
              ,TO_NUMBER('')  D4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.PRIO_SEQ,''))) D4_UT
              ,''  D5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.PRIO_SEQ,''))) D5_UT
              ,''  D7_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.PRIO_SEQ,''))) D7_UT
              ,'' R2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.PRIO_SEQ,''))) R2_UT
              ,''  R5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.PRIO_SEQ,''))) R5_UT
              ,''  R9_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.PRIO_SEQ,''))) R9_UT
              ,''  O2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.PRIO_SEQ,''))) O2_UT
              ,''  O4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.PRIO_SEQ,''))) O4_UT
              ,''  O5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.PRIO_SEQ,''))) O5_UT
              ,''  S2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.PRIO_SEQ,''))) S2_UT
              ,''  S4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.PRIO_SEQ,''))) S4_UT
              ,''  F2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.PRIO_SEQ,''))) F2_UT
              ,''  F4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.PRIO_SEQ,''))) F4_UT
              ,''  F5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.PRIO_SEQ,''))) F5_UT
              ,''  A2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.PRIO_SEQ,''))) A2_UT
              ,''  A4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.PRIO_SEQ,''))) A4_UT
              ,''  A5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A5',A.PRIO_SEQ,''))) A5_UT
			  ,MAX(OLD_EFF_ST_DT) OLD_EFF_ST_DT
              ,'' OLD_D2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.OLD_PRIO_SEQ,''))) OLD_D2_UT             
              ,''  OLD_D4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.OLD_PRIO_SEQ,''))) OLD_D4_UT
              ,''  OLD_D5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.OLD_PRIO_SEQ,''))) OLD_D5_UT
              ,'' OLD_D7_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.OLD_PRIO_SEQ,''))) OLD_D7_UT
              ,'' OLD_R2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.OLD_PRIO_SEQ,''))) OLD_R2_UT
              ,'' OLD_R5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.OLD_PRIO_SEQ,''))) OLD_R5_UT
              ,'' OLD_R9_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.OLD_PRIO_SEQ,''))) OLD_R9_UT
              ,'' OLD_O2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.OLD_PRIO_SEQ,''))) OLD_O2_UT
              ,'' OLD_O4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.OLD_PRIO_SEQ,''))) OLD_O4_UT
              ,'' OLD_O5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.OLD_PRIO_SEQ,''))) OLD_O5_UT
              ,'' OLD_S2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.OLD_PRIO_SEQ,''))) OLD_S2_UT
              ,'' OLD_S4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.OLD_PRIO_SEQ,''))) OLD_S4_UT
              ,'' OLD_F2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.OLD_PRIO_SEQ,''))) OLD_F2_UT
              ,'' OLD_F4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.OLD_PRIO_SEQ,''))) OLD_F4_UT
              ,'' OLD_F5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.OLD_PRIO_SEQ,''))) OLD_F5_UT
              ,'' OLD_A2_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.OLD_PRIO_SEQ,''))) OLD_A2_UT
              ,'' OLD_A4_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.OLD_PRIO_SEQ,''))) OLD_A4_UT
              ,'' OLD_A5_QTY
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A5',A.OLD_PRIO_SEQ,''))) OLD_A5_UT
              ,A.REPO_GLINE_RMK
              ,A.OLD_REPO_GLINE_RMK
              ,A.EFF_END_DT
              ,A.UPD_USR_ID
              ,TO_CHAR(A.UPD_DT,'YYYY-MM-DD HH24:MI:SS') UPD_DT
              ,A.CFM_FLG
		      ,A.ORG_EQ_GLINE_SEQ
              ,A.EQ_GLINE_SEQ -- HIDDEN
              ,A.VSL_CD       -- HIDDEN
              ,A.SKD_VOY_NO   -- HIDDEN
              ,A.SKD_DIR_CD   -- HIDDEN
              ,A.SORT_ID      -- HIDDEN
          FROM ( SELECT HDR.TRD_CD
                       ,HDR.SUB_TRD_CD
                       ,HDR.VSL_LANE_CD
                       ,HDR.VSL_CD || HDR.SKD_VOY_NO || HDR.SKD_DIR_CD VVD
                       ,HDR.POL_CD
                       ,HDR.EFF_ST_DT
                       ,'Priority' POD_CD
                       ,LODG.CNTR_TPSZ_CD
                       ,LODG.PRIO_SEQ
                       ,( SELECT EFF_ST_DT
                            FROM EQR_CTRL_LODG_GLINE
                           WHERE TRD_CD =  LODG.TRD_CD
                             AND SUB_TRD_CD = LODG.SUB_TRD_CD
                             AND VSL_LANE_CD = LODG.VSL_LANE_CD
                             AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD
                             AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)
                                                   FROM EQR_CTRL_GLINE_HDR
                                                  WHERE TRD_CD = HDR.TRD_CD
                                                    AND SUB_TRD_CD = HDR.SUB_TRD_CD
                                                    AND VSL_LANE_CD = HDR.VSL_LANE_CD
                                                    AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EFF_ST_DT -- 전 차수 EFF_ST_DT
                       ,( SELECT PRIO_SEQ
                            FROM EQR_CTRL_LODG_GLINE
                           WHERE TRD_CD =  LODG.TRD_CD
                             AND SUB_TRD_CD = LODG.SUB_TRD_CD
                             AND VSL_LANE_CD = LODG.VSL_LANE_CD
                             AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD
                             AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)
                                                   FROM EQR_CTRL_GLINE_HDR
                                                  WHERE TRD_CD = HDR.TRD_CD
                                                    AND SUB_TRD_CD = HDR.SUB_TRD_CD
                                                    AND VSL_LANE_CD = HDR.VSL_LANE_CD
                                                    AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_PRIO_SEQ --잔 차수 PRIO_SEQ
                       ,HDR.REPO_GLINE_RMK
                       ,(SELECT MAX(REPO_GLINE_RMK)
                           FROM EQR_CTRL_GLINE_HDR
                          WHERE TRD_CD = HDR.TRD_CD
                            AND SUB_TRD_CD = HDR.SUB_TRD_CD
                            AND VSL_LANE_CD = HDR.VSL_LANE_CD
                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) OLD_REPO_GLINE_RMK
                       ,HDR.EFF_END_DT
                       ,HDR.UPD_USR_ID
                       ,HDR.UPD_DT 
                       ,HDR.CFM_FLG
                       ,(SELECT MAX(EQ_GLINE_SEQ)
                           FROM EQR_CTRL_GLINE_HDR
                          WHERE TRD_CD = HDR.TRD_CD
                            AND SUB_TRD_CD = HDR.SUB_TRD_CD
                            AND VSL_LANE_CD = HDR.VSL_LANE_CD
                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) AS ORG_EQ_GLINE_SEQ
                       ,HDR.EQ_GLINE_SEQ -- HIDDEN
                       ,HDR.VSL_CD       -- HIDDEN
                       ,HDR.SKD_VOY_NO   -- HIDDEN
                       ,HDR.SKD_DIR_CD   -- HIDDEN
                       ,'1' SORT_ID      -- HIDDEN
                   FROM EQR_CTRL_GLINE_HDR HDR
                       ,EQR_CTRL_LODG_GLINE LODG
                  WHERE HDR.TRD_CD       = LODG.TRD_CD
                    AND HDR.SUB_TRD_CD   = LODG.SUB_TRD_CD
                    AND HDR.VSL_LANE_CD  = LODG.VSL_LANE_CD
                    AND HDR.EQ_GLINE_SEQ = LODG.EQ_GLINE_SEQ
            #if (${s_dt_tp_cd} == '1')
				#if (${s_eta_dt} != '')
					AND  ( HDR.EFF_ST_DT >= @[s_eta_dt] OR @[s_eta_dt] BETWEEN HDR.EFF_ST_DT AND HDR.EFF_END_DT)
				#end
			#elseif (${s_dt_tp_cd} == '2') 
				#if (${s_eff_st_dt} != '' && ${s_eff_end_dt} != '') 
  					AND (    @[s_eff_st_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT
						  OR @[s_eff_end_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT
					      OR ( HDR.EFF_ST_DT >=  @[s_eff_st_dt]  AND HDR.EFF_END_DT <= @[s_eff_end_dt])
       					)
				#end
			#end
			#if (${trade} != '')
					AND HDR.TRD_CD IN (
					#foreach($key IN ${arr_trd_cd})
						#if($velocityCount < $arr_trd_cd.size())
						'$key', 
						#else 
						'$key' 
						#end 
					#end 
					)
			#end	
			#if (${subtrade} != '')
				AND (
				#foreach($key IN ${arr_sub_trd_cd})
					#if($velocityCount == 1 )
						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))
					#else 
						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))
					#end 
				#end 
					)
			#end
			#if (${lane} != '') 
				AND (
				#foreach($key IN ${arr_lane})
					#if($velocityCount == 1 ) 
						--(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))
                         HDR.VSL_LANE_CD = '$key'
					#else 
						--OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))
                        OR HDR.VSL_LANE_CD = '$key'
					#end 
				#end 
				)
			#end

			#if (${lane_direct} != '') 
				AND HDR.VSL_LANE_CD = @[lane_direct]
			#end

				AND DECODE(UPPER(@[main_page]),'FALSE',NVL(HDR.CFM_FLG,'X'),DECODE(@[s_cfm_flg],null,'X','','X',NVL(HDR.CFM_FLG,'X'))) 
				  = DECODE(UPPER(@[main_page]),'FALSE','Y',DECODE(@[s_cfm_flg],null,'X','','X',@[s_cfm_flg]))

			#if (${s_loc_cd} != '' || ${s_sub_loc_cd} != '')
				AND POL_CD IN ( SELECT A.LOC_CD
				                  FROM MDM_LOCATION A
					                  ,MDM_EQ_ORZ_CHT B
				                 WHERE A.SCC_CD        = B.SCC_CD
							#if (${s_loc_cd} != '')
					               AND B.RCC_CD        = @[s_loc_cd]
							#end
							#if (${s_sub_loc_cd} != '')
					               AND B.LCC_CD        = @[s_sub_loc_cd]
							#end
					               AND A.CALL_PORT_FLG = 'Y'       -- 하드코딩
					               AND A.DELT_FLG      = 'N'       -- 하드코딩
              					)
			#end
				 ) A
          GROUP BY A.TRD_CD
                  ,A.SUB_TRD_CD
                  ,A.VSL_LANE_CD
                  ,A.VVD
                  ,A.POL_CD
                  ,A.EFF_ST_DT
                  ,A.POD_CD
                  ,A.REPO_GLINE_RMK
                  ,A.EFF_END_DT
                  ,A.UPD_USR_ID
                  ,A.UPD_DT 
                  ,A.CFM_FLG
                  ,A.EQ_GLINE_SEQ -- HIDDEN
                  ,A.VSL_CD       -- HIDDEN
                  ,A.SKD_VOY_NO   -- HIDDEN
                  ,A.SKD_DIR_CD   -- HIDDEN
                  ,A.SORT_ID      -- HIDDEN
        UNION ALL
		-- GUIDELINE LOADING(PECENT)+ DISCHARGE(POD)
        SELECT A.TRD_CD    
              ,A.SUB_TRD_CD
              ,A.VSL_LANE_CD
              ,A.VVD
              ,A.POL_CD
              ,A.EFF_ST_DT    
              ,A.POD_CD
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.EQ_GLINE_VAL,''))) D2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D2',A.EQ_GLINE_TP_CD,'')) D2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.EQ_GLINE_VAL,''))) D4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D4',A.EQ_GLINE_TP_CD,'')) D4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.EQ_GLINE_VAL,''))) D5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D5',A.EQ_GLINE_TP_CD,'')) D5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.EQ_GLINE_VAL,''))) D7_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D7',A.EQ_GLINE_TP_CD,'')) D7_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.EQ_GLINE_VAL,''))) R2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R2',A.EQ_GLINE_TP_CD,'')) R2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.EQ_GLINE_VAL,''))) R5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R5',A.EQ_GLINE_TP_CD,'')) R5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.EQ_GLINE_VAL,''))) R9_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R9',A.EQ_GLINE_TP_CD,'')) R9_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.EQ_GLINE_VAL,''))) O2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O2',A.EQ_GLINE_TP_CD,'')) O2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.EQ_GLINE_VAL,''))) O4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O4',A.EQ_GLINE_TP_CD,'')) O4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.EQ_GLINE_VAL,''))) O5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O5',A.EQ_GLINE_TP_CD,'')) O5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.EQ_GLINE_VAL,''))) S2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S2',A.EQ_GLINE_TP_CD,'')) S2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.EQ_GLINE_VAL,''))) S4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S4',A.EQ_GLINE_TP_CD,'')) S4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.EQ_GLINE_VAL,''))) F2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F2',A.EQ_GLINE_TP_CD,'')) F2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.EQ_GLINE_VAL,''))) F4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F4',A.EQ_GLINE_TP_CD,'')) F4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.EQ_GLINE_VAL,''))) F5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F5',A.EQ_GLINE_TP_CD,'')) F5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.EQ_GLINE_VAL,''))) A2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A2',A.EQ_GLINE_TP_CD,'')) A2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.EQ_GLINE_VAL,''))) A4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A4',A.EQ_GLINE_TP_CD,'')) A4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A5',A.EQ_GLINE_VAL,''))) A5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A5',A.EQ_GLINE_TP_CD,'')) A5_UT
              ,MAX('') OLD_EFF_ST_DT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D2',A.OLD_EQ_GLINE_VAL,''))) OLD_D2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D4',A.OLD_EQ_GLINE_VAL,''))) OLD_D4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D5',A.OLD_EQ_GLINE_VAL,''))) OLD_D5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'D7',A.OLD_EQ_GLINE_VAL,''))) OLD_D7_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'D7',A.OLD_EQ_GLINE_TP_CD,'')) OLD_D7_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R2',A.OLD_EQ_GLINE_VAL,''))) OLD_R2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_R2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R5',A.OLD_EQ_GLINE_VAL,''))) OLD_R5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_R5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'R9',A.OLD_EQ_GLINE_VAL,''))) OLD_R9_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'R9',A.OLD_EQ_GLINE_TP_CD,'')) OLD_R9_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O2',A.OLD_EQ_GLINE_VAL,''))) OLD_O2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_O2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O4',A.OLD_EQ_GLINE_VAL,''))) OLD_O4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_O4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'O5',A.OLD_EQ_GLINE_VAL,''))) OLD_O5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'O5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_O5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S2',A.OLD_EQ_GLINE_VAL,''))) OLD_S2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_S2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'S4',A.OLD_EQ_GLINE_VAL,''))) OLD_S4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'S4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_S4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F2',A.OLD_EQ_GLINE_VAL,''))) OLD_F2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_F2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F4',A.OLD_EQ_GLINE_VAL,''))) OLD_F4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_F4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'F5',A.OLD_EQ_GLINE_VAL,''))) OLD_F5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'F5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_F5_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A2',A.OLD_EQ_GLINE_VAL,''))) OLD_A2_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A2',A.OLD_EQ_GLINE_TP_CD,'')) OLD_A2_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A4',A.OLD_EQ_GLINE_VAL,''))) OLD_A4_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A4',A.OLD_EQ_GLINE_TP_CD,'')) OLD_A4_UT
              ,TO_CHAR(SUM(DECODE(A.CNTR_TPSZ_CD,'A5',A.OLD_EQ_GLINE_VAL,''))) OLD_A5_QTY
              ,MAX(DECODE(A.CNTR_TPSZ_CD,'A5',A.OLD_EQ_GLINE_TP_CD,'')) OLD_A5_UT
              ,A.REPO_GLINE_RMK
              ,MAX(A.OLD_REPO_GLINE_RMK) OLD_REPO_GLINE_RMK
              ,'' EFF_END_DT
              ,'' UPD_USR_ID
              ,TO_CHAR('') UPD_DT
              ,A.CFM_FLG
			  ,A.ORG_EQ_GLINE_SEQ -- HIDDEN
              ,A.EQ_GLINE_SEQ -- HIDDEN
              ,A.VSL_CD       -- HIDDEN
              ,A.SKD_VOY_NO   -- HIDDEN
              ,A.SKD_DIR_CD   -- HIDDEN
              ,A.SORT_ID      -- HIDDEN
          FROM ( -- LOADING GUIDELINE(PERCENT)
				 SELECT HDR.TRD_CD
                       ,HDR.SUB_TRD_CD
                       ,HDR.VSL_LANE_CD
                       ,HDR.VSL_CD || HDR.SKD_VOY_NO || HDR.SKD_DIR_CD VVD
                       ,HDR.POL_CD
                       ,HDR.EFF_ST_DT
                       ,'%' POD_CD
                       ,LODG.CNTR_TPSZ_CD
                       ,LODG.EQ_GLINE_VAL 
                       ,(SELECT EQ_GLINE_VAL
                           FROM EQR_CTRL_LODG_GLINE
                          WHERE TRD_CD =  LODG.TRD_CD
                            AND SUB_TRD_CD = LODG.SUB_TRD_CD
                            AND VSL_LANE_CD = LODG.VSL_LANE_CD
                            AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD
                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)
                                                  FROM EQR_CTRL_GLINE_HDR
                                                 WHERE TRD_CD = HDR.TRD_CD
                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD
                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD
                                                   AND EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EQ_GLINE_VAL --전차수 EQ_GLINE_VAL
                       ,LODG.EQ_GLINE_TP_CD
                       ,(SELECT EQ_GLINE_TP_CD
                           FROM EQR_CTRL_LODG_GLINE
                          WHERE TRD_CD =  LODG.TRD_CD
                            AND SUB_TRD_CD = LODG.SUB_TRD_CD
                            AND VSL_LANE_CD = LODG.VSL_LANE_CD
                            AND CNTR_TPSZ_CD = LODG.CNTR_TPSZ_CD
                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)
                                                  FROM EQR_CTRL_GLINE_HDR
                                                 WHERE TRD_CD = HDR.TRD_CD
                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD
                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD
                                                   AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EQ_GLINE_TP_CD --전차수 EQ_GLINE_TP_CD
                       ,HDR.REPO_GLINE_RMK
                       ,(SELECT MAX(REPO_GLINE_RMK)
                           FROM EQR_CTRL_GLINE_HDR
                          WHERE TRD_CD = HDR.TRD_CD
                            AND SUB_TRD_CD = HDR.SUB_TRD_CD
                            AND VSL_LANE_CD = HDR.VSL_LANE_CD
                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) OLD_REPO_GLINE_RMK
                       ,HDR.EFF_END_DT
                       ,HDR.UPD_USR_ID
                       ,HDR.UPD_DT
                       ,HDR.CFM_FLG
                       ,(SELECT MAX(EQ_GLINE_SEQ)
                           FROM EQR_CTRL_GLINE_HDR
                          WHERE TRD_CD = HDR.TRD_CD
                            AND SUB_TRD_CD = HDR.SUB_TRD_CD
                            AND VSL_LANE_CD = HDR.VSL_LANE_CD
                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) AS ORG_EQ_GLINE_SEQ
                       ,HDR.EQ_GLINE_SEQ -- HIDDEN
                       ,HDR.VSL_CD       -- HIDDEN
                       ,HDR.SKD_VOY_NO   -- HIDDEN
                       ,HDR.SKD_DIR_CD   -- HIDDEN
                       ,'2' SORT_ID      -- HIDDEN
                   FROM EQR_CTRL_GLINE_HDR HDR
                       ,EQR_CTRL_LODG_GLINE LODG
                  WHERE HDR.TRD_CD       = LODG.TRD_CD
                    AND HDR.SUB_TRD_CD   = LODG.SUB_TRD_CD
                    AND HDR.VSL_LANE_CD  = LODG.VSL_LANE_CD
                    AND HDR.EQ_GLINE_SEQ = LODG.EQ_GLINE_SEQ
			#if (${s_dt_tp_cd} == '1')
				#if (${s_eta_dt} != '')
					AND  ( HDR.EFF_ST_DT >= @[s_eta_dt] OR @[s_eta_dt] BETWEEN HDR.EFF_ST_DT AND HDR.EFF_END_DT)
				#end
			#elseif (${s_dt_tp_cd} == '2')
				#if (${s_eff_st_dt} != '' && ${s_eff_end_dt} != '')
  					AND (    @[s_eff_st_dt]  BETWEEN  EFF_ST_DT AND EFF_END_DT
						  OR @[s_eff_end_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT
					      OR ( HDR.EFF_ST_DT >=  @[s_eff_st_dt]  AND HDR.EFF_END_DT <= @[s_eff_end_dt])
       					)
				#end
			#end
			#if (${trade} != '')
					AND HDR.TRD_CD IN (
					#foreach($key IN ${arr_trd_cd})
						#if($velocityCount < $arr_trd_cd.size())
						'$key',
						#else 
						'$key'
						#end
					#end
					)
			#end
			#if (${subtrade} != '')
				AND (
				#foreach($key IN ${arr_sub_trd_cd})
					#if($velocityCount == 1 )
						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))
					#else 
						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))
					#end
				#end
					)
			#end
			#if (${lane} != '')
				AND (
					#foreach($key IN ${arr_lane})
						#if($velocityCount == 1 ) 
							--(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))
                            HDR.VSL_LANE_CD = '$key'
						#else
							--OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6)) 
                            OR HDR.VSL_LANE_CD = '$key'
						#end
					#end
					)
			#end

			#if (${lane_direct} != '') 
				AND HDR.VSL_LANE_CD = @[lane_direct]
			#end

				AND DECODE(UPPER(@[main_page]),'FALSE',NVL(HDR.CFM_FLG,'X'),DECODE(@[s_cfm_flg],null,'X','','X',NVL(HDR.CFM_FLG,'X'))) 
				  = DECODE(UPPER(@[main_page]),'FALSE','Y',DECODE(@[s_cfm_flg],null,'X','','X',@[s_cfm_flg]))

			#if (${s_loc_cd} != '' || ${s_sub_loc_cd} != '')
					AND POL_CD IN ( SELECT A.LOC_CD
					                  FROM MDM_LOCATION A
						                  ,MDM_EQ_ORZ_CHT B
					                 WHERE A.SCC_CD        = B.SCC_CD
								#if (${s_loc_cd} != '')
						               AND B.RCC_CD        = @[s_loc_cd]
								#end
								#if (${s_sub_loc_cd} != '')
						               AND B.LCC_CD        = @[s_sub_loc_cd]
								#end
						               AND A.CALL_PORT_FLG = 'Y'       -- 하드코딩
						               AND A.DELT_FLG      = 'N'       -- 하드코딩
              						)
			#end                   
                UNION ALL
                 -- DISCHARGING GUIDELINE(POD)
                 SELECT HDR.TRD_CD
                       ,HDR.SUB_TRD_CD
                       ,HDR.VSL_LANE_CD
                       ,HDR.VSL_CD || HDR.SKD_VOY_NO || HDR.SKD_DIR_CD VVD
                       ,HDR.POL_CD
                       ,HDR.EFF_ST_DT
                       ,DCHG.POD_CD
                       ,VAL.CNTR_TPSZ_CD
                       ,VAL.EQ_GLINE_VAL
                       ,(SELECT EQ_GLINE_VAL
                           FROM EQR_CTRL_DCHG_GLINE_VAL
                          WHERE TRD_CD =  VAL.TRD_CD
                            AND SUB_TRD_CD = VAL.SUB_TRD_CD
                            AND VSL_LANE_CD = VAL.VSL_LANE_CD
                            AND CNTR_TPSZ_CD = VAL.CNTR_TPSZ_CD
                            AND POD_CD = VAL.POD_CD
                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)
                                                  FROM EQR_CTRL_GLINE_HDR
                                                 WHERE TRD_CD = HDR.TRD_CD
                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD
                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD
                                                   AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ)) OLD_EQ_GLINE_TP_CD --전 차수 EQ_GLINE_TP_CD
                       ,VAL.EQ_GLINE_TP_CD
                       ,(SELECT EQ_GLINE_TP_CD
                           FROM EQR_CTRL_DCHG_GLINE_VAL
                          WHERE TRD_CD =  VAL.TRD_CD
                            AND SUB_TRD_CD = VAL.SUB_TRD_CD
                            AND VSL_LANE_CD = VAL.VSL_LANE_CD
                            AND CNTR_TPSZ_CD = VAL.CNTR_TPSZ_CD
                            AND POD_CD = VAL.POD_CD
                            AND EQ_GLINE_SEQ = (SELECT MAX(EQ_GLINE_SEQ)
                                                  FROM EQR_CTRL_GLINE_HDR
                                                 WHERE TRD_CD = HDR.TRD_CD
                                                   AND SUB_TRD_CD = HDR.SUB_TRD_CD
                                                   AND VSL_LANE_CD = HDR.VSL_LANE_CD
                                                   AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ))  OLD_EQ_GLINE_TP_CD --전 차수 EQ_GLINE_TP_CD
                       ,HDR.REPO_GLINE_RMK 
                       ,(SELECT MAX(REPO_GLINE_RMK)
                           FROM EQR_CTRL_GLINE_HDR
                          WHERE TRD_CD = HDR.TRD_CD
                            AND SUB_TRD_CD = HDR.SUB_TRD_CD
                            AND VSL_LANE_CD = HDR.VSL_LANE_CD
                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) OLD_REPO_GLINE_RMK
                       ,HDR.EFF_END_DT
                       ,HDR.UPD_USR_ID
                       ,HDR.UPD_DT
                       ,HDR.CFM_FLG
                       ,(SELECT MAX(EQ_GLINE_SEQ)
                           FROM EQR_CTRL_GLINE_HDR
                          WHERE TRD_CD = HDR.TRD_CD
                            AND SUB_TRD_CD = HDR.SUB_TRD_CD
                            AND VSL_LANE_CD = HDR.VSL_LANE_CD
                            AND  EQ_GLINE_SEQ <HDR.EQ_GLINE_SEQ) AS ORG_EQ_GLINE_SEQ
                       ,HDR.EQ_GLINE_SEQ -- HIDDEN
                       ,HDR.VSL_CD       -- HIDDEN
                       ,HDR.SKD_VOY_NO   -- HIDDEN
                       ,HDR.SKD_DIR_CD   -- HIDDEN
                       ,'3' SORT_ID      -- HIDDEN      
                   FROM EQR_CTRL_GLINE_HDR HDR
                       ,EQR_CTRL_DCHG_GLINE DCHG
                       ,EQR_CTRL_DCHG_GLINE_VAL VAL
                  WHERE HDR.TRD_CD        = DCHG.TRD_CD
                    AND HDR.SUB_TRD_CD    = DCHG.SUB_TRD_CD
                    AND HDR.VSL_LANE_CD   = DCHG.VSL_LANE_CD
                    AND HDR.EQ_GLINE_SEQ  = DCHG.EQ_GLINE_SEQ
                    AND DCHG.TRD_CD       = VAL.TRD_CD
                    AND DCHG.SUB_TRD_CD   = VAL.SUB_TRD_CD
                    AND DCHG.VSL_LANE_CD  = VAL.VSL_LANE_CD
                    AND DCHG.EQ_GLINE_SEQ = VAL.EQ_GLINE_SEQ  
                    AND DCHG.POD_CD       = VAL.POD_CD
                    --AND NVL(HDR.CFM_FLG,'N') = 'Y'
           	#if (${s_dt_tp_cd} == '1') 
				#if (${s_eta_dt} != '') 
					AND  ( HDR.EFF_ST_DT >= @[s_eta_dt] OR @[s_eta_dt] BETWEEN HDR.EFF_ST_DT AND HDR.EFF_END_DT)
				#end
			#elseif (${s_dt_tp_cd} == '2') 
				#if (${s_eff_st_dt} != '' && ${s_eff_end_dt} != '') 
  					AND (    @[s_eff_st_dt]  BETWEEN  EFF_ST_DT AND EFF_END_DT
						  OR @[s_eff_end_dt] BETWEEN  EFF_ST_DT AND EFF_END_DT
					      OR ( HDR.EFF_ST_DT >=  @[s_eff_st_dt]  AND HDR.EFF_END_DT <= @[s_eff_end_dt])
       					)
				#end
			#end
			#if (${trade} != '') 
					AND HDR.TRD_CD IN (
					#foreach($key IN ${arr_trd_cd}) 
						#if($velocityCount < $arr_trd_cd.size()) 
						'$key', 
						#else 
						'$key' 
						#end 
					#end 
					)
			#end	
			#if (${subtrade} != '') 
				AND (
				#foreach($key IN ${arr_sub_trd_cd}) 
					#if($velocityCount == 1 ) 
						(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))
					#else 
						OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2))
					#end 
				#end 
					)
			#end
			#if (${lane} != '') 
				AND (
				#foreach($key IN ${arr_lane}) 
					#if($velocityCount == 1 ) 
						--(HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))
                        HDR.VSL_LANE_CD = '$key'
					#else 
						--OR (HDR.TRD_CD = SUBSTR('$key',1,3) AND HDR.SUB_TRD_CD = SUBSTR('$key',4,2) AND HDR.VSL_LANE_CD = SUBSTR('$key',6))
                        OR HDR.VSL_LANE_CD = '$key'
					#end 
				#end 
				)
			#end

			#if (${lane_direct} != '') 
				AND HDR.VSL_LANE_CD = @[lane_direct]
			#end

				AND DECODE(UPPER(@[main_page]),'FALSE',NVL(HDR.CFM_FLG,'X'),DECODE(@[s_cfm_flg],null,'X','','X',NVL(HDR.CFM_FLG,'X'))) 
				  = DECODE(UPPER(@[main_page]),'FALSE','Y',DECODE(@[s_cfm_flg],null,'X','','X',@[s_cfm_flg]))

			#if (${s_loc_cd} != '' || ${s_sub_loc_cd} != '') 
				AND POL_CD IN ( SELECT A.LOC_CD
				                  FROM MDM_LOCATION A
					                  ,MDM_EQ_ORZ_CHT B
				                 WHERE A.SCC_CD        = B.SCC_CD
							#if (${s_loc_cd} != '')
					               AND B.RCC_CD        = @[s_loc_cd]
							#end
							#if (${s_sub_loc_cd} != '') 
					               AND B.LCC_CD        = @[s_sub_loc_cd]
							#end
					               AND A.CALL_PORT_FLG = 'Y'       -- 하드코딩
					               AND A.DELT_FLG      = 'N'       -- 하드코딩
              				)
			#end
					) A
          GROUP BY A.TRD_CD
                  ,A.SUB_TRD_CD
                  ,A.VSL_LANE_CD
                  ,A.VVD
                  ,A.POL_CD
                  ,A.EFF_ST_DT    
                  ,A.POD_CD
                  ,A.REPO_GLINE_RMK
                  ,A.EFF_END_DT
                  ,A.UPD_USR_ID 
                  ,A.UPD_DT 
                  ,A.CFM_FLG
                  ,A.EQ_GLINE_SEQ 		-- HIDDEN
                  ,A.ORG_EQ_GLINE_SEQ	-- HIDDEN
                  ,A.VSL_CD       		-- HIDDEN
                  ,A.SKD_VOY_NO   		-- HIDDEN
                  ,A.SKD_DIR_CD   		-- HIDDEN
                  ,A.SORT_ID      		-- HIDDEN
        ) M
       ,VSK_VSL_PORT_SKD SKD
  WHERE M.VSL_CD = SKD.VSL_CD(+)
    AND M.SKD_VOY_NO = SKD.SKD_VOY_NO(+)
    AND M.SKD_DIR_CD = SKD.SKD_DIR_CD(+)
    AND M.POD_CD =SKD.VPS_PORT_CD(+)
    AND SKD.CLPT_IND_SEQ(+) = '1'
  ORDER BY M.TRD_CD
          ,M.SUB_TRD_CD
          ,M.VSL_LANE_CD
		  ,M.EQ_GLINE_SEQ
 		  ,M.EFF_ST_DT
          ,M.VVD
          ,M.POL_CD
          ,M.SORT_ID
          ,SKD.CLPT_SEQ			]]></sql>
			<params>
				<param name="s_eta_dt" type="12" value="" out="N"/>
				<param name="s_eff_st_dt" type="12" value="" out="N"/>
				<param name="s_eff_end_dt" type="12" value="" out="N"/>
				<param name="lane_direct" type="12" value="" out="N"/>
				<param name="main_page" type="12" value="" out="N"/>
				<param name="s_cfm_flg" type="12" value="" out="N"/>
				<param name="s_loc_cd" type="12" value="" out="N"/>
				<param name="s_sub_loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
