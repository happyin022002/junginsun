/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : MTYRepositionPerformanceAnalysisDBDAOMTYCNTRPERFSummaryVORSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.05.18
*@LastModifier : 
*@LastVersion : 1.0
* 2016.05.18 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.cim.cntroperationperformancemgt.mtyrepositionperformanceanalysis.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class MTYRepositionPerformanceAnalysisDBDAOMTYCNTRPERFSummaryVORSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * MTY Container PFMC Summary    
	  * 2011.03.07 남궁진호[CHM-201109244-01] DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19, 오타수정
	  * 2011.04.21 남궁진호[CHM-201110306-01] Week조건으로 조회할수 있도록 조건 추가함
	  * 2012.02.22 신자영 [CHM-201216310-01] mvmt pfmc by cy 기능 보완
	  * 2012.05.23 신자영 [CHM-201217983-01] MVMT PFMC BY CY 기능에 검색 가능 MVMT 추가
	  * 2013.02.08 이영두 [CHM-201322887-01] MG 조건 NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 조건 삭제
	  * 2013.07.30 이영두 [CHM-201325984] MVMT PFMC에 MO(MTY REPO OUT) 추가
	  * 2014.04.40 김창영 [CHM-201429600] Movement performance by CY Tab별 조회조건 추가
	  * </pre>
	  */
	public MTYRepositionPerformanceAnalysisDBDAOMTYCNTRPERFSummaryVORSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("tpsz",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("location",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("from",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mtymvmt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd_nm",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.cim.cntroperationperformancemgt.mtyrepositionperformanceanalysis.integration").append("\n"); 
		query.append("FileName : MTYRepositionPerformanceAnalysisDBDAOMTYCNTRPERFSummaryVORSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${mtymvmt} == 'MTIDMG' || ${mtymvmt} == 'MTVDVD-MT' || ${mtymvmt} == 'MTOPOP-MT' || ${mtymvmt} == 'VLMTMT-VL' " ).append("\n"); 
		query.append("|| ${mtymvmt} == 'MTOCOC-MT' || ${mtymvmt} == 'OCIDID-OC'|| ${mtymvmt} == 'MTIDID-MT' ||${mtymvmt} == 'OPMTMT-OP'||${mtymvmt} == 'TNMTMT-TN'||" ).append("\n"); 
		query.append("${mtymvmt} == 'ENMTMT-EN'||${mtymvmt} == 'IDICIC-ID'||${mtymvmt} == 'ENICIC-EN'||${mtymvmt} == 'TNICIC-TN')" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        SUBSTR(@[mtymvmt],5)	MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								SUBSTR(@[mtymvmt],5)	MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)        CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M,							" ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = SUBSTR(@[mtymvmt],0,2)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		SUBSTR(@[mtymvmt],3,2)	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY SUBSTR(@[mtymvmt],5),M.CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("	GROUP BY L.MOV_STS " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VDMTVL')" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'VD-MT-VL'	MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("                     SELECT 'VD-MT-VL' MOV_STS	" ).append("\n"); 
		query.append("                            ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                            ,COUNT(CNTR_NO)        CNT" ).append("\n"); 
		query.append("                       FROM (SELECT (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("										    MM.CNMV_YR  " ).append("\n"); 
		query.append("								      FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								     WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								       AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								            M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1" ).append("\n"); 
		query.append("                                      ) PRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("										     MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								        FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								       WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								         AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								              M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                         AND ROWNUM = 1" ).append("\n"); 
		query.append("                                      ) PRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("										     MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								       FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								      WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								        AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								             M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                        AND ROWNUM = 1     " ).append("\n"); 
		query.append("								      ) PRE_CNMV_SPLIT_NO,				" ).append("\n"); 
		query.append("								      M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("                                      M.CNTR_NO               CNTR_NO           " ).append("\n"); 
		query.append("						       FROM  CTM_MOVEMENT	     M,							" ).append("\n"); 
		query.append("						       	     MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		                      WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							                                     SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							                                       FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							                                      WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							                                     )	" ).append("\n"); 
		query.append("			                                                AND	( " ).append("\n"); 
		query.append("							                                     SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							                                       FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							                                      WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							                                     ) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	                      WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	                        AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("      	                        AND 	M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		                        AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		                       #foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			                                           '$cntrtpszcd',  " ).append("\n"); 
		query.append("			                       #end  " ).append("\n"); 
		query.append("			                            '') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("                                AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("                              #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("                                                        '$cntrlstmcd'," ).append("\n"); 
		query.append("                                   #end" ).append("\n"); 
		query.append("                                        '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		                       AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		                       AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		                       AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					                         FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					                        WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					                           AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					                           AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				                            )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("                               AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("                               AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("                                                   SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				                                            Y.YD_CD" ).append("\n"); 
		query.append("                                                     FROM " ).append("\n"); 
		query.append("          		                                           MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		                                           MDM_LOCATION L," ).append("\n"); 
		query.append("				                                           MDM_YARD Y" ).append("\n"); 
		query.append("                                                     WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("                                                       AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("                                                       AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		                                               AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		                                               AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		                                               AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("                                                     ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		                         AND 'MT'	=	(   		  " ).append("\n"); 
		query.append("												                 SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														                 MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												                   FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												                  WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												                    AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																         M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												                    AND  ROWNUM = 1" ).append("\n"); 
		query.append("											                      )" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("                                AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("                                AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	                            AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("                                ) A" ).append("\n"); 
		query.append("                     WHERE  'VD'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                           MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                      FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                     WHERE MM.CNTR_NO = A.CNTR_NO" ).append("\n"); 
		query.append("                                       AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                           A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1)" ).append("\n"); 
		query.append("    GROUP BY 'VD-MT-VL',CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("	GROUP BY L.MOV_STS" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VDMTTNENMTVL')" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'VD-MT-(TN or EN)-MT-VL'	MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("                     SELECT 'VD-MT-(TN or EN)-MT-VL' MOV_STS	" ).append("\n"); 
		query.append("                            ,CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                            ,COUNT(CNTR_NO)        CNT" ).append("\n"); 
		query.append("                       FROM (SELECT *" ).append("\n"); 
		query.append("                               FROM (SELECT AA.*," ).append("\n"); 
		query.append("                                           (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										           MM.CNMV_YR  " ).append("\n"); 
		query.append("								             FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								            WHERE  MM.CNTR_NO = AA.CNTR_NO  " ).append("\n"); 
		query.append("								              AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                   AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                              AND ROWNUM = 1" ).append("\n"); 
		query.append("                                            ) AAPRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                           (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										           MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								             FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								            WHERE  MM.CNTR_NO = AA.CNTR_NO  " ).append("\n"); 
		query.append("								              AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                   AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                               AND ROWNUM = 1" ).append("\n"); 
		query.append("                                            ) AAPRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                           (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										           MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								             FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								            WHERE  MM.CNTR_NO = AA.CNTR_NO  " ).append("\n"); 
		query.append("								              AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                   AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                              AND ROWNUM = 1     " ).append("\n"); 
		query.append("								            ) AAPRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                     FROM (SELECT A.*," ).append("\n"); 
		query.append("                                                 (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										                 MM.CNMV_YR  " ).append("\n"); 
		query.append("								                   FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                  WHERE  MM.CNTR_NO = A.CNTR_NO  " ).append("\n"); 
		query.append("								                    AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                         A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                                  ) APRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                                 (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										                 MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								                   FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                  WHERE  MM.CNTR_NO = A.CNTR_NO  " ).append("\n"); 
		query.append("								                    AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                         A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                                  ) APRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                                 (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("										                 MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								                   FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                  WHERE  MM.CNTR_NO = A.CNTR_NO  " ).append("\n"); 
		query.append("								                    AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                         A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                    AND ROWNUM = 1     " ).append("\n"); 
		query.append("								                  ) APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                          FROM (SELECT (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("										                       MM.CNMV_YR  " ).append("\n"); 
		query.append("								                         FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                        WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								                          AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                               M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                          AND ROWNUM = 1" ).append("\n"); 
		query.append("                                                        ) PRE_CNMV_YR,     " ).append("\n"); 
		query.append("                                                       (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("										                       MM.CNMV_SEQ  " ).append("\n"); 
		query.append("								                          FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                         WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								                           AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                                M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                                                        ) PRE_CNMV_SEQ,   " ).append("\n"); 
		query.append("                                                       (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("										                       MM.CNMV_SPLIT_NO  " ).append("\n"); 
		query.append("								                         FROM  CTM_MOVEMENT MM" ).append("\n"); 
		query.append("								                        WHERE  MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("								                          AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("								                               M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                                          AND ROWNUM = 1     " ).append("\n"); 
		query.append("								                        ) PRE_CNMV_SPLIT_NO,				" ).append("\n"); 
		query.append("								                       M.CNTR_TPSZ_CD CNTR_TPSZ_CD," ).append("\n"); 
		query.append("                                                       M.CNTR_NO CNTR_NO           " ).append("\n"); 
		query.append("						                         FROM  CTM_MOVEMENT M,							" ).append("\n"); 
		query.append("						       	                       MST_CONTAINER C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		                                         WHERE M.CNMV_EVNT_DT	BETWEEN	( SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							                                                        FROM EQR_WK_PRD K" ).append("\n"); 
		query.append("							                                                       WHERE K.PLN_YR||K.PLN_WK = @[from])	" ).append("\n"); 
		query.append("			                                                                AND ( SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							                                                        FROM EQR_WK_PRD K" ).append("\n"); 
		query.append("							                                                       WHERE K.PLN_YR||K.PLN_WK = @[to]) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	                                         WHERE M.CNMV_EVNT_DT BETWEEN TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	                                                                  AND TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("      	                                           AND M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		                                           AND M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		                       #foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			                                           '$cntrtpszcd',  " ).append("\n"); 
		query.append("			                       #end  " ).append("\n"); 
		query.append("			                                                               '') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("  #if (${lstmcd} != '')" ).append("\n"); 
		query.append("                                                   AND C.LSTM_CD IN (" ).append("\n"); 
		query.append("                              #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("                                                        '$cntrlstmcd'," ).append("\n"); 
		query.append("                                   #end" ).append("\n"); 
		query.append("                                                                      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		                                           AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		                                           AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		                                           AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					                                             FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					                                            WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					                                              AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					                                              AND C.DELT_FLG = 'N')" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("                               AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("                               AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("                                                   SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				                                            Y.YD_CD" ).append("\n"); 
		query.append("                                                     FROM " ).append("\n"); 
		query.append("          		                                           MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		                                           MDM_LOCATION L," ).append("\n"); 
		query.append("				                                           MDM_YARD Y" ).append("\n"); 
		query.append("                                                     WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("                                                       AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("                                                       AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		                                               AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		                                               AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		                                               AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("                                                     ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		                      AND 'MT'=(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											   MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("										  FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("						                 WHERE MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("										   AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("											   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("										   AND  ROWNUM = 1)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("                              AND M.CNTR_NO = C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("                              AND NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	                          AND NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("                              ) A" ).append("\n"); 
		query.append("                       WHERE  1=1" ).append("\n"); 
		query.append("                        AND  ('TN'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  " ).append("\n"); 
		query.append("                                           MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                      FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                     WHERE MM.CNTR_NO = A.CNTR_NO" ).append("\n"); 
		query.append("                                       AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                           A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1)" ).append("\n"); 
		query.append("                              OR" ).append("\n"); 
		query.append("                              'EN'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  " ).append("\n"); 
		query.append("                                           MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                                      FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                                     WHERE MM.CNTR_NO = A.CNTR_NO" ).append("\n"); 
		query.append("                                       AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                           A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                       AND ROWNUM = 1))" ).append("\n"); 
		query.append("                   ) AA" ).append("\n"); 
		query.append("             WHERE  1=1" ).append("\n"); 
		query.append("               AND  'MT'  = (SELECT  /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ " ).append("\n"); 
		query.append("                                     MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                               FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                              WHERE MM.CNTR_NO = AA.CNTR_NO" ).append("\n"); 
		query.append("                                AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                                    AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                                AND ROWNUM = 1)" ).append("\n"); 
		query.append("             ) AAA" ).append("\n"); 
		query.append("       WHERE  1=1 " ).append("\n"); 
		query.append("         AND  'VD'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  " ).append("\n"); 
		query.append("                              MM.MVMT_STS_CD  " ).append("\n"); 
		query.append("                         FROM CTM_MOVEMENT MM" ).append("\n"); 
		query.append("                        WHERE MM.CNTR_NO = AAA.CNTR_NO" ).append("\n"); 
		query.append("                          AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                              AAA.AAPRE_CNMV_YR||TO_CHAR(AAA.AAPRE_CNMV_SEQ,'0000')||AAA.AAPRE_CNMV_SPLIT_NO " ).append("\n"); 
		query.append("                          AND ROWNUM = 1)" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("    GROUP BY 'VD-MT-(TN or EN)-MT-VL',CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("	GROUP BY L.MOV_STS " ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MP')" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	'MP'			MOV_STS		," ).append("\n"); 
		query.append("					S.DP_SEQ		DSP_SEQ		," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD	CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(CNT,0)		CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT	M.CNTR_TPSZ_CD		CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)	CNT" ).append("\n"); 
		query.append("						FROM	(" ).append("\n"); 
		query.append("									SELECT	" ).append("\n"); 
		query.append("											M.CNTR_NO			CNTR_NO," ).append("\n"); 
		query.append("											M.CNTR_TPSZ_CD		CNTR_TPSZ_CD" ).append("\n"); 
		query.append("									FROM	CTM_MOVEMENT M" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'XX'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */	" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("									SELECT " ).append("\n"); 
		query.append("											M.CNTR_NO			CNTR_NO," ).append("\n"); 
		query.append("											M.CNTR_TPSZ_CD		CNTR_TPSZ_CD" ).append("\n"); 
		query.append("									FROM	CTM_MOVEMENT M" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("		AND M.CNMV_CYC_NO = 1 " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("    	AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	#else" ).append("\n"); 
		query.append("    	AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("						SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("								Y.YD_CD" ).append("\n"); 
		query.append("						  FROM " ).append("\n"); 
		query.append("								MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("								MDM_LOCATION L," ).append("\n"); 
		query.append("								MDM_YARD Y" ).append("\n"); 
		query.append("						 WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("						   AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("						#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("						   AND G.SCC_CD = @[location]		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("						   AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("						   AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("						#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("						   AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("						#end" ).append("\n"); 
		query.append("							)" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		) M," ).append("\n"); 
		query.append("		MST_CONTAINER		C" ).append("\n"); 
		query.append("		WHERE	M.CNTR_NO			= C.CNTR_NO" ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("       AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("         #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("          '$cntrlstmcd'," ).append("\n"); 
		query.append("         #end" ).append("\n"); 
		query.append("         '')" ).append("\n"); 
		query.append("      #end  " ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("		AND NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("		AND NVL(C.LSTM_CD, '  ') = 'SH' /* soc */" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("	GROUP BY M.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) A, CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") L" ).append("\n"); 
		query.append("GROUP BY L.MOV_STS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MR')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	'MR'				MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ			DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD,	" ).append("\n"); 
		query.append("					NVL(CNT,0)			CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT " ).append("\n"); 
		query.append("								'MR'					MOV_STS," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)		CNT" ).append("\n"); 
		query.append("						FROM	CTM_MOVEMENT	M," ).append("\n"); 
		query.append("								MST_CONTAINER	C" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("		SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("					Y.YD_CD" ).append("\n"); 
		query.append("		FROM " ).append("\n"); 
		query.append("				MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("				MDM_LOCATION L," ).append("\n"); 
		query.append("					MDM_YARD Y" ).append("\n"); 
		query.append("		WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("		  AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("			  AND G.SCC_CD = @[location]		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("			#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("			  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("			#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("			  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("			#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("			  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("		  ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("			AND		'OK'	=	(   		  " ).append("\n"); 
		query.append("									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("											  DECODE(GG.SCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("											  DECODE(GG.LCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("											  DECODE(GG.ECC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("											  DECODE(MM.ORG_YD_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("											  DECODE(GG.RCC_CD,@[location],'NO',	" ).append("\n"); 
		query.append("											#end" ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'EN','OK'," ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'TN','OK','NO')))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									--		MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("									FROM    CTM_MOVEMENT	MM," ).append("\n"); 
		query.append("											MDM_LOCATION	LL," ).append("\n"); 
		query.append("											MDM_EQ_ORZ_CHT	GG" ).append("\n"); 
		query.append("									WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("									AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("													M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("									AND		SUBSTR(MM.ORG_YD_CD, 1, 5)	= LL.LOC_CD" ).append("\n"); 
		query.append("									AND		LL.SCC_CD	= GG.SCC_CD" ).append("\n"); 
		query.append("									AND     ROWNUM		= 1" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		AND		M.CNTR_NO	=	C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("    GROUP BY 'MR', M.CNTR_TPSZ_CD )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") L" ).append("\n"); 
		query.append("GROUP BY L.MOV_STS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MO')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	'MO'				MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ			DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD,	" ).append("\n"); 
		query.append("					NVL(CNT,0)			CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT " ).append("\n"); 
		query.append("								'MO'					MOV_STS," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)		CNT" ).append("\n"); 
		query.append("						FROM	CTM_MOVEMENT	M," ).append("\n"); 
		query.append("							MST_CONTAINER	C" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD IN ('TN', 'EN')" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("      AND M.FCNTR_FLG = 'N'" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("		SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("					Y.YD_CD" ).append("\n"); 
		query.append("		FROM " ).append("\n"); 
		query.append("				MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("				MDM_LOCATION L," ).append("\n"); 
		query.append("					MDM_YARD Y" ).append("\n"); 
		query.append("		WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("		  AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("			#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("		  AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("			#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("			  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("			#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("			  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("			#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("			  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("		  ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("			AND		'OK'	=	(   		  " ).append("\n"); 
		query.append("									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_ASC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("											  DECODE(GG.SCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("											  DECODE(GG.LCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("											  DECODE(GG.ECC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("											  DECODE(MM.ORG_YD_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("											  DECODE(GG.RCC_CD,@[location],'NO',	" ).append("\n"); 
		query.append("											#end" ).append("\n"); 
		query.append("											DECODE(M.MVMT_STS_CD,'EN','OK'," ).append("\n"); 
		query.append("                DECODE(M.MVMT_STS_CD,'TN','OK','NO')))" ).append("\n"); 
		query.append("            FROM CTM_MOVEMENT  MM," ).append("\n"); 
		query.append("                MDM_LOCATION  LL," ).append("\n"); 
		query.append("                MDM_EQ_ORZ_CHT  GG" ).append("\n"); 
		query.append("            WHERE MM.CNTR_NO = M.CNTR_NO" ).append("\n"); 
		query.append("            AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO >" ).append("\n"); 
		query.append("                M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("            AND SUBSTR(MM.ORG_YD_CD, 1, 5)  = LL.LOC_CD" ).append("\n"); 
		query.append("            AND LL.SCC_CD = GG.SCC_CD" ).append("\n"); 
		query.append("            AND MM.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("            AND MM.CNMV_CYC_NO = M.CNMV_CYC_NO" ).append("\n"); 
		query.append("            AND	MM.FCNTR_FLG = 'N'" ).append("\n"); 
		query.append("            AND ROWNUM    = 1 " ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("		AND		M.CNTR_NO	=	C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY 'MO', M.CNTR_TPSZ_CD )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") L" ).append("\n"); 
		query.append("GROUP BY L.MOV_STS" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'MT')" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	NVL(SUM(CNT),0) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'MG'			MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ		DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								'MG'				MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)    CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							)  " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  	M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'ID'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */	" ).append("\n"); 
		query.append("		AND	     M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("    GROUP BY 'MG', M.CNTR_TPSZ_CD )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("			SELECT	'MP'			MOV_STS		," ).append("\n"); 
		query.append("					S.DP_SEQ		DSP_SEQ		," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD	CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(CNT,0)		CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT	M.CNTR_TPSZ_CD		CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)	CNT" ).append("\n"); 
		query.append("						FROM	(" ).append("\n"); 
		query.append("									SELECT	" ).append("\n"); 
		query.append("											M.CNTR_NO			CNTR_NO," ).append("\n"); 
		query.append("											M.CNTR_TPSZ_CD		CNTR_TPSZ_CD" ).append("\n"); 
		query.append("									FROM	CTM_MOVEMENT M" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							)  " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'XX'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */	" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("          M.CNTR_NO CNTR_NO," ).append("\n"); 
		query.append("          M.CNTR_TPSZ_CD CNTR_TPSZ_CD" ).append("\n"); 
		query.append("        FROM CTM_MOVEMENT M" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							)  " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  	M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("      AND 	M.CNMV_CYC_NO = 1" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND 	M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND 	M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		) M ," ).append("\n"); 
		query.append("      MST_CONTAINER		C" ).append("\n"); 
		query.append("   	  WHERE	M.CNTR_NO			= C.CNTR_NO" ).append("\n"); 
		query.append("      #if (${lstmcd} != '')" ).append("\n"); 
		query.append("       AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("          #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("           '$cntrlstmcd'," ).append("\n"); 
		query.append("          #end" ).append("\n"); 
		query.append("          '')" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end    " ).append("\n"); 
		query.append("	GROUP BY 'MP', M.CNTR_TPSZ_CD )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT	'MR'				MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ			DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD,	" ).append("\n"); 
		query.append("					NVL(CNT,0)			CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT " ).append("\n"); 
		query.append("								'MR'					MOV_STS," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)		CNT" ).append("\n"); 
		query.append("						FROM	CTM_MOVEMENT	M," ).append("\n"); 
		query.append("								MST_CONTAINER	C" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("			AND		'OK'	=	(   		  " ).append("\n"); 
		query.append("									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("											#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("											  DECODE(GG.SCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("											  DECODE(GG.LCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("											  DECODE(GG.ECC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("											  DECODE(MM.ORG_YD_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("											  DECODE(GG.RCC_CD,@[location],'NO'," ).append("\n"); 
		query.append("											#end" ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'EN','OK'," ).append("\n"); 
		query.append("											DECODE(MM.MVMT_STS_CD,'TN','OK','NO')))" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									--		MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("									FROM    CTM_MOVEMENT	MM," ).append("\n"); 
		query.append("											MDM_LOCATION	LL," ).append("\n"); 
		query.append("											MDM_EQ_ORZ_CHT	GG" ).append("\n"); 
		query.append("									WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("									AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("													M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("									AND		SUBSTR(MM.ORG_YD_CD, 1, 5)	= LL.LOC_CD" ).append("\n"); 
		query.append("									AND		LL.SCC_CD	= GG.SCC_CD" ).append("\n"); 
		query.append("									AND     ROWNUM		= 1" ).append("\n"); 
		query.append("								)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */	" ).append("\n"); 
		query.append("		AND	M.CNTR_NO	=	C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      	AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  	AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("    GROUP BY 'MR', M.CNTR_TPSZ_CD )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	UNION ALL" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'VD-MT'			MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ		DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								'VD-MT'				MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)    CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'MT'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  	M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("     -- AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' )" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'VD'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */	" ).append("\n"); 
		query.append("		AND	     M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("    GROUP BY 'VD-MT', M.CNTR_TPSZ_CD )A,CIM_TP_SZ_DP_SEQ S" ).append("\n"); 
		query.append("	WHERE A.CNTR_TPSZ_CD(+) = S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") L" ).append("\n"); 
		query.append("GROUP BY  L.MOV_STS " ).append("\n"); 
		query.append("ORDER BY division" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VL')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'OC-VL'					MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								'OC-VL'					MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)        CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							)  " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'OC'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("    GROUP BY 'OC-VL',M.CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'TS-VL'					MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								'TS-VL'					MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)        CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'VL'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'TS'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY 'TS-VL',M.CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("	GROUP BY L.MOV_STS " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${mtymvmt} == 'VD')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'VD-IC'					MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								'VD-IC'					MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)        CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'IC'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      AND @[vvd_nm] =     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("                               MM.CRNT_VSL_CD||MM.CRNT_SKD_VOY_NO||MM.CRNT_SKD_DIR_CD" ).append("\n"); 
		query.append("                          FROM CTM_MOVEMENT MM, MDM_VSL_CNTR C" ).append("\n"); 
		query.append("                         WHERE MM.CNTR_NO = M.CNTR_NO" ).append("\n"); 
		query.append("                           AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <" ).append("\n"); 
		query.append("                               M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                           AND MM.MVMT_STS_CD = 'VD' " ).append("\n"); 
		query.append("                           AND MM.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("                           AND C.FDR_DIV_CD  = 'O' " ).append("\n"); 
		query.append("                           AND ROWNUM = 1" ).append("\n"); 
		query.append("                        )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'VD'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY 'VD-IC',M.CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        'VD-TS'					MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								'VD-TS'					MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)        CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							) " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = 'TS'" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} == 'MTIDMG')" ).append("\n"); 
		query.append("      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) " ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("		AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("					  FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("					 WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("					   AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("					   AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("				   )" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic ????? */" ).append("\n"); 
		query.append("		AND		'VD'	=	(   		  " ).append("\n"); 
		query.append("												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */" ).append("\n"); 
		query.append("												FROM    CTM_MOVEMENT MM" ).append("\n"); 
		query.append("												WHERE   MM.CNTR_NO = M.CNTR_NO  " ).append("\n"); 
		query.append("												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         " ).append("\n"); 
		query.append("																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("												AND     ROWNUM = 1" ).append("\n"); 
		query.append("											)" ).append("\n"); 
		query.append("		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic ????? */		" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY 'VD-TS',M.CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("	GROUP BY L.MOV_STS " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT " ).append("\n"); 
		query.append("	L.MOV_STS AS division," ).append("\n"); 
		query.append("	SUM(CNT) AS total," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )) AS count01," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )) AS count02," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )) AS count03," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )) AS count04," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )) AS count05," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )) AS count06," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 7, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 7, CNT , 0) )) AS count07," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )) AS count08," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )) AS count09," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )) AS count10," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )) AS count11," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )) AS count12," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )) AS count13," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )) AS count14," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )) AS count15," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )) AS count16," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )) AS count17," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )) AS count18," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 19, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 19, CNT , 0) )) AS count19," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 20, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 20, CNT , 0) )) AS count20," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 21, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 21, CNT , 0) )) AS count21," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 22, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 22, CNT , 0) )) AS count22," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 23, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 23, CNT , 0) )) AS count23," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 24, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 24, CNT , 0) )) AS count24," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 25, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 25, CNT , 0) )) AS count25," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 26, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 26, CNT , 0) )) AS count26," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 27, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 27, CNT , 0) )) AS count27," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 28, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 28, CNT , 0) )) AS count28," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 29, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 29, CNT , 0) )) AS count29," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 30, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 30, CNT , 0) )) AS count30," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 31, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 31, CNT , 0) )) AS count31," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 32, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 32, CNT , 0) )) AS count32," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 33, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 33, CNT , 0) )) AS count33," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 34, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 34, CNT , 0) )) AS count34," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 35, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 35, CNT , 0) )) AS count35," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 36, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 36, CNT , 0) )) AS count36," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 37, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 37, CNT , 0) )) AS count37," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 38, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 38, CNT , 0) )) AS count38," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 39, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 39, CNT , 0) )) AS count39," ).append("\n"); 
		query.append("	SUM(DECODE(INSTR(@[tpsz],DECODE( L.DSP_SEQ, 40, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 40, CNT , 0) )) AS count40" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("			SELECT	/*+ ORDERED USE_NL ( A S ) */" ).append("\n"); 
		query.append("			        SUBSTR(@[mtymvmt],0,2)	MOV_STS," ).append("\n"); 
		query.append("					S.DP_SEQ				DSP_SEQ," ).append("\n"); 
		query.append("					S.CNTR_TPSZ_CD          CNTR_TPSZ_CD," ).append("\n"); 
		query.append("					NVL(A.CNT,0)	        CNT" ).append("\n"); 
		query.append("			FROM	(" ).append("\n"); 
		query.append("						SELECT 	" ).append("\n"); 
		query.append("								SUBSTR(@[mtymvmt],0,2)	MOV_STS			," ).append("\n"); 
		query.append("								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ," ).append("\n"); 
		query.append("								COUNT(M.CNTR_NO)        CNT             " ).append("\n"); 
		query.append("						FROM 	CTM_MOVEMENT	     M," ).append("\n"); 
		query.append("						       	MST_CONTAINER        C     " ).append("\n"); 
		query.append("	#if (${period} == 'W') " ).append("\n"); 
		query.append("		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( " ).append("\n"); 
		query.append("							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0" ).append("\n"); 
		query.append("							FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							WHERE  K.PLN_YR||K.PLN_WK = @[from]" ).append("\n"); 
		query.append("							)	" ).append("\n"); 
		query.append("			AND				( " ).append("\n"); 
		query.append("							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("							 FROM   EQR_WK_PRD K" ).append("\n"); 
		query.append("							 WHERE  K.PLN_YR||K.PLN_WK = @[to]" ).append("\n"); 
		query.append("							)  " ).append("\n"); 
		query.append("	#elseif (${period} == 'D' || ${period} == 'M') " ).append("\n"); 
		query.append("    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 " ).append("\n"); 
		query.append("	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("	#if (${mtymvmt} != '') " ).append("\n"); 
		query.append("      	AND 	M.MVMT_STS_CD = SUBSTR(@[mtymvmt],0,2)" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${mtymvmt} == 'ENF' || ${mtymvmt} == 'TNF' || ${mtymvmt} == 'ENM' || ${mtymvmt} == 'TNM') " ).append("\n"); 
		query.append("		#if (${mtymvmt} == 'ENF' || ${mtymvmt} == 'TNF') " ).append("\n"); 
		query.append("			AND	M.FCNTR_FLG = 'Y'" ).append("\n"); 
		query.append("		#else" ).append("\n"); 
		query.append("			AND	M.FCNTR_FLG = 'N'" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	#if (${tpsz} != '') " ).append("\n"); 
		query.append("		AND  	M.CNTR_TPSZ_CD  IN ( " ).append("\n"); 
		query.append("		#foreach($cntrtpszcd in ${vel_tpsz_cd})  " ).append("\n"); 
		query.append("			'$cntrtpszcd',  " ).append("\n"); 
		query.append("			#end  " ).append("\n"); 
		query.append("			'') " ).append("\n"); 
		query.append("	#end " ).append("\n"); 
		query.append("    #if (${lstmcd} != '')" ).append("\n"); 
		query.append("    AND C.LSTM_CD  IN (" ).append("\n"); 
		query.append("    #foreach($cntrlstmcd in ${vel_lstm_cd})" ).append("\n"); 
		query.append("      '$cntrlstmcd'," ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      '')" ).append("\n"); 
		query.append("  #end " ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (S) */" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'T' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("		AND M.TRNK_VSL_CD||M.TRNK_SKD_VOY_NO||M.TRNK_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	#if (${vvd_tp} == 'O' && ${vvd_nm} != '')" ).append("\n"); 
		query.append("      #if (${mtymvmt} == 'OP' || ${mtymvmt} == 'OC')" ).append("\n"); 
		query.append("         AND @[vvd_nm] = " ).append("\n"); 
		query.append("              (SELECT /*+ INDEX_ASC( MM XFN1CTM_MOVEMENT ) */" ).append("\n"); 
		query.append("                      MM.CRNT_VSL_CD||MM.CRNT_SKD_VOY_NO||MM.CRNT_SKD_DIR_CD" ).append("\n"); 
		query.append("               FROM CTM_MOVEMENT MM, MDM_VSL_CNTR C" ).append("\n"); 
		query.append("               WHERE MM.CNTR_NO = M.CNTR_NO" ).append("\n"); 
		query.append("                AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO >" ).append("\n"); 
		query.append("                   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO" ).append("\n"); 
		query.append("                AND MM.MVMT_STS_CD = 'VL' " ).append("\n"); 
		query.append("                AND MM.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("                AND C.FDR_DIV_CD  = 'O' " ).append("\n"); 
		query.append("                AND ROWNUM = 1" ).append("\n"); 
		query.append("              )" ).append("\n"); 
		query.append("        #else" ).append("\n"); 
		query.append("	        AND M.CRNT_VSL_CD||M.CRNT_SKD_VOY_NO||M.CRNT_SKD_DIR_CD = @[vvd_nm]" ).append("\n"); 
		query.append("	        AND 'OK' = (SELECT 'OK'" ).append("\n"); 
		query.append("          				     FROM MDM_VSL_CNTR C" ).append("\n"); 
		query.append("          				     WHERE M.CRNT_VSL_CD = C.VSL_CD" ).append("\n"); 
		query.append("          				     AND C.FDR_DIV_CD  = 'O'" ).append("\n"); 
		query.append("          				     AND C.DELT_FLG = 'N'" ).append("\n"); 
		query.append("            		      )" ).append("\n"); 
		query.append("        #end" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("	/* ----------------> 2014.05.07 by Chang Young Kim (AA Young Du Lee) : VVD Type & Name Condition Add (E) */" ).append("\n"); 
		query.append("	  #if (${inquiryLevel} == 'Y')" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD = @[location]" ).append("\n"); 
		query.append("	  #else" ).append("\n"); 
		query.append("      AND M.ORG_YD_CD IN (" ).append("\n"); 
		query.append("        SELECT 	/*+ ORDERED USE_NL( G L Y )  */" ).append("\n"); 
		query.append("				Y.YD_CD" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("          		MDM_EQ_ORZ_CHT G," ).append("\n"); 
		query.append("          		MDM_LOCATION L," ).append("\n"); 
		query.append("				MDM_YARD Y" ).append("\n"); 
		query.append("        WHERE Y.LOC_CD = L.LOC_CD" ).append("\n"); 
		query.append("          AND L.SCC_CD = G.SCC_CD" ).append("\n"); 
		query.append("		#if (${inquiryLevel} == 'S')" ).append("\n"); 
		query.append("          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'L')" ).append("\n"); 
		query.append("		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'E')" ).append("\n"); 
		query.append("		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/" ).append("\n"); 
		query.append("		#elseif(${inquiryLevel} == 'R')" ).append("\n"); 
		query.append("		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("          ) " ).append("\n"); 
		query.append("	  #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("      AND 	M.CNTR_NO  			= C.CNTR_NO" ).append("\n"); 
		query.append("	  #if (${soc} == 'E')" ).append("\n"); 
		query.append("      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ " ).append("\n"); 
		query.append("	  #elseif(${soc} == 'O')" ).append("\n"); 
		query.append("	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/" ).append("\n"); 
		query.append("	  #end	" ).append("\n"); 
		query.append("	#if (${bound} == 'N')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#elseif(${bound} == 'Y')" ).append("\n"); 
		query.append("		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */" ).append("\n"); 
		query.append("	#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    GROUP BY SUBSTR(@[mtymvmt],0,2),M.CNTR_TPSZ_CD) A,CIM_TP_SZ_DP_SEQ S    " ).append("\n"); 
		query.append("     WHERE 	A.CNTR_TPSZ_CD(+) 	= S.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("	) L" ).append("\n"); 
		query.append("	GROUP BY L.MOV_STS " ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}