<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AvailableOffHireDBDAOAvailableOffHireContainerConfirmRSQL">
			<desc><![CDATA[지역별 지정된 반납대상 장비의 내역을 조회합니다.]]></desc>
			<sql><![CDATA[
WITH PARAM AS (
    SELECT  @[loc_tp]         AS P_LOC_TP,
            @[loc_cd]         AS P_LOC_CD,
            @[port_cd]        AS P_PORT_CD,
            @[slan_cd]        AS P_VSL_SLAN_CD,
            @[del_cd]         AS P_DEL_CD,
            @[vvd_cd]         AS P_VVD_CD,
            @[estm_tp]        AS P_ESTM_TP,
            @[str_estm_dt]    AS P_STR_ESTM_DT,
            @[end_estm_dt]    AS P_END_ESTM_DT,
            @[lstm_cd]        AS P_LSTM_CD,
            @[cntr_tpsz_cd]   AS P_CNTR_TPSZ_CD,
            @[cnmv_sts_cd]    AS P_CNMV_STS_CD,
            @[agmt_cty_cd]    AS P_AGMT_CTY_CD,
            @[agmt_seq]       AS P_AGMT_SEQ,
            @[vndr_seq]       AS P_VNDR_SEQ,
            @[used_dys]       AS P_USED_DYS,
            @[free_dys]       AS P_FREE_DYS,
            @[min_onh_dys_tp] AS P_MIN_ONH_DYS_TP
    FROM    DUAL
), TEMP_DROP01 AS (
    SELECT  S1.AGMT_CTY_CD, S1.AGMT_SEQ, S1.CNTR_NO, 1 AS AHOLD_CNT
          , DECODE(S1.OFFH_STS_CD, 'C', 1, 0) AS CNFM_CNT
          , S1.OFFH_SEQ
          , S1.OFFH_STS_CD
          , S1.MTY_RTN_YD_CD
          , S1.OFFH_CFM_DT AS OFFH_CNFM_DT
          , S1.OFFH_YD_CD 
          , S1.OFFH_DUE_DT
          , S1.OFFH_REF_NO
          , S1.SND_USR_ID
          , S1.CFM_USR_ID
          , S1.RQST_OFC_CD
          , (
            SELECT  S03.RCC_CD
            FROM    MDM_ORGANIZATION  S01
                  , MDM_LOCATION      S02
                  , MDM_EQ_ORZ_CHT    S03
            WHERE   1=1
            AND     S01.LOC_CD = S02.LOC_CD
            AND     S02.SCC_CD = S03.SCC_CD
            AND     S01.OFC_CD = S1.RQST_OFC_CD
            )                                  AS RQST_RCC_CD -- REQUSTED OFFICE RCC
          , S2.TRSP_SO_OFC_CTY_CD||S2.TRSP_SO_SEQ AS TRS_SO_NO
          , S2.TRSP_WO_OFC_CTY_CD||S2.TRSP_WO_SEQ AS TRS_WO_NO
          , S2.INV_NO          AS TRS_INV_NO
          , S2.VNDR_SEQ        AS TRS_SP_CD
          , S3.VNDR_LGL_ENG_NM AS TRS_SP_NM
    FROM    LSE_AVAL_OFFH     S1
          , TRS_TRSP_SVC_ORD  S2
          , MDM_VENDOR        S3
    WHERE   S1.CNTR_NO          = S2.EQ_NO    (+)
    AND     S1.OFFH_CFM_DT      < S2.CRE_DT   (+)
    AND     S2.VNDR_SEQ         = S3.VNDR_SEQ (+)
    AND     S2.DELT_FLG     (+) = 'N'
    AND     S2.LSE_CNTR_FLG (+) = 'Y'
    AND    (S1.OFFH_DUE_DT > TO_CHAR(LAST_DAY(ADD_MONTHS(SYSDATE, -1)), 'YYYYMMDD') OR S1.OFFH_DUE_DT IS NULL)
    AND     S1.OFFH_STS_CD IN ('R', 'C')
), TEMP_DROP02 AS ( 
SELECT    T01.CNTR_NO ,   T01.CNMV_YR ,   T01.CNMV_ID_NO  ,    T01.BKG_NO ,    T01.CNTR_TPSZ_CD ,  T01.CNMV_STS_CD ,   T01.CNMV_DT    ,   T01.CRNT_YD_CD ,    T01.SCC_CD      
        , T01.LCC_CD  ,   T01.RCC_CD  ,   T01.POD_CD      ,    T01.DEL_CD ,    T01.VSL_SLAN_CD  ,  T01.VSL_CD      ,   T01.SKD_VOY_NO ,   T01.SKD_DIR_CD ,    T01.AGMT_CTY_CD 
        , T01.AGMT_SEQ,   T01.REF_NO  ,   T01.VNDR_SEQ    ,    T01.VNDR_ABBR_NM, T01.VNDR_LGL_ENG_NM, T01.LSTM_CD ,   T01.ONH_FREE_DYS ,  T01.ONH_DT      ,   T01.MIN_ONH_DYS,   T01.LOC_CLSS
        , NVL(T03.AHOLD_CNT, 0)                    AS AHOLD_CNT
        , NVL(T03.CNFM_CNT , 0)                    AS CNFM_CNT
        , NVL(MIN(T02.AGMT_CHG_VAL),0 )            AS AGMT_CHG_VAL
        , SUM(DECODE(NVL(TO_CHAR(T01.CNMV_DT,'YYYYMM'), TO_CHAR(SYSDATE,'YYYYMM')), TO_CHAR(SYSDATE,'YYYYMM'), 1,0) *
              DECODE(T01.CNMV_STS_CD, 'XX',1,0))   AS DOL_PFMC
        , T03.OFFH_YD_CD, T03.OFFH_DUE_DT, T03.OFFH_SEQ, T03.RQST_RCC_CD, T03.OFFH_STS_CD, T03.OFFH_CNFM_DT, T03.OFFH_REF_NO, T03.RQST_OFC_CD, T03.SND_USR_ID, T03.CFM_USR_ID
        , T01.SCC_CD || T01.AGMT_CTY_CD || T01.AGMT_SEQ || T01.VNDR_SEQ || T01.LSTM_CD || T01.CNTR_TPSZ_CD AS COMPLEX_PK
        , T01.LSE_VNDR_URL, T01.FULL_FLG, T01.ONH_YD_CD, T01.USED_DAYS, T01.BL_NO, T01.POL_CD
FROM    (
#if (${loc_case} == '0' || ${loc_case} == '1' || ${loc_case} == '3')
        -- MASTER 정보 기준으로 조회
        -- BOOKING이 없는 EN, TN, MT만 조회
        SELECT  T1.CNTR_NO, T1.CNMV_YR, T1.CNMV_ID_NO, NULL AS BKG_NO, T1.CNTR_TPSZ_CD, 'LOCAL' AS LOC_CLSS
                , T1.CNMV_STS_CD, T1.CNMV_DT, T1.CRNT_YD_CD, NULL AS DEL_CD, T1.SCC_CD, T1.LCC_CD, T1.RCC_CD, NULL AS POD_CD, NULL AS BL_NO, NULL AS POL_CD
                , NULL AS VSL_SLAN_CD, T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, T2.LSE_VNDR_URL, T1.FULL_FLG, T1.ONH_YD_CD, ROUND(SYSDATE - T1.ONH_DT) AS USED_DAYS
                , T1.AGMT_CTY_CD, T1.AGMT_SEQ, T2.REF_NO, T2.VNDR_SEQ, T10.VNDR_ABBR_NM, T10.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.ONH_FREE_DYS, T1.ONH_DT, T1.MIN_ONH_DYS
        FROM    PARAM               P ,
                MST_CONTAINER       T1,
                LSE_AGREEMENT       T2,
                MDM_VENDOR          T10
        WHERE   1=1
        AND     T1.AGMT_CTY_CD  = T2.AGMT_CTY_CD
        AND     T1.AGMT_SEQ     = T2.AGMT_SEQ
        AND     T1.ACIAC_DIV_CD = 'A'
        AND     T1.CNMV_STS_CD  IN ('EN', 'MT', 'TN')
        AND     T1.LSTM_CD      IN ('OF', 'MI', 'LT', 'SI', 'ST')
        AND     CASE WHEN T1.CNMV_STS_CD = 'MT' THEN
                          1
                     WHEN T1.CNMV_STS_CD IN ('EN', 'TN' ) THEN
                          1
                     END
               =
                CASE WHEN T1.CNMV_STS_CD = 'MT' THEN
                          1
                     WHEN T1.CNMV_STS_CD IN ('EN', 'TN' ) THEN
                           CASE WHEN (T1.BKG_NO IS NULL OR T1.BKG_NO LIKE 'PSEUDO%') THEN -- MASTER의 BOOKING 컬럼값이 PSEUDO001 이란 일부 BOOKING 테이블 없는 데이터 존재함.
                           1                                                              -- Booking 정보가 없는 경우(Empty Container) MASTER 정보를 참조.
                           ELSE
                           0                                                              -- Booking 정보가 있는 경우(Full Container) Booking 정보를 참조.
                           END
                     END
        AND     DECODE(T1.LSTM_CD, 'ST', T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0),  T1.ONH_DT ) < SYSDATE
      --  AND     DECODE(T1.LSTM_CD, 'LT', T2.LST_EXP_DT                    , SYSDATE - 1) < SYSDATE
        AND     DECODE(T1.LSTM_CD, 'LT', DECODE(NVL(T1.MIN_ONH_DYS,0), 0, T2.LST_EXP_DT, T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0)),SYSDATE -1) < SYSDATE
       #if (${loc_case} == '3')
       	AND	   T1.CNTR_NO IN (
				#foreach ($key IN ${cntr_list})
					#if($velocityCount < $cntr_list.size())
					'$key',
					#else
					'$key'
					#end
				#end			  
				)
        AND 	T10.VNDR_SEQ = T1.VNDR_SEQ	
       #end 
        #if (${loc_case} != '3')
        AND     CASE WHEN P_LOC_TP = '0' THEN T1.RCC_CD
                     WHEN P_LOC_TP = '1' THEN T1.LCC_CD
                     WHEN P_LOC_TP = '2' THEN T1.SCC_CD
                     WHEN P_LOC_TP = '3' THEN T1.CRNT_YD_CD END = P_LOC_CD
        AND      T2.VNDR_SEQ       = T10.VNDR_SEQ
       #end
#if (${lstm_cd} != '')
        AND     T1.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cntr_tpsz_cd} != '')
        AND     T1.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cnmv_sts_cd} != '')
        AND     T1.CNMV_STS_CD IN (
    #foreach($key IN ${cnmv_sts_cd_seq})
		#if($velocityCount < $cnmv_sts_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                        )
#end
#if (${agmt_seq} != '')
        AND     T1.AGMT_CTY_CD = P_AGMT_CTY_CD
        AND     T1.AGMT_SEQ    = P_AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     T10.VNDR_SEQ    = P_VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE        > T1.ONH_DT + P_USED_DYS
#end
#if (${free_dys} != '')
        AND     T1.ONH_FREE_DYS > P_FREE_DYS
#end
        UNION ALL
        -- BOOKING에 DEL LOCATION 기준으로 조회
        -- CTM 에서 VD 발생시 자동으로 IC를 생성함으로 VD 로직은 별도로 넣지 않는다.
        -- EN, TN BOOKING 기준으로 조회 
        SELECT  T1.CNTR_NO, T1.CNMV_YR, T1.CNMV_ID_NO, T1.BKG_NO, T1.CNTR_TPSZ_CD, 'LOCAL' AS LOC_CLSS
                , T1.CNMV_STS_CD, T1.CNMV_DT, T1.CRNT_YD_CD, T2.DEL_CD, T9.SCC_CD, T9.LCC_CD, T9.RCC_CD, T2.POD_CD, T2.BL_NO, T2.POL_CD
                , NULL AS VSL_SLAN_CD, T2.VSL_CD, T2.SKD_VOY_NO, T2.SKD_DIR_CD, T3.LSE_VNDR_URL, T1.FULL_FLG, T1.ONH_YD_CD, ROUND(SYSDATE - T1.ONH_DT) AS USED_DAYS
                , T1.AGMT_CTY_CD, T1.AGMT_SEQ, T3.REF_NO, T3.VNDR_SEQ, T10.VNDR_ABBR_NM, T10.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.ONH_FREE_DYS, T1.ONH_DT, T1.MIN_ONH_DYS
        FROM    PARAM               P ,
                MST_CONTAINER       T1,
                BKG_BOOKING         T2,
                LSE_AGREEMENT       T3,
                MDM_LOCATION        T8,
                MDM_EQ_ORZ_CHT      T9,
                MDM_VENDOR          T10
        WHERE   1 = 1
        AND     T1.BKG_NO        = T2.BKG_NO
        AND     T1.AGMT_CTY_CD   = T3.AGMT_CTY_CD
        AND     T1.AGMT_SEQ      = T3.AGMT_SEQ
        AND     DECODE(T1.LSTM_CD, 'ST', T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0),  T1.ONH_DT ) < SYSDATE
      --  AND     DECODE(T1.LSTM_CD, 'LT', T3.LST_EXP_DT                    , SYSDATE - 1) < SYSDATE
        AND     DECODE(T1.LSTM_CD, 'LT', DECODE(NVL(T1.MIN_ONH_DYS,0), 0, T3.LST_EXP_DT, T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0)),SYSDATE -1) < SYSDATE
        AND     T8.LOC_CD        = SUBSTR(T2.MTY_RTN_YD_CD, 1, 5)                          -- Full Container가 Empty로 반납되는 지역에 해당하는 Empty Return Yard 기준으로 대상 조회
        AND     T8.SCC_CD        = T9.SCC_CD
        AND     T1.ACIAC_DIV_CD  = 'A'
        AND     T1.CNMV_STS_CD IN ('IC', 'ID', 'EN', 'TN')
        AND     T1.LSTM_CD     IN ('OF', 'MI', 'LT', 'SI', 'ST')
        AND     CASE WHEN P_LOC_TP = '0' THEN T9.RCC_CD
                     WHEN P_LOC_TP = '1' THEN T9.LCC_CD
                     WHEN P_LOC_TP = '2' THEN T9.SCC_CD
                     WHEN P_LOC_TP = '3' THEN NVL(T2.MTY_RTN_YD_CD, T1.CRNT_YD_CD) END      -- BOOKING.MTY_RTN_YD_CD가 NULL인 것이 있어, MASTER.CRNT_YD_CD를 사용하도록 함.
                                   = P_LOC_CD
        AND     CASE WHEN T1.CNMV_STS_CD IN ('IC', 'ID')                           THEN 'Y' -- IN BOUND 임으로 MVMT 정보를 조회할 필요 없음
                     WHEN T1.CNMV_STS_CD IN ('EN', 'TN') AND T1.FULL_FLG = 'N'     THEN 'Y' -- EMPTY CONTAINER MOVEMENT로 EN, TN 발생 MVMT 정보를 조회할 필요 없음
                     WHEN T1.CNMV_STS_CD IN ('EN', 'TN') AND T1.FULL_FLG = 'Y'     THEN     -- FULL CONTAINER MOVEMENT로 EN, TN 발생
                          (
                          SELECT  DECODE(S.OB_CNTR_FLG, 'N', 'Y', 'N')                      -- IN BOUND EN, TN인 경우에만 대상 됨
                          FROM    CTM_MOVEMENT    S
                          WHERE   T1.CNTR_NO      = S.CNTR_NO
                          AND     T1.CNMV_STS_CD  = S.MVMT_STS_CD
                          AND     T1.CNMV_YR      = S.CNMV_YR
                          AND     T1.CNMV_ID_NO   = S.CNMV_ID_NO
                          )
                     END  = 'Y'
        AND      T3.VNDR_SEQ      = T10.VNDR_SEQ
#if (${lstm_cd} != '')
        AND     T1.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cntr_tpsz_cd} != '')
        AND     T1.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                      )
#end
#if (${cnmv_sts_cd} != '')
        AND     T1.CNMV_STS_CD IN (
    #foreach($key IN ${cnmv_sts_cd_seq})
		#if($velocityCount < $cnmv_sts_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
                        )
#end
#if (${agmt_seq} != '')
        AND     T1.AGMT_CTY_CD = P_AGMT_CTY_CD
        AND     T1.AGMT_SEQ    = P_AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     T10.VNDR_SEQ    = P_VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE        > T1.ONH_DT + P_USED_DYS
#end
#if (${free_dys} != '')
        AND     T1.ONH_FREE_DYS > P_FREE_DYS
#end
#end
#if (${loc_case} == '0')
    UNION ALL
#end
#if (${loc_case} != '1' && ${loc_case} != '3')
        -- BOOKING 정보가 존재하는 CONTAINER만 대상
        -- MASTER YARD 기준, VL,VD 정보를 조회. (현재 CONTAINER LOADING LOCATION 기준)
        -- BOOKING 정보 DEL CODE 기준로 화면 표시. (최종 CONTAINER DELIVERY LOCATION 기준)
        SELECT  T1.CNTR_NO, T1.CNMV_YR, T1.CNMV_ID_NO, T1.BKG_NO, T1.CNTR_TPSZ_CD, 'PORT' AS LOC_CLSS
              , T1.CNMV_STS_CD, T1.CNMV_DT, T1.CRNT_YD_CD, T2.DEL_CD, T9.SCC_CD, T9.LCC_CD, T9.RCC_CD, T2.POD_CD, T2.BL_NO, T2.POL_CD
              , T4.VSL_SLAN_CD, T4.VSL_CD, T4.SKD_VOY_NO, T4.SKD_DIR_CD, T6.LSE_VNDR_URL, T1.FULL_FLG, T1.ONH_YD_CD, ROUND(SYSDATE - T1.ONH_DT) AS USED_DAYS
              , T1.AGMT_CTY_CD, T1.AGMT_SEQ, T6.REF_NO, T6.VNDR_SEQ, T10.VNDR_ABBR_NM, T10.VNDR_LGL_ENG_NM, T1.LSTM_CD, T1.ONH_FREE_DYS, T1.ONH_DT, T1.MIN_ONH_DYS
        FROM    PARAM               P ,
                MST_CONTAINER       T1,
                BKG_BOOKING         T2,
                BKG_VVD             T3,
                VSK_VSL_SKD         T4,
                VSK_VSL_PORT_SKD    T5,
                LSE_AGREEMENT       T6,
                MDM_LOCATION        T8,
                MDM_EQ_ORZ_CHT      T9,
                MDM_VENDOR          T10
        WHERE   1 = 1
        AND     T1.BKG_NO           = T2.BKG_NO
        AND     T1.ACIAC_DIV_CD     = 'A'
        AND     T1.CNMV_STS_CD IN ('TS', 'VL')
        AND     T1.LSTM_CD     IN ('OF', 'MI', 'LT', 'SI', 'ST')
        AND     T1.AGMT_CTY_CD      = T6.AGMT_CTY_CD
        AND     T1.AGMT_SEQ         = T6.AGMT_SEQ
        AND     DECODE(T1.LSTM_CD, 'ST', T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0),  T1.ONH_DT ) < SYSDATE
      --  AND     DECODE(T1.LSTM_CD, 'LT', T6.LST_EXP_DT                    , SYSDATE - 1) < SYSDATE
        AND     DECODE(T1.LSTM_CD, 'LT', DECODE(NVL(T1.MIN_ONH_DYS,0), 0, T6.LST_EXP_DT, T1.ONH_DT + NVL(T1.MIN_ONH_DYS,0)),SYSDATE -1) < SYSDATE
        AND     T2.BKG_NO           = T3.BKG_NO
        AND     T1.CRNT_YD_CD       = T3.POL_YD_CD
        AND     T3.VSL_CD           = T4.VSL_CD
        AND     T3.SKD_VOY_NO       = T4.SKD_VOY_NO
        AND     T3.SKD_DIR_CD       = T4.SKD_DIR_CD
        AND     T4.VSL_CD           = T5.VSL_CD
        AND     T4.SKD_VOY_NO       = T5.SKD_VOY_NO
        AND     T4.SKD_DIR_CD       = T5.SKD_DIR_CD
        AND     T3.POD_CD           = T5.VPS_PORT_CD
        AND     T3.POD_CLPT_IND_SEQ = T5.CLPT_IND_SEQ
        AND     'S'                <> NVL(T5.SKD_CNG_STS_CD, 'N')
        AND     T2.DEL_CD           = T8.LOC_CD
        AND     T8.SCC_CD           = T9.SCC_CD
        AND     T6.VNDR_SEQ         = T10.VNDR_SEQ
#if (${port_cd} != '')
        AND     T2.POD_CD           = P_PORT_CD                                                                            -- Vessel Port
#end
#if (${slan_cd} != '')
        AND     T5.SLAN_CD          = P_VSL_SLAN_CD                                                                        -- Vessel Lane
#end
#if (${del_cd} != '')
        AND     T2.DEL_CD           = P_DEL_CD                                                                             -- Delivery SCC
#end
#if (${str_estm_dt} != '')
  #if (${estm_tp} == 'ETA')
        AND     T5.VPS_ETA_DT BETWEEN TO_DATE( REPLACE(P_STR_ESTM_DT,'-',''), 'YYYYMMDD') AND TO_DATE( REPLACE(P_END_ESTM_DT,'-','') , 'YYYYMMDD') + 0.99999   -- ETA

  #else
        AND     T5.VPS_ETD_DT BETWEEN TO_DATE( REPLACE(P_STR_ESTM_DT,'-',''),'YYYYMMDD') AND TO_DATE( REPLACE(P_END_ESTM_DT,'-',''), 'YYYYMMDD') + 0.99999   -- ETD
  #end
#end
#if (${vvd_cd} != '')
        AND     T4.VSL_CD           = SUBSTR(P_VVD_CD, 1, 4)                                                               -- VVD Code
        AND     T4.SKD_VOY_NO       = SUBSTR(P_VVD_CD, 5, 4)                                                               -- VVD Code
        AND     T4.SKD_DIR_CD       = SUBSTR(P_VVD_CD, 9, 1)                                                               -- VVD Code
#end
#if (${lstm_cd} != '')
        AND     T1.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
        '$key',
		#else
        '$key'
		#end
	#end
                      )
#end
#if (${cntr_tpsz_cd} != '')
        AND     T1.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
        '$key',
		#else
        '$key'
		#end
	#end
                      )
#end
#if (${cnmv_sts_cd} != '')
        AND     T1.CNMV_STS_CD IN (
    #foreach($key IN ${cnmv_sts_cd_seq})
		#if($velocityCount < $cnmv_sts_cd_seq.size())
        '$key',
		#else
        '$key'
		#end
	#end
                        )
#end
#if (${agmt_seq} != '')
        AND     T1.AGMT_CTY_CD = P_AGMT_CTY_CD
        AND     T1.AGMT_SEQ    = P_AGMT_SEQ
#end
#if (${vndr_seq} != '')
        AND     T10.VNDR_SEQ    = P_VNDR_SEQ
#end
#if (${used_dys} != '')
        AND     SYSDATE        > T1.ONH_DT + P_USED_DYS
#end
#if (${free_dys} != '')
        AND     T1.ONH_FREE_DYS > P_FREE_DYS
#end
#end
        )               T01,
        LSE_AGMT_RT     T02,
        TEMP_DROP01     T03
WHERE   1=1
AND     T01.AGMT_CTY_CD  = T02.AGMT_CTY_CD          (+)
AND     T01.AGMT_SEQ     = T02.AGMT_SEQ             (+)
AND     T01.SCC_CD       = T02.LOC_CD               (+)
AND     T01.CNTR_TPSZ_CD = T02.CNTR_TPSZ_CD         (+)
AND     'DOCV'           = T02.CNTR_RNTL_CHG_TP_CD  (+)
AND     T01.AGMT_CTY_CD  = T03.AGMT_CTY_CD          (+)
AND     T01.AGMT_SEQ     = T03.AGMT_SEQ             (+)
AND     T01.CNTR_NO      = T03.CNTR_NO              (+)
GROUP BY    T01.CNTR_NO ,   T01.CNMV_YR ,   T01.CNMV_ID_NO  ,    T01.BKG_NO ,    T01.CNTR_TPSZ_CD ,  T01.CNMV_STS_CD , T01.CNMV_DT     ,   T01.CRNT_YD_CD ,    T01.SCC_CD      ,
            T01.LCC_CD  ,   T01.RCC_CD  ,   T01.POD_CD      ,    T01.DEL_CD ,    T01.VSL_SLAN_CD  ,  T01.VSL_CD      , T01.SKD_VOY_NO  ,   T01.SKD_DIR_CD ,    T01.AGMT_CTY_CD ,
            T01.AGMT_SEQ,   T01.REF_NO  ,   T01.VNDR_SEQ    ,    T01.LSTM_CD ,   T01.ONH_FREE_DYS ,  T01.ONH_DT      , T01.MIN_ONH_DYS ,   T01.LOC_CLSS   ,
            T01.VNDR_ABBR_NM,               T01.VNDR_LGL_ENG_NM,                 NVL(T03.AHOLD_CNT, 0)               , NVL(T03.CNFM_CNT , 0),
            T03.OFFH_YD_CD, T03.OFFH_DUE_DT, T03.OFFH_SEQ, T03.RQST_RCC_CD, T03.OFFH_STS_CD, T03.OFFH_CNFM_DT, T03.OFFH_REF_NO, T03.RQST_OFC_CD, T03.SND_USR_ID, T03.CFM_USR_ID,
            T01.LSE_VNDR_URL, T01.FULL_FLG, T01.ONH_YD_CD, T01.USED_DAYS, T01.BL_NO, T01.POL_CD
)
SELECT    T11.SCC_CD
        , T11.CNTR_NO
        , T11.CNTR_NO                                   AS HOLD_NO
        , VNDR_SEQ
        , LSE_VNDR_URL
        , VNDR_ABBR_NM
        , VNDR_LGL_ENG_NM
        , T11.AGMT_CTY_CD || LPAD(T11.AGMT_SEQ, 6, '0') AS AGMT_NO
        , T11.AGMT_CTY_CD
        , T11.AGMT_SEQ
        , T11.LSTM_CD
        , T11.REF_NO
        , T11.CNTR_TPSZ_CD
        , T11.CRNT_YD_CD
        , T12.MTY_RTN_YD_CD
        , T11.OFFH_YD_CD
        , T11.ONH_YD_CD
        , T11.OFFH_DUE_DT
        , T11.CNMV_STS_CD                               AS MVMT_STS_CD
        , DECODE(T11.FULL_FLG, 'Y','F','M')             AS FULL_FLG
        , TO_CHAR(T11.CNMV_DT, 'YYYYMMDD')              AS CNMV_DT
        , TO_CHAR(T11.ONH_DT, 'YYYYMMDD')               AS ONH_DT
        , NVL(T11.MIN_ONH_DYS, 0)                       AS MIN_ONH_DYS
        , T11.ONH_FREE_DYS
        , T11.USED_DAYS
        , (
          SELECT  /*+ USE_NL( S02 S03 ) */
                  MNR_COMMON_PKG.MNR_GET_RPRCOST_FNC('U', T11.CNTR_NO)
          FROM    MNR_ORD_DTL   S02
                , MNR_ORD_HDR   S03
          WHERE   1=1
          AND     T11.CNTR_NO            = S02.EQ_NO
          AND     S02.MNR_ORD_OFC_CTY_CD = S03.MNR_ORD_OFC_CTY_CD
          AND     S02.MNR_ORD_SEQ        = S03.MNR_ORD_SEQ
          GROUP BY T11.CNTR_NO
          )                                              AS MNR_COST
        , T11.BKG_NO
        , T11.BL_NO
        , T11.POL_CD
        , POD_CD
        , DEL_CD
        , (
          SELECT  /*+ USE_NL( S1 S2 S3 ) ORDERED */
                  S3.EVNT_OFC_CD 
          FROM    BKG_CONTAINER S1,
                  BKG_DO_CNTR   S2,
                  BKG_DO_DTL    S3
          WHERE   1=1
          AND     S1.BKG_NO   = T11.BKG_NO
          AND     S1.CNTR_NO  = T11.CNTR_NO
          AND     S1.BKG_NO   = S2.BKG_NO      (+)
          AND     S1.CNTR_NO  = S2.CNTR_NO     (+)
          AND     S2.BKG_NO   = S3.BKG_NO      (+)
          AND     S2.RLSE_SEQ = S3.RLSE_SEQ    (+)
          AND     'R'         = S3.RLSE_STS_CD
          AND     ROWNUM      = 1
          )                                               AS EVNT_OFC_CD
       , (
         SELECT  /*+ INDEX (S01 XPKBKG_VVD) */
                 TO_CHAR(S02.VPS_ETD_DT, 'YYYYMMDD')
         FROM    BKG_VVD S01, VSK_VSL_PORT_SKD S02
         WHERE   1= 1
         AND     S01.BKG_NO           = T11.BKG_NO
         AND     S01.VSL_CD           = S02.VSL_CD      (+)
         AND     S01.SKD_VOY_NO       = S02.SKD_VOY_NO  (+)
         AND     S01.SKD_DIR_CD       = S02.SKD_DIR_CD  (+)
         AND     S01.POL_CD           = S02.VPS_PORT_CD (+)
         AND     S01.POL_CLPT_IND_SEQ = S02.CLPT_IND_SEQ(+)
         AND     ROWNUM               = 1
         )                                                AS POL_ETD_DT
      , (
         SELECT  /*+ INDEX_DESC (S01 XPKBKG_VVD) */
                 TO_CHAR(S02.VPS_ETA_DT, 'YYYYMMDD')
         FROM    BKG_VVD S01, VSK_VSL_PORT_SKD S02
         WHERE   1= 1
         AND     S01.BKG_NO           = T11.BKG_NO
         AND     S01.VSL_CD           = S02.VSL_CD      (+)
         AND     S01.SKD_VOY_NO       = S02.SKD_VOY_NO  (+)
         AND     S01.SKD_DIR_CD       = S02.SKD_DIR_CD  (+)
         AND     S01.POD_CD           = S02.VPS_PORT_CD (+)
         AND     S01.POD_CLPT_IND_SEQ = S02.CLPT_IND_SEQ(+)
         AND     ROWNUM               = 1
         )                                               AS POD_ETA_DT
        , T11.VSL_CD || T11.SKD_VOY_NO || T11.SKD_DIR_CD AS VVD_CD
        , T12.TRS_SO_NO
        , T12.TRS_WO_NO
        , T12.TRS_INV_NO
        , T12.TRS_SP_CD
        , T12.TRS_SP_NM
        , T12.OFFH_SEQ
        , CASE WHEN ( T12.RQST_RCC_CD IS NULL OR T12.RQST_RCC_CD = T11.RCC_CD ) THEN T12.OFFH_STS_CD -- NULL 이면 과거 REQUESTED DATA
               ELSE 'D'                                                                              -- REQUESTED OFFICE RCC CODE와 CURRENT RCC CODE가 다를 경우 CANCEL 처리
          END                                              AS OFFH_STS_CD
        , TO_CHAR(T12.OFFH_CNFM_DT, 'YYYYMMDD')            AS OFFH_CNFM_DT
        , T12.OFFH_REF_NO
        , T12.RQST_OFC_CD
        , T12.SND_USR_ID
        , T12.CFM_USR_ID
        , COMPLEX_PK
        , CASE WHEN LSTM_CD IN('OF', 'MI', 'SI') THEN TOT_QTY ELSE BAL_QTY END                                             AS REM_QTY
        , TOT_QTY
        , CFM_QTY
        , CASE WHEN BAL_QTY > TOT_QTY OR LSTM_CD IN('OF', 'MI', 'SI') THEN TOT_QTY - CFM_QTY ELSE BAL_QTY - CFM_QTY END    AS CNTR_QTY
FROM    (
        SELECT  T11.*                
                , COUNT(*) OVER (PARTITION BY T11.SCC_CD, T11.AGMT_CTY_CD, T11.AGMT_SEQ, T11.VNDR_SEQ, T11.LSTM_CD, T11.CNTR_TPSZ_CD)                    AS TOT_QTY
                , NVL(T11.AGMT_CHG_VAL - T11.DOL_PFMC, 0)                                                                                                AS BAL_QTY
                , NVL(SUM(T11.CNFM_CNT) OVER (PARTITION BY T11.SCC_CD, T11.AGMT_CTY_CD, T11.AGMT_SEQ, T11.VNDR_SEQ, T11.LSTM_CD, T11.CNTR_TPSZ_CD)  , 0) AS CFM_QTY
                , NVL(SUM(T11.AHOLD_CNT) OVER (PARTITION BY T11.SCC_CD, T11.AGMT_CTY_CD, T11.AGMT_SEQ, T11.VNDR_SEQ, T11.LSTM_CD, T11.CNTR_TPSZ_CD) , 0) AS HLD_QTY
        FROM    TEMP_DROP02 T11
        ) T11
      , TEMP_DROP01 T12
WHERE   T11.CNTR_NO = T12.CNTR_NO (+)
    #if (${cntr_list} != '')
	AND	T11.CNTR_NO IN (
		#foreach ($key IN ${cntr_list})
			#if($velocityCount < $cntr_list.size())
				'$key',
			#else
				'$key'
			#end
		#end			  
	)
    #end  
AND     EXISTS  (
                SELECT  'X'
                FROM    TEMP_DROP01 S
                WHERE   S.CNTR_NO   = T11.CNTR_NO
                )			]]></sql>
			<params>
				<param name="loc_tp" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="estm_tp" type="12" value="" out="N"/>
				<param name="str_estm_dt" type="12" value="" out="N"/>
				<param name="end_estm_dt" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd" type="12" value="" out="N"/>
				<param name="cnmv_sts_cd" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="vndr_seq" type="2" value="" out="N"/>
				<param name="used_dys" type="2" value="" out="N"/>
				<param name="free_dys" type="2" value="" out="N"/>
				<param name="min_onh_dys_tp" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
