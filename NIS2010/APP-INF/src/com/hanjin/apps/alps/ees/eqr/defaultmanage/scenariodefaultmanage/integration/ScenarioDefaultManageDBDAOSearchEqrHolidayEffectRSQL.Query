<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ScenarioDefaultManageDBDAOSearchEqrHolidayEffectRSQL">
			<desc><![CDATA[Holiday Effect 정보출력

<Change History>
1	2010.01.20	Lee ByoungHun	PRD_HOLIDAY  --> DMT_HOLIDAY 테이블 변경]]></desc>
			<sql><![CDATA[
SELECT
	A.HOL_YR
	, A.CNT_CD
	, A.CNT_NM
	, A.ST_DT
	, TO_CHAR(TO_DATE(A.ST_DT,'YYYYMMDD'),'DY','NLS_DATE_LANGUAGE=AMERICAN') ST_DY
	, A.END_DT,TO_CHAR(TO_DATE(A.END_DT,'YYYYMMDD'),'DY','NLS_DATE_LANGUAGE=AMERICAN') END_DY
	, (TO_DATE(A.END_DT,'YYYYMMDD') - TO_DATE(A.ST_DT,'YYYYMMDD') + 1)||'Days'  DURATION
	, (
		SELECT
			PLN_WK
		FROM
			EQR_WK_PRD
		WHERE
			WK_ST_DT <= A.ST_DT AND WK_END_DT >= A.ST_DT	) || '-' ||
	  (
		SELECT
			PLN_WK
		FROM
			EQR_WK_PRD
		WHERE
			WK_ST_DT <= A.END_DT AND WK_END_DT >= A.END_DT
	  ) WEEK
	, (
		SELECT
			'1'
		FROM
			DUAL
		WHERE
			EXISTS (
					SELECT
						'1'
					FROM
						EQR_HOLIDAY
					WHERE
						HOL_YR = A.HOL_YR
						AND CNT_CD = A.CNT_CD
						AND RCC_DIV_FLG = A.RCC_DIV_FLG
						AND ST_DT = A.ST_DT
          			)
	  ) APPLY
	, A.HOL_NM, A.HOL_RMK
	, A.RCC_DIV_FLG
	,  A.DELT_FLG
FROM
	(
		SELECT
			HOL_YR
			, CNT_CD
			, CNT_NM
			, RCC_DIV_FLG
			, ST_DT
			, END_DT
			, HOL_NM
			, HOL_RMK
           	, DELT_FLG
			, CRE_USR_ID
			, CRE_DT
			, UPD_USR_ID
			, UPD_DT
		FROM (
            SELECT
                PRD.HOL_YR
                ,PRD.CNT_CD
                ,MDM.CNT_NM
                ,'N' RCC_DIV_FLG
                ,TO_CHAR(PRD.ST_DT, 'YYYYMMDD') ST_DT
                ,TO_CHAR(PRD.END_DT, 'YYYYMMDD') END_DT
                ,PRD.HOL_DESC HOL_NM
                ,'' HOL_RMK
                ,'N' DELT_FLG
                ,MAX(PRD.CRE_USR_ID) CRE_USR_ID
                ,MAX(PRD.CRE_DT) CRE_DT
                ,MAX(PRD.UPD_USR_ID) UPD_USR_ID
                ,MAX(PRD.UPD_DT) UPD_DT
            FROM (
                SELECT
                    HOL_YR
                    ,CNT_CD
                    ,HOL_DESC
                    ,HOL_DT
                    ,NVL(ST_DT, LAG(ST_DT) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT)) AS ST_DT
                    ,NVL(END_DT, LEAD(END_DT) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT)) AS END_DT
                    ,CRE_USR_ID
                    ,CRE_DT
                    ,UPD_USR_ID
                    ,UPD_DT
                FROM (
                    SELECT
                        HOL_YR
                        ,CNT_CD
                        ,HOL_DESC
                        ,HOL_DT
                        ,CASE WHEN IS_CONTINUE = 'X' THEN HOL_DT
                        ELSE
                            CASE
                            WHEN HOL_YR <> PRE_HOL_YR OR CNT_CD <> PRE_CNT_CD OR HOL_DESC <> PRE_HOL_DESC OR HOL_DT - PRE_HOL_DT <> 1 THEN HOL_DT
                            ELSE NULL
                            END
                        END AS ST_DT
                        ,CASE WHEN IS_CONTINUE = 'X' THEN HOL_DT
                        ELSE
                            CASE WHEN HOL_YR <> NEXT_HOL_YR OR CNT_CD <> NEXT_CNT_CD OR HOL_DESC <> NEXT_HOL_DESC OR NEXT_HOL_DT - HOL_DT <> 1 THEN HOL_DT
                            ELSE NULL
                            END
                        END AS END_DT
                        ,CRE_USR_ID
                        ,CRE_DT
                        ,UPD_USR_ID
                        ,UPD_DT
                    FROM (
                        SELECT
                            HOL_YR
                            ,CNT_CD
                            ,HOL_DESC
                            ,HOL_DT
                            ,PRE_HOL_YR
                            ,NEXT_HOL_YR
                            ,PRE_CNT_CD
                            ,NEXT_CNT_CD
                            ,PRE_HOL_DESC
                            ,NEXT_HOL_DESC
                            ,PRE_HOL_DT
                            ,NEXT_HOL_DT
                            ,DECODE(NEXT_HOL_DT - HOL_DT, 1, 'O', DECODE(HOL_DT - PRE_HOL_DT, 1, 'O', 'X')) AS IS_CONTINUE
                            ,CRE_USR_ID
                            ,CRE_DT
                            ,UPD_USR_ID
                            ,UPD_DT
                        FROM (
                            SELECT
                                HOL_YR
                                ,CNT_CD
                                ,HOL_DESC
                                ,HOL_DT
                                ,LAG(HOL_YR) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS PRE_HOL_YR
                                ,LEAD(HOL_YR) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS NEXT_HOL_YR
                                ,LAG(CNT_CD) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS PRE_CNT_CD
                                ,LEAD(CNT_CD) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS NEXT_CNT_CD
                                ,LAG(HOL_DESC) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS PRE_HOL_DESC
                                ,LEAD(HOL_DESC) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS NEXT_HOL_DESC
                                ,LAG(HOL_DT) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS PRE_HOL_DT
                                ,LEAD(HOL_DT) OVER (ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT) AS NEXT_HOL_DT
                                ,CRE_USR_ID
                                ,CRE_DT
                                ,UPD_USR_ID
                                ,UPD_DT
                            FROM DMT_HOLIDAY
                        )
                    )
                    ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT
                )
                WHERE ST_DT IS NOT NULL OR END_DT IS NOT NULL
                ORDER BY HOL_YR, CNT_CD, HOL_DESC, HOL_DT
            ) PRD,
              MDM_COUNTRY MDM
            WHERE PRD.CNT_CD = MDM.CNT_CD
            GROUP BY PRD.HOL_YR, PRD.CNT_CD, MDM.CNT_NM, PRD.HOL_DESC, PRD.ST_DT, PRD.END_DT
            ORDER BY PRD.HOL_YR, PRD.CNT_CD, MDM.CNT_NM, PRD.HOL_DESC, PRD.ST_DT, PRD.END_DT
		)
	) A
	, EQR_HOLIDAY  B
WHERE
	A.HOL_YR = B.HOL_YR(+)
	AND A.CNT_CD = B.CNT_CD(+)
	AND A.RCC_DIV_FLG = B.RCC_DIV_FLG(+)
	AND A.ST_DT = B.ST_DT(+)
#if (${country} != '')
	AND A.CNT_CD = @[country]
#end
	AND A.ST_DT BETWEEN (
	                        SELECT
	                            WK_ST_DT
	                        FROM
	                            EQR_WK_PRD
	                        WHERE
	                            PLN_YR||PLN_WK = @[stpln]
	                    ) AND (
	                        SELECT
	                            WK_END_DT
	                        FROM
	                            EQR_WK_PRD
	                        WHERE
	                            PLN_YR||PLN_WK = @[endpln]
	)
#if (${holidays} != '')
	AND (A.END_DT - A.ST_DT + 1) >= @[holidays]
#end			]]></sql>
			<params>
				<param name="country" type="12" value="" out="N"/>
				<param name="stpln" type="12" value="" out="N"/>
				<param name="endpln" type="12" value="" out="N"/>
				<param name="holidays" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
