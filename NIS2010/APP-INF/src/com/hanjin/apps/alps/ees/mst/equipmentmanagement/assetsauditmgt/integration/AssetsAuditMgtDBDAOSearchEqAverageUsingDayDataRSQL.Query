<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AssetsAuditMgtDBDAOSearchEqAverageUsingDayDataRSQL">
			<desc><![CDATA[SearchEqAverageUsingDayData
2010.10.25 남궁진호 [CHM-201006645-01] Container Average Using Days 조회시 ST Term 추가  

2011.06.13 나상보 [CHM-201111466-01] [MST] MDM에 R9 등록에 따른 추가 업무 진행 요청
]]></desc>
			<sql><![CDATA[
WITH PARAM
AS (
SELECT
    @[eq_knd_cd]        EQ_KND_CD
   ,@[report_type]      REPORT_TYPE
   ,@[lstm_cd]          LSTM_CD   
   ,@[cntr_tpsz_cd]     CNTR_TPSZ_CD 
   ,@[vndr_abbr_nm]     VNDR_ABBR_NM
   ,@[man_year]         MAN_YEAR
   ,@[cntr_tpsz_cd1]    CNTR_TPSZ_CD1
   ,@[cntr_tpsz_cd2]    CNTR_TPSZ_CD2
   ,@[cntr_tpsz_cd3]    CNTR_TPSZ_CD3
   ,@[cntr_tpsz_cd4]    CNTR_TPSZ_CD4
   ,@[cntr_tpsz_cd5]    CNTR_TPSZ_CD5
   ,@[cntr_tpsz_cd6]    CNTR_TPSZ_CD6
   ,@[cntr_tpsz_cd7]    CNTR_TPSZ_CD7
   ,@[cntr_tpsz_cd8]    CNTR_TPSZ_CD8
   ,@[cntr_tpsz_cd9]    CNTR_TPSZ_CD9
   ,@[cntr_tpsz_cd10]   CNTR_TPSZ_CD10
   ,@[cntr_tpsz_cd11]   CNTR_TPSZ_CD11
   ,@[cntr_tpsz_cd12]   CNTR_TPSZ_CD12
   ,@[cntr_tpsz_cd13]   CNTR_TPSZ_CD13
   ,@[cntr_tpsz_cd14]   CNTR_TPSZ_CD14
   ,@[cntr_tpsz_cd15]   CNTR_TPSZ_CD15
   ,@[cntr_tpsz_cd16]   CNTR_TPSZ_CD16
   ,@[cntr_tpsz_cd17]   CNTR_TPSZ_CD17
   ,@[cntr_tpsz_cd18]   CNTR_TPSZ_CD18
   ,@[cntr_tpsz_cd19]   CNTR_TPSZ_CD19
   ,@[cntr_tpsz_cd20]   CNTR_TPSZ_CD20
   ,@[cntr_tpsz_cd21]   CNTR_TPSZ_CD21
   ,@[cntr_tpsz_cd22]   CNTR_TPSZ_CD22
   ,@[cntr_tpsz_cd23]   CNTR_TPSZ_CD23
   ,@[cntr_tpsz_cd24]   CNTR_TPSZ_CD24
   ,@[cntr_tpsz_cd25]   CNTR_TPSZ_CD25
   ,@[cntr_tpsz_cd26]   CNTR_TPSZ_CD26
   ,@[cntr_tpsz_cd27]   CNTR_TPSZ_CD27
   ,@[cntr_tpsz_cd28]   CNTR_TPSZ_CD28
   ,@[cntr_tpsz_cd29]   CNTR_TPSZ_CD29
   ,@[cntr_tpsz_cd30]   CNTR_TPSZ_CD30
FROM   DUAL
), LV_EQ_USING_DAY3 AS
(
SELECT GRP_ID,
        LSTM_CD,MAN_YEAR,MAN,
        (SELECT V.VNDR_ABBR_NM
         FROM   MDM_VENDOR V
         WHERE  MAN = V.VNDR_SEQ) MAN_NM,
         SEQ, DIV,
        (QTY1+QTY2+QTY3+QTY4+QTY5+QTY6+QTY7+QTY8+QTY9+QTY10+QTY11+QTY12+QTY13+QTY14+QTY15+QTY16+QTY17+QTY18+QTY19+QTY20+QTY21+QTY22+QTY23+QTY24+QTY25+QTY26+QTY27+QTY28+QTY29+QTY30) QTY0,
        QTY1,QTY2,QTY3,QTY4,QTY5,QTY6,QTY7,QTY8,QTY9,QTY10,QTY11,QTY12,QTY13,QTY14,QTY15,QTY16,QTY17,QTY18,QTY19,QTY20,QTY21,QTY22,QTY23,QTY24,QTY25,QTY26,QTY27,QTY28,QTY29,QTY30
FROM 
(
    SELECT
       GROUPING(A.LSTM_CD) GRP_ID,
        A.LSTM_CD, A.MAN_YEAR, A.MAN,
        B.SEQ,
        DECODE(B.SEQ, 1, 'Volume', 2, 'Average', 3, '') DIV,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD1  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD1  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD1  ,USING_DAY,0)) ,0)
        END)
        END QTY1,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD2  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD2  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD2  ,USING_DAY,0)) ,0)
        END)
        END QTY2,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD3  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD3  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD3  ,USING_DAY,0)) ,0)
        END)
        END QTY3,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD4  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD4  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD4  ,USING_DAY,0)) ,0)
        END)
        END QTY4,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD5  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD5  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD5  ,USING_DAY,0)) ,0)
        END)
        END QTY5,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD6  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD6  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD6  ,USING_DAY,0)) ,0)
        END)
        END QTY6,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD7  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD7  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD7  ,USING_DAY,0)) ,0)
        END)
        END QTY7,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD8  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD8  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD8  ,USING_DAY,0)) ,0)
        END)
        END QTY8,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD9  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD9  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD9  ,USING_DAY,0)) ,0)
        END)
        END QTY9,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD10  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD10  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD10  ,USING_DAY,0)) ,0)
        END)
        END QTY10,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD11  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD11  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD11  ,USING_DAY,0)) ,0)
        END)
        END QTY11,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD12  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD12  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD12  ,USING_DAY,0)) ,0)
        END)
        END QTY12,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD13  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD13  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD13  ,USING_DAY,0)) ,0)
        END)
        END QTY13,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD14  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD14  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD14  ,USING_DAY,0)) ,0)
        END)
        END QTY14,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD15  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD15  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD15  ,USING_DAY,0)) ,0)
        END)
        END QTY15,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD16  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD16  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD16  ,USING_DAY,0)) ,0)
        END)
        END QTY16,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD17  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD17  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD17  ,USING_DAY,0)) ,0)
        END)
        END QTY17,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD18  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD18  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD18  ,USING_DAY,0)) ,0)
        END)
        END QTY18,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD19  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD19  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD19  ,USING_DAY,0)) ,0)
        END)
        END QTY19,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD20  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD20  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD20  ,USING_DAY,0)) ,0)
        END)
        END QTY20,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD21  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD21  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD21  ,USING_DAY,0)) ,0)
        END)
        END QTY21,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD22  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD22  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD22  ,USING_DAY,0)) ,0)
        END)
        END QTY22,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD23  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD23  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD23  ,USING_DAY,0)) ,0)
        END)
        END QTY23,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD24  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD24  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD24  ,USING_DAY,0)) ,0)
        END)
        END QTY24,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD25  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD25  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD25  ,USING_DAY,0)) ,0)
        END)
        END QTY25,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD26  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD26  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD26  ,USING_DAY,0)) ,0)
        END)
        END QTY26,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD27  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD27  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD27  ,USING_DAY,0)) ,0)
        END)
        END QTY27,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD28  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD28  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD28  ,USING_DAY,0)) ,0)
        END)
        END QTY28,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD29  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD29  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD29  ,USING_DAY,0)) ,0)
        END)
        END QTY29,
        CASE WHEN  B.SEQ=1
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD30  ,QTY,0)),0)
        ELSE  (CASE WHEN  B.SEQ=2
        THEN  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD30  ,ROUND(USING_DAY/QTY),0)) ,0)
        ELSE  NVL(SUM(DECODE(A.CNTR_TPSZ_CD,P.CNTR_TPSZ_CD30  ,USING_DAY,0)) ,0)
        END)
        END QTY30
    FROM    PARAM P, 
         (
#if (${eq_knd_cd} == 'U')            
          SELECT  A.LSTM_CD,TO_CHAR(DECODE(A.LSTM_CD, 'LT', A.ONH_DT,'ST', A.ONH_DT, A.MFT_DT),'YYYY') MAN_YEAR, NVL(A.MFTR_VNDR_SEQ,0) MAN,
                  A.CNTR_TPSZ_CD CNTR_TPSZ_CD,
                  COUNT(A.CNTR_TPSZ_CD) QTY,
                  SUM(DECODE(INSTR('LSO,SLD,TLL,DON,SCR,DIO,SRO',A.CNTR_STS_CD),0,TRUNC(SYSDATE),TRUNC(A.CNMV_DT))  - TRUNC(DECODE(A.LSTM_CD, 'LT', A.ONH_DT, 'ST', A.ONH_DT, A.MFT_DT))+1) USING_DAY
          FROM  MST_CONTAINER A
          WHERE 1 = 1
          #if (${report_type} == 'O')
          AND  (A.ACIAC_DIV_CD = 'A' OR A.CNTR_STS_CD IN('SBO','MUO')) 
          #elseif (${report_type} == 'X')
          AND  A.CNTR_STS_CD IN('LSO','SLD','TLL','DON','SCR','DIO','SRO') 
          #end
          #if (${lstm_cd} != '' && ${lstm_cd} != 'ALL')
          AND   A.LSTM_CD  IN ( 
          #foreach($cd in ${vel_lstm_cd})  
             '$cd',  
          #end  
          '')
          #end
          #if (${lstm_cd} == 'ALL' || ${lstm_cd} == '')
          AND   A.LSTM_CD  IN ('OW','LP','OL','LT','ST')
          #end
          #if (${cntr_tpsz_cd} != '' && ${cntr_tpsz_cd} != 'ALL')
          AND   A.CNTR_TPSZ_CD  IN ( 
          #foreach($cd in ${vel_cntr_tpsz_cd})  
            '$cd',  
          #end  
          '') 
          #end
          #if (${vndr_abbr_nm} != '' && ${vndr_abbr_nm} != 'ALL')
          AND   A.MFTR_VNDR_SEQ  IN ( 
          #foreach($cd in ${vel_vndr_abbr_nm})  
            '$cd',  
          #end  
          '') 
          #end
          #if (${man_year} != '' && ${man_year} != 'ALL')
          AND   TO_CHAR(A.MFT_DT,'YYYY')  IN ( 
          #foreach($cd in ${vel_man_year})  
            '$cd',  
          #end  
          '') 
          #end
          GROUP BY  A.LSTM_CD,TO_CHAR(DECODE(A.LSTM_CD, 'LT', A.ONH_DT, 'ST', A.ONH_DT, A.MFT_DT),'YYYY'),NVL(A.MFTR_VNDR_SEQ,0),A.CNTR_TPSZ_CD
          ) A, 
#else 
         SELECT /*+ ORDERED USE_HASH(A B C P H)  */ 
                A.AGMT_LSTM_CD LSTM_CD,TO_CHAR(DECODE(A.AGMT_LSTM_CD, 'LT', A.ONH_DT, 'ST', A.ONH_DT, A.MFT_DT),'YYYY') MAN_YEAR ,NVL(B.VNDR_SEQ,0) MAN, 
                A.EQ_TPSZ_CD CNTR_TPSZ_CD,
                COUNT(A.EQ_TPSZ_CD) QTY,
                SUM(DECODE(INSTR('LSO,SLD,TLL,DON,SCR,DIO,SRO',H.EQ_ASET_STS_CD),0,TRUNC(SYSDATE),TRUNC(H.STS_EVNT_DT))
					- TRUNC(DECODE(A.AGMT_LSTM_CD, 'LT', A.ONH_DT, 'ST', A.ONH_DT, A.MFT_DT))+1) USING_DAY
         FROM   CGM_EQUIPMENT A, CGM_EQ_SPEC B, MDM_VENDOR C, PARAM P, CGM_EQ_STS_HIS H
         WHERE 1=1
         AND  A.EQ_KND_CD = P.EQ_KND_CD
         AND  A.EQ_NO = H.EQ_NO
         AND  A.EQ_STS_SEQ = H.EQ_STS_SEQ
         #if (${report_type} == 'O')
         AND  H.EQ_ASET_STS_CD IN('SBO','MUO','OWN','SBI','MUI','SRI','FND','LSI') 
         #elseif (${report_type} == 'X')
         AND  H.EQ_ASET_STS_CD IN('LSO', 'SLD','TLL','DON','SCR','DIO','SRO') 
         #end
         #if (${lstm_cd} != '' && ${lstm_cd} != 'ALL')
         AND   A.AGMT_LSTM_CD  IN ( 
         #foreach($cd in ${vel_lstm_cd})  
            '$cd',  
         #end  
         '')
         #end
         #if (${lstm_cd} == 'ALL' || ${lstm_cd} == '')
         AND   A.AGMT_LSTM_CD  IN ('OW','LP','OL','LT','ST')
         #end
         #if (${cntr_tpsz_cd} != '' && ${cntr_tpsz_cd} != 'ALL')
         AND   A.EQ_TPSZ_CD  IN ( 
         #foreach($cd in ${vel_cntr_tpsz_cd})  
            '$cd',  
         #end  
         '') 
         #end
         #if (${vndr_abbr_nm} != '' && ${vndr_abbr_nm} != 'ALL')
         AND   B.VNDR_SEQ  IN ( 
         #foreach($cd in ${vel_vndr_abbr_nm})  
            '$cd',  
         #end  
         '') 
         #end
         #if (${man_year} != '' && ${man_year} != 'ALL')
         AND   TO_CHAR(A.MFT_DT,'YYYY')  IN ( 
         #foreach($cd in ${vel_man_year})  
            '$cd',  
         #end  
         '') 
         #end
         AND   A.EQ_SPEC_NO = B.EQ_SPEC_NO(+)
         AND   A.EQ_KND_CD = B.EQ_KND_CD(+)
         AND   B.VNDR_SEQ = C.VNDR_SEQ(+)
         GROUP BY  A.AGMT_LSTM_CD,TO_CHAR(DECODE(A.AGMT_LSTM_CD, 'LT', A.ONH_DT, 'ST', A.ONH_DT, A.MFT_DT),'YYYY'),NVL(B.VNDR_SEQ,0),A.EQ_TPSZ_CD
         ) A,
#end
      (SELECT LEVEL SEQ  FROM DUAL CONNECT BY LEVEL <=3) B
  GROUP BY GROUPING SETS((B.SEQ,A.LSTM_CD, A.MAN_YEAR ,A.MAN),(B.SEQ))
    ORDER BY A.LSTM_CD, A.MAN_YEAR ,A.MAN,B.SEQ
    )
)
SELECT
    AAA.LSTM_CD LSTM_CD,
    NVL(MAN_YEAR,' ') MAN_YEAR,
    MAN,
    MAN_NM,
    SEQ,
    DIV,
    ROUND(QTY0) QTY0,
    QTY1,QTY2,QTY3,QTY4,QTY5,QTY6,QTY7,QTY8,QTY9,QTY10,QTY11,QTY12,QTY13,QTY14,QTY15,QTY16,QTY17,QTY18,QTY19,QTY20,QTY21,QTY22,QTY23,QTY24,QTY25,QTY26,QTY27,QTY28,QTY29,QTY30
FROM
(
-- DETAIL VOL,AVG
    SELECT GRP_ID,
        LSTM_CD,MAN_YEAR,MAN,MAN_NM,SEQ,DIV,
          DECODE( LAG (QTY0,1) OVER(PARTITION BY LSTM_CD,MAN_YEAR,MAN,MAN_NM ORDER BY LSTM_CD,MAN_YEAR,MAN,MAN_NM,SEQ), 0, 0,
                DECODE(SEQ, 2, LEAD(QTY0, 1) OVER(PARTITION BY LSTM_CD,MAN_YEAR,MAN,MAN_NM ORDER BY LSTM_CD,MAN_YEAR,MAN,MAN_NM,SEQ)/
                               LAG (QTY0, 1) OVER(PARTITION BY LSTM_CD,MAN_YEAR,MAN,MAN_NM ORDER BY LSTM_CD,MAN_YEAR,MAN,MAN_NM,SEQ) ,   
                QTY0)) AS QTY0,
        QTY1,QTY2,QTY3,QTY4,QTY5,QTY6,QTY7,QTY8,QTY9,QTY10,QTY11,QTY12,QTY13,QTY14,QTY15,QTY16,QTY17,QTY18,QTY19,QTY20,QTY21,QTY22,QTY23,QTY24,QTY25,QTY26,QTY27,QTY28,QTY29,QTY30
    FROM LV_EQ_USING_DAY3
    WHERE GRP_ID = 0
    UNION ALL
    -- TOTAL VOL
    SELECT GRP_ID,
        LSTM_CD,MAN_YEAR,MAN,MAN_NM,SEQ,DIV,
        ROUND(QTY0) QTY0,
        QTY1,QTY2,QTY3,QTY4,QTY5,QTY6,QTY7,QTY8,QTY9,QTY10,QTY11,QTY12,QTY13,QTY14,QTY15,QTY16,QTY17,QTY18,QTY19,QTY20,QTY21,QTY22,QTY23,QTY24,QTY25,QTY26,QTY27,QTY28,QTY29,QTY30
    FROM LV_EQ_USING_DAY3
    WHERE GRP_ID = 1
    AND   SEQ = 1
    UNION ALL
    -- TOTAL AVG
    SELECT A.GRP_ID,
        A.LSTM_CD,A.MAN_YEAR,A.MAN,A.MAN_NM,2 SEQ,'Average' DIV,
        DECODE(A.QTY0 ,0,0,ROUND(B.QTY0  / A.QTY0 )) QTY0,
        DECODE(A.QTY1 ,0,0,ROUND(B.QTY1  / A.QTY1 )) QTY1,
        DECODE(A.QTY2 ,0,0,ROUND(B.QTY2  / A.QTY2 )) QTY2,
        DECODE(A.QTY3 ,0,0,ROUND(B.QTY3  / A.QTY3 )) QTY3,
        DECODE(A.QTY4 ,0,0,ROUND(B.QTY4  / A.QTY4 )) QTY4,
        DECODE(A.QTY5 ,0,0,ROUND(B.QTY5  / A.QTY5 )) QTY5,
        DECODE(A.QTY6 ,0,0,ROUND(B.QTY6  / A.QTY6 )) QTY6,
        DECODE(A.QTY7 ,0,0,ROUND(B.QTY7  / A.QTY7 )) QTY7,
        DECODE(A.QTY8 ,0,0,ROUND(B.QTY8  / A.QTY8 )) QTY8,
        DECODE(A.QTY9 ,0,0,ROUND(B.QTY9  / A.QTY9 )) QTY9,
        DECODE(A.QTY10,0,0,ROUND(B.QTY10 / A.QTY10)) QTY10,
        DECODE(A.QTY11,0,0,ROUND(B.QTY11 / A.QTY11)) QTY11,
        DECODE(A.QTY12,0,0,ROUND(B.QTY12 / A.QTY12)) QTY12,
        DECODE(A.QTY13,0,0,ROUND(B.QTY13 / A.QTY13)) QTY13,
        DECODE(A.QTY14,0,0,ROUND(B.QTY14 / A.QTY14)) QTY14,
        DECODE(A.QTY15,0,0,ROUND(B.QTY15 / A.QTY15)) QTY15,
        DECODE(A.QTY16,0,0,ROUND(B.QTY16 / A.QTY16)) QTY16,
        DECODE(A.QTY17,0,0,ROUND(B.QTY17 / A.QTY17)) QTY17,
        DECODE(A.QTY18,0,0,ROUND(B.QTY18 / A.QTY18)) QTY18,
        DECODE(A.QTY19,0,0,ROUND(B.QTY19 / A.QTY19)) QTY19,
        DECODE(A.QTY20,0,0,ROUND(B.QTY20 / A.QTY20)) QTY20,
        DECODE(A.QTY21,0,0,ROUND(B.QTY21 / A.QTY21)) QTY21,
        DECODE(A.QTY22,0,0,ROUND(B.QTY22 / A.QTY22)) QTY22,
        DECODE(A.QTY23,0,0,ROUND(B.QTY23 / A.QTY23)) QTY23,
        DECODE(A.QTY24,0,0,ROUND(B.QTY24 / A.QTY24)) QTY24,
        DECODE(A.QTY25,0,0,ROUND(B.QTY25 / A.QTY25)) QTY25,
        DECODE(A.QTY26,0,0,ROUND(B.QTY26 / A.QTY26)) QTY26,
        DECODE(A.QTY27,0,0,ROUND(B.QTY27 / A.QTY27)) QTY27,
        DECODE(A.QTY28,0,0,ROUND(B.QTY28 / A.QTY28)) QTY28,
        DECODE(A.QTY29,0,0,ROUND(B.QTY29 / A.QTY29)) QTY29,
        DECODE(A.QTY30,0,0,ROUND(B.QTY30 / A.QTY30)) QTY30
    FROM  LV_EQ_USING_DAY3 A,LV_EQ_USING_DAY3 B
    WHERE A.GRP_ID = 1
    AND   A.SEQ    = 1
    AND   B.SEQ    = 3
    AND   A.GRP_ID = B.GRP_ID
    ) AAA,
    MST_LSE_TERM BBB
WHERE AAA.SEQ IN(1,2)
AND   AAA.LSTM_CD = BBB.LSTM_CD (+)
AND	  AAA.QTY0    > 0
ORDER BY BBB.DP_SEQ, AAA.MAN_YEAR, AAA.MAN, AAA.SEQ			]]></sql>
			<params>
				<param name="eq_knd_cd" type="12" value="" out="N"/>
				<param name="report_type" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd" type="12" value="" out="N"/>
				<param name="vndr_abbr_nm" type="12" value="" out="N"/>
				<param name="man_year" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd1" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd2" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd3" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd4" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd5" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd6" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd7" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd8" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd9" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd10" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd11" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd12" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd13" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd14" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd15" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd16" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd17" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd18" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd19" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd20" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd21" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd22" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd23" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd24" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd25" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd26" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd27" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd28" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd29" type="12" value="" out="N"/>
				<param name="cntr_tpsz_cd30" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
