<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PerformanceReportDBDAOsearchDisposalPFMCByOfficeListRSQL">
			<desc><![CDATA[Office별 계획대비 매각실적 현황목록을 조회합니다.
2011.03.03 남궁진호 [CHM-201108450-01] Disposal Plan의 분기별입력값을 월평균으로 변환하여 조회함]]></desc>
			<sql><![CDATA[
WITH TEMP_QUTA AS (
    SELECT  A.EQ_KND_CD, A.MNR_PLN_YR, A.MNR_PLN_GRP_NO, A.CTRL_OFC_CD, A.EQ_TPSZ_CD, 
            A.EQ_QTY, A.MNR_PLN_MON, NVL(B.CURR_CD, 'USD') AS CURR_CD, B.MNR_DISP_TRF_AMT AS TRF_AMT, 
            MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(A.MNR_PLN_MON, B.CURR_CD, 'USD', B.MNR_DISP_TRF_AMT) AS CAL_TRF_AMT,
            SUM(A.EQ_QTY) OVER() DISP_TOT,
            MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(A.CTRL_OFC_CD) AS RHQ_CD        
    FROM   (SELECT A.EQ_KND_CD,
                       A.MNR_PLN_YR,
                       A.MNR_GRP_TP_CD,
                       A.CTRL_OFC_CD,
                       A.EQ_TPSZ_CD,
                       A.EQ_QTY/3 AS EQ_QTY,
                       A.MNR_PLN_GRP_NO * 3 - B.TRF_GRP_SEQ AS MNR_PLN_GRP_NO,
                       A.MNR_PLN_YR||LTRIM(TO_CHAR(A.MNR_PLN_GRP_NO * 3 - B.TRF_GRP_SEQ, '00')) AS MNR_PLN_MON
                FROM   (SELECT A.EQ_KND_CD,
                               A.MNR_PLN_YR,
                               A.MNR_GRP_TP_CD,
                               A.MNR_PLN_GRP_NO,
                               B.CTRL_OFC_CD,
                               B.EQ_TPSZ_CD,
                               B.EQ_QTY
                        FROM   MNR_PLN_HDR A,
                               MNR_PLN_DTL B
                        WHERE  A.MNR_PLN_SEQ = B.MNR_PLN_SEQ
                        AND    A.MNR_PLN_OFC_CD != B.CTRL_OFC_CD
                        AND    A.MNR_GRP_TP_CD = 'DSP'
                        AND    A.MNR_PLN_FLG = 'Y' )A,
                       (SELECT LEVEL -1 AS TRF_GRP_SEQ
                        FROM   DUAL CONNECT BY LEVEL <= 3) B 
            ) A,
           (SELECT  A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.EQ_KND_CD, A.EQ_TPSZ_CD, A.CURR_CD, A.EQ_CTRL_OFC_CD, A.TRF_EFF_GRP_NO, 
                    AVG(A.MNR_DISP_TRF_AMT) AS MNR_DISP_TRF_AMT
            FROM   (SELECT  A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.EQ_KND_CD, A.EQ_TPSZ_CD,
                            A.LOC_CD, A.CURR_CD, A.MNR_DISP_TRF_AMT, A.EQ_CTRL_OFC_CD,   
                            A.TRF_EFF_QTR_NO * 3 - B.TRF_GRP_SEQ AS TRF_EFF_GRP_NO
                    FROM   (SELECT  A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.MNR_DISP_TRF_SEQ, A.EQ_KND_CD, A.EQ_TPSZ_CD, 
                                    A.LOC_CD, A.CURR_CD, A.MNR_DISP_TRF_AMT, A.MNR_TRF_RMK, A.CRE_OFC_CD, 
                                   (SELECT EQ_CTRL_OFC_CD  FROM MDM_LOCATION WHERE LOC_CD = A.LOC_CD) AS EQ_CTRL_OFC_CD            
                            FROM    MNR_DISP_TRF A                    
                            ) A,       
                           (SELECT LEVEL -1 AS TRF_GRP_SEQ  FROM DUAL  CONNECT BY LEVEL <= 3) B
                    ) A
            GROUP BY A.TRF_EFF_YR, A.TRF_EFF_QTR_NO, A.EQ_KND_CD, A.EQ_TPSZ_CD, A.CURR_CD, A.EQ_CTRL_OFC_CD, A.TRF_EFF_GRP_NO
            ) B
    WHERE   A.EQ_KND_CD = B.EQ_KND_CD(+)
    AND     A.MNR_PLN_YR = B.TRF_EFF_YR(+)
    AND     A.MNR_PLN_GRP_NO = B.TRF_EFF_GRP_NO(+)
    AND     A.CTRL_OFC_CD = B.EQ_CTRL_OFC_CD(+)
    AND     A.EQ_TPSZ_CD = B.EQ_TPSZ_CD(+)    
    AND     A.MNR_PLN_MON BETWEEN SUBSTR(@[p_str_evnt_dt],1,6) AND SUBSTR(@[p_end_evnt_dt],1,6)
#if (${p_eq_knd_cd} != '' )
    AND     A.EQ_KND_CD = @[p_eq_knd_cd]
#end
#if (${p_rhq_cd} != '' )
	AND     MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(A.CTRL_OFC_CD) = @[p_rhq_cd]
#end
#if (${p_ofc_cd} != '' )
	AND     A.CTRL_OFC_CD = @[p_ofc_cd]
#end
), TEMP_PFMC AS (
    SELECT  A.DISP_NO, B.DISP_SOLD_DT AS APRO_DT, A.EQ_KND_CD, A.RQST_OFC_CD, A.CURR_CD,
            MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(A.RQST_OFC_CD) AS RHQ_CD,
            B.DISP_DTL_SEQ, B.EQ_TPSZ_CD, B.DISP_QTY, B.PART_AMT, B.DISP_YD_CD, 
            MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(B.DISP_SOLD_DT, 'YYYYMM'), A.CURR_CD, 'USD', B.PART_AMT) AS CAL_PART_AMT,
            MNR_COMMON_PKG.MNR_CONV_PARTNER_CD_FNC(B.MNR_PRNR_SEQ, B.MNR_PRNR_CNT_CD) AS CUST_CD,
            TO_CHAR(B.DISP_SOLD_DT, 'YYYYMM') AS APRO_MON,
            SUM(B.DISP_QTY) OVER() DISP_TOT                                                        
    FROM    MNR_DISP_HDR A,
            MNR_DISP_DTL B
    WHERE   A.DISP_NO = B.DISP_NO
    AND     B.DISP_SOLD_DT IS NOT NULL  
    AND		B.DISP_SOLD_DT BETWEEN TO_DATE(@[p_str_evnt_dt],'YYYYMMDD') AND TO_DATE(@[p_end_evnt_dt],'YYYYMMDD')
#if (${p_eq_knd_cd} != '' )
    AND     A.EQ_KND_CD = @[p_eq_knd_cd]
#end
#if (${p_rhq_cd} != '' )
	AND     MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(A.RQST_OFC_CD) = @[p_rhq_cd]
#end
#if (${p_ofc_cd} != '' )
	AND     A.RQST_OFC_CD = @[p_ofc_cd]
#end
#if (${p_disp_tp_cd} != '' )
	AND     A.DISP_TP_CD = @[p_disp_tp_cd]
#end
#if (${p_disp_rsn_cd} != '' )
	AND     B.DISP_RSN_CD = @[p_disp_rsn_cd]
#end
#if (${p_cust_cd} != '')
	AND     B.MNR_PRNR_CNT_CD = SUBSTR(@[p_cust_cd],0,2)
	AND     B.MNR_PRNR_SEQ = SUBSTR(@[p_cust_cd],3,8)
#end
), TEMP_TPSZ AS (
    SELECT  EQ_KND_CD, EQ_TPSZ_CD, 
            ROW_NUMBER() OVER(PARTITION BY EQ_KND_CD ORDER BY DP_SEQ) AS RPT_DP_SEQ
    FROM   (SELECT  EQ_KND_CD, EQ_TPSZ_CD, DP_SEQ
            FROM    CGM_EQ_TP_SZ
            UNION ALL
            SELECT  'U' AS EQ_KND_CD, CNTR_TPSZ_CD, RPT_DP_SEQ   
            FROM    MDM_CNTR_TP_SZ
            )                            
), TEMP_SEQ AS (
    SELECT  LEVEL AS RSLT_TP_SEQ, 
            DECODE(LEVEL, 1,'QTY',2,'AMT',3,'AVG') AS RSLT_TP_NM  
    FROM    DUAL  CONNECT BY LEVEL <= 3            
)
SELECT  NVL(A.RHQ_CD, 'G.TTL') AS RHQ_CD,
        CASE WHEN A.RHQ_CD IS NULL THEN A.RHQ_CD ELSE NVL(A.RQST_OFC_CD, 'S.TTL') END RQST_OFC_CD, 
        NVL(A.CURR_CD, 'USD') AS CURR_CD, A.RSLT_TP_SEQ, A.RSLT_TP_NM,  
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP00, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP00, 0), '999,999,990.00')) END QUTA_TPSZ_DP00,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP00, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP00, 0), '999,999,990.00')) END PFMC_TPSZ_DP00,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP00, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP00,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP01, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP01, 0), '999,999,990.00')) END QUTA_TPSZ_DP01,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP01, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP01, 0), '999,999,990.00')) END PFMC_TPSZ_DP01,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP01, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP01,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP02, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP02, 0), '999,999,990.00')) END QUTA_TPSZ_DP02,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP02, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP02, 0), '999,999,990.00')) END PFMC_TPSZ_DP02,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP02, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP02,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP03, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP03, 0), '999,999,990.00')) END QUTA_TPSZ_DP03,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP03, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP03, 0), '999,999,990.00')) END PFMC_TPSZ_DP03,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP03, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP03,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP04, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP04, 0), '999,999,990.00')) END QUTA_TPSZ_DP04,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP04, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP04, 0), '999,999,990.00')) END PFMC_TPSZ_DP04,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP04, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP04,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP05, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP05, 0), '999,999,990.00')) END QUTA_TPSZ_DP05,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP05, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP05, 0), '999,999,990.00')) END PFMC_TPSZ_DP05,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP05, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP05,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP06, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP06, 0), '999,999,990.00')) END QUTA_TPSZ_DP06,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP06, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP06, 0), '999,999,990.00')) END PFMC_TPSZ_DP06,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP06, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP06,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP07, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP07, 0), '999,999,990.00')) END QUTA_TPSZ_DP07,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP07, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP07, 0), '999,999,990.00')) END PFMC_TPSZ_DP07,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP07, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP07,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP08, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP08, 0), '999,999,990.00')) END QUTA_TPSZ_DP08,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP08, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP08, 0), '999,999,990.00')) END PFMC_TPSZ_DP08,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP08, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP08,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP09, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP09, 0), '999,999,990.00')) END QUTA_TPSZ_DP09,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP09, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP09, 0), '999,999,990.00')) END PFMC_TPSZ_DP09,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP09, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP09,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP10, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP10, 0), '999,999,990.00')) END QUTA_TPSZ_DP10,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP10, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP10, 0), '999,999,990.00')) END PFMC_TPSZ_DP10,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP10, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP10,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP11, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP11, 0), '999,999,990.00')) END QUTA_TPSZ_DP11,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP11, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP11, 0), '999,999,990.00')) END PFMC_TPSZ_DP11,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP11, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP11,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP12, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP12, 0), '999,999,990.00')) END QUTA_TPSZ_DP12,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP12, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP12, 0), '999,999,990.00')) END PFMC_TPSZ_DP12,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP12, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP12,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP13, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP13, 0), '999,999,990.00')) END QUTA_TPSZ_DP13,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP13, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP13, 0), '999,999,990.00')) END PFMC_TPSZ_DP13,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP13, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP13,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP14, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP14, 0), '999,999,990.00')) END QUTA_TPSZ_DP14,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP14, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP14, 0), '999,999,990.00')) END PFMC_TPSZ_DP14,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP14, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP14,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP15, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP15, 0), '999,999,990.00')) END QUTA_TPSZ_DP15,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP15, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP15, 0), '999,999,990.00')) END PFMC_TPSZ_DP15,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP15, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP15,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP16, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP16, 0), '999,999,990.00')) END QUTA_TPSZ_DP16,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP16, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP16, 0), '999,999,990.00')) END PFMC_TPSZ_DP16,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP16, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP16,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP17, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP17, 0), '999,999,990.00')) END QUTA_TPSZ_DP17,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP17, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP17, 0), '999,999,990.00')) END PFMC_TPSZ_DP17,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP17, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP17,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP18, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP18, 0), '999,999,990.00')) END QUTA_TPSZ_DP18,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP18, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP18, 0), '999,999,990.00')) END PFMC_TPSZ_DP18,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP18, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP18,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP19, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP19, 0), '999,999,990.00')) END QUTA_TPSZ_DP19,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP19, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP19, 0), '999,999,990.00')) END PFMC_TPSZ_DP19,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP19, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP19,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP20, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP20, 0), '999,999,990.00')) END QUTA_TPSZ_DP20,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP20, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP20, 0), '999,999,990.00')) END PFMC_TPSZ_DP20,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP20, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP20,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP21, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP21, 0), '999,999,990.00')) END QUTA_TPSZ_DP21,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP21, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP21, 0), '999,999,990.00')) END PFMC_TPSZ_DP21,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP21, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP21,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP22, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP22, 0), '999,999,990.00')) END QUTA_TPSZ_DP22,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP22, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP22, 0), '999,999,990.00')) END PFMC_TPSZ_DP22,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP22, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP22,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP23, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP23, 0), '999,999,990.00')) END QUTA_TPSZ_DP23,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP23, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP23, 0), '999,999,990.00')) END PFMC_TPSZ_DP23,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP23, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP23,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP24, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP24, 0), '999,999,990.00')) END QUTA_TPSZ_DP24,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP24, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP24, 0), '999,999,990.00')) END PFMC_TPSZ_DP24,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP24, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP24,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP25, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP25, 0), '999,999,990.00')) END QUTA_TPSZ_DP25,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP25, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP25, 0), '999,999,990.00')) END PFMC_TPSZ_DP25,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP25, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP25,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP26, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP26, 0), '999,999,990.00')) END QUTA_TPSZ_DP26,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP26, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP26, 0), '999,999,990.00')) END PFMC_TPSZ_DP26,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP26, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP26,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP27, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP27, 0), '999,999,990.00')) END QUTA_TPSZ_DP27,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP27, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP27, 0), '999,999,990.00')) END PFMC_TPSZ_DP27,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP27, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP27,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP28, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP28, 0), '999,999,990.00')) END QUTA_TPSZ_DP28,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP28, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP28, 0), '999,999,990.00')) END PFMC_TPSZ_DP28,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP28, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP28,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP29, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP29, 0), '999,999,990.00')) END QUTA_TPSZ_DP29,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP29, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP29, 0), '999,999,990.00')) END PFMC_TPSZ_DP29,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP29, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP29,
        CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP30, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.QUTA_TPSZ_DP30, 0), '999,999,990.00')) END QUTA_TPSZ_DP30,
		CASE WHEN A.RSLT_TP_SEQ = 1 THEN LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP30, 0), '999,999,990'))
             ELSE LTRIM(TO_CHAR(NVL(A.PFMC_TPSZ_DP30, 0), '999,999,990.00')) END PFMC_TPSZ_DP30,
        LTRIM(TO_CHAR(NVL(A.RATO_TPSZ_DP30, 0), '999,990.00'))||'%' AS RATO_TPSZ_DP30                         
FROM   (SELECT  A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, A.RSLT_TP_SEQ, 
                MAX(A.RSLT_TP_NM) AS RSLT_TP_NM,
                MAX(A.QUTA_TPSZ_DP00) AS QUTA_TPSZ_DP00, MAX(A.PFMC_TPSZ_DP00) AS PFMC_TPSZ_DP00,
                MAX(A.QUTA_TPSZ_DP01) AS QUTA_TPSZ_DP01, MAX(A.PFMC_TPSZ_DP01) AS PFMC_TPSZ_DP01,
                MAX(A.QUTA_TPSZ_DP02) AS QUTA_TPSZ_DP02, MAX(A.PFMC_TPSZ_DP02) AS PFMC_TPSZ_DP02,
                MAX(A.QUTA_TPSZ_DP03) AS QUTA_TPSZ_DP03, MAX(A.PFMC_TPSZ_DP03) AS PFMC_TPSZ_DP03,
                MAX(A.QUTA_TPSZ_DP04) AS QUTA_TPSZ_DP04, MAX(A.PFMC_TPSZ_DP04) AS PFMC_TPSZ_DP04,
                MAX(A.QUTA_TPSZ_DP05) AS QUTA_TPSZ_DP05, MAX(A.PFMC_TPSZ_DP05) AS PFMC_TPSZ_DP05,
                MAX(A.QUTA_TPSZ_DP06) AS QUTA_TPSZ_DP06, MAX(A.PFMC_TPSZ_DP06) AS PFMC_TPSZ_DP06,
                MAX(A.QUTA_TPSZ_DP07) AS QUTA_TPSZ_DP07, MAX(A.PFMC_TPSZ_DP07) AS PFMC_TPSZ_DP07,
                MAX(A.QUTA_TPSZ_DP08) AS QUTA_TPSZ_DP08, MAX(A.PFMC_TPSZ_DP08) AS PFMC_TPSZ_DP08,
                MAX(A.QUTA_TPSZ_DP09) AS QUTA_TPSZ_DP09, MAX(A.PFMC_TPSZ_DP09) AS PFMC_TPSZ_DP09,
                MAX(A.QUTA_TPSZ_DP10) AS QUTA_TPSZ_DP10, MAX(A.PFMC_TPSZ_DP10) AS PFMC_TPSZ_DP10,
                MAX(A.QUTA_TPSZ_DP11) AS QUTA_TPSZ_DP11, MAX(A.PFMC_TPSZ_DP11) AS PFMC_TPSZ_DP11,
                MAX(A.QUTA_TPSZ_DP12) AS QUTA_TPSZ_DP12, MAX(A.PFMC_TPSZ_DP12) AS PFMC_TPSZ_DP12,
                MAX(A.QUTA_TPSZ_DP13) AS QUTA_TPSZ_DP13, MAX(A.PFMC_TPSZ_DP13) AS PFMC_TPSZ_DP13,
                MAX(A.QUTA_TPSZ_DP14) AS QUTA_TPSZ_DP14, MAX(A.PFMC_TPSZ_DP14) AS PFMC_TPSZ_DP14,
                MAX(A.QUTA_TPSZ_DP15) AS QUTA_TPSZ_DP15, MAX(A.PFMC_TPSZ_DP15) AS PFMC_TPSZ_DP15,
                MAX(A.QUTA_TPSZ_DP16) AS QUTA_TPSZ_DP16, MAX(A.PFMC_TPSZ_DP16) AS PFMC_TPSZ_DP16,
                MAX(A.QUTA_TPSZ_DP17) AS QUTA_TPSZ_DP17, MAX(A.PFMC_TPSZ_DP17) AS PFMC_TPSZ_DP17,
                MAX(A.QUTA_TPSZ_DP18) AS QUTA_TPSZ_DP18, MAX(A.PFMC_TPSZ_DP18) AS PFMC_TPSZ_DP18, 
                MAX(A.QUTA_TPSZ_DP19) AS QUTA_TPSZ_DP19, MAX(A.PFMC_TPSZ_DP19) AS PFMC_TPSZ_DP19,
                MAX(A.QUTA_TPSZ_DP20) AS QUTA_TPSZ_DP20, MAX(A.PFMC_TPSZ_DP20) AS PFMC_TPSZ_DP20,        
                MAX(A.QUTA_TPSZ_DP21) AS QUTA_TPSZ_DP21, MAX(A.PFMC_TPSZ_DP21) AS PFMC_TPSZ_DP21,
                MAX(A.QUTA_TPSZ_DP22) AS QUTA_TPSZ_DP22, MAX(A.PFMC_TPSZ_DP22) AS PFMC_TPSZ_DP22,
                MAX(A.QUTA_TPSZ_DP23) AS QUTA_TPSZ_DP23, MAX(A.PFMC_TPSZ_DP23) AS PFMC_TPSZ_DP23,
                MAX(A.QUTA_TPSZ_DP24) AS QUTA_TPSZ_DP24, MAX(A.PFMC_TPSZ_DP24) AS PFMC_TPSZ_DP24,
                MAX(A.QUTA_TPSZ_DP25) AS QUTA_TPSZ_DP25, MAX(A.PFMC_TPSZ_DP25) AS PFMC_TPSZ_DP25,
                MAX(A.QUTA_TPSZ_DP26) AS QUTA_TPSZ_DP26, MAX(A.PFMC_TPSZ_DP26) AS PFMC_TPSZ_DP26,
                MAX(A.QUTA_TPSZ_DP27) AS QUTA_TPSZ_DP27, MAX(A.PFMC_TPSZ_DP27) AS PFMC_TPSZ_DP27,
                MAX(A.QUTA_TPSZ_DP28) AS QUTA_TPSZ_DP28, MAX(A.PFMC_TPSZ_DP28) AS PFMC_TPSZ_DP28,
                MAX(A.QUTA_TPSZ_DP29) AS QUTA_TPSZ_DP29, MAX(A.PFMC_TPSZ_DP29) AS PFMC_TPSZ_DP29,
                MAX(A.QUTA_TPSZ_DP30) AS QUTA_TPSZ_DP30, MAX(A.PFMC_TPSZ_DP30) AS PFMC_TPSZ_DP30,
                CASE WHEN MAX(A.QUTA_TPSZ_DP00) > 0 THEN MAX(A.PFMC_TPSZ_DP00) / MAX(A.QUTA_TPSZ_DP00) * 100 END RATO_TPSZ_DP00,
                CASE WHEN MAX(A.QUTA_TPSZ_DP01) > 0 THEN MAX(A.PFMC_TPSZ_DP01) / MAX(A.QUTA_TPSZ_DP01) * 100 END RATO_TPSZ_DP01,                
                CASE WHEN MAX(A.QUTA_TPSZ_DP02) > 0 THEN MAX(A.PFMC_TPSZ_DP02) / MAX(A.QUTA_TPSZ_DP02) * 100 END RATO_TPSZ_DP02,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP03) > 0 THEN MAX(A.PFMC_TPSZ_DP03) / MAX(A.QUTA_TPSZ_DP03) * 100 END RATO_TPSZ_DP03,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP04) > 0 THEN MAX(A.PFMC_TPSZ_DP04) / MAX(A.QUTA_TPSZ_DP04) * 100 END RATO_TPSZ_DP04,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP05) > 0 THEN MAX(A.PFMC_TPSZ_DP05) / MAX(A.QUTA_TPSZ_DP05) * 100 END RATO_TPSZ_DP05,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP06) > 0 THEN MAX(A.PFMC_TPSZ_DP06) / MAX(A.QUTA_TPSZ_DP06) * 100 END RATO_TPSZ_DP06,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP07) > 0 THEN MAX(A.PFMC_TPSZ_DP07) / MAX(A.QUTA_TPSZ_DP07) * 100 END RATO_TPSZ_DP07,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP08) > 0 THEN MAX(A.PFMC_TPSZ_DP08) / MAX(A.QUTA_TPSZ_DP08) * 100 END RATO_TPSZ_DP08,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP09) > 0 THEN MAX(A.PFMC_TPSZ_DP09) / MAX(A.QUTA_TPSZ_DP09) * 100 END RATO_TPSZ_DP09,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP10) > 0 THEN MAX(A.PFMC_TPSZ_DP10) / MAX(A.QUTA_TPSZ_DP10) * 100 END RATO_TPSZ_DP10,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP11) > 0 THEN MAX(A.PFMC_TPSZ_DP11) / MAX(A.QUTA_TPSZ_DP11) * 100 END RATO_TPSZ_DP11,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP12) > 0 THEN MAX(A.PFMC_TPSZ_DP12) / MAX(A.QUTA_TPSZ_DP12) * 100 END RATO_TPSZ_DP12,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP13) > 0 THEN MAX(A.PFMC_TPSZ_DP13) / MAX(A.QUTA_TPSZ_DP13) * 100 END RATO_TPSZ_DP13,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP14) > 0 THEN MAX(A.PFMC_TPSZ_DP14) / MAX(A.QUTA_TPSZ_DP14) * 100 END RATO_TPSZ_DP14,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP15) > 0 THEN MAX(A.PFMC_TPSZ_DP15) / MAX(A.QUTA_TPSZ_DP15) * 100 END RATO_TPSZ_DP15,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP16) > 0 THEN MAX(A.PFMC_TPSZ_DP16) / MAX(A.QUTA_TPSZ_DP16) * 100 END RATO_TPSZ_DP16,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP17) > 0 THEN MAX(A.PFMC_TPSZ_DP17) / MAX(A.QUTA_TPSZ_DP17) * 100 END RATO_TPSZ_DP17,        
                CASE WHEN MAX(A.QUTA_TPSZ_DP18) > 0 THEN MAX(A.PFMC_TPSZ_DP18) / MAX(A.QUTA_TPSZ_DP18) * 100 END RATO_TPSZ_DP18,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP19) > 0 THEN MAX(A.PFMC_TPSZ_DP19) / MAX(A.QUTA_TPSZ_DP19) * 100 END RATO_TPSZ_DP19,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP20) > 0 THEN MAX(A.PFMC_TPSZ_DP20) / MAX(A.QUTA_TPSZ_DP20) * 100 END RATO_TPSZ_DP20,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP21) > 0 THEN MAX(A.PFMC_TPSZ_DP21) / MAX(A.QUTA_TPSZ_DP21) * 100 END RATO_TPSZ_DP21,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP22) > 0 THEN MAX(A.PFMC_TPSZ_DP22) / MAX(A.QUTA_TPSZ_DP22) * 100 END RATO_TPSZ_DP22,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP23) > 0 THEN MAX(A.PFMC_TPSZ_DP23) / MAX(A.QUTA_TPSZ_DP23) * 100 END RATO_TPSZ_DP23,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP24) > 0 THEN MAX(A.PFMC_TPSZ_DP24) / MAX(A.QUTA_TPSZ_DP24) * 100 END RATO_TPSZ_DP24,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP25) > 0 THEN MAX(A.PFMC_TPSZ_DP25) / MAX(A.QUTA_TPSZ_DP25) * 100 END RATO_TPSZ_DP25,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP26) > 0 THEN MAX(A.PFMC_TPSZ_DP26) / MAX(A.QUTA_TPSZ_DP26) * 100 END RATO_TPSZ_DP26,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP27) > 0 THEN MAX(A.PFMC_TPSZ_DP27) / MAX(A.QUTA_TPSZ_DP27) * 100 END RATO_TPSZ_DP27,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP28) > 0 THEN MAX(A.PFMC_TPSZ_DP28) / MAX(A.QUTA_TPSZ_DP28) * 100 END RATO_TPSZ_DP28,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP29) > 0 THEN MAX(A.PFMC_TPSZ_DP29) / MAX(A.QUTA_TPSZ_DP29) * 100 END RATO_TPSZ_DP29,         
                CASE WHEN MAX(A.QUTA_TPSZ_DP30) > 0 THEN MAX(A.PFMC_TPSZ_DP30) / MAX(A.QUTA_TPSZ_DP30) * 100 END RATO_TPSZ_DP30 
        FROM   (SELECT  A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, A.RSLT_GRP_NM, A.RSLT_TP_SEQ, A.RSLT_TP_NM,
                        A.QUTA_TPSZ_DP00, A.PFMC_TPSZ_DP00, A.QUTA_TPSZ_DP01, A.PFMC_TPSZ_DP01, A.QUTA_TPSZ_DP02, A.PFMC_TPSZ_DP02, 
                        A.QUTA_TPSZ_DP03, A.PFMC_TPSZ_DP03, A.QUTA_TPSZ_DP04, A.PFMC_TPSZ_DP04, A.QUTA_TPSZ_DP05, A.PFMC_TPSZ_DP05, 
                        A.QUTA_TPSZ_DP06, A.PFMC_TPSZ_DP06, A.QUTA_TPSZ_DP07, A.PFMC_TPSZ_DP07, A.QUTA_TPSZ_DP08, A.PFMC_TPSZ_DP08, 
                        A.QUTA_TPSZ_DP09, A.PFMC_TPSZ_DP09, A.QUTA_TPSZ_DP10, A.PFMC_TPSZ_DP10, A.QUTA_TPSZ_DP11, A.PFMC_TPSZ_DP11, 
                        A.QUTA_TPSZ_DP12, A.PFMC_TPSZ_DP12, A.QUTA_TPSZ_DP13, A.PFMC_TPSZ_DP13, A.QUTA_TPSZ_DP14, A.PFMC_TPSZ_DP14, 
                        A.QUTA_TPSZ_DP15, A.PFMC_TPSZ_DP15, A.QUTA_TPSZ_DP16, A.PFMC_TPSZ_DP16, A.QUTA_TPSZ_DP17, A.PFMC_TPSZ_DP17, 
                        A.QUTA_TPSZ_DP18, A.PFMC_TPSZ_DP18, A.QUTA_TPSZ_DP19, A.PFMC_TPSZ_DP19, A.QUTA_TPSZ_DP20, A.PFMC_TPSZ_DP20,         
                        A.QUTA_TPSZ_DP21, A.PFMC_TPSZ_DP21, A.QUTA_TPSZ_DP22, A.PFMC_TPSZ_DP22, A.QUTA_TPSZ_DP23, A.PFMC_TPSZ_DP23, 
                        A.QUTA_TPSZ_DP24, A.PFMC_TPSZ_DP24, A.QUTA_TPSZ_DP25, A.PFMC_TPSZ_DP25, A.QUTA_TPSZ_DP26, A.PFMC_TPSZ_DP26, 
                        A.QUTA_TPSZ_DP27, A.PFMC_TPSZ_DP27, A.QUTA_TPSZ_DP28, A.PFMC_TPSZ_DP28, A.QUTA_TPSZ_DP29, A.PFMC_TPSZ_DP29, 
                        A.QUTA_TPSZ_DP30, A.PFMC_TPSZ_DP30                
                FROM   (SELECT  A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, A.RSLT_GRP_NM, B.RSLT_TP_SEQ, B.RSLT_TP_NM,      
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP00, 2,A.AMT_DP00, 
                                     DECODE(A.QTY_DP00,0,0, A.AMT_DP00 / A.QTY_DP00)) END QUTA_TPSZ_DP00,                                                               
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP01, 2,A.AMT_DP01, 
                                     DECODE(A.QTY_DP01,0,0, A.AMT_DP01 / A.QTY_DP01)) END QUTA_TPSZ_DP01,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP02, 2,A.AMT_DP02, 
                                     DECODE(A.QTY_DP02,0,0, A.AMT_DP02 / A.QTY_DP02)) END QUTA_TPSZ_DP02,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP03, 2,A.AMT_DP03, 
                                     DECODE(A.QTY_DP03,0,0, A.AMT_DP03 / A.QTY_DP03)) END QUTA_TPSZ_DP03,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP04, 2,A.AMT_DP04, 
                                     DECODE(A.QTY_DP04,0,0, A.AMT_DP04 / A.QTY_DP04)) END QUTA_TPSZ_DP04,     
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP05, 2,A.AMT_DP05, 
                                     DECODE(A.QTY_DP05,0,0, A.AMT_DP05 / A.QTY_DP05)) END QUTA_TPSZ_DP05,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP06, 2,A.AMT_DP06, 
                                     DECODE(A.QTY_DP06,0,0, A.AMT_DP06 / A.QTY_DP06)) END QUTA_TPSZ_DP06,             
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP07, 2,A.AMT_DP07, 
                                     DECODE(A.QTY_DP07,0,0, A.AMT_DP07 / A.QTY_DP07)) END QUTA_TPSZ_DP07,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP08, 2,A.AMT_DP08, 
                                     DECODE(A.QTY_DP08,0,0, A.AMT_DP08 / A.QTY_DP08)) END QUTA_TPSZ_DP08,     
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP09, 2,A.AMT_DP09, 
                                     DECODE(A.QTY_DP09,0,0, A.AMT_DP09 / A.QTY_DP09)) END QUTA_TPSZ_DP09,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP10, 2,A.AMT_DP10, 
                                     DECODE(A.QTY_DP10,0,0, A.AMT_DP10 / A.QTY_DP10)) END QUTA_TPSZ_DP10,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP11, 2,A.AMT_DP11, 
                                     DECODE(A.QTY_DP11,0,0, A.AMT_DP11 / A.QTY_DP11)) END QUTA_TPSZ_DP11,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP12, 2,A.AMT_DP12, 
                                     DECODE(A.QTY_DP12,0,0, A.AMT_DP12 / A.QTY_DP12)) END QUTA_TPSZ_DP12,    
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP13, 2,A.AMT_DP13, 
                                     DECODE(A.QTY_DP13,0,0, A.AMT_DP13 / A.QTY_DP13)) END QUTA_TPSZ_DP13,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP14, 2,A.AMT_DP14, 
                                     DECODE(A.QTY_DP14,0,0, A.AMT_DP14 / A.QTY_DP14)) END QUTA_TPSZ_DP14,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP15, 2,A.AMT_DP15, 
                                     DECODE(A.QTY_DP15,0,0, A.AMT_DP15 / A.QTY_DP15)) END QUTA_TPSZ_DP15,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP16, 2,A.AMT_DP16, 
                                     DECODE(A.QTY_DP16,0,0, A.AMT_DP16 / A.QTY_DP16)) END QUTA_TPSZ_DP16,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP17, 2,A.AMT_DP17, 
                                     DECODE(A.QTY_DP17,0,0, A.AMT_DP17 / A.QTY_DP17)) END QUTA_TPSZ_DP17,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP18, 2,A.AMT_DP18, 
                                     DECODE(A.QTY_DP18,0,0, A.AMT_DP18 / A.QTY_DP18)) END QUTA_TPSZ_DP18,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP19, 2,A.AMT_DP19, 
                                     DECODE(A.QTY_DP19,0,0, A.AMT_DP19 / A.QTY_DP19)) END QUTA_TPSZ_DP19,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP20, 2,A.AMT_DP20, 
                                     DECODE(A.QTY_DP20,0,0, A.AMT_DP20 / A.QTY_DP20)) END QUTA_TPSZ_DP20,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP21, 2,A.AMT_DP21, 
                                     DECODE(A.QTY_DP21,0,0, A.AMT_DP21 / A.QTY_DP21)) END QUTA_TPSZ_DP21,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP22, 2,A.AMT_DP22, 
                                     DECODE(A.QTY_DP22,0,0, A.AMT_DP22 / A.QTY_DP22)) END QUTA_TPSZ_DP22,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP23, 2,A.AMT_DP23, 
                                     DECODE(A.QTY_DP23,0,0, A.AMT_DP23 / A.QTY_DP23)) END QUTA_TPSZ_DP23,                                           
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP24, 2,A.AMT_DP24, 
                                     DECODE(A.QTY_DP24,0,0, A.AMT_DP24 / A.QTY_DP24)) END QUTA_TPSZ_DP24,                                  
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP25, 2,A.AMT_DP25, 
                                     DECODE(A.QTY_DP25,0,0, A.AMT_DP25 / A.QTY_DP25)) END QUTA_TPSZ_DP25,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP26, 2,A.AMT_DP26, 
                                     DECODE(A.QTY_DP26,0,0, A.AMT_DP26 / A.QTY_DP26)) END QUTA_TPSZ_DP26,     
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP27, 2,A.AMT_DP27, 
                                     DECODE(A.QTY_DP27,0,0, A.AMT_DP27 / A.QTY_DP27)) END QUTA_TPSZ_DP27,     
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP28, 2,A.AMT_DP28, 
                                     DECODE(A.QTY_DP28,0,0, A.AMT_DP28 / A.QTY_DP28)) END QUTA_TPSZ_DP28,
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP29, 2,A.AMT_DP29, 
                                     DECODE(A.QTY_DP29,0,0, A.AMT_DP29 / A.QTY_DP29)) END QUTA_TPSZ_DP29,         
                                CASE WHEN A.RSLT_GRP_NM = 'QUTA' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP30, 2,A.AMT_DP30,
                                     DECODE(A.QTY_DP30,0,0, A.AMT_DP30 / A.QTY_DP30)) END QUTA_TPSZ_DP30,
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP00, 2,A.AMT_DP00, 
                                     DECODE(A.QTY_DP00,0,0, A.AMT_DP00 / A.QTY_DP00)) END PFMC_TPSZ_DP00,                                                                                                      
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP01, 2,A.AMT_DP01, 
                                     DECODE(A.QTY_DP01,0,0, A.AMT_DP01 / A.QTY_DP01)) END PFMC_TPSZ_DP01,                                 
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP02, 2,A.AMT_DP02, 
                                     DECODE(A.QTY_DP02,0,0, A.AMT_DP02 / A.QTY_DP02)) END PFMC_TPSZ_DP02,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP03, 2,A.AMT_DP03, 
                                     DECODE(A.QTY_DP03,0,0, A.AMT_DP03 / A.QTY_DP03)) END PFMC_TPSZ_DP03,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP04, 2,A.AMT_DP04, 
                                     DECODE(A.QTY_DP04,0,0, A.AMT_DP04 / A.QTY_DP04)) END PFMC_TPSZ_DP04,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP05, 2,A.AMT_DP05, 
                                     DECODE(A.QTY_DP05,0,0, A.AMT_DP05 / A.QTY_DP05)) END PFMC_TPSZ_DP05,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP06, 2,A.AMT_DP06, 
                                     DECODE(A.QTY_DP06,0,0, A.AMT_DP06 / A.QTY_DP06)) END PFMC_TPSZ_DP06,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP07, 2,A.AMT_DP07, 
                                     DECODE(A.QTY_DP07,0,0, A.AMT_DP07 / A.QTY_DP07)) END PFMC_TPSZ_DP07,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP08, 2,A.AMT_DP08, 
                                     DECODE(A.QTY_DP08,0,0, A.AMT_DP08 / A.QTY_DP08)) END PFMC_TPSZ_DP08,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP09, 2,A.AMT_DP09, 
                                     DECODE(A.QTY_DP09,0,0, A.AMT_DP09 / A.QTY_DP09)) END PFMC_TPSZ_DP09,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP10, 2,A.AMT_DP10, 
                                     DECODE(A.QTY_DP10,0,0, A.AMT_DP10 / A.QTY_DP10)) END PFMC_TPSZ_DP10,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP11, 2,A.AMT_DP11, 
                                     DECODE(A.QTY_DP11,0,0, A.AMT_DP11 / A.QTY_DP11)) END PFMC_TPSZ_DP11,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP12, 2,A.AMT_DP12, 
                                     DECODE(A.QTY_DP12,0,0, A.AMT_DP12 / A.QTY_DP12)) END PFMC_TPSZ_DP12,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP13, 2,A.AMT_DP13, 
                                     DECODE(A.QTY_DP13,0,0, A.AMT_DP13 / A.QTY_DP13)) END PFMC_TPSZ_DP13,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP14, 2,A.AMT_DP14, 
                                     DECODE(A.QTY_DP14,0,0, A.AMT_DP14 / A.QTY_DP14)) END PFMC_TPSZ_DP14,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP15, 2,A.AMT_DP15, 
                                     DECODE(A.QTY_DP15,0,0, A.AMT_DP15 / A.QTY_DP15)) END PFMC_TPSZ_DP15,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP16, 2,A.AMT_DP16, 
                                     DECODE(A.QTY_DP16,0,0, A.AMT_DP16 / A.QTY_DP16)) END PFMC_TPSZ_DP16,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP17, 2,A.AMT_DP17, 
                                     DECODE(A.QTY_DP17,0,0, A.AMT_DP17 / A.QTY_DP17)) END PFMC_TPSZ_DP17,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP18, 2,A.AMT_DP18, 
                                     DECODE(A.QTY_DP18,0,0, A.AMT_DP18 / A.QTY_DP18)) END PFMC_TPSZ_DP18,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP19, 2,A.AMT_DP19, 
                                     DECODE(A.QTY_DP19,0,0, A.AMT_DP19 / A.QTY_DP19)) END PFMC_TPSZ_DP19,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP20, 2,A.AMT_DP20, 
                                     DECODE(A.QTY_DP20,0,0, A.AMT_DP20 / A.QTY_DP20)) END PFMC_TPSZ_DP20,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP21, 2,A.AMT_DP21, 
                                     DECODE(A.QTY_DP21,0,0, A.AMT_DP21 / A.QTY_DP21)) END PFMC_TPSZ_DP21,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP22, 2,A.AMT_DP22, 
                                     DECODE(A.QTY_DP22,0,0, A.AMT_DP22 / A.QTY_DP22)) END PFMC_TPSZ_DP22,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP23, 2,A.AMT_DP23, 
                                     DECODE(A.QTY_DP23,0,0, A.AMT_DP23 / A.QTY_DP23)) END PFMC_TPSZ_DP23,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP24, 2,A.AMT_DP24, 
                                     DECODE(A.QTY_DP24,0,0, A.AMT_DP24 / A.QTY_DP24)) END PFMC_TPSZ_DP24,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP25, 2,A.AMT_DP25, 
                                     DECODE(A.QTY_DP25,0,0, A.AMT_DP25 / A.QTY_DP25)) END PFMC_TPSZ_DP25,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP26, 2,A.AMT_DP26, 
                                     DECODE(A.QTY_DP26,0,0, A.AMT_DP26 / A.QTY_DP26)) END PFMC_TPSZ_DP26,                            
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP27, 2,A.AMT_DP27, 
                                     DECODE(A.QTY_DP27,0,0, A.AMT_DP27 / A.QTY_DP27)) END PFMC_TPSZ_DP27,                                
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP28, 2,A.AMT_DP28, 
                                     DECODE(A.QTY_DP28,0,0, A.AMT_DP28 / A.QTY_DP28)) END PFMC_TPSZ_DP28,                        
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP29, 2,A.AMT_DP29, 
                                     DECODE(A.QTY_DP29,0,0, A.AMT_DP29 / A.QTY_DP29)) END PFMC_TPSZ_DP29,                                                                          
                                CASE WHEN A.RSLT_GRP_NM = 'PFMC' THEN DECODE(B.RSLT_TP_SEQ, 1, A.QTY_DP30, 2,A.AMT_DP30, 
                                     DECODE(A.QTY_DP30,0,0, A.AMT_DP30 / A.QTY_DP30)) END PFMC_TPSZ_DP30              
                        FROM   (SELECT  A.RSLT_GRP_NM, A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, A.QTY_DP00,  
                                        NVL2(A.CURR_CD, A.AMT_DP00, A.CAL_AMT_DP00) AS AMT_DP00,
                                        A.QTY_DP01, A.QTY_DP02, A.QTY_DP03, A.QTY_DP04, A.QTY_DP05, 
                                        A.QTY_DP06, A.QTY_DP07, A.QTY_DP08, A.QTY_DP09, A.QTY_DP10, 
                                        A.QTY_DP11, A.QTY_DP12, A.QTY_DP13, A.QTY_DP14, A.QTY_DP15, 
                                        A.QTY_DP16, A.QTY_DP17, A.QTY_DP18, A.QTY_DP19, A.QTY_DP20, 
                                        A.QTY_DP21, A.QTY_DP22, A.QTY_DP23, A.QTY_DP24, A.QTY_DP25, 
                                        A.QTY_DP26, A.QTY_DP27, A.QTY_DP28, A.QTY_DP29, A.QTY_DP30, 
                                        NVL2(A.CURR_CD, A.AMT_DP01, A.CAL_AMT_DP01) AS AMT_DP01,
                                        NVL2(A.CURR_CD, A.AMT_DP02, A.CAL_AMT_DP02) AS AMT_DP02,
                                        NVL2(A.CURR_CD, A.AMT_DP03, A.CAL_AMT_DP03) AS AMT_DP03,
                                        NVL2(A.CURR_CD, A.AMT_DP04, A.CAL_AMT_DP04) AS AMT_DP04,
                                        NVL2(A.CURR_CD, A.AMT_DP05, A.CAL_AMT_DP05) AS AMT_DP05,
                                        NVL2(A.CURR_CD, A.AMT_DP06, A.CAL_AMT_DP06) AS AMT_DP06,
                                        NVL2(A.CURR_CD, A.AMT_DP07, A.CAL_AMT_DP07) AS AMT_DP07,
                                        NVL2(A.CURR_CD, A.AMT_DP08, A.CAL_AMT_DP08) AS AMT_DP08,
                                        NVL2(A.CURR_CD, A.AMT_DP09, A.CAL_AMT_DP09) AS AMT_DP09,
                                        NVL2(A.CURR_CD, A.AMT_DP10, A.CAL_AMT_DP10) AS AMT_DP10,
                                        NVL2(A.CURR_CD, A.AMT_DP11, A.CAL_AMT_DP11) AS AMT_DP11,
                                        NVL2(A.CURR_CD, A.AMT_DP12, A.CAL_AMT_DP12) AS AMT_DP12,
                                        NVL2(A.CURR_CD, A.AMT_DP13, A.CAL_AMT_DP13) AS AMT_DP13,
                                        NVL2(A.CURR_CD, A.AMT_DP14, A.CAL_AMT_DP14) AS AMT_DP14,
                                        NVL2(A.CURR_CD, A.AMT_DP15, A.CAL_AMT_DP15) AS AMT_DP15,
                                        NVL2(A.CURR_CD, A.AMT_DP16, A.CAL_AMT_DP16) AS AMT_DP16,
                                        NVL2(A.CURR_CD, A.AMT_DP17, A.CAL_AMT_DP17) AS AMT_DP17,
                                        NVL2(A.CURR_CD, A.AMT_DP18, A.CAL_AMT_DP18) AS AMT_DP18,
                                        NVL2(A.CURR_CD, A.AMT_DP19, A.CAL_AMT_DP19) AS AMT_DP19,
                                        NVL2(A.CURR_CD, A.AMT_DP20, A.CAL_AMT_DP20) AS AMT_DP20,
                                        NVL2(A.CURR_CD, A.AMT_DP21, A.CAL_AMT_DP21) AS AMT_DP21,
                                        NVL2(A.CURR_CD, A.AMT_DP22, A.CAL_AMT_DP22) AS AMT_DP22,
                                        NVL2(A.CURR_CD, A.AMT_DP23, A.CAL_AMT_DP23) AS AMT_DP23,
                                        NVL2(A.CURR_CD, A.AMT_DP24, A.CAL_AMT_DP24) AS AMT_DP24,
                                        NVL2(A.CURR_CD, A.AMT_DP25, A.CAL_AMT_DP25) AS AMT_DP25,
                                        NVL2(A.CURR_CD, A.AMT_DP26, A.CAL_AMT_DP26) AS AMT_DP26,
                                        NVL2(A.CURR_CD, A.AMT_DP27, A.CAL_AMT_DP27) AS AMT_DP27,
                                        NVL2(A.CURR_CD, A.AMT_DP28, A.CAL_AMT_DP28) AS AMT_DP28,
                                        NVL2(A.CURR_CD, A.AMT_DP29, A.CAL_AMT_DP29) AS AMT_DP29,
                                        NVL2(A.CURR_CD, A.AMT_DP30, A.CAL_AMT_DP30) AS AMT_DP30                                        
                                FROM   (SELECT  'QUTA' AS RSLT_GRP_NM, A.RHQ_CD, A.CTRL_OFC_CD AS RQST_OFC_CD, A.CURR_CD,  
                                                SUM(A.EQ_QTY) AS QTY_DP00, 
                                                SUM(A.TRF_AMT) AS AMT_DP00,
                                                SUM(A.CAL_TRF_AMT) AS CAL_AMT_DP00,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 1 THEN A.EQ_QTY END) AS QTY_DP01,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 2 THEN A.EQ_QTY END) AS QTY_DP02,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 3 THEN A.EQ_QTY END) AS QTY_DP03,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 4 THEN A.EQ_QTY END) AS QTY_DP04,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 5 THEN A.EQ_QTY END) AS QTY_DP05,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 6 THEN A.EQ_QTY END) AS QTY_DP06,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 7 THEN A.EQ_QTY END) AS QTY_DP07,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 8 THEN A.EQ_QTY END) AS QTY_DP08,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 9 THEN A.EQ_QTY END) AS QTY_DP09,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =10 THEN A.EQ_QTY END) AS QTY_DP10,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =11 THEN A.EQ_QTY END) AS QTY_DP11,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =12 THEN A.EQ_QTY END) AS QTY_DP12,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =13 THEN A.EQ_QTY END) AS QTY_DP13,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =14 THEN A.EQ_QTY END) AS QTY_DP14,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =15 THEN A.EQ_QTY END) AS QTY_DP15,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =16 THEN A.EQ_QTY END) AS QTY_DP16,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =17 THEN A.EQ_QTY END) AS QTY_DP17,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =18 THEN A.EQ_QTY END) AS QTY_DP18,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =19 THEN A.EQ_QTY END) AS QTY_DP19,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =20 THEN A.EQ_QTY END) AS QTY_DP20,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =21 THEN A.EQ_QTY END) AS QTY_DP21,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =22 THEN A.EQ_QTY END) AS QTY_DP22,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ =23 THEN A.EQ_QTY END) AS QTY_DP23,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =24 THEN A.EQ_QTY END) AS QTY_DP24,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =25 THEN A.EQ_QTY END) AS QTY_DP25,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =26 THEN A.EQ_QTY END) AS QTY_DP26,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =27 THEN A.EQ_QTY END) AS QTY_DP27,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =28 THEN A.EQ_QTY END) AS QTY_DP28,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =29 THEN A.EQ_QTY END) AS QTY_DP29,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =30 THEN A.EQ_QTY END) AS QTY_DP30,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 1 THEN A.TRF_AMT END) AS AMT_DP01,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 2 THEN A.TRF_AMT END) AS AMT_DP02,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 3 THEN A.TRF_AMT END) AS AMT_DP03,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 4 THEN A.TRF_AMT END) AS AMT_DP04,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 5 THEN A.TRF_AMT END) AS AMT_DP05,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 6 THEN A.TRF_AMT END) AS AMT_DP06,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 7 THEN A.TRF_AMT END) AS AMT_DP07,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 8 THEN A.TRF_AMT END) AS AMT_DP08,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 9 THEN A.TRF_AMT END) AS AMT_DP09,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =10 THEN A.TRF_AMT END) AS AMT_DP10,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =11 THEN A.TRF_AMT END) AS AMT_DP11,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =12 THEN A.TRF_AMT END) AS AMT_DP12,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =13 THEN A.TRF_AMT END) AS AMT_DP13,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =14 THEN A.TRF_AMT END) AS AMT_DP14,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =15 THEN A.TRF_AMT END) AS AMT_DP15,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =16 THEN A.TRF_AMT END) AS AMT_DP16,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =17 THEN A.TRF_AMT END) AS AMT_DP17,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =18 THEN A.TRF_AMT END) AS AMT_DP18,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =19 THEN A.TRF_AMT END) AS AMT_DP19,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =20 THEN A.TRF_AMT END) AS AMT_DP20,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =21 THEN A.TRF_AMT END) AS AMT_DP21,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =22 THEN A.TRF_AMT END) AS AMT_DP22,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ =23 THEN A.TRF_AMT END) AS AMT_DP23,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =24 THEN A.TRF_AMT END) AS AMT_DP24,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =25 THEN A.TRF_AMT END) AS AMT_DP25,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =26 THEN A.TRF_AMT END) AS AMT_DP26,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =27 THEN A.TRF_AMT END) AS AMT_DP27,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =28 THEN A.TRF_AMT END) AS AMT_DP28,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =29 THEN A.TRF_AMT END) AS AMT_DP29,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =30 THEN A.TRF_AMT END) AS AMT_DP30,                                        
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 1 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP01,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 2 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP02,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 3 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP03,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 4 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP04,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 5 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP05,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 6 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP06,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 7 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP07,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 8 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP08,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 9 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP09,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =10 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP10,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =11 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP11,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =12 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP12,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =13 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP13,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =14 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP14,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =15 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP15,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =16 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP16,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =17 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP17,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =18 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP18,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =19 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP19,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =20 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP20,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =21 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP21,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =22 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP22,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ =23 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP23,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =24 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP24,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =25 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP25,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =26 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP26,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =27 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP27,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =28 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP28,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =29 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP29,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =30 THEN A.CAL_TRF_AMT END) AS CAL_AMT_DP30          
                                        FROM    TEMP_QUTA A,
                                                TEMP_TPSZ B
                                        WHERE   A.EQ_KND_CD  = B.EQ_KND_CD
                                        AND     A.EQ_TPSZ_CD = B.EQ_TPSZ_CD                                
                                        GROUP BY ROLLUP(A.RHQ_CD, A.CTRL_OFC_CD, A.CURR_CD)        
                                        UNION ALL 
                                        SELECT  'PFMC' AS RSLT_GRP_NM, A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, 
                                                SUM(A.DISP_QTY) AS QTY_DP00, 
                                                SUM(A.PART_AMT) AS AMT_DP00,
                                                SUM(A.CAL_PART_AMT) AS CAL_AMT_DP00, 
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 1 THEN A.DISP_QTY END) AS QTY_DP01,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 2 THEN A.DISP_QTY END) AS QTY_DP02,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 3 THEN A.DISP_QTY END) AS QTY_DP03,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 4 THEN A.DISP_QTY END) AS QTY_DP04,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 5 THEN A.DISP_QTY END) AS QTY_DP05,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 6 THEN A.DISP_QTY END) AS QTY_DP06,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 7 THEN A.DISP_QTY END) AS QTY_DP07,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 8 THEN A.DISP_QTY END) AS QTY_DP08,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 9 THEN A.DISP_QTY END) AS QTY_DP09,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =10 THEN A.DISP_QTY END) AS QTY_DP10,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =11 THEN A.DISP_QTY END) AS QTY_DP11,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =12 THEN A.DISP_QTY END) AS QTY_DP12,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =13 THEN A.DISP_QTY END) AS QTY_DP13,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =14 THEN A.DISP_QTY END) AS QTY_DP14,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =15 THEN A.DISP_QTY END) AS QTY_DP15,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =16 THEN A.DISP_QTY END) AS QTY_DP16,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =17 THEN A.DISP_QTY END) AS QTY_DP17,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =18 THEN A.DISP_QTY END) AS QTY_DP18,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =19 THEN A.DISP_QTY END) AS QTY_DP19,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =20 THEN A.DISP_QTY END) AS QTY_DP20,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =21 THEN A.DISP_QTY END) AS QTY_DP21,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =22 THEN A.DISP_QTY END) AS QTY_DP22,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ =23 THEN A.DISP_QTY END) AS QTY_DP23,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =24 THEN A.DISP_QTY END) AS QTY_DP24,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =25 THEN A.DISP_QTY END) AS QTY_DP25,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =26 THEN A.DISP_QTY END) AS QTY_DP26,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =27 THEN A.DISP_QTY END) AS QTY_DP27,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =28 THEN A.DISP_QTY END) AS QTY_DP28,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =29 THEN A.DISP_QTY END) AS QTY_DP29,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =30 THEN A.DISP_QTY END) AS QTY_DP30,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 1 THEN A.PART_AMT END) AS AMT_DP01,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 2 THEN A.PART_AMT END) AS AMT_DP02,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 3 THEN A.PART_AMT END) AS AMT_DP03,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 4 THEN A.PART_AMT END) AS AMT_DP04,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 5 THEN A.PART_AMT END) AS AMT_DP05,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 6 THEN A.PART_AMT END) AS AMT_DP06,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 7 THEN A.PART_AMT END) AS AMT_DP07,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 8 THEN A.PART_AMT END) AS AMT_DP08,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 9 THEN A.PART_AMT END) AS AMT_DP09,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =10 THEN A.PART_AMT END) AS AMT_DP10,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =11 THEN A.PART_AMT END) AS AMT_DP11,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =12 THEN A.PART_AMT END) AS AMT_DP12,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =13 THEN A.PART_AMT END) AS AMT_DP13,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =14 THEN A.PART_AMT END) AS AMT_DP14,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =15 THEN A.PART_AMT END) AS AMT_DP15,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =16 THEN A.PART_AMT END) AS AMT_DP16,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =17 THEN A.PART_AMT END) AS AMT_DP17,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =18 THEN A.PART_AMT END) AS AMT_DP18,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =19 THEN A.PART_AMT END) AS AMT_DP19,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =20 THEN A.PART_AMT END) AS AMT_DP20,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =21 THEN A.PART_AMT END) AS AMT_DP21,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =22 THEN A.PART_AMT END) AS AMT_DP22,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ =23 THEN A.PART_AMT END) AS AMT_DP23,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =24 THEN A.PART_AMT END) AS AMT_DP24,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =25 THEN A.PART_AMT END) AS AMT_DP25,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =26 THEN A.PART_AMT END) AS AMT_DP26,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =27 THEN A.PART_AMT END) AS AMT_DP27,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =28 THEN A.PART_AMT END) AS AMT_DP28,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =29 THEN A.PART_AMT END) AS AMT_DP29,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =30 THEN A.PART_AMT END) AS AMT_DP30,                                        
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 1 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP01,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 2 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP02,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 3 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP03,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 4 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP04,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 5 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP05,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 6 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP06,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 7 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP07,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 8 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP08,
                                                SUM(CASE WHEN B.RPT_DP_SEQ = 9 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP09,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =10 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP10,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =11 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP11,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =12 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP12,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =13 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP13,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =14 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP14,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =15 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP15,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =16 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP16,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =17 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP17,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =18 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP18,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =19 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP19,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =20 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP20,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =21 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP21,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =22 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP22,  
                                                SUM(CASE WHEN B.RPT_DP_SEQ =23 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP23,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =24 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP24,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =25 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP25,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =26 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP26,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =27 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP27,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =28 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP28,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =29 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP29,
                                                SUM(CASE WHEN B.RPT_DP_SEQ =30 THEN A.CAL_PART_AMT END) AS CAL_AMT_DP30           
                                        FROM    TEMP_PFMC A,
                                                TEMP_TPSZ B
                                        WHERE   A.EQ_KND_CD  = B.EQ_KND_CD
                                        AND     A.EQ_TPSZ_CD = B.EQ_TPSZ_CD                                              
                                        GROUP BY ROLLUP(A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD)
                                        ) A 
                                ) A,
                                TEMP_SEQ B        
                        ) A        
                ) A
        WHERE  (A.RHQ_CD IS NULL  OR  A.RQST_OFC_CD IS NULL  OR  A.CURR_CD IS NOT NULL) 
        GROUP BY A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, A.RSLT_TP_SEQ
        ORDER BY A.RHQ_CD, A.RQST_OFC_CD, A.CURR_CD, A.RSLT_TP_SEQ
        ) A
WHERE   1 = 1			]]></sql>
			<params>
				<param name="p_str_evnt_dt" type="12" value="" out="N"/>
				<param name="p_end_evnt_dt" type="12" value="" out="N"/>
				<param name="p_eq_knd_cd" type="12" value="" out="N"/>
				<param name="p_rhq_cd" type="12" value="" out="N"/>
				<param name="p_ofc_cd" type="12" value="" out="N"/>
				<param name="p_disp_tp_cd" type="12" value="" out="N"/>
				<param name="p_disp_rsn_cd" type="12" value="" out="N"/>
				<param name="p_cust_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
