<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ContainerSupplyDemandPlanDBDAOSearchProcurementPlanResultReportDataRSQL">
			<desc><![CDATA[SearchProcurementPlanResultReportData]]></desc>
			<sql><![CDATA[
WITH PARAM AS
(
    SELECT @[input_pln_yr]    AS PLN_YR,
           @[input_bse_yrmon] AS BSE_YRMON
    FROM DUAL
)
,
LV_QTY0 AS   --LOW DATA 수집
(
    SELECT  A.CNTR_PROCU_PLN_CD,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'A'),LEAST(A.CNTR_PROCU_PLN_CD, 'C'),1,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'D'),LEAST(A.CNTR_PROCU_PLN_CD, 'E'),2,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'F'),LEAST(A.CNTR_PROCU_PLN_CD, 'J'),3,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'K'),LEAST(A.CNTR_PROCU_PLN_CD, 'M'),4)))) CNTR_PROCU_PLN_CD_GRP,
            A.D2_QTY,  
            A.D4_QTY,
            A.D5_QTY,  
            A.D7_QTY,   
            A.R2_QTY,  
            A.R4_QTY,  
            A.R5_QTY,  
            A.O2_QTY,  
            A.O4_QTY,  
            A.F2_QTY, 
            A.F4_QTY
    FROM MST_CNTR_PROCU_PLN A, PARAM P
    WHERE A.PLN_YR = P.PLN_YR
    UNION ALL
    SELECT 
            A.CNTR_PROCU_PLN_CD,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'A'),LEAST(A.CNTR_PROCU_PLN_CD, 'C'),1,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'D'),LEAST(A.CNTR_PROCU_PLN_CD, 'E'),2,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'F'),LEAST(A.CNTR_PROCU_PLN_CD, 'J'),3,
            DECODE(GREATEST(A.CNTR_PROCU_PLN_CD, 'K'),LEAST(A.CNTR_PROCU_PLN_CD, 'M'),4)))) CNTR_PROCU_PLN_CD_GRP,
            0 D2_QTY,  
            0 D4_QTY,
            0 D5_QTY,  
            0 D7_QTY,  
            0 R2_QTY,  
            0 R4_QTY,  
            0 R5_QTY,  
            0 O2_QTY,  
            0 O4_QTY,  
            0 F2_QTY, 
            0 F4_QTY
    FROM    
        (
        SELECT
            CHR(LEVEL+64) AS CNTR_PROCU_PLN_CD
        FROM DUAL
        CONNECT BY LEVEL <= 13
        ) A   
)
,LV_QTY1 AS -- GROUP 별 SUM 수집
(
    SELECT  LTRIM(TO_CHAR(ROWNUM,'00')||GRP_ID) SEQ,
            A.CNTR_PROCU_PLN_CD,
            A.CNTR_PROCU_PLN_CD_GRP,
            A.D2_QTY,  
            A.D4_QTY,
            A.D5_QTY,  
            A.D7_QTY,  
            A.R2_QTY,  
            A.R4_QTY,  
            A.R5_QTY,  
            A.O2_QTY,  
            A.O4_QTY,  
            A.F2_QTY, 
            A.F4_QTY,
            (NVL(A.D2_QTY,0) + NVL(A.D4_QTY,0) + NVL(A.D5_QTY,0) + NVL(A.D7_QTY,0) + NVL(A.R2_QTY,0) + NVL(A.R4_QTY,0) + NVL(A.R5_QTY,0) + NVL(A.O2_QTY,0) + NVL(A.O4_QTY,0) + NVL(A.F2_QTY,0) + NVL(A.F4_QTY,0) ) AS G_TOTAL
    FROM
    (
        SELECT      GROUPING(A.CNTR_PROCU_PLN_CD)||GROUPING(A.CNTR_PROCU_PLN_CD_GRP) GRP_ID,
                    A.CNTR_PROCU_PLN_CD,
                    A.CNTR_PROCU_PLN_CD_GRP,
                    SUM(A.D2_QTY) AS D2_QTY,  
                    SUM(A.D4_QTY) AS D4_QTY,  
                    SUM(A.D5_QTY) AS D5_QTY,  
                    SUM(A.D7_QTY) AS D7_QTY,  
                    SUM(A.R2_QTY) AS R2_QTY,  
                    SUM(A.R4_QTY) AS R4_QTY,  
                    SUM(A.R5_QTY) AS R5_QTY,  
                    SUM(A.O2_QTY) AS O2_QTY,  
                    SUM(A.O4_QTY) AS O4_QTY,  
                    SUM(A.F2_QTY) AS F2_QTY, 
                    SUM(A.F4_QTY) AS F4_QTY                
        FROM LV_QTY0 A
        GROUP BY ROLLUP(A.CNTR_PROCU_PLN_CD_GRP,A.CNTR_PROCU_PLN_CD)
        ORDER BY A.CNTR_PROCU_PLN_CD_GRP,NVL(A.CNTR_PROCU_PLN_CD,'0')
    ) A
    WHERE 1=1
    AND   NOT (CNTR_PROCU_PLN_CD_GRP IS NULL AND CNTR_PROCU_PLN_CD IS NULL) --전체 SUM 제거--
    AND   NOT (CNTR_PROCU_PLN_CD_GRP = 2     AND CNTR_PROCU_PLN_CD IS NULL) --Plan Year(Utilization) SUM 제거--
)
,LV_QTY2 AS -- GROUP 별 SUM 수집
(
    -- Plan Year(Utilization) 계산
    SELECT  '0700' SEQ, 
            '' CNTR_PROCU_PLN_CD,0 CNTR_PROCU_PLN_CD_GRP,
            DECODE(A.D2_QTY,0,0, ROUND(B.D2_QTY / A.D2_QTY,2)) AS D2_QTY,
            DECODE(A.D4_QTY,0,0, ROUND(B.D4_QTY / A.D4_QTY,2)) AS D4_QTY,
            DECODE(A.D5_QTY,0,0, ROUND(B.D5_QTY / A.D5_QTY,2)) AS D5_QTY,
            DECODE(A.D7_QTY,0,0, ROUND(B.D7_QTY / A.D7_QTY,2)) AS D7_QTY,
            DECODE(A.R2_QTY,0,0, ROUND(B.R2_QTY / A.R2_QTY,2)) AS R2_QTY,
            DECODE(A.R4_QTY,0,0, ROUND(B.R4_QTY / A.R4_QTY,2)) AS R4_QTY,
            DECODE(A.R5_QTY,0,0, ROUND(B.R5_QTY / A.R5_QTY,2)) AS R5_QTY,
            DECODE(A.O2_QTY,0,0, ROUND(B.O2_QTY / A.O2_QTY,2)) AS O2_QTY,
            DECODE(A.O4_QTY,0,0, ROUND(B.O4_QTY / A.O4_QTY,2)) AS O4_QTY,
            DECODE(A.F2_QTY,0,0, ROUND(B.F2_QTY / A.F2_QTY,2)) AS F2_QTY,
            DECODE(A.F4_QTY,0,0, ROUND(B.F4_QTY / A.F4_QTY,2)) AS F4_QTY,
            DECODE(A.G_TOTAL,0,0, ROUND(B.G_TOTAL / A.G_TOTAL,2)) AS G_TOTAL        
    FROM LV_QTY1 A, LV_QTY1 B
    WHERE A.CNTR_PROCU_PLN_CD = 'D'
    AND   B.CNTR_PROCU_PLN_CD = 'E'
    -- Shortage or Surplus VS Plan Year 계산--
    UNION ALL
    SELECT  '0701' SEQ,
            '' CNTR_PROCU_PLN_CD,0 CNTR_PROCU_PLN_CD_GRP,
            A.D2_QTY - B.D2_QTY AS D2_QTY,
            A.D4_QTY - B.D4_QTY AS D4_QTY,
            A.D5_QTY - B.D5_QTY AS D5_QTY,
            A.D7_QTY - B.D7_QTY AS D7_QTY,
            A.R2_QTY - B.R2_QTY AS R2_QTY,
            A.R4_QTY - B.R4_QTY AS R4_QTY,
            A.R5_QTY - B.R5_QTY AS R5_QTY,
            A.O2_QTY - B.O2_QTY AS O2_QTY,
            A.O4_QTY - B.O4_QTY AS O4_QTY,
            A.F2_QTY - B.F2_QTY AS F2_QTY,
            A.F4_QTY - B.F4_QTY AS F4_QTY,
            A.G_TOTAL - B.G_TOTAL AS G_TOTAL
    FROM LV_QTY1 A, LV_QTY1 B
    WHERE (A.CNTR_PROCU_PLN_CD IS NULL AND A.CNTR_PROCU_PLN_CD_GRP =1)
    AND   B.CNTR_PROCU_PLN_CD = 'D'
)
SELECT  A.SEQ,
        A.CNTR_PROCU_PLN_CD,A.CNTR_PROCU_PLN_CD_GRP,
        DECODE(SEQ,'0700',TO_CHAR(A.D2_QTY,'999.00'), TO_CHAR(A.D2_QTY,'999,999,999,990')) D2_QTY,  
        DECODE(SEQ,'0700',TO_CHAR(A.D4_QTY,'999.00'), TO_CHAR(A.D4_QTY,'999,999,999,990')) D4_QTY,    
        DECODE(SEQ,'0700',TO_CHAR(A.D5_QTY,'999.00'), TO_CHAR(A.D5_QTY,'999,999,999,990')) D5_QTY,
        DECODE(SEQ,'0700',TO_CHAR(A.D7_QTY,'999.00'), TO_CHAR(A.D7_QTY,'999,999,999,990')) D7_QTY, 
        DECODE(SEQ,'0700',TO_CHAR(A.R2_QTY,'999.00'), TO_CHAR(A.R2_QTY,'999,999,999,990')) R2_QTY,          
        DECODE(SEQ,'0700',TO_CHAR(A.R4_QTY,'999.00'), TO_CHAR(A.R4_QTY,'999,999,999,990')) R4_QTY,  
        DECODE(SEQ,'0700',TO_CHAR(A.R5_QTY,'999.00'), TO_CHAR(A.R5_QTY,'999,999,999,990')) R5_QTY,
        DECODE(SEQ,'0700',TO_CHAR(A.O2_QTY,'999.00'), TO_CHAR(A.O2_QTY,'999,999,999,990')) O2_QTY,
        DECODE(SEQ,'0700',TO_CHAR(A.O4_QTY,'999.00'), TO_CHAR(A.O4_QTY,'999,999,999,990')) O4_QTY,   
        DECODE(SEQ,'0700',TO_CHAR(A.F2_QTY,'999.00'), TO_CHAR(A.F2_QTY,'999,999,999,990')) F2_QTY,
        DECODE(SEQ,'0700',TO_CHAR(A.F4_QTY,'999.00'), TO_CHAR(A.F4_QTY,'999,999,999,990')) F4_QTY,
        DECODE(SEQ,'0700',TO_CHAR(A.G_TOTAL,'999.00'), TO_CHAR(A.G_TOTAL,'999,999,999,990')) G_TOTAL,
        (SELECT A.BSE_YRMON FROM MST_CNTR_PROCU_PLN A, PARAM P WHERE A.PLN_YR = P.PLN_YR AND A.CNTR_PROCU_PLN_CD = 'A') AS BSE_YRMON
FROM
(
    SELECT  A.SEQ,
            A.CNTR_PROCU_PLN_CD,A.CNTR_PROCU_PLN_CD_GRP,
            A.D2_QTY,  
            A.D4_QTY,
            A.D5_QTY,  
            A.D7_QTY,  
            A.R2_QTY,  
            A.R4_QTY,  
            A.R5_QTY,  
            A.O2_QTY,  
            A.O4_QTY,  
            A.F2_QTY, 
            A.F4_QTY,
            A.G_TOTAL
    FROM LV_QTY1 A
    UNION ALL
    SELECT  A.SEQ,
            A.CNTR_PROCU_PLN_CD,A.CNTR_PROCU_PLN_CD_GRP,
            A.D2_QTY,  
            A.D4_QTY,
            A.D5_QTY,  
            A.D7_QTY,  
            A.R2_QTY,  
            A.R4_QTY,  
            A.R5_QTY,  
            A.O2_QTY,  
            A.O4_QTY,  
            A.F2_QTY, 
            A.F4_QTY,
            A.G_TOTAL
    FROM LV_QTY2 A
    ----EQ Procurement Qty in Plan Year(Total) 계산--
    UNION ALL
    SELECT  '1299' SEQ,
            '' CNTR_PROCU_PLN_CD,0 CNTR_PROCU_PLN_CD_GRP,
            A.D2_QTY + B.D2_QTY AS D2_QTY,
            A.D4_QTY + B.D4_QTY AS D4_QTY,
            A.D5_QTY + B.D5_QTY AS D5_QTY,
            A.D7_QTY + B.D7_QTY AS D7_QTY,
            A.R2_QTY + B.R2_QTY AS R2_QTY,
            A.R4_QTY + B.R4_QTY AS R4_QTY,
            A.R5_QTY + B.R5_QTY AS R5_QTY,
            A.O2_QTY + B.O2_QTY AS O2_QTY,
            A.O4_QTY + B.O4_QTY AS O4_QTY,
            A.F2_QTY + B.F2_QTY AS F2_QTY,
            A.F4_QTY + B.F4_QTY AS F4_QTY,
            A.G_TOTAL + B.G_TOTAL AS G_TOTAL
    FROM LV_QTY1 A,LV_QTY2 B
    WHERE (A.CNTR_PROCU_PLN_CD IS NULL AND A.CNTR_PROCU_PLN_CD_GRP =3)
    AND   B.SEQ = '0701'
    ) A
ORDER BY A.SEQ			]]></sql>
			<params>
				<param name="input_pln_yr" type="12" value="" out="N"/>
				<param name="input_bse_yrmon" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
