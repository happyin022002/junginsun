<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChassisMovementHistoryDBDAOsearchCHSAtdtHistoryDataRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT AAA.*
  FROM
       (
		SELECT  ROWNUM AS NO
				,AA.EQ_NO
				,AA.CNTR_NO
				,TO_CHAR(AA.ATCH_dT,'YYYY-MM-DD HH24:MI:SS') ATCH_DT
				,AA.ATCH_YD ATCH_YD_CD
				,DECODE(TO_CHAR(TO_DATE( AA.DTCH_DT ,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS') ,'8888-12-31 00:00:00','' ,TO_CHAR(TO_DATE( AA.DTCH_DT ,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS') ) DTCH_DT
				,AA.DTCH_YD dtch_yd_cd
		    FROM
				(
					SELECT
							ATDT.EQ_NO
							,ATDT.CNTR_NO
							, DECODE(ATCH_dT, DT_LAG1, DECODE(LAG1, DT_LAG2, DECODE(LAG2,DT_LAG3, DECODE( LAG3,DT_LAG4 ,DECODE( LAG4, DT_LAG5 , DECODE(LAG5, DT_LAG6, DECODE(LAG6,DT_LAG7,
										   DECODE( LAG7,DT_LAG8, DECODE( LAG8, DT_LAG9, LAG9, LAG8) ,LAG7), LAG6), LAG5), LAG4), LAG3), LAG2 ), LAG1 ), ATCH_DT )   ATCH_DT 
							, SUBSTR( MIN(ATDT.ATCH_YDDT)  , 15) ATCH_YD
							, SUBSTR( MAX(ATDT.DTCH_YDDT)  , 1,14) DTCH_DT
							, SUBSTR( MAX(ATDT.DTCH_YDDT)  , 15) DTCH_YD
							FROM (
									SELECT /*+ INDEX(A XPKCGM_EQ_ATCH_DTCH_HIS) */
											 A.EQ_NO
											,A.CNTR_NO
											,LAG(A.ATCH_DT,1) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG1
											,LAG(A.ATCH_DT,2) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG2
											,LAG(A.ATCH_DT,3) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG3
											,LAG(A.ATCH_DT,4) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG4
											,LAG(A.ATCH_DT,5) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG5
											,LAG(A.ATCH_DT,6) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG6
											,LAG(A.ATCH_DT,7) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG7
											,LAG(A.ATCH_DT,8) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG8
											,LAG(A.ATCH_DT,9) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) LAG9
											,LAG(DTCH_DT,1) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG1
											,LAG(DTCH_DT,2) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG2
											,LAG(DTCH_DT,3) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG3
											,LAG(DTCH_DT,4) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG4
											,LAG(DTCH_DT,5) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG5
											,LAG(DTCH_DT,6) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG6
											,LAG(DTCH_DT,7) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG7
											,LAG(DTCH_DT,8) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG8
											,LAG(DTCH_DT,9) OVER (PARTITION BY A.EQ_NO,A.CNTR_NO  ORDER BY ATCH_DT) DT_LAG9
											,A.ATCH_DT
											,A.DTCH_DT
											,TO_CHAR(A.ATCH_DT,'YYYYMMDDHH24MISS') || A.ATCH_YD_CD ATCH_YDDT
											,TO_CHAR(A.DTCH_DT,'YYYYMMDDHH24MISS') || A.DTCH_YD_CD DTCH_YDDT
									FROM CGM_EQ_ATCH_DTCH_HIS A
									WHERE A.EQ_NO = @[eq_no]
										#if ( ${str_mvmt_dt} != '' )
										 AND A.ATCH_DT BETWEEN  TO_DATE(@[str_mvmt_dt],'YYYY-MM-DD')  AND  TO_DATE(@[end_mvmt_dt],'YYYY-MM-DD') +1
										#end
									ORDER BY A.EQ_NO
											,ATCH_DT
									) ATDT
							GROUP BY ATDT.EQ_NO
							,ATDT.CNTR_NO
							, DECODE(ATCH_dT, DT_LAG1, DECODE(LAG1, DT_LAG2, DECODE(LAG2,DT_LAG3, DECODE( LAG3,DT_LAG4 ,DECODE( LAG4, DT_LAG5 , DECODE(LAG5, DT_LAG6, DECODE(LAG6,DT_LAG7,
										   DECODE( LAG7,DT_LAG8, DECODE( LAG8, DT_LAG9, LAG9, LAG8) ,LAG7), LAG6), LAG5), LAG4), LAG3), LAG2 ), LAG1 ), ATCH_DT )   
				) AA
	) AAA

#if ( ${str_mvmt_dt} == '' )
WHERE AAA.NO < 301
#end
ORDER BY AAA.ATCH_DT			]]></sql>
			<params>
				<param name="eq_no" type="12" value="" out="N"/>
				<param name="str_mvmt_dt" type="12" value="" out="N"/>
				<param name="end_mvmt_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
