<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LeaseReportDBDAOTotalContainerInventorySummaryListRSQL">
			<desc><![CDATA[HJS의 관리하는 자가 및 임차장비 현황목록을 조회합니다.
2011.06.13 남궁진호 [CHM-201111467-01] [LSE] MDM에 R9 등록에 따른 추가 업무 진행 요청]]></desc>
			<sql><![CDATA[
SELECT  /*+ USE_NL(A B) */ 
		CASE WHEN LSTM_CD IS NULL THEN 'Total'
             WHEN AGMT_NO IS NULL THEN LSTM_CD
             ELSE AGMT_NO END LSTM_CD,
		AGMT_NO, AGMT_CTY_CD, AGMT_SEQ, REF_NO, A.Lse_Ctrt_No AS CTRT_NO,
		A.VNDR_SEQ, B.VNDR_ABBR_NM, B.VNDR_LGL_ENG_NM,
        CASE WHEN LSTM_CD IS NULL THEN 0
             WHEN AGMT_NO IS NULL THEN 0
             ELSE 1 END LEVEL_NO, TPSZ_TOTAL,
        TPSZ_DP01, TPSZ_DP02, TPSZ_DP03, TPSZ_DP04, TPSZ_DP05, TPSZ_DP06,
        TPSZ_DP07, TPSZ_DP08, TPSZ_DP09, TPSZ_DP10, TPSZ_DP11, TPSZ_DP12,
        TPSZ_DP13, TPSZ_DP14, TPSZ_DP15, TPSZ_DP16, TPSZ_DP17, TPSZ_DP18,
        TPSZ_DP19, TPSZ_DP20, TPSZ_DP21, TPSZ_DP22, TPSZ_DP23, TPSZ_DP24,
        TPSZ_DP25, TPSZ_DP26, TPSZ_DP27, TPSZ_DP28, TPSZ_DP29, TPSZ_DP30
FROM   	MDM_VENDOR B,
	   (SELECT  A.LSTM_CD, A.AGMT_NO, A.AGMT_CTY_CD, A.AGMT_SEQ, A.REF_NO, A.Lse_Ctrt_No,
				CASE WHEN A.AGMT_NO IS NULL AND A.VNDR_SEQ IS NULL THEN @[vndr_seq]
                     ELSE A.VNDR_SEQ END VNDR_SEQ, A.TPSZ_TOTAL,
	            A.TPSZ_DP01, A.TPSZ_DP02, A.TPSZ_DP03, A.TPSZ_DP04, A.TPSZ_DP05, A.TPSZ_DP06,
	            A.TPSZ_DP07, A.TPSZ_DP08, A.TPSZ_DP09, A.TPSZ_DP10, A.TPSZ_DP11, A.TPSZ_DP12,
	            A.TPSZ_DP13, A.TPSZ_DP14, A.TPSZ_DP15, A.TPSZ_DP16, A.TPSZ_DP17, A.TPSZ_DP18,
	            A.TPSZ_DP19, A.TPSZ_DP20, A.TPSZ_DP21, A.TPSZ_DP22, A.TPSZ_DP23, A.TPSZ_DP24,
	            A.TPSZ_DP25, A.TPSZ_DP26, A.TPSZ_DP27, A.TPSZ_DP28, A.TPSZ_DP29, A.TPSZ_DP30
	    FROM    MST_LSE_TERM B,
           	   (SELECT  A.LSTM_CD, A.AGMT_CTY_CD||LPAD(A.AGMT_SEQ, 6, '0') AS AGMT_NO,
			            A.AGMT_CTY_CD, A.AGMT_SEQ, A.REF_NO, A.VNDR_SEQ, A.Lse_Ctrt_No,
			            SUM(DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0)) AS TPSZ_TOTAL,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 1 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP01,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 2 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP02,  
			            SUM(CASE WHEN C.RPT_DP_SEQ = 3 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP03,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 4 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP04,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 5 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP05,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 6 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP06,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 7 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP07,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 8 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP08,
			            SUM(CASE WHEN C.RPT_DP_SEQ = 9 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP09,
			            SUM(CASE WHEN C.RPT_DP_SEQ =10 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP10,
			            SUM(CASE WHEN C.RPT_DP_SEQ =11 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP11,
			            SUM(CASE WHEN C.RPT_DP_SEQ =12 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP12,
			            SUM(CASE WHEN C.RPT_DP_SEQ =13 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP13,
			            SUM(CASE WHEN C.RPT_DP_SEQ =14 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP14,
			            SUM(CASE WHEN C.RPT_DP_SEQ =15 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP15,
			            SUM(CASE WHEN C.RPT_DP_SEQ =16 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP16,
			            SUM(CASE WHEN C.RPT_DP_SEQ =17 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP17,
			            SUM(CASE WHEN C.RPT_DP_SEQ =18 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP18,
			            SUM(CASE WHEN C.RPT_DP_SEQ =19 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP19,
			            SUM(CASE WHEN C.RPT_DP_SEQ =20 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP20,
			            SUM(CASE WHEN C.RPT_DP_SEQ =21 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP21,
			            SUM(CASE WHEN C.RPT_DP_SEQ =22 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP22,  
			            SUM(CASE WHEN C.RPT_DP_SEQ =23 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP23,
			            SUM(CASE WHEN C.RPT_DP_SEQ =24 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP24,
			            SUM(CASE WHEN C.RPT_DP_SEQ =25 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP25,
			            SUM(CASE WHEN C.RPT_DP_SEQ =26 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP26,
                        SUM(CASE WHEN C.RPT_DP_SEQ =27 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP27,
                        SUM(CASE WHEN C.RPT_DP_SEQ =28 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP28,
                        SUM(CASE WHEN C.RPT_DP_SEQ =29 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP29,
                        SUM(CASE WHEN C.RPT_DP_SEQ =30 THEN DECODE(A.CNTR_TPSZ_CD, C.CNTR_TPSZ_CD, A.VOL_CNT,0) END) TPSZ_DP30
			    FROM   (SELECT  /*+ LEADING(C) USE_HASH(C A) FULL(A) */
								C.LSTM_CD, A.AGMT_CTY_CD, A.AGMT_SEQ, C.REF_NO, C.Lse_Ctrt_No,
			                    A.CNTR_TPSZ_CD, C.VNDR_SEQ, COUNT(A.CNTR_NO) AS VOL_CNT
			            FROM    MST_CONTAINER A,
			                    LSE_AGREEMENT C            
			            WHERE   A.CNTR_STS_CD NOT IN ('LSO','DIO','DON','SCR','TLL','SLD','SRO')
			            AND     A.AGMT_CTY_CD = C.AGMT_CTY_CD        
			            AND     A.AGMT_SEQ = C.AGMT_SEQ        
			            AND     A.AGMT_SEQ <> 999990
--						AND     A.ONH_YD_CD <> 'KRSEL1H'
					    AND     A.HJS_CRE_FLG = 'N'
#if (${loc_tp} == 'RCC')
						AND     A.RCC_CD = @[loc_cd]
#elseif (${loc_tp} == 'LCC')
						AND     A.LCC_CD = @[loc_cd]
#elseif (${loc_tp} == 'SCC')
						AND     A.SCC_CD = @[loc_cd]
#end						
#if (${vndr_seq} != '')
						AND     C.VNDR_SEQ = @[vndr_seq]
#end						
#if (${agmt_seq} != '')
						AND     A.AGMT_CTY_CD = 'HHO'
        				AND     A.AGMT_SEQ = @[agmt_seq]
#end
#if (${cnmv_sts_cd} != '')
   						AND     A.CNMV_STS_CD IN (
    #foreach($key IN ${cnmv_sts_cd_seq})
		#if($velocityCount < $cnmv_sts_cd_seq.size())
			'$key',
		#else


			'$key'
		#end
	#end
                    			)
#end 
			            GROUP BY C.LSTM_CD, A.AGMT_CTY_CD, A.AGMT_SEQ, C.REF_NO, C.Lse_Ctrt_No, A.CNTR_TPSZ_CD, C.VNDR_SEQ) A,
			           (SELECT  CNTR_TPSZ_CD, ROW_NUMBER() OVER(ORDER BY RPT_DP_SEQ) AS RPT_DP_SEQ  
			            FROM    MDM_CNTR_TP_SZ
                        WHERE  DELT_FLG = 'N' AND ACIAC_DIV_CD = 'A') C       
			    WHERE   1 = 1
#if (${lstm_cd} != '')
    			AND     A.LSTM_CD IN (
	#foreach($key IN ${lstm_cd_seq})
		#if($velocityCount < $lstm_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
            			)
#end
#if (${cntr_tpsz_cd} != '')
    			AND     A.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
            			)
#end       
			    GROUP BY ROLLUP(A.LSTM_CD, A.AGMT_CTY_CD, A.AGMT_SEQ, A.REF_NO, A.Lse_Ctrt_No, A.VNDR_SEQ)             
				) A				
		WHERE   A.LSTM_CD = B.LSTM_CD(+)
    	ORDER BY B.DP_SEQ, A.LSTM_CD, DECODE(A.AGMT_SEQ,'',0,1), A.AGMT_SEQ  				
		) A    
WHERE   A.VNDR_SEQ = B.VNDR_SEQ(+)
AND	   (A.REF_NO IS NOT NULL
AND     A.VNDR_SEQ IS NOT NULL
OR      A.AGMT_NO IS NULL
OR      A.LSTM_CD IS NULL)			]]></sql>
			<params>
				<param name="vndr_seq" type="2" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
