<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYEquipmentForecastDBDAOsearchMtyBalanceListRSQL">
			<desc><![CDATA[지점별로 향후 2~4 weeks의 예상 MTY 장비 Supply & Demand를 항목별로 입력/수정/ 조회하며, MTY Balance를 예상하는 화면

2011.06.13 나상보 [CHM-201111555-01] [EQR] R9 코드 생성에 따른 EQR 모듈 보완 작업 요청
2012.05.23 신용찬 [CHM-201217713] Balance Report 기능 Logic 수정 ]]></desc>
			<sql><![CDATA[
WITH LV_DUMMY_ITEM AS
( 
    SELECT LEVEL TP_CD, @[fcast_yrwk] FCAST_YRWK0, @[loc_cd] LOC_CD, 
           (SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ PLN_YR||PLN_WK
            FROM EQR_WK_PRD A
            WHERE PLN_YR||PLN_WK < @[fcast_yrwk]
            AND   ROWNUM = 1) INP_YRWK
    FROM DUAL
    CONNECT BY LEVEL < =4
)
, LV_DUMMY_WEEK AS
(
    SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ ROWNUM WK_SEQ,PLN_YR||PLN_WK AS FCAST_YRWK
    FROM EQR_WK_PRD A
    WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]
    AND   ROWNUM <=4
)
, LV_DUMMY_FNL AS
(
    SELECT A.TP_CD,A.FCAST_YRWK0, B.FCAST_YRWK,A.LOC_CD,A.INP_YRWK
    FROM LV_DUMMY_ITEM A,LV_DUMMY_WEEK B
)
,LV_YD_LIST AS
(
	SELECT C.YD_CD, A.SCC_CD
	FROM MDM_EQ_ORZ_CHT A,MDM_LOCATION B,MDM_YARD C

#if (${loc_grp_cd} == 'E') 
	WHERE A.ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
#elseif (${loc_grp_cd} == 'L') 
	WHERE A.LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
#elseif (${loc_grp_cd} == 'S') 
	WHERE A.SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
#end
	
	AND   A.SCC_CD = B.SCC_CD
	AND   B.LOC_CD = C.LOC_CD
)
,ADD_DAY AS
(
    SELECT REPO_ADD_DYS
    FROM
    (
        SELECT A.REPO_ADD_DYS
        FROM EQR_WK_PRD_ADD_DY A,
             (
                 SELECT DISTINCT LCC_CD 
                 FROM MDM_EQ_ORZ_CHT 
              #if (${loc_grp_cd} == 'E') 
	             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
              #elseif (${loc_grp_cd} == 'L') 
	             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
              #else -- 'S' 
	             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
              #end                                      
             ) B
        WHERE A.LCC_CD = B.LCC_CD
        UNION 
        SELECT 0 REPO_ADD_DYS FROM DUAL 
        ORDER BY REPO_ADD_DYS DESC  
    )
    WHERE ROWNUM=1    
           
)
,REPO_IN_WEEK AS
(       
    SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ 
           ROWNUM AS SEQ
          ,TO_CHAR(TO_DATE(A.WK_ST_DT , 'YYYYMMDD') - X.REPO_ADD_DYS, 'YYYYMMDD') WK_ST_DT
          ,TO_CHAR(TO_DATE(A.WK_END_DT, 'YYYYMMDD') - X.REPO_ADD_DYS, 'YYYYMMDD') WK_END_DT
          ,A.PLN_YR||A.PLN_WK WEEK
    FROM EQR_WK_PRD A
        ,ADD_DAY X                     
    WHERE A.PLN_YR||A.PLN_WK >= @[fcast_yrwk]
    AND   A.PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)
    AND   ROWNUM <=4    
)

-- 1주차 REPO IN 의 VVD 검색 (-4주차부터 +2주차까지)
,DIVISION1 AS 
(
	SELECT	L4, L3, L2, L1, M0, R1, R2
	FROM	(
				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4,
					    LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3,
						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2,
						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1,
						PLN_YR||PLN_WK										        M0,
						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1,
						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2
				FROM	EQR_WK_PRD
			)
    WHERE M0 = @[fcast_yrwk] 

)	

-- 2주차 REPO IN 의 VVD 검색(-3주차부터 +2주차까지)
,DIVISION2 AS 
(
	SELECT	L4, L3, L2, L1, M0, R1, R2
	FROM	(
				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4,
                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3,
						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2,
						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1,
						PLN_YR||PLN_WK										        M0,
						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1,
						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2
				FROM	EQR_WK_PRD
			)
    WHERE M0 = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=2 ) -- 2주차
)	

-- 3주차 REPO IN 의 VVD 검색(-3주차부터 +2주차까지)
,DIVISION3 AS 
(
	SELECT	L4, L3, L2, L1, M0, R1, R2
	FROM	(
				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4,
                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3,
						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2,
						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1,
						PLN_YR||PLN_WK										        M0,
						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1,
						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2
				FROM	EQR_WK_PRD
			)
    WHERE M0 = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=3 ) -- 3주차
)

-- 4주차 REPO IN 의 VVD 검색
,DIVISION4 AS 
(
	SELECT	L4, L3, L2, L1, M0, R1, R2
	FROM	(
				SELECT  LAG(PLN_YR||PLN_WK,4)		OVER (ORDER BY PLN_YR,PLN_WK)	L4,
                        LAG(PLN_YR||PLN_WK,3)		OVER (ORDER BY PLN_YR,PLN_WK)	L3,
						LAG(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	L2,
						LAG(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	L1,
						PLN_YR||PLN_WK										        M0,
						LEAD(PLN_YR||PLN_WK,1)		OVER (ORDER BY PLN_YR,PLN_WK)	R1,
						LEAD(PLN_YR||PLN_WK,2)		OVER (ORDER BY PLN_YR,PLN_WK)	R2
				FROM	EQR_WK_PRD
			)
    WHERE M0 = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=4 ) -- 4주차
)

-- 1주차 REPO IN VVD
,REPOIN_VVD1 AS
(
    SELECT DISTINCT VVD
    FROM
    (
    SELECT WEEKDIVISION
          ,WEEK
          ,DIV
          ,VVD
          ,LANE
          ,REMARKFLAG
          ,DCLPTSQL
          ,REMARK
          ,CODCFMCTSCD
          ,FIRSTETB
          ,MNLINPFLG
    FROM
    (
        SELECT WEEKDIVISION
              ,WEEK
              ,DIV
              ,VVD
              ,LANE
              ,REMARKFLAG
              ,DCLPTSQL
              ,REMARK
              ,CODCFMCTSCD
              ,FIRSTETB
              ,MNLINPFLG
              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		
        FROM
        (  
        SELECT
        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )
        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )
        		INDEX ( OCNT XPKMDM_COUNTRY )
        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )
        		INDEX ( WEK XAK1EQR_WK_PRD )
        		*/
        
        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', 
                                                DIV.L3,	'0',
                                                DIV.L2,	'1',
        										DIV.L1,	'2',
        										DIV.M0,	'3',
        										DIV.R1,	'4',
        										DIV.R2,	'5',
        												NULL) weekDivision,
        												/*	WEEK_DIV	*/
        
        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/
        
        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/
        
        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd,
        		ORG.SLAN_CD						lane,	/*	LANE		*/
        
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	
        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */
        		RMK.DIFF_RMK			remark,
        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		DST.VPS_ETB_DT			firstetb,
        		EVD.MNL_INP_FLG			mnlInpFlg
        
        FROM	
        		(
        
        			SELECT	
        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */
        					VPS2.SLAN_CD							SLAN_CD     ,
        					VPS2.VSL_CD								VSL_CD      ,			
        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		
        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, 
        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	,
        					
        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	
        					/*
        					VPS2.VPS_PORT_CD						VPS_PORT_CD ,
        					*/
        					(
        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ
        						FROM    VSK_VSL_PORT_SKD    VPS1
        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD
        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO
        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD
        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ
        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */
        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        						AND     ROWNUM = 1
        
        					)										FM_PKEY												
        			FROM	
        					(
        						SELECT	M2_START	START_DATE,
        								P2_END 		END_DATE				
        						FROM	(
        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ 
        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,  -- -3주차부터 조회                                             
        											PLN_YR||PLN_WK										CUR_WEEK,
        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    
        									FROM	EQR_WK_PRD    
        								)
                                WHERE  CUR_WEEK = @[fcast_yrwk]	
							
        					)					PERIOD	,
        
        					VSK_VSL_PORT_SKD	VPS2,	
        					MDM_COUNTRY			CNT2,	
        					MDM_SUBCONTINENT	SCNT2			
        
        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')
        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999
        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */
        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */
        			AND		VPS2.CLPT_SEQ		<>	'1'
        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)
        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD
        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    
        		
        		)					DST		,
        		VSK_VSL_PORT_SKD	ORG		,
        		MDM_COUNTRY			OCNT	,	
        		MDM_SUBCONTINENT	OSCNT	,
        		--MDM_DTL_REV_LANE	RLN		,
        		(
                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ 
        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD
                    FROM	BSA_VVD_MST   -- 108 건
        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			
        		)                   TRD     ,
        		EQR_WK_PRD			WEK		,
        		DIVISION1            DIV     ,
        		EQR_MTY_COD_VVD		EVD		,
        		EQR_MTY_COD_RMK     RMK
        WHERE   ORG.VSL_CD			=	DST.VSL_CD
        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO
        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD
        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)
        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)
        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)
        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD
        -- AND     OSCNT.CONTI_CD		<>    'A'  
        
        AND		ORG.SLAN_CD			=	TRD.LANE_CD
        AND	(
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR		
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )
               OR
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR 
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )
               
        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬
        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬
		OR
	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) 
		OR		
		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
        OR
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
		OR 
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	
        		
            )
        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') 
        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT
        							AND			WEK.WK_END_DT
        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)
        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)
        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)
        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) 
        UNION ALL
        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */
        
        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	
												DV.L3,	'0',
                                                DV.L2,	'1',
        										DV.L1,	'2',
        										DV.M0,	'3',
        										DV.R1,	'4',
        										DV.R2,	'5',
        											NULL)	weekDivision,		/*	WEEK_DIV	*/
        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/
        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			
        		VD.SLAN_CD									lane,				/*	LANE		*/
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/
        	--	1 dclptsql,
        		(
        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        					VPS1.CLPT_SEQ
        			FROM	VSK_VSL_PORT_SKD	VPS1,
        			        MDM_COUNTRY         CNT,    
        					MDM_SUBCONTINENT    SCT   
        
        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              
        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          
        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD
        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    
        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )
        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD
                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD
        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */
        			AND		ROWNUM				=	1
        		)											dclptsql,
        		RMK.DIFF_RMK								remark,				/*	REMARK		*/
        		
        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/
        		'21001231'				firstetb,
        		VD.MNL_INP_FLG			mnlInpFlg
        FROM    DIVISION1            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_VVD		SV,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 ) -- COD SIMULATION 보다 1주더 과거까지 조회
        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */
        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */
        AND		VD.VSL_CD			=	PT.VSL_CD		
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		VD.VSL_CD			=	SV.VSL_CD			(+)
        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)
        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)
        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)
        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)
        
        UNION ALL
        
        /* To Get Arelady Simulated Data Without Vessel Schedule */
        
        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */
                DISTINCT		
        		DECODE	( 
        					VD.N1ST_ETB_YRWK , 
                            DV.L4, '-1', 
                            DV.L3, '0', 
                            DV.L2, '1',
        					DV.L1, '2',
        					DV.M0, '3',
        					DV.R1, '4',
        					DV.R2, '5',
        					NULL
        				)									weekDivision,	/* WEEK_DIV */
        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */
        		VD.COD_CFM_STS_CD							div			,	/* DIV   */
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   
        		VD.SLAN_CD									lane		,	/* LANE  */
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */
        		1 dclptsql,
        		RMK.DIFF_RMK									remark		,	/* REMARK  */
        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		VD.N1ST_ETB_YRWK							firstetb,
        		VD.MNL_INP_FLG								mnlinpflg
        
        FROM    DIVISION1           DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */
        AND		VD.VSL_CD			=	PT.VSL_CD  
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO 
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD 
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD 
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)
        ) 
    ) 
    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거
    )
)

,REPOIN_VVD2 AS
(
    SELECT DISTINCT VVD
    FROM
    (
    SELECT WEEKDIVISION
          ,WEEK
          ,DIV
          ,VVD
          ,LANE
          ,REMARKFLAG
          ,DCLPTSQL
          ,REMARK
          ,CODCFMCTSCD
          ,FIRSTETB
          ,MNLINPFLG
    FROM
    (
        SELECT WEEKDIVISION
              ,WEEK
              ,DIV
              ,VVD
              ,LANE
              ,REMARKFLAG
              ,DCLPTSQL
              ,REMARK
              ,CODCFMCTSCD
              ,FIRSTETB
              ,MNLINPFLG
              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		
        FROM
        (  
        SELECT
        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )
        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )
        		INDEX ( OCNT XPKMDM_COUNTRY )
        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )
        		INDEX ( WEK XAK1EQR_WK_PRD )
        		*/
        
        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', 
												DIV.L3,	'0',
                                                DIV.L2,	'1',
        										DIV.L1,	'2',
        										DIV.M0,	'3',
        										DIV.R1,	'4',
        										DIV.R2,	'5',
        												NULL) weekDivision,
        												/*	WEEK_DIV	*/
        
        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/
        
        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/
        
        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd,
        		ORG.SLAN_CD						lane,	/*	LANE		*/
        
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	
        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */
        		RMK.DIFF_RMK			remark,
        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		DST.VPS_ETB_DT			firstetb,
        		EVD.MNL_INP_FLG			mnlInpFlg
        
        FROM	
        		(        
        			SELECT	
        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */
        					VPS2.SLAN_CD							SLAN_CD     ,
        					VPS2.VSL_CD								VSL_CD      ,			
        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		
        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, 
        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	,
        					
        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	
        					/*
        					VPS2.VPS_PORT_CD						VPS_PORT_CD ,
        					*/
        					(
        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ
        						FROM    VSK_VSL_PORT_SKD    VPS1
        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD
        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO
        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD
        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ
        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */
        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        						AND     ROWNUM = 1
        
        					)										FM_PKEY												
        			FROM	
        					(
        						SELECT	M2_START	START_DATE,
        								P2_END 		END_DATE				
        						FROM	(
        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ 
        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START,  -- -3주차부터 조회                                            
        											PLN_YR||PLN_WK										CUR_WEEK,
        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    
        									FROM	EQR_WK_PRD    
        								)
                                WHERE  CUR_WEEK = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=2 ) 	
							
        					)					PERIOD	,
        
        					VSK_VSL_PORT_SKD	VPS2,	
        					MDM_COUNTRY			CNT2,	
        					MDM_SUBCONTINENT	SCNT2			
        
        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')
        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999
        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */
        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */
        			AND		VPS2.CLPT_SEQ		<>	'1'
        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)
        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD
        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    
        		
        		)					DST		,
        		VSK_VSL_PORT_SKD	ORG		,
        		MDM_COUNTRY			OCNT	,	
        		MDM_SUBCONTINENT	OSCNT	,
        		--MDM_DTL_REV_LANE	RLN		,
        		(
                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ 
        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD
                    FROM	BSA_VVD_MST   -- 108 건
        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			
        		)                   TRD     ,
        		EQR_WK_PRD			WEK		,
        		DIVISION2            DIV     ,
        		EQR_MTY_COD_VVD		EVD		,
        		EQR_MTY_COD_RMK     RMK
        WHERE   ORG.VSL_CD			=	DST.VSL_CD
        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO
        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD
        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)
        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)
        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)
        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD
        -- AND     OSCNT.CONTI_CD		<>    'A'  
        
        AND		ORG.SLAN_CD			=	TRD.LANE_CD
        AND	(
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR		
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )
               OR
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR 
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )
               
        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬
        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬
		OR
	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) 
		OR		
		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
        OR
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
		OR 
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	

        		
            )
        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') 
        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT
        							AND			WEK.WK_END_DT
        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)
        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)
        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)
        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) 
        UNION ALL
        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */
        
        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	
												DV.L3,	'0',	
                                                DV.L2,	'1',
        										DV.L1,	'2',
        										DV.M0,	'3',
        										DV.R1,	'4',
        										DV.R2,	'5',
        											NULL)	weekDivision,		/*	WEEK_DIV	*/
        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/
        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			
        		VD.SLAN_CD									lane,				/*	LANE		*/
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/
        	--	1 dclptsql,
        		(
        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        					VPS1.CLPT_SEQ
        			FROM	VSK_VSL_PORT_SKD	VPS1,
        			        MDM_COUNTRY         CNT,    
        					MDM_SUBCONTINENT    SCT   
        
        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              
        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          
        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD
        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    
        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )
        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD
                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD
        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */
        			AND		ROWNUM				=	1
        		)											dclptsql,
        		RMK.DIFF_RMK								remark,				/*	REMARK		*/
        		
        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/
        		'21001231'				firstetb,
        		VD.MNL_INP_FLG			mnlInpFlg
        FROM    DIVISION2            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_VVD		SV,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */
        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */
        AND		VD.VSL_CD			=	PT.VSL_CD		
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		VD.VSL_CD			=	SV.VSL_CD			(+)
        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)
        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)
        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)
        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)
        
        UNION ALL
        
        /* To Get Arelady Simulated Data Without Vessel Schedule */
        
        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */
                DISTINCT		
        		DECODE	( 
        					VD.N1ST_ETB_YRWK ,
                            DV.L4, '-1', 
                            DV.L3, '0', 
                            DV.L2, '1',
        					DV.L1, '2',
        					DV.M0, '3',
        					DV.R1, '4',
        					DV.R2, '5',
        					NULL
        				)									weekDivision,	/* WEEK_DIV */
        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */
        		VD.COD_CFM_STS_CD							div			,	/* DIV   */
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   
        		VD.SLAN_CD									lane		,	/* LANE  */
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */
        		1 dclptsql,
        		RMK.DIFF_RMK									remark		,	/* REMARK  */
        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		VD.N1ST_ETB_YRWK							firstetb,
        		VD.MNL_INP_FLG								mnlinpflg
        
        FROM    DIVISION2            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */
        AND		VD.VSL_CD			=	PT.VSL_CD  
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO 
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD 
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD 
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)
        ) 
    ) 
    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거
    )
)

-- 3주차 REPO IN VVD
,REPOIN_VVD3 AS
(
    SELECT DISTINCT VVD
    FROM
    (
    SELECT WEEKDIVISION
          ,WEEK
          ,DIV
          ,VVD
          ,LANE
          ,REMARKFLAG
          ,DCLPTSQL
          ,REMARK
          ,CODCFMCTSCD
          ,FIRSTETB
          ,MNLINPFLG
    FROM
    (
        SELECT WEEKDIVISION
              ,WEEK
              ,DIV
              ,VVD
              ,LANE
              ,REMARKFLAG
              ,DCLPTSQL
              ,REMARK
              ,CODCFMCTSCD
              ,FIRSTETB
              ,MNLINPFLG
              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		
        FROM
        (  
        SELECT
        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )
        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )
        		INDEX ( OCNT XPKMDM_COUNTRY )
        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )
        		INDEX ( WEK XAK1EQR_WK_PRD )
        		*/
        
        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', 
												DIV.L3,	'0',
                                                DIV.L2,	'1',
        										DIV.L1,	'2',
        										DIV.M0,	'3',
        										DIV.R1,	'4',
        										DIV.R2,	'5',
        												NULL) weekDivision,
        												/*	WEEK_DIV	*/
        
        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/
        
        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/
        
        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd,
        		ORG.SLAN_CD						lane,	/*	LANE		*/
        
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	
        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */
        		RMK.DIFF_RMK			remark,
        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		DST.VPS_ETB_DT			firstetb,
        		EVD.MNL_INP_FLG			mnlInpFlg
        
        FROM	
        		(        
        			SELECT	
        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */
        					VPS2.SLAN_CD							SLAN_CD     ,
        					VPS2.VSL_CD								VSL_CD      ,			
        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		
        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, 
        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	,
        					
        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	
        					/*
        					VPS2.VPS_PORT_CD						VPS_PORT_CD ,
        					*/
        					(
        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ
        						FROM    VSK_VSL_PORT_SKD    VPS1
        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD
        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO
        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD
        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ
        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */
        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        						AND     ROWNUM = 1
        
        					)										FM_PKEY												
        			FROM	
        					(
        						SELECT	M2_START	START_DATE,
        								P2_END 		END_DATE				
        						FROM	(
        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ 
        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START, -- -3주차부터 조회                                              
        											PLN_YR||PLN_WK										CUR_WEEK,
        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    
        									FROM	EQR_WK_PRD    
        								)
                                WHERE  CUR_WEEK = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=3 ) -- 3주차	
							
        					)					PERIOD	,
        
        					VSK_VSL_PORT_SKD	VPS2,	
        					MDM_COUNTRY			CNT2,	
        					MDM_SUBCONTINENT	SCNT2			
        
        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')
        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999
        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */
        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */
        			AND		VPS2.CLPT_SEQ		<>	'1'
        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)
        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD
        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    
        		
        		)					DST		,
        		VSK_VSL_PORT_SKD	ORG		,
        		MDM_COUNTRY			OCNT	,	
        		MDM_SUBCONTINENT	OSCNT	,
        		--MDM_DTL_REV_LANE	RLN		,
        		(
                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ 
        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD
                    FROM	BSA_VVD_MST   -- 108 건
        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			
        		)                   TRD     ,
        		EQR_WK_PRD			WEK		,
        		DIVISION3            DIV     ,
        		EQR_MTY_COD_VVD		EVD		,
        		EQR_MTY_COD_RMK     RMK
        WHERE   ORG.VSL_CD			=	DST.VSL_CD
        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO
        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD
        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)
        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)
        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)
        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD
        -- AND     OSCNT.CONTI_CD		<>    'A'  
        
        AND		ORG.SLAN_CD			=	TRD.LANE_CD
        AND	(
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR		
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )
               OR
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR 
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )
               
        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬
        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬
		OR
	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) 
		OR		
		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
        OR
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
		OR 
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	

        		
            )
        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') 
        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT
        							AND			WEK.WK_END_DT
        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)
        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)
        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)
        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) 
        UNION ALL
        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */
        
        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	
												DV.L3,	'0',
                                                DV.L2,	'1',
        										DV.L1,	'2',
        										DV.M0,	'3',
        										DV.R1,	'4',
        										DV.R2,	'5',
        											NULL)	weekDivision,		/*	WEEK_DIV	*/
        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/
        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			
        		VD.SLAN_CD									lane,				/*	LANE		*/
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/
        	--	1 dclptsql,
        		(
        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        					VPS1.CLPT_SEQ
        			FROM	VSK_VSL_PORT_SKD	VPS1,
        			        MDM_COUNTRY         CNT,    
        					MDM_SUBCONTINENT    SCT   
        
        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              
        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          
        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD
        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    
        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )
        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD
                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD
        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */
        			AND		ROWNUM				=	1
        		)											dclptsql,
        		RMK.DIFF_RMK								remark,				/*	REMARK		*/
        		
        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/
        		'21001231'				firstetb,
        		VD.MNL_INP_FLG			mnlInpFlg
        FROM    DIVISION3            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_VVD		SV,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */
        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */
        AND		VD.VSL_CD			=	PT.VSL_CD		
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		VD.VSL_CD			=	SV.VSL_CD			(+)
        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)
        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)
        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)
        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)
        
        UNION ALL
        
        /* To Get Arelady Simulated Data Without Vessel Schedule */
        
        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */
                DISTINCT		
        		DECODE	( 
        					VD.N1ST_ETB_YRWK , 
                            DV.L4, '-1',
                            DV.L3, '0',
                            DV.L2, '1',
        					DV.L1, '2',
        					DV.M0, '3',
        					DV.R1, '4',
        					DV.R2, '5',
        					NULL
        				)									weekDivision,	/* WEEK_DIV */
        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */
        		VD.COD_CFM_STS_CD							div			,	/* DIV   */
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   
        		VD.SLAN_CD									lane		,	/* LANE  */
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */
        		1 dclptsql,
        		RMK.DIFF_RMK									remark		,	/* REMARK  */
        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		VD.N1ST_ETB_YRWK							firstetb,
        		VD.MNL_INP_FLG								mnlinpflg
        
        FROM    DIVISION3            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */
        AND		VD.VSL_CD			=	PT.VSL_CD  
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO 
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD 
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD 
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)
        ) 
    ) 
    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거
    )
)

-- 4주차 REPO IN VVD
,REPOIN_VVD4 AS
(
    SELECT DISTINCT VVD
    FROM
    (
    SELECT WEEKDIVISION
          ,WEEK
          ,DIV
          ,VVD
          ,LANE
          ,REMARKFLAG
          ,DCLPTSQL
          ,REMARK
          ,CODCFMCTSCD
          ,FIRSTETB
          ,MNLINPFLG
    FROM
    (
        SELECT WEEKDIVISION
              ,WEEK
              ,DIV
              ,VVD
              ,LANE
              ,REMARKFLAG
              ,DCLPTSQL
              ,REMARK
              ,CODCFMCTSCD
              ,FIRSTETB
              ,MNLINPFLG
              ,ROW_NUMBER() OVER(PARTITION BY WEEKDIVISION, WEEK, VVD, LANE, REMARKFLAG, DCLPTSQL, REMARK ORDER BY FIRSTETB ASC) RN -- ETB 가 다르고 동일 VVD 출현시 제거		
        FROM
        (  
        SELECT
        		/*+	ORDERED USE_NL ( DST ORG  OCNT OSCNT WEK EVD RMK )
        		INDEX ( ORG XPKVSK_VSL_PORT_SKD )
        		INDEX ( OCNT XPKMDM_COUNTRY )
        		INDEX ( OSCNT XPKMDM_SUBCONTINENT )
        		INDEX ( WEK XAK1EQR_WK_PRD )
        		*/
        
        		DECODE( WEK.PLN_YR||WEK.PLN_WK, DIV.L4,	'-1', 
												DIV.L3,	'0',
                                                DIV.L2,	'1',
        										DIV.L1,	'2',
        										DIV.M0,	'3',
        										DIV.R1,	'4',
        										DIV.R2,	'5',
        												NULL) weekDivision,
        												/*	WEEK_DIV	*/
        
        		WEK.PLN_YR||WEK.PLN_WK			week,	/*	WEEK		*/
        
        		NVL(EVD.COD_CFM_STS_CD,'I')		div,	/*	DIV			*/
        
        		ORG.VSL_CD||ORG.SKD_VOY_NO||ORG.SKD_DIR_CD vvd,
        		ORG.SLAN_CD						lane,	/*	LANE		*/
        
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') remarkFlag,			/*	REMARK_FLAG	*/	
        		DST.CLPT_SEQ			dclptsql,	/* Asis First Port Seq */
        		RMK.DIFF_RMK			remark,
        		DECODE( EVD.COD_CFM_STS_CD, NULL, '1', '2' ) codcfmctscd,		/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		DST.VPS_ETB_DT			firstetb,
        		EVD.MNL_INP_FLG			mnlInpFlg
        
        FROM	
        		(        
        			SELECT	
        					/*+  ORDERED USE_NL ( PERIOD VPS2 CNT2 SCNT2 ) */
        					VPS2.SLAN_CD							SLAN_CD     ,
        					VPS2.VSL_CD								VSL_CD      ,			
        					VPS2.SKD_VOY_NO							SKD_VOY_NO  ,		
        					VPS2.SKD_DIR_CD							SKD_DIR_CD	, 
        					TO_CHAR(VPS2.VPS_ETB_DT,'YYYYMMDD')		VPS_ETB_DT	,
        					
        					VPS2.CLPT_SEQ							CLPT_SEQ    ,	
        					/*
        					VPS2.VPS_PORT_CD						VPS_PORT_CD ,
        					*/
        					(
        						SELECT  /*+ INDEX_DESC( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        								VPS1.VPS_PORT_CD||VPS1.CLPT_IND_SEQ
        						FROM    VSK_VSL_PORT_SKD    VPS1
        						WHERE   VPS2.VSL_CD				=	VPS1.VSL_CD
        						AND		VPS2.SKD_VOY_NO			=	VPS1.SKD_VOY_NO
        						AND		VPS2.SKD_DIR_CD			=	VPS1.SKD_DIR_CD
        						AND		VPS2.CLPT_SEQ			>	VPS1.CLPT_SEQ
        					--	AND     NVL(VPS1.SKD_CNG_STS_CD,	' ') <> 'S' /* 2010.05.10 Display All Port */
        						AND     NVL(VPS1.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        						AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        						AND     ROWNUM = 1
        
        					)										FM_PKEY												
        			FROM	
        					(
        						SELECT	M2_START	START_DATE,
        								P2_END 		END_DATE				
        						FROM	(
        									SELECT  /*+ INDEX_FFS( EQR_WK_PRD  XAK2EQR_WK_PRD ) */ 
        											LAG(WK_ST_DT,3)		OVER (ORDER BY PLN_YR,PLN_WK)	M2_START, -- -3주차부터 조회                                              
        											PLN_YR||PLN_WK										CUR_WEEK,
        											LEAD(WK_END_DT,2)	OVER (ORDER BY PLN_YR,PLN_WK)	P2_END                                                                                    
        									FROM	EQR_WK_PRD    
        								)
                                WHERE  CUR_WEEK = ( SELECT WEEK FROM REPO_IN_WEEK WHERE SEQ=4 ) -- 4주차	
							
        					)					PERIOD	,
        
        					VSK_VSL_PORT_SKD	VPS2,	
        					MDM_COUNTRY			CNT2,	
        					MDM_SUBCONTINENT	SCNT2			
        
        			WHERE	VPS2.VPS_ETB_DT		BETWEEN	TO_DATE(PERIOD.START_DATE,	'YYYYMMDD')
        										AND		TO_DATE(PERIOD.END_DATE,	'YYYYMMDD') + 0.99999
        		--	AND		NVL(VPS2.SKD_CNG_STS_CD,' ') <> 'S' /* 2010.05.10 Display All Port */
        			AND     NVL(VPS2.VPS_PORT_CD,	' ') NOT IN ('PAPAC', 'EGSUZ', 'EGPSD')
        			AND		SUBSTR(VPS2.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' ) /* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */
        			AND		VPS2.CLPT_SEQ		<>	'1'
        			AND		CNT2.CNT_CD			=	SUBSTR(VPS2.VPS_PORT_CD, 1, 2)
        			AND		CNT2.SCONTI_CD		=	SCNT2.SCONTI_CD
        			AND     ( SCNT2.CONTI_CD		=    'A'  or ( SCNT2.CONTI_CD = 'F'  and CNT2.CNT_CD = 'ZA' and VPS2.SLAN_CD = 'SFX' ) )    
        		
        		)					DST		,
        		VSK_VSL_PORT_SKD	ORG		,
        		MDM_COUNTRY			OCNT	,	
        		MDM_SUBCONTINENT	OSCNT	,
        		--MDM_DTL_REV_LANE	RLN		,
        		(
                    SELECT	/*+ INDEX_FFS( BSA_VVD_MST XPKBSA_VVD_MST ) */ 
        					DISTINCT TRD_CD, SUBSTR(RLANE_CD,1, 3) LANE_CD
                    FROM	BSA_VVD_MST   -- 108 건
        			WHERE   SUBSTR(RLANE_CD,1, 3) <> 'SFX'			
        		)                   TRD     ,
        		EQR_WK_PRD			WEK		,
        		DIVISION4            DIV     ,
        		EQR_MTY_COD_VVD		EVD		,
        		EQR_MTY_COD_RMK     RMK
        WHERE   ORG.VSL_CD			=	DST.VSL_CD
        AND		ORG.SKD_VOY_NO		=	DST.SKD_VOY_NO
        AND		ORG.SKD_DIR_CD		=	DST.SKD_DIR_CD
        AND		ORG.VPS_PORT_CD		=	SUBSTR(DST.FM_PKEY,1,5)
        AND		ORG.CLPT_IND_SEQ	=	SUBSTR(DST.FM_PKEY,6,2)
        AND		OCNT.CNT_CD			=	SUBSTR(ORG.VPS_PORT_CD, 1, 2)
        AND		OCNT.SCONTI_CD		=	OSCNT.SCONTI_CD
        -- AND     OSCNT.CONTI_CD		<>    'A'  
        
        AND		ORG.SLAN_CD			=	TRD.LANE_CD
        AND	(
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR		
		       ( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E' )
               OR
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'M' )
		       OR 
               ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  )
               
        -- 러시아 NAKHODKA(나홋카) 벙커링 추가, 2013-08-14, 신용찬
        -- 러시아 SLAVYANKA(슬라브양카) 벙커링 추가, 2013-09-06, 신용찬
		OR
	    ( SUBSTR(TRD.TRD_CD,2,1) = 'P' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA')) 
		OR		
		( SUBSTR(TRD.TRD_CD,2,1) = 'E' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'                                AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
        OR
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD != 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) =  'E'        AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))
		OR 
        ( SUBSTR(TRD.TRD_CD,2,1) = 'M' AND TRD.TRD_CD = 'EMS' AND DECODE(OSCNT.CONTI_CD, 'F', 'E', OSCNT.CONTI_CD) IN ('M', 'E')  AND (SUBSTR(DST.FM_PKEY,1,5)= 'RUNJK' OR SUBSTR(DST.FM_PKEY,1,5)= 'RUSKA'))	

        		
            )
        AND     TRD.TRD_CD IN ('TPS','AES','IAS','EMS') 
        AND		DST.VPS_ETB_DT		BETWEEN		WEK.WK_ST_DT
        							AND			WEK.WK_END_DT
        AND		ORG.VSL_CD			=	EVD.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	EVD.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	EVD.SKD_DIR_CD		(+)
        AND		'S'					=	EVD.COD_CFM_DIV_CD	(+)
        AND		ORG.VSL_CD			=	RMK.VSL_CD			(+)
        AND		ORG.SKD_VOY_NO		=	RMK.SKD_VOY_NO		(+)
        AND		ORG.SKD_DIR_CD		=	RMK.SKD_DIR_CD		(+)
        AND		'S'					=	RMK.COD_CFM_DIV_CD	(+) 
        UNION ALL
        SELECT	DISTINCT	/*__________________________________________________________________________________ MTY BKG Data */
        
        		DECODE( VD.N1ST_ETB_YRWK	,	DV.L4,	'-1',	
												DV.L3,	'0',	
                                                DV.L2,	'1',
        										DV.L1,	'2',
        										DV.M0,	'3',
        										DV.R1,	'4',
        										DV.R2,	'5',
        											NULL)	weekDivision,		/*	WEEK_DIV	*/
        		VD.N1ST_ETB_YRWK							week,				/*	WEEK		*/
        		NVL(SV.COD_CFM_STS_CD,VD.COD_CFM_STS_CD)	div,				/*	DIV			*/
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD 	vvd,				/*	VSL_CD		*/			
        		VD.SLAN_CD									lane,				/*	LANE		*/
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y') 	remarkFlag,			/*	REMARK_FLAG	*/
        	--	1 dclptsql,
        		(
        			SELECT	/*+ INDEX ( VPS1 XAK4VSK_VSL_PORT_SKD ) */
        					VPS1.CLPT_SEQ
        			FROM	VSK_VSL_PORT_SKD	VPS1,
        			        MDM_COUNTRY         CNT,    
        					MDM_SUBCONTINENT    SCT   
        
        			WHERE	VPS1.VSL_CD			=	VD.VSL_CD              
        			AND		VPS1.SKD_VOY_NO		=	VD.SKD_VOY_NO          
        			AND		VPS1.SKD_DIR_CD		=	VD.SKD_DIR_CD
        			AND     NVL(VPS1.VPS_PORT_CD,     ' ') NOT IN ('LKCMB', 'JOAQJ')    
        			AND		SUBSTR(VPS1.VPS_PORT_CD,1,2) NOT IN ( 'SA','AE','AU','IN','IR','PK','ES' )
        							/* 2010.03.23 By YHNam : Skip Ports In ( 'SA','AE','AU','IN','IR','PK' ) */ 
        			AND     SUBSTR(VPS1.VPS_PORT_CD,1,2) = CNT.CNT_CD
                    AND     CNT.SCONTI_CD		=    SCT.SCONTI_CD
        			AND     ( SCT.CONTI_CD        =    'A' or ( SCT.CONTI_CD = 'F'  and CNT.CNT_CD = 'ZA' and VPS1.SLAN_CD = 'SFX' ) )                    /* Only Asisa Port */
        			AND		ROWNUM				=	1
        		)											dclptsql,
        		RMK.DIFF_RMK								remark,				/*	REMARK		*/
        		
        		DECODE( SV.COD_CFM_STS_CD, NULL, '3', '2' ) codcfmctscd,		/*	_______________________________________> WORK_FLAG	*/
        		'21001231'				firstetb,
        		VD.MNL_INP_FLG			mnlInpFlg
        FROM    DIVISION4            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_VVD		SV,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD	=	'B'			/*	SIMULATION DIVISION */
        --AND		VD.COD_CFM_STS_CD	=	'B'			/*	MTY BKG DATA		 */
        AND		VD.VSL_CD			=	PT.VSL_CD		
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO	
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD	
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD	
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		VD.VSL_CD			=	SV.VSL_CD			(+)
        AND		VD.SKD_VOY_NO		=	SV.SKD_VOY_NO		(+)
        AND		VD.SKD_DIR_CD		=	SV.SKD_DIR_CD		(+)
        AND		'S'					=	SV.COD_CFM_DIV_CD	(+)
        AND	 	'N'     			= 	SV.MNL_INP_FLG (+)                /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		'S'	                =	RMK.COD_CFM_DIV_CD (+)
        
        UNION ALL
        
        /* To Get Arelady Simulated Data Without Vessel Schedule */
        
        SELECT	/*+ ORDERED USE_NL( DV VD PT ) INDEX( VD XAK1EQR_MTY_COD_VVD ) */
                DISTINCT		
        		DECODE	( 
        					VD.N1ST_ETB_YRWK ,
							DV.L4, '-1', 
                            DV.L3, '0', 
                            DV.L2, '1',
        					DV.L1, '2',
        					DV.M0, '3',
        					DV.R1, '4',
        					DV.R2, '5',
        					NULL
        				)									weekDivision,	/* WEEK_DIV */
        		VD.N1ST_ETB_YRWK							week		,	/* WEEK  */
        		VD.COD_CFM_STS_CD							div			,	/* DIV   */
        		VD.VSL_CD||VD.SKD_VOY_NO||VD.SKD_DIR_CD		vvd			,	/* VSL_CD  */   
        		VD.SLAN_CD									lane		,	/* LANE  */
        		DECODE(NVL(RMK.DIFF_RMK,'N'),'N','N','Y')	remarkFlag	,   /* REMARK_FLAG */
        		1 dclptsql,
        		RMK.DIFF_RMK									remark		,	/* REMARK  */
        		'4'											codcfmctscd	,	/* WORK_FLAG : 1:BayPlan, 2:Simulated, 3:MTY BKG, 4:Tuning VVD */
        		VD.N1ST_ETB_YRWK							firstetb,
        		VD.MNL_INP_FLG								mnlinpflg
        
        FROM    DIVISION4            DV,
        		EQR_MTY_COD_VVD		VD,
        		EQR_MTY_COD_PORT	PT,
        		EQR_MTY_COD_RMK     RMK
        WHERE	VD.N1ST_ETB_YRWK IN ( DV.L4, DV.L3, DV.L2, DV.L1, DV.M0, DV.R1, DV.R2 )
        AND		VD.COD_CFM_DIV_CD   =	'S'   /* SIMULATION DIVISION */
        AND		VD.VSL_CD			=	PT.VSL_CD  
        AND		VD.SKD_VOY_NO		=	PT.SKD_VOY_NO 
        AND		VD.SKD_DIR_CD		=	PT.SKD_DIR_CD 
        AND		VD.COD_CFM_DIV_CD	=	PT.COD_CFM_DIV_CD 
        AND		'D'					=	PT.LODG_DCHG_DIV_CD
        AND		'Y'     			= 	VD.MNL_INP_FLG                 /* <================================ 추가 */
        AND		VD.VSL_CD			=	RMK.VSL_CD  (+)
        AND		VD.SKD_VOY_NO		=	RMK.SKD_VOY_NO (+)
        AND		VD.SKD_DIR_CD		=	RMK.SKD_DIR_CD (+)
        AND		VD.COD_CFM_DIV_CD	=	RMK.COD_CFM_DIV_CD (+)
        ) 
    ) 
    WHERE RN=1 -- ETB 가 다르고 동일 VVD 출현시 제거
    )
)


SELECT DP_SEQ
      ,TITLE
      ,ITEM
      ,FCAST_YRWK0
      ,TP_CD
      
      ,D2_FCAST_QTY+D4_FCAST_QTY+D5_FCAST_QTY+D7_FCAST_QTY+R2_FCAST_QTY+R5_FCAST_QTY+R9_FCAST_QTY+O2_FCAST_QTY+S2_FCAST_QTY+O4_FCAST_QTY+S4_FCAST_QTY+F2_FCAST_QTY+A2_FCAST_QTY+F4_FCAST_QTY+A4_FCAST_QTY+F5_FCAST_QTY+O5_FCAST_QTY G_TOTAL
      ,D2_FCAST_QTY+D4_FCAST_QTY+D5_FCAST_QTY+D7_FCAST_QTY   D_TOTAL
      ,D2_FCAST_QTY D2_FCAST_QTY
      ,D4_FCAST_QTY D4_FCAST_QTY
      ,D5_FCAST_QTY D5_FCAST_QTY
      ,D7_FCAST_QTY D7_FCAST_QTY
      ,R2_FCAST_QTY+R5_FCAST_QTY+R9_FCAST_QTY+O2_FCAST_QTY+S2_FCAST_QTY+O4_FCAST_QTY+S4_FCAST_QTY+F2_FCAST_QTY+A2_FCAST_QTY+F4_FCAST_QTY+A4_FCAST_QTY+F5_FCAST_QTY+O5_FCAST_QTY S_TOTAL
      
      ,R2_FCAST_QTY R2_FCAST_QTY   
      ,R5_FCAST_QTY R5_FCAST_QTY 
      ,R9_FCAST_QTY R9_FCAST_QTY 
      ,O2_FCAST_QTY O2_FCAST_QTY
      ,S2_FCAST_QTY S2_FCAST_QTY 
      ,O4_FCAST_QTY O4_FCAST_QTY 
      ,S4_FCAST_QTY S4_FCAST_QTY  
      ,F2_FCAST_QTY F2_FCAST_QTY 
      ,A2_FCAST_QTY A2_FCAST_QTY 
      ,F4_FCAST_QTY F4_FCAST_QTY 
      ,A4_FCAST_QTY A4_FCAST_QTY 
      ,F5_FCAST_QTY F5_FCAST_QTY
      ,O5_FCAST_QTY O5_FCAST_QTY
  	  ,(
  	      SELECT /*+ INDEX_DESC(A XPKEQR_WK_PRD) */ PLN_YR||PLN_WK
          FROM EQR_WK_PRD A
          WHERE PLN_YR||PLN_WK < @[fcast_yrwk]
          AND   ROWNUM = 1
       ) INP_YRWK
	  ,(SELECT @[loc_cd] LOC_CD FROM DUAL P) LOC_CD   
      ,(SELECT @[loc_grp_cd] LOC_GRP_CD FROM DUAL P) LOC_GRP_CD  
FROM
(
    SELECT A.DP_SEQ
          ,A.TITLE
          ,A.ITEM
          ,'' IMAGE_BUTTON
          ,A.FCAST_YRWK0
          ,A.TP_CD
          
          ,A.D2_FCAST_QTY
          ,A.D4_FCAST_QTY
          ,A.D5_FCAST_QTY
          ,A.D7_FCAST_QTY
          ,A.R2_FCAST_QTY
          ,A.R5_FCAST_QTY
          ,A.R9_FCAST_QTY
          ,A.O2_FCAST_QTY
          ,A.S2_FCAST_QTY
          ,A.O4_FCAST_QTY
          ,A.S4_FCAST_QTY
          ,A.F2_FCAST_QTY
          ,A.A2_FCAST_QTY
          ,A.F4_FCAST_QTY
          ,A.A4_FCAST_QTY
          ,A.F5_FCAST_QTY
          ,A.O5_FCAST_QTY
    FROM
    (
        -- Sound MT, Damage MT (첫번째주)
        SELECT B.TP_CD DP_SEQ
              ,DECODE(B.TP_CD, 1,'Sound MT','Damage MT') TITLE
              ,DECODE(B.TP_CD, 1,'Sound MT','Damage MT') ITEM
              ,B.FCAST_YRWK0
              ,B.TP_CD
              ,NVL(D2_FCAST_QTY,0) D2_FCAST_QTY
              ,NVL(D4_FCAST_QTY,0) D4_FCAST_QTY
              ,NVL(D5_FCAST_QTY,0) D5_FCAST_QTY
              ,NVL(D7_FCAST_QTY,0) D7_FCAST_QTY
              ,NVL(R2_FCAST_QTY,0) R2_FCAST_QTY
              ,NVL(R5_FCAST_QTY,0) R5_FCAST_QTY
              ,NVL(R9_FCAST_QTY,0) R9_FCAST_QTY
              ,NVL(O2_FCAST_QTY,0) O2_FCAST_QTY
              ,NVL(S2_FCAST_QTY,0) S2_FCAST_QTY
              ,NVL(O4_FCAST_QTY,0) O4_FCAST_QTY
              ,NVL(S4_FCAST_QTY,0) S4_FCAST_QTY
              ,NVL(F2_FCAST_QTY,0) F2_FCAST_QTY
              ,NVL(A2_FCAST_QTY,0) A2_FCAST_QTY
              ,NVL(F4_FCAST_QTY,0) F4_FCAST_QTY
              ,NVL(A4_FCAST_QTY,0) A4_FCAST_QTY
              ,NVL(F5_FCAST_QTY,0) F5_FCAST_QTY               
              ,NVL(O5_FCAST_QTY,0) O5_FCAST_QTY               
        FROM 
        (
            SELECT A.DMG_FLG
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',CNTR_QTY,0)) D2_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',CNTR_QTY,0)) D4_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',CNTR_QTY,0)) D5_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',CNTR_QTY,0)) D7_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',CNTR_QTY,0)) R2_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',CNTR_QTY,0)) R5_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',CNTR_QTY,0)) R9_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',CNTR_QTY,0)) O2_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',CNTR_QTY,0)) S2_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',CNTR_QTY,0)) O4_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',CNTR_QTY,0)) S4_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',CNTR_QTY,0)) F2_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',CNTR_QTY,0)) A2_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',CNTR_QTY,0)) F4_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',CNTR_QTY,0)) A4_FCAST_QTY
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',CNTR_QTY,0)) F5_FCAST_QTY 
                  ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',CNTR_QTY,0)) O5_FCAST_QTY 
            FROM  CIM_ETC_INVT A
            WHERE A.CO_CD (+)         = 'H'
            AND   A.LOC_GRP_CD(+)     = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
            AND   A.INVT_USE_TP_CD(+) = '1'
            AND   A.BSE_DT (+)        = @[fcast_yrwk]
            AND   A.LOC_CD(+)         = @[loc_cd]
            GROUP BY A.DMG_FLG
        ),
        LV_DUMMY_ITEM  B
        WHERE DECODE(DMG_FLG(+),'Y',2,1) = B.TP_CD -- 1 : sound, 2 : damage
        AND   B.TP_CD IN (1,2)

        -- MG FCST, OP FCST (모든주차)
        UNION ALL
        SELECT DECODE(A.DP_SEQ,1,3,2,4,3,8,4,9,5,16,7,20,9,27,11,31,13,38,15,42) DP_SEQ,    
               DECODE(A.DP_SEQ,1,'Supply',2,'Supply',3,'Demand',4,'Demand',
                               5,'Supply',7,'Demand', 9,'Supply',11,'Demand',
                               13,'Supply',15,'Demand') TITLE,
        
               DECODE(A.DP_SEQ,1,'MG FCST',2,'I/B Remaining (F~S)',3,'OP FCST',4,'O/B Remaining (F~S)',
                               5,'MG FCST',7,'OP FCST', 9,'MG FCST',11,'OP FCST',
                               13,'MG FCST',15,'OP FCST') ITEM
               ,A.FCAST_YRWK
               ,A.TP_CD
               ,A.D2_FCAST_QTY
               ,A.D4_FCAST_QTY
               ,A.D5_FCAST_QTY
               ,A.D7_FCAST_QTY
               ,A.R2_FCAST_QTY
               ,A.R5_FCAST_QTY
               ,A.R9_FCAST_QTY
               ,A.O2_FCAST_QTY
               ,A.S2_FCAST_QTY
               ,A.O4_FCAST_QTY
               ,A.S4_FCAST_QTY
               ,A.F2_FCAST_QTY
               ,A.A2_FCAST_QTY
               ,A.F4_FCAST_QTY
               ,A.A4_FCAST_QTY
               ,A.F5_FCAST_QTY                 
               ,A.O5_FCAST_QTY   
        FROM
        (
            SELECT ROW_NUMBER() OVER (ORDER BY B.FCAST_YRWK,B.TP_CD) DP_SEQ
                  ,B.FCAST_YRWK0
                  ,1
                  ,B.FCAST_YRWK
                  ,B.TP_CD
                  ,NVL(A.D2_FCAST_QTY,0) D2_FCAST_QTY
                  ,NVL(A.D4_FCAST_QTY,0) D4_FCAST_QTY
                  ,NVL(A.D5_FCAST_QTY,0) D5_FCAST_QTY
                  ,NVL(A.D7_FCAST_QTY,0) D7_FCAST_QTY
                  ,NVL(A.R2_FCAST_QTY,0) R2_FCAST_QTY
                  ,NVL(A.R5_FCAST_QTY,0) R5_FCAST_QTY
                  ,NVL(A.R9_FCAST_QTY,0) R9_FCAST_QTY
                  ,NVL(A.O2_FCAST_QTY,0) O2_FCAST_QTY
                  ,NVL(A.S2_FCAST_QTY,0) S2_FCAST_QTY
                  ,NVL(A.O4_FCAST_QTY,0) O4_FCAST_QTY
                  ,NVL(A.S4_FCAST_QTY,0) S4_FCAST_QTY
                  ,NVL(A.F2_FCAST_QTY,0) F2_FCAST_QTY
                  ,NVL(A.A2_FCAST_QTY,0) A2_FCAST_QTY
                  ,NVL(A.F4_FCAST_QTY,0) F4_FCAST_QTY
                  ,NVL(A.A4_FCAST_QTY,0) A4_FCAST_QTY
                  ,NVL(A.F5_FCAST_QTY,0) F5_FCAST_QTY
                  ,NVL(A.O5_FCAST_QTY,0) O5_FCAST_QTY
            FROM EQR_MTY_BAL_RPT A 
                ,LV_DUMMY_FNL B
            WHERE A.CO_CD(+)         = 'H'
            AND   A.LOC_GRP_CD(+)    = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)            
            AND   A.LOC_CD(+)        = B.LOC_CD
            AND   A.INP_YRWK(+)      = B.INP_YRWK
            AND   A.FCAST_YRWK(+)    = B.FCAST_YRWK
            AND   A.MTY_BAL_TP_CD(+) = B.TP_CD
        ) A
        WHERE A.FCAST_YRWK0 = A.FCAST_YRWK 
        OR    (A.FCAST_YRWK0 <> A.FCAST_YRWK  AND A.TP_CD IN(1,3))    

        --OW&On-hire, + Others, - Others (모든주차)
        UNION ALL
        SELECT DECODE(A.DP_SEQ,1,6,2,7,3,12,4,18,5,19,6,23,7,29,8,30,9,34,10,40,11,41,12,45) DP_SEQ
              ,DECODE(A.TP_CD,1,'Supply',2,'Supply',4,'Demand') TITLE
              ,DECODE(A.TP_CD,1,'OW&On-hire',2,'+ Others',4,'- Others') ITEM
              ,A.FCAST_YRWK,A.TP_CD
              ,A.D2_FCAST_QTY
              ,A.D4_FCAST_QTY
              ,A.D5_FCAST_QTY
              ,A.D7_FCAST_QTY
              ,A.R2_FCAST_QTY
              ,A.R5_FCAST_QTY
              ,A.R9_FCAST_QTY
              ,A.O2_FCAST_QTY
              ,A.S2_FCAST_QTY
              ,A.O4_FCAST_QTY
              ,A.S4_FCAST_QTY
              ,A.F2_FCAST_QTY
              ,A.A2_FCAST_QTY
              ,A.F4_FCAST_QTY
              ,A.A4_FCAST_QTY
              ,A.F5_FCAST_QTY       
              ,A.O5_FCAST_QTY       
        FROM
        (
            SELECT   ROW_NUMBER() OVER (ORDER BY B.FCAST_YRWK,B.TP_CD) DP_SEQ
                    ,B.FCAST_YRWK
                    ,B.TP_CD
                    ,NVL(SUM(A.D2_FCAST_QTY),0) D2_FCAST_QTY
                    ,NVL(SUM(A.D4_FCAST_QTY),0) D4_FCAST_QTY
                    ,NVL(SUM(A.D5_FCAST_QTY),0) D5_FCAST_QTY
                    ,NVL(SUM(A.D7_FCAST_QTY),0) D7_FCAST_QTY
                    ,NVL(SUM(A.R2_FCAST_QTY),0) R2_FCAST_QTY
                    ,NVL(SUM(A.R5_FCAST_QTY),0) R5_FCAST_QTY
                    ,NVL(SUM(A.R9_FCAST_QTY),0) R9_FCAST_QTY
                    ,NVL(SUM(A.O2_FCAST_QTY),0) O2_FCAST_QTY
                    ,NVL(SUM(A.S2_FCAST_QTY),0) S2_FCAST_QTY
                    ,NVL(SUM(A.O4_FCAST_QTY),0) O4_FCAST_QTY
                    ,NVL(SUM(A.S4_FCAST_QTY),0) S4_FCAST_QTY
                    ,NVL(SUM(A.F2_FCAST_QTY),0) F2_FCAST_QTY
                    ,NVL(SUM(A.A2_FCAST_QTY),0) A2_FCAST_QTY
                    ,NVL(SUM(A.F4_FCAST_QTY),0) F4_FCAST_QTY
                    ,NVL(SUM(A.A4_FCAST_QTY),0) A4_FCAST_QTY
                    ,NVL(SUM(A.F5_FCAST_QTY),0) F5_FCAST_QTY
                    ,NVL(SUM(A.O5_FCAST_QTY),0) O5_FCAST_QTY
            FROM  EQR_MTY_BAL_RPT_OTR A 
                 ,LV_DUMMY_FNL B
            WHERE A.CO_CD(+) = 'H'
            AND   A.LOC_GRP_CD(+) = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)            
            AND   A.LOC_CD(+) = B.LOC_CD
            AND   A.INP_YRWK(+) = B.INP_YRWK
            AND   A.FCAST_YRWK(+) = B.FCAST_YRWK
            AND   A.MTY_BAL_OTR_TP_CD(+) = B.TP_CD
            AND   B.TP_CD IN(1,2,4)
            GROUP BY  B.FCAST_YRWK,B.TP_CD
        ) A        

        -- Repo In (COD SIMULATION 추출)
        UNION ALL
        SELECT    DP_SEQ
                 ,'Demand', 'Repo In', A.FCAST_YRWK FCAST_YRWK0, 1
                 ,SUM(A.D2_QTY)  D2_FCAST_QTY
                 ,SUM(A.D4_QTY)  D4_FCAST_QTY
                 ,SUM(A.D5_QTY)  D5_FCAST_QTY
                 ,SUM(A.D7_QTY)  D7_FCAST_QTY
                 ,SUM(A.R2_QTY)  R2_FCAST_QTY
                 ,SUM(A.R5_QTY)  R5_FCAST_QTY
                 ,SUM(A.R9_QTY)  R9_FCAST_QTY
                 ,SUM(A.O2_QTY)  O2_FCAST_QTY
                 ,SUM(A.S2_QTY)  S2_FCAST_QTY
                 ,SUM(A.O4_QTY)  O4_FCAST_QTY
                 ,SUM(A.S4_QTY)  S4_FCAST_QTY
                 ,SUM(A.F2_QTY)  F2_FCAST_QTY
                 ,SUM(A.A2_QTY)  A2_FCAST_QTY
                 ,SUM(A.F4_QTY)  F4_FCAST_QTY
                 ,SUM(A.A4_QTY)  A4_FCAST_QTY
                 ,SUM(A.F5_QTY)  F5_FCAST_QTY
                 ,SUM(A.O5_QTY)  O5_FCAST_QTY
        FROM
        (   

		#if(${curr_flag} =='F')	-- 입력된 주차가 현재주차 아닐때

            -- 첫번째 주차 (SEQ = 1)           
            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ
                  ,@[fcast_yrwk] FCAST_YRWK
                  ,A.D2_QTY
                  ,A.D4_QTY
                  ,A.D5_QTY
                  ,A.D7_QTY
                  ,A.R2_QTY  
                  ,A.R5_QTY
                  ,A.R9_QTY
                  ,A.O2_QTY
                  ,A.S2_QTY
                  ,A.O4_QTY
                  ,A.S4_QTY
                  ,A.F2_QTY
                  ,A.A2_QTY
                  ,A.F4_QTY
                  ,A.A4_QTY
                  ,A.F5_QTY     
                  ,A.O5_QTY
            
            FROM 
            (       
              
                -- BAY PLAN, I
                SELECT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,B.SLAN_CD
                      ,A.POD_CD
                      ,B.YD_CD
                      ,B.VPS_ETB_DT ETB_DT
                      ,'I' DIV
                      ,B.SEQ
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY
                FROM OPF_BAY_PLN_LDIS A,
                (
                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ
                    FROM VSK_VSL_PORT_SKD A
                        ,REPOIN_VVD1 Z
                        ,REPO_IN_WEEK X
                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                    AND   A.VPS_PORT_CD IN (
                                            SELECT LOC_CD FROM MDM_LOCATION 
                                            WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                          
                                                             )
                                         )
                    AND   A.CLPT_IND_SEQ = '1'
                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 
			        AND   X.SEQ = 1  -- 1주차
                ) B
                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)
                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER
                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN
                AND   A.VSL_CD           = B.VSL_CD
                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
                AND   A.POD_CD           = B.VPS_PORT_CD
                GROUP BY A.VSL_CD
                        ,A.SKD_VOY_NO
                        ,A.SKD_DIR_CD
                        ,B.SLAN_CD
                        ,A.POD_CD
                        ,B.YD_CD
                        ,B.VPS_ETB_DT
                        ,B.SEQ
                        
                UNION ALL
                
                -- SIMULATION, CONFIRMATION, BASIC 
                SELECT Z.VSL_CD
                      ,Z.SKD_VOY_NO
                      ,Z.SKD_DIR_CD
                      ,Z.SLAN_CD
                      ,Z.VPS_PORT_CD POD_CD
                      ,Z.YD_CD
                      ,Z.ETB_DT
                      ,P.COD_CFM_DIV_CD DIV
                      ,Z.SEQ
                      ,P.D2_QTY
                      ,P.D4_QTY
                      ,P.D5_QTY
                      ,P.D7_QTY
                      ,P.R2_QTY
                      ,P.R5_QTY
                      ,P.R9_QTY
                      ,P.O2_QTY
                      ,P.S2_QTY
                      ,P.O4_QTY
                      ,P.S4_QTY
                      ,P.F2_QTY
                      ,P.A2_QTY
                      ,P.F4_QTY
                      ,P.A4_QTY
                      ,P.F5_QTY
                      ,P.O5_QTY
                FROM EQR_MTY_COD_VVD  V,
                     EQR_MTY_COD_PORT P,
                     (
                         SELECT A.VSL_CD
                               ,A.SKD_VOY_NO
                               ,A.SKD_DIR_CD
                               ,A.SLAN_CD
                               ,A.VPS_PORT_CD
                               ,A.YD_CD
                               ,A.VPS_ETB_DT ETB_DT
                               ,X.WEEK
                               ,X.SEQ
                         FROM VSK_VSL_PORT_SKD A
                             ,REPOIN_VVD1 Z 
                             ,REPO_IN_WEEK X       
                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   
                         AND   A.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                             
                                                                     )
                                               )    
                         AND   A.CLPT_IND_SEQ = '1'		                                                                  
                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  
	                     AND   X.SEQ = 1  -- 1주차
                     ) Z                              
                WHERE V.VSL_CD			= P.VSL_CD
                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO
                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD
                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD
                AND	  'D'				= P.LODG_DCHG_DIV_CD
                AND   P.VSL_CD          = Z.VSL_CD
                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
                AND   P.PORT_CD         = Z.VPS_PORT_CD  
            ) A,
            (
                SELECT VSL_CD
                      ,SKD_VOY_NO
                      ,SKD_DIR_CD
                      ,VPS_PORT_CD
                      ,DIV
                      ,SEQ
                FROM 
                (    
                    -- VVD 별 I/S/C 확인
                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                          ,B.VSL_CD
                          ,B.SKD_VOY_NO
                          ,B.SKD_DIR_CD
                          ,B.VPS_PORT_CD
                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     
                          ,X.SEQ
                                               
                    FROM EQR_MTY_COD_VVD A
                        ,VSK_VSL_PORT_SKD B
                        ,REPO_IN_WEEK X
                    WHERE B.VSL_CD     = A.VSL_CD(+)
                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)
                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)
                    AND   B.VPS_PORT_CD IN (
                                             SELECT LOC_CD FROM MDM_LOCATION 
                                             WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                            
                                                             )
                                           )
                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999
	                AND   X.SEQ = 1  -- 1주차
                    AND   B.CLPT_IND_SEQ = '1'
                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외
                ) 
                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
            ) B
            WHERE A.VSL_CD     = B.VSL_CD
            AND   A.SKD_VOY_NO = B.SKD_VOY_NO
            AND   A.SKD_DIR_CD = B.SKD_DIR_CD
            AND   A.POD_CD     = B.VPS_PORT_CD
            AND   A.DIV        = B.DIV   
            AND   A.SEQ        = B.SEQ   


		#elseif(${curr_flag} =='T')  -- 입력주차가 현재주차이고 첫번째주차일때


		  SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ
                ,A.FCAST_YRWK
                ,D2_QTY
                ,D4_QTY                  
                ,D5_QTY                  
                ,D7_QTY                  
                ,R2_QTY                  
                ,R5_QTY                  
                ,R9_QTY                  
                ,O2_QTY                  
                ,O4_QTY                  
                ,S2_QTY                  
                ,S4_QTY                  
                ,F2_QTY                  
                ,F4_QTY                  
                ,F5_QTY                  
                ,A2_QTY                  
                ,A4_QTY                  
                ,O5_QTY   
           FROM
           (                       
                SELECT B.SEQ
                      ,@[fcast_yrwk] FCAST_YRWK
                      ,B.VSL_CD
                      ,B.SKD_VOY_NO
                      ,B.SKD_DIR_CD
                      ,B.SLAN_CD
                      ,B.YD_CD                   
                      -- RI 수량 - VD 수량 빼기(결과값이 0보다 작으면 0처리)                                                                 
                     ,CASE WHEN SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D2_QTY,0)-NVL(A.D2_QTY,0)) END D2_QTY
                     ,CASE WHEN SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D4_QTY,0)-NVL(A.D4_QTY,0)) END D4_QTY
                     ,CASE WHEN SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D5_QTY,0)-NVL(A.D5_QTY,0)) END D5_QTY
                     ,CASE WHEN SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.D7_QTY,0)-NVL(A.D7_QTY,0)) END D7_QTY
                     ,CASE WHEN SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R2_QTY,0)-NVL(A.R2_QTY,0)) END R2_QTY
                     ,CASE WHEN SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R5_QTY,0)-NVL(A.R5_QTY,0)) END R5_QTY
                     ,CASE WHEN SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.R9_QTY,0)-NVL(A.R9_QTY,0)) END R9_QTY
                     ,CASE WHEN SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O2_QTY,0)-NVL(A.O2_QTY,0)) END O2_QTY
                     ,CASE WHEN SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O4_QTY,0)-NVL(A.O4_QTY,0)) END O4_QTY
                     ,CASE WHEN SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S2_QTY,0)-NVL(A.S2_QTY,0)) END S2_QTY
                     ,CASE WHEN SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.S4_QTY,0)-NVL(A.S4_QTY,0)) END S4_QTY
                     ,CASE WHEN SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F2_QTY,0)-NVL(A.F2_QTY,0)) END F2_QTY
                     ,CASE WHEN SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F4_QTY,0)-NVL(A.F4_QTY,0)) END F4_QTY
                     ,CASE WHEN SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.F5_QTY,0)-NVL(A.F5_QTY,0)) END F5_QTY
                     ,CASE WHEN SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A2_QTY,0)-NVL(A.A2_QTY,0)) END A2_QTY
                     ,CASE WHEN SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.A4_QTY,0)-NVL(A.A4_QTY,0)) END A4_QTY                                   
                     ,CASE WHEN SUM(NVL(B.O5_QTY,0)-NVL(A.O5_QTY,0)) < 0 THEN 0 ELSE SUM(NVL(B.O5_QTY,0)-NVL(A.O5_QTY,0)) END O5_QTY      


                            
                FROM
                (   
                    -- MVMT VD  
                    SELECT A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.VSL_LANE_CD 
                          ,A.YD_CD
                          ,A.ETD_DT ETB_DT
                          ,X.SEQ
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY)),0) D2_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY)),0) D4_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY)),0) D5_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY)),0) D7_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R2', A.CNTR_QTY)),0) R2_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R5', A.CNTR_QTY)),0) R5_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'R9', A.CNTR_QTY)),0) R9_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O2', A.CNTR_QTY)),0) O2_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'S2', A.CNTR_QTY)),0) S2_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O4', A.CNTR_QTY)),0) O4_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'S4', A.CNTR_QTY)),0) S4_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F2', A.CNTR_QTY)),0) F2_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'A2', A.CNTR_QTY)),0) A2_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F4', A.CNTR_QTY)),0) F4_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'A4', A.CNTR_QTY)),0) A4_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'F5', A.CNTR_QTY)),0) F5_QTY
                          ,NVL(SUM(DECODE(A.CNTR_TPSZ_CD, 'O5', A.CNTR_QTY)),0) O5_QTY 
                                                         
                          ,'VD' FLAG                  
                    FROM EQR_MTY_BAL_RPT_DCHG_SNAP A       
                        ,REPO_IN_WEEK X                                            
                    WHERE A.ETD_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE((SELECT TO_CHAR(NEXT_DAY(SYSDATE, 2)-7, 'YYYYMMDD') FROM DUAL), 'YYYYMMDD')+0.99999  -- LCC별 시작일부터 이번주 월요일까지                  
		        	AND   X.SEQ = 1  -- 1주차         
		        	GROUP BY A.VSL_CD
                            ,A.SKD_VOY_NO
                            ,A.SKD_DIR_CD
                            ,A.VSL_LANE_CD
                            ,A.YD_CD
                            ,A.ETD_DT
                            ,X.SEQ
                ) A
                
           ,    ( 
                    -- COD SIMULATION 첫번째 주차 (SEQ = 1)           
                    SELECT A.VSL_CD
                          ,A.SKD_VOY_NO
                          ,A.SKD_DIR_CD
                          ,A.SLAN_CD
                          ,A.YD_CD
                          ,A.ETB_DT
                          ,A.SEQ
                          ,SUM(A.D2_QTY) D2_QTY
                          ,SUM(A.D4_QTY) D4_QTY
                          ,SUM(A.D5_QTY) D5_QTY
                          ,SUM(A.D7_QTY) D7_QTY
                          ,SUM(A.R2_QTY) R2_QTY  
                          ,SUM(A.R5_QTY) R5_QTY
                          ,SUM(A.R9_QTY) R9_QTY
                          ,SUM(A.O2_QTY) O2_QTY
                          ,SUM(A.S2_QTY) S2_QTY
                          ,SUM(A.O4_QTY) O4_QTY
                          ,SUM(A.S4_QTY) S4_QTY
                          ,SUM(A.F2_QTY) F2_QTY
                          ,SUM(A.A2_QTY) A2_QTY
                          ,SUM(A.F4_QTY) F4_QTY
                          ,SUM(A.A4_QTY) A4_QTY
                          ,SUM(A.F5_QTY) F5_QTY    
                          ,SUM(A.O5_QTY) O5_QTY
                          ,'RI' FLAG
                    FROM 
                    (                  
                  
                        -- BAY PLAN, I
                        SELECT A.VSL_CD
                              ,A.SKD_VOY_NO
                              ,A.SKD_DIR_CD
                              ,B.SLAN_CD
                              ,A.POD_CD
                              ,B.YD_CD
                              ,B.VPS_ETB_DT ETB_DT
                              ,'I' DIV
                              ,B.SEQ
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY
                              ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY
                        FROM OPF_BAY_PLN_LDIS A,
                        (
                            SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ
                            FROM VSK_VSL_PORT_SKD A
                                ,REPOIN_VVD1 Z
                                ,REPO_IN_WEEK X
                            WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                            AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                            AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                            AND   A.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                         SELECT SCC_CD 
                                                                         FROM MDM_EQ_ORZ_CHT 
                                                                       #if (${loc_grp_cd} == 'E') 
	                                                                     WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #elseif (${loc_grp_cd} == 'L') 
	                                                                     WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #else -- 'S' 
	                                                                     WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #end                                                                                                          
                                                                     )
                                                 )
                            AND   A.CLPT_IND_SEQ = '1'
                            AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 
			                AND   X.SEQ = 1  -- 1주차
                        ) B
                        WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)
                        AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER
                        AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN
                        AND   A.VSL_CD           = B.VSL_CD
                        AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
                        AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
                        AND   A.POD_CD           = B.VPS_PORT_CD
                        GROUP BY A.VSL_CD
                                ,A.SKD_VOY_NO
                                ,A.SKD_DIR_CD
                                ,B.SLAN_CD
                                ,A.POD_CD
                                ,B.YD_CD
                                ,B.VPS_ETB_DT
                                ,B.SEQ
                                
                        UNION ALL
                        
                        -- SIMULATION, CONFIRMATION, BASIC 
                        SELECT Z.VSL_CD
                              ,Z.SKD_VOY_NO
                              ,Z.SKD_DIR_CD
                              ,Z.SLAN_CD
                              ,Z.VPS_PORT_CD POD_CD
                              ,Z.YD_CD
                              ,Z.ETB_DT
                              ,P.COD_CFM_DIV_CD DIV
                              ,Z.SEQ
                              ,P.D2_QTY
                              ,P.D4_QTY
                              ,P.D5_QTY
                              ,P.D7_QTY
                              ,P.R2_QTY
                              ,P.R5_QTY
                              ,P.R9_QTY
                              ,P.O2_QTY
                              ,P.S2_QTY
                              ,P.O4_QTY
                              ,P.S4_QTY
                              ,P.F2_QTY
                              ,P.A2_QTY
                              ,P.F4_QTY
                              ,P.A4_QTY
                              ,P.F5_QTY
                              ,P.O5_QTY
                        FROM EQR_MTY_COD_VVD  V,
                             EQR_MTY_COD_PORT P,
                             (
                                 SELECT A.VSL_CD
                                       ,A.SKD_VOY_NO
                                       ,A.SKD_DIR_CD
                                       ,A.SLAN_CD
                                       ,A.VPS_PORT_CD
                                       ,A.YD_CD
                                       ,A.VPS_ETB_DT ETB_DT
                                       ,X.WEEK
                                       ,X.SEQ
                                 FROM VSK_VSL_PORT_SKD A
                                     ,REPOIN_VVD1 Z 
                                     ,REPO_IN_WEEK X       
                                 WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                                 AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                                 AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   
                                 AND   A.VPS_PORT_CD IN (
                                                            SELECT LOC_CD FROM MDM_LOCATION 
                                                            WHERE SCC_CD IN ( 
                                                                         SELECT SCC_CD 
                                                                         FROM MDM_EQ_ORZ_CHT 
                                                                       #if (${loc_grp_cd} == 'E') 
	                                                                     WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #elseif (${loc_grp_cd} == 'L') 
	                                                                     WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #else -- 'S' 
	                                                                     WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #end                                                                                                             
                                                                             )
                                                       )    
                                 AND   A.CLPT_IND_SEQ = '1'		                                                                  
                                 AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  
	                             AND   X.SEQ = 1  -- 1주차
                             ) Z                              
                        WHERE V.VSL_CD			= P.VSL_CD
                        AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO
                        AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD
                        AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD
                        AND	  'D'				= P.LODG_DCHG_DIV_CD
                        AND   P.VSL_CD          = Z.VSL_CD
                        AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
                        AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
                        AND   P.PORT_CD         = Z.VPS_PORT_CD  
                    ) A,
                    (
                        SELECT VSL_CD
                              ,SKD_VOY_NO
                              ,SKD_DIR_CD
                              ,VPS_PORT_CD
                              ,DIV
                              ,SEQ
                        FROM 
                        (    
                            -- VVD 별 I/S/C 확인
                            SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                                  ,B.VSL_CD
                                  ,B.SKD_VOY_NO
                                  ,B.SKD_DIR_CD
                                  ,B.VPS_PORT_CD
                                  ,NVL(A.COD_CFM_STS_CD,'I') DIV     
                                  ,X.SEQ
                                                       
                            FROM EQR_MTY_COD_VVD A
                                ,VSK_VSL_PORT_SKD B
                                ,REPO_IN_WEEK X
                            WHERE B.VSL_CD     = A.VSL_CD(+)
                            AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)
                            AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)
                            AND   B.VPS_PORT_CD IN (
                                                     SELECT LOC_CD FROM MDM_LOCATION 
                                                     WHERE SCC_CD IN ( 
                                                                         SELECT SCC_CD 
                                                                         FROM MDM_EQ_ORZ_CHT 
                                                                       #if (${loc_grp_cd} == 'E') 
	                                                                     WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #elseif (${loc_grp_cd} == 'L') 
	                                                                     WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #else -- 'S' 
	                                                                     WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                                       #end                                                                                            
                                                                     )
                                                   )
                            AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999
	                        AND   X.SEQ = 1  -- 1주차
                            AND   B.CLPT_IND_SEQ = '1'
                            AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외
                        ) 
                        WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
                    ) B
                    WHERE A.VSL_CD     = B.VSL_CD
                    AND   A.SKD_VOY_NO = B.SKD_VOY_NO
                    AND   A.SKD_DIR_CD = B.SKD_DIR_CD
                    AND   A.POD_CD     = B.VPS_PORT_CD
                    AND   A.DIV        = B.DIV   
                    AND   A.SEQ        = B.SEQ   
                
                    GROUP BY A.VSL_CD
                            ,A.SKD_VOY_NO
                            ,A.SKD_DIR_CD
                            ,A.SLAN_CD
                            ,A.YD_CD
                            ,A.ETB_DT
                            ,A.SEQ                                                                        
                ) B
                WHERE  A.VSL_CD     (+) = B.VSL_CD
                AND    A.SKD_VOY_NO (+) = B.SKD_VOY_NO
                AND    A.SKD_DIR_CD (+) = B.SKD_DIR_CD
                AND    A.VSL_LANE_CD(+) = B.SLAN_CD
                AND    A.YD_CD      (+) = B.YD_CD
                
                GROUP BY B.SEQ
                        ,B.VSL_CD
                        ,B.SKD_VOY_NO
                        ,B.SKD_DIR_CD
                        ,B.SLAN_CD
                        ,B.YD_CD      
			) A

        #end


			UNION ALL
            -- 2번째 주차 (SEQ = 2)           
            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ
                  ,@[fcast_yrwk] FCAST_YRWK
                  ,A.D2_QTY
                  ,A.D4_QTY
                  ,A.D5_QTY
                  ,A.D7_QTY
                  ,A.R2_QTY  
                  ,A.R5_QTY
                  ,A.R9_QTY
                  ,A.O2_QTY
                  ,A.S2_QTY
                  ,A.O4_QTY
                  ,A.S4_QTY
                  ,A.F2_QTY
                  ,A.A2_QTY
                  ,A.F4_QTY
                  ,A.A4_QTY
                  ,A.F5_QTY     
                  ,A.O5_QTY
            
            FROM 
            (       
              
                -- BAY PLAN, I
                SELECT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,B.SLAN_CD
                      ,A.POD_CD
                      ,B.YD_CD
                      ,B.VPS_ETB_DT ETB_DT
                      ,'I' DIV
                      ,B.SEQ
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY
                FROM OPF_BAY_PLN_LDIS A,
                (
                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ
                    FROM VSK_VSL_PORT_SKD A
                        ,REPOIN_VVD2 Z
                        ,REPO_IN_WEEK X
                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                    AND   A.VPS_PORT_CD IN (
                                            SELECT LOC_CD FROM MDM_LOCATION 
                                            WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                          
                                                             )
                                         )
                    AND   A.CLPT_IND_SEQ = '1'
                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 
			        AND   X.SEQ = 2  -- 2주차
                ) B
                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)
                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER
                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN
                AND   A.VSL_CD           = B.VSL_CD
                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
                AND   A.POD_CD           = B.VPS_PORT_CD
                GROUP BY A.VSL_CD
                        ,A.SKD_VOY_NO
                        ,A.SKD_DIR_CD
                        ,B.SLAN_CD
                        ,A.POD_CD
                        ,B.YD_CD
                        ,B.VPS_ETB_DT
                        ,B.SEQ
                        
                UNION ALL
                
                -- SIMULATION, CONFIRMATION, BASIC 
                SELECT Z.VSL_CD
                      ,Z.SKD_VOY_NO
                      ,Z.SKD_DIR_CD
                      ,Z.SLAN_CD
                      ,Z.VPS_PORT_CD POD_CD
                      ,Z.YD_CD
                      ,Z.ETB_DT
                      ,P.COD_CFM_DIV_CD DIV
                      ,Z.SEQ
                      ,P.D2_QTY
                      ,P.D4_QTY
                      ,P.D5_QTY
                      ,P.D7_QTY
                      ,P.R2_QTY
                      ,P.R5_QTY
                      ,P.R9_QTY
                      ,P.O2_QTY
                      ,P.S2_QTY
                      ,P.O4_QTY
                      ,P.S4_QTY
                      ,P.F2_QTY
                      ,P.A2_QTY
                      ,P.F4_QTY
                      ,P.A4_QTY
                      ,P.F5_QTY
                      ,P.O5_QTY
                FROM EQR_MTY_COD_VVD  V,
                     EQR_MTY_COD_PORT P,
                     (
                         SELECT A.VSL_CD
                               ,A.SKD_VOY_NO
                               ,A.SKD_DIR_CD
                               ,A.SLAN_CD
                               ,A.VPS_PORT_CD
                               ,A.YD_CD
                               ,A.VPS_ETB_DT ETB_DT
                               ,X.WEEK
                               ,X.SEQ
                         FROM VSK_VSL_PORT_SKD A
                             ,REPOIN_VVD2 Z 
                             ,REPO_IN_WEEK X       
                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   
                         AND   A.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                             
                                                                     )
                                               )    
                         AND   A.CLPT_IND_SEQ = '1'		                                                                  
                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  
	                     AND   X.SEQ = 2  -- 2주차
                     ) Z                              
                WHERE V.VSL_CD			= P.VSL_CD
                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO
                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD
                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD
                AND	  'D'				= P.LODG_DCHG_DIV_CD
                AND   P.VSL_CD          = Z.VSL_CD
                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
                AND   P.PORT_CD         = Z.VPS_PORT_CD  
            ) A,
            (
                SELECT VSL_CD
                      ,SKD_VOY_NO
                      ,SKD_DIR_CD
                      ,VPS_PORT_CD
                      ,DIV
                      ,SEQ
                FROM 
                (    
                    -- VVD 별 I/S/C 확인
                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                          ,B.VSL_CD
                          ,B.SKD_VOY_NO
                          ,B.SKD_DIR_CD
                          ,B.VPS_PORT_CD
                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     
                          ,X.SEQ
                                               
                    FROM EQR_MTY_COD_VVD A
                        ,VSK_VSL_PORT_SKD B
                        ,REPO_IN_WEEK X
                    WHERE B.VSL_CD     = A.VSL_CD(+)
                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)
                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)
                    AND   B.VPS_PORT_CD IN (
                                             SELECT LOC_CD FROM MDM_LOCATION 
                                             WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                            
                                                             )
                                           )
                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999
	                AND   X.SEQ = 2  -- 2주차
                    AND   B.CLPT_IND_SEQ = '1'
                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외
                ) 
                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
            ) B
            WHERE A.VSL_CD     = B.VSL_CD
            AND   A.SKD_VOY_NO = B.SKD_VOY_NO
            AND   A.SKD_DIR_CD = B.SKD_DIR_CD
            AND   A.POD_CD     = B.VPS_PORT_CD
            AND   A.DIV        = B.DIV   
            AND   A.SEQ        = B.SEQ          

			UNION ALL
            -- 3번째 주차 (SEQ = 3)           
            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ
                  ,@[fcast_yrwk] FCAST_YRWK
                  ,A.D2_QTY
                  ,A.D4_QTY
                  ,A.D5_QTY
                  ,A.D7_QTY
                  ,A.R2_QTY  
                  ,A.R5_QTY
                  ,A.R9_QTY
                  ,A.O2_QTY
                  ,A.S2_QTY
                  ,A.O4_QTY
                  ,A.S4_QTY
                  ,A.F2_QTY
                  ,A.A2_QTY
                  ,A.F4_QTY
                  ,A.A4_QTY
                  ,A.F5_QTY     
                  ,A.O5_QTY
            
            FROM 
            (       
              
                -- BAY PLAN, I
                SELECT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,B.SLAN_CD
                      ,A.POD_CD
                      ,B.YD_CD
                      ,B.VPS_ETB_DT ETB_DT
                      ,'I' DIV
                      ,B.SEQ
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY
                FROM OPF_BAY_PLN_LDIS A,
                (
                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ
                    FROM VSK_VSL_PORT_SKD A
                        ,REPOIN_VVD3 Z
                        ,REPO_IN_WEEK X
                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                    AND   A.VPS_PORT_CD IN (
                                            SELECT LOC_CD FROM MDM_LOCATION 
                                            WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                          
                                                             )
                                         )
                    AND   A.CLPT_IND_SEQ = '1'
                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 
			        AND   X.SEQ = 3  -- 3주차
                ) B
                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)
                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER
                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN
                AND   A.VSL_CD           = B.VSL_CD
                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
                AND   A.POD_CD           = B.VPS_PORT_CD
                GROUP BY A.VSL_CD
                        ,A.SKD_VOY_NO
                        ,A.SKD_DIR_CD
                        ,B.SLAN_CD
                        ,A.POD_CD
                        ,B.YD_CD
                        ,B.VPS_ETB_DT
                        ,B.SEQ
                        
                UNION ALL
                
                -- SIMULATION, CONFIRMATION, BASIC 
                SELECT Z.VSL_CD
                      ,Z.SKD_VOY_NO
                      ,Z.SKD_DIR_CD
                      ,Z.SLAN_CD
                      ,Z.VPS_PORT_CD POD_CD
                      ,Z.YD_CD
                      ,Z.ETB_DT
                      ,P.COD_CFM_DIV_CD DIV
                      ,Z.SEQ
                      ,P.D2_QTY
                      ,P.D4_QTY
                      ,P.D5_QTY
                      ,P.D7_QTY
                      ,P.R2_QTY
                      ,P.R5_QTY
                      ,P.R9_QTY
                      ,P.O2_QTY
                      ,P.S2_QTY
                      ,P.O4_QTY
                      ,P.S4_QTY
                      ,P.F2_QTY
                      ,P.A2_QTY
                      ,P.F4_QTY
                      ,P.A4_QTY
                      ,P.F5_QTY
                      ,P.O5_QTY
                FROM EQR_MTY_COD_VVD  V,
                     EQR_MTY_COD_PORT P,
                     (
                         SELECT A.VSL_CD
                               ,A.SKD_VOY_NO
                               ,A.SKD_DIR_CD
                               ,A.SLAN_CD
                               ,A.VPS_PORT_CD
                               ,A.YD_CD
                               ,A.VPS_ETB_DT ETB_DT
                               ,X.WEEK
                               ,X.SEQ
                         FROM VSK_VSL_PORT_SKD A
                             ,REPOIN_VVD3 Z 
                             ,REPO_IN_WEEK X       
                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   
                         AND   A.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                             
                                                                     )
                                               )    
                         AND   A.CLPT_IND_SEQ = '1'		                                                                  
                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  
	                     AND   X.SEQ = 3  -- 2주차
                     ) Z                              
                WHERE V.VSL_CD			= P.VSL_CD
                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO
                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD
                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD
                AND	  'D'				= P.LODG_DCHG_DIV_CD
                AND   P.VSL_CD          = Z.VSL_CD
                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
                AND   P.PORT_CD         = Z.VPS_PORT_CD  
            ) A,
            (
                SELECT VSL_CD
                      ,SKD_VOY_NO
                      ,SKD_DIR_CD
                      ,VPS_PORT_CD
                      ,DIV
                      ,SEQ
                FROM 
                (    
                    -- VVD 별 I/S/C 확인
                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                          ,B.VSL_CD
                          ,B.SKD_VOY_NO
                          ,B.SKD_DIR_CD
                          ,B.VPS_PORT_CD
                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     
                          ,X.SEQ
                                               
                    FROM EQR_MTY_COD_VVD A
                        ,VSK_VSL_PORT_SKD B
                        ,REPO_IN_WEEK X
                    WHERE B.VSL_CD     = A.VSL_CD(+)
                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)
                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)
                    AND   B.VPS_PORT_CD IN (
                                             SELECT LOC_CD FROM MDM_LOCATION 
                                             WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                            
                                                             )
                                           )
                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999
	                AND   X.SEQ = 3  -- 3주차
                    AND   B.CLPT_IND_SEQ = '1'
                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외
                ) 
                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
            ) B
            WHERE A.VSL_CD     = B.VSL_CD
            AND   A.SKD_VOY_NO = B.SKD_VOY_NO
            AND   A.SKD_DIR_CD = B.SKD_DIR_CD
            AND   A.POD_CD     = B.VPS_PORT_CD
            AND   A.DIV        = B.DIV   
            AND   A.SEQ        = B.SEQ      

			UNION ALL
            -- 4번째 주차 (SEQ = 4)           
            SELECT DECODE(A.SEQ,1,5,2,17,3,28,4,39) DP_SEQ
                  ,@[fcast_yrwk] FCAST_YRWK
                  ,A.D2_QTY
                  ,A.D4_QTY
                  ,A.D5_QTY
                  ,A.D7_QTY
                  ,A.R2_QTY  
                  ,A.R5_QTY
                  ,A.R9_QTY
                  ,A.O2_QTY
                  ,A.S2_QTY
                  ,A.O4_QTY
                  ,A.S4_QTY
                  ,A.F2_QTY
                  ,A.A2_QTY
                  ,A.F4_QTY
                  ,A.A4_QTY
                  ,A.F5_QTY     
                  ,A.O5_QTY
            
            FROM 
            (       
              
                -- BAY PLAN, I
                SELECT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,B.SLAN_CD
                      ,A.POD_CD
                      ,B.YD_CD
                      ,B.VPS_ETB_DT ETB_DT
                      ,'I' DIV
                      ,B.SEQ
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D2',1,0))	D2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D4',1,0))	D4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D5',1,0))	D5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'D7',1,0))	D7_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R2',1,0))	R2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R5',1,0))	R5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'R9',1,0))	R9_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O2',1,0))	O2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S2',1,0))	S2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O4',1,0))	O4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'S4',1,0))	S4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F2',1,0))	F2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A2',1,0))	A2_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F4',1,0))	F4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'A4',1,0))	A4_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'F5',1,0))	F5_QTY
                      ,SUM(DECODE(A.CNTR_TPSZ_CD,'O5',1,0))	O5_QTY
                FROM OPF_BAY_PLN_LDIS A,
                (
                    SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.SLAN_CD, A.VPS_PORT_CD, A.YD_CD, A.VPS_ETB_DT, X.SEQ
                    FROM VSK_VSL_PORT_SKD A
                        ,REPOIN_VVD4 Z
                        ,REPO_IN_WEEK X
                    WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                    AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                    AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)
                    AND   A.VPS_PORT_CD IN (
                                            SELECT LOC_CD FROM MDM_LOCATION 
                                            WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                          
                                                             )
                                         )
                    AND   A.CLPT_IND_SEQ = '1'
                    AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                 
			        AND   X.SEQ = 4  -- 4주차
                ) B
                WHERE A.LODG_DCHG_IND_CD =	'C'   -- 하드코딩, C : CURRENT (BAY PLAN 배에 실린 물량)
                AND	  A.FULL_MTY_CD	     =	'E'   -- 하드코딩, E : EMPTY CONTAINER
                AND	  A.CRR_CD		     =	'SML' -- 하드코딩, HJS : HANJIN
                AND   A.VSL_CD           = B.VSL_CD
                AND   A.SKD_VOY_NO       = B.SKD_VOY_NO
                AND   A.SKD_DIR_CD       = B.SKD_DIR_CD
                AND   A.POD_CD           = B.VPS_PORT_CD
                GROUP BY A.VSL_CD
                        ,A.SKD_VOY_NO
                        ,A.SKD_DIR_CD
                        ,B.SLAN_CD
                        ,A.POD_CD
                        ,B.YD_CD
                        ,B.VPS_ETB_DT
                        ,B.SEQ
                        
                UNION ALL
                
                -- SIMULATION, CONFIRMATION, BASIC 
                SELECT Z.VSL_CD
                      ,Z.SKD_VOY_NO
                      ,Z.SKD_DIR_CD
                      ,Z.SLAN_CD
                      ,Z.VPS_PORT_CD POD_CD
                      ,Z.YD_CD
                      ,Z.ETB_DT
                      ,P.COD_CFM_DIV_CD DIV
                      ,Z.SEQ
                      ,P.D2_QTY
                      ,P.D4_QTY
                      ,P.D5_QTY
                      ,P.D7_QTY
                      ,P.R2_QTY
                      ,P.R5_QTY
                      ,P.R9_QTY
                      ,P.O2_QTY
                      ,P.S2_QTY
                      ,P.O4_QTY
                      ,P.S4_QTY
                      ,P.F2_QTY
                      ,P.A2_QTY
                      ,P.F4_QTY
                      ,P.A4_QTY
                      ,P.F5_QTY
                      ,P.O5_QTY
                FROM EQR_MTY_COD_VVD  V,
                     EQR_MTY_COD_PORT P,
                     (
                         SELECT A.VSL_CD
                               ,A.SKD_VOY_NO
                               ,A.SKD_DIR_CD
                               ,A.SLAN_CD
                               ,A.VPS_PORT_CD
                               ,A.YD_CD
                               ,A.VPS_ETB_DT ETB_DT
                               ,X.WEEK
                               ,X.SEQ
                         FROM VSK_VSL_PORT_SKD A
                             ,REPOIN_VVD4 Z 
                             ,REPO_IN_WEEK X       
                         WHERE A.VSL_CD     = SUBSTR(Z.VVD, 0, 4)
                         AND   A.SKD_VOY_NO = SUBSTR(Z.VVD, 5, 4)
                         AND   A.SKD_DIR_CD = SUBSTR(Z.VVD, 9, 1)                                                                   
                         AND   A.VPS_PORT_CD IN (
                                                    SELECT LOC_CD FROM MDM_LOCATION 
                                                    WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                                             
                                                                     )
                                               )    
                         AND   A.CLPT_IND_SEQ = '1'		                                                                  
                         AND   A.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999                                  
	                     AND   X.SEQ = 4  -- 4주차
                     ) Z                              
                WHERE V.VSL_CD			= P.VSL_CD
                AND	  V.SKD_VOY_NO		= P.SKD_VOY_NO
                AND	  V.SKD_DIR_CD		= P.SKD_DIR_CD
                AND	  V.COD_CFM_DIV_CD	= P.COD_CFM_DIV_CD
                AND	  'D'				= P.LODG_DCHG_DIV_CD
                AND   P.VSL_CD          = Z.VSL_CD
                AND   P.SKD_VOY_NO      = Z.SKD_VOY_NO
                AND   P.SKD_DIR_CD      = Z.SKD_DIR_CD
                AND   P.PORT_CD         = Z.VPS_PORT_CD  
            ) A,
            (
                SELECT VSL_CD
                      ,SKD_VOY_NO
                      ,SKD_DIR_CD
                      ,VPS_PORT_CD
                      ,DIV
                      ,SEQ
                FROM 
                (    
                    -- VVD 별 I/S/C 확인
                    SELECT ROW_NUMBER() OVER(PARTITION BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, B.VPS_PORT_CD ORDER BY NVL(A.COD_CFM_STS_CD,'I') DESC) RN
                          ,B.VSL_CD
                          ,B.SKD_VOY_NO
                          ,B.SKD_DIR_CD
                          ,B.VPS_PORT_CD
                          ,NVL(A.COD_CFM_STS_CD,'I') DIV     
                          ,X.SEQ
                                               
                    FROM EQR_MTY_COD_VVD A
                        ,VSK_VSL_PORT_SKD B
                        ,REPO_IN_WEEK X
                    WHERE B.VSL_CD     = A.VSL_CD(+)
                    AND   B.SKD_VOY_NO = A.SKD_VOY_NO(+)
                    AND   B.SKD_DIR_CD = A.SKD_DIR_CD(+)
                    AND   B.VPS_PORT_CD IN (
                                             SELECT LOC_CD FROM MDM_LOCATION 
                                             WHERE SCC_CD IN ( 
                                                                 SELECT SCC_CD 
                                                                 FROM MDM_EQ_ORZ_CHT 
                                                               #if (${loc_grp_cd} == 'E') 
	                                                             WHERE ECC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #elseif (${loc_grp_cd} == 'L') 
	                                                             WHERE LCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #else -- 'S' 
	                                                             WHERE SCC_CD = @[loc_cd] -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)
                                                               #end                                                                                            
                                                             )
                                           )
                    AND   B.VPS_ETB_DT BETWEEN TO_DATE(X.WK_ST_DT, 'YYYYMMDD') AND TO_DATE(X.WK_END_DT, 'YYYYMMDD')+0.99999
	                AND   X.SEQ = 4  -- 4주차
                    AND   B.CLPT_IND_SEQ = '1'
                    AND   NVL(B.SKD_CNG_STS_CD,' ') <> 'S' -- SKIP SKD 제외
                ) 
                WHERE RN = 1 -- 동일vvd 에서 B,C 가 동시에 출현하는 경우 C 만 수집   
            ) B
            WHERE A.VSL_CD     = B.VSL_CD
            AND   A.SKD_VOY_NO = B.SKD_VOY_NO
            AND   A.SKD_DIR_CD = B.SKD_DIR_CD
            AND   A.POD_CD     = B.VPS_PORT_CD
            AND   A.DIV        = B.DIV   
            AND   A.SEQ        = B.SEQ      
                                   
                                   
            UNION ALL
            SELECT DECODE(LEVEL,1,5,2,17,3,28,4,39) DP_SEQ
                  ,@[fcast_yrwk] FCAST_YRWK
                  ,0 D2_FCAST_QTY
                  ,0 D4_FCAST_QTY
                  ,0 D5_FCAST_QTY
                  ,0 D7_FCAST_QTY
                  ,0 R2_FCAST_QTY
                  ,0 R5_FCAST_QTY
                  ,0 R9_FCAST_QTY
                  ,0 O2_FCAST_QTY
                  ,0 S2_FCAST_QTY
                  ,0 O4_FCAST_QTY
                  ,0 S4_FCAST_QTY
                  ,0 F2_FCAST_QTY
                  ,0 A2_FCAST_QTY
                  ,0 F4_FCAST_QTY
                  ,0 A4_FCAST_QTY
                  ,0 F5_FCAST_QTY
                  ,0 O5_FCAST_QTY
            FROM DUAL
            CONNECT BY LEVEL <=4
        ) A
        GROUP BY DP_SEQ, FCAST_YRWK
        
        -- REPO OUT (EQR_MTY_BAL_RPT_REPO_OUT)
        UNION ALL
        SELECT DECODE(B.SEQ,1,10,2,21,3,32,4,43) DP_SEQ
              ,'Demand', 'Repo Out', B.WEEK FCAST_YRWK0, 1
              ,NVL(A.D2_QTY,0) D2_FCAST_QTY
              ,NVL(A.D4_QTY,0) D4_FCAST_QTY
              ,NVL(A.D5_QTY,0) D5_FCAST_QTY
              ,NVL(A.D7_QTY,0) D7_FCAST_QTY
              ,NVL(A.R2_QTY,0) R2_FCAST_QTY
              ,NVL(A.R5_QTY,0) R5_FCAST_QTY
              ,NVL(A.R9_QTY,0) R9_FCAST_QTY
              ,NVL(A.O2_QTY,0) O2_FCAST_QTY
              ,NVL(A.S2_QTY,0) S2_FCAST_QTY
              ,NVL(A.O4_QTY,0) O4_FCAST_QTY
              ,NVL(A.S4_QTY,0) S4_FCAST_QTY
              ,NVL(A.F2_QTY,0) F2_FCAST_QTY
              ,NVL(A.A2_QTY,0) A2_FCAST_QTY
              ,NVL(A.F4_QTY,0) F4_FCAST_QTY
              ,NVL(A.A4_QTY,0) A4_FCAST_QTY
              ,NVL(A.F5_QTY,0) F5_FCAST_QTY 
              ,NVL(A.O5_QTY,0) O5_FCAST_QTY 
        FROM
        (
            SELECT /*+ ordered use_nl(D Y A) */  
                   A.FCAST_YRWK
                  ,NVL(SUM(A.D2_FCAST_QTY),0) D2_QTY
                  ,NVL(SUM(A.D4_FCAST_QTY),0) D4_QTY
                  ,NVL(SUM(A.D5_FCAST_QTY),0) D5_QTY
                  ,NVL(SUM(A.D7_FCAST_QTY),0) D7_QTY
                  ,NVL(SUM(A.R2_FCAST_QTY),0) R2_QTY
                  ,NVL(SUM(A.R5_FCAST_QTY),0) R5_QTY
                  ,NVL(SUM(A.R9_FCAST_QTY),0) R9_QTY
                  ,NVL(SUM(A.O2_FCAST_QTY),0) O2_QTY
                  ,NVL(SUM(A.S2_FCAST_QTY),0) S2_QTY
                  ,NVL(SUM(A.O4_FCAST_QTY),0) O4_QTY
                  ,NVL(SUM(A.S4_FCAST_QTY),0) S4_QTY
                  ,NVL(SUM(A.F2_FCAST_QTY),0) F2_QTY
                  ,NVL(SUM(A.A2_FCAST_QTY),0) A2_QTY
                  ,NVL(SUM(A.F4_FCAST_QTY),0) F4_QTY
                  ,NVL(SUM(A.A4_FCAST_QTY),0) A4_QTY
                  ,NVL(SUM(A.F5_FCAST_QTY),0) F5_QTY
                  ,NVL(SUM(A.O5_FCAST_QTY),0) O5_QTY
            FROM LV_YD_LIST Y
                ,EQR_MTY_BAL_RPT_REPO_OUT A
                ,(
                     SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ 
                            ROWNUM AS SEQ,PLN_YR||PLN_WK, WK_ST_DT, WK_END_DT, @[fcast_yrwk] FCAST_YRWK , @[loc_cd] LOC_CD
                     FROM EQR_WK_PRD A
                     WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]
                     AND   PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)
                     AND   ROWNUM <=4
                  ) D
            WHERE A.FM_ETD_DT BETWEEN TO_DATE(D.WK_ST_DT,'YYYYMMDD') AND TO_DATE(D.WK_END_DT,'YYYYMMDD')+0.99999
            AND   A.INP_YRWK = (SELECT INP_YRWK FROM LV_DUMMY_ITEM WHERE TP_CD=1)
            AND   A.FM_YD_CD = Y.YD_CD
            AND   A.LOC_GRP_CD(+) = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)                     
            GROUP BY A.FCAST_YRWK
        ) A
       ,(
            SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ 
                   ROWNUM AS SEQ,PLN_YR||PLN_WK WEEK, WK_ST_DT, WK_END_DT, @[fcast_yrwk] FCAST_YRWK , @[loc_cd] LOC_CD
            FROM EQR_WK_PRD A
            WHERE PLN_YR||PLN_WK >= @[fcast_yrwk]
            AND   PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)
            AND   ROWNUM <=4
         ) B   
         WHERE A.FCAST_YRWK(+) = B.WEEK 

        
        -- OFF-HIRE (EQR_MTY_BAL_RPT, TYPE_CD = 5 로 추출)
        UNION ALL
        SELECT  DECODE(B.SEQ,1,11,2,22,3,33,4,44) DP_SEQ
              ,'Demand', 'Off-hire', B.WEEK FCAST_YRWK0, 5 TP_CD
              ,NVL(A.D2_FCAST_QTY,0) D2_FCAST_QTY
              ,NVL(A.D4_FCAST_QTY,0) D4_FCAST_QTY
              ,NVL(A.D5_FCAST_QTY,0) D5_FCAST_QTY
              ,NVL(A.D7_FCAST_QTY,0) D7_FCAST_QTY
              ,NVL(A.R2_FCAST_QTY,0) R2_FCAST_QTY
              ,NVL(A.R5_FCAST_QTY,0) R5_FCAST_QTY
              ,NVL(A.R9_FCAST_QTY,0) R9_FCAST_QTY
              ,NVL(A.O2_FCAST_QTY,0) O2_FCAST_QTY
              ,NVL(A.S2_FCAST_QTY,0) S2_FCAST_QTY
              ,NVL(A.O4_FCAST_QTY,0) O4_FCAST_QTY
              ,NVL(A.S4_FCAST_QTY,0) S4_FCAST_QTY
              ,NVL(A.F2_FCAST_QTY,0) F2_FCAST_QTY
              ,NVL(A.A2_FCAST_QTY,0) A2_FCAST_QTY
              ,NVL(A.F4_FCAST_QTY,0) F4_FCAST_QTY
              ,NVL(A.A4_FCAST_QTY,0) A4_FCAST_QTY
              ,NVL(A.F5_FCAST_QTY,0) F5_FCAST_QTY  
              ,NVL(A.O5_FCAST_QTY,0) O5_FCAST_QTY  
        FROM
        (
            SELECT 
                   A.FCAST_YRWK
                  ,NVL(SUM(A.D2_FCAST_QTY),0) D2_FCAST_QTY
                  ,NVL(SUM(A.D4_FCAST_QTY),0) D4_FCAST_QTY
                  ,NVL(SUM(A.D5_FCAST_QTY),0) D5_FCAST_QTY
                  ,NVL(SUM(A.D7_FCAST_QTY),0) D7_FCAST_QTY
                  ,NVL(SUM(A.R2_FCAST_QTY),0) R2_FCAST_QTY
                  ,NVL(SUM(A.R5_FCAST_QTY),0) R5_FCAST_QTY
                  ,NVL(SUM(A.R9_FCAST_QTY),0) R9_FCAST_QTY
                  ,NVL(SUM(A.O2_FCAST_QTY),0) O2_FCAST_QTY
                  ,NVL(SUM(A.S2_FCAST_QTY),0) S2_FCAST_QTY
                  ,NVL(SUM(A.O4_FCAST_QTY),0) O4_FCAST_QTY
                  ,NVL(SUM(A.S4_FCAST_QTY),0) S4_FCAST_QTY
                  ,NVL(SUM(A.F2_FCAST_QTY),0) F2_FCAST_QTY
                  ,NVL(SUM(A.A2_FCAST_QTY),0) A2_FCAST_QTY
                  ,NVL(SUM(A.F4_FCAST_QTY),0) F4_FCAST_QTY
                  ,NVL(SUM(A.A4_FCAST_QTY),0) A4_FCAST_QTY
                  ,NVL(SUM(A.F5_FCAST_QTY),0) F5_FCAST_QTY
                  ,NVL(SUM(A.O5_FCAST_QTY),0) O5_FCAST_QTY
            FROM EQR_MTY_BAL_RPT A
            WHERE A.CO_CD         = 'H'
            AND   A.LOC_GRP_CD    = @[loc_grp_cd]  -- E:ECC, L:LCC, S:SCC (2012-05-22, ADDED BY SHIN YONGCHAN, CHM-201217713)            
            AND   A.LOC_CD        = @[loc_cd]
            AND   A.MTY_BAL_TP_CD = '5' -- OFF-HIRE 
            GROUP BY A.FCAST_YRWK 
        ) A            
       ,(
                     SELECT /*+ INDEX(A XPKEQR_WK_PRD) */ 
                            ROWNUM AS SEQ
                           ,A.PLN_YR||A.PLN_WK WEEK
                           ,A.WK_ST_DT
                           ,A.WK_END_DT
                           ,@[fcast_yrwk] FCAST_YRWK 
                           ,@[loc_cd] LOC_CD
                     FROM  EQR_WK_PRD A
                     WHERE A.PLN_YR||A.PLN_WK >= @[fcast_yrwk]
                     AND   A.PLN_YR >= SUBSTR(@[fcast_yrwk],1,4)
                     AND   ROWNUM <=4
         ) B  
         WHERE A.FCAST_YRWK(+) = B.WEEK
       
 
        -- MTY BALANCE
        UNION ALL
        SELECT DECODE(WK_SEQ,1,13,2,24,3,35,4,46) DP_SEQ, 'MTY Balance', 'MTY Balance' ,'2000929' FCAST_YRWK0, 1
                   ,0 D2_QTY
                   ,0 D4_QTY
                   ,0 D5_QTY
                   ,0 D7_QTY
                   ,0 R2_QTY
                   ,0 R5_QTY
                   ,0 R9_QTY
                   ,0 O2_QTY
                   ,0 S2_QTY
                   ,0 O4_QTY
                   ,0 S4_QTY
                   ,0 F2_QTY
                   ,0 A2_QTY
                   ,0 F4_QTY
                   ,0 A4_QTY
                   ,0 F5_QTY
                   ,0 O5_QTY
        FROM LV_DUMMY_WEEK
        UNION ALL
        SELECT DECODE(WK_SEQ,2,14,3,25,4,36,5,47) DP_SEQ,FCAST_YRWK, FCAST_YRWK ,'2000929' FCAST_YRWK0, 1
                   ,0 D2_QTY
                   ,0 D4_QTY
                   ,0 D5_QTY
                   ,0 D7_QTY
                   ,0 R2_QTY
                   ,0 R5_QTY
                   ,0 R9_QTY
                   ,0 O2_QTY
                   ,0 S2_QTY
                   ,0 O4_QTY
                   ,0 S4_QTY
                   ,0 F2_QTY
                   ,0 A2_QTY
                   ,0 F4_QTY
                   ,0 A4_QTY
                   ,0 F5_QTY
                   ,0 O5_QTY
        FROM LV_DUMMY_WEEK
        WHERE WK_SEQ > 1
        
        -- Estimated Sound MT
    	UNION ALL
    	SELECT DECODE(WK_SEQ,2,15,3,26,4,37) DP_SEQ,'Estimated Sound MT', 'Estimated Sound MT' ,FCAST_YRWK, 1
                   ,0 D2_QTY
                   ,0 D4_QTY
                   ,0 D5_QTY
                   ,0 D7_QTY
                   ,0 R2_QTY
                   ,0 R5_QTY
                   ,0 R9_QTY
                   ,0 O2_QTY
                   ,0 S2_QTY
                   ,0 O4_QTY
                   ,0 S4_QTY
                   ,0 F2_QTY
                   ,0 A2_QTY
                   ,0 F4_QTY
                   ,0 A4_QTY
                   ,0 F5_QTY    		
                   ,0 O5_QTY    
    	FROM LV_DUMMY_WEEK
    	WHERE WK_SEQ > 1  
    
    ) A
    ORDER BY DP_SEQ
)			]]></sql>
			<params>
				<param name="fcast_yrwk" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="loc_grp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
