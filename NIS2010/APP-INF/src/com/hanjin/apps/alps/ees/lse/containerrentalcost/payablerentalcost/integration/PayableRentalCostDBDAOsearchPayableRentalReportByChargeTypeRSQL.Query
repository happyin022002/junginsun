<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PayableRentalCostDBDAOsearchPayableRentalReportByChargeTypeRSQL">
			<desc><![CDATA[Payable Invoice 한 결과에 대하여 Charge Type별로 실적을 조회]]></desc>
			<sql><![CDATA[
SELECT DECODE(AA.GRP_ID1, 1, 'G.TTL', AA.VNDR_SEQ)  AS VNDR_SEQ
     , DECODE(AA.GRP_ID1, 1, NULL, AA.ABBR_NM)      AS ABBR_NM
     , DECODE(AA.GRP_ID1, 1, NULL, AA.CNTR_TPSZ_CD) AS CNTR_TPSZ_CD
     , AA.QTY
     , AA.PDM + AA.PUC + AA.PCR + AA.LON + AA.LOF + AA.DOC + AA.DCR + AA.DII + AA.DIO + AA.DPP + AA.GTO + AA.GTI + AA.WDP + AA.OTH + AA.CRD AS G_TTL
     , AA.PDM
     , AA.PUC
     , AA.PCR
     , AA.PUC + AA.PCR AS TTL_1
     , AA.LON
     , AA.LOF
     , AA.LON + AA.LOF AS TTL_2
     , AA.DOC
     , AA.DCR
     , AA.DOC + AA.DCR AS TTL_3
     , AA.DII
     , AA.DIO
     , AA.DII + AA.DIO AS TTL_4
     , AA.GTO
     , AA.GTI
     , AA.GTO + AA.GTI AS TTL_5
     , AA.DPP
     , AA.WDP
     , AA.OTH
     , AA.CRD
FROM   (
         SELECT NVL(LTMP.PAY_VNDR_SEQ, LTMP.VNDR_SEQ) VNDR_SEQ
              , GROUPING(NVL(LTMP.PAY_VNDR_SEQ, LTMP.VNDR_SEQ)) AS GRP_ID1
              , SUBSTR(NVL(VNDR.VNDR_ABBR_NM, '   '), 1, 3) ABBR_NM
              , LTC.CNTR_TPSZ_CD
              , GROUPING(LTC.CNTR_TPSZ_CD) AS GRP_ID2
              , NVL(TPSZ.RPT_DP_SEQ, 999) AS RPT_DP_SEQ
              , GROUPING(TPSZ.RPT_DP_SEQ) AS GRP_ID3
              , COUNT(DISTINCT CNTR_NO) QTY
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'PDM', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) PDM
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'PUC', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) PUC
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'PCR', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) PCR
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'LON', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) LON
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'LOF', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) LOF
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'DOC', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) DOC
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'DCR', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) DCR
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'DII', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) DII
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'DIO', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) DIO
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'DPP', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) DPP
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'GTO', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) GTO
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'GTI', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) GTI
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'WDP', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) WDP
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'OTH', DECODE(P.PAYABLE, 'S', LTC.DSCR_COST_AMT+LTC.CR_AMT, LTC.TTL_COST_AMT+LTC.CR_AMT), 0)) OTH
              , SUM(DECODE(LSE_PAY_CHG_TP_CD, 'CRD', LTC.CR_AMT, 0)) CRD
         FROM   LSE_PAY_RNTL_CHG_DTL LTC,
                LSE_PAY_RNTL_CHG     LTMP,
                MDM_VENDOR           VNDR,
                MDM_CNTR_TP_SZ       TPSZ,
                ( SELECT @[report_type]  AS REPORT_TYPE,
                         @[period_stdt]  AS PERIOD_STDT,
                         @[period_eddt]  AS PERIOD_EDDT,
                         @[company]      AS COMPANY,
                         @[payable]      AS PAYABLE,
                         @[agmt_cty_cd]  AS AGMT_CTY_CD,
                         @[agmt_seq]     AS AGMT_SEQ,
                         @[vndr_seq]     AS VNDR_SEQ,
                         @[loc_tp]       AS LOC_TP,
                         @[loc_cd]       AS LOC_CD
                  FROM   DUAL
                ) P
         WHERE  LTMP.CHG_COST_YRMON BETWEEN P.PERIOD_STDT AND P.PERIOD_EDDT
           AND  LTMP.LSE_PAY_RNTL_STS_CD = DECODE(P.PAYABLE, 'S', 'I', LTMP.LSE_PAY_RNTL_STS_CD)
#if (${vndr_seq} != '')
           AND  LTMP.VNDR_SEQ    = P.VNDR_SEQ
#end
           AND  NVL(LTMP.PAY_VNDR_SEQ, LTMP.VNDR_SEQ) = VNDR.VNDR_SEQ
#if (${lstm_cd_str} != '')
           AND  LTMP.LSTM_CD IN (
       #foreach($key IN ${lstm_cd})
         #if($velocityCount < $lstm_cd.size())
                                 '$key',
         #else
                                 '$key'
         #end
      #end
                                )
#end
#if (${agmt_seq} != '' )
           AND  LTMP.AGMT_CTY_CD = P.AGMT_CTY_CD
           AND  LTMP.AGMT_SEQ    = P.AGMT_SEQ
#end
           AND  LTMP.CHG_SEQ     = LTC.CHG_SEQ
           AND  LTMP.AGMT_CTY_CD = LTC.AGMT_CTY_CD
           AND  LTMP.AGMT_SEQ    = LTC.AGMT_SEQ
#if (${payable} == 'S')
           AND  NVL(LTC.CNTR_AUD_STS_CD, 'A') = 'A' -- Invoice Amount ( P.PAYABLE = 'S' )
#end
           AND  LTC.CNTR_TPSZ_CD = TPSZ.CNTR_TPSZ_CD(+)
#if (${cntr_tpsz_cd_str} != '')
           AND  LTC.CNTR_TPSZ_CD IN (
	        #foreach($key IN ${cntr_tpsz_cd})
		        #if($velocityCount < $cntr_tpsz_cd.size())
                                     '$key',
		        #else
                                     '$key'
		        #end
	        #end
                                    )
#end
#if (${loc_cd} != '')
   #if (${loc_tp} == 'R')
           AND  LTC.ONH_LOC_CD IN (SELECT RCC_CD FROM MDM_EQ_ORZ_CHT WHERE RCC_CD = P.LOC_CD)
   #elseif (${loc_tp} == 'L')
           AND  LTC.ONH_LOC_CD IN (SELECT LCC_CD FROM MDM_EQ_ORZ_CHT WHERE LCC_CD = P.LOC_CD)
   #elseif (${loc_tp} == 'S')
           AND  LTC.ONH_LOC_CD IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE SCC_CD = P.LOC_CD)
   #elseif (${loc_tp} == 'C')
           AND  SUBSTR(LTC.ONH_LOC_CD, 0 , 2 ) = P.LOC_CD
   #end
#end
         GROUP  BY ROLLUP (NVL(LTMP.PAY_VNDR_SEQ, LTMP.VNDR_SEQ), VNDR.VNDR_ABBR_NM, LTC.CNTR_TPSZ_CD, TPSZ.RPT_DP_SEQ)
       ) AA
WHERE  ( AA.GRP_ID1 = 0 AND AA.GRP_ID2 = 0 AND AA.GRP_ID3 = 0 )
   OR  AA.GRP_ID1 = 1
ORDER  BY AA.GRP_ID1, AA.VNDR_SEQ, AA.RPT_DP_SEQ			]]></sql>
			<params>
				<param name="report_type" type="12" value="" out="N"/>
				<param name="period_stdt" type="12" value="" out="N"/>
				<param name="period_eddt" type="12" value="" out="N"/>
				<param name="company" type="12" value="" out="N"/>
				<param name="payable" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="loc_tp" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
