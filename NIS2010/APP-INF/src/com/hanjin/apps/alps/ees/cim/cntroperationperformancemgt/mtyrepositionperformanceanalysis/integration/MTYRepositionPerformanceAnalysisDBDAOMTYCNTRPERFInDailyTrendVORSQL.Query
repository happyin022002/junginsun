<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYRepositionPerformanceAnalysisDBDAOMTYCNTRPERFInDailyTrendVORSQL">
			<desc><![CDATA[Ticket No :CHM-201112858-01 개발자 : 김민수 제목 : [CIM] Repo.Result 화면 내의 Movement Performance by CY 탭 추가 내용 : Movement Performance by CY 요일별 View 탭 추가
2012.02.22 신자영 [CHM-201216310-01] mvmt pfmc by cy 기능 보완
2012.05.23 신자영 [CHM-201217983-01] MVMT PFMC BY CY 기능에 검색 가능 MVMT 추가
2013.02.08 이영두 [CHM-201322887-01] MG 조건 NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 조건 삭제
2013.05.10 이영두 [CHM-201324638-01] CIM_TP_SZ_DP_SEQ 테이블을 사용하여 Type Size 순서와 일치하게 수정 보완
2013.06.13 이영두 [CHM-201324997] Daily Trend 탭의 TP/SZ 조건 OT 일 경우 O5 항목 추가
2013.07.30 이영두 [CHM-201325984] MVMT PFMC에 MO(MTY REPO OUT) 추가]]></desc>
			<sql><![CDATA[
SELECT * 
FROM(
SELECT /*+ INDEX (LL XPKEQR_WK_PRD)*/
  MAX(L.CNMV_EVNT_DT) CNMV_EVNT_DT,
  MAX(LL.PLN_YR) PLN_YR,
  MAX(PLN_WK) PLN_WK,
  DECODE(PLN_WK,NULL,1,0) N_FLG,
  DECODE(PLN_WK,NULL,'G.TTL','WK'||PLN_WK) wk,
  NVL(SUM(CNT),0) AS total,
#if(${radioTpsz} == 'D')
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS sun01, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS mon01, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS tue01, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS wed01, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS thu01, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS fri01, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0))),0) AS sat01, 
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 1, CNTR_TPSZ_CD , '0'  )),0,NULL,DECODE( L.DSP_SEQ, 1, CNT , 0  ) )),0) AS count01,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS sun02, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS mon02, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS tue02, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS wed02, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS thu02, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS fri02, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 2, CNT , 0))),0) AS sat02, 	
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 2, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 2, CNT , 0) )),0) AS count02,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS sun03, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS mon03, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS tue03, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS wed03, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS thu03, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS fri03, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 3, CNT , 0))),0) AS sat03, 	
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 3, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 3, CNT , 0) )),0) AS count03,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS sun04, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS mon04, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS tue04, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS wed04, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS thu04, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS fri04, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 4, CNT , 0))),0) AS sat04, 		
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 4, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 4, CNT , 0) )),0) AS count04
#elseif(${radioTpsz} == 'O')
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS sun08, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS mon08, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS tue08, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS wed08, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS thu08, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS fri08, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 9, CNT , 0))),0) AS sat08,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 9, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 9, CNT , 0) )),0) AS count08,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS sun09, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS mon09, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS tue09, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS wed09, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS thu09, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS fri09, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 10, CNT , 0))),0) AS sat09,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 10, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 10, CNT , 0) )),0) AS count09,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS sun10, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS mon10, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS tue10, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS wed10, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS thu10, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS fri10, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 11, CNT , 0))),0) AS sat10,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 11, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 11, CNT , 0) )),0) AS count10,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS sun11, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS mon11, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS tue11, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS wed11, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS thu11, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS fri11, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 13, CNT , 0))),0) AS sat11,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 13, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 13, CNT , 0) )),0) AS count11,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS sun12, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS mon12, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS tue12, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS wed12, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS thu12, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS fri12, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 12, CNT , 0))),0) AS sat12,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 12, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 12, CNT , 0) )),0) AS count12
#elseif(${radioTpsz} == 'F')
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS sun13, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS mon13, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS tue13, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS wed13, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS thu13, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS fri13, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 14, CNT , 0))),0) AS sat13,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 14, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 14, CNT , 0) )),0) AS count13,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS sun14, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS mon14, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS tue14, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS wed14, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS thu14, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS fri14, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 15, CNT , 0))),0) AS sat14,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 15, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 15, CNT , 0) )),0) AS count14,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS sun15, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS mon15, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS tue15, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS wed15, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS thu15, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS fri15, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 16, CNT , 0))),0) AS sat15,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 16, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 16, CNT , 0) )),0) AS count15,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS sun16, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS mon16, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS tue16, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS wed16, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS thu16, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS fri16, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 17, CNT , 0))),0) AS sat16,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 17, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 17, CNT , 0) )),0) AS count16,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS sun17, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS mon17, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS tue17, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS wed17, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS thu17, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS fri17, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 18, CNT , 0))),0) AS sat17,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 18, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 18, CNT , 0) )),0) AS count17
#elseif(${radioTpsz} == 'R')
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS sun05, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS mon05, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS tue05, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS wed05, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS thu05, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS fri05, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 5, CNT , 0))),0) AS sat05,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 5, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 5, CNT , 0) )),0) AS count05,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS sun06, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS mon06, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS tue06, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS wed06, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS thu06, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS fri06, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 6, CNT , 0))),0) AS sat06,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 6, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 6, CNT , 0) )),0) AS count06,
	NVL(SUM(DECODE(INSTR('SUN',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS sun07, 
	NVL(SUM(DECODE(INSTR('MON',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS mon07, 
	NVL(SUM(DECODE(INSTR('TUE',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS tue07, 
	NVL(SUM(DECODE(INSTR('WED',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS wed07, 
	NVL(SUM(DECODE(INSTR('THU',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS thu07, 
	NVL(SUM(DECODE(INSTR('FRI',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS fri07, 
	NVL(SUM(DECODE(INSTR('SAT',WEEK),0,NULL,DECODE( L.DSP_SEQ, 8, CNT , 0))),0) AS sat07,
	NVL(SUM(DECODE(INSTR(@[dtlTpsz],DECODE( L.DSP_SEQ, 8, CNTR_TPSZ_CD , '0'  )),0,NULL, DECODE( L.DSP_SEQ, 8, CNT , 0) )),0) AS count07
#end
FROM (

#if (${mtymvmt} == 'MTIDMG' || ${mtymvmt} == 'MTVDVD-MT' || ${mtymvmt} == 'MTOPOP-MT' || ${mtymvmt} == 'VLMTMT-VL' 
|| ${mtymvmt} == 'MTOCOC-MT' || ${mtymvmt} == 'OCIDID-OC'|| ${mtymvmt} == 'MTIDID-MT' ||${mtymvmt} == 'OPMTMT-OP'||${mtymvmt} == 'TNMTMT-TN'||
${mtymvmt} == 'ENMTMT-EN'||${mtymvmt} == 'IDICIC-ID'||${mtymvmt} == 'ENICIC-EN'||${mtymvmt} == 'TNICIC-TN')

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        SUBSTR(@[mtymvmt],5)			MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,					
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								SUBSTR(@[mtymvmt],5)				MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     

	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = SUBSTR(@[mtymvmt],0,2)
	#end
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
   #if (${lstmcd} != '')
    AND C.LSTM_CD  IN (
    #foreach($cntrlstmcd in ${vel_lstm_cd})
      '$cntrlstmcd',
      #end
      '')
  #end  


	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		SUBSTR(@[mtymvmt],3,2)	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */			
		AND	     M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	

    GROUP BY SUBSTR(@[mtymvmt],5),M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S    
     WHERE 	A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD
#elseif(${mtymvmt} == 'VDMTVL')
			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'VD-MT-VL' MOV_STS,
					S.DP_SEQ DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT CNMV_EVNT_DT,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,					
					NVL(A.CNT,0) CNT
		 	  FROM (SELECT 	
						   'VD-MT-VL' MOV_STS,
							CNTR_TPSZ_CD,
							CNMV_EVNT_DT,
							COUNT(CNTR_NO) CNT
                       FROM (SELECT M.CNTR_TPSZ_CD
                                   ,M.CNMV_EVNT_DT
                                   ,M.CNTR_NO
                                   ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
                                            MM.CNMV_YR  
                                       FROM CTM_MOVEMENT MM
                                      WHERE MM.CNTR_NO = M.CNTR_NO
                                        AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                            M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                                        AND ROWNUM = 1
                                      ) PRE_CNMV_YR    
                                   ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
                                            MM.CNMV_SEQ  
                                       FROM CTM_MOVEMENT MM
                                      WHERE MM.CNTR_NO = M.CNTR_NO
                                        AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                            M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                                        AND ROWNUM = 1
                                      ) PRE_CNMV_SEQ
                                   ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
                                            MM.CNMV_SPLIT_NO  
                                       FROM CTM_MOVEMENT MM
                                      WHERE MM.CNTR_NO = M.CNTR_NO
                                        AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                            M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                                        AND ROWNUM = 1
                                      ) PRE_CNMV_SPLIT_NO
						      FROM CTM_MOVEMENT M,
						       	   MST_CONTAINER C     
	#if (${period} == 'W') 
		                    WHERE M.CNMV_EVNT_DT BETWEEN (SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							                                FROM EQR_WK_PRD K
							                               WHERE K.PLN_YR||K.PLN_WK = @[from])	
			                                         AND				
                                                         (SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							                                FROM EQR_WK_PRD K
							                               WHERE  K.PLN_YR||K.PLN_WK = @[to])
	#elseif (${period} == 'D' || ${period} == 'M') 
    	                    WHERE M.CNMV_EVNT_DT BETWEEN TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	                                             AND TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	                      AND M.MVMT_STS_CD = 'VL'
	#end
	#if (${dtlTpsz} != '') 
		                      AND M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			                                          '$cntrtpszcd',  
			#end  
			                                          '') 
	#end 
   #if (${lstmcd} != '')
                             AND C.LSTM_CD  IN (
    #foreach($cntrlstmcd in ${vel_lstm_cd})
                                                 '$cntrlstmcd',
      #end
                                                '')
  #end  


	  #if (${inquiryLevel} == 'Y')
                            AND M.ORG_YD_CD = @[location]
	  #else
                            AND M.ORG_YD_CD IN (SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				                                        Y.YD_CD
                                                  FROM MDM_EQ_ORZ_CHT G,
                                                       MDM_LOCATION L,
				                                       MDM_YARD Y
                                                 WHERE Y.LOC_CD = L.LOC_CD
                                                   AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
                                                   AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		                                           AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		                                           AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		                                           AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
                                                 ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		                   AND	'MT' = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
											   MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
										  FROM CTM_MOVEMENT MM
										 WHERE MM.CNTR_NO = M.CNTR_NO  
										   AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
											   M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
										   AND ROWNUM = 1
										)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */			
		                  AND	M.CNTR_NO = C.CNTR_NO
	  #if (${soc} == 'E')
                          AND NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	                      AND NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
                          ) A
                   WHERE  'VD'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
                                           MM.MVMT_STS_CD  
                                      FROM CTM_MOVEMENT MM
                                     WHERE MM.CNTR_NO = A.CNTR_NO
                                       AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                           A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO
                                       AND ROWNUM = 1
                                  )
                GROUP BY 'VD-MT-VL',CNTR_TPSZ_CD,CNMV_EVNT_DT) A,
                CIM_TP_SZ_DP_SEQ S    
          WHERE A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD
#elseif(${mtymvmt} == 'VDMTTNENMTVL')
			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'VD-MT-(TN or EN)-MT-VL' MOV_STS,
					S.DP_SEQ DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT CNMV_EVNT_DT,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,					
					NVL(A.CNT,0) CNT
		 	  FROM (SELECT 	
						   'VD-MT-(TN or EN)-MT-VL' MOV_STS,
							CNTR_TPSZ_CD,
							CNMV_EVNT_DT,
							COUNT(CNTR_NO) CNT
                     FROM (SELECT *   
                       FROM (SELECT AA.*,
                                    (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										    MM.CNMV_YR  
								      FROM  CTM_MOVEMENT MM
								     WHERE  MM.CNTR_NO = AA.CNTR_NO  
								       AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								            AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO
                                       AND ROWNUM = 1
                                      ) AAPRE_CNMV_YR,     
                                     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										     MM.CNMV_SEQ  
								        FROM  CTM_MOVEMENT MM
								       WHERE  MM.CNTR_NO = AA.CNTR_NO  
								         AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								              AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO
                                         AND ROWNUM = 1
                                      ) AAPRE_CNMV_SEQ,   
                                     (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										     MM.CNMV_SPLIT_NO  
								       FROM  CTM_MOVEMENT MM
								      WHERE  MM.CNTR_NO = AA.CNTR_NO  
								        AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								             AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO
                                        AND ROWNUM = 1     
								      ) AAPRE_CNMV_SPLIT_NO
                               FROM (SELECT A.*,
                                            (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										            MM.CNMV_YR  
								               FROM  CTM_MOVEMENT MM
								              WHERE  MM.CNTR_NO = A.CNTR_NO  
								                AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								                     A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO
                                                AND ROWNUM = 1
                                             ) APRE_CNMV_YR,     
                                            (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										            MM.CNMV_SEQ  
								               FROM  CTM_MOVEMENT MM
								              WHERE  MM.CNTR_NO = A.CNTR_NO  
								                AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								                     A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO
                                                AND ROWNUM = 1
                                             ) APRE_CNMV_SEQ,   
                                            (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										            MM.CNMV_SPLIT_NO  
								               FROM  CTM_MOVEMENT MM
								              WHERE  MM.CNTR_NO = A.CNTR_NO  
								                AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								                     A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO
                                                AND ROWNUM = 1     
								             ) APRE_CNMV_SPLIT_NO
                                       FROM  (SELECT M.CNTR_TPSZ_CD
                                                    ,M.CNMV_EVNT_DT
                                                    ,M.CNTR_NO
                                                    ,(SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										                     MM.CNMV_YR  
								                       FROM  CTM_MOVEMENT MM
								                      WHERE  MM.CNTR_NO = M.CNTR_NO  
								                        AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								                             M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                                                        AND ROWNUM = 1
                                                     ) PRE_CNMV_YR,     
                                                    (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										                    MM.CNMV_SEQ  
								                      FROM  CTM_MOVEMENT MM
								                     WHERE  MM.CNTR_NO = M.CNTR_NO  
								                       AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								                            M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                                                       AND ROWNUM = 1
                                                     ) PRE_CNMV_SEQ,   
                                                    (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
										                    MM.CNMV_SPLIT_NO  
								                       FROM  CTM_MOVEMENT MM
								                      WHERE  MM.CNTR_NO = M.CNTR_NO  
								                        AND  MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
								                             M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
                                                        AND ROWNUM = 1     
								                     ) PRE_CNMV_SPLIT_NO
						                        FROM CTM_MOVEMENT M,
						       	                     MST_CONTAINER C     
	#if (${period} == 'W') 
		                                       WHERE M.CNMV_EVNT_DT BETWEEN (SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							                                                   FROM EQR_WK_PRD K
							                                                  WHERE K.PLN_YR||K.PLN_WK = @[from])	
			                                                                    AND	(SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							                                                           FROM EQR_WK_PRD K
							                                                          WHERE K.PLN_YR||K.PLN_WK = @[to])
	#elseif (${period} == 'D' || ${period} == 'M') 
    	                                       WHERE M.CNMV_EVNT_DT BETWEEN TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	                                                                AND TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	                                         AND M.MVMT_STS_CD = 'VL'
	#end
	#if (${dtlTpsz} != '') 
		                                         AND M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			                                                             '$cntrtpszcd',  
			#end  
			                                                             '') 
	#end 
   #if (${lstmcd} != '')
                                                 AND C.LSTM_CD  IN (
    #foreach($cntrlstmcd in ${vel_lstm_cd})
                                                                    '$cntrlstmcd',
      #end
                                                                    '')
  #end  


	  #if (${inquiryLevel} == 'Y')
                                                AND M.ORG_YD_CD = @[location]
	  #else
                                                AND M.ORG_YD_CD IN (SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				                                                           Y.YD_CD
                                                                      FROM MDM_EQ_ORZ_CHT G,
                                                                           MDM_LOCATION L,
				                                                           MDM_YARD Y
                                                                     WHERE Y.LOC_CD = L.LOC_CD
                                                                       AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
                                                                       AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		                                                               AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		                                                               AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		                                                               AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
                                                                      ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		                                       AND	'MT' = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
											                       MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
										                      FROM CTM_MOVEMENT MM
										                     WHERE MM.CNTR_NO = M.CNTR_NO  
										                       AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
											                       M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
										                       AND ROWNUM = 1)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */			
		                                       AND	M.CNTR_NO = C.CNTR_NO
	  #if (${soc} == 'E')
                                               AND NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	                                           AND NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
                                             ) A
                                     WHERE  1=1
                                       AND  ('TN'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  
                                                             MM.MVMT_STS_CD  
                                                        FROM CTM_MOVEMENT MM
                                                       WHERE MM.CNTR_NO = A.CNTR_NO
                                                         AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                                             A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO
                                                         AND ROWNUM = 1)
                                               OR
                                             'EN'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  
                                                             MM.MVMT_STS_CD  
                                                        FROM CTM_MOVEMENT MM
                                                       WHERE MM.CNTR_NO = A.CNTR_NO
                                                         AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                                             A.PRE_CNMV_YR||TO_CHAR(A.PRE_CNMV_SEQ,'0000')||A.PRE_CNMV_SPLIT_NO
                                                         AND ROWNUM = 1)) 
                                    ) AA
                               WHERE  1=1 
                                 AND  'MT'  = (SELECT  /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */ 
                                                       MM.MVMT_STS_CD  
                                                 FROM CTM_MOVEMENT MM
                                                WHERE MM.CNTR_NO = AA.CNTR_NO
                                                  AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                                      AA.APRE_CNMV_YR||TO_CHAR(AA.APRE_CNMV_SEQ,'0000')||AA.APRE_CNMV_SPLIT_NO
                                                  AND ROWNUM = 1) 
                              ) AAA
                         WHERE  1=1     
                           AND  'VD'  = (SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */  
                                                MM.MVMT_STS_CD  
                                           FROM CTM_MOVEMENT MM
                                          WHERE MM.CNTR_NO = AAA.CNTR_NO
                                            AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <
                                                AAA.AAPRE_CNMV_YR||TO_CHAR(AAA.AAPRE_CNMV_SEQ,'0000')||AAA.AAPRE_CNMV_SPLIT_NO 
                                            AND ROWNUM = 1))
                GROUP BY 'VD-MT-(TN or EN)-MT-VL',CNTR_TPSZ_CD,CNMV_EVNT_DT) A,
                CIM_TP_SZ_DP_SEQ S    
          WHERE A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD
#elseif(${mtymvmt} == 'MP')

			SELECT	'MP'			MOV_STS		,
					S.DP_SEQ		DSP_SEQ		,
					S.CNTR_TPSZ_CD	CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(CNT,0)		CNT
			FROM	(
						SELECT	M.CNTR_TPSZ_CD		CNTR_TPSZ_CD,
						        M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)	CNT
						FROM	(
									SELECT	
											M.CNTR_NO			CNTR_NO,
											M.CNTR_TPSZ_CD		CNTR_TPSZ_CD,
											M.CNMV_EVNT_DT      CNMV_EVNT_DT,
											TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK
									FROM	CTM_MOVEMENT M
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)  
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end     
	      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
	        AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD

        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		'XX'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료*/	
        UNION ALL
        SELECT 
          M.CNTR_NO CNTR_NO,
          M.CNTR_TPSZ_CD CNTR_TPSZ_CD,           
          M.CNMV_EVNT_DT      CNMV_EVNT_DT,          
          TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK 
        FROM CTM_MOVEMENT M
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 

      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
      AND M.CNMV_CYC_NO = 1 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		) M,
		MST_CONTAINER		C
		WHERE	M.CNTR_NO			= C.CNTR_NO
      #if (${lstmcd} != '')
        AND C.LSTM_CD  IN (
         #foreach($cntrlstmcd in ${vel_lstm_cd})
          '$cntrlstmcd',
          #end
          '')
         #end  

	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end
    GROUP BY M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S
	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD


#elseif(${mtymvmt} == 'MR')

			SELECT	'MR'				MOV_STS,
					S.DP_SEQ			DSP_SEQ,
					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(CNT,0)			CNT
			FROM	(
						SELECT 
								'MR'					MOV_STS,
								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)		CNT
						FROM	CTM_MOVEMENT	M,
								MST_CONTAINER	C
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${tpsz} != '') 
		AND  M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
  #if (${lstmcd} != '')
    AND C.LSTM_CD  IN (
    #foreach($cntrlstmcd in ${vel_lstm_cd})
      '$cntrlstmcd',
      #end
      '')
  #end

      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
		SELECT 	/*+ ORDERED USE_NL( G L Y )  */
					Y.YD_CD
		FROM 
				MDM_EQ_ORZ_CHT G,
				MDM_LOCATION L,
				MDM_YARD Y
		WHERE Y.LOC_CD = L.LOC_CD
		  AND L.SCC_CD = G.SCC_CD
			#if (${inquiryLevel} == 'S')
		  AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
			#elseif(${inquiryLevel} == 'L')
			  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
			#elseif(${inquiryLevel} == 'E')
			  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
			#elseif(${inquiryLevel} == 'R')
			  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
			#end
		  ) 
	  #end
			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
			AND		'OK'	=	(   		  
									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
											#if (${inquiryLevel} == 'S')
											  DECODE(GG.SCC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'L')
											  DECODE(GG.LCC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'E')
											  DECODE(GG.ECC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'Y')
											  DECODE(MM.ORG_YD_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'R')
											  DECODE(GG.RCC_CD,@[location],'NO',	
											#end
											DECODE(MM.MVMT_STS_CD,'EN','OK',
											DECODE(MM.MVMT_STS_CD,'TN','OK','NO')))

									--		MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
									FROM    CTM_MOVEMENT	MM,
											MDM_LOCATION	LL,
											MDM_EQ_ORZ_CHT	GG
									WHERE   MM.CNTR_NO = M.CNTR_NO  
									AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
													M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
									AND		SUBSTR(MM.ORG_YD_CD, 1, 5)	= LL.LOC_CD
									AND		LL.SCC_CD	= GG.SCC_CD
									AND     ROWNUM		= 1
								)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */		

		AND		M.CNTR_NO	=	C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end
    GROUP BY 'MR', M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT)A,CIM_TP_SZ_DP_SEQ S
	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD



#elseif(${mtymvmt} == 'MO')

			SELECT	'MO'				MOV_STS,
					S.DP_SEQ			DSP_SEQ,
					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(CNT,0)			CNT
			FROM	(
						SELECT 
								'MO'					MOV_STS,
								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)		CNT
						FROM	CTM_MOVEMENT	M,
						        MST_CONTAINER	C
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD IN ('TN', 'EN')
	#end 
	#if (${tpsz} != '') 
		AND  M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
  #if (${lstmcd} != '')
    AND C.LSTM_CD  IN (
    #foreach($cntrlstmcd in ${vel_lstm_cd})
      '$cntrlstmcd',
      #end
      '')
  #end
      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
      AND	M.FCNTR_FLG = 'N'
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
		SELECT 	/*+ ORDERED USE_NL( G L Y )  */
					Y.YD_CD
		FROM 
				MDM_EQ_ORZ_CHT G,
				MDM_LOCATION L,
				MDM_YARD Y
		WHERE Y.LOC_CD = L.LOC_CD
		  AND L.SCC_CD = G.SCC_CD
			#if (${inquiryLevel} == 'S')
		  AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
			#elseif(${inquiryLevel} == 'L')
			  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
			#elseif(${inquiryLevel} == 'E')
			  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
			#elseif(${inquiryLevel} == 'R')
			  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
			#end
		  ) 
	  #end
			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
			AND		'OK'	=	(   		  
									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_ASC ( MM XFN1CTM_MOVEMENT ) */
											#if (${inquiryLevel} == 'S')
											  DECODE(GG.SCC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'L')
											  DECODE(GG.LCC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'E')
											  DECODE(GG.ECC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'Y')
											  DECODE(MM.ORG_YD_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'R')
											  DECODE(GG.RCC_CD,@[location],'NO',	
											#end
											DECODE(M.MVMT_STS_CD,'EN','OK',
                DECODE(M.MVMT_STS_CD,'TN','OK','NO')))
            FROM CTM_MOVEMENT  MM,
                MDM_LOCATION  LL,
                MDM_EQ_ORZ_CHT  GG
            WHERE MM.CNTR_NO = M.CNTR_NO
            AND MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO >
                M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
            AND SUBSTR(MM.ORG_YD_CD, 1, 5)  = LL.LOC_CD
            AND LL.SCC_CD = GG.SCC_CD
            AND MM.MVMT_STS_CD = 'MT'
            AND MM.CNMV_CYC_NO = M.CNMV_CYC_NO
            AND	MM.FCNTR_FLG = 'N'
            AND ROWNUM    = 1 
								)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */		

		AND		M.CNTR_NO	=	C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end
    
    GROUP BY 'MO', M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT)A,CIM_TP_SZ_DP_SEQ S
	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD

#elseif(${mtymvmt} == 'MT')

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'MG'			MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								'MG'				MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     

	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)  
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
    #if (${lstmcd} != '')
      AND C.LSTM_CD  IN (
      #foreach($cntrlstmcd in ${vel_lstm_cd})
      '$cntrlstmcd',
      #end
      '')
    #end  

      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작  */
		AND		'ID'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */	
		AND	     M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end
    GROUP BY 'MG', M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT)A,CIM_TP_SZ_DP_SEQ S
	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD
	UNION ALL
			SELECT	'MP'			MOV_STS		,
					S.DP_SEQ		DSP_SEQ		,
					S.CNTR_TPSZ_CD	CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(CNT,0)		CNT					
			FROM	(
						SELECT	M.CNTR_TPSZ_CD		CNTR_TPSZ_CD,
						        M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)	CNT
						FROM	(
									SELECT	
											M.CNTR_NO			CNTR_NO,
											M.CNTR_TPSZ_CD		CNTR_TPSZ_CD,
											M.CNMV_EVNT_DT      CNMV_EVNT_DT,
											TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK
									FROM	CTM_MOVEMENT M

	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)  
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end  
      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작*/
		AND		'XX'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */	
        UNION ALL
        SELECT 
          M.CNTR_NO CNTR_NO,
          M.CNTR_TPSZ_CD CNTR_TPSZ_CD,           
          M.CNMV_EVNT_DT      CNMV_EVNT_DT,          
          TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK 
        FROM CTM_MOVEMENT M
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)  
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end  
      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
      AND 	M.CNMV_CYC_NO = 1 
	  #if (${inquiryLevel} == 'Y')
      AND 	M.ORG_YD_CD = @[location]
	  #else
      AND 	M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		) M ,
      MST_CONTAINER		C
   	  WHERE	M.CNTR_NO			= C.CNTR_NO
      #if (${lstmcd} != '')
        AND C.LSTM_CD  IN (
         #foreach($cntrlstmcd in ${vel_lstm_cd})
           '$cntrlstmcd',
           #end
         '')
      #end  

	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end    
	GROUP BY 'MP', M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT)A,CIM_TP_SZ_DP_SEQ S
WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD

UNION ALL

			SELECT	'MR'				MOV_STS,
					S.DP_SEQ			DSP_SEQ,
					S.CNTR_TPSZ_CD      CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(CNT,0)			CNT
			FROM	(
						SELECT 
								'MR'					MOV_STS,
								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)		CNT
						FROM	CTM_MOVEMENT	M,
								MST_CONTAINER	C
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
    #if (${lstmcd} != '')
       AND C.LSTM_CD  IN (
        #foreach($cntrlstmcd in ${vel_lstm_cd})
         '$cntrlstmcd',
        #end
        '')
    #end  

      AND NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
			/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
			AND		'OK'	=	(   		  
									SELECT /*+ ORDERED USE_NL(MM LL GG) INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
											#if (${inquiryLevel} == 'S')
											  DECODE(GG.SCC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'L')
											  DECODE(GG.LCC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'E')
											  DECODE(GG.ECC_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'Y')
											  DECODE(MM.ORG_YD_CD,@[location],'NO',
											#elseif(${inquiryLevel} == 'R')
											  DECODE(GG.RCC_CD,@[location],'NO',
											#end
											DECODE(MM.MVMT_STS_CD,'EN','OK',
											DECODE(MM.MVMT_STS_CD,'TN','OK','NO')))

									--		MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
									FROM    CTM_MOVEMENT	MM,
											MDM_LOCATION	LL,
											MDM_EQ_ORZ_CHT	GG
									WHERE   MM.CNTR_NO = M.CNTR_NO  
									AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
													M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
									AND		SUBSTR(MM.ORG_YD_CD, 1, 5)	= LL.LOC_CD
									AND		LL.SCC_CD	= GG.SCC_CD
									AND     ROWNUM		= 1
								)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */	
		AND	M.CNTR_NO	=	C.CNTR_NO
	  #if (${soc} == 'E')
      	AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  	AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end
    GROUP BY 'MR', M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT)A,CIM_TP_SZ_DP_SEQ S
	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD
	UNION ALL
			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'VD-MT'			MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								'VD-MT'				MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     

	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'MT'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
    #if (${lstmcd} != '')
       AND C.LSTM_CD  IN (
       #foreach($cntrlstmcd in ${vel_lstm_cd})
       '$cntrlstmcd',
      #end
      '')
    #end  

     -- AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		'VD'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */	
		AND	     M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end
    GROUP BY 'VD-MT', M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT)A,CIM_TP_SZ_DP_SEQ S
	WHERE A.CNTR_TPSZ_CD = S.CNTR_TPSZ_CD


#elseif(${mtymvmt} == 'VL')

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'OC-VL'					MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								'OC-VL'					MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)  
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'VL'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end
    #if (${lstmcd} != '')
      AND C.LSTM_CD  IN (
      #foreach($cntrlstmcd in ${vel_lstm_cd})
        '$cntrlstmcd',
       #end
      '')
    #end  

	#if (${mtymvmt} == 'MTIDMG')
      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	#end
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		'OC'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */		
      AND 	M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
	#if (${bound} == 'N')
		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */
	#elseif(${bound} == 'Y')
		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */
	#end
    GROUP BY 'OC-VL',M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S    
     WHERE 	A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD
UNION ALL

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'TS-VL'					MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								'TS-VL'					MOV_STS			,
								M.CNTR_TPSZ_CD			CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT          CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)        CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'VL'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end
    #if (${lstmcd} != '')
       AND C.LSTM_CD  IN (
      #foreach($cntrlstmcd in ${vel_lstm_cd})
       '$cntrlstmcd',
       #end
       '')
    #end  


	#if (${mtymvmt} == 'MTIDMG')
      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	#end
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		'TS'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */		

      AND 	M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
	#if (${bound} == 'N')
		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */
	#elseif(${bound} == 'Y')
		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */
	#end

    GROUP BY 'TS-VL',M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S    
     WHERE 	A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD


#elseif(${mtymvmt} == 'VD')

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'VD-IC'					MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								'VD-IC'					MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'IC'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
    #if (${lstmcd} != '')
       AND C.LSTM_CD  IN (
      #foreach($cntrlstmcd in ${vel_lstm_cd})
       '$cntrlstmcd',
      #end
      '')
    #end  


	#if (${mtymvmt} == 'MTIDMG')
      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	#end
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		'VD'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */		

      AND 	M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
	#if (${bound} == 'N')
		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */
	#elseif(${bound} == 'Y')
		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */
	#end

    GROUP BY 'VD-IC',M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S    
     WHERE 	A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD
UNION ALL

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        'VD-TS'					MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								'VD-TS'					MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT             
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							) 
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = 'TS'
	#end 
	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
    #if (${lstmcd} != '')
      AND C.LSTM_CD  IN (
        #foreach($cntrlstmcd in ${vel_lstm_cd})
       '$cntrlstmcd',
       #end
       '')
    #end  


	#if (${mtymvmt} == 'MTIDMG')
      AND 	NVL(M.MVMT_CRE_TP_CD, '  ') NOT IN ( 'C','L' ) 
	#end
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] /* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end
		/* ----------------> 2010.05.13 Pre MVMT STS Check Logic 시작 */
		AND		'VD'	=	(   		  
												SELECT /*+ INDEX_DESC ( MM XFN1CTM_MOVEMENT ) */
														MM.MVMT_STS_CD  /*  pre_mvmt_sts_cd   */
												FROM    CTM_MOVEMENT MM
												WHERE   MM.CNTR_NO = M.CNTR_NO  
												AND     MM.CNMV_YR || TO_CHAR(MM.CNMV_SEQ, '0000') ||MM.CNMV_SPLIT_NO <         
																M.CNMV_YR||TO_CHAR(M.CNMV_SEQ,'0000')||M.CNMV_SPLIT_NO
												AND     ROWNUM = 1
											)
		/* <---------------- 2010.05.13 Pre MVMT STS Check Logic 종료 */		

      AND 	M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
	#if (${bound} == 'N')
		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */
	#elseif(${bound} == 'Y')
		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */
	#end

    GROUP BY 'VD-TS',M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S    
     WHERE 	A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD


#else

			SELECT	/*+ ORDERED USE_NL ( A S ) */
			        SUBSTR(@[mtymvmt],0,2)	MOV_STS,
					S.DP_SEQ		DSP_SEQ,
					S.CNTR_TPSZ_CD  CNTR_TPSZ_CD,
					CNMV_EVNT_DT      CNMV_EVNT_DT  ,
					TO_CHAR(CNMV_EVNT_DT, 'DY', 'nls_date_language=english') WEEK,
					NVL(A.CNT,0)	CNT
			FROM	(
						SELECT 	
								SUBSTR(@[mtymvmt],0,2)	MOV_STS			,
								M.CNTR_TPSZ_CD		CNTR_TPSZ_CD    ,
								M.CNMV_EVNT_DT      CNMV_EVNT_DT  ,
								COUNT(M.CNTR_NO)    CNT            
						FROM 	CTM_MOVEMENT	     M,
						       	MST_CONTAINER        C     
	#if (${period} == 'W') 
		WHERE 	M.CNMV_EVNT_DT	BETWEEN	( 
							SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
							FROM   EQR_WK_PRD K
							WHERE  K.PLN_YR||K.PLN_WK = @[from]
							)	
			AND				( 
							 SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
							 FROM   EQR_WK_PRD K
							 WHERE  K.PLN_YR||K.PLN_WK = @[to]
							)  
	#elseif (${period} == 'D' || ${period} == 'M') 
    	WHERE 	M.CNMV_EVNT_DT BETWEEN 	TO_DATE( @[from], 'YYYYMMDD') + .0 
	  	AND 							TO_DATE( @[to], 'YYYYMMDD') + .99999
	#end 
	#if (${mtymvmt} != '') 
      	AND 	M.MVMT_STS_CD = SUBSTR(@[mtymvmt],0,2)
	#end 

	#if (${mtymvmt} == 'ENF' || ${mtymvmt} == 'TNF' || ${mtymvmt} == 'ENM' || ${mtymvmt} == 'TNM') 
		#if (${mtymvmt} == 'ENF' || ${mtymvmt} == 'TNF') 
			AND	M.FCNTR_FLG = 'Y'
		#else
			AND	M.FCNTR_FLG = 'N'
		#end
	#end 

	#if (${dtlTpsz} != '') 
		AND  	M.CNTR_TPSZ_CD  IN ( 
		#foreach($cntrtpszcd in ${vel_tpsz_cd})  
			'$cntrtpszcd',  
			#end  
			'') 
	#end 
    #if (${lstmcd} != '')
      AND C.LSTM_CD  IN (
      #foreach($cntrlstmcd in ${vel_lstm_cd})
      '$cntrlstmcd',
      #end
      '')
    #end  
 
	  #if (${inquiryLevel} == 'Y')
      AND M.ORG_YD_CD = @[location]
	  #else
      AND M.ORG_YD_CD IN (
        SELECT 	/*+ ORDERED USE_NL( G L Y )  */
				Y.YD_CD
        FROM 
          		MDM_EQ_ORZ_CHT G,
          		MDM_LOCATION L,
				MDM_YARD Y
        WHERE Y.LOC_CD = L.LOC_CD
          AND L.SCC_CD = G.SCC_CD
		#if (${inquiryLevel} == 'S')
          AND G.SCC_CD = @[location] 		/* inquiryLevel = 'SCC'*/
		#elseif(${inquiryLevel} == 'L')
		  AND G.LCC_CD = @[location]		/* inquiryLevel = 'LCC'*/
		#elseif(${inquiryLevel} == 'E')
		  AND G.ECC_CD = @[location]		/* inquiryLevel = 'ECC'*/
		#elseif(${inquiryLevel} == 'R')
		  AND G.RCC_CD = @[location]		/* inquiryLevel = 'RCC'*/
		#end
          ) 
	  #end

      AND 	M.CNTR_NO  			= C.CNTR_NO
	  #if (${soc} == 'E')
      AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
	  #elseif(${soc} == 'O')
	  AND 	NVL(C.LSTM_CD, '  ') = 'SH' /* soc	*/
	  #end	
	#if (${bound} == 'N')
		AND		M.OB_CNTR_FLG	=	'N'		/* 'N':Inbound, 'Y':Outbound */
	#elseif(${bound} == 'Y')
		AND		M.OB_CNTR_FLG	=	'Y'		/* 'N':Inbound, 'Y':Outbound */
	#end

    GROUP BY SUBSTR(@[mtymvmt],0,2),M.CNTR_TPSZ_CD, M.CNMV_EVNT_DT) A,CIM_TP_SZ_DP_SEQ S    
     WHERE 	A.CNTR_TPSZ_CD 	= S.CNTR_TPSZ_CD
     
     
#end   
  
	) L, EQR_WK_PRD LL
WHERE TO_CHAR(L.CNMV_EVNT_DT,'YYYYMMDD') BETWEEN LL.WK_ST_DT AND LL.WK_END_DT
#if(${day} != '')
AND WEEK IN ( 
		#foreach($sDay in ${vDay})  
			'$sDay',  
			#end  
			'')
#end
GROUP BY  ROLLUP(PLN_WK)
)
ORDER BY PLN_YR, PLN_WK, N_FLG			]]></sql>
			<params>
				<param name="dtlTpsz" type="12" value="" out="N"/>
				<param name="mtymvmt" type="12" value="" out="N"/>
				<param name="from" type="12" value="" out="N"/>
				<param name="to" type="12" value="" out="N"/>
				<param name="location" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
