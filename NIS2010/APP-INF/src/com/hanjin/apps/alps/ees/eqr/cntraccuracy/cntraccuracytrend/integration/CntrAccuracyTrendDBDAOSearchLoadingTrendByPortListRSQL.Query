<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrAccuracyTrendDBDAOSearchLoadingTrendByPortListRSQL">
			<desc><![CDATA[Loading Trend By Port 조회
- 2014-01-15 , AFRICA PORT 를 EUROPE 으로 병합, 신용찬
- 2014-02-03, SKIP PORT 제거, MT LOADING PORT IND SEQ 조건 추가, 신용찬
- 2014-04-28, MTY, FULL BKG 데이터 추출 수정, 신용찬]]></desc>
			<sql><![CDATA[
WITH DUMMY_HEAD AS
(
    SELECT DISTINCT 
           A.TRD_CD 
          ,A.SUB_TRD_CD
          ,A.RLANE_CD
          ,A.SLAN_CD
          ,SUBSTR(A.SLS_YRMON, 0, 4)||A.COST_WK WEEK
          ,A.VSL_CD||A.SKD_VOY_NO||A.DIR_CD VVD 
          ,A.VSL_CD
          ,A.SKD_VOY_NO 
          ,A.DIR_CD
          ,D.YD_CD 
          ,D.VPS_PORT_CD
          ,D.CLPT_SEQ
          ,D.CLPT_IND_SEQ
          ,E.CONTI_CD
          ,D.VPS_ETA_DT
          ,D.VPS_ETB_DT 
          ,D.VPS_ETD_DT
    FROM MAS_MON_VVD A
        ,VSK_VSL_PORT_SKD D
        ,MDM_LOCATION E
    WHERE A.VSL_CD     = D.VSL_CD
    AND   A.SKD_VOY_NO = D.SKD_VOY_NO
    AND   A.DIR_CD     = D.SKD_DIR_CD 
    AND   D.VPS_PORT_CD= E.LOC_CD

    -- 수정전 원본
    --AND   (SELECT X.CONTI_CD FROM MDM_LOCATION X WHERE X.LOC_CD = A.LST_LODG_PORT_CD) = E.CONTI_CD  -- MAS MON VVD의 LAST CALLING LOADING PORT 의 대륙의 PORT만 조회(LOADING만 조회)
    -- 수정후 (2014-01-15, AFRICA PORT 를 EUROPE 으로 병합, 신용찬)
    AND   (SELECT DECODE(X.CONTI_CD, 'F', 'E', X.CONTI_CD) FROM MDM_LOCATION X WHERE X.LOC_CD = A.LST_LODG_PORT_CD) = DECODE(E.CONTI_CD, 'F', 'E', E.CONTI_CD)  -- MAS MON VVD의 LAST CALLING LOADING PORT 의 대륙의 PORT만 조회(LOADING만 조회)

    AND   A.DELT_FLG = 'N'
    AND   NVL(D.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')
    AND   NVL(D.SKD_CNG_STS_CD, 'X') <> 'S'  -- SKIP PORT 제외(20140203)

  #if (${vvd_cd} != '') 
    -- VVD
    AND   A.VSL_CD     = SUBSTR(@[vvd_cd], 0, 4)
    AND   A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
    AND   A.DIR_CD     = SUBSTR(@[vvd_cd], 9, 1)
  #end

  -- WEEK
  #if (${dt_tp_cd} == 'W')
    #if (${fm_wk} != '' && ${to_wk} != '') 
      AND   SUBSTR(A.SLS_YRMON, 0, 4)||A.COST_WK BETWEEN @[fm_wk] AND @[to_wk]
    #end
      -- ETA DATE
  #else
    #if (${eta_fm_dt} != '' && ${eta_to_dt} != '') 
      AND   TO_CHAR(D.VPS_ETA_DT, 'YYYYMMDD') BETWEEN @[eta_fm_dt] AND @[eta_to_dt]
    #end
  #end
  
  #if (${trade} != '')
      -- TRADE CD
  	AND   A.TRD_CD IN (
  		 #foreach($key IN ${arr_trd_cd})
  		  	#if($velocityCount < $arr_trd_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  			           )
  #end
  
  #if (${subtrade} != '')
      -- SUB TRADE CD
  	AND (
  		#foreach($key IN ${arr_sub_trd_cd})
  			#if($velocityCount == 1 )
  			     (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2))
  			#else 
  			  OR (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2))
  			#end 
  		#end 
  		 )
  #end
  
  #if (${lane} != '') 
  	-- LANE CD
  	AND (
  		#foreach($key IN ${arr_lane})
  		  #if($velocityCount == 1 ) 
  			 --  (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2) AND A.SLAN_CD = SUBSTR('$key',6))
                A.SLAN_CD = '$key' 
  		  #else 
  			--OR (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2) AND A.SLAN_CD = SUBSTR('$key',6))
            OR A.SLAN_CD = '$key' 
  		  #end 
  		#end 
  		)
  #end
  
  #if (${rcc_cd} != '' || ${loc_tp_cd} != ''|| ${loc_cd} != '')
      -- LOCATION
      AND   D.VPS_PORT_CD IN 
      (
          SELECT DISTINCT B.LOC_CD 
          FROM MDM_EQ_ORZ_CHT A
              ,MDM_LOCATION B
          WHERE A.SCC_CD   = B.SCC_CD            
          AND   A.DELT_FLG = 'N'
  	#if (${rcc_cd} != '') 
          AND   A.RCC_CD = @[rcc_cd]
    #end
  
  	#if (${loc_tp_cd} == 'L')
  	  #if (${loc_cd} != '') 
          AND A.LCC_CD  = @[loc_cd]
  	  #end
  	#elseif (${loc_tp_cd} == 'S')
  	  #if (${loc_cd} != '') 
  		AND A.SCC_CD  = @[loc_cd]
  	  #end
  	#elseif (${loc_tp_cd} == 'E') 
  	  #if (${loc_cd} != '') 
  	    AND A.ECC_CD  = @[loc_cd]
  	  #end
  	#end
      )
  #end
    
    ORDER BY 1,2,3,4,CLPT_SEQ
)

-- TRADE, LANE 없는 VVD 만을 위한 조회
,DUMMY_HEAD_ONLYVVD AS
(
    SELECT DISTINCT            
           A.VSL_CD||A.SKD_VOY_NO||A.DIR_CD VVD 
          ,A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.DIR_CD
          ,D.YD_CD 
          ,D.VPS_PORT_CD
          ,D.CLPT_SEQ
          ,D.CLPT_IND_SEQ
          ,E.CONTI_CD
          ,D.VPS_ETA_DT
          ,D.VPS_ETB_DT 
          ,D.VPS_ETD_DT
    FROM MAS_MON_VVD A
        ,VSK_VSL_PORT_SKD D
        ,MDM_LOCATION E
    WHERE A.VSL_CD     = D.VSL_CD
    AND   A.SKD_VOY_NO = D.SKD_VOY_NO
    AND   A.DIR_CD     = D.SKD_DIR_CD 
    AND   D.VPS_PORT_CD= E.LOC_CD

    -- 수정전 원본
    --AND   (SELECT X.CONTI_CD FROM MDM_LOCATION X WHERE X.LOC_CD = A.LST_LODG_PORT_CD) = E.CONTI_CD  -- MAS MON VVD의 LAST CALLING LOADING PORT 의 대륙의 PORT만 조회(LOADING만 조회)
    -- 수정후 (2014-01-15, AFRICA PORT 를 EUROPE 으로 병합, 신용찬)
    AND   (SELECT DECODE(X.CONTI_CD, 'F', 'E', X.CONTI_CD) FROM MDM_LOCATION X WHERE X.LOC_CD = A.LST_LODG_PORT_CD) = DECODE(E.CONTI_CD, 'F', 'E', E.CONTI_CD)  -- MAS MON VVD의 LAST CALLING LOADING PORT 의 대륙의 PORT만 조회(LOADING만 조회)

    AND   A.DELT_FLG = 'N'
    AND   NVL(D.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')
    AND   NVL(D.SKD_CNG_STS_CD, 'X') <> 'S'  -- SKIP PORT 제외(20140203)

  #if (${vvd_cd} != '') 
    -- VVD
    AND   A.VSL_CD     = SUBSTR(@[vvd_cd], 0, 4)
    AND   A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
    AND   A.DIR_CD     = SUBSTR(@[vvd_cd], 9, 1)
  #end

  -- WEEK
  #if (${dt_tp_cd} == 'W')
    #if (${fm_wk} != '' && ${to_wk} != '') 
      AND   SUBSTR(A.SLS_YRMON, 0, 4)||A.COST_WK BETWEEN @[fm_wk] AND @[to_wk]
    #end
      -- ETA DATE
  #else
    #if (${eta_fm_dt} != '' && ${eta_to_dt} != '') 
      AND   TO_CHAR(D.VPS_ETA_DT, 'YYYYMMDD') BETWEEN @[eta_fm_dt] AND @[eta_to_dt]
    #end
  #end
  
  #if (${trade} != '')
      -- TRADE CD
  	AND   A.TRD_CD IN (
  		 #foreach($key IN ${arr_trd_cd})
  		  	#if($velocityCount < $arr_trd_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  			           )
  #end
  
  #if (${subtrade} != '')
      -- SUB TRADE CD
  	AND (
  		#foreach($key IN ${arr_sub_trd_cd})
  			#if($velocityCount == 1 )
  			     (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2))
  			#else 
  			  OR (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2))
  			#end 
  		#end 
  		 )
  #end
  
  #if (${lane} != '') 
  	-- LANE CD
  	AND (
  		#foreach($key IN ${arr_lane})
  		  #if($velocityCount == 1 ) 
  			   --(A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2) AND A.SLAN_CD = SUBSTR('$key',6))
               A.SLAN_CD = '$key' 
  		  #else 
  			--OR (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2) AND A.SLAN_CD = SUBSTR('$key',6))
              OR A.SLAN_CD = '$key'
  		  #end 
  		#end 
  		)
  #end
  
  #if (${rcc_cd} != '' || ${loc_tp_cd} != ''|| ${loc_cd} != '')
      -- LOCATION
      AND   D.VPS_PORT_CD IN 
      (
          SELECT DISTINCT B.LOC_CD 
          FROM MDM_EQ_ORZ_CHT A
              ,MDM_LOCATION B
          WHERE A.SCC_CD   = B.SCC_CD            
          AND   A.DELT_FLG = 'N'
  	#if (${rcc_cd} != '') 
          AND   A.RCC_CD = @[rcc_cd]
    #end
  
  	#if (${loc_tp_cd} == 'L')
  	  #if (${loc_cd} != '') 
          AND A.LCC_CD  = @[loc_cd]
  	  #end
  	#elseif (${loc_tp_cd} == 'S')
  	  #if (${loc_cd} != '') 
  		AND A.SCC_CD  = @[loc_cd]
  	  #end
  	#elseif (${loc_tp_cd} == 'E') 
  	  #if (${loc_cd} != '') 
  	    AND A.ECC_CD  = @[loc_cd]
  	  #end
  	#end
      )
  #end


    
    ORDER BY 1,2,3,4,CLPT_SEQ
)

-- MT PLAN (A) ----------------------------------------
,DUMMY_PLAN AS
(
    SELECT SUB_TRD_CD
          ,VSL_LANE_CD
          ,VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,POL_YD_CD
          ,FCBF_DT
          ,TEU_QTY
          ,TON_WGT
          ,TYPE1
          ,TYPE2
          ,PLN_RSN_RMK
          ,NVL(SUM(CNTR_QTY), 0) QTY_BOX
                
          ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), '') QTY_D2
          ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), '') QTY_D4
          ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), '') QTY_D5
          ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), '') QTY_D7
          ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), '') QTY_R2
          ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), '') QTY_R5
          ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), '') QTY_R9
          ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), '') QTY_O2
          ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), '') QTY_O4
          ,NVL(SUM(DECODE(TPSZ_CD, 'O5', CNTR_QTY)), '') QTY_O5
          ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), '') QTY_S2
          ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), '') QTY_S4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), '') QTY_F2
          ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), '') QTY_F4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), '') QTY_F5
          ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), '') QTY_A2
          ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), '') QTY_A4
          ,NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), '') QTY_A5
          ,1 CLPT_IND_SEQ
    FROM
    (
        SELECT A.TRD_CD
              ,A.SUB_TRD_CD
              ,A.VSL_LANE_CD
              ,A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.POL_YD_CD 
              ,TO_CHAR(A.FNL_CBF_DT, 'YYYY-MM-DD') FCBF_DT
              ,A.MTY_LODG_PLN_TEU_QTY TEU_QTY
              ,A.MTY_LODG_PLN_TON_WGT TON_WGT
              ,D.PLN_RSN_HDR_NM TYPE1
              ,E.PLN_RSN_SUB_NM TYPE2
              ,PLN_RSN_RMK      
              ,C.CNTR_TPSZ_CD TPSZ_CD
              ,C.CNTR_QTY
        FROM EQR_CTRL_MTY_LODG_PLN A
            ,EQR_CTRL_MTY_DCHG_PLN B
            ,EQR_CTRL_MTY_DCHG_PLN_QTY C
            ,EQR_CTRL_PLN_RSN_HDR D
            ,EQR_CTRL_PLN_RSN_SUB E
            ,DUMMY_HEAD Z
        WHERE A.VSL_CD     = B.VSL_CD
        AND   A.SKD_VOY_NO = B.SKD_VOY_NO    
        AND   A.SKD_DIR_CD = B.SKD_DIR_CD
        AND   A.POL_YD_CD  = B.POL_YD_CD
        AND   B.VSL_CD     = C.VSL_CD
        AND   B.SKD_VOY_NO = C.SKD_VOY_NO
        AND   B.SKD_DIR_CD = C.SKD_DIR_CD
        AND   B.POL_YD_CD  = C.POL_YD_CD
        AND   B.POD_YD_CD  = C.POD_YD_CD
        AND   A.PLN_RSN_HDR_CD = D.PLN_RSN_HDR_CD(+)
        AND   A.PLN_RSN_HDR_CD = E.PLN_RSN_HDR_CD(+)
        AND   A.PLN_RSN_SUB_CD = E.PLN_RSN_SUB_CD(+)
        AND   A.SUB_TRD_CD = Z.SUB_TRD_CD
        AND   A.VSL_LANE_CD= Z.SLAN_CD
        AND   A.VSL_CD     = Z.VSL_CD
        AND   A.SKD_VOY_NO = Z.SKD_VOY_NO
        AND   A.SKD_DIR_CD = Z.DIR_CD  
        AND   A.POL_YD_CD  = Z.YD_CD
        AND   Z.CLPT_IND_SEQ = 1 -- PLAN은 1만 취급
        --AND   B.MTY_PLN_SHW_FLG = 'Y' (조건제거, 2013-10-16, 정길수)
    )
    GROUP BY SUB_TRD_CD
            ,VSL_LANE_CD
            ,VSL_CD
            ,SKD_VOY_NO
            ,SKD_DIR_CD
            ,POL_YD_CD
            ,FCBF_DT
            ,TEU_QTY
            ,TON_WGT
            ,TYPE1
            ,TYPE2
            ,PLN_RSN_RMK
)

/*
-- MT BOOKING (B) ---------------------------------------------
,DUMMY_MTBOOKING AS
(
    SELECT VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POL_YD_CD          
          
          ,SUM(QTY_TEU) TEU_QTY
          ,SUM(TON_WGT) TON_WGT
    
          ,NVL(SUM(CNTR_QTY), 0) QTY_BOX                
          ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), 0) QTY_D2
          ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), 0) QTY_D4
          ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), 0) QTY_D5
          ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), 0) QTY_D7
          ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), 0) QTY_R2
          ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), 0) QTY_R5
          ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), 0) QTY_R9
          ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), 0) QTY_O2
          ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), 0) QTY_O4
          ,NVL(SUM(DECODE(TPSZ_CD, 'O5', CNTR_QTY)), 0) QTY_O5
          ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), 0) QTY_S2
          ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), 0) QTY_S4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), 0) QTY_F2
          ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), 0) QTY_F4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), 0) QTY_F5
          ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), 0) QTY_A2
          ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), 0) QTY_A4
          --,1 CLPT_IND_SEQ 
          ,POL_CLPT_IND_SEQ CLPT_IND_SEQ  -- 2014-02-03 로직변경, 신용찬     
    FROM
    (
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.SLAN_CD VSL_LANE_CD -- 2014-02-03 로직변경, 신용찬  
              ,A.POL_YD_CD
              ,A.POL_CLPT_IND_SEQ
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
              ,DECODE(SUBSTR(B.CNTR_TPSZ_CD,-1), '2' ,OP_CNTR_QTY, OP_CNTR_QTY*2) QTY_TEU
              ,ROUND((C.CNTR_TPSZ_TARE_WGT * B.OP_CNTR_QTY) / 1000, 1) AS TON_WGT
        FROM --EQR_CTRL_MTY_BKG_EXE A
             BKG_VVD A
            ,BKG_QUANTITY B
            ,MDM_CNTR_TP_SZ C
            ,BKG_BOOKING D
            ,DUMMY_HEAD Z
                
        WHERE D.VSL_CD        = Z.VSL_CD
        AND   D.SKD_VOY_NO    = Z.SKD_VOY_NO
        AND   D.SKD_DIR_CD    = Z.DIR_CD   
        AND   D.POL_NOD_CD    = Z.YD_CD 
        AND   D.BKG_CGO_TP_CD = 'P' 
        AND   D.BKG_NO        = A.BKG_NO
        AND   A.POL_CLPT_IND_SEQ = Z.CLPT_IND_SEQ
        AND   A.BKG_NO        = B.BKG_NO
        AND   B.CNTR_TPSZ_CD= C.CNTR_TPSZ_CD
    
    )
    
    GROUP BY VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POL_YD_CD
          ,POL_CLPT_IND_SEQ

)

-- FULL BOOKING (D) ---------------------------------------------
,DUMMY_FULLBKG AS
(
    SELECT A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.SKD_DIR_CD
          ,A.POL_YD_CD
          ,A.CLPT_SEQ
          ,NVL(MAX(A.FULL_BKG_LOD_TTL_TEU_QTY ),0) F_L_TEU 
          ,NVL(MAX(A.FULL_BKG_LOD_TTL_WGT     ),0) F_L_WGT
          ,NVL(MAX(A.FULL_BKG_DCHG_TTL_TEU_QTY),0) F_D_TEU
          ,NVL(MAX(A.FULL_BKG_DCHG_TTL_WGT    ),0) F_D_WGT
          ,NVL(MAX(A.FULL_BKG_OBRD_TTL_TEU_QTY),0) F_O_TEU
          ,NVL(MAX(A.FULL_BKG_OBRD_TTL_WGT    ),0) F_O_WGT
          ,NVL(MAX(A.FULL_BKG_AVG_TTL_WGT     ),0) F_VOID
          ,NVL(MAX(A.BKG_OBRD_TTL_TEU_QTY     ),0) T_O_TEU  -- TOTAL ONBOARD TEU (MTY+FULL)
          ,NVL(MAX(A.BKG_OBRD_TTL_WGT         ),0) T_O_WGT  -- TOTAL ONBOARD WGT (MTY+FULL)   
    
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', B.CNTR_QTY)),0) F_L_BOX
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))),0) F_L_D2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))),0) F_L_D4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))),0) F_L_D5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))),0) F_L_D7
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))),0) F_L_R2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))),0) F_L_R5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY))),0) F_L_R9
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))),0) F_L_O2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))),0) F_L_O4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))),0) F_L_O5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))),0) F_L_S2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))),0) F_L_S4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))),0) F_L_F2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))),0) F_L_F4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))),0) F_L_F5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))),0) F_L_A2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))),0) F_L_A4
    
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', B.CNTR_QTY)),0) F_D_BOX      
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))),0) F_D_D2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))),0) F_D_D4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))),0) F_D_D5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))),0) F_D_D7
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))),0) F_D_R2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))),0) F_D_R5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY))),0) F_D_R9
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))),0) F_D_O2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))),0) F_D_O4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))),0) F_D_O5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))),0) F_D_S2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))),0) F_D_S4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))),0) F_D_F2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))),0) F_D_F4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))),0) F_D_F5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))),0) F_D_A2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))),0) F_D_A4
    
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', B.CNTR_QTY)),0) F_O_BOX      
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))),0) F_O_D2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))),0) F_O_D4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))),0) F_O_D5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))),0) F_O_D7
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))),0) F_O_R2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))),0) F_O_R5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY))),0) F_O_R9
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))),0) F_O_O2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))),0) F_O_O4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))),0) F_O_O5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))),0) F_O_S2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))),0) F_O_S4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))),0) F_O_F2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))),0) F_O_F4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))),0) F_O_F5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))),0) F_O_A2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))),0) F_O_A4
    
    FROM EQR_CTRL_FULL_LOD_SNAP A
        ,EQR_CTRL_FULL_LOD_SNAP_DTL B
        ,DUMMY_HEAD X
    WHERE A.VSL_CD     = B.VSL_CD
    AND   A.SKD_VOY_NO = B.SKD_VOY_NO
    AND   A.SKD_DIR_CD = B.SKD_DIR_CD
    AND   A.POL_YD_CD  = B.POL_YD_CD   
    AND   A.CLPT_SEQ   = B.CLPT_SEQ
    AND   B.VSL_CD     = X.VSL_CD    
    AND   B.SKD_VOY_NO = X.SKD_VOY_NO
    AND   B.SKD_DIR_CD = X.DIR_CD
    AND   B.POL_YD_CD  = X.YD_CD  
    GROUP BY A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.SKD_DIR_CD
          ,A.POL_YD_CD  
          ,A.CLPT_SEQ

)
*/

-- MT BOOKING (B) ---------------------------------------------
,DUMMY_MTBOOKING AS
(
    SELECT VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POL_YD_CD          
          
          ,SUM(QTY_TEU) TEU_QTY
          ,SUM(TON_WGT) TON_WGT
    
          ,NVL(SUM(CNTR_QTY), 0) QTY_BOX                
          ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), 0) QTY_D2
          ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), 0) QTY_D4
          ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), 0) QTY_D5
          ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), 0) QTY_D7
          ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), 0) QTY_R2
          ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), 0) QTY_R5
          ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), 0) QTY_R9
          ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), 0) QTY_O2
          ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), 0) QTY_O4
          ,NVL(SUM(DECODE(TPSZ_CD, 'O5', CNTR_QTY)), 0) QTY_O5
          ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), 0) QTY_S2
          ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), 0) QTY_S4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), 0) QTY_F2
          ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), 0) QTY_F4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), 0) QTY_F5
          ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), 0) QTY_A2
          ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), 0) QTY_A4
          ,NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), 0) QTY_A5
          --,1 CLPT_IND_SEQ 
          ,POL_CLPT_IND_SEQ CLPT_IND_SEQ  -- 2014-02-03 로직변경, 신용찬         
                                           
    FROM
    (
/* --2014.04.28 MODIFIED BY YONGCHAN SHIN
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.SLAN_CD VSL_LANE_CD
              ,A.POL_YD_CD
              ,A.POL_CLPT_IND_SEQ
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
              ,DECODE(SUBSTR(B.CNTR_TPSZ_CD,-1), '2' ,OP_CNTR_QTY, OP_CNTR_QTY*2) QTY_TEU
              ,ROUND((C.CNTR_TPSZ_TARE_WGT * B.OP_CNTR_QTY) / 1000, 1) AS TON_WGT
        FROM --EQR_CTRL_MTY_BKG_EXE A
             BKG_VVD A
            ,BKG_QUANTITY B
            ,MDM_CNTR_TP_SZ C
            ,BKG_BOOKING D
            ,DUMMY_HEAD Z
                
        WHERE D.VSL_CD        = Z.VSL_CD
        AND   D.SKD_VOY_NO    = Z.SKD_VOY_NO
        AND   D.SKD_DIR_CD    = Z.DIR_CD   
        AND   D.POL_NOD_CD    = Z.YD_CD 
        AND   D.BKG_CGO_TP_CD = 'P' 
        AND   D.BKG_NO        = A.BKG_NO
        AND   A.POL_CLPT_IND_SEQ = Z.CLPT_IND_SEQ
        AND   A.BKG_NO        = B.BKG_NO
        AND   B.CNTR_TPSZ_CD= C.CNTR_TPSZ_CD
*/
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.SLAN_CD VSL_LANE_CD
              ,A.POL_YD_CD
              ,A.POL_CLPT_IND_SEQ
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
              ,DECODE(SUBSTR(B.CNTR_TPSZ_CD,-1), '2' ,OP_CNTR_QTY, OP_CNTR_QTY*2) QTY_TEU
              ,ROUND((C.CNTR_TPSZ_TARE_WGT * B.OP_CNTR_QTY) / 1000, 1) AS TON_WGT
        FROM BKG_VVD A
            ,BKG_QUANTITY B
            ,MDM_CNTR_TP_SZ C
            ,BKG_BOOKING D
            ,DUMMY_HEAD_ONLYVVD Z
        WHERE A.VSL_CD          = Z.VSL_CD
        AND   A.SKD_VOY_NO      = Z.SKD_VOY_NO
        AND   A.SKD_DIR_CD      = Z.DIR_CD
        AND   A.POL_YD_CD       = Z.YD_CD        
        AND   A.POL_CLPT_IND_SEQ= Z.CLPT_IND_SEQ
        AND   A.VSL_PRE_PST_CD  = 'T' --TRUNK
        AND   A.VSL_CD          = D.VSL_CD
        AND   A.SKD_VOY_NO      = D.SKD_VOY_NO
        AND   A.SKD_DIR_CD      = D.SKD_DIR_CD
        AND   A.POL_YD_CD       = D.POL_NOD_CD 
        AND   A.BKG_NO          = D.BKG_NO
        AND   D.BKG_CGO_TP_CD   = 'P'  --EMPTY        
        AND   A.BKG_NO          = B.BKG_NO
        AND   B.CNTR_TPSZ_CD    = C.CNTR_TPSZ_CD     
    )
    
    GROUP BY VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POL_YD_CD
          ,POL_CLPT_IND_SEQ

)


-- FULL BOOKING (D) ---------------------------------------------
,DUMMY_FULLBKG AS
(
    SELECT A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.SKD_DIR_CD
          ,A.POL_YD_CD
          ,A.CLPT_SEQ
          ,NVL(MAX(A.FULL_BKG_LOD_TTL_TEU_QTY ),0) F_L_TEU 
          ,NVL(MAX(A.FULL_BKG_LOD_TTL_WGT     ),0) F_L_WGT
          ,NVL(MAX(A.FULL_BKG_DCHG_TTL_TEU_QTY),0) F_D_TEU
          ,NVL(MAX(A.FULL_BKG_DCHG_TTL_WGT    ),0) F_D_WGT
          ,NVL(MAX(A.FULL_BKG_OBRD_TTL_TEU_QTY),0) F_O_TEU
          ,NVL(MAX(A.FULL_BKG_OBRD_TTL_WGT    ),0) F_O_WGT
          ,NVL(MAX(A.FULL_BKG_AVG_TTL_WGT     ),0) F_VOID
          ,NVL(MAX(A.BKG_OBRD_TTL_TEU_QTY     ),0) T_O_TEU  -- TOTAL ONBOARD TEU (MTY+FULL)
          ,NVL(MAX(A.BKG_OBRD_TTL_WGT         ),0) T_O_WGT  -- TOTAL ONBOARD WGT (MTY+FULL)   
    
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', B.CNTR_QTY)),0) F_L_BOX
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))),0) F_L_D2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))),0) F_L_D4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))),0) F_L_D5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))),0) F_L_D7
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))),0) F_L_R2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))),0) F_L_R5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY))),0) F_L_R9
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))),0) F_L_O2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))),0) F_L_O4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))),0) F_L_O5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))),0) F_L_S2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))),0) F_L_S4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))),0) F_L_F2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))),0) F_L_F4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))),0) F_L_F5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))),0) F_L_A2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))),0) F_L_A4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'L', DECODE(B.CNTR_TPSZ_CD, 'A5', B.CNTR_QTY))),0) F_L_A5
    
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', B.CNTR_QTY)),0) F_D_BOX      
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))),0) F_D_D2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))),0) F_D_D4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))),0) F_D_D5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))),0) F_D_D7
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))),0) F_D_R2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))),0) F_D_R5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY))),0) F_D_R9
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))),0) F_D_O2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))),0) F_D_O4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))),0) F_D_O5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))),0) F_D_S2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))),0) F_D_S4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))),0) F_D_F2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))),0) F_D_F4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))),0) F_D_F5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))),0) F_D_A2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))),0) F_D_A4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'D', DECODE(B.CNTR_TPSZ_CD, 'A5', B.CNTR_QTY))),0) F_D_A5
    
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', B.CNTR_QTY)),0) F_O_BOX      
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D2', B.CNTR_QTY))),0) F_O_D2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D4', B.CNTR_QTY))),0) F_O_D4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D5', B.CNTR_QTY))),0) F_O_D5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'D7', B.CNTR_QTY))),0) F_O_D7
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'R2', B.CNTR_QTY))),0) F_O_R2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'R5', B.CNTR_QTY))),0) F_O_R5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'R9', B.CNTR_QTY))),0) F_O_R9
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'O2', B.CNTR_QTY))),0) F_O_O2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'O4', B.CNTR_QTY))),0) F_O_O4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'O5', B.CNTR_QTY))),0) F_O_O5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'S2', B.CNTR_QTY))),0) F_O_S2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'S4', B.CNTR_QTY))),0) F_O_S4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'F2', B.CNTR_QTY))),0) F_O_F2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'F4', B.CNTR_QTY))),0) F_O_F4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'F5', B.CNTR_QTY))),0) F_O_F5
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'A2', B.CNTR_QTY))),0) F_O_A2
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'A4', B.CNTR_QTY))),0) F_O_A4
          ,NVL(SUM(DECODE(B.MTY_FULL_BKG_BX_DIV_CD, 'O', DECODE(B.CNTR_TPSZ_CD, 'A5', B.CNTR_QTY))),0) F_O_A5
    
    FROM EQR_CTRL_FULL_LOD_SNAP A
        ,EQR_CTRL_FULL_LOD_SNAP_DTL B
        ,DUMMY_HEAD_ONLYVVD X
    WHERE A.VSL_CD     = B.VSL_CD
    AND   A.SKD_VOY_NO = B.SKD_VOY_NO
    AND   A.SKD_DIR_CD = B.SKD_DIR_CD
    AND   A.POL_YD_CD  = B.POL_YD_CD   
    AND   A.CLPT_SEQ   = B.CLPT_SEQ
    AND   B.VSL_CD     = X.VSL_CD    
    AND   B.SKD_VOY_NO = X.SKD_VOY_NO
    AND   B.SKD_DIR_CD = X.DIR_CD
    AND   B.POL_YD_CD  = X.YD_CD  
    AND   B.CLPT_SEQ   = X.CLPT_SEQ     
    GROUP BY A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.SKD_DIR_CD
          ,A.POL_YD_CD  
          ,A.CLPT_SEQ

)


-- BSA TEU -------------------------------------------------
,DUMMY_BSA_TEU AS
(                                  
    SELECT X.VPS_PORT_CD PORT_CD
          ,X.RLANE_CD
          ,X.VSL_CD
          ,X.SKD_VOY_NO
          ,X.DIR_CD
          ,NVL(MAX(C.CRR_BSA_CAPA),0) BSA_TEU
    FROM MAS_LANE_RGST    B
        ,BSA_VVD_OTR_CRR  C
        ,DUMMY_HEAD       X
    WHERE B.RLANE_CD        = C.RLANE_CD
    AND   B.TRD_CD          = C.TRD_CD
    AND   B.DIR_CD          = C.SKD_DIR_CD
    AND   C.RLANE_CD     = X.RLANE_CD
    AND   C.VSL_CD       = X.VSL_CD
    AND   C.SKD_VOY_NO   = X.SKD_VOY_NO
    AND   C.SKD_DIR_CD   = X.DIR_CD
    AND   C.BSA_OP_JB_CD = '007' -- TOTAL TEU 
    AND   C.CRR_CD       = 'SML'
    GROUP BY X.VPS_PORT_CD 
            ,X.RLANE_CD
            ,X.VSL_CD
            ,X.SKD_VOY_NO
            ,X.DIR_CD
)                       


-- BSA WEIGHT
,DUMMY_BSA_WGT AS
(               
    SELECT X.VPS_PORT_CD PORT_CD
          ,X.RLANE_CD
          ,X.VSL_CD
          ,X.SKD_VOY_NO
          ,X.DIR_CD
          ,NVL(MAX(C.CRR_BSA_CAPA),0) BSA_WGT
    FROM MAS_LANE_RGST    B
        ,BSA_VVD_OTR_CRR  C
        ,DUMMY_HEAD       X
    WHERE B.RLANE_CD     = C.RLANE_CD
    AND   B.TRD_CD       = C.TRD_CD
    AND   B.DIR_CD       = C.SKD_DIR_CD
    AND   C.RLANE_CD     = X.RLANE_CD
    AND   C.VSL_CD       = X.VSL_CD
    AND   C.SKD_VOY_NO   = X.SKD_VOY_NO
    AND   C.SKD_DIR_CD   = X.DIR_CD
    AND   C.BSA_OP_JB_CD = '009' -- TEU기준 (009, TOTAL WEIGHT)
    AND   C.CRR_CD       = 'SML'
    GROUP BY X.VPS_PORT_CD
                 ,X.RLANE_CD
                 ,X.VSL_CD
                 ,X.SKD_VOY_NO
                 ,X.DIR_CD                 
)

-- NORMAL 쿼리 ---------------------------------------
,DUMMY_NORMAL AS
(
SELECT E.LCC_CD
      ,E.ECC_CD
      ,A.YD_CD
      ,A.WEEK      
      ,A.SLAN_CD
      ,A.VVD

      ,TO_CHAR(A.VPS_ETA_DT, 'YYYY-MM-DD HH24:MM') VPS_ETA_DT
      ,TO_CHAR(A.VPS_ETD_DT, 'YYYY-MM-DD HH24:MM') VPS_ETD_DT 
      ,B.FCBF_DT
      
       -- MT PLAN(A)  
      ,NVL(B.TEU_QTY,0) P_TEU
      ,NVL(B.QTY_BOX,0) P_BOX
            
      ,NVL(B.QTY_D2,0)  P_D2
      ,NVL(B.QTY_D4,0)  P_D4
      ,NVL(B.QTY_D5,0)  P_D5
      ,NVL(B.QTY_D7,0)  P_D7
      ,NVL(B.QTY_R2,0)  P_R2
      ,NVL(B.QTY_R5,0)  P_R5
      ,NVL(B.QTY_R9,0)  P_R9
      ,NVL(B.QTY_O2,0)  P_O2
      ,NVL(B.QTY_O4,0)  P_O4
      ,NVL(B.QTY_O5,0)  P_O5
      ,NVL(B.QTY_S2,0)  P_S2
      ,NVL(B.QTY_S4,0)  P_S4
      ,NVL(B.QTY_F2,0)  P_F2
      ,NVL(B.QTY_F4,0)  P_F4
      ,NVL(B.QTY_F5,0)  P_F5
      ,NVL(B.QTY_A2,0)  P_A2
      ,NVL(B.QTY_A4,0)  P_A4
      ,NVL(B.QTY_A5,0)  P_A5
      ,NVL(B.TON_WGT,0) P_WGT
       
       -- MT BOOKING(B)      
      ,NVL(C.TEU_QTY,0) M_TEU
      ,NVL(C.QTY_BOX,0) M_BOX
            
      ,NVL(C.QTY_D2,0)  M_D2
      ,NVL(C.QTY_D4,0)  M_D4
      ,NVL(C.QTY_D5,0)  M_D5
      ,NVL(C.QTY_D7,0)  M_D7
      ,NVL(C.QTY_R2,0)  M_R2
      ,NVL(C.QTY_R5,0)  M_R5
      ,NVL(C.QTY_R9,0)  M_R9
      ,NVL(C.QTY_O2,0)  M_O2
      ,NVL(C.QTY_O4,0)  M_O4
      ,NVL(C.QTY_O5,0)  M_O5
      ,NVL(C.QTY_S2,0)  M_S2
      ,NVL(C.QTY_S4,0)  M_S4
      ,NVL(C.QTY_F2,0)  M_F2
      ,NVL(C.QTY_F4,0)  M_F4
      ,NVL(C.QTY_F5,0)  M_F5
      ,NVL(C.QTY_A2,0)  M_A2
      ,NVL(C.QTY_A4,0)  M_A4
      ,NVL(C.QTY_A5,0)  M_A5
      ,NVL(C.TON_WGT,0) M_WGT 
      
      -- DIFF(A-B)
      ,NVL(B.TEU_QTY, 0) - NVL(C.TEU_QTY, 0) DF_TEU_A
      ,NVL(B.QTY_BOX, 0) - NVL(C.QTY_BOX, 0) DF_BOX_A
      ,NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0) DF_D2_A
      ,NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0) DF_D4_A
      ,NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0) DF_D5_A
      ,NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0) DF_D7_A
      ,NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0) DF_R2_A
      ,NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0) DF_R5_A
      ,NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0) DF_R9_A
      ,NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0) DF_O2_A
      ,NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0) DF_O4_A
      ,NVL(B.QTY_O5,  0) - NVL(C.QTY_O5,  0) DF_O5_A
      ,NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0) DF_S2_A
      ,NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0) DF_S4_A
      ,NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0) DF_F2_A
      ,NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0) DF_F4_A
      ,NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0) DF_F5_A
      ,NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0) DF_A2_A
      ,NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0) DF_A4_A
      ,NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0) DF_A5_A
       
       -- FULL BKG (LOAD)   
      ,NVL(D.F_L_TEU,0) F_L_TEU
      ,NVL(D.F_L_BOX,0) F_L_BOX

      ,NVL(D.F_L_D2,0) F_L_D2
      ,NVL(D.F_L_D4,0) F_L_D4
      ,NVL(D.F_L_D5,0) F_L_D5
      ,NVL(D.F_L_D7,0) F_L_D7
      ,NVL(D.F_L_R2,0) F_L_R2
      ,NVL(D.F_L_R5,0) F_L_R5
      ,NVL(D.F_L_R9,0) F_L_R9
      ,NVL(D.F_L_O2,0) F_L_O2
      ,NVL(D.F_L_O4,0) F_L_O4
      ,NVL(D.F_L_O5,0) F_L_O5
      ,NVL(D.F_L_S2,0) F_L_S2
      ,NVL(D.F_L_S4,0) F_L_S4
      ,NVL(D.F_L_F2,0) F_L_F2
      ,NVL(D.F_L_F4,0) F_L_F4
      ,NVL(D.F_L_F5,0) F_L_F5
      ,NVL(D.F_L_A2,0) F_L_A2
      ,NVL(D.F_L_A4,0) F_L_A4
      ,NVL(D.F_L_A5,0) F_L_A5

      ,NVL(D.F_L_WGT,0) F_L_WGT             
      
       -- FULL BKG (DISCH)
      ,NVL(D.F_D_TEU,0) F_D_TEU
      ,NVL(D.F_D_BOX,0) F_D_BOX

      ,NVL(D.F_D_D2,0) F_D_D2
      ,NVL(D.F_D_D4,0) F_D_D4
      ,NVL(D.F_D_D5,0) F_D_D5
      ,NVL(D.F_D_D7,0) F_D_D7
      ,NVL(D.F_D_R2,0) F_D_R2
      ,NVL(D.F_D_R5,0) F_D_R5
      ,NVL(D.F_D_R9,0) F_D_R9
      ,NVL(D.F_D_O2,0) F_D_O2
      ,NVL(D.F_D_O4,0) F_D_O4
      ,NVL(D.F_D_O5,0) F_D_O5
      ,NVL(D.F_D_S2,0) F_D_S2
      ,NVL(D.F_D_S4,0) F_D_S4
      ,NVL(D.F_D_F2,0) F_D_F2
      ,NVL(D.F_D_F4,0) F_D_F4
      ,NVL(D.F_D_F5,0) F_D_F5
      ,NVL(D.F_D_A2,0) F_D_A2
      ,NVL(D.F_D_A4,0) F_D_A4
      ,NVL(D.F_D_A5,0) F_D_A5

      ,NVL(D.F_D_WGT,0)  F_D_WGT
      
      ,NVL(D.F_O_WGT,0)  F_O_WGT
      ,NVL(D.F_O_TEU,0)  F_O_TEU
      ,NVL(D.T_O_WGT,0)  T_O_WGT
      ,NVL(D.T_O_TEU,0)  T_O_TEU       
       -- VOID (45FT-D7:R9 , HC-D5:R5)
      --,NVL(
      --   SPC_LANE_RGST_QTY_FNC('45', A.RLANE_CD, TO_CHAR(A.VPS_ETA_DT, 'YYYYMMDD'), SUBSTR(A.YD_CD,0,5), A.VVD, F.BSA_TEU, (NVL(C.QTY_D7,0) + NVL(C.QTY_R9,0) + NVL(D.F_L_D7,0) + NVL(D.F_L_R9, 0))) 
      --  +SPC_LANE_RGST_QTY_FNC('HC', A.RLANE_CD, TO_CHAR(A.VPS_ETA_DT, 'YYYYMMDD'), SUBSTR(A.YD_CD,0,5), A.VVD, F.BSA_TEU, (NVL(C.QTY_D5,0) + NVL(C.QTY_R5,0) + NVL(D.F_L_D5,0) + NVL(D.F_L_R5, 0)))
      -- , 0) VOID
      ,NVL(D.F_VOID, 0) VOID
       
       -- BSA
      ,NVL(F.BSA_TEU,0) BSA_TEU
      ,NVL(G.BSA_WGT,0) BSA_WGT
       
       -- PLAN REASON / REMARK
      ,B.TYPE1
      ,B.TYPE2
      ,B.PLN_RSN_RMK 
                
       -- HIDDEN AREA   
      ,1 SORT_FLAG      
      ,A.CLPT_SEQ     

FROM DUMMY_HEAD      A
    ,DUMMY_PLAN      B
    ,DUMMY_MTBOOKING C
    ,DUMMY_FULLBKG   D
    ,DUMMY_BSA_TEU   F
    ,DUMMY_BSA_WGT   G
    ,(
        SELECT A.ECC_CD, A.LCC_CD, A.SCC_CD, B.LOC_CD, C.YD_CD 
        FROM MDM_EQ_ORZ_CHT A
            ,MDM_LOCATION B
            ,MDM_YARD     C
        WHERE A.SCC_CD = B.SCC_CD
        AND   B.LOC_CD = C.LOC_CD
--        AND   C.YD_CD  = 'NLRTMYW'     
     ) E

WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POL_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POL_YD_CD(+) 
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POL_YD_CD(+)
AND   A.CLPT_SEQ   = D.CLPT_SEQ(+)
AND   A.VSL_CD     = F.VSL_CD(+)
AND   A.SKD_VOY_NO = F.SKD_VOY_NO(+)
AND   A.DIR_CD     = F.DIR_CD(+)
AND   A.VPS_PORT_CD= F.PORT_CD(+)
AND   A.VSL_CD     = G.VSL_CD(+)
AND   A.SKD_VOY_NO = G.SKD_VOY_NO(+)
AND   A.DIR_CD     = G.DIR_CD(+)
AND   A.VPS_PORT_CD= G.PORT_CD(+)
AND   A.YD_CD      = E.YD_CD(+)  

)

-- AVERAGE 쿼리 ---------------------------------------
,DUMMY_AVG AS
(
SELECT LCC_CD
      ,ECC_CD
      ,WEEK
      ,SLAN_CD
          ,ROUND(AVG(P_TEU    ))  P_TEU      
          ,ROUND(AVG(P_BOX    ))  P_BOX    
          ,ROUND(AVG(P_D2     ))  P_D2     
          ,ROUND(AVG(P_D4     ))  P_D4     
          ,ROUND(AVG(P_D5     ))  P_D5     
          ,ROUND(AVG(P_D7     ))  P_D7     
          ,ROUND(AVG(P_R2     ))  P_R2     
          ,ROUND(AVG(P_R5     ))  P_R5     
          ,ROUND(AVG(P_R9     ))  P_R9     
          ,ROUND(AVG(P_O2     ))  P_O2     
          ,ROUND(AVG(P_O4     ))  P_O4     
          ,ROUND(AVG(P_O5     ))  P_O5     
          ,ROUND(AVG(P_S2     ))  P_S2     
          ,ROUND(AVG(P_S4     ))  P_S4     
          ,ROUND(AVG(P_F2     ))  P_F2     
          ,ROUND(AVG(P_F4     ))  P_F4     
          ,ROUND(AVG(P_F5     ))  P_F5     
          ,ROUND(AVG(P_A2     ))  P_A2     
          ,ROUND(AVG(P_A4     ))  P_A4     
          ,ROUND(AVG(P_A5     ))  P_A5  
          ,ROUND(AVG(P_WGT    ))  P_WGT    
          ,ROUND(AVG(M_TEU    ))  M_TEU    
          ,ROUND(AVG(M_BOX    ))  M_BOX    
          ,ROUND(AVG(M_D2     ))  M_D2     
          ,ROUND(AVG(M_D4     ))  M_D4     
          ,ROUND(AVG(M_D5     ))  M_D5     
          ,ROUND(AVG(M_D7     ))  M_D7     
          ,ROUND(AVG(M_R2     ))  M_R2     
          ,ROUND(AVG(M_R5     ))  M_R5     
          ,ROUND(AVG(M_R9     ))  M_R9     
          ,ROUND(AVG(M_O2     ))  M_O2     
          ,ROUND(AVG(M_O4     ))  M_O4     
          ,ROUND(AVG(M_O5     ))  M_O5     
          ,ROUND(AVG(M_S2     ))  M_S2     
          ,ROUND(AVG(M_S4     ))  M_S4     
          ,ROUND(AVG(M_F2     ))  M_F2     
          ,ROUND(AVG(M_F4     ))  M_F4     
          ,ROUND(AVG(M_F5     ))  M_F5     
          ,ROUND(AVG(M_A2     ))  M_A2     
          ,ROUND(AVG(M_A4     ))  M_A4     
          ,ROUND(AVG(M_A5     ))  M_A5     
          ,ROUND(AVG(M_WGT    ))  M_WGT   

          ,ROUND(AVG(DF_TEU_A ))  DF_TEU_A 
          ,ROUND(AVG(DF_BOX_A ))  DF_BOX_A 
          ,ROUND(AVG(DF_D2_A  ))  DF_D2_A  
          ,ROUND(AVG(DF_D4_A  ))  DF_D4_A  
          ,ROUND(AVG(DF_D5_A  ))  DF_D5_A  
          ,ROUND(AVG(DF_D7_A  ))  DF_D7_A  
          ,ROUND(AVG(DF_R2_A  ))  DF_R2_A  
          ,ROUND(AVG(DF_R5_A  ))  DF_R5_A  
          ,ROUND(AVG(DF_R9_A  ))  DF_R9_A  
          ,ROUND(AVG(DF_O2_A  ))  DF_O2_A  
          ,ROUND(AVG(DF_O4_A  ))  DF_O4_A  
          ,ROUND(AVG(DF_O5_A  ))  DF_O5_A  
          ,ROUND(AVG(DF_S2_A  ))  DF_S2_A  
          ,ROUND(AVG(DF_S4_A  ))  DF_S4_A  
          ,ROUND(AVG(DF_F2_A  ))  DF_F2_A  
          ,ROUND(AVG(DF_F4_A  ))  DF_F4_A  
          ,ROUND(AVG(DF_F5_A  ))  DF_F5_A  
          ,ROUND(AVG(DF_A2_A  ))  DF_A2_A  
          ,ROUND(AVG(DF_A4_A  ))  DF_A4_A  
          ,ROUND(AVG(DF_A5_A  ))  DF_A5_A  
          ,ROUND(AVG(F_L_TEU  ))  F_L_TEU  
          ,ROUND(AVG(F_L_BOX  ))  F_L_BOX  
          ,ROUND(AVG(F_L_D2   ))  F_L_D2   
          ,ROUND(AVG(F_L_D4   ))  F_L_D4   
          ,ROUND(AVG(F_L_D5   ))  F_L_D5   
          ,ROUND(AVG(F_L_D7   ))  F_L_D7   
          ,ROUND(AVG(F_L_R2   ))  F_L_R2   
          ,ROUND(AVG(F_L_R5   ))  F_L_R5   
          ,ROUND(AVG(F_L_R9   ))  F_L_R9   
          ,ROUND(AVG(F_L_O2   ))  F_L_O2   
          ,ROUND(AVG(F_L_O4   ))  F_L_O4   
          ,ROUND(AVG(F_L_O5   ))  F_L_O5   
          ,ROUND(AVG(F_L_S2   ))  F_L_S2   
          ,ROUND(AVG(F_L_S4   ))  F_L_S4   
          ,ROUND(AVG(F_L_F2   ))  F_L_F2   
          ,ROUND(AVG(F_L_F4   ))  F_L_F4   
          ,ROUND(AVG(F_L_F5   ))  F_L_F5   
          ,ROUND(AVG(F_L_A2   ))  F_L_A2   
          ,ROUND(AVG(F_L_A4   ))  F_L_A4   
          ,ROUND(AVG(F_L_A5   ))  F_L_A5   
          ,ROUND(AVG(F_L_WGT  ))  F_L_WGT  
          ,ROUND(AVG(F_D_TEU  ))  F_D_TEU
          ,ROUND(AVG(F_D_BOX  ))  F_D_BOX
          ,ROUND(AVG(F_D_D2   ))  F_D_D2 
          ,ROUND(AVG(F_D_D4   ))  F_D_D4 
          ,ROUND(AVG(F_D_D5   ))  F_D_D5 
          ,ROUND(AVG(F_D_D7   ))  F_D_D7 
          ,ROUND(AVG(F_D_R2   ))  F_D_R2 
          ,ROUND(AVG(F_D_R5   ))  F_D_R5 
          ,ROUND(AVG(F_D_R9   ))  F_D_R9 
          ,ROUND(AVG(F_D_O2   ))  F_D_O2 
          ,ROUND(AVG(F_D_O4   ))  F_D_O4 
          ,ROUND(AVG(F_D_O5   ))  F_D_O5 
          ,ROUND(AVG(F_D_S2   ))  F_D_S2 
          ,ROUND(AVG(F_D_S4   ))  F_D_S4 
          ,ROUND(AVG(F_D_F2   ))  F_D_F2 
          ,ROUND(AVG(F_D_F4   ))  F_D_F4 
          ,ROUND(AVG(F_D_F5   ))  F_D_F5 
          ,ROUND(AVG(F_D_A2   ))  F_D_A2 
          ,ROUND(AVG(F_D_A4   ))  F_D_A4 
          ,ROUND(AVG(F_D_A5   ))  F_D_A5 
          ,ROUND(AVG(F_D_WGT  ))  F_D_WGT
          ,ROUND(AVG(F_O_TEU  ))  F_O_TEU
          ,ROUND(AVG(F_O_WGT  ))  F_O_WGT
          ,ROUND(AVG(T_O_TEU  ))  T_O_TEU
          ,ROUND(AVG(T_O_WGT  ))  T_O_WGT
          ,ROUND(AVG(VOID     ))  VOID   
          ,ROUND(AVG(BSA_TEU  ))  BSA_TEU
          ,ROUND(AVG(BSA_WGT  ))  BSA_WGT

FROM DUMMY_NORMAL
GROUP BY LCC_CD
        ,ECC_CD
        ,WEEK
        ,SLAN_CD
)   

-- NORMAL LINE
SELECT LCC_CD
      ,ECC_CD
      ,YD_CD
      ,WEEK      
      ,SLAN_CD
      ,VVD
      ,VPS_ETA_DT
      ,VPS_ETD_DT
      ,FCBF_DT
      ,P_TEU 
      ,P_BOX
      ,P_D2
      ,P_D4
      ,P_D5
      ,P_D7
      ,P_R2
      ,P_R5
      ,P_R9
      ,P_O2
      ,P_O4
      ,P_O5
      ,P_S2
      ,P_S4
      ,P_F2
      ,P_F4
      ,P_F5
      ,P_A2
      ,P_A4
      ,P_A5
      ,P_WGT
      ,M_TEU
      ,M_BOX
      ,M_D2
      ,M_D4
      ,M_D5
      ,M_D7
      ,M_R2
      ,M_R5
      ,M_R9
      ,M_O2
      ,M_O4
      ,M_O5
      ,M_S2
      ,M_S4
      ,M_F2
      ,M_F4
      ,M_F5
      ,M_A2
      ,M_A4
      ,M_A5
      ,M_WGT
      ,DF_TEU_A
      ,DF_BOX_A
      ,DF_D2_A
      ,DF_D4_A
      ,DF_D5_A
      ,DF_D7_A
      ,DF_R2_A
      ,DF_R5_A
      ,DF_R9_A
      ,DF_O2_A
      ,DF_O4_A
      ,DF_O5_A
      ,DF_S2_A
      ,DF_S4_A
      ,DF_F2_A
      ,DF_F4_A
      ,DF_F5_A
      ,DF_A2_A
      ,DF_A4_A
      ,DF_A5_A
      ,F_L_TEU
      ,F_L_BOX
      ,F_L_D2
      ,F_L_D4
      ,F_L_D5
      ,F_L_D7
      ,F_L_R2
      ,F_L_R5
      ,F_L_R9
      ,F_L_O2
      ,F_L_O4
      ,F_L_O5
      ,F_L_S2
      ,F_L_S4
      ,F_L_F2
      ,F_L_F4
      ,F_L_F5
      ,F_L_A2
      ,F_L_A4
      ,F_L_A5
      ,F_L_WGT
      ,CASE WHEN F_L_TEU=0 THEN 0 
            ELSE ROUND(F_L_WGT / F_L_TEU, 1) 
       END F_A_WGT
       
      ,F_D_TEU
      ,F_D_BOX
      ,F_D_D2
      ,F_D_D4
      ,F_D_D5
      ,F_D_D7
      ,F_D_R2
      ,F_D_R5
      ,F_D_R9
      ,F_D_O2
      ,F_D_O4
      ,F_D_O5
      ,F_D_S2
      ,F_D_S4
      ,F_D_F2
      ,F_D_F4
      ,F_D_F5
      ,F_D_A2
      ,F_D_A4
      ,F_D_A5
      ,F_D_WGT
      ,VOID
      ,BSA_TEU
      ,BSA_WGT
      
       -- L/F 
       -- (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
      ,CASE WHEN BSA_TEU=0 OR F_L_TEU=0 THEN 0
            ELSE ROUND(
 
                       (((BSA_TEU-(BSA_WGT/2.2))/(1-( ( F_L_WGT / F_L_TEU )/2.2))) / BSA_TEU ) * 100    
                      ) 
       END LF_FD
       
       -- ((FULL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN BSA_TEU = 0 THEN 0
            ELSE ROUND(((F_O_TEU + VOID) / BSA_TEU) * 100)
       END LF_F_TEU
      
      
      ,CASE WHEN BSA_WGT = 0 THEN 0
            ELSE ROUND((F_O_WGT/BSA_WGT) * 100)
       END LF_F_WGT
      
      -- ((TOTAL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN BSA_TEU = 0 THEN 0
            ELSE ROUND(((T_O_TEU  + VOID) / BSA_TEU) * 100)
       END LF_T_TEU
       
      ,CASE WHEN BSA_WGT = 0 THEN 0
            ELSE ROUND(((T_O_WGT )/BSA_WGT) * 100)
       END LF_T_WGT
       
      ,TYPE1
      ,TYPE2
      ,PLN_RSN_RMK
      ,1 SORT_FLG
      ,CLPT_SEQ
FROM DUMMY_NORMAL
--ORDER BY CLPT_SET


-- VVD SUM
UNION ALL      
SELECT LCC_CD
      ,ECC_CD
      ,YD_CD
      ,WEEK
      ,'ZZZTTL' SLAN_CD
      ,'' VVD
      ,'' VPS_ETA_DT
      ,'' VPS_ETD_DT
      ,'' FCBF_DT
      ,SUM(P_TEU    )
      ,SUM(P_BOX    )
      ,SUM(P_D2     )
      ,SUM(P_D4     )
      ,SUM(P_D5     )
      ,SUM(P_D7     )
      ,SUM(P_R2     )
      ,SUM(P_R5     )
      ,SUM(P_R9     )
      ,SUM(P_O2     )
      ,SUM(P_O4     )
      ,SUM(P_O5     )
      ,SUM(P_S2     )
      ,SUM(P_S4     )
      ,SUM(P_F2     )
      ,SUM(P_F4     )
      ,SUM(P_F5     )
      ,SUM(P_A2     )
      ,SUM(P_A4     )
      ,SUM(P_A5     )
      ,SUM(P_WGT    )
      ,SUM(M_TEU    )
      ,SUM(M_BOX    )
      ,SUM(M_D2     )
      ,SUM(M_D4     )
      ,SUM(M_D5     )
      ,SUM(M_D7     )
      ,SUM(M_R2     )
      ,SUM(M_R5     )
      ,SUM(M_R9     )
      ,SUM(M_O2     )
      ,SUM(M_O4     )
      ,SUM(M_O5     )
      ,SUM(M_S2     )
      ,SUM(M_S4     )
      ,SUM(M_F2     )
      ,SUM(M_F4     )
      ,SUM(M_F5     )
      ,SUM(M_A2     )
      ,SUM(M_A4     )
      ,SUM(M_A5     )
      ,SUM(M_WGT    )
      ,SUM(DF_TEU_A )
      ,SUM(DF_BOX_A )
      ,SUM(DF_D2_A  )
      ,SUM(DF_D4_A  )
      ,SUM(DF_D5_A  )
      ,SUM(DF_D7_A  )
      ,SUM(DF_R2_A  )
      ,SUM(DF_R5_A  )
      ,SUM(DF_R9_A  )
      ,SUM(DF_O2_A  )
      ,SUM(DF_O4_A  )
      ,SUM(DF_O5_A  )
      ,SUM(DF_S2_A  )
      ,SUM(DF_S4_A  )
      ,SUM(DF_F2_A  )
      ,SUM(DF_F4_A  )
      ,SUM(DF_F5_A  )
      ,SUM(DF_A2_A  )
      ,SUM(DF_A4_A  )
      ,SUM(DF_A5_A  )
      ,SUM(F_L_TEU  )
      ,SUM(F_L_BOX  )
      ,SUM(F_L_D2   )
      ,SUM(F_L_D4   )
      ,SUM(F_L_D5   )
      ,SUM(F_L_D7   )
      ,SUM(F_L_R2   )
      ,SUM(F_L_R5   )
      ,SUM(F_L_R9   )
      ,SUM(F_L_O2   )
      ,SUM(F_L_O4   )
      ,SUM(F_L_O5   )
      ,SUM(F_L_S2   )
      ,SUM(F_L_S4   )
      ,SUM(F_L_F2   )
      ,SUM(F_L_F4   )
      ,SUM(F_L_F5   )
      ,SUM(F_L_A2   )
      ,SUM(F_L_A4   )
      ,SUM(F_L_A5   )
      ,SUM(F_L_WGT  )
      ,CASE WHEN SUM(F_L_TEU)=0 THEN 0 
            ELSE ROUND(SUM(F_L_WGT) / SUM(F_L_TEU),1) 
       END F_A_WGT
      ,SUM(F_D_TEU  )
      ,SUM(F_D_BOX  )
      ,SUM(F_D_D2   )
      ,SUM(F_D_D4   )
      ,SUM(F_D_D5   )
      ,SUM(F_D_D7   )
      ,SUM(F_D_R2   )
      ,SUM(F_D_R5   )
      ,SUM(F_D_R9   )
      ,SUM(F_D_O2   )
      ,SUM(F_D_O4   )
      ,SUM(F_D_O5   )
      ,SUM(F_D_S2   )
      ,SUM(F_D_S4   )
      ,SUM(F_D_F2   )
      ,SUM(F_D_F4   )
      ,SUM(F_D_F5   )
      ,SUM(F_D_A2   )
      ,SUM(F_D_A4   )
      ,SUM(F_D_A5   )
      ,SUM(F_D_WGT  )
      ,SUM(VOID     )
      ,SUM(BSA_TEU  )
      ,SUM(BSA_WGT  )

       -- L/F 
       -- (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
      ,CASE WHEN SUM(BSA_TEU)=0 OR SUM(F_L_TEU)=0 THEN 0
            ELSE ROUND(
                       (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100    
                      ) 
       END LF_FD
       
       -- ((FULL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(F_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_F_TEU
      
      
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND((SUM(F_O_WGT)/SUM(BSA_WGT)) * 100)
       END LF_F_WGT
      
      -- ((TOTAL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_T_TEU
       
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_WGT) ) / SUM(BSA_WGT)) * 100)
       END LF_T_WGT
       
      ,'' TYPE1
      ,'' TYPE2
      ,'' PLN_RSN_RMK
      ,2 SORT_FLG
      ,100 CLPT_SEQ
FROM DUMMY_NORMAL
GROUP BY LCC_CD
      ,ECC_CD
      ,YD_CD
      ,WEEK

-- AVERAGE : LCC, ECC, WEEK, SLAN_CD 의 AVG 를 LCC, ECC, SLAN_CD 으로 AVG
UNION ALL      
SELECT LCC_CD
      ,ECC_CD
      ,'XXXXXXX' YD_CD
      ,'AVG PFMC' WEEK
      ,SLAN_CD
      ,'' VVD
      ,'' VPS_ETA_DT
      ,'' VPS_ETD_DT
      ,'' FCBF_DT
      ,ROUND(AVG(P_TEU    ))
      ,ROUND(AVG(P_BOX    ))
      ,ROUND(AVG(P_D2     ))
      ,ROUND(AVG(P_D4     ))
      ,ROUND(AVG(P_D5     ))
      ,ROUND(AVG(P_D7     ))
      ,ROUND(AVG(P_R2     ))
      ,ROUND(AVG(P_R5     ))
      ,ROUND(AVG(P_R9     ))
      ,ROUND(AVG(P_O2     ))
      ,ROUND(AVG(P_O4     ))
      ,ROUND(AVG(P_O5     ))
      ,ROUND(AVG(P_S2     ))
      ,ROUND(AVG(P_S4     ))
      ,ROUND(AVG(P_F2     ))
      ,ROUND(AVG(P_F4     ))
      ,ROUND(AVG(P_F5     ))
      ,ROUND(AVG(P_A2     ))
      ,ROUND(AVG(P_A4     ))
      ,ROUND(AVG(P_A5     ))
      ,ROUND(AVG(P_WGT    ))
      ,ROUND(AVG(M_TEU    ))
      ,ROUND(AVG(M_BOX    ))
      ,ROUND(AVG(M_D2     ))
      ,ROUND(AVG(M_D4     ))
      ,ROUND(AVG(M_D5     ))
      ,ROUND(AVG(M_D7     ))
      ,ROUND(AVG(M_R2     ))
      ,ROUND(AVG(M_R5     ))
      ,ROUND(AVG(M_R9     ))
      ,ROUND(AVG(M_O2     ))
      ,ROUND(AVG(M_O4     ))
      ,ROUND(AVG(M_O5     ))
      ,ROUND(AVG(M_S2     ))
      ,ROUND(AVG(M_S4     ))
      ,ROUND(AVG(M_F2     ))
      ,ROUND(AVG(M_F4     ))
      ,ROUND(AVG(M_F5     ))
      ,ROUND(AVG(M_A2     ))
      ,ROUND(AVG(M_A4     ))
      ,ROUND(AVG(M_A5     ))
      ,ROUND(AVG(M_WGT    ))
      ,ROUND(AVG(DF_TEU_A ))
      ,ROUND(AVG(DF_BOX_A ))
      ,ROUND(AVG(DF_D2_A  ))
      ,ROUND(AVG(DF_D4_A  ))
      ,ROUND(AVG(DF_D5_A  ))
      ,ROUND(AVG(DF_D7_A  ))
      ,ROUND(AVG(DF_R2_A  ))
      ,ROUND(AVG(DF_R5_A  ))
      ,ROUND(AVG(DF_R9_A  ))
      ,ROUND(AVG(DF_O2_A  ))
      ,ROUND(AVG(DF_O4_A  ))
      ,ROUND(AVG(DF_O5_A  ))
      ,ROUND(AVG(DF_S2_A  ))
      ,ROUND(AVG(DF_S4_A  ))
      ,ROUND(AVG(DF_F2_A  ))
      ,ROUND(AVG(DF_F4_A  ))
      ,ROUND(AVG(DF_F5_A  ))
      ,ROUND(AVG(DF_A2_A  ))
      ,ROUND(AVG(DF_A4_A  ))
      ,ROUND(AVG(DF_A5_A  ))
      ,ROUND(AVG(F_L_TEU  ))
      ,ROUND(AVG(F_L_BOX  ))
      ,ROUND(AVG(F_L_D2   ))
      ,ROUND(AVG(F_L_D4   ))
      ,ROUND(AVG(F_L_D5   ))
      ,ROUND(AVG(F_L_D7   ))
      ,ROUND(AVG(F_L_R2   ))
      ,ROUND(AVG(F_L_R5   ))
      ,ROUND(AVG(F_L_R9   ))
      ,ROUND(AVG(F_L_O2   ))
      ,ROUND(AVG(F_L_O4   ))
      ,ROUND(AVG(F_L_O5   ))
      ,ROUND(AVG(F_L_S2   ))
      ,ROUND(AVG(F_L_S4   ))
      ,ROUND(AVG(F_L_F2   ))
      ,ROUND(AVG(F_L_F4   ))
      ,ROUND(AVG(F_L_F5   ))
      ,ROUND(AVG(F_L_A2   ))
      ,ROUND(AVG(F_L_A4   ))
      ,ROUND(AVG(F_L_A5   ))
      ,ROUND(AVG(F_L_WGT  ))
      ,CASE WHEN AVG(F_L_TEU)=0 THEN 0 
            ELSE ROUND(AVG(F_L_WGT) / AVG(F_L_TEU),1) 
       END F_A_WGT
      ,ROUND(AVG(F_D_TEU  ))
      ,ROUND(AVG(F_D_BOX  ))
      ,ROUND(AVG(F_D_D2   ))
      ,ROUND(AVG(F_D_D4   ))
      ,ROUND(AVG(F_D_D5   ))
      ,ROUND(AVG(F_D_D7   ))
      ,ROUND(AVG(F_D_R2   ))
      ,ROUND(AVG(F_D_R5   ))
      ,ROUND(AVG(F_D_R9   ))
      ,ROUND(AVG(F_D_O2   ))
      ,ROUND(AVG(F_D_O4   ))
      ,ROUND(AVG(F_D_O5   ))
      ,ROUND(AVG(F_D_S2   ))
      ,ROUND(AVG(F_D_S4   ))
      ,ROUND(AVG(F_D_F2   ))
      ,ROUND(AVG(F_D_F4   ))
      ,ROUND(AVG(F_D_F5   ))
      ,ROUND(AVG(F_D_A2   ))
      ,ROUND(AVG(F_D_A4   ))
      ,ROUND(AVG(F_D_A5   ))
      ,ROUND(AVG(F_D_WGT  ))
      ,ROUND(AVG(VOID     ))
      ,ROUND(AVG(BSA_TEU  ))
      ,ROUND(AVG(BSA_WGT  ))

       -- L/F 
       -- (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
      ,CASE WHEN AVG(BSA_TEU)=0 OR AVG(F_L_TEU)=0 THEN 0
            ELSE ROUND(
                       
                       (((AVG(BSA_TEU)-(AVG(BSA_WGT)/2.2))/(1-( ( AVG(F_L_WGT) / AVG(F_L_TEU) )/2.2))) / AVG(BSA_TEU) ) * 100   
                      ) 
       END LF_FD
       
       -- ((FULL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN AVG(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((AVG(F_O_TEU) + AVG(VOID)) / AVG(BSA_TEU)) * 100)
       END LF_F_TEU
      
      
      ,CASE WHEN AVG(BSA_WGT) = 0 THEN 0
            ELSE ROUND((AVG(F_O_WGT)/AVG(BSA_WGT)) * 100)
       END LF_F_WGT
      
      -- ((TOTAL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN AVG(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((AVG(T_O_TEU) + AVG(VOID)) / AVG(BSA_TEU)) * 100)
       END LF_T_TEU
       
      ,CASE WHEN AVG(BSA_WGT) = 0 THEN 0
            ELSE ROUND(((AVG(T_O_WGT) ) / AVG(BSA_WGT)) * 100)
       END LF_T_WGT
       
      ,'' TYPE1
      ,'' TYPE2
      ,'' PLN_RSN_RMK
      ,3 SORT_FLG
      ,0 CLPT_SEQ
FROM DUMMY_AVG
GROUP BY LCC_CD
      ,ECC_CD
      --,YD_CD
      ,SLAN_CD


-- SUB TRADE, LANE 의 SUM - AVG      
UNION ALL     
SELECT LCC_CD
      ,ECC_CD
      ,'XXXXXXX' YD_CD
      ,'AVG PFMC' WEEK
      ,'ZZZTTL' SLAN_CD
      ,'' VVD
      ,'' VPS_ETA_DT
      ,'' VPS_ETD_DT
      ,'' FCBF_DT
      ,SUM(P_TEU    )  P_TEU      
      ,SUM(P_BOX    )  P_BOX    
      ,SUM(P_D2     )  P_D2     
      ,SUM(P_D4     )  P_D4     
      ,SUM(P_D5     )  P_D5     
      ,SUM(P_D7     )  P_D7     
      ,SUM(P_R2     )  P_R2     
      ,SUM(P_R5     )  P_R5     
      ,SUM(P_R9     )  P_R9     
      ,SUM(P_O2     )  P_O2     
      ,SUM(P_O4     )  P_O4     
      ,SUM(P_O5     )  P_O5     
      ,SUM(P_S2     )  P_S2     
      ,SUM(P_S4     )  P_S4     
      ,SUM(P_F2     )  P_F2     
      ,SUM(P_F4     )  P_F4     
      ,SUM(P_F5     )  P_F5     
      ,SUM(P_A2     )  P_A2     
      ,SUM(P_A4     )  P_A4     
      ,SUM(P_A5     )  P_A5   
      ,SUM(P_WGT    )  P_WGT    
      ,SUM(M_TEU    )  M_TEU    
      ,SUM(M_BOX    )  M_BOX    
      ,SUM(M_D2     )  M_D2     
      ,SUM(M_D4     )  M_D4     
      ,SUM(M_D5     )  M_D5     
      ,SUM(M_D7     )  M_D7     
      ,SUM(M_R2     )  M_R2     
      ,SUM(M_R5     )  M_R5     
      ,SUM(M_R9     )  M_R9     
      ,SUM(M_O2     )  M_O2     
      ,SUM(M_O4     )  M_O4     
      ,SUM(M_O5     )  M_O5     
      ,SUM(M_S2     )  M_S2     
      ,SUM(M_S4     )  M_S4     
      ,SUM(M_F2     )  M_F2     
      ,SUM(M_F4     )  M_F4     
      ,SUM(M_F5     )  M_F5     
      ,SUM(M_A2     )  M_A2     
      ,SUM(M_A4     )  M_A4     
      ,SUM(M_A5     )  M_A5   
      ,SUM(M_WGT    )  M_WGT    
      ,SUM(DF_TEU_A )  DF_TEU_A 
      ,SUM(DF_BOX_A )  DF_BOX_A 
      ,SUM(DF_D2_A  )  DF_D2_A  
      ,SUM(DF_D4_A  )  DF_D4_A  
      ,SUM(DF_D5_A  )  DF_D5_A  
      ,SUM(DF_D7_A  )  DF_D7_A  
      ,SUM(DF_R2_A  )  DF_R2_A  
      ,SUM(DF_R5_A  )  DF_R5_A  
      ,SUM(DF_R9_A  )  DF_R9_A  
      ,SUM(DF_O2_A  )  DF_O2_A  
      ,SUM(DF_O4_A  )  DF_O4_A  
      ,SUM(DF_O5_A  )  DF_O5_A  
      ,SUM(DF_S2_A  )  DF_S2_A  
      ,SUM(DF_S4_A  )  DF_S4_A  
      ,SUM(DF_F2_A  )  DF_F2_A  
      ,SUM(DF_F4_A  )  DF_F4_A  
      ,SUM(DF_F5_A  )  DF_F5_A  
      ,SUM(DF_A2_A  )  DF_A2_A  
      ,SUM(DF_A4_A  )  DF_A4_A  
      ,SUM(DF_A5_A  )  DF_A5_A  
      ,SUM(F_L_TEU  )  F_L_TEU  
      ,SUM(F_L_BOX  )  F_L_BOX  
      ,SUM(F_L_D2   )  F_L_D2   
      ,SUM(F_L_D4   )  F_L_D4   
      ,SUM(F_L_D5   )  F_L_D5   
      ,SUM(F_L_D7   )  F_L_D7   
      ,SUM(F_L_R2   )  F_L_R2   
      ,SUM(F_L_R5   )  F_L_R5   
      ,SUM(F_L_R9   )  F_L_R9   
      ,SUM(F_L_O2   )  F_L_O2   
      ,SUM(F_L_O4   )  F_L_O4   
      ,SUM(F_L_O5   )  F_L_O5   
      ,SUM(F_L_S2   )  F_L_S2   
      ,SUM(F_L_S4   )  F_L_S4   
      ,SUM(F_L_F2   )  F_L_F2   
      ,SUM(F_L_F4   )  F_L_F4   
      ,SUM(F_L_F5   )  F_L_F5   
      ,SUM(F_L_A2   )  F_L_A2   
      ,SUM(F_L_A4   )  F_L_A4   
      ,SUM(F_L_A5   )  F_L_A5   
      ,SUM(F_L_WGT  )  F_L_WGT  
      ,CASE WHEN SUM(F_L_TEU)=0 THEN 0 
            ELSE ROUND(SUM(F_L_WGT) / SUM(F_L_TEU),0) 
       END F_A_WGT
      ,SUM(F_D_TEU  )  F_D_TEU
      ,SUM(F_D_BOX  )  F_D_BOX
      ,SUM(F_D_D2   )  F_D_D2 
      ,SUM(F_D_D4   )  F_D_D4 
      ,SUM(F_D_D5   )  F_D_D5 
      ,SUM(F_D_D7   )  F_D_D7 
      ,SUM(F_D_R2   )  F_D_R2 
      ,SUM(F_D_R5   )  F_D_R5 
      ,SUM(F_D_R9   )  F_D_R9 
      ,SUM(F_D_O2   )  F_D_O2 
      ,SUM(F_D_O4   )  F_D_O4 
      ,SUM(F_D_O5   )  F_D_O5 
      ,SUM(F_D_S2   )  F_D_S2 
      ,SUM(F_D_S4   )  F_D_S4 
      ,SUM(F_D_F2   )  F_D_F2 
      ,SUM(F_D_F4   )  F_D_F4 
      ,SUM(F_D_F5   )  F_D_F5 
      ,SUM(F_D_A2   )  F_D_A2 
      ,SUM(F_D_A4   )  F_D_A4 
      ,SUM(F_D_A5   )  F_D_A5 
      ,SUM(F_D_WGT  )  F_D_WGT
      ,SUM(VOID     )  VOID   
      ,SUM(BSA_TEU  )  BSA_TEU
      ,SUM(BSA_WGT  )  BSA_WGT

       -- L/F 
       -- (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
      ,CASE WHEN SUM(BSA_TEU)=0 OR SUM(F_L_TEU)=0 THEN 0
            ELSE ROUND( 
                       (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100   
                      ) 
       END LF_FD
       
       -- ((FULL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(F_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_F_TEU
      
      
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND((SUM(F_O_WGT)/SUM(BSA_WGT)) * 100)
       END LF_F_WGT
      
      -- ((TOTAL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_T_TEU
       
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_WGT) ) / SUM(BSA_WGT)) * 100)
       END LF_T_WGT
       
      ,'' TYPE1
      ,'' TYPE2
      ,'' PLN_RSN_RMK
      ,4 SORT_FLG
      ,100 CLPT_SEQ
FROM
( 
    SELECT LCC_CD
          ,ECC_CD
          --,YD_CD
          ,SLAN_CD
          ,ROUND(AVG(P_TEU    ))  P_TEU      
          ,ROUND(AVG(P_BOX    ))  P_BOX    
          ,ROUND(AVG(P_D2     ))  P_D2     
          ,ROUND(AVG(P_D4     ))  P_D4     
          ,ROUND(AVG(P_D5     ))  P_D5     
          ,ROUND(AVG(P_D7     ))  P_D7     
          ,ROUND(AVG(P_R2     ))  P_R2     
          ,ROUND(AVG(P_R5     ))  P_R5     
          ,ROUND(AVG(P_R9     ))  P_R9     
          ,ROUND(AVG(P_O2     ))  P_O2     
          ,ROUND(AVG(P_O4     ))  P_O4     
          ,ROUND(AVG(P_O5     ))  P_O5     
          ,ROUND(AVG(P_S2     ))  P_S2     
          ,ROUND(AVG(P_S4     ))  P_S4     
          ,ROUND(AVG(P_F2     ))  P_F2     
          ,ROUND(AVG(P_F4     ))  P_F4     
          ,ROUND(AVG(P_F5     ))  P_F5     
          ,ROUND(AVG(P_A2     ))  P_A2     
          ,ROUND(AVG(P_A4     ))  P_A4     
          ,ROUND(AVG(P_A5     ))  P_A5   
          ,ROUND(AVG(P_WGT    ))  P_WGT    
          ,ROUND(AVG(M_TEU    ))  M_TEU    
          ,ROUND(AVG(M_BOX    ))  M_BOX    
          ,ROUND(AVG(M_D2     ))  M_D2     
          ,ROUND(AVG(M_D4     ))  M_D4     
          ,ROUND(AVG(M_D5     ))  M_D5     
          ,ROUND(AVG(M_D7     ))  M_D7     
          ,ROUND(AVG(M_R2     ))  M_R2     
          ,ROUND(AVG(M_R5     ))  M_R5     
          ,ROUND(AVG(M_R9     ))  M_R9     
          ,ROUND(AVG(M_O2     ))  M_O2     
          ,ROUND(AVG(M_O4     ))  M_O4     
          ,ROUND(AVG(M_O5     ))  M_O5     
          ,ROUND(AVG(M_S2     ))  M_S2     
          ,ROUND(AVG(M_S4     ))  M_S4     
          ,ROUND(AVG(M_F2     ))  M_F2     
          ,ROUND(AVG(M_F4     ))  M_F4     
          ,ROUND(AVG(M_F5     ))  M_F5     
          ,ROUND(AVG(M_A2     ))  M_A2     
          ,ROUND(AVG(M_A4     ))  M_A4     
          ,ROUND(AVG(M_A5     ))  M_A5     
          ,ROUND(AVG(M_WGT    ))  M_WGT   

          ,ROUND(AVG(DF_TEU_A ))  DF_TEU_A 
          ,ROUND(AVG(DF_BOX_A ))  DF_BOX_A 
          ,ROUND(AVG(DF_D2_A  ))  DF_D2_A  
          ,ROUND(AVG(DF_D4_A  ))  DF_D4_A  
          ,ROUND(AVG(DF_D5_A  ))  DF_D5_A  
          ,ROUND(AVG(DF_D7_A  ))  DF_D7_A  
          ,ROUND(AVG(DF_R2_A  ))  DF_R2_A  
          ,ROUND(AVG(DF_R5_A  ))  DF_R5_A  
          ,ROUND(AVG(DF_R9_A  ))  DF_R9_A  
          ,ROUND(AVG(DF_O2_A  ))  DF_O2_A  
          ,ROUND(AVG(DF_O4_A  ))  DF_O4_A  
          ,ROUND(AVG(DF_O5_A  ))  DF_O5_A  
          ,ROUND(AVG(DF_S2_A  ))  DF_S2_A  
          ,ROUND(AVG(DF_S4_A  ))  DF_S4_A  
          ,ROUND(AVG(DF_F2_A  ))  DF_F2_A  
          ,ROUND(AVG(DF_F4_A  ))  DF_F4_A  
          ,ROUND(AVG(DF_F5_A  ))  DF_F5_A  
          ,ROUND(AVG(DF_A2_A  ))  DF_A2_A  
          ,ROUND(AVG(DF_A4_A  ))  DF_A4_A  
          ,ROUND(AVG(DF_A5_A  ))  DF_A5_A  
          ,ROUND(AVG(F_L_TEU  ))  F_L_TEU  
          ,ROUND(AVG(F_L_BOX  ))  F_L_BOX  
          ,ROUND(AVG(F_L_D2   ))  F_L_D2   
          ,ROUND(AVG(F_L_D4   ))  F_L_D4   
          ,ROUND(AVG(F_L_D5   ))  F_L_D5   
          ,ROUND(AVG(F_L_D7   ))  F_L_D7   
          ,ROUND(AVG(F_L_R2   ))  F_L_R2   
          ,ROUND(AVG(F_L_R5   ))  F_L_R5   
          ,ROUND(AVG(F_L_R9   ))  F_L_R9   
          ,ROUND(AVG(F_L_O2   ))  F_L_O2   
          ,ROUND(AVG(F_L_O4   ))  F_L_O4   
          ,ROUND(AVG(F_L_O5   ))  F_L_O5   
          ,ROUND(AVG(F_L_S2   ))  F_L_S2   
          ,ROUND(AVG(F_L_S4   ))  F_L_S4   
          ,ROUND(AVG(F_L_F2   ))  F_L_F2   
          ,ROUND(AVG(F_L_F4   ))  F_L_F4   
          ,ROUND(AVG(F_L_F5   ))  F_L_F5   
          ,ROUND(AVG(F_L_A2   ))  F_L_A2   
          ,ROUND(AVG(F_L_A4   ))  F_L_A4   
          ,ROUND(AVG(F_L_A5   ))  F_L_A5   
          ,ROUND(AVG(F_L_WGT  ))  F_L_WGT  
          ,ROUND(AVG(F_D_TEU  ))  F_D_TEU
          ,ROUND(AVG(F_D_BOX  ))  F_D_BOX
          ,ROUND(AVG(F_D_D2   ))  F_D_D2 
          ,ROUND(AVG(F_D_D4   ))  F_D_D4 
          ,ROUND(AVG(F_D_D5   ))  F_D_D5 
          ,ROUND(AVG(F_D_D7   ))  F_D_D7 
          ,ROUND(AVG(F_D_R2   ))  F_D_R2 
          ,ROUND(AVG(F_D_R5   ))  F_D_R5 
          ,ROUND(AVG(F_D_R9   ))  F_D_R9 
          ,ROUND(AVG(F_D_O2   ))  F_D_O2 
          ,ROUND(AVG(F_D_O4   ))  F_D_O4 
          ,ROUND(AVG(F_D_O5   ))  F_D_O5 
          ,ROUND(AVG(F_D_S2   ))  F_D_S2 
          ,ROUND(AVG(F_D_S4   ))  F_D_S4 
          ,ROUND(AVG(F_D_F2   ))  F_D_F2 
          ,ROUND(AVG(F_D_F4   ))  F_D_F4 
          ,ROUND(AVG(F_D_F5   ))  F_D_F5 
          ,ROUND(AVG(F_D_A2   ))  F_D_A2 
          ,ROUND(AVG(F_D_A4   ))  F_D_A4 
          ,ROUND(AVG(F_D_A5   ))  F_D_A5 
          ,ROUND(AVG(F_D_WGT  ))  F_D_WGT
          ,ROUND(AVG(F_O_TEU  ))  F_O_TEU
          ,ROUND(AVG(F_O_WGT  ))  F_O_WGT
          ,ROUND(AVG(T_O_TEU  ))  T_O_TEU
          ,ROUND(AVG(T_O_WGT  ))  T_O_WGT
          ,ROUND(AVG(VOID     ))  VOID   
          ,ROUND(AVG(BSA_TEU  ))  BSA_TEU
          ,ROUND(AVG(BSA_WGT  ))  BSA_WGT

    FROM DUMMY_AVG
    GROUP BY LCC_CD
            ,ECC_CD
          --,YD_CD
            ,SLAN_CD
)   
GROUP BY LCC_CD
      ,ECC_CD
      --,YD_CD

    
-- GRAND SUM (YARD)  
UNION ALL      
SELECT 'ZZZTTL' LCC_CD
      ,'' ECC_CD
      ,'' YD_CD
      ,'' WEEK
      ,SLAN_CD
      ,'' VVD
      ,'' VPS_ETA_DT
      ,'' VPS_ETD_DT
      ,'' FCBF_DT
      ,SUM(P_TEU    )
      ,SUM(P_BOX    )
      ,SUM(P_D2     )
      ,SUM(P_D4     )
      ,SUM(P_D5     )
      ,SUM(P_D7     )
      ,SUM(P_R2     )
      ,SUM(P_R5     )
      ,SUM(P_R9     )
      ,SUM(P_O2     )
      ,SUM(P_O4     )
      ,SUM(P_O5     )
      ,SUM(P_S2     )
      ,SUM(P_S4     )
      ,SUM(P_F2     )
      ,SUM(P_F4     )
      ,SUM(P_F5     )
      ,SUM(P_A2     )
      ,SUM(P_A4     )
      ,SUM(P_A5     )
      ,SUM(P_WGT    )
      ,SUM(M_TEU    )
      ,SUM(M_BOX    )
      ,SUM(M_D2     )
      ,SUM(M_D4     )
      ,SUM(M_D5     )
      ,SUM(M_D7     )
      ,SUM(M_R2     )
      ,SUM(M_R5     )
      ,SUM(M_R9     )
      ,SUM(M_O2     )
      ,SUM(M_O4     )
      ,SUM(M_O5     )
      ,SUM(M_S2     )
      ,SUM(M_S4     )
      ,SUM(M_F2     )
      ,SUM(M_F4     )
      ,SUM(M_F5     )
      ,SUM(M_A2     )
      ,SUM(M_A4     )
      ,SUM(M_A5     )
      ,SUM(M_WGT    )
      ,SUM(DF_TEU_A )
      ,SUM(DF_BOX_A )
      ,SUM(DF_D2_A  )
      ,SUM(DF_D4_A  )
      ,SUM(DF_D5_A  )
      ,SUM(DF_D7_A  )
      ,SUM(DF_R2_A  )
      ,SUM(DF_R5_A  )
      ,SUM(DF_R9_A  )
      ,SUM(DF_O2_A  )
      ,SUM(DF_O4_A  )
      ,SUM(DF_O5_A  )
      ,SUM(DF_S2_A  )
      ,SUM(DF_S4_A  )
      ,SUM(DF_F2_A  )
      ,SUM(DF_F4_A  )
      ,SUM(DF_F5_A  )
      ,SUM(DF_A2_A  )
      ,SUM(DF_A4_A  )
      ,SUM(DF_A5_A  )
      ,SUM(F_L_TEU  )
      ,SUM(F_L_BOX  )
      ,SUM(F_L_D2   )
      ,SUM(F_L_D4   )
      ,SUM(F_L_D5   )
      ,SUM(F_L_D7   )
      ,SUM(F_L_R2   )
      ,SUM(F_L_R5   )
      ,SUM(F_L_R9   )
      ,SUM(F_L_O2   )
      ,SUM(F_L_O4   )
      ,SUM(F_L_O5   )
      ,SUM(F_L_S2   )
      ,SUM(F_L_S4   )
      ,SUM(F_L_F2   )
      ,SUM(F_L_F4   )
      ,SUM(F_L_F5   )
      ,SUM(F_L_A2   )
      ,SUM(F_L_A4   )
      ,SUM(F_L_A5   )
      ,SUM(F_L_WGT  )
      ,CASE WHEN SUM(F_L_TEU)=0 THEN 0 
            ELSE ROUND(SUM(F_L_WGT) / SUM(F_L_TEU),1) 
       END F_A_WGT
      ,SUM(F_D_TEU  )
      ,SUM(F_D_BOX  )
      ,SUM(F_D_D2   )
      ,SUM(F_D_D4   )
      ,SUM(F_D_D5   )
      ,SUM(F_D_D7   )
      ,SUM(F_D_R2   )
      ,SUM(F_D_R5   )
      ,SUM(F_D_R9   )
      ,SUM(F_D_O2   )
      ,SUM(F_D_O4   )
      ,SUM(F_D_O5   )
      ,SUM(F_D_S2   )
      ,SUM(F_D_S4   )
      ,SUM(F_D_F2   )
      ,SUM(F_D_F4   )
      ,SUM(F_D_F5   )
      ,SUM(F_D_A2   )
      ,SUM(F_D_A4   )
      ,SUM(F_D_A5   )
      ,SUM(F_D_WGT  )
      ,SUM(VOID     )
      ,SUM(BSA_TEU  )
      ,SUM(BSA_WGT  )

       -- L/F 
       -- (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
      ,CASE WHEN SUM(BSA_TEU)=0 OR SUM(F_L_TEU)=0 THEN 0
            ELSE ROUND(
                       (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
                      ) 
       END LF_FD
       
       -- ((FULL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(F_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_F_TEU
      
      
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND((SUM(F_O_WGT)/SUM(BSA_WGT)) * 100)
       END LF_F_WGT
      
      -- ((TOTAL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_T_TEU
       
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_WGT) ) / SUM(BSA_WGT)) * 100)
       END LF_T_WGT
       
      ,'' TYPE1
      ,'' TYPE2
      ,'' PLN_RSN_RMK
      ,7 SORT_FLG
      ,0 CLPT_SEQ
FROM DUMMY_NORMAL
GROUP BY SLAN_CD  

-- GRAND SUM (YARD)  
UNION ALL      
SELECT 'ZZZTTL' LCC_CD
      ,'' ECC_CD
      ,'' YD_CD
      ,'' WEEK
      ,'ZZZTTL' SLAN_CD
      ,'' VVD
      ,'' VPS_ETA_DT
      ,'' VPS_ETD_DT
      ,'' FCBF_DT
      ,SUM(P_TEU    )
      ,SUM(P_BOX    )
      ,SUM(P_D2     )
      ,SUM(P_D4     )
      ,SUM(P_D5     )
      ,SUM(P_D7     )
      ,SUM(P_R2     )
      ,SUM(P_R5     )
      ,SUM(P_R9     )
      ,SUM(P_O2     )
      ,SUM(P_O4     )
      ,SUM(P_O5     )
      ,SUM(P_S2     )
      ,SUM(P_S4     )
      ,SUM(P_F2     )
      ,SUM(P_F4     )
      ,SUM(P_F5     )
      ,SUM(P_A2     )
      ,SUM(P_A4     )
      ,SUM(P_A5     )
      ,SUM(P_WGT    )
      ,SUM(M_TEU    )
      ,SUM(M_BOX    )
      ,SUM(M_D2     )
      ,SUM(M_D4     )
      ,SUM(M_D5     )
      ,SUM(M_D7     )
      ,SUM(M_R2     )
      ,SUM(M_R5     )
      ,SUM(M_R9     )
      ,SUM(M_O2     )
      ,SUM(M_O4     )
      ,SUM(M_O5     )
      ,SUM(M_S2     )
      ,SUM(M_S4     )
      ,SUM(M_F2     )
      ,SUM(M_F4     )
      ,SUM(M_F5     )
      ,SUM(M_A2     )
      ,SUM(M_A4     )
      ,SUM(M_A5     )
      ,SUM(M_WGT    )
      ,SUM(DF_TEU_A )
      ,SUM(DF_BOX_A )
      ,SUM(DF_D2_A  )
      ,SUM(DF_D4_A  )
      ,SUM(DF_D5_A  )
      ,SUM(DF_D7_A  )
      ,SUM(DF_R2_A  )
      ,SUM(DF_R5_A  )
      ,SUM(DF_R9_A  )
      ,SUM(DF_O2_A  )
      ,SUM(DF_O4_A  )
      ,SUM(DF_O5_A  )
      ,SUM(DF_S2_A  )
      ,SUM(DF_S4_A  )
      ,SUM(DF_F2_A  )
      ,SUM(DF_F4_A  )
      ,SUM(DF_F5_A  )
      ,SUM(DF_A2_A  )
      ,SUM(DF_A4_A  )
      ,SUM(DF_A5_A  )
      ,SUM(F_L_TEU  )
      ,SUM(F_L_BOX  )
      ,SUM(F_L_D2   )
      ,SUM(F_L_D4   )
      ,SUM(F_L_D5   )
      ,SUM(F_L_D7   )
      ,SUM(F_L_R2   )
      ,SUM(F_L_R5   )
      ,SUM(F_L_R9   )
      ,SUM(F_L_O2   )
      ,SUM(F_L_O4   )
      ,SUM(F_L_O5   )
      ,SUM(F_L_S2   )
      ,SUM(F_L_S4   )
      ,SUM(F_L_F2   )
      ,SUM(F_L_F4   )
      ,SUM(F_L_F5   )
      ,SUM(F_L_A2   )
      ,SUM(F_L_A4   )
      ,SUM(F_L_A5   )
      ,SUM(F_L_WGT  )
      ,CASE WHEN SUM(F_L_TEU)=0 THEN 0 
            ELSE ROUND(SUM(F_L_WGT) / SUM(F_L_TEU),1) 
       END F_A_WGT
      ,SUM(F_D_TEU  )
      ,SUM(F_D_BOX  )
      ,SUM(F_D_D2   )
      ,SUM(F_D_D4   )
      ,SUM(F_D_D5   )
      ,SUM(F_D_D7   )
      ,SUM(F_D_R2   )
      ,SUM(F_D_R5   )
      ,SUM(F_D_R9   )
      ,SUM(F_D_O2   )
      ,SUM(F_D_O4   )
      ,SUM(F_D_O5   )
      ,SUM(F_D_S2   )
      ,SUM(F_D_S4   )
      ,SUM(F_D_F2   )
      ,SUM(F_D_F4   )
      ,SUM(F_D_F5   )
      ,SUM(F_D_A2   )
      ,SUM(F_D_A4   )
      ,SUM(F_D_A5   )
      ,SUM(F_D_WGT  )
      ,SUM(VOID     )
      ,SUM(BSA_TEU  )
      ,SUM(BSA_WGT  )

       -- L/F 
       -- (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100  
      ,CASE WHEN SUM(BSA_TEU)=0 OR SUM(F_L_TEU)=0 THEN 0
            ELSE ROUND(
                       (((SUM(BSA_TEU)-(SUM(BSA_WGT)/2.2))/(1-( ( SUM(F_L_WGT) / SUM(F_L_TEU) )/2.2))) / SUM(BSA_TEU) ) * 100   
                      ) 
       END LF_FD
       
       -- ((FULL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(F_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100)
       END LF_F_TEU
      
      
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND((SUM(F_O_WGT)/SUM(BSA_WGT)) * 100) 
       END LF_F_WGT
      
      -- ((TOTAL ONBOARD TEU + VOID TEU) / BSA TEU) *100
      ,CASE WHEN SUM(BSA_TEU) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_TEU) + SUM(VOID)) / SUM(BSA_TEU)) * 100) 
       END LF_T_TEU
       
      ,CASE WHEN SUM(BSA_WGT) = 0 THEN 0
            ELSE ROUND(((SUM(T_O_WGT) ) / SUM(BSA_WGT)) * 100) 
       END LF_T_WGT
       
      ,'' TYPE1
      ,'' TYPE2
      ,'' PLN_RSN_RMK 
      ,8 SORT_FLG
      ,100 CLPT_SEQ
FROM DUMMY_NORMAL   


ORDER BY LCC_CD
        ,ECC_CD
        ,YD_CD
        ,WEEK
        ,SLAN_CD
        ,VVD
        ,CLPT_SEQ			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="fm_wk" type="12" value="" out="N"/>
				<param name="to_wk" type="12" value="" out="N"/>
				<param name="eta_fm_dt" type="12" value="" out="N"/>
				<param name="eta_to_dt" type="12" value="" out="N"/>
				<param name="rcc_cd" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
