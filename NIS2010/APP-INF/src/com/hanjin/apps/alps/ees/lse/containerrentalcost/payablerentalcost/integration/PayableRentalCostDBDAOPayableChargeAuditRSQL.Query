<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PayableRentalCostDBDAOPayableChargeAuditRSQL">
			<desc><![CDATA[Payable Charge Audti 데이터 조회]]></desc>
			<sql><![CDATA[
SELECT   A.CHG_SEQ
       , A.CNTR_NO
       , A.CNTR_TPSZ_CD
       , B.INV_NO
       , B.AGMT_CTY_CD || LPAD(B.AGMT_SEQ, 6, '0') AS AGMT_NO
       , C.LSE_CTRT_NO
       , A.LSE_PAY_CHG_TP_CD 
       , TO_CHAR(A.ONH_DT, 'YYYYMMDD') AS ONH_DT
       , A.ONH_LOC_CD
       , TO_CHAR(A.OFFH_DT, 'YYYYMMDD') AS OFFH_DT
       , A.OFFH_LOC_CD
       , A.COST_DYS
       , A.CHG_FREE_DYS
       , A.BIL_DYS
       , A.PD_RT_AMT
       , A.TTL_COST_AMT
       , A.CR_AMT
       , A.CR_NO
       , DECODE(A.CNTR_AUD_STS_CD, 'A', TO_CHAR(A.DSCR_ONH_DT, 'YYYYMMDD'), TO_CHAR(D.ONH_DT, 'YYYYMMDD'))   AS DSCR_ONH_DT
       , DECODE(A.CNTR_AUD_STS_CD, 'A', A.DSCR_ONH_LOC_CD, D.ONH_LOC_CD)                AS DSCR_ONH_LOC_CD
       , DECODE(A.CNTR_AUD_STS_CD, 'A', TO_CHAR(A.DSCR_OFFH_DT, 'YYYYMMDD'), TO_CHAR(D.OFFH_DT, 'YYYYMMDD')) AS DSCR_OFFH_DT
       , DECODE(A.CNTR_AUD_STS_CD, 'A', A.DSCR_OFFH_LOC_CD, D.OFFH_LOC_CD)              AS DSCR_OFFH_LOC_CD
       , DECODE(A.CNTR_AUD_STS_CD, 'A', A.DSCR_RT_AMT, D.PD_RT_AMT)                     AS DSCR_RT_AMT
       , DECODE(A.CNTR_AUD_STS_CD, 'A', A.DSCR_COST_AMT, D.TTL_COST_AMT)                AS DSCR_COST_AMT
       , A.AGMT_CTY_CD
       , A.AGMT_SEQ
       , A.DTL_SEQ
       , B.CHG_COST_YRMON
       , CASE WHEN A.CNTR_AUD_STS_CD = 'A' THEN A.CNTR_AUD_STS_CD
              WHEN D.CNTR_NO IS NULL THEN 'H'
              ELSE
                   CASE WHEN     A.TTL_COST_AMT = D.TTL_COST_AMT
                             AND A.PD_RT_AMT = D.PD_RT_AMT
                             AND A.ONH_DT = ( CASE WHEN TO_CHAR(A.ONH_DT+A.CHG_FREE_DYS, 'YYYYMM') = B.CHG_COST_YRMON THEN D.ONH_DT ELSE A.ONH_DT END )
                             AND NVL(A.OFFH_DT, TO_DATE('22001231', 'YYYYMMDD')) = NVL(D.OFFH_DT, TO_DATE('22001231', 'YYYYMMDD'))
                             THEN 'C'
                             ELSE 'D'
                   END
         END AS CNTR_AUD_STS_CD
       , CASE WHEN A.CNTR_AUD_STS_CD = 'A' THEN A.PAY_CHG_STS_CD
              WHEN D.CNTR_NO IS NULL THEN 'H'
              ELSE
                   CASE WHEN     A.TTL_COST_AMT = D.TTL_COST_AMT
                             AND A.PD_RT_AMT = D.PD_RT_AMT
                             AND A.ONH_DT = ( CASE WHEN TO_CHAR(A.ONH_DT+A.CHG_FREE_DYS, 'YYYYMM') = B.CHG_COST_YRMON THEN D.ONH_DT ELSE A.ONH_DT END )
                             AND NVL(A.OFFH_DT, TO_DATE('22001231', 'YYYYMMDD')) = NVL(D.OFFH_DT, TO_DATE('22001231', 'YYYYMMDD'))
                             THEN 'C'
                             ELSE 'D'
                   END
         END AS PAY_CHG_STS_CD
FROM     LSE_PAY_RNTL_CHG_CO D
       , LSE_AGREEMENT C
       , LSE_PAY_RNTL_CHG_DTL A
       , LSE_PAY_RNTL_CHG B
WHERE    1 = 1
AND      D.LSE_PAY_CHG_TP_CD (+) = A.LSE_PAY_CHG_TP_CD
AND      D.CNTR_NO           (+) = A.CNTR_NO
AND      D.CNTR_NO           (+) = A.CNTR_NO
AND      D.AGMT_SEQ          (+) = A.AGMT_SEQ
AND      D.AGMT_CTY_CD       (+) = A.AGMT_CTY_CD
AND      D.CO_COST_YRMON     (+) = @[co_cost_yrmon]
AND      A.AGMT_SEQ    = B.AGMT_SEQ
AND      A.AGMT_CTY_CD = B.AGMT_CTY_CD
AND      A.CHG_SEQ     = B.CHG_SEQ
AND      C.AGMT_SEQ    = B.AGMT_SEQ
AND      C.AGMT_CTY_CD = B.AGMT_CTY_CD
AND      B.CHG_SEQ IN ( 
#foreach($key IN ${chg_seq})
#if($velocityCount < $chg_seq.size())
         $key,
#else
         $key
#end
#end
                    ) 
AND      B.AGMT_SEQ IN (
#foreach($key IN ${agmt_seq})
#if($velocityCount < $agmt_seq.size())
         $key,
#else
         $key
#end
#end
                     )
AND      B.AGMT_CTY_CD = 'HHO'
AND      B.CHG_COST_YRMON = @[co_cost_yrmon]
UNION ALL
SELECT   /*+ USE_NL( A B C ) */
         NULL AS CHG_SEQ
       , A.CNTR_NO
       , C.CNTR_TPSZ_CD
       , A.INV_NO
       , A.AGMT_CTY_CD || LPAD(A.AGMT_SEQ, 6, '0') AS AGMT_NO
       , A.LSE_CTRT_NO
       , A.LSE_PAY_CHG_TP_CD
       , NULL AS ONH_DT
       , NULL AS ONH_LOC_CD
       , NULL AS OFFH_DT
       , NULL AS OFFH_LOC_CD
       , NULL AS COST_DYS
       , NULL AS CHG_FREE_DYS
       , NULL AS BIL_DYS
       , NULL AS PD_RT_AMT
       , NULL AS TTL_COST_AMT
       , NULL AS CR_AMT
       , NULL AS CR_NO
       , TO_CHAR(A.ONH_DT,'YYYYMMDD') AS ONH_DT
       , A.ONH_LOC_CD
       , TO_CHAR(A.OFFH_DT,'YYYYMMDD') AS OFFH_DT
       , A.OFFH_LOC_CD
       , A.PD_RT_AMT
       , A.TTL_COST_AMT
       , A.AGMT_CTY_CD
       , A.AGMT_SEQ
       , NULL AS DTL_SEQ
       , A.CO_COST_YRMON AS CHG_COST_YRMON
       , 'L' AS CNTR_AUD_STS_CD
       , 'L' AS PAY_CHG_STS_CD
FROM     (
           SELECT   AGMT_CTY_CD
                  , AGMT_SEQ
                  , CNTR_NO
                  , LSE_PAY_CHG_TP_CD
           FROM     LSE_PAY_RNTL_CHG_CO
           WHERE    1 = 1
           AND      CO_COST_YRMON = @[co_cost_yrmon]
           AND      AGMT_SEQ IN
                    (
#foreach($key IN ${agmt_seq})
    #if($velocityCount < $agmt_seq.size())
         $key,
    #else
         $key
    #end
#end
                    )
           AND      AGMT_CTY_CD = 'HHO'
           MINUS  
           SELECT   AGMT_CTY_CD
                  , AGMT_SEQ
                  , CNTR_NO
                  , LSE_PAY_CHG_TP_CD
           FROM     LSE_PAY_RNTL_CHG_DTL
           WHERE    1 = 1
           AND      CNTR_AUD_STS_CD = 'H'
           AND      CHG_SEQ IN
                    ( 
#foreach($key IN ${chg_seq})
    #if($velocityCount < $chg_seq.size())
         $key,
    #else
         $key
    #end
#end
                    )
           AND      AGMT_SEQ IN
                    (
#foreach($key IN ${agmt_seq})
    #if($velocityCount < $agmt_seq.size())
         $key,
    #else
         $key
    #end
#end
                    )
           AND      AGMT_CTY_CD = 'HHO'
         ) B
       , LSE_PAY_RNTL_CHG_CO A
       , MST_CONTAINER       C
WHERE    1 = 1
AND      A.CNTR_NO = C.CNTR_NO(+)
AND      A.AGMT_CTY_CD = B.AGMT_CTY_CD
AND      A.AGMT_SEQ = B.AGMT_SEQ
AND      CO_COST_YRMON = @[co_cost_yrmon]
AND      A.CNTR_NO = B.CNTR_NO
AND      A.LSE_PAY_CHG_TP_CD = B.LSE_PAY_CHG_TP_CD			]]></sql>
			<params>
				<param name="co_cost_yrmon" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
