<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EQMatchBackNLoadFactorMgtDBDAOEQMatchBackNLoadFactorMgtDBLoadFactorByTradeLaneVvdQTYVORSQL">
			<desc><![CDATA[EQMatchBackNLoadFactorMgtDB LoadFactorByTradeLaneVvdQTYVO]]></desc>
			<sql><![CDATA[
#if (${gubun} == '1')
SELECT	'BAY' dataSource,														/* dataSource */
		COUNT(DECODE(FE, 'F', DECODE(SUBSTR(SZTP,2,1), '2', ID))) full20Qty,	/* full20Qty */
		COUNT(DECODE(FE, 'F', DECODE(SUBSTR(SZTP,2,1), '4', ID))) full40Qty,	/* full40Qty */
		COUNT(DECODE(FE, 'F', DECODE(SUBSTR(SZTP,2,1), '5', ID))) fullHcQty,	/* fullHcQty */
		COUNT(DECODE(FE, 'F', DECODE(SUBSTR(SZTP,2,1), '7', ID))) full45Qty,	/* full45Qty */
		COUNT(DECODE(FE, 'E', DECODE(SUBSTR(SZTP,2,1), '2', ID))) mty20Qty,		/* mty20Qty  */
		COUNT(DECODE(FE, 'E', DECODE(SUBSTR(SZTP,2,1), '4', ID))) mty40Qty,		/* mty40Qty  */
		COUNT(DECODE(FE, 'E', DECODE(SUBSTR(SZTP,2,1), '5', ID))) mtyHcQty,		/* mtyHcQty  */
		COUNT(DECODE(FE, 'E', DECODE(SUBSTR(SZTP,2,1), '7', ID))) mty45Qty,		/* mty45Qty  */
		SUM(NVL(TO_NUMBER(TRIM(WEIGHT)), 0))/10	weightTotal
FROM    BAY_PLAN
WHERE   VSL_CD		=	SUBSTR(@[vvd],1,4)
AND     VOY_NO		=	SUBSTR(@[vvd],5,4)
AND		DIR_CD      =	SUBSTR(@[vvd],9,1)
AND		PORT_CD		=	@[port]
AND		CALL_IND	=	@[callInd]
AND     OPR_CD		=	@[company]
GROUP BY OPR_CD
#elseif (${gubun} == '3')
		SELECT  
				'BKG' dataSource,																						/* dataSource */
				COUNT(DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '2', CNTR_TPSZ_CD))) full20Qty,		/* full20Qty */
				COUNT(DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '4', CNTR_TPSZ_CD))) full40Qty,		/* full40Qty */
				COUNT(DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '5', CNTR_TPSZ_CD))) fullHcQty,		/* fullHcQty */
				COUNT(DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '7', CNTR_TPSZ_CD))) full45Qty,		/* full45Qty */
				COUNT(DECODE(BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '2', CNTR_TPSZ_CD))) mty20Qty,		/* mty20Qty  */
				COUNT(DECODE(BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '4', CNTR_TPSZ_CD))) mty40Qty,		/* mty40Qty  */
				COUNT(DECODE(BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '5', CNTR_TPSZ_CD))) mtyHcQty,		/* mtyHcQty  */
				COUNT(DECODE(BKG_CGO_TP_CD, 'P', DECODE(SUBSTR(CNTR_TPSZ_CD,2,1), '7', CNTR_TPSZ_CD))) mty45Qty,		/* mty45Qty  */
				COUNT(DECODE(AWK_CGO_FLG, 'Y', CNTR_NO)) deadSlot	
		FROM	(
					SELECT 	/*+ INDEX(BV, XFKBKG_VVD_VSL_SKD) INDEX(BC, XPKBKG_CNTR) INDEX(BK, XPKBOOKING) : 2010 Index 재설정할것  */
							BK.BKG_CGO_TP_CD,	
							BC.CNTR_TPSZ_CD,	
							BC.CNTR_NO, 
							MAX(BC.AWK_CGO_FLG)		AWK_CGO_FLG,	
							1						TEMP
					FROM   	BKG_BOOKING			BK,		BKG_CONTAINER		BC,		BKG_VVD		BV, 
							VSK_VSL_PORT_SKD	SL,		VSK_VSL_PORT_SKD	SD
					WHERE  	BK.BKG_NO			= BC.BKG_NO
				--	AND    	BK.BKG_NO_SPLIT		= BC.BKG_NO_SPLIT
					AND    	BK.BKG_NO			= BV.BKG_NO
				--	AND    	BK.BKG_NO_SPLIT		= BV.BKG_NO_SPLIT
					AND    	BV.VSL_CD 			= SUBSTR(@[vvd],1,4)
					AND    	BV.SKD_VOY_NO		= SUBSTR(@[vvd],5,4)
					AND    	BV.SKD_DIR_CD		= SUBSTR(@[vvd],9,1)
					AND    	SL.VSL_CD 			= BV.VSL_CD
					AND    	SL.SKD_VOY_NO		= BV.SKD_VOY_NO
					AND    	SL.SKD_DIR_CD		= BV.SKD_DIR_CD
					AND    	SL.VPS_PORT_CD		= BV.POL_CD
					AND    	SL.CLPT_SEQ			<= @[callSeq]
					AND    	SD.VSL_CD			= BV.VSL_CD
					AND    	SD.SKD_VOY_NO		= BV.SKD_VOY_NO
					AND    	SD.SKD_DIR_CD		= BV.SKD_DIR_CD
					AND    	SD.VPS_PORT_CD		= DECODE(BV.POD_CD, 'XXXXX', BV.POL_CD, BV.POD_CD)
					AND    	SD.CLPT_SEQ			> DECODE(BV.POD_CD, 'XXXXX', SD.CLPT_SEQ-1, @[callSeq])
					GROUP BY 
							BK.BKG_CGO_TP_CD, 
							BC.CNTR_TPSZ_CD, 
							BC.CNTR_NO
				)
		GROUP BY TEMP
#end			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="port" type="12" value="" out="N"/>
				<param name="callInd" type="12" value="" out="N"/>
				<param name="company" type="12" value="" out="N"/>
				<param name="callSeq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
