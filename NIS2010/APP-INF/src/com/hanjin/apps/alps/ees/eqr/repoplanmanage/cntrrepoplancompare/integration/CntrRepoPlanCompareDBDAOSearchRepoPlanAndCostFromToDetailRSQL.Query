<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrRepoPlanCompareDBDAOSearchRepoPlanAndCostFromToDetailRSQL">
			<desc><![CDATA[mty bkg + s/o 의 plan 대비 실행의 from-to 비용 비교분석 조회]]></desc>
			<sql><![CDATA[
SELECT 
	A.PLN_YRWK                                        
    ,B.INTG_CD_VAL_CTNT	## TRSP_MOD_CD                           
	##	   ,DECODE(TRSP_MOD_CD, 'O', '  ', FM_ECC_CD) FM_ECC_CD	
	##	   ,DECODE(TRSP_MOD_CD, 'F', '  ', TO_ECC_CD) TO_ECC_CD	
	,A.FM_ECC_CD										  
	,A.TO_ECC_CD									      
	,A.DIRECTION                                       
    
    #foreach(${key} in ${tpszArr}) 
    	#if($velocityCount == 1)
	        ,NVL(SUM(DECODE(A.FLAG , 'PLAN', A.QTY_${key} )), 0) 
    	#else      
			+NVL(SUM(DECODE(A.FLAG , 'PLAN', A.QTY_${key} )), 0)
		#end
    #end
     PLA_TOTAL_QTY                       									      

    #foreach(${key} in ${tpszArr}) 
    	#if($velocityCount == 1)
			,NVL(SUM(DECODE(A.FLAG , 'PLAN', A.AMT_${key} )), 0) 
    	#else      
			+NVL(SUM(DECODE(A.FLAG , 'PLAN', A.AMT_${key} )), 0)
		#end
    #end
     PLA_TOTAL_AMT                      									      

    #foreach(${key} in ${tpszArr}) 
    	#if($velocityCount == 1)
			,NVL(SUM(DECODE(A.FLAG , 'EXE',  A.QTY_${key} )), 0) 
    	#else      
			+NVL(SUM(DECODE(A.FLAG , 'EXE',  A.QTY_${key} )), 0)
		#end
    #end
     EXE_TOTAL_QTY                      									      

    #foreach(${key} in ${tpszArr}) 
    	#if($velocityCount == 1)
			,NVL(SUM(DECODE(A.FLAG , 'EXE',  A.AMT_${key} )), 0) 
    	#else
			+NVL(SUM(DECODE(A.FLAG , 'EXE',  A.AMT_${key} )), 0)
		#end
    #end
     EXE_TOTAL_AMT                      									      

    #foreach(${key} in ${tpszArr}) 
    	#if($velocityCount == 1)
			,(NVL(SUM(DECODE(A.FLAG , 'PLAN', A.QTY_${key} )), 0)-NVL(SUM(DECODE(A.FLAG , 'EXE', A.QTY_${key} )), 0)) 
    	#else      
			+(NVL(SUM(DECODE(A.FLAG , 'PLAN', A.QTY_${key} )), 0)-NVL(SUM(DECODE(A.FLAG , 'EXE', A.QTY_${key} )), 0))
		#end
    #end
     GAP_TOTAL_QTY                      									      

    #foreach(${key} in ${tpszArr}) 
    	#if($velocityCount == 1)
			,(NVL(SUM(DECODE(A.FLAG , 'PLAN', A.AMT_${key} )), 0)-NVL(SUM(DECODE(A.FLAG , 'EXE', A.AMT_${key} )), 0)) 
    	#else      
			+(NVL(SUM(DECODE(A.FLAG , 'PLAN', A.AMT_${key} )), 0)-NVL(SUM(DECODE(A.FLAG , 'EXE', A.AMT_${key} )), 0))
		#end
    #end
     GAP_TOTAL_AMT                      									      

    #foreach(${key} in ${tpszArr}) 
		,NVL(SUM(DECODE(A.FLAG , 'PLAN', A.QTY_${key} )), 0) PLA_QTY_${key}  
		,NVL(SUM(DECODE(A.FLAG , 'PLAN', A.AMT_${key} )), 0) PLA_AMT_${key}  
		,NVL(SUM(DECODE(A.FLAG , 'EXE',  A.QTY_${key} )), 0) EXE_QTY_${key}  
		,NVL(SUM(DECODE(A.FLAG , 'EXE',  A.AMT_${key} )), 0) EXE_AMT_${key}  
        ,NVL(SUM(DECODE(A.FLAG , 'PLAN', A.QTY_${key} )), 0)-NVL(SUM(DECODE(A.FLAG , 'EXE', A.QTY_${key} )), 0) GAP_QTY_${key} 
		,NVL(SUM(DECODE(A.FLAG , 'PLAN', A.AMT_${key} )), 0)-NVL(SUM(DECODE(A.FLAG , 'EXE', A.AMT_${key} )), 0) GAP_AMT_${key} 
    #end

	,B.INTG_CD_VAL_DP_SEQ                     							

	FROM  
	#if(${fmtoat} == '1')
    	## FM ECC TRANS
    	#if(${fmByEcc} == 'E' || ${fmByEcc} == '')
    	     #set($transFmEcc = "ECC_CD")
    	#elseif(${fmByEcc} == 'R')
    	    #set($transFmEcc = "RCC_CD")
    	#elseif(${fmByEcc} == 'L')
    	    #set($transFmEcc = "LCC_CD")
    	#elseif(${fmByEcc} == 'C') 
    	    #set($transFmEcc = "CNT_CD")
    	#end
        ## TO ECC TRANS
    	#if(${toByEcc} == 'E' || ${toByEcc} == '')
    	    #set($transToEcc = "ECC_CD")
    	#elseif(${toByEcc} == 'R') 
    	    #set($transToEcc = "RCC_CD")
    	#elseif(${toByEcc} == 'L') 				  
    	    #set($transToEcc = "LCC_CD")
    	#elseif(${toByEcc} == 'C') 
    	    #set($transToEcc = "CNT_CD")
    	#end
    #else 
    	## FM ECC TRANS
    	#if(${atByEcc} == 'E' || ${atByEcc} == '')
    	    #set($transFmEcc = "ECC_CD")
    	    #set($transToEcc = "ECC_CD")
    	#elseif(${atByEcc} == 'R') 
    	    #set($transFmEcc = "RCC_CD")
    	    #set($transToEcc = "RCC_CD")
    	#elseif(${atByEcc} == 'L') 
    	    #set($transFmEcc = "LCC_CD")
    	    #set($transToEcc = "LCC_CD")
    	#elseif(${atByEcc} == 'C') 
    	    #set($transFmEcc = "CNT_CD")
    	    #set($transToEcc = "CNT_CD")
    	#end        	
    #end                                                 
    	(                                                      
        	## VESSEL PLAN DATA ##########################-    
        	SELECT 
				PLN_YRWK                                    
              	,TRSP_MOD_CD                                 
		       	,(
					SELECT 
						${transFmEcc}
				 	FROM 
						EQR_ECC_MST 
					WHERE 
						FM_ECC_CD = ECC_CD
				) FM_ECC_CD     
		       	,(
					SELECT 
						${transToEcc}
					FROM 
						EQR_ECC_MST 
					WHERE 
						TO_ECC_CD = ECC_CD
				) TO_ECC_CD     
              	,DIRECTION                              		
    
    			#foreach(${key} in ${tpszArr}) 
                	,SUM(DECODE(CNTR_TPSZ_CD , '${key}', QTY )) QTY_${key}   
        		## CSR NO : R200805266894
        		## cost 집계 로직에서 qty=0인 cost는 집계에서 제외합니다.
        		## ,SUM(DECODE(CNTR_TPSZ_CD , '${key}', AMT )) AMT_${key}   
               		,SUM(DECODE(CNTR_TPSZ_CD , '${key}', DECODE(QTY, 0, 0, AMT) )) AMT_${key}   
    			#end           
           
              	,'PLAN' FLAG                                 
        	FROM                                               
        		(                                                  
            		SELECT  
						A.PLN_YRWK                                   
    	            	,TRSP_MOD_CD                                              
    	            	,FM_ECC_CD                               
    	            	,TO_ECC_CD                                
    	            	,Q.CNTR_TPSZ_CD                           
    	            	,Q.CNTR_QTY  QTY                          
    	            	,CASE WHEN A.PLN_YRWK =(SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(FM_ETD_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)                           
     	             		THEN 
								'FM'                              
    	             		ELSE 
								'TO'                              
    	             	END DIRECTION                          
    	            	,CASE WHEN A.PLN_YRWK=(SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(FM_ETD_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)
    	             		THEN 
								Q.LODG_PORT_COST_AMT                
    	             		ELSE 
								Q.DCHG_PORT_COST_AMT                
    	             	END AMT                                
    	     		FROM 
						EQR_VSL_LODG_DCHG_PLN A
						, EQR_VSL_LODG_DCHG_PLN_QTY Q                    
    	     		WHERE 
    	     		    A.REPO_PLN_ID = Q.REPO_PLN_ID
    	     		    AND A.PLN_YRWK  = Q.PLN_YRWK
    	     		    AND A.PLN_SEQ   = Q.PLN_SEQ
						AND A.REPO_PLN_ID = @[repo_pln_Id]                         
    
    					#if(${fmtoat} == '1')   ## FROM TO
	    	     			AND   A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
    	
        					#if(${fmStatus} != '')
        		     			AND   FM_ECC_CD IN ( ${fromLocStr} )
        					#end
    						#if(${toStatus} != '')
    			     			AND   TO_ECC_CD IN ( ${toLocStr} )   
    						#end
    	
    					#else                    ## AT
    						#if(${atStatus} != '') 
    			     			AND   
									(												      	
    			            			(
											A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
											AND FM_ECC_CD IN ( ${fromLocStr} ) 
										)   
    									OR												 
     		               				(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_CHAR(TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
											)  BETWEEN @[basicWeek] AND @[nextWeek] 
											AND TO_ECC_CD IN ( ${fromLocStr} )
										)   
    		              			)												
    		
    						#else 
    		        			AND   
									(														      	
    									(
											A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]
										)  
    									OR														 
    		               				(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_CHAR(TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
											) BETWEEN @[basicWeek] AND @[nextWeek]
										)   
    		              			)														 
    		
    						#end
    					#end        

    					#if(${tpsz} != ''  && ${tpsztype} != '')
    	        			AND   Q.CNTR_TPSZ_CD IN ( ${tpszStr} ) 			                
    					#end
    					#if(${itemname} != '')
    	        			AND   TRSP_MOD_CD IN ( ${itemnameStr} )  		                
    					#end
    					#if(${lane} != '')
    	        			AND   VSL_LANE_CD IN ( ${laneStr} )
    					#end
    					#if(${vvd} != '')
    	        			AND   VSL_CD||SKD_VOY_NO||SKD_DIR_CD IN ( ${vvdStr} )
    					#end
    
    	 		)        	                                        
			GROUP BY 
				PLN_YRWK                                  
             	,TRSP_MOD_CD                                  
             	,FM_ECC_CD                                    
             	,TO_ECC_CD                                    
             	,DIRECTION                                    
    
        ## VESSEL EXECUTE DATA ########################-   
		UNION ALL                                          
        	SELECT 
				PLN_YRWK                                    
              	,TRSP_MOD_CD                                 
		       	,(
					SELECT 
						${transFmEcc}
					FROM 
						EQR_ECC_MST 
					WHERE 
						FM_ECC_CD = ECC_CD
				) FM_ECC_CD     
		       	,(
					SELECT 
						${transToEcc}  
					FROM 
						EQR_ECC_MST 
					WHERE 
						TO_ECC_CD = ECC_CD
				) TO_ECC_CD     
              	,DIRECTION                              		

    			#foreach(${key} in ${tpszArr})         	
    				#if(${key} == 'O2') 
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', AMT )), 0)) AMT_${key}    
    				#elseif(${key} == 'O4') 	
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', AMT )), 0)) AMT_${key}    
    				#elseif(${key} == 'F2') 	
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', AMT )), 0)) AMT_${key}    
    				#elseif(${key} == 'F4') 	
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', QTY )), 0) + NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', AMT )), 0) + NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', AMT )), 0)) AMT_${key}    
    				#else 
    		          	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0) QTY_${key}   
    		          	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0) AMT_${key}   
    				#end
    			#end       
    
              	,'EXE' FLAG                                  							
        	FROM                                               							

        		(                                                  							 
            		SELECT 
						A.PLN_YRWK                                							    
                  		,A.TRSP_MOD_CD                             							
                  		,(
							SELECT 
								ECC_CD 
							FROM 
								MDM_EQ_ORZ_CHT 
							WHERE 
								SCC_CD = SUBSTR(A.FM_YD_CD, 0, 5)
						) FM_ECC_CD                                   
                  		,(
							SELECT 
								ECC_CD 
							FROM 
								MDM_EQ_ORZ_CHT 
							WHERE 
								SCC_CD = SUBSTR(A.TO_YD_CD, 0, 5)
						) TO_ECC_CD                                   
                  		,A.CNTR_TPSZ_CD                            							
##              		,A.CNTR_QTY  QTY                          							
                  		,DECODE(A.SPLIT_REPO_PLN_FLG, 'N', B.CNTR_QTY, A.CNTR_QTY)  QTY  		
                  		,CASE WHEN A.REPO_MTY_BKG_FLG = 'Y' AND A.SPLIT_REPO_PLN_FLG = 'Y' 	
                   			THEN                                    							
                       			CASE WHEN (SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)=(SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)                          
                       				THEN 
										'ALL'                          							
                       				ELSE 
										'TO'                           							
                       			END                                 							
                   			ELSE                                    							
                       			CASE WHEN A.REPO_MTY_BKG_FLG = 'Y'    							
                       				THEN 
										'FM'                           							
                       			END                                 							        
                   		END DIRECTION                           							
                  		,CASE WHEN A.REPO_MTY_BKG_FLG = 'Y' AND A.SPLIT_REPO_PLN_FLG = 'Y'  	
                   			THEN                                    							
                       			CASE WHEN (SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.FM_ETD_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)=(SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT)                          
##                       THEN A.LODG_PORT_UC_AMT * A.CNTR_QTY    						
##                       ELSE A.DCHG_PORT_UC_AMT * A.CNTR_QTY    						
                       				THEN 
										A.LODG_PORT_UC_AMT * DECODE(A.SPLIT_REPO_PLN_FLG, 'N', B.CNTR_QTY, A.CNTR_QTY) 
                       				ELSE 
										A.DCHG_PORT_UC_AMT * DECODE(A.SPLIT_REPO_PLN_FLG, 'N', B.CNTR_QTY, A.CNTR_QTY) 
                       			END                                 							
                   			ELSE                                    							
                       			CASE WHEN A.REPO_MTY_BKG_FLG = 'Y'   							
##                       THEN A.LODG_PORT_UC_AMT * A.CNTR_QTY							
                       				THEN 
										A.LODG_PORT_UC_AMT * DECODE(A.SPLIT_REPO_PLN_FLG, 'N', B.CNTR_QTY, A.CNTR_QTY) 
                       			END                                 							                
                   		END AMT                                 							
            		FROM 
						(
                            SELECT  
						        A0.REPO_PLN_ID          
                                ,A0.PLN_YRWK             
                                ,A0.PLN_SEQ              
                                ,A0.REF_ID               
                                ,A0.CO_CD                
                                ,A0.TRSP_MOD_CD          
                                ,A0.VSL_LANE_CD          
                                ,A0.VSL_CD               
                                ,A0.SKD_VOY_NO           
                                ,A0.SKD_DIR_CD           
                                ,A0.FM_YD_CD             
                                ,A0.FM_ETD_DT            
                                ,A0.TO_YD_CD             
                                ,A0.TO_ETB_DT            
                                ,A0.EQ_REPO_PURP_CD      
                                ,A0.REPO_MTY_BKG_FLG     
                                ,A0.REPO_PLN_FB_RSN_CD   
                                ,A0.REPO_PLN_FB_RMK      
                                ,A0.MTY_BKG_NO           
                                ,A0.SPLIT_REPO_PLN_FLG   
                                ,A0.PAST_REPO_PLN_FLG    
                                ,A0.OLD_BKG_GRP_NO        
                                ,Q.CNTR_TPSZ_CD       
                                ,Q.CNTR_QTY           
                                ,Q.LODG_DCHG_COST_AMT 
                                ,Q.PLN_UC_AMT         
                                ,Q.LODG_PORT_UC_AMT   
                                ,Q.DCHG_PORT_UC_AMT
                            FROM
						        EQR_VSL_LODG_DCHG_EXE_PLN A0,
						        EQR_VSL_EXE_PLN_QTY Q
						    WHERE
						        A0.REPO_PLN_ID = Q.REPO_PLN_ID
                    		    AND A0.PLN_YRWK = Q.PLN_YRWK
                    		    AND A0.PLN_SEQ = Q.PLN_SEQ
                    		    AND A0.REF_ID = Q.REF_ID   
                    		    AND A0.REPO_PLN_ID IN (							
                                                        SELECT 
                                                            REPO_PLN_ID											
                                                        FROM 
                                                            EQR_EQ_REPO_PLN													
                                                        WHERE 
                                                            REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'        	## EX) REPO200801
                                                            AND   REPO_PLN_DTRB_FLG = 'Y' 							   	
                                                            AND   ROWNUM = 1												
                      	        )                         	                 

            			        AND   A0.REPO_MTY_BKG_FLG = 'Y'
                    	) A ,        
    ##	    added by shin yongchan 20080325
    ##	    T.VVD Plan Data 보완/수정 건
    ##	    CSR NO : N200803110018
                		(                                                     
                     		SELECT 	
								A.OLD_BKG_GRP_NO	                                     
                           		,A.CNTR_TPSZ_CD                            
                           		,NVL(A.CNTR_QTY, 0) - NVL(B.CNTR_QTY, 0) CNTR_QTY  ## (original - split)
                     		FROM                                             
                     			(                                                
                          ## original booking vol 집계                   
                          			SELECT 
										DISTINCT A.OLD_BKG_GRP_NO                
                                		,Q.CNTR_TPSZ_CD                       
                                		,SUM(Q.CNTR_QTY) CNTR_QTY             
                          			FROM 
										EQR_VSL_LODG_DCHG_EXE_PLN A, 
										EQR_VSL_EXE_PLN_QTY Q,           
                              			(                                       
                                  			SELECT 
												DISTINCT OLD_BKG_GRP_NO          
                                  			FROM 
												EQR_VSL_LODG_DCHG_EXE_PLN              
            					   			WHERE 
												REPO_PLN_ID IN (							
                                                          			SELECT 
																		REPO_PLN_ID											
                                                          			FROM 
																		EQR_EQ_REPO_PLN												
                                                          			WHERE 
																		REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'  	## EX) REPO200801
                                                          				AND REPO_PLN_DTRB_FLG = 'Y' 							
                                   			           					AND ROWNUM = 1		    									
                                           		)                                           
                                  				AND   REPO_MTY_BKG_FLG = 'Y'        
                                  				## AND   TRIM(MTY_BKG_NO_SPLIT) IS NULL
                                  				AND SPLIT_REPO_PLN_FLG = 'N'
                              			) B                                     
                          			WHERE 
										A.REPO_PLN_ID = Q.REPO_PLN_ID
                            		    AND A.PLN_YRWK = Q.PLN_YRWK
                            		    AND A.PLN_SEQ = Q.PLN_SEQ
                            		    AND A.REF_ID = Q.REF_ID
                						AND A.OLD_BKG_GRP_NO = B.OLD_BKG_GRP_NO           
                          			GROUP BY 
										A.OLD_BKG_GRP_NO                       
                                  		,Q.CNTR_TPSZ_CD                     
                     			) A,                                             
                     			(                                                
                         ## split booking vol 집계                        
                         			SELECT 
										DISTINCT A.OLD_BKG_GRP_NO                 
                               			,Q.CNTR_TPSZ_CD                        
                               			,SUM(Q.CNTR_QTY) CNTR_QTY                 
                         			FROM 
										EQR_VSL_LODG_DCHG_EXE_PLN A,   
										EQR_VSL_EXE_PLN_QTY Q,               
                              			(                                       
                                  			SELECT 
												DISTINCT OLD_BKG_GRP_NO                  
                                  			FROM 
												EQR_VSL_LODG_DCHG_EXE_PLN                    
            					   			WHERE 
												REPO_PLN_ID IN (							
                                                          		SELECT 
																	REPO_PLN_ID											
                                                          		FROM 
																	EQR_EQ_REPO_PLN												
                                                          		WHERE 
																	REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'  	## EX) REPO200801
                                                          			AND   REPO_PLN_DTRB_FLG = 'Y' 							
                                   			           				AND   ROWNUM = 1		    									
                                          		)                                           
                                  				AND   REPO_MTY_BKG_FLG = 'Y'        
                                  				##AND   TRIM(MTY_BKG_NO_SPLIT) IS NOT NULL 
                                  				AND SPLIT_REPO_PLN_FLG = 'Y'
                              			) B                                     
                          			WHERE 
										A.REPO_PLN_ID = Q.REPO_PLN_ID
                            		    AND A.PLN_YRWK = Q.PLN_YRWK
                            		    AND A.PLN_SEQ = Q.PLN_SEQ
                            		    AND A.REF_ID = Q.REF_ID
                						AND A.OLD_BKG_GRP_NO = B.OLD_BKG_GRP_NO           
                          			GROUP BY 
										A.OLD_BKG_GRP_NO                       
                                  		,Q.CNTR_TPSZ_CD                                        
                      			) B                                             
                      		WHERE 
								A.OLD_BKG_GRP_NO = B.OLD_BKG_GRP_NO(+)            
                      			AND   A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)                              
               			) B                                                           
    ##        WHERE REPO_PLN_ID = '"+repo_pln_Id+"'           
    
    ## modified by shin yongchan - 20080118
    ## 검색 REPO 주차의 DISTRIBUTE REPO PLAN ID 를 조건으로 사용 
            		WHERE 
            		    A.OLD_BKG_GRP_NO   = B.OLD_BKG_GRP_NO(+)   	                
            			AND   A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)							                                                                                             
            			AND   A.REPO_PLN_ID IN (							
                                     				SELECT 
														REPO_PLN_ID											
                                     				FROM 
														EQR_EQ_REPO_PLN													
                                     				WHERE 
														REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'        	## EX) REPO200801
                                     AND   REPO_PLN_DTRB_FLG = 'Y' 							   	
                                     AND   ROWNUM = 1												
                      	)                         	                 

            			AND   A.REPO_MTY_BKG_FLG = 'Y'                   	

    					#if(${fmtoat} == '1')   ## FROM TO
	            			AND   A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
    	
        					#if(${fmStatus} != '')		     
								AND   SUBSTR(A.FM_YD_CD, 0, 5) IN (
																	SELECT 
																		SCC_CD 
																	FROM 
																		MDM_EQ_ORZ_CHT
																	WHERE 
																		ECC_CD IN ( ${fromLocStr} )
								)
							#end	 
    						#if(${toStatus} != '') 		     
									AND   SUBSTR(A.TO_YD_CD, 0, 5) IN (
																	SELECT 
																		SCC_CD 
																	FROM 
																		MDM_EQ_ORZ_CHT 
																	WHERE 
																		ECC_CD IN ( ${toLocStr} )
									)      
    						#end
    					#else                    ## AT
    						#if(${atStatus} != '') 
    			     			AND   
									(												      	
    			            			(
											A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
											AND SUBSTR(A.FM_YD_CD, 0, 5) IN (
																				SELECT 
																					SCC_CD 
																				FROM 
																					MDM_EQ_ORZ_CHT 
																				WHERE 
																					ECC_CD IN ( ${fromLocStr} )
											)
										)   
    									OR												 
     		               				(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
											)  BETWEEN @[basicWeek] AND @[nextWeek] 
											AND SUBSTR(A.TO_YD_CD, 0, 5) IN (
																				SELECT 
																					SCC_CD 
																				FROM 
																					MDM_EQ_ORZ_CHT 
																				WHERE 
																					ECC_CD IN ( ${fromLocStr} )
											)
										)   
    		              			)												
    		
    						#else 
    		        			AND   
									(														      	
    									(
										    A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]
										)  
    									OR														 
    		               				(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
											) BETWEEN @[basicWeek] AND @[nextWeek]
										)   
    		              			)														 
    		
    						#end
    					#end        

    					#if(${tpsz} != '' && ${tpsztype} != '')
    	        			AND   A.CNTR_TPSZ_CD IN ( ${tpszStr} ) 			                
    					#end
    					#if(${itemname} != '')
    	        			AND   A.TRSP_MOD_CD IN ( ${itemnameStr} ) 		                
    					#end
    					#if(${lane} != '')
    	        			AND   A.VSL_LANE_CD IN ( ${laneStr} ) 			
    					#end
    					#if(${vvd} != '') 
    	        			AND   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdStr} ) 
    					#end

        		)                                                   
        	GROUP BY 
				PLN_YRWK                                  
                ,TRSP_MOD_CD                               
                ,FM_ECC_CD                                 
                ,TO_ECC_CD                                 
                ,DIRECTION                                 

   	    ## INLAND PLAN DATA ##########################-    
		UNION ALL                                          
   	    	SELECT 
				A.PLN_YRWK                                    
   	          	,A.TRSP_MOD_CD                                 
   		       	,(
					SELECT 
						${transFmEcc} 
					FROM 
						EQR_ECC_MST 
					WHERE 
						FM_ECC_CD = ECC_CD
				) FM_ECC_CD     
   		       	,(
					SELECT 
						${transToEcc} 
					FROM 
						EQR_ECC_MST 
					WHERE 
						TO_ECC_CD = ECC_CD
				) TO_ECC_CD     
   	          	,'FM' DIRECTION                              
    
   				#foreach(${key} in ${tpszArr}) 
   		          	,SUM(DECODE(CNTR_TPSZ_CD , '${key}', CNTR_QTY ))        QTY_${key}   
        ## CSR NO : R200805266894
        ## cost 집계 로직에서 qty=0인 cost는 집계에서 제외합니다.
   		##          ,SUM(DECODE(CNTR_TPSZ_CD , '${key}', FM_ECC_COST_AMT )) AMT_${key}   
   		          	,SUM(DECODE(CNTR_TPSZ_CD , '${key}', DECODE(CNTR_QTY, 0, 0, FM_ECC_COST_AMT) )) AMT_${key}   
   				#end           
           
   	          	,'PLAN' FLAG                                 
   	    	FROM  
				EQR_INLND_TRSP_PLN A
				, EQR_INLND_TRSP_PLN_QTY Q                           
   		 	WHERE 
                A.REPO_PLN_ID = Q.REPO_PLN_ID
                AND A.PLN_YRWK = Q.PLN_YRWK
                AND A.PLN_SEQ = Q.PLN_SEQ
				AND A.REPO_PLN_ID = @[repo_pln_Id]                            
   
   				#if(${fmtoat} == '1')   ## FROM TO
   			 		AND   A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
    	
   					#if(${fmStatus} != '')
   				 		AND   FM_ECC_CD IN ( ${fromLocStr} )
   					#end
   					#if(${toStatus} != '')
   				 		AND   TO_ECC_CD IN ( ${toLocStr} )
   					#end
    	
   				#else                    ## AT
   					#if(${atStatus} != '') 
   				 		AND   
							(												      	
   				        		(
									A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
									AND FM_ECC_CD IN ( ${fromLocStr} )
								)   
   								OR												 
   			           			(
									TO_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
									AND TO_ECC_CD IN ( ${fromLocStr} )
								)   
   			          		)												
    		
   					#else 
   			    		AND   
							(														      	
   								(
									A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]
								)  
   								OR														 
   			           			(
									TO_YRWK BETWEEN @[basicWeek] AND @[nextWeek]
								)   
   			          		)														 
    		
   					#end
   				#end        
   	
   	## lane, vvd 를 통해서 plan 데이터 검색범위 축소
   				#if(${lane} != ''  || ${vvd} != '') 
   					AND	 
						(
							A.PLN_YRWK
							, TRSP_MOD_CD
							, FM_ECC_CD	
							, TO_ECC_CD
						)	
						IN       		 
   		   	 			(																 
   		    	     		SELECT 
								DISTINCT PLN_YRWK									 
   			               		,TRSP_MOD_CD               							 
   			               		,(
									SELECT 
										ECC_CD 
									FROM 
										MDM_EQ_ORZ_CHT 
									WHERE 
										SCC_CD = SUBSTR(FM_YD_CD, 0, 5)
								) FM_ECC_CD  
   			               		,(
									SELECT 
										ECC_CD 
									FROM 
										MDM_EQ_ORZ_CHT 
									WHERE 
										SCC_CD = SUBSTR(TO_YD_CD, 0, 5)
								) TO_ECC_CD              
   			         		FROM 
								EQR_INLND_TRSP_EXE_PLN								 
       	            		WHERE 
								REPO_PLN_ID = @[repo_pln_Id]              		              
   			         			AND   PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]   
       							#if(${lane} != '')
       			         			AND   VSL_LANE_CD IN ( ${laneStr} ) 			         
       							#end
       							#if(${vvd} != '') 
       			         			AND   VSL_CD||SKD_VOY_NO||SKD_DIR_CD IN ( ${vvdStr} ) 
       							#end
   	    	     		)	       														 
   				#end

   				#if(${tpsz} != '' && ${tpsztype} != '')
   		    		AND   Q.CNTR_TPSZ_CD IN ( ${tpszStr} )
   				#end
   				#if(${itemname} != '')					
   		    		AND   TRSP_MOD_CD IN ( ${itemnameStr} )
   				#end
    
   	    	GROUP BY 
				A.PLN_YRWK                                  
   	         	,TRSP_MOD_CD                                  
   	         	,FM_ECC_CD                                    
   	         	,TO_ECC_CD                                    
    
        ## INLAND EXECUTE DATA ########################-   
		UNION ALL                                          
        	SELECT 
				PLN_YRWK                                    
              	,TRSP_MOD_CD                                 
		       	,(
					SELECT 
						${transFmEcc}
					FROM 
						EQR_ECC_MST 
					WHERE 
						FM_ECC_CD = ECC_CD
				) FM_ECC_CD     
		       	,(
					SELECT 
						${transToEcc}
					FROM 
						EQR_ECC_MST 
					WHERE 
						TO_ECC_CD = ECC_CD
				) TO_ECC_CD     
              	,DIRECTION                              		
   
    			#foreach(${key} in ${tpszArr})         	
    				#if(${key} == 'O2') 
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', AMT )), 0)) AMT_${key}    
    				#elseif(${key} == 'O4') 	
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', QTY )), 0)) QTY_${key}    
    		         	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', AMT )), 0)) AMT_${key}    
    				#elseif(${key} == 'F2') 	
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', AMT )), 0)) AMT_${key}    
    				#elseif(${key} == 'F4') 	
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', QTY )), 0) +NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', QTY )), 0)) QTY_${key}    
    		          	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', AMT )), 0) +NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', AMT )), 0)) AMT_${key}    
    				#else 
    		          	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0) QTY_${key}   
    		          	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0) AMT_${key}   
    				#end
    			#end       
    
              	,'EXE' FLAG                                  
			FROM                                               

        		(                                                  
            		SELECT 
						PLN_YRWK                                
                  		,SO_IF_DIV_CD TRSP_MOD_CD                
                  		,(
							SELECT 
								ECC_CD 
							FROM 
								MDM_EQ_ORZ_CHT 
							WHERE 
								SCC_CD = SUBSTR(FM_YD_CD, 0, 5)
						) FM_ECC_CD   
                  		,(
							SELECT 
								ECC_CD 	
							FROM 
								MDM_EQ_ORZ_CHT 
							WHERE 
								SCC_CD = SUBSTR(TO_YD_CD, 0, 5)
						) TO_ECC_CD   
                  		,CNTR_TPSZ_CD                            
                  		,1  QTY                                  
                  		,'FM' DIRECTION                          
                  		,REPO_COST_AMT AMT      					  
            		FROM 
						EQR_REPO_EXE_SO_IF                        
    ## modiffied by shin yongchan - 20080118
    ## 검색 REPO 주차의 DISTRIBUTE REPO PLAN ID 를 조건으로 사용 
            		WHERE 
						REPO_PLN_ID IN (							
                                     	SELECT 
											REPO_PLN_ID										
                                     	FROM 
											EQR_EQ_REPO_PLN												
                                     	WHERE 
											REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'   	## EX) REPO200801
                                     		AND   REPO_PLN_DTRB_FLG = 'Y' 							
                                     		AND   ROWNUM = 1											
                      	)                                          
	
	        			AND   WO_EXE_FLG  = 'Y'                        
            			AND   SO_IF_DIV_CD IN ('W', 'R', 'T')          
    
    					#if(${fmtoat} == '1')   ## FROM TO
	            			AND   PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
    	
        					#if(${fmStatus} != '')
        		     			AND   SUBSTR(FM_YD_CD, 0, 5) IN (
																	SELECT 
																		SCC_CD 
																	FROM 
																		MDM_EQ_ORZ_CHT 
																	WHERE 
																		ECC_CD IN ( ${fromLocStr} )
								)	 
        					#end
    						#if(${toStatus} != '') 
    			     			AND   SUBSTR(TO_YD_CD, 0, 5) IN (
																	SELECT 
																		SCC_CD 
																	FROM 
																		MDM_EQ_ORZ_CHT 
																	WHERE 
																		ECC_CD IN ( ${toLocStr} )
								)      
    						#end
    	
    					#else                    ## AT
    						#if(${atStatus} != '') 
    			     			AND   
									(												      	
    			            			(
											PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
											AND SUBSTR(FM_YD_CD, 0, 5) IN (
																			SELECT 
																				SCC_CD 
																			FROM 
																				MDM_EQ_ORZ_CHT 
																			WHERE 
																				ECC_CD IN ( ${fromLocStr} )
											)
										)   
    									OR												 
     		               				(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_DT BETWEEN WK_ST_DT  AND WK_END_DT
											)  BETWEEN @[basicWeek] AND @[nextWeek] 
											AND SUBSTR(TO_YD_CD, 0, 5) IN (
																			SELECT 
																				SCC_CD 
																			FROM 
																				MDM_EQ_ORZ_CHT 
																			WHERE 
																				ECC_CD IN ( ${fromLocStr} )
											)
										)   
    		              			)												
    		
    						#else 
    		        			AND   
									(														      	
    									(
											PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
										)  
    									OR														 
    		               				(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_DT BETWEEN WK_ST_DT  AND WK_END_DT
											) BETWEEN @[basicWeek] AND @[nextWeek]
										)   
    		              			)														 
    		
    						#end
    					#end        

    					#if(${tpsz} != '' && ${tpsztype} != '')
    	        			AND   CNTR_TPSZ_CD IN ( ${tpszStr} )
    					#end
    					#if(${itemname} != '')					
    	        			AND   SO_IF_DIV_CD IN ( ${itemnameStr} ) 		                
    					#end
    					#if(${lane} != '') 						
    	        			AND   VSL_LANE_CD IN ( ${laneStr} ) 				
    					#end
    					#if(${vvd} != '') 						
    	        			AND   VSL_CD||SKD_VOY_NO||SKD_DIR_CD IN ( ${vvdStr} ) 
    					#end
   
        		)                                                   
			GROUP BY 
				PLN_YRWK                                  
                ,TRSP_MOD_CD                               
                ,FM_ECC_CD                                 
                ,TO_ECC_CD                                 
                ,DIRECTION                                 

	#if(${lane} == '' && ${vvd} == '') 
    	    ## ON-OFF HIRE DATA      ##########################-    
		UNION ALL                                          
    	    SELECT 
				PLN_YRWK                                    
    	        ,TRSP_MOD_CD                                 
			    ,DECODE(TRSP_MOD_CD, 'O', '  ', FM_ECC_CD) FM_ECC_CD	
			    ,DECODE(TRSP_MOD_CD, 'F', '  ', TO_ECC_CD) TO_ECC_CD	        
    	        ,DIRECTION                              		
    
    			#foreach(${key} in ${tpszArr}) 
        	    	,SUM(QTY_${key})   
        	     	,SUM(AMT_${key})   
    			#end           
           		,FLAG                                        
			FROM                                                         
    	    	(                                                         
    
    	        ## ON-OFF HIRE PLAN DATA ##########################-    
    	##      UNION ALL                                          
    	        	SELECT 
						PLN_YRWK                                    
    	              	,TRSP_MOD_CD                                 
				       	,(
							SELECT 
								${transFmEcc}
							FROM 
								EQR_ECC_MST 
							WHERE 
								FM_ECC_CD = ECC_CD
						) FM_ECC_CD     
				       	,(
							SELECT 
								${transToEcc}
							FROM 
								EQR_ECC_MST 
							WHERE 
								TO_ECC_CD = ECC_CD
						) TO_ECC_CD     
    		           	,DIRECTION                              		
    
    					#foreach(${key} in ${tpszArr}) 
        	          		,SUM(DECODE(CNTR_TPSZ_CD , '${key}', QTY )) QTY_${key}   
        	            	,SUM(DECODE(CNTR_TPSZ_CD , '${key}', AMT )) AMT_${key}   
    					#end           
           
    	              	,'PLAN' FLAG                                 
    	        	FROM                                               
    	        		(                                                  
    	            		SELECT  
								A.PLN_YRWK                                   
    		                	,ONF_HIR_DIV_CD TRSP_MOD_CD                               
    		                	,ECC_CD FM_ECC_CD                        
    		                	,ECC_CD TO_ECC_CD                         
    		                	,Q.CNTR_TPSZ_CD                           
    		                	,Q.CNTR_QTY  QTY                          
    		                	,CASE WHEN ONF_HIR_DIV_CD='F'                                     
    	 	                 		THEN 
										'FM'                              
    		                 		ELSE 
										'TO'                              
    		                 	END DIRECTION                          
    		                	,CASE WHEN ONF_HIR_DIV_CD='F'           
    		                 		THEN 
										FM_ECC_COST_AMT                   
    		                 		ELSE 
										TO_ECC_COST_AMT                   
    		                 	END AMT                                
    		         		FROM 
								EQR_ONF_HIR_PLN A
								, EQR_ONF_HIR_PLN_QTY Q                           
    		         		WHERE 
                                A.REPO_PLN_ID = Q.REPO_PLN_ID
                                AND A.PLN_YRWK = Q.PLN_YRWK
                                AND A.PLN_SEQ = Q.PLN_SEQ
								AND A.REPO_PLN_ID = @[repo_pln_Id]                        
    
    							#if(${fmtoat} == '1')   ## FROM TO
    			         			AND   A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
    	
    								#if(${fmStatus} != '')
    				         			AND   ECC_CD IN ( ${fromLocStr} )
    								#end
    								#if(${toStatus} != '') 
    				         			AND   ECC_CD IN ( ${toLocStr} )
    								#end
    	
    							#else                    ## AT
    								#if(${atStatus} != '') 
    				         			AND   
											(
												A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
												AND ECC_CD IN ( ${fromLocStr} )
											)          		
    								#else 
    			            			AND   A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]         		
    								#end
    							#end        

    							#if(${tpsz} != '' && ${tpsztype} != '')
									AND   Q.CNTR_TPSZ_CD IN ( ${tpszStr} )
    							#end
    							#if(${itemname} != '')					
    		            			AND   ONF_HIR_DIV_CD IN ( ${itemnameStr} )
    							#end
    
						)        	                                        
        			GROUP BY 
        				PLN_YRWK                                  
            	       	,TRSP_MOD_CD                                  
            	        ,FM_ECC_CD                                    
            	       	,TO_ECC_CD                                    
            	       	,DIRECTION                                    
    
	                ## ON-OFF EXECUTE DATA ########################-   
		        UNION ALL                                          
        			SELECT 
        				PLN_YRWK                                    
            	       	,TRSP_MOD_CD                                 
        			    ,(
        					SELECT 
        						${transFmEcc}
        					FROM 
        						EQR_ECC_MST 
        					WHERE 
        						FM_ECC_CD = ECC_CD
        				) FM_ECC_CD     
        			   	,(
        					SELECT 
        						${transToEcc} 
        					FROM 
        						EQR_ECC_MST 
        					WHERE 
        						TO_ECC_CD = ECC_CD
        				) TO_ECC_CD     
            	        ,DIRECTION                              		    
            	
                		#foreach(${key} in ${tpszArr})         	
                			#if(${key} == 'O2') 
                		     	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', QTY )), 0)) QTY_${key}    
                		        ,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', AMT )), 0)) AMT_${key}    
                			#elseif(${key} == 'O4') 	
                		        ,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', QTY )), 0)) QTY_${key}    
                		        ,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', AMT )), 0)) AMT_${key}    
                			#elseif(${key} == 'F2') 	
                		    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', QTY )), 0)) QTY_${key}    
                		    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', AMT )), 0)) AMT_${key}    
                			#elseif(${key} == 'F4') 	
                		       	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', QTY )), 0) +NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', QTY )), 0)) QTY_${key}    
                		       	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', AMT )), 0) +NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', AMT )), 0)) AMT_${key}    
                			#else 
                		       	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0) QTY_${key}   
                		      	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0) AMT_${key}   
                			#end
                		#end       
                
            	 		,'EXE' FLAG                                  
        			FROM                                               
        
            	  		(                                                  
            	  			SELECT 
        						PLN_YRWK                                    
            	                ,SO_IF_DIV_CD TRSP_MOD_CD                
            	                ,(
        							SELECT 
        								ECC_CD 
        							FROM 
        								MDM_EQ_ORZ_CHT 
        							WHERE 
        								SCC_CD = SUBSTR(FM_YD_CD, 0, 5)
        						) FM_ECC_CD                                   
            	                ,(
        							SELECT 
        								ECC_CD 
        							FROM 
        								MDM_EQ_ORZ_CHT 
        							WHERE 
        								SCC_CD = SUBSTR(TO_YD_CD, 0, 5)
        						) TO_ECC_CD                                   
            	                ,CNTR_TPSZ_CD                            
            	                ,1  QTY                                  
            	                ,CASE WHEN SO_IF_DIV_CD='F' 	    		
            	                	THEN 
        								'FM'             					                 
            	                   	ELSE 
        								'TO'            					                  
            	              	END DIRECTION         					 
            	                ,REPO_COST_AMT AMT                       
        					FROM 
        						EQR_REPO_EXE_SO_IF                        
                ## modiffied by shin yongchan - 20080118
                ## 검색 REPO 주차의 DISTRIBUTE REPO PLAN ID 를 조건으로 사용 
                            WHERE 
        						REPO_PLN_ID IN (							
                                                	SELECT 
        												REPO_PLN_ID										
                                                    FROM 
        												EQR_EQ_REPO_PLN												
                                                    WHERE 
        												REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'   	## EX) REPO200801
                                                     	AND   REPO_PLN_DTRB_FLG = 'Y' 							
                                                     	AND   ROWNUM = 1											
                              	)                                          
            	
            	            	AND   WO_EXE_FLG  = 'Y'                        
                            	AND   SO_IF_DIV_CD IN ('O', 'F')               
                
                				#if(${fmtoat} == '1')   ## FROM TO
            	                	AND PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
                	
                    				#if(${fmStatus} != '')
                    	    	    	AND   SUBSTR(FM_YD_CD, 0, 5) IN (
        																	SELECT 
        																		SCC_CD 
        																	FROM 
        																		MDM_EQ_ORZ_CHT 
        																	WHERE 
        																		ECC_CD IN ( ${fromLocStr} )
        								)	 
                    				#end
                					#if(${toStatus} != '')
                			        	AND   SUBSTR(TO_YD_CD, 0, 5) IN (
        																	SELECT 
        																		SCC_CD 
        																	FROM 
        																		MDM_EQ_ORZ_CHT 
        																	WHERE 
        																		ECC_CD IN ( ${toLocStr} )	
        								)      
                					#end
                	
                				#else                    ## AT
                					#if(${atStatus} != '') 
                			        	AND   
        									(												      	
                			                	(
        											PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]
        											AND SUBSTR(FM_YD_CD, 0, 5) IN (
        																			SELECT 
        																				SCC_CD 
        																			FROM 
        																				MDM_EQ_ORZ_CHT 
        																			WHERE 
        																				ECC_CD IN ( ${fromLocStr} )
        											)
        										)   
                				    			OR												 
                 		                   		(
        											(
        												SELECT 
        													PLN_YR||PLN_WK 
        												FROM 
        													EQR_WK_PRD 
        												WHERE 
        													TO_DT BETWEEN WK_ST_DT  AND WK_END_DT
        											)  BETWEEN @[basicWeek] AND @[nextWeek] 
        											AND SUBSTR(TO_YD_CD, 0, 5) IN (
        																			SELECT 
        																				SCC_CD 
        																			FROM 
        																				MDM_EQ_ORZ_CHT 
        																			WHERE 
        																				ECC_CD IN ( ${fromLocStr} )
        											)
        										)   
                		                  	)												
                		
                					#else 
                		            	AND   
        									(														      	
                				    			(
        											PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
        										)  
                				    			OR														 
                		                   		(
        											(
        												SELECT 
        													PLN_YR||PLN_WK 
        												FROM 
        													EQR_WK_PRD 
        												WHERE 
        													TO_DT BETWEEN WK_ST_DT  AND WK_END_DT
        											) BETWEEN @[basicWeek] AND @[nextWeek] 
        										)   
                		                  	)														 
                		
                					#end
                				#end        
         
                				#if(${tpsz} != '' && ${tpsztype} != '')
                	            	AND   CNTR_TPSZ_CD IN ( ${tpszStr} ) 			                
                				#end
                				#if(${itemname} != '')
                	            	AND   SO_IF_DIV_CD IN ( ${itemnameStr} )
                				#end
                				#if(${lane} != '')
                	            	AND   VSL_LANE_CD IN ( ${laneStr} )
                				#end
                				#if(${vvd} != '')
                	            	AND   VSL_CD||SKD_VOY_NO||SKD_DIR_CD IN ( ${vvdStr} )
                				#end
        
            	        )                                                  
        			GROUP BY 
        				PLN_YRWK                                  
        				,TRSP_MOD_CD                               
        				,FM_ECC_CD                                 
        				,TO_ECC_CD                                 
        				,DIRECTION                                 
        		)                                                  
                    
        	GROUP BY 
        		PLN_YRWK                                    
        		,TRSP_MOD_CD                                 
        		,DECODE(TRSP_MOD_CD, 'O', '  ', FM_ECC_CD)	  
        		,DECODE(TRSP_MOD_CD, 'F', '  ', TO_ECC_CD)           
        		,DIRECTION                              	                
        		,FLAG                                            	    		   	    		    	
            	
    	#if(${itemname_ecc} == 'S' || ${itemname} == '')   ## ECC INTERNAL 만 봐야 하는 경우 
        ## ECC INTERNAL PLAN DATA ##########################-    
        UNION ALL                                          
        	SELECT 
        		PLN_YRWK                                    
        		,TRSP_MOD_CD                                 
        		,(
        			SELECT 
        				${transFmEcc} 
        			FROM 
        				EQR_ECC_MST 
        			WHERE 
        				FM_ECC_CD = ECC_CD
        		) FM_ECC_CD     
        		,(
        			SELECT 
        				${transToEcc}
        			FROM 
        				EQR_ECC_MST 
        			WHERE 
        				TO_ECC_CD = ECC_CD
        		) TO_ECC_CD     
        		,'FM' DIRECTION                              	            
            		
        		#foreach(${key} in ${tpszArr})         	
        			#if(${key} == 'O2') 
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', QTY )), 0)) QTY_${key}    
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', AMT )), 0)) AMT_${key}    
        			#elseif(${key} == 'O4') 	
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', QTY )), 0)) QTY_${key}    
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', AMT )), 0)) AMT_${key}    
        			#elseif(${key} == 'F2') 	
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', QTY )), 0)) QTY_${key}    
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', AMT )), 0)) AMT_${key}    
        			#elseif(${key} == 'F4') 	
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', QTY )), 0)) QTY_${key}    
        				,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', AMT )), 0)) AMT_${key}    
        			#else 
        				,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0) QTY_${key}   
        				,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0) AMT_${key}   
        			#end
        		#end       	
                       
        		,'PLAN' FLAG                                 	
        	FROM                                               	
        		(                                                  	   
        			SELECT 
        				A.PLN_YRWK                               		   
        				,'S' TRSP_MOD_CD             				   
        				,(
        					SELECT 
        						ECC_CD 
        					FROM 
        						MDM_EQ_ORZ_CHT 
        					WHERE 
        						SCC_CD = SUBSTR(FM_YD_CD, 0, 5)
        				) FM_ECC_CD                          
        				,(
        					SELECT 
        						ECC_CD 	
        					FROM 
        						MDM_EQ_ORZ_CHT 
        					WHERE 
        						SCC_CD = SUBSTR(TO_YD_CD, 0, 5)
        				) TO_ECC_CD                          
        				,Q.CNTR_TPSZ_CD                           		   
        				,Q.CNTR_QTY  QTY                          		   
        				,'FM' DIRECTION                         		    
        				,TRSP_COST_AMT AMT                      		             
        			FROM 
        				EQR_ECC_INTER_EXE_PLN A
        				, EQR_ECC_INTER_EXE_PLN_QTY Q                    		          
        			WHERE 
                        A.REPO_PLN_ID = Q.REPO_PLN_ID
                        AND A.PLN_YRWK = Q.PLN_YRWK
                        AND A.REF_ID = Q.REF_ID
        				AND A.REPO_PLN_ID = @[repo_pln_Id]                            
        
        				#if(${fmtoat} == '1')   ## FROM TO
        					AND   A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]   
            			
                			#if(${fmStatus} != '')
                				AND   SUBSTR(FM_YD_CD, 0, 5) IN (
        															SELECT 
        																SCC_CD 
        															FROM 
        																MDM_EQ_ORZ_CHT 
        															WHERE 
        																ECC_CD IN ( ${fromLocStr} )
        						)	 
                			#end
                			#if(${toStatus} != '')
        						AND   SUBSTR(TO_YD_CD, 0, 5) IN (
        															SELECT 
        																SCC_CD 
        															FROM 
        																MDM_EQ_ORZ_CHT 
        															WHERE 
        																ECC_CD IN ( ${toLocStr} )
        						)      
                			#end
            			 
            	        	
            			#else                    ## AT
            				#if(${atStatus} != '') 
        						AND   
        							(																									      	
        								(
        									A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
        									AND SUBSTR(FM_YD_CD, 0, 5) IN (
        																	SELECT 
        																		SCC_CD 
        																	FROM 
        																		MDM_EQ_ORZ_CHT 
        																	WHERE 
        																		ECC_CD IN ( ${fromLocStr} )
        									)  
        								)  
            							OR																									 
            				           	(
        									(
        										SELECT 
        											PLN_YR||PLN_WK 
        										FROM 
        											EQR_WK_PRD 
        										WHERE 
        											TO_CHAR(TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
        									) BETWEEN @[basicWeek] AND @[nextWeek] 
        									AND SUBSTR(TO_YD_CD, 0, 5) IN (
        																	SELECT 
        																		SCC_CD 
        																	FROM 
        																		MDM_EQ_ORZ_CHT 
        																	WHERE 
        																		ECC_CD IN ( ${fromLocStr} )
        									)  
        								) 
        							)																									
            	        		
            				#else 
        						AND   
        							(														      	
            							(
        									A.PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]
        								)   
            							OR														 
            				           	(
        									(
        										SELECT 
        											PLN_YR||PLN_WK 
        										FROM 
        											EQR_WK_PRD 
        										WHERE 
        											TO_CHAR(TO_ETA_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT
        									) BETWEEN @[basicWeek] AND @[nextWeek]
        								)   
            				     	)														 
            	        		
            				#end
            			#end        	       	
            	 
            			#if(${tpsz} != '' && ${tpsztype} != '')
            				AND   Q.CNTR_TPSZ_CD IN ( ${tpszStr} )
            			#end                
                		
        		)        	                                	       			   		    
        	GROUP BY 
        		PLN_YRWK                                  
            	,TRSP_MOD_CD                                  
              	,FM_ECC_CD                                    
              	,TO_ECC_CD                                    
                
        	## ECC INTERNAL EXECUTE DATA ####################- 
        UNION ALL                                          
        	SELECT 
        		PLN_YRWK                                    
              	,TRSP_MOD_CD                                 
           		,(
					SELECT 
						${transFmEcc} 
					FROM 
						EQR_ECC_MST 
					WHERE 
						FM_ECC_CD = ECC_CD
				) FM_ECC_CD     
				,(
					SELECT 
						${transToEcc} 
					FROM 
						EQR_ECC_MST 
					WHERE 
						TO_ECC_CD = ECC_CD
				) TO_ECC_CD     
				,DIRECTION                              		         
               		
                #foreach(${key} in ${tpszArr})         	
                	#if(${key} == 'O2') 
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', QTY )), 0)) QTY_${key}    
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S2', AMT )), 0)) AMT_${key}    
                  	#elseif(${key} == 'O4') 	
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', QTY )), 0)) QTY_${key}    
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'S4', AMT )), 0)) AMT_${key}    
                 	#elseif(${key} == 'F2') 	
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', QTY )), 0)) QTY_${key}    
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A2', AMT )), 0)) AMT_${key}    
                  	#elseif(${key} == 'F4') 	
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', QTY )), 0) +NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', QTY )), 0)) QTY_${key}    
                    	,(NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0)+NVL(SUM(DECODE(CNTR_TPSZ_CD, 'A4', AMT )), 0) +NVL(SUM(DECODE(CNTR_TPSZ_CD, 'F5', AMT )), 0)) AMT_${key}    
                   	#else 
                    	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', QTY )), 0) QTY_${key}   
                    	,NVL(SUM(DECODE(CNTR_TPSZ_CD, '${key}', AMT )), 0) AMT_${key}   
               		#end
            	#end       
                    
               	,'EXE' FLAG                                  
			FROM                                               
        		(                                                  	       
               		SELECT 
						PLN_YRWK                                
						,'S' TRSP_MOD_CD                         
               		    ,(
							SELECT 
								ECC_CD 
							FROM 
								MDM_EQ_ORZ_CHT 
							WHERE 
								SCC_CD = SUBSTR(FM_YD_CD, 0, 5)
						) FM_ECC_CD   
               		    ,(
							SELECT 
								ECC_CD 
							FROM 
								MDM_EQ_ORZ_CHT 
							WHERE 
								SCC_CD = SUBSTR(TO_YD_CD, 0, 5)
						) TO_ECC_CD   
               		   	,CNTR_TPSZ_CD                                      
               		  	,1  QTY                                            
               		  	,'FM' DIRECTION                                
               		   	,REPO_COST_AMT AMT                                   
					FROM 
						EQR_REPO_EXE_SO_IF                    
                    ## modiffied by shin yongchan - 20080118
                    ## 검색 REPO 주차의 DISTRIBUTE REPO PLAN ID 를 조건으로 사용 
					WHERE 
						REPO_PLN_ID IN (							
                                      	SELECT 
											REPO_PLN_ID										
                                     	FROM 
											EQR_EQ_REPO_PLN												
                                      	WHERE 
											REPO_PLN_ID LIKE 'REPO' || @[basicWeek] || '%'   	## EX) REPO200801
                                          	AND   REPO_PLN_DTRB_FLG = 'Y' 							
                                          	AND   ROWNUM = 1											
                      	)                                          
                	
                		AND   WO_EXE_FLG  = 'Y'                        
                     	AND   SO_IF_DIV_CD = 'S'                       
                    
                    	#if(${fmtoat} == '1')   ## FROM TO
                	   		AND   PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek]          
                    	
                        	#if(${fmStatus} != '')
                       			AND   SUBSTR(FM_YD_CD, 0, 5) IN (
																SELECT 
																	SCC_CD 
																FROM 
																	MDM_EQ_ORZ_CHT 
																WHERE 
																	ECC_CD IN ( ${fromLocStr} )
								)	 
                        	#end
                    		#if(${toStatus} != '')
                   				AND   SUBSTR(TO_YD_CD, 0, 5) IN (
																SELECT 
																	SCC_CD 
																FROM 
																	MDM_EQ_ORZ_CHT 
																WHERE 
																	ECC_CD IN ( ${toLocStr} )
								)      
                    		#end
                    	
                    	#else                    ## AT
                    		#if(${atStatus} != '') 
                    			AND   
									(												      	
										(
											PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
											AND SUBSTR(FM_YD_CD, 0, 5) IN (
																			SELECT 
																				SCC_CD 
																			FROM 
																				MDM_EQ_ORZ_CHT 
																			WHERE 
																				ECC_CD IN ( ${fromLocStr} )
											)
										)   
                    				   	OR												 
                     		           	(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_DT BETWEEN WK_ST_DT  AND WK_END_DT
											)  BETWEEN @[basicWeek] AND @[nextWeek] 
											AND SUBSTR(TO_YD_CD, 0, 5) IN (
																			SELECT 
																				SCC_CD 
																			FROM 	
																				MDM_EQ_ORZ_CHT 
																			WHERE 
																				ECC_CD IN ( ${fromLocStr} )
											)
										)   
                    		      	)												
                    		
                    		#else 
                    		 	AND   
									(														      	
                    				 	(
											PLN_YRWK BETWEEN @[basicWeek] AND @[nextWeek] 
										)  
                    				   	OR														 
                    		           	(
											(
												SELECT 
													PLN_YR||PLN_WK 
												FROM 
													EQR_WK_PRD 
												WHERE 
													TO_DT BETWEEN WK_ST_DT  AND WK_END_DT
											) BETWEEN @[basicWeek] AND @[nextWeek] 
										)   
									)														 
                    		#end
                    	#end        
             
                    	#if(${tpsz} != '' && ${tpsztype} != '')
                    		AND   CNTR_TPSZ_CD IN ( ${tpszStr} )
                    	#end
                    	#if(${itemname} != '')
                    		AND   SO_IF_DIV_CD IN ( ${itemnameStr} )
                    	#end
                    	#if(${lane} != '') 
                    	 	AND   VSL_LANE_CD IN ( ${laneStr} )
                    	#end
                    	#if(${vvd} != '') 
							AND   VSL_CD||SKD_VOY_NO||SKD_DIR_CD IN ( ${vvdStr} )
                    	#end
        
				)                                                   
			GROUP BY 
				PLN_YRWK                                  
              	,TRSP_MOD_CD                               
              	,FM_ECC_CD                                 
              	,TO_ECC_CD                                 
              	,DIRECTION                                 
            		
		#end ## ECC INTERNAL 만 사용됨 
	#end
            
		) A,                                 						  
		(                                                            
			SELECT 
				INTG_CD_VAL_CTNT                              
            	,INTG_CD_VAL_DP_SEQ                            
      		FROM 
				COM_INTG_CD_DTL 	                              
			WHERE 
				INTG_CD_ID = 'CD00253'   					        
      	) B             										  
	WHERE 
		A.TRSP_MOD_CD = B.INTG_CD_VAL_CTNT                 
       	#if(${fmtoall} != '')
       		AND A.DIRECTION = @[fmtoall]   
      	#end
            
	GROUP BY 
		A.PLN_YRWK                                      
      	,B.INTG_CD_VAL_CTNT  ##TRSP_MOD_CD                 
      	,A.FM_ECC_CD                                     
      	,A.TO_ECC_CD                                     
      	,A.DIRECTION                                     
     	,B.INTG_CD_VAL_DP_SEQ                            
	ORDER BY 
		1
		, B.INTG_CD_VAL_DP_SEQ
		, 3
		, 4
		, 5			]]></sql>
			<params>
				<param name="repo_pln_Id" type="12" value="" out="N"/>
				<param name="basicWeek" type="12" value="" out="N"/>
				<param name="nextWeek" type="12" value="" out="N"/>
				<param name="fmtoall" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
