<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PayableRentalCostDBDAOPayableChargeCreationAgreementRSQL">
			<desc><![CDATA[Payable Rental Creation Master Data Search]]></desc>
			<sql><![CDATA[
SELECT CASE WHEN AA.CHG_SEQ IS NULL THEN 'N'                                               /* No Charge Creation */
            ELSE
                 CASE WHEN AA.LSE_PAY_RNTL_STS_CD IN ('A','I') THEN AA.LSE_PAY_RNTL_STS_CD /* Charge Invoice Create */
                      WHEN AA.INV_NO  IS NOT NULL AND AA.IF_RGST_NO IS NULL THEN 'C'       /* Charge Creation And Lessor Imvoice Import */
                      WHEN AA.INV_NO  IS NULL THEN 'H'                                     /* Only Hanjin Charge Creation */
                      ELSE 'N'
                 END
       END AS CHG_STS_CD
     , AA.AGMT_CTY_CD || LPAD(AA.AGMT_SEQ, 6, '0') AS AGMT_NO
     , AA.AGMT_LST_VER_SEQ
     , AA.LSTM_CD
     , AA.LSE_CTRT_NO
     , AA.REF_NO
     , TO_CHAR(AA.EFF_DT, 'YYYYMMDD') AS EFF_DT
     , TO_CHAR(AA.EXP_DT, 'YYYYMMDD') AS EXP_DT
     , CASE WHEN AA.CHG_SEQ IS NULL THEN AA.LSSR_INV_NO ELSE AA.INV_NO END INV_NO
     , AA.TTL_COST_AMT AS HJS_TTL_CHG_AMT
     --, CASE WHEN AA.LSE_PAY_RNTL_STS_CD IN ('A','I') THEN NVL(AA.LR_COST_AMT, 0) ELSE NVL(AA.LSSR_TTL_AMT, 0) END AS INV_TTL_CHG_AMT
     , CASE WHEN AA.LSE_PAY_RNTL_STS_CD IS NOT NULL THEN NVL(AA.LR_COST_AMT, 0) ELSE NVL(AA.LSSR_TTL_AMT, 0) END AS INV_TTL_CHG_AMT
     , AA.CR_TTL_AMT
     , CASE WHEN AA.LSE_PAY_RNTL_STS_CD IN ('A','I') THEN NVL(AA.PAY_RNTL_COST_AMT, 0) ELSE NVL(AA.LSSR_TTL_AMT, 0) END AS PAY_RNTL_COST_AMT
     , AA.CURR_CD
     , CASE WHEN AA.INV_NO IS NULL THEN 'N' ELSE 'Y' END AS INV_FIL_FLG
     , AA.CRE_DT
     , AA.CRE_USR_ID
     , AA.IF_RGST_NO
     , AA.AGMT_CTY_CD
     , AA.AGMT_SEQ
     , AA.CHG_SEQ
  FROM (
        SELECT A.AGMT_CTY_CD
             , A.AGMT_SEQ
             , A.CHG_COST_YRMON
             , A.AGMT_LST_VER_SEQ
             , A.LSTM_CD
             , A.VNDR_SEQ
             , A.REF_NO
             , A.LSE_CTRT_NO
             , A.EFF_DT
             , A.EXP_DT
             , A.CURR_CD
             , B.CHG_SEQ
             , B.TTL_COST_AMT
             , B.CR_TTL_AMT
             , B.LR_COST_AMT
             , B.PAY_RNTL_COST_AMT
             , B.INV_NO
             , B.IF_RGST_NO
             , B.LSE_PAY_RNTL_STS_CD
             , TO_CHAR(B.CRE_DT, 'YYYYMMDD') AS CRE_DT
             , B.CRE_USR_ID
             , C.INV_NO AS LSSR_INV_NO
             , SUM(C.TTL_COST_AMT) AS LSSR_TTL_AMT
          FROM (
                 SELECT B.AGMT_CTY_CD
                      , B.AGMT_SEQ
                      , P.COST_YRMON AS CHG_COST_YRMON
                      , B.AGMT_LST_VER_SEQ
                      , B.LSTM_CD
                      , B.VNDR_SEQ
                      , B.REF_NO
                      , B.LSE_CTRT_NO
                      , B.LST_EFF_DT AS EFF_DT
                      , B.LST_EXP_DT AS EXP_DT
                      , B.CURR_CD
                   FROM LSE_AGREEMENT B
                      , ( SELECT @[cost_yrmon] AS COST_YRMON, @[vndr_seq] AS VNDR_SEQ, @[lstm_cd] AS LSTM_CD FROM DUAL ) P
                  WHERE B.AGMT_SEQ <> 999990
#if ( ${lstm_cd} != '' )
                    AND B.LSTM_CD        = P.LSTM_CD
#else
                    AND B.LSTM_CD IN ('LT','ST','OF','MI','SI','SO')
#end
                    AND B.VNDR_SEQ = P.VNDR_SEQ
                    AND EXISTS ( SELECT 'X' 
                                   FROM MST_CNTR_STS_HIS A
                                      , MST_CNTR_STS_HIS E
                                 WHERE A.AGMT_CTY_CD = B.AGMT_CTY_CD 
                                   AND A.AGMT_SEQ    = B.AGMT_SEQ
                                   AND A.AGMT_SEQ <> 999990
                                   AND A.CNTR_STS_CD IN ('LSI','DII')
                                   AND A.CNTR_STS_EVNT_DT <= LAST_DAY(TO_DATE(P.COST_YRMON, 'RRRRMM'))+0.9999
                                   AND A.CNTR_NO      = E.CNTR_NO(+)
                                   AND A.CNTR_STS_SEQ = E.PRNR_STS_SEQ(+)
                                   AND CASE WHEN TO_CHAR(A.CNTR_STS_EVNT_DT, 'YYYYMM') = P.COST_YRMON THEN TO_DATE(P.COST_YRMON,'RRRRMM') +1
                                              ELSE NVL(E.CNTR_STS_EVNT_DT, SYSDATE)
                                         END >= TO_DATE(P.COST_YRMON,'RRRRMM')  
                                   AND ROWNUM >= 1 )
						
             )                   A
           , LSE_PAY_RNTL_CHG    B
           , LSE_PAY_RNTL_CHG_CO C
        WHERE A.AGMT_CTY_CD    = B.AGMT_CTY_CD(+)
          AND A.AGMT_SEQ       = B.AGMT_SEQ(+)
          AND A.CHG_COST_YRMON = B.CHG_COST_YRMON(+)
          AND A.AGMT_CTY_CD    = C.AGMT_CTY_CD(+)
          AND A.AGMT_SEQ       = C.AGMT_SEQ(+)
          AND A.CHG_COST_YRMON = C.CO_COST_YRMON(+)
        GROUP BY A.AGMT_CTY_CD
               , A.AGMT_SEQ
               , A.CHG_COST_YRMON
               , A.AGMT_LST_VER_SEQ
               , A.LSTM_CD
               , A.VNDR_SEQ
               , A.REF_NO
               , A.LSE_CTRT_NO
               , A.EFF_DT
               , A.EXP_DT
               , A.CURR_CD
               , B.CHG_SEQ
               , B.TTL_COST_AMT
               , B.CR_TTL_AMT
               , B.LR_COST_AMT
               , B.PAY_RNTL_COST_AMT
               , B.INV_NO
               , B.IF_RGST_NO
               , B.LSE_PAY_RNTL_STS_CD
               , TO_CHAR(B.CRE_DT, 'YYYYMMDD')
               , B.CRE_USR_ID
               , C.INV_NO
       ) AA
 ORDER BY AGMT_NO			]]></sql>
			<params>
				<param name="cost_yrmon" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="lstm_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
