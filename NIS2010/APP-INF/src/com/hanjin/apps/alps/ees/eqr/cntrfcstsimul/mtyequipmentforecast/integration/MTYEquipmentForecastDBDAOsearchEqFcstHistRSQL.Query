<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MTYEquipmentForecastDBDAOsearchEqFcstHistRSQL">
			<desc><![CDATA[Sales Projection History]]></desc>
			<sql><![CDATA[
SELECT -- HEADER
       A.LOC_CD  -- LCC/ECC/SCC 값이 조건에 의해 표현
      ,A.WEEK
      
       -- SALES PROJECTION
      ,B.TOTAL
      ,B.D2_FCAST_QTY
      ,B.D4_FCAST_QTY
      ,B.D5_FCAST_QTY
      ,B.D7_FCAST_QTY

       -- OP FCST
      ,FCST_TOTAL
      ,C.D2_FCAST_QTY FCST_D2_FCAST_QTY
      ,C.D4_FCAST_QTY FCST_D4_FCAST_QTY
      ,C.D5_FCAST_QTY FCST_D5_FCAST_QTY
      ,C.D7_FCAST_QTY FCST_D7_FCAST_QTY
      
       -- DIFF(OP FCAST/SALES PROJ)
       -- DIFF(OP F'cast/Sales F'cast) = (Sales F'cast(Converted) - OP Forecast) / Sales F'cast(Converted)
      ,DECODE(NVL(B.TOTAL,0), 0, 0, ROUND(((NVL(B.TOTAL,0) - NVL(FCST_TOTAL,0)) / NVL(B.TOTAL,0)) * 100, 2)) DF1_TOTAL
      ,DECODE(NVL(B.D2_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D2_FCAST_QTY,0) - NVL(C.D2_FCAST_QTY,0)) / NVL(B.D2_FCAST_QTY,0)) * 100, 2)) DF1_D2
      ,DECODE(NVL(B.D4_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D4_FCAST_QTY,0) - NVL(C.D4_FCAST_QTY,0)) / NVL(B.D4_FCAST_QTY,0)) * 100, 2)) DF1_D4
      ,DECODE(NVL(B.D5_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D5_FCAST_QTY,0) - NVL(C.D5_FCAST_QTY,0)) / NVL(B.D5_FCAST_QTY,0)) * 100, 2)) DF1_D5
      ,DECODE(NVL(B.D7_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D7_FCAST_QTY,0) - NVL(C.D7_FCAST_QTY,0)) / NVL(B.D7_FCAST_QTY,0)) * 100, 2)) DF1_D7

       -- OP PFMC
      ,PFMC_TOTAL
      ,D.D2_FCAST_QTY PFMC_D2_FCAST_QTY
      ,D.D4_FCAST_QTY PFMC_D4_FCAST_QTY
      ,D.D5_FCAST_QTY PFMC_D5_FCAST_QTY
      ,D.D7_FCAST_QTY PFMC_D7_FCAST_QTY

       --DIFF(OP PERF/Sales F'cast)  = (Sales F'cast(Converted) - OP Performance) / Sales F'cast(Converted)
      ,DECODE(NVL(B.TOTAL,0), 0, 0, ROUND(((NVL(B.TOTAL,0) - NVL(PFMC_TOTAL,0)) / NVL(B.TOTAL,0)) * 100, 2)) DF2_TOTAL
      ,DECODE(NVL(B.D2_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D2_FCAST_QTY,0) - NVL(D.D2_FCAST_QTY,0)) / NVL(B.D2_FCAST_QTY,0)) * 100, 2)) DF2_D2
      ,DECODE(NVL(B.D4_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D4_FCAST_QTY,0) - NVL(D.D4_FCAST_QTY,0)) / NVL(B.D4_FCAST_QTY,0)) * 100, 2)) DF2_D4
      ,DECODE(NVL(B.D5_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D5_FCAST_QTY,0) - NVL(D.D5_FCAST_QTY,0)) / NVL(B.D5_FCAST_QTY,0)) * 100, 2)) DF2_D5
      ,DECODE(NVL(B.D7_FCAST_QTY,0), 0, 0, ROUND(((NVL(B.D7_FCAST_QTY,0) - NVL(D.D7_FCAST_QTY,0)) / NVL(B.D7_FCAST_QTY,0)) * 100, 2)) DF2_D7

      ,B.ROW_NUM -- SALES PROJECTION
      ,C.ROW_NUM -- OP FCST
      ,D.ROW_NUM -- OP PFMC
FROM
-- A : HEADER AREA
-- B : SALES PROJECTION(1)
-- C : OP FORECAST     (2)
-- D : OP PFMC         (3)
(
    -- HEADER AREA (LOCATION, WEEK)
    SELECT A.LOC_CD
          ,B.WEEK
    FROM  
    (
		#if (${div_flag} == '1' )
		    #if (${loc_tp_cd} == 'R' )
            SELECT DISTINCT LCC_CD LOC_CD
		    #elseif (${loc_tp_cd} == 'L')
            SELECT DISTINCT ECC_CD LOC_CD
		    #elseif (${loc_tp_cd} == 'E')
            SELECT DISTINCT SCC_CD LOC_CD
		    #elseif (${loc_tp_cd} == 'S')
            SELECT DISTINCT SCC_CD LOC_CD
		    #end
            
		    #else
		    #if (${loc_tp_cd_second} == 'L')
            SELECT DISTINCT LCC_CD LOC_CD
		    #elseif (${loc_tp_cd_second} == 'E')
            SELECT DISTINCT ECC_CD LOC_CD
		    #elseif (${loc_tp_cd_second} == 'S')
            SELECT DISTINCT SCC_CD LOC_CD
		    #end
        #end
            
            FROM  MDM_EQ_ORZ_CHT
            WHERE DELT_FLG = 'N'
        #if (${div_flag} == '1' )
        	#if (${loc_tp_cd} == 'R' )
            AND   RCC_CD = @[loc_cd]
	        #elseif (${loc_tp_cd} == 'L')
            AND   LCC_CD = @[loc_cd]
	        #elseif (${loc_tp_cd} == 'E')
            AND   ECC_CD = @[loc_cd]
	        #else --S(LCC 조건으로 SCC 표현)
            AND   LCC_CD = @[loc_cd]
    	    #end

        #else
        	#if (${loc_tp_cd_second} == 'L')
            AND   LCC_CD = @[loc_cd_second]
        	#elseif (${loc_tp_cd_second} == 'E')
            AND   ECC_CD = @[loc_cd_second]
        	#else --SCC
            AND   SCC_CD = @[loc_cd_second]
        	#end
        #end
    ) A
    ,(  -- WEEK PERIOD
        SELECT PLN_YR||PLN_WK WEEK
        FROM   EQR_WK_PRD
        WHERE  PLN_YR||PLN_WK BETWEEN @[fm_week] AND @[to_week]
     ) B
) A
,
(
    -- SALES PROJECTION -------------------------------------------------------------
    SELECT A.FCAST_YRWK
         
		 #if (${div_flag} == '1' )
		    #if (${loc_tp_cd} == 'R' )
              ,B.LCC_CD LOC_CD
		    #elseif (${loc_tp_cd} == 'L')
              ,B.ECC_CD LOC_CD
		    #elseif (${loc_tp_cd} == 'E')
              ,B.SCC_CD LOC_CD
		    #elseif (${loc_tp_cd} == 'S')
              ,B.SCC_CD LOC_CD
		    #end
            
		    #else
		    #if (${loc_tp_cd_second} == 'L')
              ,B.LCC_CD LOC_CD
		    #elseif (${loc_tp_cd_second} == 'E')
              ,B.ECC_CD LOC_CD
		    #elseif (${loc_tp_cd_second} == 'S')
              ,B.SCC_CD LOC_CD
		    #end
         #end

          ,NVL(SUM(A.D2_FCAST_QTY),0)+NVL(SUM(A.D4_FCAST_QTY),0)+NVL(SUM(A.D5_FCAST_QTY),0)+NVL(SUM(A.D7_FCAST_QTY),0) TOTAL
          ,SUM(A.D2_FCAST_QTY) D2_FCAST_QTY
          ,SUM(A.D4_FCAST_QTY) D4_FCAST_QTY
          ,SUM(A.D5_FCAST_QTY) D5_FCAST_QTY
          ,SUM(A.D7_FCAST_QTY) D7_FCAST_QTY
          
          ,1 ROW_NUM -- SALES PROJECTION
    FROM
    (
--        SELECT ROW_NUMBER() OVER(PARTITION BY A.FCAST_YRWK, A.RLANE_CD, A.SLS_OFC_CD, A.POL_ECC_CD, A.CNTR_PKUP_SCC_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD ORDER BY A.BSE_DT DESC  ) AS RN
        SELECT /*+ NO_MERGE(B) */ DENSE_RANK() OVER(PARTITION BY A.RLANE_CD, A.SLS_OFC_CD, A.POL_ECC_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD ORDER BY A.BSE_DT DESC  ) AS RN
              ,A.FCAST_YRWK
              ,A.RLANE_CD
              ,A.SLS_OFC_CD
              ,A.POL_ECC_CD
              ,A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.CNTR_PKUP_SCC_CD
              
              ,A.D2_FCAST_QTY
              ,A.D4_FCAST_QTY
              ,A.D5_FCAST_QTY
              ,A.D7_FCAST_QTY
             
        FROM EQR_CTRL_OB_FCAST_SNAP A
             -- 20141216 신규추가
            ,(
                 SELECT DISTINCT RLANE_CD, SLS_OFC_CD, POL_ECC_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD
                 FROM   EQR_CTRL_OB_FCAST_SNAP 
                 WHERE  FCAST_YRWK BETWEEN @[fm_week] AND @[to_week]
                 AND    EQ_FCAST_RTO_LVL_CD NOT IN (0, 9)
             ) B 

          -- 20141216 신규추가
            WHERE A.RLANE_CD   = B.RLANE_CD
            AND   A.SLS_OFC_CD = B.SLS_OFC_CD
            AND   A.POL_ECC_CD = B.POL_ECC_CD
            AND   A.VSL_CD     = B.VSL_CD
            AND   A.SKD_VOY_NO = B.SKD_VOY_NO
            AND   A.SKD_DIR_CD = B.SKD_DIR_CD

            AND   A.EQ_FCAST_RTO_LVL_CD NOT IN (0, 9)
    ) A
   ,(
         SELECT DISTINCT RCC_CD
               ,LCC_CD
               ,ECC_CD
               ,SCC_CD
         FROM   MDM_EQ_ORZ_CHT
        
   #if (${div_flag} == '1' )
	#if (${loc_tp_cd} == 'R' )
		 WHERE  RCC_CD = @[loc_cd]
	#elseif (${loc_tp_cd} == 'L')
		 WHERE  LCC_CD = @[loc_cd]
	#elseif (${loc_tp_cd} == 'E')
		 WHERE  ECC_CD = @[loc_cd]
	#else --S(LCC 조건으로 SCC 표현)
		 WHERE  LCC_CD = @[loc_cd]
	#end

	#else
	#if (${loc_tp_cd_second} == 'L')
		WHERE   LCC_CD = @[loc_cd_second]
	#elseif (${loc_tp_cd_second} == 'E')
		WHERE   ECC_CD = @[loc_cd_second]
	#else --SCC
		WHERE   SCC_CD = @[loc_cd_second]
	#end
   #end
    
    ) B
    
    WHERE A.RN = 1 -- LATEST DATE 만 추출
    AND A.CNTR_PKUP_SCC_CD = B.SCC_CD

    -- 검색조건 WEEK
    AND   A.FCAST_YRWK BETWEEN @[fm_week] AND @[to_week]
    
    GROUP BY A.FCAST_YRWK

	 #if (${div_flag} == '1' )
	    #if (${loc_tp_cd} == 'R' )
      		,B.LCC_CD 
	    #elseif (${loc_tp_cd} == 'L')
      		,B.ECC_CD 
	    #elseif (${loc_tp_cd} == 'E')
      		,B.SCC_CD 
	    #elseif (${loc_tp_cd} == 'S')
      		,B.SCC_CD 
	    #end
    
	    #else
	    #if (${loc_tp_cd_second} == 'L')
      		,B.LCC_CD 
	    #elseif (${loc_tp_cd_second} == 'E')
      		,B.ECC_CD 
	    #elseif (${loc_tp_cd_second} == 'S')
      		,B.SCC_CD 
	    #end
	#end
) B
,
(     
    -- OP FORECAST -------------------------------------------------------------     
      
    SELECT A.FCAST_YRWK
          ,A.LOC_CD 
          ,NVL(SUM(D2_FCAST_QTY),0)+NVL(SUM(D4_FCAST_QTY),0)+NVL(SUM(D5_FCAST_QTY),0)+NVL(SUM(D7_FCAST_QTY),0) FCST_TOTAL    
          ,SUM(A.D2_FCAST_QTY) D2_FCAST_QTY
          ,SUM(A.D4_FCAST_QTY) D4_FCAST_QTY
          ,SUM(A.D5_FCAST_QTY) D5_FCAST_QTY
          ,SUM(A.D7_FCAST_QTY) D7_FCAST_QTY

          ,2 ROW_NUM     
    FROM
    (      
        SELECT FCAST_YRWK
              ,INP_YRWK
              ,LOC_CD
              ,LOC_GRP_CD
              ,D2_FCAST_QTY
              ,D4_FCAST_QTY
              ,D5_FCAST_QTY
              ,D7_FCAST_QTY
        FROM
        (      
            SELECT ROW_NUMBER() OVER(PARTITION BY FCAST_YRWK, LOC_CD, LOC_GRP_CD ORDER BY INP_YRWK DESC  ) AS RN -- FCAST WEEK 기준 가장 마지막 INP_YRWK 를 선택
                  ,FCAST_YRWK
                  ,INP_YRWK
                  ,LOC_CD
                  ,LOC_GRP_CD
                  ,D2_FCAST_QTY
                  ,D4_FCAST_QTY
                  ,D5_FCAST_QTY
                  ,D7_FCAST_QTY
            FROM  EQR_CTRL_MTY_BAL_RPT A    
            WHERE A.CO_CD          = 'H'  -- 하드코딩
            AND   A.MTY_BAL_TP_CD  = '3'  -- OP FCST
            
       #if (${div_flag} == '1' )
    	#if (${loc_tp_cd} == 'R' )
    		AND   A.LOC_GRP_CD = 'L'
    	#elseif (${loc_tp_cd} == 'L')
    		AND   A.LOC_GRP_CD = 'E'
    	#elseif (${loc_tp_cd} == 'E')
    		AND   A.LOC_GRP_CD = 'S'
    	#else --S(LCC 조건으로 SCC 표현)
    		AND   A.LOC_GRP_CD = 'S'
    	#end
    
    	#else
    	#if (${loc_tp_cd_second} == 'L')
    		AND   A.LOC_GRP_CD = 'L'
    	#elseif (${loc_tp_cd_second} == 'E')
    		AND   A.LOC_GRP_CD = 'E'
    	#else --SCC
    		AND   A.LOC_GRP_CD = 'S'
    	#end
       #end
    
            -- 검색조건 WEEK
            AND   A.FCAST_YRWK BETWEEN @[fm_week] AND @[to_week]
        ) 
        WHERE RN=1  -- FCAST WEEK 기준 가장 마지막 INP_YRWK 를 선택
    ) A
    ,
    (
          #if (${div_flag} == '1' )
            #if (${loc_tp_cd} == 'R' )
               SELECT DISTINCT LCC_CD, RCC_CD 
            #elseif (${loc_tp_cd} == 'L')
               SELECT DISTINCT ECC_CD, LCC_CD 
            #elseif (${loc_tp_cd} == 'E')
               SELECT DISTINCT SCC_CD, ECC_CD 
            #else --S(LCC 조건으로 SCC 표현)
               SELECT DISTINCT SCC_CD, LCC_CD 
            #end

				  #else
            #if (${loc_tp_cd_second} == 'L')
               SELECT DISTINCT LCC_CD 
            #elseif (${loc_tp_cd_second} == 'E')
               SELECT DISTINCT ECC_CD 
            #else --S(LCC 조건으로 SCC 표현)
               SELECT DISTINCT SCC_CD 
            #end
          #end

               FROM   MDM_EQ_ORZ_CHT 
               WHERE  NVL(DELT_FLG, 'N') = 'N'
    ) B
#if (${div_flag} == '1' )
  #if (${loc_tp_cd} == 'R' )
	WHERE A.LOC_CD = B.LCC_CD 
	AND   B.RCC_CD = @[loc_cd]
  #elseif (${loc_tp_cd} == 'L')
	WHERE A.LOC_CD = B.ECC_CD 
	AND   B.LCC_CD = @[loc_cd]
  #elseif (${loc_tp_cd} == 'E')
	WHERE A.LOC_CD = B.SCC_CD
	AND   B.ECC_CD = @[loc_cd]
  #else --S(LCC 조건으로 SCC 표현)
	WHERE A.LOC_CD = B.SCC_CD 
	AND   B.LCC_CD = @[loc_cd]  
#end

#else
  #if (${loc_tp_cd_second} == 'L')
	WHERE A.LOC_CD = B.LCC_CD 
	AND   B.LCC_CD = @[loc_cd_second]  
  #elseif (${loc_tp_cd_second} == 'E')
	WHERE A.LOC_CD = B.ECC_CD 
	AND   B.ECC_CD = @[loc_cd_second]  
  #else --SCC
	WHERE A.LOC_CD = B.SCC_CD 
	AND   B.SCC_CD = @[loc_cd_second]  
  #end
#end
    GROUP BY A.FCAST_YRWK
            ,A.LOC_CD

	) C
,
(
-- OP PFMC 과거데이터
SELECT A.FCAST_YRWK
      ,A.LOC_CD
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) +
       SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) +
       SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) +
       SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) PFMC_TOTAL
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.CNTR_QTY) ,0)) D2_FCAST_QTY
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.CNTR_QTY) ,0)) D4_FCAST_QTY
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.CNTR_QTY) ,0)) D5_FCAST_QTY
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.CNTR_QTY) ,0)) D7_FCAST_QTY 
--      ,A.LOC_GRP_CD 
      ,3 ROW_NUM           
FROM EQR_CTRL_MTY_WKY_SIM A
    ,(
          #if (${div_flag} == '1' )
            #if (${loc_tp_cd} == 'R' )
               SELECT DISTINCT LCC_CD, RCC_CD 
            #elseif (${loc_tp_cd} == 'L')
               SELECT DISTINCT ECC_CD, LCC_CD 
            #elseif (${loc_tp_cd} == 'E')
               SELECT DISTINCT SCC_CD, ECC_CD 
            #else --S(LCC 조건으로 SCC 표현)
               SELECT DISTINCT SCC_CD, LCC_CD 
            #end

		  #else
            #if (${loc_tp_cd_second} == 'L')
               SELECT DISTINCT LCC_CD 
            #elseif (${loc_tp_cd_second} == 'E')
               SELECT DISTINCT ECC_CD 
            #else --S(LCC 조건으로 SCC 표현)
               SELECT DISTINCT SCC_CD 
            #end
          #end

               FROM   MDM_EQ_ORZ_CHT 
               WHERE  NVL(DELT_FLG, 'N') = 'N'

     ) B
     
       #if (${div_flag} == '1' )
    	#if (${loc_tp_cd} == 'R' )
    		WHERE A.LOC_CD = B.LCC_CD 
            AND   B.RCC_CD = @[loc_cd]  
    	#elseif (${loc_tp_cd} == 'L')
    		WHERE A.LOC_CD = B.ECC_CD 
            AND   B.LCC_CD = @[loc_cd]  
    	#elseif (${loc_tp_cd} == 'E')
    		WHERE A.LOC_CD = B.SCC_CD 
            AND   B.ECC_CD = @[loc_cd]  
    	#else --S(LCC 조건으로 SCC 표현)
    		WHERE A.LOC_CD = B.SCC_CD 
            AND   B.LCC_CD = @[loc_cd]  
    	#end
    
    	#else
    	#if (${loc_tp_cd_second} == 'L')
    		WHERE A.LOC_CD = B.LCC_CD 
            AND   B.LCC_CD = @[loc_cd_second]  
    	#elseif (${loc_tp_cd_second} == 'E')
    		WHERE A.LOC_CD = B.ECC_CD 
            AND   B.ECC_CD = @[loc_cd_second]
    	#else --SCC
    		WHERE A.LOC_CD = B.SCC_CD
            AND   B.SCC_CD = @[loc_cd_second]
    	#end
       #end     

       #if (${div_flag} == '1' )
    	#if (${loc_tp_cd} == 'R' )
    		AND   A.LOC_GRP_CD = 'L'
    	#elseif (${loc_tp_cd} == 'L')
    		AND   A.LOC_GRP_CD = 'E'
    	#elseif (${loc_tp_cd} == 'E')
    		AND   A.LOC_GRP_CD = 'S'
    	#else --S(LCC 조건으로 SCC 표현)
    		AND   A.LOC_GRP_CD = 'S'
    	#end
    
    	#else
    	#if (${loc_tp_cd_second} == 'L')
    		AND   A.LOC_GRP_CD = 'L'
    	#elseif (${loc_tp_cd_second} == 'E')
    		AND   A.LOC_GRP_CD = 'E'
    	#else --SCC
    		AND   A.LOC_GRP_CD = 'S'
    	#end
       #end
AND   A.FCAST_YRWK BETWEEN @[fm_week] AND @[to_week]
AND   A.WKY_SIM_TP_CD = 'OF' --OP PFMC
AND   A.CFM_FLG       = 'Y'  --CONFIRM
AND   A.TMP_SAV_FLG   = 'N'  --TEMP 제외

GROUP BY A.FCAST_YRWK
        ,A.LOC_CD
--        ,A.LOC_GRP_CD 

UNION ALL
-- OP PFMC 현재+미래 데이터
SELECT A.FCAST_YRWK
      ,A.LOC_CD
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.OB_QTY) ,0)) +
       SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.OB_QTY) ,0)) +
       SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.OB_QTY) ,0)) +
       SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.OB_QTY) ,0)) PFMC_TOTAL
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D2', A.OB_QTY) ,0)) D2_QTY
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D4', A.OB_QTY) ,0)) D4_QTY
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D5', A.OB_QTY) ,0)) D5_QTY
      ,SUM(NVL(DECODE(A.CNTR_TPSZ_CD, 'D7', A.OB_QTY) ,0)) D7_QTY  
      ,3 ROW_NUM 
FROM      
(      
SELECT 	E.PLN_YR||E.PLN_WK FCAST_YRWK,
        M.CNTR_TPSZ_CD	   CNTR_TPSZ_CD
								#if (${div_flag} == '1' )
									#if (${loc_tp_cd}=='R' )
            						,G.LCC_CD                LOC_CD,
                            		#elseif (${loc_tp_cd}=='L' )
                                ,G.ECC_CD                LOC_CD,
									#elseif (${loc_tp_cd}=='E' )
            	            	,G.SCC_CD                LOC_CD,
									#elseif (${loc_tp_cd}=='S' ) --S(LCC 조건으로 SCC 표현)
            	            	,G.SCC_CD                LOC_CD,
									#end

								#else
									#if (${loc_tp_cd_second}=='L' )
                                ,G.LCC_CD                LOC_CD,
									#elseif (${loc_tp_cd_second}=='E' )
            	            	,G.ECC_CD                LOC_CD,
									#elseif (${loc_tp_cd_second}=='S' ) --S(LCC 조건으로 SCC 표현)
            	            	,G.SCC_CD                LOC_CD,
									#end
								#end
		COUNT(*) OB_QTY         
FROM 	CTM_MOVEMENT	     M,
       	MST_CONTAINER        C,
       	MDM_EQ_ORZ_CHT G,
        MDM_LOCATION L,
        MDM_YARD Y,
		EQR_WK_PRD E
WHERE 	M.CNMV_EVNT_DT	BETWEEN	
        ( 
				SELECT TO_DATE(K.WK_ST_DT,'YYYYMMDD') + .0
				FROM   EQR_WK_PRD K
				WHERE  K.PLN_YR = SUBSTR(@[fm_week],1,4)
				AND    K.PLN_WK = SUBSTR(@[fm_week],5)
		)	
AND		( 
				SELECT TO_DATE(K.WK_END_DT,'YYYYMMDD') + .99999
				FROM   EQR_WK_PRD K
				WHERE  K.PLN_YR = SUBSTR(@[to_week],1,4)
				AND    K.PLN_WK = SUBSTR(@[to_week],5)
		)
 		
-- EQR_WK_PRD 의 이번주차 일요일부터 발생한 MOVEMENT 데이터	
AND     M.CNMV_EVNT_DT > (				 
                            SELECT TO_DATE(WK_ST_DT,'YYYYMMDD') + .0
				            FROM   EQR_WK_PRD K
				            WHERE  K.PLN_YR||K.PLN_WK = (  -- 오늘의 EQR 주차
				                                           SELECT PLN_YR||PLN_WK 
				                                           FROM EQR_WK_PRD 
				                                           WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN WK_ST_DT AND WK_END_DT 
				                                         )
                         ) 	                                     
AND 	M.MVMT_STS_CD = 'OP'
AND     Y.LOC_CD = L.LOC_CD
AND     L.SCC_CD = G.SCC_CD
              #if (${div_flag} == '1' )
				#if (${loc_tp_cd} == 'E' )
				   AND   @[loc_cd] = G.ECC_CD
				#elseif (${loc_tp_cd} == 'L' )
				   AND   @[loc_cd] = G.LCC_CD
				#elseif (${loc_tp_cd} == 'R' )
				   AND   @[loc_cd] = G.RCC_CD
				#elseif (${loc_tp_cd} == 'S' )
				   AND   @[loc_cd] = G.LCC_CD
				#end
              #else
				#if (${loc_tp_cd_second} == 'E' )
				   AND   @[loc_cd_second] = G.ECC_CD
				#elseif (${loc_tp_cd_second} == 'L' )
				   AND   @[loc_cd_second] = G.LCC_CD
				#elseif (${loc_tp_cd_second} == 'S' )
				   AND   @[loc_cd_second] = G.SCC_CD
				#end
              #end
AND     M.ORG_YD_CD = Y.YD_CD
AND 	M.CNTR_NO  	= C.CNTR_NO
AND     C.CNTR_TPSZ_CD IN( 'D2','D4','D5','D7' )
AND 	NVL(C.LSTM_CD, '  ') <> 'SH' /* soc	*/ 
AND     TO_CHAR(M.CNMV_EVNT_DT,'YYYYMMDD') BETWEEN E.WK_ST_DT AND E.WK_END_DT
GROUP BY E.PLN_YR||E.PLN_WK,
		 M.MVMT_STS_CD ,
		 M.CNTR_TPSZ_CD,
		#if (${div_flag} == '1' )		
			#if (${loc_tp_cd} == 'R' )
	    		G.LCC_CD
			#elseif (${loc_tp_cd} == 'L' )
				G.ECC_CD
			#elseif (${loc_tp_cd} == 'E' )
				G.SCC_CD
			#elseif (${loc_tp_cd} == 'S' )
				G.SCC_CD
			#end
		#else
			#if (${loc_tp_cd_second} == 'L' )
				G.LCC_CD
			#elseif (${loc_tp_cd_second} == 'E' )
				G.ECC_CD
			#elseif (${loc_tp_cd_second} == 'S' )
				G.SCC_CD
			#end
		#end
) A	
GROUP BY A.FCAST_YRWK
        ,A.LOC_CD
) D
WHERE A.LOC_CD = B.LOC_CD(+)
AND   A.WEEK   = B.FCAST_YRWK(+)
AND   A.LOC_CD = C.LOC_CD(+)
AND   A.WEEK   = C.FCAST_YRWK(+)    
AND   A.LOC_CD = D.LOC_CD(+)
AND   A.WEEK   = D.FCAST_YRWK(+)   
ORDER BY A.LOC_CD
        ,A.WEEK			]]></sql>
			<params>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="loc_cd_second" type="12" value="" out="N"/>
				<param name="fm_week" type="12" value="" out="N"/>
				<param name="to_week" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
