<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="LeasePlanDBDAONewVanCNTRDeliveryPlanPerformanceListRSQL">
			<desc><![CDATA[신조(자가/장기)장비 인수계획 대비 실적목록을 조회한다.]]></desc>
			<sql><![CDATA[
WITH TEMP_PARAM AS (
    SELECT  DISTINCT A.PLN_YRMON, A.AGMT_CTY_CD, A.AGMT_SEQ, 
            A.DEL_CD, A.MFT_VNDR_SEQ, A.CNTR_TPSZ_CD, 
			A.NEW_VAN_YRMON AS BASE_DE_YRMON
    FROM    LSE_NEW_VAN_DE_PLN A
    WHERE   1 = 1
#if (${pln_yrmon} != '')
	AND 	A.PLN_YRMON LIKE @[pln_yrmon]||'%'
#end				
#if (${pln_mon_cd} != '')
	AND 	SUBSTR(A.NEW_VAN_YRMON, 5,2) IN (
	#foreach($key IN ${pln_mon_cd_seq})
		#if($velocityCount < $pln_mon_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
			)
#end				
#if (${agmt_cty_cd} != '')
    AND    	A.AGMT_CTY_CD = @[agmt_cty_cd]
#end				
#if (${agmt_seq} != '')
    AND    	A.AGMT_SEQ = @[agmt_seq]
#end
), INLINE_1 AS (
    SELECT  DISTINCT P.PLN_YRMON, P.AGMT_CTY_CD, P.AGMT_SEQ,
            P.AGMT_CTY_CD||LPAD(P.AGMT_SEQ, 6, '0') AS AGMT_NO,
            P.MFT_VNDR_SEQ, P.DEL_CD, P.CNTR_TPSZ_CD,
            P.BASE_DE_YRMON, 1 AS RSLT_TP_SEQ,
            NVL(PLAN.DE_QTY, 0) AS PLAN_DE_QTY, 0 AS PFMC_DE_QTY,
			C.RCC_CD, C.LCC_CD, C.SCC_CD
    FROM    TEMP_PARAM P,
            LSE_NEW_VAN_DE_PLN PLAN,
			MDM_EQ_ORZ_CHT C
    WHERE  1 = 1
    AND    P.BASE_DE_YRMON = PLAN.NEW_VAN_YRMON(+)
    AND    P.CNTR_TPSZ_CD = PLAN.CNTR_TPSZ_CD(+)
    AND    P.DEL_CD = PLAN.DEL_CD(+)
    AND    P.MFT_VNDR_SEQ = PLAN.MFT_VNDR_SEQ(+)
    AND    P.AGMT_SEQ = PLAN.AGMT_SEQ(+)
    AND    P.AGMT_CTY_CD = PLAN.AGMT_CTY_CD(+)
    AND    P.PLN_YRMON = PLAN.PLN_YRMON(+)
	AND    P.DEL_CD = C.SCC_CD
), INLINE_2 AS (
    SELECT  AGMT_CTY_CD||LPAD(AGMT_SEQ, 6, '0') AS AGMT_NO,
            AGMT_CTY_CD, AGMT_SEQ, MFT_VNDR_SEQ, 
			RCC_CD, LCC_CD, SCC_CD, 
            CNTR_TPSZ_CD, DE_YRMON AS BASE_DE_YRMON,
            2 AS RSLT_TP_SEQ, 0 AS PLAN_DE_QTY,
            NVL(COUNT(CNTR_NO), 0) AS PFMC_DE_QTY, PLN_YRMON
    FROM   (SELECT  /*+ ORDERED USE_HASH(P HS CN) */
                    DISTINCT TO_CHAR(CN.ONH_DT, 'YYYYMM') AS DE_YRMON,
                    HS.AGMT_CTY_CD, HS.AGMT_SEQ, CN.MFTR_VNDR_SEQ AS MFT_VNDR_SEQ,
                    CN.CNTR_TPSZ_CD, CN.CNTR_NO, P.PLN_YRMON,
					E.RCC_CD, E.LCC_CD, E.SCC_CD
            FROM    TEMP_PARAM P,
                    MST_CNTR_STS_HIS HS,
                    MST_CONTAINER CN,
				   (SELECT  A.YD_CD, A.LOC_CD, C.RCC_CD, C.LCC_CD, C.SCC_CD
                    FROM    MDM_YARD A,
                            MDM_LOCATION B,
                            MDM_EQ_ORZ_CHT C
                    WHERE   A.LOC_CD = B.LOC_CD
                    AND     B.SCC_CD = C.SCC_CD) E
            WHERE  1 = 1
			AND    CN.ONH_DT >= TO_DATE(P.BASE_DE_YRMON, 'YYYYMM')
--			AND    CN.ONH_YD_CD <> 'KRSEL1H'
#if (${pln_mon_cd} != '')			
			AND    TO_CHAR(CN.ONH_DT, 'MM') = SUBSTR(P.BASE_DE_YRMON, 5)
#end
            AND    SUBSTR(NVL(HS.CNTR_STS_RMK, ' '), 1, 6) <> 'SELLOE'
            AND    HS.CNTR_LSTM_CNG_FLG <> 'Y'
            AND    HS.CNTR_STS_CD IN ('LSI','OWN')
            AND    HS.CNTR_NO = CN.CNTR_NO
            AND    CN.LSTM_CD IN('OW','LP','OL')
            AND    CN.HJS_CRE_FLG = 'N'
			AND    CN.ONH_YD_CD = E.YD_CD
            AND    HS.AGMT_SEQ = P.AGMT_SEQ
            AND    HS.AGMT_CTY_CD = P.AGMT_CTY_CD
            )
    GROUP BY DE_YRMON, AGMT_CTY_CD, AGMT_SEQ, MFT_VNDR_SEQ, RCC_CD, LCC_CD, SCC_CD, CNTR_TPSZ_CD, PLN_YRMON    
), TEMP_DROP AS (
	SELECT  A.PLN_YRMON, A.AGMT_NO, A.AGMT_CTY_CD, A.AGMT_SEQ, B.REF_NO, A.MFT_VNDR_SEQ, 
			A.RCC_CD, A.LCC_CD, A.SCC_CD, A.LCC_CD AS DEL_CD,
			A.CNTR_TPSZ_CD, A.DE_YR, A.DE_MON, A.RSLT_TP_SEQ, A.DE_QTY
    FROM   (SELECT  A.PLN_YRMON, A.AGMT_NO, A.AGMT_CTY_CD, A.AGMT_SEQ, 
                    A.MFT_VNDR_SEQ, A.RCC_CD, A.LCC_CD, A.SCC_CD, A.CNTR_TPSZ_CD, 
                    SUBSTR(A.BASE_DE_YRMON, 0, 4) AS DE_YR, 
                    SUBSTR(A.BASE_DE_YRMON, 5, 2) AS DE_MON, 
                    C.RSLT_TP_SEQ, 
                    CASE C.RSLT_TP_SEQ WHEN 1 THEN A.PLAN_DE_QTY
                         WHEN 2 THEN B.PFMC_DE_QTY
                         WHEN 3 THEN DECODE(NVL(A.PLAN_DE_QTY,0),0,0,ROUND(B.PFMC_DE_QTY/A.PLAN_DE_QTY*100))
                    END DE_QTY
            FROM    INLINE_1 A,
                    INLINE_2 B, 
                   (SELECT  LEVEL AS RSLT_TP_SEQ  
                    FROM    DUAL  CONNECT BY LEVEL <= 3) C
            WHERE   A.AGMT_NO = B.AGMT_NO(+)
            AND     A.MFT_VNDR_SEQ = B.MFT_VNDR_SEQ(+)
            AND     A.SCC_CD = B.SCC_CD(+)
            AND     A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)
            AND     A.BASE_DE_YRMON = B.BASE_DE_YRMON(+)
            UNION ALL
            SELECT  NVL(A.PLN_YRMON, B.PLN_YRMON) AS PLN_YRMON, B.AGMT_NO, B.AGMT_CTY_CD, B.AGMT_SEQ, 
                    B.MFT_VNDR_SEQ, B.RCC_CD, B.LCC_CD, B.SCC_CD, B.CNTR_TPSZ_CD, 
                    SUBSTR(B.BASE_DE_YRMON, 0, 4) AS DE_YR, 
                    SUBSTR(B.BASE_DE_YRMON, 5, 2) AS DE_MON, 
                    C.RSLT_TP_SEQ, 
                    CASE C.RSLT_TP_SEQ WHEN 1 THEN A.PLAN_DE_QTY
                         WHEN 2 THEN B.PFMC_DE_QTY
                         WHEN 3 THEN DECODE(NVL(A.PLAN_DE_QTY,0),0,0,ROUND(B.PFMC_DE_QTY/A.PLAN_DE_QTY*100))
                    END DE_QTY
            FROM    INLINE_1 A,
                    INLINE_2 B, 
                   (SELECT  LEVEL AS RSLT_TP_SEQ  
                    FROM    DUAL  CONNECT BY LEVEL <= 3) C
            WHERE   A.AGMT_NO(+) = B.AGMT_NO
            AND     A.MFT_VNDR_SEQ(+) = B.MFT_VNDR_SEQ
            AND     A.SCC_CD(+) = B.SCC_CD
            AND     A.CNTR_TPSZ_CD(+) = B.CNTR_TPSZ_CD
            AND     A.BASE_DE_YRMON(+) = B.BASE_DE_YRMON    
            AND     A.PLAN_DE_QTY IS NULL) A,
    LSE_AGREEMENT B
    WHERE   1 = 1
    AND    A.AGMT_SEQ = B.AGMT_SEQ
    AND    A.AGMT_CTY_CD = B.AGMT_CTY_CD
#if (${loc_cd} != '')
	#if (${loc_tp} == 'SCC')
    AND    	A.SCC_CD = @[loc_cd]
	#elseif (${loc_tp} == 'RCC')
    AND    	A.RCC_CD = @[loc_cd]
	#else
    AND    	A.LCC_CD = @[loc_cd]
	#end
#end				
#if (${mft_vndr_seq} != '')
    AND    	A.MFT_VNDR_SEQ IN (
	#foreach($key IN ${mft_vndr_cd_seq})
		#if($velocityCount < $mft_vndr_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
			)
#end				
#if (${cntr_tpsz_cd} != '')
    AND    	A.CNTR_TPSZ_CD IN (
	#foreach($key IN ${cntr_tpsz_cd_seq})
		#if($velocityCount < $cntr_tpsz_cd_seq.size())
			'$key',
		#else
			'$key'
		#end
	#end
			)
#end
)
SELECT	X.PLN_YRMON, X.AGMT_NO, X.DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ, X.REF_NO,
		SUBSTR(Y.VNDR_ABBR_NM,0,8) AS VNDR_ABBR_NM, Y.VNDR_LGL_ENG_NM, 
		TO_CHAR(Y.VNDR_SEQ) AS MFT_VNDR_SEQ, X.DEL_CD, X.CNTR_TPSZ_CD, X.RSLT_TP_SEQ, 
		DECODE(X.RSLT_TP_SEQ, 1, 'Plan', 2, 'PFMC', 3, 'Ratio') AS RSLT_TP, 
		SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) AS MNTH_01, 
		SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) AS MNTH_02, 
		SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) AS MNTH_03, 
		SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) AS MNTH_04, 
		SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) AS MNTH_05, 
		SUM(DECODE(X.DE_MON,'06',DE_QTY,0)) AS MNTH_06, 
		SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) AS MNTH_07, 
		SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) AS MNTH_08, 
		SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) AS MNTH_09, 
		SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) AS MNTH_10, 
		SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) AS MNTH_11, 
		SUM(DECODE(X.DE_MON,'12',DE_QTY,0)) AS MNTH_12, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRST_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS SCND_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS THRD_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRTH_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'06',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS YR_TOT
FROM   	TEMP_DROP X, 
		MDM_VENDOR Y
WHERE  	Y.VNDR_SEQ = X.MFT_VNDR_SEQ
GROUP BY X.PLN_YRMON, X.AGMT_NO, X.DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ,X.REF_NO, Y.VNDR_ABBR_NM, 
		 Y.VNDR_LGL_ENG_NM, Y.VNDR_SEQ, X.CNTR_TPSZ_CD, X.DEL_CD, X.RSLT_TP_SEQ
UNION ALL
SELECT 	X.PLN_YRMON, X.AGMT_NO, X.DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ,X.REF_NO, 
		'S.TTL' AS VNDR_ABBR_NM, '' AS VNDR_LGL_ENG_NM, '' AS MFT_VNDR_SEQ, 
		'' AS DEL_CD, X.CNTR_TPSZ_CD, X.RSLT_TP_SEQ, 
		DECODE(X.RSLT_TP_SEQ, 1, 'Plan', 2, 'PFMC', 3, 'Ratio') AS RSLT_TP, 
		SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) AS MNTH_01, 
		SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) AS MNTH_02, 
		SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) AS MNTH_03, 
		SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) AS MNTH_04, 
		SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) AS MNTH_05, 
		SUM(DECODE(X.DE_MON,'06',DE_QTY,0)) AS MNTH_06, 
		SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) AS MNTH_07, 
		SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) AS MNTH_08, 
		SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) AS MNTH_09, 
		SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) AS MNTH_10, 
		SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) AS MNTH_11, 
		SUM(DECODE(X.DE_MON,'12',DE_QTY,0)) AS MNTH_12, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRST_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS SCND_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS THRD_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRTH_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
              	+ SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS YR_TOT
FROM   	TEMP_DROP X, 
		MDM_VENDOR Y
WHERE  	Y.VNDR_SEQ = X.MFT_VNDR_SEQ
GROUP BY X.PLN_YRMON, X.AGMT_NO, X.DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ,X.REF_NO, X.CNTR_TPSZ_CD, X.RSLT_TP_SEQ
UNION ALL
SELECT 	X.PLN_YRMON, X.AGMT_NO, X.DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ,X.REF_NO, 
		'S.TTL' AS VNDR_ABBR_NM, '' AS VNDR_LGL_ENG_NM, '' AS MFT_VNDR_SEQ, 
		'' AS DEL_CD, 'Total' AS CNTR_TPSZ_CD, X.RSLT_TP_SEQ, 
		DECODE(X.RSLT_TP_SEQ, 1, 'Plan', 2, 'PFMC', 3, 'Ratio') AS RSLT_TP, 
		SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) AS MNTH_01, 
		SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) AS MNTH_02, 
		SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) AS MNTH_03, 
		SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) AS MNTH_04, 
		SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) AS MNTH_05, 
		SUM(DECODE(X.DE_MON,'06',DE_QTY,0)) AS MNTH_06, 
		SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) AS MNTH_07, 
		SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) AS MNTH_08, 
		SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) AS MNTH_09, 
		SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) AS MNTH_10, 
		SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) AS MNTH_11, 
		SUM(DECODE(X.DE_MON,'12',DE_QTY,0)) AS MNTH_12, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRST_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS SCND_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS THRD_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRTH_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
              	+ SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS YR_TOT
FROM   	TEMP_DROP X, 
		MDM_VENDOR Y
WHERE  	Y.VNDR_SEQ = X.MFT_VNDR_SEQ
GROUP BY X.PLN_YRMON, X.AGMT_NO, X.DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ,X.REF_NO, X.RSLT_TP_SEQ
UNION ALL
SELECT 	X.PLN_YRMON, X.AGMT_NO, 'G.TTL' AS DE_YR, X.AGMT_CTY_CD, X.AGMT_SEQ, X.REF_NO,
		'' AS VNDR_ABBR_NM, '' AS VNDR_LGL_ENG_NM, '' AS MFT_VNDR_SEQ, 
		'' AS DEL_CD, '' AS CNTR_TPSZ_CD, X.RSLT_TP_SEQ, 
		DECODE(X.RSLT_TP_SEQ, 1, 'Plan', 2, 'PFMC', 3, 'Ratio') AS RSLT_TP, 
		SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) AS MNTH_01, 
		SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) AS MNTH_02, 
		SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) AS MNTH_03, 
		SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) AS MNTH_04, 
		SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) AS MNTH_05, 
		SUM(DECODE(X.DE_MON,'06',DE_QTY,0)) AS MNTH_06, 
		SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) AS MNTH_07, 
		SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) AS MNTH_08, 
		SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) AS MNTH_09, 
		SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) AS MNTH_10, 
		SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) AS MNTH_11, 
		SUM(DECODE(X.DE_MON,'12',DE_QTY,0)) AS MNTH_12, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRST_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS SCND_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS THRD_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS FRTH_QURT_TOT, 
		CASE WHEN X.RSLT_TP_SEQ = 1 OR X.RSLT_TP_SEQ = 2 
			 THEN SUM(DECODE(X.DE_MON,'01',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'02',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'03',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'04',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'05',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'06',DE_QTY,0))
                + SUM(DECODE(X.DE_MON,'07',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'08',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'09',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'10',DE_QTY,0)) 
				+ SUM(DECODE(X.DE_MON,'11',DE_QTY,0)) + SUM(DECODE(X.DE_MON,'12',DE_QTY,0))
             WHEN X.RSLT_TP_SEQ = 3 THEN 0 
		END AS YR_TOT
FROM   	TEMP_DROP X, 
		MDM_VENDOR Y
WHERE  	Y.VNDR_SEQ = X.MFT_VNDR_SEQ
GROUP BY X.PLN_YRMON, X.AGMT_NO, X.AGMT_CTY_CD, X.AGMT_SEQ,X.REF_NO, X.RSLT_TP_SEQ
ORDER BY PLN_YRMON, AGMT_NO, DE_YR, AGMT_CTY_CD, AGMT_SEQ, VNDR_LGL_ENG_NM,
         CNTR_TPSZ_CD, DEL_CD, VNDR_ABBR_NM, RSLT_TP_SEQ, RSLT_TP			]]></sql>
			<params>
				<param name="pln_yrmon" type="12" value="" out="N"/>
				<param name="agmt_cty_cd" type="12" value="" out="N"/>
				<param name="agmt_seq" type="2" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
