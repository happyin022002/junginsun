/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : CntrPlanMTRepoPlanDBDAOSearchMtyRepoPlanListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.20
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.20 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.cntrplanguide.cntrplanmtrepoplan.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CntrPlanMTRepoPlanDBDAOSearchMtyRepoPlanListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Mty Plan 조회
	  * </pre>
	  */
	public CntrPlanMTRepoPlanDBDAOSearchMtyRepoPlanListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvdRetrieveVal",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rcc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("loc_cd_second",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.cntrplanguide.cntrplanmtrepoplan.integration").append("\n"); 
		query.append("FileName : CntrPlanMTRepoPlanDBDAOSearchMtyRepoPlanListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VSL_HDR AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("    SELECT B.RCC_CD POL_RCC_CD" ).append("\n"); 
		query.append("          ,B.LCC_CD POL_LCC_CD" ).append("\n"); 
		query.append("          ,OFC.RCC_CD OFC_RCC_CD" ).append("\n"); 
		query.append("          ,OFC.LCC_CD OFC_LCC_CD" ).append("\n"); 
		query.append("          ,L.CONTI_CD POL_CONTI_CD" ).append("\n"); 
		query.append("          ,HDR.SLAN_CD" ).append("\n"); 
		query.append("          ,HDR.VSL_CD" ).append("\n"); 
		query.append("          ,HDR.SKD_VOY_NO" ).append("\n"); 
		query.append("          ,HDR.SKD_DIR_CD" ).append("\n"); 
		query.append("          ,HDR.POL_CD" ).append("\n"); 
		query.append("          ,HDR.POL_YD_CD " ).append("\n"); 
		query.append("          ,HDR.VPS_ETA_DT" ).append("\n"); 
		query.append("          ,HDR.VPS_ETD_DT" ).append("\n"); 
		query.append("          ,HDR.POD_CD" ).append("\n"); 
		query.append("          ,HDR.POD_YD_CD" ).append("\n"); 
		query.append("          ,HDR.POL_CLPT_SEQ" ).append("\n"); 
		query.append("          ,HDR.POD_CLPT_SEQ" ).append("\n"); 
		query.append("          ,HDR.EFF_ETA_DT " ).append("\n"); 
		query.append("          ,X.T_SLAN_CD" ).append("\n"); 
		query.append("          ,X.TRD_CD" ).append("\n"); 
		query.append("          ,X.SUB_TRD_CD" ).append("\n"); 
		query.append("          ,X.RLANE_CD" ).append("\n"); 
		query.append("          ,X.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("          ,X.FM_CONTI_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    FROM " ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        --------- VESSLE SKD - HEADER ---------" ).append("\n"); 
		query.append("        SELECT A.SLAN_CD" ).append("\n"); 
		query.append("              ,A.VSL_CD" ).append("\n"); 
		query.append("              ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("              ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("              ,A.VPS_PORT_CD POL_CD" ).append("\n"); 
		query.append("              ,A.YD_CD  POL_YD_CD" ).append("\n"); 
		query.append("              ,A.VPS_ETA_DT" ).append("\n"); 
		query.append("              ,A.VPS_ETD_DT" ).append("\n"); 
		query.append("              ,B.VPS_PORT_CD POD_CD" ).append("\n"); 
		query.append("              ,B.YD_CD POD_YD_CD" ).append("\n"); 
		query.append("              ,A.CLPT_SEQ AS POL_CLPT_SEQ" ).append("\n"); 
		query.append("              ,B.CLPT_SEQ AS POD_CLPT_SEQ" ).append("\n"); 
		query.append("              ,(  -- 첫번째 PORT의 ETA DATE" ).append("\n"); 
		query.append("                   SELECT TO_CHAR(MAX(V.VPS_ETA_DT),'YYYYMMDD') EFF_ETA_DT" ).append("\n"); 
		query.append("                   FROM VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("                   WHERE 1=1" ).append("\n"); 
		query.append("                   AND V.VSL_CD = A.VSL_CD" ).append("\n"); 
		query.append("                   AND V.SKD_VOY_NO = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                   AND V.SKD_DIR_CD = A.SKD_DIR_CD" ).append("\n"); 
		query.append("                   AND V.SLAN_CD = A.SLAN_CD" ).append("\n"); 
		query.append("                   AND V.CLPT_SEQ = 1" ).append("\n"); 
		query.append("                   AND V.CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("              ) EFF_ETA_DT" ).append("\n"); 
		query.append("        FROM " ).append("\n"); 
		query.append("        (  -- POL PORT" ).append("\n"); 
		query.append("            SELECT A.SLAN_CD" ).append("\n"); 
		query.append("                  ,A.VSL_CD" ).append("\n"); 
		query.append("                  ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                  ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                  ,A.VPS_PORT_CD" ).append("\n"); 
		query.append("                  ,A.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                  ,A.CLPT_SEQ" ).append("\n"); 
		query.append("                  ,A.YD_CD" ).append("\n"); 
		query.append("                  ,A.VPS_ETA_DT" ).append("\n"); 
		query.append("                  ,A.VPS_ETD_DT" ).append("\n"); 
		query.append("            FROM VSK_VSL_PORT_SKD A" ).append("\n"); 
		query.append("                ,MDM_LOCATION     L" ).append("\n"); 
		query.append("                ,MDM_EQ_ORZ_CHT   B" ).append("\n"); 
		query.append("            WHERE VSL_CD     = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND   SKD_VOY_NO = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND   SKD_DIR_CD = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            AND   NVL(SKD_CNG_STS_CD,'X') <> 'S' -- SKIP 은 제찬" ).append("\n"); 
		query.append("            AND   CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("            AND   YD_CD NOT IN ('PAPACT1','EGSUZT1')" ).append("\n"); 
		query.append("            AND   VPS_PORT_CD = L.LOC_CD" ).append("\n"); 
		query.append("            AND   L.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("            AND   NVL(L.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("            AND   NVL(B.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("            -- 마지막 PORT 제외 로직(마지막은 POL 로 인정안함, 2013-12-12, 신용찬)" ).append("\n"); 
		query.append("            AND   CLPT_SEQ <> (" ).append("\n"); 
		query.append("                     SELECT MAX(X.CLPT_SEQ) FROM VSK_VSL_PORT_SKD X" ).append("\n"); 
		query.append("                     WHERE X.VSL_CD     = A.VSL_CD" ).append("\n"); 
		query.append("                     AND   X.SKD_VOY_NO = A.SKD_VOY_NO" ).append("\n"); 
		query.append("                     AND   X.SKD_DIR_CD = A.SKD_DIR_CD" ).append("\n"); 
		query.append("                  )  " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("			#if (${rcc_cd} != '') " ).append("\n"); 
		query.append("			AND B.RCC_CD = @[rcc_cd]" ).append("\n"); 
		query.append("			#else " ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			  " ).append("\n"); 
		query.append("            #if (${loc_tp_cd_second} == 'L') " ).append("\n"); 
		query.append("			  #if (${loc_cd_second} != '') " ).append("\n"); 
		query.append("			AND B.LCC_CD = @[loc_cd_second]" ).append("\n"); 
		query.append("			  #else " ).append("\n"); 
		query.append("			  #end" ).append("\n"); 
		query.append("			#elseif (${loc_tp_cd_second} == 'E') " ).append("\n"); 
		query.append("			  #if (${loc_cd_second} != '') " ).append("\n"); 
		query.append("			AND B.ECC_CD = @[loc_cd_second]" ).append("\n"); 
		query.append("			  #else " ).append("\n"); 
		query.append("			  #end" ).append("\n"); 
		query.append("			#elseif (${loc_tp_cd_second} == 'S') " ).append("\n"); 
		query.append("			  #if (${loc_cd_second} != '') " ).append("\n"); 
		query.append("			AND B.SCC_CD = @[loc_cd_second]" ).append("\n"); 
		query.append("			  #else " ).append("\n"); 
		query.append("			  #end" ).append("\n"); 
		query.append("			#end              " ).append("\n"); 
		query.append("		) A" ).append("\n"); 
		query.append("        ,(" ).append("\n"); 
		query.append("            -- POD PORT" ).append("\n"); 
		query.append("            SELECT VSL_CD" ).append("\n"); 
		query.append("                  ,SKD_VOY_NO" ).append("\n"); 
		query.append("                  ,SKD_DIR_CD" ).append("\n"); 
		query.append("                  ,VPS_PORT_CD" ).append("\n"); 
		query.append("                  ,CLPT_IND_SEQ" ).append("\n"); 
		query.append("                  ,CLPT_SEQ" ).append("\n"); 
		query.append("                  ,YD_CD" ).append("\n"); 
		query.append("                  ,VPS_ETA_DT" ).append("\n"); 
		query.append("                  ,VPS_ETD_DT" ).append("\n"); 
		query.append("            FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("            WHERE VSL_CD     = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND   SKD_VOY_NO = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND   SKD_DIR_CD = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            AND   NVL(SKD_CNG_STS_CD,'X') <> 'S' -- SKIP 은 제외" ).append("\n"); 
		query.append("            AND   CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("            AND   YD_CD NOT IN ('PAPACT1','EGSUZT1')" ).append("\n"); 
		query.append("        ) B" ).append("\n"); 
		query.append("        WHERE A.CLPT_SEQ <= B.CLPT_SEQ" ).append("\n"); 
		query.append("    ) HDR" ).append("\n"); 
		query.append("    ,MDM_LOCATION L" ).append("\n"); 
		query.append("    ,MDM_EQ_ORZ_CHT B" ).append("\n"); 
		query.append("    ,(" ).append("\n"); 
		query.append("        SELECT A.SLAN_CD   T_SLAN_CD" ).append("\n"); 
		query.append("              ,A.TRD_CD" ).append("\n"); 
		query.append("              ,B.SUB_TRD_CD" ).append("\n"); 
		query.append("              ,A.RLANE_CD" ).append("\n"); 
		query.append("              ,A.DIR_CD    VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("              ,A.CONTI_CD  FM_CONTI_CD" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT TRD_CD" ).append("\n"); 
		query.append("                  ,RLANE_CD" ).append("\n"); 
		query.append("                  ,SLAN_CD" ).append("\n"); 
		query.append("                  ,LST_LODG_PORT_CD" ).append("\n"); 
		query.append("                  ,(SELECT X.CONTI_CD FROM MDM_LOCATION X WHERE X.LOC_CD = LST_LODG_PORT_CD) CONTI_CD" ).append("\n"); 
		query.append("                  ,IOC_CD" ).append("\n"); 
		query.append("                  ,VSL_CD" ).append("\n"); 
		query.append("                  ,SKD_VOY_NO" ).append("\n"); 
		query.append("                  ,DIR_CD    " ).append("\n"); 
		query.append("            FROM " ).append("\n"); 
		query.append("            (" ).append("\n"); 
		query.append("                SELECT * FROM MAS_MON_VVD" ).append("\n"); 
		query.append("                        WHERE VSL_CD     = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("                        AND   SKD_VOY_NO = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("                        AND   DIR_CD     = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("                        AND   DELT_FLG   = 'N'" ).append("\n"); 
		query.append("                ORDER BY LST_LODG_PORT_ETD_DT ASC, IOC_CD DESC  -- 가장먼저 출발하는 대륙의 PORT 검색, 동일 ETD DATE 인 경우 IOC 는 O 부터 추출" ).append("\n"); 
		query.append("            )" ).append("\n"); 
		query.append("            WHERE ROWNUM=1" ).append("\n"); 
		query.append("        ) A" ).append("\n"); 
		query.append("        ,MDM_DTL_REV_LANE B" ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        WHERE A.RLANE_CD = B.RLANE_CD" ).append("\n"); 
		query.append("        AND   A.DIR_CD   = B.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("        AND   A.IOC_CD   = B.IOC_CD" ).append("\n"); 
		query.append("        AND   A.TRD_CD   = B.TRD_CD" ).append("\n"); 
		query.append("        AND   ROWNUM=1" ).append("\n"); 
		query.append("    ) X" ).append("\n"); 
		query.append("   ,(    -- PLAN 수정가능한 ROW 선택 로직에 필요" ).append("\n"); 
		query.append("         SELECT RCC_CD " ).append("\n"); 
		query.append("               ,LCC_CD" ).append("\n"); 
		query.append("         FROM MDM_EQ_ORZ_CHT A" ).append("\n"); 
		query.append("             ,MDM_LOCATION   B" ).append("\n"); 
		query.append("             ,(" ).append("\n"); 
		query.append("                  SELECT LOC_CD " ).append("\n"); 
		query.append("                  FROM MDM_ORGANIZATION" ).append("\n"); 
		query.append("                  WHERE OFC_CD = @[ofc_cd] -- LOGIN OFC CODE" ).append("\n"); 
		query.append("              ) C" ).append("\n"); 
		query.append("         WHERE A.SCC_CD = B.SCC_CD" ).append("\n"); 
		query.append("         AND   B.LOC_CD = C.LOC_CD" ).append("\n"); 
		query.append("         AND   ROWNUM=1          " ).append("\n"); 
		query.append("    ) OFC  " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    WHERE 1=1" ).append("\n"); 
		query.append("    --AND HDR.SLAN_CD    = X.T_SLAN_CD" ).append("\n"); 
		query.append("    --AND HDR.SKD_DIR_CD = X.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("    AND HDR.POL_CD     = L.LOC_CD" ).append("\n"); 
		query.append("    AND L.SCC_CD       = B.SCC_CD" ).append("\n"); 
		query.append("    AND NVL(L.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("    AND NVL(B.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("    #if (${rcc_cd} != '') " ).append("\n"); 
		query.append("    AND B.RCC_CD = @[rcc_cd]" ).append("\n"); 
		query.append("    #else " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    #if (${loc_tp_cd_second} == 'L') " ).append("\n"); 
		query.append("    #if (${loc_cd_second} != '') " ).append("\n"); 
		query.append("    AND B.LCC_CD = @[loc_cd_second]" ).append("\n"); 
		query.append("    #else " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    #elseif (${loc_tp_cd_second} == 'E') " ).append("\n"); 
		query.append("    #if (${loc_cd_second} != '') " ).append("\n"); 
		query.append("    AND B.ECC_CD = @[loc_cd_second]" ).append("\n"); 
		query.append("    #else " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    #elseif (${loc_tp_cd_second} == 'S') " ).append("\n"); 
		query.append("    #if (${loc_cd_second} != '') " ).append("\n"); 
		query.append("    AND B.SCC_CD = @[loc_cd_second]" ).append("\n"); 
		query.append("    #else " ).append("\n"); 
		query.append("    #end" ).append("\n"); 
		query.append("    #end    " ).append("\n"); 
		query.append("    " ).append("\n"); 
		query.append("    ORDER BY POL_CLPT_SEQ" ).append("\n"); 
		query.append("            ,POD_CLPT_SEQ" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("     R.IBFLAG" ).append("\n"); 
		query.append("    ,R.RNK" ).append("\n"); 
		query.append("    ,R.MTY_VVD_CD" ).append("\n"); 
		query.append("    ,R.TRD_CD" ).append("\n"); 
		query.append("    ,R.SUB_TRD_CD" ).append("\n"); 
		query.append("    ,R.SLAN_CD" ).append("\n"); 
		query.append("    ,R.VVD_CD" ).append("\n"); 
		query.append("    ,R.POL_YD_CD" ).append("\n"); 
		query.append("    ,R.POL_RCC_CD" ).append("\n"); 
		query.append("    ,R.POL_LCC_CD" ).append("\n"); 
		query.append("    ,R.OFC_RCC_CD" ).append("\n"); 
		query.append("    ,R.OFC_LCC_CD" ).append("\n"); 
		query.append("    ,R.POL_CONTI_CD" ).append("\n"); 
		query.append("    ,R.GL_RCC_CD" ).append("\n"); 
		query.append("    ,R.ETA_DT" ).append("\n"); 
		query.append("    ,R.ETD_DT" ).append("\n"); 
		query.append("    ,R.FNL_CBF_DT" ).append("\n"); 
		query.append("    ,R.FNL_CBF_FLG" ).append("\n"); 
		query.append("    ,R.FNL_CBF_FLG2" ).append("\n"); 
		query.append("    ,CASE" ).append("\n"); 
		query.append("	WHEN R.POD_YD_CD='+'" ).append("\n"); 
		query.append("	THEN NVL((" ).append("\n"); 
		query.append("            SELECT (" ).append("\n"); 
		query.append("                      SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                        FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                             MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                       WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                         AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                         AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                         AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                         AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                         AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND A.BSA_OP_JB_CD(+) = DECODE('1', '1', '007', '016')" ).append("\n"); 
		query.append("                         AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                         AND A.PORT_CD     (+) = R.POL_YD_CD" ).append("\n"); 
		query.append("                   ) AS BSA" ).append("\n"); 
		query.append("              FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("             WHERE C.TRD_CD       = R.TRD_CD" ).append("\n"); 
		query.append("		       AND C.RLANE_CD     = R.SLAN_CD||SUBSTR(R.TRD_CD,1,2)" ).append("\n"); 
		query.append("               AND C.VSL_CD       = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("               AND C.SKD_VOY_NO   = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("               AND C.SKD_DIR_CD   = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("               AND C.BSA_OP_JB_CD = DECODE('1', '1', '007', '009')" ).append("\n"); 
		query.append("               AND C.CRR_CD       = 'SML'  " ).append("\n"); 
		query.append("			   AND ROWNUM = 1     " ).append("\n"); 
		query.append("        ),0)" ).append("\n"); 
		query.append("        -" ).append("\n"); 
		query.append("        NVL((" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                DECODE('1', '1', S.BKG_OBRD_TTL_TEU_QTY, S.BKG_OBRD_TTL_WGT)" ).append("\n"); 
		query.append("            FROM EQR_CTRL_FULL_LOD_SNAP S" ).append("\n"); 
		query.append("            WHERE 1=1" ).append("\n"); 
		query.append("            AND S.VSL_CD        = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND S.SKD_VOY_NO    = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND S.SKD_DIR_CD    = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            AND S.POL_YD_CD     = R.POL_YD_CD" ).append("\n"); 
		query.append("			AND S.CLPT_SEQ      = R.POL_CLPT_SEQ" ).append("\n"); 
		query.append("        ),0)" ).append("\n"); 
		query.append("	ELSE TO_NUMBER('')" ).append("\n"); 
		query.append("	END  AVL_TEU" ).append("\n"); 
		query.append("	,CASE" ).append("\n"); 
		query.append("	WHEN R.POD_YD_CD='+'" ).append("\n"); 
		query.append("	THEN NVL((" ).append("\n"); 
		query.append("            SELECT (" ).append("\n"); 
		query.append("                      SELECT NVL(MAX(DECODE(B.STUP_FLG, 'Y', DECODE(A.PORT_BSA_CAPA, 0, NULL, A.PORT_BSA_CAPA))), C.CRR_BSA_CAPA) BSA" ).append("\n"); 
		query.append("                        FROM BSA_VVD_PORT_DWN A," ).append("\n"); 
		query.append("                             MAS_LANE_RGST    B" ).append("\n"); 
		query.append("                       WHERE B.RLANE_CD        = C.RLANE_CD" ).append("\n"); 
		query.append("                         AND B.TRD_CD          = C.TRD_CD" ).append("\n"); 
		query.append("                         AND B.DIR_CD          = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND A.TRD_CD      (+) = C.TRD_CD" ).append("\n"); 
		query.append("                         AND A.RLANE_CD    (+) = C.RLANE_CD" ).append("\n"); 
		query.append("                         AND A.VSL_CD      (+) = C.VSL_CD" ).append("\n"); 
		query.append("                         AND A.SKD_VOY_NO  (+) = C.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND A.SKD_DIR_CD  (+) = C.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND A.BSA_OP_JB_CD(+) = DECODE('2', '1', '007', '016')" ).append("\n"); 
		query.append("                         AND A.CRR_CD      (+) = C.CRR_CD" ).append("\n"); 
		query.append("                         AND A.PORT_CD     (+) = R.POL_YD_CD" ).append("\n"); 
		query.append("                   ) AS BSA" ).append("\n"); 
		query.append("              FROM BSA_VVD_OTR_CRR C" ).append("\n"); 
		query.append("             WHERE C.TRD_CD       = R.TRD_CD" ).append("\n"); 
		query.append("		       AND C.RLANE_CD     = R.SLAN_CD||SUBSTR(R.TRD_CD,1,2)" ).append("\n"); 
		query.append("               AND C.VSL_CD       = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("               AND C.SKD_VOY_NO   = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("               AND C.SKD_DIR_CD   = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("               AND C.BSA_OP_JB_CD = DECODE('2', '1', '007', '009')" ).append("\n"); 
		query.append("               AND C.CRR_CD       = 'SML'   " ).append("\n"); 
		query.append("			   AND ROWNUM = 1    " ).append("\n"); 
		query.append("        ),0)" ).append("\n"); 
		query.append("        -" ).append("\n"); 
		query.append("        NVL((" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                DECODE('1', '1', BKG_OBRD_TTL_TEU_QTY, S.BKG_OBRD_TTL_WGT)" ).append("\n"); 
		query.append("            FROM EQR_CTRL_FULL_LOD_SNAP S" ).append("\n"); 
		query.append("            WHERE 1=1" ).append("\n"); 
		query.append("            AND S.VSL_CD        = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND S.SKD_VOY_NO    = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND S.SKD_DIR_CD    = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            AND S.POL_YD_CD     = R.POL_YD_CD" ).append("\n"); 
		query.append("			AND S.CLPT_SEQ      = R.POL_CLPT_SEQ" ).append("\n"); 
		query.append("        ),0)" ).append("\n"); 
		query.append("	ELSE TO_NUMBER('')" ).append("\n"); 
		query.append("	END  AVL_TON" ).append("\n"); 
		query.append("    ,R.MTY_PLN_TEU" ).append("\n"); 
		query.append("    ,R.MTY_PLN_TON" ).append("\n"); 
		query.append("    ,R.MTY_LODG_PLN_TEU" ).append("\n"); 
		query.append("    ,R.MTY_LODG_PLN_TON" ).append("\n"); 
		query.append("    ,R.MTY_LODG_D2" ).append("\n"); 
		query.append("    ,R.MTY_LODG_D4" ).append("\n"); 
		query.append("    ,R.MTY_LODG_D5" ).append("\n"); 
		query.append("    ,R.MTY_LODG_D7" ).append("\n"); 
		query.append("    ,R.MTY_LODG_R2" ).append("\n"); 
		query.append("    ,R.MTY_LODG_R5" ).append("\n"); 
		query.append("    ,R.MTY_LODG_R9" ).append("\n"); 
		query.append("    ,R.MTY_LODG_O2" ).append("\n"); 
		query.append("    ,R.MTY_LODG_O4" ).append("\n"); 
		query.append("    ,R.MTY_LODG_S2" ).append("\n"); 
		query.append("    ,R.MTY_LODG_S4" ).append("\n"); 
		query.append("    ,R.MTY_LODG_F2" ).append("\n"); 
		query.append("    ,R.MTY_LODG_F4" ).append("\n"); 
		query.append("    ,R.MTY_LODG_F5" ).append("\n"); 
		query.append("    ,R.MTY_LODG_A2" ).append("\n"); 
		query.append("    ,R.MTY_LODG_A4" ).append("\n"); 
		query.append("    ,R.MTY_LODG_A5" ).append("\n"); 
		query.append("    ,R.MTY_PLN_SHW_FLG" ).append("\n"); 
		query.append("    ,R.POD_YD_CD " ).append("\n"); 
		query.append("    ,R.LVL" ).append("\n"); 
		query.append("    ,R.POD_YD_CD2" ).append("\n"); 
		query.append("    ,R.GL_POD_FLG" ).append("\n"); 
		query.append("    ,R.GL_QTY_D2" ).append("\n"); 
		query.append("    ,R.GL_UT_D2" ).append("\n"); 
		query.append("    ,R.GL_QTY_D4" ).append("\n"); 
		query.append("    ,R.GL_UT_D4" ).append("\n"); 
		query.append("    ,R.GL_QTY_D5" ).append("\n"); 
		query.append("    ,R.GL_UT_D5" ).append("\n"); 
		query.append("    ,R.GL_QTY_D7" ).append("\n"); 
		query.append("    ,R.GL_UT_D7" ).append("\n"); 
		query.append("    ,R.GL_QTY_R2" ).append("\n"); 
		query.append("    ,R.GL_UT_R2" ).append("\n"); 
		query.append("    ,R.GL_QTY_R5" ).append("\n"); 
		query.append("    ,R.GL_UT_R5" ).append("\n"); 
		query.append("    ,R.GL_QTY_R9" ).append("\n"); 
		query.append("    ,R.GL_UT_R9" ).append("\n"); 
		query.append("    ,R.GL_QTY_O2" ).append("\n"); 
		query.append("    ,R.GL_UT_O2" ).append("\n"); 
		query.append("    ,R.GL_QTY_O4" ).append("\n"); 
		query.append("    ,R.GL_UT_O4" ).append("\n"); 
		query.append("    ,R.GL_QTY_S2" ).append("\n"); 
		query.append("    ,R.GL_UT_S2" ).append("\n"); 
		query.append("    ,R.GL_QTY_S4" ).append("\n"); 
		query.append("    ,R.GL_UT_S4" ).append("\n"); 
		query.append("    ,R.GL_QTY_F2" ).append("\n"); 
		query.append("    ,R.GL_UT_F2" ).append("\n"); 
		query.append("    ,R.GL_QTY_F4" ).append("\n"); 
		query.append("    ,R.GL_UT_F4" ).append("\n"); 
		query.append("    ,R.GL_QTY_F5" ).append("\n"); 
		query.append("    ,R.GL_UT_F5" ).append("\n"); 
		query.append("    ,R.GL_QTY_A2" ).append("\n"); 
		query.append("    ,R.GL_UT_A2" ).append("\n"); 
		query.append("    ,R.GL_QTY_A4" ).append("\n"); 
		query.append("    ,R.GL_UT_A4" ).append("\n"); 
		query.append("    ,R.GL_QTY_A5" ).append("\n"); 
		query.append("    ,R.GL_UT_A5" ).append("\n"); 
		query.append("    ,R.REPO_GLINE_RMK" ).append("\n"); 
		query.append("    ,R.MTY_BKG_TEU" ).append("\n"); 
		query.append("    ,R.MTY_BKG_QTY" ).append("\n"); 
		query.append("    ,R.MTY_BKG_D2" ).append("\n"); 
		query.append("    ,R.MTY_BKG_D4" ).append("\n"); 
		query.append("    ,R.MTY_BKG_D5" ).append("\n"); 
		query.append("    ,R.MTY_BKG_D7" ).append("\n"); 
		query.append("    ,R.MTY_BKG_R2" ).append("\n"); 
		query.append("    ,R.MTY_BKG_R5" ).append("\n"); 
		query.append("    ,R.MTY_BKG_R9" ).append("\n"); 
		query.append("    ,R.MTY_BKG_O2" ).append("\n"); 
		query.append("    ,R.MTY_BKG_O4" ).append("\n"); 
		query.append("    ,R.MTY_BKG_S2" ).append("\n"); 
		query.append("    ,R.MTY_BKG_S4" ).append("\n"); 
		query.append("    ,R.MTY_BKG_F2" ).append("\n"); 
		query.append("    ,R.MTY_BKG_F4" ).append("\n"); 
		query.append("    ,R.MTY_BKG_F5" ).append("\n"); 
		query.append("    ,R.MTY_BKG_A2" ).append("\n"); 
		query.append("    ,R.MTY_BKG_A4" ).append("\n"); 
		query.append("    ,R.MTY_BKG_A5" ).append("\n"); 
		query.append("    ,R.PLN_RSN_HDR_CD" ).append("\n"); 
		query.append("    ,R.PLN_RSN_SUB_CD" ).append("\n"); 
		query.append("    ,R.PLN_RSN_RMK" ).append("\n"); 
		query.append("    ,R.POL_CD" ).append("\n"); 
		query.append("    ,R.POD_CD" ).append("\n"); 
		query.append("    ,R.VSL_CD" ).append("\n"); 
		query.append("    ,R.SKD_VOY_NO" ).append("\n"); 
		query.append("    ,R.SKD_DIR_CD" ).append("\n"); 
		query.append("    ,R.POL_CLPT_SEQ" ).append("\n"); 
		query.append("    ,R.POD_CLPT_SEQ" ).append("\n"); 
		query.append("    ,R.CRE_OFC_CD" ).append("\n"); 
		query.append("    ,R.CRE_CONTI_CD" ).append("\n"); 
		query.append("    ,R.ETA_PAST_FLG -- ETA가 DB의 SYSDATE 이전인가" ).append("\n"); 
		query.append("    ,R.ETD_PAST_FLG -- ETD가 DB의 SYSDATE 이전인가" ).append("\n"); 
		query.append("    ,NVL((" ).append("\n"); 
		query.append("        SELECT MAX(S.ALOC_HC_CALC_QTY) ALOC_HC_CALC_QTY" ).append("\n"); 
		query.append("        FROM SPC_LANE_RGST S" ).append("\n"); 
		query.append("        WHERE 1=1" ).append("\n"); 
		query.append("        AND S.REP_TRD_CD = R.TRD_CD" ).append("\n"); 
		query.append("        AND S.SUB_TRD_CD = R.SUB_TRD_CD" ).append("\n"); 
		query.append("        AND S.RLANE_CD = R.SLAN_CD||SUBSTR(R.TRD_CD,1,2)" ).append("\n"); 
		query.append("        AND S.DIR_CD = SUBSTR(R.VVD_CD,9)" ).append("\n"); 
		query.append("        AND SYSDATE BETWEEN TO_DATE(S.EFF_FM_DT,'YYYYMMDD') AND TO_DATE(S.EFF_TO_DT,'YYYYMMDD')" ).append("\n"); 
		query.append("    ),'2') ALOC_HC_CALC_QTY" ).append("\n"); 
		query.append("    ,NVL((" ).append("\n"); 
		query.append("        SELECT MAX(S.ALOC_45FT_CALC_QTY) ALOC_45FT_CALC_QTY" ).append("\n"); 
		query.append("        FROM SPC_LANE_RGST S" ).append("\n"); 
		query.append("        WHERE 1=1" ).append("\n"); 
		query.append("        AND S.REP_TRD_CD = R.TRD_CD" ).append("\n"); 
		query.append("        AND S.SUB_TRD_CD = R.SUB_TRD_CD" ).append("\n"); 
		query.append("        AND S.RLANE_CD = R.SLAN_CD||SUBSTR(R.TRD_CD,1,2)" ).append("\n"); 
		query.append("        AND S.DIR_CD = SUBSTR(R.VVD_CD,9)" ).append("\n"); 
		query.append("        AND SYSDATE BETWEEN TO_DATE(S.EFF_FM_DT,'YYYYMMDD') AND TO_DATE(S.EFF_TO_DT,'YYYYMMDD')" ).append("\n"); 
		query.append("    ),'2') ALOC_45FT_CALC_QTY" ).append("\n"); 
		query.append("    ,R.EFF_ETA_DT" ).append("\n"); 
		query.append("FROM (" ).append("\n"); 
		query.append("    SELECT" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN MTY.VSL_CD IS NULL" ).append("\n"); 
		query.append("        THEN 'I'" ).append("\n"); 
		query.append("        ELSE ''" ).append("\n"); 
		query.append("        END IBFLAG" ).append("\n"); 
		query.append("        ,DENSE_RANK() OVER (PARTITION BY HDR.VSL_CD,HDR.SKD_VOY_NO,HDR.SKD_DIR_CD ORDER BY HDR.TRD_CD,HDR.SUB_TRD_CD) RNK" ).append("\n"); 
		query.append("        ,MTY.VSL_CD||MTY.SKD_VOY_NO||MTY.SKD_DIR_CD MTY_VVD_CD" ).append("\n"); 
		query.append("        ,NVL(HDR.TRD_CD,' ') TRD_CD" ).append("\n"); 
		query.append("        ,NVL(HDR.SUB_TRD_CD,' ') SUB_TRD_CD" ).append("\n"); 
		query.append("        ,HDR.SLAN_CD" ).append("\n"); 
		query.append("        ,HDR.VSL_CD||HDR.SKD_VOY_NO||HDR.SKD_DIR_CD VVD_CD" ).append("\n"); 
		query.append("        ,HDR.POL_YD_CD" ).append("\n"); 
		query.append("        ,HDR.POL_RCC_CD" ).append("\n"); 
		query.append("        ,HDR.POL_LCC_CD" ).append("\n"); 
		query.append("        ,HDR.OFC_RCC_CD" ).append("\n"); 
		query.append("        ,HDR.OFC_LCC_CD" ).append("\n"); 
		query.append("        ,GL.GL_RCC_CD" ).append("\n"); 
		query.append("        ,HDR.POL_CONTI_CD" ).append("\n"); 
		query.append("        ,TO_CHAR(HDR.VPS_ETA_DT,'MM/DD HH24:MI') AS ETA_DT" ).append("\n"); 
		query.append("        ,TO_CHAR(HDR.VPS_ETD_DT,'MM/DD HH24:MI') AS ETD_DT" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN TO_CHAR(MTY.FNL_CBF_DT,'YYYY/MM/DD') -- 요구사항변경 'MM/DD HH24:MI' -> 'YYYY/MM/DD'" ).append("\n"); 
		query.append("        ELSE ''" ).append("\n"); 
		query.append("        END FNL_CBF_DT" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN NVL(DECODE(MTY.FNL_CBF_FLG,'Y','1','0'),'0')" ).append("\n"); 
		query.append("        ELSE ''" ).append("\n"); 
		query.append("        END FNL_CBF_FLG" ).append("\n"); 
		query.append("        , NVL(DECODE(MTY.FNL_CBF_FLG,'Y','1','0'),'0') FNL_CBF_FLG2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN MTY.LODG_TEU" ).append("\n"); 
		query.append("        ELSE TO_NUMBER('')" ).append("\n"); 
		query.append("        END MTY_PLN_TEU" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN MTY.LODG_TEU*2.2" ).append("\n"); 
		query.append("        ELSE TO_NUMBER('')" ).append("\n"); 
		query.append("        END MTY_PLN_TON" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN (MTY.GRP_LODG_D2 + 2*(MTY.GRP_LODG_D4 + MTY.GRP_LODG_D5 + MTY.GRP_LODG_D7 + MTY.GRP_LODG_R2 + MTY.GRP_LODG_R5 + MTY.GRP_LODG_R9 + MTY.GRP_LODG_O2 + MTY.GRP_LODG_O4 + MTY.GRP_LODG_S2 + MTY.GRP_LODG_S4 + MTY.GRP_LODG_F2 + MTY.GRP_LODG_F4 + MTY.GRP_LODG_F5 + MTY.GRP_LODG_A2 + MTY.GRP_LODG_A4 + MTY.GRP_LODG_A5))" ).append("\n"); 
		query.append("        ELSE TO_NUMBER('')" ).append("\n"); 
		query.append("        END MTY_LODG_PLN_TEU" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN (MTY.GRP_LODG_D2 + MTY.GRP_LODG_D4 + MTY.GRP_LODG_D5 + MTY.GRP_LODG_D7 + MTY.GRP_LODG_R2 + MTY.GRP_LODG_R5 + MTY.GRP_LODG_R9 + MTY.GRP_LODG_O2 + MTY.GRP_LODG_O4 + MTY.GRP_LODG_S2 + MTY.GRP_LODG_S4 + MTY.GRP_LODG_F2 + MTY.GRP_LODG_F4 + MTY.GRP_LODG_F5 + MTY.GRP_LODG_A2 + MTY.GRP_LODG_A4 + MTY.GRP_LODG_A5)" ).append("\n"); 
		query.append("        ELSE TO_NUMBER('')" ).append("\n"); 
		query.append("        END MTY_LODG_PLN_TON" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_D2" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_D2,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_D2,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_D2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_D4" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_D4,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_D4,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_D4" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_D5" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_D5,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_D5,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_D5" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_D7" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_D7,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_D7,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_D7" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_R2" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_R2,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_R2,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_R2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_R5" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_R5,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_R5,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_R5" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_R9" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_R9,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_R9,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_R9" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_O2" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_O2,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_O2,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_O2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_O4" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_O4,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_O4,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_O4" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_S2" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_S2,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_S2,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_S2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_S4" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_S4,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_S4,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_S4" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_F2" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_F2,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_F2,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_F2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_F4" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_F4,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_F4,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_F4" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_F5" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_F5,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_F5,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_F5" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_A2" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_A2,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_A2,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_A2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_A4" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_A4,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_A4,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_A4" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN GRP_LODG_A5" ).append("\n"); 
		query.append("        ELSE DECODE(NVL(MTY.LODG_A5,TO_NUMBER('')),'0',TO_NUMBER(''),NVL(MTY.LODG_A5,TO_NUMBER('')))" ).append("\n"); 
		query.append("        END MTY_LODG_A5" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN ''" ).append("\n"); 
		query.append("        ELSE NVL(DECODE(MTY.MTY_PLN_SHW_FLG,'Y','1','0'),'0')" ).append("\n"); 
		query.append("        END MTY_PLN_SHW_FLG" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN '+'" ).append("\n"); 
		query.append("        ELSE HDR.POD_YD_CD" ).append("\n"); 
		query.append("        END POD_YD_CD" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD" ).append("\n"); 
		query.append("        THEN '0'" ).append("\n"); 
		query.append("        ELSE '1'" ).append("\n"); 
		query.append("        END LVL" ).append("\n"); 
		query.append("        ,HDR.POD_YD_CD POD_YD_CD2" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN GL.POD_CD = HDR.POD_CD" ).append("\n"); 
		query.append("        THEN 'T'" ).append("\n"); 
		query.append("        ELSE 'F'" ).append("\n"); 
		query.append("        END AS GL_POD_FLG" ).append("\n"); 
		query.append("        ,CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_D2 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_D2||' / '||DECODE(GL.GL_TP_D2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D2,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_D2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D2,''))" ).append("\n"); 
		query.append("        END GL_QTY_D2 ," ).append("\n"); 
		query.append("        GL.GL_TP_D2 GL_UT_D2 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_D4 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_D4||' / '||DECODE(GL.GL_TP_D4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D4,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_D4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D4,''))" ).append("\n"); 
		query.append("        END GL_QTY_D4 ," ).append("\n"); 
		query.append("        GL.GL_TP_D4 GL_UT_D4 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_D5 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_D5||' / '||DECODE(GL.GL_TP_D5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D5,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_D5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D5,''))" ).append("\n"); 
		query.append("        END GL_QTY_D5 ," ).append("\n"); 
		query.append("        GL.GL_TP_D5 GL_UT_D5 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_D7 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_D7||' / '||DECODE(GL.GL_TP_D7, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D7,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_D7, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_D7,''))" ).append("\n"); 
		query.append("        END GL_QTY_D7 ," ).append("\n"); 
		query.append("        GL.GL_TP_D7 GL_UT_D7 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_R2 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_R2||' / '||DECODE(GL.GL_TP_R2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_R2,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_R2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_R2,''))" ).append("\n"); 
		query.append("        END GL_QTY_R2 ," ).append("\n"); 
		query.append("        GL.GL_TP_R2 GL_UT_R2 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_R5 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_R5||' / '||DECODE(GL.GL_TP_R5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_R5,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_R5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_R5,''))" ).append("\n"); 
		query.append("        END GL_QTY_R5 ," ).append("\n"); 
		query.append("        GL.GL_TP_R5 GL_UT_R5 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_R9 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_R9||' / '||DECODE(GL.GL_TP_R9, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_R9,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_R9, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_R9,''))" ).append("\n"); 
		query.append("        END GL_QTY_R9 ," ).append("\n"); 
		query.append("        GL.GL_TP_R9 GL_UT_R9 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_O2 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_O2||'  /'||DECODE(GL.GL_TP_O2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_O2,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_O2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_O2,''))" ).append("\n"); 
		query.append("        END GL_QTY_O2 ," ).append("\n"); 
		query.append("        GL.GL_TP_O2 GL_UT_O2 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_O4 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_O4||' / '||DECODE(GL.GL_TP_O4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_O4,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_O4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_O4,''))" ).append("\n"); 
		query.append("        END GL_QTY_O4 ," ).append("\n"); 
		query.append("        GL.GL_TP_O4 GL_UT_O4 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_S2 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_S2||' / '||DECODE(GL.GL_TP_S2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_S2,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_S2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_S2,''))" ).append("\n"); 
		query.append("        END GL_QTY_S2 ," ).append("\n"); 
		query.append("        GL.GL_TP_S2 GL_UT_S2 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_S4 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_S4||' / '||DECODE(GL.GL_TP_S4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_S4,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_S4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_S4,''))" ).append("\n"); 
		query.append("        END GL_QTY_S4 ," ).append("\n"); 
		query.append("        GL.GL_TP_S4 GL_UT_S4 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_F2 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_F2||' / '||DECODE(GL.GL_TP_F2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_F2,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_F2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_F2,''))" ).append("\n"); 
		query.append("        END GL_QTY_F2 ," ).append("\n"); 
		query.append("        GL.GL_TP_F2 GL_UT_F2 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_F4 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_F4||' / '||DECODE(GL.GL_TP_F4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_F4,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_F4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_F4,''))" ).append("\n"); 
		query.append("        END GL_QTY_F4 ," ).append("\n"); 
		query.append("        GL.GL_TP_F4 GL_UT_F4 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_F5 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_F5||' / '||DECODE(GL.GL_TP_F5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_F5,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_F5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_F5,''))" ).append("\n"); 
		query.append("        END GL_QTY_F5 ," ).append("\n"); 
		query.append("        GL.GL_TP_F5 GL_UT_F5 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_A2 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_A2||' / '||DECODE(GL.GL_TP_A2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_A2,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_A2, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_A2,''))" ).append("\n"); 
		query.append("        END GL_QTY_A2 ," ).append("\n"); 
		query.append("        GL.GL_TP_A2 GL_UT_A2 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_A4 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_A4||' / '||DECODE(GL.GL_TP_A4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_A4,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_A4, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_A4,''))" ).append("\n"); 
		query.append("        END GL_QTY_A4 ," ).append("\n"); 
		query.append("        GL.GL_TP_A4 GL_UT_A4 ," ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN PRIO_CHK IS NOT NULL AND PRIO_CHK = 'X' AND GL.GL_TP_A5 IS NOT NULL" ).append("\n"); 
		query.append("        THEN GL.GL_PRIO_A5||' / '||DECODE(GL.GL_TP_A5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_A5,''))" ).append("\n"); 
		query.append("        ELSE DECODE(GL.GL_TP_A5, NULL, '', '', '', 'R','', ''||NVL(GL.GL_VAL_A5,''))" ).append("\n"); 
		query.append("        END GL_QTY_A5 ," ).append("\n"); 
		query.append("        GL.GL_TP_A5 GL_UT_A5" ).append("\n"); 
		query.append("        ,GL.REPO_GLINE_RMK" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_TEU" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_QTY" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_D2_QTY MTY_BKG_D2" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_D4_QTY MTY_BKG_D4" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_D5_QTY MTY_BKG_D5" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_D7_QTY MTY_BKG_D7" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_R2_QTY MTY_BKG_R2" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_R5_QTY MTY_BKG_R5" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_R9_QTY MTY_BKG_R9" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_O2_QTY MTY_BKG_O2" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_O4_QTY MTY_BKG_O4" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_S2_QTY MTY_BKG_S2" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_S4_QTY MTY_BKG_S4" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_F2_QTY MTY_BKG_F2" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_F4_QTY MTY_BKG_F4" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_F5_QTY MTY_BKG_F5" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_A2_QTY MTY_BKG_A2" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_A4_QTY MTY_BKG_A4" ).append("\n"); 
		query.append("        ,BKG.MTY_BKG_A5_QTY MTY_BKG_A5" ).append("\n"); 
		query.append("        ,MTY.PLN_RSN_HDR_CD" ).append("\n"); 
		query.append("        ,MTY.PLN_RSN_HDR_CD||MTY.PLN_RSN_SUB_CD PLN_RSN_SUB_CD" ).append("\n"); 
		query.append("        ,MTY.PLN_RSN_RMK" ).append("\n"); 
		query.append("        --,CASE" ).append("\n"); 
		query.append("        -- WHEN HDR.POL_CLPT_SEQ = HDR.POD_CLPT_SEQ" ).append("\n"); 
		query.append("        -- THEN '1'" ).append("\n"); 
		query.append("        -- ELSE '2'" ).append("\n"); 
		query.append("        -- END AS POL_FLG" ).append("\n"); 
		query.append("        ,HDR.POL_CD" ).append("\n"); 
		query.append("        ,HDR.POD_CD" ).append("\n"); 
		query.append("        ,HDR.VSL_CD" ).append("\n"); 
		query.append("        ,HDR.SKD_VOY_NO" ).append("\n"); 
		query.append("        ,HDR.SKD_DIR_CD" ).append("\n"); 
		query.append("        ,HDR.POL_CLPT_SEQ" ).append("\n"); 
		query.append("        ,HDR.POD_CLPT_SEQ" ).append("\n"); 
		query.append("        ,MTY.CRE_OFC_CD" ).append("\n"); 
		query.append("        ,MTY.CONTI_CD CRE_CONTI_CD" ).append("\n"); 
		query.append("        ,CASE WHEN HDR.VPS_ETA_DT < GLOBALDATE_PKG.TIME_LOCAL_FNC(SUBSTR(HDR.POL_CD,1,5)) THEN 'Y' ELSE 'N' END AS ETA_PAST_FLG -- ETA가 DB의 SYSDATE 이전인가" ).append("\n"); 
		query.append("        ,CASE WHEN HDR.VPS_ETD_DT < GLOBALDATE_PKG.TIME_LOCAL_FNC(SUBSTR(HDR.POL_CD,1,5)) THEN 'Y' ELSE 'N' END AS ETD_PAST_FLG -- ETD가 DB의 SYSDATE 이전인가" ).append("\n"); 
		query.append("        ,HDR.EFF_ETA_DT" ).append("\n"); 
		query.append("    FROM VSL_HDR HDR" ).append("\n"); 
		query.append("    ,(  ------- MTY LOADING PLAN ---------" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("            PLN.TRD_CD" ).append("\n"); 
		query.append("            ,PLN.SUB_TRD_CD" ).append("\n"); 
		query.append("            ,PLN.VSL_LANE_CD" ).append("\n"); 
		query.append("            ,PLN.VSL_CD" ).append("\n"); 
		query.append("            ,PLN.SKD_VOY_NO" ).append("\n"); 
		query.append("            ,PLN.SKD_DIR_CD" ).append("\n"); 
		query.append("            --,PLN.VSL_CD||PLN.SKD_VOY_NO||PLN.SKD_DIR_CD VVD_CD" ).append("\n"); 
		query.append("            ,PLN.LODG_TEU" ).append("\n"); 
		query.append("            ,PLN.LODG_TON" ).append("\n"); 
		query.append("            ,PLN.POL_YD_CD" ).append("\n"); 
		query.append("            ,PLN.POD_YD_CD" ).append("\n"); 
		query.append("            ,PLN.FNL_CBF_DT" ).append("\n"); 
		query.append("            ,PLN.FNL_CBF_FLG" ).append("\n"); 
		query.append("            ,MAX(PLN.MTY_PLN_SHW_FLG) MTY_PLN_SHW_FLG" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D2',CNTR_QTY,'')))) LODG_D2" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D4',CNTR_QTY,'')))) LODG_D4" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D5',CNTR_QTY,'')))) LODG_D5" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D7',CNTR_QTY,'')))) LODG_D7" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'R2',CNTR_QTY,'')))) LODG_R2" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'R5',CNTR_QTY,'')))) LODG_R5" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'R9',CNTR_QTY,'')))) LODG_R9" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'O2',CNTR_QTY,'')))) LODG_O2" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'O4',CNTR_QTY,'')))) LODG_O4" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'S2',CNTR_QTY,'')))) LODG_S2" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'S4',CNTR_QTY,'')))) LODG_S4" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'F2',CNTR_QTY,'')))) LODG_F2" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'F4',CNTR_QTY,'')))) LODG_F4" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'F5',CNTR_QTY,'')))) LODG_F5" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'A2',CNTR_QTY,'')))) LODG_A2" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'A4',CNTR_QTY,'')))) LODG_A4" ).append("\n"); 
		query.append("            ,SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'A5',CNTR_QTY,'')))) LODG_A5" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D2',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_D2" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D4',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_D4" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D5',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_D5" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'D7',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_D7" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'R2',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_R2" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'R5',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_R5" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'R9',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_R9" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'O2',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_O2" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'O4',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_O4" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'S2',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_S2" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'S4',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_S4" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'F2',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_F2" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'F4',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_F4" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'F5',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_F5" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'A2',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_A2" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'A4',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_A4" ).append("\n"); 
		query.append("            ,SUM(SUM(DECODE(CNTR_TPSZ_CD,'','',NULL,'',(DECODE(CNTR_TPSZ_CD,'A5',CNTR_QTY,''))))) OVER (PARTITION BY PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD,PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.POL_YD_CD) GRP_LODG_A5" ).append("\n"); 
		query.append("            ,MAX(PLN.PLN_RSN_RMK) PLN_RSN_RMK" ).append("\n"); 
		query.append("            ,MAX(PLN.PLN_RSN_HDR_CD) PLN_RSN_HDR_CD" ).append("\n"); 
		query.append("            ,MAX(PLN.PLN_RSN_SUB_CD) PLN_RSN_SUB_CD" ).append("\n"); 
		query.append("            ,MAX(U.OFC_CD) CRE_OFC_CD" ).append("\n"); 
		query.append("            ,MAX(C.CONTI_CD) CONTI_CD" ).append("\n"); 
		query.append("        FROM (SELECT" ).append("\n"); 
		query.append("                LODG.TRD_CD" ).append("\n"); 
		query.append("                ,LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                ,LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                ,LODG.MTY_LODG_PLN_TEU_QTY LODG_TEU" ).append("\n"); 
		query.append("                ,LODG.MTY_LODG_PLN_TON_WGT LODG_TON" ).append("\n"); 
		query.append("                ,LODG.POL_YD_CD" ).append("\n"); 
		query.append("                ,LODG.POL_YD_CD   POD_YD_CD" ).append("\n"); 
		query.append("                ,LODG.FNL_CBF_DT" ).append("\n"); 
		query.append("                ,LODG.FNL_CBF_FLG" ).append("\n"); 
		query.append("                ,'' MTY_PLN_SHW_FLG" ).append("\n"); 
		query.append("                ,'' CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,0 CNTR_QTY" ).append("\n"); 
		query.append("                ,LODG.PLN_RSN_RMK" ).append("\n"); 
		query.append("                ,RSN.PLN_RSN_HDR_CD" ).append("\n"); 
		query.append("                ,RSN.PLN_RSN_SUB_CD" ).append("\n"); 
		query.append("                ,LODG.VSL_CD" ).append("\n"); 
		query.append("                ,LODG.SKD_VOY_NO" ).append("\n"); 
		query.append("                ,LODG.SKD_DIR_CD" ).append("\n"); 
		query.append("                ,LODG.CRE_USR_ID" ).append("\n"); 
		query.append("            FROM EQR_CTRL_MTY_LODG_PLN LODG, EQR_CTRL_PLN_RSN_SUB RSN" ).append("\n"); 
		query.append("            WHERE LODG.PLN_RSN_HDR_CD = RSN.PLN_RSN_HDR_CD(+)" ).append("\n"); 
		query.append("            AND LODG.PLN_RSN_SUB_CD = RSN.PLN_RSN_SUB_CD(+)" ).append("\n"); 
		query.append("            AND VSL_CD     = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND SKD_VOY_NO = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND SKD_DIR_CD = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("            -- DISCHARGING POD" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                LODG.TRD_CD" ).append("\n"); 
		query.append("                ,LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("                ,LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("                ,LODG.MTY_LODG_PLN_TEU_QTY LODG_TEU" ).append("\n"); 
		query.append("                ,LODG.MTY_LODG_PLN_TON_WGT LODG_TON" ).append("\n"); 
		query.append("                ,LODG.POL_YD_CD" ).append("\n"); 
		query.append("                ,DCHG.POD_YD_CD" ).append("\n"); 
		query.append("                ,LODG.FNL_CBF_DT" ).append("\n"); 
		query.append("                ,LODG.FNL_CBF_FLG" ).append("\n"); 
		query.append("                ,DCHG.MTY_PLN_SHW_FLG" ).append("\n"); 
		query.append("                ,QTY.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,CNTR_QTY" ).append("\n"); 
		query.append("                ,'' PLN_RSN_RMK" ).append("\n"); 
		query.append("                ,'' PLN_RSN_HDR_CD" ).append("\n"); 
		query.append("                ,'' PLN_RSN_SUB_CD" ).append("\n"); 
		query.append("                ,LODG.VSL_CD" ).append("\n"); 
		query.append("                ,LODG.SKD_VOY_NO" ).append("\n"); 
		query.append("                ,LODG.SKD_DIR_CD" ).append("\n"); 
		query.append("                ,LODG.CRE_USR_ID" ).append("\n"); 
		query.append("            FROM EQR_CTRL_MTY_LODG_PLN LODG, EQR_CTRL_MTY_DCHG_PLN DCHG, EQR_CTRL_MTY_DCHG_PLN_QTY QTY" ).append("\n"); 
		query.append("            WHERE LODG.VSL_CD = DCHG.VSL_CD" ).append("\n"); 
		query.append("            AND LODG.SKD_VOY_NO = DCHG.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND LODG.SKD_DIR_CD = DCHG.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND LODG.POL_YD_CD = DCHG.POL_YD_CD" ).append("\n"); 
		query.append("            AND DCHG.VSL_CD = QTY.VSL_CD" ).append("\n"); 
		query.append("            AND DCHG.SKD_VOY_NO = QTY.SKD_VOY_NO" ).append("\n"); 
		query.append("            AND DCHG.SKD_DIR_CD = QTY.SKD_DIR_CD" ).append("\n"); 
		query.append("            AND DCHG.POL_YD_CD = QTY.POL_YD_CD" ).append("\n"); 
		query.append("            AND DCHG.POD_YD_CD = QTY.POD_YD_CD" ).append("\n"); 
		query.append("            AND LODG.VSL_CD     = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND LODG.SKD_VOY_NO = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND LODG.SKD_DIR_CD = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            ) PLN, COM_USER U, MDM_ORGANIZATION B, MDM_LOCATION C" ).append("\n"); 
		query.append("        WHERE PLN.CRE_USR_ID = U.USR_ID(+)" ).append("\n"); 
		query.append("        AND B.OFC_CD = U.OFC_CD" ).append("\n"); 
		query.append("        AND NVL(B.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("        AND NVL(C.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("        AND B.LOC_CD = C.LOC_CD(+)" ).append("\n"); 
		query.append("        GROUP BY PLN.TRD_CD,PLN.SUB_TRD_CD,PLN.VSL_LANE_CD,PLN.LODG_TEU,PLN.LODG_TON ,PLN.POL_YD_CD,PLN.POD_YD_CD,PLN.FNL_CBF_DT,PLN.FNL_CBF_FLG,PLN.VSL_CD,PLN.SKD_VOY_NO,PLN.SKD_DIR_CD" ).append("\n"); 
		query.append("    ) MTY" ).append("\n"); 
		query.append("    ,( --------- GUIDELINE ---------" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("            GLINE.TRD_CD" ).append("\n"); 
		query.append("            ,GLINE.SUB_TRD_CD" ).append("\n"); 
		query.append("            ,GLINE.VSL_LANE_CD" ).append("\n"); 
		query.append("            ,GLINE.VSL_CD||GLINE.SKD_VOY_NO||GLINE.SKD_DIR_CD VVD_CD" ).append("\n"); 
		query.append("            ,GLINE.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("            ,NVL(GLINE.POD_CD,'X') PRIO_CHK" ).append("\n"); 
		query.append("            ,GLINE.POL_CD" ).append("\n"); 
		query.append("            ,GB.RCC_CD GL_RCC_CD" ).append("\n"); 
		query.append("            ,GLINE.POD_CD" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D2',GLINE.PRIO_SEQ,0))        GL_PRIO_D2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D2',GLINE.EQ_GLINE_VAL,0))    GL_VAL_D2" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'D2',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_D2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D4',GLINE.PRIO_SEQ,0))        GL_PRIO_D4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D4',GLINE.EQ_GLINE_VAL,0))    GL_VAL_D4" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'D4',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_D4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D5',GLINE.PRIO_SEQ,0))        GL_PRIO_D5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D5',GLINE.EQ_GLINE_VAL,0))    GL_VAL_D5" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'D5',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_D5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D7',GLINE.PRIO_SEQ,0))        GL_PRIO_D7" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'D7',GLINE.EQ_GLINE_VAL,0))    GL_VAL_D7" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'D7',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_D7" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'R2',GLINE.PRIO_SEQ,0))        GL_PRIO_R2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'R2',GLINE.EQ_GLINE_VAL,0))    GL_VAL_R2" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'R2',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_R2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'R5',GLINE.PRIO_SEQ,0))        GL_PRIO_R5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'R5',GLINE.EQ_GLINE_VAL,0))    GL_VAL_R5" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'R5',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_R5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'R9',GLINE.PRIO_SEQ,0))        GL_PRIO_R9" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'R9',GLINE.EQ_GLINE_VAL,0))    GL_VAL_R9" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'R9',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_R9" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'O2',GLINE.PRIO_SEQ,0))        GL_PRIO_O2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'O2',GLINE.EQ_GLINE_VAL,0))    GL_VAL_O2" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'O2',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_O2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'O4',GLINE.PRIO_SEQ,0))        GL_PRIO_O4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'O4',GLINE.EQ_GLINE_VAL,0))    GL_VAL_O4" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'O4',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_O4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'S2',GLINE.PRIO_SEQ,0))        GL_PRIO_S2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'S2',GLINE.EQ_GLINE_VAL,0))    GL_VAL_S2" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'S2',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_S2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'S4',GLINE.PRIO_SEQ,0))        GL_PRIO_S4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'S4',GLINE.EQ_GLINE_VAL,0))    GL_VAL_S4" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'S4',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_S4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'F2',GLINE.PRIO_SEQ,0))        GL_PRIO_F2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'F2',GLINE.EQ_GLINE_VAL,0))    GL_VAL_F2" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'F2',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_F2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'F4',GLINE.PRIO_SEQ,0))        GL_PRIO_F4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'F4',GLINE.EQ_GLINE_VAL,0))    GL_VAL_F4" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'F4',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_F4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'F5',GLINE.PRIO_SEQ,0))        GL_PRIO_F5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'F5',GLINE.EQ_GLINE_VAL,0))    GL_VAL_F5" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'F5',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_F5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'A2',GLINE.PRIO_SEQ,0))        GL_PRIO_A2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'A2',GLINE.EQ_GLINE_VAL,0))    GL_VAL_A2" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'A2',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_A2" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'A4',GLINE.PRIO_SEQ,0))        GL_PRIO_A4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'A4',GLINE.EQ_GLINE_VAL,0))    GL_VAL_A4" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'A4',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_A4" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'A5',GLINE.PRIO_SEQ,0))        GL_PRIO_A5" ).append("\n"); 
		query.append("            ,SUM(DECODE(GLINE.CNTR_TPSZ_CD,'A5',GLINE.EQ_GLINE_VAL,0))    GL_VAL_A5" ).append("\n"); 
		query.append("            ,MAX(DECODE(GLINE.CNTR_TPSZ_CD,'A5',GLINE.EQ_GLINE_TP_CD,''))  GL_TP_A5" ).append("\n"); 
		query.append("            ,GLINE.REPO_GLINE_RMK" ).append("\n"); 
		query.append("            ,GLINE.VSL_CD" ).append("\n"); 
		query.append("            ,GLINE.SKD_VOY_NO" ).append("\n"); 
		query.append("            ,GLINE.SKD_DIR_CD" ).append("\n"); 
		query.append("            ,GLINE.EFF_ST_DT" ).append("\n"); 
		query.append("            ,GLINE.EFF_END_DT" ).append("\n"); 
		query.append("        FROM (-- GLINE LOADING (POL)" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                HDR.TRD_CD" ).append("\n"); 
		query.append("                ,HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                ,HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                ,HDR.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("                ,HDR.POL_CD" ).append("\n"); 
		query.append("                ,'' POD_CD" ).append("\n"); 
		query.append("                ,LODG.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,TO_CHAR(LODG.PRIO_SEQ) AS PRIO_SEQ" ).append("\n"); 
		query.append("                ,LODG.EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                ,LODG.EQ_GLINE_VAL" ).append("\n"); 
		query.append("                ,HDR.REPO_GLINE_RMK" ).append("\n"); 
		query.append("                ,HDR.VSL_CD       " ).append("\n"); 
		query.append("                ,HDR.SKD_VOY_NO   " ).append("\n"); 
		query.append("                ,HDR.SKD_DIR_CD  " ).append("\n"); 
		query.append("                ,HDR.EFF_ST_DT" ).append("\n"); 
		query.append("                ,HDR.EFF_END_DT" ).append("\n"); 
		query.append("            FROM EQR_CTRL_GLINE_HDR HDR,EQR_CTRL_LODG_GLINE LODG" ).append("\n"); 
		query.append("            WHERE HDR.TRD_CD = LODG.TRD_CD" ).append("\n"); 
		query.append("            AND HDR.SUB_TRD_CD = LODG.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND HDR.VSL_LANE_CD = LODG.VSL_LANE_CD" ).append("\n"); 
		query.append("            AND HDR.EQ_GLINE_SEQ = LODG.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("            AND NVL(HDR.CFM_FLG,'N') = 'Y'" ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("            -- GLINE DISCHAGING (POD)" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                HDR.TRD_CD" ).append("\n"); 
		query.append("                ,HDR.SUB_TRD_CD" ).append("\n"); 
		query.append("                ,HDR.VSL_LANE_CD" ).append("\n"); 
		query.append("                ,HDR.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("                ,HDR.POL_CD" ).append("\n"); 
		query.append("                ,DCHG.POD_CD" ).append("\n"); 
		query.append("                ,VAL.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("                ,'' PRIO_SEQ" ).append("\n"); 
		query.append("                ,VAL.EQ_GLINE_TP_CD" ).append("\n"); 
		query.append("                ,VAL.EQ_GLINE_VAL" ).append("\n"); 
		query.append("                ,'' REPO_GLINE_RMK" ).append("\n"); 
		query.append("                ,HDR.VSL_CD" ).append("\n"); 
		query.append("                ,HDR.SKD_VOY_NO" ).append("\n"); 
		query.append("                ,HDR.SKD_DIR_CD" ).append("\n"); 
		query.append("                ,HDR.EFF_ST_DT" ).append("\n"); 
		query.append("                ,HDR.EFF_END_DT" ).append("\n"); 
		query.append("            FROM EQR_CTRL_GLINE_HDR HDR,EQR_CTRL_DCHG_GLINE DCHG,EQR_CTRL_DCHG_GLINE_VAL VAL" ).append("\n"); 
		query.append("            WHERE HDR.TRD_CD        = DCHG.TRD_CD" ).append("\n"); 
		query.append("            AND HDR.SUB_TRD_CD    = DCHG.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND HDR.VSL_LANE_CD   = DCHG.VSL_LANE_CD" ).append("\n"); 
		query.append("            AND HDR.EQ_GLINE_SEQ  = DCHG.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("            AND NVL(HDR.CFM_FLG,'N') = 'Y'" ).append("\n"); 
		query.append("            AND DCHG.TRD_CD       = VAL.TRD_CD" ).append("\n"); 
		query.append("            AND DCHG.SUB_TRD_CD   = VAL.SUB_TRD_CD" ).append("\n"); 
		query.append("            AND DCHG.VSL_LANE_CD  = VAL.VSL_LANE_CD" ).append("\n"); 
		query.append("            AND DCHG.EQ_GLINE_SEQ = VAL.EQ_GLINE_SEQ" ).append("\n"); 
		query.append("            AND DCHG.POD_CD       = VAL.POD_CD" ).append("\n"); 
		query.append("            ) GLINE" ).append("\n"); 
		query.append("            , MDM_LOCATION GL, MDM_EQ_ORZ_CHT GB" ).append("\n"); 
		query.append("            , (" ).append("\n"); 
		query.append("            SELECT" ).append("\n"); 
		query.append("                DISTINCT D.SLAN_CD, D.TRD_CD, D.SUB_TRD_CD, D.RLANE_CD, D.VSL_SLAN_DIR_CD, D.FM_CONTI_CD, D.EFF_ETA_DT, D.POL_RCC_CD RCC_CD" ).append("\n"); 
		query.append("            FROM VSL_HDR D" ).append("\n"); 
		query.append("            ) X" ).append("\n"); 
		query.append("        WHERE 1=1" ).append("\n"); 
		query.append("        AND GLINE.POL_CD = GL.LOC_CD" ).append("\n"); 
		query.append("        AND NVL(GL.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("        AND NVL(GB.DELT_FLG,'N') <> 'Y'" ).append("\n"); 
		query.append("        AND GL.SCC_CD = GB.SCC_CD" ).append("\n"); 
		query.append("        AND GB.RCC_CD = X.RCC_CD" ).append("\n"); 
		query.append("        AND GLINE.TRD_CD = X.TRD_CD" ).append("\n"); 
		query.append("        AND GLINE.SUB_TRD_CD = X.SUB_TRD_CD" ).append("\n"); 
		query.append("        AND GLINE.VSL_LANE_CD = X.SLAN_CD" ).append("\n"); 
		query.append("        AND X.EFF_ETA_DT BETWEEN GLINE.EFF_ST_DT AND GLINE.EFF_END_DT" ).append("\n"); 
		query.append("        GROUP BY GLINE.TRD_CD,GLINE.SUB_TRD_CD,GLINE.VSL_LANE_CD,GLINE.EQ_GLINE_SEQ,GLINE.POL_CD,GLINE.POD_CD,GLINE.REPO_GLINE_RMK,GLINE.VSL_CD,GLINE.SKD_VOY_NO,GLINE.SKD_DIR_CD,GLINE.EFF_ST_DT,GLINE.EFF_END_DT, GB.RCC_CD" ).append("\n"); 
		query.append("        --ORDER BY GLINE.TRD_CD,GLINE.SUB_TRD_CD,GLINE.VSL_LANE_CD,GLINE.EQ_GLINE_SEQ,GLINE.POL_CD,GLINE.POD_CD,GLINE.REPO_GLINE_RMK,GLINE.VSL_CD,GLINE.SKD_VOY_NO,GLINE.SKD_DIR_CD,GLINE.EFF_ST_DT,GLINE.EFF_END_DT, GB.RCC_CD" ).append("\n"); 
		query.append("    ) GL" ).append("\n"); 
		query.append("    ,( --------- MTY BKG ---------" ).append("\n"); 
		query.append("        SELECT " ).append("\n"); 
		query.append("            VSL_CD" ).append("\n"); 
		query.append("            ,SKD_VOY_NO" ).append("\n"); 
		query.append("            ,SKD_DIR_CD" ).append("\n"); 
		query.append("            ,VSL_LANE_CD" ).append("\n"); 
		query.append("            ,POL_YD_CD POL_CD" ).append("\n"); 
		query.append("            ,POD_YD_CD POD_CD" ).append("\n"); 
		query.append("            ,SUM(QTY_TEU) MTY_BKG_TEU" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), 0)" ).append("\n"); 
		query.append("            +NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), 0)MTY_BKG_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), '') MTY_BKG_D2_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), '') MTY_BKG_D4_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), '') MTY_BKG_D5_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), '') MTY_BKG_D7_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), '') MTY_BKG_R2_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), '') MTY_BKG_R5_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), '') MTY_BKG_R9_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), '') MTY_BKG_O2_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), '') MTY_BKG_O4_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), '') MTY_BKG_S2_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), '') MTY_BKG_S4_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), '') MTY_BKG_F2_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), '') MTY_BKG_F4_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), '') MTY_BKG_F5_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), '') MTY_BKG_A2_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), '') MTY_BKG_A4_QTY" ).append("\n"); 
		query.append("            ,NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), '') MTY_BKG_A5_QTY" ).append("\n"); 
		query.append("        FROM" ).append("\n"); 
		query.append("        (" ).append("\n"); 
		query.append("            SELECT " ).append("\n"); 
		query.append("                A.VSL_CD" ).append("\n"); 
		query.append("                ,A.SKD_VOY_NO" ).append("\n"); 
		query.append("                ,A.SKD_DIR_CD" ).append("\n"); 
		query.append("                ,A.VSL_LANE_CD" ).append("\n"); 
		query.append("                ,A.POL_YD_CD" ).append("\n"); 
		query.append("                ,A.POD_YD_CD" ).append("\n"); 
		query.append("                ,B.BKG_NO" ).append("\n"); 
		query.append("                ,B.CNTR_TPSZ_CD TPSZ_CD" ).append("\n"); 
		query.append("                ,B.OP_CNTR_QTY CNTR_QTY" ).append("\n"); 
		query.append("                ,DECODE(SUBSTR( B.CNTR_TPSZ_CD,-1), '2' ,OP_CNTR_QTY, OP_CNTR_QTY * 2 ) QTY_TEU" ).append("\n"); 
		query.append("            FROM EQR_CTRL_MTY_BKG_EXE A, BKG_QUANTITY B" ).append("\n"); 
		query.append("            WHERE A.MTY_BKG_NO  = B.BKG_NO" ).append("\n"); 
		query.append("            AND   A.MTY_BKG_FLG = 'Y'    -- MTY BKG 생성된 자료만 추출" ).append("\n"); 
		query.append("            AND   A.VSL_CD     = SUBSTR(@[vvdRetrieveVal], 0, 4)" ).append("\n"); 
		query.append("            AND   A.SKD_VOY_NO = SUBSTR(@[vvdRetrieveVal], 5, 4)" ).append("\n"); 
		query.append("            AND   A.SKD_DIR_CD = SUBSTR(@[vvdRetrieveVal], 9, 1)" ).append("\n"); 
		query.append("            AND   NVL(A.BKG_STS_CD, ' ') <> 'X' --BKG CANCEL 제외" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("        GROUP BY VSL_CD,SKD_VOY_NO,SKD_DIR_CD,VSL_LANE_CD,POL_YD_CD,POD_YD_CD" ).append("\n"); 
		query.append("    ) BKG" ).append("\n"); 
		query.append("    WHERE HDR.VSL_CD       = MTY.VSL_CD(+)" ).append("\n"); 
		query.append("    AND HDR.SKD_VOY_NO   = MTY.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("    AND HDR.SKD_DIR_CD   = MTY.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("    AND HDR.SLAN_CD      = MTY.VSL_LANE_CD(+)" ).append("\n"); 
		query.append("    AND HDR.POL_YD_CD    = MTY.POL_YD_CD(+)" ).append("\n"); 
		query.append("    AND HDR.POD_YD_CD    = MTY.POD_YD_CD(+)" ).append("\n"); 
		query.append("    AND HDR.SLAN_CD      = GL.VSL_LANE_CD(+)" ).append("\n"); 
		query.append("    AND CASE WHEN HDR.POL_YD_CD IS NOT NULL AND HDR.POD_YD_CD IS NOT NULL AND HDR.POL_YD_CD = HDR.POD_YD_CD THEN 'X' ELSE HDR.POD_CD END" ).append("\n"); 
		query.append("      = CASE WHEN GL.PRIO_CHK(+) = 'X' THEN 'X' ELSE GL.POD_CD(+) END" ).append("\n"); 
		query.append("    AND HDR.EFF_ETA_DT BETWEEN GL.EFF_ST_DT(+) AND GL.EFF_END_DT(+)" ).append("\n"); 
		query.append("    AND HDR.POL_RCC_CD   = GL.GL_RCC_CD(+)" ).append("\n"); 
		query.append("    AND HDR.VSL_CD       = BKG.VSL_CD(+)" ).append("\n"); 
		query.append("    AND HDR.SKD_VOY_NO   = BKG.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("    AND HDR.SKD_DIR_CD   = BKG.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("    AND HDR.SLAN_CD      = BKG.VSL_LANE_CD(+)" ).append("\n"); 
		query.append("    AND HDR.POL_CD       = SUBSTR(BKG.POL_CD(+),1,5)" ).append("\n"); 
		query.append("    AND HDR.POD_CD       = SUBSTR(BKG.POD_CD(+),1,5)" ).append("\n"); 
		query.append(") R" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("--AND R.RNK = 1" ).append("\n"); 
		query.append("ORDER BY R.TRD_CD, R.SUB_TRD_CD, R.SLAN_CD, R.VSL_CD, R.SKD_VOY_NO, R.SKD_DIR_CD, R.POL_CLPT_SEQ, R.POD_CLPT_SEQ, R.POL_YD_CD" ).append("\n"); 

	}
}