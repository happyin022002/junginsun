<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CntrAccuracyTrendDBDAOSearchDischargeResultListRSQL">
			<desc><![CDATA[Search Discharge Result List
- 2014-01-15, AFRICA PORT 를 EUROPE 으로 병합, 신용찬
- 2014-02-03, SKIP PORT 제거, MT LOADING PORT IND SEQ 조건 추가, 신용찬]]></desc>
			<sql><![CDATA[
WITH DUMMY_HEAD AS
(
    SELECT DISTINCT 
           A.TRD_CD
          ,A.SUB_TRD_CD
          ,A.RLANE_CD
          ,A.SLAN_CD
          ,SUBSTR(A.SLS_YRMON, 0, 4)||A.COST_WK WEEK
          ,A.VSL_CD||A.SKD_VOY_NO||A.DIR_CD VVD 
          ,A.VSL_CD
          ,A.SKD_VOY_NO
          ,A.DIR_CD
          ,D.YD_CD 
          ,D.VPS_PORT_CD 
          ,D.CLPT_SEQ
          ,D.CLPT_IND_SEQ
          ,E.CONTI_CD
          ,D.VPS_ETA_DT
          ,D.VPS_ETB_DT 
          ,D.VPS_ETD_DT
    FROM MAS_MON_VVD A
        ,VSK_VSL_PORT_SKD D
        ,MDM_LOCATION E
    WHERE A.VSL_CD     = D.VSL_CD
    AND   A.SKD_VOY_NO = D.SKD_VOY_NO
    AND   A.DIR_CD     = D.SKD_DIR_CD 
    AND   D.VPS_PORT_CD= E.LOC_CD

    AND   A.DELT_FLG = 'N'
    AND   NVL(D.VPS_PORT_CD, ' ') NOT IN ('PAPAC', 'EGSUZ')
    AND   NVL(D.SKD_CNG_STS_CD, 'X') <> 'S'  -- SKIP PORT 제외(20140203)
    
    AND   (
              --수정전 원본(2014-01-15)
              --(SUBSTR(A.TRD_CD, 0, 1) <> 'I' AND (SELECT X.CONTI_CD FROM MDM_LOCATION X WHERE X.LOC_CD = A.LST_LODG_PORT_CD) <> E.CONTI_CD)  --'I' 로 시작하지 않는 TRD 는 MAS MON VVD의 LAST CALLING LOADING PORT 대륙의 PORT는 제외(DISCHARGING만 조회)
              -- 수정후 (2014-01-15, AFRICA PORT 를 EUROPE 으로 병합, 신용찬)
              (SUBSTR(A.TRD_CD, 0, 1) <> 'I' AND (SELECT DECODE(X.CONTI_CD, 'F', 'E', X.CONTI_CD) FROM MDM_LOCATION X WHERE X.LOC_CD = A.LST_LODG_PORT_CD) <> DECODE(E.CONTI_CD, 'F', 'E', E.CONTI_CD))  --'I' 로 시작하지 않는 TRD 는 MAS MON VVD의 LAST CALLING LOADING PORT 대륙의 PORT는 제외(DISCHARGING만 조회)
              OR
              (SUBSTR(A.TRD_CD, 0, 1) = 'I' )  -- 'I' 로 시작하는 TRD 는 모든 PORT 조회
          )    
	-- 기본적으로 ASIA PORT 만 추출
    -- 단 'I' 로 시작하는 TRD 는 모든 PORT 조회
--    AND (
--           (SUBSTR(A.TRD_CD, 0, 1) <> 'I' AND E.CONTI_CD = 'A')  -- 'I' 로 시작하지 않는 TRD 는 ASIA PORT만 조회
--           OR
--           (SUBSTR(A.TRD_CD, 0, 1) = 'I' )  -- 'I' 로 시작하는 TRD 는 모든 PORT 조회
--        )

    -- 검색조건 
  #if (${vvd_cd} != '') 
    -- VVD
    AND   A.VSL_CD     = SUBSTR(@[vvd_cd], 0, 4)
    AND   A.SKD_VOY_NO = SUBSTR(@[vvd_cd], 5, 4)
    AND   A.DIR_CD     = SUBSTR(@[vvd_cd], 9, 1)
    
  #end

  #if (${fm_wk} != '' && ${to_wk} != '') 
      -- WEEK
      AND   SUBSTR(A.SLS_YRMON, 0, 4)||A.COST_WK BETWEEN @[fm_wk] AND @[to_wk]
  #end
  
  #if (${trade} != '')
      -- TRADE CD
  	AND   A.TRD_CD IN (
  		 #foreach($key IN ${arr_trd_cd})
  		  	#if($velocityCount < $arr_trd_cd.size())
  				'$key', 
  			#else 
  				'$key' 
  			#end 
  		#end 
  			           )
  #end
  
  #if (${subtrade} != '')
      -- SUB TRADE CD
  	AND (
  		#foreach($key IN ${arr_sub_trd_cd})
  			#if($velocityCount == 1 )
  			     (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2))
  			#else 
  			  OR (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2))
  			#end 
  		#end 
  		 )
  #end
  
  #if (${lane} != '') 
  	-- LANE CD
  	AND (
  		#foreach($key IN ${arr_lane})
  		  #if($velocityCount == 1 ) 
  			--   (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2) AND A.SLAN_CD = SUBSTR('$key',6))
                A.SLAN_CD = '$key' 
  		  #else 
  			--OR (A.TRD_CD = SUBSTR('$key',1,3) AND A.SUB_TRD_CD = SUBSTR('$key',4,2) AND A.SLAN_CD = SUBSTR('$key',6))
                OR A.SLAN_CD = '$key' 
  		  #end 
  		#end 
  		)
  #end
  
  #if (${rcc_cd} != '' || ${loc_tp_cd} != ''|| ${loc_cd} != '')
      -- LOCATION
      AND   D.VPS_PORT_CD IN 
      (
          SELECT DISTINCT B.LOC_CD 
          FROM MDM_EQ_ORZ_CHT A
              ,MDM_LOCATION B
          WHERE A.SCC_CD   = B.SCC_CD            
          AND   A.DELT_FLG = 'N'
  	#if (${rcc_cd} != '') 
          AND   A.RCC_CD = @[rcc_cd]
      #end
  
  	#if (${loc_tp_cd} == 'L')
  	  #if (${loc_cd} != '') 
          AND A.LCC_CD  = @[loc_cd]
  	  #end
  	#elseif (${loc_tp_cd} == 'S')
  	  #if (${loc_cd} != '') 
  		AND A.SCC_CD  = @[loc_cd]
  	  #end
  	#elseif (${loc_tp_cd} == 'E') 
  	  #if (${loc_cd} != '') 
  	    AND A.ECC_CD  = @[loc_cd]
  	  #end
  	#end
      )
  #end



)

,DUMMY_DSCH AS
(
    SELECT VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POD_YD_CD
    
          ,NVL(SUM(CNTR_QTY), 0) QTY_TTL
                
          ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), '') QTY_D2
          ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), '') QTY_D4
          ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), '') QTY_D5
          ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), '') QTY_D7
          ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), '') QTY_R2
          ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), '') QTY_R5
          ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), '') QTY_R9
          ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), '') QTY_O2
          ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), '') QTY_O4
          ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), '') QTY_S2
          ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), '') QTY_S4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), '') QTY_F2
          ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), '') QTY_F4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), '') QTY_F5
          ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), '') QTY_A2
          ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), '') QTY_A4
          ,NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), '') QTY_A5
          ,POD_CLPT_IND_SEQ CLPT_IND_SEQ   
                
    FROM
    (
        /*
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.VSL_LANE_CD
              ,A.POD_YD_CD
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
                    
        FROM EQR_CTRL_MTY_BKG_EXE A
            ,BKG_QUANTITY B
            ,DUMMY_HEAD Z
                
        WHERE A.VSL_CD      = Z.VSL_CD
        AND   A.SKD_VOY_NO  = Z.SKD_VOY_NO
        AND   A.SKD_DIR_CD  = Z.DIR_CD   
        AND   A.POD_YD_CD   = Z.YD_CD 
        AND  ( 
               (A.TRSP_MOD_CD = 'V' AND A.MTY_BKG_FLG = 'Y' AND A.MTY_BKG_SPLIT_FLG = 'Y') -- TRUNK 는 SPLIT 만 대상
               OR
               (A.TRSP_MOD_CD = 'W' AND A.MTY_BKG_FLG = 'Y' )  -- WATER 는 SPLIT 없음
             )
        AND   A.MTY_BKG_NO  = B.BKG_NO
        AND   NVL(A.BKG_STS_CD, ' ') <> 'X' --BKG CANCEL 제외
        */

        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.SLAN_CD VSL_LANE_CD
              ,A.POD_YD_CD
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
              ,A.POD_CLPT_IND_SEQ
                    
        FROM BKG_VVD A
            ,BKG_QUANTITY B
            ,BKG_BOOKING D
            ,DUMMY_HEAD Z
                
        WHERE D.VSL_CD          = Z.VSL_CD
        AND   D.SKD_VOY_NO      = Z.SKD_VOY_NO
        AND   D.SKD_DIR_CD      = Z.DIR_CD   
        AND   D.POD_NOD_CD      = Z.YD_CD 
        AND   D.BKG_CGO_TP_CD   = 'P'  -- EMPTY BKG 만 추출        
        AND   D.SPLIT_FLG       = 'Y'  -- SPLIT 된것만 추출
        AND   D.BKG_NO          = A.BKG_NO
        AND   A.POD_CLPT_IND_SEQ= Z.CLPT_IND_SEQ
        AND   A.BKG_NO          = B.BKG_NO

    )
    
    GROUP BY VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POD_YD_CD
          ,POD_CLPT_IND_SEQ          
)

,DUMMY_LOAD AS 
(
    SELECT VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POD_YD_CD
    
          ,NVL(SUM(CNTR_QTY), 0) QTY_TTL
                
          ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), '') QTY_D2
          ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), '') QTY_D4
          ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), '') QTY_D5
          ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), '') QTY_D7
          ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), '') QTY_R2
          ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), '') QTY_R5
          ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), '') QTY_R9
          ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), '') QTY_O2
          ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), '') QTY_O4
          ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), '') QTY_S2
          ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), '') QTY_S4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), '') QTY_F2
          ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), '') QTY_F4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), '') QTY_F5
          ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), '') QTY_A2
          ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), '') QTY_A4
          ,NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), '') QTY_A5
          ,POD_CLPT_IND_SEQ CLPT_IND_SEQ 
                
    FROM
    (
        /*
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.VSL_LANE_CD
              ,A.POD_YD_CD
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
                    
        FROM EQR_CTRL_MTY_BKG_EXE A
            ,BKG_QUANTITY B
            ,DUMMY_HEAD Z
                
        WHERE A.VSL_CD      = Z.VSL_CD
        AND   A.SKD_VOY_NO  = Z.SKD_VOY_NO
        AND   A.SKD_DIR_CD  = Z.DIR_CD   
        AND   A.POD_YD_CD   = Z.YD_CD 
        AND  ( 
               (A.TRSP_MOD_CD = 'V' AND A.MTY_BKG_FLG = 'Y' AND A.MTY_BKG_SPLIT_FLG = 'N' ) -- TRUNK VL 대상
               OR
               (A.TRSP_MOD_CD = 'W' AND A.MTY_BKG_FLG = 'Y' )  -- WATER 는 SPLIT 없음
             )
        AND   A.MTY_BKG_NO  = B.BKG_NO
        AND   NVL(A.BKG_STS_CD, ' ') <> 'X' --BKG CANCEL 제외
        
        -- SPLIT BKG 집계(POD를 VL BKG 으로 변환)
        UNION ALL
        
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.VSL_LANE_CD
              ,A.POD_YD_CD
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
                    
        FROM (
                SELECT DISTINCT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,A.VSL_LANE_CD 
                      ,A.POD_YD_CD
                       
                      ,B.OLD_BKG_GRP_NO
                      ,B.MTY_BKG_NO
                FROM EQR_CTRL_MTY_BKG_EXE A
                    ,(
                        SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.VSL_LANE_CD, A.POD_YD_CD, A.MTY_BKG_NO, A.OLD_BKG_GRP_NO
                        FROM EQR_CTRL_MTY_BKG_EXE A
                            ,DUMMY_HEAD Z    
                        WHERE A.VSL_CD      = Z.VSL_CD
                        AND   A.SKD_VOY_NO  = Z.SKD_VOY_NO
                        AND   A.SKD_DIR_CD  = Z.DIR_CD   
                        AND   A.POD_YD_CD   = Z.YD_CD                                                
                        AND   A.MTY_BKG_FLG       = 'Y'
                        AND   A.MTY_BKG_SPLIT_FLG = 'Y'
                        AND   NVL(A.BKG_STS_CD, ' ') <> 'X' --BKG CANCEL 제외
                    ) B
                WHERE   A.MTY_BKG_NO = B.OLD_BKG_GRP_NO
    
             ) A
            ,BKG_QUANTITY B
                
        WHERE A.MTY_BKG_NO  = B.BKG_NO        
        */

        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.VSL_LANE_CD
              ,A.POD_YD_CD
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
              ,C.POD_CLPT_IND_SEQ
                    
        FROM EQR_CTRL_MTY_BKG_EXE A
            ,BKG_QUANTITY B
            ,BKG_VVD C
            ,DUMMY_HEAD Z
                
        WHERE A.VSL_CD      = Z.VSL_CD
        AND   A.SKD_VOY_NO  = Z.SKD_VOY_NO
        AND   A.SKD_DIR_CD  = Z.DIR_CD   
        AND   A.POD_YD_CD   = Z.YD_CD 
        AND  ( 
               (A.TRSP_MOD_CD = 'V' AND A.MTY_BKG_FLG = 'Y' AND A.MTY_BKG_SPLIT_FLG = 'N' ) -- TRUNK VL 대상
               OR
               (A.TRSP_MOD_CD = 'W' AND A.MTY_BKG_FLG = 'Y' )  -- WATER 는 SPLIT 없음
             )
        AND   A.MTY_BKG_NO  = B.BKG_NO
        AND   A.MTY_BKG_NO  = C.BKG_NO
        AND   NVL(A.BKG_STS_CD, ' ') <> 'X' --BKG CANCEL 제외
        
        -- SPLIT BKG 집계(POD를 VL BKG 으로 변환)
        UNION ALL
        
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.VSL_LANE_CD
              ,A.POD_YD_CD
              ,B.BKG_NO
              ,B.CNTR_TPSZ_CD TPSZ_CD
              ,B.OP_CNTR_QTY CNTR_QTY
              ,A.POD_CLPT_IND_SEQ
                    
        FROM (
                SELECT DISTINCT A.VSL_CD
                      ,A.SKD_VOY_NO
                      ,A.SKD_DIR_CD
                      ,A.VSL_LANE_CD 
                      ,A.POD_YD_CD  -- SPLIT BKG POD --> ORG BKG POD 로 취환
                       
                      ,B.OLD_BKG_GRP_NO
                      ,B.MTY_BKG_NO
                      ,C.POD_CLPT_IND_SEQ
                FROM EQR_CTRL_MTY_BKG_EXE A 
                    ,(
                        SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.VSL_LANE_CD, A.POD_YD_CD, A.MTY_BKG_NO, A.OLD_BKG_GRP_NO
                        FROM EQR_CTRL_MTY_BKG_EXE A
                            ,DUMMY_HEAD Z    
                        WHERE A.VSL_CD      = Z.VSL_CD
                        AND   A.SKD_VOY_NO  = Z.SKD_VOY_NO
                        AND   A.SKD_DIR_CD  = Z.DIR_CD   
                        AND   A.POD_YD_CD   = Z.YD_CD                                                
                        AND   A.MTY_BKG_FLG       = 'Y'
                        AND   A.MTY_BKG_SPLIT_FLG = 'Y'
                        AND   NVL(A.BKG_STS_CD, ' ') <> 'X' --BKG CANCEL 제외
                    ) B
                    ,BKG_VVD C
                WHERE   A.MTY_BKG_NO = B.OLD_BKG_GRP_NO
                AND     A.MTY_BKG_NO = C.BKG_NO
    
             ) A
            ,BKG_QUANTITY B
                
        WHERE A.MTY_BKG_NO  = B.BKG_NO 
    )
    
    GROUP BY VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,VSL_LANE_CD
          ,POD_YD_CD
          ,POD_CLPT_IND_SEQ
 
)        

,DUMMY_PLAN AS
(
    SELECT VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
    
          ,POD_YD_CD
    
          ,NVL(SUM(CNTR_QTY), 0) QTY_TTL
                
          ,NVL(SUM(DECODE(TPSZ_CD, 'D2', CNTR_QTY)), '') QTY_D2
          ,NVL(SUM(DECODE(TPSZ_CD, 'D4', CNTR_QTY)), '') QTY_D4
          ,NVL(SUM(DECODE(TPSZ_CD, 'D5', CNTR_QTY)), '') QTY_D5
          ,NVL(SUM(DECODE(TPSZ_CD, 'D7', CNTR_QTY)), '') QTY_D7
          ,NVL(SUM(DECODE(TPSZ_CD, 'R2', CNTR_QTY)), '') QTY_R2
          ,NVL(SUM(DECODE(TPSZ_CD, 'R5', CNTR_QTY)), '') QTY_R5
          ,NVL(SUM(DECODE(TPSZ_CD, 'R9', CNTR_QTY)), '') QTY_R9
          ,NVL(SUM(DECODE(TPSZ_CD, 'O2', CNTR_QTY)), '') QTY_O2
          ,NVL(SUM(DECODE(TPSZ_CD, 'O4', CNTR_QTY)), '') QTY_O4
          ,NVL(SUM(DECODE(TPSZ_CD, 'S2', CNTR_QTY)), '') QTY_S2
          ,NVL(SUM(DECODE(TPSZ_CD, 'S4', CNTR_QTY)), '') QTY_S4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F2', CNTR_QTY)), '') QTY_F2
          ,NVL(SUM(DECODE(TPSZ_CD, 'F4', CNTR_QTY)), '') QTY_F4
          ,NVL(SUM(DECODE(TPSZ_CD, 'F5', CNTR_QTY)), '') QTY_F5
          ,NVL(SUM(DECODE(TPSZ_CD, 'A2', CNTR_QTY)), '') QTY_A2
          ,NVL(SUM(DECODE(TPSZ_CD, 'A4', CNTR_QTY)), '') QTY_A4
          ,NVL(SUM(DECODE(TPSZ_CD, 'A5', CNTR_QTY)), '') QTY_A5
                
    FROM
    (
    
        SELECT A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.POD_YD_CD
              ,B.CNTR_TPSZ_CD TPSZ_CD 
              ,B.CNTR_QTY 
        FROM EQR_CTRL_MTY_DCHG_PLN A
            ,EQR_CTRL_MTY_DCHG_PLN_QTY B
            ,DUMMY_HEAD Z
        WHERE A.VSL_CD     = B.VSL_CD
        AND   A.SKD_VOY_NO = B.SKD_VOY_NO
        AND   A.SKD_DIR_CD = B.SKD_DIR_CD
        AND   A.POL_YD_CD  = B.POL_YD_CD
        AND   A.POD_YD_CD  = B.POD_YD_CD
        AND   A.VSL_CD     = Z.VSL_CD
        AND   A.SKD_VOY_NO = Z.SKD_VOY_NO
        AND   A.SKD_DIR_CD = Z.DIR_CD   
        AND   A.POD_YD_CD  = Z.YD_CD  -- 양하지역 PORT YARD 일치 여부
        --AND   A.MTY_PLN_SHW_FLG = 'Y' (조건제거, 2013-10-16, 신용찬)       
    )
    
    GROUP BY VSL_CD
          ,SKD_VOY_NO
          ,SKD_DIR_CD
          ,POD_YD_CD
          
)

-- NORMAL 쿼리 ---------------------------------------
SELECT A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD
      ,A.WEEK
      ,A.VVD
      ,A.YD_CD  
      ,NVL(B.QTY_TTL,0) D_TTL
            
      ,NVL(B.QTY_D2,0)  D_D2
      ,NVL(B.QTY_D4,0)  D_D4
      ,NVL(B.QTY_D5,0)  D_D5
      ,NVL(B.QTY_D7,0)  D_D7
      ,NVL(B.QTY_R2,0)  D_R2
      ,NVL(B.QTY_R5,0)  D_R5
      ,NVL(B.QTY_R9,0)  D_R9
      ,NVL(B.QTY_O2,0)  D_O2
      ,NVL(B.QTY_O4,0)  D_O4
      ,NVL(B.QTY_S2,0)  D_S2
      ,NVL(B.QTY_S4,0)  D_S4
      ,NVL(B.QTY_F2,0)  D_F2
      ,NVL(B.QTY_F4,0)  D_F4
      ,NVL(B.QTY_F5,0)  D_F5
      ,NVL(B.QTY_A2,0)  D_A2
      ,NVL(B.QTY_A4,0)  D_A4
      ,NVL(B.QTY_A5,0)  D_A5
      
      ,NVL(C.QTY_TTL,0) L_TTL
            
      ,NVL(C.QTY_D2,0)  L_D2
      ,NVL(C.QTY_D4,0)  L_D4
      ,NVL(C.QTY_D5,0)  L_D5
      ,NVL(C.QTY_D7,0)  L_D7
      ,NVL(C.QTY_R2,0)  L_R2
      ,NVL(C.QTY_R5,0)  L_R5
      ,NVL(C.QTY_R9,0)  L_R9
      ,NVL(C.QTY_O2,0)  L_O2
      ,NVL(C.QTY_O4,0)  L_O4
      ,NVL(C.QTY_S2,0)  L_S2
      ,NVL(C.QTY_S4,0)  L_S4
      ,NVL(C.QTY_F2,0)  L_F2
      ,NVL(C.QTY_F4,0)  L_F4
      ,NVL(C.QTY_F5,0)  L_F5
      ,NVL(C.QTY_A2,0)  L_A2
      ,NVL(C.QTY_A4,0)  L_A4    
      ,NVL(C.QTY_A5,0)  L_A5    
      
      ,NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0) DF_TTL_A
      ,NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0) DF_D2_A
      ,NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0) DF_D4_A
      ,NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0) DF_D5_A
      ,NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0) DF_D7_A
      ,NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0) DF_R2_A
      ,NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0) DF_R5_A
      ,NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0) DF_R9_A
      ,NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0) DF_O2_A
      ,NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0) DF_O4_A
      ,NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0) DF_S2_A
      ,NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0) DF_S4_A
      ,NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0) DF_F2_A
      ,NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0) DF_F4_A
      ,NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0) DF_F5_A
      ,NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0) DF_A2_A
      ,NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0) DF_A4_A
      ,NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0) DF_A5_A

      
      ,NVL(D.QTY_TTL,0) P_TTL
            
      ,NVL(D.QTY_D2,0)  P_D2
      ,NVL(D.QTY_D4,0)  P_D4
      ,NVL(D.QTY_D5,0)  P_D5
      ,NVL(D.QTY_D7,0)  P_D7
      ,NVL(D.QTY_R2,0)  P_R2
      ,NVL(D.QTY_R5,0)  P_R5
      ,NVL(D.QTY_R9,0)  P_R9
      ,NVL(D.QTY_O2,0)  P_O2
      ,NVL(D.QTY_O4,0)  P_O4
      ,NVL(D.QTY_S2,0)  P_S2
      ,NVL(D.QTY_S4,0)  P_S4
      ,NVL(D.QTY_F2,0)  P_F2
      ,NVL(D.QTY_F4,0)  P_F4
      ,NVL(D.QTY_F5,0)  P_F5
      ,NVL(D.QTY_A2,0)  P_A2
      ,NVL(D.QTY_A4,0)  P_A4   
      ,NVL(D.QTY_A5,0)  P_A5 
      
      ,NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0) DF_TTL_B
      ,NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0) DF_D2_B
      ,NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0) DF_D4_B
      ,NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0) DF_D5_B
      ,NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0) DF_D7_B
      ,NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0) DF_R2_B
      ,NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0) DF_R5_B
      ,NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0) DF_R9_B
      ,NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0) DF_O2_B
      ,NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0) DF_O4_B
      ,NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0) DF_S2_B
      ,NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0) DF_S4_B
      ,NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0) DF_F2_B
      ,NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0) DF_F4_B
      ,NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0) DF_F5_B
      ,NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0) DF_A2_B
      ,NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0) DF_A4_B    
      ,NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0) DF_A5_B    
      
      ,A.CLPT_SEQ     
      ,1 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)

UNION ALL
-- VVD TOTAL (YARD 없음) ---------------------------------------
SELECT A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD
      ,A.WEEK
      ,A.VVD 
      ,'TTL' YD_CD  
      ,SUM(NVL(B.QTY_TTL,0)) D_TTL
            
      ,SUM(NVL(B.QTY_D2,0))  D_D2
      ,SUM(NVL(B.QTY_D4,0))  D_D4
      ,SUM(NVL(B.QTY_D5,0))  D_D5
      ,SUM(NVL(B.QTY_D7,0))  D_D7
      ,SUM(NVL(B.QTY_R2,0))  D_R2
      ,SUM(NVL(B.QTY_R5,0))  D_R5
      ,SUM(NVL(B.QTY_R9,0))  D_R9
      ,SUM(NVL(B.QTY_O2,0))  D_O2
      ,SUM(NVL(B.QTY_O4,0))  D_O4
      ,SUM(NVL(B.QTY_S2,0))  D_S2
      ,SUM(NVL(B.QTY_S4,0))  D_S4
      ,SUM(NVL(B.QTY_F2,0))  D_F2
      ,SUM(NVL(B.QTY_F4,0))  D_F4
      ,SUM(NVL(B.QTY_F5,0))  D_F5
      ,SUM(NVL(B.QTY_A2,0))  D_A2
      ,SUM(NVL(B.QTY_A4,0))  D_A4
      ,SUM(NVL(B.QTY_A5,0))  D_A5
      
      ,SUM(NVL(C.QTY_TTL,0)) L_TTL
            
      ,SUM(NVL(C.QTY_D2,0))  L_D2
      ,SUM(NVL(C.QTY_D4,0))  L_D4
      ,SUM(NVL(C.QTY_D5,0))  L_D5
      ,SUM(NVL(C.QTY_D7,0))  L_D7
      ,SUM(NVL(C.QTY_R2,0))  L_R2
      ,SUM(NVL(C.QTY_R5,0))  L_R5
      ,SUM(NVL(C.QTY_R9,0))  L_R9
      ,SUM(NVL(C.QTY_O2,0))  L_O2
      ,SUM(NVL(C.QTY_O4,0))  L_O4
      ,SUM(NVL(C.QTY_S2,0))  L_S2
      ,SUM(NVL(C.QTY_S4,0))  L_S4
      ,SUM(NVL(C.QTY_F2,0))  L_F2
      ,SUM(NVL(C.QTY_F4,0))  L_F4
      ,SUM(NVL(C.QTY_F5,0))  L_F5
      ,SUM(NVL(C.QTY_A2,0))  L_A2
      ,SUM(NVL(C.QTY_A4,0))  L_A4    
      ,SUM(NVL(C.QTY_A5,0))  L_A5   
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
      ,SUM(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
      ,SUM(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
      ,SUM(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
      ,SUM(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
      ,SUM(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
      ,SUM(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
      ,SUM(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
      ,SUM(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
      ,SUM(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
      ,SUM(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
      ,SUM(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
      ,SUM(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
      ,SUM(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
      ,SUM(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
      ,SUM(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
      ,SUM(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
      ,SUM(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A

      
      ,SUM(NVL(D.QTY_TTL,0)) P_TTL
            
      ,SUM(NVL(D.QTY_D2,0))  P_D2
      ,SUM(NVL(D.QTY_D4,0))  P_D4
      ,SUM(NVL(D.QTY_D5,0))  P_D5
      ,SUM(NVL(D.QTY_D7,0))  P_D7
      ,SUM(NVL(D.QTY_R2,0))  P_R2
      ,SUM(NVL(D.QTY_R5,0))  P_R5
      ,SUM(NVL(D.QTY_R9,0))  P_R9
      ,SUM(NVL(D.QTY_O2,0))  P_O2
      ,SUM(NVL(D.QTY_O4,0))  P_O4
      ,SUM(NVL(D.QTY_S2,0))  P_S2
      ,SUM(NVL(D.QTY_S4,0))  P_S4
      ,SUM(NVL(D.QTY_F2,0))  P_F2
      ,SUM(NVL(D.QTY_F4,0))  P_F4
      ,SUM(NVL(D.QTY_F5,0))  P_F5
      ,SUM(NVL(D.QTY_A2,0))  P_A2
      ,SUM(NVL(D.QTY_A4,0))  P_A4   
      ,SUM(NVL(D.QTY_A5,0))  P_A5   
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
      ,SUM(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
      ,SUM(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
      ,SUM(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
      ,SUM(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
      ,SUM(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
      ,SUM(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
      ,SUM(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
      ,SUM(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
      ,SUM(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
      ,SUM(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
      ,SUM(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
      ,SUM(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
      ,SUM(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
      ,SUM(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
      ,SUM(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
      ,SUM(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B 
      ,SUM(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B 
      
      ,100 CLPT_SEQ             
      ,2 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)

GROUP BY A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD
      ,A.WEEK
      ,A.VVD

-- ===============================================
-- VVD 검색조건인 경우 아래 SQL 은 제외(G.TTL, LANE TTL)
-- ===============================================
#if (${vvd_cd} == '') 

UNION ALL
-- LANE AVERAGE  TOTAL (YARD 국분) ---------------------------------------
SELECT A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD
      ,'AVG PFMC' WEEK
      ,' ' VVD
      ,A.YD_CD  
      ,AVG(NVL(B.QTY_TTL,0)) D_TTL
            
      ,AVG(NVL(B.QTY_D2,0))  D_D2
      ,AVG(NVL(B.QTY_D4,0))  D_D4
      ,AVG(NVL(B.QTY_D5,0))  D_D5
      ,AVG(NVL(B.QTY_D7,0))  D_D7
      ,AVG(NVL(B.QTY_R2,0))  D_R2
      ,AVG(NVL(B.QTY_R5,0))  D_R5
      ,AVG(NVL(B.QTY_R9,0))  D_R9
      ,AVG(NVL(B.QTY_O2,0))  D_O2
      ,AVG(NVL(B.QTY_O4,0))  D_O4
      ,AVG(NVL(B.QTY_S2,0))  D_S2
      ,AVG(NVL(B.QTY_S4,0))  D_S4
      ,AVG(NVL(B.QTY_F2,0))  D_F2
      ,AVG(NVL(B.QTY_F4,0))  D_F4
      ,AVG(NVL(B.QTY_F5,0))  D_F5
      ,AVG(NVL(B.QTY_A2,0))  D_A2
      ,AVG(NVL(B.QTY_A4,0))  D_A4
      ,AVG(NVL(B.QTY_A5,0))  D_A5
      
      ,AVG(NVL(C.QTY_TTL,0)) L_TTL
            
      ,AVG(NVL(C.QTY_D2,0))  L_D2
      ,AVG(NVL(C.QTY_D4,0))  L_D4
      ,AVG(NVL(C.QTY_D5,0))  L_D5
      ,AVG(NVL(C.QTY_D7,0))  L_D7
      ,AVG(NVL(C.QTY_R2,0))  L_R2
      ,AVG(NVL(C.QTY_R5,0))  L_R5
      ,AVG(NVL(C.QTY_R9,0))  L_R9
      ,AVG(NVL(C.QTY_O2,0))  L_O2
      ,AVG(NVL(C.QTY_O4,0))  L_O4
      ,AVG(NVL(C.QTY_S2,0))  L_S2
      ,AVG(NVL(C.QTY_S4,0))  L_S4
      ,AVG(NVL(C.QTY_F2,0))  L_F2
      ,AVG(NVL(C.QTY_F4,0))  L_F4
      ,AVG(NVL(C.QTY_F5,0))  L_F5
      ,AVG(NVL(C.QTY_A2,0))  L_A2
      ,AVG(NVL(C.QTY_A4,0))  L_A4    
      ,AVG(NVL(C.QTY_A5,0))  L_A5    
      
      ,AVG(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
      ,AVG(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
      ,AVG(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
      ,AVG(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
      ,AVG(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
      ,AVG(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
      ,AVG(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
      ,AVG(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
      ,AVG(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
      ,AVG(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
      ,AVG(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
      ,AVG(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
      ,AVG(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
      ,AVG(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
      ,AVG(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
      ,AVG(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
      ,AVG(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
      ,AVG(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A

      
      ,AVG(NVL(D.QTY_TTL,0)) P_TTL
            
      ,AVG(NVL(D.QTY_D2,0))  P_D2
      ,AVG(NVL(D.QTY_D4,0))  P_D4
      ,AVG(NVL(D.QTY_D5,0))  P_D5
      ,AVG(NVL(D.QTY_D7,0))  P_D7
      ,AVG(NVL(D.QTY_R2,0))  P_R2
      ,AVG(NVL(D.QTY_R5,0))  P_R5
      ,AVG(NVL(D.QTY_R9,0))  P_R9
      ,AVG(NVL(D.QTY_O2,0))  P_O2
      ,AVG(NVL(D.QTY_O4,0))  P_O4
      ,AVG(NVL(D.QTY_S2,0))  P_S2
      ,AVG(NVL(D.QTY_S4,0))  P_S4
      ,AVG(NVL(D.QTY_F2,0))  P_F2
      ,AVG(NVL(D.QTY_F4,0))  P_F4
      ,AVG(NVL(D.QTY_F5,0))  P_F5
      ,AVG(NVL(D.QTY_A2,0))  P_A2
      ,AVG(NVL(D.QTY_A4,0))  P_A4   
      ,AVG(NVL(D.QTY_A5,0))  P_A5   
      
      ,AVG(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
      ,AVG(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
      ,AVG(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
      ,AVG(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
      ,AVG(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
      ,AVG(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
      ,AVG(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
      ,AVG(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
      ,AVG(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
      ,AVG(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
      ,AVG(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
      ,AVG(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
      ,AVG(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
      ,AVG(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
      ,AVG(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
      ,AVG(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
      ,AVG(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B    
      ,AVG(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B    
      
      ,0 CLPT_SEQ                
      ,3 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)

GROUP BY A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD 
      ,A.YD_CD    
         
        
UNION ALL
-- LANE AVERAGE  TOTAL (YARD 없음) ---------------------------------------
SELECT A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD
      ,'AVG PFMC' WEEK
      ,'' VVD
      ,'TTL' YD_CD   
      ,SUM(D_TTL)
            
      ,SUM(D_D2 ) 
      ,SUM(D_D4 )
      ,SUM(D_D5 )
      ,SUM(D_D7 )
      ,SUM(D_R2 )
      ,SUM(D_R5 )
      ,SUM(D_R9 )
      ,SUM(D_O2 )
      ,SUM(D_O4 )
      ,SUM(D_S2 )
      ,SUM(D_S4 )
      ,SUM(D_F2 )
      ,SUM(D_F4 )
      ,SUM(D_F5 )
      ,SUM(D_A2 )
      ,SUM(D_A4 )
      ,SUM(D_A5 )

      ,SUM(L_TTL)

      ,SUM(L_D2 )
      ,SUM(L_D4 )
      ,SUM(L_D5 )
      ,SUM(L_D7 )
      ,SUM(L_R2 )
      ,SUM(L_R5 )
      ,SUM(L_R9 )
      ,SUM(L_O2 )
      ,SUM(L_O4 )
      ,SUM(L_S2 )
      ,SUM(L_S4 )
      ,SUM(L_F2 )
      ,SUM(L_F4 )
      ,SUM(L_F5 )
      ,SUM(L_A2 )
      ,SUM(L_A4 )   
      ,SUM(L_A5 )
      
      ,SUM(DF_TTL_A)
      ,SUM(DF_D2_A)
      ,SUM(DF_D4_A)
      ,SUM(DF_D5_A)
      ,SUM(DF_D7_A)
      ,SUM(DF_R2_A)
      ,SUM(DF_R5_A)
      ,SUM(DF_R9_A)
      ,SUM(DF_O2_A)
      ,SUM(DF_O4_A)
      ,SUM(DF_S2_A)
      ,SUM(DF_S4_A)
      ,SUM(DF_F2_A)
      ,SUM(DF_F4_A)
      ,SUM(DF_F5_A)
      ,SUM(DF_A2_A)
      ,SUM(DF_A4_A)
      ,SUM(DF_A5_A)

      
      ,SUM(P_TTL)
            
      ,SUM(P_D2)
      ,SUM(P_D4)
      ,SUM(P_D5)
      ,SUM(P_D7)
      ,SUM(P_R2)
      ,SUM(P_R5)
      ,SUM(P_R9)
      ,SUM(P_O2)
      ,SUM(P_O4)
      ,SUM(P_S2)
      ,SUM(P_S4)
      ,SUM(P_F2)
      ,SUM(P_F4)
      ,SUM(P_F5)
      ,SUM(P_A2)
      ,SUM(P_A4)   
      ,SUM(P_A5)
      
      ,SUM(DF_TTL_B)
      ,SUM(DF_D2_B)
      ,SUM(DF_D4_B)
      ,SUM(DF_D5_B)
      ,SUM(DF_D7_B)
      ,SUM(DF_R2_B)
      ,SUM(DF_R5_B)
      ,SUM(DF_R9_B)
      ,SUM(DF_O2_B)
      ,SUM(DF_O4_B)
      ,SUM(DF_S2_B)
      ,SUM(DF_S4_B)
      ,SUM(DF_F2_B)
      ,SUM(DF_F4_B)
      ,SUM(DF_F5_B)
      ,SUM(DF_A2_B)
      ,SUM(DF_A4_B)    
      ,SUM(DF_A5_B)    
      
      ,100 CLPT_SEQ                
      ,4 SORT_FLAG
FROM
(      
    SELECT A.TRD_CD
          ,A.SUB_TRD_CD
          ,A.SLAN_CD
          ,'' WEEK
          ,'' VVD
          ,A.YD_CD  
          ,AVG(NVL(B.QTY_TTL,0)) D_TTL
                
          ,AVG(NVL(B.QTY_D2,0))  D_D2
          ,AVG(NVL(B.QTY_D4,0))  D_D4
          ,AVG(NVL(B.QTY_D5,0))  D_D5
          ,AVG(NVL(B.QTY_D7,0))  D_D7
          ,AVG(NVL(B.QTY_R2,0))  D_R2
          ,AVG(NVL(B.QTY_R5,0))  D_R5
          ,AVG(NVL(B.QTY_R9,0))  D_R9
          ,AVG(NVL(B.QTY_O2,0))  D_O2
          ,AVG(NVL(B.QTY_O4,0))  D_O4
          ,AVG(NVL(B.QTY_S2,0))  D_S2
          ,AVG(NVL(B.QTY_S4,0))  D_S4
          ,AVG(NVL(B.QTY_F2,0))  D_F2
          ,AVG(NVL(B.QTY_F4,0))  D_F4
          ,AVG(NVL(B.QTY_F5,0))  D_F5
          ,AVG(NVL(B.QTY_A2,0))  D_A2
          ,AVG(NVL(B.QTY_A4,0))  D_A4
          ,AVG(NVL(B.QTY_A5,0))  D_A5
          
          ,AVG(NVL(C.QTY_TTL,0)) L_TTL
                
          ,AVG(NVL(C.QTY_D2,0))  L_D2
          ,AVG(NVL(C.QTY_D4,0))  L_D4
          ,AVG(NVL(C.QTY_D5,0))  L_D5
          ,AVG(NVL(C.QTY_D7,0))  L_D7
          ,AVG(NVL(C.QTY_R2,0))  L_R2
          ,AVG(NVL(C.QTY_R5,0))  L_R5
          ,AVG(NVL(C.QTY_R9,0))  L_R9
          ,AVG(NVL(C.QTY_O2,0))  L_O2
          ,AVG(NVL(C.QTY_O4,0))  L_O4
          ,AVG(NVL(C.QTY_S2,0))  L_S2
          ,AVG(NVL(C.QTY_S4,0))  L_S4
          ,AVG(NVL(C.QTY_F2,0))  L_F2
          ,AVG(NVL(C.QTY_F4,0))  L_F4
          ,AVG(NVL(C.QTY_F5,0))  L_F5
          ,AVG(NVL(C.QTY_A2,0))  L_A2
          ,AVG(NVL(C.QTY_A4,0))  L_A4    
          ,AVG(NVL(C.QTY_A5,0))  L_A5   
          
          ,AVG(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
          ,AVG(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
          ,AVG(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
          ,AVG(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
          ,AVG(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
          ,AVG(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
          ,AVG(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
          ,AVG(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
          ,AVG(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
          ,AVG(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
          ,AVG(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
          ,AVG(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
          ,AVG(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
          ,AVG(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
          ,AVG(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
          ,AVG(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
          ,AVG(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
          ,AVG(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A
    
          
          ,AVG(NVL(D.QTY_TTL,0)) P_TTL
                
          ,AVG(NVL(D.QTY_D2,0))  P_D2
          ,AVG(NVL(D.QTY_D4,0))  P_D4
          ,AVG(NVL(D.QTY_D5,0))  P_D5
          ,AVG(NVL(D.QTY_D7,0))  P_D7
          ,AVG(NVL(D.QTY_R2,0))  P_R2
          ,AVG(NVL(D.QTY_R5,0))  P_R5
          ,AVG(NVL(D.QTY_R9,0))  P_R9
          ,AVG(NVL(D.QTY_O2,0))  P_O2
          ,AVG(NVL(D.QTY_O4,0))  P_O4
          ,AVG(NVL(D.QTY_S2,0))  P_S2
          ,AVG(NVL(D.QTY_S4,0))  P_S4
          ,AVG(NVL(D.QTY_F2,0))  P_F2
          ,AVG(NVL(D.QTY_F4,0))  P_F4
          ,AVG(NVL(D.QTY_F5,0))  P_F5
          ,AVG(NVL(D.QTY_A2,0))  P_A2
          ,AVG(NVL(D.QTY_A4,0))  P_A4   
          ,AVG(NVL(D.QTY_A5,0))  P_A5
          
          ,AVG(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
          ,AVG(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
          ,AVG(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
          ,AVG(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
          ,AVG(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
          ,AVG(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
          ,AVG(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
          ,AVG(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
          ,AVG(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
          ,AVG(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
          ,AVG(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
          ,AVG(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
          ,AVG(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
          ,AVG(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
          ,AVG(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
          ,AVG(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
          ,AVG(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B    
          ,AVG(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B    
          
          ,0 CLPT_SEQ                
          ,3 SORT_FLAG
    FROM DUMMY_HEAD A
        ,DUMMY_DSCH B
        ,DUMMY_LOAD C
        ,DUMMY_PLAN D
    WHERE A.VSL_CD     = B.VSL_CD(+)
    AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
    AND   A.DIR_CD     = B.SKD_DIR_CD(+)
    AND   A.YD_CD      = B.POD_YD_CD(+)
    AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
    AND   A.VSL_CD     = C.VSL_CD(+)
    AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
    AND   A.DIR_CD     = C.SKD_DIR_CD(+)
    AND   A.YD_CD      = C.POD_YD_CD(+)
    AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
    AND   A.VSL_CD     = D.VSL_CD(+)
    AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
    AND   A.DIR_CD     = D.SKD_DIR_CD(+)
    AND   A.YD_CD      = D.POD_YD_CD(+)
    
    GROUP BY A.TRD_CD
          ,A.SUB_TRD_CD
          ,A.SLAN_CD 
          ,A.YD_CD    
    
) A
GROUP BY  A.TRD_CD
      ,A.SUB_TRD_CD
      ,A.SLAN_CD      
            
UNION ALL
-- SUB TRADE TOTAL (YARD  구분) ---------------------------------------
SELECT A.TRD_CD
      ,A.SUB_TRD_CD
      ,'ZTTL' SLAN_CD
      ,'' WEEK
      ,'' VVD
      ,A.YD_CD  
      ,SUM(NVL(B.QTY_TTL,0)) D_TTL
            
      ,SUM(NVL(B.QTY_D2,0))  D_D2
      ,SUM(NVL(B.QTY_D4,0))  D_D4
      ,SUM(NVL(B.QTY_D5,0))  D_D5
      ,SUM(NVL(B.QTY_D7,0))  D_D7
      ,SUM(NVL(B.QTY_R2,0))  D_R2
      ,SUM(NVL(B.QTY_R5,0))  D_R5
      ,SUM(NVL(B.QTY_R9,0))  D_R9
      ,SUM(NVL(B.QTY_O2,0))  D_O2
      ,SUM(NVL(B.QTY_O4,0))  D_O4
      ,SUM(NVL(B.QTY_S2,0))  D_S2
      ,SUM(NVL(B.QTY_S4,0))  D_S4
      ,SUM(NVL(B.QTY_F2,0))  D_F2
      ,SUM(NVL(B.QTY_F4,0))  D_F4
      ,SUM(NVL(B.QTY_F5,0))  D_F5
      ,SUM(NVL(B.QTY_A2,0))  D_A2
      ,SUM(NVL(B.QTY_A4,0))  D_A4
      ,SUM(NVL(B.QTY_A5,0))  D_A5
      
      ,SUM(NVL(C.QTY_TTL,0)) L_TTL
            
      ,SUM(NVL(C.QTY_D2,0))  L_D2
      ,SUM(NVL(C.QTY_D4,0))  L_D4
      ,SUM(NVL(C.QTY_D5,0))  L_D5
      ,SUM(NVL(C.QTY_D7,0))  L_D7
      ,SUM(NVL(C.QTY_R2,0))  L_R2
      ,SUM(NVL(C.QTY_R5,0))  L_R5
      ,SUM(NVL(C.QTY_R9,0))  L_R9
      ,SUM(NVL(C.QTY_O2,0))  L_O2
      ,SUM(NVL(C.QTY_O4,0))  L_O4
      ,SUM(NVL(C.QTY_S2,0))  L_S2
      ,SUM(NVL(C.QTY_S4,0))  L_S4
      ,SUM(NVL(C.QTY_F2,0))  L_F2
      ,SUM(NVL(C.QTY_F4,0))  L_F4
      ,SUM(NVL(C.QTY_F5,0))  L_F5
      ,SUM(NVL(C.QTY_A2,0))  L_A2
      ,SUM(NVL(C.QTY_A4,0))  L_A4    
      ,SUM(NVL(C.QTY_A5,0))  L_A5 
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
      ,SUM(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
      ,SUM(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
      ,SUM(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
      ,SUM(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
      ,SUM(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
      ,SUM(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
      ,SUM(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
      ,SUM(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
      ,SUM(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
      ,SUM(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
      ,SUM(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
      ,SUM(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
      ,SUM(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
      ,SUM(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
      ,SUM(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
      ,SUM(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
      ,SUM(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A

      
      ,SUM(NVL(D.QTY_TTL,0)) P_TTL
            
      ,SUM(NVL(D.QTY_D2,0))  P_D2
      ,SUM(NVL(D.QTY_D4,0))  P_D4
      ,SUM(NVL(D.QTY_D5,0))  P_D5
      ,SUM(NVL(D.QTY_D7,0))  P_D7
      ,SUM(NVL(D.QTY_R2,0))  P_R2
      ,SUM(NVL(D.QTY_R5,0))  P_R5
      ,SUM(NVL(D.QTY_R9,0))  P_R9
      ,SUM(NVL(D.QTY_O2,0))  P_O2
      ,SUM(NVL(D.QTY_O4,0))  P_O4
      ,SUM(NVL(D.QTY_S2,0))  P_S2
      ,SUM(NVL(D.QTY_S4,0))  P_S4
      ,SUM(NVL(D.QTY_F2,0))  P_F2
      ,SUM(NVL(D.QTY_F4,0))  P_F4
      ,SUM(NVL(D.QTY_F5,0))  P_F5
      ,SUM(NVL(D.QTY_A2,0))  P_A2
      ,SUM(NVL(D.QTY_A4,0))  P_A4   
      ,SUM(NVL(D.QTY_A5,0))  P_A5   
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
      ,SUM(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
      ,SUM(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
      ,SUM(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
      ,SUM(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
      ,SUM(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
      ,SUM(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
      ,SUM(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
      ,SUM(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
      ,SUM(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
      ,SUM(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
      ,SUM(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
      ,SUM(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
      ,SUM(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
      ,SUM(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
      ,SUM(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
      ,SUM(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B 
      ,SUM(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B 
      
      ,0 CLPT_SEQ             
      ,5 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)

GROUP BY A.TRD_CD
      ,A.SUB_TRD_CD 
      ,A.YD_CD

      
UNION ALL
-- SUB TRADE TOTAL (YARD 없음) ---------------------------------------
SELECT A.TRD_CD
      ,A.SUB_TRD_CD 
      ,'' SLAN_CD
      ,'' WEEK
      ,'' VVD
      ,'TTL' YD_CD  
      ,SUM(NVL(B.QTY_TTL,0)) D_TTL
            
      ,SUM(NVL(B.QTY_D2,0))  D_D2
      ,SUM(NVL(B.QTY_D4,0))  D_D4
      ,SUM(NVL(B.QTY_D5,0))  D_D5
      ,SUM(NVL(B.QTY_D7,0))  D_D7
      ,SUM(NVL(B.QTY_R2,0))  D_R2
      ,SUM(NVL(B.QTY_R5,0))  D_R5
      ,SUM(NVL(B.QTY_R9,0))  D_R9
      ,SUM(NVL(B.QTY_O2,0))  D_O2
      ,SUM(NVL(B.QTY_O4,0))  D_O4
      ,SUM(NVL(B.QTY_S2,0))  D_S2
      ,SUM(NVL(B.QTY_S4,0))  D_S4
      ,SUM(NVL(B.QTY_F2,0))  D_F2
      ,SUM(NVL(B.QTY_F4,0))  D_F4
      ,SUM(NVL(B.QTY_F5,0))  D_F5
      ,SUM(NVL(B.QTY_A2,0))  D_A2
      ,SUM(NVL(B.QTY_A4,0))  D_A4
      ,SUM(NVL(B.QTY_A5,0))  D_A5
      
      ,SUM(NVL(C.QTY_TTL,0)) L_TTL
            
      ,SUM(NVL(C.QTY_D2,0))  L_D2
      ,SUM(NVL(C.QTY_D4,0))  L_D4
      ,SUM(NVL(C.QTY_D5,0))  L_D5
      ,SUM(NVL(C.QTY_D7,0))  L_D7
      ,SUM(NVL(C.QTY_R2,0))  L_R2
      ,SUM(NVL(C.QTY_R5,0))  L_R5
      ,SUM(NVL(C.QTY_R9,0))  L_R9
      ,SUM(NVL(C.QTY_O2,0))  L_O2
      ,SUM(NVL(C.QTY_O4,0))  L_O4
      ,SUM(NVL(C.QTY_S2,0))  L_S2
      ,SUM(NVL(C.QTY_S4,0))  L_S4
      ,SUM(NVL(C.QTY_F2,0))  L_F2
      ,SUM(NVL(C.QTY_F4,0))  L_F4
      ,SUM(NVL(C.QTY_F5,0))  L_F5
      ,SUM(NVL(C.QTY_A2,0))  L_A2
      ,SUM(NVL(C.QTY_A4,0))  L_A4    
      ,SUM(NVL(C.QTY_A5,0))  L_A5    
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
      ,SUM(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
      ,SUM(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
      ,SUM(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
      ,SUM(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
      ,SUM(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
      ,SUM(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
      ,SUM(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
      ,SUM(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
      ,SUM(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
      ,SUM(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
      ,SUM(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
      ,SUM(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
      ,SUM(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
      ,SUM(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
      ,SUM(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
      ,SUM(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
      ,SUM(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A

      
      ,SUM(NVL(D.QTY_TTL,0)) P_TTL
            
      ,SUM(NVL(D.QTY_D2,0))  P_D2
      ,SUM(NVL(D.QTY_D4,0))  P_D4
      ,SUM(NVL(D.QTY_D5,0))  P_D5
      ,SUM(NVL(D.QTY_D7,0))  P_D7
      ,SUM(NVL(D.QTY_R2,0))  P_R2
      ,SUM(NVL(D.QTY_R5,0))  P_R5
      ,SUM(NVL(D.QTY_R9,0))  P_R9
      ,SUM(NVL(D.QTY_O2,0))  P_O2
      ,SUM(NVL(D.QTY_O4,0))  P_O4
      ,SUM(NVL(D.QTY_S2,0))  P_S2
      ,SUM(NVL(D.QTY_S4,0))  P_S4
      ,SUM(NVL(D.QTY_F2,0))  P_F2
      ,SUM(NVL(D.QTY_F4,0))  P_F4
      ,SUM(NVL(D.QTY_F5,0))  P_F5
      ,SUM(NVL(D.QTY_A2,0))  P_A2
      ,SUM(NVL(D.QTY_A4,0))  P_A4   
      ,SUM(NVL(D.QTY_A5,0))  P_A5  
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
      ,SUM(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
      ,SUM(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
      ,SUM(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
      ,SUM(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
      ,SUM(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
      ,SUM(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
      ,SUM(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
      ,SUM(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
      ,SUM(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
      ,SUM(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
      ,SUM(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
      ,SUM(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
      ,SUM(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
      ,SUM(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
      ,SUM(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
      ,SUM(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B 
      ,SUM(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B 
      
      ,100 CLPT_SEQ             
      ,6 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)

GROUP BY  A.TRD_CD
      ,A.SUB_TRD_CD  

UNION ALL
-- GRAND TOTAL (YARD 구분) ---------------------------------------
SELECT 'ZTTL' TRD_CD
      ,'' SUB_TRD_CD
      ,'' SLAN_CD
      ,'' WEEK
      ,'' VVD
      ,A.YD_CD  
      ,SUM(NVL(B.QTY_TTL,0)) D_TTL
            
      ,SUM(NVL(B.QTY_D2,0))  D_D2
      ,SUM(NVL(B.QTY_D4,0))  D_D4
      ,SUM(NVL(B.QTY_D5,0))  D_D5
      ,SUM(NVL(B.QTY_D7,0))  D_D7
      ,SUM(NVL(B.QTY_R2,0))  D_R2
      ,SUM(NVL(B.QTY_R5,0))  D_R5
      ,SUM(NVL(B.QTY_R9,0))  D_R9
      ,SUM(NVL(B.QTY_O2,0))  D_O2
      ,SUM(NVL(B.QTY_O4,0))  D_O4
      ,SUM(NVL(B.QTY_S2,0))  D_S2
      ,SUM(NVL(B.QTY_S4,0))  D_S4
      ,SUM(NVL(B.QTY_F2,0))  D_F2
      ,SUM(NVL(B.QTY_F4,0))  D_F4
      ,SUM(NVL(B.QTY_F5,0))  D_F5
      ,SUM(NVL(B.QTY_A2,0))  D_A2
      ,SUM(NVL(B.QTY_A4,0))  D_A4
      ,SUM(NVL(B.QTY_A5,0))  D_A5
      
      ,SUM(NVL(C.QTY_TTL,0)) L_TTL
            
      ,SUM(NVL(C.QTY_D2,0))  L_D2
      ,SUM(NVL(C.QTY_D4,0))  L_D4
      ,SUM(NVL(C.QTY_D5,0))  L_D5
      ,SUM(NVL(C.QTY_D7,0))  L_D7
      ,SUM(NVL(C.QTY_R2,0))  L_R2
      ,SUM(NVL(C.QTY_R5,0))  L_R5
      ,SUM(NVL(C.QTY_R9,0))  L_R9
      ,SUM(NVL(C.QTY_O2,0))  L_O2
      ,SUM(NVL(C.QTY_O4,0))  L_O4
      ,SUM(NVL(C.QTY_S2,0))  L_S2
      ,SUM(NVL(C.QTY_S4,0))  L_S4
      ,SUM(NVL(C.QTY_F2,0))  L_F2
      ,SUM(NVL(C.QTY_F4,0))  L_F4
      ,SUM(NVL(C.QTY_F5,0))  L_F5
      ,SUM(NVL(C.QTY_A2,0))  L_A2
      ,SUM(NVL(C.QTY_A4,0))  L_A4    
      ,SUM(NVL(C.QTY_A5,0))  L_A5
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
      ,SUM(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
      ,SUM(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
      ,SUM(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
      ,SUM(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
      ,SUM(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
      ,SUM(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
      ,SUM(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
      ,SUM(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
      ,SUM(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
      ,SUM(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
      ,SUM(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
      ,SUM(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
      ,SUM(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
      ,SUM(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
      ,SUM(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
      ,SUM(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
      ,SUM(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A

      
      ,SUM(NVL(D.QTY_TTL,0)) P_TTL
            
      ,SUM(NVL(D.QTY_D2,0))  P_D2
      ,SUM(NVL(D.QTY_D4,0))  P_D4
      ,SUM(NVL(D.QTY_D5,0))  P_D5
      ,SUM(NVL(D.QTY_D7,0))  P_D7
      ,SUM(NVL(D.QTY_R2,0))  P_R2
      ,SUM(NVL(D.QTY_R5,0))  P_R5
      ,SUM(NVL(D.QTY_R9,0))  P_R9
      ,SUM(NVL(D.QTY_O2,0))  P_O2
      ,SUM(NVL(D.QTY_O4,0))  P_O4
      ,SUM(NVL(D.QTY_S2,0))  P_S2
      ,SUM(NVL(D.QTY_S4,0))  P_S4
      ,SUM(NVL(D.QTY_F2,0))  P_F2
      ,SUM(NVL(D.QTY_F4,0))  P_F4
      ,SUM(NVL(D.QTY_F5,0))  P_F5
      ,SUM(NVL(D.QTY_A2,0))  P_A2
      ,SUM(NVL(D.QTY_A4,0))  P_A4   
      ,SUM(NVL(D.QTY_A5,0))  P_A5  
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
      ,SUM(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
      ,SUM(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
      ,SUM(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
      ,SUM(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
      ,SUM(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
      ,SUM(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
      ,SUM(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
      ,SUM(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
      ,SUM(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
      ,SUM(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
      ,SUM(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
      ,SUM(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
      ,SUM(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
      ,SUM(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
      ,SUM(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
      ,SUM(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B 
      ,SUM(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B 
      
      ,0 CLPT_SEQ             
      ,7 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)

GROUP BY A.YD_CD
        
UNION ALL

-- GRAND TOTAL (YARD 없음) ---------------------------------------
SELECT 'ZTTL' TRD_CD
      ,'' SUB_TRD_CD
      ,'' SLAN_CD
      ,'' WEEK
      ,'' VVD
      ,'TTL' YD_CD  
      ,SUM(NVL(B.QTY_TTL,0)) D_TTL
            
      ,SUM(NVL(B.QTY_D2,0))  D_D2
      ,SUM(NVL(B.QTY_D4,0))  D_D4
      ,SUM(NVL(B.QTY_D5,0))  D_D5
      ,SUM(NVL(B.QTY_D7,0))  D_D7
      ,SUM(NVL(B.QTY_R2,0))  D_R2
      ,SUM(NVL(B.QTY_R5,0))  D_R5
      ,SUM(NVL(B.QTY_R9,0))  D_R9
      ,SUM(NVL(B.QTY_O2,0))  D_O2
      ,SUM(NVL(B.QTY_O4,0))  D_O4
      ,SUM(NVL(B.QTY_S2,0))  D_S2
      ,SUM(NVL(B.QTY_S4,0))  D_S4
      ,SUM(NVL(B.QTY_F2,0))  D_F2
      ,SUM(NVL(B.QTY_F4,0))  D_F4
      ,SUM(NVL(B.QTY_F5,0))  D_F5
      ,SUM(NVL(B.QTY_A2,0))  D_A2
      ,SUM(NVL(B.QTY_A4,0))  D_A4
      ,SUM(NVL(B.QTY_A5,0))  D_A5
      
      ,SUM(NVL(C.QTY_TTL,0)) L_TTL
            
      ,SUM(NVL(C.QTY_D2,0))  L_D2
      ,SUM(NVL(C.QTY_D4,0))  L_D4
      ,SUM(NVL(C.QTY_D5,0))  L_D5
      ,SUM(NVL(C.QTY_D7,0))  L_D7
      ,SUM(NVL(C.QTY_R2,0))  L_R2
      ,SUM(NVL(C.QTY_R5,0))  L_R5
      ,SUM(NVL(C.QTY_R9,0))  L_R9
      ,SUM(NVL(C.QTY_O2,0))  L_O2
      ,SUM(NVL(C.QTY_O4,0))  L_O4
      ,SUM(NVL(C.QTY_S2,0))  L_S2
      ,SUM(NVL(C.QTY_S4,0))  L_S4
      ,SUM(NVL(C.QTY_F2,0))  L_F2
      ,SUM(NVL(C.QTY_F4,0))  L_F4
      ,SUM(NVL(C.QTY_F5,0))  L_F5
      ,SUM(NVL(C.QTY_A2,0))  L_A2
      ,SUM(NVL(C.QTY_A4,0))  L_A4    
      ,SUM(NVL(C.QTY_A5,0))  L_A5
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(C.QTY_TTL, 0)) DF_TTL_A
      ,SUM(NVL(B.QTY_D2,  0) - NVL(C.QTY_D2,  0)) DF_D2_A
      ,SUM(NVL(B.QTY_D4,  0) - NVL(C.QTY_D4,  0)) DF_D4_A
      ,SUM(NVL(B.QTY_D5,  0) - NVL(C.QTY_D5,  0)) DF_D5_A
      ,SUM(NVL(B.QTY_D7,  0) - NVL(C.QTY_D7,  0)) DF_D7_A
      ,SUM(NVL(B.QTY_R2,  0) - NVL(C.QTY_R2,  0)) DF_R2_A
      ,SUM(NVL(B.QTY_R5,  0) - NVL(C.QTY_R5,  0)) DF_R5_A
      ,SUM(NVL(B.QTY_R9,  0) - NVL(C.QTY_R9,  0)) DF_R9_A
      ,SUM(NVL(B.QTY_O2,  0) - NVL(C.QTY_O2,  0)) DF_O2_A
      ,SUM(NVL(B.QTY_O4,  0) - NVL(C.QTY_O4,  0)) DF_O4_A
      ,SUM(NVL(B.QTY_S2,  0) - NVL(C.QTY_S2,  0)) DF_S2_A
      ,SUM(NVL(B.QTY_S4,  0) - NVL(C.QTY_S4,  0)) DF_S4_A
      ,SUM(NVL(B.QTY_F2,  0) - NVL(C.QTY_F2,  0)) DF_F2_A
      ,SUM(NVL(B.QTY_F4,  0) - NVL(C.QTY_F4,  0)) DF_F4_A
      ,SUM(NVL(B.QTY_F5,  0) - NVL(C.QTY_F5,  0)) DF_F5_A
      ,SUM(NVL(B.QTY_A2,  0) - NVL(C.QTY_A2,  0)) DF_A2_A
      ,SUM(NVL(B.QTY_A4,  0) - NVL(C.QTY_A4,  0)) DF_A4_A
      ,SUM(NVL(B.QTY_A5,  0) - NVL(C.QTY_A5,  0)) DF_A5_A

      
      ,SUM(NVL(D.QTY_TTL,0)) P_TTL
            
      ,SUM(NVL(D.QTY_D2,0))  P_D2
      ,SUM(NVL(D.QTY_D4,0))  P_D4
      ,SUM(NVL(D.QTY_D5,0))  P_D5
      ,SUM(NVL(D.QTY_D7,0))  P_D7
      ,SUM(NVL(D.QTY_R2,0))  P_R2
      ,SUM(NVL(D.QTY_R5,0))  P_R5
      ,SUM(NVL(D.QTY_R9,0))  P_R9
      ,SUM(NVL(D.QTY_O2,0))  P_O2
      ,SUM(NVL(D.QTY_O4,0))  P_O4
      ,SUM(NVL(D.QTY_S2,0))  P_S2
      ,SUM(NVL(D.QTY_S4,0))  P_S4
      ,SUM(NVL(D.QTY_F2,0))  P_F2
      ,SUM(NVL(D.QTY_F4,0))  P_F4
      ,SUM(NVL(D.QTY_F5,0))  P_F5
      ,SUM(NVL(D.QTY_A2,0))  P_A2
      ,SUM(NVL(D.QTY_A4,0))  P_A4   
      ,SUM(NVL(D.QTY_A5,0))  P_A5   
      
      ,SUM(NVL(B.QTY_TTL, 0) - NVL(D.QTY_TTL, 0)) DF_TTL_B
      ,SUM(NVL(B.QTY_D2,  0) - NVL(D.QTY_D2,  0)) DF_D2_B
      ,SUM(NVL(B.QTY_D4,  0) - NVL(D.QTY_D4,  0)) DF_D4_B
      ,SUM(NVL(B.QTY_D5,  0) - NVL(D.QTY_D5,  0)) DF_D5_B
      ,SUM(NVL(B.QTY_D7,  0) - NVL(D.QTY_D7,  0)) DF_D7_B
      ,SUM(NVL(B.QTY_R2,  0) - NVL(D.QTY_R2,  0)) DF_R2_B
      ,SUM(NVL(B.QTY_R5,  0) - NVL(D.QTY_R5,  0)) DF_R5_B
      ,SUM(NVL(B.QTY_R9,  0) - NVL(D.QTY_R9,  0)) DF_R9_B
      ,SUM(NVL(B.QTY_O2,  0) - NVL(D.QTY_O2,  0)) DF_O2_B
      ,SUM(NVL(B.QTY_O4,  0) - NVL(D.QTY_O4,  0)) DF_O4_B
      ,SUM(NVL(B.QTY_S2,  0) - NVL(D.QTY_S2,  0)) DF_S2_B
      ,SUM(NVL(B.QTY_S4,  0) - NVL(D.QTY_S4,  0)) DF_S4_B
      ,SUM(NVL(B.QTY_F2,  0) - NVL(D.QTY_F2,  0)) DF_F2_B
      ,SUM(NVL(B.QTY_F4,  0) - NVL(D.QTY_F4,  0)) DF_F4_B
      ,SUM(NVL(B.QTY_F5,  0) - NVL(D.QTY_F5,  0)) DF_F5_B
      ,SUM(NVL(B.QTY_A2,  0) - NVL(D.QTY_A2,  0)) DF_A2_B
      ,SUM(NVL(B.QTY_A4,  0) - NVL(D.QTY_A4,  0)) DF_A4_B 
      ,SUM(NVL(B.QTY_A5,  0) - NVL(D.QTY_A5,  0)) DF_A5_B 
      
      ,100 CLPT_SEQ             
      ,8 SORT_FLAG
FROM DUMMY_HEAD A
    ,DUMMY_DSCH B
    ,DUMMY_LOAD C
    ,DUMMY_PLAN D
WHERE A.VSL_CD     = B.VSL_CD(+)
AND   A.SKD_VOY_NO = B.SKD_VOY_NO(+)
AND   A.DIR_CD     = B.SKD_DIR_CD(+)
AND   A.YD_CD      = B.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = B.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = C.VSL_CD(+)
AND   A.SKD_VOY_NO = C.SKD_VOY_NO(+)
AND   A.DIR_CD     = C.SKD_DIR_CD(+)
AND   A.YD_CD      = C.POD_YD_CD(+)
AND   A.CLPT_IND_SEQ = C.CLPT_IND_SEQ(+)
AND   A.VSL_CD     = D.VSL_CD(+)
AND   A.SKD_VOY_NO = D.SKD_VOY_NO(+)
AND   A.DIR_CD     = D.SKD_DIR_CD(+)
AND   A.YD_CD      = D.POD_YD_CD(+)
-- [종료]VVD 검색조건인 경우 아래 SQL 은 제외(G.TTL, LANE TTL)
#end
            
ORDER BY TRD_CD
        ,SUB_TRD_CD
        ,SLAN_CD
        ,WEEK
        ,VVD
        ,CLPT_SEQ
        ,YD_CD			]]></sql>
			<params>
				<param name="vvd_cd" type="12" value="" out="N"/>
				<param name="fm_wk" type="12" value="" out="N"/>
				<param name="to_wk" type="12" value="" out="N"/>
				<param name="rcc_cd" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
