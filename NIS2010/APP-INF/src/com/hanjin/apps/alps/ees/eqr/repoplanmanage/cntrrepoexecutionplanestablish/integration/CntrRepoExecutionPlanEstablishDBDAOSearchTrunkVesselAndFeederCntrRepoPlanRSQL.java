/*=========================================================
*Copyright(c) 2010 CyberLogitec
*@FileName : CntrRepoExecutionPlanEstablishDBDAOSearchTrunkVesselAndFeederCntrRepoPlanRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2010.04.19
*@LastModifier : 신용찬
*@LastVersion : 1.0
* 2010.04.19 신용찬
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.ees.eqr.repoplanmanage.cntrrepoexecutionplanestablish.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author SHIN YONGCHAN
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CntrRepoExecutionPlanEstablishDBDAOSearchTrunkVesselAndFeederCntrRepoPlanRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * EES_EQR_0059
	  * </pre>
	  */
	public CntrRepoExecutionPlanEstablishDBDAOSearchTrunkVesselAndFeederCntrRepoPlanRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fm_plnyrwk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_plnyrwk",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("repo_pln_id",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.ees.eqr.repoplanmanage.cntrrepoexecutionplanestablish.integration").append("\n"); 
		query.append("FileName : CntrRepoExecutionPlanEstablishDBDAOSearchTrunkVesselAndFeederCntrRepoPlanRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT	 PLN_YRWK								AS T1_PLN_YRWK" ).append("\n"); 
		query.append(",COMPANY								AS T1_CO_CD" ).append("\n"); 
		query.append(",DIVISION								AS T1_DIV" ).append("\n"); 
		query.append(",ITEM									AS T1_TRSP_MOD_CD" ).append("\n"); 
		query.append(",LANE									AS T1_VSL_LANE_CD" ).append("\n"); 
		query.append(",VVD									AS T1_VVD" ).append("\n"); 
		query.append(",FRLOC									AS T1_FM_YD_CD" ).append("\n"); 
		query.append(",TO_CHAR(ETD,'YYYY-MM-DD HH24:MI:SS')	AS T1_FM_ETD_DT" ).append("\n"); 
		query.append(",TOLOC									AS T1_TO_YD_CD" ).append("\n"); 
		query.append(",TO_CHAR(ETB,'YYYY-MM-DD HH24:MI:SS')	AS T1_TO_ETA_DT" ).append("\n"); 
		query.append(",TS										AS T1_TS" ).append("\n"); 
		query.append(",PURPOSE								AS T1_EQ_REPO_PURP_CD" ).append("\n"); 
		query.append(",NVL(CNTRNO,-1)							AS T1_CNTRIMAGE" ).append("\n"); 
		query.append(",MTY									AS T1_REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",BKGNO									AS T1_MTY_BKG_NO" ).append("\n"); 
		query.append("--		,BKG_STS_CD								AS T1_BKG_STS_CD" ).append("\n"); 
		query.append(",REASON									AS T1_REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",REASONREMARK							AS T1_REPO_PLN_FB_RMK" ).append("\n"); 
		query.append(",SUM(TOTALVOL)							AS T1_TOTALVOL" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(${key}VOL)							AS T1_VOL${key}" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",SUM(TOTALCOST)							AS T1_TOTALCOST" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(${key}COST)						AS T1_COST${key}" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",REPO_PLN_ID							AS T1_REPO_PLN_ID		-- HIDDEN" ).append("\n"); 
		query.append(",REF_ID									AS T1_REF_ID			-- HIDDEN" ).append("\n"); 
		query.append(",SORTNUM								AS T1_SORTNUM			-- HIDDEN	PLAN(1), Execution(2), SO(3)를 구분" ).append("\n"); 
		query.append(",NUM									AS T1_NUM				-- HIDDEdN 	NORMAL ROW(1), SUB TOTAL(2), GRAND TOTAL(3) 구분" ).append("\n"); 
		query.append(",PAST_REPO_PLN_FLG						AS T1_PAST_REPO_PLN_FLG	-- HIDDEN   과거에서 온 PLAN (Y)" ).append("\n"); 
		query.append(",SPLIT_REPO_PLN_FLG						AS T1_SPLIT_REPO_PLN_FLG-- HIDDEN   SPLIT 된 EXECUTE 표시(Y)" ).append("\n"); 
		query.append(",(SELECT DISTINCT RCC_CD FROM EQR_ECC_MST WHERE ECC_CD = FM_ECC) AS T1_FM_RCC	-- From ecc's RCC" ).append("\n"); 
		query.append(",(SELECT DISTINCT RCC_CD FROM EQR_ECC_MST WHERE ECC_CD = TO_ECC) AS T1_TO_RCC	-- To   ecc's RCC" ).append("\n"); 
		query.append(",(SELECT DISTINCT LCC_CD FROM EQR_ECC_MST WHERE ECC_CD = FM_ECC) AS T1_FM_LCC	-- From ecc's LCC" ).append("\n"); 
		query.append(",(SELECT DISTINCT LCC_CD FROM EQR_ECC_MST WHERE ECC_CD = TO_ECC) AS T1_TO_LCC	-- To   ecc's LCC" ).append("\n"); 
		query.append(",FM_ECC									AS T1_FM_ECC" ).append("\n"); 
		query.append(",TO_ECC									AS T1_TO_ECC" ).append("\n"); 
		query.append(",''										AS T1_CNTRNO			-- HIDDEN" ).append("\n"); 
		query.append(",''										AS T1_TPSZNO			-- HIDDEN" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(${key}CNTRVOL)						AS T1_CNTRVOL${key}" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",'F'									AS T1_FLAG${key}FLAG" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",''										AS T1_VVD_CNT" ).append("\n"); 
		query.append(",'F'									AS T1_REPOBKG_FLAG" ).append("\n"); 
		query.append(",SUBSTR(FRLOC, 0, 5)					AS T1_SORT_FRLOC" ).append("\n"); 
		query.append(",SUBSTR(TOLOC, 0, 5)					AS T1_SORT_TOLOC" ).append("\n"); 
		query.append(",FM_ECC||TO_ECC							AS T1_SORT" ).append("\n"); 
		query.append(",(SELECT PLN_YR||PLN_WK ETA_WEEK FROM EQR_WK_PRD WHERE WK_ST_DT <= TO_CHAR(ETB,'YYYYMMDD') AND WK_END_DT >= TO_CHAR(ETB,'YYYYMMDD'))	AS T1_ETA_WEEK" ).append("\n"); 
		query.append(",(SELECT PLN_YR||PLN_WK WEEK     FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK > PLN_YRWK AND ROWNUM = 1)										AS T1_PLN_YRWK_NEXT" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(${key}MAXVOL)						AS T1_MAXVOL${key}				-- HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(${key}BASICRATIO)					AS T1_BASICRATIO${key}BASICRATIO	--HIDDEN" ).append("\n"); 
		query.append(",SUM(${key}BASICVOL)					AS T1_BASICVOL${key}BASICVOL		--HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(${key}UNITCOST)					AS T1_UNITCOST${key}			--HIDDEN" ).append("\n"); 
		query.append(",SUM(${key}FROMCOST)					AS T1_FROMCOST${key}			--HIDDEN" ).append("\n"); 
		query.append(",SUM(${key}TOCOST)						AS T1_TOCOST${key}				--HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",PLN_SEQ								AS T1_PLN_SEQ					--HIDDEN" ).append("\n"); 
		query.append(",TOYD									AS T1_TO_YARD" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("SELECT	 DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL') PLN_YRWK" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')                      COMPANY" ).append("\n"); 
		query.append(",A.DIVISION" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')		FRLOC" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL)	ETD" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')		TOLOC" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TOYD,  2, '', 3, '')		TOYD" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETB  ,  2, NULL, 3, NULL)	ETB" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TS   ,  2, '', 3, '')		TS" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')		ITEM" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')		LANE" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')		VVD" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')		PURPOSE" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.CNTRNO,  2, '', 3, '')		CNTRNO" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.MTY,  2, '', 3, '')			MTY" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.BKGNO,  2, '', 3, '')		BKGNO" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, BKG_STS_CD,	2, '', 3, '')	BKG_STS_CD" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')		REASON" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '') REASONREMARK" ).append("\n"); 
		query.append(",SUM(A.TOTALVOL)  TOTALVOL" ).append("\n"); 
		query.append(",SUM(A.TOTALCOST) TOTALCOST" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",SUM(A.${key}VOL)     ${key}VOL" ).append("\n"); 
		query.append(",SUM(A.${key}COST)    ${key}COST" ).append("\n"); 
		query.append(",SUM(A.${key}CNTRVOL) ${key}CNTRVOL" ).append("\n"); 
		query.append(",SUM(A.${key}MAXVOL)     ${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}BASICRATIO) ${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}BASICVOL)   ${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}UNITCOST)   ${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}FROMCOST)   ${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",SUM(A.${key}TOCOST)     ${key}TOCOST   --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REPO_PLN_ID,  2, '', 3, '')	REPO_PLN_ID 		-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')		REF_ID             -- HIDDEN" ).append("\n"); 
		query.append(",A.SORTNUM    	    -- HIDDEN" ).append("\n"); 
		query.append(",B.NUM           		-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PAST_REPO_PLN_FLG,  2, '', 3, '')	PAST_REPO_PLN_FLG	-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.SPLIT_REPO_PLN_FLG,  2, '', 3, '')	SPLIT_REPO_PLN_FLG	-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FM_ECC,		2, '', 3, '')			AS	FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TO_ECC,		2, '', 3, '')			AS	TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PLN_SEQ,	2, '', 3, '')			AS	PLN_SEQ             -- HIDDEN" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("-- PLAN -------------------------------------------" ).append("\n"); 
		query.append("--SELECT	 VSL_PLN.PLN_YRWK" ).append("\n"); 
		query.append("SELECT /*+ ordered use_hash(VSL_PLN EXE_PLN PLN_FB) */  VSL_PLN.PLN_YRWK -- change 1 (modified by shin yongchan, 20100419, sql tunning)" ).append("\n"); 
		query.append(",VSL_PLN.PLN_SEQ" ).append("\n"); 
		query.append(",'' 		COMPANY" ).append("\n"); 
		query.append(",'Plan' 		DIVISION" ).append("\n"); 
		query.append(",VSL_PLN.FM_ECC_CD 	FRLOC" ).append("\n"); 
		query.append(",VSL_PLN.FM_ETD_DT 	ETD" ).append("\n"); 
		query.append(",VSL_PLN.TO_ECC_CD 	TOLOC" ).append("\n"); 
		query.append(",VSL_PLN.TO_YD_CD 	TOYD" ).append("\n"); 
		query.append(",VSL_PLN.TO_ETB_DT 	ETB" ).append("\n"); 
		query.append(",VSL_PLN.LDIS_TS_FLG TS" ).append("\n"); 
		query.append(",VSL_PLN.TRSP_MOD_CD 	ITEM" ).append("\n"); 
		query.append(",VSL_PLN.VSL_LANE_CD 	LANE" ).append("\n"); 
		query.append(",VSL_PLN.VSL_CD||VSL_PLN.SKD_VOY_NO||VSL_PLN.SKD_DIR_CD VVD" ).append("\n"); 
		query.append(",''			PURPOSE" ).append("\n"); 
		query.append(",''			CNTRNO" ).append("\n"); 
		query.append(",''			MTY" ).append("\n"); 
		query.append(",''			BKGNO" ).append("\n"); 
		query.append(",''			BKG_STS_CD" ).append("\n"); 
		query.append(",''			REASON" ).append("\n"); 
		query.append(",''			REASONREMARK" ).append("\n"); 
		query.append(",VSL_PLN.REPO_PLN_ID 		-- HIDDEN" ).append("\n"); 
		query.append(",'' REF_ID        -- HIDDEN" ).append("\n"); 
		query.append(",1 SORTNUM    	-- HIDDEN" ).append("\n"); 
		query.append(",VSL_PLN.PAST_REPO_PLN_FLG   -- HIDDEN" ).append("\n"); 
		query.append(",'' SPLIT_REPO_PLN_FLG -- HIDDEN" ).append("\n"); 
		query.append(",VSL_PLN.FM_ECC_CD FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",VSL_PLN.TO_ECC_CD TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append("#if($velocityCount == 1 )" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.CNTR_QTY)),0)" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("+NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.CNTR_QTY)),0)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALVOL" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append("#if($velocityCount == 1)" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.LODG_DCHG_COST_AMT)),0)" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("+NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.LODG_DCHG_COST_AMT)),0)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALCOST" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.CNTR_QTY)),0)				${key}VOL" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '$key', VSL_PLN.LODG_DCHG_COST_AMT)),0)	${key}COST" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(EXE_PLN.CNTR_TPSZ_CD, '$key', EXE_PLN.MAX_QTY)),0)				${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#foreach( ${key} in ${tpszArr})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(PLN_FB.CNTR_TPSZ_CD,  '${key.field2}', PLN_FB.FB_RTO)),0)				${key.field1}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(PLN_FB.CNTR_TPSZ_CD,  '${key.field2}', PLN_FB.CNTR_VOL_QTY)),0)			${key.field1}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '${key.field2}', VSL_PLN.PLN_UC_AMT)),0)			${key.field1}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '${key.field2}', VSL_PLN.LODG_PORT_COST_AMT)),0)	${key.field1}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(VSL_PLN.CNTR_TPSZ_CD, '${key.field2}', VSL_PLN.DCHG_PORT_COST_AMT)),0)	${key.field1}TOCOST --HIDDEN" ).append("\n"); 
		query.append(",0 ${key.field1}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("SELECT	 VSL_PLN.REPO_PLN_ID" ).append("\n"); 
		query.append(",VSL_PLN.PLN_YRWK" ).append("\n"); 
		query.append(",VSL_PLN.PLN_SEQ" ).append("\n"); 
		query.append(",VSL_PLN.TRSP_MOD_CD" ).append("\n"); 
		query.append(",VSL_PLN.VSL_LANE_CD" ).append("\n"); 
		query.append(",VSL_PLN.VSL_CD" ).append("\n"); 
		query.append(",VSL_PLN.SKD_VOY_NO" ).append("\n"); 
		query.append(",VSL_PLN.SKD_DIR_CD" ).append("\n"); 
		query.append(",VSL_PLN.FM_ECC_CD" ).append("\n"); 
		query.append(",VSL_PLN.FM_ETD_DT" ).append("\n"); 
		query.append(",VSL_PLN.TO_ECC_CD" ).append("\n"); 
		query.append(",VSL_PLN.TO_YD_CD" ).append("\n"); 
		query.append(",VSL_PLN.TO_ETB_DT" ).append("\n"); 
		query.append(",VSL_PLN.LDIS_TS_FLG" ).append("\n"); 
		query.append(",VSL_PLN.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",VSL_PLN_QTY.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",VSL_PLN_QTY.CNTR_QTY" ).append("\n"); 
		query.append(",VSL_PLN_QTY.PLN_UC_AMT" ).append("\n"); 
		query.append(",VSL_PLN_QTY.LODG_PORT_COST_AMT" ).append("\n"); 
		query.append(",VSL_PLN_QTY.DCHG_PORT_COST_AMT" ).append("\n"); 
		query.append(",VSL_PLN_QTY.LODG_DCHG_COST_AMT" ).append("\n"); 
		query.append("FROM	EQR_VSL_LODG_DCHG_PLN		VSL_PLN" ).append("\n"); 
		query.append(",EQR_VSL_LODG_DCHG_PLN_QTY	VSL_PLN_QTY" ).append("\n"); 
		query.append("WHERE	VSL_PLN.REPO_PLN_ID	= VSL_PLN_QTY.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	VSL_PLN.PLN_YRWK	= VSL_PLN_QTY.PLN_YRWK" ).append("\n"); 
		query.append("AND VSL_PLN.PLN_SEQ		= VSL_PLN_QTY.PLN_SEQ" ).append("\n"); 
		query.append("AND VSL_PLN.REPO_PLN_ID	= @[repo_pln_id]" ).append("\n"); 
		query.append("#if (${itemText} != '')" ).append("\n"); 
		query.append("AND VSL_PLN.TRSP_MOD_CD	IN ( ${itemText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${laneText} != '')" ).append("\n"); 
		query.append("AND VSL_PLN.VSL_LANE_CD	IN ( ${laneText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${vvdText} != '')" ).append("\n"); 
		query.append("AND VSL_PLN.VSL_CD||VSL_PLN.SKD_VOY_NO||VSL_PLN.SKD_DIR_CD	IN ( ${vvdText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${userEcc} != '')" ).append("\n"); 
		query.append("AND	(VSL_PLN.FM_ECC_CD IN ( ${userEccText} )" ).append("\n"); 
		query.append("OR VSL_PLN.TO_ECC_CD IN ( ${userEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${tpszText} != '')" ).append("\n"); 
		query.append("AND VSL_PLN_QTY.CNTR_TPSZ_CD	IN ( ${tpszText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${fmtoat} == 1 )" ).append("\n"); 
		query.append("#if ( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND VSL_PLN.FM_ECC_CD	IN ( ${fromEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND VSL_PLN.TO_ECC_CD	IN ( ${toEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND VSL_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("#elseif ( ${fmtoat} == 3 )" ).append("\n"); 
		query.append("#if ( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND VSL_PLN.FM_ECC_CD	IN ( ${fromEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND VSL_PLN.TO_ECC_CD	IN ( ${toEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND	TO_CHAR(VSL_PLN.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk] )" ).append("\n"); 
		query.append("AND	(SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk] )" ).append("\n"); 
		query.append("#elseif ( ${fmtoat} == 4 )" ).append("\n"); 
		query.append("#if ( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND VSL_PLN.FM_ECC_CD	IN ( ${fromEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND VSL_PLN.TO_ECC_CD	IN ( ${toEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND	TO_CHAR(VSL_PLN.TO_ETB_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk] )" ).append("\n"); 
		query.append("AND	(SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk] )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND (" ).append("\n"); 
		query.append("#if( ${atstatus} != '' )" ).append("\n"); 
		query.append("(VSL_PLN.FM_ECC_CD IN ( ${fromEccText} )" ).append("\n"); 
		query.append("AND VSL_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(VSL_PLN.TO_ECC_CD IN ( ${fromEccText} ) AND (SELECT  PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM    EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE   TO_CHAR(VSL_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("(VSL_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]  )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("(SELECT PLN_YR||PLN_WK" ).append("\n"); 
		query.append("FROM  EQR_WK_PRD" ).append("\n"); 
		query.append("WHERE TO_CHAR(VSL_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") VSL_PLN," ).append("\n"); 
		query.append("#if( ${reasonText} != '' || ${mty} != '' )" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT	 A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.FM_YD_CD" ).append("\n"); 
		query.append(",A.TO_YD_CD" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",B.ECC_CD FM_ECC" ).append("\n"); 
		query.append(",C.ECC_CD TO_ECC" ).append("\n"); 
		query.append("FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A" ).append("\n"); 
		query.append(",MDM_EQ_ORZ_CHT B" ).append("\n"); 
		query.append(",MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append("WHERE	SUBSTR(A.FM_YD_CD, 0, 5) = B.SCC_CD" ).append("\n"); 
		query.append("AND	SUBSTR(A.TO_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("#if( ${reasonText} != '' )" ).append("\n"); 
		query.append("AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${mty} != '' )" ).append("\n"); 
		query.append("AND	A.REPO_MTY_BKG_FLG = '${mty}'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") B," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT	 A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.VSL_CD" ).append("\n"); 
		query.append(",A.SKD_VOY_NO" ).append("\n"); 
		query.append(",A.SKD_DIR_CD" ).append("\n"); 
		query.append(",C.ECC_CD FM_ECC" ).append("\n"); 
		query.append(",D.ECC_CD TO_ECC" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",SUM(B.CNTR_QTY) MAX_QTY" ).append("\n"); 
		query.append("FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY B" ).append("\n"); 
		query.append(",MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append(",MDM_EQ_ORZ_CHT D" ).append("\n"); 
		query.append("WHERE	A.REPO_PLN_ID = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	A.PLN_YRWK    = B.PLN_YRWK" ).append("\n"); 
		query.append("AND	A.PLN_SEQ     = B.PLN_SEQ" ).append("\n"); 
		query.append("AND	A.REF_ID      = B.REF_ID" ).append("\n"); 
		query.append("AND	A.REPO_PLN_ID = @[repo_pln_id]" ).append("\n"); 
		query.append("AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND	SUBSTR(A.FM_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("AND	SUBSTR(A.TO_YD_CD, 0, 5) = D.SCC_CD" ).append("\n"); 
		query.append("GROUP BY A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.VSL_CD" ).append("\n"); 
		query.append(",A.SKD_VOY_NO" ).append("\n"); 
		query.append(",A.SKD_DIR_CD" ).append("\n"); 
		query.append(",C.ECC_CD" ).append("\n"); 
		query.append(",D.ECC_CD" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") EXE_PLN," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT	 FB_ITM_CD ITEM" ).append("\n"); 
		query.append(",A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",A.FB_RTO" ).append("\n"); 
		query.append(",A.CNTR_VOL_QTY" ).append("\n"); 
		query.append("FROM	EQR_REPO_EXE_PLN_FB A" ).append("\n"); 
		query.append(",COM_INTG_CD_DTL B" ).append("\n"); 
		query.append("WHERE	A.FB_ITM_CD = B.INTG_CD_VAL_CTNT" ).append("\n"); 
		query.append("AND	B.INTG_CD_ID = 'CD00565'" ).append("\n"); 
		query.append("--GROUP BY FB_ITM_CD" ).append("\n"); 
		query.append(") PLN_FB" ).append("\n"); 
		query.append("WHERE	1=1" ).append("\n"); 
		query.append("AND	VSL_PLN.REPO_PLN_ID    = EXE_PLN.REPO_PLN_ID(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.PLN_YRWK       = EXE_PLN.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.TRSP_MOD_CD    = EXE_PLN.TRSP_MOD_CD(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.VSL_LANE_CD    = EXE_PLN.VSL_LANE_CD(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.VSL_CD         = EXE_PLN.VSL_CD(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.SKD_VOY_NO     = EXE_PLN.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.SKD_DIR_CD     = EXE_PLN.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.FM_ECC_CD      = EXE_PLN.FM_ECC(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.TO_ECC_CD      = EXE_PLN.TO_ECC(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.CNTR_TPSZ_CD   = EXE_PLN.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("AND	VSL_PLN.TRSP_MOD_CD    = PLN_FB.ITEM(+)" ).append("\n"); 
		query.append("#if( ${reasonText} != '' || ${mty} != '' )" ).append("\n"); 
		query.append("AND	VSL_PLN.REPO_PLN_ID		= B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	VSL_PLN.PLN_YRWK		= B.PLN_YRWK" ).append("\n"); 
		query.append("AND	VSL_PLN.FM_ECC_CD		= B.FM_ECC" ).append("\n"); 
		query.append("AND	VSL_PLN.TO_ECC_CD		= B.TO_ECC" ).append("\n"); 
		query.append("AND	VSL_PLN.TRSP_MOD_CD		= B.TRSP_MOD_CD" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY VSL_PLN.PLN_YRWK" ).append("\n"); 
		query.append(",VSL_PLN.PLN_SEQ" ).append("\n"); 
		query.append(",VSL_PLN.FM_ECC_CD" ).append("\n"); 
		query.append(",VSL_PLN.FM_ETD_DT" ).append("\n"); 
		query.append(",VSL_PLN.TO_ECC_CD" ).append("\n"); 
		query.append(",VSL_PLN.TO_YD_CD" ).append("\n"); 
		query.append(",VSL_PLN.TO_ETB_DT" ).append("\n"); 
		query.append(",VSL_PLN.LDIS_TS_FLG" ).append("\n"); 
		query.append(",VSL_PLN.TRSP_MOD_CD" ).append("\n"); 
		query.append(",VSL_PLN.VSL_LANE_CD" ).append("\n"); 
		query.append(",VSL_PLN.VSL_CD||VSL_PLN.SKD_VOY_NO||VSL_PLN.SKD_DIR_CD" ).append("\n"); 
		query.append(",VSL_PLN.REPO_PLN_ID" ).append("\n"); 
		query.append(",VSL_PLN.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append("-- REPO BKG ---------------------------------------" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("--SELECT	 /*+ NO_QUERY_TRANSFORMATION */ A.PLN_YRWK 		PLN_YRWK" ).append("\n"); 
		query.append("SELECT /*+ ordered use_hash(A B C D E F) */ A.PLN_YRWK   PLN_YRWK --change 2 (modified by shin yongchan, 20100419, tunning)" ).append("\n"); 
		query.append(",A.PLN_SEQ			PLN_SEQ" ).append("\n"); 
		query.append(",A.CO_CD 			COMPANY" ).append("\n"); 
		query.append(",'REPO BKG' 		DIVISION" ).append("\n"); 
		query.append(",A.FM_YD_CD  		FRLOC" ).append("\n"); 
		query.append(",A.FM_ETD_DT 		ETD" ).append("\n"); 
		query.append(",A.TO_YD_CD  		TOLOC" ).append("\n"); 
		query.append(",A.TO_YD_CD			TOYD" ).append("\n"); 
		query.append(",A.TO_ETB_DT 		ETB" ).append("\n"); 
		query.append(",''               TS" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD 	ITEM" ).append("\n"); 
		query.append(",A.VSL_LANE_CD 	LANE" ).append("\n"); 
		query.append(",A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD PURPOSE" ).append("\n"); 
		query.append(",CASE WHEN A.MTY_BKG_NO IS NULL" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("-- ORIGINAL CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.PLN_YRWK = C.PLN_YRWK AND A.REF_ID = C.REF_ID" ).append("\n"); 
		query.append("THEN '0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE '1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("-- NIS SYNC CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.MTY_BKG_NO = E.BKG_NO" ).append("\n"); 
		query.append("THEN '0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE '1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("END CNTRNO" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG    MTY" ).append("\n"); 
		query.append(",A.MTY_BKG_NO          BKGNO" ).append("\n"); 
		query.append(",F.BKG_STS_CD			BKG_STS_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD  REASON" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK REASONREMARK" ).append("\n"); 
		query.append(",A.REPO_PLN_ID 				-- HIDDEN" ).append("\n"); 
		query.append(",A.REF_ID                     -- HIDDEN" ).append("\n"); 
		query.append(",2 SORTNUM   					-- HIDDEN" ).append("\n"); 
		query.append(",CASE WHEN A.SPLIT_REPO_PLN_FLG = 'Y'" ).append("\n"); 
		query.append("THEN 'Y'" ).append("\n"); 
		query.append("ELSE DECODE(A.PAST_REPO_PLN_FLG, '' , 'N', NULL, 'N', A.PAST_REPO_PLN_FLG)" ).append("\n"); 
		query.append("END PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",A.SPLIT_REPO_PLN_FLG         -- HIDDEN" ).append("\n"); 
		query.append(",A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append("#if($velocityCount == 1)" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALVOL" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append("#if($velocityCount == 1)" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("+NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("TOTALCOST" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', DECODE(A.REPO_MTY_BKG_FLG, 'Y', DECODE(A.SPLIT_REPO_PLN_FLG,'N',B.CNTR_QTY,A.CNTR_QTY), A.CNTR_QTY))),0)  ${key}VOL" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_DCHG_COST_AMT)),0)	${key}COST" ).append("\n"); 
		query.append(",0		${key}MAXVOL --HIDDEN" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#foreach( $key in ${arrtpsz})" ).append("\n"); 
		query.append(",0		${key}BASICRATIO --HIDDEN" ).append("\n"); 
		query.append(",0		${key}BASICVOL   --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.PLN_UC_AMT)),0)       	${key}UNITCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.LODG_PORT_UC_AMT)),0) 	${key}FROMCOST --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', A.DCHG_PORT_UC_AMT)),0) 	${key}TOCOST   --HIDDEN" ).append("\n"); 
		query.append(",NVL(MAX(DECODE(A.CNTR_TPSZ_CD, '$key', D.REFCOUNT)),0) 			${key}CNTRVOL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("SELECT	 A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.VSL_CD" ).append("\n"); 
		query.append(",A.SKD_VOY_NO" ).append("\n"); 
		query.append(",A.SKD_DIR_CD" ).append("\n"); 
		query.append(",A.FM_YD_CD" ).append("\n"); 
		query.append(",A.FM_ETD_DT" ).append("\n"); 
		query.append(",A.TO_YD_CD" ).append("\n"); 
		query.append(",A.TO_ETB_DT" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK" ).append("\n"); 
		query.append(",B.CNTR_QTY" ).append("\n"); 
		query.append(",B.LODG_DCHG_COST_AMT" ).append("\n"); 
		query.append(",A.MTY_BKG_NO" ).append("\n"); 
		query.append(",A.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",C.ECC_CD FM_ECC" ).append("\n"); 
		query.append(",D.ECC_CD TO_ECC" ).append("\n"); 
		query.append(",A.SPLIT_REPO_PLN_FLG" ).append("\n"); 
		query.append(",A.PAST_REPO_PLN_FLG" ).append("\n"); 
		query.append(",B.PLN_UC_AMT" ).append("\n"); 
		query.append(",B.LODG_PORT_UC_AMT" ).append("\n"); 
		query.append(",B.DCHG_PORT_UC_AMT" ).append("\n"); 
		query.append("FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY B" ).append("\n"); 
		query.append(",MDM_EQ_ORZ_CHT C" ).append("\n"); 
		query.append(",MDM_EQ_ORZ_CHT D" ).append("\n"); 
		query.append("WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A.PLN_YRWK      = B.PLN_YRWK" ).append("\n"); 
		query.append("AND A.PLN_SEQ       = B.PLN_SEQ" ).append("\n"); 
		query.append("AND A.REF_ID        = B.REF_ID" ).append("\n"); 
		query.append("AND SUBSTR(A.FM_YD_CD, 0, 5) = C.SCC_CD" ).append("\n"); 
		query.append("AND SUBSTR(A.TO_YD_CD, 0, 5) = D.SCC_CD" ).append("\n"); 
		query.append(") A" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("SELECT	 A.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",A.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",NVL(A.CNTR_QTY, 0) - NVL(B.CNTR_QTY, 0) CNTR_QTY  -- (original - split)" ).append("\n"); 
		query.append("FROM	(" ).append("\n"); 
		query.append("-- original booking vol 집계" ).append("\n"); 
		query.append("SELECT	 DISTINCT A.OLD_BKG_GRP_NO AS OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",SUM(B.CNTR_QTY) CNTR_QTY" ).append("\n"); 
		query.append("FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY B" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("SELECT	DISTINCT OLD_BKG_GRP_NO" ).append("\n"); 
		query.append("FROM	EQR_VSL_LODG_DCHG_EXE_PLN" ).append("\n"); 
		query.append("WHERE	REPO_PLN_ID = @[repo_pln_id]" ).append("\n"); 
		query.append("AND	REPO_MTY_BKG_FLG = 'Y'" ).append("\n"); 
		query.append(") C" ).append("\n"); 
		query.append("WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	A.PLN_YRWK      = B.PLN_YRWK" ).append("\n"); 
		query.append("AND	A.PLN_SEQ       = B.PLN_SEQ" ).append("\n"); 
		query.append("AND	A.REF_ID        = B.REF_ID" ).append("\n"); 
		query.append("AND	A.OLD_BKG_GRP_NO= C.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append("--AND	A.SPLIT_REPO_PLN_FLG= 'N'" ).append("\n"); 
		query.append("GROUP BY A.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") A" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("-- split booking vol 집계" ).append("\n"); 
		query.append("SELECT	 DISTINCT A.OLD_BKG_GRP_NO AS OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",SUM(B.CNTR_QTY) CNTR_QTY" ).append("\n"); 
		query.append("FROM	 EQR_VSL_LODG_DCHG_EXE_PLN A" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY B" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("SELECT	DISTINCT OLD_BKG_GRP_NO" ).append("\n"); 
		query.append("FROM	EQR_VSL_LODG_DCHG_EXE_PLN" ).append("\n"); 
		query.append("WHERE	REPO_PLN_ID			= @[repo_pln_id]" ).append("\n"); 
		query.append("AND	REPO_MTY_BKG_FLG	= 'Y'" ).append("\n"); 
		query.append("AND	SPLIT_REPO_PLN_FLG	= 'Y'" ).append("\n"); 
		query.append("--AND	TRIM(MTY_BKG_NO_SPLIT) IS NOT NULL" ).append("\n"); 
		query.append(") C" ).append("\n"); 
		query.append("WHERE	A.REPO_PLN_ID   = B.REPO_PLN_ID" ).append("\n"); 
		query.append("AND A.PLN_YRWK      = B.PLN_YRWK" ).append("\n"); 
		query.append("AND A.PLN_SEQ       = B.PLN_SEQ" ).append("\n"); 
		query.append("AND A.REF_ID        = B.REF_ID" ).append("\n"); 
		query.append("AND A.OLD_BKG_GRP_NO	= C.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append("AND	A.REPO_MTY_BKG_FLG	= 'Y'" ).append("\n"); 
		query.append("AND	A.SPLIT_REPO_PLN_FLG	= 'Y'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("GROUP BY A.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",B.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") B" ).append("\n"); 
		query.append("WHERE	A.OLD_BKG_GRP_NO = B.OLD_BKG_GRP_NO(+)" ).append("\n"); 
		query.append("AND	A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append(") B" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("--SELECT	PLN_CNTR.REPO_PLN_ID" ).append("\n"); 
		query.append("SELECT /*+ ORDERED use_nl(EXE_PLN PLN_CNTR) */ PLN_CNTR.REPO_PLN_ID -- change 3 (modified by shinyongchan, 20100419, sql tunning)" ).append("\n"); 
		query.append(",PLN_CNTR.PLN_YRWK" ).append("\n"); 
		query.append(",PLN_CNTR.PLN_SEQ" ).append("\n"); 
		query.append(",PLN_CNTR.REF_ID" ).append("\n"); 
		query.append(",NVL(COUNT(*), 0) REFCOUNT" ).append("\n"); 
		query.append("FROM	EQR_EXE_PLN_CNTR PLN_CNTR," ).append("\n"); 
		query.append("(SELECT	 DISTINCT EXE_PLN.REPO_PLN_ID  -- TUNNINGED BY SHINYONGCHAN 20100416" ).append("\n"); 
		query.append(",EXE_PLN.PLN_YRWK" ).append("\n"); 
		query.append(",EXE_PLN.PLN_SEQ" ).append("\n"); 
		query.append(",EXE_PLN.REF_ID" ).append("\n"); 
		query.append("FROM     EQR_VSL_LODG_DCHG_EXE_PLN EXE_PLN" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY EXE_PLN_QTY" ).append("\n"); 
		query.append("WHERE	EXE_PLN_QTY.REPO_PLN_ID = EXE_PLN.REPO_PLN_ID" ).append("\n"); 
		query.append("AND EXE_PLN_QTY.PLN_YRWK    = EXE_PLN.PLN_YRWK" ).append("\n"); 
		query.append("AND EXE_PLN_QTY.PLN_SEQ     = EXE_PLN.PLN_SEQ" ).append("\n"); 
		query.append("AND EXE_PLN_QTY.REF_ID      = EXE_PLN.REF_ID" ).append("\n"); 
		query.append("AND EXE_PLN.REPO_PLN_ID = @[repo_pln_id]" ).append("\n"); 
		query.append("#if ( ${fmtoat} == 1 )" ).append("\n"); 
		query.append("AND EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("#if ( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif ( ${fmtoat} == 3 )" ).append("\n"); 
		query.append("AND  TO_CHAR(EXE_PLN.FM_ETD_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk] )" ).append("\n"); 
		query.append("AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk] )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif ( ${fmtoat} == 4 )" ).append("\n"); 
		query.append("AND	TO_CHAR(EXE_PLN.TO_ETB_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK =  @[fm_plnyrwk])" ).append("\n"); 
		query.append("AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK =  @[to_plnyrwk])" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if ( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if ( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText} ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND	(" ).append("\n"); 
		query.append("#if ( ${atstatus} != '' )" ).append("\n"); 
		query.append("(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) ) )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT)  BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText} ) ) )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${tpszText} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN_QTY.CNTR_TPSZ_CD IN (${tpszText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${reasonText} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN.REPO_PLN_FB_RSN_CD IN (${reasonText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${itemText} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN.TRSP_MOD_CD IN (${itemText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${laneText} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN.VSL_LANE_CD IN (${laneText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${vvdText} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN.VSL_CD||EXE_PLN.SKD_VOY_NO||EXE_PLN.SKD_DIR_CD IN (${vvdText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mty} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN.REPO_MTY_BKG_FLG = '${mty}'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") EXE_PLN" ).append("\n"); 
		query.append("WHERE	PLN_CNTR.REPO_PLN_ID = EXE_PLN.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	PLN_CNTR.PLN_YRWK    = EXE_PLN.PLN_YRWK" ).append("\n"); 
		query.append("AND	PLN_CNTR.PLN_SEQ     = EXE_PLN.PLN_SEQ" ).append("\n"); 
		query.append("AND	PLN_CNTR.REF_ID      = EXE_PLN.REF_ID" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("GROUP BY PLN_CNTR.REPO_PLN_ID" ).append("\n"); 
		query.append(",PLN_CNTR.PLN_YRWK" ).append("\n"); 
		query.append(",PLN_CNTR.PLN_SEQ" ).append("\n"); 
		query.append(",PLN_CNTR.REF_ID" ).append("\n"); 
		query.append("HAVING NVL(COUNT(*), 0) > 0" ).append("\n"); 
		query.append(") C" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("--SELECT	 PLN_CNTR.REPO_PLN_ID" ).append("\n"); 
		query.append("SELECT /*+ ORDERED use_nl(EXE_PLN PLN_CNTR) */ PLN_CNTR.REPO_PLN_ID --change 4 (modified by shinyongchan, 20100419, sql tunning)" ).append("\n"); 
		query.append(",PLN_CNTR.PLN_YRWK" ).append("\n"); 
		query.append(",PLN_CNTR.PLN_SEQ" ).append("\n"); 
		query.append(",PLN_CNTR.REF_ID" ).append("\n"); 
		query.append(",PLN_CNTR.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(",NVL(COUNT(*), 0) REFCOUNT" ).append("\n"); 
		query.append("FROM	EQR_EXE_PLN_CNTR PLN_CNTR," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT	 DISTINCT EXE_PLN.REPO_PLN_ID --  TUNNINGED BY SHINYONGCHAN 20100416" ).append("\n"); 
		query.append(",EXE_PLN.PLN_YRWK" ).append("\n"); 
		query.append(",EXE_PLN.PLN_SEQ" ).append("\n"); 
		query.append(",EXE_PLN.REF_ID" ).append("\n"); 
		query.append(",EXE_PLN_QTY.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("FROM     EQR_VSL_LODG_DCHG_EXE_PLN EXE_PLN" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY EXE_PLN_QTY" ).append("\n"); 
		query.append("WHERE   EXE_PLN.REPO_PLN_ID = EXE_PLN_QTY.REPO_PLN_ID" ).append("\n"); 
		query.append("AND EXE_PLN.PLN_YRWK    = EXE_PLN_QTY.PLN_YRWK" ).append("\n"); 
		query.append("AND EXE_PLN.PLN_SEQ     = EXE_PLN_QTY.PLN_SEQ" ).append("\n"); 
		query.append("AND EXE_PLN.REF_ID      = EXE_PLN_QTY.REF_ID" ).append("\n"); 
		query.append("AND EXE_PLN.REPO_PLN_ID = @[repo_pln_id]" ).append("\n"); 
		query.append("#if ( ${fmtoat} == 1 )" ).append("\n"); 
		query.append("AND	EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("#if( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND	SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND	SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText}))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif ( ${fmtoat} == 3 )" ).append("\n"); 
		query.append("AND	TO_CHAR(EXE_PLN.FM_ETD_DT ,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])" ).append("\n"); 
		query.append("AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])" ).append("\n"); 
		query.append("#if( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND	SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND	SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText}))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif ( ${fmtoat} == 4 )" ).append("\n"); 
		query.append("AND	TO_CHAR(EXE_PLN.TO_ETB_DT ,'YYYYMMDD') BETWEEN  (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])" ).append("\n"); 
		query.append("AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])" ).append("\n"); 
		query.append("#if( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND	SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText}) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND	SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${toEccText}))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND (" ).append("\n"); 
		query.append("#if ( ${atstatus} != '' )" ).append("\n"); 
		query.append("(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText})) )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${fromEccText})) )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("(EXE_PLN.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk])" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(EXE_PLN.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${userEcc} != '')" ).append("\n"); 
		query.append("AND (SUBSTR(EXE_PLN.FM_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userEccText} ) )" ).append("\n"); 
		query.append("OR SUBSTR(EXE_PLN.TO_YD_CD, 0, 5) IN (SELECT SCC_CD FROM MDM_EQ_ORZ_CHT WHERE ECC_CD IN ( ${userEccText} )) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpszText} != '')" ).append("\n"); 
		query.append("AND EXE_PLN_QTY.CNTR_TPSZ_CD IN (${tpszText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reasonText} != '')" ).append("\n"); 
		query.append("AND EXE_PLN.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemText} != '')" ).append("\n"); 
		query.append("AND EXE_PLN.TRSP_MOD_CD IN ( ${itemText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND	EXE_PLN.REPO_MTY_BKG_FLG = '${mty}'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${laneText} != '')" ).append("\n"); 
		query.append("AND EXE_PLN.VSL_LANE_CD IN ( ${laneText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvdText} != '')" ).append("\n"); 
		query.append("AND EXE_PLN.VSL_CD||EXE_PLN.SKD_VOY_NO||EXE_PLN.SKD_DIR_CD IN ( ${vvdText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(") EXE_PLN" ).append("\n"); 
		query.append("WHERE	PLN_CNTR.REPO_PLN_ID = EXE_PLN.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	PLN_CNTR.PLN_YRWK    = EXE_PLN.PLN_YRWK" ).append("\n"); 
		query.append("AND	PLN_CNTR.REF_ID      = EXE_PLN.REF_ID" ).append("\n"); 
		query.append("AND	PLN_CNTR.CNTR_TPSZ_CD= EXE_PLN.CNTR_TPSZ_CD" ).append("\n"); 
		query.append("GROUP BY  PLN_CNTR.REPO_PLN_ID" ).append("\n"); 
		query.append(", PLN_CNTR.PLN_YRWK" ).append("\n"); 
		query.append(", PLN_CNTR.PLN_SEQ" ).append("\n"); 
		query.append(", PLN_CNTR.REF_ID" ).append("\n"); 
		query.append(", PLN_CNTR.CNTR_TPSZ_CD" ).append("\n"); 
		query.append(") D" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("SELECT	 A.BKG_NO" ).append("\n"); 
		query.append(",B.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(",NVL(COUNT(*), 0) REFCOUNT" ).append("\n"); 
		query.append("FROM	 BKG_CONTAINER A" ).append("\n"); 
		query.append(",EQR_VSL_LODG_DCHG_EXE_PLN B" ).append("\n"); 
		query.append(",EQR_VSL_EXE_PLN_QTY C" ).append("\n"); 
		query.append("WHERE	B.REPO_PLN_ID = C.REPO_PLN_ID" ).append("\n"); 
		query.append("AND	B.PLN_YRWK  = C.PLN_YRWK" ).append("\n"); 
		query.append("AND	B.PLN_SEQ   = C.PLN_SEQ" ).append("\n"); 
		query.append("AND	B.REF_ID    = C.REF_ID" ).append("\n"); 
		query.append("AND	A.BKG_NO	= B.MTY_BKG_NO" ).append("\n"); 
		query.append("AND	B.REPO_PLN_ID = @[repo_pln_id]" ).append("\n"); 
		query.append("AND	B.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND	B.CO_CD = 'H'" ).append("\n"); 
		query.append("#if(${tpszText} != '')" ).append("\n"); 
		query.append("AND	C.CNTR_TPSZ_CD IN ( ${tpszText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY A.BKG_NO" ).append("\n"); 
		query.append(",B.OLD_BKG_GRP_NO" ).append("\n"); 
		query.append(") E" ).append("\n"); 
		query.append(",(" ).append("\n"); 
		query.append("SELECT	 BKG_NO" ).append("\n"); 
		query.append(",BKG_STS_CD" ).append("\n"); 
		query.append("FROM	BKG_BOOKING" ).append("\n"); 
		query.append("WHERE	BKG_CGO_TP_CD = 'P'" ).append("\n"); 
		query.append("AND	BKG_NO IN	(" ).append("\n"); 
		query.append("SELECT	MTY_BKG_NO" ).append("\n"); 
		query.append("FROM	EQR_VSL_LODG_DCHG_EXE_PLN" ).append("\n"); 
		query.append("WHERE	REPO_PLN_ID	= @[repo_pln_id]" ).append("\n"); 
		query.append("AND	PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND	REPO_MTY_BKG_FLG = 'Y'" ).append("\n"); 
		query.append("AND	MTY_BKG_NO IS NOT NULL" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(") F" ).append("\n"); 
		query.append("WHERE	A.OLD_BKG_GRP_NO= B.OLD_BKG_GRP_NO(+)" ).append("\n"); 
		query.append("AND	A.CNTR_TPSZ_CD	= B.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("AND	A.PLN_YRWK		= C.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND	A.REF_ID		= C.REF_ID(+)" ).append("\n"); 
		query.append("AND	A.PLN_YRWK		= D.PLN_YRWK(+)" ).append("\n"); 
		query.append("AND	A.REF_ID		= D.REF_ID(+)" ).append("\n"); 
		query.append("AND	A.CNTR_TPSZ_CD	= D.CNTR_TPSZ_CD(+)" ).append("\n"); 
		query.append("AND	A.MTY_BKG_NO	= E.BKG_NO(+)" ).append("\n"); 
		query.append("AND	A.MTY_BKG_NO	= F.BKG_NO(+)" ).append("\n"); 
		query.append("AND	A.REPO_PLN_ID	= @[repo_pln_id]" ).append("\n"); 
		query.append("#if( ${fmtoat} == 1 )" ).append("\n"); 
		query.append("AND	A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("#if( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND	A.FM_ECC IN ( ${fromEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND	A.TO_ECC IN ( ${toEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif( ${fmtoat} == 3 )" ).append("\n"); 
		query.append("AND	TO_CHAR(A.FM_ETD_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])" ).append("\n"); 
		query.append("AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])" ).append("\n"); 
		query.append("#if( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND	A.FM_ECC IN ( ${fromEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND	A.TO_ECC IN ( ${toEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#elseif( ${fmtoat} == 4 )" ).append("\n"); 
		query.append("AND	TO_CHAR(A.TO_ETB_DT,'YYYYMMDD') BETWEEN (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[fm_plnyrwk])" ).append("\n"); 
		query.append("AND (SELECT WK_ST_DT FROM EQR_WK_PRD WHERE PLN_YR||PLN_WK = @[to_plnyrwk])" ).append("\n"); 
		query.append("#if( ${fromstatus} != '' )" ).append("\n"); 
		query.append("AND	A.FM_ECC IN ( ${fromEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if( ${tostatus} != '' )" ).append("\n"); 
		query.append("AND	A.TO_ECC IN ( ${toEccText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("AND (" ).append("\n"); 
		query.append("#if( ${atstatus} != '' )" ).append("\n"); 
		query.append("(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND A.FM_ECC IN ( ${fromEccText} ) )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk]" ).append("\n"); 
		query.append("AND A.TO_ECC IN ( ${fromEccText} ) )" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("(A.PLN_YRWK BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("OR" ).append("\n"); 
		query.append("((SELECT PLN_YR||PLN_WK FROM EQR_WK_PRD WHERE TO_CHAR(A.TO_ETB_DT, 'YYYYMMDD') BETWEEN WK_ST_DT  AND WK_END_DT) BETWEEN @[fm_plnyrwk] AND @[to_plnyrwk] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${userEcc} != '')" ).append("\n"); 
		query.append("AND	(A.FM_ECC IN ( ${userEccText} ) OR A.TO_ECC IN ( ${userEccText} ))" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${reasonText} != '')" ).append("\n"); 
		query.append("AND	A.REPO_PLN_FB_RSN_CD IN ( ${reasonText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${tpszText} != '')" ).append("\n"); 
		query.append("AND	A.CNTR_TPSZ_CD IN ( ${tpszText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${itemText} != '')" ).append("\n"); 
		query.append("AND	A.TRSP_MOD_CD IN (${itemText})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${mty} != '')" ).append("\n"); 
		query.append("AND	A.REPO_MTY_BKG_FLG = '${mty}'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${laneText} != '')" ).append("\n"); 
		query.append("AND	A.VSL_LANE_CD IN ( ${laneText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${vvdText} != '')" ).append("\n"); 
		query.append("AND	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD IN ( ${vvdText} )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY A.PLN_YRWK" ).append("\n"); 
		query.append(",A.PLN_SEQ" ).append("\n"); 
		query.append(",A.CO_CD" ).append("\n"); 
		query.append(",A.FM_YD_CD" ).append("\n"); 
		query.append(",A.FM_ETD_DT" ).append("\n"); 
		query.append(",A.TO_YD_CD" ).append("\n"); 
		query.append(",A.TO_ETB_DT" ).append("\n"); 
		query.append(",A.TRSP_MOD_CD" ).append("\n"); 
		query.append(",A.VSL_LANE_CD" ).append("\n"); 
		query.append(",A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD" ).append("\n"); 
		query.append(",A.EQ_REPO_PURP_CD" ).append("\n"); 
		query.append(",CASE WHEN A.MTY_BKG_NO IS NULL" ).append("\n"); 
		query.append("THEN" ).append("\n"); 
		query.append("-- ORIGINAL CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.PLN_YRWK = C.PLN_YRWK AND A.REF_ID = C.REF_ID" ).append("\n"); 
		query.append("THEN '0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE '1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("-- NIS SYNC CNTR TABLE" ).append("\n"); 
		query.append("CASE WHEN A.MTY_BKG_NO = E.BKG_NO" ).append("\n"); 
		query.append("THEN '0'  -- CNTR 존재" ).append("\n"); 
		query.append("ELSE '1'  -- CNTR 존재안함" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append(",A.REPO_MTY_BKG_FLG" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RSN_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_FB_RMK" ).append("\n"); 
		query.append(",A.MTY_BKG_NO" ).append("\n"); 
		query.append(",F.BKG_STS_CD" ).append("\n"); 
		query.append(",A.REPO_PLN_ID" ).append("\n"); 
		query.append(",A.REF_ID" ).append("\n"); 
		query.append(",A.FM_ECC -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",A.TO_ECC -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",A.SPLIT_REPO_PLN_FLG" ).append("\n"); 
		query.append(",CASE WHEN A.SPLIT_REPO_PLN_FLG = 'Y'" ).append("\n"); 
		query.append("THEN 'Y'" ).append("\n"); 
		query.append("ELSE DECODE(A.PAST_REPO_PLN_FLG, '' , 'N', NULL, 'N', A.PAST_REPO_PLN_FLG)" ).append("\n"); 
		query.append("END" ).append("\n"); 
		query.append(") A," ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT 1 NUM, '' NAME FROM DUAL" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("SELECT 2 NUM, 'TOTAL' NAME FROM DUAL" ).append("\n"); 
		query.append("UNION" ).append("\n"); 
		query.append("SELECT 3 NUM, 'GRAND TOTAL' NAME FROM DUAL" ).append("\n"); 
		query.append(") B" ).append("\n"); 
		query.append("GROUP BY DECODE(B.NUM, 1, A.PLN_YRWK, 2, A.PLN_YRWK||' TTL', 3, 'TOTAL')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.COMPANY,  2, '', 3, '')" ).append("\n"); 
		query.append(",A.DIVISION" ).append("\n"); 
		query.append(",A.BKGNO" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, BKG_STS_CD,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REPO_PLN_ID,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REF_ID,  2, '', 3, '')" ).append("\n"); 
		query.append(",A.SORTNUM" ).append("\n"); 
		query.append(",B.NUM" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PAST_REPO_PLN_FLG,  2, '', 3, '')	 -- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.SPLIT_REPO_PLN_FLG,  2, '', 3, '') 	-- HIDDEN" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FM_ECC,  2, '', 3, '')  -- SORT에 사용될 SCC의 해당 FM ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TO_ECC,  2, '', 3, '')  -- SORT에 사용될 SCC의 해당 TO ECC 정보" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.FRLOC,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETD  ,  2, NULL, 3, NULL)" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TOLOC,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TOYD,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ETB  ,  2, NULL, 3, NULL)" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.TS   ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.ITEM ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.LANE ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.VVD  ,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PURPOSE,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.CNTRNO,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.MTY,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.BKGNO,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASON,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.REASONREMARK,  2, '', 3, '')" ).append("\n"); 
		query.append(",DECODE(B.NUM, 1, A.PLN_SEQ,  2, '', 3, '')" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("GROUP BY PLN_YRWK" ).append("\n"); 
		query.append(",COMPANY" ).append("\n"); 
		query.append(",DIVISION" ).append("\n"); 
		query.append(",FRLOC" ).append("\n"); 
		query.append(",TO_CHAR(ETD,'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append(",TOLOC" ).append("\n"); 
		query.append(",TOYD" ).append("\n"); 
		query.append(",TO_CHAR(ETB,'YYYY-MM-DD HH24:MI:SS')" ).append("\n"); 
		query.append(",TS" ).append("\n"); 
		query.append(",ITEM" ).append("\n"); 
		query.append(",LANE" ).append("\n"); 
		query.append(",VVD" ).append("\n"); 
		query.append(",PURPOSE" ).append("\n"); 
		query.append(",CNTRNO" ).append("\n"); 
		query.append(",MTY" ).append("\n"); 
		query.append(",REASON" ).append("\n"); 
		query.append(",REASONREMARK" ).append("\n"); 
		query.append(",BKGNO" ).append("\n"); 
		query.append(",BKG_STS_CD" ).append("\n"); 
		query.append(",REPO_PLN_ID 	-- HIDDEN" ).append("\n"); 
		query.append(",REF_ID       -- HIDDEN" ).append("\n"); 
		query.append(",SORTNUM    	-- HIDDEN" ).append("\n"); 
		query.append(",NUM        	-- HIDDEN" ).append("\n"); 
		query.append(",FM_ECC||TO_ECC" ).append("\n"); 
		query.append(",FM_ECC" ).append("\n"); 
		query.append(",TO_ECC" ).append("\n"); 
		query.append(",PAST_REPO_PLN_FLG	-- HIDDEN" ).append("\n"); 
		query.append(",SPLIT_REPO_PLN_FLG	-- HIDDEN" ).append("\n"); 
		query.append(",ETB" ).append("\n"); 
		query.append(",PLN_SEQ" ).append("\n"); 
		query.append("ORDER BY 1, T1_TRSP_MOD_CD, T1_SORT, T1_VSL_LANE_CD, T1_VVD, T1_PAST_REPO_PLN_FLG||T1_SORTNUM, T1_MTY_BKG_NO--, BKGNO_SPLIT" ).append("\n"); 

	}
}