<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ARInvoiceInquiryDBDAOSearchNotIssueAgingByCustomerRSQL">
			<desc><![CDATA[Customer의 I/B, O/B 별로 Invoice 미발행건수 및  Due date까지 남은 일수를 현재일로부터  날짜수 조건에 따라 집계한다.]]></desc>
			<sql><![CDATA[
SELECT MN.AR_OFC_CD,
  MN.IO_BND_CD,
  ST1.CR_CLT_OFC_CD,
  ST1.CR_AMT,
  ST1.IB_CR_TERM_DYS,
  ST1.OB_CR_TERM_DYS,
  ST2.DP_PRCS_KNT,
  MN.DAY1,
  MN.DAY2,
  MN.DAY3,
  MN.DAY4,
  MN.DAY5,
  MN.NOT_ARRIVED_CNT + MN.WI_TERM_CNT + MN.BELOW_DAY1_CNT + MN.BELOW_DAY2_CNT + MN.BELOW_DAY3_CNT + MN.BELOW_DAY4_CNT + MN.BELOW_DAY5_CNT + MN.OVER_DAY5_CNT TTL_CNT,
  ROUND(MN.NOT_ARRIVED + MN.WI_TERM + MN.BELOW_DAY1 + MN.BELOW_DAY2 + MN.BELOW_DAY3 + MN.BELOW_DAY4 + MN.BELOW_DAY5 + MN.OVER_DAY5, ST2.DP_PRCS_KNT) TTL_AMT,
  MN.NOT_ARRIVED_CNT + MN.WI_TERM_CNT TTL_WI_TERM_CNT,
  ROUND(MN.NOT_ARRIVED + MN.WI_TERM, ST2.DP_PRCS_KNT) TTL_WI_TERM_AMT,
  MN.NOT_ARRIVED_CNT,
  ROUND(MN.NOT_ARRIVED, ST2.DP_PRCS_KNT) NOT_ARRIVED_AMT,
  MN.WI_TERM_CNT,
  ROUND(MN.WI_TERM, ST2.DP_PRCS_KNT) WI_TERM_AMT,
  MN.NOT_ARRIVED_CNT + MN.WI_TERM_CNT TTL_WI_TERM_CNT,
  ROUND(MN.NOT_ARRIVED + MN.WI_TERM, ST2.DP_PRCS_KNT) TTL_WI_TERM_AMT,
  MN.BELOW_DAY1_CNT + MN.BELOW_DAY2_CNT + MN.BELOW_DAY3_CNT + MN.BELOW_DAY4_CNT + MN.BELOW_DAY5_CNT + MN.OVER_DAY5_CNT LT_CNT,
  ROUND(MN.BELOW_DAY1 + MN.BELOW_DAY2 + MN.BELOW_DAY3 + MN.BELOW_DAY4 + MN.BELOW_DAY5 + MN.OVER_DAY5, ST2.DP_PRCS_KNT) TTL_LT_AMT,
  MN.BELOW_DAY1_CNT,
  ROUND(MN.BELOW_DAY1, ST2.DP_PRCS_KNT) BELOW_DAY1_AMT,
  MN.BELOW_DAY2_CNT,
  ROUND(MN.BELOW_DAY2, ST2.DP_PRCS_KNT) BELOW_DAY2_AMT,
  MN.BELOW_DAY3_CNT,
  ROUND(MN.BELOW_DAY3, ST2.DP_PRCS_KNT) BELOW_DAY3_AMT,
  MN.BELOW_DAY4_CNT,
  ROUND(MN.BELOW_DAY4, ST2.DP_PRCS_KNT) BELOW_DAY4_AMT,
  MN.BELOW_DAY5_CNT,
  ROUND(MN.BELOW_DAY5, ST2.DP_PRCS_KNT) BELOW_DAY5_AMT,
  MN.OVER_DAY5_CNT,
  ROUND(MN.OVER_DAY5, ST2.DP_PRCS_KNT) OVER_DAY5_AMT
FROM (
-- O/B
    SELECT TB.AR_OFC_CD,
      TB.ACT_CUST_CNT_CD,
      TB.ACT_CUST_SEQ,
      'O/B' IO_BND_CD,
      TB.LOCL_CURR_CD,
      TB.DAY1,
      TB.DAY2,
      TB.DAY3,
      TB.DAY4,
      TB.DAY5,
      SUM(CASE WHEN TB.SAIL_ARR_DT >  TB.AS_OF_DT THEN 1 ELSE 0 END) NOT_ARRIVED_CNT,
      SUM(CASE WHEN TB.SAIL_ARR_DT >  TB.AS_OF_DT THEN TB.CHG_AMT ELSE 0 END) NOT_ARRIVED,
      SUM(CASE WHEN TB.SAIL_ARR_DT <= TB.AS_OF_DT AND TB.DUE_DT >= TB.AS_OF_DT THEN 1 ELSE 0 END) WI_TERM_CNT,
      SUM(CASE WHEN TB.SAIL_ARR_DT <= TB.AS_OF_DT AND TB.DUE_DT >= TB.AS_OF_DT THEN TB.CHG_AMT ELSE 0 END) WI_TERM,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY0) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY1) THEN 1 ELSE 0 END) BELOW_DAY1_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY0) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY1) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY1,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY1) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY2) THEN 1 ELSE 0 END) BELOW_DAY2_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY1) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY2) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY2,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY2) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY3) THEN 1 ELSE 0 END) BELOW_DAY3_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY2) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY3) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY3,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY3) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY4) THEN 1 ELSE 0 END) BELOW_DAY4_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY3) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY4) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY4,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY4) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY5) THEN 1 ELSE 0 END) BELOW_DAY5_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY4) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY5) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY5,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY5) < TB.OVER_DUE THEN 1 ELSE 0 END) OVER_DAY5_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY5) < TB.OVER_DUE THEN TB.CHG_AMT ELSE 0 END) OVER_DAY5
    FROM (
        SELECT A.AR_OFC_CD,
          A.AR_IF_NO,
          A.ACT_CUST_CNT_CD,
          A.ACT_CUST_SEQ,
#if(${curr_flag} == 'U')
-- USD
          DECODE(A.USD_XCH_RT, 0, 0, SUM(B.CHG_AMT * B.INV_XCH_RT) / A.USD_XCH_RT) CHG_AMT,
          'USD' LOCL_CURR_CD,
#else 
-- LCL
          SUM(B.CHG_AMT * B.INV_XCH_RT) CHG_AMT,
          A.LOCL_CURR_CD,
#end
          TO_CHAR(TO_DATE(A.SAIL_ARR_DT, 'YYYYMMDD'), 'YYYYMMDD') SAIL_ARR_DT,
          TO_CHAR(TO_DATE(A.DUE_DT, 'YYYYMMDD'), 'YYYYMMDD') DUE_DT,
          TO_CHAR(TO_DATE(REPLACE(@[as_of_dt], '-', ''), 'YYYYMMDD'), 'YYYYMMDD') AS_OF_DT,
          TO_DATE(REPLACE(@[as_of_dt], '-', ''), 'YYYYMMDD') - TO_DATE(A.DUE_DT, 'YYYYMMDD') OVER_DUE,
          '0' DAY0,
          @[day1] DAY1,
          @[day2] DAY2,
          @[day3] DAY3,
          @[day4] DAY4,
          @[day5] DAY5
        FROM INV_AR_MN A,
          INV_AR_CHG B
        WHERE A.AR_IF_NO = B.AR_IF_NO
          AND A.ACT_CUST_CNT_CD = @[act_cust_cnt_cd]
          AND A.ACT_CUST_SEQ = @[act_cust_seq]
#if (${ar_ofc_cd} != '')
          AND A.AR_OFC_CD = @[ar_ofc_cd] -- OFFICE
#else 
          AND A.AR_OFC_CD IN ( SELECT OFC_CD -- OFC ALL 선택시 적용..  
                                 FROM MDM_ORGANIZATION
                                WHERE AR_HD_QTR_OFC_CD = ( SELECT AR_HD_QTR_OFC_CD
                                                             FROM MDM_ORGANIZATION
                                                            WHERE OFC_CD = ( SELECT AR_OFC_CD
                                                                               FROM MDM_ORGANIZATION
                                                                              WHERE OFC_CD = @[user_ofc_cd]))
                                  AND OFC_CD = AR_OFC_CD )
#end
          AND A.IO_BND_CD = 'O'
          AND NVL(A.INV_DELT_DIV_CD, 'N') <> 'Y'
          AND A.INV_ISS_FLG = 'N'
#if(${svc_scp_cd} != '')
-- SCP
          AND A.SVC_SCP_CD = @[svc_scp_cd]
#end
#if(${ex_rate_flag} == 'A')
-- USD_XCH_RT
          AND A.USD_XCH_RT != 0
#else
          AND A.USD_XCH_RT = 0
#end
        GROUP BY A.AR_OFC_CD, A.AR_IF_NO, A.ACT_CUST_CNT_CD, A.ACT_CUST_SEQ, A.USD_XCH_RT, A.LOCL_CURR_CD, A.SAIL_ARR_DT, A.DUE_DT ) TB
#if(${amt_option} == 'P')
-- AMT_OPTION
    WHERE TB.CHG_AMT >= 0
#elseif(${amt_option} == 'M')
    WHERE TB.CHG_AMT < 0
#end
    GROUP BY TB.AR_OFC_CD, TB.ACT_CUST_CNT_CD, TB.ACT_CUST_SEQ, TB.LOCL_CURR_CD, TB.DAY1, TB.DAY2, TB.DAY3, TB.DAY4, TB.DAY5
-- I/B
    UNION ALL
    SELECT TB.AR_OFC_CD,
      TB.ACT_CUST_CNT_CD,
      TB.ACT_CUST_SEQ,
      'I/B' IO_BND_CD,
      TB.LOCL_CURR_CD,
      TB.DAY1,
      TB.DAY2,
      TB.DAY3,
      TB.DAY4,
      TB.DAY5,
      SUM(CASE WHEN TB.SAIL_ARR_DT >  TB.AS_OF_DT THEN 1 ELSE 0 END) NOT_ARRIVED_CNT,
      SUM(CASE WHEN TB.SAIL_ARR_DT >  TB.AS_OF_DT THEN TB.CHG_AMT ELSE 0 END) NOT_ARRIVED,
      SUM(CASE WHEN TB.SAIL_ARR_DT <= TB.AS_OF_DT AND TB.DUE_DT >= TB.AS_OF_DT THEN 1 ELSE 0 END) WI_TERM_CNT,
      SUM(CASE WHEN TB.SAIL_ARR_DT <= TB.AS_OF_DT AND TB.DUE_DT >= TB.AS_OF_DT THEN TB.CHG_AMT ELSE 0 END) WI_TERM,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY0) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY1) THEN 1 ELSE 0 END) BELOW_DAY1_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY0) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY1) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY1,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY1) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY2) THEN 1 ELSE 0 END) BELOW_DAY2_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY1) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY2) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY2,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY2) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY3) THEN 1 ELSE 0 END) BELOW_DAY3_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY2) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY3) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY3,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY3) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY4) THEN 1 ELSE 0 END) BELOW_DAY4_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY3) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY4) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY4,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY4) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY5) THEN 1 ELSE 0 END) BELOW_DAY5_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY4) < TB.OVER_DUE AND TB.OVER_DUE <= TO_NUMBER(TB.DAY5) THEN TB.CHG_AMT ELSE 0 END) BELOW_DAY5,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY5) < TB.OVER_DUE THEN 1 ELSE 0 END) OVER_DAY5_CNT,
      SUM(CASE WHEN TB.DUE_DT < TB.AS_OF_DT AND TO_NUMBER(TB.DAY5) < TB.OVER_DUE THEN TB.CHG_AMT ELSE 0 END) OVER_DAY5
    FROM (
        SELECT A.AR_OFC_CD,
          A.AR_IF_NO,
          A.ACT_CUST_CNT_CD,
          A.ACT_CUST_SEQ,
#if(${curr_flag} == 'U')
-- USD
          DECODE(A.USD_XCH_RT, 0, 0, SUM(B.CHG_AMT * B.INV_XCH_RT) / A.USD_XCH_RT) CHG_AMT,
          'USD' LOCL_CURR_CD,
#else 
-- LCL
          SUM(B.CHG_AMT * B.INV_XCH_RT) CHG_AMT,
          A.LOCL_CURR_CD,
#end
          TO_CHAR(TO_DATE(A.SAIL_ARR_DT, 'YYYYMMDD'), 'YYYYMMDD') SAIL_ARR_DT,
          TO_CHAR(TO_DATE(A.DUE_DT, 'YYYYMMDD'), 'YYYYMMDD') DUE_DT,
          TO_CHAR(TO_DATE(REPLACE(@[as_of_dt], '-', ''), 'YYYYMMDD'), 'YYYYMMDD') AS_OF_DT,
          TO_DATE(REPLACE(@[as_of_dt], '-', ''), 'YYYYMMDD') - TO_DATE(A.DUE_DT, 'YYYYMMDD') OVER_DUE,
          '0' DAY0,
          @[day1] DAY1,
          @[day2] DAY2,
          @[day3] DAY3,
          @[day4] DAY4,
          @[day5] DAY5
        FROM INV_AR_MN A,
          INV_AR_CHG B
        WHERE A.AR_IF_NO = B.AR_IF_NO
          AND A.ACT_CUST_CNT_CD = @[act_cust_cnt_cd]
          AND A.ACT_CUST_SEQ = @[act_cust_seq]
#if (${ar_ofc_cd} != '')
          AND A.AR_OFC_CD = @[ar_ofc_cd] -- OFFICE
#else
          AND A.AR_OFC_CD IN ( SELECT OFC_CD -- OFC ALL 선택시 적용..  
                                 FROM MDM_ORGANIZATION
                                WHERE AR_HD_QTR_OFC_CD = ( SELECT AR_HD_QTR_OFC_CD
                                                             FROM MDM_ORGANIZATION
                                                            WHERE OFC_CD = ( SELECT AR_OFC_CD
                                                                               FROM MDM_ORGANIZATION
                                                                              WHERE OFC_CD = @[user_ofc_cd]))
                                  AND OFC_CD = AR_OFC_CD )
#end
          AND A.IO_BND_CD = 'I'
          AND NVL(A.INV_DELT_DIV_CD, 'N') <> 'Y'
          AND A.INV_ISS_FLG = 'N'
#if(${svc_scp_cd} != '')
-- SCP
          AND A.SVC_SCP_CD = @[svc_scp_cd]
#end
#if(${ex_rate_flag} == 'A')
-- USD_XCH_RT
          AND A.USD_XCH_RT != 0
#else
          AND A.USD_XCH_RT = 0
#end
        GROUP BY A.AR_OFC_CD, A.AR_IF_NO, A.ACT_CUST_CNT_CD, A.ACT_CUST_SEQ, A.USD_XCH_RT, A.LOCL_CURR_CD, A.SAIL_ARR_DT, A.DUE_DT ) TB
#if(${amt_option} == 'P')
-- AMT_OPTION
    WHERE TB.CHG_AMT >= 0
#elseif(${amt_option} == 'M')
    WHERE TB.CHG_AMT < 0
#end
    GROUP BY TB.AR_OFC_CD, TB.ACT_CUST_CNT_CD, TB.ACT_CUST_SEQ, TB.LOCL_CURR_CD, TB.DAY1, TB.DAY2, TB.DAY3, TB.DAY4, TB.DAY5 ) MN,
  MDM_CR_CUST ST1,
  MDM_CURRENCY ST2
WHERE MN.ACT_CUST_CNT_CD = ST1.CUST_CNT_CD (+)
  AND MN.ACT_CUST_SEQ = ST1.CUST_SEQ (+)
  AND MN.LOCL_CURR_CD = ST2.CURR_CD
  AND (MN.NOT_ARRIVED_CNT + MN.WI_TERM_CNT + MN.BELOW_DAY1_CNT + MN.BELOW_DAY2_CNT + MN.BELOW_DAY3_CNT + MN.BELOW_DAY4_CNT + MN.BELOW_DAY5_CNT + MN.OVER_DAY5_CNT) > 0
ORDER BY MN.AR_OFC_CD, MN.IO_BND_CD DESC			]]></sql>
			<params>
				<param name="as_of_dt" type="12" value="" out="N"/>
				<param name="day1" type="12" value="" out="N"/>
				<param name="day2" type="12" value="" out="N"/>
				<param name="day3" type="12" value="" out="N"/>
				<param name="day4" type="12" value="" out="N"/>
				<param name="day5" type="12" value="" out="N"/>
				<param name="act_cust_cnt_cd" type="12" value="" out="N"/>
				<param name="act_cust_seq" type="12" value="" out="N"/>
				<param name="ar_ofc_cd" type="12" value="" out="N"/>
				<param name="user_ofc_cd" type="12" value="" out="N"/>
				<param name="svc_scp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
