<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOSearchTDRDownloadListByLaneRSQL">
			<desc><![CDATA[History --------------------------------------------------------
2010.12.07 김상수 [CHM-201007318-01] JOO - TDR Inquiry 기능 보완 요청 - i-stowage 연계
                   1. 조회조건에 Carrier Code를 Multi Select 할 수 있는 멀티콤보 추가
                   2. Sheet에 컬럼 추가
                     (※ Data 조회 Logic 보완)
                     - 기존처럼  해당 VVD 와 Port를 선정할때  Upload Status가  N (증빙 가)일 경우
                        해당 정보(20’, 40’, 20HC, 40HC, 45, AK, RF, EMPTY)를 I-Stowage에서 조회
                     - Source 컬럼 추가
                        OPF : OPF 모듈에서  Data 조회
                        IST : I-Stowage에서 Data 조회
2010.12.24 김상수 [CHM-201007932-01] JOO- TDR Inquiry by VVD 기능 보완 요청 - Weight 반영
                   - TDR Inquiry by VVD 기능 보완 요청 - Weight 반영
2011.02.08 이병훈 [CHM-201108610-01] JOO/TDR 보완 요청 - I-Stowage 전면 연계
2011.04.04 표준희 [CHM-201109938-01] JOO/TDR Inquiry by VVD 보완 요청 - KRPU1 반영
2012.05.11 김창헌 [CHM-201217413-01]
                   [ALPS JOO] TDR Inquiry by VVD 및 RDR Inquiry by Lane
                   - Sum 기능 추가, 정렬순서 및 표시형식 변경
2012.06.19 김상근 [CHM-201218380]
                  [ALPS JOO] TDR Inquiry by VVD : Additional Slot 칼럼 및 Sub Alloc and Ratio
2013.10.31 이수진 [선반영] Reefer 로직 변경(Cargo Type이 'RF'이거나 Temp에 값이 있는것)
2014.05.13 이영두 [CHM-201430221]TDR Inquiry by VVD 변경 (KRPUS 하드코딩 부분 제거)]]></desc>
			<sql><![CDATA[
WITH VSL AS (SELECT VSL_CD,
                    SKD_VOY_NO,
                    SKD_DIR_CD,
                    VPS_PORT_CD,
                    CLPT_IND_SEQ,
                    VPS_ETA_DT,
                    VPS_ETD_DT,
                    SLAN_CD,
                    YD_CD
               FROM VSK_VSL_PORT_SKD
              WHERE SLAN_CD LIKE @[rlane_cd] || '%'
                AND ( (VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                      AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR VPS_ETD_DT IS NULL )
                AND TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
            )
 
 , SRC AS (

SELECT Y.OPR_CD,
       Y.VSL_CD || Y.VOY_NO || Y.DIR_CD VVD,
       Y.VSL_CD,
       Y.VOY_NO  SKD_VOY_NO,
       Y.DIR_CD  SKD_DIR_CD,
       Y.PORT_CD  VPS_PORT_CD,
       Y.SLAN_CD,
       Y.VPS_ETD_DT,
       1 SUB_CHK,  
       SUM(Y.GRAND_TTL_SLOT) GRAND_TTL_SLOT,
       SUM(Y.GRAND_TTL_WGT) GRAND_TTL_WGT,
       SUM(Y.HC_LD_20) HC_LD_20,
       SUM(Y.HC_BSA_20) HC_BSA_20,
       SUM(Y.HC_LD_40) HC_LD_40,
       SUM(Y.HC_BSA_40) HC_BSA_40,
       SUM(Y.HC_LD_45) HC_LD_45,
       SUM(Y.HC_BSA_45) HC_BSA_45,
       SUM(Y.AK_UNIT) AK_UNIT,
       SUM(Y.AK_VOID) AK_VOID,
       SUM(Y.DG_20) DG_20,
       SUM(Y.DG_40) DG_40,
       SUM(Y.RF_20_QTY) RF_20_QTY,
       SUM(Y.RF_40_QTY) RF_40_QTY,
       SUM(Y.MT_TEU) MT_TEU,
       SUM(Y.FULL_20) FULL_20,
       SUM(Y.MT_20) MT_20,
       SUM(Y.FULL_40) FULL_40,
       SUM(Y.MT_40) MT_40,
       SUM(Y.MT_WT) MT_WT,
       'IST'  SOURCE,
       NVL(Z.JO_20FT_N1ST_RTO, 0) JO_20FT_N1ST_RTO,
       NVL(Z.JO_20FT_SUB_TEU_QTY, 0) JO_20FT_SUB_TEU_QTY,
       NVL(Z.JO_40FT_N1ST_RTO, 0) JO_40FT_N1ST_RTO,
       NVL(Z.JO_40FT_SUB_TEU_QTY, 0) JO_40FT_SUB_TEU_QTY,
       NVL(Z.JO_45FT_N1ST_RTO, 0) JO_45FT_N1ST_RTO,
       NVL(Z.JO_45FT_N2ND_RTO, 0) JO_45FT_N2ND_RTO,
       NVL(Z.JO_45FT_SUB_TEU_QTY, 0) JO_45FT_SUB_TEU_QTY,
       NVL(Z.JO_RND_RULE_LVL, '4') JO_RND_RULE_LVL
FROM
    (

               /* ALLOCATION  - TEU/WGT : Port Step Up/Down by VVD */
                SELECT NVL(B.CRR_CD, 'ZZZ') OPR_CD,
                       B.VSL_CD,
                       B.SKD_VOY_NO VOY_NO,
                       B.SKD_DIR_CD DIR_CD,
                       B.PORT_CD,
                       K.CLPT_IND_SEQ CALL_IND,
                       K.SLAN_CD,
                       TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       0 GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       0 HC_LD_20,
                       0 HC_BSA_20,
                       0 HC_LD_40,
                       0 HC_BSA_40,
                       0 HC_LD_45,
                       0 HC_BSA_45,
                       0 AK_UNIT,
                       0 AK_VOID,
                       0 DG_20,
                       0 DG_40,                       
                       0 RF_20_QTY,
                       0 RF_40_QTY,
                       0 MT_TEU,
                       0 FULL_20,
                       0 MT_20,
                       0 FULL_40,
                       0 MT_40,
                       0 MT_WT
                  FROM BSA_VVD_PORT_DWN B,
                       VSL K
                 WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)
                   AND K.VSL_CD = B.VSL_CD
                   AND K.SKD_VOY_NO = B.SKD_VOY_NO
                   AND K.SKD_DIR_CD = B.SKD_DIR_CD
                   AND K.VPS_PORT_CD = B.PORT_CD
                   AND K.CLPT_IND_SEQ = 1
                   AND B.BSA_OP_JB_CD IN ('007','016') 
                   AND B.PORT_SEQ     <> 999
                   AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                   AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
                   AND K.SLAN_CD  =  SUBSTR(B.RLANE_CD, 1, 3)
#if (${vvd} != '')
                   AND B.VSL_CD || B.SKD_VOY_NO || B.SKD_DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                   AND B.CRR_CD IN (${opr_cd})
#end
                   AND EXISTS (SELECT 'A'
                                 FROM BAY_PLAN
                                WHERE VSL_CD = K.VSL_CD
                                  AND VOY_NO = K.SKD_VOY_NO
                                  AND DIR_CD = K.SKD_DIR_CD
                                  AND OPR_CD = B.CRR_CD
                                  AND PORT_CD =B.PORT_CD
                                  AND CALL_IND = K.CLPT_IND_SEQ ) 
                 GROUP BY B.CRR_CD,
                          B.VSL_CD,
                          B.SKD_VOY_NO,
                          B.SKD_DIR_CD,
                          B.PORT_CD,
                          K.CLPT_IND_SEQ,
                          K.SLAN_CD,
                          TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')

                UNION ALL


               /* 20HC, 40HC, 45HC, F20, E20, F40, E40 */
                SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD,
                       B.VSL_CD,
                       B.VOY_NO,
                       B.DIR_CD,
                       B.PORT_CD,
                       B.CALL_IND,
                       K.SLAN_CD,
                       TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       SUM(B.WEIGHT) GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HF1', 1, 0)) HC_LD_20,
                       SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HE1', 1, 0)) HC_BSA_20,
                       SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HF0', 1, 0)) HC_LD_40,
                       SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HE0', 1, 0)) HC_BSA_40,
                       SUM (DECODE (B.CNTR_SIZE || B.FE, 'LF', 1, 0)) HC_LD_45,
                       SUM (DECODE (B.CNTR_SIZE || B.FE, 'LE', 1, 0)) HC_BSA_45,
                       0 AK_UNIT,
                       0 AK_VOID,
                       0 DG_20,
                       0 DG_40,    
                       0 RF_20_QTY,
                       0 RF_40_QTY,
                       0 MT_TEU,
                       SUM (DECODE (B.CNTR_SIZE || B.FE, '2F', 1, 0)) FULL_20,
                       SUM (DECODE (B.CNTR_SIZE || B.FE, '2E', 1, 0)) MT_20,
                       SUM (DECODE (B.CNTR_SIZE || B.FE, '4F', 1, 0)) FULL_40,
                       SUM (DECODE (B.CNTR_SIZE || B.FE, '4E', 1, 0)) MT_40,
                       0 MT_WT
                  FROM BAY_PLAN B,
                       VSL K
                 WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)
                   AND K.VSL_CD = B.VSL_CD
                   AND K.SKD_VOY_NO = B.VOY_NO
                   AND K.SKD_DIR_CD = B.DIR_CD
                   AND K.VPS_PORT_CD = B.PORT_CD
                   AND K.CLPT_IND_SEQ = B.CALL_IND
                   AND B.PLAN_TYPE= 'F'
                   AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                   AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
#if (${vvd} != '')
                   AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                   AND B.OPR_CD IN (${opr_cd})
#end
                 GROUP BY B.OPR_CD,
                          B.VSL_CD,
                          B.VOY_NO,
                          B.DIR_CD,
                          B.PORT_CD,
                          B.CALL_IND,
                          K.SLAN_CD,
                          TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')

                UNION ALL

                /* DG20, DG40 */
                SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD,
                       B.VSL_CD,
                       B.VOY_NO,
                       B.DIR_CD,
                       B.PORT_CD,
                       B.CALL_IND,
                       K.SLAN_CD,
                       TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       0 GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       0 HC_LD_20,
                       0 HC_BSA_20,
                       0 HC_LD_40,
                       0 HC_BSA_40,
                       0 HC_LD_45,
                       0 HC_BSA_45,
                       0 AK_UNIT,
                       0 AK_VOID,
                       SUM(DECODE(CNTR_SIZE,'2',1, 'H', DECODE(SUBSTR(SZTP_ISO,0,1), '2', 1, 0), 0))DG_20,
                       SUM(DECODE(CNTR_SIZE,'4',1, 'L', 1, 'W', 1, 'X', 1,'H', DECODE(SUBSTR(SZTP_ISO,0,1), '4', 1, 0), 0) ) DG_40,
                       0 RF_20_QTY,
                       0 RF_40_QTY,
                       0 MT_TEU,
                       0 FULL_20,
                       0 MT_20,
                       0 FULL_40,
                       0 MT_40,
                       0 MT_WT
                  FROM BAY_PLAN B,
                       STO_PLN_VSL_PORT_SKD S,
                       VSL K
                 WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.9999) OR K.VPS_ETD_DT IS NULL)
                   AND K.VSL_CD = B.VSL_CD
                   AND K.SKD_VOY_NO = B.VOY_NO
                   AND K.SKD_DIR_CD = B.DIR_CD
                   AND K.VPS_PORT_CD = B.PORT_CD
                   AND K.CLPT_IND_SEQ = B.CALL_IND
                   AND B.VSL_CD = S.VSL_CD
                   AND B.VOY_NO = S.SKD_VOY_NO
                   AND B.DIR_CD = S.SKD_DIR_CD
                   AND B.PORT_CD =S.VPS_PORT_CD
                   AND B.CALL_IND = S.CLPT_IND_SEQ
                   AND B.PLAN_TYPE = 'F'
                   AND B.CARGO_TYPE = 'DG'
                   AND DECODE(S.REP_PORT_CD,NULL,B.PORT_CD,S.REP_PORT_CD) = B.POL
                   AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                   AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
#if (${vvd} != '')
                   AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                   AND B.OPR_CD IN (${opr_cd})
#end
                 GROUP BY B.OPR_CD,
                          B.VSL_CD,
                          B.VOY_NO,
                          B.DIR_CD,
                          B.PORT_CD,
                          B.CALL_IND,
                          K.SLAN_CD,
                          TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')


                UNION ALL

                /* RF20, RF40 */
                SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD,
                       B.VSL_CD,
                       B.VOY_NO,
                       B.DIR_CD,
                       B.PORT_CD,
                       B.CALL_IND,   
                       K.SLAN_CD,
                       TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       0 GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       0 HC_LD_20,
                       0 HC_BSA_20,
                       0 HC_LD_40,
                       0 HC_BSA_40,
                       0 HC_LD_45,
                       0 HC_BSA_45,
                       0 AK_UNIT,
                       0 AK_VOID,
                       0 DG_20,
                       0 DG_40,    
                       SUM (DECODE (MOD (B.BAY, 2), 1, 1)) RF_20_QTY,
                       SUM (DECODE (MOD (B.BAY, 2), 0, 1)) RF_40_QTY,
                       0 MT_TEU,
                       0 FULL_20,
                       0 MT_20,
                       0 FULL_40,
                       0 MT_40,
                       0 MT_WT
                  FROM BAY_PLAN B,
                       STO_PLN_VSL_PORT_SKD S,
                       VSL K
                 WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.9999) OR K.VPS_ETD_DT IS NULL)
                   AND K.VSL_CD = B.VSL_CD
                   AND K.SKD_VOY_NO = B.VOY_NO
                   AND K.SKD_DIR_CD = B.DIR_CD
                   AND K.VPS_PORT_CD = B.PORT_CD
                   AND K.CLPT_IND_SEQ = B.CALL_IND
                   AND B.VSL_CD = S.VSL_CD
                   AND B.VOY_NO = S.SKD_VOY_NO
                   AND B.DIR_CD = S.SKD_DIR_CD
                   AND B.PORT_CD =S.VPS_PORT_CD
                   AND B.CALL_IND = S.CLPT_IND_SEQ
                   AND B.TEMP IS NOT NULL
                   AND B.PLAN_TYPE = 'F'
                   AND DECODE(S.REP_PORT_CD,NULL,B.PORT_CD,S.REP_PORT_CD) = B.POL
                   AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                   AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
#if (${vvd} != '')
                   AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                   AND B.OPR_CD IN (${opr_cd})
#end
                 GROUP BY B.OPR_CD,
                          B.VSL_CD,
                          B.VOY_NO,
                          B.DIR_CD,
                          B.PORT_CD,
                          B.CALL_IND,
                          K.SLAN_CD,
                          TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')


                UNION ALL


                  /* empty */
                SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD,
                       B.VSL_CD,
                       B.VOY_NO,
                       B.DIR_CD,
                       B.PORT_CD,
                       B.CALL_IND,
                       K.SLAN_CD,
                       TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       0 GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       0 HC_LD_20,
                       0 HC_BSA_20,
                       0 HC_LD_40,
                       0 HC_BSA_40,
                       0 HC_LD_45,
                       0 HC_BSA_45,
                       0 AK_UNIT,
                       0 AK_VOID,
                       0 DG_20,
                       0 DG_40,    
                       0 RF_20_QTY,
                       0 RF_40_QTY,
                       SUM (DECODE (MOD (B.BAY, 2), 0, 2, 1)) MT_TEU,
                       0 FULL_20,
                       0 MT_20,
                       0 FULL_40,
                       0 MT_40,
                       SUM (B.WEIGHT) MT_WT
                  FROM BAY_PLAN B,
                       VSL K
                 WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)
                   AND K.VSL_CD = B.VSL_CD
                   AND K.SKD_VOY_NO = B.VOY_NO
                   AND K.SKD_DIR_CD = B.DIR_CD
                   AND K.VPS_PORT_CD = B.PORT_CD
                   AND K.CLPT_IND_SEQ = B.CALL_IND
                   AND B.FE = 'E'
                   AND B.PLAN_TYPE = 'F'
                   AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                   AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
#if (${vvd} != '')
                   AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                   AND B.OPR_CD IN (${opr_cd})
#end
                 GROUP BY B.OPR_CD,
                          B.VSL_CD,
                          B.VOY_NO,
                          B.DIR_CD,
                          B.PORT_CD,
                          B.CALL_IND,
                          K.SLAN_CD,
                          TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')


                UNION ALL


                /* 'AK' UNIT */
                SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD,
                       B.VSL_CD,
                       B.VOY_NO,
                       B.DIR_CD,
                       B.PORT_CD,
                       B.CALL_IND,
                       K.SLAN_CD,
                       TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       0 GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       0 HC_LD_20,
                       0 HC_BSA_20,
                       0 HC_LD_40,
                       0 HC_BSA_40,
                       0 HC_LD_45,
                       0 HC_BSA_45,
                       COUNT (*) AK_UNIT,
                       0 AK_VOID,
                       0 DG_20,
                       0 DG_40,    
                       0 RF_20_QTY,
                       0 RF_40_QTY,
                       0 MT_TEU,
                       0 FULL_20,
                       0 MT_20,
                       0 FULL_40,
                       0 MT_40,
                       0 MT_WT
                  FROM BAY_PLAN B,
                       VSL K
                 WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)
                   AND K.VSL_CD = B.VSL_CD
                   AND K.SKD_VOY_NO = B.VOY_NO
                   AND K.SKD_DIR_CD = B.DIR_CD
                   AND K.VPS_PORT_CD = B.PORT_CD
                   AND K.CLPT_IND_SEQ = B.CALL_IND
                   AND ( B.CARGO_TYPE IN ('AK', 'BB')
                        OR ((B.ACT_SLOT>0 OR B.OVH_SLOT>0 OR B.OVP_SLOT>0 OR B.OVS_SLOT>0 OR B.OVF_SLOT>0 OR B.OVA_SLOT>0))
                       )
                   AND B.PLAN_TYPE = 'F'
                   AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                   AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
#if (${vvd} != '')
                   AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                   AND B.OPR_CD IN (${opr_cd})
#end
                 GROUP BY B.OPR_CD,
                          B.VSL_CD,
                          B.VOY_NO,
                          B.DIR_CD,
                          B.PORT_CD,
                          CALL_IND,
                          K.SLAN_CD,
                          TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')


                UNION ALL


                /* 'AK' Void */
                SELECT NVL(OPR_CD, 'ZZZ') OPR_CD,
                       VSL_CD,
                       VOY_NO,
                       DIR_CD,
                       PORT_CD,
                       CALL_IND,
                       SLAN_CD,
                       VPS_ETD_DT,
                       0 GRAND_TTL_SLOT,
                       0 GRAND_TTL_WGT,
                       0 OVER_SLOT,
                       0 OVER_WGT,
                       0 HC_LD_20,
                       0 HC_BSA_20,
                       0 HC_LD_40,
                       0 HC_BSA_40,
                       0 HC_LD_45,
                       0 HC_BSA_45,
                       0 AK_UNIT,
                       SUM (CASE
                            WHEN ACT_SLOT <> '' THEN
                                        TO_NUMBER(ACT_SLOT)
                                     WHEN X * Y * Z > 0 THEN
                                        (X + 1) * (Y + 1) * (Z + 1) - S
                                     WHEN X * Y > 0 THEN
                                        (X + 1) * (Y + 1) * S - S
                                     WHEN X * Z > 0 THEN
                                        (X + 1) * (Z + 1) - 1 + X * (S - 1)
                                     WHEN Y * Z > 0 THEN
                                        (Y + 1) * (Z + 1) - 1 + Y * (S - 1)
                                     WHEN X + Y > 0 THEN
                                        (X + Y + 1) * S - S
                                     WHEN Z > 0 THEN Z
                                     ELSE 0
                          END) AS AK_VOID,
                       0 DG_20,
                       0 DG_40,    
                       0 RF_20_QTY,
                       0 RF_40_QTY,
                       0 MT_TEU,
                       0 FULL_20,
                       0 MT_20,
                       0 FULL_40,
                       0 MT_40,
                       0 MT_WT
                  FROM (SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD,
                               B.VSL_CD,
                               B.VOY_NO,
                               B.DIR_CD,
                               B.PORT_CD,
                               B.CALL_IND,
                               K.SLAN_CD,
                               TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
                               NVL (B.OVP_SLOT, 0) + NVL (B.OVS_SLOT, 0) X,
                               NVL (B.OVH_SLOT, 0) Y,
                               NVL (B.OVA_SLOT, 0) + NVL (B.OVF_SLOT, 0) Z,
                               (2 - MOD (B.BAY, 2)) S,
                               ACT_SLOT
                          FROM BAY_PLAN B,
                               VSL K
                         WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
                                                   AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') +  1) OR K.VPS_ETD_DT IS NULL)
                           AND K.VSL_CD = B.VSL_CD
                           AND K.SKD_VOY_NO = B.VOY_NO
                           AND K.SKD_DIR_CD = B.DIR_CD
                           AND K.VPS_PORT_CD = B.PORT_CD
                           AND K.CLPT_IND_SEQ = B.CALL_IND
                           AND ( B.CARGO_TYPE IN ('AK', 'BB')
                               OR ((B.ACT_SLOT>0 OR B.OVH_SLOT>0 OR B.OVP_SLOT>0 OR B.OVS_SLOT>0 OR B.OVF_SLOT>0 OR B.OVA_SLOT>0))
                               )
                           AND B.PLAN_TYPE = 'F'
                           AND K.SLAN_CD LIKE @[rlane_cd] || '%'
                           AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'
#if (${vvd} != '')
                           AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'
#end

#if (${opr_cd} != '')
                           AND B.OPR_CD IN (${opr_cd})
#end
                       )
                 GROUP BY OPR_CD,
                          VSL_CD,
                          VOY_NO,
                          DIR_CD,
                          PORT_CD,
                          CALL_IND,
                          SLAN_CD,
                          VPS_ETD_DT
     ) Y, JOO_TDR_RTO Z
WHERE Y.SLAN_CD = Z.RLANE_CD(+)
  AND Y.OPR_CD = Z.JO_CRR_CD(+)
GROUP BY Y.OPR_CD,
        Y.VSL_CD,
        Y.VOY_NO,
        Y.DIR_CD,
        Y.PORT_CD,
        Y.CALL_IND,
        Y.SLAN_CD,
        Y.VPS_ETD_DT,
        Z.JO_20FT_N1ST_RTO,
        Z.JO_20FT_SUB_TEU_QTY,
        Z.JO_40FT_N1ST_RTO,
        Z.JO_40FT_SUB_TEU_QTY,
        Z.JO_45FT_N1ST_RTO,
        Z.JO_45FT_N2ND_RTO,
        Z.JO_45FT_SUB_TEU_QTY,
        Z.JO_RND_RULE_LVL   
)
SELECT
* 
FROM
(
	SELECT  
		 A.PORT_CD
		,A.TRD_CD
		,RLANE_CD 
		,CASE WHEN (T2.VPS_PORT_CD = A.PORT_CD OR A.PORT_CD = 'ALL') AND T2.VVD = A.VVD THEN A.JO_OVR_BSA_TEU_QTY
		     ELSE 0
	    	 END ALL_TEU
		,CASE WHEN (T2.VPS_PORT_CD = A.PORT_CD OR A.PORT_CD = 'ALL') AND T2.VVD = A.VVD THEN A.JO_OVR_TON_WGT
		     ELSE 0
		     END ALL_WGT
		,
		T2.*
		FROM    (
        			SELECT    
	                  MIN(T1.VVD || T1.VPS_ETD_DT) OVER (PARTITION BY T1.VVD) AS VVD_ETD_GROUP
    	            , T1.*
	    		    FROM    SRC T1
    		    ) T2
		       ,(
				 SELECT A.VSL_CD || A.SKD_VOY_NO || A.SKD_DIR_CD AS VVD 
        	       ,A.JO_CRR_CD
            	   ,A.PORT_CD
            	   ,A.JO_OVR_BSA_TEU_QTY
	               ,A.JO_OVR_TON_WGT               
                   ,A.TRD_CD
                   ,A.RLANE_CD                   
    		     FROM JOO_BSA_AGMT A
				 WHERE A.DELT_FLG = 'N'
				) A
	WHERE 1=1
	 AND T2.VVD = A.VVD(+) 
	 AND T2.OPR_CD = A.JO_CRR_CD(+)
) AA
WHERE 1=1
AND (PORT_CD IS NULL
	 OR PORT_CD = 'ALL' 
	 OR PORT_CD = VPS_PORT_CD
	)
ORDER BY SUBSTR(VVD_ETD_GROUP, 10), AA.VVD, AA.VPS_ETD_DT, AA.VPS_PORT_CD, AA.OPR_CD			]]></sql>
			<params>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="pre_fr" type="12" value="" out="N"/>
				<param name="pre_to" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
