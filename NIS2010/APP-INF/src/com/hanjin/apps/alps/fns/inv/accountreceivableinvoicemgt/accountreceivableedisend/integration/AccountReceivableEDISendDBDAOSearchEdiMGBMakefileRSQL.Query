<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableEDISendDBDAOSearchEdiMGBMakefileRSQL">
			<desc><![CDATA[SearchEdiMGBMakefile]]></desc>
			<sql><![CDATA[
SELECT  MST ||CHR(10)|| MSSG01 ||CHR(10)|| MSSG02 ||CHR(10)|| MSSG03 AS RSLT
FROM    (
        SELECT  BL_SRC_NO, CUST_CD, CUST_SEQ, AR_OFC_CD, INV_NO, ISS_DT, CNTR_NO, CNTR_TP_CD, CURR_CD, TTL_AMT
                ,   '$$$MSGSTART:'||RPAD('SMLM', 20, ' ')||RPAD('MGB', 20, ' ')||RPAD('IFTFCC', 10, ' ')||'INV'||INV_NO||LTRIM(TO_CHAR(@[inv_seq], '0000')) ||CHR(10)|| 
                    'DOC_NO:'           ||INV_NO||TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') ||LTRIM(TO_CHAR(@[inv_seq], '0000'))               ||CHR(10)|| 
                    'FUNC_CD:'          ||'9'                                               ||CHR(10)||
                    'PAPER_IND:'        ||'1'                                               ||CHR(10)|| --테스트 에는 1, 실제 라이브 에서는 3으로 가야함
                    'DOC_DATE:'         ||TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')                ||CHR(10)||
                    'INV_NO:'           ||INV_NO                                            ||CHR(10)||
					'INV_SPLIT_FILENBR:'||LTRIM(TO_CHAR(@[inv_seq], '0000'))                ||CHR(10)||
                    'INV_ISSUE_DATE:'   ||ISS_DT                                            ||CHR(10)||
                    'TOT_AMNT:'         ||LTRIM(TO_CHAR(TTL_AMT, '9999999990.99'))          ||CHR(10)||
                    'INV_CUR:'          ||CURR_CD                                           ||CHR(10)||
                    --'BL_NUM:'           ||BL_SRC_NO                                         ||CHR(10)||
                    'PT_CD:'            ||'CA'  AS MST
                , MAX(DECODE(NUM02, 1, MSSG))        AS MSSG01
                , MAX(DECODE(NUM02, 2, MSSG))        AS MSSG02
                , MAX(DECODE(NUM02, 3, MSSG))        AS MSSG03
        FROM    (
                SELECT  AR_IF_NO, BL_SRC_NO
                        , DENSE_RANK() OVER (PARTITION BY BL_SRC_NO, CNTR_NO, CURR_CD ORDER BY CHG_CD_CONV         ) AS NUM02
                        , CUST_CD,CUST_SEQ,AR_OFC_CD,INV_NO,ISS_DT,CNTR_NO,CNTR_TP_CD,CURR_CD,CHG_CD_CONV
                        , SUM(TRF_RT_AMT) AS TRF_RT_AMT
                        , SUM(SUM(TRF_RT_AMT)) OVER (PARTITION BY BL_SRC_NO, CNTR_NO, CURR_CD)         AS TTL_AMT        
                        , '{CNTR_CHARGE'			                                                       ||CHR(10)||
                          'CH_TP:'        || T03.CHG_CD_CONV		                       	             ||CHR(10)||
                          'CH_AMNT:'	    || LTRIM(TO_CHAR(SUM(T03.TRF_RT_AMT), '9999999990.99'))    ||CHR(10)||
                          'CH_CUR:'      || T03.CURR_CD		                       	                 ||CHR(10)||
						  'CH_HAWBNO:'                          	                 				  ||CHR(10)||
                          'CH_CNTRNO:'   || T03.CNTR_NO		                       	                 ||CHR(10)||
						  'CH_ODNO:'                          	                 				  		||CHR(10)||
                          'CH_BLNO:'     || T03.BL_SRC_NO		                       	               ||CHR(10)||
                          '}CNTR_CHARGE'                        AS MSSG
                FROM    (
                        SELECT  T02.*
                                --, DECODE(T02.CHG_CD, 'OFT', 'FRT', 'OTH') AS CHG_CD_CONV
                                ,T02.CHG_CD AS CHG_CD_CONV
                        FROM    (
                                SELECT  T00.*
                                        , T01.CHG_CD
                                        , T01.CURR_CD
                                        , T01.PER_TP_CD
										, CASE WHEN (PER_TP_CD IN ('BX','BL')) THEN
                                                ROUND(T01.CHG_AMT / CNT_CNTR_TTL,2)
                                          ELSE
                                                 DECODE(SIGN(T01.CHG_AMT), -1 ,T01.TRF_RT_AMT*-1 ,T01.TRF_RT_AMT)
                                          END AS TRF_RT_AMT   
                                        --, DECODE(SIGN(T01.CHG_AMT), -1 ,T01.TRF_RT_AMT*-1 ,T01.TRF_RT_AMT) AS TRF_RT_AMT
                                        , T01.RAT_AS_CNTR_QTY
                                        , CASE WHEN (T00.CNTR_TP_CD = T01.PER_TP_CD) THEN 
                        						'Y' 
                  							WHEN (SUBSTR(T00.CNTR_TP_CD, 2) IN ('2', '3')         AND (T01.PER_TP_CD    = '20')) THEN 
                        						'Y'
                  							WHEN (T01.PER_TP_CD IN ('BX','BL'))                           THEN
                        						'Y'
                  							WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '7'                 AND (T01.PER_TP_CD    = '45')) THEN 
                        						'Y'
                  							WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '4'                 AND (T01.PER_TP_CD    IN ('D4','40'))) THEN 
                        						'Y'   
                  							WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '5'                 AND (T01.PER_TP_CD    IN ('D5','40'))) THEN 
                        						'Y'    
                  							WHEN (SUBSTR(T00.CNTR_TP_CD, 2) NOT IN('2','3','7','4','5')  AND (T01.PER_TP_CD    ='40')) THEN 
                        						'Y'
											WHEN (T00.CNTR_TP_CD = 'D4' AND T01.PER_TP_CD ='D5' AND NOT EXISTS (SELECT 1 FROM INV_AR_CHG C WHERE C.AR_IF_NO = T01.AR_IF_NO AND C.PER_TP_CD ='D4')) THEN
                        						'Y'
                  							WHEN (T00.CNTR_TP_CD = 'D5' AND T01.PER_TP_CD ='D4' AND NOT EXISTS (SELECT 1 FROM INV_AR_CHG C WHERE C.AR_IF_NO = T01.AR_IF_NO AND C.PER_TP_CD ='D5')) THEN
                        						'Y'                                                                                      
                  							ELSE 'N' 
                                          END   AS SELF_CNT_CHK_FLG                                        
                                FROM    (
                                        SELECT  AR_IF_NO,BL_SRC_NO,CUST_CD,CUST_SEQ,AR_OFC_CD, INV_NO, ISS_DT, CNTR_NO, CNTR_TP_CD, CNT_BY_CNTR_TP, CNT_BY_TP237_EXCP, CNT_CNTR_TTL
                                        FROM    (
                                                SELECT  T1.AR_IF_NO
                                                        , T1.BL_SRC_NO          AS BL_SRC_NO
                                                        , T1.ACT_CUST_CNT_CD    AS CUST_CD
                                                        , T1.ACT_CUST_SEQ       AS CUST_SEQ
                                                        , T1.AR_OFC_CD, T1.INV_NO, T1.ISS_DT
                                                        , T2.CNTR_NO
                                                        , T2.CNTR_TPSZ_CD       AS CNTR_TP_CD
                                                        , COUNT     (*) OVER (PARTITION BY T2.AR_IF_NO, T2.CNTR_TPSZ_CD)                    AS CNT_BY_CNTR_TP    /* 각 TYPE별 COUNT         */
                                                        , SUM       (DECODE(SUBSTR(T2.CNTR_TPSZ_CD, 2), '2', 0, '3', 0, '7', 0, 1)) OVER () AS CNT_BY_TP237_EXCP /* 2, 3, 7 를 제외한 COUNT */
                                                        , COUNT     (*) OVER (PARTITION BY T2.AR_IF_NO)                                     AS CNT_CNTR_TTL      /* 전체 COUNT              */ 
--                                                        , ROW_NUMBER( ) OVER (PARTITION BY T2.AR_IF_NO, T2.CNTR_NO ORDER BY T2.CNTR_NO, T2.CNTR_SEQ ) AS SEQ
                                                FROM    INV_AR_MN    T1,
                                                        INV_AR_CNTR  T2
                                                WHERE   T1.AR_IF_NO    = T2.AR_IF_NO
                                                AND     T1.BL_SRC_NO        =  @[bl_src_no]
                                                AND     T1.INV_NO        = @[inv_no]
                                                ORDER BY T1.AR_IF_NO
                                                )
--                                        WHERE   SEQ = 1
                                        ) T00,
                                        INV_AR_CHG T01
                                WHERE   T00.AR_IF_NO    = T01.AR_IF_NO
                                ) T02
                        WHERE   1=1
                        AND     T02.SELF_CNT_CHK_FLG = 'Y'  /* CNTR TP별 CHECK RULE에서 정상('Y') 일 경우만 대상 */
                        ) T03
                WHERE   1=1
                GROUP BY AR_IF_NO, BL_SRC_NO,CUST_CD,CUST_SEQ,AR_OFC_CD,INV_NO,ISS_DT,CNTR_NO,CNTR_TP_CD,CURR_CD,CHG_CD_CONV
                ) T04
        WHERE   1=1
          AND CNTR_NO = @[cntr_no]                                             
          AND CURR_CD = @[curr_cd]
        GROUP BY BL_SRC_NO, CUST_CD,CUST_SEQ,AR_OFC_CD,INV_NO,ISS_DT,CNTR_NO,CNTR_TP_CD,CURR_CD, TTL_AMT
        ORDER BY  BL_SRC_NO
        ) T05
WHERE   1=1			]]></sql>
			<params>
				<param name="inv_seq" type="12" value="" out="N"/>
				<param name="bl_src_no" type="12" value="" out="N"/>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="cntr_no" type="12" value="" out="N"/>
				<param name="curr_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
