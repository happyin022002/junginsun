<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOSearchMonthlyClearanceListRSQL">
			<desc><![CDATA[DESC Enter..]]></desc>
			<sql><![CDATA[
SELECT  
        A1.JO_STL_ITM_CD
,       DENSE_RANK() OVER (ORDER BY ORD)||'. '||T.JO_STL_ITM_NM JO_STL_ITM_CD_NM
,       A1.RLANE_CD
,       A1.LOCL_CURR_CD
,       A1.R_VVD
,       SUM(A1.R_BSA_QTY)R_BSA_QTY
,       A1.R_BSA_SLT_PRC
,       SUM(A1.R_STL_LOCL_AMT)R_STL_LOCL_AMT
,       A1.E_VVD
,       SUM(A1.E_BSA_QTY)E_BSA_QTY
,       A1.E_BSA_SLT_PRC
,       SUM(A1.E_STL_LOCL_AMT)E_STL_LOCL_AMT
,       MAX((
        SELECT 'DUP' || '/' || DTL.ACCT_YRMON || '/' || DTL.STL_CMB_SEQ
          FROM JOO_SETTLEMENT STL
             , JOO_STL_CMB_DTL DTL
             , JOO_STL_CMB CMB
             , JOO_CSR CSR
         WHERE 1 = 1
           AND A1.TRD_CD = STL.TRD_CD
           AND A1.RLANE_CD = STL.RLANE_CD
           AND A1.JO_CRR_CD = STL.JO_CRR_CD
           AND A1.RE_DIVR_CD = STL.RE_DIVR_CD
           AND A1.JO_STL_ITM_CD = STL.JO_STL_ITM_CD
           AND A1.VSL_CD = STL.VSL_CD
           AND A1.SKD_VOY_NO = STL.SKD_VOY_NO
           AND A1.SKD_DIR_CD = STL.SKD_DIR_CD
           AND STL.ACCT_YRMON = DTL.ACCT_YRMON
           AND STL.STL_VVD_SEQ = DTL.STL_VVD_SEQ
           AND STL.STL_SEQ = DTL.STL_SEQ
           AND DTL.ACCT_YRMON = CMB.ACCT_YRMON
           AND DTL.JO_CRR_CD = CMB.JO_CRR_CD
           AND DTL.STL_CMB_SEQ = CMB.STL_CMB_SEQ
           AND DTL.RE_DIVR_CD = CMB.RE_DIVR_CD
           AND CMB.SLP_TP_CD = CSR.SLP_TP_CD
           AND CMB.SLP_FUNC_CD = CSR.SLP_FUNC_CD
           AND CMB.SLP_OFC_CD = CSR.SLP_OFC_CD
           AND CMB.SLP_ISS_DT = CSR.SLP_ISS_DT
           AND CMB.SLP_SER_NO = CSR.SLP_SER_NO
           AND CSR.APRO_FLG = 'Y'
           AND CSR.CXL_FLG = 'N'
           AND CMB.ACCT_YRMON  BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(REPLACE(@[acct_yrmon],'-',''),'YYYYMM'),-24),'YYYYMM') AND REPLACE(@[acct_yrmon],'-','')
           AND DTL.ACCT_YRMON || DTL.JO_CRR_CD || DTL.STL_CMB_SEQ != REPLACE(@[acct_yrmon],'-','') || @[jo_crr_cd] || @[stl_cmb_seq]
           AND ROWNUM = 1
        )) REMARK
  FROM (
/**/                  SELECT     A.JO_STL_ITM_CD, A.JO_CRR_CD
/**/        ,                  A.RLANE_CD
/**/        ,                  A.LOCL_CURR_CD
/**/        ,                  A.RE_DIVR_CD
            ,                  A.TRD_CD
            ,                  A.VSL_CD
            ,                  A.SKD_VOY_NO
            ,                  A.SKD_DIR_CD
/*                            REVENUE   ↓↓↓  */
/**/        ,                  DECODE(A.RE_DIVR_CD,'R',A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD,'') AS R_VVD
/**/        ,                  CASE   WHEN  A.RE_DIVR_CD  = 'R' 
/**/                                  THEN 
/**/                                        CASE   WHEN  A.STL_ADJ_FLG = 'N' OR A.STL_ADJ_FLG IS NULL
/**/                                               THEN
/**/                                                     CASE   WHEN   A.JO_STL_ITM_CD='R/F' AND A.JO_MNU_NM = 'R/F' /*R/F이외는 BSA_QTY         */
/**/                                                            THEN   A.USD_SLT_BSA_QTY      /*R/F는     USD_SLT_BSA_QTY */
/**/                                                            ELSE   A.BSA_QTY
/**/                                                     END
/**/                                               ELSE  B.BSA_QTY
/**/                                        END
/**/                            END    R_BSA_QTY
/**/        ,                  CASE   WHEN  A.RE_DIVR_CD  = 'R' 
/**/                                  THEN 
/**/                                        CASE   WHEN  A.STL_ADJ_FLG = 'N' OR A.STL_ADJ_FLG IS NULL
/**/                                               THEN
/**/                                                     CASE   WHEN   A.JO_STL_ITM_CD='R/F' AND A.JO_MNU_NM = 'R/F'/*R/F이외는 BSA_SLT_PRC         */
/**/                                                            THEN   A.RF_SCG_PRC         /*R/F는      RF_SCG_PRC */
/**/                                                            ELSE   A.BSA_SLT_PRC
/**/                                                     END
/**/                                               ELSE  B.BSA_SLT_PRC
/**/                                        END
/**/                            END   R_BSA_SLT_PRC
/**/        ,                  DECODE(A.RE_DIVR_CD,'R',DECODE(A.STL_ADJ_FLG,'Y',B.STL_LOCL_AMT,A.STL_LOCL_AMT))  AS R_STL_LOCL_AMT
/*                          REVENUE   ↓↓↓  */
/**/        ,                   DECODE(A.RE_DIVR_CD,'E',A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD,'') AS E_VVD
/**/        ,                  CASE   WHEN  A.RE_DIVR_CD  = 'E' 
/**/                                  THEN 
/**/                                        CASE   WHEN  A.STL_ADJ_FLG = 'N' OR A.STL_ADJ_FLG IS NULL
/**/                                               THEN
/**/                                                     CASE   WHEN   A.JO_STL_ITM_CD='R/F'  AND A.JO_MNU_NM = 'R/F'/*R/F이외는 BSA_QTY         */
/**/                                                            THEN   A.USD_SLT_BSA_QTY      /*R/F는     USD_SLT_BSA_QTY */
/**/                                                            ELSE   A.BSA_QTY
/**/                                                     END
/**/                                               ELSE  B.BSA_QTY
/**/                                        END
/**/                            END   E_BSA_QTY
/**/        ,                  CASE   WHEN  A.RE_DIVR_CD  = 'E' 
/**/                                  THEN 
/**/                                        CASE   WHEN  A.STL_ADJ_FLG = 'N' OR A.STL_ADJ_FLG IS NULL
/**/                                               THEN
/**/                                                     CASE   WHEN   A.JO_STL_ITM_CD='R/F' AND A.JO_MNU_NM = 'R/F' /*R/F이외는 BSA_SLT_PRC         */
/**/                                                            THEN   A.RF_SCG_PRC         /*R/F는      RF_SCG_PRC */
/**/                                                            ELSE   A.BSA_SLT_PRC
/**/                                                     END
/**/                                               ELSE  B.BSA_SLT_PRC
/**/                                        END
/**/                            END   E_BSA_SLT_PRC
/**/        ,                   DECODE(A.RE_DIVR_CD,'E',DECODE(A.STL_ADJ_FLG,'Y',B.STL_LOCL_AMT,A.STL_LOCL_AMT) ) AS E_STL_LOCL_AMT
/**/               FROM    JOO_SETTLEMENT A, JOO_STL_DTL B, JOO_CRR_AUTH    Z
/**/              WHERE   A.ACCT_YRMON   =    B.ACCT_YRMON(+)
/**/                AND   A.STL_VVD_SEQ  =    B.STL_VVD_SEQ(+)
/**/                AND   A.STL_SEQ      =    B.STL_SEQ(+)
                    AND   A.JO_CRR_CD    =    Z.JO_CRR_CD
                    AND   A.RLANE_CD     =    Z.RLANE_CD
                    AND   Z.AUTH_OFC_CD  =    @[ofc_cd]
                    AND   Z.DELT_FLG     = 'N'
                    AND   Z.JO_CRR_AUTH_CD     = 'W'
/**/                AND   A.ACCT_YRMON   = REPLACE(@[acct_yrmon],'-') AND A.STL_LOCL_AMT<>0
/**/	        #if (${jo_crr_cd} != '')
/**/            AND   A.JO_CRR_CD = @[jo_crr_cd]
	        #end
	        #if (${stl_cmb_seq} != '')
/**/            AND   (A.ACCT_YRMON, A.STL_VVD_SEQ, A.STL_SEQ) IN (
/**/                                                                SELECT   CMB.ACCT_YRMON, CMB.STL_VVD_SEQ, CMB.STL_SEQ
/**/                                                                 FROM   JOO_STL_CMB_DTL CMB
/**/                                                                 WHERE   CMB.ACCT_YRMON  =   REPLACE(@[acct_yrmon],'-')
/**/                                                                   AND   CMB.JO_CRR_CD   =   @[jo_crr_cd]
/**/                                                                   AND   CMB.STL_CMB_SEQ =   @[stl_cmb_seq]
/**/                                                              )
/**/           AND    A.CMB_CFM_FLG = 'Y'
            #else
/**/           AND    NVL(A.CMB_CFM_FLG,'N') = 'N'
            #end
/**/     )A1,
/**/     (SELECT     K.ORD,I.* 
/**/        FROM     JOO_STL_ITM I,
/**/                 (SELECT 1 ORD,'S/H' JO_STL_ITM_CD FROM DUAL UNION ALL
/**/                  SELECT 2 ORD,'OUS' JO_STL_ITM_CD FROM DUAL UNION ALL
/**/                  SELECT 3 ORD,'R/F' JO_STL_ITM_CD FROM DUAL UNION ALL
/**/                  SELECT 4 ORD,'OTH' JO_STL_ITM_CD FROM DUAL UNION ALL
/**/                  SELECT 5 ORD,'W/R' JO_STL_ITM_CD FROM DUAL UNION ALL
/**/                  SELECT 6 ORD,'P/B' JO_STL_ITM_CD FROM DUAL ) K                   
/**/       WHERE     I.JO_STL_ITM_CD = K.JO_STL_ITM_CD 
/**/       )T    
WHERE
/**/      T.JO_STL_ITM_CD = A1.JO_STL_ITM_CD
GROUP BY 
        A1.JO_STL_ITM_CD
,       A1.RLANE_CD
,       A1.LOCL_CURR_CD
,       A1.R_VVD
,       A1.R_BSA_SLT_PRC
,       A1.E_VVD
,       A1.E_BSA_SLT_PRC
,       T.ORD
,       T.JO_STL_ITM_NM
HAVING  (SUM(A1.R_STL_LOCL_AMT) != 0 OR SUM(A1.E_STL_LOCL_AMT) != 0)
ORDER   BY  T.ORD,T.JO_STL_ITM_NM,
            A1.RLANE_CD,
            A1.R_VVD,A1.E_VVD			]]></sql>
			<params>
				<param name="acct_yrmon" type="12" value="" out="N"/>
				<param name="jo_crr_cd" type="12" value="" out="N"/>
				<param name="stl_cmb_seq" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
