<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableEDISendDBDAOSearchEdiNikeChargeMappingRSQL">
			<desc><![CDATA[]]></desc>
			<sql><![CDATA[
SELECT  T03.ISS_DT
        ,T03.CNTR_NO
        ,T03.BL_SRC_NO
        ,T03.INV_NO
        ,TO_CHAR(T03.NUM01,'FM0009') AS INV_SEQ
        ,T03.CURR_CD
        ,T03.SUM_AMT AS TTL_TRF_RT_AMT
        ,T03.CHG_CD AS NIKE_CHG_TP_CD
        ,T03.TRF_RT_AMT
        ,NVL(N.NIKE_FRT_MOD_ID, DECODE(T03.CURR_CD,'USD','VL', 'TR')) AS NIKE_FRT_MOD_ID
        ,'SMLM' AS NIKE_CRR_ID
        ,NVL(N.EDI_SND_FLG,'N') AS EDI_SND_FLG
        ,DENSE_RANK() OVER (PARTITION BY T03.BL_SRC_NO,T03.CNTR_NO,T03.CURR_CD  ORDER BY ROWNUM) AS CHG_SEQ
  ,T03.CURR_CD AS MERGE_CHK
  ,A.ACK_RSLT_CD
  FROM (
SELECT  DISTINCT 
  T02.ISS_DT
        ,T02.CNTR_NO
        ,T02.BL_SRC_NO
        ,T02.INV_NO
        ,DENSE_RANK() OVER (PARTITION BY T02.INV_NO  ORDER BY T02.CNTR_NO, T02.CURR_CD) AS NUM01
        ,T02.CURR_CD
        ,SUM(T02.TRF_RT_AMT) OVER (PARTITION BY T02.INV_NO, T02.CNTR_NO, T02.CURR_CD) SUM_AMT
        ,T02.CHG_CD
        ,SUM(T02.TRF_RT_AMT) OVER (PARTITION BY T02.INV_NO, T02.CNTR_NO, T02.CURR_CD, T02. CHG_CD) TRF_RT_AMT
FROM    (
        SELECT  DISTINCT T00.*
                , T01.CHG_CD
                , T01.CURR_CD
                , T01.PER_TP_CD
    , CASE WHEN (T01.PER_TP_CD IN ('BX','BL')) THEN
                    ROUND(T01.CHG_AMT / CNT_CNTR_TTL,2)
                  ELSE
                    DECODE(SIGN(T01.CHG_AMT), -1 ,T01.TRF_RT_AMT*-1 ,T01.TRF_RT_AMT) 
                  END AS TRF_RT_AMT
                --, DECODE(SIGN(T01.CHG_AMT), -1 ,T01.TRF_RT_AMT*-1 ,T01.TRF_RT_AMT) AS TRF_RT_AMT
                , T01.RAT_AS_CNTR_QTY
                , CASE WHEN (T00.CNTR_TP_CD = T01.PER_TP_CD) THEN 
                        'Y' 
                  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) IN ('2', '3')         AND (T01.PER_TP_CD    = '20')) THEN 
                        'Y'
                  WHEN (T01.PER_TP_CD IN ('BX','BL'))                           THEN
                        'Y'
                  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '7'                 AND (T01.PER_TP_CD    = '45')) THEN 
                        'Y'
				  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '4'                 AND (T01.PER_TP_CD   = 'D4')) THEN  
                        'Y'
                  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '5'                 AND (T01.PER_TP_CD   = 'D5')) THEN  
                        'Y'
				  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '4'                 AND (T01.PER_TP_CD   = '40')) THEN  
						DECODE(T01.RAT_AS_CNTR_QTY, T00.CNT_BY_CNTR_TP,'Y', T00.CNT_BY_TP237_EXCP, 'Y','N')
				  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) = '5'                 AND (T01.PER_TP_CD   = '40')) THEN  
						DECODE(T01.RAT_AS_CNTR_QTY, T00.CNT_BY_CNTR_TP,'Y', T00.CNT_BY_TP237_EXCP, 'Y','N')
                  WHEN (SUBSTR(T00.CNTR_TP_CD, 2) NOT IN('2','3','7','4','5')  AND (T01.PER_TP_CD    ='40')) THEN 
                        'Y'   
      WHEN (T00.CNTR_TP_CD = 'D4' AND T01.PER_TP_CD ='D5' AND NOT EXISTS (SELECT 1 FROM INV_AR_CHG C WHERE C.AR_IF_NO = T01.AR_IF_NO AND C.PER_TP_CD ='D4')) THEN
                        'Y'
                  WHEN (T00.CNTR_TP_CD = 'D5' AND T01.PER_TP_CD ='D4' AND NOT EXISTS (SELECT 1 FROM INV_AR_CHG C WHERE C.AR_IF_NO = T01.AR_IF_NO AND C.PER_TP_CD ='D5')) THEN
                        'Y'                                                                                   
                  ELSE 'N' 
                  END   AS SELF_CNT_CHK_FLG
        FROM    (
                SELECT  AR_IF_NO,BL_SRC_NO,CUST_CD,CUST_SEQ,AR_OFC_CD, INV_NO, ISS_DT, CNTR_NO, CNTR_TP_CD, CNT_BY_CNTR_TP, CNT_BY_TP237_EXCP, CNT_CNTR_TTL
                FROM    (
                        SELECT  T1.AR_IF_NO
                                , T1.BL_SRC_NO          AS BL_SRC_NO
                                , T1.ACT_CUST_CNT_CD    AS CUST_CD
                                , T1.ACT_CUST_SEQ       AS CUST_SEQ
                                , T1.AR_OFC_CD, T1.INV_NO, T1.ISS_DT
                                , T2.CNTR_NO
                                , T2.CNTR_TPSZ_CD       AS CNTR_TP_CD
                                , COUNT     (*) OVER (PARTITION BY T2.AR_IF_NO, T2.CNTR_TPSZ_CD)                    AS CNT_BY_CNTR_TP    /* 각 TYPE별 COUNT         */
                                , SUM       (DECODE(SUBSTR(T2.CNTR_TPSZ_CD, 2), '2', 0, '3', 0, '7', 0, 1)) OVER (PARTITION BY T2.AR_IF_NO) AS CNT_BY_TP237_EXCP /* 2, 3, 7 를 제외한 COUNT */
                                , COUNT     (*) OVER (PARTITION BY T2.AR_IF_NO)                                     AS CNT_CNTR_TTL      /* 전체 COUNT              */ 
                        FROM    INV_AR_MN    T1,
                                INV_AR_CNTR  T2
                        WHERE   T1.AR_IF_NO    = T2.AR_IF_NO
      					AND T1.AR_OFC_CD  = @[ofc_cd]
                        #if (${retr_opt} == 'B') 
                        AND T1.BL_SRC_NO  = @[bl_src_no]
                        #elseif (${retr_opt} == 'N') 
                        AND T1.INV_NO  = @[inv_no]
                        #elseif (${retr_opt} == 'V') 
                        AND T1.VSL_CD = substr(@[vvd],0,4)
                       AND T1.SKD_VOY_NO  = substr(@[vvd],5,4)
                       AND T1.SKD_DIR_CD = substr(@[vvd],9,1) 
                        #elseif (${retr_opt} == 'I') 
                        AND T1.ISS_DT BETWEEN REPLACE(@[fm_dt],'-','') AND REPLACE(@[to_dt],'-','')
                        #elseif (${retr_opt} == 'S')
                        AND T1.SAIL_ARR_DT BETWEEN REPLACE(@[fm_dt],'-','') AND REPLACE(@[to_dt],'-','')
                        #end
                        AND T1.ACT_CUST_CNT_CD = @[act_cust_cnt_cd]
                        AND T1.ACT_CUST_SEQ = @[act_cust_seq]
                        AND NVL(T1.INV_DELT_DIV_CD,'N') <> 'Y'
                        AND T1.BL_INV_CFM_DT IS NOT NULL
                        AND T1.INV_ISS_FLG  = 'Y'
                        AND T1.INV_CLR_FLG = 'N'
                        ORDER BY T1.AR_IF_NO
                        )
                ) T00,
                INV_AR_CHG T01
        WHERE   T00.AR_IF_NO    = T01.AR_IF_NO
        ) T02       
WHERE   1=1
AND     T02.SELF_CNT_CHK_FLG = 'Y' 
ORDER bY ISS_DT, BL_SRC_NO, INV_NO,CNTR_NO, CURR_CD ) T03,
    INV_EDI_NIKE_HDR N,
   INV_EDI_ACK      A
WHERE T03.INV_NO   = N.INV_NO(+)
AND     T03.BL_SRC_NO   = N.BL_SRC_NO(+)
AND     T03.CNTR_NO     = N.CNTR_NO(+)
AND     T03.CURR_CD     = N.CURR_CD(+)
AND     T03.NUM01       = NVL(N.INV_SEQ(+),0)
AND     T03.INV_NO      = SUBSTR(A.ACK_KEY_NO(+),1,9)
AND     T03.NUM01       = SUBSTR(A.ACK_KEY_NO(+),11,4)
AND     T03.CURR_CD     = SUBSTR(A.ACK_KEY_NO(+),16)
AND     A.ACK_SNDR_ID(+) = 'NIKE'
#if (${sent_stat} != 'A') 
AND NVL(N.EDI_SND_FLG,'N') = @[sent_stat]
#end
ORDER bY ISS_DT, BL_SRC_NO, INV_NO, CNTR_NO, CURR_CD, CHG_CD			]]></sql>
			<params>
				<param name="ofc_cd" type="12" value="" out="N"/>
				<param name="bl_src_no" type="12" value="" out="N"/>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="act_cust_cnt_cd" type="12" value="" out="N"/>
				<param name="act_cust_seq" type="12" value="" out="N"/>
				<param name="sent_stat" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
