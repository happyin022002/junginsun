<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="JointOperationMasterDataMgtDBDAOTargetVVDRoundCreRSQL">
			<desc><![CDATA[Target VVD Creation용 Round]]></desc>
			<sql><![CDATA[
WITH BAS AS (
   SELECT /*+ ORDERED */
         J.JO_CRR_CD, J.TRD_CD, J.RLANE_CD,J.JO_STL_ITM_CD, J.STL_TGT_VVD_BSS_CD, J.JO_STL_TGT_TP_CD, J.JO_PRD_FR, J.JO_PRD_TO, BPORT1, BPORT2, BPORT3, PPORT1, PPORT2, PPORT3,
         J.UC_BSS_PORT_CD, V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, VPS_PORT_CD, VPS_ETA_DT, VPS_ETB_DT, VPS_ETD_DT, J.MNTH_COND, J.PORT_COND, J.PORT_TYPE, J.OPTP_COND,
         J.BPORT, J.SEQ, ROW_NUMBER() OVER (PARTITION BY V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, J.JO_STL_ITM_CD ORDER BY J.SEQ) AS RN
   FROM  (
          SELECT 1 AS SEQ, A.N1ST_STL_BZC_PORT_CD AS BPORT,
                 A.JO_CRR_CD, A.TRD_CD, A.RLANE_CD, A.SKD_DIR_CD, A.JO_STL_ITM_CD, A.STL_TGT_VVD_BSS_CD, A.JO_STL_TGT_TP_CD, A.UC_BSS_PORT_CD,
                 A.N1ST_STL_BZC_PORT_CD  AS BPORT1, A.N2ND_STL_BZC_PORT_CD  AS BPORT2, A.N3RD_STL_BZC_PORT_CD  AS BPORT3,
                 A.N1ST_STL_PAIR_PORT_CD AS PPORT1, A.N2ND_STL_PAIR_PORT_CD AS PPORT2, A.N3RD_STL_PAIR_PORT_CD AS PPORT3,
                 A.AGMT_MON_COND_CD AS MNTH_COND , A.AGMT_PORT_COND_CD AS PORT_COND,
                 A.AGMT_PORT_TP_COND_CD AS PORT_TYPE   , A.AGMT_OP_TP_COND_CD AS OPTP_COND,
                 CASE WHEN A.AGMT_MON_COND_CD = 'B' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -1)
                      WHEN A.AGMT_MON_COND_CD = 'N' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), +1)
                      WHEN A.AGMT_MON_COND_CD = 'T' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -2)
                      WHEN A.AGMT_MON_COND_CD = 'C' THEN TO_DATE(@[acct_yrmon],'YYYYMM')
                 END JO_PRD_FR,
                 CASE WHEN A.AGMT_MON_COND_CD = 'B' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -1))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'N' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), +1))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'T' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -2))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'C' THEN LAST_DAY(TO_DATE(@[acct_yrmon],'YYYYMM'))+0.99999
                 END JO_PRD_TO
          FROM   JOO_STL_BSS_PORT A
          WHERE  A.JO_CRR_CD     = @[jo_crr_cd]
          AND    A.RLANE_CD      = @[rlane_cd]
          UNION ALL
          SELECT 2 AS SEQ, A.N2ND_STL_BZC_PORT_CD AS BPORT,
                 A.JO_CRR_CD, A.TRD_CD, A.RLANE_CD, A.SKD_DIR_CD, A.JO_STL_ITM_CD, A.STL_TGT_VVD_BSS_CD, A.JO_STL_TGT_TP_CD, A.UC_BSS_PORT_CD,
                 A.N1ST_STL_BZC_PORT_CD  AS BPORT1, A.N2ND_STL_BZC_PORT_CD  AS BPORT2, A.N3RD_STL_BZC_PORT_CD  AS BPORT3,
                 A.N1ST_STL_PAIR_PORT_CD AS PPORT1, A.N2ND_STL_PAIR_PORT_CD AS PPORT2, A.N3RD_STL_PAIR_PORT_CD AS PPORT3,
                 A.AGMT_MON_COND_CD AS MNTH_COND , A.AGMT_PORT_COND_CD AS PORT_COND,
                 A.AGMT_PORT_TP_COND_CD AS PORT_TYPE   , A.AGMT_OP_TP_COND_CD AS OPTP_COND,
                 CASE WHEN A.AGMT_MON_COND_CD = 'B' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -1)
                      WHEN A.AGMT_MON_COND_CD = 'N' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), +1)
                      WHEN A.AGMT_MON_COND_CD = 'T' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -2)
                      WHEN A.AGMT_MON_COND_CD = 'C' THEN TO_DATE(@[acct_yrmon],'YYYYMM')
                 END JO_PRD_FR,
                 CASE WHEN A.AGMT_MON_COND_CD = 'B' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -1))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'N' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), +1))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'T' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -2))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'C' THEN LAST_DAY(TO_DATE(@[acct_yrmon],'YYYYMM'))+0.99999
                 END JO_PRD_TO
          FROM   JOO_STL_BSS_PORT A
          WHERE  A.JO_CRR_CD     = @[jo_crr_cd]
          AND    A.RLANE_CD      = @[rlane_cd]
          UNION ALL
          SELECT 3 AS SEQ, A.N3RD_STL_BZC_PORT_CD AS BPORT,
                 A.JO_CRR_CD, A.TRD_CD, A.RLANE_CD, A.SKD_DIR_CD, A.JO_STL_ITM_CD, A.STL_TGT_VVD_BSS_CD, A.JO_STL_TGT_TP_CD, A.UC_BSS_PORT_CD,
                 A.N1ST_STL_BZC_PORT_CD  AS BPORT1, A.N2ND_STL_BZC_PORT_CD  AS BPORT2, A.N3RD_STL_BZC_PORT_CD  AS BPORT3,
                 A.N1ST_STL_PAIR_PORT_CD AS PPORT1, A.N2ND_STL_PAIR_PORT_CD AS PPORT2, A.N3RD_STL_PAIR_PORT_CD AS PPORT3,
                 A.AGMT_MON_COND_CD AS MNTH_COND , A.AGMT_PORT_COND_CD AS PORT_COND,
                 A.AGMT_PORT_TP_COND_CD AS PORT_TYPE   , A.AGMT_OP_TP_COND_CD AS OPTP_COND,
                 CASE WHEN A.AGMT_MON_COND_CD = 'B' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -1)
                      WHEN A.AGMT_MON_COND_CD = 'N' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), +1)
                      WHEN A.AGMT_MON_COND_CD = 'T' THEN ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -2)
                      WHEN A.AGMT_MON_COND_CD = 'C' THEN TO_DATE(@[acct_yrmon],'YYYYMM')
                 END JO_PRD_FR,
                 CASE WHEN A.AGMT_MON_COND_CD = 'B' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -1))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'N' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), +1))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'T' THEN LAST_DAY(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'), -2))+0.99999
                      WHEN A.AGMT_MON_COND_CD = 'C' THEN LAST_DAY(TO_DATE(@[acct_yrmon],'YYYYMM'))+0.99999
                 END JO_PRD_TO
          FROM   JOO_STL_BSS_PORT A
          WHERE  A.JO_CRR_CD     = @[jo_crr_cd]
          AND    A.RLANE_CD      = @[rlane_cd]
          ) J,
          VSK_VSL_PORT_SKD V
   WHERE  SUBSTR(J.RLANE_CD,1,3) = V.SLAN_CD
   AND    J.SKD_DIR_CD           = V.SKD_DIR_CD
   AND    NVL(V.SKD_CNG_STS_CD,'N') <> 'S'
   AND    V.VPS_PORT_CD  = J.BPORT
   AND    V.CLPT_IND_SEQ = '1'
   AND   (CASE WHEN J.OPTP_COND = 'A' THEN V.VPS_ETA_DT
               WHEN J.OPTP_COND = 'B' THEN V.VPS_ETB_DT
               WHEN J.OPTP_COND = 'D' THEN V.VPS_ETD_DT
          END) BETWEEN J.JO_PRD_FR AND J.JO_PRD_TO
   --다른월에 BPORT1,2,3가 포함된 항차는 누락시킨다.
   AND    NOT EXISTS (
        SELECT 'X'
        FROM   VSK_VSL_PORT_SKD T3
        WHERE  T3.VSL_CD       = V.VSL_CD
        AND    T3.SKD_VOY_NO   = V.SKD_VOY_NO
        AND    T3.SKD_DIR_CD   = V.SKD_DIR_CD
        AND    T3.CLPT_IND_SEQ = '1'
        AND    NVL(T3.SKD_CNG_STS_CD,'N') <> 'S'
        AND    T3.VPS_PORT_CD  IN (J.BPORT1, J.BPORT2, J.BPORT3)
        AND    T3.VPS_PORT_CD <> V.VPS_PORT_CD
        AND    ((J.PORT_COND = 'F' AND J.OPTP_COND = 'A' AND J.JO_PRD_FR > T3.VPS_ETA_DT)
             OR (J.PORT_COND = 'F' AND J.OPTP_COND = 'B' AND J.JO_PRD_FR > T3.VPS_ETB_DT)
             OR (J.PORT_COND = 'F' AND J.OPTP_COND = 'D' AND J.JO_PRD_FR > T3.VPS_ETD_DT)
             OR (J.PORT_COND = 'L' AND J.OPTP_COND = 'A' AND J.JO_PRD_TO < T3.VPS_ETA_DT)
             OR (J.PORT_COND = 'L' AND J.OPTP_COND = 'B' AND J.JO_PRD_TO < T3.VPS_ETB_DT)
             OR (J.PORT_COND = 'L' AND J.OPTP_COND = 'D' AND J.JO_PRD_TO < T3.VPS_ETD_DT)))
)
SELECT
       'I' AS IBFLAG
      ,O.VSL_CD
      ,O.SKD_VOY_NO
      ,O.SKD_DIR_CD
      ,O.REV_DIR_CD
      ,O.JO_STL_ITM_CD
      ,'0' AS JO_MNL_CRE_FLG
      ,O.STL_BZC_PORT_CD
      ,O.STL_TGT_VVD_BSS_CD
      ,'Y' AS JO_STL_CFM_CD
      ,O.BZC_PORT_ETA_DT
      ,O.BZC_PORT_ETD_DT
      ,O.STL_PAIR_PORT_CD
      ,O.PAIR_PORT_ETA_DT
      ,O.PAIR_PORT_ETD_DT
      ,O.UC_BSS_PORT_CD
      ,O.UC_BSS_PORT_ETD_DT
      ,O.STL_RMK
      ,@[acct_yrmon] AS ACCT_YRMON
      ,0 AS STL_VVD_SEQ
      ,O.TRD_CD
      ,O.JO_CRR_CD
      ,O.RLANE_CD
      ,O.JO_MNU_NM
      ,O.JO_MNU_NM AS JO_MNU_NM1
      ,'N' AS PROC_JB_FLG
      ,@[re_divr_cd] AS RE_DIVR_CD
      ,O.AGMT_MON_COND_CD
      ,O.AGMT_PORT_COND_CD
      ,O.AGMT_PORT_TP_COND_CD
      ,O.AGMT_OP_TP_COND_CD
      ,O.REV_YRMON
      ,'N' AS RVS_FLG
      ,O.PENDING_FLG
FROM  (
      SELECT
             N.VSL_CD, N.SKD_VOY_NO, N.SKD_DIR_CD ,N.REV_DIR_CD ,N.JO_STL_ITM_CD ,N.STL_BZC_PORT_CD ,N.STL_TGT_VVD_BSS_CD ,N.BZC_PORT_ETA_DT, N.BZC_PORT_ETD_DT ,
             N.STL_PAIR_PORT_CD ,N.PAIR_PORT_ETA_DT ,N.PAIR_PORT_ETD_DT ,N.UC_BSS_PORT_CD ,N.UC_BSS_PORT_ETD_DT ,N.TRD_CD ,N.JO_CRR_CD, N.RLANE_CD ,N.JO_MNU_NM,
             N.AGMT_MON_COND_CD, N.AGMT_PORT_COND_CD, N.AGMT_PORT_TP_COND_CD, N.AGMT_OP_TP_COND_CD, N.REV_YRMON,
             ROW_NUMBER() OVER(PARTITION BY N.VSL_CD, N.SKD_VOY_NO, N.SKD_DIR_CD, N.JO_STL_ITM_CD ORDER BY RN) AS RNK, N.STL_RMK, N.PENDING_FLG
      FROM (
            SELECT
                   M.VSL_CD ,M.SKD_VOY_NO ,N.VSL_SLAN_DIR_CD AS SKD_DIR_CD ,A.RLANE_DIR_CD AS REV_DIR_CD ,M.JO_STL_ITM_CD, A.REV_YRMON,
                   CASE WHEN M.JO_STL_ITM_CD = 'OUS' THEN  DECODE(M.JO_STL_TGT_TP_CD,'R','RDR','T','TDR','') ELSE M.JO_STL_ITM_CD END AS JO_MNU_NM,
                   M.STL_TGT_VVD_BSS_CD ,M.STL_BZC_PORT_CD ,M.BZC_PORT_ETA_DT ,M.BZC_PORT_ETD_DT ,M.STL_PAIR_PORT_CD ,M.PAIR_PORT_ETA_DT ,M.PAIR_PORT_ETD_DT,
                   M.UC_BSS_PORT_CD ,M.UC_BSS_PORT_ETD_DT ,M.TRD_CD ,M.JO_CRR_CD ,M.RLANE_CD,M.MNTH_COND AGMT_MON_COND_CD, M.PORT_COND AGMT_PORT_COND_CD, M.PORT_TYPE AGMT_PORT_TP_COND_CD, M.OPTP_COND AGMT_OP_TP_COND_CD,2 AS RN, '' AS STL_RMK, M.PENDING_FLG -- 전월 PENDING처리된 것과 중복될 경우 PENDING된 것이 우선하기 위해 2로 처리한다.
            FROM   (
                --PAIR PORT 가 NOT NULL 인 경우
                SELECT
                       T0.JO_CRR_CD, T0.TRD_CD, T0.RLANE_CD, T0.JO_STL_ITM_CD, T0.STL_TGT_VVD_BSS_CD, T0.JO_STL_TGT_TP_CD, T0.MNTH_COND, T0.PORT_COND, T0.PORT_TYPE, T0.OPTP_COND,
      	      	       --BSS_PORT에 UCB PORT가 NULL이면 BASIC PORT중 첫번째 것을 취하고 NOT NULL 인 경우 해당 PORT것을 가져온다.
                       CASE WHEN T0.UC_BSS_PORT_CD IS NULL THEN T0.VPS_PORT_CD 
                            ELSE CASE WHEN T2.VSL_CD IS NULL THEN NULL 
                                      ELSE CASE WHEN NVL(T2.SKD_CNG_STS_CD,'N') = 'S' THEN NULL
                                                ELSE T2.VPS_PORT_CD
                                            END
                                 END
                       END AS UC_BSS_PORT_CD,
                       CASE WHEN T0.UC_BSS_PORT_CD IS NULL THEN TO_CHAR(T0.VPS_ETD_DT,'YYYYMMDDHH24MISS')
                            ELSE CASE WHEN T2.VSL_CD IS NULL THEN NULL 
                                      ELSE CASE WHEN NVL(T2.SKD_CNG_STS_CD,'N') = 'S' THEN NULL
                                                ELSE TO_CHAR(T2.VPS_ETD_DT,'YYYYMMDDHH24MISS')
                                            END
                                 END
                       END AS UC_BSS_PORT_ETD_DT,
                       T0.VSL_CD, T0.SKD_VOY_NO, T0.SKD_DIR_CD,
                       T0.VPS_PORT_CD AS STL_BZC_PORT_CD, TO_CHAR(T0.VPS_ETA_DT,'YYYYMMDDHH24MISS') AS BZC_PORT_ETA_DT, TO_CHAR(T0.VPS_ETD_DT,'YYYYMMDDHH24MISS') AS BZC_PORT_ETD_DT,
                       T1.VPS_PORT_CD AS STL_PAIR_PORT_CD,TO_CHAR(T1.VPS_ETA_DT,'YYYYMMDDHH24MISS') AS PAIR_PORT_ETA_DT,TO_CHAR(T1.VPS_ETD_DT,'YYYYMMDDHH24MISS') AS PAIR_PORT_ETD_DT,
--2009.10.19 ==> Pair Port는 F,L에 상관없이 가장 작은 일자 것을 가져온다. (By 박효숙 차장)
                       CASE WHEN T0.OPTP_COND = 'A'  THEN ROW_NUMBER() OVER (PARTITION BY T0.VSL_CD, T0.SKD_VOY_NO, T0.SKD_DIR_CD, T0.JO_STL_ITM_CD ORDER BY T1.VPS_ETA_DT)
                            WHEN T0.OPTP_COND = 'B'  THEN ROW_NUMBER() OVER (PARTITION BY T0.VSL_CD, T0.SKD_VOY_NO, T0.SKD_DIR_CD, T0.JO_STL_ITM_CD ORDER BY T1.VPS_ETB_DT)
                            WHEN T0.OPTP_COND = 'D'  THEN ROW_NUMBER() OVER (PARTITION BY T0.VSL_CD, T0.SKD_VOY_NO, T0.SKD_DIR_CD, T0.JO_STL_ITM_CD ORDER BY T1.VPS_ETD_DT)
                       END P_RN,
                       'N' AS PENDING_FLG
                FROM  ( SELECT A.* FROM BAS A WHERE PPORT1 IS NOT NULL) T0,
      		          VSK_VSL_PORT_SKD T1, -- PAIR PORTS
      		          VSK_VSL_PORT_SKD T2  -- UCB PORTS
                WHERE T0.RN         = 1
                AND   T0.VSL_CD     = T1.VSL_CD
                AND   T0.SKD_VOY_NO = T1.SKD_VOY_NO
                --AND   T1.SKD_DIR_CD = T0.SKD_DIR_CD -- ROUND는 LOADING일때 반대방향 조건이 필요없음
                --2009.10.21 하룻만에 진술번복하심 박차장님 --+
                AND   T1.SKD_DIR_CD = DECODE(T0.PORT_TYPE,'D', T0.SKD_DIR_CD, DECODE(T0.SKD_DIR_CD,'E','W','W','E','N','S','S','N')) -- Pair Port의 Direction은 E-W, N-S 쌍으로 찾는다.
                AND   NVL(T1.SKD_CNG_STS_CD,'N') <> 'S'
                AND   T1.CLPT_IND_SEQ = '1'
                AND   T1.TURN_PORT_IND_CD NOT IN ('D','V','F')
                AND   T1.VPS_PORT_CD IN (T0.PPORT1, T0.PPORT2, T0.PPORT3) -- PAIR PORT가 null인 경우
                AND   T0.VSL_CD         = T2.VSL_CD     (+)
                AND   T0.SKD_VOY_NO     = T2.SKD_VOY_NO (+) 
                AND   T0.SKD_DIR_CD     = T2.SKD_DIR_CD (+) 
                AND   T0.UC_BSS_PORT_CD = T2.VPS_PORT_CD(+)
                UNION ALL
                --PAIR PORT 가 NULL 인 경우
                SELECT
                       T0.JO_CRR_CD, T0.TRD_CD, T0.RLANE_CD, T0.JO_STL_ITM_CD, T0.STL_TGT_VVD_BSS_CD, T0.JO_STL_TGT_TP_CD, T0.MNTH_COND, T0.PORT_COND, T0.PORT_TYPE, T0.OPTP_COND,
      	      	       --BSS_PORT에 UCB PORT가 NULL이면 BASIC PORT중 첫번째 것을 취하고 NOT NULL 인 경우 해당 PORT것을 가져온다.
                       CASE WHEN T0.UC_BSS_PORT_CD IS NULL THEN T0.VPS_PORT_CD 
                            ELSE CASE WHEN T2.VSL_CD IS NULL THEN NULL 
                                      ELSE CASE WHEN NVL(T2.SKD_CNG_STS_CD,'N') = 'S' THEN NULL
                                                ELSE T2.VPS_PORT_CD
                                            END
                                 END
                       END AS UC_BSS_PORT_CD,
                       CASE WHEN T0.UC_BSS_PORT_CD IS NULL THEN TO_CHAR(T0.VPS_ETD_DT,'YYYYMMDDHH24MISS')
                            ELSE CASE WHEN T2.VSL_CD IS NULL THEN NULL 
                                      ELSE CASE WHEN NVL(T2.SKD_CNG_STS_CD,'N') = 'S' THEN NULL
                                                ELSE TO_CHAR(T2.VPS_ETD_DT,'YYYYMMDDHH24MISS')
                                            END
                                 END
                       END AS UC_BSS_PORT_ETD_DT,
                       T0.VSL_CD, T0.SKD_VOY_NO, T0.SKD_DIR_CD,
                       T0.VPS_PORT_CD AS STL_BZC_PORT_CD, TO_CHAR(T0.VPS_ETA_DT,'YYYYMMDDHH24MISS') AS BZC_PORT_ETA_DT, TO_CHAR(T0.VPS_ETD_DT,'YYYYMMDDHH24MISS') AS BZC_PORT_ETD_DT,
                       NULL AS STL_PAIR_PORT_CD,NULL AS PAIR_PORT_ETA_DT, NULL AS PAIR_PORT_ETD_DT,
                       1 AS P_RN,
                       'N' AS PENDING_FLG
                FROM  ( SELECT A.* FROM BAS A WHERE PPORT1 IS NULL) T0,
      		          VSK_VSL_PORT_SKD T2  -- UCB PORTS
                WHERE T0.RN             = 1
                AND   T0.VSL_CD         = T2.VSL_CD     (+) 
                AND   T0.SKD_VOY_NO     = T2.SKD_VOY_NO (+)
                AND   T0.SKD_DIR_CD     = T2.SKD_DIR_CD (+)
                AND   T0.UC_BSS_PORT_CD = T2.VPS_PORT_CD(+)
                 ) M,
                  MDM_VSL_SVC_LANE_DIR N,
                  AR_MST_REV_VVD A
            WHERE M.P_RN       = 1
			AND   SUBSTR(M.RLANE_CD,1,3) = N.VSL_SLAN_CD
			AND   N.DELT_FLG   = 'N'
            AND   M.VSL_CD     = A.VSL_CD
            AND   M.SKD_VOY_NO = A.SKD_VOY_NO
            AND   N.VSL_SLAN_DIR_CD = A.SKD_DIR_CD
            AND   M.RLANE_CD   = A.RLANE_CD
            AND   NVL(A.DELT_FLG,'N') = 'N'
            --전월에 pending된 항차도 추가함
            UNION ALL
            SELECT
                   M.VSL_CD, M.SKD_VOY_NO, M.SKD_DIR_CD, M.REV_DIR_CD, M.JO_STL_ITM_CD, M.ACCT_YRMON AS REV_YRMON, M.JO_MNU_NM, M.STL_TGT_VVD_BSS_CD,
                   M.STL_BZC_PORT_CD , TO_CHAR(M.BZC_PORT_ETA_DT,'YYYYMMDDHH24MISS') , TO_CHAR(M.BZC_PORT_ETD_DT,'YYYYMMDDHH24MISS'),
                   M.STL_PAIR_PORT_CD, TO_CHAR(M.PAIR_PORT_ETA_DT,'YYYYMMDDHH24MISS'), TO_CHAR(M.PAIR_PORT_ETD_DT,'YYYYMMDDHH24MISS'),
                   M.UC_BSS_PORT_CD, TO_CHAR(M.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS'), M.TRD_CD, M.JO_CRR_CD, M.RLANE_CD,
                   M.AGMT_MON_COND_CD, M.AGMT_PORT_COND_CD, M.AGMT_PORT_TP_COND_CD, M.AGMT_OP_TP_COND_CD, 1 AS RN, M.STL_RMK, 'Y' AS PENDING_FLG
            FROM   JOO_STL_VVD M
            WHERE  M.ACCT_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[acct_yrmon],'YYYYMM'),-1),'YYYYMM')
            AND    M.JO_CRR_CD  = @[jo_crr_cd]
            AND    M.RLANE_CD   = @[rlane_cd]
            AND    M.RE_DIVR_CD = @[re_divr_cd]
            AND    M.JO_STL_CFM_CD = 'P' --pending
            ) N
       ) O
#if (${proc_jb_flg} == 'Y')
      ,(
       SELECT VSL_CD
       FROM   MDM_VSL_CNTR
       WHERE  CRR_CD = DECODE(@[re_divr_cd],'R','SML',@[jo_crr_cd])
       AND    DELT_FLG = 'N'
       ) V   
WHERE  O.VSL_CD = V.VSL_CD
#else
WHERE  1 = 1
#end
AND    O.RNK = 1
AND    NOT EXISTS (
         SELECT 1
         FROM   JOO_STL_VVD X
         WHERE  X.ACCT_YRMON = @[acct_yrmon]
         AND    X.JO_CRR_CD  = @[jo_crr_cd]
         AND    X.RE_DIVR_CD = @[re_divr_cd]
         AND    X.TRD_CD     = @[trd_cd]
         AND    X.RLANE_CD   = @[rlane_cd]
         AND    X.VSL_CD     = O.VSL_CD
         AND    X.SKD_VOY_NO = O.SKD_VOY_NO
         AND    X.SKD_DIR_CD = O.SKD_DIR_CD
         AND    X.REV_DIR_CD = O.REV_DIR_CD
         AND    X.JO_STL_ITM_CD = O.JO_STL_ITM_CD
         AND    X.JO_MNU_NM     = O.JO_MNU_NM
       )
UNION  ALL
SELECT
       'R' AS IBFLAG,
       A.VSL_CD,
       A.SKD_VOY_NO,
       A.SKD_DIR_CD,
       A.REV_DIR_CD,
       A.JO_STL_ITM_CD,
       CASE WHEN A.JO_MNU_NM = A.JO_STL_ITM_CD THEN '0'
            ELSE 
                CASE WHEN A.JO_STL_ITM_CD = 'OUS' THEN
                     CASE WHEN A.JO_MNU_NM IN ('RDR','TDR') THEN '0'
                          WHEN A.JO_MNU_NM = 'M/S' THEN '1'
                     END
                     ELSE '1'                      
                END
       END AS JO_MNL_CRE_FLG,
       A.STL_BZC_PORT_CD,
       A.STL_TGT_VVD_BSS_CD,
       A.JO_STL_CFM_CD,
       TO_CHAR(A.BZC_PORT_ETA_DT,'YYYYMMDDHH24MISS') AS BZC_PORT_ETA_DT,
       TO_CHAR(A.BZC_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS BZC_PORT_ETD_DT,
       A.STL_PAIR_PORT_CD,
       TO_CHAR(A.PAIR_PORT_ETA_DT,'YYYYMMDDHH24MISS') AS PAIR_PORT_ETA_DT,
       TO_CHAR(A.PAIR_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS PAIR_PORT_ETD_DT,
       A.UC_BSS_PORT_CD,
       TO_CHAR(A.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT,
       A.STL_RMK,
       A.ACCT_YRMON,
       A.STL_VVD_SEQ,
       A.TRD_CD,
       A.JO_CRR_CD,
       A.RLANE_CD,
       A.JO_MNU_NM,
       NVL((SELECT Y.INTG_CD_VAL_DP_DESC AS JO_MNU_NM
            FROM   JOO_STL_BSS_PORT X,
                   COM_INTG_CD_DTL  Y
            WHERE  X.JO_STL_TGT_TP_CD = Y.INTG_CD_VAL_CTNT
            AND    Y.INTG_CD_ID = 'CD01867'
            AND    X.JO_CRR_CD  = A.JO_CRR_CD
            AND    X.RLANE_CD   = A.RLANE_CD
            AND    X.SKD_DIR_CD = A.SKD_DIR_CD
            AND    X.JO_STL_ITM_CD = A.JO_STL_ITM_CD
       ),A.JO_MNU_NM) AS JO_MNU_NM1,
       DECODE(A.PROC_JB_FLG,'Y','Y','') AS PROC_JB_FLG,
       A.RE_DIVR_CD,
       A.AGMT_MON_COND_CD,
       A.AGMT_PORT_COND_CD,
       A.AGMT_PORT_TP_COND_CD,
       A.AGMT_OP_TP_COND_CD,
       '' AS REV_YRMON,
       --2010.03.29 정상CSR 끊긴 것과 REVERSE 된 것이 1:1이면 JO_STL_CFM_CD를 수정가능하게 한다.
       DECODE(A.PROC_JB_FLG,'Y',DECODE(NVL(B.CNT,0),0,'Y','N'),'N') AS RVS_FLG,
       'N' PENDING_FLG
FROM   JOO_STL_VVD A,
       (
       --2010.03.29 REVERSE 된 SETTLEMENT를 우선 삭제한 다음에 PENDING을 수정하기로 함 (박효숙차장)
       SELECT X.ACCT_YRMON, X.STL_VVD_SEQ, SUM(DECODE(NVL(X.CMB_CFM_FLG,'N'),'Y',Y.CNT,1)) AS CNT
       FROM   JOO_SETTLEMENT X,
              (
              SELECT A.ACCT_YRMON, A.STL_VVD_SEQ, A.STL_SEQ, SUM(DECODE(C.RVS_CSR_FLG,'Y',-1,1)) CNT
              FROM   JOO_STL_CMB_DTL A,
                     JOO_STL_CMB     B,
                     JOO_CSR         C
              WHERE  A.ACCT_YRMON = B.ACCT_YRMON
              AND    A.JO_CRR_CD  = B.JO_CRR_CD
              AND    A.STL_CMB_SEQ= B.STL_CMB_SEQ
              AND    A.RE_DIVR_CD = B.RE_DIVR_CD
              AND    B.SLP_TP_CD  = C.SLP_TP_CD  (+)
              AND    B.SLP_FUNC_CD= C.SLP_FUNC_CD(+)
              AND    B.SLP_OFC_CD = C.SLP_OFC_CD (+)
              AND    B.SLP_ISS_DT = C.SLP_ISS_DT (+)
              AND    B.SLP_SER_NO = C.SLP_SER_NO (+)
              GROUP  BY
                     A.ACCT_YRMON, A.STL_VVD_SEQ, A.STL_SEQ
              ) Y
       WHERE  X.ACCT_YRMON  = Y.ACCT_YRMON (+)
       AND    X.STL_VVD_SEQ = Y.STL_VVD_SEQ(+)
       AND    X.STL_SEQ     = Y.STL_SEQ    (+)
       GROUP  BY X.ACCT_YRMON, X.STL_VVD_SEQ
       ) B        
WHERE  A.ACCT_YRMON  = B.ACCT_YRMON (+)
AND    A.STL_VVD_SEQ = B.STL_VVD_SEQ(+)
AND    A.ACCT_YRMON = @[acct_yrmon]
AND    A.JO_CRR_CD  = @[jo_crr_cd]
AND    A.RE_DIVR_CD = @[re_divr_cd]
AND    A.TRD_CD     = @[trd_cd]
AND    A.RLANE_CD   = @[rlane_cd]
ORDER  BY 1, SKD_DIR_CD, BZC_PORT_ETA_DT, VSL_CD, SKD_VOY_NO, JO_STL_ITM_CD, JO_MNU_NM			]]></sql>
			<params>
				<param name="acct_yrmon" type="12" value="200909" out="N"/>
				<param name="jo_crr_cd" type="12" value="COS" out="N"/>
				<param name="rlane_cd" type="12" value="AEXAE" out="N"/>
				<param name="re_divr_cd" type="12" value="R" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
