<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOStlStatusVORSQL">
			<desc><![CDATA[Target Voyage vs Unsettled Status
2010.10.25 이준범(수정자:이영두 수석) CHM-201006632-01
BSA에 값이 있는 경우 Taget VVD 에 없으면 COA->BST Amount 값이 0 으로 나오게 처리

2010.11.4 이상민 (수정자:이영두 수석) [CHM-201006882] JO - Target voyage vs Unsettled status 보완
                Target VVD 가 Renue 와 Expense 가 동시에 있는 경우 2배로 금액이 발생함
                JOO Combined Amount 와 JOO Slip Amount에 두배로 표시되는 부분 수정

2010.11.17 박희동 조회조건 추가, rmk 추가
2011.01.11 이준범 [CHM-201108229-01] JO > TARGET VOYAGE VS UNSETTLED STATUS 관련 ERROR 수정요청
- BSA가 REV/EXP 다 있는 항차의 경우, 실제 DIFF가 아닌데도 DIFF 로 표시되는 오류 수정
]]></desc>
			<sql><![CDATA[
SELECT A.TRD_CD, A.RLANE_CD, A.JO_CRR_CD, A.VVD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.REV_YRMON, A.ACCT_YRMON, A.JO_STL_ITM_CD, R.JO_UNSTL_STS_RMK, '' AS USR_ID,
       A.R_COA_BSA_AMT, A.R_JOO_CMB_AMT, A.R_JOO_SLP_AMT, A.R_JOO_CMB_BGCOLOR_YN, A.R_JOO_SLP_BGCOLOR_YN, 
       A.E_COA_BSA_AMT, A.E_JOO_CMB_AMT, A.E_JOO_SLP_AMT, A.E_JOO_CMB_BGCOLOR_YN, A.E_JOO_SLP_BGCOLOR_YN
FROM   (
       SELECT
               A.TRD_CD
              ,A.RLANE_CD
              ,A.JO_CRR_CD
              ,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD AS VVD
              ,A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.REV_DIR_CD
              ,B.REV_YRMON
              ,A.ACCT_YRMON
              ,A.JO_STL_ITM_CD
              ,NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', E.R_COA_BSA_AMT, 0)),0) AS R_COA_BSA_AMT
              ,NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', C.R_JOO_CMB_AMT, 0)),0) AS R_JOO_CMB_AMT
              ,NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', D.R_JOO_SLP_AMT, 0)),0)  AS R_JOO_SLP_AMT
              -- COA데이터가 없는 경우는 Combined와 Slip을 비교해서 같으면 검정색 다르면 빨간색
              ,CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', E.R_COA_BSA_AMT, 0)),0) = 0
                    THEN
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', D.R_JOO_SLP_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', C.R_JOO_CMB_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
                    ELSE
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', E.R_COA_BSA_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', C.R_JOO_CMB_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
               END r_joo_cmb_bgcolor_yn
              ,CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', C.R_JOO_CMB_AMT, 0)),0) = 0
                    THEN
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', D.R_JOO_SLP_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', C.R_JOO_CMB_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
                    ELSE
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', C.R_JOO_CMB_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'R', D.R_JOO_SLP_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
               END r_joo_slp_bgcolor_yn
              ,NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', E.E_COA_BSA_AMT, 0)),0) AS E_COA_BSA_AMT
              ,NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', C.E_JOO_CMB_AMT, 0)),0) AS E_JOO_CMB_AMT
              ,NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', D.E_JOO_SLP_AMT, 0)),0) AS E_JOO_SLP_AMT
              ,CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', E.E_COA_BSA_AMT, 0)),0) = 0
                    THEN
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', D.E_JOO_SLP_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', C.E_JOO_CMB_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
                    ELSE
                         CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', E.E_COA_BSA_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', C.E_JOO_CMB_AMT, 0)),0)
                              THEN 'Y'
                              ELSE 'N'
                         END
               END e_joo_cmb_bgcolor_yn
              ,CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', E.E_COA_BSA_AMT, 0)),0) = 0 
                    THEN
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', D.E_JOO_SLP_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', C.E_JOO_CMB_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
                    ELSE
                        CASE WHEN NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', E.E_COA_BSA_AMT, 0)),0) <> NVL(SUM(DECODE(A.RE_DIVR_CD, 'E', D.E_JOO_SLP_AMT, 0)),0)
                             THEN 'Y'
                             ELSE 'N'
                        END
               END e_joo_slp_bgcolor_yn
       FROM   (SELECT 
                      DISTINCT
                      A.ACCT_YRMON
                     ,A.JO_CRR_CD
                     ,A.TRD_CD
                     ,A.RLANE_CD
                     ,A.JO_STL_ITM_CD
                     ,A.VSL_CD    
                     ,A.SKD_VOY_NO
                     ,A.SKD_DIR_CD
                     ,A.REV_DIR_CD
                     ,A.RE_DIVR_CD
               FROM   JOO_STL_VVD A
               WHERE  A.ACCT_YRMON BETWEEN REPLACE(@[acct_yrmon_fr],'-','') AND REPLACE(@[acct_yrmon_to],'-','')
               AND    A.JO_STL_CFM_CD = 'Y'
#if (${trd_cd} != '')
               AND    A.TRD_CD        = @[trd_cd]
#end        
#if (${rlane_cd} != '')
               AND    A.RLANE_CD      = @[rlane_cd]
#end        
#if (${jo_crr_cd} != '')
               AND    A.JO_CRR_CD     = @[jo_crr_cd]
#end        
#if (${jo_stl_itm_cd} != '')
               AND    A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
#end        
               ) A
              ,AR_MST_REV_VVD  B
              ,(
               SELECT
                      C.ACCT_YRMON
                     ,C.JO_CRR_CD
                     ,C.TRD_CD
                     ,C.RLANE_CD
                     ,C.JO_STL_ITM_CD
                     ,C.VSL_CD    
                     ,C.SKD_VOY_NO
                     ,C.SKD_DIR_CD
                     ,C.REV_DIR_CD
                     ,SUM(DECODE(C.RE_DIVR_CD,'R',C.STL_LOCL_AMT,0)) AS R_JOO_CMB_AMT
                     ,SUM(DECODE(C.RE_DIVR_CD,'E',C.STL_LOCL_AMT,0)) AS E_JOO_CMB_AMT
               FROM  JOO_SETTLEMENT  C
                    ,JOO_STL_CMB_DTL D
                    ,JOO_STL_CMB     E
               WHERE  C.ACCT_YRMON  = D.ACCT_YRMON
               AND    C.STL_VVD_SEQ = D.STL_VVD_SEQ
               AND    C.STL_SEQ     = D.STL_SEQ
               AND    D.ACCT_YRMON  = E.ACCT_YRMON
               AND    D.JO_CRR_CD   = E.JO_CRR_CD
               AND    D.STL_CMB_SEQ = E.STL_CMB_SEQ
               AND    D.RE_DIVR_CD  = E.RE_DIVR_CD
               AND    C.CMB_CFM_FLG = 'Y'
               AND    E.RVS_CMB_FLG = 'N'
               AND    E.RJCT_CMB_FLG = 'N'
               AND    C.ACCT_YRMON  BETWEEN REPLACE(@[acct_yrmon_fr],'-','') AND REPLACE(@[acct_yrmon_to],'-','')
#if (${trd_cd} != '')
               AND    C.TRD_CD      = @[trd_cd]
#end        
#if (${rlane_cd} != '')
               AND    C.RLANE_CD    = @[rlane_cd]
#end        
#if (${jo_crr_cd} != '')
               AND    C.JO_CRR_CD   = @[jo_crr_cd]
#end        
#if (${jo_stl_itm_cd} != '')
               AND    C.JO_STL_ITM_CD = @[jo_stl_itm_cd]
#end        
               GROUP  BY
                      C.ACCT_YRMON
                     ,C.JO_CRR_CD
                     ,C.TRD_CD
                     ,C.RLANE_CD
                     ,C.JO_STL_ITM_CD
                     ,C.VSL_CD    
                     ,C.SKD_VOY_NO
                     ,C.SKD_DIR_CD
                     ,C.REV_DIR_CD
              ) C
              ,(
               SELECT
                      D.ACCT_YRMON
                     ,D.JO_CRR_CD
                     ,D.TRD_CD
                     ,D.RLANE_CD
                     ,D.JO_STL_ITM_CD
                     ,D.VSL_CD    
                     ,D.SKD_VOY_NO
                     ,D.SKD_DIR_CD
                     ,D.REV_DIR_CD
                     ,SUM(DECODE(A.RE_DIVR_CD,'R',C.CSR_LOCL_AMT,0)) AS R_JOO_SLP_AMT
                     ,SUM(DECODE(A.RE_DIVR_CD,'E',C.CSR_LOCL_AMT,0)) AS E_JOO_SLP_AMT
               FROM   JOO_SETTLEMENT  D
                     ,JOO_STL_CMB_DTL A
                     ,JOO_STL_CMB     B
                     ,JOO_SLIP        C               
               WHERE  A.ACCT_YRMON  = B.ACCT_YRMON
               AND    A.JO_CRR_CD   = B.JO_CRR_CD
               AND    A.STL_CMB_SEQ = B.STL_CMB_SEQ
               AND    A.RE_DIVR_CD  = B.RE_DIVR_CD
               AND    A.ACCT_YRMON  = D.ACCT_YRMON
               AND    A.STL_VVD_SEQ = D.STL_VVD_SEQ
               AND    A.STL_SEQ     = D.STL_SEQ
               AND    B.SLP_TP_CD   = C.SLP_TP_CD
               AND    B.SLP_FUNC_CD = C.SLP_FUNC_CD
               AND    B.SLP_OFC_CD  = C.SLP_OFC_CD
               AND    B.SLP_ISS_DT  = C.SLP_ISS_DT
               AND    B.SLP_SER_NO  = C.SLP_SER_NO
               AND    D.ACCT_YRMON  = C.ACCT_YRMON
               AND    D.STL_VVD_SEQ = C.STL_VVD_SEQ
               AND    D.STL_SEQ     = C.STL_SEQ
               AND    C.DR_CR_CD    = 'DR'
               AND    B.RVS_CMB_FLG = 'N'
               AND    A.ACCT_YRMON  BETWEEN REPLACE(@[acct_yrmon_fr],'-','') AND REPLACE(@[acct_yrmon_to],'-','')
#if (${trd_cd} != '')
               AND    D.TRD_CD      = @[trd_cd]
#end        
#if (${rlane_cd} != '')
               AND    D.RLANE_CD    = @[rlane_cd]
#end        
#if (${jo_crr_cd} != '')
               AND    D.JO_CRR_CD   = @[jo_crr_cd]
#end        
#if (${jo_stl_itm_cd} != '')
               AND    D.JO_STL_ITM_CD = @[jo_stl_itm_cd]
#end        
               GROUP  BY
                      D.ACCT_YRMON
                     ,D.JO_CRR_CD
                     ,D.TRD_CD
                     ,D.RLANE_CD
                     ,D.JO_STL_ITM_CD
                     ,D.VSL_CD    
                     ,D.SKD_VOY_NO
                     ,D.SKD_DIR_CD
                     ,D.REV_DIR_CD
              ) D
             ,(
         SELECT
                 A.COST_YRMON AS ACCT_YRMON
                ,C.CRR_CD  AS JO_CRR_CD
                ,A.TRD_CD
                ,A.RLANE_CD
                ,A.VSL_CD
                ,A.SKD_VOY_NO
                ,A.DIR_CD AS SKD_DIR_CD
                ,'S/H' AS JO_STL_ITM_CD
                ,SUM(CASE WHEN C.BSA_OP_JB_CD IN ('001','002','004') THEN C.CRR_PERF_AMT ELSE 0 END) AS R_COA_BSA_AMT
                ,SUM(CASE WHEN C.BSA_OP_JB_CD IN ('000','003','005') THEN C.CRR_PERF_AMT ELSE 0 END) AS E_COA_BSA_AMT
           FROM MAS_MON_VVD      A,
                BSA_VVD_CRR_PERF C
          WHERE A.VSL_CD      = C.VSL_CD
            AND A.SKD_VOY_NO  = C.SKD_VOY_NO
            AND A.DIR_CD      = C.SKD_DIR_CD
            AND A.TRD_CD      = C.TRD_CD
            AND A.RLANE_CD    = C.RLANE_CD
                  --AND B.REV_PORT_ETD_DT BETWEEN ADD_MONTHS(TO_DATE(REPLACE(acct_yrmon_fr,'-',''),'YYYYMM'),-3) AND LAST_DAY  (TO_DATE(REPLACE(acct_yrmon_to,'-',''),'YYYYMM'))+0.99999
            AND C.BSA_OP_JB_CD IN ('000','001','002','003','004','005')
#if (${trd_cd} != '')
            AND A.TRD_CD      = @[trd_cd]
#end        
#if (${rlane_cd} != '')
            AND A.RLANE_CD    = @[rlane_cd]
#end        
#if (${jo_crr_cd} != '')
            AND C.CRR_CD      = @[jo_crr_cd]
#end        
#if (${jo_stl_itm_cd} != '')
            AND 'S/H'         = @[jo_stl_itm_cd]
#end        
            AND A.DELT_FLG    = 'N'
          GROUP BY
                 A.COST_YRMON
                ,C.CRR_CD
                ,A.TRD_CD
                ,A.RLANE_CD
                ,A.VSL_CD
                ,A.SKD_VOY_NO
                ,A.DIR_CD
         HAVING SUM(C.CRR_BSA_CAPA) <> 0
         AND    SUM(C.CRR_PERF_AMT) <> 0
              ) E,
              (
               SELECT JO_CRR_CD, RLANE_CD 
                 FROM JOO_CRR_AUTH 
                WHERE DELT_FLG = 'N'
#if (${ofc_cd} != '')
                  AND AUTH_OFC_CD = @[ofc_cd]
#if (${ofc_cd} == 'SELADG')
                  AND JO_CRR_AUTH_CD = 'W'
#end
#end        
                GROUP BY JO_CRR_CD, RLANE_CD
              ) F
       WHERE  A.VSL_CD        = B.VSL_CD
       AND    A.SKD_VOY_NO    = B.SKD_VOY_NO
       AND    A.SKD_DIR_CD    = B.SKD_DIR_CD
       AND    A.RLANE_CD      = B.RLANE_CD
       AND    A.JO_CRR_CD     = F.JO_CRR_CD
       AND    A.RLANE_CD      = F.RLANE_CD    
       AND    A.ACCT_YRMON    = C.ACCT_YRMON   (+)
       AND    A.JO_CRR_CD     = C.JO_CRR_CD    (+)
       AND    A.TRD_CD        = C.TRD_CD       (+)
       AND    A.RLANE_CD      = C.RLANE_CD     (+)
       AND    A.JO_STL_ITM_CD = C.JO_STL_ITM_CD(+)
       AND    A.VSL_CD        = C.VSL_CD       (+)
       AND    A.SKD_VOY_NO    = C.SKD_VOY_NO   (+)
       AND    A.SKD_DIR_CD    = C.SKD_DIR_CD   (+)
       AND    A.REV_DIR_CD    = C.REV_DIR_CD   (+)
       AND    A.ACCT_YRMON    = D.ACCT_YRMON   (+)
       AND    A.JO_CRR_CD     = D.JO_CRR_CD    (+)
       AND    A.TRD_CD        = D.TRD_CD       (+)
       AND    A.RLANE_CD      = D.RLANE_CD     (+)
       AND    A.JO_STL_ITM_CD = D.JO_STL_ITM_CD(+)
       AND    A.VSL_CD        = D.VSL_CD       (+)
       AND    A.SKD_VOY_NO    = D.SKD_VOY_NO   (+)
       AND    A.SKD_DIR_CD    = D.SKD_DIR_CD   (+)
       AND    A.REV_DIR_CD    = D.REV_DIR_CD   (+)
       --AND    A.ACCT_YRMON    = E.ACCT_YRMON   (+)
       AND    A.JO_CRR_CD     = E.JO_CRR_CD    (+)
       AND    A.TRD_CD        = E.TRD_CD       (+)
       AND    A.RLANE_CD      = E.RLANE_CD     (+)
       AND    A.VSL_CD        = E.VSL_CD       (+)
       AND    A.SKD_VOY_NO    = E.SKD_VOY_NO   (+)
       AND    A.SKD_DIR_CD    = E.SKD_DIR_CD   (+)
       AND    A.RLANE_CD      = E.RLANE_CD     (+)
       AND    A.JO_STL_ITM_CD = E.JO_STL_ITM_CD(+)
       GROUP  BY
               A.TRD_CD
              ,A.RLANE_CD
              ,A.JO_CRR_CD
              ,A.VSL_CD
              ,A.SKD_VOY_NO
              ,A.SKD_DIR_CD
              ,A.REV_DIR_CD
              ,B.REV_YRMON
              ,A.ACCT_YRMON
              ,A.JO_STL_ITM_CD
       ) A,
       JOO_TGT_UNSTL_STS_RMK R
WHERE  1 = 1
AND    A.ACCT_YRMON    = R.ACCT_YRMON   (+)
AND    A.JO_CRR_CD     = R.JO_CRR_CD    (+)
AND    A.TRD_CD        = R.TRD_CD       (+)
AND    A.RLANE_CD      = R.RLANE_CD     (+)
AND    A.VSL_CD        = R.VSL_CD       (+)
AND    A.SKD_VOY_NO    = R.SKD_VOY_NO   (+)
AND    A.SKD_DIR_CD    = R.SKD_DIR_CD   (+)
AND    A.REV_DIR_CD    = R.REV_DIR_CD   (+)
AND    A.JO_STL_ITM_CD = R.JO_STL_ITM_CD(+)
#if (${diff_only_yn} == 'Y')
AND    (A.R_JOO_CMB_BGCOLOR_YN = 'Y' OR A.R_JOO_SLP_BGCOLOR_YN = 'Y' OR A.E_JOO_CMB_BGCOLOR_YN = 'Y' OR A.E_JOO_SLP_BGCOLOR_YN = 'Y')
#end
#if (${rmk_yn} == 'Y')
AND    R.JO_UNSTL_STS_RMK IS NOT NULL
#end
ORDER  BY
        A.TRD_CD
       ,A.RLANE_CD
       ,A.JO_CRR_CD
       ,A.VSL_CD
       ,A.SKD_VOY_NO
       ,A.SKD_DIR_CD
       ,A.REV_DIR_CD
       ,A.REV_YRMON
       ,A.ACCT_YRMON
       ,A.JO_STL_ITM_CD			]]></sql>
			<params>
				<param name="acct_yrmon_fr" type="12" value="200908" out="N"/>
				<param name="acct_yrmon_to" type="12" value="200910" out="N"/>
				<param name="trd_cd" type="12" value="AES" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="jo_crr_cd" type="12" value="" out="N"/>
				<param name="jo_stl_itm_cd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
