<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOmcsStatusRSQL">
			<desc><![CDATA[선사를 조회조건으로 joo_settlement를 조회한다.
=======================================================================================
Ticket ID : CHM-201007238-01
모  듈 : JOO
제  목 : JOO Summary of Monthly Clearance Status by Carrier 보완 요청 -Effective Date 반영
설계자 : 이영두 / 개발자 : 이상민
기  간 : 2010.11.29 ~ 2010.11.30
작업내용:
1. jsp 조회조건 effective date radio 버튼추가
2. Query 파일 수정시 조건에 view_flag에 따라 분기한다
=======================================================================================
2011.03.28 신자영 [CHM-201109619-01]ALPS / JOO / Summary of Monthly Clearance Status by Carrier - Revenue Month 반영]]></desc>
			<sql><![CDATA[
SELECT  ACCT_YRMON, JO_CRR_CD, TRD_CD, RLANE_CD, LOCL_CURR_CD, STL_CMB_SEQ, JO_REV, JO_EXP, JO_BALANCE, BENEFIT_LINE, FROM_DT, TO_DT, VVD, JO_SMRY_RMK, EFF_DT
FROM    (
SELECT  
        CASE WHEN GUBUN = '00110' THEN 
                'SubSum:' || JO_CRR_CD
             WHEN GUBUN = '11110' THEN 
                 'TOTAL'
             ELSE ACCT_YRMON
        END AS ACCT_YRMON
        , ACCT_YRMON AS ACCT_YRMON2
        , CASE WHEN GUBUN = '00110' THEN 
                'Sub-Total'
             ELSE JO_CRR_CD
        END AS JO_CRR_CD
        , JO_CRR_CD AS JO_CRR_CD2
        , TRD_CD, RLANE_CD, LOCL_CURR_CD, STL_CMB_SEQ, JO_REV, JO_EXP, JO_BALANCE
        , DECODE(GUBUN, '00000', BENEFIT_LINE, NULL) AS BENEFIT_LINE
        , FROM_DT, TO_DT, VVD, JO_SMRY_RMK
        , DECODE(GUBUN, '00000', EFF_DT, NULL) AS EFF_DT, GUBUN
FROM    (
SELECT  ACCT_YRMON, JO_CRR_CD, TRD_CD, RLANE_CD, LOCL_CURR_CD, MAX(STL_CMB_SEQ) AS STL_CMB_SEQ, SUM(JO_REV) AS JO_REV
        , SUM(JO_EXP) AS JO_EXP, SUM(JO_BALANCE) AS JO_BALANCE, MAX(BENEFIT_LINE) AS BENEFIT_LINE, MAX(FROM_DT) AS FROM_DT, MAX(TO_DT) AS TO_DT
       , MAX(VVD) AS VVD, MAX(JO_SMRY_RMK) AS JO_SMRY_RMK, MAX(EFF_DT) AS EFF_DT
       , GROUPING(ACCT_YRMON)|| GROUPING(JO_CRR_CD) || GROUPING(TRD_CD) || GROUPING(RLANE_CD) || GROUPING(LOCL_CURR_CD) AS GUBUN
FROM
(
SELECT   Z.TRD_CD 
,        Z.RLANE_CD
,        Z.ACCT_YRMON
,        Z.STL_CMB_SEQ
,        Z.JO_CRR_CD
,        NVL(Z.JO_REV,0) JO_REV 
,        NVL(Z.JO_EXP,0) JO_EXP
,        NVL(Z.JO_REV,0) - NVL(Z.JO_EXP,0) JO_BALANCE
,        DECODE(SIGN(NVL(Z.JO_REV,0) - NVL(Z.JO_EXP,0)), -1, Z.JO_CRR_CD, 1, 'SML', 0, 'SML') BENEFIT_LINE
,		'' FROM_DT
,	    '' TO_DT
,		DECODE(@[vvd_chk], 'on', Z.VVD, '') AS VVD
,		JO_SMRY_RMK
,		TO_CHAR(RQST_DT,'YYYY-MM-DD') EFF_DT
, 		LOCL_CURR_CD
FROM (
         SELECT A.TRD_CD, A.RLANE_CD, A.ACCT_YRMON, V.REV_YRMON
#if (${combined_chk} != '') 
,                   LPAD(B.STL_CMB_SEQ,3,'0') STL_CMB_SEQ
#else
,                   ''STL_CMB_SEQ
#end
,                   A.JO_CRR_CD,
#if (${vvd_chk} == 'on') 
       		    	A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD  VVD
#else 
                	'' VVD
#end
,					K.JO_SMRY_RMK
, 					MAX(R.RQST_DT)  RQST_DT

				  #if (${usdamount_chk} != '')
				  ,'USD' AS LOCL_CURR_CD
                  ,SUM(DECODE(A.RE_DIVR_CD, 'R', A.STL_LOCL_AMT / DECODE (A.LOCL_CURR_CD, 'USD', 1, (
                                SELECT NVL(EX1.USD_LOCL_XCH_RT, 1)
                                FROM GL_MON_XCH_RT EX1
                                WHERE EX1.CURR_CD = A.LOCL_CURR_CD
                                  AND EX1.ACCT_XCH_RT_YRMON = TO_CHAR(R.EFF_DT, 'YYYYMM')
                                  AND EX1.ACCT_XCH_RT_LVL = '1' ) ) ) ) AS JO_REV
                  ,SUM(DECODE(A.RE_DIVR_CD, 'E', A.STL_LOCL_AMT) / DECODE (A.LOCL_CURR_CD, 'USD', 1, (
                            SELECT NVL(EX1.USD_LOCL_XCH_RT, 1)
                            FROM GL_MON_XCH_RT EX1
                            WHERE EX1.CURR_CD = A.LOCL_CURR_CD
                              AND EX1.ACCT_XCH_RT_YRMON = TO_CHAR(R.EFF_DT, 'YYYYMM')
                              AND EX1.ACCT_XCH_RT_LVL = '1' ) ) ) AS JO_EXP
                 #else
				  ,A.LOCL_CURR_CD
                  , SUM(DECODE(A.RE_DIVR_CD,'R',A.STL_LOCL_AMT)) JO_REV
                  , SUM(DECODE(A.RE_DIVR_CD,'E',A.STL_LOCL_AMT)) JO_EXP             
                 #end
          FROM JOO_SETTLEMENT A, JOO_STL_CMB_DTL B,  JOO_STL_CMB D, JOO_SMRY_CRR_RMK K, JOO_CSR R, AR_MST_REV_VVD V
         WHERE 
--2010.11.29 이상민 Effective Date(확정일) 기준 검색추가
#if (${view_flag} == 'effective_date')
				TO_CHAR(R.EFF_DT,'yyyymm') BETWEEN REPLACE(@[from_dt], '-', '') AND REPLACE(@[to_dt], '-', '')
#elseif (${view_flag} == 'account_month')
				A.ACCT_YRMON BETWEEN REPLACE(@[from_dt], '-', '') AND REPLACE(@[to_dt], '-', '')
#else
                V.REV_YRMON BETWEEN REPLACE(@[from_dt], '-', '') AND REPLACE(@[to_dt], '-', '')
#end
           AND A.ACCT_YRMON = B.ACCT_YRMON
           AND A.STL_VVD_SEQ = B.STL_VVD_SEQ
           AND A.STL_SEQ = B.STL_SEQ
           AND A.JO_CRR_CD = B.JO_CRR_CD
           AND A.RE_DIVR_CD = B.RE_DIVR_CD
		   AND V.VSL_CD = A.VSL_CD
		   AND V.SKD_VOY_NO =  A.SKD_VOY_NO
		   AND V.SKD_DIR_CD =  A.SKD_DIR_CD
		   AND V.RLANE_DIR_CD =  A.REV_DIR_CD
           AND A.STL_LOCL_AMT<>0
--2010.03.19 REVERSE, REJECT건 제외
           AND D.RVS_CMB_FLG  = 'N'
           AND D.RJCT_CMB_FLG = 'N'
--2010.03.08 COMBINED된 DATA가 아닌 CSR 완료된 것으로 (BY 박효숙 차장)
           AND B.ACCT_YRMON  = D.ACCT_YRMON
           AND B.JO_CRR_CD   = D.JO_CRR_CD
           AND B.STL_CMB_SEQ = D.STL_CMB_SEQ
           AND B.RE_DIVR_CD  = D.RE_DIVR_CD
           --AND D.SLP_SER_NO IS NOT NULL
           AND A.CMB_CFM_FLG = 'Y'
#if (${trd_cd} != '') 
           AND A.TRD_CD LIKE @[trd_cd]||'%'
#end
#if (${rlane_cd} != '') 
           AND A.RLANE_CD LIKE @[rlane_cd]||'%'
#end
#if (${jo_crr_cd} != '') 
           AND A.JO_CRR_CD LIKE @[jo_crr_cd]||'%'
#end
#if (${re_divr_cd} != '' && ${re_divr_cd} != 'ALL') 
           AND A.RE_DIVR_CD = @[re_divr_cd]
#end
#if (${jo_stl_itm_cd} != '' && ${jo_stl_itm_cd} != 'ALL') 
           AND A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
#end
#if (${vvd} != '') 
           AND A.VSL_CD || A.SKD_VOY_NO || A.SKD_DIR_CD LIKE @[vvd] || '%'
#end
           AND A.ACCT_YRMON = K.ACCT_YRMON (+)
           AND A.TRD_CD = K.TRD_CD (+)
           AND A.RLANE_CD  = K.RLANE_CD (+)
           AND  A.JO_CRR_CD = K.JO_CRR_CD (+)
           AND  D.SLP_TP_CD = R.SLP_TP_CD
           AND  D.SLP_FUNC_CD = R.SLP_FUNC_CD
           AND  D.SLP_OFC_CD = R.SLP_OFC_CD
           AND D.SLP_ISS_DT = R.SLP_ISS_DT
           AND D.SLP_SER_NO = R.SLP_SER_NO
             #if (${ofc_cd} != '')
               AND R.SLP_OFC_CD = @[ofc_cd]
             #end
      GROUP BY A.TRD_CD, A.RLANE_CD, A.ACCT_YRMON, A.JO_CRR_CD, K.JO_SMRY_RMK, A.LOCL_CURR_CD
#if (${vvd_chk} != '') 
             , A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD||A.REV_DIR_CD
#end
#if (${combined_chk} != '') 
             , B.STL_CMB_SEQ
#end
)Z
)
WHERE   1=1
GROUP BY CUBE (ACCT_YRMON, JO_CRR_CD,LOCL_CURR_CD,  TRD_CD, RLANE_CD)
)
WHERE   1=1
AND     GUBUN IN ('00000', '00110', '11110', '11111')
ORDER BY ACCT_YRMON2, JO_CRR_CD2, NVL2(TRD_CD, 0, 1), LOCL_CURR_CD
)			]]></sql>
			<params>
				<param name="vvd_chk" type="12" value="" out="N"/>
				<param name="from_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="trd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="jo_crr_cd" type="12" value="" out="N"/>
				<param name="re_divr_cd" type="12" value="" out="N"/>
				<param name="jo_stl_itm_cd" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
