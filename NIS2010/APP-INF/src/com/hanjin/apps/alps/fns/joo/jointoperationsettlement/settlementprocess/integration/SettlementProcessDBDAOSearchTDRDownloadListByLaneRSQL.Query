<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SettlementProcessDBDAOSearchTDRDownloadListByLaneRSQL">
			<desc><![CDATA[I-Strorage조회]]></desc>
			<sql><![CDATA[
SELECT A.CRR_CD
     , A.TRD_CD
     , A.RLANE_CD
     , A.REV_DIR_CD
     , A.VSL_CD
     , A.SKD_VOY_NO
     , A.SKD_DIR_CD
     , A.VPS_PORT_CD
     , A.YD_CD
     , A.CLPT_IND_SEQ
     , LPAD(VSK.CLPT_SEQ, 2, '0') || (
       SELECT '/' || LPAD(MAX(CLPT_SEQ), 2, '0')
         FROM VSK_VSL_PORT_SKD Q
        WHERE VSK.VSL_CD = Q.VSL_CD
          AND VSK.SKD_VOY_NO = Q.SKD_VOY_NO
          AND VSK.SKD_DIR_CD = Q.SKD_DIR_CD
          AND Q.TURN_PORT_IND_CD NOT IN ('D','V','F')       
          AND NVL(Q.SKD_CNG_STS_CD, 'A') <>  'S'         
     ) CLPT_SEQ
     , (
         SELECT DECODE(INTG_CD_VAL_DP_DESC, NULL, INTG_CD_VAL_DESC, INTG_CD_VAL_DP_DESC) AS CODE_DESC
           FROM COM_INTG_CD_DTL
          WHERE INTG_CD_ID = 'CD01821'
            AND INTG_CD_VAL_CTNT = VSK.PORT_SKD_STS_CD
     ) AS PORT_SKD_STS  
     ,CASE WHEN JRDR.RDR_FLG = 'Y' THEN 'R'
           WHEN JRDR.RDR_FLG = 'N' THEN ''
      ELSE DECODE(A.VPS_PORT_CD,RDR.PORT_CD,'R','')
      END AS RDR_FLG
     , SUBSTR(A.RLANE_CD,0,3) AS SLAN_CD
     , VSK.VPS_ETD_DT
     , A.TTL_SLT_KNT AS GRAND_TTL_SLOT
     , DECODE(DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_OVR_TON_WGT, 0), NVL(PRT_BSA.JO_OVR_TON_WGT, 0)), 0, 0, A.TTL_SLT_WGT) AS GRAND_TTL_WGT
     , A.HC_20FT_FCNTR_KNT AS HC_LD_20
     , A.HC_20FT_MCNTR_KNT AS HC_BSA_20
     , A.HC_40FT_FCNTR_KNT AS HC_LD_40
     , A.HC_40FT_MCNTR_KNT AS HC_BSA_40
     , A.FCNTR_45FT_KNT AS HC_LD_45
     , A.MCNTR_45FT_KNT AS HC_BSA_45
     , A.AWK_CNTR_KNT AS AK_UNIT
     , A.AWK_VOID_CNTR_KNT AS AK_VOID
     , A.DG_20FT_CNTR_KNT AS DG_20
     , A.DG_40FT_CNTR_KNT AS DG_40
     , A.RF_20FT_CNTR_KNT AS RF_20_QTY
     , A.RF_40FT_CNTR_KNT AS RF_40_QTY
     ,(
         SELECT COUNT(1)
         FROM BAY_PLAN BB
         WHERE 1=1
         AND BB.VSL_CD     = A.VSL_CD
         AND BB.VOY_NO     = A.SKD_VOY_NO
         AND BB.DIR_CD     = A.SKD_DIR_CD
         AND BB.PORT_CD    = A.VPS_PORT_CD
         AND BB.CALL_IND   = A.CLPT_IND_SEQ
         AND BB.OPR_CD     = A.CRR_CD
         AND (BB.CARGO_TYPE = 'RF' OR BB.TEMP IS NOT NULL)
         AND BB.PLAN_TYPE = 'F'                       
     ) RF_RDR_QTY
     , A.CNTR_TEU_QTY AS MT_TEU
     , A.FCNTR_20FT_KNT AS FULL_20
     , A.MCNTR_20FT_KNT AS MT_20
     , A.FCNTR_40FT_KNT AS FULL_40
     , A.MCNTR_40FT_KNT AS MT_40
     , A.CNTR_WGT AS MT_WT
     
     -- JOO BSA AGMT 데이터 출력 DECODE(PORT_BSA, NULL, ALL_BSA, PORT_BSA) 1순위 : PORT별설정, 2순위 ALL설정, 3순위 NULL
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_20FT_OVR_RTO, 0),        NVL(PRT_BSA.JO_20FT_OVR_RTO, 0)) * 2        AS JO_20FT_N1ST_RTO
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_20FT_SUB_TEU_QTY, 0),    NVL(PRT_BSA.JO_20FT_SUB_TEU_QTY, 0))		AS JO_20FT_SUB_TEU_QTY
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_40FT_OVR_RTO, 0),        NVL(PRT_BSA.JO_40FT_OVR_RTO, 0)) * 2        AS JO_40FT_N1ST_RTO
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_40FT_SUB_TEU_QTY, 0),    NVL(PRT_BSA.JO_40FT_SUB_TEU_QTY, 0))		AS JO_40FT_SUB_TEU_QTY
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_45FT_UND_RTO, 0),        NVL(PRT_BSA.JO_45FT_UND_RTO, 0)) * 2        AS JO_45FT_N1ST_RTO
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_45FT_OVR_RTO, 0),        NVL(PRT_BSA.JO_45FT_OVR_RTO, 0)) * 2		AS JO_45FT_N2ND_RTO
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_45FT_SUB_TEU_QTY, 0),    NVL(PRT_BSA.JO_45FT_SUB_TEU_QTY, 0))		AS JO_45FT_SUB_TEU_QTY	
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_RND_RULE_LVL, 4),        NVL(PRT_BSA.JO_RND_RULE_LVL, 4))    		AS JO_RND_RULE_LVL
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_TON_TEU_QTY, 0),         NVL(PRT_BSA.JO_TON_TEU_QTY, 0)) 			AS TEU_QTY  
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_OVR_BSA_TEU_QTY, 0),     NVL(PRT_BSA.JO_OVR_BSA_TEU_QTY, 0))         AS ALL_TEU
     , DECODE(PRT_BSA.TRD_CD,   NULL,   NVL(ALL_BSA.JO_OVR_TON_WGT, 0),         NVL(PRT_BSA.JO_OVR_TON_WGT, 0))             AS ALL_WGT
     , CASE WHEN PRT_BSA.TRD_CD IS NULL AND ALL_BSA.TRD_CD IS NULL THEN ''
            WHEN PRT_BSA.TRD_CD IS NOT NULL THEN 'P'
       ELSE 'A'
       END BSA_FLG
     , TGT.REV_YRMON
     , TGT.REV_YRMON_SEQ
     , NVL(TGT.STL_TGT_FLG, 0) AS STL_TGT_FLG
     , NVL(TGT.STL_TGT_FLG, 0) AS STL_TGT_FLG2
     , NVL(TGT.STL_CLZ_FLG, 0) AS STL_CLZ_FLG
     ,(
         SELECT NVL(MAX(J3.ACCT_YRMON),'999912') AS ACCT_YRMON 
         FROM JOO_STL_TGT J2, JOO_SETTLEMENT J3
         WHERE J2.REV_YRMON = TGT.REV_YRMON
           AND J2.REV_YRMON_SEQ = TGT.REV_YRMON_SEQ
           AND J2.ACCT_YRMON = J3.ACCT_YRMON(+)
           AND J2.STL_VVD_SEQ = J3.STL_VVD_SEQ(+)
           AND J2.STL_SEQ = J3.STL_SEQ(+)
       ) ACCT_YRMON	 
     , TGT.JO_STL_RMK_CD AS RMK_FLG
     , TGT.JO_STL_RMK AS RMK
     , 1 SUB_CHK
     , 'IST'  AS SOURCE
     , MIN(TO_CHAR(A.VPS_ETD_DT, 'YYYYMMDDHH24MISS')) OVER (PARTITION BY A.VSL_CD || A.SKD_VOY_NO || A.SKD_DIR_CD) AS VVD_ETD_GROUP
  FROM JOO_BAY_PLN A
     , JOO_BSA_AGMT ALL_BSA 
     , JOO_BSA_AGMT PRT_BSA
     , VSK_VSL_PORT_SKD VSK
     , RDR_HEADER RDR
     , JOO_RDR_PORT JRDR
     , JOO_LODG_TGT TGT
 WHERE 1 = 1
   ----- BSA ALL DATA JOIN START ------------------
   AND A.TRD_CD = ALL_BSA.TRD_CD(+)
   AND A.RLANE_CD = ALL_BSA.RLANE_CD(+)
   AND A.VSL_CD = ALL_BSA.VSL_CD(+)
   AND A.SKD_VOY_NO = ALL_BSA.SKD_VOY_NO(+)
   AND A.SKD_DIR_CD = ALL_BSA.SKD_DIR_CD(+)
   AND A.CRR_CD = ALL_BSA.JO_CRR_CD(+)
   AND A.RE_DIVR_CD = ALL_BSA.RE_DIVR_CD(+)
   AND ALL_BSA.PORT_CD(+) = 'ALL'
   AND ALL_BSA.DELT_FLG(+) = 'N'	
   ----- BSA PORT ALL DATA JOIN END ---------------
   
   ----- BSA PORT 개별 DATA JOIN START ------------
   AND A.TRD_CD = PRT_BSA.TRD_CD(+)
   AND A.RLANE_CD = PRT_BSA.RLANE_CD(+)
   AND A.VSL_CD = PRT_BSA.VSL_CD(+)
   AND A.SKD_VOY_NO = PRT_BSA.SKD_VOY_NO(+)
   AND A.SKD_DIR_CD = PRT_BSA.SKD_DIR_CD(+)
   AND A.VPS_PORT_CD = PRT_BSA.PORT_CD(+)
   AND A.CLPT_IND_SEQ = PRT_BSA.PORT_SEQ(+)
   AND A.CRR_CD = PRT_BSA.JO_CRR_CD(+)
   AND A.RE_DIVR_CD = PRT_BSA.RE_DIVR_CD(+)
   AND PRT_BSA.DELT_FLG(+) = 'N'	
   ----- BSA PORT 개별 DATA JOIN END --------------

   ----- VVD PORT SKD JOIN START ------------------
   AND A.VSL_CD = VSK.VSL_CD
   AND A.SKD_VOY_NO = VSK.SKD_VOY_NO
   AND A.SKD_DIR_CD = VSK.SKD_DIR_CD
   AND A.VPS_PORT_CD = VSK.VPS_PORT_CD
   AND A.YD_CD = VSK.YD_CD
   AND A.CLPT_IND_SEQ = VSK.CLPT_IND_SEQ
   AND A.SLAN_CD = VSK.SLAN_CD
   ----- VVD SKD JOIN END -------------------------
   
   ------ RDR_HEADER JOIN START -------------------
   AND A.VSL_CD 		= RDR.VSL_CD(+)
   AND A.SKD_VOY_NO 	= RDR.VOY_NO(+)
   AND A.SKD_DIR_CD 	= RDR.DIR_CD(+)  
   AND A.VPS_PORT_CD 	= RDR.PORT_CD(+)
   ------ RDR_HEADER JOIN END ---------------------
   ------ JOO RDR PORT JOIN START -----------------
   AND A.VSL_CD       = JRDR.VSL_CD(+)
   AND A.SKD_VOY_NO   = JRDR.SKD_VOY_NO(+)
   AND A.SKD_DIR_CD   = JRDR.SKD_DIR_CD(+)  
   AND A.VPS_PORT_CD  = JRDR.VPS_PORT_CD(+)  
   AND A.CLPT_IND_SEQ = JRDR.CLPT_IND_SEQ(+)
   AND A.SLAN_CD      = JRDR.SLAN_CD(+)
   AND A.YD_CD        = JRDR.YD_CD(+)
   ------ JOO RDR PORT JOIN END -------------------
   ------ JOO LODG TGT JOIN START -----------------
   AND A.VSL_CD        = TGT.VSL_CD(+)
   AND A.SKD_VOY_NO    = TGT.SKD_VOY_NO(+)
   AND A.SKD_DIR_CD    = TGT.SKD_DIR_CD(+)
   AND A.VPS_PORT_CD   = TGT.VPS_PORT_CD(+)
   AND A.YD_CD         = TGT.YD_CD(+)
   AND A.CLPT_IND_SEQ  = TGT.CLPT_IND_SEQ(+)
   AND NVL(A.CRR_CD,'XXX')        = NVL(TGT.CRR_CD(+),'XXX')
   AND A.RLANE_CD      = TGT.RLANE_CD(+)
   AND A.TRD_CD        = TGT.TRD_CD(+)
   AND A.RE_DIVR_CD    = TGT.RE_DIVR_CD(+)
   ------ JOO LODG TGT JOIN END -------------------
   
   #if (${vvd} != '')   
   AND A.VSL_CD LIKE SUBSTR(@[vvd], 1, 4) || '%'
   AND A.SKD_VOY_NO LIKE SUBSTR(@[vvd], 5, 4) || '%'
   AND A.SKD_DIR_CD LIKE SUBSTR(@[vvd], 9, 1) || '%'
   #end
   #if (${vps_port_cd} != '')
   AND A.VPS_PORT_CD = @[vps_port_cd]
   #end
   #if (${skd_dir_cd} != '')
   AND A.SKD_DIR_CD = @[skd_dir_cd]
   #end
   #if (${opr_cd} != '')
   AND A.CRR_CD IN (
       #foreach($key IN ${opr_cd2})
           #if($velocityCount < $opr_cd2.size())
               '${key}',
           #else
               '$key'
           #end
       #end
   )
   #end
   #if (${opt_tgt} == 'T') 
   AND TGT.STL_TGT_FLG(+) = '1'
   #end
   #if (${opt_tgt} == 'N') 
   AND TGT.STL_TGT_FLG(+) = '0' 
   #end
   #if (${opt_tgt} == 'C')
   AND TGT.STL_CLZ_FLG(+) = '1'
   #end
   #if (${opt_tgt} == 'N') 
   AND TGT.STL_CLZ_FLG(+) = '0' 
   #end
   AND A.RLANE_CD LIKE @[rlane_cd] || '%'
   AND A.VPS_ETD_DT BETWEEN TO_DATE(REPLACE (@[pre_fr], '-', '') || '000000', 'YYYYMMDDHH24MISS') AND TO_DATE(REPLACE (@[pre_to], '-', '') || '235959', 'YYYYMMDDHH24MISS')
 ORDER BY VVD_ETD_GROUP, VSL_CD || SKD_VOY_NO || SKD_DIR_CD, VPS_ETD_DT, VPS_PORT_CD, CRR_CD			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="pre_fr" type="12" value="" out="N"/>
				<param name="pre_to" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
