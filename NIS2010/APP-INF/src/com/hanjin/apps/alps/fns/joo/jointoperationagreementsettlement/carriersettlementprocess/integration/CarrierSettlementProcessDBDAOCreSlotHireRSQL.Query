<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOCreSlotHireRSQL">
			<desc><![CDATA[Slot Hire 의 Create용 Query]]></desc>
			<sql><![CDATA[
SELECT
      'R' AS IBFLAG
      ,A.ACCT_YRMON
      ,A.STL_VVD_SEQ
      ,A.STL_SEQ
      ,A.TRD_CD
      ,A.JO_CRR_CD
      ,A.RLANE_CD
      ,A.RE_DIVR_CD
      ,A.JO_STL_ITM_CD
      ,A.JO_MNU_NM
      ,A.VSL_CD
      ,A.SKD_VOY_NO
      ,A.SKD_DIR_CD
      ,A.REV_DIR_CD
      ,A.STL_BZC_PORT_CD
      ,TO_CHAR(A.ETA_DT,'YYYYMMDDHH24MISS') ETA_DT
      ,A.JO_STL_JB_CD
      ,A.BSA_QTY
      ,A.BSA_SLT_PRC
      ,A.LOCL_CURR_CD
      ,A.ADJ_BSA_QTY_LOCL_AMT
      ,A.ADJ_BSA_SLT_PRC_LOCL_AMT
      ,A.STL_LOCL_AMT
      ,A.STL_USD_AMT
      ,A.IOC_CD
      ,A.SCONTI_CD
      ,A.FNL_HJS_BSA_QTY
      ,A.FNL_BSA_WGT
      ,A.USD_SLT_BSA_QTY
      ,A.USD_SLT_WGT
      ,A.BSA_PER_WGT
      ,A.FM_PORT_CD
      ,A.TO_PORT_CD
      ,A.RF_SCG_STL_TP_CD
      ,A.RF_SCG_PRC
      ,A.STL_RMK
      ,A.CMB_CFM_FLG
      ,B.STL_CMB_SEQ
      ,A.STL_TJ_NO
      ,A.STL_ADJ_FLG
      ,A.PRE_ACCT_YRMON
      ,A.PRE_STL_VVD_SEQ
      ,A.PRE_STL_SEQ
      ,A.STL_LST_FLG
      ,A.UC_BSS_PORT_CD
      ,TO_CHAR(A.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT
      ,B.SLIP_NO AS CRE_DT
      ,NVL(B.RVS_CMB_FLG,'N') AS RVS_CMB_FLG
FROM   JOO_SETTLEMENT A,
       (
       SELECT
              B.ACCT_YRMON
             ,B.STL_VVD_SEQ
             ,B.STL_SEQ
             ,B.STL_CMB_SEQ
             ,A.SLP_TP_CD||A.SLP_FUNC_CD||A.SLP_OFC_CD||TO_CHAR(TO_DATE(A.SLP_ISS_DT,'YYYYMMDD'),'RRMMDD')||A.SLP_SER_NO AS SLIP_NO
             ,A.RVS_CMB_FLG
             ,A.RJCT_CMB_FLG
       FROM   JOO_STL_CMB     A,
              JOO_STL_CMB_DTL B
       WHERE  A.ACCT_YRMON  = B.ACCT_YRMON
       AND    A.JO_CRR_CD   = B.JO_CRR_CD
       AND    A.STL_CMB_SEQ = B.STL_CMB_SEQ
       AND    A.RE_DIVR_CD  = B.RE_DIVR_CD
       AND    A.ACCT_YRMON  = REPLACE(@[acct_yrmon],'-','')
       AND    A.JO_CRR_CD   = @[jo_crr_cd]
       AND    A.RE_DIVR_CD  = @[re_divr_cd]
       -- 2010.01.06 REVERSE 된 것은 COMBINED NO가 보여져서는 안된다 => 삭제가능하게 
      -- 2010.03.23 REVERSE 된 것은 copy를 하므로 기존 reverse data는 combined no를 보여주도록 한다. (삭제불가)
      --AND    A.RVS_CMB_FLG = 'N'
      --AND    A.RJCT_CMB_FLG = 'N'
       ) B
WHERE  A.ACCT_YRMON    = B.ACCT_YRMON (+)
AND    A.STL_VVD_SEQ   = B.STL_VVD_SEQ(+)
AND    A.STL_SEQ       = B.STL_SEQ    (+)
AND    A.ACCT_YRMON    = REPLACE(@[acct_yrmon],'-','')
AND    A.JO_CRR_CD     = @[jo_crr_cd]
AND    A.RE_DIVR_CD    = @[re_divr_cd]
AND    A.TRD_CD        = @[trd_cd]
AND    A.RLANE_CD      = @[rlane_cd]
AND	   A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
AND    A.JO_MNU_NM     = @[jo_mnu_nm]
AND    NVL(A.STL_ADJ_FLG,'N') = 'N'
UNION ALL
SELECT
      'I' AS IBFLAG
      , ACCT_YRMON
      , J.STL_VVD_SEQ
      , 0 AS STL_SEQ
      , J.TRD_CD
      , J.JO_CRR_CD
      , J.RLANE_CD
      , J.RE_DIVR_CD
      , J.JO_STL_ITM_CD
      , J.JO_MNU_NM
      , J.VSL_CD
      , J.SKD_VOY_NO
      , J.SKD_DIR_CD
      , J.REV_DIR_CD
      , J.STL_BZC_PORT_CD
      , TO_CHAR(J.BZC_PORT_ETA_DT,'YYYYMMDDHH24MISS') ETA_DT
      , DECODE(C.BSA_OP_JB_CD,'000','101','001','101','002','102','003','102','004','103','005','103') JO_STL_JB_CD
      , C.BSA_QTY
      , C.BSA_SLT_PRC
      , F.LOCL_CURR_CD
      , NULL AS ADJ_BSA_QTY_LOCL_AMT
      , NULL AS ADJ_BSA_SLT_PRC_LOCL_AMT
      , C.STL_LOCL_AMT
      , NULL AS STL_USD_AMT
      , NULL AS IOC_CD
      , NULL AS SCONTI_CD
      , NULL AS FNL_HJS_BSA_QTY
      , NULL AS FNL_BSA_WGT
      , NULL AS USD_SLT_BSA_QTY
      , NULL AS USD_SLT_WGT
      , NULL AS BSA_PER_WGT
      , NULL AS FM_PORT_CD
      , NULL AS TO_PORT_CD
      , NULL AS RF_SCG_STL_TP_CD
      , NULL AS RF_SCG_PRC
      , NULL AS STL_RMK
      , NULL AS CMB_CFM_FLG
      , NULL AS STL_CMB_SEQ
      , NULL AS STL_TJ_NO
      , 'N'  AS STL_ADJ_FLG
      , NULL AS PRE_ACCT_YRMON
      , NULL AS PRE_STL_VVD_SEQ
      , NULL AS PRE_STL_SEQ
      , 'Y'  AS STL_LST_FLG
      , J.UC_BSS_PORT_CD
      , TO_CHAR(J.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT
      , '' AS CRE_DT
      , 'N' AS RVS_CMB_FLG
FROM   JOO_STL_VVD J,
       (
       SELECT
              C.VSL_CD,
              C.SKD_VOY_NO,
              C.SKD_DIR_CD,
              C.RLANE_CD,
              C.BSA_OP_JB_CD,
              C.CRR_BSA_CAPA AS BSA_QTY,
              C.SLT_PRC_CAPA AS BSA_SLT_PRC,
              C.CRR_PERF_LOCL_AMT AS STL_LOCL_AMT,
              C.CURR_CD
       FROM   
              BSA_VVD_CRR_PERF C
       WHERE  1 = 1
#if(${re_divr_cd} =='R')
       AND    C.BSA_OP_JB_CD IN ('001','002','004')
#elseif(${re_divr_cd} =='E')
       AND    C.BSA_OP_JB_CD IN ('000','003','005')
#end
       AND    C.CRR_PERF_AMT <> 0
       AND    C.CRR_CD     = @[jo_crr_cd]
       AND    C.TRD_CD     = @[trd_cd]
       AND    C.RLANE_CD   = @[rlane_cd]
       ) C,
       JOO_FINC_MTX F
WHERE J.VSL_CD        = C.VSL_CD
AND   J.SKD_VOY_NO    = C.SKD_VOY_NO
AND   J.SKD_DIR_CD    = C.SKD_DIR_CD
AND   J.RLANE_CD      = C.RLANE_CD
AND   J.JO_CRR_CD     = F.JO_CRR_CD
AND   J.RLANE_CD      = F.RLANE_CD
AND   J.RE_DIVR_CD    = F.RE_DIVR_CD
AND   J.JO_MNU_NM     = F.JO_STL_ITM_CD
AND   J.ACCT_YRMON    = REPLACE(@[acct_yrmon],'-','')
AND   J.JO_CRR_CD     = @[jo_crr_cd]
AND   J.RE_DIVR_CD    = @[re_divr_cd]
AND   J.TRD_CD        = @[trd_cd]
AND   J.RLANE_CD      = @[rlane_cd]
AND   J.JO_STL_CFM_CD = 'Y'
AND   J.JO_STL_ITM_CD = @[jo_stl_itm_cd]
AND   J.JO_MNU_NM     = @[jo_mnu_nm]
AND   F.LOCL_CURR_CD = C.CURR_CD
AND   (J.VSL_CD, J.SKD_VOY_NO, J.SKD_DIR_CD, J.REV_DIR_CD, DECODE(C.BSA_OP_JB_CD,'000','101','001','101','002','102','003','102','004','103','005','103'),'N')
NOT IN (
        SELECT X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.REV_DIR_CD, X.JO_STL_JB_CD, NVL(Y.RVS_CMB_FLG,'N')
        FROM   JOO_SETTLEMENT  X,
               --2010.03.29 REVERSE 된 VVD는 나와야 한다.
               (
               SELECT Y.ACCT_YRMON, Y.STL_VVD_SEQ, Y.STL_SEQ, Z.RVS_CMB_FLG
               FROM   JOO_STL_CMB_DTL Y,
                      JOO_STL_CMB     Z
               WHERE  Y.ACCT_YRMON = Z.ACCT_YRMON
               AND    Y.JO_CRR_CD  = Z.JO_CRR_CD
               AND    Y.STL_CMB_SEQ= Z.STL_CMB_SEQ
               AND    Y.RE_DIVR_CD = Z.RE_DIVR_CD
               ) Y
        WHERE  X.ACCT_YRMON     = Y.ACCT_YRMON  (+)
        AND    X.STL_VVD_SEQ    = Y.STL_VVD_SEQ (+)
        AND    X.STL_SEQ        = Y.STL_SEQ     (+) 
        AND    X.ACCT_YRMON     = REPLACE(@[acct_yrmon],'-','')
        AND    X.JO_CRR_CD      = @[jo_crr_cd]
        AND    X.RE_DIVR_CD     = @[re_divr_cd]
        AND    X.TRD_CD         = @[trd_cd]
        AND    X.RLANE_CD       = @[rlane_cd]
        AND    X.JO_STL_ITM_CD  = @[jo_stl_itm_cd]
        AND    X.JO_MNU_NM      = @[jo_mnu_nm]
      )
ORDER BY 1 DESC, SKD_DIR_CD, VSL_CD, SKD_VOY_NO, REV_DIR_CD			]]></sql>
			<params>
				<param name="acct_yrmon" type="12" value="2009-05" out="N"/>
				<param name="jo_crr_cd" type="12" value="UAC" out="N"/>
				<param name="re_divr_cd" type="12" value="R" out="N"/>
				<param name="trd_cd" type="12" value="AES" out="N"/>
				<param name="rlane_cd" type="12" value="IMUAE" out="N"/>
				<param name="jo_stl_itm_cd" type="12" value="S/H" out="N"/>
				<param name="jo_mnu_nm" type="12" value="S/H" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
