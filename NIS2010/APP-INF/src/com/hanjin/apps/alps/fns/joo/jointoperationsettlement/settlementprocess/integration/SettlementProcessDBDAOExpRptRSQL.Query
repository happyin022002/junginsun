<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SettlementProcessDBDAOExpRptRSQL">
			<desc><![CDATA[Jo Expense Report 조회]]></desc>
			<sql><![CDATA[
WITH SKD AS (
        SELECT
             AA.VSL_CD
            ,AA.SKD_VOY_NO
            ,AA.SKD_DIR_CD  
            ,AA.VPS_PORT_CD
            ,AA.TML_CD
            ,AA.SPLIT_NO
            ,AA.CLPT_SEQ
            ,AA.VPS_ETD_DT
            ,CASE WHEN V.RDR_FLG = 'Y' THEN 'R'
                  WHEN V.RDR_FLG = 'N' THEN ''
                  ELSE DECODE(AA.VPS_PORT_CD,H.PORT_CD,'R','')
                  END AS RDR_FLG
        FROM
        (
            SELECT               
                     K.VSL_CD
                    ,K.SKD_VOY_NO
                    ,K.SKD_DIR_CD       
                    ,SUBSTR(K.YD_CD,1,5) 	AS VPS_PORT_CD
                    ,SUBSTR(K.YD_CD,6,2) 	AS TML_CD
                    ,K.CLPT_IND_SEQ 		AS SPLIT_NO 
                    ,TO_CHAR(K.VPS_ETD_DT,'YYYYMMDDHH24MISS') AS VPS_ETD_DT
                    ,K.CLPT_SEQ
                    ,K.SLAN_CD            
                    ,K.YD_CD 
               FROM VSK_VSL_PORT_SKD K
              WHERE 1=1
				#if (${rlane_cd} != '') 
			    AND SLAN_CD LIKE @[rlane_cd] || '%'
				#end
				#if (${vvd} != '') 
				AND K.VSL_CD || K.SKD_VOY_NO || K.SKD_DIR_CD LIKE @[vvd] || '%' 
				#end
				#if (${skd_dir_cd} != '') 
				AND K.SKD_DIR_CD = @[skd_dir_cd]
				#end
                AND ( (VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
				                      AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR VPS_ETD_DT IS NULL )
                AND TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
                AND NVL(K.SKD_CNG_STS_CD, 'A') <>  'S'  
        ) AA, RDR_HEADER H, JOO_RDR_PORT V        
        WHERE 1=1
        AND AA.VSL_CD 		= H.VSL_CD(+)
        AND AA.SKD_VOY_NO 	= H.VOY_NO(+)
        AND AA.SKD_DIR_CD 	= H.DIR_CD(+)  
        AND AA.VPS_PORT_CD 	= H.PORT_CD(+)
        AND AA.VSL_CD       = V.VSL_CD(+)
        AND AA.SKD_VOY_NO   = V.SKD_VOY_NO(+)
        AND AA.SKD_DIR_CD   = V.SKD_DIR_CD(+)  
        AND AA.VPS_PORT_CD  = V.VPS_PORT_CD(+)  
        AND AA.SPLIT_NO     = V.CLPT_IND_SEQ(+)
        AND AA.SLAN_CD      = V.SLAN_CD(+)
        AND AA.YD_CD        = V.YD_CD(+)
), ROB_LIST AS (
    SELECT
     S.VSL_CD
    ,S.SKD_VOY_NO
    ,S.SKD_DIR_CD
    ,S.VPS_PORT_CD
    ,S.TML_CD
    ,S.SPLIT_NO     AS CLPT_IND_SEQ
    ,S.VPS_ETD_DT
    ,S.RDR_FLG
    ,J.TRD_CD           
    ,'SML' AS CRR_CD
    ,J.RLANE_CD
    ,J.RE_DIVR_CD
    ,J.YD_CD
    ,J.ROB_CNTR_WGT
    ,J.FCNTR_20FT_KNT
    ,J.MCNTR_20FT_KNT
    ,J.FCNTR_40FT_KNT
    ,J.MCNTR_40FT_KNT
    ,J.HC_20FT_FCNTR_KNT
    ,J.HC_20FT_MCNTR_KNT
    ,J.HC_40FT_FCNTR_KNT
    ,J.HC_40FT_MCNTR_KNT
    ,J.FCNTR_45FT_KNT
    ,J.MCNTR_45FT_KNT
    ,J.AWK_CNTR_KNT
    ,J.RF_20FT_CNTR_KNT
    ,J.RF_ROB_CNTR_KNT
    ,J.RF_40FT_CNTR_KNT
    ,J.DG_20FT_CNTR_KNT
    ,J.DG_40FT_CNTR_KNT
    ,J.OVR_VOID_SLT_QTY
	,DECODE(J.ROB_ENBL_FLG,'Y','P','NP')	AS ROB_ENBL_FLG	
    ,J.REV_DIR_CD
    FROM SKD S, JOO_ROB_CNTR_SMRY J
    WHERE 1=1
    AND S.VSL_CD = J.VSL_CD(+)
    AND S.SKD_VOY_NO = J.SKD_VOY_NO(+)
    AND S.SKD_DIR_CD = J.SKD_DIR_CD(+) 
    AND S.VPS_PORT_CD = J.VPS_PORT_CD(+)
    AND S.TML_CD = SUBSTR(J.YD_CD(+),6,2)
    AND S.SPLIT_NO = J.CLPT_IND_SEQ(+) 
), ROB_LIST2 AS (
    SELECT 
             J.TRD_CD
            ,J.CRR_CD
            ,J.RLANE_CD
            ,J.RE_DIVR_CD
            ,J.VSL_CD
            ,J.SKD_VOY_NO
            ,J.SKD_DIR_CD 
            ,J.VPS_PORT_CD
            ,J.TML_CD  
            ,J.YD_CD 
            ,J.CLPT_IND_SEQ		
            ,J.VPS_ETD_DT
            ,J.RDR_FLG
		    ,J.REV_DIR_CD
            ,J.ROB_CNTR_WGT		AS grand_ttl_wgt
            ,J.FCNTR_20FT_KNT 	AS full_20
            ,J.MCNTR_20FT_KNT	AS mt_20
            ,J.FCNTR_40FT_KNT	AS full_40
            ,J.MCNTR_40FT_KNT	AS mt_40
            ,J.HC_20FT_FCNTR_KNT	AS hc_ld_20		
            ,J.HC_20FT_MCNTR_KNT	AS hc_bsa_20 
            ,J.HC_40FT_FCNTR_KNT	AS hc_ld_40 
            ,J.HC_40FT_MCNTR_KNT	AS hc_bsa_40 
            ,J.FCNTR_45FT_KNT		AS hc_ld_45
            ,J.MCNTR_45FT_KNT		AS hc_bsa_45 
            ,J.AWK_CNTR_KNT			AS ak_unit
            ,J.RF_20FT_CNTR_KNT		AS rf_20_qty
            ,J.RF_ROB_CNTR_KNT 		AS rf_rdr_qty
            ,J.RF_40FT_CNTR_KNT		AS rf_40_qty
            ,J.DG_20FT_CNTR_KNT		AS dg_20
            ,J.DG_40FT_CNTR_KNT		AS dg_40
            ,J.OVR_VOID_SLT_QTY 	AS ak_void
			,J.ROB_ENBL_FLG			AS pass
            ,'1' AS sub_chk
            ,CASE WHEN ((J.VPS_PORT_CD || J.CLPT_IND_SEQ = BB.PORT_CD || PORT_SEQ) OR BB.PORT_CD = 'ALL') AND J.VSL_CD = BB.VSL_CD 
                                                                          AND J.SKD_VOY_NO = BB.SKD_VOY_NO 
                                                                          AND J.SKD_DIR_CD = BB.SKD_DIR_CD
                                                                          THEN BB.JO_OVR_BSA_TEU_QTY
                 ELSE 0
                 END ALL_TEU2
            ,CASE WHEN ((J.VPS_PORT_CD || J.CLPT_IND_SEQ = BB.PORT_CD || PORT_SEQ) OR BB.PORT_CD = 'ALL') AND J.VSL_CD = BB.VSL_CD 
                                                                          AND J.SKD_VOY_NO = BB.SKD_VOY_NO
                                                                          AND J.SKD_DIR_CD = BB.SKD_DIR_CD
                                                                          THEN BB.JO_OVR_TON_WGT
                 ELSE 0
                 END ALL_WGT2
            ,'IST'  AS source
            ,BB.jo_20ft_sub_teu_qty   
            ,BB.JO_20FT_OVR_RTO*2     AS jo_20ft_n1st_rto   
            ,BB.jo_40ft_sub_teu_qty   
            ,BB.JO_40FT_OVR_RTO*2     AS jo_40ft_n1st_rto   
            ,BB.jo_45ft_sub_teu_qty   
            ,BB.JO_45FT_OVR_RTO*2     AS jo_45ft_n2nd_rto       
            ,BB.JO_45FT_UND_RTO*2     AS jo_45ft_n1st_rto   
            ,BB.jo_rnd_rule_lvl   
            ,BB.JO_TON_TEU_QTY 		AS teu_qty
            ,'0' AS mt_teu
            ,'0' AS mt_wt 
            ,BB.PORT_CD
			,BB.PORT_SEQ
            ---------------
            ,BB.JO_BSA_TEU_QTY
            ,BB.JO_OVR_BSA_TEU_QTY
            ,BB.JO_OVR_TON_WGT
            ,BB.JO_RDR_PORT_CD            
    FROM ROB_LIST J
        ,(
              SELECT *
			  FROM JOO_BSA_AGMT BB   
              WHERE 1=1
				AND BB.DELT_FLG = 'N'
				#if (${vvd} != '') 
				AND BB.VSL_CD || BB.SKD_VOY_NO || BB.SKD_DIR_CD LIKE @[vvd] || '%' 
				#end
				#if (${skd_dir_cd} != '') 
				AND BB.SKD_DIR_CD = @[skd_dir_cd]
				#end
				#if (${rlane_cd} != '') 
    	        AND BB.RLANE_CD LIKE @[rlane_cd] || '%' 
				#end
         ) BB
    WHERE 1=1
    AND J.TRD_CD = BB.TRD_CD(+)
    AND J.RLANE_CD = BB.RLANE_CD(+)    
    AND J.VSL_CD = BB.VSL_CD(+)
    AND J.SKD_VOY_NO = BB.SKD_VOY_NO(+)
    AND J.SKD_DIR_CD = BB.SKD_DIR_CD(+)
	AND J.CRR_CD = 'SML'
    AND J.CRR_CD = BB.JO_CRR_CD(+)
--    AND J.VPS_PORT_CD = BB.PORT_CD(+)
--    AND J.CLPT_IND_SEQ = BB.PORT_SEQ(+)
), ROB_LIST3 AS (
	SELECT * FROM ROB_LIST2
	WHERE 1=1
	AND (PORT_CD IS NULL
		 OR PORT_CD = 'ALL' 
		 OR (PORT_CD || PORT_SEQ = VPS_PORT_CD || CLPT_IND_SEQ)
	)
    AND VPS_PORT_CD = JO_RDR_PORT_CD
)    
SELECT  R.*
        ,(
  		        SELECT 
                    NVL(SUM(A4.CRR_BSA_CAPA),0)
                FROM BSA_VVD_CRR_PERF A4
                WHERE 1=1
                AND A4.TRD_CD = R.TRD_CD
                AND A4.RLANE_CD =  R.RLANE_CD
                AND A4.VSL_CD = R.VSL_CD
                AND A4.SKD_VOY_NO = R.SKD_VOY_NO
                AND A4.SKD_DIR_CD = R.SKD_DIR_CD
                AND A4.BSA_OP_JB_CD IN ('001','002','004')
                --AND CRR_CD = ''
         ) AS SUBLET_TEU
FROM ROB_LIST3 R
ORDER BY R.TRD_CD, R.RLANE_CD, R.VPS_ETD_DT ASC			]]></sql>
			<params>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="pre_fr" type="12" value="" out="N"/>
				<param name="pre_to" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
