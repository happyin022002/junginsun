<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOCreOusTdrRSQL">
			<desc><![CDATA[OUS TDR Revenue Create용]]></desc>
			<sql><![CDATA[
WITH JO_CRR AS (
  SELECT B.JO_CRR_CD, A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD
  FROM   JOO_STL_VVD A,
         (
  		   SELECT DECODE(@[re_divr_cd], 'E', 'SML', @[jo_crr_cd]) AS JO_CRR_CD, TO_DATE('99991231','YYYYMMDD') AS EFF_ETA_DT
  		   FROM   DUAL
  		   UNION  ALL
  		   SELECT JO_N2ND_CRR_CD AS JO_CRR_CD, EFF_ETA_DT
  		   FROM   JOO_CRR_MRG A
  		   WHERE  A.DELT_FLG       = 'N'
  		   AND    A.ACCTG_CRR_CD   = @[jo_crr_cd]
  		   AND    A.JO_N1ST_CRR_CD = DECODE(@[re_divr_cd], 'E', 'SML', @[jo_crr_cd])
  		   AND    A.TRD_CD         = @[trd_cd]
  		   AND    A.RLANE_CD       = @[rlane_cd]
         ) B
  WHERE  A.BZC_PORT_ETA_DT <= B.EFF_ETA_DT
  AND    A.ACCT_YRMON    = REPLACE(@[acct_yrmon],'-','')
  AND    A.JO_CRR_CD     = @[jo_crr_cd]
  AND    A.TRD_CD        = @[trd_cd]
  AND    A.RLANE_CD      = @[rlane_cd]
  AND    A.RE_DIVR_CD    = @[re_divr_cd]
  AND    A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
  AND    A.JO_MNU_NM    IN ('RDR','TDR')
  AND    A.JO_STL_CFM_CD = 'Y'
)
SELECT
        'I' AS IBFLAG
        , ACCT_YRMON
        , STL_VVD_SEQ
        , 0 AS STL_SEQ
        , TRD_CD
        , JO_CRR_CD
        , RLANE_CD
        , RE_DIVR_CD
        , JO_STL_ITM_CD
        , JO_MNU_NM
        , VSL_CD
        , SKD_VOY_NO
        , SKD_DIR_CD
        , REV_DIR_CD
        , STL_BZC_PORT_CD
        , TO_CHAR(BZC_PORT_ETA_DT,'YYYYMMDDHHMISS') AS ETA_DT
        , '' JO_STL_JB_CD
        , 0 AS BSA_QTY
        , BSA_SLT_PRC
        , LOCL_CURR_CD
        , 0 AS ADJ_BSA_QTY_LOCL_AMT
        , 0 AS ADJ_BSA_SLT_PRC_LOCL_AMT
        , 0 AS STL_LOCL_AMT
        , 0 STL_USD_AMT
        , '' AS IOC_CD
        , '' AS SCONTI_CD
        , FNL_HJS_BSA_QTY
        , FNL_BSA_WGT
        , USD_SLT_BSA_QTY
        , USD_SLT_WGT
        , BSA_PER_WGT
        , FM_PORT_CD
        , TO_PORT_CD
        , NULL AS RF_SCG_STL_TP_CD
        , NULL AS RF_SCG_PRC
        , NULL AS STL_RMK
        , NULL AS CMB_CFM_FLG
        , NULL AS STL_CMB_SEQ
        , NULL AS STL_TJ_NO
        , 'N'  AS STL_ADJ_FLG
        , NULL AS PRE_ACCT_YRMON
        , NULL AS PRE_STL_VVD_SEQ
        , NULL AS PRE_STL_SEQ
        , 'Y'  AS STL_LST_FLG
        , UC_BSS_PORT_CD
        , TO_CHAR(UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT
        , NULL AS SLIP_NO
        , CLPT_IND_SEQ
        , 'N' AS RVS_CMB_FLG
  FROM (
        SELECT T.ACCT_YRMON
             , T.JO_CRR_CD
             , T.RE_DIVR_CD
             , T.TRD_CD
             , T.RLANE_CD
             , T.VSL_CD
             , T.SKD_VOY_NO
             , T.SKD_DIR_CD
             , T.REV_DIR_CD
             , T.STL_BZC_PORT_CD
             , T.BZC_PORT_ETA_DT
             , T.UC_BSS_PORT_CD
             , T.UC_BSS_PORT_ETD_DT
             , T.FM_PORT_CD
             , T.TO_PORT_CD
             , T.FNL_HJS_BSA_QTY
             , T.FNL_BSA_WGT             
             , T.USD_SLT_BSA_QTY
             , T.USD_SLT_WGT
             , T.BSA_PER_WGT
             , T.BSA_SLT_PRC
             , T.JO_STL_ITM_CD
             , T.JO_MNU_NM
             , T.STL_VVD_SEQ
             , E.LOCL_CURR_CD
             , T.CLPT_IND_SEQ
          FROM (
               SELECT A.ACCT_YRMON, A.STL_VVD_SEQ, A.TRD_CD, A.JO_CRR_CD, A.RLANE_CD, A.RE_DIVR_CD, A.JO_STL_ITM_CD, A.JO_MNU_NM
                    , A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.REV_DIR_CD, A.STL_BZC_PORT_CD, A.BZC_PORT_ETA_DT, A.UC_BSS_PORT_CD, A.UC_BSS_PORT_ETD_DT
                    , A.PORT1 AS FM_PORT_CD, A.PORT2 AS TO_PORT_CD, A.CLPT_IND_SEQ
                    , NVL(A.BSA_PER_WGT,0) AS BSA_PER_WGT, NVL(P.BSA_SLT_PRC,0) BSA_SLT_PRC
                    , NVL(F.FNL_HJS_BSA_QTY,0) AS FNL_HJS_BSA_QTY, NVL(F.FNL_BSA_WGT,0) FNL_BSA_WGT
                    , NVL(O.USD_SLT_BSA_QTY,0) AS USD_SLT_BSA_QTY, NVL(O.USD_SLT_WGT,0) AS USD_SLT_WGT
                 FROM (
                      SELECT J.ACCT_YRMON, J.STL_VVD_SEQ, J.TRD_CD, J.JO_CRR_CD, J.RLANE_CD, J.RE_DIVR_CD, J.JO_STL_ITM_CD, 'TDR' AS JO_MNU_NM
                           , J.VSL_CD, J.SKD_VOY_NO, J.SKD_DIR_CD, J.REV_DIR_CD, J.STL_BZC_PORT_CD, J.BZC_PORT_ETD_DT BZC_PORT_ETA_DT, J.UC_BSS_PORT_CD, J.UC_BSS_PORT_ETD_DT
                           , K.PORT1, K.PORT2,  K.CLPT_IND_SEQ
                           , C.BSA_PER_WGT
                        FROM JOO_STL_VVD J
                             /*BSA WEIGHT PER TEU*/
                            ,(
                             -- 2010.01.19 WEIGHT PER TEU는 CARRIER MERGE하지말고 해당 선사것만 가져온다.
                             -- 2010.03.25 WEIGHT PER TEU는 EXPENSE여도 자신의 CARRIER것만 가져온다.
                             SELECT C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, C.RLANE_CD, C.TRD_CD, C.CRR_CD,
                                    SUM(C.CRR_BSA_CAPA) AS BSA_PER_WGT
                               FROM BSA_VVD_OTR_CRR C
                              WHERE C.CRR_CD     = @[jo_crr_cd] 
                                AND C.TRD_CD     = @[trd_cd]
                                AND C.RLANE_CD   = @[rlane_cd]
                                AND C.BSA_OP_JB_CD = '008'
                              GROUP BY C.VSL_CD, C.SKD_VOY_NO, C.SKD_DIR_CD, C.RLANE_CD, C.TRD_CD, C.CRR_CD
                             ) C
                             /* From port to port */
                           , (
                             SELECT V1.VSL_CD, V1.SKD_VOY_NO, V1.SKD_DIR_CD, V1.VPS_PORT_CD PORT1, V2.VPS_PORT_CD PORT2, V1.CLPT_IND_SEQ
                               FROM (
                                    SELECT V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD, V.VPS_PORT_CD, V.CLPT_IND_SEQ, V.VPS_ETD_DT, V.TURN_PORT_IND_CD
                                         , LEAD(V.VPS_ETD_DT) OVER (PARTITION BY V.VSL_CD,V.SKD_VOY_NO,V.SKD_DIR_CD ORDER BY V.CLPT_SEQ) NEXT_ETD_DT
                                      FROM VSK_VSL_PORT_SKD V
                                     WHERE (V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD) 
                                        IN (SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD
                                              FROM JOO_STL_VVD
                                             WHERE ACCT_YRMON    = REPLACE(@[acct_yrmon],'-','')
                                               AND JO_CRR_CD     = @[jo_crr_cd]
                                               AND TRD_CD        = @[trd_cd]
                                               AND RLANE_CD      = @[rlane_cd]
                                               AND RE_DIVR_CD    = @[re_divr_cd]
                                               AND JO_STL_ITM_CD = @[jo_stl_itm_cd]
                                               AND JO_MNU_NM     IN ('RDR','TDR')
                                               AND JO_STL_CFM_CD = 'Y')
                             
                                    )V1, 
                                    VSK_VSL_PORT_SKD V2
                              WHERE V1.VSL_CD      = V2.VSL_CD
                                AND V1.SKD_VOY_NO  = V2.SKD_VOY_NO
                                AND V1.SKD_DIR_CD  = V2.SKD_DIR_CD
                                AND V1.NEXT_ETD_DT = V2.VPS_ETD_DT
                                AND V1.TURN_PORT_IND_CD NOT IN ('D','V','F')
                                --2009.11.26 From Port, To Port 가 같아도 상관없음
                                --AND V1.VPS_PORT_CD <> V2.VPS_PORT_CD
                             )K                           
                       WHERE J.VSL_CD         = C.VSL_CD    (+)
                         AND J.SKD_VOY_NO     = C.SKD_VOY_NO(+)
                         AND J.SKD_DIR_CD     = C.SKD_DIR_CD(+)
                         AND J.RLANE_CD       = C.RLANE_CD  (+)
                         AND J.JO_CRR_CD      = C.CRR_CD    (+)
                         AND J.TRD_CD         = C.TRD_CD    (+)
                         AND J.VSL_CD         = K.VSL_CD    (+)
                         AND J.SKD_VOY_NO     = K.SKD_VOY_NO(+)
                         AND J.SKD_DIR_CD     = K.SKD_DIR_CD(+)
                         AND J.ACCT_YRMON     = REPLACE(@[acct_yrmon],'-','')
                         AND J.JO_CRR_CD      = @[jo_crr_cd]
                         AND J.TRD_CD         = @[trd_cd]
                         AND J.RLANE_CD       = @[rlane_cd]
                         AND J.RE_DIVR_CD     = @[re_divr_cd]
                         AND J.JO_STL_ITM_CD  = @[jo_stl_itm_cd]
                         AND J.JO_MNU_NM      IN ('RDR','TDR')
                         AND J.JO_STL_CFM_CD  = 'Y'
                      )A
                      /* over used slot price */
                    , (
                      SELECT CM.DIR_CD, CM.BSA_SLT_PRC_FM_DT, CM.BSA_SLT_PRC_TO_DT, CM.FM_PORT_CD, CM.TO_PORT_CD, 
                             MAX(CD.UC_AMT) AS BSA_SLT_PRC
                        FROM BSA_OVR_USD_MST CM,
                             BSA_OVR_USD_SLT_PRC CD
                       WHERE CM.OVR_USD_SLT_PRC_SEQ = CD.OVR_USD_SLT_PRC_SEQ
                         AND CD.UC_AMT   <> 0
                         AND CM.DELT_FLG = 'N'
                         AND CM.TRD_CD   = @[trd_cd]
                         AND CM.RLANE_CD = @[rlane_cd]
                         AND CD.CRR_CD   = @[jo_crr_cd]
--2010.03.02 박효숙 차장...TDR의 OverUsedSlotPrice는 R/E상관없이 MAX값을 가져와라
--if(re_divr_cd =='R')
--                         AND CD.BSA_OP_JB_CD IN ('001','002','004')
--elseif(re_divr_cd =='E')
--                         AND CD.BSA_OP_JB_CD IN ('000','003','005')
--end
                       GROUP BY CM.DIR_CD, CM.BSA_SLT_PRC_FM_DT, CM.BSA_SLT_PRC_TO_DT, CM.FM_PORT_CD, CM.TO_PORT_CD
                      )P
                      /* USED SLOT */
                    , (
                      SELECT H.VSL_CD, H.VOY_NO, H.DIR_CD, H.PORT_CD, H.CALL_IND
                           , SUM(DECODE(C.STATUS,'SM',DECODE(C.CNTR_TYPE,'F',C.QTY,'E',C.QTY,'A',C.QTY,0),0)) +
                               SUM(DECODE(C.STATUS,'SI',DECODE(C.CNTR_TYPE,'F',C.QTY,'E',C.QTY,'A',C.QTY,0),0)) USD_SLT_BSA_QTY
                           , SUM(DECODE(C.STATUS,'SM',DECODE(C.CNTR_TYPE,'F',C.WEIGHT,'E',C.WEIGHT,'A',C.WEIGHT,0),0)) +
                               SUM(DECODE(C.STATUS,'SI',DECODE(C.CNTR_TYPE,'F',C.WEIGHT,'E',C.WEIGHT,'A',C.WEIGHT,0),0)) USD_SLT_WGT
                        FROM TDR_HEADER H, TDR_UTILIZE C
                       WHERE H.VSL_CD    = C.VSL_CD
                         AND H.VOY_NO    = C.VOY_NO
                         AND H.DIR_CD    = C.DIR_CD
                         AND H.PORT_CD   = C.PORT_CD
                         AND H.CALL_IND  = C.CALL_IND
                         AND C.STATUS   IN ('SI','SM')
                         AND (C.OPR_CD, H.VSL_CD, H.VOY_NO, H.DIR_CD) IN (SELECT JO_CRR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD FROM JO_CRR)
                       GROUP BY H.VSL_CD, H.VOY_NO, H.DIR_CD, H.PORT_CD, H.CALL_IND
                      )O,
                      /*1st BSA TEU, 1st BSA WGT 구하기*/
                      (
                      SELECT
                             H.VSL_CD, H.VOY_NO, H.DIR_CD, H.PORT_CD, H.CALL_IND,
                             NVL(SUM(A.BSA_SLOT),0) + NVL(SUM(A.SWAP_SLOT),0) AS FNL_HJS_BSA_QTY,
                             NVL(SUM(A.BSA_WGT),0)  + NVL(SUM(A.SWAP_WGT),0)  AS FNL_BSA_WGT
                      FROM   TDR_HEADER H, TDR_ALLOCATION A
                      WHERE  H.VSL_CD    = A.VSL_CD  
                      AND    H.VOY_NO    = A.VOY_NO  
                      AND    H.DIR_CD    = A.DIR_CD  
                      AND    H.PORT_CD   = A.PORT_CD 
                      AND    H.CALL_IND  = A.CALL_IND
                      AND   (A.OPR_CD, H.VSL_CD, H.VOY_NO, H.DIR_CD) IN (SELECT JO_CRR_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD FROM JO_CRR)
                      GROUP  BY
                             H.VSL_CD, H.VOY_NO, H.DIR_CD, H.PORT_CD, H.CALL_IND
                      ) F
                WHERE A.SKD_DIR_CD   = P.DIR_CD    (+)
                  AND A.UC_BSS_PORT_ETD_DT BETWEEN TO_DATE(P.BSA_SLT_PRC_FM_DT(+),'YYYYMMDDHH24MISS') AND TO_DATE(P.BSA_SLT_PRC_TO_DT(+),'YYYYMMDDHH24MISS')
                  AND A.PORT1        = P.FM_PORT_CD(+)
                  AND A.PORT2        = P.TO_PORT_CD(+)
                  AND A.VSL_CD       = O.VSL_CD    (+)
                  AND A.SKD_VOY_NO   = O.VOY_NO    (+)
                  AND A.SKD_DIR_CD   = O.DIR_CD    (+)
                  AND A.PORT1        = O.PORT_CD   (+)
                  AND A.CLPT_IND_SEQ = O.CALL_IND  (+)
                  AND A.VSL_CD       = F.VSL_CD    (+)
                  AND A.SKD_VOY_NO   = F.VOY_NO    (+)
                  AND A.SKD_DIR_CD   = F.DIR_CD    (+)
                  AND A.PORT1        = F.PORT_CD   (+)
                  AND A.CLPT_IND_SEQ = F.CALL_IND  (+)
               )T,
               (SELECT LOCL_CURR_CD
                  FROM JOO_FINC_MTX
                 WHERE JO_CRR_CD     = @[jo_crr_cd]
                   AND RLANE_CD      = @[rlane_cd]
                   AND RE_DIVR_CD    = @[re_divr_cd]
                   AND JO_STL_ITM_CD = @[jo_stl_itm_cd]
               )E
--2010.03.29 REVERSE된 VVD는 CREATE시 다시 나와야 한다.
       WHERE  (T.VSL_CD, T.SKD_VOY_NO, T.SKD_DIR_CD, T.REV_DIR_CD, T.FM_PORT_CD, T.TO_PORT_CD, 'N') 
       NOT IN (
        SELECT X.VSL_CD, X.SKD_VOY_NO, X.SKD_DIR_CD, X.REV_DIR_CD, X.FM_PORT_CD, X.TO_PORT_CD, NVL(Y.RVS_CMB_FLG,'N') AS RVS_CMB_FLG
        FROM   JOO_SETTLEMENT  X,
               (
               SELECT Y.ACCT_YRMON, Y.STL_VVD_SEQ, Y.STL_SEQ, Z.RVS_CMB_FLG
               FROM   JOO_STL_CMB_DTL Y,
                      JOO_STL_CMB     Z
               WHERE  Y.ACCT_YRMON = Z.ACCT_YRMON
               AND    Y.JO_CRR_CD  = Z.JO_CRR_CD
               AND    Y.STL_CMB_SEQ= Z.STL_CMB_SEQ
               AND    Y.RE_DIVR_CD = Z.RE_DIVR_CD
               ) Y
        WHERE  X.ACCT_YRMON     = Y.ACCT_YRMON  (+)
        AND    X.STL_VVD_SEQ    = Y.STL_VVD_SEQ (+)
        AND    X.STL_SEQ        = Y.STL_SEQ     (+) 
        AND    X.ACCT_YRMON     = REPLACE(@[acct_yrmon],'-','')
        AND    X.JO_CRR_CD      = @[jo_crr_cd]
        AND    X.RE_DIVR_CD     = @[re_divr_cd]
        AND    X.TRD_CD         = @[trd_cd]
        AND    X.RLANE_CD       = @[rlane_cd]
        AND    X.JO_STL_ITM_CD  = @[jo_stl_itm_cd]
        AND    X.JO_MNU_NM      = 'TDR'
      )
           
/*
		WHERE  NOT EXISTS (
                 SELECT 1
                 FROM   JOO_SETTLEMENT X
                 WHERE  X.ACCT_YRMON    = T.ACCT_YRMON
                 AND    X.JO_CRR_CD     = T.JO_CRR_CD
                 AND    X.RE_DIVR_CD    = T.RE_DIVR_CD
                 AND    X.TRD_CD        = T.TRD_CD
                 AND    X.RLANE_CD      = T.RLANE_CD
                 AND    X.JO_STL_ITM_CD = T.JO_STL_ITM_CD
                 AND    X.JO_MNU_NM     = T.JO_MNU_NM
                 AND    X.VSL_CD        = T.VSL_CD
                 AND    X.SKD_VOY_NO    = T.SKD_VOY_NO
                 AND    X.SKD_DIR_CD    = T.SKD_DIR_CD
                 AND    X.REV_DIR_CD    = T.REV_DIR_CD
                 AND    X.FM_PORT_CD    = T.FM_PORT_CD
                 AND    X.TO_PORT_CD    = T.TO_PORT_CD
               )
*/
      )
UNION ALL
SELECT
       'R' AS IBFLAG
       ,A.ACCT_YRMON
       ,A.STL_VVD_SEQ
       ,A.STL_SEQ
       ,A.TRD_CD
       ,A.JO_CRR_CD
       ,A.RLANE_CD
       ,A.RE_DIVR_CD
       ,A.JO_STL_ITM_CD
       ,A.JO_MNU_NM
       ,A.VSL_CD
       ,A.SKD_VOY_NO
       ,A.SKD_DIR_CD
       ,A.REV_DIR_CD
       ,A.STL_BZC_PORT_CD
       ,TO_CHAR(A.ETA_DT,'YYYYMMDDHH24MISS') ETA_DT
       ,A.JO_STL_JB_CD
       ,A.BSA_QTY
       ,A.BSA_SLT_PRC
       ,A.LOCL_CURR_CD
       ,A.ADJ_BSA_QTY_LOCL_AMT
       ,A.ADJ_BSA_SLT_PRC_LOCL_AMT
       ,A.STL_LOCL_AMT
       ,A.STL_USD_AMT
       ,A.IOC_CD
       ,A.SCONTI_CD
       ,A.FNL_HJS_BSA_QTY
       ,A.FNL_BSA_WGT
       ,A.USD_SLT_BSA_QTY
       ,A.USD_SLT_WGT
       ,A.BSA_PER_WGT
       ,A.FM_PORT_CD
       ,A.TO_PORT_CD
       ,A.RF_SCG_STL_TP_CD
       ,A.RF_SCG_PRC
       ,A.STL_RMK
       ,A.CMB_CFM_FLG
       ,B.STL_CMB_SEQ
       ,A.STL_TJ_NO
       ,A.STL_ADJ_FLG
       ,A.PRE_ACCT_YRMON
       ,A.PRE_STL_VVD_SEQ
       ,A.PRE_STL_SEQ
       ,A.STL_LST_FLG
       ,A.UC_BSS_PORT_CD
       ,TO_CHAR(A.UC_BSS_PORT_ETD_DT,'YYYYMMDDHH24MISS') AS UC_BSS_PORT_ETD_DT
       ,B.SLIP_NO
       ,'1' AS CLPT_IND_SEQ
       ,NVL(B.RVS_CMB_FLG,'N') AS RVS_CMB_FLG
FROM   JOO_SETTLEMENT A,
       (
       SELECT
              B.ACCT_YRMON
             ,B.STL_VVD_SEQ
             ,B.STL_SEQ
             ,B.STL_CMB_SEQ
             ,A.SLP_TP_CD||A.SLP_FUNC_CD||A.SLP_OFC_CD||TO_CHAR(TO_DATE(A.SLP_ISS_DT,'YYYYMMDD'),'RRMMDD')||A.SLP_SER_NO AS SLIP_NO
             ,A.RVS_CMB_FLG
             ,A.RJCT_CMB_FLG
       FROM   JOO_STL_CMB     A,
              JOO_STL_CMB_DTL B
       WHERE  A.ACCT_YRMON  = B.ACCT_YRMON
       AND    A.JO_CRR_CD   = B.JO_CRR_CD
       AND    A.STL_CMB_SEQ = B.STL_CMB_SEQ
       AND    A.RE_DIVR_CD  = B.RE_DIVR_CD
       AND    A.ACCT_YRMON  = REPLACE(@[acct_yrmon],'-','')
       AND    A.JO_CRR_CD   = @[jo_crr_cd]
       AND    A.RE_DIVR_CD  = @[re_divr_cd]
       -- 2010.01.06 REVERSE 된 것은 COMBINED NO가 보여져서는 안된다 => 삭제가능하게 
      -- 2010.03.23 REVERSE 된 것은 copy를 하므로 기존 reverse data는 combined no를 보여주도록 한다. (삭제불가)
       --AND    A.RVS_CMB_FLG = 'N'
       --AND    A.RJCT_CMB_FLG = 'N'
       ) B
WHERE  A.ACCT_YRMON    = B.ACCT_YRMON (+)
AND    A.STL_VVD_SEQ   = B.STL_VVD_SEQ(+)
AND    A.STL_SEQ       = B.STL_SEQ    (+)
AND    A.ACCT_YRMON    = REPLACE(@[acct_yrmon],'-','')
AND    A.JO_CRR_CD     = @[jo_crr_cd]
AND    A.RE_DIVR_CD    = @[re_divr_cd]
AND    A.TRD_CD        = @[trd_cd]
AND    A.RLANE_CD      = @[rlane_cd]
AND	   A.JO_STL_ITM_CD = @[jo_stl_itm_cd]
AND    A.JO_MNU_NM     = @[jo_mnu_nm]
ORDER  BY IBFLAG DESC, SKD_DIR_CD, VSL_CD, SKD_VOY_NO, REV_DIR_CD			]]></sql>
			<params>
				<param name="re_divr_cd" type="12" value="R" out="N"/>
				<param name="jo_crr_cd" type="12" value="UAC" out="N"/>
				<param name="trd_cd" type="12" value="AES" out="N"/>
				<param name="rlane_cd" type="12" value="AEXAE" out="N"/>
				<param name="acct_yrmon" type="12" value="200907" out="N"/>
				<param name="jo_stl_itm_cd" type="12" value="S/H" out="N"/>
				<param name="jo_mnu_nm" type="12" value="TDR" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
