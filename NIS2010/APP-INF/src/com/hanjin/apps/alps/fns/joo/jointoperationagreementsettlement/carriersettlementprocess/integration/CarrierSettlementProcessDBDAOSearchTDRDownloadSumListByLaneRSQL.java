/*=========================================================
*Copyright(c) 2013 CyberLogitec
*@FileName : CarrierSettlementProcessDBDAOSearchTDRDownloadSumListByLaneRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2013.11.27
*@LastModifier : 
*@LastVersion : 1.0
* 2013.11.27 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.fns.joo.jointoperationagreementsettlement.carriersettlementprocess.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class CarrierSettlementProcessDBDAOSearchTDRDownloadSumListByLaneRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * History --------------------------------------------------------
	  * 1. 2012.05.11 김창헌 [CHM-201217413-01]
	  *                    [ALPS JOO] TDR Inquiry by VVD 및 RDR Inquiry by Lane
	  *                    - Sum 기능 추가, 정렬순서 및 표시형식 변경
	  * 2. 2012.06.19 김상근 [CHM-201218380]
	  *                   [ALPS JOO] TDR Inquiry by VVD : Additional Slot 칼럼 및 Sub Alloc and Ratio
	  * 3. [2013.01.07] Ticket No  : CHM-201322276
	  *    개발자 : 이수진
	  *    Ticket Title : [ALPS JOO] 모델링 표준에 맞게 처리 되도록 테이블 칼럼 변경 작업 및 기능 변경
	  *    Description  :  JO_REP_CRR_CD_FLG => JO_REP_CRR_FLG으로 컬럼명 변경 작업
	  * </pre>
	  */
	public CarrierSettlementProcessDBDAOSearchTDRDownloadSumListByLaneRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pre_fr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rlane_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pre_to",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.fns.joo.jointoperationagreementsettlement.carriersettlementprocess.integration").append("\n"); 
		query.append("FileName : CarrierSettlementProcessDBDAOSearchTDRDownloadSumListByLaneRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH VSL AS (SELECT VSL_CD," ).append("\n"); 
		query.append("SKD_VOY_NO," ).append("\n"); 
		query.append("SKD_DIR_CD," ).append("\n"); 
		query.append("VPS_PORT_CD," ).append("\n"); 
		query.append("CLPT_IND_SEQ," ).append("\n"); 
		query.append("VPS_ETA_DT," ).append("\n"); 
		query.append("VPS_ETD_DT," ).append("\n"); 
		query.append("SLAN_CD," ).append("\n"); 
		query.append("YD_CD" ).append("\n"); 
		query.append("FROM VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("WHERE SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND ( (VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR VPS_ETD_DT IS NULL )" ).append("\n"); 
		query.append("AND TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(", SRC AS (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT OPR_CD," ).append("\n"); 
		query.append("VSL_CD || VOY_NO || DIR_CD VVD," ).append("\n"); 
		query.append("VSL_CD," ).append("\n"); 
		query.append("VOY_NO  SKD_VOY_NO," ).append("\n"); 
		query.append("DIR_CD  SKD_DIR_CD," ).append("\n"); 
		query.append("PORT_CD  VPS_PORT_CD," ).append("\n"); 
		query.append("SLAN_CD," ).append("\n"); 
		query.append("VPS_ETD_DT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN NVL(SUM (ALL_TEU), 0) <>  0 THEN" ).append("\n"); 
		query.append("NVL(SUM (ALL_TEU), 0)" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("/* ALLOCATION  - TEU : SPC Info Inquiry by VVD */" ).append("\n"); 
		query.append("SELECT NVL(MAX(D.CRR_BSA_CAPA), 0)  ALL_TEU" ).append("\n"); 
		query.append("FROM BSA_VVD_OTR_CRR D" ).append("\n"); 
		query.append("WHERE D.BSA_OP_JB_CD = '007'" ).append("\n"); 
		query.append("AND Y.VSL_CD = D.VSL_CD" ).append("\n"); 
		query.append("AND Y.VOY_NO = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND Y.DIR_CD = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND Y.OPR_CD = D.CRR_CD" ).append("\n"); 
		query.append("AND Y.SLAN_CD  =  SUBSTR(D.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("END ALL_TEU," ).append("\n"); 
		query.append("--SUM (ALL_WGT) ALL_WGT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN NVL(SUM (ALL_WGT), 0) <>  0 THEN" ).append("\n"); 
		query.append("NVL(SUM (ALL_WGT), 0)" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("(   /* ALLOCATION  - WGT : SPC Info Inquiry by VVD */" ).append("\n"); 
		query.append("SELECT NVL(MAX(D.CRR_BSA_CAPA), 0) ALL_WGT" ).append("\n"); 
		query.append("FROM BSA_VVD_OTR_CRR D" ).append("\n"); 
		query.append("WHERE D.BSA_OP_JB_CD = '008'" ).append("\n"); 
		query.append("AND Y.VSL_CD = D.VSL_CD" ).append("\n"); 
		query.append("AND Y.VOY_NO = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND Y.DIR_CD = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND Y.OPR_CD = D.CRR_CD" ).append("\n"); 
		query.append("AND Y.SLAN_CD  =  SUBSTR(D.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("END ALL_WGT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN NVL(MAX (ALL_WGT), 0) <>  0 THEN" ).append("\n"); 
		query.append("1" ).append("\n"); 
		query.append("ELSE" ).append("\n"); 
		query.append("2" ).append("\n"); 
		query.append("END SUB_CHK," ).append("\n"); 
		query.append("SUM (GRAND_TTL_SLOT) GRAND_TTL_SLOT," ).append("\n"); 
		query.append("SUM (GRAND_TTL_WGT) GRAND_TTL_WGT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN SUM (GRAND_TTL_SLOT) > SUM (ALL_TEU) THEN" ).append("\n"); 
		query.append("SUM (GRAND_TTL_SLOT) - SUM (ALL_TEU)" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END OVER_SLOT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN SUM (GRAND_TTL_WGT) > SUM (ALL_WGT) THEN" ).append("\n"); 
		query.append("SUM (GRAND_TTL_WGT) - SUM (ALL_WGT)" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END OVER_WGT," ).append("\n"); 
		query.append("SUM (HC_LD_20) HC_LD_20," ).append("\n"); 
		query.append("SUM (HC_BSA_20) HC_BSA_20," ).append("\n"); 
		query.append("SUM (HC_LD_40) HC_LD_40," ).append("\n"); 
		query.append("SUM (HC_BSA_40) HC_BSA_40," ).append("\n"); 
		query.append("SUM (HC_LD_45) HC_LD_45," ).append("\n"); 
		query.append("SUM (HC_BSA_45) HC_BSA_45," ).append("\n"); 
		query.append("SUM (AK_UNIT) AK_UNIT," ).append("\n"); 
		query.append("SUM (AK_VOID) AK_VOID," ).append("\n"); 
		query.append("SUM (DG_20) DG_20," ).append("\n"); 
		query.append("SUM (DG_40) DG_40," ).append("\n"); 
		query.append("SUM (RF_20_QTY) RF_20_QTY," ).append("\n"); 
		query.append("SUM (RF_40_QTY) RF_40_QTY," ).append("\n"); 
		query.append("SUM (MT_TEU) MT_TEU," ).append("\n"); 
		query.append("SUM (FULL_20) FULL_20," ).append("\n"); 
		query.append("SUM (MT_20) MT_20," ).append("\n"); 
		query.append("SUM (FULL_40) FULL_40," ).append("\n"); 
		query.append("SUM (MT_40) MT_40," ).append("\n"); 
		query.append("SUM (MT_WT) MT_WT," ).append("\n"); 
		query.append("'IST'  SOURCE" ).append("\n"); 
		query.append("FROM" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("/* ALLOCATION  - TEU : Port Step Up/Down by VVD */" ).append("\n"); 
		query.append("SELECT NVL(B.CRR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.SKD_VOY_NO VOY_NO," ).append("\n"); 
		query.append("B.SKD_DIR_CD DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)  PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("MAX(DECODE(B.BSA_OP_JB_CD, '007', B.PORT_BSA_CAPA)) ALL_TEU," ).append("\n"); 
		query.append("ROUND(MAX(DECODE(B.BSA_OP_JB_CD, '016', B.PORT_BSA_CAPA)), 1) ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("0 GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("0 HC_LD_20," ).append("\n"); 
		query.append("0 HC_BSA_20," ).append("\n"); 
		query.append("0 HC_LD_40," ).append("\n"); 
		query.append("0 HC_BSA_40," ).append("\n"); 
		query.append("0 HC_LD_45," ).append("\n"); 
		query.append("0 HC_BSA_45," ).append("\n"); 
		query.append("0 AK_UNIT," ).append("\n"); 
		query.append("0 AK_VOID," ).append("\n"); 
		query.append("0 DG_20," ).append("\n"); 
		query.append("0 DG_40," ).append("\n"); 
		query.append("0 RF_20_QTY," ).append("\n"); 
		query.append("0 RF_40_QTY," ).append("\n"); 
		query.append("0 MT_TEU," ).append("\n"); 
		query.append("0 FULL_20," ).append("\n"); 
		query.append("0 MT_20," ).append("\n"); 
		query.append("0 FULL_40," ).append("\n"); 
		query.append("0 MT_40," ).append("\n"); 
		query.append("0 MT_WT" ).append("\n"); 
		query.append("FROM BSA_VVD_PORT_DWN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.SKD_VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.SKD_DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = 1" ).append("\n"); 
		query.append("AND B.BSA_OP_JB_CD IN ('007','016')" ).append("\n"); 
		query.append("AND B.PORT_SEQ     <> 999" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("AND K.SLAN_CD  =  SUBSTR(B.RLANE_CD, 1, 3)" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.SKD_VOY_NO || B.SKD_DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.CRR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND EXISTS (SELECT 'A'" ).append("\n"); 
		query.append("FROM BAY_PLAN" ).append("\n"); 
		query.append("WHERE VSL_CD = K.VSL_CD" ).append("\n"); 
		query.append("AND VOY_NO = K.SKD_VOY_NO" ).append("\n"); 
		query.append("AND DIR_CD = K.SKD_DIR_CD" ).append("\n"); 
		query.append("AND OPR_CD = B.CRR_CD" ).append("\n"); 
		query.append("AND PORT_CD =B.PORT_CD" ).append("\n"); 
		query.append("AND CALL_IND = K.CLPT_IND_SEQ )" ).append("\n"); 
		query.append("GROUP BY B.CRR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.SKD_VOY_NO," ).append("\n"); 
		query.append("B.SKD_DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* 20HC, 40HC, 45HC, F20, E20, F40, E40 */" ).append("\n"); 
		query.append("SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)  PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("0 ALL_TEU," ).append("\n"); 
		query.append("0 ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("SUM(B.WEIGHT) GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HF1', 1, 0)) HC_LD_20," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HE1', 1, 0)) HC_BSA_20," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HF0', 1, 0)) HC_LD_40," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE || MOD (B.BAY, 2), 'HE0', 1, 0)) HC_BSA_40," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE, 'LF', 1, 0)) HC_LD_45," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE, 'LE', 1, 0)) HC_BSA_45," ).append("\n"); 
		query.append("0 AK_UNIT," ).append("\n"); 
		query.append("0 AK_VOID," ).append("\n"); 
		query.append("0 DG_20," ).append("\n"); 
		query.append("0 DG_40," ).append("\n"); 
		query.append("0 RF_20_QTY," ).append("\n"); 
		query.append("0 RF_40_QTY," ).append("\n"); 
		query.append("0 MT_TEU," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE, '2F', 1, 0)) FULL_20," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE, '2E', 1, 0)) MT_20," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE, '4F', 1, 0)) FULL_40," ).append("\n"); 
		query.append("SUM (DECODE (B.CNTR_SIZE || B.FE, '4E', 1, 0)) MT_40," ).append("\n"); 
		query.append("0 MT_WT" ).append("\n"); 
		query.append("FROM BAY_PLAN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = B.CALL_IND" ).append("\n"); 
		query.append("AND B.PLAN_TYPE= 'F'" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.OPR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY B.OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* DG20, DG40 */" ).append("\n"); 
		query.append("SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1', DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)), DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)) PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("0 ALL_TEU," ).append("\n"); 
		query.append("0 ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("0 GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("0 HC_LD_20," ).append("\n"); 
		query.append("0 HC_BSA_20," ).append("\n"); 
		query.append("0 HC_LD_40," ).append("\n"); 
		query.append("0 HC_BSA_40," ).append("\n"); 
		query.append("0 HC_LD_45," ).append("\n"); 
		query.append("0 HC_BSA_45," ).append("\n"); 
		query.append("0 AK_UNIT," ).append("\n"); 
		query.append("0 AK_VOID," ).append("\n"); 
		query.append("SUM(DECODE(CNTR_SIZE,'2',1, 'H', DECODE(SUBSTR(SZTP_ISO,0,1), '2', 1, 0), 0))DG_20," ).append("\n"); 
		query.append("SUM(DECODE(CNTR_SIZE,'4',1, 'L', 1, 'W', 1, 'X', 1,'H', DECODE(SUBSTR(SZTP_ISO,0,1), '4', 1, 0), 0) ) DG_40," ).append("\n"); 
		query.append("0 RF_20_QTY," ).append("\n"); 
		query.append("0 RF_40_QTY," ).append("\n"); 
		query.append("0 MT_TEU," ).append("\n"); 
		query.append("0 FULL_20," ).append("\n"); 
		query.append("0 MT_20," ).append("\n"); 
		query.append("0 FULL_40," ).append("\n"); 
		query.append("0 MT_40," ).append("\n"); 
		query.append("0 MT_WT" ).append("\n"); 
		query.append("FROM BAY_PLAN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.9999) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = B.CALL_IND" ).append("\n"); 
		query.append("AND B.CARGO_TYPE = 'DG'" ).append("\n"); 
		query.append("AND B.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("AND DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1', 'KRPUS', DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)) = B.PORT_CD" ).append("\n"); 
		query.append("AND DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1',  'KRPUSYG', 'KRPUS', 'KRPUSHN',  B.PORT_CD)   = DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1',  K.YD_CD , 'KRPUS', K.YD_CD ,  K.VPS_PORT_CD)" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.OPR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY B.OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1', DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)), DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL))," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* RF20, RF40 */" ).append("\n"); 
		query.append("SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("--DECODE(B.POL, 'KRPU1', DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.POL), B.POL) PORT_CD, //2012.08.08 수정" ).append("\n"); 
		query.append("DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1', DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)), DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)) PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("0 ALL_TEU," ).append("\n"); 
		query.append("0 ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("0 GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("0 HC_LD_20," ).append("\n"); 
		query.append("0 HC_BSA_20," ).append("\n"); 
		query.append("0 HC_LD_40," ).append("\n"); 
		query.append("0 HC_BSA_40," ).append("\n"); 
		query.append("0 HC_LD_45," ).append("\n"); 
		query.append("0 HC_BSA_45," ).append("\n"); 
		query.append("0 AK_UNIT," ).append("\n"); 
		query.append("0 AK_VOID," ).append("\n"); 
		query.append("0 DG_20," ).append("\n"); 
		query.append("0 DG_40," ).append("\n"); 
		query.append("SUM (DECODE (MOD (B.BAY, 2), 1, 1)) RF_20_QTY," ).append("\n"); 
		query.append("SUM (DECODE (MOD (B.BAY, 2), 0, 1)) RF_40_QTY," ).append("\n"); 
		query.append("0 MT_TEU," ).append("\n"); 
		query.append("0 FULL_20," ).append("\n"); 
		query.append("0 MT_20," ).append("\n"); 
		query.append("0 FULL_40," ).append("\n"); 
		query.append("0 MT_40," ).append("\n"); 
		query.append("0 MT_WT" ).append("\n"); 
		query.append("FROM BAY_PLAN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.9999) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = B.CALL_IND" ).append("\n"); 
		query.append("AND (B.CARGO_TYPE = 'RF' OR TEMP IS NOT NULL)" ).append("\n"); 
		query.append("AND B.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("--AND DECODE(B.POL, 'KRPU1', 'KRPUS', B.POL) = B.PORT_CD     //2012.08.08 수정" ).append("\n"); 
		query.append("AND DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1', 'KRPUS', DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)) = B.PORT_CD" ).append("\n"); 
		query.append("--AND DECODE(B.POL, 'KRPU1',  'KRPUSYG', 'KRPUS', 'KRPUSHN',  B.PORT_CD)   = DECODE(B.POL, 'KRPU1',  K.YD_CD , 'KRPUS', K.YD_CD ,  K.VPS_PORT_CD)    //2012.08.08 수정" ).append("\n"); 
		query.append("AND DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1',  'KRPUSYG', 'KRPUS', 'KRPUSHN',  B.PORT_CD)   = DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1',  K.YD_CD , 'KRPUS', K.YD_CD ,  K.VPS_PORT_CD)" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.OPR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY B.OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("--DECODE(B.POL, 'KRPU1', DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.POL), B.POL),    //2012.08.08 수정" ).append("\n"); 
		query.append("DECODE(DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL), 'KRPU1', DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL)), DECODE(B.POL, 'EGPSE', 'EGPSD', 'CNNGO', 'CNNBO', B.POL))," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* empty */" ).append("\n"); 
		query.append("SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)  PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("0 ALL_TEU," ).append("\n"); 
		query.append("0 ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("0 GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("0 HC_LD_20," ).append("\n"); 
		query.append("0 HC_BSA_20," ).append("\n"); 
		query.append("0 HC_LD_40," ).append("\n"); 
		query.append("0 HC_BSA_40," ).append("\n"); 
		query.append("0 HC_LD_45," ).append("\n"); 
		query.append("0 HC_BSA_45," ).append("\n"); 
		query.append("0 AK_UNIT," ).append("\n"); 
		query.append("0 AK_VOID," ).append("\n"); 
		query.append("0 DG_20," ).append("\n"); 
		query.append("0 DG_40," ).append("\n"); 
		query.append("0 RF_20_QTY," ).append("\n"); 
		query.append("0 RF_40_QTY," ).append("\n"); 
		query.append("SUM (DECODE (MOD (B.BAY, 2), 0, 2, 1)) MT_TEU," ).append("\n"); 
		query.append("0 FULL_20," ).append("\n"); 
		query.append("0 MT_20," ).append("\n"); 
		query.append("0 FULL_40," ).append("\n"); 
		query.append("0 MT_40," ).append("\n"); 
		query.append("SUM (B.WEIGHT) MT_WT" ).append("\n"); 
		query.append("FROM BAY_PLAN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = B.CALL_IND" ).append("\n"); 
		query.append("AND B.FE = 'E'" ).append("\n"); 
		query.append("AND B.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.OPR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY B.OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* 'AK' UNIT */" ).append("\n"); 
		query.append("SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)  PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("0 ALL_TEU," ).append("\n"); 
		query.append("0 ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("0 GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("0 HC_LD_20," ).append("\n"); 
		query.append("0 HC_BSA_20," ).append("\n"); 
		query.append("0 HC_LD_40," ).append("\n"); 
		query.append("0 HC_BSA_40," ).append("\n"); 
		query.append("0 HC_LD_45," ).append("\n"); 
		query.append("0 HC_BSA_45," ).append("\n"); 
		query.append("COUNT (*) AK_UNIT," ).append("\n"); 
		query.append("0 AK_VOID," ).append("\n"); 
		query.append("0 DG_20," ).append("\n"); 
		query.append("0 DG_40," ).append("\n"); 
		query.append("0 RF_20_QTY," ).append("\n"); 
		query.append("0 RF_40_QTY," ).append("\n"); 
		query.append("0 MT_TEU," ).append("\n"); 
		query.append("0 FULL_20," ).append("\n"); 
		query.append("0 MT_20," ).append("\n"); 
		query.append("0 FULL_40," ).append("\n"); 
		query.append("0 MT_40," ).append("\n"); 
		query.append("0 MT_WT" ).append("\n"); 
		query.append("FROM BAY_PLAN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = B.CALL_IND" ).append("\n"); 
		query.append("AND B.CARGO_TYPE IN ('AK', 'BB')" ).append("\n"); 
		query.append("AND B.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.OPR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("GROUP BY B.OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/* 'AK' Void */" ).append("\n"); 
		query.append("SELECT NVL(OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("VSL_CD," ).append("\n"); 
		query.append("VOY_NO," ).append("\n"); 
		query.append("DIR_CD," ).append("\n"); 
		query.append("PORT_CD," ).append("\n"); 
		query.append("SLAN_CD," ).append("\n"); 
		query.append("VPS_ETD_DT," ).append("\n"); 
		query.append("0 ALL_TEU," ).append("\n"); 
		query.append("0 ALL_WGT," ).append("\n"); 
		query.append("0 GRAND_TTL_SLOT," ).append("\n"); 
		query.append("0 GRAND_TTL_WGT," ).append("\n"); 
		query.append("0 OVER_SLOT," ).append("\n"); 
		query.append("0 OVER_WGT," ).append("\n"); 
		query.append("0 HC_LD_20," ).append("\n"); 
		query.append("0 HC_BSA_20," ).append("\n"); 
		query.append("0 HC_LD_40," ).append("\n"); 
		query.append("0 HC_BSA_40," ).append("\n"); 
		query.append("0 HC_LD_45," ).append("\n"); 
		query.append("0 HC_BSA_45," ).append("\n"); 
		query.append("0 AK_UNIT," ).append("\n"); 
		query.append("SUM (CASE" ).append("\n"); 
		query.append("WHEN ACT > 0 THEN" ).append("\n"); 
		query.append("ACT" ).append("\n"); 
		query.append("WHEN X * Y * Z > 0 THEN" ).append("\n"); 
		query.append("(X + 1) * (Y + 1) * (Z + 1) - S" ).append("\n"); 
		query.append("WHEN X * Y > 0 THEN" ).append("\n"); 
		query.append("(X + 1) * (Y + 1) * S - S" ).append("\n"); 
		query.append("WHEN X * Z > 0 THEN" ).append("\n"); 
		query.append("(X + 1) * (Z + 1) - 1 + X * (S - 1)" ).append("\n"); 
		query.append("WHEN Y * Z > 0 THEN" ).append("\n"); 
		query.append("(Y + 1) * (Z + 1) - 1 + Y * (S - 1)" ).append("\n"); 
		query.append("WHEN X + Y > 0 THEN" ).append("\n"); 
		query.append("(X + Y + 1) * S - S" ).append("\n"); 
		query.append("WHEN Z > 0 THEN Z" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END) AS AK_VOID," ).append("\n"); 
		query.append("0 DG_20," ).append("\n"); 
		query.append("0 DG_40," ).append("\n"); 
		query.append("0 RF_20_QTY," ).append("\n"); 
		query.append("0 RF_40_QTY," ).append("\n"); 
		query.append("0 MT_TEU," ).append("\n"); 
		query.append("0 FULL_20," ).append("\n"); 
		query.append("0 MT_20," ).append("\n"); 
		query.append("0 FULL_40," ).append("\n"); 
		query.append("0 MT_40," ).append("\n"); 
		query.append("0 MT_WT" ).append("\n"); 
		query.append("FROM (SELECT NVL(B.OPR_CD, 'ZZZ') OPR_CD," ).append("\n"); 
		query.append("B.VSL_CD," ).append("\n"); 
		query.append("B.VOY_NO," ).append("\n"); 
		query.append("B.DIR_CD," ).append("\n"); 
		query.append("DECODE(K.YD_CD,  'KRPUSYG',  'KRPU1', B.PORT_CD)  PORT_CD," ).append("\n"); 
		query.append("K.SLAN_CD," ).append("\n"); 
		query.append("TO_CHAR (K.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT," ).append("\n"); 
		query.append("NVL (B.OVP_SLOT, 0) + NVL (B.OVS_SLOT, 0) X," ).append("\n"); 
		query.append("NVL (B.OVH_SLOT, 0) Y," ).append("\n"); 
		query.append("NVL (B.OVA_SLOT, 0) + NVL (B.OVF_SLOT, 0) Z," ).append("\n"); 
		query.append("(2 - MOD (B.BAY, 2)) S," ).append("\n"); 
		query.append("TO_NUMBER(ACT_SLOT) ACT" ).append("\n"); 
		query.append("FROM BAY_PLAN B," ).append("\n"); 
		query.append("VSL K" ).append("\n"); 
		query.append("WHERE ( (K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')" ).append("\n"); 
		query.append("AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') +  1) OR K.VPS_ETD_DT IS NULL)" ).append("\n"); 
		query.append("AND K.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("AND K.SKD_VOY_NO = B.VOY_NO" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD = B.DIR_CD" ).append("\n"); 
		query.append("AND K.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("AND K.CLPT_IND_SEQ = B.CALL_IND" ).append("\n"); 
		query.append("AND B.CARGO_TYPE IN ('AK', 'BB')" ).append("\n"); 
		query.append("AND B.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("AND K.SLAN_CD LIKE @[rlane_cd] || '%'" ).append("\n"); 
		query.append("AND K.SKD_DIR_CD LIKE @[skd_dir_cd] || '%'" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("AND B.VSL_CD || B.VOY_NO || B.DIR_CD LIKE @[vvd] || '%'" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND B.OPR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("GROUP BY OPR_CD," ).append("\n"); 
		query.append("VSL_CD," ).append("\n"); 
		query.append("VOY_NO," ).append("\n"); 
		query.append("DIR_CD," ).append("\n"); 
		query.append("PORT_CD," ).append("\n"); 
		query.append("SLAN_CD," ).append("\n"); 
		query.append("VPS_ETD_DT" ).append("\n"); 
		query.append(") Y" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("GROUP BY OPR_CD," ).append("\n"); 
		query.append("VSL_CD," ).append("\n"); 
		query.append("VOY_NO," ).append("\n"); 
		query.append("DIR_CD," ).append("\n"); 
		query.append("PORT_CD," ).append("\n"); 
		query.append("SLAN_CD," ).append("\n"); 
		query.append("VPS_ETD_DT" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT  VVD_ETD_GROUP,OPR_CD, VVD,SLAN_CD,VPS_PORT_CD,VPS_ETD_DT, SUB_CHK," ).append("\n"); 
		query.append("MAX(VSL_CD) VSL_CD, MAX(SKD_VOY_NO) SKD_VOY_NO, MAX(SKD_DIR_CD) SKD_DIR_CD, MAX(SOURCE) SOURCE," ).append("\n"); 
		query.append("SUM(ALL_TEU) ALL_TEU, SUM(ALL_WGT) ALL_WGT, SUM(GRAND_TTL_SLOT) GRAND_TTL_SLOT, SUM(GRAND_TTL_WGT) GRAND_TTL_WGT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN SUM (GRAND_TTL_SLOT) > SUM (ALL_TEU) THEN" ).append("\n"); 
		query.append("SUM (GRAND_TTL_SLOT) - SUM (ALL_TEU)" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END OVER_SLOT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN SUM (GRAND_TTL_WGT) > SUM (ALL_WGT) THEN" ).append("\n"); 
		query.append("SUM (GRAND_TTL_WGT) - SUM (ALL_WGT)" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END OVER_WGT," ).append("\n"); 
		query.append("SUM(HC_LD_20) HC_LD_20, SUM(HC_BSA_20) HC_BSA_20, SUM(HC_LD_40) HC_LD_40, SUM(HC_BSA_40) HC_BSA_40," ).append("\n"); 
		query.append("SUM(HC_LD_45) HC_LD_45, SUM(HC_BSA_45) HC_BSA_45, SUM(AK_UNIT) AK_UNIT," ).append("\n"); 
		query.append("SUM(AK_VOID) AK_VOID, SUM(DG_20) DG_20, SUM(DG_40) DG_40," ).append("\n"); 
		query.append("SUM(RF_20_QTY) RF_20_QTY, SUM(RF_40_QTY) RF_40_QTY," ).append("\n"); 
		query.append("SUM(MT_TEU) MT_TEU, SUM(FULL_20) FULL_20, SUM(MT_20) MT_20, SUM(FULL_40) FULL_40, SUM(MT_40) MT_40, SUM(MT_WT) MT_WT," ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("MAX(JO_20FT_N1ST_RTO)     JO_20FT_N1ST_RTO," ).append("\n"); 
		query.append("MAX(JO_20FT_SUB_TEU_QTY)  JO_20FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("MAX(JO_40FT_N1ST_RTO)     JO_40FT_N1ST_RTO," ).append("\n"); 
		query.append("MAX(JO_40FT_SUB_TEU_QTY)  JO_40FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("MAX(JO_45FT_N1ST_RTO)     JO_45FT_N1ST_RTO," ).append("\n"); 
		query.append("MAX(JO_45FT_N2ND_RTO)     JO_45FT_N2ND_RTO," ).append("\n"); 
		query.append("MAX(JO_45FT_SUB_TEU_QTY)  JO_45FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("MAX(JO_RND_RULE_LVL)      JO_RND_RULE_LVL" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("SELECT  VVD_ETD_GROUP,VVD,SLAN_CD,VPS_PORT_CD,VPS_ETD_DT, SUB_CHK," ).append("\n"); 
		query.append("VSL_CD, SKD_VOY_NO, SKD_DIR_CD," ).append("\n"); 
		query.append("ALL_TEU, ALL_WGT, GRAND_TTL_SLOT, GRAND_TTL_WGT, OVER_SLOT, OVER_WGT," ).append("\n"); 
		query.append("HC_LD_20, HC_BSA_20, HC_LD_40, HC_BSA_40, HC_LD_45, HC_BSA_45, AK_UNIT," ).append("\n"); 
		query.append("AK_VOID, DG_20, DG_40, RF_20_QTY, RF_40_QTY, MT_TEU, FULL_20, MT_20,FULL_40, MT_40, MT_WT, SOURCE," ).append("\n"); 
		query.append("JO_20FT_N1ST_RTO, JO_20FT_SUB_TEU_QTY, JO_40FT_N1ST_RTO,    JO_40FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("JO_45FT_N1ST_RTO, JO_45FT_N2ND_RTO,    JO_45FT_SUB_TEU_QTY, JO_RND_RULE_LVL," ).append("\n"); 
		query.append("JO_CRR_CD OPR_CD" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("SELECT" ).append("\n"); 
		query.append("MIN(T1.VVD || T1.VPS_ETD_DT) OVER (PARTITION BY T1.VVD) AS VVD_ETD_GROUP" ).append("\n"); 
		query.append(",T1.*," ).append("\n"); 
		query.append("NVL(TR.JO_20FT_N1ST_RTO, 0)    JO_20FT_N1ST_RTO," ).append("\n"); 
		query.append("NVL(TR.JO_20FT_SUB_TEU_QTY, 0) JO_20FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("NVL(TR.JO_40FT_N1ST_RTO, 0)    JO_40FT_N1ST_RTO," ).append("\n"); 
		query.append("NVL(TR.JO_40FT_SUB_TEU_QTY, 0) JO_40FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("NVL(TR.JO_45FT_N1ST_RTO, 0)    JO_45FT_N1ST_RTO," ).append("\n"); 
		query.append("NVL(TR.JO_45FT_N2ND_RTO, 0)    JO_45FT_N2ND_RTO," ).append("\n"); 
		query.append("NVL(TR.JO_45FT_SUB_TEU_QTY, 0) JO_45FT_SUB_TEU_QTY," ).append("\n"); 
		query.append("TR.JO_RND_RULE_LVL," ).append("\n"); 
		query.append("TR.JO_CRR_CD" ).append("\n"); 
		query.append("FROM    SRC T1, JOO_TDR_RTO TR" ).append("\n"); 
		query.append("WHERE T1.SLAN_CD = TR.RLANE_CD" ).append("\n"); 
		query.append("AND TR.JO_REP_CRR_FLG = 'Y'" ).append("\n"); 
		query.append("#if (${opr_cd} != '')" ).append("\n"); 
		query.append("AND TR.JO_CRR_CD IN (${opr_cd})" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") T2" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("GROUP BY VVD_ETD_GROUP, OPR_CD, VVD,SLAN_CD, VPS_PORT_CD, VPS_ETD_DT, SUB_CHK" ).append("\n"); 
		query.append("ORDER BY SUBSTR(VVD_ETD_GROUP, 10), VVD, VPS_ETD_DT" ).append("\n"); 

	}
}