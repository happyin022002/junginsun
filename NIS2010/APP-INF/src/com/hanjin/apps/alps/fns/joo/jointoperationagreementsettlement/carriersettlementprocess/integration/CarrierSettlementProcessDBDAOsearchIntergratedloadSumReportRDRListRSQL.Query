<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CarrierSettlementProcessDBDAOsearchIntergratedloadSumReportRDRListRSQL">
			<desc><![CDATA[Intergrated Loging Summary Report 조회]]></desc>
			<sql><![CDATA[
WITH PA AS 
(
            SELECT H.VSL_CD,
                   H.VOY_NO,
                   H.DIR_CD,
                   H.REGION,
                   H.REMARK,
                   H.PORT_CD,
                   TO_CHAR(K.VPS_ETD_DT, 'YYYY-MM-DD')  VPS_ETD_DT,  
                   TO_CHAR(K.VPS_ETA_DT, 'YYYY-MM-DD')  VPS_ETA_DT, 
                   K.VSL_CD||K.SKD_VOY_NO||K.SKD_DIR_CD VVD,
                   K.VPS_PORT_CD,
                   K.CLPT_IND_SEQ,
                   B.JO_CRR_CD,
                   B.TRD_CD,
                   B.RLANE_CD,
                   B.BSA_CAPA,
                   B.RE_DIVR_CD,
                   B.JO_TON_TEU_QTY,
                   B.CGO_TON_WGT,
                   B.JO_TON_WGT_RND_RT,
                   B.JO_40FT_GNTE_QTY,
                   B.JO_40FT_TEU_QTY,
                   B.JO_40FT_RND_RT,
                   B.JO_20FT_GNTE_QTY,
                   B.JO_20FT_TEU_QTY,
                   B.JO_20FT_RND_RT,
                   B.JO_45FT_GNTE_QTY,
                   B.JO_45FT_RND_RT,
                   B.JO_RF_GNTE_OCN_QTY,
                   B.JO_RF_GNTE_INTER_QTY,
                   B.JO_45FT_OVR_TEU_QTY,
                   B.JO_45FT_UND_TEU_QTY,
                   B.SKD_DIR_CD,
                   B.JO_REF_NO           
      FROM RDR_HEADER H,
                 VSK_VSL_PORT_SKD K,
                 JOO_BZC_AGMT B
      WHERE K.VPS_ETD_DT BETWEEN TO_DATE (REPLACE (@[pre_fr], '-', ''), 'YYYYMMDD')
           AND TO_DATE (REPLACE (@[pre_to], '-', ''), 'YYYYMMDD') + 0.99999
           
           #if (${region} != '') 
              AND H.REGION IN (${region}) --Region 
           #end
           
           AND H.VSL_CD = K.VSL_CD
           AND H.VOY_NO = K.SKD_VOY_NO
           AND H.PORT_CD = K.VPS_PORT_CD
           AND H.DIR_CD = K.SKD_DIR_CD

           AND K.CLPT_IND_SEQ = (SELECT MAX(K1.CLPT_IND_SEQ) CLPT_IND_SEQ
                                 FROM  VSK_VSL_PORT_SKD K1
                                 WHERE K1.VSL_CD||K1.SKD_VOY_NO||K1.SKD_DIR_CD||K1.VPS_PORT_CD = 
                                       K.VSL_CD||K.SKD_VOY_NO||K.SKD_DIR_CD||K.VPS_PORT_CD
           #if (${vvd} != '') 
                                   AND K1.VSL_CD||K1.SKD_VOY_NO||K1.SKD_DIR_CD like  @[vvd]||'%'  --VVD 
           #end
                                 )
            
           #if (${vvd} != '') 
               AND K.VSL_CD||K.SKD_VOY_NO||K.SKD_DIR_CD LIKE @[vvd]||'%'  --VVD 
           #end
           
           #if (${re_divr_cd} != '') 
              AND   B.RE_DIVR_CD = @[re_divr_cd]                  --Rev/Exp
           #end
           
           #if (${skd_dir_cd} != '') 
              AND   H.DIR_CD = @[skd_dir_cd]                  --Dir
           #end
           
           AND B.JO_SRC_CD IN ( 'A', 'R', 'C')
           
           #if (${opr_cd} != '') 
              AND B.JO_CRR_CD IN (${opr_cd})                      --Carrier 
           #end
           
           AND K.SLAN_CD = SUBSTR(B.RLANE_CD, 1, 3)
           #if (${rlane_cd} != '') 
               AND  B.RLANE_CD  = @[rlane_cd]         --Lane 
           #end
           AND B.DELT_FLG = 'N'
           AND TO_CHAR(K.VPS_ETD_DT, 'YYYYMMDD') BETWEEN  B.AGMT_EFF_DT AND B.AGMT_EXP_DT
           AND H.DIR_CD = B.SKD_DIR_CD
)
SELECT A.RE_DIVR_CD, --11번
              A.JO_CRR_CD,  --12번
              A.VVD,             -- 13번
              H.PORT_CD,      -- 14번
              H.VPS_ETD_DT,  -- 15번
              A.ALLOC_TEU + A.JO_ALOC_ADJ_TEU_QTY  ALLOC_TEU,     -- 16번
              
     CASE WHEN A.JO_ALOC_ADJ_WGT > 0
           THEN A.JO_ALOC_ADJ_WGT
           ELSE (A.ALLOC_TEU + A.JO_ALOC_ADJ_TEU_QTY) *  H.JO_TON_TEU_QTY
           END ALLOC_WT,-- 17번

            CASE WHEN  A.FULL_20HC > H.JO_20FT_GNTE_QTY
                  THEN                                                       
                      DECODE(H.JO_20FT_RND_RT, 1, ROUND((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                               2, CEIL((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                                  FLOOR((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)))
                  ELSE 0
             END +
             CASE WHEN  A.FULL_40HC > H.JO_40FT_GNTE_QTY
                  THEN                                                       
                      DECODE(H.JO_40FT_RND_RT, 1, ROUND((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                               2, CEIL((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                                   FLOOR((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)))
                  ELSE 0
             END +
             CASE WHEN  A.FULL_45 <= H.JO_45FT_GNTE_QTY
                  THEN DECODE(H.JO_45FT_RND_RT, 1, ROUND(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                2, CEIL(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                   FLOOR(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)))
                  ELSE   DECODE(H.JO_45FT_RND_RT, 1, ROUND((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                  2, CEIL((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                     FLOOR((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )))
             END +
             A.AK_VOID + A.JO_VOID_TEU_QTY + A.TOTAL_TEU  ACTU_TEU,           -- 18번
                    
                    
       A.AK_VOID      ACTU_TEU_AK_VOID,         
             A.JO_VOID_TEU_QTY    ACTU_TEU_JO_VOID_TEU_QTY,  
                  A.TOTAL_TEU     ACTU_TEU_TOTAL_TEU,             
                    
                    
                    
              A.ACTU_WT,                                                             -- 19번
              
             CASE WHEN  A.FULL_20HC > H.JO_20FT_GNTE_QTY
                  THEN                                                       
                      DECODE(H.JO_20FT_RND_RT, 1, ROUND((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                               2, CEIL((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                                  FLOOR((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)))
                  ELSE 0
             END    ADD_20HC_TEU,  -- 39번                                           
              
             CASE WHEN  A.FULL_40HC > H.JO_40FT_GNTE_QTY
                  THEN                                                       
                      DECODE(H.JO_40FT_RND_RT, 1, ROUND((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                               2, CEIL((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                                   FLOOR((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)))
                  ELSE 0
             END    ADD_40HC_TEU,       -- 20번 

              CASE WHEN  A.FULL_45 <= H.JO_45FT_GNTE_QTY
                    THEN DECODE(H.JO_45FT_RND_RT, 1, ROUND(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                                         2, CEIL(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                                             FLOOR(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)))
                    ELSE   DECODE(H.JO_45FT_RND_RT, 1, ROUND((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                                           2, CEIL((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                                               FLOOR((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )))
                    END AS ADD_45_TEU,               -- 21번
              A.AK_VOID + A.JO_VOID_TEU_QTY AK_JO_VOID_TEU_QTY,    -- 22번
              A.FULL_20,                       -- 23번
              A.FULL_20HC,                     -- 40번
              A.FULL_40,                       -- 24번
              A.FULL_40HC,                  -- 25번
              A.FULL_45,                      -- 26번
              A.TOTAL_TEU,                 -- 27번

             CASE WHEN 
                        (CASE WHEN  A.FULL_20HC > H.JO_20FT_GNTE_QTY
                            THEN                                                       
                                DECODE(H.JO_20FT_RND_RT, 1, ROUND((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                                         2, CEIL((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                                            FLOOR((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)))
                            ELSE 0
                       END +
                       CASE WHEN  A.FULL_40HC > H.JO_40FT_GNTE_QTY
                            THEN                                                       
                                DECODE(H.JO_40FT_RND_RT, 1, ROUND((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                                         2, CEIL((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                                             FLOOR((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)))
                            ELSE 0
                       END +
                       CASE WHEN  A.FULL_45 <= H.JO_45FT_GNTE_QTY
                            THEN DECODE(H.JO_45FT_RND_RT, 1, ROUND(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                          2, CEIL(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                             FLOOR(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)))
                            ELSE   DECODE(H.JO_45FT_RND_RT, 1, ROUND((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                            2, CEIL((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                               FLOOR((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )))
                       END +
                       A.AK_VOID + A.JO_VOID_TEU_QTY + A.TOTAL_TEU) - (A.ALLOC_TEU + A.JO_ALOC_ADJ_TEU_QTY)
                    <= 0
             THEN 0
             ELSE    
                   (CASE WHEN  A.FULL_20HC > H.JO_20FT_GNTE_QTY
                            THEN                                                       
                                DECODE(H.JO_20FT_RND_RT, 1, ROUND((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                                         2, CEIL((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)),
                                                            FLOOR((A.FULL_20HC - H.JO_20FT_GNTE_QTY ) * (H.JO_20FT_TEU_QTY - 1)))
                            ELSE 0
                       END +
                       CASE WHEN  A.FULL_40HC > H.JO_40FT_GNTE_QTY
                            THEN                                                       
                                DECODE(H.JO_40FT_RND_RT, 1, ROUND((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                                         2, CEIL((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)),
                                                             FLOOR((A.FULL_40HC - H.JO_40FT_GNTE_QTY ) * (H.JO_40FT_TEU_QTY - 2)))
                            ELSE 0
                       END +
                       CASE WHEN  A.FULL_45 <= H.JO_45FT_GNTE_QTY
                            THEN DECODE(H.JO_45FT_RND_RT, 1, ROUND(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                          2, CEIL(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)),
                                                             FLOOR(A.FULL_45 * (H.JO_45FT_UND_TEU_QTY - 2)))
                            ELSE   DECODE(H.JO_45FT_RND_RT, 1, ROUND((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                            2, CEIL((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )),
                                                               FLOOR((H.JO_45FT_GNTE_QTY * (H.JO_45FT_UND_TEU_QTY - 2)) + ((A.FULL_45 - H.JO_45FT_GNTE_QTY) * ( H.JO_45FT_OVR_TEU_QTY - 2) )))
                       END +
                       A.AK_VOID + A.JO_VOID_TEU_QTY + A.TOTAL_TEU) - (A.ALLOC_TEU + A.JO_ALOC_ADJ_TEU_QTY)
             
              END      OVER_LONG_TEU,      -- 28번   
              
             CASE WHEN 
                      A.ACTU_WT - (CASE WHEN A.JO_ALOC_ADJ_WGT > 0
                                     THEN A.JO_ALOC_ADJ_WGT
                                     ELSE (A.ALLOC_TEU + A.JO_ALOC_ADJ_TEU_QTY) *  H.JO_TON_TEU_QTY
                                     END)
                         <= 0
             THEN 0
             ELSE  
                       A.ACTU_WT - (CASE WHEN A.JO_ALOC_ADJ_WGT > 0
                                       THEN A.JO_ALOC_ADJ_WGT
                                       ELSE (A.ALLOC_TEU + A.JO_ALOC_ADJ_TEU_QTY) *  H.JO_TON_TEU_QTY
                                       END)  
              END      OVER_LONG_WT,  -- 29번 

              A.JO_SHRT_LEG_RMK_TEU_QTY,           -- 30번
              A.JO_SHRT_LEG_RMK_WGT,               -- 31번
              A.JO_SHRT_LEG_RMK_SCTR_NM,          -- 32번
              --A.RF_O + A.JO_RF_OCN_QTY  RF_O,      -- 33번
              --A.RF_I + A.JO_RF_IPT_QTY  RF_I,      -- 34번
              
               CASE WHEN JO_RF_GNTE_OCN_QTY > A.RF_O + A.JO_RF_OCN_QTY THEN 0
               ELSE A.RF_O + A.JO_RF_OCN_QTY - JO_RF_GNTE_OCN_QTY
               END RF_O,      -- 33번
               
               CASE WHEN JO_RF_GNTE_INTER_QTY > A.RF_I + A.JO_RF_IPT_QTY THEN 0
               ELSE A.RF_I + A.JO_RF_IPT_QTY - JO_RF_GNTE_INTER_QTY
               END RF_I,      -- 34번
               
              A.MT_TEU,                            -- 35번
              A.MT_WT,                             -- 36번
              A.REMARK_YN,                         -- 37번
              A.JO_ALOC_ADJ_RMK_YN,                -- 38번
              A.REMARK ,                           -- 37번 팝업 내의 REMARK
              A.JO_RF_OCN_QTY,                     -- 37번 팝업 내의 33번
              A.JO_RF_IPT_QTY,                     -- 37번 팝업 내의 34번
              A.JO_VOID_TEU_QTY,                   -- 37번 팝업 내의 22번
              A.JO_ALOC_ADJ_TEU_QTY,               -- 38번 팝업 내의 TEU
              A.JO_ALOC_ADJ_WGT                   -- 38번 팝업 내의 WT
             -- A.JO_ALOC_ADJ_RMK                    -- 38번 팝업 내의 REMARK
FROM
      (
        SELECT RE_DIVR_CD,                         -- 11번
                      JO_CRR_CD,                   --12번
                      VVD,                         -- 13번
                      MAX(PORT_CD) PORT_CD ,       -- 14번
                      MAX(VPS_ETD_DT) VPS_ETD_DT , -- 15번
                      MAX(ALLOC_TEU) ALLOC_TEU ,   -- 16번
                      MAX(ALLOC_WT) ALLOC_WT,      -- 17번
                      SUM(ACTU_WT)  ACTU_WT,       -- 19번
                      SUM(AK_VOID)  AK_VOID,       --22번
                      SUM(FULL_20) FULL_20 ,       --23번
                      SUM(FULL_20HC) FULL_20HC,    --40번
                      SUM(FULL_40) FULL_40,        --24번
                      SUM(FULL_40HC) FULL_40HC,    -- 25번
                      SUM(FULL_45) FULL_45,        -- 26번
                      ((SUM(FULL_40) + SUM(FULL_40HC) +SUM(FULL_45)) * 2) + SUM(FULL_20) + SUM(FULL_20HC) TOTAL_TEU, -- 27번
                      --SUM(FULL_20) + SUM(FULL_40) + SUM(FULL_40HC) +SUM(FULL_45)  TOTAL_TEU, -- 27번
                      --SUM(TOTAL_TEU) TOTAL_TEU,  -- 27번
                      SUM(RF_O)  RF_O,             -- 33번
                      SUM(RF_I)  RF_I,             -- 34번
                      SUM(MT_TEU)  MT_TEU,         -- 35번
                      SUM(MT_WT)  MT_WT,           -- 36번
                      NVL2 (MAX (REMARK), 'Yes', 'No') REMARK_YN,   -- 37번
                      MAX(REMARK) REMARK ,                                      -- 37번 팝업 내의 REMARK
                      SUM(JO_SHRT_LEG_RMK_TEU_QTY) JO_SHRT_LEG_RMK_TEU_QTY,     -- 37번 팝업 내의 30번
                      SUM(JO_SHRT_LEG_RMK_WGT) JO_SHRT_LEG_RMK_WGT,             -- 37번 팝업 내의 31번
                      MAX(JO_SHRT_LEG_RMK_SCTR_NM) JO_SHRT_LEG_RMK_SCTR_NM,   -- 37번 팝업 내의 32번
                      SUM(JO_RF_OCN_QTY) JO_RF_OCN_QTY,                         -- 37번 팝업 내의 33번
                      SUM(JO_RF_IPT_QTY) JO_RF_IPT_QTY,                         -- 37번 팝업 내의 34번
                      SUM(JO_VOID_TEU_QTY) JO_VOID_TEU_QTY,                     -- 37번 팝업 내의 22번
                      NVL2 (MAX (JO_ALOC_ADJ_RMK), 'Yes', 'No') JO_ALOC_ADJ_RMK_YN,   -- 38번
                      SUM(JO_ALOC_ADJ_TEU_QTY) JO_ALOC_ADJ_TEU_QTY,             -- 38번 팝업 내의 TEU
                      SUM(JO_ALOC_ADJ_WGT) JO_ALOC_ADJ_WGT,                     -- 38번 팝업 내의 WT
                      MAX(JO_ALOC_ADJ_RMK) JO_ALOC_ADJ_RMK                      -- 38번 팝업 내의 REMARK
        FROM 
        (  
               /*  16번 CRR_CD */
                SELECT DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD,     -- 11번
                              H.JO_CRR_CD,                 --12번
                              H.VVD,                       -- 13번
                              '' PORT_CD,                  -- 14번
                              '' VPS_ETD_DT,               -- 15번
                              SUM(D.CRR_BSA_CAPA)  ALLOC_TEU,   -- 16번
                              0  ALLOC_WT,                 -- 17번
                              0  ACTU_WT,                  -- 19번
                              0 AK_VOID,                   -- 22번
                              0 FULL_20,                   -- 23번
                              0 FULL_20HC,                 -- 40번
                              0 FULL_40,                   -- 24번
                              0 FULL_40HC,                 -- 25번
                              0 FULL_45,                   -- 26번
                              0 RF_O,                      -- 33번 
                              0 RF_I,                      -- 34번
                              0 MT_TEU,                    -- 35번
                              0 MT_WT,                     -- 36번
                              MAX(H.REMARK) REMARK ,       -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK
                FROM MAS_MON_VVD A, 
                     MAS_LANE_RGST B,
                     BSA_VVD_MST C, 
                     BSA_VVD_OTR_CRR D
                    ,BSA_VVD_SWAP_INFO F 
                    ,PA H
                    ,JOO_BZC_AGMT_CRR R
                WHERE A.TRD_CD     = C.TRD_CD 
                  AND A.RLANE_CD   = C.RLANE_CD 
                  AND A.IOC_CD     = C.IOC_CD 
                  AND A.VSL_CD     = C.VSL_CD 
                  AND A.SKD_VOY_NO = C.SKD_VOY_NO 
                  AND A.DIR_CD     = C.SKD_DIR_CD 
                  AND A.TRD_CD     = B.TRD_CD 
                  AND A.RLANE_CD   = B.RLANE_CD 
                  AND A.DIR_CD     = B.DIR_CD 
                  AND A.IOC_CD     = B.IOC_CD 
                  AND C.TRD_CD     = D.TRD_CD(+) 
                  AND C.RLANE_CD   = D.RLANE_CD(+) 
                  AND C.VSL_CD     = D.VSL_CD(+) 
                  AND C.SKD_VOY_NO = D.SKD_VOY_NO(+) 
                  AND C.SKD_DIR_CD = D.SKD_DIR_CD(+) 
                  AND D.TRD_CD     = F.TRD_CD(+) 
                  AND D.RLANE_CD   = F.RLANE_CD(+) 
                  AND D.VSL_CD     = F.VSL_CD(+) 
                  AND D.SKD_VOY_NO = F.SKD_VOY_NO(+) 
                  AND D.SKD_DIR_CD = F.SKD_DIR_CD(+) 
                  AND D.BSA_OP_JB_CD= F.BSA_OP_JB_CD(+) 
                  AND D.CRR_CD      = F.CRR_CD(+) 
                  AND NVL(A.DELT_FLG,'N') = 'N' 
                  AND D.BSA_OP_JB_CD(+) = '007'
                  
                  AND H.RLANE_CD = A.RLANE_CD
                  
                  --AND H.JO_CRR_CD = R.JO_REP_CRR_CD
                  --AND R.JO_CRR_CD = D.CRR_CD
                  
                  AND H.JO_REF_NO = R.JO_REF_NO
                  AND R.JO_CRR_CD = D.CRR_CD
                  AND H.VVD = C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD
                  --AND A.RLANE_CD = R.RLANE_CD
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD
                
                UNION ALL
                
               /*  19번 CRR_CD  <> 'SML'  */
                SELECT DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD,     -- 11번
                              H.JO_CRR_CD,                 --12번
                              H.VVD,                       -- 13번
                              '' PORT_CD,                  -- 14번
                              '' VPS_ETD_DT,               -- 15번
                              0   ALLOC_TEU,   -- 16번
                              0  ALLOC_WT,                 -- 17번
                              SUM(A.WEIGHT) ACTU_WT,       -- 19번
                              0 AK_VOID,                   -- 22번
                              0 FULL_20,                   -- 23번
                              0 FULL_20HC,                 -- 40번
                              0 FULL_40,                   -- 24번
                              0 FULL_40HC,                 -- 25번
                              0 FULL_45,                   -- 26번
                              0 RF_O,                      -- 33번 
                              0 RF_I,                      -- 34번
                              0 MT_TEU,                    -- 35번
                              0 MT_WT,                     -- 36번
                              MAX(H.REMARK) REMARK ,       -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK
                FROM PA H,
                          RDR_UTILIZE A,
                          JOO_BZC_AGMT_CRR C
                WHERE 1 = 1
                     AND H.VSL_CD = A.VSL_CD
                     AND H.VOY_NO = A.VOY_NO
                     AND H.DIR_CD = A.DIR_CD
                     AND H.REGION = A.REGION
                     --AND H.RLANE_CD = C.RLANE_CD
                     --AND H.JO_CRR_CD = C.JO_REP_CRR_CD
                     
                     AND H.JO_REF_NO = C.JO_REF_NO
                     --AND C.JO_CRR_CD = D.CRR_CD
                  
                     AND C.JO_CRR_CD = A.OPR_CD
                     AND H.JO_CRR_CD <> 'SML'
                GROUP BY H. RE_DIVR_CD, H.JO_CRR_CD, H.VVD, H.PORT_CD, H.VPS_ETD_DT, H.JO_TON_TEU_QTY
                
                 UNION ALL
                
                 /* 19번   CRR_CD = 'SML' */
                 SELECT DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD,  -- 11번
                              H.JO_CRR_CD,                    --12번
                              H.VVD,                          -- 13번
                              '' PORT_CD,                     -- 14번
                              '' VPS_ETD_DT,                  -- 15번
                              0  ALLOC_TEU,  -- 16번
                              0  ALLOC_WT,                    -- 17번
                              SUM(A.WEIGHT) ACTU_WT,          -- 19번
                              0 AK_VOID,                      -- 22번
                              0 FULL_20,                      -- 23번
                              0 FULL_20HC,                    -- 40번
                              0 FULL_40,                      -- 24번
                              0 FULL_40HC,                    -- 25번
                              0 FULL_45,                      -- 26번
                              0 RF_O,                         -- 33번
                              0 RF_I,                         -- 34번
                              0 MT_TEU,                       -- 35번
                              0 MT_WT,                        -- 36번
                              MAX(H.REMARK)  REMARK,          -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,      -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,          -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,     -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,                -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,                -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,              -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,          -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,              -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK              -- 38번 팝업 내의 REMARK
                FROM PA H,
                          RDR_UTILIZE A,
                          JOO_BZC_AGMT_CRR C
                WHERE 1 = 1
                     AND H.JO_CRR_CD =  'SML'
                     AND H.VSL_CD = A.VSL_CD
                     AND H.VOY_NO = A.VOY_NO
                     AND H.DIR_CD = A.DIR_CD
                     AND H.REGION = A.REGION
                     --AND H.RLANE_CD = C.RLANE_CD
                     --AND H.JO_CRR_CD = C.JO_REP_CRR_CD
                     AND H.JO_REF_NO = C.JO_REF_NO
                     AND C.JO_CRR_CD = A.OPR_CD
                GROUP BY H. RE_DIVR_CD, H.JO_CRR_CD, H.VVD, H.PORT_CD, H.VPS_ETD_DT, H.JO_TON_TEU_QTY
                               
                UNION ALL
                /* 'AK' Void  22번 */
                 SELECT RE_DIVR_CD,           -- 11번
                              JO_CRR_CD,      --12번
                              VVD,            -- 13번
                              '' PORT_CD,     -- 14번
                              '' VPS_ETD_DT,  -- 15번
                              0 ALLOC_TEU,    -- 16번
                              0  ALLOC_WT,    -- 17번
                              0  ACTU_WT,     -- 19번
                              SUM (CASE
                              WHEN ACT > 0 THEN
                                          ACT
                                       WHEN X * Y * Z > 0 THEN
                                          (X + 1) * (Y + 1) * (Z + 1) - S
                                       WHEN X * Y > 0 THEN
                                          (X + 1) * (Y + 1) * S - S
                                       WHEN X * Z > 0 THEN
                                          (X + 1) * (Z + 1) - 1 + X * (S - 1)
                                       WHEN Y * Z > 0 THEN
                                          (Y + 1) * (Z + 1) - 1 + Y * (S - 1)
                                       WHEN X + Y > 0 THEN
                                          (X + Y + 1) * S - S
                                       WHEN Z > 0 THEN Z
                                       ELSE 0
                                    END) AS AK_VOID,       -- 22번
                              0 FULL_20,                   -- 23번
                              0 FULL_20HC,                 -- 40번
                              0 FULL_40,                   -- 24번
                              0 FULL_40HC,                 -- 25번
                              0 FULL_45,                   -- 26번
                              0 RF_O,                      -- 33번
                              0 RF_I,                      -- 34번
                              0 MT_TEU,                    -- 35번
                              0 MT_WT,                     -- 36번
                              '' REMARK ,                  -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK                                    
                FROM (
                              SELECT  DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD,
                                              H.JO_CRR_CD,
                                              H.VVD,
                                             NVL (B.OVP_SLOT, 0) + NVL (B.OVS_SLOT, 0) X,
                                             NVL (B.OVH_SLOT, 0) Y,
                                             NVL (B.OVA_SLOT, 0) + NVL (B.OVF_SLOT, 0) Z,
                                             (2 - MOD (B.BAY, 2)) S,
                                             TO_NUMBER(ACT_SLOT) ACT 
                              FROM PA H,
                                        BAY_PLAN B,
                                        JOO_BZC_AGMT_CRR C
                              WHERE 1 = 1
                                   AND H.VSL_CD = B.VSL_CD
                                   AND H.VOY_NO = B.VOY_NO
                                   AND H.DIR_CD = B.DIR_CD
                                   --AND H.RLANE_CD = C.RLANE_CD
                                   --AND H.JO_CRR_CD = C.JO_REP_CRR_CD
                                   AND H.JO_REF_NO = C.JO_REF_NO
                                   AND C.JO_CRR_CD = B.OPR_CD
                                   AND H.VPS_PORT_CD = B.PORT_CD
                                   AND H.CLPT_IND_SEQ = B.CALL_IND
                                   AND B.PLAN_TYPE = 'F'
                                   
                              )
                GROUP BY RE_DIVR_CD, JO_CRR_CD, VVD
                
                UNION ALL
                /* 20', 40', 40HC, 45'  LOADING */
               SELECT  DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD, --11번
                              H.JO_CRR_CD,                 --12번
                              H.VVD,                       -- 13번
                              '' PORT_CD,                  -- 14번
                              '' VPS_ETD_DT,               -- 15번
                              0 ALLOC_TEU,                 -- 16번
                              0  ALLOC_WT,                 -- 17번
                              0  ACTU_WT,                  -- 19번
                              0 AK_VOID,                   -- 22번                              
                              SUM (DECODE (B.CNTR_SIZE, '2', 1, 0)) FULL_20,  -- 23번
                              SUM (DECODE (b.cntr_size, 'H', DECODE(SUBSTR(SZTP_ISO,0,1),'2', 1, 0) )) FULL_20HC,  -- 40번
                              
                              SUM (DECODE (B.CNTR_SIZE, '4', 1, 0)) FULL_40,                                                                    -- 24번
                              SUM (DECODE (b.cntr_size, 'H', DECODE(SUBSTR(SZTP_ISO,0,1),'2', 0, 1) )) FULL_40HC,           -- 25번
                              SUM (DECODE (b.cntr_size, 'L', 1, 0)) FULL_45 ,         -- 26번
                              0 RF_O,                      -- 33번
                              0 RF_I,                      -- 34번
                              0 MT_TEU,                    -- 35번
                              0 MT_WT,                     -- 36번
                              '' REMARK ,                  -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK
                  FROM PA H,
                       BAY_PLAN B,
                       JOO_BZC_AGMT_CRR C,
                        (SELECT MAX(D.CALL_IND) CALL_IND, D.VSL_CD||D.VOY_NO||D.DIR_CD VVD
                         FROM  BAY_PLAN D, PA H
                        WHERE D.VSL_CD = H.VSL_CD
                         AND D.VOY_NO = H.VOY_NO
                         AND D.DIR_CD = H.DIR_CD
                        GROUP BY  D.VSL_CD||D.VOY_NO||D.DIR_CD
                        ) D                                    
                  WHERE 1 = 1
                       AND H.VSL_CD = B.VSL_CD
                       AND H.VOY_NO = B.VOY_NO
                       AND H.DIR_CD = B.DIR_CD
                       AND H.JO_REF_NO = C.JO_REF_NO
                       
                       AND C.JO_CRR_CD = B.OPR_CD
                       AND H.VPS_PORT_CD = B.PORT_CD
                       
                       AND D.VVD = H.VSL_CD||H.VOY_NO||H.DIR_CD
                       AND D.CALL_IND = B.CALL_IND

                       AND B.PLAN_TYPE = 'F'
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD
                      
                UNION ALL      
                /* RF_O */
                SELECT DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD, --11번
                              H.JO_CRR_CD,                 --12번
                              H.VVD,                       -- 13번
                              '' PORT_CD,                  -- 14번
                              '' VPS_ETD_DT,               -- 15번
                              0 ALLOC_TEU,                 -- 16번
                              0 ALLOC_WT,                  -- 17번
                              0 ACTU_WT,                   -- 19번
                              0 AK_VOID,                   -- 22번
                              0 FULL_20,                   -- 23번
                              0 FULL_20HC,                 -- 40번
                              0 FULL_40,                   -- 24번
                              0 FULL_40HC,                 --25 번
                              0 FULL_45,                   --26 번
                              SUM (DECODE (M.CNTR_SIZE, '2', 1, '3', 1, 0)) + SUM (DECODE (M.CNTR_SIZE, '4', 1, 'H', 1, 'L', 1, 0)) RF_O,  -- 33 번
                              0 RF_I,                      -- 34 번
                              0 MT_TEU,                    -- 35번
                              0 MT_WT,                     -- 36번
                              '' REMARK ,                  -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK
                  FROM PA H,
                             RDR_CNTR_DETAIL M,
                             JOO_BZC_AGMT_CRR C
                 WHERE H.VSL_CD = M.VSL_CD
                      AND H.VOY_NO = M.VOY_NO
                      AND H.DIR_CD = M.DIR_CD
                      AND M.TEMP IS NOT NULL
                      AND M.CARGO_TYPE != 'IR'
                      AND H.REGION = M.REGION
                      --AND H.RLANE_CD = C.RLANE_CD
                      --AND H.JO_CRR_CD = C.JO_REP_CRR_CD
                      AND H.JO_REF_NO = C.JO_REF_NO
                      AND C.JO_CRR_CD = M.OPR_CD
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD
                
                UNION ALL      
                /* RF_I */
                SELECT DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD, --11번
                              H.JO_CRR_CD,    --12번
                              H.VVD,          -- 13번
                              '' PORT_CD,     -- 14번
                              '' VPS_ETD_DT,  -- 15번
                              0 ALLOC_TEU,    -- 16번
                              0 ALLOC_WT,     -- 17번
                              0 ACTU_WT,      -- 19번
                              0 AK_VOID,      -- 22번
                              0 FULL_20,      -- 23번
                              0 FULL_20HC,    -- 40번
                              0 FULL_40,      -- 24번
                              0 FULL_40HC,    --25 번
                              0 FULL_45,      --26 번
                              0  RF_O,        -- 33  번
                              SUM (DECODE (M.CNTR_SIZE, '2', 1, '3', 1, 0)) + SUM (DECODE (M.CNTR_SIZE, '4', 1, 'H', 1, 'L', 1, 0)) RF_I,  -- 34  번
                              0 MT_TEU,       -- 35번
                              0 MT_WT,        -- 36번
                              '' REMARK ,                  -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK
                  FROM PA H,
                             RDR_CNTR_DETAIL M,
                             JOO_BZC_AGMT_CRR C
                 WHERE H.VSL_CD = M.VSL_CD
                      AND H.VOY_NO = M.VOY_NO
                      AND H.DIR_CD = M.DIR_CD
                      AND M.TEMP IS NOT NULL
                      AND M.CARGO_TYPE = 'IR'
                      AND H.REGION = M.REGION
                      --AND H.RLANE_CD = C.RLANE_CD
                      --AND H.JO_CRR_CD = C.JO_REP_CRR_CD
                      AND H.JO_REF_NO = C.JO_REF_NO
                      AND C.JO_CRR_CD = M.OPR_CD
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD
                
                UNION ALL
                /* EMPTY TEU, WT  */
               SELECT  DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD, --11번
                              H.JO_CRR_CD,    --12번
                              H.VVD,          -- 13번
                              '' PORT_CD,     -- 14번
                              '' VPS_ETD_DT,  -- 15번
                              0 ALLOC_TEU,    -- 16번
                              0  ALLOC_WT,    -- 17번
                              0  ACTU_WT,     -- 19번
                              0 AK_VOID,      -- 22번
                              0 FULL_20,      -- 23번
                              0 FULL_20HC,    -- 40번
                              0 FULL_40,      -- 24번
                              0 FULL_40HC,    -- 25번
                              0 FULL_45,      -- 26번
                              0 RF_O,         -- 33번
                              0 RF_I,         -- 34번
                              SUM (DECODE (MOD (B.BAY, 2), 0, 2, 1)) MT_TEU,   -- 35번
                              SUM (B.WEIGHT) MT_WT,        -- 36번
                              '' REMARK ,                  -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,   -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,       -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,  -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,             -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,             -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,           -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,       -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,           -- 38번 팝업 내의 WT
                              '' JO_ALOC_ADJ_RMK           -- 38번 팝업 내의 REMARK
                  FROM PA H,
                            BAY_PLAN B,
                            JOO_BZC_AGMT_CRR C
                  WHERE 1 = 1
                       AND H.VSL_CD = B.VSL_CD
                       AND H.VOY_NO = B.VOY_NO
                       AND H.DIR_CD = B.DIR_CD
                       --AND H.RLANE_CD = C.RLANE_CD
                       --AND H.JO_CRR_CD = C.JO_REP_CRR_CD
                       AND H.JO_REF_NO = C.JO_REF_NO
                       AND C.JO_CRR_CD = B.OPR_CD
                       AND H.VPS_PORT_CD = B.PORT_CD
                       AND H.CLPT_IND_SEQ = B.CALL_IND
                       AND B.PLAN_TYPE = 'F' 
                       AND B.FE = 'E' 
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD       
                
                UNION ALL
                  /* JOO_INTG_LODG_SMRY  DATA 산출  */
               SELECT  DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD, --11번
                              H.JO_CRR_CD,    --12번
                              H.VVD,          -- 13번
                              '' PORT_CD,     -- 14번
                              '' VPS_ETD_DT,  -- 15번
                              0 ALLOC_TEU,    -- 16번
                              0  ALLOC_WT,    -- 17번
                              0  ACTU_WT,     -- 19번
                              0 AK_VOID,      -- 22번
                              0 FULL_20,      -- 23번
                              0 FULL_20HC,    -- 40번
                              0 FULL_40,      -- 24번
                              0 FULL_40HC,    -- 25번
                              0 FULL_45,      -- 26번
                              0 RF_O,         -- 33번
                              0 RF_I,         -- 34번
                              0 MT_TEU,       -- 35번
                              0 MT_WT,        -- 36번
                              MAX(S.JO_SHRT_LEG_RMK) REMARK ,                              -- 37번 팝업 내의 REMARK
                              SUM(S.JO_SHRT_LEG_RMK_TEU_QTY) JO_SHRT_LEG_RMK_TEU_QTY,      -- 37번 팝업 내의 30번
                              SUM(S.JO_SHRT_LEG_RMK_WGT) JO_SHRT_LEG_RMK_WGT,              -- 37번 팝업 내의 31번
                              MAX(JO_SHRT_LEG_RMK_SCTR_NM) JO_SHRT_LEG_RMK_SCTR_NM,        -- 37번 팝업 내의 32번
                              SUM(S.JO_RF_OCN_QTY) JO_RF_OCN_QTY,                          -- 37번 팝업 내의 33번
                              SUM(S.JO_RF_IPT_QTY) JO_RF_IPT_QTY,                          -- 37번 팝업 내의 34번
                              SUM(S.JO_VOID_TEU_QTY) JO_VOID_TEU_QTY,                      -- 37번 팝업 내의 22번
                              0 JO_ALOC_ADJ_TEU_QTY,                   -- 38번 팝업 내의 TEU
                              0 JO_ALOC_ADJ_WGT,                       -- 38번 팝업 내의 WT
                              ''  JO_ALOC_ADJ_RMK                      -- 38번 팝업 내의 REMARK
                  FROM PA H,
                             JOO_BZC_AGMT B,
                             JOO_INTG_LODG_SMRY S,
                             JOO_BZC_AGMT_CRR C
                  WHERE 1 = 1
                       AND H.VSL_CD = S.VSL_CD
                       AND H.VOY_NO = S.SKD_VOY_NO
                       AND H.DIR_CD = S.SKD_DIR_CD
                       AND H.RLANE_CD = B.RLANE_CD
                       --AND B.RLANE_CD = C.RLANE_CD
                       --AND B.JO_CRR_CD = C.JO_REP_CRR_CD
                       AND B.JO_REF_NO = C.JO_REF_NO
                       AND H.JO_REF_NO = B.JO_REF_NO
                       
                       AND C.JO_CRR_CD = S.JO_CRR_CD
                       AND B.DELT_FLG = 'N'
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD
                
                UNION ALL
               /* JOO_BZC_AGMT  DATA 산출  */
               SELECT  DECODE(H. RE_DIVR_CD, 'R', 'Rev', 'Exp') RE_DIVR_CD, --11번
                              H.JO_CRR_CD,    --12번
                              H.VVD,          -- 13번
                              '' PORT_CD,     -- 14번
                              '' VPS_ETD_DT,  -- 15번
                              0 ALLOC_TEU,    -- 16번
                              0  ALLOC_WT,    -- 17번
                              0  ACTU_WT,     -- 19번
                              0 AK_VOID,      -- 22번
                              0 FULL_20,      -- 23번
                              0 FULL_20HC,    -- 40번
                              0 FULL_40,      -- 24번
                              0 FULL_40HC,    -- 25번
                              0 FULL_45,      -- 26번
                              0 RF_O,         -- 33번
                              0 RF_I,         -- 34번
                              0 MT_TEU,       -- 35번
                              0 MT_WT,        -- 36번
                              '' REMARK ,                          -- 37번 팝업 내의 REMARK
                              0 JO_SHRT_LEG_RMK_TEU_QTY,           -- 37번 팝업 내의 30번
                              0 JO_SHRT_LEG_RMK_WGT,               -- 37번 팝업 내의 31번
                              '' JO_SHRT_LEG_RMK_SCTR_NM,          -- 37번 팝업 내의 32번
                              0 JO_RF_OCN_QTY,                     -- 37번 팝업 내의 33번
                              0 JO_RF_IPT_QTY,                     -- 37번 팝업 내의 34번
                              0 JO_VOID_TEU_QTY,                   -- 37번 팝업 내의 22번
                              MAX(B.JO_ALOC_ADJ_TEU_QTY) JO_ALOC_ADJ_TEU_QTY,              -- 38번 팝업 내의 TEU
                              MAX(B.JO_ALOC_ADJ_WGT) JO_ALOC_ADJ_WGT,                      -- 38번 팝업 내의 WT
                              MAX(B.JO_ALOC_ADJ_RMK)  JO_ALOC_ADJ_RMK                      -- 38번 팝업 내의 REMARK
                  FROM PA H,
                       JOO_BZC_AGMT B
                  WHERE 1 = 1
                       AND H.RLANE_CD = B.RLANE_CD
                       AND H.JO_CRR_CD = B.JO_CRR_CD
                       AND H.RE_DIVR_CD = B.RE_DIVR_CD
                       AND B.DELT_FLG = 'N'
                       
                       AND H.JO_REF_NO = B.JO_REF_NO
                GROUP BY H.RE_DIVR_CD, H.JO_CRR_CD, H.VVD
        )
        GROUP BY RE_DIVR_CD, JO_CRR_CD, VVD
   )A, PA H
WHERE 1= 1
     AND SUBSTR(A.VVD, 1, 4) = H.VSL_CD
     AND SUBSTR(A.VVD, 5, 4) = H.VOY_NO
     AND SUBSTR(A.VVD, 9, 1) = H.DIR_CD
     AND A.JO_CRR_CD = H.JO_CRR_CD
ORDER BY VPS_ETD_DT, JO_CRR_CD			]]></sql>
			<params>
				<param name="pre_fr" type="12" value="" out="N"/>
				<param name="pre_to" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="re_divr_cd" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
