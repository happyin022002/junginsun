<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InvoiceProcessingAuditManageDBDAOSearchAuditOndockRailChargeContainerListCntRSQL">
			<desc><![CDATA[Invoice Processing Audit Manage
AuditOndockRailChargeContainerList 조회]]></desc>
			<sql><![CDATA[
SELECT	COUNT(*) AS CNT
FROM	(
		SELECT	  H.TML_SO_OFC_CTY_CD
				, H.TML_SO_SEQ
				, H.INV_OFC_CD
				, H.COST_OFC_CD
				, H.INV_NO
				, H.VNDR_SEQ
				, H.YD_CD
				, C.TML_SO_CNTR_LIST_SEQ
				, C.VRFY_RSLT_IND_CD
				, C.MODI_FLG
				, C.DSCR_IND_CD
				, DECODE(TES_GET_COMCODENAME_FNC('CD00823', C.DSCR_IND_CD),NULL,'',TES_GET_COMCODENAME_FNC('CD00823', C.DSCR_IND_CD)) AS DSCR_IND_NM
				, C.RVIS_IND_FLG
				, C.VSL_CD
				, C.SKD_VOY_NO
				, C.SKD_DIR_CD
				, C.FINC_VSL_CD
				, C.FINC_SKD_VOY_NO
				, C.FINC_SKD_DIR_CD
				, C.IO_BND_CD
				, C.IOC_CD
				, C.LANE_CD
				, TO_CHAR( C.ATB_DT, 'YYYY-MM-DD') AS ATB_DT
				, C.CNTR_NO
				, C.CNTR_TPSZ_CD
				, C.CNTR_STY_CD
				, C.LOCL_TS_IND_CD
				, C.SAM_LOCL_TS_IND_CD
				, SUBSTR( C.RCVDE_TERM_IND_CD, 0, 1) || '/' || SUBSTR( C.RCVDE_TERM_IND_CD, 2, 1) AS RCVDE_TERM_IND_CD
				, C.PRE_YD_CD
				, TO_CHAR( C.MVMT_GATE_IN_DT, 'YYYY-MM-DD') AS MVMT_GATE_IN_DT
				, TO_CHAR( C.INV_GATE_IN_DT, 'YYYY-MM-DD') AS INV_GATE_IN_DT
				, C.GATE_IN_TD_DYS
				, C.MVMT_GATE_OUT_DT
				, C.INV_GATE_OUT_DT
				, C.GATE_OUT_TD_DYS
				, C.MVMT_STAY_DYS
				, C.INV_STAY_DYS
				, C.STAY_DIFF_DYS
				, C.DCGO_CLSS_CD
				, C.BB_CGO_FLG
				, TO_CHAR( C.WRK_DT, 'YYYY-MM-DD') AS WRK_DT
				, TO_CHAR( C.CLM_DT, 'YYYY-MM-DD') AS CLM_DT
				, TO_CHAR( C.RAIL_BIL_DT, 'YYYY-MM-DD') AS RAIL_BIL_DT
				, C.BKG_NO
				, C.BL_NO
				, C.DSCR_RSN
				, C.HNDL_RSLT_RMK
				, C.CNTR_RMK
				, C.VSL_CD || C.SKD_VOY_NO || C.SKD_DIR_CD AS VVD_NO
				, C.DSCR_DTL_IND_CD
				, C.AWK_CGO_FLG
				, C.RC_FLG
				, ROW_NUMBER() OVER (ORDER BY H.INV_OFC_CD
				, H.COST_OFC_CD
				, H.YD_CD
				, H.VNDR_SEQ
				, H.INV_NO
				, C.TML_SO_CNTR_LIST_SEQ
				) AS NO
		FROM	TES_TML_SO_HDR H
				, TES_TML_SO_CNTR_LIST C
		WHERE	H.TML_SO_OFC_CTY_CD	= C.TML_SO_OFC_CTY_CD
		AND		H.TML_SO_SEQ		= C.TML_SO_SEQ
		AND		H.TML_INV_TP_CD		= @[tml_inv_tp_cd]
		AND		C.VRFY_RSLT_IND_CD	= @[vrfy_rslt_ind_cd]
		#if (${yd_cd} != '') 
		AND		H.YD_CD				= @[yd_cd]
		#end 

		#if (${vndr_seq} != '') 
		AND		H.VNDR_SEQ			= @[vndr_seq]
		#end

		#if (${cost_ofc_cd} != '')
			#if($sub_ofc_cd1.size() > 0)
				AND     H.COST_OFC_CD IN (
				#foreach($sub_ofc_cd1_num IN ${sub_ofc_cd1})
					#if($velocityCount < $sub_ofc_cd1.size()) 
						'$sub_ofc_cd1_num', 
					#else 
						'$sub_ofc_cd1_num' 
					#end 
				#end
				)
			#else
				AND		H.COST_OFC_CD = @[cost_ofc_cd]
			#end
		#end

		#if (${inv_ofc_cd} != '')
			#if($sub_ofc_cd2.size() > 0)
				AND     H.INV_OFC_CD IN (
				#foreach($sub_ofc_cd2_num IN ${sub_ofc_cd2})
					#if($velocityCount < $sub_ofc_cd2.size()) 
						'$sub_ofc_cd2_num', 
					#else 
						'$sub_ofc_cd2_num' 
					#end 
				#end
				)
			#else
				AND		H.INV_OFC_CD = @[inv_ofc_cd]
			#end
		#end


		#if (${tml_inv_sts_cd} != '' )
		AND		H.TML_INV_STS_CD	= @[tml_inv_sts_cd]
		#end

		#if (${inv_date_type} == 'I') 
		AND		H.ISS_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
		#elseif (${inv_date_type} == 'R') 
		AND		H.RCV_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
		#elseif (${inv_date_type} == 'P') 
		AND		H.LOCL_UPD_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
		#elseif (${inv_date_type} == 'A') 
		AND		C.ATB_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
		#end

		#if (${inv_no} != '') 
		AND		H.INV_NO			= @[inv_no]
		#end

		#if (${bkg_no} != '') 
		AND		C.BKG_NO			= @[bkg_no]
		#end

		#if (${cntr_no} != '') 
		AND		C.CNTR_NO			= @[cntr_no]
		#end

		#if (${vvd} != '') 
		AND		C.VSL_CD || C.SKD_VOY_NO || C.SKD_DIR_CD	= @[vvd]
		#end
		ORDER BY H.TML_SO_OFC_CTY_CD
				, H.TML_SO_SEQ
				, H.INV_OFC_CD
				, H.COST_OFC_CD
				, H.YD_CD
				, H.VNDR_SEQ
				, H.INV_NO
				, C.DSCR_IND_CD
				, C.CNTR_NO
		) A
		, (
		-- AUDIT 기능 보완 - Cost Calculated 항목 추가 (4347-10-08)
		SELECT    TML_SO_OFC_CTY_CD
				, TML_SO_SEQ
				, TML_SO_CNTR_LIST_SEQ
				, CNTR_NO
				, SUBSTR( MAX(SYS_CONNECT_BY_PATH(LGS_COST_CD, ',')), 2) AS LGS_COST_CD
		FROM	(
				 SELECT	  H.TML_SO_OFC_CTY_CD
						, H.TML_SO_SEQ
						, C.TML_SO_CNTR_LIST_SEQ
						, C.CNTR_NO
						, D.LGS_COST_CD	
						, ROW_NUMBER() OVER(PARTITION BY H.TML_SO_OFC_CTY_CD, H.TML_SO_SEQ, C.CNTR_NO ORDER BY D.LGS_COST_CD) AS CNTR_COST
				FROM    TES_TML_SO_HDR H
						, TES_TML_SO_CNTR_LIST C
						, TES_TML_SO_DTL D
						, TES_LGS_COST LC
						, TES_TML_SO_COST SC
				WHERE	1	= 1
				AND		H.TML_SO_OFC_CTY_CD	= C.TML_SO_OFC_CTY_CD
				AND		H.TML_SO_SEQ		= C.TML_SO_SEQ
				AND		H.TML_SO_OFC_CTY_CD	= D.TML_SO_OFC_CTY_CD
				AND		H.TML_SO_SEQ		= D.TML_SO_SEQ
				AND		D.LGS_COST_CD		= LC.LGS_COST_CD
				AND		D.LGS_COST_CD		= SC.LGS_COST_CD
				AND		NVL(H.DELT_FLG, 'N')	<> 'Y'
				AND		H.TML_INV_TP_CD		= @[tml_inv_tp_cd]
				AND		C.VRFY_RSLT_IND_CD	= @[vrfy_rslt_ind_cd]
				AND		D.CALC_TP_CD          = 'A'
--				AND		D.CALC_COST_GRP_CD    NOT IN ('SD','SP')
				AND		NVL(C.CNTR_TPSZ_CD, 'N') 	= NVL(D.CNTR_TPSZ_CD, 'N')
				AND		DECODE(H.TML_INV_TP_CD, 'TM', NVL(C.IO_BND_CD, 'N'), 'ON', NVL(C.IO_BND_CD, 'N'), 'OF', 'N', 'ST', 'N')
						= DECODE(H.TML_INV_TP_CD, 'TM', NVL(D.IO_BND_CD, 'N'), 'ON', NVL(D.IO_BND_CD, 'N'), 'OF', 'N', 'ST', 'N')
				AND		DECODE(H.TML_INV_TP_CD, 'TM', NVL(C.IOC_CD, 'N'), 'ON', NVL(C.IOC_CD, 'N'), 'OF', 'N', 'ST', 'N')
						= DECODE(H.TML_INV_TP_CD, 'TM', NVL(D.IOC_CD, 'N'), 'ON', NVL(D.IOC_CD, 'N'), 'OF', 'N', 'ST', 'N')
				AND		DECODE(H.TML_INV_TP_CD, 'TM', NVL(C.LANE_CD, 'N'), 'ON', NVL(C.LANE_CD, 'N'), 'OF', 'N', 'ST', 'N')
						= DECODE(H.TML_INV_TP_CD, 'TM', NVL(D.LANE_CD, 'N'), 'ON', NVL(D.LANE_CD, 'N'), 'OF', 'N', 'ST', 'N')
				AND		DECODE(H.TML_INV_TP_CD, 'TM', DECODE(C.BB_CGO_FLG, 'Y', 'BB', DECODE(C.LOCL_TS_IND_CD, 'T', DECODE(C.CNTR_STY_CD, 'F', 'TS', 'TM'), DECODE(C.CNTR_STY_CD, 'F', 'FL', 'MT'))), 'ON', DECODE(C.CNTR_STY_CD, 'F', 'F', 'M'), 'OF', DECODE(C.CNTR_STY_CD, 'F', 'FL', 'MT'), 'ST', DECODE(C.LOCL_TS_IND_CD, 'T', 'TS', DECODE(C.CNTR_STY_CD, 'F', 'FL', 'MT')))
						= DECODE(H.TML_INV_TP_CD, 'TM', SUBSTR(D.LGS_COST_CD, 5, 2), 'ON', SUBSTR(D.LGS_COST_CD, 6, 1), 'OF', SUBSTR(D.LGS_COST_CD, 5, 2), 'ST', SUBSTR(D.LGS_COST_CD, 5, 2))
				AND		DECODE(H.TML_INV_TP_CD, 'TM', NVL(C.DCGO_CLSS_CD, 'N'), 'ON', NVL(C.DCGO_CLSS_CD, 'N'), 'OF', 'N', 'ST', 'N')
						= DECODE(H.TML_INV_TP_CD, 'TM', NVL(D.DCGO_IND_CD, 'N'), 'ON', NVL(D.DCGO_IND_CD, 'N'), 'OF', 'N', 'ST', 'N')
				AND		DECODE(H.TML_INV_TP_CD, 'TM', DECODE(D.TML_TRNS_MOD_CD, '', 'S', 'S', 'S', NVL(C.TML_TRNS_MOD_CD, 'S')), 'N')
						= DECODE(H.TML_INV_TP_CD, 'TM', NVL(D.TML_TRNS_MOD_CD, 'S'), 'N')
				AND		DECODE(H.TML_INV_TP_CD, 'TM', DECODE(SUBSTR(D.LGS_COST_CD, 5, 2), 'TS', 'F', 'N'), 'N')
						= DECODE(H.TML_INV_TP_CD, 'TM', DECODE(SUBSTR(D.LGS_COST_CD, 5, 2), 'TS', C.CNTR_STY_CD, 'N'), 'N')
				#if (${yd_cd} != '') 
				AND		H.YD_CD				= @[yd_cd]
				#end 

				#if (${vndr_seq} != '') 
				AND		H.VNDR_SEQ			= @[vndr_seq]
				#end

				#if (${cost_ofc_cd} != '')
					#if($sub_ofc_cd1.size() > 0)
						AND     H.COST_OFC_CD IN (
						#foreach($sub_ofc_cd1_num IN ${sub_ofc_cd1})
							#if($velocityCount < $sub_ofc_cd1.size()) 
								'$sub_ofc_cd1_num', 
							#else 
								'$sub_ofc_cd1_num' 
							#end 
						#end
						)
					#else
						AND		H.COST_OFC_CD = @[cost_ofc_cd]
					#end
				#end

				#if (${inv_ofc_cd} != '')
					#if($sub_ofc_cd2.size() > 0)
						AND     H.INV_OFC_CD IN (
						#foreach($sub_ofc_cd2_num IN ${sub_ofc_cd2})
							#if($velocityCount < $sub_ofc_cd2.size()) 
								'$sub_ofc_cd2_num', 
							#else 
								'$sub_ofc_cd2_num' 
							#end 
						#end
						)
					#else
						AND		H.INV_OFC_CD = @[inv_ofc_cd]
					#end
				#end

				#if (${tml_inv_sts_cd} != '' )
				AND		H.TML_INV_STS_CD	= @[tml_inv_sts_cd]
				#end

				#if (${inv_date_type} == 'I') 
				AND		H.ISS_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
				#elseif (${inv_date_type} == 'R') 
				AND		H.RCV_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
				#elseif (${inv_date_type} == 'P') 
				AND		H.LOCL_UPD_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
				#elseif (${inv_date_type} == 'A') 
				AND		C.ATB_DT BETWEEN TO_DATE(REPLACE(@[fm_prd_dt], '-'), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt], '-'), 'YYYYMMDD') + 0.99999
				#end

				#if (${inv_no} != '') 
				AND		H.INV_NO			= @[inv_no]
				#end

				#if (${bkg_no} != '') 
				AND		C.BKG_NO			= @[bkg_no]
				#end

				#if (${cntr_no} != '') 
				AND		C.CNTR_NO			= @[cntr_no]
				#end

				#if (${vvd} != '') 
				AND		C.VSL_CD || C.SKD_VOY_NO || C.SKD_DIR_CD	= @[vvd]
				#end

				#if (${lgs_cost_subj_cd} != '')
				AND		LC.LGS_COST_SUBJ_CD IN (
				#foreach($lgs_cost_subj_cd_num IN ${lgs_cost_subj_cd})
					#if($velocityCount < $lgs_cost_subj_cd.size())
					'$lgs_cost_subj_cd_num', 
					#else
					'$lgs_cost_subj_cd_num'
					#end
				#end
				)
				#end

				#if (${cntr_sty_cd} != '')
				AND		SC.CNTR_STY_CD IN (
				#foreach($cntr_sty_cd_num IN ${cntr_sty_cd})
					#if($velocityCount < $cntr_sty_cd.size())
					'$cntr_sty_cd_num', 
					#else
					'$cntr_sty_cd_num'
					#end
				#end
				)
				#end

				#if (${lgs_cost_cd} != '' )
				AND		D.LGS_COST_CD		= @[lgs_cost_cd]
				#end

				GROUP BY H.TML_SO_OFC_CTY_CD
						, H.TML_SO_SEQ
						, C.TML_SO_CNTR_LIST_SEQ
						, C.CNTR_NO
						, D.LGS_COST_CD	
				) A	
			START WITH CNTR_COST = 1
			CONNECT BY PRIOR CNTR_NO = CNTR_NO
			AND PRIOR CNTR_COST = CNTR_COST - 1
		GROUP BY  TML_SO_OFC_CTY_CD
				, TML_SO_SEQ
				, TML_SO_CNTR_LIST_SEQ
				, CNTR_NO
		) B
WHERE	1	= 1
#if (${lgs_cost_subj_cd} != '' or ${cntr_sty_cd} != '')
AND		A.TML_SO_OFC_CTY_CD		= B.TML_SO_OFC_CTY_CD
AND		A.TML_SO_SEQ			= B.TML_SO_SEQ
AND		A.TML_SO_CNTR_LIST_SEQ	= B.TML_SO_CNTR_LIST_SEQ
AND		A.CNTR_NO				= B.CNTR_NO
#else
AND		A.TML_SO_OFC_CTY_CD		= B.TML_SO_OFC_CTY_CD(+)
AND		A.TML_SO_SEQ			= B.TML_SO_SEQ(+)
AND		A.TML_SO_CNTR_LIST_SEQ	= B.TML_SO_CNTR_LIST_SEQ(+)
AND		A.CNTR_NO				= B.CNTR_NO(+)
#end

#if (${lgs_cost_cd} != '' )
AND		B.LGS_COST_CD LIKE '%' || @[lgs_cost_cd] || '%'
#end			]]></sql>
			<params>
				<param name="tml_inv_tp_cd" type="12" value="" out="N"/>
				<param name="vrfy_rslt_ind_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="cost_ofc_cd" type="12" value="" out="N"/>
				<param name="inv_ofc_cd" type="12" value="" out="N"/>
				<param name="tml_inv_sts_cd" type="12" value="" out="N"/>
				<param name="fm_prd_dt" type="12" value="" out="N"/>
				<param name="to_prd_dt" type="12" value="" out="N"/>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="cntr_no" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="lgs_cost_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
