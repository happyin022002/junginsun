<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InvoiceManageDBDAOSearchInvoiceRevisionInfoRSQL">
			<desc><![CDATA[SearchInvoiceRevisionInfo]]></desc>
			<sql><![CDATA[
#if (${s_h_vndr_cust_div_cd} == 'V')
SELECT   A.VNDR_CUST_ADDR||'\n'||' Tel: '||A.PHN_NO	AS ENG_ADDR
       , A.VNDR_CNT_CD
       , A.VNDR_SEQ
       , '' AS CUST_CNT_CD
       , '' AS CUST_SEQ
       , LPAD(TO_CHAR(A.VNDR_SEQ),6,'0') AS TRD_PARTY_CODE
#elseif (${s_h_vndr_cust_div_cd} == 'C')
SELECT   A.VNDR_CUST_ADDR||'\n'||' Tel: '||A.PHN_NO AS ENG_ADDR
       , '' AS VNDR_CNT_CD
       , '' AS VNDR_SEQ
       , A.CUST_CNT_CD
       , A.CUST_SEQ
       , A.CUST_CNT_CD||LPAD(A.CUST_SEQ,6,'0') AS TRD_PARTY_CODE
#end

#if (${s_curr_cd} == '')
       , A.CURR_CD
       , ( SELECT DP_PRCS_KNT FROM MDM_CURRENCY WHERE CURR_CD = A.CURR_CD ) AS PRCS_CNT
#else
       , @[s_curr_cd] CURR_CD
       , (SELECT DP_PRCS_KNT FROM MDM_CURRENCY WHERE CURR_CD = @[s_curr_cd]) AS PRCS_CNT
#end
       , A.FAX_NO
       , A.PHN_NO
       , A.VNDR_CUST_ADDR
       , A.VNDR_CUST_NM
       , A.RGST_NO
       , A.VNDR_CUST_REF_RMK
       , A.BIL_TO_LOC_DIV_CD
       , A.CLT_AGN_RMK
       , A.CLT_AGN_FLG
       , A.N3PTY_INV_STS_CD
       , A.INV_DESC
       , A.VNDR_CUST_EML
       , (
           SELECT   DECODE(SUBSTR(LOC_CD,1,2),'US',TO_CHAR(SYSDATE+7,'YYYY-MM-DD'),'CA',TO_CHAR(SYSDATE+7,'YYYY-MM-DD'),'MX',TO_CHAR(SYSDATE+7,'YYYY-MM-DD'),TO_CHAR(A.RCV_DUE_DT,'YYYY-MM-DD'))
           FROM     MDM_ORGANIZATION
           WHERE    1 = 1
           AND      OFC_CD = B.OFC_CD
         ) AS RCV_DUE_DT
       , DECODE(SUBSTR(A.N3PTY_INV_RVIS_CD,1,1),'4','Y','N') AS N3PTY_INV_RMD_YN
       , A.N3PTY_INV_RVIS_CD AS N3PTY_INV_RMD_NM
       , A.N3PTY_INV_RVIS_SEQ AS HIS_SEQ /*Correction에서 호출시는 null로 처리함.*/ 
       , 'Y' AS FINAL_FLG
       , @[s_detail_n3pty_no] AS DETAIL_N3PTY_NO
       , @[s_detail_ots_sts_cd] AS DETAIL_OTS_STS_CD
       , A.MON_XCH_RT
       , NVL(A.NET_AMT,0) AS NET_AMT
       , NVL(A.VAT_AMT,0) AS VAT_AMT
       , NVL(A.ADD_AMT,0) AS ADD_AMT
       , NVL(A.DDCT_AMT,0) AS DDCT_AMT
       , A.INV_AMT AS TOTAL_AMT
       , @[vat_xch_rt_original] AS VAT_XCH_RT_ORIGINAL
       , @[is_france] AS FRANCE
       , B.LNK_N3PTY_INV_NO
       , A.CTY_NM
       , CASE WHEN A.IDA_TAX_SEQ > 0 THEN (
                                            SELECT   S.IDA_STE_CD
                                            FROM     MDM_STATE S
                                                   , MDM_LOCATION L
                                            WHERE    1 = 1
                                            AND      S.CNT_CD = L.CNT_CD
                                            AND      S.STE_CD = L.STE_CD
                                            AND      L.LOC_CD = CASE WHEN A.VNDR_CUST_DIV_CD = 'C' THEN CC.LOC_CD ELSE V.LOC_CD END
                                          )
              ELSE A.STE_CD
         END AS STE_CD
       , (
           SELECT   S.STE_NM
           FROM     MDM_STATE S
                  , MDM_LOCATION L
           WHERE    1 = 1
           AND      S.CNT_CD = L.CNT_CD
           AND      S.STE_CD = L.STE_CD
           AND      L.LOC_CD = CASE WHEN A.VNDR_CUST_DIV_CD = 'C' THEN CC.LOC_CD ELSE V.LOC_CD END
         ) AS STE_NM
       , O.LOC_CD
       , ( SELECT LOC_NM FROM MDM_LOCATION L WHERE L.LOC_CD = O.LOC_CD AND ROWNUM = 1 ) AS LOC_NM
       , CASE WHEN A.VNDR_CUST_DIV_CD = 'C' THEN CC.IDA_GST_RGST_NO ELSE V.IDA_GST_RGST_NO END AS IDA_GST_RGST_NO
       , CASE WHEN CC.IDA_GST_RGST_NO IS NULL AND V.IDA_GST_RGST_NO IS NULL THEN 'N' ELSE 'Y' END AS IDA_GST_RGST_NO_FLG
       , CASE WHEN A.VNDR_CUST_DIV_CD = 'C' THEN NVL(CC.IDA_SPCL_ECN_ZN_UT_FLG,'N') ELSE NVL(V.IDA_SPCL_ECN_ZN_UT_FLG,'N') END AS IDA_SPCL_ECN_ZN_UT_FLG
       , A.ZIP_CD
       , A.USR_INP_CTNT1
       , A.USR_INP_CTNT2
       , B.OFC_CD AS INV_ISS_OFC_CD
       , DECODE(A.N3PTY_INV_RVIS_CD,A.N3PTY_INV_RVIS_CD, DECODE(SUBSTRB(A.N3PTY_INV_RVIS_CD,1,1),'O','Y','R','Y','N'),'N') AS SAME_VERSION_YN
       , TPB_GET_HNDL_OFC_FNC('R',B.OFC_CD) AS INV_ISS_RHQ_CD
       , CASE WHEN A.CLT_AGN_FLG IS NULL OR A.CLT_AGN_FLG != 'N' THEN 'N'
              WHEN A.N3PTY_INV_STS_CD!='N' THEN 'N'
              WHEN A.N3PTY_DELT_TP_CD!='N' THEN 'N'
              WHEN SUBSTRB(A.N3PTY_INV_RVIS_CD,1,1)!='O' AND SUBSTRB(A.N3PTY_INV_RVIS_CD,1,1)!='R'THEN 'N'
              WHEN (
                     SELECT   SIGN(NVL(MAX(IT.N3PTY_INV_RVIS_SEQ),0) - A.N3PTY_INV_RVIS_SEQ)
                     FROM     TPB_INV_RVIS IT
                     WHERE    1 = 1
                     AND      IT.N3PTY_INV_NO = A.N3PTY_INV_NO
                     AND      IT.N3PTY_INV_RVIS_SEQ >= A.N3PTY_INV_RVIS_SEQ
                   ) = 0 THEN 'Y'
              ELSE 'N'
         END AS ERPIF_YN
       , TO_CHAR(A.IDA_TAX_SEQ) AS IDA_TAX_SEQ
       , T.EXPN_TAX
       , T.EDU_TAX
       , T.HIGH_EDU_TAX
       , T.TAX_RGST_NO
       , T.SVC_CATE_RMK
       , T.PMNT_ACCT_NO
       , T.LOCL_TAX_RT
       , NVL(T.N2ND_LOCL_TAX_RT,0) AS N2ND_LOCL_TAX_RT
       , TO_CHAR(A.NET_AMT + A.ADD_AMT - A.DDCT_AMT, '9999999999999990.99' ) AS EXPN_TOTAL_AMT
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * T.EXPN_TAX / 100, 2 ), '9999999999999990.99' ) AS TOT_EXPN_TAX
       , TO_CHAR( ROUND( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * T.EXPN_TAX / 100, 2 ) * T.EDU_TAX / 100, 2 ), '9999999999999990.99' ) AS TOT_EDU_TAX
       , TO_CHAR( ROUND( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * T.EXPN_TAX / 100, 2 ) * T.HIGH_EDU_TAX / 100, 2 ), '9999999999999990.99' ) AS TOT_HIGH_EDU_TAX
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * T.EXPN_TAX / 100, 2 )
         + ROUND( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * T.EXPN_TAX / 100, 2 ) * T.EDU_TAX / 100, 2 )
         + ROUND( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * T.EXPN_TAX / 100, 2 ) * T.HIGH_EDU_TAX / 100, 2 ), '9999999999999990.99' ) AS TOT_SVC_TAX
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * NVL(T.LOCL_TAX_RT,0) / 100, 2 ), '9999999999999990.99' ) AS TOT_LOCL_TAX
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * NVL(T.N2ND_LOCL_TAX_RT,0) / 100, 2 ), '9999999999999990.99' ) AS N2ND_LOCL_TAX
       , NVL(A.LOCL_TAX_AMT,0) AS LOCL_TAX_AMT
       , NVL(A.N2ND_LOCL_TAX_AMT,0) AS N2ND_LOCL_TAX_AMT
       , INV_GET_GST_DIV_CD_FNC( B.OFC_CD, A.VNDR_CUST_DIV_CD, A.CUST_CNT_CD, A.CUST_SEQ, A.VNDR_SEQ, NULL ) AS IDA_TAX_FLG
       , I.IDA_CGST_RTO AS IDA_CGST_RTO
       , I.IDA_SGST_RTO AS IDA_SGST_RTO
       , I.IDA_IGST_RTO AS IDA_IGST_RTO
       , I.IDA_UGST_RTO AS IDA_UGST_RTO
       , I.IDA_CGST_RTO + I.IDA_SGST_RTO + I.IDA_IGST_RTO + I.IDA_UGST_RTO AS IDA_TOT_GST_RTO
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_CGST_RTO / 100, 2 ), '9999999999999990.99' ) AS IDA_CGST_AMT
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_SGST_RTO / 100, 2 ), '9999999999999990.99' ) AS IDA_SGST_AMT
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_IGST_RTO / 100, 2 ), '9999999999999990.99' ) AS IDA_IGST_AMT
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_UGST_RTO / 100, 2 ), '9999999999999990.99' ) AS IDA_UGST_AMT
       , TO_CHAR( ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_CGST_RTO / 100, 2 )
                + ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_SGST_RTO / 100, 2 )
                + ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_IGST_RTO / 100, 2 )
                + ROUND( ( A.NET_AMT + A.ADD_AMT - A.DDCT_AMT ) * I.IDA_UGST_RTO / 100, 2 )
                , '9999999999999990.99'
         ) AS IDA_TOT_GST_AMT
       , SC.IDA_GST_RGST_NO AS IDA_OFC_GST_RGST_NO
       , SC.IDA_PAN_NO
       , ( SELECT ATTR_CTNT1 FROM DMT_HRD_CDG_CTNT WHERE HRD_CDG_ID = 'IDA_TAX_INFO' ) AS IDA_BANK_ACCT_NO
       , ( SELECT ATTR_CTNT2 FROM DMT_HRD_CDG_CTNT WHERE HRD_CDG_ID = 'IDA_TAX_INFO' ) AS IDA_IFSC_CD
FROM     TPB_INV_RVIS A
       , TPB_INVOICE B
       , TPB_IDA_TAX T
       , MDM_CUSTOMER CC
       , MDM_VENDOR V
       , MDM_ORGANIZATION O
       , MDM_CUSTOMER SC
       , TABLE( INV_GET_IDA_GST_RTO_FNC( ( INV_GET_GST_DIV_CD_FNC( B.OFC_CD, A.VNDR_CUST_DIV_CD, A.CUST_CNT_CD, A.CUST_SEQ, A.VNDR_SEQ, NULL ) )
                                       , (
                                           SELECT   NVL(TT.IDA_SAC_CD, MC.IDA_SAC_CD)
                                           FROM     TPB_N3RD_PTY_BIL_TP TT
                                                  , TPB_OTS_GRP OG
                                                  , MDM_CHARGE MC
                                           WHERE    1 = 1
                                           AND      TT.N3PTY_BIL_TP_CD = OG.N3PTY_BIL_TP_CD
                                           AND      TT.CHG_CD = MC.CHG_CD(+)
                                           AND      A.N3PTY_INV_NO = OG.N3PTY_INV_NO
                                         )
                )
         ) I
WHERE    1 = 1
AND      A.N3PTY_INV_NO = B.N3PTY_INV_NO
AND      A.IDA_TAX_SEQ = T.IDA_TAX_SEQ(+)
AND      A.CUST_CNT_CD = CC.CUST_CNT_CD(+)
AND      A.CUST_SEQ = CC.CUST_SEQ(+)
AND      A.VNDR_SEQ = V.VNDR_SEQ(+)
AND      B.OFC_CD = O.OFC_CD
AND      O.REP_CUST_CNT_CD = SC.CUST_CNT_CD
AND      O.REP_CUST_SEQ = SC.CUST_SEQ
AND      A.N3PTY_INV_NO = @[s_n3pty_inv_no]
AND      A.N3PTY_INV_RVIS_SEQ = @[s_n3pty_inv_his_seq]
AND      A.N3PTY_INV_RVIS_CD = @[s_n3pty_inv_rmd_cd]			]]></sql>
			<params>
				<param name="s_curr_cd" type="12" value="" out="N"/>
				<param name="s_detail_n3pty_no" type="12" value="" out="N"/>
				<param name="s_detail_ots_sts_cd" type="12" value="" out="N"/>
				<param name="vat_xch_rt_original" type="12" value="" out="N"/>
				<param name="is_france" type="12" value="" out="N"/>
				<param name="s_n3pty_inv_no" type="12" value="" out="N"/>
				<param name="s_n3pty_inv_his_seq" type="12" value="" out="N"/>
				<param name="s_n3pty_inv_rmd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
