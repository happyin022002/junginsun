/*=========================================================
*Copyright(c) 2013 CyberLogitec
*@FileName : ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2013.08.19
*@LastModifier : 
*@LastVersion : 1.0
* 2013.08.19 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esd.prd.productcatalogcreate.productcatalogcreate.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * 생성된 pc의 ocn 부분을 doublecalling 을 포함하여 조회한다.
	  * </pre>
	  */
	public ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_date",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("hd_pctl_no",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esd.prd.productcatalogcreate.productcatalogcreate.integration").append("\n"); 
		query.append("FileName : ProductCatalogCreateDBDAOSearchPrdOcnRoutDoubleCallingRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT   CHK " ).append("\n"); 
		query.append("         ,NO" ).append("\n"); 
		query.append("         ,PCTL_NO " ).append("\n"); 
		query.append("         ,SLS_OFC_CD " ).append("\n"); 
		query.append("         ,ORG_LOC_CD " ).append("\n"); 
		query.append("         ,DEST_LOC_CD " ).append("\n"); 
		query.append("         ,ROUT_SEQ " ).append("\n"); 
		query.append("         ,UPD_IND_CD " ).append("\n"); 
		query.append("         ,ORD " ).append("\n"); 
		query.append("         ,RK " ).append("\n"); 
		query.append("         ,VVD_LNK_NO " ).append("\n"); 
		query.append("         ,TZTM_HRS " ).append("\n"); 
		query.append("         ,ORG_TZTM_HRS " ).append("\n"); 
		query.append("         ,LNK_KNT " ).append("\n"); 
		query.append("         ,OCN_ROUT_PRIO_CD " ).append("\n"); 
		query.append("         ,N1ST_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N1ST_SLAN_CD " ).append("\n"); 
		query.append("         ,N1ST_VVD " ).append("\n"); 
		query.append("         ,N1ST_POL " ).append("\n"); 
		query.append("         ,N1ST_POD " ).append("\n"); 
		query.append("         ,N1ST_POL_N " ).append("\n"); 
		query.append("         ,N1ST_POD_N " ).append("\n"); 
		query.append("         ,N1ST_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N1ST_POL_DC " ).append("\n"); 
		query.append("         ,N1ST_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N1ST_POD_DC " ).append("\n"); 
		query.append("         ,N1ST_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N1ST_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N1ST_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POL_CLPT_IND_SEQ > N1ST_POL_DC_CLPT_SEQ THEN N1ST_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N1ST_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POL_CLPT_IND_SEQ < N1ST_POL_DC_CLPT_SEQ THEN N1ST_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N1ST_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POD_CLPT_IND_SEQ > N1ST_POD_DC_CLPT_SEQ THEN N1ST_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N1ST_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N1ST_POD_CLPT_IND_SEQ < N1ST_POD_DC_CLPT_SEQ THEN N1ST_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N1ST_POD_DC" ).append("\n"); 
		query.append("         ---------------------------" ).append("\n"); 
		query.append("         ,N2ND_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N2ND_SLAN_CD " ).append("\n"); 
		query.append("         ,N2ND_VVD " ).append("\n"); 
		query.append("         ,N2ND_POL " ).append("\n"); 
		query.append("         ,N2ND_POD " ).append("\n"); 
		query.append("         ,N2ND_POL_N " ).append("\n"); 
		query.append("         ,N2ND_POD_N " ).append("\n"); 
		query.append("         ,N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N2ND_POL_DC " ).append("\n"); 
		query.append("         ,N2ND_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N2ND_POD_DC " ).append("\n"); 
		query.append("         ,N2ND_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N2ND_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N2ND_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POL_CLPT_IND_SEQ > N2ND_POL_DC_CLPT_SEQ THEN N2ND_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N2ND_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POL_CLPT_IND_SEQ < N2ND_POL_DC_CLPT_SEQ THEN N2ND_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N2ND_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POD_CLPT_IND_SEQ > N2ND_POD_DC_CLPT_SEQ THEN N2ND_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N2ND_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N2ND_POD_CLPT_IND_SEQ < N2ND_POD_DC_CLPT_SEQ THEN N2ND_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N2ND_POD_DC" ).append("\n"); 
		query.append("         ---------------------------        " ).append("\n"); 
		query.append("         ,N3RD_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N3RD_SLAN_CD " ).append("\n"); 
		query.append("         ,N3RD_VVD " ).append("\n"); 
		query.append("         ,N3RD_POL " ).append("\n"); 
		query.append("         ,N3RD_POD " ).append("\n"); 
		query.append("         ,N3RD_POL_N " ).append("\n"); 
		query.append("         ,N3RD_POD_N " ).append("\n"); 
		query.append("         ,N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N3RD_POL_DC " ).append("\n"); 
		query.append("         ,N3RD_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N3RD_POD_DC " ).append("\n"); 
		query.append("         ,N3RD_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N3RD_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N3RD_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POL_CLPT_IND_SEQ > N3RD_POL_DC_CLPT_SEQ THEN N3RD_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N3RD_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POL_CLPT_IND_SEQ < N3RD_POL_DC_CLPT_SEQ THEN N3RD_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N3RD_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POD_CLPT_IND_SEQ > N3RD_POD_DC_CLPT_SEQ THEN N3RD_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N3RD_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N3RD_POD_CLPT_IND_SEQ < N3RD_POD_DC_CLPT_SEQ THEN N3RD_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N3RD_POD_DC" ).append("\n"); 
		query.append("         ---------------------------         " ).append("\n"); 
		query.append("         ,N4TH_VSL_SLAN_CD " ).append("\n"); 
		query.append("         ,N4TH_SLAN_CD " ).append("\n"); 
		query.append("         ,N4TH_VVD " ).append("\n"); 
		query.append("         ,N4TH_POL " ).append("\n"); 
		query.append("         ,N4TH_POD " ).append("\n"); 
		query.append("         ,N4TH_POL_N " ).append("\n"); 
		query.append("         ,N4TH_POD_N " ).append("\n"); 
		query.append("         ,N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("         ,N4TH_POL_DC " ).append("\n"); 
		query.append("         ,N4TH_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N4TH_POD_DC " ).append("\n"); 
		query.append("         ,N4TH_POD_DC_CLPT_SEQ" ).append("\n"); 
		query.append("         ,N4TH_TVVD_FLAG " ).append("\n"); 
		query.append("         ,N4TH_SPACE " ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POL_CLPT_IND_SEQ > N4TH_POL_DC_CLPT_SEQ THEN N4TH_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N4TH_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POL_CLPT_IND_SEQ < N4TH_POL_DC_CLPT_SEQ THEN N4TH_POL_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N4TH_POL_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POD_CLPT_IND_SEQ > N4TH_POD_DC_CLPT_SEQ THEN N4TH_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) PRE_N4TH_POD_DC" ).append("\n"); 
		query.append("         ,(CASE WHEN N4TH_POD_CLPT_IND_SEQ < N4TH_POD_DC_CLPT_SEQ THEN N4TH_POD_DC" ).append("\n"); 
		query.append("                ELSE ''" ).append("\n"); 
		query.append("           END" ).append("\n"); 
		query.append("           ) POST_N4TH_POD_DC" ).append("\n"); 
		query.append("         ---------------------------         " ).append("\n"); 
		query.append("         ,TTL_EXPN_AMT " ).append("\n"); 
		query.append("         ,OCN_ROUT_USR_RMK" ).append("\n"); 
		query.append("FROM     ( SELECT   ''  CHK " ).append("\n"); 
		query.append("                   ,NO " ).append("\n"); 
		query.append("                   ,PCTL_NO " ).append("\n"); 
		query.append("                   ,SLS_OFC_CD " ).append("\n"); 
		query.append("                   ,ORG_LOC_CD " ).append("\n"); 
		query.append("                   ,DEST_LOC_CD " ).append("\n"); 
		query.append("                   ,ROUT_SEQ " ).append("\n"); 
		query.append("                   ,DECODE(UPD_IND_CD,'S','Standard' " ).append("\n"); 
		query.append("                                      ,'T','Temporary' " ).append("\n"); 
		query.append("                                      ,'V','Validation' " ).append("\n"); 
		query.append("                                      ,'N','Not Used' " ).append("\n"); 
		query.append("                                      ,'A','Add Call' " ).append("\n"); 
		query.append("                                      ,'D','Deleted' " ).append("\n"); 
		query.append("                                      ,'G','Guide') UPD_IND_CD " ).append("\n"); 
		query.append("                   ,DECODE(UPD_IND_CD,'G',1 " ).append("\n"); 
		query.append("                                      ,'S',2 " ).append("\n"); 
		query.append("                                      ,'T',3 " ).append("\n"); 
		query.append("                                      ,'A',4 " ).append("\n"); 
		query.append("                                      ,'V',5 " ).append("\n"); 
		query.append("                                      ,'N',6 " ).append("\n"); 
		query.append("                                      ,'D',7) ORD " ).append("\n"); 
		query.append("                   ,CASE WHEN  UPD_IND_CD ='T' THEN " ).append("\n"); 
		query.append("                            CASE WHEN OCN_ROUT_USR_RMK ='Space Shortage' OR" ).append("\n"); 
		query.append("                                      OCN_ROUT_USR_RMK ='Customer Request' OR" ).append("\n"); 
		query.append("                                      OCN_ROUT_USR_RMK ='Port Skip' OR" ).append("\n"); 
		query.append("                                      OCN_ROUT_USR_RMK ='VSL Phase Out' OR" ).append("\n"); 
		query.append("                                      OCN_ROUT_USR_RMK ='Add Call' OR" ).append("\n"); 
		query.append("                                      OCN_ROUT_USR_RMK ='Customs Problem' OR" ).append("\n"); 
		query.append("                                      OCN_ROUT_USR_RMK ='Clerical Error'  THEN OCN_ROUT_USR_RMK " ).append("\n"); 
		query.append("                                 ELSE OCN_ROUT_USR_RMK " ).append("\n"); 
		query.append("                            END" ).append("\n"); 
		query.append("                         ELSE '' " ).append("\n"); 
		query.append("                     END OCN_ROUT_USR_RMK" ).append("\n"); 
		query.append("                   ,OCN_ROUT_PRIO_CD " ).append("\n"); 
		query.append("                   ,RANK() " ).append("\n"); 
		query.append("                      OVER(PARTITION BY SUBSTR(PCTL_NO,1,1) ORDER BY DECODE(UPD_IND_CD,'G',1 " ).append("\n"); 
		query.append("                                        ,'S',2 " ).append("\n"); 
		query.append("                                        ,'T',3 " ).append("\n"); 
		query.append("                                        ,'A',4 " ).append("\n"); 
		query.append("                                        ,'V',5 " ).append("\n"); 
		query.append("                                        ,'N',6 " ).append("\n"); 
		query.append("                                        ,'D',7), TTL_EXPN_AMT, OCN_ROUT_PRIO_CD, LNK_KNT, TZTM_HRS, ROUT_SEQ ASC) RK " ).append("\n"); 
		query.append("                   ,TZTM_HRS ORG_TZTM_HRS " ).append("\n"); 
		query.append("                   ,LNK_KNT " ).append("\n"); 
		query.append("                   ,CASE " ).append("\n"); 
		query.append("                      WHEN N1ST_TVVD_FLAG = 'V' " ).append("\n"); 
		query.append("                      THEN '1' " ).append("\n"); 
		query.append("                      WHEN N2ND_TVVD_FLAG = 'V' " ).append("\n"); 
		query.append("                      THEN '2' " ).append("\n"); 
		query.append("                      WHEN N3RD_TVVD_FLAG = 'V' " ).append("\n"); 
		query.append("                      THEN '3' " ).append("\n"); 
		query.append("                      WHEN N4TH_TVVD_FLAG = 'V' " ).append("\n"); 
		query.append("                      THEN '4' " ).append("\n"); 
		query.append("                      ELSE '' " ).append("\n"); 
		query.append("                    END VVD_LNK_NO " ).append("\n"); 
		query.append("                   ,LTRIM(TO_CHAR(TRUNC(TZTM_HRS / 24,0),'00') " ).append("\n"); 
		query.append("                          ||'D-') " ).append("\n"); 
		query.append("                    ||LTRIM(TO_CHAR(MOD(TZTM_HRS,24),'00') " ).append("\n"); 
		query.append("                            ||'H') TZTM_HRS " ).append("\n"); 
		query.append("                   ,N1ST_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N1ST_SLAN_CD " ).append("\n"); 
		query.append("                   ,N1ST_VVD " ).append("\n"); 
		query.append("                   ,N1ST_POL " ).append("\n"); 
		query.append("                   ,N1ST_POD " ).append("\n"); 
		query.append("                   ,N1ST_POL_N " ).append("\n"); 
		query.append("                   ,N1ST_POD_N " ).append("\n"); 
		query.append("                   ,N1ST_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N1ST_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N1ST_POD_ETA" ).append("\n"); 
		query.append("                                    -- SAILING DUE DATE가 있으면 확인" ).append("\n"); 
		query.append("#if (${skd_type} == 'L') " ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT > TO_DATE(@[skd_date],'YYYYMMDD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N1ST_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N1ST_POD_ETA" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${skd_type} == 'L') " ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT > TO_DATE(@[skd_date],'YYYYMMDD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("                       ELSE ''" ).append("\n"); 
		query.append("                     END) N1ST_POL_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N1ST_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N1ST_POD_ETA" ).append("\n"); 
		query.append("                                    -- SAILING DUE DATE가 있으면 확인" ).append("\n"); 
		query.append("#if (${skd_type} == 'L') " ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT > TO_DATE(@[skd_date],'YYYYMMDD')" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N1ST_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                   ----------------------------------------------                        " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N1ST_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N1ST_POL_ETD" ).append("\n"); 
		query.append("                                    AND ROWNUM =1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N1ST_POD_DC " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N1ST_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N1ST_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N1ST_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N1ST_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N1ST_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N1ST_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N1ST_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N1ST_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     ------------------------------------------------------" ).append("\n"); 
		query.append("                   ,N1ST_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N1ST_POL_N,N1ST_POD_N,N1ST_VVD,N1ST_TVVD_FLAG, " ).append("\n"); 
		query.append("                                                    SLS_OFC_CD) " ).append("\n"); 
		query.append("                              ,'') N1ST_SPACE " ).append("\n"); 
		query.append("                   ,N2ND_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N2ND_SLAN_CD " ).append("\n"); 
		query.append("                   ,N2ND_VVD " ).append("\n"); 
		query.append("                   ,N2ND_POL " ).append("\n"); 
		query.append("                   ,N2ND_POD " ).append("\n"); 
		query.append("                   ,N2ND_POL_N " ).append("\n"); 
		query.append("                   ,N2ND_POD_N " ).append("\n"); 
		query.append("                   ,N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N2ND_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N2ND_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POL_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N2ND_POD_ETA" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                     ------------------------------------------                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                            ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1                                    " ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POD_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N2ND_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N2ND_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N2ND_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N2ND_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N2ND_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N2ND_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N2ND_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     -----------------------------------------                     " ).append("\n"); 
		query.append("                   ,N2ND_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(N2ND_POL_N,NULL,'' " ).append("\n"); 
		query.append("                                      ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N2ND_POL_N,N2ND_POD_N,N2ND_VVD,N2ND_TVVD_FLAG, " ).append("\n"); 
		query.append("                                                                       SLS_OFC_CD) " ).append("\n"); 
		query.append("                                                 ,'')) N2ND_SPACE " ).append("\n"); 
		query.append("                   ,N3RD_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N3RD_SLAN_CD " ).append("\n"); 
		query.append("                   ,N3RD_VVD " ).append("\n"); 
		query.append("                   ,N3RD_POL " ).append("\n"); 
		query.append("                   ,N3RD_POD " ).append("\n"); 
		query.append("                   ,N3RD_POL_N " ).append("\n"); 
		query.append("                   ,N3RD_POD_N " ).append("\n"); 
		query.append("                   ,N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N3RD_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N3RD_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POL_DC " ).append("\n"); 
		query.append("                    " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N3RD_POD_ETA" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                     ------------------------------------------                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POD_N,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N3RD_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POD_N,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N3RD_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POD_DC " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N3RD_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N3RD_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N3RD_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N3RD_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N3RD_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N3RD_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N2ND_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N3RD_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     -----------------------------------------                      " ).append("\n"); 
		query.append("                   ,N3RD_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(N3RD_POL_N,NULL,'' " ).append("\n"); 
		query.append("                                      ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N3RD_POL_N,N3RD_POD_N,N3RD_VVD,N3RD_TVVD_FLAG, " ).append("\n"); 
		query.append("                                                                       SLS_OFC_CD) " ).append("\n"); 
		query.append("                                                 ,'')) N3RD_SPACE " ).append("\n"); 
		query.append("                   ,N4TH_VSL_SLAN_CD " ).append("\n"); 
		query.append("                   ,N4TH_SLAN_CD " ).append("\n"); 
		query.append("                   ,N4TH_VVD " ).append("\n"); 
		query.append("                   ,N4TH_POL " ).append("\n"); 
		query.append("                   ,N4TH_POD " ).append("\n"); 
		query.append("                   ,N4TH_POL_N " ).append("\n"); 
		query.append("                   ,N4TH_POD_N " ).append("\n"); 
		query.append("                   ,N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N4TH_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETD_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POL_N,1,5)" ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POL_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N4TH_POD_ETA " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1 " ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POL_DC " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POL_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POL_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                    -- 1ST POL 은 skd을 잡을때 짧은 것을 잡게 되어 있음 " ).append("\n"); 
		query.append("                                    -- ex, A1 1/1 10시, A2 1/2 10시, B1 1/10 10시 로 A1,A2가 DOUBLE CALLING일때" ).append("\n"); 
		query.append("                                    --     SKD 로직에선 A2 - B1을 잡는다." ).append("\n"); 
		query.append("                                    AND V.VPS_ETD_DT  < N4TH_POD_ETA" ).append("\n"); 
		query.append("                                    AND ROWNUM =1" ).append("\n"); 
		query.append("                            )  " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POL_DC_CLPT_SEQ" ).append("\n"); 
		query.append("                     ------------------------------------------                      " ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT YD_CD " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N4TH_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) ||chr(13)||chr(10)||" ).append("\n"); 
		query.append("                            (SELECT TO_CHAR(VPS_ETA_DT,'YYYY-MM-DD') " ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ <> N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT  > N4TH_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1" ).append("\n"); 
		query.append("                                    ) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POD_DC " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                   ,(CASE " ).append("\n"); 
		query.append("                       WHEN N4TH_VVD IS NOT NULL " ).append("\n"); 
		query.append("                       THEN (SELECT CLPT_IND_SEQ" ).append("\n"); 
		query.append("                             FROM   VSK_VSL_PORT_SKD V " ).append("\n"); 
		query.append("                             WHERE  V.VSL_CD = SUBSTR(N4TH_VVD,1,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_VOY_NO = SUBSTR(N4TH_VVD,5,4) " ).append("\n"); 
		query.append("                                    AND V.SKD_DIR_CD = SUBSTR(N4TH_VVD,9,1) " ).append("\n"); 
		query.append("                                    AND V.VPS_PORT_CD = SUBSTR(N4TH_POD_N,1,5) " ).append("\n"); 
		query.append("                                    AND V.CLPT_IND_SEQ<> N4TH_POD_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                    AND V.VPS_ETA_DT > N4TH_POL_ETD " ).append("\n"); 
		query.append("                                    AND ROWNUM = 1) " ).append("\n"); 
		query.append("                       ELSE '' " ).append("\n"); 
		query.append("                     END) N4TH_POD_DC_CLPT_SEQ " ).append("\n"); 
		query.append("                     -----------------------------------------                        " ).append("\n"); 
		query.append("                   ,N4TH_TVVD_FLAG " ).append("\n"); 
		query.append("                   ,DECODE(N4TH_POL_N,NULL,'' " ).append("\n"); 
		query.append("                                      ,DECODE(NO,'1',PRD_GET_SPACE_FNC(PCTL_NO,N4TH_POL_N,N4TH_POD_N,N4TH_VVD,N4TH_TVVD_FLAG, " ).append("\n"); 
		query.append("                                                                       SLS_OFC_CD) " ).append("\n"); 
		query.append("                                                 ,'')) N4TH_SPACE " ).append("\n"); 
		query.append("                   ,TTL_EXPN_AMT " ).append("\n"); 
		query.append("          FROM     (" ).append("\n"); 
		query.append("                    SELECT   '1'                                      NO " ).append("\n"); 
		query.append("                             ,PCTL_NO " ).append("\n"); 
		query.append("                             ,ORG_LOC_CD " ).append("\n"); 
		query.append("                             ,DEST_LOC_CD " ).append("\n"); 
		query.append("                             ,O.ROUT_SEQ " ).append("\n"); 
		query.append("                             ,LNK_KNT " ).append("\n"); 
		query.append("                             ,MAX(UPD_IND_CD)                         UPD_IND_CD " ).append("\n"); 
		query.append("                             ,MAX(OCN_ROUT_PRIO_CD)                   OCN_ROUT_PRIO_CD " ).append("\n"); 
		query.append("							 ,MAX(OCN_ROUT_USR_RMK)                    OCN_ROUT_USR_RMK " ).append("\n"); 
		query.append("                             ,(MAX(DEP_FSH_DT) - MIN(ARR_ST_DT)) * 24 TZTM_HRS " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,VSL_SLAN_CD||chr(13)||chr(10)||VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD  " ).append("\n"); 
		query.append("                                           ,'')) N1ST_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,VSL_SLAN_CD " ).append("\n"); 
		query.append("                                           ,'')) N1ST_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD " ).append("\n"); 
		query.append("                                           ,'')) N1ST_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ORG_NOD_CD||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD')  " ).append("\n"); 
		query.append("                                           ,'')) N1ST_POL" ).append("\n"); 
		query.append("                                                                                      " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD')  " ).append("\n"); 
		query.append("                                           ,'')) N1ST_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ORG_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N1ST_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEST_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N1ST_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ARR_ST_DT" ).append("\n"); 
		query.append("                                           ,'')) N1ST_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEP_FSH_DT" ).append("\n"); 
		query.append("                                           ,'')) N1ST_POD_ETA" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,ORG_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N1ST_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,1,DEST_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N1ST_POD_CLPT_IND_SEQ                                              " ).append("\n"); 
		query.append("                             ,(CASE " ).append("\n"); 
		query.append("                                 WHEN MAX(DECODE(R,1,T_VVD " ).append("\n"); 
		query.append("                                                   ,'')) = 'V' " ).append("\n"); 
		query.append("                                 THEN 'V' " ).append("\n"); 
		query.append("                                 ELSE '' " ).append("\n"); 
		query.append("                               END) N1ST_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N1ST_SPACE " ).append("\n"); 
		query.append("                             --------------------------------------------------------" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,VSL_SLAN_CD||chr(13)||chr(10)||VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD   " ).append("\n"); 
		query.append("                                           ,'')) N2ND_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,VSL_SLAN_CD " ).append("\n"); 
		query.append("                                           ,'')) N2ND_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD " ).append("\n"); 
		query.append("                                           ,'')) N2ND_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ORG_NOD_CD ||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD')  " ).append("\n"); 
		query.append("                                           ,'')) N2ND_POL " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD')  " ).append("\n"); 
		query.append("                                           ,'')) N2ND_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ORG_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N2ND_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEST_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N2ND_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ARR_ST_DT" ).append("\n"); 
		query.append("                                           ,'')) N2ND_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEP_FSH_DT" ).append("\n"); 
		query.append("                                           ,'')) N2ND_POD_ETA" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,ORG_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N2ND_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,2,DEST_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N2ND_POD_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                             ,(CASE " ).append("\n"); 
		query.append("                                 WHEN MAX(DECODE(R,2,T_VVD " ).append("\n"); 
		query.append("                                                   ,'')) = 'V' " ).append("\n"); 
		query.append("                                 THEN 'V' " ).append("\n"); 
		query.append("                                 ELSE '' " ).append("\n"); 
		query.append("                               END) N2ND_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N2ND_SPACE " ).append("\n"); 
		query.append("                             ----------------------------------------------------" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,VSL_SLAN_CD||chr(13)||chr(10)||VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD " ).append("\n"); 
		query.append("                                           ,'')) N3RD_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,VSL_SLAN_CD " ).append("\n"); 
		query.append("                                           ,'')) N3RD_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD " ).append("\n"); 
		query.append("                                           ,'')) N3RD_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ORG_NOD_CD ||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD')  " ).append("\n"); 
		query.append("                                           ,'')) N3RD_POL " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD')   " ).append("\n"); 
		query.append("                                           ,'')) N3RD_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ORG_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N3RD_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEST_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N3RD_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ARR_ST_DT" ).append("\n"); 
		query.append("                                           ,'')) N3RD_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEP_FSH_DT" ).append("\n"); 
		query.append("                                           ,'')) N3RD_POD_ETA  " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,ORG_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N3RD_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,3,DEST_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N3RD_POD_CLPT_IND_SEQ                                                                                      " ).append("\n"); 
		query.append("                             ,(CASE " ).append("\n"); 
		query.append("                                 WHEN MAX(DECODE(R,3,T_VVD " ).append("\n"); 
		query.append("                                                   ,'')) = 'V' " ).append("\n"); 
		query.append("                                 THEN 'V' " ).append("\n"); 
		query.append("                                 ELSE '' " ).append("\n"); 
		query.append("                               END) N3RD_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N3RD_SPACE " ).append("\n"); 
		query.append("                             ---------------------------------------------------------" ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,VSL_SLAN_CD ||chr(13)||chr(10)||VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD" ).append("\n"); 
		query.append("                                           ,'')) N4TH_VSL_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,VSL_SLAN_CD " ).append("\n"); 
		query.append("                                           ,'')) N4TH_SLAN_CD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,VSL_CD " ).append("\n"); 
		query.append("                                             ||SKD_VOY_NO " ).append("\n"); 
		query.append("                                             ||SKD_DIR_CD " ).append("\n"); 
		query.append("                                           ,'')) N4TH_VVD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ORG_NOD_CD ||chr(13)||chr(10)||TO_CHAR(ARR_ST_DT,'YYYY-MM-DD')  " ).append("\n"); 
		query.append("                                           ,'')) N4TH_POL " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEST_NOD_CD||chr(13)||chr(10)||TO_CHAR(DEP_FSH_DT,'YYYY-MM-DD')   " ).append("\n"); 
		query.append("                                           ,'')) N4TH_POD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ORG_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N4TH_POL_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEST_NOD_CD " ).append("\n"); 
		query.append("                                           ,'')) N4TH_POD_N " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ARR_ST_DT" ).append("\n"); 
		query.append("                                           ,'')) N4TH_POL_ETD " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEP_FSH_DT" ).append("\n"); 
		query.append("                                           ,'')) N4TH_POD_ETA  " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,ORG_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N4TH_POL_CLPT_IND_SEQ              " ).append("\n"); 
		query.append("                             ,MAX(DECODE(R,4,DEST_CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           ,'')) N4TH_POD_CLPT_IND_SEQ                                                                                    " ).append("\n"); 
		query.append("                             ,(CASE " ).append("\n"); 
		query.append("                                 WHEN MAX(DECODE(R,4,T_VVD " ).append("\n"); 
		query.append("                                                   ,'')) = 'V' " ).append("\n"); 
		query.append("                                 THEN 'V' " ).append("\n"); 
		query.append("                                 ELSE '' " ).append("\n"); 
		query.append("                               END) N4TH_TVVD_FLAG " ).append("\n"); 
		query.append("                             ,''                                      N4TH_SPACE " ).append("\n"); 
		query.append("                             ,(SELECT SLS_OFC_CD " ).append("\n"); 
		query.append("                               FROM   PRD_PROD_CTL_MST M " ).append("\n"); 
		query.append("                               WHERE  M.PCTL_NO = P.PCTL_NO) SLS_OFC_CD " ).append("\n"); 
		query.append("                             ,(SELECT TTL_EXPN_AMT " ).append("\n"); 
		query.append("                               FROM   PRD_PROD_CTL_MST M " ).append("\n"); 
		query.append("                               WHERE  M.PCTL_NO = P.PCTL_NO) TTL_EXPN_AMT " ).append("\n"); 
		query.append("                    FROM     (SELECT D.* " ).append("\n"); 
		query.append("                                     ,ROW_NUMBER() " ).append("\n"); 
		query.append("                                        OVER(PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) R " ).append("\n"); 
		query.append("                                     ,(SELECT 'V' " ).append("\n"); 
		query.append("                                       FROM   PRD_PROD_CTL_MST M " ).append("\n"); 
		query.append("                                       WHERE  M.PCTL_NO = D.PCTL_NO " ).append("\n"); 
		query.append("                                              AND M.TRNK_VSL_CD = D.VSL_CD " ).append("\n"); 
		query.append("                                              AND M.TRNK_SKD_VOY_NO = D.SKD_VOY_NO " ).append("\n"); 
		query.append("                                              AND M.TRNK_SKD_DIR_CD = D.SKD_DIR_CD) T_VVD " ).append("\n"); 
		query.append("                              FROM   PRD_PROD_CTL_ROUT_DTL D " ).append("\n"); 
		query.append("                              WHERE  PCTL_NO LIKE @[hd_pctl_no]||'%'  " ).append("\n"); 
		query.append("                                     AND PCTL_IO_BND_CD = 'T' " ).append("\n"); 
		query.append("                                     AND VSL_SLAN_CD IS NOT NULL " ).append("\n"); 
		query.append("                                     AND PCTL_NO IN (SELECT DISTINCT (PCTL_NO) PCTL_NO " ).append("\n"); 
		query.append("                                                     FROM   PRD_PROD_CTL_ROUT_DTL " ).append("\n"); 
		query.append("                                                     WHERE  PCTL_NO LIKE @[hd_pctl_no]||'%'" ).append("\n"); 
		query.append("                                                            AND PCTL_IO_BND_CD = 'T'" ).append("\n"); 
		query.append("                                                    )) P " ).append("\n"); 
		query.append("                             ,PRD_OCN_ROUT O " ).append("\n"); 
		query.append("                    WHERE    O.ORG_LOC_CD = P.ROUT_ORG_NOD_CD " ).append("\n"); 
		query.append("                             AND O.DEST_LOC_CD = P.ROUT_DEST_NOD_CD " ).append("\n"); 
		query.append("                             AND O.ROUT_SEQ = P.ROUT_SEQ " ).append("\n"); 
		query.append("                    GROUP BY PCTL_NO " ).append("\n"); 
		query.append("                             ,ORG_LOC_CD " ).append("\n"); 
		query.append("                             ,DEST_LOC_CD " ).append("\n"); 
		query.append("                             ,O.ROUT_SEQ " ).append("\n"); 
		query.append("                             ,LNK_KNT " ).append("\n"); 
		query.append("            ) " ).append("\n"); 
		query.append("          ORDER BY PCTL_NO " ).append("\n"); 
		query.append("                   ,NO)             " ).append("\n"); 
		query.append("ORDER BY RK " ).append("\n"); 
		query.append("         ,PCTL_NO " ).append("\n"); 
		query.append("         ,NO" ).append("\n"); 

	}
}