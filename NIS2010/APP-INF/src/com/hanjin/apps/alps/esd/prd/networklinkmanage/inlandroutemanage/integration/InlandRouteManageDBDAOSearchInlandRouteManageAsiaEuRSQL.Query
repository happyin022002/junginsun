<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InlandRouteManageDBDAOSearchInlandRouteManageAsiaEuRSQL">
			<desc><![CDATA[SearchInlandRouteManageAsiaEu]]></desc>
			<sql><![CDATA[
SELECT

              max(to_number(nvl(prio_seq,0))) OVER (PARTITION BY org_loc, dest_loc  ORDER BY org_loc, dest_loc
                                 ) AS max_prio_seq  ,

              rout_org_nod_cd, rout_dest_nod_cd, rn, INLND_ROUT_BKG_FLG  , INLND_ROUT_TMP_FLG, INLND_ROUT_INCL_STTL_FLG,
              org_loc,  org_loc_type,
              dest_loc,  dest_loc_type,
              rout_seq, nvl(prio_seq,0) prio_seq, route,
              sum_tt_time, sum_dw_tt ,--tot_tt,
              ltrim(to_char(trunc(tot_tt/24,0),'00'))||ltrim(to_char(mod(tot_tt,24  ),'00'))  tot_tt,
              '' hub_search_gb, '' front_gb , '' undefine_nod,
              max(rn) OVER (PARTITION BY rout_org_nod_cd, rout_dest_nod_cd  ORDER BY rout_org_nod_cd,
                               rout_dest_nod_cd) AS group_gubun
              ,cre_usr_id,cre_ofc_cd,to_char(cre_dt,'yyyy-mm-dd') cre_dt,inlnd_rout_rmk , UPD_USR_ID,to_char(UPD_DT,'yyyy-mm-dd') UPD_DT
              ,INLND_ROUT_OPTM_FLG
              ,LNK_KNT
              ,INLND_TMNL_SHTL_FLG
              , CASE WHEN @[r_inbound] IN ('M','B') THEN 'X'
                     WHEN INLND_ROUT_OPTM_FLG = 'N' THEN 'X' -- 의미 없음
                     ELSE NVL((SELECT 'N' FROM PRD_INLND_ROUT_MST INQU 
                           WHERE INQU.ROUT_ORG_NOD_CD = SUBQ.ROUT_ORG_NOD_CD
                             AND INQU.ROUT_DEST_NOD_CD = SUBQ.ROUT_DEST_NOD_CD
                             AND INQU.PCTL_IO_BND_CD = @[r_inbound]
                             AND INQU.ROUT_SEQ <> SUBQ.ROUT_SEQ
                             AND NVL(DELT_FLG,'N') = 'N'
                             AND ROWNUM = 1), 'Y')
                     END AS OPTM_DEL_ABLE_FLG
               ,ALTN_OPTM_FLG
         FROM (
           SELECT rout_org_nod_cd, rout_dest_nod_cd, INLND_ROUT_BKG_FLG ,INLND_ROUT_TMP_FLG ,INLND_ROUT_INCL_STTL_FLG,rownum rn,
                substr( rout_org_nod_cd,1,5) org_loc, substr( rout_org_nod_cd,6) org_loc_type,
                substr( rout_dest_nod_cd,1,5) dest_loc, substr( rout_dest_nod_cd,6) dest_loc_type,
                rout_seq, prio_seq, route,
                sum_tt_time, sum_dw_tt , (sum_tt_time + sum_dw_tt) tot_tt
                ,cre_usr_id,cre_ofc_cd,cre_dt ,inlnd_rout_rmk
                ,UPD_USR_ID, UPD_DT --JSY
                ,INLND_ROUT_OPTM_FLG
                , LNK_KNT
                , INLND_TMNL_SHTL_FLG, ALTN_OPTM_FLG
           FROM (
             SELECT rout_org_nod_cd, rout_dest_nod_cd, rout_seq, prio_seq ,INLND_ROUT_BKG_FLG ,INLND_ROUT_TMP_FLG,INLND_ROUT_INCL_STTL_FLG
                    ,rout_org_nod_cd || ' ( ' ||
                    MAX(DECODE ( cnt,1 ,(DECODE(rout_dtl_seq ,1 , trsp_mod , ''  )),
                                              (DECODE(rout_dtl_seq ,1 , trsp_mod , ''  ))) ) || ' ) ' ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,1 ,'', DECODE(rout_dtl_seq, 1 , '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,2 , trsp_mod  || ' ) ', ''  ))) )  ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,2 ,'', DECODE(rout_dtl_seq, 2 , '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,3 , trsp_mod || ' ) ', ''  ))) )   ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,3 ,'', DECODE(rout_dtl_seq, 3 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,4 , trsp_mod  || ' ) ', ''  ))) )  ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,4 ,'', DECODE(rout_dtl_seq, 4 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,5 , trsp_mod || ' ) ', ''  ))) )  ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,5 ,'', DECODE(rout_dtl_seq, 5 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,6 , trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,6 ,'', DECODE(rout_dtl_seq, 6 , '-'||lnk_dest_nod_cd  || ' ( ' ))))   ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,7 , trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,7 ,'', DECODE(rout_dtl_seq, 7 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,8 , trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,8 ,'', DECODE(rout_dtl_seq, 8 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,9 , trsp_mod || ' ) ' , ''  ))) )  ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,9 ,'', DECODE(rout_dtl_seq, 9 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,10, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,10,'', DECODE(rout_dtl_seq, 10, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,11, trsp_mod || ' ) ' , ''  ))) )  ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,11,'', DECODE(rout_dtl_seq, 11, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,12, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,12,'', DECODE(rout_dtl_seq, 12, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,13, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,13,'', DECODE(rout_dtl_seq, 13, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,14, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,14,'', DECODE(rout_dtl_seq, 14, '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,15, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,15,'', DECODE(rout_dtl_seq, 15, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,16, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,16,'', DECODE(rout_dtl_seq, 16, '-'||lnk_dest_nod_cd  || ' ( ' ))))   ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,17, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,17,'', DECODE(rout_dtl_seq, 17, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,18, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,18,'', DECODE(rout_dtl_seq, 18, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,19, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,19,'', DECODE(rout_dtl_seq, 19, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                    MAX(DECODE ( cnt,1 , '' , (DECODE(rout_dtl_seq ,20, trsp_mod || ' ) ', ''  ))) )    ||
                    MAX(DECODE(cnt,1,'', DECODE(cnt,20,'', DECODE(rout_dtl_seq, 20, '-'||lnk_dest_nod_cd))))
                    ||  '-'||rout_dest_nod_cd as route
                    , rout_org_nod_cd AS pod0
                    , rout_dest_nod_cd AS del, sum_tt_time,
              MAX(DECODE ( cnt,1 , DECODE(rout_dtl_seq ,1 , dest_dw_time , 0  ),
                                      DECODE(rout_dtl_seq ,1 , dest_dw_time, 0  )) )  +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,2 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,3 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,4 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,5 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,6 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,7 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,8 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,9 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,10 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,11 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,12 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,13 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,14 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,15 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,16 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,17 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,18 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,19 , dest_dw_time, 0  )) )   +
              MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,20 , dest_dw_time, 0  )) )   sum_dw_tt
              ,MAX(DECODE(cnt,1, cre_usr_id, DECODE(rout_dtl_seq,1, cre_usr_id))) cre_usr_id
              ,MAX(DECODE(cnt,1, cre_ofc_cd, DECODE(rout_dtl_seq,1, cre_ofc_cd))) cre_ofc_cd
              ,MAX(DECODE(cnt,1, cre_dt, DECODE(rout_dtl_seq,1, cre_dt))) cre_dt
              ,MAX(DECODE(cnt,1, inlnd_rout_rmk, DECODE(rout_dtl_seq,1, inlnd_rout_rmk))) inlnd_rout_rmk
              ,MAX(DECODE(cnt,1, UPD_USR_ID, DECODE(rout_dtl_seq,1, UPD_USR_ID))) UPD_USR_ID
              ,MAX(DECODE(cnt,1, UPD_DT, DECODE(rout_dtl_seq,1, UPD_DT))) UPD_DT
              --,MAX(INLND_ROUT_OPTM_FLG) INLND_ROUT_OPTM_FLG
              ,COUNT(1) LNK_KNT
              ,MAX(INLND_TMNL_SHTL_FLG) INLND_TMNL_SHTL_FLG
              ,INLND_ROUT_OPTM_FLG,ALTN_OPTM_FLG
                 FROM (

                       SELECT rout_org_nod_cd, rout_dest_nod_cd, rout_seq, prio_seq,INLND_ROUT_BKG_FLG ,INLND_ROUT_TMP_FLG,INLND_ROUT_INCL_STTL_FLG,
                              rout_dtl_seq, cnt,lnk_org_nod_cd, lnk_dest_nod_cd,trsp_mod_cd,
                              DECODE(trsp_mod_cd,'TD','TRUCK','RD','RAIL','WD','WATER',trsp_mod_cd) trsp_mod,
                              tztm_hrs link_tt_time ,sum_tt_time, org_dw_time,nvl(dest_dw_time,0) dest_dw_time
                              ,cre_usr_id,cre_ofc_cd,cre_dt ,inlnd_rout_rmk, UPD_USR_ID, UPD_DT
                              ,INLND_ROUT_OPTM_FLG, INLND_TMNL_SHTL_FLG,ALTN_OPTM_FLG
                         FROM (
                           SELECT m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq, decode(m.prio_seq,0,null,m.prio_seq) prio_seq,m.INLND_ROUT_BKG_FLG ,INLND_ROUT_INCL_STTL_FLG ,
                                d.lnk_org_nod_cd,d.lnk_dest_nod_cd, d.rout_dtl_seq,d.trsp_mod_cd,l.tztm_hrs,
                                COUNT (*) OVER (PARTITION BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq
                                   ORDER BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq) AS cnt
                                ,SUM(l.tztm_hrs) OVER(PARTITION BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq
                                   ORDER BY m.rout_org_nod_cd,m.rout_dest_nod_cd, m.rout_seq) AS sum_tt_time,
                                (SELECT nvl(decode(@[r_inbound], 'O', ob_dry_avg_dwll_hrs, ib_dry_avg_dwll_hrs),0)  FROM mdm_yard WHERE yd_cd = d.lnk_org_nod_cd ) org_dw_time,
                                (SELECT nvl(decode(@[r_inbound], 'O', ob_dry_avg_dwll_hrs, ib_dry_avg_dwll_hrs),0)  FROM mdm_yard WHERE yd_cd = d.lnk_dest_nod_cd ) dest_dw_time
                                ,INLND_ROUT_TMP_FLG
                                ,m.cre_usr_id,m.cre_ofc_cd,m.cre_dt ,m.inlnd_rout_rmk
                                ,m.UPD_USR_ID, m.UPD_DT --080821 jsy
                                ,M.INLND_ROUT_OPTM_FLG
                                ,CASE WHEN M.PCTL_IO_BND_CD IN ('I','O') 
                                          AND SUBSTR(M.ROUT_ORG_NOD_CD, 1,5) = SUBSTR(M.ROUT_DEST_NOD_CD, 1,5)
                                          AND FNOD.NOD_TP_CD != 'Z' AND TNOD.NOD_TP_CD != 'Z' 
                                          THEN NVL((SELECT 'Y' FROM MDM_COUNTRY 
                                                     WHERE SUBSTR(SCONTI_CD, 1,1) = 'E'
                                                       AND CNT_CD = SUBSTR(M.ROUT_ORG_NOD_CD,1,2)), 'N')
                                      ELSE 'N' END AS INLND_TMNL_SHTL_FLG 
                                ,ALTN_OPTM_FLG
                           FROM prd_inlnd_rout_mst m, prd_inlnd_rout_dtl d, prd_inlnd_each_lnk l
                              , prd_node fnod, prd_node tnod
                           WHERE m.rout_org_nod_cd LIKE @[i_org_cd] ||'%'
                             AND m.rout_dest_nod_cd LIKE @[i_dest_cd] ||'%'
                             AND m.AUTO_IRG_FLG <> 'Y' --컴럼추가로 조건값 추가
                             AND m.INLND_ROUT_OPTM_FLG = CASE WHEN @[r_inbound] = 'B' THEN m.INLND_ROUT_OPTM_FLG
                                                              WHEN NVL(@[sch_optm_flg], 'A') = 'A' THEN m.INLND_ROUT_OPTM_FLG
                                                              ELSE DECODE(@[sch_optm_flg], 'C', 'N', @[sch_optm_flg]) END
                             AND NVL(m.DELT_FLG,'N') = nvl(@[i_del_flg], 'N')
                             AND m.rout_org_nod_cd = d.rout_org_nod_cd
                             AND m.rout_dest_nod_cd = d.rout_dest_nod_cd
                             AND m.rout_seq = d.rout_seq
                             AND d.lnk_org_nod_cd = l.lnk_org_nod_cd
                             AND d.lnk_dest_nod_cd = l.lnk_dest_nod_cd
                             AND d.trsp_mod_cd = l.trsp_mod_cd
                             AND FNOD.NOD_CD = M.ROUT_ORG_NOD_CD
                             AND TNOD.NOD_CD = M.ROUT_DEST_NOD_CD
                             AND M.PCTL_IO_BND_CD = @[r_inbound]
#if(${r_inbound} == 'I')
                             AND FNOD.NOD_TP_CD IN ( 'M','B' )
                             AND 1 = CASE WHEN @[nod_tp_cd1] = 'Z' THEN DECODE(TNOD.NOD_TP_CD, 'Z', 1, 0)
                                          ELSE DECODE(TNOD.NOD_TP_CD, 'Z', 0, 1)
                                          END
#elseif(${r_inbound} == 'O')
                             AND 1 = CASE WHEN @[nod_tp_cd1] = 'Z' THEN DECODE(FNOD.NOD_TP_CD, 'Z', 1, 0)
                                          ELSE DECODE(FNOD.NOD_TP_CD, 'Z', 0, 1)
                                          END
                             AND TNOD.NOD_TP_CD IN ( 'M','B' )
#end
#if(${sch_optm_flg} == 'C')
                             AND 0 = (SELECT COUNT(1) FROM PRD_INLND_ROUT_MST ML
                                      WHERE ML.ROUT_ORG_NOD_CD = M.ROUT_ORG_NOD_CD
                                        AND ML.ROUT_DEST_NOD_CD = M.ROUT_DEST_NOD_CD
                                        AND ML.PCTL_IO_BND_CD = M.PCTL_IO_BND_CD
                                        AND NVL(ML.DELT_FLG,'N') = 'N'
                                        AND ML.INLND_ROUT_OPTM_FLG = 'Y'
                                        AND ROWNUM = 1)
                             AND SUBSTR(M.ROUT_ORG_NOD_CD, 1,5) <> SUBSTR(M.ROUT_DEST_NOD_CD, 1,5)
#end
        	                 ORDER BY m.rout_seq, d.rout_dtl_seq
                           )
                          ) m
                 GROUP BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq, m.prio_seq,sum_tt_time,INLND_ROUT_BKG_FLG,
                          INLND_ROUT_TMP_FLG,m.INLND_ROUT_INCL_STTL_FLG, M.INLND_ROUT_OPTM_FLG,M.ALTN_OPTM_FLG
                 ORDER BY rout_org_nod_cd, rout_dest_nod_cd, prio_seq, M.INLND_ROUT_OPTM_FLG DESC, NVL(INLND_ROUT_BKG_FLG, 'N') DESC
                 )
            ) SUBQ
            ORDER BY   rn			]]></sql>
			<params>
				<param name="r_inbound" type="12" value="" out="N"/>
				<param name="i_org_cd" type="12" value="" out="N"/>
				<param name="i_dest_cd" type="12" value="" out="N"/>
				<param name="sch_optm_flg" type="12" value="" out="N"/>
				<param name="i_del_flg" type="12" value="" out="N"/>
				<param name="nod_tp_cd1" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
