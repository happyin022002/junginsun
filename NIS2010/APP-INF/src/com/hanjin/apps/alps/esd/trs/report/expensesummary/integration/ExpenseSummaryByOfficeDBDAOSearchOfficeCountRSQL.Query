<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ExpenseSummaryByOfficeDBDAOSearchOfficeCountRSQL">
			<desc><![CDATA[조회대상 COUNT 조회]]></desc>
			<sql><![CDATA[
SELECT COUNT(*) CNT
FROM
(
WITH WITH_RESULT 
AS
(    
#if( ${radio_office} == 'WO' )
	      						SELECT  WO_OFC_CD
	            						, MAX(INV_OFC_CD) INV_OFC_CD
#elseif(  ${radio_office} == 'IV' )
	      						SELECT  MAX(WO_OFC_CD) WO_OFC_CD
	            						, INV_OFC_CD
#end
                          , CRE_MONTH
                          , TRSP_COST_DTL_MOD_CD -- COST MODE
                          , TRSP_CRR_MOD_CD      -- TRANS_MODE
                          , TRSP_BND_CD
                          , TRSP_SO_TP_CD        -- S/O TYPE
                          , MAX(TRSP_SO_TP_NM) TRSP_SO_TP_NM     -- S/O TYPE NM
                          , BKG_TERM_CD
                          , NOD_CD                               --CUBE로 Group by 하기 위해서는 NODE가 하나의 컬럼으로 필요하기 때문에 사용
                          , MAX(FM_NOD_CD) FM_NOD_CD
                          , MAX(VIA_NOD_CD) VIA_NOD_CD
                          , MAX(TO_NOD_CD) TO_NOD_CD
                          , MAX(DOR_NOD_CD) DOR_NOD_CD
                          , INV_CURR_CD          -- CURR
						  , WO_OFC_CD SUB_SUM_TITLE
                          , ETS_YN
                    FROM    (
#if( ${period} == 'S' )
		            				SELECT  /*+ USE_NL(SO,WRK,BKG,IXCH) ORDERED INDEX(WO) */
#elseif( ${period} == 'W' )
		            				SELECT  /*+ INDEX(WO XAK2TRS_TRSP_WRK_ORD ) */
#elseif( ${period} == 'I' )
		        				    SELECT  /*+ USE_NL(SO,WRK,BKG,IXCH) ORDERED INDEX(WO) */
#elseif( ${period} == 'G' )
						            SELECT  /*+ USE_NL(SO,WRK,BKG,IXCH) ORDERED INDEX(WO) */
#else
		            				SELECT  /*+ USE_NL(SO,WRK,BKG,IXCH) ORDERED INDEX(WO) */
#end
                                SO.CRE_OFC_CD   WO_OFC_CD  -- W/O OFFICE
                                , WRK.CRE_OFC_CD  INV_OFC_CD --INVOICE OFFICE
#if( ${period} == 'S' )
                                    , TO_CHAR(SO.LOCL_CRE_DT,'YYYYMM') CRE_MONTH
#elseif( ${period} == 'W' )
                                    , TO_CHAR(WO.LOCL_CRE_DT,'YYYYMM') CRE_MONTH
#elseif( ${period} == 'I' )
                                    , TO_CHAR(WRK.INV_CFM_DT,'YYYYMM') CRE_MONTH
#else
                                    , SUBSTR(WRK.GL_DT,1,6) CRE_MONTH
#end

                                    , SO.TRSP_COST_DTL_MOD_CD -- COST MODE
			                        , SO.TRSP_CRR_MOD_CD      -- TRANS_MODE
                                    , DECODE(SO.TRSP_BND_CD,'I','I','O','O','T','T','') TRSP_BND_CD
			                        , SO.TRSP_SO_TP_CD           -- S/O TYPE
			                        , SOTP_CD.INTG_CD_VAL_DP_DESC TRSP_SO_TP_NM  -- S/O TYPE NM
															, DECODE(SO.TRSP_BND_CD,'I',BKG.DE_TERM_CD,'O',BKG.RCV_TERM_CD,'') BKG_TERM_CD
			                        , NVL(SO.INV_CURR_CD, SO.CURR_CD) INV_CURR_CD         -- CURR
#if( ${radio_office} == 'WO' )
                       			  , SO.CRE_OFC_CD  SUB_SUM_TITLE
#elseif(  ${radio_office} == 'IV' )
                              , WRK.CRE_OFC_CD  SUB_SUM_TITLE
#end

			                        , SUBSTR(SO.EQ_TPSZ_CD,2,1) EQ_TPSZ_CD_SUB
			                        , EQ_TPSZ_CD
			                        , SUBSTR(SO.FM_NOD_CD,1,@[node_div])  FM_NOD_CD
			                        , SUBSTR(SO.VIA_NOD_CD,1,@[node_div]) VIA_NOD_CD
			                        , SUBSTR(SO.TO_NOD_CD,1,@[node_div])  TO_NOD_CD
			                        , SUBSTR(SO.DOR_NOD_CD,1,@[node_div]) DOR_NOD_CD
			                        , NVL(SUBSTR(SO.FM_NOD_CD,1,@[node_div]), '')||NVL(SUBSTR(SO.VIA_NOD_CD,1,@[node_div]), '')||NVL(SUBSTR(SO.TO_NOD_CD,1,@[node_div]), '')||NVL(SUBSTR(SO.DOR_NOD_CD,1,@[node_div]), '') NOD_CD
			                        , DECODE(SO.HJL_NO,'','N','Y') ETS_YN
                              FROM    TRS_TRSP_SVC_ORD SO
                                    , TRS_TRSP_WRK_ORD WO
                                    , TRS_TRSP_INV_WRK WRK
                                    , BKG_BOOKING BKG
                                    , COM_INTG_CD_DTL SOTP_CD
                              WHERE   SO.TRSP_WO_OFC_CTY_CD  = WO.TRSP_WO_OFC_CTY_CD(+)
                              AND     SO.TRSP_WO_SEQ         = WO.TRSP_WO_SEQ(+)
                              AND     SO.INV_NO              = WRK.INV_NO(+)
                              AND     SO.INV_VNDR_SEQ        = WRK.INV_VNDR_SEQ(+)
                              AND     SO.BKG_NO              = BKG.BKG_NO(+)
                              AND     SO.EQ_KND_CD = 'U'
                              AND     SO.DELT_FLG            = 'N'
                              AND     SOTP_CD.INTG_CD_ID(+) = 'CD00279'
                              AND     SOTP_CD.INTG_CD_VAL_CTNT(+)  = SO.TRSP_SO_TP_CD
#if (${bndcd} == 'I')
                              AND     SO.TRSP_BND_CD = 'I'
#elseif (${bndcd} == 'O')
                              AND     SO.TRSP_BND_CD = 'O'
#elseif (${bndcd} == 'T')
                              AND     SO.TRSP_BND_CD = 'T'
#elseif (${bndcd} == 'P')
                              AND     SO.TRSP_BND_CD IN ('I','O')
#end

#if( !((${FromDate} == '') && (${ToDate} == '')))
	#if( ${period} == 'S' )
                              AND     SO.LOCL_CRE_DT BETWEEN TO_DATE( '${FromDate}' ,'rrrrmmddhh24') AND TO_DATE( '${ToDate}' ,'rrrrmmddhh24') +0.999999
	#elseif( ${period} == 'W' )
                              AND     WO.LOCL_CRE_DT BETWEEN TO_DATE( '${FromDate}' ,'rrrrmmddhh24') AND TO_DATE( '${ToDate}' ,'rrrrmmddhh24') +0.999999
	#elseif( ${period} == 'I' )
                              AND     WRK.INV_CFM_DT BETWEEN TO_DATE( '${FromDate}' ,'rrrrmmddhh24') AND TO_DATE( '${ToDate}' ,'rrrrmmddhh24') +0.999999
	#elseif( ${period} == 'G' )
                              AND     WRK.GL_DT BETWEEN '${FromDate}' AND '${ToDate}'
	#else
                              AND     1 = 2
	#end
#else
                              AND     1 = 2
#end

	#if($statusCdArr.size() > 0)
                              AND     WRK.TRSP_INV_AUD_STS_CD IN (
		#foreach( ${key} in ${statusCdArr})
			#if($velocityCount == 1)
		    '${key}'
			#else
		    , '${key}'
			#end
		#end
			)
	#end

#if( ${status_cd} == 'INV' )
                              AND     WRK.TRSP_INV_AUD_STS_CD IN ('RC','SV','CF','AR','DA','IF','RJ','PD')
#end 

#if( ${radio_office} == 'WO' )
	#if($inputOfcArr.size() > 0)
                              AND     WO.CRE_OFC_CD IN (
		#foreach( ${key} in ${inputOfcArr})
			#if($velocityCount == 1)
		    UPPER('${key}')
			#else
		    , UPPER('${key}')
			#end
		#end
			)
	#end
#elseif( ${radio_office} == 'IV' )
	#if($inputOfcArr.size() > 0)
                              AND     WRK.CRE_OFC_CD IN (
		#foreach( ${key} in ${inputOfcArr})
			#if($velocityCount == 1)
		    UPPER('${key}')
			#else
		    , UPPER('${key}')
			#end
		#end
			)
	#end
#end
#if($costmodeArr.size() > 0)
                    AND     SO.TRSP_COST_DTL_MOD_CD IN (
    #foreach( ${key} in ${costmodeArr})
        #if($velocityCount == 1)
        '${key}'
        #else
        , '${key}'
        #end
    #end
        )
#end

#if($transmodeArr.size() > 0)
                    AND     SO.TRSP_CRR_MOD_CD IN (
    #foreach( ${key} in ${transmodeArr})
        #if($velocityCount == 1)
        '${key}'
        #else
        , '${key}'
        #end
    #end
        )
#end

#if($sotypeArr.size() > 0)
                    AND     SO.TRSP_SO_TP_CD IN (
    #foreach( ${key} in ${sotypeArr})
        #if($velocityCount == 1)
        '${key}'
        #else
        , '${key}'
        #end
    #end
        )
#end

#if( !(${from_node} == '' || ${from_node} == 'ALL') )
                              AND     SO.fm_nod_cd like '${from_node}'||'%'
#end
#if( !(${via_node} == '' || ${via_node} == 'ALL') )
                              AND     SO.via_nod_cd like '${via_node}'||'%'
#end
#if( !(${to_node} == '' || ${to_node} == 'ALL') )
                              AND     SO.to_nod_cd like '${to_node}'||'%'
#end
#if( !(${door_node} == '' || ${door_node} == 'ALL') )
                              AND     SO.dor_nod_cd like '${door_node}'||'%'
#end

#if( ${ets_yn} == 'N' )
                              AND     SO.HJL_NO IS NULL
#elseif( ${ets_yn} == 'Y' )
                              AND     SO.HJL_NO IS NOT NULL
#end

#if( ${chk} != '0' )
                              UNION ALL
                              SELECT  /*+ USE_NL(SO,WRK,BKG,IXCH) */
                                    SO.CRE_OFC_CD  WO_OFC_CD   -- W/O OFFICE
                                    , WRK.CRE_OFC_CD  INV_OFC_CD --INVOICE OFFICE
  #if( ${period} == 'S' )
                                    , TO_CHAR(SO.LOCL_CRE_DT,'YYYYMM') CRE_MONTH
  #elseif( ${period} == 'W' )
                                    , TO_CHAR(WO.LOCL_CRE_DT,'YYYYMM') CRE_MONTH
  #elseif( ${period} == 'I' )
                                    , TO_CHAR(WRK.INV_CFM_DT,'YYYYMM') CRE_MONTH
  #else
                                    , SUBSTR(WRK.GL_DT,1,6) CRE_MONTH
  #end

                                    , SO.TRSP_COST_DTL_MOD_CD -- COST MODE
                                    , 'RD' TRSP_CRR_MOD_CD    -- TRANS_MODE
                                    , DECODE(SO.TRSP_BND_CD,'I','I','O','O','') TRSP_BND_CD
                                    , 'R'  TRSP_SO_TP_CD      -- S/O TYPE
                                    , 'RAIL BILLING' TRSP_SO_TP_NM  -- S/O TYPE NM
                                    , DECODE(SO.TRSP_BND_CD,'I',BKG.DE_TERM_CD,'O',BKG.RCV_TERM_CD,'') BKG_TERM_CD
                                    , NVL(VNDR.INV_CURR_CD, VNDR.CURR_CD) INV_CURR_CD         -- CURR
#if( ${radio_office} == 'WO' )
                         					  , SO.CRE_OFC_CD SUB_SUM_TITLE
#elseif(  ${radio_office} == 'IV' )
                        					  , WRK.CRE_OFC_CD SUB_SUM_TITLE
#end
                                    , SUBSTR(SO.EQ_TPSZ_CD,2,1) EQ_TPSZ_CD_SUB
                                    , SO.EQ_TPSZ_CD
                                    , SUBSTR(VNDR.FM_NOD_CD,1,@[node_div])  FM_NOD_CD
                                    , '' VIA_NOD_CD
                                    , SUBSTR(VNDR.TO_NOD_CD,1,@[node_div])  TO_NOD_CD
                                    , '' DOR_NOD_CD
                                    , NVL(SUBSTR(VNDR.FM_NOD_CD,1,@[node_div]), '')||NVL(SUBSTR(VNDR.TO_NOD_CD,1,@[node_div]), '') NOD_CD
                                    , 'N' ETS_YN
                              FROM    TRS_TRSP_RAIL_BIL_ORD SO
                                    , TRS_TRSP_EDI_RAIL_ORD WO
                                    , TRS_TRSP_RAIL_INV_WRK WRK
                                    , TRS_TRSP_RAIL_BIL_VNDR_SET VNDR
                                    , BKG_BOOKING BKG
                              WHERE   SO.TRSP_SO_OFC_CTY_CD  = WO.TRSP_SO_OFC_CTY_CD(+)
                              AND     SO.TRSP_SO_SEQ         = WO.TRSP_SO_SEQ(+)
                              AND     SO.BIL_ISS_KNT         = WO.BIL_ISS_KNT(+)
                              AND     SO.TRSP_SO_OFC_CTY_CD  = VNDR.TRSP_SO_OFC_CTY_CD
                              AND     SO.TRSP_SO_SEQ         = VNDR.TRSP_SO_SEQ
					                    AND     VNDR.INV_NO            = WRK.INV_NO (+)
          					          AND     VNDR.INV_VNDR_SEQ      = WRK.INV_VNDR_SEQ    (+)
          					          AND     SO.BKG_NO              = BKG.BKG_NO  (+)
                              AND     SO.DELT_FLG            = 'N'
                              AND     SO.EQ_KND_CD = 'U'

  #if (${bndcd} == 'I')
                              AND     SO.TRSP_BND_CD = 'I'
  #elseif (${bndcd} == 'O')
                              AND     SO.TRSP_BND_CD = 'O'
  #elseif (${bndcd} == 'T')
                              AND     1 = 2
  #elseif (${bndcd} == 'P')
                              AND     SO.TRSP_BND_CD IN ('I','O')
  #end


  #if( !((${FromDate} == '') && (${ToDate} == '')))
	#if( ${period} == 'S' )
                              AND     SO.LOCL_CRE_DT BETWEEN TO_DATE( '${FromDate}' ,'rrrrmmddhh24') AND TO_DATE( '${ToDate}' ,'rrrrmmddhh24') +0.999999
	#elseif( ${period} == 'W' )
                              AND     WO.LOCL_CRE_DT BETWEEN TO_DATE( '${FromDate}' ,'rrrrmmddhh24') AND TO_DATE( '${ToDate}' ,'rrrrmmddhh24') +0.999999
	#elseif( ${period} == 'I' )
                              AND     WRK.INV_CFM_DT BETWEEN TO_DATE( '${FromDate}' ,'rrrrmmddhh24') AND TO_DATE( '${ToDate}' ,'rrrrmmddhh24') +0.999999
	#elseif( ${period} == 'G' )
                              AND     WRK.GL_DT BETWEEN '${FromDate}' AND '${ToDate}'
	#else
                              AND     1 = 2
	#end
  #else
                              AND     1 = 2
  #end

	#if($statusCdArr.size() > 0)
                              AND     WRK.TRSP_INV_AUD_STS_CD IN (
		#foreach( ${key} in ${statusCdArr})
			#if($velocityCount == 1)
		    '${key}'
			#else
		    , '${key}'
			#end
		#end
			)
	#end

  #if( ${status_cd} == 'INV' )
                              AND     WRK.TRSP_INV_AUD_STS_CD IN ('RC','SV','CF','AR','DA','IF','RJ','PD')
  #end 

  #if( ${radio_office} == 'WO' )
	#if($inputOfcArr.size() > 0)
                              AND     WO.CRE_OFC_CD IN (
		#foreach( ${key} in ${inputOfcArr})
			#if($velocityCount == 1)
		    UPPER('${key}')
			#else
		    , UPPER('${key}')
			#end
		#end
			)
	#end
  #elseif( ${radio_office} == 'IV' )
	#if($inputOfcArr.size() > 0)
                              AND     WRK.CRE_OFC_CD IN (
		#foreach( ${key} in ${inputOfcArr})
			#if($velocityCount == 1)
		    UPPER('${key}')
			#else
		    , UPPER('${key}')
			#end
		#end
			)
	#end
  #end

#if($costmodeArr.size() > 0)
                    AND     SO.TRSP_COST_DTL_MOD_CD IN (
    #foreach( ${key} in ${costmodeArr})
        #if($velocityCount == 1)
        '${key}'
        #else
        , '${key}'
        #end
    #end
        )
#end
#if($transmodeArr.size() > 0)
                    AND     'RD' IN (
    #foreach( ${key} in ${transmodeArr})
        #if($velocityCount == 1)
        '${key}'
        #else
        , '${key}'
        #end
    #end
        )
#end
#if($sotypeArr.size() > 0)
                    AND     'R' IN (
    #foreach( ${key} in ${sotypeArr})
        #if($velocityCount == 1)
        '${key}'
        #else
        , '${key}'
        #end
    #end
        )
#end

  #if( !(${from_node} == '' || ${from_node} == 'ALL') )
                              AND     vndr.fm_nod_cd like '${from_node}'||'%'
  #end
  #if( !(${via_node} == '' || ${via_node} == 'ALL') )
                              AND     0 = 1
  #end
  #if( !(${to_node} == '' || ${to_node} == 'ALL') )
                              AND     vndr.to_nod_cd like '${to_node}'||'%'
  #end
  #if( !(${door_node} == '' || ${door_node} == 'ALL') )
                              AND     0 = 1
  #end
  #if( !(${bkgterm} == '' || ${bkgterm} == 'ALL') )
                    					AND     DECODE(SO.trsp_bnd_cd,'I',BKG.de_term_cd,'O',BKG.rcv_term_cd,'') = '${bkgterm}'
  #end
#end
                            )
            
    GROUP BY WO_OFC_CD
            ,INV_OFC_CD
            ,CRE_MONTH
            ,TRSP_COST_DTL_MOD_CD -- COST MODE
            ,TRSP_CRR_MOD_CD -- TRANS_MODE
            ,TRSP_BND_CD
            ,TRSP_SO_TP_CD   -- S/O TYPE
            ,BKG_TERM_CD      --BKG_TERM
            ,NOD_CD          -- NODE
            ,INV_CURR_CD -- CURR
            ,ETS_YN
)
          

SELECT CHK
      ,DIV
      ,WO_OFC_CD
      ,INV_OFC_CD
      ,CRE_MONTH
      ,TRSP_COST_DTL_MOD_CD 
      ,TRSP_CRR_MOD_CD
      ,TRSP_BND_CD
      ,TRSP_SO_TP_CD
      ,TRSP_SO_TP_NM
      ,BKG_TERM_CD
      ,BKG_TERM_NM
      ,FM_NOD_CD
      ,VIA_NOD_CD
      ,TO_NOD_CD
      ,DOR_NOD_CD
      ,ETS_YN
      ,INV_CURR_CD
FROM      
(
    SELECT  '' CHK
          ,DIV
          ,WO_OFC_CD
          ,INV_OFC_CD
          ,CRE_MONTH
          ,TRSP_COST_DTL_MOD_CD 
          ,TRSP_CRR_MOD_CD
          ,TRSP_BND_CD
          ,TRSP_SO_TP_CD
          ,TRSP_SO_TP_NM
          ,BKG_TERM_CD
          ,DECODE(BKG_TERM_CD,'Y','CY'
                            ,'D','Door'
                            ,'H','C''Haul on CY'
                            ,'T','Tackle'
                            ,'I','Free In'
                            ,'O','Free Out'
                            ,'M','Mixed'
                            ,'')  BKG_TERM_NM
          ,FM_NOD_CD
          ,VIA_NOD_CD
          ,TO_NOD_CD
          ,DOR_NOD_CD
          ,ETS_YN
          ,INV_CURR_CD
    FROM      
    (
        -- SUB SUM 없는 데이터
        SELECT '11' DIV
              ,WO_OFC_CD	
              ,INV_OFC_CD
              ,CRE_MONTH	
              ,TRSP_COST_DTL_MOD_CD	
              ,TRSP_CRR_MOD_CD	
              ,TRSP_BND_CD	
              ,TRSP_SO_TP_CD	
              ,TRSP_SO_TP_NM	
              ,BKG_TERM_CD
              ,NOD_CD	
              ,FM_NOD_CD	
              ,VIA_NOD_CD	
              ,TO_NOD_CD	
              ,DOR_NOD_CD	
              ,ETS_YN	
              ,INV_CURR_CD	
              ,SUB_SUM_TITLE	
        FROM WITH_RESULT     
         
        -- OFFICE SUM SUM       
        UNION ALL
        SELECT '22' DIV
              ,SUB_SUM_TITLE  || ' Total' WO_OFC_CD
              ,NULL CRE_MONTH	
              ,NULL TRSP_COST_DTL_MOD_CD	
              ,NULL TRSP_CRR_MOD_CD	
              ,NULL TRSP_BND_CD	
              ,NULL TRSP_SO_TP_CD	
              ,NULL TRSP_SO_TP_NM	
              ,NULL BKG_TERM_CD
              ,NULL BKG_TERM_NM
              ,NULL NOD_CD	
              ,NULL FM_NOD_CD	
              ,NULL VIA_NOD_CD	
              ,NULL TO_NOD_CD	
              ,NULL DOR_NOD_CD	
              ,NULL ETS_YN	
              ,NULL INV_CURR_CD	
			  ,MAX(SUB_SUM_TITLE	)
        FROM WITH_RESULT    
        GROUP BY SUB_SUM_TITLE  
    
        -- 전체 TOTAL 
        UNION ALL
        SELECT '44' DIV
              ,'G/Total' WO_OFC_CD	
              ,NULL CRE_MONTH	
              ,NULL TRSP_COST_DTL_MOD_CD	
              ,NULL TRSP_CRR_MOD_CD	
              ,NULL TRSP_BND_CD	
              ,NULL TRSP_SO_TP_CD	
              ,NULL TRSP_SO_TP_NM	
              ,NULL BKG_TERM_CD
              ,NULL BKG_TERM_NM
              ,NULL NOD_CD	
              ,NULL FM_NOD_CD	
              ,NULL VIA_NOD_CD	
              ,NULL TO_NOD_CD	
              ,NULL DOR_NOD_CD	
              ,NULL ETS_YN	
              ,NULL INV_CURR_CD	
              ,NULL SUB_SUM_TITLE	
        FROM WITH_RESULT    
        GROUP BY 'G/Total'
    )   
)             
)			]]></sql>
			<params>
				<param name="node_div" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
