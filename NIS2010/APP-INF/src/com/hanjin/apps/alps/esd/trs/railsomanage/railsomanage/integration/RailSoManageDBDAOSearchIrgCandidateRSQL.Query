<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailSoManageDBDAOSearchIrgCandidateRSQL">
			<desc><![CDATA[IRG ADJUST  DETAIL 조회 SQL]]></desc>
			<sql><![CDATA[
#set(${cgo_tp_cd}=${cgo_tp_cd})
#set(${rout_seq}=${rout_seq})
#set(${trsp_bnd_cd}=${trsp_bnd_cd})
#set(${bkg_rcvde_term_cd}=${bkg_rcvde_term_cd})
#set(${key_org}=${key_org})
#set(${key_dest}=${key_dest})

#foreach(${key} IN ${arr_size})
    #if(${cgo_tp_cd.get($key)} == 'M')
       #if($velocityCount == 1)
            SELECT
                  ${rout_seq.get($key)} KEY_SEQ, --empty cntr
                  RANK() OVER (ORDER BY ROUT_SEQ) ALT_SUB_SEQ ,
                  PRIO_SEQ,
                  REPLACE(INLND_ROUT_RMK, '|', '/') INLND_ROUT_RMK,
                  ROUT_PLN_CD,
                  ROUT_SEQ,
                  ROUT_ORG_NOD_CD,
                  ROUT_DEST_NOD_CD,
                  RAIL_CMB_THRU_TP_CD,
                  SUBSTR( REF_NO, 1, LENGTH(REF_NO)-2 ) REF_NO,
                  IRG1 || IRG2 || IRG3 || IRG4 || IRG5 || IRG6 || IRG7 || IRG8 IRG ,
                  FM_NOD ,
                  TO_NOD ,
                  IC_1 ,
                  IC_2 ,
                  CASE WHEN TRSP_MOD LIKE '%RD%TD%RD%' THEN 'RTR' WHEN TRSP_MOD NOT LIKE '%RD%' THEN 'NRD' ELSE '' END RTR
            FROM (
                  SELECT
                        A.PRIO_SEQ,
                        A.INLND_ROUT_RMK INLND_ROUT_RMK,
                        A.ROUT_PLN_CD ROUT_PLN_CD,
                        A.ROUT_SEQ,
                        A.ROUT_ORG_NOD_CD,
                        A.ROUT_DEST_NOD_CD,
                        '' IRG,
                        MAX(A. INLND_ROUT_INV_BIL_PATT_CD) RAIL_CMB_THRU_TP_CD,
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) REF_NO,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.LNK_ORG_NOD_CD||'-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG1,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG2,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG3,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG4,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG5,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG6,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG7,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG8 ,
                        SUBSTR(MIN( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD ) ) , 3) FM_NOD ,
                        SUBSTR(MAX( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD) ), 3) TO_NOD ,
                        SUBSTR(MIN( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD)) ), 3) IC_1 ,
                        SUBSTR(MAX( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , 2, '', DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD)) ), 3) IC_2 ,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, B.TRSP_MOD_CD)) TRSP_MOD
                  FROM
                        PRD_INLND_ROUT_MST A,
                        PRD_INLND_ROUT_DTL B,
                        MDM_VENDOR C,
                        PRD_NODE ORG ,
                        PRD_NODE DEST,
                        TRS_AGMT_HDR AGMT ,
                       (
                        SELECT
                              A.ROUT_ORG_NOD_CD ,
                              A.ROUT_DEST_NOD_CD ,
                              A.ROUT_SEQ ,
                              C.MIN_SEQ MIN_SEQ,
                              ROUT_DTL_SEQ MAX_SEQ
                        FROM
                              PRD_INLND_ROUT_DTL A,
                             (
                              SELECT
                                    ROUT_ORG_NOD_CD ,
                                    ROUT_DEST_NOD_CD,
                                    ROUT_SEQ ,
                                    ROUT_DTL_SEQ MIN_SEQ
                              FROM
                                    PRD_INLND_ROUT_DTL
                              WHERE LNK_ORG_NOD_CD = ${key_org.get($key)}
                              AND 	TRSP_MOD_CD='RD'
                             ) C
                        WHERE LNK_DEST_NOD_CD = ${key_dest.get($key)}
                        AND   A.ROUT_ORG_NOD_CD = C.ROUT_ORG_NOD_CD
                        AND   A.ROUT_DEST_NOD_CD = C.ROUT_DEST_NOD_CD
                        AND   A.ROUT_SEQ = C.ROUT_SEQ
                        AND   TRSP_MOD_CD = 'RD'
                       ) D
                  WHERE A.ROUT_ORG_NOD_CD LIKE ${key_org.get($key)}||'%'
                  AND   A.ROUT_DEST_NOD_CD LIKE ${key_dest.get($key)}||'%'
                  AND   A.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD
                  AND   A.ROUT_DEST_NOD_CD = B.ROUT_DEST_NOD_CD
                  AND   A.ROUT_SEQ = B.ROUT_SEQ
                  AND   B.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
                  AND   B.TRSP_AGMT_SEQ =AGMT.TRSP_AGMT_SEQ(+)
                  AND   NVL(A.DELT_FLG, 'N') <> 'Y'
                  AND   A.PCTL_IO_BND_CD = 'M'
                  AND   B.TRSP_MOD_CD = 'RD'
                  AND   B.VNDR_SEQ = C.VNDR_SEQ
                  AND   B.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
                  AND   B.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
                  AND   B.ROUT_SEQ = D.ROUT_SEQ
                  AND   B.ROUT_DTL_SEQ >= D.MIN_SEQ
                  AND   B.ROUT_DTL_SEQ <= D.MAX_SEQ
                  AND   A.ROUT_ORG_NOD_CD = ORG.NOD_CD
                  AND   A.ROUT_DEST_NOD_CD = DEST.NOD_CD
                  AND   ORG.NOD_CD <> 'Z'
                  AND   DEST.NOD_CD <> 'Z'
                  GROUP BY A.PRIO_SEQ, A.INLND_ROUT_RMK, A.ROUT_PLN_CD, A.ROUT_SEQ, B.TRSP_MOD_CD, A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD
                 )
       #else
            UNION
            SELECT
                  ${rout_seq.get($key)} KEY_SEQ,
                  RANK() OVER (ORDER BY ROUT_SEQ) ALT_SUB_SEQ ,
                  PRIO_SEQ,
                  REPLACE(INLND_ROUT_RMK, '|', '/') INLND_ROUT_RMK,
                  ROUT_PLN_CD,
                  ROUT_SEQ,
                  ROUT_ORG_NOD_CD,
                  ROUT_DEST_NOD_CD,
                  RAIL_CMB_THRU_TP_CD,
                  SUBSTR( REF_NO, 1, LENGTH(REF_NO)-2 ) REF_NO,
                  IRG1 || IRG2 || IRG3 || IRG4 || IRG5 || IRG6 || IRG7 || IRG8 IRG ,
                  FM_NOD ,
                  TO_NOD ,
                  IC_1 ,
                  IC_2 ,
                  CASE WHEN TRSP_MOD LIKE '%RD%TD%RD%' THEN 'RTR' WHEN TRSP_MOD NOT LIKE '%RD%' THEN 'NRD' ELSE '' END RTR
            FROM (
                  SELECT
                        A.PRIO_SEQ,
                        A.INLND_ROUT_RMK INLND_ROUT_RMK,
                        A.ROUT_PLN_CD ROUT_PLN_CD,
                        A.ROUT_SEQ,
                        A.ROUT_ORG_NOD_CD,
                        A.ROUT_DEST_NOD_CD,
                        '' IRG,
                        MAX(A. INLND_ROUT_INV_BIL_PATT_CD) RAIL_CMB_THRU_TP_CD,
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) REF_NO,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.LNK_ORG_NOD_CD||'-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG1,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG2,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG3,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG4,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG5,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG6,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG7,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG8 ,
                        SUBSTR(MIN( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD ) ) , 3) FM_NOD ,
                        SUBSTR(MAX( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD) ), 3) TO_NOD ,
                        SUBSTR(MIN( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD)) ), 3) IC_1 ,
                        SUBSTR(MAX( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , 2, '', DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD)) ), 3) IC_2 ,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, B.TRSP_MOD_CD)) TRSP_MOD
                  FROM
                       PRD_INLND_ROUT_MST A,
                       PRD_INLND_ROUT_DTL B,
                       MDM_VENDOR C,
                       PRD_NODE ORG ,
                       PRD_NODE DEST,
                       TRS_AGMT_HDR AGMT ,
                      (
                       SELECT
                             A.ROUT_ORG_NOD_CD ,
                             A.ROUT_DEST_NOD_CD ,
                             A.ROUT_SEQ ,
                             C.MIN_SEQ MIN_SEQ,
                             ROUT_DTL_SEQ MAX_SEQ
                       FROM
                             PRD_INLND_ROUT_DTL A,
                            (
                             SELECT
                                   ROUT_ORG_NOD_CD ,
                                   ROUT_DEST_NOD_CD,
                                   ROUT_SEQ ,
                                   ROUT_DTL_SEQ MIN_SEQ
                             FROM
                                   PRD_INLND_ROUT_DTL
                             WHERE LNK_ORG_NOD_CD = ${key_org.get($key)}
                             AND 	TRSP_MOD_CD='RD'
                            ) C
                       WHERE LNK_DEST_NOD_CD = ${key_dest.get($key)}
                       AND   A.ROUT_ORG_NOD_CD = C.ROUT_ORG_NOD_CD
                       AND   A.ROUT_DEST_NOD_CD = C.ROUT_DEST_NOD_CD
                       AND   A.ROUT_SEQ = C.ROUT_SEQ
                       AND   TRSP_MOD_CD = 'RD'
                      ) D
                  WHERE A.ROUT_ORG_NOD_CD LIKE ${key_org.get($key)}||'%'
                  AND   A.ROUT_DEST_NOD_CD LIKE ${key_dest.get($key)}||'%'
                  AND   A.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD
                  AND   A.ROUT_DEST_NOD_CD = B.ROUT_DEST_NOD_CD
                  AND   A.ROUT_SEQ = B.ROUT_SEQ
                  AND   B.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
                  AND   B.TRSP_AGMT_SEQ =AGMT.TRSP_AGMT_SEQ(+)
                  AND   NVL(A.DELT_FLG, 'N') <> 'Y'
                  AND   A.PCTL_IO_BND_CD = 'M'
                  AND   B.TRSP_MOD_CD = 'RD'
                  AND   B.VNDR_SEQ = C.VNDR_SEQ
                  AND   B.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
                  AND   B.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
                  AND   B.ROUT_SEQ = D.ROUT_SEQ
                  AND   B.ROUT_DTL_SEQ >= D.MIN_SEQ
                  AND   B.ROUT_DTL_SEQ <= D.MAX_SEQ
                  AND   A.ROUT_ORG_NOD_CD = ORG.NOD_CD
                  AND   A.ROUT_DEST_NOD_CD = DEST.NOD_CD
                  AND   ORG.NOD_CD <> 'Z'
                  AND   DEST.NOD_CD <> 'Z'
                  GROUP BY A.PRIO_SEQ, A.INLND_ROUT_RMK, A.ROUT_PLN_CD, A.ROUT_SEQ, B.TRSP_MOD_CD, A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD
            )
       #end
    #else
       #if($velocityCount == 1)
            SELECT
                  ${rout_seq.get($key)} KEY_SEQ, --full cntr
                  RANK() OVER (ORDER BY ROUT_SEQ) ALT_SUB_SEQ ,
                  PRIO_SEQ,
                  REPLACE(INLND_ROUT_RMK, '|', '/') INLND_ROUT_RMK,
                  ROUT_PLN_CD,
                  ROUT_SEQ,
                  ROUT_ORG_NOD_CD,
                  ROUT_DEST_NOD_CD,
                  RAIL_CMB_THRU_TP_CD,
                  SUBSTR( REF_NO, 1, LENGTH(REF_NO)-2 ) REF_NO,
                  IRG1 || IRG2 || IRG3 || IRG4 || IRG5 || IRG6 || IRG7 || IRG8 IRG ,
                  FM_NOD ,
                  TO_NOD ,
                  IC_1 ,
                  IC_2 ,
                  CASE WHEN TRSP_MOD LIKE '%RD%TD%RD%' THEN 'RTR' WHEN TRSP_MOD NOT LIKE '%RD%' THEN 'NRD' ELSE '' END RTR
            FROM (
                  SELECT
                        A.PRIO_SEQ,
                        A.INLND_ROUT_RMK INLND_ROUT_RMK,
                        A.ROUT_PLN_CD ROUT_PLN_CD,
                        A.ROUT_SEQ,
                        A.ROUT_ORG_NOD_CD,
                        A.ROUT_DEST_NOD_CD,
                        '' IRG,
                        MAX(A. INLND_ROUT_INV_BIL_PATT_CD) RAIL_CMB_THRU_TP_CD,
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) REF_NO,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.LNK_ORG_NOD_CD||'-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG1,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG2,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG3,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG4,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG5,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG6,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG7,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG8 ,
                        SUBSTR(MIN( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD ) ) , 3) FM_NOD ,
                        SUBSTR(MAX( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD) ), 3) TO_NOD ,
                        SUBSTR(MIN( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD)) ), 3) IC_1 ,
                        SUBSTR(MAX( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , 2, '', DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD)) ), 3) IC_2 ,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, B.TRSP_MOD_CD)) TRSP_MOD
                  FROM  PRD_INLND_ROUT_MST A,
                        PRD_INLND_ROUT_DTL B,
                        MDM_VENDOR C ,
                        PRD_NODE N ,
                        TRS_AGMT_HDR AGMT
                  WHERE 1=1 
				  #if(${empty_yn} == 'M')
					AND A.ROUT_ORG_NOD_CD = ${key_org.get($key)}
				  #else	
                  	#if($trsp_bnd_cd.get($key) == ''I'') 
                    AND A.ROUT_ORG_NOD_CD LIKE ${key_org.get($key)}||'%'
                  	#else
                    AND A.ROUT_ORG_NOD_CD LIKE SUBSTR(${key_org.get($key)}, 0, 5)||'%'
                  	#end
				  #end
				  #if(${empty_yn} == 'M')
            	    AND A.ROUT_DEST_NOD_CD = ${key_dest.get($key)}
				  #else	
	                  #if($trsp_bnd_cd.get($key) == ''O'') 
    	                  AND A.ROUT_DEST_NOD_CD LIKE ${key_dest.get($key)}||'%'
        	          #else
            	          AND A.ROUT_DEST_NOD_CD LIKE SUBSTR(${key_dest.get($key)}, 0, 5)||'%'
                	  #end
				  #end	
                  AND   A.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD
                  AND   A.ROUT_DEST_NOD_CD = B.ROUT_DEST_NOD_CD
                  AND   A.ROUT_SEQ = B.ROUT_SEQ
                  AND   B.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
                  AND   B.TRSP_AGMT_SEQ =AGMT.TRSP_AGMT_SEQ(+)
                  AND   NVL(A.DELT_FLG, 'N') <> 'Y'
				#if(${empty_yn} == 'M')
                  AND   A.PCTL_IO_BND_CD = 'M'
				#else
				  AND   A.PCTL_IO_BND_CD <> 'M'
				#end
                  AND   B.VNDR_SEQ = C.VNDR_SEQ
                  AND   DECODE( ${trsp_bnd_cd.get($key)} , 'O', A.ROUT_ORG_NOD_CD , A.ROUT_DEST_NOD_CD ) = N.NOD_CD
                  #if($bkg_rcvde_term_cd.get($key) == ''DOOR'')
                  AND   N.NOD_TP_CD = 'Z'
                  #else
                  AND   N.NOD_TP_CD <> 'Z'
                  #end
                  GROUP BY A.PRIO_SEQ, A.INLND_ROUT_RMK, A.ROUT_PLN_CD, A.ROUT_SEQ, A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD
                 )
       #else
            UNION
            SELECT
                  ${rout_seq.get($key)} KEY_SEQ,
                  RANK() OVER (ORDER BY ROUT_SEQ) ALT_SUB_SEQ ,
                  PRIO_SEQ,
                  REPLACE(INLND_ROUT_RMK, '|', '/') INLND_ROUT_RMK,
                  ROUT_PLN_CD,
                  ROUT_SEQ,
                  ROUT_ORG_NOD_CD,
                  ROUT_DEST_NOD_CD,
                  RAIL_CMB_THRU_TP_CD,
                  SUBSTR( REF_NO, 1, LENGTH(REF_NO)-2 ) REF_NO,
                  IRG1 || IRG2 || IRG3 || IRG4 || IRG5 || IRG6 || IRG7 || IRG8 IRG ,
                  FM_NOD ,
                  TO_NOD ,
                  IC_1 ,
                  IC_2 ,
                  CASE WHEN TRSP_MOD LIKE '%RD%TD%RD%' THEN 'RTR' WHEN TRSP_MOD NOT LIKE '%RD%' THEN 'NRD' ELSE '' END RTR
            FROM (
                  SELECT
                        A.PRIO_SEQ,
                        A.INLND_ROUT_RMK INLND_ROUT_RMK,
                        A.ROUT_PLN_CD ROUT_PLN_CD,
                        A.ROUT_SEQ,
                        A.ROUT_ORG_NOD_CD,
                        A.ROUT_DEST_NOD_CD,
                        '' IRG,
                        MAX(A. INLND_ROUT_INV_BIL_PATT_CD) RAIL_CMB_THRU_TP_CD,
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) ||
                        MAX( DECODE( B.TRSP_MOD_CD, 'RD', DECODE( B.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||' / ' ) ) ) REF_NO,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.LNK_ORG_NOD_CD||'-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG1,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG2,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG3,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG4,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG5,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG6,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG7,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, '-('||B.TRSP_MOD_CD||'/'||C.VNDR_ABBR_NM||')-'||B.LNK_DEST_NOD_CD)) IRG8 ,
                        SUBSTR(MIN( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD ) ) , 3) FM_NOD ,
                        SUBSTR(MAX( DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD) ), 3) TO_NOD ,
                        SUBSTR(MIN( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_DEST_NOD_CD)) ), 3) IC_1 ,
                        SUBSTR(MAX( DECODE( SUBSTR(A.INLND_ROUT_INV_BIL_PATT_CD , 2, 1) , 1, '' , 2, '', DECODE( B.TRSP_MOD_CD, 'RD', LPAD(B.ROUT_DTL_SEQ, 2 ) ||B.LNK_ORG_NOD_CD)) ), 3) IC_2 ,
                        MAX(DECODE(B.ROUT_DTL_SEQ, 1, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 2, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 3, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 4, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 5, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 6, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 7, B.TRSP_MOD_CD))||
                        MAX(DECODE(B.ROUT_DTL_SEQ, 8, B.TRSP_MOD_CD)) TRSP_MOD
                  FROM  PRD_INLND_ROUT_MST A,
                        PRD_INLND_ROUT_DTL B,
                        MDM_VENDOR C ,
                        PRD_NODE N ,
                        TRS_AGMT_HDR AGMT                
                  WHERE 1=1
				  #if(${empty_yn} == 'M')
					AND A.ROUT_ORG_NOD_CD = ${key_org.get($key)}
				  #else	
	                  #if($trsp_bnd_cd.get($key) == ''I'') 
    	                AND A.ROUT_ORG_NOD_CD LIKE ${key_org.get($key)}||'%'
                 	  #else
                    	AND A.ROUT_ORG_NOD_CD LIKE SUBSTR(${key_org.get($key)}, 0, 5)||'%'
                  	  #end
				  #end	
                  #if(${empty_yn} == 'M')
            	  	AND A.ROUT_DEST_NOD_CD = ${key_dest.get($key)}
  				  #else
	                  #if($trsp_bnd_cd.get($key) == ''O'') 
    	                AND A.ROUT_DEST_NOD_CD LIKE ${key_dest.get($key)}||'%'
        	          #else
            	        AND A.ROUT_DEST_NOD_CD LIKE SUBSTR(${key_dest.get($key)}, 0, 5)||'%'
                	  #end
				  #end	
                  AND   A.ROUT_ORG_NOD_CD = B.ROUT_ORG_NOD_CD
                  AND   A.ROUT_DEST_NOD_CD = B.ROUT_DEST_NOD_CD
                  AND   A.ROUT_SEQ = B.ROUT_SEQ
                  AND   B.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
                  AND   B.TRSP_AGMT_SEQ =AGMT.TRSP_AGMT_SEQ(+)
                  AND   NVL(A.DELT_FLG, 'N') <> 'Y'
                  AND   A.PCTL_IO_BND_CD <> 'M'
                  AND   B.VNDR_SEQ = C.VNDR_SEQ
                  AND   DECODE( ${trsp_bnd_cd.get($key)} , 'O', A.ROUT_ORG_NOD_CD , A.ROUT_DEST_NOD_CD ) = N.NOD_CD
                  #if($bkg_rcvde_term_cd.get($key) == ''DOOR'')
                  AND   N.NOD_TP_CD = 'Z'
                  #else
                  AND   N.NOD_TP_CD <> 'Z'
                  #end
                GROUP BY A.PRIO_SEQ, A.INLND_ROUT_RMK, A.ROUT_PLN_CD, A.ROUT_SEQ, A.ROUT_ORG_NOD_CD, A.ROUT_DEST_NOD_CD
            )
       #end
    #end
#end			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
