<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MarineTerminalInvoiceManageDBDAOSearchTerminalExpenseVolumeSummaryRSQL">
			<desc><![CDATA[SearchTerminalExpenseVolumeSummary]]></desc>
			<sql><![CDATA[
SELECT	HQ_OFC_CD,
		RHQ_OFC_CD,
		INV_OFC_CD,
		COST_OFC_CD,
		YD_CD,
		VNDR_SEQ,
		VNDR_LGL_ENG_NM,
		INV_NO,
		ISS_DT,
		LOCL_UPD_DT,
		VVD,
		LANE_CD,
		ATB_DT,
		CURR_CD,
		LGS_COST_CD,
		LGS_COST_ABBR_NM,
		VOL_TR_UT_CD,
		VOL_D2, VOL_D4, VOL_D5, VOL_D7, VOL_D8, VOL_D9, VOL_DW, VOL_DX,
		VOL_R2, VOL_R4, VOL_R5, VOL_R7, VOL_R8, VOL_R9, 
		VOL_F2, VOL_F4, VOL_F5,
		VOL_O2, VOL_O4, VOL_O5, VOL_O7,
		VOL_S2, VOL_S4, 
		VOL_T2, VOL_T4, 
		VOL_A2, VOL_A4, VOL_A5,
		VOL_P2, VOL_P4, 
		VOL_C2, VOL_C4, 
		VOL_DAY, VOL_MOVE, OVER_DAYS, VOL_GH, VOL_BOX, VOL_TEU, VOL_TON,
		TTL_20,
		TTL_40,
		TTL_BOX,
		TTL_TEU,
		INV_AMT,
		USD_AMT,
		TML_INV_STS_CD,
		TML_INV_STS_CD_DESC,
		AUTO_CALC_AMT,
		SEMI_AUTO_AMT,
		MANUAL_AMT
FROM	( 
		SELECT	A.HQ_OFC_CD,
				A.RHQ_OFC_CD,
				A.INV_OFC_CD,
				A.COST_OFC_CD,
				A.YD_CD,   
				A.VNDR_SEQ,
				A.VNDR_LGL_ENG_NM,
				A.INV_NO,  
				A.ISS_DT,  
				A.LOCL_UPD_DT,    
				A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD,
				A.LANE_CD,
				A.ATB_DT,  
				A.CURR_CD, 
				A.LGS_COST_CD,
				A.LGS_COST_ABBR_NM,
				A.VOL_TR_UT_CD,
				A.VOL_D2, A.VOL_D4, A.VOL_D5, A.VOL_D7, A.VOL_D8, A.VOL_D9, A.VOL_DW, A.VOL_DX,
				A.VOL_R2, A.VOL_R4, A.VOL_R5, A.VOL_R7, A.VOL_R8, A.VOL_R9, A.VOL_F2, A.VOL_F4, A.VOL_F5,
				A.VOL_O2, A.VOL_O4, A.VOL_O5, A.VOL_O7,
				A.VOL_S2, A.VOL_S4, A.VOL_T2, A.VOL_T4, A.VOL_A2, A.VOL_A4, A.VOL_A5,
				A.VOL_P2, A.VOL_P4, A.VOL_C2, A.VOL_C4, A.VOL_DAY, A.VOL_MOVE, A.OVER_DAYS, A.VOL_GH, A.VOL_BOX, A.VOL_TEU, A.VOL_TON,
				A.VOL_D2+A.VOL_R2+A.VOL_F2+A.VOL_O2+A.VOL_S2+A.VOL_T2+A.VOL_A2+A.VOL_P2+A.VOL_C2 TTL_20,
				A.VOL_D4+A.VOL_R4+A.VOL_F4+A.VOL_O4+A.VOL_O5+A.VOL_S4+A.VOL_T4+A.VOL_A4+A.VOL_P4+A.VOL_D5+A.VOL_A5
				+A.VOL_D7+A.VOL_D8+A.VOL_D9+A.VOL_DW+A.VOL_DX+A.VOL_O7+A.VOL_R5+A.VOL_R7+A.VOL_R8+A.VOL_R9+A.VOL_F5+A.VOL_C4 TTL_40,
				A.VOL_D2+A.VOL_D4+A.VOL_D5+A.VOL_D7+A.VOL_D8+A.VOL_D9+A.VOL_DW+A.VOL_DX+A.VOL_R2
				+A.VOL_R4+A.VOL_R5+A.VOL_R7+A.VOL_R8+A.VOL_R9+A.VOL_F2+A.VOL_F4+A.VOL_F5+A.VOL_O2+A.VOL_O4+A.VOL_O5+A.VOL_O7+A.VOL_S2
				+A.VOL_S4+A.VOL_T2+A.VOL_T4+A.VOL_A2+A.VOL_A4+A.VOL_A5+A.VOL_P2+A.VOL_P4+A.VOL_C2+A.VOL_C4 TTL_BOX,
				A.VOL_D2+A.VOL_D4*2+A.VOL_D5*2+A.VOL_D7*2.25+A.VOL_D8*2.4+A.VOL_D9*2.4+A.VOL_DW*2.65
				+A.VOL_DX*2.65+A.VOL_R2+A.VOL_R4*2+A.VOL_R5*2+A.VOL_R7*2.25+A.VOL_R8*2.4+A.VOL_R9*2.4+A.VOL_F2+A.VOL_F4*2
				+A.VOL_F5*2+A.VOL_O2+A.VOL_O4*2+A.VOL_O5*2+A.VOL_O7*2.25+A.VOL_S2+A.VOL_S4*2+A.VOL_T2+A.VOL_T4*2+A.VOL_A2
				+A.VOL_A4*2+A.VOL_A5*2+A.VOL_P2+A.VOL_P4*2+A.VOL_C2+A.VOL_C4*2 TTL_TEU,
				A.INV_AMT, 
				NVL(ROUND(A.INV_AMT/G.USD_LOCL_XCH_RT,2),0) USD_AMT,
				DECODE(A.TML_INV_STS_CD,'R','RC','C','CF','A','AR','P','AP','D','PD') TML_INV_STS_CD,
				NVL(( SELECT D.INTG_CD_VAL_DP_DESC
				      FROM COM_INTG_CD_DTL D
			          WHERE D.INTG_CD_ID = 'CD00172' AND D.INTG_CD_VAL_CTNT = A.TML_INV_STS_CD AND ROWNUM = 1),'') TML_INV_STS_CD_DESC,
				A.AUTO_CALC_AMT,
				A.SEMI_AUTO_AMT,
				A.MANUAL_AMT,
				NO
		FROM(   SELECT  'SELHQ' HQ_OFC_CD,          
						-- 2015-08-03 그룹사 조직 코드 변경 (HAMUR->HAMRU,NYCNA->NYCRA)                                                                                                                                       
		                DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMRU', 'E', 'HAMRU', 'M', 'NYCRA', 'A', O.AR_HD_QTR_OFC_CD)) RHQ_OFC_CD,                                                                      
		                H.INV_OFC_CD,                                                                                                                                                      
		                H.COST_OFC_CD,                                                                                                                                                     
		                H.YD_CD,                                                                                                                                                           
		                LPAD(H.VNDR_SEQ, 6, '0') VNDR_SEQ,                                                                                                                                 
		                DECODE(V.VNDR_CNT_CD,'KR',V.VNDR_LOCL_LANG_NM,V.VNDR_LGL_ENG_NM) VNDR_LGL_ENG_NM,                                                                                  
		                H.INV_NO,                                                                                                                                                          
		                TO_CHAR(H.ISS_DT, 'YYYYMMDD') ISS_DT,    
	                    TO_CHAR(H.LOCL_UPD_DT, 'YYYYMMDD') LOCL_UPD_DT,                                                                                                                            
		                D.VSL_CD,                                                                                                                                                        	
		                D.SKD_VOY_NO,                                                                                                                                                      
		                D.SKD_DIR_CD, 
	                    D.LANE_CD,                                                                                                                   
		                TO_CHAR(D.ATB_DT,'yyyymmdd') ATB_DT,                                                                                                                              
		                H.CURR_CD,                                                                                                                                                         
		                D.LGS_COST_CD,                                                                                                                                                     
		                LC.LGS_COST_ABBR_NM,                                                                                                                                               
		                D.VOL_TR_UT_CD,                                                                                                                                
		                SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'D2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'D2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_D2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'D4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'D4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_D4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'D5', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'D5', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_D5,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'D7', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'D7', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_D7,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'D8', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'D8', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_D8,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'D9', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'D9', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_D9,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'DW', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'DW', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_DW,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'DX', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'DX', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_DX,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'R2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'R2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_R2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'R4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'R4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_R4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'R5', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'R5', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_R5,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'R7', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'R7', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_R7,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'R8', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'R8', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_R8,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'R9', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'R9', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_R9,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'F2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'F2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_F2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'F4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'F4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_F4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'F5', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'F5', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_F5,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'O2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'O2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_O2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'O4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'O4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_O4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'O5', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'O5', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_O5,
						SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'O7', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'O7', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_O7,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'S2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'S2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_S2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'S4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'S4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_S4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'T2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'T2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_T2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'T4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'T4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_T4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'A2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'A2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_A2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'A4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'A4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_A4,
						SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'A5', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'A5', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_A5,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'P2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'P2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_P2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'P4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'P4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_P4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'C2', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'C2', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_C2,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(CNTR_TPSZ_CD, 'C4', 1, 0) , DECODE(D.CNTR_TPSZ_CD, 'C4', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0))) VOL_C4,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0, OVR_DYS, 0), 0)) VOL_DAY,
						SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', NVL(OVR_DYS, 0),0)) OVER_DAYS,
						-- CHM-201431720 TES Semi-Updated된 Invoice의 Vol정보 반영(ExpenseVolume Summary) (YYS B : 4347-09-16)
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(D.VOL_TR_UT_CD, 'M', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0) , DECODE(D.VOL_TR_UT_CD, 'M', DECODE(NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0, D.CALC_VOL_QTY, D.RVIS_VOL_QTY), 0))) VOL_MOVE,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(D.VOL_TR_UT_CD, 'G', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0) , DECODE(D.VOL_TR_UT_CD, 'G', DECODE(NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0, D.CALC_VOL_QTY, D.RVIS_VOL_QTY), 0))) VOL_GH,
						--// CHM-201539086 AgreementInvoice(4종류Invoice모두) 에서 기존 U를 B로 일괄 변경 & CHM-201539507 UOM에 Metric Ton추가 (W)(CAH D - 2016-01-11)
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(D.VOL_TR_UT_CD, 'B', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0) , DECODE(D.VOL_TR_UT_CD, 'B', DECODE(NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0, D.CALC_VOL_QTY, D.RVIS_VOL_QTY), 0))) VOL_BOX,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(D.VOL_TR_UT_CD, 'T', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0) , DECODE(D.VOL_TR_UT_CD, 'T', DECODE(NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0, D.CALC_VOL_QTY, D.RVIS_VOL_QTY), 0))) VOL_TEU,
	      				SUM(DECODE(LC.LGS_COST_SUBJ_CD, 'SR', DECODE(D.VOL_TR_UT_CD, 'W', NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0) , DECODE(D.VOL_TR_UT_CD, 'W', DECODE(NVL(NVL(D.RVIS_VOL_QTY, D.CALC_VOL_QTY), 0), 0, D.CALC_VOL_QTY, D.RVIS_VOL_QTY), 0))) VOL_TON,
						SUM(D.INV_AMT) INV_AMT,
	                    H.TML_INV_STS_CD,
	                    SUM(D.AUTO_CALC_AMT) AUTO_CALC_AMT,
	                    SUM(D.SEMI_AUTO_AMT) SEMI_AUTO_AMT,
	                    SUM(D.MANUAL_AMT) MANUAL_AMT
	                    , ROW_NUMBER() OVER (ORDER BY H.INV_OFC_CD, H.COST_OFC_CD, H.YD_CD, H.VNDR_SEQ, D.LGS_COST_CD ) AS NO
		        FROM TES_TML_SO_HDR H, TES_LGS_COST LC, TES_TML_SO_COST SC, MDM_ORGANIZATION O, MDM_LOCATION L, MDM_VENDOR V,
	            (SELECT DTL.TML_SO_OFC_CTY_CD,
	              DTL.TML_SO_SEQ,
	              DTL.LGS_COST_CD,
	              DTL.cntr_no,
	              DTL.VSL_CD,
	              DTL.SKD_VOY_NO,
	              DTL.SKD_DIR_CD,
	              DTL.LANE_CD,
	              SUM(DTL.OVR_DYS) OVR_DYS,
	              DTL.ATB_DT ATB_DT,
	              DTL.VOL_TR_UT_CD,
	              DTL.CNTR_TPSZ_CD,
	              SUM(DTL.RVIS_VOL_QTY) RVIS_VOL_QTY,
	              SUM(DTL.CALC_VOL_QTY) CALC_VOL_QTY,
	              SUM(DTL.INV_AMT) INV_AMT,
	              DECODE(DTL.CALC_TP_CD,'A',SUM(DTL.INV_AMT),0) AUTO_CALC_AMT,
	  			  DECODE(DTL.CALC_TP_CD,'M',DECODE(DTL.SEMI_AUTO_CALC_FLG,'Y',SUM(DTL.INV_AMT)),0) SEMI_AUTO_AMT,
	  			  DECODE(DTL.CALC_TP_CD,'M',DECODE(DTL.SEMI_AUTO_CALC_FLG,NULL,SUM(DTL.INV_AMT)),0) MANUAL_AMT
	            FROM TES_TML_SO_HDR HDR, TES_TML_SO_DTL DTL
	            WHERE HDR.TML_SO_OFC_CTY_CD = DTL.TML_SO_OFC_CTY_CD
	              AND HDR.TML_SO_SEQ = DTL.TML_SO_SEQ
	              AND HDR.DELT_FLG IS NULL
	              AND HDR.TML_INV_STS_CD <> 'R'
	              AND HDR.TML_INV_RJCT_STS_CD <> 'RJ'            
	            
	            #if (${yd_cd} != '') 
	              AND HDR.yd_cd = @[yd_cd]
	            #else 
	            #end 
	            
	            #if (${vndr_seq} != '') 
	              AND HDR.vndr_seq = @[vndr_seq]
	            #else 
	            #end

				#if (${cost_ofc_cd} != '')
				#if($sub_ofc_cd1.size() > 0)
					AND     HDR.cost_ofc_cd IN (
					#foreach($sub_ofc_cd1_num IN ${sub_ofc_cd1})
						#if($velocityCount < $sub_ofc_cd1.size()) 
							'$sub_ofc_cd1_num', 
						#else 
							'$sub_ofc_cd1_num' 
						#end 
					#end
					)
				#else
					AND		HDR.cost_ofc_cd = @[cost_ofc_cd]
				#end
				#end

				#if (${inv_ofc_cd} != '')
				#if($sub_ofc_cd2.size() > 0)
					AND     HDR.inv_ofc_cd IN (
					#foreach($sub_ofc_cd2_num IN ${sub_ofc_cd2})
						#if($velocityCount < $sub_ofc_cd2.size()) 
							'$sub_ofc_cd2_num', 
						#else 
							'$sub_ofc_cd2_num' 
						#end 
					#end
					)
				#else
					AND		HDR.inv_ofc_cd = @[inv_ofc_cd]
				#end
				#end

	            
	            #if (${inv_date_type} == 'I') 
	            			AND HDR.iss_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999
	            #elseif (${inv_date_type} == 'R') 
	            			AND HDR.rcv_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999
	            #elseif (${inv_date_type} == 'P') 
	            			AND HDR.locl_upd_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999
	            #elseif (${inv_date_type} == 'A') 
	            			AND DTL.atb_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999 
	            #else 
	            #end
	            
	            #if (${vvd} != '') 
	              AND DTL.vsl_cd = SUBSTR(@[vvd],1,4)    
	              AND DTL.skd_voy_no = SUBSTR(@[vvd],5,4)
	              AND DTL.skd_dir_cd = SUBSTR(@[vvd],9,1)
	            #else 
	            #end
	            
	            #if (${tml_inv_sts_cd} != '') 
	              AND	HDR.tml_inv_sts_cd	=	@[tml_inv_sts_cd]
	            #else
	            #end             
	
	            GROUP BY DTL.TML_SO_OFC_CTY_CD, DTL.TML_SO_SEQ, DTL.LGS_COST_CD, DTL.CNTR_NO, DTL.VSL_CD, DTL.SKD_VOY_NO, DTL.SKD_DIR_CD, DTL.LANE_CD, DTL.ATB_DT, DTL.VOL_TR_UT_CD, DTL.CNTR_TPSZ_CD, DTL.RVIS_VOL_QTY, DTL.CALC_VOL_QTY, DTL.CALC_TP_CD, DTL.SEMI_AUTO_CALC_FLG) D                                             
		        WHERE H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD                                                                                                                            
		        AND H.TML_SO_SEQ = D.TML_SO_SEQ                                                                                                                                            
		        AND H.DELT_FLG IS NULL                                                                                                                                                     
		        AND H.TML_INV_STS_CD <> 'R'                                                                                                                                                
		        AND H.TML_INV_RJCT_STS_CD <> 'RJ'                                                                                                                                          
		        --AND H.TTL_INV_AMT <> 0 --2011.04.12 KSM D요청
	
	#if (${yd_cd} != '') 
	AND h.yd_cd = @[yd_cd]
	#else 
	#end 
	
	#if (${vndr_seq} != '') 
	AND h.vndr_seq = @[vndr_seq]
	#else 
	#end
	
	#if (${cost_ofc_cd} != '')
	#if($sub_ofc_cd1.size() > 0)
		AND     h.cost_ofc_cd IN (
		#foreach($sub_ofc_cd1_num IN ${sub_ofc_cd1})
			#if($velocityCount < $sub_ofc_cd1.size()) 
				'$sub_ofc_cd1_num', 
			#else 
				'$sub_ofc_cd1_num' 
			#end 
		#end
		)
	#else
		AND		h.cost_ofc_cd = @[cost_ofc_cd]
	#end
	#end

	#if (${inv_ofc_cd} != '')
	#if($sub_ofc_cd2.size() > 0)
		AND     h.inv_ofc_cd IN (
		#foreach($sub_ofc_cd2_num IN ${sub_ofc_cd2})
			#if($velocityCount < $sub_ofc_cd2.size()) 
				'$sub_ofc_cd2_num', 
			#else 
				'$sub_ofc_cd2_num' 
			#end 
		#end
		)
	#else
		AND		h.inv_ofc_cd = @[inv_ofc_cd]
	#end
	#end
	
	#if (${inv_date_type} == 'I') 
				AND h.iss_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999
	#elseif (${inv_date_type} == 'R') 
				AND H.rcv_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999
	#elseif (${inv_date_type} == 'P') 
				AND h.locl_upd_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999
	#elseif (${inv_date_type} == 'A') 
				AND d.atb_dt BETWEEN TO_DATE(REPLACE(@[fm_prd_dt],'-'),'YYYYMMDD') AND TO_DATE(REPLACE(@[to_prd_dt],'-'),'YYYYMMDD')+0.99999 
	#else 
	#end
	
	#if (${vvd} != '') 
	AND D.vsl_cd = SUBSTR(@[vvd],1,4)    
	AND D.skd_voy_no = SUBSTR(@[vvd],5,4)
	AND D.skd_dir_cd = SUBSTR(@[vvd],9,1)
	#else 
	#end
	
	AND H.VNDR_SEQ = V.VNDR_SEQ
	AND H.INV_OFC_CD = O.OFC_CD(+)
	AND O.LOC_CD     = L.LOC_CD(+)  
	AND D.LGS_COST_CD = LC.LGS_COST_CD                                                                                                                                         
	AND D.LGS_COST_CD = SC.LGS_COST_CD                                                                                                                                         
	
	
	#if (${lgs_cost_subj_cd} != '') 
	AND LC.lgs_cost_subj_cd IN (
	#foreach($lgs_cost_subj_cd_num IN ${lgs_cost_subj_cd})
		#if($velocityCount < $lgs_cost_subj_cd.size()) 
		'$lgs_cost_subj_cd_num', 
		#else 
		'$lgs_cost_subj_cd_num' 
		#end 
	#end
	)
	#else 
	#end
	
	
	#if (${cntr_sty_cd} != '') 
	AND SC.cntr_sty_cd IN (
	#foreach($cntr_sty_cd_num IN ${cntr_sty_cd})
		#if($velocityCount < $cntr_sty_cd.size()) 
		'$cntr_sty_cd_num', 
		#else 
		'$cntr_sty_cd_num' 
		#end 
	#end
	)
	#else 
	#end
	
	
	#if (${tml_inv_sts_cd} != '') 
	AND	H.tml_inv_sts_cd	=	@[tml_inv_sts_cd]
	#else
	#end
	
	        GROUP BY H.INV_OFC_CD, H.COST_OFC_CD, H.YD_CD, H.VNDR_SEQ, H.INV_NO, D.VSL_CD, D.SKD_VOY_NO, D.SKD_DIR_CD, D.LANE_CD, D.ATB_DT, D.LGS_COST_CD,  H.CURR_CD,                            
	            LC.LGS_COST_SUBJ_CD, D.VOL_TR_UT_CD,  L.CONTI_CD, O.AR_HD_QTR_OFC_CD, H.ISS_DT, H.LOCL_UPD_DT, LC.LGS_COST_ABBR_NM, V.VNDR_LGL_ENG_NM, V.VNDR_CNT_CD ,V.VNDR_LOCL_LANG_NM, O.OFC_CD, H.TML_INV_STS_CD             
	        ORDER BY H.INV_OFC_CD, H.COST_OFC_CD, H.YD_CD, H.VNDR_SEQ, D.LGS_COST_CD) A, GL_MON_XCH_RT G                                                                               
	WHERE  A.CURR_CD = G.CURR_CD                                                                                                                                                       
	AND SUBSTR(A.ISS_DT,1,6) = G.ACCT_XCH_RT_YRMON                                                                                                                              
	AND G.ACCT_XCH_RT_LVL = 1
	
	/**2013.02.26 log-in office가 HAMUOG, SELCOT에서만 조회되도록 하드코딩 추가...1년 후 삭제 예정 FDRCIV201301 ~ FDRCIV201312 **/
	/**2013.06.03 log-in office가 HAMUOG, SELCOT에서만 조회되도록 하드코딩 추가...1년 후 삭제 예정..Rebate Invoice 처리 : 2012년 8월 ~ 2013년 12월..APP201208 ~ APP201312 **/
	/**2013.06.03 log-in office가 HAMUOG, SELCOT에서만 조회되도록 하드코딩 추가...2014년 용..APP201401, APP201402, APP201403 **/
	#if (${cre_ofc_cd} != 'HAMSEL') 
	AND	A.INV_NO NOT IN ('FDRCIV201301','FDRCIV201302','FDRCIV201303','FDRCIV201304','FDRCIV201305','FDRCIV201306','FDRCIV201307','FDRCIV201308','FDRCIV201309','FDRCIV201310','FDRCIV201311','FDRCIV201312',
						 'APP201208','APP201209','APP201210','APP201211','APP201212','APP201301','APP201302','APP201303','APP201304','APP201305','APP201306','APP201307','APP201308','APP201309','APP201310','APP201311','APP201312',
						 'APP201401','APP201402','APP201403'
						 ,'BEST201401Q','BEST201402Q','BEST201403Q','BEST201404Q','BEST201501Q','BEST201502Q','BEST201503Q','BEST201504Q' --// 2014-06-18 추가
						 ,'UOM201406-001' --// 2014-07-08 추가
						 )
	#else
	#end
		)
WHERE	NO BETWEEN @[startpart] AND @[endpart]			]]></sql>
			<params>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="cost_ofc_cd" type="12" value="" out="N"/>
				<param name="inv_ofc_cd" type="12" value="" out="N"/>
				<param name="fm_prd_dt" type="12" value="" out="N"/>
				<param name="to_prd_dt" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="tml_inv_sts_cd" type="12" value="" out="N"/>
				<param name="startpart" type="12" value="" out="N"/>
				<param name="endpart" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
