<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="DOFChgColInqmanageDBDAOSearchDODCollectionInquiryRSQL">
			<desc><![CDATA[DOD Collection Inquiry 조회용 query]]></desc>
			<sql><![CDATA[
--// DOD Collection Inquiry 조회용 query
    SELECT
           MAIN.DE_TERM_CD AS DE_TERM_CD,
           EAS_BKG_TPSZ_QTY_FNC(MAIN.BKG_NO) BKG_QTY,
           MAIN.SC_RFA_TAA  AS SC_RFA_TAA, 
           MAIN.MT_ORG_YD MT_MVMT_ORG_YD_CD,
           MAIN.MT_APPL_DT MT_APPLIED_DT,
           DECODE(MAIN.RFA_FLG,'Y',MAX(NVL(MAIN.CHRR_FRT_TAX_VAL,0)),0) RFA_RT,           
           ------------------------------
           CS.CUST_CNT_CD||LPAD(CS.CUST_SEQ,6,0) MER_CD, --2011-10-27 추가
		   DECODE(CS.RVIS_CNTR_CUST_TP_CD,'B','BCO','N','Non-BCO') AS CUST_TP,  --2011-10-21 추가
           ''                                AS SEQ,
           MAIN.CRE_OFC_CD,
           MAIN.BKG_NO,
           MAIN.BL_NO,
           CS.CUST_LGL_ENG_NM                AS CUST_CD,
           MAIN.CNTR_NO,
           MAIN.CNTR_TPSZ_CD,
           MAIN.POR_CD,
           MAIN.POL_CD,
           MAIN.POD_CD,
           MAIN.DEL_CD,
           TO_CHAR(MAIN.CRE_DT,'YYYY/MM/DD') AS CRE_DT,
           MAIN.CNTR_RTN_YD_CD,
           MAIN.ORG_YD_CD,
           NVL(MAIN.CURR_CD,'EUR')           AS CURR_CD,
           MAIN.HLG_TP_CD,
           CASE
           WHEN MAX(NVL(MAIN.CHRR_FRT_TAX_VAL,0)) > 1000000000
           THEN MAX(NVL(MAIN.CHRR_FRT_TAX_VAL,0)) / 10000000000
           ELSE MAX(NVL(MAIN.CHRR_FRT_TAX_VAL,0))
           END                               AS TAR_AMT,
           SUM(NVL(MAIN.TRNS_REV_AMT,0))     AS TRO_AMT,
           MAX(NVL(MAIN.TRNS_REV_AMT,0))     AS TRO_AMT_MX,
           SUM(NVL(MAIN.DIF_AMT,0))          AS DOD_AMT,
           MAX(NVL(MAIN.DIF_AMT,0))          AS DOD_AMT_MX
      FROM
         (
               SELECT
                      ( SELECT 
                        M.ORG_YD_CD
                        FROM CTM_MOVEMENT M
                        WHERE 1=1
                        AND M.CNTR_NO = TMP.CNTR_NO
                        AND M.BKG_NO = TMP.BKG_NO
                        AND M.MVMT_STS_CD = 'MT'
                        #if (${return_cy} != '') 
                        AND M.ORG_YD_CD LIKE @[return_cy]||'%'
                        #end
						#if ( ${sel_tp_cd} != '1' && ${sel_tp_cd} != '2' )
                        ## mt return month 
                        #if (${mt_rtn_mth} != '') 
                        AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[mt_rtn_mth]||'01','YYYYMMDD') AND LAST_DAY(TO_DATE(@[mt_rtn_mth],'YYYYMM')) + 0.999
                        #else  
                        ## mt return period 
                        AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[fm_mt_rtn_prd],'YYYYMMDD') AND TO_DATE(@[to_mt_rtn_prd],'YYYYMMDD') + 0.999
                        #end  
						#end
                        AND M.CNMV_SEQ = (  SELECT 
                                            MIN(M2.CNMV_SEQ)
                                            FROM CTM_MOVEMENT M2
                                            WHERE 1=1
                                            AND M2.CNTR_NO = TMP.CNTR_NO
                                            AND M2.BKG_NO = TMP.BKG_NO
                                            AND M2.MVMT_STS_CD = 'MT'  ) ) MT_ORG_YD,
					  (
						SELECT M.PREV_MVMT_STS
				        FROM (
				            SELECT LAG(M.MVMT_STS_CD) OVER (PARTITION BY M.BKG_NO, M.CNTR_NO ORDER BY M.CNMV_EVNT_DT) PREV_MVMT_STS, M.MVMT_STS_CD, M.CNTR_NO, M.BKG_NO
				            FROM CTM_MOVEMENT M
					        ) M
				        WHERE 1=1
				          AND M.MVMT_STS_CD = 'MT'
				          AND M.CNTR_NO = TMP.CNTR_NO
				          AND M.BKG_NO = TMP.BKG_NO
				      ) PRE_MVMT_STS,              
                      ( SELECT 
                        TO_CHAR(M.CNMV_EVNT_DT,'YYYY/MM/DD')
                        FROM CTM_MOVEMENT M
                        WHERE 1=1
                        AND M.CNTR_NO = TMP.CNTR_NO
                        AND M.BKG_NO = TMP.BKG_NO
                        AND M.MVMT_STS_CD = 'VL' 
                        AND M.CNMV_SEQ = (  SELECT 
                                            MIN(M2.CNMV_SEQ)
                                            FROM CTM_MOVEMENT M2                                            
                                            WHERE 1=1
                                            AND M2.CNTR_NO = TMP.CNTR_NO
                                            AND M2.BKG_NO = TMP.BKG_NO
                                            AND M2.MVMT_STS_CD = 'VL'  ) ) MT_APPL_DT,
                        TMP.CRE_OFC_CD,
                        TMP.BKG_NO,
                        TMP.DE_TERM_CD,
                        TMP.BL_NO,
                        TMP.CUST_CNT_CD,
                        TMP.CUST_SEQ,
                        TMP.CNTR_NO,
                        TMP.CNTR_TPSZ_CD,
                        TMP.POR_CD,
                        TMP.POL_CD,
                        TMP.POD_CD,
                        TMP.DEL_CD,
                        TMP.SC_RFA_TAA,
                        TMP.CRE_DT,
                        TMP.CNTR_RTN_YD_CD,
                        TMP.ORG_YD_CD,
                        TMP.CURR_CD,
                        TMP.HLG_TP_CD,
                        TMP.DIF_AMT,
                        TMP.TRNS_REV_AMT,
                        CASE TRF.CONTI_CD
                        WHEN NULL
                        THEN TRF.CHRR_FRT_TAX_VAL
                        WHEN ' '
                        THEN TRF.CHRR_FRT_TAX_VAL
                        WHEN
                        (
                            SELECT
                            LOC.CONTI_CD
                            FROM MDM_LOCATION LOC
                            WHERE LOC.DELT_FLG = 'N'
                            AND LOC.LOC_CD   = TMP.POR_CD 
                        )
                        THEN TRF.CHRR_FRT_TAX_VAL * 10000000000
                        ELSE 0
                        END AS CHRR_FRT_TAX_VAL
                        ,TRF.RFA_FLG
                 FROM
                    (
                          SELECT 
                                BTR.CRE_OFC_CD,
                                BTR.BKG_NO,
                                BKG.DE_TERM_CD,
                                BKG.BL_NO BL_NO,
                                BCS.CUST_CNT_CD,
                                BCS.CUST_SEQ,
                                BCN.CNTR_NO,
                                BCN.CNMV_ID_NO,
                                BCN.CNMV_YR,
                                BCN.CNTR_TPSZ_CD,
                                BTR.CNTR_RTN_YD_CD,
                                BKG.POR_CD,
                                BKG.POL_CD,
                                BKG.POD_CD,
                                BKG.DEL_CD,
                                DECODE(TRIM(BKG.RFA_NO),NULL,(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),'',(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),TRIM(BKG.RFA_NO)) SC_RFA_TAA, 
                                BTR.CRE_DT,
                                CMV.MVMT_STS_CD,
                                CMV.ORG_YD_CD,
                                BTR.CURR_CD,
                                BTR.HLG_TP_CD,
                                (NVL (BTR.TRNS_REV_AMT, 0) + NVL (BTR.NMF_TRNS_REV_AMT,0)) AS TRNS_REV_AMT,
                                ARM.LOCL_CURR_CD AS AR_CURR_CD,
                                SUM(
                                    (SELECT
                                    SUM (CHG_AMT * INV_XCH_RT)
                                    FROM INV_AR_CHG ARC
                                    WHERE ARC.CHG_CD   = 'DOD'
                                    AND ARC.AR_IF_NO = ARM.AR_IF_NO)
                                ) AS DIF_AMT
                            FROM BKG_EUR_TRO   BTR,
                                 BKG_BOOKING   BKG,
                                 BKG_CUSTOMER  BCS,
                                 BKG_CONTAINER BCN,
                                 CTM_MOVEMENT  CMV,
                                 INV_AR_MN     ARM
                           WHERE  1=1
                           

                             -- BKG NO. 기준 
                             #if ( ${sel_tp_cd} == '1' )
                             AND    BKG.BKG_NO = @[bkg_no]  --SHCC1EA78100  SHCC1DK15600
							 #end	

                             -- TRO OFC. 기준 
                             #if ( ${sel_tp_cd} == '2' )
							

 								#if( ${ctrl_ofc_cd} != '' )
						    	AND    BTR.CRE_OFC_CD IN (${ctrl_ofc_cd})
								#end

							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
                                #if (${tromonth} != '') 
                             	AND    TO_CHAR(BTR.CRE_DT,'YYYYMM')= @[tromonth] --> TRO Month조건
                                #else 
                             	AND    TO_CHAR(BTR.CRE_DT,'YYYYMMDD') >= @[fromtrodate] --> TRO Period조건
                             	AND    TO_CHAR(BTR.CRE_DT,'YYYYMMDD') <= @[totrodate] + 0.999 --> TRO Period조건
                                #end
                             #end
                             -- RFA 기준 
                             #if ( ${sel_tp_cd} == '3' )
   							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
                             AND    ARM.RFA_NO    = @[rfa_no]  --BAH11A0106 TYO11A0160 FRA10A0008
							 #end

                             -- MERCHANT 기준 
                             #if ( ${sel_tp_cd} == '4' )
							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
                             AND    BCS.CUST_CNT_CD = SUBSTR(@[cust_cd],1,2)  --  DE000441  + DEBERY1
                             AND    BCS.CUST_SEQ = SUBSTR(@[cust_cd],3)
							 #end
                             
                             -- MT RETURN YD 기준 
                             #if ( ${sel_tp_cd} == '5' )
							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
							 #end                             
                             
                             -- MT RETURN YD나 MT RETURN DT가 조회 기준으로 잡힐 경우만

                             AND EXISTS (
                                SELECT 'X'
                                FROM CTM_MOVEMENT M
                                WHERE 1=1
                                #if (${return_cy} != '') 
                                AND M.ORG_YD_CD LIKE @[return_cy]||'%'
                                #end
                                AND M.CNTR_NO = BCN.CNTR_NO
                                AND M.BKG_NO = BCN.BKG_NO
                                AND M.CNTR_NO = BTR.CNTR_NO
                                AND M.BKG_NO = BTR.BKG_NO
                                AND M.MVMT_STS_CD = 'MT'

                                ## mt return month 
                             	#if ( ${sel_tp_cd} != '1' && ${sel_tp_cd} != '2' )
                                #if (${mt_rtn_mth} != '') 
                                AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[mt_rtn_mth]||'01','YYYYMMDD') AND LAST_DAY(TO_DATE(@[mt_rtn_mth],'YYYYMM')) + 0.999
                                #else  
                                ## mt return period 
                                AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[fm_mt_rtn_prd],'YYYYMMDD') AND TO_DATE(@[to_mt_rtn_prd],'YYYYMMDD') + 0.999
                                #end 
                                #end 
                             )

                             AND BTR.IO_BND_CD                    = 'I'
                             AND BTR.TRO_SEQ > 0
                             AND BTR.BKG_NO                       = BKG.BKG_NO
                             AND BTR.BKG_NO                       = BCN.BKG_NO
                             AND BTR.BKG_NO                       = BCS.BKG_NO
                             AND SUBSTR (BTR.CNTR_RTN_YD_CD,1,5) != BKG.POD_CD
                             
                             AND BCN.CNMV_CYC_NO > 0
                             AND BCN.CRE_DT >= TO_DATE('19990101','YYYYMMDD')
                             
                             AND BTR.CNTR_NO    = BCN.CNTR_NO
                             AND BCN.CNTR_NO    = CMV.CNTR_NO
                             AND BCN.CNMV_ID_NO = CMV.CNMV_ID_NO
                             AND BCN.CNMV_YR    = CMV.CNMV_YR
                             AND BTR.BKG_NO     = ARM.BKG_NO(+)
                             AND BTR.IO_BND_CD  = ARM.IO_BND_CD(+)
                             AND BCS.BKG_CUST_TP_CD
                               =
                               (
								    SELECT BCS2.BKG_CUST_TP_CD  --2011-10-21 추가
                                    FROM BKG_CUSTOMER BCS2
                                    WHERE BCS2.BKG_NO = BCS.BKG_NO
                                    AND BCS2.BKG_CUST_TP_CD = DECODE(BKG.CUST_TO_ORD_FLG,'Y','N','C')
                               )
                        GROUP BY BTR.CRE_OFC_CD,
                                 BTR.BKG_NO,
                                 BKG.DE_TERM_CD,
                                 BKG.BL_NO,
                                 BCS.CUST_CNT_CD,
                                 BCS.CUST_SEQ,
                                 BCN.CNTR_NO,
                                 BCN.CNMV_ID_NO,
                                 BCN.CNMV_YR,
                                 BCN.CNTR_TPSZ_CD,
                                 BTR.CNTR_RTN_YD_CD,
                                 BKG.POR_CD,
                                 BKG.POL_CD,
                                 BKG.POD_CD,
                                 BKG.DEL_CD,
                                 BTR.CRE_DT,
                                 CMV.MVMT_STS_CD,
                                 CMV.ORG_YD_CD,
                                 BTR.CURR_CD,
                                 BTR.HLG_TP_CD, 
                               (
                                 NVL (BTR.TRNS_REV_AMT, 0)
                               + NVL (BTR.NMF_TRNS_REV_AMT,0)
                               ) ,
                                 ARM.LOCL_CURR_CD, 
                                 DECODE(TRIM(BKG.RFA_NO),NULL,(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),'',(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),TRIM(BKG.RFA_NO))
                    ) TMP,
                    (
                         SELECT
                            DECODE(H.RFA_NO,NULL,'Y','','Y','Y') RFA_FLG,
                            H.FM_EFF_DT EFF_DT,
                            D.SCC_CD FM_LOC_CD,
                            D.CONTI_CD CONTI_CD,
                            D.CURR_CD CURR_CD,
                            T.CNTR_TPSZ_CD CNTR_TP_CD,
                            T.CHRR_FRT_TAX_VAL CHRR_FRT_TAX_VAL
                        FROM EAS_DRFF_CHG_TRF_HDR H, EAS_DRFF_CHG_TRF_DTL D, EAS_DRFF_CHG_TRF_TP_SZ T
                        WHERE 1=1
                        AND H.DRFF_CHG_TRF_SEQ = D.DRFF_CHG_TRF_SEQ
                        AND H.DRFF_CHG_TRF_VER_NO = D.DRFF_CHG_TRF_VER_NO
                        AND NVL(H.DELT_FLG,'N') <> 'Y'
                        AND (H.DRFF_CHG_TRF_SEQ, H.DRFF_CHG_TRF_VER_NO) IN (
                            SELECT DRFF_CHG_TRF_SEQ, MAX(DRFF_CHG_TRF_VER_NO) DRFF_CHG_TRF_VER_NO
                            FROM EAS_DRFF_CHG_TRF_HDR H
                            WHERE 1=1
                            AND NVL(H.DELT_FLG,'N') <> 'Y'
                            GROUP BY DRFF_CHG_TRF_SEQ
                        )
                        AND D.DRFF_CHG_TRF_SEQ = T.DRFF_CHG_TRF_SEQ
                        AND D.DRFF_CHG_TRF_VER_NO = T.DRFF_CHG_TRF_VER_NO
                        AND D.DRFF_CHG_TRF_DTL_SEQ = T.DRFF_CHG_TRF_DTL_SEQ
                    ) TRF
                WHERE SUBSTR(TMP.CNTR_RTN_YD_CD,1,5) = TRF.FM_LOC_CD(+)
                  AND TMP.CNTR_TPSZ_CD = TRF.CNTR_TP_CD(+)
         ) MAIN,
         MDM_CUSTOMER CS
	 WHERE 1=1
     AND MAIN.CUST_CNT_CD = CS.CUST_CNT_CD(+)
     AND MAIN.CUST_SEQ = CS.CUST_SEQ(+)
	 AND MAIN.PRE_MVMT_STS = 'ID'
     --AND MAIN.MT_ORG_YD IS NOT NULL
GROUP BY MAIN.CRE_OFC_CD,
         MAIN.BKG_NO,
         MAIN.DE_TERM_CD,
         MAIN.BL_NO,
         CS.CUST_LGL_ENG_NM,
         CS.CUST_LGL_ENG_NM,
         MAIN.CNTR_NO,
         MAIN.CNTR_TPSZ_CD,
         MAIN.POR_CD,
         MAIN.POL_CD,
         MAIN.POD_CD,
         MAIN.DEL_CD,
         MAIN.CRE_DT,
         MAIN.CNTR_RTN_YD_CD,
         MAIN.ORG_YD_CD,
         NVL(MAIN.CURR_CD,'EUR'),
         MAIN.HLG_TP_CD,
         CS.RVIS_CNTR_CUST_TP_CD,  --2011-10-21 추가
         CS.CUST_CNT_CD||LPAD(CS.CUST_SEQ,6,0), --2011-10-27 추가
         MAIN.MT_ORG_YD,
         MAIN.RFA_FLG,
         MAIN.SC_RFA_TAA,
         MAIN.MT_APPL_DT			]]></sql>
			<params>
				<param name="return_cy" type="12" value="" out="N"/>
				<param name="mt_rtn_mth" type="12" value="" out="N"/>
				<param name="fm_mt_rtn_prd" type="12" value="" out="N"/>
				<param name="to_mt_rtn_prd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="haul_cd" type="12" value="" out="N"/>
				<param name="tromonth" type="12" value="" out="N"/>
				<param name="fromtrodate" type="12" value="" out="N"/>
				<param name="totrodate" type="12" value="" out="N"/>
				<param name="rfa_no" type="12" value="" out="N"/>
				<param name="cust_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
