<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OptimumRoutePassDBDAOsearchOptmRoutPassSmryRSQL">
			<desc><![CDATA[searchOptmRoutPassSmry]]></desc>
			<sql><![CDATA[
---- CPY_NO : 0 - GRAND GRAND TOTAL (Office-ALL,TM-ALL)
---- CPY_NO : 1 - GRAND TOTAL       (Office-ALL,TM-개별)
---- CPY_NO : 2 - OFFICE TOTAL      (Office-개별,TM-ALL)
---- CPY_NO : 3 - 개별                              (Office-개별,TM-개별)
---- OptmRoutPassSmryVO
SELECT CPY_NO, WO_CRE_OFC_CD, TRSP_BND_CD, TRSP_MOD_CD, TOT_SO_CNT, PASS_CNT, ALT_PASS_CNT, NON_PASS_CNT, NON_PASS_RATIO
     , NON_PASS_T_CNT, NON_PASS_R_CNT, NON_PASS_N_CNT, NON_PASS_O_CNT
     , NON_PASS_T_RATIO, NON_PASS_R_RATIO, NON_PASS_N_RATIO, NON_PASS_O_RATIO
     , DECODE(CPY_NO, 0, 0, 1, 0, DENSE_RANK() OVER (ORDER BY WO_CRE_OFC_CD, TRSP_BND_CD)) GRP_NO -- GRP_NO가 0일 경우 체크 불가
     , CASE WHEN CPY_NO IN (0,1) THEN @[input_office] ELSE WO_CRE_OFC_CD END QRY_OFC_CD -- DETAIL조회시 OFFICE CODE에 해당
     , CASE WHEN CPY_NO IN (0,2) THEN @[trsp_mod_cd] ELSE TRSP_MOD_CD END QRY_TRSP_MOD_CD -- DETAIL조회시 Trans Mode에 해당
     , @[from_date]        IN_FROM_DATE
     , @[to_date]          IN_TO_DATE
     , DSCR_RSN_MAP
FROM (
    select CPY_NO
         , DECODE(CPY_NO, 0, 'ALL', 1, 'ALL', WO_CRE_OFC_CD) WO_CRE_OFC_CD
         , TRSP_BND_CD
         , DECODE(CPY_NO, 0, 'ALL', 2, 'ALL', TRSP_MOD_CD) TRSP_MOD_CD
         , SUM(TOT_CNT) TOT_SO_CNT
         , SUM(PASS_CNT)  PASS_CNT
		 , SUM(ALT_PASS_CNT) ALT_PASS_CNT
         , SUM(NON_PASS_CNT) NON_PASS_CNT
         , SUM(NON_PASS_T_CNT) NON_PASS_T_CNT
         , SUM(NON_PASS_R_CNT) NON_PASS_R_CNT
         , SUM(NON_PASS_N_CNT) NON_PASS_N_CNT
         , SUM(NON_PASS_O_CNT) NON_PASS_O_CNT
         , (ROUND(NVL(SUM(NON_PASS_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' NON_PASS_RATIO
         , (ROUND(NVL(SUM(NON_PASS_T_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' NON_PASS_T_RATIO
         , (ROUND(NVL(SUM(NON_PASS_R_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' NON_PASS_R_RATIO
         , (ROUND(NVL(SUM(NON_PASS_N_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' NON_PASS_N_RATIO
         , (ROUND(NVL(SUM(NON_PASS_O_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' NON_PASS_O_RATIO
         , ROW_NUMBER() OVER (ORDER BY INSTR('ALL,' || @[input_office], DECODE(CPY_NO, 0, 'ALL', 1, 'ALL', WO_CRE_OFC_CD))
                                     , TRSP_BND_CD DESC
                                     , DECODE(CPY_NO, 0, 'ALL', 2, 'ALL', TRSP_MOD_CD)
                             ) SORT_RN
     , MAX(DSCR_RSN_MAP_T)
        || MAX(DSCR_RSN_MAP_R)
        || MAX(DSCR_RSN_MAP_O)
        || MAX(DSCR_RSN_MAP_D)
        || MAX(DSCR_RSN_MAP_P)
        || MAX(DSCR_RSN_MAP_N)
        || MAX(DSCR_RSN_MAP_I)
        || MAX(DSCR_RSN_MAP_M)
        || MAX(DSCR_RSN_MAP_S)
        || MAX(DSCR_RSN_MAP_A) DSCR_RSN_MAP
    from (
        SELECT
            A.CRE_OFC_CD                         WO_CRE_OFC_CD, -- wo create office
            B.TRSP_BND_CD,
            B.TRSP_CRR_MOD_CD TRSP_MOD_CD,
            COUNT(1) TOT_CNT,
             SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('M') AND B.PASS_TP_CD IS NULL THEN 1 ELSE 0 END)) PASS_CNT
           , SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('M') AND B.PASS_TP_CD = 'A' THEN 1 ELSE 0 END)) ALT_PASS_CNT
           , SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('M') THEN 0 ELSE 1 END)) NON_PASS_CNT
           , SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('T') THEN 1 ELSE 0 END)) NON_PASS_T_CNT
           , SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('R') THEN 1 ELSE 0 END)) NON_PASS_R_CNT
           , SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('N') THEN 1 ELSE 0 END)) NON_PASS_N_CNT
           , SUM((CASE WHEN B.SO_DSCR_RSN_CD IN ('T', 'R', 'N', 'M') THEN 0 ELSE 1 END)) NON_PASS_O_CNT

           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'T', 'T')) DSCR_RSN_MAP_T
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'R', 'R')) DSCR_RSN_MAP_R
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'O', 'O')) DSCR_RSN_MAP_O
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'D', 'D')) DSCR_RSN_MAP_D
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'P', 'P')) DSCR_RSN_MAP_P
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'N', 'N')) DSCR_RSN_MAP_N
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'I', 'I')) DSCR_RSN_MAP_I
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'M', 'M')) DSCR_RSN_MAP_M
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'S', 'S')) DSCR_RSN_MAP_S
           , MAX(DECODE(B.SO_DSCR_RSN_CD, 'A', 'A')) DSCR_RSN_MAP_A
        FROM TRS_TRSP_WRK_ORD A ,
            TRS_TRSP_SVC_ORD B
#if(${sel_date} == 'inv')
           , TRS_TRSP_INV_WRK C
#end
#if (${from_node} != ''|| ${door_node} != '')
           , BKG_BOOKING BKG
#end
        WHERE B.BKG_NO IS NOT NULL
        AND B.TRSP_BND_CD IN ('I','O')
        AND A.TRSP_WO_OFC_CTY_CD = B.TRSP_WO_OFC_CTY_CD(+)
        AND A.TRSP_WO_SEQ = B.TRSP_WO_SEQ(+)
        AND NVL(B.DELT_FLG, 'N') = 'N'
        AND B.SO_DSCR_RSN_CD IS NOT NULL
        AND A.LOCL_UPD_DT >= TO_DATE('20120701', 'YYYYMMDD')  -- System Open시 처리
#if (${from_node} != ''|| ${door_node} != '')
        AND B.BKG_NO = BKG.BKG_NO
#end
#if (${from_node} != '') 
        AND DECODE(B.TRSP_BND_CD, 'O', BKG.POL_NOD_CD, BKG.POD_NOD_CD) LIKE @[from_node]||'%'
#end
#if (${door_node} != '') 
      AND NVL((SELECT  ZN_CD
                         FROM BKG_EUR_TRO_DTL TD
                            , SCE_TRO_MAPG M
                         WHERE 1=1
                         AND B.COP_NO = M.COP_NO
                         AND TD.BKG_NO = M.BKG_NO
                         AND TD.IO_BND_CD = M.IO_BND_CD
                         AND TD.TRO_SEQ = M.TRO_SEQ
                         AND TD.ZN_CD IS NOT NULL
                         AND TD.DOR_ADDR_TP_CD = 'D'
                         AND ROWNUM=1)
					   , DECODE(B.TRSP_BND_CD, 'O', BKG.POR_NOD_CD, BKG.DEL_NOD_CD)) LIKE @[door_node]||'%'
#end
        ---------------------- VELOCITY 영역
#if(${sel_date} == 'wo')
        AND A.LOCL_UPD_DT BETWEEN TO_DATE(REPLACE(@[from_date],'-',''), 'YYYYMMDD')
                          AND TO_DATE(REPLACE(@[to_date],'-',''), 'YYYYMMDD') + 0.999999
#end
#if(${sel_date} == 'inv')
        AND B.INV_NO = C.INV_NO
        AND B.INV_VNDR_SEQ = C.INV_VNDR_SEQ
        AND C.INV_CFM_DT BETWEEN TO_DATE(REPLACE(@[from_date],'-',''), 'YYYYMMDD')
                          AND TO_DATE(REPLACE(@[to_date],'-',''), 'YYYYMMDD') + 0.999999
#end

        AND A.CRE_OFC_CD IN (SELECT COLUMN_VALUE FROM TABLE(BKG_SPLIT_FNC(@[input_office], ',')))
        AND B.TRSP_BND_CD = DECODE(@[bnd_cd], 'A', b.TRSP_BND_CD, @[bnd_cd])
        AND B.TRSP_CRR_MOD_CD IN (SELECT INTG_CD_VAL_CTNT
                                    FROM COM_INTG_CD_DTL
                                   WHERE INTG_CD_ID = 'CD00283'
                                     AND (INSTR(@[trsp_mod_cd], INTG_CD_VAL_CTNT) > 0
                                           OR @[trsp_mod_cd] = 'ALL'
                                         )
                                 )
        GROUP BY A.CRE_OFC_CD, B.TRSP_BND_CD, b.TRSP_CRR_MOD_CD
        ) MSTD,
       (SELECT CPY_NO -- 0(Grand Total) 1(Office Total) 2(Detail)
        FROM COM_CPY_NO
        WHERE CPY_NO IN (3
                         , CASE WHEN @[trsp_mod_cd] = 'ALL' OR INSTR(@[trsp_mod_cd], ',') > 0 THEN 2 END
                         , CASE WHEN @[input_office] = 'ALL' OR INSTR(@[input_office], ',') > 0 THEN 1 END
                         , CASE WHEN (@[trsp_mod_cd] = 'ALL' OR INSTR(@[trsp_mod_cd], ',') > 0)
                                     AND (@[input_office] = 'ALL' OR INSTR(@[input_office], ',') > 0) THEN 0 END
                        )
        ) CPYT
    GROUP BY CPY_NO
           , DECODE(CPY_NO, 0, 'ALL', 1, 'ALL', WO_CRE_OFC_CD)
           , TRSP_BND_CD
           , DECODE(CPY_NO, 0, 'ALL', 2, 'ALL', TRSP_MOD_CD)
      )
ORDER BY SORT_RN			]]></sql>
			<params>
				<param name="input_office" type="12" value="" out="N"/>
				<param name="trsp_mod_cd" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="from_node" type="12" value="" out="N"/>
				<param name="door_node" type="12" value="" out="N"/>
				<param name="bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
