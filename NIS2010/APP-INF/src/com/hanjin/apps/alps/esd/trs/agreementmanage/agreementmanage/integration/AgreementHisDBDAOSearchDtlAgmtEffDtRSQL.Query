<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AgreementHisDBDAOSearchDtlAgmtEffDtRSQL">
			<desc><![CDATA[AgreementHisDBDAOSearchDtlAgmtEffDt]]></desc>
			<sql><![CDATA[
SELECT *
  FROM (
    SELECT ROWNUM NUM
,X.VNDR_SEQ
,X.VNDR_NM
,X.TRSP_AGMT_OFC_CTY_CD
,X.TRSP_AGMT_SEQ
,X.AGMT_NO
,X.TRSP_COST_MOD_CD
,X.CGO_TP_CD
,X.CUST_CNT_CD
,X.CUST_SEQ
,X.CUSTOMER_CD
,X.CMDT_GRP_CD
,X.RAIL_SVC_TP_CD
,X.FM_NOD_CD
,X.VIA_NOD_CD
,X.DOR_NOD_CD
,X.TO_NOD_CD
,X.FM_NOD_CD_NM
,X.VIA_NOD_CD_NM
,X.DOR_NOD_CD_NM
,X.TO_NOD_CD_NM
,X.TRSP_AGMT_EQ_TP_SZ_CD
,X.WTR_RCV_TERM_CD
,X.WTR_DE_TERM_CD
,X.TRSP_AGMT_BDL_QTY
,X.TO_WGT
,X.WGT_MEAS_UT_CD
,X.CURR_CD
,X.AGMT_TRSP_TP_CD
,X.TRSP_ONE_WY_RT
,X.TRSP_RND_RT
,X.CTRT_OFC_CD
,X.TRSP_AGMT_RT_TP_SER_NO
,X.EFF_FM_DT
,X.EFF_TO_DT
,X.TRSP_RVS_APLY_FLG
,X.CNT
,DECODE(X.SCG_CNT,0,X.SCG_CNT,X.SCG_CNT-1) AS SCG_CNT
,X.DELT_FLG
,X.CHK
,X.AGMT_APRO_DT
,X.UPD_DT
,X.DT_GAP
,X.UPD_USR_NM
,X.CFM_FLG
,X.CFM_USR_NM
      FROM (
------------추가------------------
SELECT * FROM 
(
----------------------------------
SELECT 
        E.VNDR_SEQ
     , (SELECT MDM.VNDR_LGL_ENG_NM
          FROM MDM_VENDOR MDM
         WHERE MDM.VNDR_SEQ = E.VNDR_SEQ) VNDR_NM
     , A.TRSP_AGMT_OFC_CTY_CD
     , A.TRSP_AGMT_SEQ
     , A.TRSP_AGMT_OFC_CTY_CD||A.TRSP_AGMT_SEQ AGMT_NO
     , B.TRSP_COST_MOD_CD
     , B.CGO_TP_CD
     , DECODE(B.CUST_CNT_CD , 'XX', NULL, B.CUST_CNT_CD ) CUST_CNT_CD
     , DECODE(B.CUST_SEQ , '0', NULL, B.CUST_SEQ ) CUST_SEQ
     , DECODE(B.CUST_CNT_CD||B.CUST_SEQ, 'XX0', NULL, B.CUST_CNT_CD||B.CUST_SEQ) AS CUSTOMER_CD
     , DECODE(B.CMDT_GRP_CD, 'XXXX', NULL, B.CMDT_GRP_CD) CMDT_GRP_CD
     , DECODE(B.RAIL_SVC_TP_CD, '00', NULL, B.RAIL_SVC_TP_CD) RAIL_SVC_TP_CD
     , DECODE(C.FM_NOD_CD, '0000000', NULL, C.FM_NOD_CD) FM_NOD_CD
     , DECODE(C.VIA_NOD_CD, '0000000', NULL, C.VIA_NOD_CD) VIA_NOD_CD
     , DECODE(C.DOR_NOD_CD, '0000000', NULL, C.DOR_NOD_CD) DOR_NOD_CD
     , DECODE(C.TO_NOD_CD, '0000000', NULL, C.TO_NOD_CD) TO_NOD_CD
     , D.TRSP_AGMT_EQ_TP_SZ_CD
     , DECODE(D.WTR_RCV_TERM_CD, '0', NULL, D.WTR_RCV_TERM_CD) WTR_RCV_TERM_CD --FEEDER TERM (R)
     , DECODE(D.WTR_DE_TERM_CD, '0', NULL, D.WTR_DE_TERM_CD) WTR_DE_TERM_CD --FEEDER TERM (D)
     , DECODE(D.TRSP_AGMT_BDL_QTY, '0', NULL, D.TRSP_AGMT_BDL_QTY) TRSP_AGMT_BDL_QTY --CHASSIS
     , DECODE(D.TO_WGT, '0', NULL, '999999.99', 'MAX', D.TO_WGT) TO_WGT --WEIGHT TIER
     , DECODE(D.WGT_MEAS_UT_CD, 'XXX', NULL, D.WGT_MEAS_UT_CD) WGT_MEAS_UT_CD --UOM
     , D.CURR_CD
     , B.AGMT_TRSP_TP_CD --TRANS MODE TYPE
     , D.TRSP_ONE_WY_RT
     , D.TRSP_RND_RT
     , A.CTRT_OFC_CD
     , D.TRSP_AGMT_RT_TP_SER_NO
     , TO_CHAR(D.EFF_FM_DT,'YYYYMMDD') EFF_FM_DT
     , TO_CHAR(D.EFF_TO_DT,'YYYYMMDD') EFF_TO_DT
     , D.TRSP_RVS_APLY_FLG
     , NVL(NVL(FM_Y.YD_NM, FM_S.LSE_CO_YD_NM), FM_L.LOC_NM) FM_NOD_CD_NM
     , NVL(NVL(VA_Y.YD_NM, VA_S.LSE_CO_YD_NM), VA_L.LOC_NM) VIA_NOD_CD_NM
     , NVL(DR_Z.ZN_NM, DR_L.LOC_NM) DOR_NOD_CD_NM
     , NVL(NVL(TO_Y.YD_NM, TO_S.LSE_CO_YD_NM), TO_L.LOC_NM) TO_NOD_CD_NM
      ------------------------- 변경 -------------------------
      --, F.CNT
     , COUNT(F.TRSP_AGMT_RT_HIS_SEQ) OVER(PARTITION BY F.TRSP_AGMT_OFC_CTY_CD, F.TRSP_AGMT_SEQ, F.TRSP_AGMT_RT_TP_SER_NO, F.TRSP_AGMT_NOD_SEQ, F.TRSP_AGMT_RT_SEQ) AS CNT
      --------------------------------------------------------
     , CASE WHEN G.TRSP_AGMT_OFC_CTY_CD IS NULL THEN 'Y'
            WHEN G.AGMT_EXP_DT IS NOT NULL THEN 'Y'
            ELSE D.DELT_FLG
       END DELT_FLG
     ,
     DECODE(H.CHK, 'Y',
        -- US RAIL SURCHARGE
        (SELECT COUNT(*)
              FROM  TRS_AGMT_APLY_VNDR VNDR
                   ,TRS_AGMT_RAIL_SCG_RT_HIS HIS
                   ,TRS_AGMT_RAIL_SCG_RT  RT
             WHERE VNDR.TRSP_AGMT_OFC_CTY_CD = HIS.TRSP_AGMT_OFC_CTY_CD
               AND VNDR.TRSP_AGMT_SEQ        = HIS.TRSP_AGMT_SEQ
               AND HIS.TRSP_AGMT_SCG_SEQ     = RT.TRSP_AGMT_SCG_SEQ
               AND HIS.TRSP_AGMT_OFC_CTY_CD  = B.TRSP_AGMT_OFC_CTY_CD
               AND HIS.TRSP_AGMT_SEQ         = B.TRSP_AGMT_SEQ
               AND HIS.CGO_TP_CD             = B.CGO_TP_CD
               #if (${delete_yn} != '')
                 AND HIS.DELT_FLG = @[delete_yn]
               #end
               AND TO_DATE(@[effectiveDate], 'YYYY-MM-DD') BETWEEN HIS.EFF_FM_DT AND HIS.EFF_TO_DT
               AND ((HIS.AGMT_ROUT_ALL_FLG = 'Y')
                 OR (    SUBSTR(HIS.FM_NOD_CD,1,5)  = SUBSTR(C.FM_NOD_CD,1,5)
                     AND SUBSTR(HIS.TO_NOD_CD,1,5)  = SUBSTR(C.TO_NOD_CD,1,5)
                    )
                   )
               AND DECODE(HIS.TRSP_RAIL_SCG_CD, 'FSG', 'N/A', HIS.CURR_CD) = DECODE(HIS.TRSP_RAIL_SCG_CD, 'FSG', 'N/A', D.CURR_CD)
               
               AND (CASE WHEN HIS.TRSP_RAIL_SCG_CD = 'OWS' THEN CASE WHEN SUBSTR(REPLACE(D.TRSP_AGMT_EQ_TP_SZ_CD, 'AL', '@'), 2) = '@' THEN 'N/A'
                                                                ELSE CASE SUBSTR(REPLACE(D.TRSP_AGMT_EQ_TP_SZ_CD, 'AL', '@'), 2)
                                                                          WHEN '2' THEN '20'
                                                                          WHEN '3' THEN '20'
                                                                          WHEN '4' THEN '40'
                                                                          WHEN '5' THEN '40'
                                                                          WHEN '6' THEN '45'
                                                                          WHEN '7' THEN '45'
                                                                     END
                                                           END
                       ELSE 'N/A'
                    END)
                    =
                    (CASE WHEN HIS.TRSP_RAIL_SCG_CD = 'OWS' THEN CASE WHEN SUBSTR(REPLACE(D.TRSP_AGMT_EQ_TP_SZ_CD, 'AL', '@'), 2) = '@' THEN 'N/A'
                                                                ELSE HIS.AGMT_EQ_SZ_NO
                                                           END
                       ELSE 'N/A'
                    END)
         )
         , 
         -- BASIC RATE가 D2, D4일 경우 SURCHARGE에 DAL 또는 AL2, ALAL TPSZ의 SURCHARGE가 존재하는지 검색한다. (BASIC이 MULTI일 경우)
         (SELECT  COUNT(*) CNT
            FROM  TRS_AGMT_SCG_NOD NOD
                , TRS_AGMT_SCG_RT_HIS HIS
                , TRS_AGMT_SCG_RT RT    
           WHERE NOD.TRSP_AGMT_OFC_CTY_CD   = HIS.TRSP_AGMT_OFC_CTY_CD
             AND NOD.TRSP_AGMT_SEQ          = HIS.TRSP_AGMT_SEQ
             AND NOD.TRSP_AGMT_RT_TP_SER_NO = HIS.TRSP_AGMT_RT_TP_SER_NO
             AND NOD.TRSP_AGMT_SCG_NOD_SEQ  = HIS.TRSP_AGMT_SCG_NOD_SEQ
             AND HIS.TRSP_AGMT_OFC_CTY_CD   = RT.TRSP_AGMT_OFC_CTY_CD
             AND HIS.TRSP_AGMT_SEQ          = RT.TRSP_AGMT_SEQ
             AND HIS.TRSP_AGMT_RT_TP_SER_NO = RT.TRSP_AGMT_RT_TP_SER_NO
             AND HIS.TRSP_AGMT_SCG_NOD_SEQ  = RT.TRSP_AGMT_SCG_NOD_SEQ
             AND HIS.TRSP_AGMT_SCG_RT_SEQ   = RT.TRSP_AGMT_SCG_RT_SEQ
             AND NOD.TRSP_AGMT_OFC_CTY_CD   = B.TRSP_AGMT_OFC_CTY_CD
             AND NOD.TRSP_AGMT_SEQ          = B.TRSP_AGMT_SEQ
             AND NOD.TRSP_AGMT_RT_TP_SER_NO = B.TRSP_AGMT_RT_TP_SER_NO
             #if (${delete_yn} != '')
               AND HIS.DELT_FLG = @[delete_yn]
             #end
             AND TO_DATE(@[effectiveDate], 'YYYY-MM-DD') BETWEEN HIS.EFF_FM_DT AND HIS.EFF_TO_DT
             AND ((NOD.AGMT_ROUT_ALL_FLG = 'Y')
               OR (    SUBSTR(NOD.FM_NOD_CD,1,5)  = SUBSTR(C.FM_NOD_CD,1,5)
                   AND SUBSTR(NOD.VIA_NOD_CD,1,5) = SUBSTR(C.VIA_NOD_CD,1,5)
                   AND SUBSTR(NOD.DOR_NOD_CD,1,5) = SUBSTR(C.DOR_NOD_CD,1,5)
                   AND SUBSTR(NOD.TO_NOD_CD,1,5)  = SUBSTR(C.TO_NOD_CD,1,5)
                  )
                 )
             AND HIS.TRSP_AGMT_EQ_TP_SZ_CD IN (SELECT T.TRSP_AGMT_EQ_TP_CD||T.TRSP_AGMT_EQ_SZ_CD
                                                 FROM TRS_AGMT_EQ_TP_RULE T
                                                WHERE T.TRSP_AGMT_RULE_TP_CD = 'S'
                                                  AND T.TRSP_AGMT_STEP_KNT = 6
                                                  AND T.TRSP_AGMT_EQ_SZ_CD NOT IN ('X', 'W')                 
                                                  AND ( REPLACE(SUBSTR(REPLACE(D.TRSP_AGMT_EQ_TP_SZ_CD, 'AL', '@'), 1, 1), '@', 'AL') = T.TRSP_AGMT_EQ_TP_CD
                                                        OR 'AL' = T.TRSP_AGMT_EQ_TP_CD
                                                      )
                                                  AND ( REPLACE(SUBSTR(REPLACE(D.TRSP_AGMT_EQ_TP_SZ_CD, 'AL', '@'), DECODE(D.EQ_KND_CD, 'U', 2, 3)), '@', 'AL') = T.TRSP_AGMT_EQ_SZ_CD
                                                        OR 'AL' = T.TRSP_AGMT_EQ_SZ_CD
                                                      ) 
                                              )
         ) 
         + -- BASIC이 AL2, DAL, ALAL 일경우 SURCHARGE에서 D2, D4와 같은 SURCHARGE가 등록되어 있는지 검색한다. (SURCHARGE가 MULTI일 경우)
         NVL(
           (SELECT  COUNT(DISTINCT HIS.TRSP_AGMT_EQ_TP_SZ_CD) CNT
              FROM  TRS_AGMT_SCG_NOD NOD
                  , TRS_AGMT_SCG_RT_HIS HIS
                  , TRS_AGMT_SCG_RT RT
             WHERE NOD.TRSP_AGMT_OFC_CTY_CD   = HIS.TRSP_AGMT_OFC_CTY_CD
               AND NOD.TRSP_AGMT_SEQ          = HIS.TRSP_AGMT_SEQ
               AND NOD.TRSP_AGMT_RT_TP_SER_NO = HIS.TRSP_AGMT_RT_TP_SER_NO
               AND NOD.TRSP_AGMT_SCG_NOD_SEQ  = HIS.TRSP_AGMT_SCG_NOD_SEQ
               AND HIS.TRSP_AGMT_OFC_CTY_CD   = RT.TRSP_AGMT_OFC_CTY_CD
               AND HIS.TRSP_AGMT_SEQ          = RT.TRSP_AGMT_SEQ
               AND HIS.TRSP_AGMT_RT_TP_SER_NO = RT.TRSP_AGMT_RT_TP_SER_NO
               AND HIS.TRSP_AGMT_SCG_NOD_SEQ  = RT.TRSP_AGMT_SCG_NOD_SEQ
               AND HIS.TRSP_AGMT_SCG_RT_SEQ   = RT.TRSP_AGMT_SCG_RT_SEQ
               AND NOD.TRSP_AGMT_OFC_CTY_CD   = B.TRSP_AGMT_OFC_CTY_CD
               AND NOD.TRSP_AGMT_SEQ          = B.TRSP_AGMT_SEQ
               AND NOD.TRSP_AGMT_RT_TP_SER_NO = B.TRSP_AGMT_RT_TP_SER_NO
               #if (${delete_yn} != '')
                 AND HIS.DELT_FLG = @[delete_yn]
               #end
               AND TO_DATE(@[effectiveDate], 'YYYY-MM-DD') BETWEEN HIS.EFF_FM_DT AND HIS.EFF_TO_DT
               AND ((NOD.AGMT_ROUT_ALL_FLG = 'Y')
                 OR (    SUBSTR(NOD.FM_NOD_CD,1,5)  = SUBSTR(C.FM_NOD_CD,1,5)
                     AND SUBSTR(NOD.VIA_NOD_CD,1,5) = SUBSTR(C.VIA_NOD_CD,1,5)
                     AND SUBSTR(NOD.DOR_NOD_CD,1,5) = SUBSTR(C.DOR_NOD_CD,1,5)
                     AND SUBSTR(NOD.TO_NOD_CD,1,5)  = SUBSTR(C.TO_NOD_CD,1,5)
                    )
                   )
    
                 AND (      -- AL2와 같이 TYPE이 AL일 경우
                       (    SUBSTR(D.TRSP_AGMT_EQ_TP_SZ_CD, 3) = SUBSTR(HIS.TRSP_AGMT_EQ_TP_SZ_CD, DECODE(D.EQ_KND_CD, 'U', 2, 3))
                        AND HIS.TRSP_AGMT_EQ_TP_SZ_CD NOT LIKE '%AL%'
                        AND D.TRSP_AGMT_EQ_TP_SZ_CD LIKE '%AL%'
                       )
                     OR     -- DAL와 같이 SIZE가 AL일 경우
                       (    SUBSTR(D.TRSP_AGMT_EQ_TP_SZ_CD, 1, DECODE(D.EQ_KND_CD, 'U', 1, 2)) = SUBSTR(HIS.TRSP_AGMT_EQ_TP_SZ_CD, 1, DECODE(D.EQ_KND_CD, 'U', 1, 2))
                        AND HIS.TRSP_AGMT_EQ_TP_SZ_CD NOT LIKE '%AL%'
                        AND D.TRSP_AGMT_EQ_TP_SZ_CD LIKE '%AL%'
                       )    -- ALAL일 경우               
                     OR DECODE(D.TRSP_AGMT_EQ_TP_SZ_CD, 'ALAL', 'ALAL', 'X') = 'ALAL'
                     )
               AND ROWNUM <= 2  
               GROUP BY HIS.TRSP_AGMT_EQ_TP_SZ_CD  
               HAVING COUNT(*) > 1
           )
           ,0)
         ) AS SCG_CNT
         ,H.CHK
          -------------------- 추가 --------------------
         ,MAX(F.TRSP_AGMT_RT_HIS_SEQ) OVER(PARTITION BY F.TRSP_AGMT_OFC_CTY_CD, F.TRSP_AGMT_SEQ, F.TRSP_AGMT_RT_TP_SER_NO, F.TRSP_AGMT_NOD_SEQ, F.TRSP_AGMT_RT_SEQ) F_SEQ
         ,D.TRSP_AGMT_RT_HIS_SEQ D_SEQ
          -------------------------------------------
         ,TO_CHAR(D.AGMT_APRO_DT,'YYYYMMDD') AGMT_APRO_DT
         ,TO_CHAR(D.UPD_DT,'YYYYMMDD') UPD_DT
         ,TO_CHAR(TO_DATE(TO_CHAR(D.AGMT_APRO_DT,'YYYYMMDD'),'YYYYMMDD') - TO_DATE(TO_CHAR(D.UPD_DT,'YYYYMMDD'),'YYYYMMDD')) DT_GAP
         ,NVL((SELECT MAX(X.USR_NM) FROM COM_USER X WHERE X.USR_ID = D.UPD_USR_ID),D.UPD_USR_ID) UPD_USR_NM
         ,B.CFM_FLG
         ,NVL((SELECT MAX(X.USR_NM) FROM COM_USER X WHERE X.USR_ID = B.CFM_USR_ID),B.CFM_USR_ID) CFM_USR_NM            
FROM TRS_AGMT_HDR A
   , TRS_AGMT_RT_TP B
   , TRS_AGMT_NOD C
   , TRS_AGMT_EQ_RT_HIS D
   , TRS_AGMT_APLY_VNDR E
   , TRS_AGMT_EQ_RT G
   , (SELECT  HIS.TRSP_AGMT_OFC_CTY_CD
            , HIS.TRSP_AGMT_SEQ
            , HIS.TRSP_AGMT_RT_TP_SER_NO
            , HIS.TRSP_AGMT_NOD_SEQ
            , HIS.TRSP_AGMT_RT_SEQ
            --------------------- 변경 ---------------------------
            --, MAX(HIS.TRSP_AGMT_RT_HIS_SEQ) TRSP_AGMT_RT_HIS_SEQ
            --, COUNT(1) CNT
            , (HIS.TRSP_AGMT_RT_HIS_SEQ) TRSP_AGMT_RT_HIS_SEQ
            ------------------------------------------------------
        FROM TRS_AGMT_EQ_RT_HIS HIS
            ,TRS_AGMT_HDR       HDR
       WHERE HDR.TRSP_AGMT_OFC_CTY_CD = HIS.TRSP_AGMT_OFC_CTY_CD
         AND HDR.TRSP_AGMT_SEQ        = HIS.TRSP_AGMT_SEQ
         AND TO_DATE(@[effectiveDate], 'YYYY-MM-DD') BETWEEN HIS.EFF_FM_DT AND HIS.EFF_TO_DT
         #if (${delete_yn} != '')
           AND HIS.DELT_FLG = @[delete_yn]
         #end
            --GROUP BY HIS.TRSP_AGMT_OFC_CTY_CD
            --,HIS.TRSP_AGMT_SEQ
            --,HIS.TRSP_AGMT_RT_TP_SER_NO
            --,HIS.TRSP_AGMT_NOD_SEQ
            --,HIS.TRSP_AGMT_RT_SEQ
            ------------------------------------------------------
     ) F
   , (SELECT INTG_CD_VAL_CTNT VNDR_SEQ, 'Y' CHK
        FROM COM_INTG_CD_DTL 
       WHERE INTG_CD_ID = 'CD00930') H

   ,MDM_YARD      FM_Y
   ,MDM_LSE_CO_YD FM_S
   ,MDM_LOCATION  FM_L
   ,MDM_YARD      VA_Y
   ,MDM_LSE_CO_YD VA_S
   ,MDM_LOCATION  VA_L
   ,MDM_ZONE      DR_Z
   ,MDM_LOCATION  DR_L
   ,MDM_YARD      TO_Y
   ,MDM_LSE_CO_YD TO_S
   ,MDM_LOCATION  TO_L
WHERE A.TRSP_AGMT_OFC_CTY_CD = B.TRSP_AGMT_OFC_CTY_CD
  AND A.TRSP_AGMT_SEQ = B.TRSP_AGMT_SEQ
  AND B.TRSP_AGMT_OFC_CTY_CD = C.TRSP_AGMT_OFC_CTY_CD
  AND B.TRSP_AGMT_SEQ = C.TRSP_AGMT_SEQ
  AND B.TRSP_AGMT_RT_TP_SER_NO = C.TRSP_AGMT_RT_TP_SER_NO
  AND C.TRSP_AGMT_OFC_CTY_CD = D.TRSP_AGMT_OFC_CTY_CD
  AND C.TRSP_AGMT_SEQ = D.TRSP_AGMT_SEQ
  AND C.TRSP_AGMT_RT_TP_SER_NO = D.TRSP_AGMT_RT_TP_SER_NO
  AND C.TRSP_AGMT_NOD_SEQ = D.TRSP_AGMT_NOD_SEQ
  AND B.TRSP_AGMT_RT_TP_CD = 'P'
  AND E.TRSP_AGMT_OFC_CTY_CD = A.TRSP_AGMT_OFC_CTY_CD
  AND E.TRSP_AGMT_SEQ = A.TRSP_AGMT_SEQ    
  AND F.TRSP_AGMT_OFC_CTY_CD   = G.TRSP_AGMT_OFC_CTY_CD(+)
  AND F.TRSP_AGMT_SEQ          = G.TRSP_AGMT_SEQ(+)
  AND F.TRSP_AGMT_RT_TP_SER_NO = G.TRSP_AGMT_RT_TP_SER_NO(+)
  AND F.TRSP_AGMT_NOD_SEQ      = G.TRSP_AGMT_NOD_SEQ(+)
  AND F.TRSP_AGMT_RT_SEQ       = G.TRSP_AGMT_RT_SEQ(+)
  AND D.TRSP_AGMT_OFC_CTY_CD   = F.TRSP_AGMT_OFC_CTY_CD
  AND D.TRSP_AGMT_SEQ          = F.TRSP_AGMT_SEQ
  AND D.TRSP_AGMT_RT_TP_SER_NO = F.TRSP_AGMT_RT_TP_SER_NO
  AND D.TRSP_AGMT_NOD_SEQ      = F.TRSP_AGMT_NOD_SEQ
  AND D.TRSP_AGMT_RT_SEQ       = F.TRSP_AGMT_RT_SEQ
  AND D.TRSP_AGMT_RT_HIS_SEQ   = F.TRSP_AGMT_RT_HIS_SEQ
  AND E.VNDR_SEQ               = H.VNDR_SEQ(+)
  AND E.AGMT_VNDR_PRMRY_FLG = 'Y'
  AND C.FM_NOD_CD = FM_Y.YD_CD(+)
  AND C.FM_NOD_CD = FM_S.LSE_CO_YD_CD(+)
  AND SUBSTR(C.FM_NOD_CD,1,5) = FM_L.LOC_CD(+)
  AND C.VIA_NOD_CD = VA_Y.YD_CD(+)
  AND C.VIA_NOD_CD = VA_S.LSE_CO_YD_CD(+)
  AND SUBSTR(C.VIA_NOD_CD,1,5) = VA_L.LOC_CD(+)
  AND C.DOR_NOD_CD = DR_Z.ZN_CD(+)
  AND SUBSTR(C.DOR_NOD_CD,1,5) = DR_L.LOC_CD(+)
  AND C.TO_NOD_CD = TO_Y.YD_CD(+)
  AND C.TO_NOD_CD = TO_S.LSE_CO_YD_CD(+)
  AND SUBSTR(C.TO_NOD_CD,1,5) = TO_L.LOC_CD(+)
#if (${delete_yn} == 'N')
  AND G.TRSP_AGMT_OFC_CTY_CD IS NOT NULL
  AND NVL(G.DELT_FLG, 'N') = 'N'
#elseif (${delete_yn} != '')
  AND D.DELT_FLG = @[delete_yn]
#end

#if (${fm_nod} != '' )
    AND C.FM_NOD_CD LIKE @[fm_nod]||'%'
#end
#if (${via_nod} != '' )
    AND C.VIA_NOD_CD LIKE @[via_nod]||'%'
#else
    AND C.VIA_NOD_CD LIKE '%'
#end
#if (${to_nod} != '' )
    AND C.TO_NOD_CD LIKE @[to_nod]||'%'
#else
    AND C.TO_NOD_CD LIKE '%'
#end
#if (${dor_nod} != '' )
    AND C.DOR_NOD_CD LIKE @[dor_nod]||'%'
#else
    AND C.DOR_NOD_CD LIKE '%'
#end

#if (${costmode} != '') 
      AND B.TRSP_COST_MOD_CD = @[costmode]
#end

#if (${cargo} != '') 
      AND B.CGO_TP_CD = @[cargo]
#end
      AND D.EQ_KND_CD = @[eqtype]

#if ($eqtpsz.size() > 0)
      AND D.TRSP_AGMT_EQ_TP_SZ_CD IN (
    #foreach($key in ${eqtpsz}) 
        #if($velocityCount < $eqtpsz.size()) 
            '$key', 
        #else 
            '$key' 
        #end 

    #end
    )
#end

#if (${fmAgmtTrspTpCd} != '') 
      AND B.AGMT_TRSP_TP_CD = @[fmAgmtTrspTpCd]
#end

#if (${fmVndrPrmrySeq} != '') 
    AND (A.TRSP_AGMT_OFC_CTY_CD, A.TRSP_AGMT_SEQ) IN (
        SELECT TRSP_AGMT_OFC_CTY_CD, TRSP_AGMT_SEQ
          FROM TRS_AGMT_APLY_VNDR
         WHERE VNDR_SEQ = @[fmVndrPrmrySeq]
       )
#end

#if (${trspAgmtOfcCtyCd} != '')
	AND A.TRSP_AGMT_OFC_CTY_CD = @[trspAgmtOfcCtyCd]
#end
#if (${trspAgmtSeq} != '')
	AND A.TRSP_AGMT_SEQ LIKE @[trspAgmtSeq]||'%'
#end
#if (${effectiveDate} != '')
	AND TO_DATE(@[effectiveDate], 'YYYY-MM-DD') BETWEEN D.EFF_FM_DT AND D.EFF_TO_DT
#end 
#if (${approval_date} != '')
    AND D.AGMT_APRO_DT >= TO_DATE(REPLACE(@[approval_date],'-',''),'YYYYMMDD')
#end 
------------------- 추가 -----------------------
) WHERE F_SEQ=D_SEQ
------------------------------------------------

    ) X
)
WHERE NUM BETWEEN 1 + ((@[cur_page_cnt]-1)*@[page_size]) AND (@[cur_page_cnt]*@[page_size])			]]></sql>
			<params>
				<param name="delete_yn" type="12" value="" out="N"/>
				<param name="effectiveDate" type="12" value="" out="N"/>
				<param name="fm_nod" type="12" value="" out="N"/>
				<param name="via_nod" type="12" value="" out="N"/>
				<param name="to_nod" type="12" value="" out="N"/>
				<param name="dor_nod" type="12" value="" out="N"/>
				<param name="costmode" type="12" value="" out="N"/>
				<param name="cargo" type="12" value="" out="N"/>
				<param name="eqtype" type="12" value="" out="N"/>
				<param name="fmAgmtTrspTpCd" type="12" value="" out="N"/>
				<param name="fmVndrPrmrySeq" type="12" value="" out="N"/>
				<param name="trspAgmtOfcCtyCd" type="12" value="" out="N"/>
				<param name="trspAgmtSeq" type="12" value="" out="N"/>
				<param name="approval_date" type="12" value="" out="N"/>
				<param name="cur_page_cnt" type="12" value="" out="N"/>
				<param name="page_size" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
