<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailSoManageDBDAOSearch06RailSoManageRSQL">
			<desc><![CDATA[US Rail O/B SO 대상 조회 SQL]]></desc>
			<sql><![CDATA[
SELECT
        X.TRSP_BND_CD AS TRSP_BND_CD,
        X.EQ_NO AS EQ_NO,
        X.SC_NO AS SC_NO,
        X.EQ_TPSZ_CD AS EQ_TPSZ_CD,        
        SUBSTR(X.POR_NOD_CD, 1, 5) AS POR_NOD_CD,
        SUBSTR(X.POR_NOD_CD, 6) AS POR_NOD_CD_YARD,        
        SUBSTR(X.FM_NOD_CD, 1, 5) AS FM_NOD_CD,
        SUBSTR(X.FM_NOD_CD, 6) AS FM_NOD_YARD,
        SUBSTR(X.TO_NOD_CD, 1, 5) AS TO_NOD_CD,
        SUBSTR(X.TO_NOD_CD, 6) AS TO_NOD_YARD,
        X.POR_CD AS POR_CD,
        X.DEL_CD AS DEL_CD,
        SUBSTR(X.DEL_NOD_CD, 1, 5) AS DEL_NOD_CD,
        SUBSTR(X.DEL_NOD_CD, 6) AS DEL_NOD_CD_YARD,
        X.DEL_SCC_CD AS DEL_SCC_CD,
        SUBSTR(POL_NOD_CD, 1, 5) AS POL_CD,
        SUBSTR(POL_NOD_CD, 6) AS POL_CD_YARD,
        SUBSTR(X.POD_NOD_CD, 1, 5) AS POD_CD,
		SUBSTR(X.POD_NOD_CD, 6) AS POD_CD_YARD,
        TO_CHAR(X.N1ST_NOD_PLN_DT, 'YYYYMMDD') AS N1ST_NOD_PLN_DT,       
		TO_CHAR(X.N1ST_NOD_PLN_DT, 'HH24:MI:SS') AS N1ST_NOD_PLN_DT_HMS, 
		TO_CHAR(X.LST_NOD_PLN_DT, 'YYYYMMDD') AS LST_NOD_PLN_DT,         
		TO_CHAR(X.LST_NOD_PLN_DT, 'HH24:MI:SS') AS LST_NOD_PLN_DT_HMS,
		X.BKG_NO AS BKG_NO,
		X.BKG_RCVDE_TERM_CD AS BKG_RCVDE_TERM_CD, 
		X.CGO_TP_CD AS CGO_TP_CD,
		X.BL_NO AS BL_NO,
		SUBSTR(X.BKG_SPCL, 0, LENGTH(X.BKG_SPCL)-1) AS BKG_SPE,
		CASE WHEN LENGTH(X.BKG_CNTR_SPCL) > 10 THEN
				SUBSTR(X.BKG_CNTR_SPCL, 0, 10)
			 ELSE
				SUBSTR(X.BKG_CNTR_SPCL, 0, LENGTH(X.BKG_CNTR_SPCL)-1)
		END AS SPCL_CGO_CNTR_TP_CD,
		(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 1) AS CNTR_SEAL_NO,
    	DECODE(SUBSTR(X.BKG_CNTR, 1, INSTR(X.BKG_CNTR, '$', 1, 1) - 1), 'LBS', 
    	       SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1), 'KGM',
    	       SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2, 'KG', 
    	       SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2, 'KGS', 
    	       SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2, 
			   DECODE(SUBSTR(X.FM_NOD_CD, 1, 2), 'CA', SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2,
												 'US', SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1))
			  ) AS CNTR_WGT,
    	DECODE(BKG_CNTR_QTY, 0, 2, BKG_CNTR_QTY) AS PCK_QTY,
    	NVL(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 2) + 1), 'PC') AS PCK_TP_CD,
    	SUBSTR(X.MDM_CO, INSTR(X.MDM_CO, '$', 1, 1) + 1) AS CMDT_NAME,
    	X.VVD_CD AS TRUNKVVD,
        X.SLAN_CD AS SLAN_CD,
        '' AS REQUEST_SP,
        X.IBD_CSTMS_CLR_LOC_CD AS IBD_CSTMS_CLR_LOC_CD,
        SUBSTR(X.MDM_CO, 1, INSTR(X.MDM_CO, '$', 1, 1) - 1) AS CMDT_CD,
        X.TRSP_SO_OFC_CTY_CD AS TRSP_SO_OFC_CTY_CD,   
    	X.CRE_USR_ID AS CRE_USR_ID,           
    	X.UPD_USR_ID AS UPD_USR_ID,
    	X.RAIL_CMB_THRU_TP_CD AS RAIL_CMB_THRU_TP_CD,
    	X.COP_NO AS COP_NO,
    	X.COST_ACT_GRP_SEQ AS COST_ACT_GRP_SEQ, 
    	X.ACT_GRP_CD AS ACT_GRP_CD,
    	X.ROUT_ORG_NOD_CD AS ROUT_ORG_NOD_CD,
    	X.ROUT_DEST_NOD_CD AS ROUT_DEST_NOD_CD,
    	X.ROUT_SEQ AS ROUT_SEQ,
    	X.BKG_CGO_TP_CD AS BKG_CGO_TP_CD,
    	X.ROUT_PLN_CD AS ROUT_PLN_CD,
    	X.INLND_ROUT_RMK AS INLND_ROUT_RMK,
    	X.TRSP_COST_DTL_MOD_CD AS TRSP_COST_DTL_MOD_CD,
    	X.CUST_CNT_CD AS CUST_CNT_CD,
    	X.CUST_SEQ AS CUST_SEQ,
    	X.INTER_RMK AS INTER_RMK,
    	DECODE(MAX(X.ROUT_DTL_SEQ), SUBSTR(X.RAIL_CMB_THRU_TP_CD, 2, 1), MAX(X.ROUT_DTL_SEQ), '0') AS ROUT_DTL_SEQ,
    	SUBSTR(X.ITCHG_LOC_ID1, 1, 5) AS INTERCHANGE1_LOC,
        SUBSTR(X.ITCHG_LOC_ID1, 6) AS INTERCHANGE1_NOD,
        SUBSTR(X.ITCHG_LOC_ID2, 1, 5) AS INTERCHANGE2_LOC,
        SUBSTR(X.ITCHG_LOC_ID2, 6) AS INTERCHANGE2_NOD,
        X.INV_BIL_PATT_DIV_FLG AS INV_BIL_PATT_DIV_FLG,
        MAX(X.ROUT_DTL_SEQ) AS RTR_DIV_CNT,
        MAX(DECODE( X.ROUT_DTL_SEQ, 1, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 2, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 3, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 4, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 5, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 6, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 7, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))  ||
		MAX(DECODE( X.ROUT_DTL_SEQ, 8, NVL( AGMT.AGMT_REF_NO, 'N/A')||DECODE( X.LNK_DEST_NOD_CD,SUBSTR(X.TO_NOD_CD, 1, 5)||SUBSTR(X.TO_NOD_CD, 6),'',' / ')  ))    REF_NO,
        TRUNC(TO_DATE(TO_CHAR(X.RAIL_RCV_COFF_FM_DT, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(X.GLO_TM_DT, 'YYYYMMDD'), 'YYYYMMDD'), 0) RAIL_RCV_COFF_FM_DT_MIN_GLOBAL,
        TRUNC(TO_DATE(TO_CHAR(X.RAIL_RCV_COFF_TO_DT, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(X.GLO_TM_DT, 'YYYYMMDD'), 'YYYYMMDD'), 0) RAIL_RCV_COFF_TO_DT_MIN_GLOBAL,
        TO_CHAR(X.RAIL_RCV_COFF_FM_DT, 'YYYY-MM-DD') RAIL_RCV_COFF_FM_DT,
		SUBSTR(X.FM_NOD_CD, 1, 5) AS ORG_FM_NOD_CD,
        SUBSTR(X.FM_NOD_CD, 6) AS ORG_FM_NOD_YARD,	
		SUBSTR(X.TO_NOD_CD, 1, 5) AS ORG_TO_NOD_CD,
        SUBSTR(X.TO_NOD_CD, 6) AS ORG_TO_NOD_YARD,
        (SELECT NON_RT_STS_CD FROM BKG_BOOKING WHERE BKG_NO = X.BKG_NO) AS NON_RT_STS_CD,
        MAX(VGM_WGT) VGM_WGT,
        MAX(VGM_WGT_UT_CD) VGM_WGT_UT_CD
FROM  (
	SELECT TMP.*
		 ,(NVL(BKG_CNTR.WGT_UT_CD, ' ') || '$' || NVL(TO_CHAR(BKG_CNTR.CNTR_WGT), '0') || '$' || NVL(BKG_CNTR.PCK_TP_CD, 'PK')) BKG_CNTR
		 ,(NVL(PCK_QTY, 0)) BKG_CNTR_QTY
		 ,(DECODE( BKG_CNTR.DCGO_FLG , 'Y' , 'DG,') || DECODE( BKG_CNTR.BB_CGO_FLG , 'Y' , 'BB,') || DECODE( BKG_CNTR.AWK_CGO_FLG , 'Y' , 'AK,') || DECODE( BKG_CNTR.RC_FLG , 'Y' , 'RF,') ) BKG_CNTR_SPCL
		 ,(
			SELECT
			    DECODE( BKG_SPCL.DCGO_FLG         ,'Y', 'DG /') ||
			    DECODE( BKG_SPCL.RC_FLG           ,'Y', 'RF /') ||
			    DECODE( BKG_SPCL.AWK_CGO_FLG      ,'Y', 'AK /') ||
			    DECODE( BKG_SPCL.BB_CGO_FLG       ,'Y', 'BB /') ||
			    DECODE( BKG_SPCL.SPCL_HIDE_FLG    ,'Y', 'HD /') ||
			    DECODE( BKG_SPCL.FD_GRD_FLG	      ,'Y', 'FG /') ||
			    DECODE( BKG_SPCL.RAIL_BLK_CD      ,'', '', 'RB /') BKG_SPE
			FROM
			    BKG_BOOKING BKG_SPCL
			WHERE BKG_SPCL.BKG_NO  = TMP.BKG_NO
		 ) BKG_SPCL
		 ,(
		    SELECT 
			NVL(MDM_CO.CMDT_CD, ' ') || '$' || NVL(REPLACE(MDM_CO.CMDT_NM, CHR(13)||CHR(10), ' '), ' ')
		    FROM 
			MDM_COMMODITY MDM_CO
		    WHERE MDM_CO.CMDT_CD  = TMP.CMDT_CD
		 ) MDM_CO
         ,BKG_CNTR.VGM_WGT
         ,BKG_CNTR.VGM_WGT_UT_CD
	  FROM TRS_TRSP_RAIL_BIL_ORD_TMP TMP,
		   BKG_CONTAINER BKG_CNTR
	  WHERE BKG_CNTR.BKG_NO(+) = TMP.BKG_NO
	  AND   BKG_CNTR.CNTR_NO(+) = TMP.EQ_NO
	  AND	TMP.TRSP_RAIL_TMP_SEQ = @[trsp_rail_tmp_seq]
	  ) X,
	  TRS_AGMT_HDR AGMT
WHERE X.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD (+)
AND   X.TRSP_AGMT_SEQ = AGMT.TRSP_AGMT_SEQ (+)
GROUP BY
    X.TRSP_BND_CD,
    X.EQ_NO,
    X.SC_NO,
    X.EQ_TPSZ_CD,
    SUBSTR(X.POR_NOD_CD, 1, 5),
    SUBSTR(X.POR_NOD_CD, 6),
    SUBSTR(X.FM_NOD_CD, 1, 5),
    SUBSTR(X.FM_NOD_CD, 6),
    SUBSTR(X.TO_NOD_CD, 1, 5),
    SUBSTR(X.TO_NOD_CD, 6),
    X.POR_CD,
    X.DEL_CD,
    SUBSTR(X.DEL_NOD_CD, 1, 5),
    SUBSTR(X.DEL_NOD_CD, 6),
    X.DEL_SCC_CD,
    SUBSTR(POL_NOD_CD, 1, 5),
    SUBSTR(POL_NOD_CD, 6),
    SUBSTR(X.POD_NOD_CD, 1, 5),
	SUBSTR(X.POD_NOD_CD, 6),
    TO_CHAR(X.N1ST_NOD_PLN_DT, 'YYYYMMDD'),
    TO_CHAR(X.N1ST_NOD_PLN_DT, 'HH24:MI:SS'),
    TO_CHAR(X.LST_NOD_PLN_DT, 'YYYYMMDD'),
    TO_CHAR(X.LST_NOD_PLN_DT, 'HH24:MI:SS'),
    X.BKG_NO,
    X.BKG_RCVDE_TERM_CD,
    X.CGO_TP_CD,
    X.BL_NO,
    SUBSTR(X.BKG_SPCL, 0, LENGTH(X.BKG_SPCL)-1),
    CASE WHEN LENGTH(X.BKG_CNTR_SPCL) > 10 THEN
			SUBSTR(X.BKG_CNTR_SPCL, 0, 10)
		 ELSE
			SUBSTR(X.BKG_CNTR_SPCL, 0, LENGTH(X.BKG_CNTR_SPCL)-1)
	END,
    DECODE(SUBSTR(X.BKG_CNTR, 1, INSTR(X.BKG_CNTR, '$', 1, 1) - 1), 'LBS',
    SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1), 'KGM',
    SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2, 'KG',
    SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2, 'KGS',
    SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2, 
	DECODE(SUBSTR(X.FM_NOD_CD, 1, 2), 'CA', SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1)*2.2,
												 'US', SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 1) + 1, INSTR(X.BKG_CNTR, '$', 1, 2) - INSTR(X.BKG_CNTR, '$', 1, 1) - 1))
	),
    DECODE(BKG_CNTR_QTY, 0, 2, BKG_CNTR_QTY),
    NVL(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '$', 1, 2) + 1), 'PC'),
    SUBSTR(X.MDM_CO, INSTR(X.MDM_CO, '$', 1, 1) + 1),
    X.VVD_CD,
    X.SLAN_CD,
    X.IBD_CSTMS_CLR_LOC_CD,
    SUBSTR(X.MDM_CO, 1, INSTR(X.MDM_CO, '$', 1, 1) - 1),
    X.TRSP_SO_OFC_CTY_CD,
    X.CRE_USR_ID,
    X.UPD_USR_ID,
    X.RAIL_CMB_THRU_TP_CD,
    X.COP_NO,
    X.COST_ACT_GRP_SEQ,
    X.ACT_GRP_CD,
    X.ROUT_ORG_NOD_CD,
    X.ROUT_DEST_NOD_CD,
    X.ROUT_SEQ,
    X.BKG_CGO_TP_CD,
    X.ROUT_PLN_CD,
    X.INLND_ROUT_RMK,
    X.TRSP_COST_DTL_MOD_CD,
    X.CUST_CNT_CD,
    X.CUST_SEQ,
    X.INTER_RMK,
    SUBSTR(X.ITCHG_LOC_ID1, 1, 5),
    SUBSTR(X.ITCHG_LOC_ID1, 6),
    SUBSTR(X.ITCHG_LOC_ID2, 1, 5),
    SUBSTR(X.ITCHG_LOC_ID2, 6),
    X.INV_BIL_PATT_DIV_FLG,
    TRUNC(TO_DATE(TO_CHAR(X.RAIL_RCV_COFF_FM_DT, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(X.GLO_TM_DT, 'YYYYMMDD'), 'YYYYMMDD'), 0),
    TRUNC(TO_DATE(TO_CHAR(X.RAIL_RCV_COFF_TO_DT, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(X.GLO_TM_DT, 'YYYYMMDD'), 'YYYYMMDD'), 0),
    TO_CHAR(X.RAIL_RCV_COFF_FM_DT, 'YYYY-MM-DD'),
    SUBSTR(X.FM_NOD_CD, 1, 5),
    SUBSTR(X.FM_NOD_CD, 6),
    SUBSTR(X.TO_NOD_CD, 1, 5),
    SUBSTR(X.TO_NOD_CD, 6)			]]></sql>
			<params>
				<param name="trsp_rail_tmp_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
