<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CostBatchDBDAOSearchCostCalcListRSQL">
			<desc><![CDATA[2012.05.10 변종건 Inland Cost Batch Creation 화면의 Retrieve]]></desc>
			<sql><![CDATA[
SELECT  M.COST_TRF_BAT_SEQ
      , M.RHQ_CD
      , M.CNT_CD
      , M.CNT_NM
      , M.IO_BND_CD
      , M.IO_BND_NM
      , M.COST_TRF_NO
      , M.STS_CD
      , M.STS_NM
      , M.BAT_PROG_KNT
      , M.BAT_PROG_TTL_KNT
      , M.PROG_RATIO
      , M.CURR_CD
      , M.XCH_RT
      , M.ELAPSE_TIME
      , M.CRE_DT
      , M.CRE_USR_ID
      , M.CRE_OFC_CD
      , M.UPD_DT
      , M.UPD_USR_ID
      , M.UPD_OFC_CD
      , ( SELECT PRI.IHC_TRF_NO FROM PRI_TRF_IHC_HDR PRI WHERE PRI.COST_TRF_NO = M.COST_TRF_NO AND ROWNUM <= 1 ) GLINE_TRF_NO
FROM    (
          SELECT  NVL(Y.COST_TRF_BAT_SEQ,Z.COST_TRF_BAT_SEQ) COST_TRF_BAT_SEQ
                , X.RHQ_CD
                , X.CNT_CD
                , (SELECT CNT_NM FROM MDM_COUNTRY WHERE CNT_CD = X.CNT_CD AND ROWNUM <= 1) CNT_NM
                , X.IO_BND_CD
                , DECODE(X.IO_BND_CD,'I','IN','OUT') IO_BND_NM
                , Y.COST_TRF_NO
                , NVL(Y.STS_CD,Z.BAT_PROG_STS_CD) STS_CD
                , (SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL WHERE INTG_CD_ID = 'CD03047' AND INTG_CD_VAL_CTNT = NVL(Y.STS_CD,Z.BAT_PROG_STS_CD) AND ROWNUM <= 1) STS_NM
                , Y.BAT_PROG_KNT
                , Y.BAT_PROG_TTL_KNT
                , DECODE(Y.PROG_RATIO,NULL,'',TO_CHAR(Y.PROG_RATIO)||'%') PROG_RATIO
                , X.CURR_CD
                , (SELECT USD_LOCL_XCH_RT
                     FROM GL_MON_XCH_RT R
                    WHERE R.ACCT_XCH_RT_LVL = '1'
                      AND R.ACCT_XCH_RT_YRMON = TO_CHAR(GLOBALDATE_PKG.TIME_LOCAL_OFC_FNC(@[cre_ofc_cd]), 'YYYYMM')
                      AND R.CURR_CD = X.CURR_CD
                  ) XCH_RT
                , TO_CHAR(Y.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI:SS') CRE_DT
                , ( SELECT CU.USR_NM FROM COM_USER CU WHERE  CU.USR_ID = Y.CRE_USR_ID ) CRE_USR_ID
                , Y.CRE_OFC_CD
                , TO_CHAR(Y.LOCL_UPD_DT, 'YYYY-MM-DD HH24:MI:SS') UPD_DT
                , ( SELECT CU.USR_NM FROM COM_USER CU WHERE  CU.USR_ID = Y.UPD_USR_ID ) UPD_USR_ID
                , Y.ELAPSE_TIME
                , Y.UPD_OFC_CD
          FROM 
                  (
                    SELECT  'I' IO_BND_CD
                          , RHQ_CD
                          , CNT_CD
                          , CURR_CD
                    FROM    TRS_COST_TRF_CURR
                    UNION ALL
                    SELECT  'O' IO_BND_CD
                          , RHQ_CD
                          , CNT_CD
                          , CURR_CD
                    FROM    TRS_COST_TRF_CURR
                  ) X
                , ( -- PROCESSING, CREATED, UPDATED, CONFIRMED, ERROR STATUS
                    SELECT  A.COST_TRF_BAT_SEQ
                          , A.IO_BND_CD
                          , A.CNT_CD
                          , B.COST_TRF_NO
                          , DECODE(A.BAT_PROG_STS_CD,'B',B.COST_TRF_STS_CD,A.BAT_PROG_STS_CD) STS_CD
                          , A.BAT_PROG_KNT
                          , A.BAT_PROG_TTL_KNT
                          , FLOOR(DECODE(A.BAT_PROG_TTL_KNT,0,1,(A.BAT_PROG_KNT / A.BAT_PROG_TTL_KNT)) * 100) PROG_RATIO
                          , B.CRE_OFC_CD
                          , B.LOCL_CRE_DT
                          , B.CRE_USR_ID
                          , B.UPD_OFC_CD
                          , B.LOCL_UPD_DT
                          , B.UPD_USR_ID
                          , LPAD(TRUNC((A.BAT_END_DT - A.BAT_ST_DT) * 24), 2, '0') || ':' ||
                            LPAD(TRUNC((ROUND((A.BAT_END_DT - A.BAT_ST_DT) * 24,6) - TRUNC((A.BAT_END_DT - A.BAT_ST_DT) * 24)) * 60), 2, '0') || ':' ||
                            LPAD(ROUND((((ROUND((A.BAT_END_DT - A.BAT_ST_DT) * 24,6) - TRUNC((A.BAT_END_DT - A.BAT_ST_DT) * 24)) * 60) - TRUNC((ROUND((A.BAT_END_DT - A.BAT_ST_DT) * 24,6) - TRUNC((A.BAT_END_DT - A.BAT_ST_DT) * 24)) * 60))*60), 2, '0') ELAPSE_TIME
                    FROM    TRS_COST_TRF_BAT A
                          , TRS_INLND_COST_TRF_HDR B
                    WHERE   A.COST_TRF_BAT_SEQ = B.COST_TRF_BAT_SEQ(+)
                    AND     (A.CNT_CD, A.IO_BND_CD, A.COST_TRF_BAT_SEQ) IN (
                                                                             SELECT  CNT_CD
                                                                                   , IO_BND_CD
                                                                                   , MAX(COST_TRF_BAT_SEQ)
                                                                             FROM    TRS_COST_TRF_BAT
                                                                             WHERE   BAT_PROG_STS_CD <> 'X'
                                                                            GROUP BY CNT_CD, IO_BND_CD
                                                                           )
                    AND     (B.COST_TRF_NO) IN ( SELECT MAX(COST_TRF_NO) FROM TRS_INLND_COST_TRF_HDR GROUP BY CNT_CD, IO_BND_CD )
                  ) Y
                , ( -- WAITING, CANCELED STATUS
                    SELECT  COST_TRF_BAT_SEQ
                          , CNT_CD
                          , IO_BND_CD
                          , BAT_PROG_STS_CD
                    FROM    TRS_COST_TRF_BAT
                    WHERE   (CNT_CD, IO_BND_CD, COST_TRF_BAT_SEQ) IN (
                                                                       SELECT  CNT_CD
                                                                             , IO_BND_CD
                                                                             , MAX(COST_TRF_BAT_SEQ)
                                                                       FROM    TRS_COST_TRF_BAT
                                                                       WHERE   BAT_PROG_STS_CD <> 'X'
                                                                      GROUP BY CNT_CD, IO_BND_CD
                                                                     )
                  )  Z
          WHERE   X.IO_BND_CD       = Y.IO_BND_CD(+)
          AND     X.CNT_CD          = Y.CNT_CD(+)
          AND     X.IO_BND_CD       = Z.IO_BND_CD(+)
          AND     X.CNT_CD          = Z.CNT_CD(+)
        ) M
WHERE   1 = 1
#if (${rhq_cd} != '') 
AND     RHQ_CD          = @[rhq_cd]
#end
#if (${cnt_cd} != '') 
AND     CNT_CD         IN ($cnt_cd)
#end
#if (${io_bnd_cd} != '') 
AND     IO_BND_CD       = @[io_bnd_cd]
#end
#if (${combo_sts} != '') 
AND     STS_CD         IN ($combo_sts)
#end
ORDER BY RHQ_CD, CNT_CD, IO_BND_CD			]]></sql>
			<params>
				<param name="cre_ofc_cd" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
				<param name="io_bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
