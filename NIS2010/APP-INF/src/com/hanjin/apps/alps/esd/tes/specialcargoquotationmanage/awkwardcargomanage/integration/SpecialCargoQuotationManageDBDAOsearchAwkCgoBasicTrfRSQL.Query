<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpecialCargoQuotationManageDBDAOsearchAwkCgoBasicTrfRSQL">
			<desc><![CDATA[Awk Cargo Basic Tariff를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT * FROM (
SELECT
  CASE
  WHEN NVL(W.TML_ACT_COST_SEQ,0) > 0 AND NVL(W.TML_ACT_COST_SEQ,0) <> NVL(Q.TML_ACT_COST_SEQ,0)
  THEN CASE
       WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
       THEN 'U'
       ELSE ''
       END
  ELSE ''
  END IBFLAG
, CASE
  WHEN NVL(W.TML_ACT_COST_SEQ,0) > 0 AND NVL(W.TML_ACT_COST_SEQ,0) <> NVL(Q.TML_ACT_COST_SEQ,0)
  THEN CASE
       WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
       THEN W.TML_ACT_COST_SEQ
       ELSE Q.TML_ACT_COST_SEQ
       END
  ELSE Q.TML_ACT_COST_SEQ
  END TML_ACT_COST_SEQ
 , Q.YD_CD
 , Q.PORT_CD
 , Q.TML_CD
 , Q.MN_YD_FLG
 , Q.TML_AWK_CGO_TRF_TP_CD
 , Q.IO_BND_CD
 , Q.IO_GA_CD
 , Q.TML_AWK_TS_CD
 , Q.COND_NO
 , Q.COND_DESC
 , Q.TML_AWK_TRF_VER_NO
 , Q.MAN_LOCL_CURR_CD
 , Q.MAN_LOCL_AMT_20FT
 , Q.MAN_LOCL_AMT_40FT
 , Q.MAN_USD_AMT_20FT
 , Q.MAN_USD_AMT_40FT
 ,
 CASE
 WHEN NVL(W.TML_ACT_COST_SEQ,0) > 0 AND NVL(W.TML_ACT_COST_SEQ,0) <> NVL(Q.TML_ACT_COST_SEQ,0)
 THEN CASE
      WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
      THEN NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0)
      ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)
      END
 ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)
 END AUTO_USD_AMT_20FT
 ,
 CASE
 WHEN NVL(W.TML_ACT_COST_SEQ,0) > 0 AND NVL(W.TML_ACT_COST_SEQ,0) <> NVL(Q.TML_ACT_COST_SEQ,0)
 THEN CASE
      WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
      THEN NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0)
      ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0)
      END
 ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0)
 END AUTO_USD_AMT_40FT
 , Q.TTL_LOCL_CURR_CD
 , Q.TTL_LOCL_AMT_20FT
 , Q.TTL_LOCL_AMT_40FT
 , Q.TTL_USD_AMT_20FT
 , Q.TTL_USD_AMT_40FT
 , Q.APLY_RTO
 , Q.FML_LOCL_CURR_CD
 , Q.FML_LOCL_AMT_20FT
 , Q.FML_LOCL_AMT_40FT
 , Q.FML_USD_AMT_20FT
 , Q.FML_USD_AMT_40FT
 , Q.CALC_USD_AMT_20FT
 , Q.CALC_USD_AMT_40FT
 ,CASE
  WHEN NVL(W.TML_ACT_COST_SEQ,0) > 0 AND NVL(W.TML_ACT_COST_SEQ,0) <> NVL(Q.TML_ACT_COST_SEQ,0)
  THEN CASE
       WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
       THEN TO_NUMBER('')
       ELSE Q.SUM_USD_AMT_20FT
       END
  ELSE Q.SUM_USD_AMT_20FT
  END SUM_USD_AMT_20FT
 ,CASE
  WHEN NVL(W.TML_ACT_COST_SEQ,0) > 0 AND NVL(W.TML_ACT_COST_SEQ,0) <> NVL(Q.TML_ACT_COST_SEQ,0)
  THEN CASE
       WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
       THEN TO_NUMBER('')
       ELSE Q.SUM_USD_AMT_40FT
       END
  ELSE Q.SUM_USD_AMT_40FT
  END SUM_USD_AMT_40FT
-- , Q.SUM_USD_AMT_20FT
-- , Q.SUM_USD_AMT_40FT
 , Q.CALC_RMK
 , Q.LST_UPD_USR_ID
 , Q.LST_UPD_DT
 , Q.CRE_USR_OFC_CD
 , Q.UPD_USR_OFC_CD
 ,
 CASE
 WHEN Q.CRE_USR_OFC_AUTH_YN IS NOT NULL AND Q.CRE_USR_OFC_AUTH_YN = 'Y'
 THEN 'Y'
 WHEN Q.UPD_USR_OFC_AUTH_YN IS NOT NULL AND Q.UPD_USR_OFC_AUTH_YN = 'Y'
 THEN 'Y'
 ELSE 'N'
 END CHK_AUTH_YN
 , Q.SPCL_CGO_REF_SEQ
 , CASE
   WHEN W.ACT_YD_OFC_AUTH_YN = 'Y'
   THEN W.ACT_YD_OFC_AUTH_YN
   ELSE 
    	CASE
    	WHEN Q.CRE_USR_OFC_AUTH_YN = 'Y' OR Q.UPD_USR_OFC_AUTH_YN = 'Y'
    	THEN 'Y'
     	ELSE ''
    	END
   END ACT_YD_OFC_AUTH_YN
FROM (
    SELECT 
	AD.TML_ACT_COST_SEQ
    , AD.YD_CD
    , SUBSTR(AD.YD_CD,1,5) PORT_CD
    , SUBSTR(AD.YD_CD,6) TML_CD
    , DECODE(AH.MN_YD_FLG,'Y','1','0') MN_YD_FLG
    , X.TML_AWK_CGO_TRF_TP_CD
 	, X.IO_BND_CD, X.IO_GA_CD
 	, X.TML_AWK_TS_CD
 	, X.COND_NO
	,(SELECT C.COND_DESC
	  FROM TES_TRF_COND C
	  WHERE 1=1
	  AND C.COND_NO = X.COND_NO) COND_DESC	
 	, X.TML_AWK_TRF_VER_NO
    , X.MAN_LOCL_CURR_CD
    , X.MAN_LOCL_AMT_20FT
    , X.MAN_LOCL_AMT_40FT
    , X.MAN_USD_AMT_20FT
    , X.MAN_USD_AMT_40FT
    , X.AUTO_USD_AMT_20FT
    , X.AUTO_USD_AMT_40FT
 	, X.TTL_LOCL_CURR_CD
 	, X.TTL_LOCL_AMT_20FT
 	, X.TTL_LOCL_AMT_40FT
	, X.TTL_USD_AMT_20FT
 	, X.TTL_USD_AMT_40FT
    , AD.APLY_RTO
    , X.FML_LOCL_CURR_CD
    , X.FML_LOCL_AMT_20FT
    , X.FML_LOCL_AMT_40FT
	, X.FML_USD_AMT_20FT
    , X.FML_USD_AMT_40FT
    , X.CALC_USD_AMT_20FT
    , X.CALC_USD_AMT_40FT
	, X.SUM_USD_AMT_20FT
    , X.SUM_USD_AMT_40FT
    , AD.CALC_RMK
    , AD.LST_UPD_USR_ID
    , TO_CHAR(AD.LST_UPD_DT,'YYYY-MM-DD') LST_UPD_DT
    , AD.CRE_USR_ID
	, (SELECT Y.OFC_CD FROM MDM_YARD Y WHERE Y.YD_CD = AD.YD_CD) CRE_USR_OFC_CD
    , UU.OFC_CD UPD_USR_OFC_CD
    , TES_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], (SELECT Y.OFC_CD FROM MDM_YARD Y WHERE Y.YD_CD = AD.YD_CD)) CRE_USR_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
    , TES_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], UU.OFC_CD) UPD_USR_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
    , CASE 
      WHEN X.SPCL_CGO_REF_SEQ IS NOT NULL 
      THEN X.SPCL_CGO_REF_SEQ
      WHEN X.SPCL_CGO_REF_SEQ_PM IS NOT NULL 
      THEN X.SPCL_CGO_REF_SEQ_PM
      ELSE TO_NUMBER('')
      END SPCL_CGO_REF_SEQ
    FROM TES_AWK_CGO_TRF_HDR AH, TES_AWK_CGO_TRF_DTL AD, (
        SELECT 
            /** HDR + DTL **/
            T.YD_CD, T.TML_AWK_CGO_TRF_TP_CD, T.IO_BND_CD, T.IO_GA_CD, T.TML_AWK_TS_CD, T.COND_NO, MAX(T.TML_AWK_TRF_VER_NO) TML_AWK_TRF_VER_NO, 
            /** UNIT COST MANUAL (LOCL CURR) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'M'
            THEN T.LOCL_CURR_CD
            END) MAN_LOCL_CURR_CD, 
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.LOCL_CURR_AMT,'')
            END) MAN_LOCL_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.LOCL_CURR_AMT,'')
            END) MAN_LOCL_AMT_40FT,
            /** UNIT COST MANUAL (USD) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) MAN_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) MAN_USD_AMT_40FT,
            /** UNIT COST AUTO (USD) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'A'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) AUTO_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'A'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) AUTO_USD_AMT_40FT,
   			/** TOTAL (LOCL CURR) **/
   			MAX(
   			CASE
   			WHEN T.TML_AWK_UC_CALC_TP_CD = 'T'
   			THEN T.LOCL_CURR_CD
   			END) TTL_LOCL_CURR_CD,
   			MAX(
   			CASE
   			WHEN T.TML_AWK_UC_CALC_TP_CD = 'T'
   			THEN DECODE(T.CNTR_SZ_CD,'2',T.LOCL_CURR_AMT,'')
   			END) TTL_LOCL_AMT_20FT,
   			MAX(
   			CASE
   			WHEN T.TML_AWK_UC_CALC_TP_CD = 'T'
   			THEN DECODE(T.CNTR_SZ_CD,'4',T.LOCL_CURR_AMT,'')
   			END) TTL_LOCL_AMT_40FT,
			/** TOTAL (USD) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'T'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) TTL_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'T'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) TTL_USD_AMT_40FT,
            /** FORMULA (LOCL CURR) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'F'
            THEN T.LOCL_CURR_CD
            END) FML_LOCL_CURR_CD, 
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'F'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.LOCL_CURR_AMT,'')
            END) FML_LOCL_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'F'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.LOCL_CURR_AMT,'')
            END) FML_LOCL_AMT_40FT,
			/** FORMULA (USD) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'F'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) FML_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'F'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) FML_USD_AMT_40FT,
            /** APPLIED EXTRA COST (USD) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'C'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) CALC_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'C'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) CALC_USD_AMT_40FT,
			/** TOTAL HANDLING COST (USD) **/
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'S'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) SUM_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TML_AWK_UC_CALC_TP_CD = 'S'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) SUM_USD_AMT_40FT
            , MAX(PD.SPCL_CGO_REF_SEQ) SPCL_CGO_REF_SEQ
			, MAX(PM.SPCL_CGO_REF_SEQ) SPCL_CGO_REF_SEQ_PM
        FROM TES_AWK_CGO_TRF_HDR H, TES_AWK_CGO_TRF_DTL D, TES_AWK_CGO_TRF_TP_SZ T, PRI_SCQ_AWK_YD_DTL PD, PRI_SCQ_AWK_YD_DTL_TMP PM
        WHERE 1=1
        AND H.YD_CD = D.YD_CD
        AND NVL(H.DELT_FLG,'N') <> 'Y'
        AND D.YD_CD = T.YD_CD
        AND D.TML_AWK_CGO_TRF_TP_CD = T.TML_AWK_CGO_TRF_TP_CD
        AND D.IO_BND_CD = T.IO_BND_CD
        AND D.IO_GA_CD = T.IO_GA_CD
        AND D.TML_AWK_TS_CD = T.TML_AWK_TS_CD
        AND D.COND_NO = T.COND_NO
        AND D.TML_AWK_TRF_VER_NO = T.TML_AWK_TRF_VER_NO
        AND D.TML_AWK_TRF_VER_NO = (
            SELECT MAX(XD.TML_AWK_TRF_VER_NO)
            FROM TES_AWK_CGO_TRF_HDR XH, TES_AWK_CGO_TRF_DTL XD
            WHERE 1=1
            AND XH.YD_CD = XD.YD_CD
            AND NVL(XH.DELT_FLG,'N') <> 'Y'
            AND XD.YD_CD = D.YD_CD
            AND XD.TML_AWK_CGO_TRF_TP_CD = D.TML_AWK_CGO_TRF_TP_CD
            AND XD.IO_BND_CD = D.IO_BND_CD
            AND XD.IO_GA_CD = D.IO_GA_CD
            AND XD.TML_AWK_TS_CD = D.TML_AWK_TS_CD
            AND XD.COND_NO = D.COND_NO        
        )
        AND T.SPCL_CGO_REF_SEQ = PD.SPCL_CGO_REF_SEQ(+)
		AND T.SPCL_CGO_REF_SEQ = PM.SPCL_CGO_REF_SEQ(+)
        GROUP BY T.YD_CD, T.TML_AWK_CGO_TRF_TP_CD, T.IO_BND_CD, T.IO_GA_CD, T.TML_AWK_TS_CD, T.COND_NO
    ) X
    , COM_USER CU, COM_USER UU
    WHERE 1=1
    AND AH.YD_CD = AD.YD_CD
    AND NVL(AH.DELT_FLG,'N') <> 'Y'
    #if(${yd_cd} != '' )
    AND AH.YD_CD LIKE @[yd_cd]||'%'  --// PORT 조회조건으로 받는다
    #end
    AND AD.TML_AWK_CGO_TRF_TP_CD = @[tml_awk_cgo_trf_tp_cd] --// COST 유형 받아 걸기
    AND AD.TML_AWK_TRF_VER_NO = (
        SELECT MAX(XD.TML_AWK_TRF_VER_NO)
        FROM TES_AWK_CGO_TRF_HDR XH, TES_AWK_CGO_TRF_DTL XD
        WHERE 1=1
        AND XH.YD_CD = XD.YD_CD
        AND NVL(XH.DELT_FLG,'N') <> 'Y'
        AND XD.YD_CD = AD.YD_CD
        AND XD.TML_AWK_CGO_TRF_TP_CD = AD.TML_AWK_CGO_TRF_TP_CD
        AND XD.IO_BND_CD = AD.IO_BND_CD
        AND XD.IO_GA_CD = AD.IO_GA_CD
        AND XD.TML_AWK_TS_CD = AD.TML_AWK_TS_CD
        AND XD.COND_NO = AD.COND_NO
    )
    AND AD.YD_CD = X.YD_CD
    AND AD.TML_AWK_CGO_TRF_TP_CD = X.TML_AWK_CGO_TRF_TP_CD
    AND AD.IO_BND_CD = X.IO_BND_CD
    AND AD.IO_GA_CD = X.IO_GA_CD
    AND AD.TML_AWK_TS_CD = X.TML_AWK_TS_CD
    AND AD.COND_NO = X.COND_NO 
    AND AD.CRE_USR_ID = CU.USR_ID(+)
    AND NVL(CU.USE_FLG(+),'N') = 'Y'
    AND AD.LST_UPD_USR_ID = UU.USR_ID(+)
    AND NVL(UU.USE_FLG(+),'N') = 'Y'
    ) Q
, (
    SELECT 
        TD.TML_ACT_COST_SEQ, TD.YD_CD, TD.TML_AWK_CGO_TRF_TP_CD, TD.IO_BND_CD, TD.IO_GA_CD, TD.TML_AWK_TS_CD,
        MAX(DECODE(TT.CNTR_SZ_CD,'2',TT.USD_AMT,'')) ACT_USD_AMT_20FT,
        MAX(DECODE(TT.CNTR_SZ_CD,'4',TT.USD_AMT,'')) ACT_USD_AMT_40FT, Y.OFC_CD ACT_YD_OFC_CD
		, TES_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], Y.OFC_CD) ACT_YD_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
    FROM TES_ACT_COST_HDR TH, TES_ACT_COST_DTL TD, TES_ACT_COST_TP_SZ TT, MDM_YARD Y
    WHERE 1=1
	AND TH.TML_ACT_COST_SEQ > 0  
    AND NVL(TH.DELT_FLG,'N') <> 'Y'
    AND TH.EXE_STS_CD IN ('C')
    #if( ${year_month} != '' )
    AND TO_CHAR(TH.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
    #end
    AND TH.TML_ACT_COST_SEQ = (
        SELECT MAX(X.TML_ACT_COST_SEQ) TML_ACT_COST_SEQ
        FROM TES_ACT_COST_HDR X
        WHERE 1=1
		AND X.TML_ACT_COST_SEQ > 0 
        AND NVL(X.DELT_FLG,'N') <> 'Y'
        AND X.EXE_STS_CD IN ('C')
    	#if( ${year_month} != '' )
    	AND TO_CHAR(X.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
    	#end
    	)
    AND TH.TML_ACT_COST_SEQ = TD.TML_ACT_COST_SEQ
    AND TD.TML_AWK_CGO_TRF_TP_CD = @[tml_awk_cgo_trf_tp_cd]  --// COST 유형 받아 걸기
    AND TD.TML_ACT_COST_SEQ = TT.TML_ACT_COST_SEQ
    AND TD.YD_CD = TT.YD_CD
    AND TD.TML_AWK_CGO_TRF_TP_CD = TT.TML_AWK_CGO_TRF_TP_CD
    AND TD.IO_BND_CD = TT.IO_BND_CD
    AND TD.IO_GA_CD = TT.IO_GA_CD
    AND TD.TML_AWK_TS_CD = TT.TML_AWK_TS_CD
	AND TD.YD_CD = Y.YD_CD(+)
    GROUP BY TD.TML_ACT_COST_SEQ, TD.YD_CD, TD.TML_AWK_CGO_TRF_TP_CD, TD.IO_BND_CD, TD.IO_GA_CD, TD.TML_AWK_TS_CD, Y.OFC_CD
) W
WHERE 1=1
AND Q.YD_CD  = W.YD_CD(+)
AND Q.TML_AWK_CGO_TRF_TP_CD  = W.TML_AWK_CGO_TRF_TP_CD(+)
AND Q.IO_BND_CD  = W.IO_BND_CD(+)
AND Q.IO_GA_CD  = W.IO_GA_CD(+)
AND Q.TML_AWK_TS_CD  = W.TML_AWK_TS_CD(+)
UNION ALL
SELECT 
	'I' IBFLAG
    , TD.TML_ACT_COST_SEQ
    , TD.YD_CD
    , SUBSTR(TD.YD_CD,1,5) PORT_CD
    , SUBSTR(TD.YD_CD,6) TML_CD
    , '0' MN_YD_FLG
    , TD.TML_AWK_CGO_TRF_TP_CD
    , TD.IO_BND_CD
    , TD.IO_GA_CD
    , TD.TML_AWK_TS_CD
    , TO_NUMBER('0') COND_NO
	, '' COND_DESC
    , TO_NUMBER('') TML_AWK_TRF_VER_NO
    , '' MAN_LOCL_CURR_CD
    , TO_NUMBER('') MAN_LOCL_AMT_20FT
    , TO_NUMBER('') MAN_LOCL_AMT_40FT
    , TO_NUMBER('') MAN_USD_AMT_20FT
    , TO_NUMBER('') MAN_USD_AMT_40FT
    , MAX(DECODE(TT.CNTR_SZ_CD,'2',NVL(TT.USD_AMT,''),'')) AUTO_USD_AMT_20FT
    , MAX(DECODE(TT.CNTR_SZ_CD,'4',NVL(TT.USD_AMT,''),'')) AUTO_USD_AMT_40FT
    , '' TTL_LOCL_CURR_CD
    , TO_NUMBER('') TTL_LOCL_AMT_20FT
    , TO_NUMBER('') TTL_LOCL_AMT_40FT
	, TO_NUMBER('') TTL_USD_AMT_20FT
    , TO_NUMBER('') TTL_USD_AMT_40FT
    , TO_NUMBER('') APLY_RTO
    , '' FML_LOCL_CURR_CD
    , TO_NUMBER('') FML_LOCL_AMT_20FT
    , TO_NUMBER('') FML_LOCL_AMT_40FT
	, TO_NUMBER('') FML_USD_AMT_20FT
    , TO_NUMBER('') FML_USD_AMT_40FT
    , TO_NUMBER('') CALC_USD_AMT_20FT
    , TO_NUMBER('') CALC_USD_AMT_40FT
	, MAX(DECODE(TT.CNTR_SZ_CD,'2',NVL(TT.USD_AMT,''),'')) SUM_USD_AMT_20FT
	, MAX(DECODE(TT.CNTR_SZ_CD,'4',NVL(TT.USD_AMT,''),'')) SUM_USD_AMT_40FT
    , '' CALC_RMK
    , TD.UPD_USR_ID LST_UPD_USR_ID
    , TO_CHAR(TD.UPD_DT,'YYYY-MM-DD') LST_UPD_DT
    , '' CRE_USR_OFC_CD
    , '' UPD_USR_OFC_CD
    , 'Y' CHK_AUTH_YN
    , TO_NUMBER('') SPCL_CGO_REF_SEQ
	, TES_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], Y.OFC_CD) ACT_YD_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
FROM TES_ACT_COST_HDR TH, TES_ACT_COST_DTL TD, TES_ACT_COST_TP_SZ TT, MDM_YARD Y
WHERE 1=1
AND NVL(TH.DELT_FLG,'N') <> 'Y'
AND TH.EXE_STS_CD IN ('C')
AND TO_CHAR(TH.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
AND TH.TML_ACT_COST_SEQ > 0
AND TH.TML_ACT_COST_SEQ = (
    SELECT MAX(X.TML_ACT_COST_SEQ) TML_ACT_COST_SEQ
    FROM TES_ACT_COST_HDR X
    WHERE 1=1
	AND X.TML_ACT_COST_SEQ > 0
    AND NVL(X.DELT_FLG,'N') <> 'Y'
    AND X.EXE_STS_CD IN ('C')
    AND TO_CHAR(X.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
)
#if(${yd_cd} != '' )
AND TD.YD_CD LIKE @[yd_cd]||'%'  --// PORT 조회조건으로 받는다
#end
AND TH.TML_ACT_COST_SEQ = TD.TML_ACT_COST_SEQ
AND TD.TML_AWK_CGO_TRF_TP_CD = @[tml_awk_cgo_trf_tp_cd]  --// COST 유형 받아 걸기
AND TT.TML_ACT_COST_SEQ > 0 
AND TD.TML_ACT_COST_SEQ = TT.TML_ACT_COST_SEQ
AND TD.YD_CD = TT.YD_CD
AND TD.TML_AWK_CGO_TRF_TP_CD = TT.TML_AWK_CGO_TRF_TP_CD
AND TD.IO_BND_CD = TT.IO_BND_CD
AND TD.IO_GA_CD = TT.IO_GA_CD
AND TD.TML_AWK_TS_CD = TT.TML_AWK_TS_CD
AND NOT EXISTS (
    SELECT D.YD_CD
    FROM TES_AWK_CGO_TRF_HDR H, TES_AWK_CGO_TRF_DTL D
    WHERE 1=1
    AND H.YD_CD = D.YD_CD
    AND NVL(H.DELT_FLG,'N') <> 'Y'
    AND D.TML_AWK_CGO_TRF_TP_CD = @[tml_awk_cgo_trf_tp_cd] --// COST 유형 받아 걸기
    AND H.YD_CD = TD.YD_CD
)
AND TD.YD_CD = Y.YD_CD(+)
GROUP BY TD.TML_ACT_COST_SEQ, TD.YD_CD, TD.TML_AWK_CGO_TRF_TP_CD, TD.IO_BND_CD, TD.IO_GA_CD, TD.TML_AWK_TS_CD, TD.UPD_USR_ID, TO_CHAR(TD.UPD_DT,'YYYY-MM-DD'), Y.OFC_CD
) P
#if(${cond_no} != '' )
WHERE P.COND_NO = @[cond_no]
#end
ORDER BY P.YD_CD, P.TML_AWK_CGO_TRF_TP_CD, P.IO_BND_CD, P.IO_GA_CD, P.TML_AWK_TS_CD, P.COND_NO			]]></sql>
			<params>
				<param name="lg_ofc_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="tml_awk_cgo_trf_tp_cd" type="12" value="" out="N"/>
				<param name="year_month" type="12" value="" out="N"/>
				<param name="cond_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
