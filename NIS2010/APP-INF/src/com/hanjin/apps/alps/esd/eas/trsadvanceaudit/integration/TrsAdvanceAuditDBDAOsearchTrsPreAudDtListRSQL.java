/*=========================================================
*Copyright(c) 2018 CyberLogitec
*@FileName : TrsAdvanceAuditDBDAOsearchTrsPreAudDtListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2018.03.05
*@LastModifier : 
*@LastVersion : 1.0
* 2018.03.05 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esd.eas.trsadvanceaudit.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class TrsAdvanceAuditDBDAOsearchTrsPreAudDtListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchTrsPreAudDtList 조회
	  * </pre>
	  */
	public TrsAdvanceAuditDBDAOsearchTrsPreAudDtListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_inv_vndr_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_inv_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_trsp_so_tp_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_trsp_crr_mod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_trsp_cost_dtl_mod_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esd.eas.trsadvanceaudit.integration").append("\n"); 
		query.append("FileName : TrsAdvanceAuditDBDAOsearchTrsPreAudDtListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT RHQ_OFC_CD    " ).append("\n"); 
		query.append("          ,WO_OFC_CD    " ).append("\n"); 
		query.append("          ,INV_OFC_CD    " ).append("\n"); 
		query.append("          ,BKG_NO        " ).append("\n"); 
		query.append("          ,EQ_NO        " ).append("\n"); 
		query.append("          ,WO_NO        " ).append("\n"); 
		query.append("          ,SO_NO        " ).append("\n"); 
		query.append("          ,BKG_RCVDE_TERM_CD        " ).append("\n"); 
		query.append("          ,CURR_CD        " ).append("\n"); 
		query.append("          ,WO_AMT        " ).append("\n"); 
		query.append("          ,INV_AMT        " ).append("\n"); 
		query.append("          ,CURR_CNG_FLG        " ).append("\n"); 
		query.append("          ,INV_DIFF_AMT_FLG        " ).append("\n"); 
		query.append("          ,INV_DIFF_AMT" ).append("\n"); 
		query.append("          ,ROUND((INV_DIFF_AMT/(DECODE(WO_AMT, 0, 1, WO_AMT))) * 100, 3) INV_DIFF_PCT" ).append("\n"); 
		query.append("          ,NVL(NO_AGMT_FLG, 'Y') AS NO_AGMT_FLG" ).append("\n"); 
		query.append("          ,NVL(NO_OPTM_ROUT_FLG, 'Y') AS NO_OPTM_ROUT_FLG    " ).append("\n"); 
		query.append("          ,EXCEED_AVG_FLG" ).append("\n"); 
		query.append("          ,NVL(EXCEED_AVG_DIFF_AMT, 0) AS EXCEED_AVG_DIFF_AMT" ).append("\n"); 
		query.append("          ,EAC_IF_FLG        " ).append("\n"); 
		query.append("          ,TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("          ,INV_VNDR_SEQ        " ).append("\n"); 
		query.append("          ,INV_NO        " ).append("\n"); 
		query.append("          ,CGO_TP_CD        " ).append("\n"); 
		query.append("          ,TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("          ,TRSP_COST_DTL_MOD_CD        " ).append("\n"); 
		query.append("          ,TRSP_BND_CD        " ).append("\n"); 
		query.append("          ,INV_CFM_DT        " ).append("\n"); 
		query.append("          ,AUD_STS_FLG        " ).append("\n"); 
		query.append("          ,TO_CHAR(WO_ISS_DT, 'YYYYMMDD') WO_ISS_DT        " ).append("\n"); 
		query.append("          ,TO_CHAR(ADD_MONTHS(WO_ISS_DT,-1), 'YYYYMM') WO_ISS_PRE_MON" ).append("\n"); 
		query.append("          ,AUTO_AUD_STS_CD" ).append("\n"); 
		query.append("          ,FM_NOD_CD" ).append("\n"); 
		query.append("          ,TO_NOD_CD" ).append("\n"); 
		query.append("          ,VIA_NOD_CD" ).append("\n"); 
		query.append("          ,DOR_NOD_CD" ).append("\n"); 
		query.append("          ,EQ_TPSZ_CD" ).append("\n"); 
		query.append("          ,INV_DIFF_RTO" ).append("\n"); 
		query.append("          ,EXCEED_AVG_RTO" ).append("\n"); 
		query.append("          ,TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("          ,TRSP_SO_SEQ" ).append("\n"); 
		query.append("          ,NEGO_AMT" ).append("\n"); 
		query.append("          ,NEGO_RMK" ).append("\n"); 
		query.append("          ,ETC_SCG_NM" ).append("\n"); 
		query.append("          ,ETC_SCG_AMT" ).append("\n"); 
		query.append("          ,OTR_RMK" ).append("\n"); 
		query.append("          ,INV_ETC_SCG_NM" ).append("\n"); 
		query.append("          ,INV_ETC_SCG_AMT" ).append("\n"); 
		query.append("          ,INV_OTR_RMK" ).append("\n"); 
		query.append("          ,TO_CHAR(LOCL_CRE_DT,'YYYY-MM-DD') LOCL_CRE_DT" ).append("\n"); 
		query.append("      FROM (" ).append("\n"); 
		query.append("            SELECT AA.RHQ_OFC_CD        " ).append("\n"); 
		query.append("                  ,AA.WO_OFC_CD        " ).append("\n"); 
		query.append("                  ,AA.INV_OFC_CD        " ).append("\n"); 
		query.append("                  ,AA.BKG_NO        " ).append("\n"); 
		query.append("                  ,AA.EQ_NO        " ).append("\n"); 
		query.append("                  ,AA.EQ_TPSZ_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_WO_OFC_CTY_CD || AA.TRSP_WO_SEQ AS WO_NO        " ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_OFC_CTY_CD || AA.TRSP_SO_SEQ AS SO_NO        " ).append("\n"); 
		query.append("                  ,AA.BKG_RCVDE_TERM_CD        " ).append("\n"); 
		query.append("                  ,AA.CURR_CD" ).append("\n"); 
		query.append("                  ,AA.WO_AMT" ).append("\n"); 
		query.append("                  ,AA.INV_AMT" ).append("\n"); 
		query.append("                  ,AA.CURR_CNG_FLG" ).append("\n"); 
		query.append("                  ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'" ).append("\n"); 
		query.append("                         WHEN AA.INV_DIFF_AMT < -1 THEN 'F'" ).append("\n"); 
		query.append("                         WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' " ).append("\n"); 
		query.append("                     END) INV_DIFF_AMT_FLG        " ).append("\n"); 
		query.append("                  ,AA.INV_DIFF_AMT" ).append("\n"); 
		query.append("                  ,AA.NO_AGMT_FLG" ).append("\n"); 
		query.append("                  ,AA.NO_OPTM_ROUT_FLG        " ).append("\n"); 
		query.append("                  ,CASE WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)        " ).append("\n"); 
		query.append("                                                                                                                                                    ,AA.CURR_CD        " ).append("\n"); 
		query.append("                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)        " ).append("\n"); 
		query.append("                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')        " ).append("\n"); 
		query.append("                                                                                                                                                    )        " ).append("\n"); 
		query.append("                                                            ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))        " ).append("\n"); 
		query.append("                                                       END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100" ).append("\n"); 
		query.append("                        THEN 'Y'        " ).append("\n"); 
		query.append("                   END EXCEED_AVG_FLG" ).append("\n"); 
		query.append("                  ,NVL(AA.WO_AMT,0) - NVL((CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)        " ).append("\n"); 
		query.append("                                                                                                                                                    ,AA.CURR_CD        " ).append("\n"); 
		query.append("                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)        " ).append("\n"); 
		query.append("                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')        " ).append("\n"); 
		query.append("                                                                                                                                                    )        " ).append("\n"); 
		query.append("                                                ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))        " ).append("\n"); 
		query.append("                                           END),0) EXCEED_AVG_DIFF_AMT" ).append("\n"); 
		query.append("                  ,LEAST((CASE WHEN AA.NO_AGMT_FLG = 'N' THEN 'C'" ).append("\n"); 
		query.append("                               ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.)" ).append("\n"); 
		query.append("                          END)" ).append("\n"); 
		query.append("                        ,(CASE WHEN AA.NO_OPTM_ROUT_FLG = 'N' THEN 'F'" ).append("\n"); 
		query.append("                               ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.)" ).append("\n"); 
		query.append("                          END)" ).append("\n"); 
		query.append("                        ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'" ).append("\n"); 
		query.append("                               WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'" ).append("\n"); 
		query.append("                                                                                                                                        ELSE 'F'" ).append("\n"); 
		query.append("                                                                                                                                   END" ).append("\n"); 
		query.append("                               WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'" ).append("\n"); 
		query.append("                               ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우" ).append("\n"); 
		query.append("                          END)" ).append("\n"); 
		query.append("                        ,(CASE WHEN AA.EXCEED_AVG_RTO >= (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)" ).append("\n"); 
		query.append("                                                                                                                                                    ,AA.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    " ).append("\n"); 
		query.append("                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                                                                    )    " ).append("\n"); 
		query.append("                                                                    ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    " ).append("\n"); 
		query.append("                                                               END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'S'" ).append("\n"); 
		query.append("                               WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)" ).append("\n"); 
		query.append("                                                                                                                                                    ,AA.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    " ).append("\n"); 
		query.append("                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                                                                    )    " ).append("\n"); 
		query.append("                                                                   ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    " ).append("\n"); 
		query.append("                                                              END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'F'" ).append("\n"); 
		query.append("                               ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우" ).append("\n"); 
		query.append("                         END)" ).append("\n"); 
		query.append("                   ) AS AUTO_AUD_STS_CD" ).append("\n"); 
		query.append("                  ,(SELECT 'Y'        " ).append("\n"); 
		query.append("                     FROM EAS_TRSP_AUD_CHK X        " ).append("\n"); 
		query.append("                    WHERE X.INV_NO        = AA.INV_NO        " ).append("\n"); 
		query.append("                      AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                      AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                      AND X.TRSP_SO_OFC_CTY_CD = AA.TRSP_SO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                      AND X.TRSP_SO_SEQ = AA.TRSP_SO_SEQ        " ).append("\n"); 
		query.append("                   ) EAC_IF_FLG                    " ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                  ,AA.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                  ,AA.INV_NO        " ).append("\n"); 
		query.append("                  ,AA.CGO_TP_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_COST_DTL_MOD_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_BND_CD        " ).append("\n"); 
		query.append("                  ,AA.INV_CFM_DT        " ).append("\n"); 
		query.append("                  ,AA.WO_ISS_DT        " ).append("\n"); 
		query.append("                  ,AA.FM_NOD_CD        " ).append("\n"); 
		query.append("                  ,AA.TO_NOD_CD        " ).append("\n"); 
		query.append("                  ,AA.VIA_NOD_CD        " ).append("\n"); 
		query.append("                  ,AA.DOR_NOD_CD                      " ).append("\n"); 
		query.append("                  ,DECODE(BB.EXPN_AUD_STS_CD, NULL, NULL, 'Y') AUD_STS_FLG -- 심사내역이 있을 경우만 EAC I/F가 가능하다.    " ).append("\n"); 
		query.append("                  ,AA.INV_DIFF_RTO" ).append("\n"); 
		query.append("                  ,AA.EXCEED_AVG_RTO" ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_SEQ" ).append("\n"); 
		query.append("                  ,AA.NEGO_AMT" ).append("\n"); 
		query.append("                  ,AA.NEGO_RMK" ).append("\n"); 
		query.append("                  ,BKG_GET_TOKEN_FNC(AA.SCG_INFO,1) ETC_SCG_NM" ).append("\n"); 
		query.append("                  ,BKG_GET_TOKEN_FNC(AA.SCG_INFO,2) ETC_SCG_AMT" ).append("\n"); 
		query.append("                  ,BKG_GET_TOKEN_FNC(AA.SCG_INFO,3) OTR_RMK" ).append("\n"); 
		query.append("                  ,BKG_GET_TOKEN_FNC(AA.INV_SCG_INFO,1) INV_ETC_SCG_NM" ).append("\n"); 
		query.append("                  ,BKG_GET_TOKEN_FNC(AA.INV_SCG_INFO,2) INV_ETC_SCG_AMT" ).append("\n"); 
		query.append("                  ,BKG_GET_TOKEN_FNC(AA.INV_SCG_INFO,3) INV_OTR_RMK" ).append("\n"); 
		query.append("                  ,AA.LOCL_CRE_DT" ).append("\n"); 
		query.append("              FROM (" ).append("\n"); 
		query.append("                    SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */        " ).append("\n"); 
		query.append("                           (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD        " ).append("\n"); 
		query.append("                          ,I.CRE_OFC_CD AS INV_OFC_CD        " ).append("\n"); 
		query.append("                          ,W.CRE_OFC_CD AS WO_OFC_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                          ,CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                ELSE I.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                           END INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                          ,CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_NO        " ).append("\n"); 
		query.append("                                ELSE I.INV_NO        " ).append("\n"); 
		query.append("                           END INV_NO        " ).append("\n"); 
		query.append("                          ,I.CSR_NO        " ).append("\n"); 
		query.append("                          ,S.CURR_CD        " ).append("\n"); 
		query.append("                          ,S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(S.SCG_VAT_AMT,0) + NVL(S.TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0) AS WO_AMT        " ).append("\n"); 
		query.append("                          ,S.INV_CURR_CD" ).append("\n"); 
		query.append("                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD        " ).append("\n"); 
		query.append("                                                                                                           ,S.CURR_CD        " ).append("\n"); 
		query.append("                                                                                                           ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)        " ).append("\n"); 
		query.append("                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')        " ).append("\n"); 
		query.append("                                                                                                           )        " ).append("\n"); 
		query.append("                                 ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)        " ).append("\n"); 
		query.append("                            END) AS INV_AMT        " ).append("\n"); 
		query.append("                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG        " ).append("\n"); 
		query.append("                          ,CASE WHEN L.HJL_NO IS NOT NULL THEN 'ETS'        " ).append("\n"); 
		query.append("                                ELSE (SELECT X.USR_NM FROM COM_USER X WHERE X.USR_ID = I.CRE_USR_ID)        " ).append("\n"); 
		query.append("                           END INV_ISS_USR_NM        " ).append("\n"); 
		query.append("                          ,(SELECT CASE WHEN X.GEN_PAY_TERM_CD = 'O60' THEN '0'        " ).append("\n"); 
		query.append("                                        ELSE X.GEN_PAY_TERM_CD        " ).append("\n"); 
		query.append("                                   END PAY_TERM_CD        " ).append("\n"); 
		query.append("                              FROM MDM_VENDOR X        " ).append("\n"); 
		query.append("                             WHERE X.VNDR_SEQ = CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                                     ELSE I.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                                END        " ).append("\n"); 
		query.append("                           ) PAY_TERM_CD        " ).append("\n"); 
		query.append("                          ,TO_CHAR(I.PAY_DT, 'YYYY-MM-DD') PAY_DT        " ).append("\n"); 
		query.append("                          ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') INV_TERM_DT        " ).append("\n"); 
		query.append("                          ,(CASE WHEN ((S.TRSP_AGMT_OFC_CTY_CD IS NULL) AND (SELECT X.TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("                                                                              FROM TRS_TRSP_SVC_ORD X" ).append("\n"); 
		query.append("                                                                             WHERE X.TRSP_SO_OFC_CTY_CD = SUBSTR(S.MCNTR_BDL_GRP_SEQ, 1,3)" ).append("\n"); 
		query.append("                                                                               AND X.TRSP_SO_SEQ = SUBSTR(S.MCNTR_BDL_GRP_SEQ,4)) IS NULL)" ).append("\n"); 
		query.append("                                 THEN 'N'" ).append("\n"); 
		query.append("                            END) NO_AGMT_FLG" ).append("\n"); 
		query.append("                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    " ).append("\n"); 
		query.append("                                                                                                           ,S.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                           ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                           )    " ).append("\n"); 
		query.append("                                 ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                            END)" ).append("\n"); 
		query.append("                            - (S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(S.SCG_VAT_AMT,0) + NVL(S.TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0)) AS INV_DIFF_AMT" ).append("\n"); 
		query.append("                          ,CASE WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD        " ).append("\n"); 
		query.append("                                                        FROM MDM_ORGANIZATION X        " ).append("\n"); 
		query.append("                                                       WHERE X.DELT_FLG = 'N'        " ).append("\n"); 
		query.append("                                                     CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD        " ).append("\n"); 
		query.append("                                                       START WITH X.OFC_CD IN ('HAMRU', 'SHARC', 'SINRS'))        " ).append("\n"); 
		query.append("                                     AND S.TRSP_SO_TP_CD = 'Y'        " ).append("\n"); 
		query.append("                                     AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')        " ).append("\n"); 
		query.append("                                     AND S.TRSP_BND_CD IN ('I','O')        " ).append("\n"); 
		query.append("                                     AND S.SO_DSCR_RSN_CD <> 'M'        " ).append("\n"); 
		query.append("                                THEN 'N'        " ).append("\n"); 
		query.append("                                WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD        " ).append("\n"); 
		query.append("                                                        FROM MDM_ORGANIZATION X        " ).append("\n"); 
		query.append("                                                       WHERE X.DELT_FLG = 'N'        " ).append("\n"); 
		query.append("                                                     CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD        " ).append("\n"); 
		query.append("                                                       START WITH X.OFC_CD IN ('NYCRAG', 'NYCNOG', 'NYCRAO', 'NYCRAX', 'NYCNKG', 'SAOLA'))        " ).append("\n"); 
		query.append("                                     AND (SELECT X.SO_DSCR_RSN_CD FROM TRS_TRSP_OPTM_USA_ROUT X WHERE X.BKG_NO = S.BKG_NO AND ROWNUM = 1) <> 'M'        " ).append("\n"); 
		query.append("                                     AND S.TRSP_SO_TP_CD = 'Y'        " ).append("\n"); 
		query.append("                                     AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')        " ).append("\n"); 
		query.append("                                     AND S.TRSP_BND_CD IN ('I','O')        " ).append("\n"); 
		query.append("                                     AND TRSP_CRR_MOD_CD NOT IN ('WD')        " ).append("\n"); 
		query.append("                                THEN 'N'        " ).append("\n"); 
		query.append("                           END NO_OPTM_ROUT_FLG        " ).append("\n"); 
		query.append("                          ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio        " ).append("\n"); 
		query.append("                                  FROM EAS_TRSP_AUTO_AUD_CRTE X        " ).append("\n"); 
		query.append("                                 WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD         " ).append("\n"); 
		query.append("                                   AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                                   AND X.CGO_TP_CD        = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                                   AND X.EXPN_AUD_TGT_FLG = 'Y'        " ).append("\n"); 
		query.append("                                   AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO        " ).append("\n"); 
		query.append("                                                                        FROM EAS_TRSP_AUTO_AUD_CRTE X        " ).append("\n"); 
		query.append("                                                                       WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)        " ).append("\n"); 
		query.append("                                                                         AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                                                                         AND X.CGO_TP_CD        = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                                                                         AND X.EXPN_AUD_TGT_FLG = 'Y'        " ).append("\n"); 
		query.append("                                                                         AND X.EXPN_AUD_CRTE_TP_CD = 'D')        " ).append("\n"); 
		query.append("                           ) AS INV_DIFF_RTO        " ).append("\n"); 
		query.append("                          ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- Exceed Average Ratio        " ).append("\n"); 
		query.append("                                  FROM EAS_TRSP_AUTO_AUD_CRTE X        " ).append("\n"); 
		query.append("                                 WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD         " ).append("\n"); 
		query.append("                                   AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                                   AND X.CGO_TP_CD        = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                                   AND X.EXPN_AUD_TGT_FLG = 'Y'        " ).append("\n"); 
		query.append("                                   AND X.EXPN_AUD_CRTE_TP_CD = 'A'), (SELECT X.EXPN_MAX_PRMT_RTO        " ).append("\n"); 
		query.append("                                                                        FROM EAS_TRSP_AUTO_AUD_CRTE X        " ).append("\n"); 
		query.append("                                                                       WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)        " ).append("\n"); 
		query.append("                                                                         AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                                                                         AND X.CGO_TP_CD        = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                                                                         AND X.EXPN_AUD_TGT_FLG = 'Y'        " ).append("\n"); 
		query.append("                                                                         AND X.EXPN_AUD_CRTE_TP_CD = 'A')        " ).append("\n"); 
		query.append("                           ) AS EXCEED_AVG_RTO        " ).append("\n"); 
		query.append("                          ,(SELECT (CASE WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))        " ).append("\n"); 
		query.append("                                         THEN WO_20FT_DRY_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))        " ).append("\n"); 
		query.append("                                         THEN WO_40FT_DRY_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('6', '7') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))        " ).append("\n"); 
		query.append("                                         THEN WO_45FT_DRY_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'        " ).append("\n"); 
		query.append("                                         THEN WO_20FT_RF_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'        " ).append("\n"); 
		query.append("                                         THEN WO_40FT_RF_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'        " ).append("\n"); 
		query.append("                                         THEN WO_20FT_DG_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'        " ).append("\n"); 
		query.append("                                         THEN WO_40FT_DG_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'        " ).append("\n"); 
		query.append("                                         THEN WO_20FT_AWK_AVG_AMT        " ).append("\n"); 
		query.append("                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'        " ).append("\n"); 
		query.append("                                         THEN WO_40FT_AWK_AVG_AMT        " ).append("\n"); 
		query.append("                                    END)||','|| X.WO_CURR_CD        " ).append("\n"); 
		query.append("                              FROM EAS_EXPN_AUD_CS_INLND_COST X        " ).append("\n"); 
		query.append("                             WHERE X.INLND_COST_YRMON = TO_CHAR(ADD_MONTHS(W.LOCL_CRE_DT,-1), 'YYYYMM')    " ).append("\n"); 
		query.append("                               AND X.WO_OFC_CD        = W.CRE_OFC_CD        " ).append("\n"); 
		query.append("                               AND X.TRSP_SO_TP_CD    = S.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                               AND TRSP_COST_DTL_MOD_CD = S.TRSP_COST_DTL_MOD_CD        " ).append("\n"); 
		query.append("                               AND X.TRSP_CRR_MOD_CD    = S.TRSP_CRR_MOD_CD         " ).append("\n"); 
		query.append("                               AND X.CGO_TP_CD          = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                               AND X.FM_NOD_CD          = S.FM_NOD_CD        " ).append("\n"); 
		query.append("                               AND NVL(X.VIA_NOD_CD,'X')= NVL(S.VIA_NOD_CD,'X')        " ).append("\n"); 
		query.append("                               AND X.TO_NOD_CD          = S.TO_NOD_CD        " ).append("\n"); 
		query.append("                               AND NVL(X.DOR_NOD_CD,'X')= NVL(S.DOR_NOD_CD,'X')        " ).append("\n"); 
		query.append("                               AND NVL(X.TRSP_BND_CD,'X')= NVL(S.TRSP_BND_CD,'X')        " ).append("\n"); 
		query.append("                               AND ROWNUM = 1        " ).append("\n"); 
		query.append("                           ) AVG_3MON_RT_INFO        " ).append("\n"); 
		query.append("                          ,W.LOCL_CRE_DT AS WO_ISS_DT        " ).append("\n"); 
		query.append("                          ,S.CGO_TP_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_COST_DTL_MOD_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_SO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_SO_SEQ        " ).append("\n"); 
		query.append("                          ,S.TRSP_WO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_WO_SEQ        " ).append("\n"); 
		query.append("                          ,S.BKG_RCVDE_TERM_CD        " ).append("\n"); 
		query.append("                          ,S.EQ_NO        " ).append("\n"); 
		query.append("                          ,S.EQ_TPSZ_CD        " ).append("\n"); 
		query.append("                          ,S.BKG_NO        " ).append("\n"); 
		query.append("                          ,S.TRSP_BND_CD        " ).append("\n"); 
		query.append("                          ,TO_CHAR(I.INV_CFM_DT, 'YYYYMMDD') INV_CFM_DT        " ).append("\n"); 
		query.append("                          ,S.FM_NOD_CD        " ).append("\n"); 
		query.append("                          ,S.TO_NOD_CD        " ).append("\n"); 
		query.append("                          ,S.VIA_NOD_CD        " ).append("\n"); 
		query.append("                          ,S.DOR_NOD_CD" ).append("\n"); 
		query.append("                          ,S.NEGO_AMT" ).append("\n"); 
		query.append("                          ,S.NEGO_RMK" ).append("\n"); 
		query.append("                          ,(SELECT CASE WHEN MIN(X.LGS_COST_CD) <> MAX(X.LGS_COST_CD) THEN 'Multi-Reason'||','||SUM(X.SCG_AMT)" ).append("\n"); 
		query.append("                                         ELSE MAX(Y.LGS_COST_FULL_NM||','||X.SCG_AMT||','||OTR_RMK)" ).append("\n"); 
		query.append("                                   END XXX" ).append("\n"); 
		query.append("                              FROM TRS_TRSP_SCG_DTL X" ).append("\n"); 
		query.append("                                  ,TES_LGS_COST     Y" ).append("\n"); 
		query.append("                             WHERE X.LGS_COST_CD = Y.LGS_COST_CD" ).append("\n"); 
		query.append("                               AND X.TRSP_SO_OFC_CTY_CD = S.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("                               AND X.TRSP_SO_SEQ = S.TRSP_SO_SEQ" ).append("\n"); 
		query.append("                               AND (Y.LGS_COST_CD NOT IN ('SCHLOP', 'SCHLCF') AND SUBSTR(Y.LGS_COST_CD, 3,2) <> 'FU')" ).append("\n"); 
		query.append("                               AND X.SCG_AMT > 0" ).append("\n"); 
		query.append("                            ) SCG_INFO" ).append("\n"); 
		query.append("                          ,(SELECT CASE WHEN MIN(X.LGS_COST_CD) <> MAX(X.LGS_COST_CD) THEN 'Multi-Reason'||','||SUM(X.INV_SCG_AMT)" ).append("\n"); 
		query.append("                                         ELSE MAX(Y.LGS_COST_FULL_NM||','||X.INV_SCG_AMT||','||INV_OTR_RMK)" ).append("\n"); 
		query.append("                                   END XXX" ).append("\n"); 
		query.append("                              FROM TRS_TRSP_SCG_DTL X" ).append("\n"); 
		query.append("                                  ,TES_LGS_COST     Y" ).append("\n"); 
		query.append("                             WHERE X.LGS_COST_CD = Y.LGS_COST_CD" ).append("\n"); 
		query.append("                               AND X.TRSP_SO_OFC_CTY_CD = S.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("                               AND X.TRSP_SO_SEQ = S.TRSP_SO_SEQ" ).append("\n"); 
		query.append("                               AND (Y.LGS_COST_CD NOT IN ('SCHLOP', 'SCHLCF') AND SUBSTR(Y.LGS_COST_CD, 3,2) <> 'FU')" ).append("\n"); 
		query.append("                               AND X.INV_SCG_AMT > 0" ).append("\n"); 
		query.append("                            ) INV_SCG_INFO" ).append("\n"); 
		query.append("                          ,S.LOCL_CRE_DT" ).append("\n"); 
		query.append("                      FROM TRS_TRSP_INV_WRK I        " ).append("\n"); 
		query.append("                          ,TRS_TRSP_SVC_ORD S        " ).append("\n"); 
		query.append("                          ,TRS_TRSP_WRK_ORD W        " ).append("\n"); 
		query.append("                          ,TRS_TRSP_HJL_SVC_ORD L        " ).append("\n"); 
		query.append("                          ,AP_INV_HDR A        " ).append("\n"); 
		query.append("                     WHERE I.INV_NO       = S.INV_NO        " ).append("\n"); 
		query.append("                       AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                       AND S.TRSP_WO_OFC_CTY_CD = W.TRSP_WO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                       AND S.TRSP_WO_SEQ        = W.TRSP_WO_SEQ        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_OFC_CTY_CD = L.TRSP_SO_OFC_CTY_CD(+)        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_SEQ        = L.TRSP_SO_SEQ(+)        " ).append("\n"); 
		query.append("                       AND I.CSR_NO             = A.CSR_NO(+)        " ).append("\n"); 
		query.append("                       AND S.DELT_FLG = 'N'        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_STS_CD = 'I'        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_TP_CD IN ('Y', 'M')        " ).append("\n"); 
		query.append("                               " ).append("\n"); 
		query.append("                       -- Service Order Type으로 조회        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_TP_CD = @[s_trsp_so_tp_cd]" ).append("\n"); 
		query.append("                               " ).append("\n"); 
		query.append("                       AND I.INV_VNDR_SEQ = @[s_inv_vndr_seq]" ).append("\n"); 
		query.append("                       AND I.INV_NO = @[s_inv_no]" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                       -- Cost Mode로 조회        " ).append("\n"); 
		query.append("                       #if(${s_trsp_cost_dtl_mod_cd} != '')" ).append("\n"); 
		query.append("                       AND EXISTS (SELECT 1        " ).append("\n"); 
		query.append("                                     FROM TRS_TRSP_SVC_ORD X        " ).append("\n"); 
		query.append("                                    WHERE X.INV_NO       = S.INV_NO        " ).append("\n"); 
		query.append("                                      AND X.INV_VNDR_SEQ = S.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                      AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                                      AND X.TRSP_COST_DTL_MOD_CD = @[s_trsp_cost_dtl_mod_cd]" ).append("\n"); 
		query.append("                                  )        " ).append("\n"); 
		query.append("                       #end" ).append("\n"); 
		query.append("                       -- Trans Mode로 조회        " ).append("\n"); 
		query.append("                       #if(${s_trsp_crr_mod_cd} != '')" ).append("\n"); 
		query.append("                       AND EXISTS (SELECT 1        " ).append("\n"); 
		query.append("                                     FROM TRS_TRSP_SVC_ORD X        " ).append("\n"); 
		query.append("                                    WHERE X.INV_NO       = S.INV_NO        " ).append("\n"); 
		query.append("                                      AND X.INV_VNDR_SEQ = S.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                      AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                                      AND X.TRSP_CRR_MOD_CD = @[s_trsp_crr_mod_cd]" ).append("\n"); 
		query.append("                                  )" ).append("\n"); 
		query.append("                       #end        " ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("                   ) AA        " ).append("\n"); 
		query.append("                  ,EAS_TRSP_AUD BB        " ).append("\n"); 
		query.append("             WHERE 1=1        " ).append("\n"); 
		query.append("               AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)        " ).append("\n"); 
		query.append("               AND AA.INV_NO        = BB.INV_NO(+)        " ).append("\n"); 
		query.append("               AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)        " ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("            -- Rail" ).append("\n"); 
		query.append("            UNION ALL" ).append("\n"); 
		query.append("            SELECT AA.RHQ_OFC_CD        " ).append("\n"); 
		query.append("                  ,AA.WO_OFC_CD        " ).append("\n"); 
		query.append("                  ,AA.INV_OFC_CD        " ).append("\n"); 
		query.append("                  ,AA.BKG_NO        " ).append("\n"); 
		query.append("                  ,AA.EQ_NO        " ).append("\n"); 
		query.append("                  ,AA.EQ_TPSZ_CD        " ).append("\n"); 
		query.append("                  ,NULL AS WO_NO        " ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_OFC_CTY_CD || AA.TRSP_SO_SEQ AS SO_NO        " ).append("\n"); 
		query.append("                  ,AA.BKG_RCVDE_TERM_CD        " ).append("\n"); 
		query.append("                  ,AA.CURR_CD        " ).append("\n"); 
		query.append("                  ,AA.WO_AMT        " ).append("\n"); 
		query.append("                  ,AA.INV_AMT        " ).append("\n"); 
		query.append("                  ,AA.CURR_CNG_FLG        " ).append("\n"); 
		query.append("                  ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'" ).append("\n"); 
		query.append("                         WHEN AA.INV_DIFF_AMT < -1 THEN 'F'" ).append("\n"); 
		query.append("                         WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' " ).append("\n"); 
		query.append("                     END) INV_DIFF_AMT_FLG        " ).append("\n"); 
		query.append("                  ,AA.INV_DIFF_AMT        " ).append("\n"); 
		query.append("                  ,AA.NO_AGMT_FLG        " ).append("\n"); 
		query.append("                  ,AA.NO_OPTM_ROUT_FLG        " ).append("\n"); 
		query.append("                  ,'N' EXCEED_AVG_FLG        " ).append("\n"); 
		query.append("                  ,0 EXCEED_AVG_DIFF_AMT" ).append("\n"); 
		query.append("                  ,CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'" ).append("\n"); 
		query.append("                        WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'" ).append("\n"); 
		query.append("                                                                                                                                 ELSE 'F'" ).append("\n"); 
		query.append("                                                                                                                            END" ).append("\n"); 
		query.append("                        WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'" ).append("\n"); 
		query.append("                        WHEN AA.INV_DIFF_RTO IS NULL THEN 'T'" ).append("\n"); 
		query.append("                   END AUTO_AUD_STS_CD" ).append("\n"); 
		query.append("                  ,(SELECT 'Y'        " ).append("\n"); 
		query.append("                     FROM EAS_TRSP_AUD_CHK X        " ).append("\n"); 
		query.append("                    WHERE X.INV_NO        = AA.INV_NO        " ).append("\n"); 
		query.append("                      AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                      AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                      AND X.TRSP_SO_OFC_CTY_CD = AA.TRSP_SO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                      AND X.TRSP_SO_SEQ = AA.TRSP_SO_SEQ        " ).append("\n"); 
		query.append("                   ) EAC_IF_FLG    " ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                  ,AA.INV_VNDR_SEQ           " ).append("\n"); 
		query.append("                  ,AA.INV_NO        " ).append("\n"); 
		query.append("                  ,AA.CGO_TP_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_COST_DTL_MOD_CD        " ).append("\n"); 
		query.append("                  ,AA.TRSP_BND_CD        " ).append("\n"); 
		query.append("                  ,AA.INV_CFM_DT        " ).append("\n"); 
		query.append("                  ,AA.WO_ISS_DT        " ).append("\n"); 
		query.append("                  ,AA.FM_NOD_CD        " ).append("\n"); 
		query.append("                  ,AA.TO_NOD_CD        " ).append("\n"); 
		query.append("                  ,AA.VIA_NOD_CD        " ).append("\n"); 
		query.append("                  ,AA.DOR_NOD_CD         " ).append("\n"); 
		query.append("                  ,DECODE(BB.EXPN_AUD_STS_CD, NULL, NULL, 'Y') AUD_STS_FLG -- 심사내역이 있을 경우만 EAC I/F가 가능하다." ).append("\n"); 
		query.append("                  ,AA.INV_DIFF_RTO" ).append("\n"); 
		query.append("                  ,0 EXCEED_AVG_RTO" ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_OFC_CTY_CD" ).append("\n"); 
		query.append("                  ,AA.TRSP_SO_SEQ" ).append("\n"); 
		query.append("                  ,NULL NEGO_AMT" ).append("\n"); 
		query.append("                  ,NULL NEGO_RMK" ).append("\n"); 
		query.append("                  ,NULL ETC_SCG_NM" ).append("\n"); 
		query.append("                  ,NULL ETC_SCG_AMT" ).append("\n"); 
		query.append("                  ,NULL OTR_RMK" ).append("\n"); 
		query.append("                  ,NULL INV_ETC_SCG_NM" ).append("\n"); 
		query.append("                  ,NULL INV_ETC_SCG_AMT" ).append("\n"); 
		query.append("                  ,NULL INV_OTR_RMK" ).append("\n"); 
		query.append("                  ,AA.LOCL_CRE_DT" ).append("\n"); 
		query.append("              FROM (        " ).append("\n"); 
		query.append("                    SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */        " ).append("\n"); 
		query.append("                           (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD        " ).append("\n"); 
		query.append("                          ,I.CRE_OFC_CD AS INV_OFC_CD        " ).append("\n"); 
		query.append("                          ,DECODE(W.CRE_OFC_CD, 'SYSTEM', S.TRSP_SO_OFC_CTY_CD, W.CRE_OFC_CD) AS WO_OFC_CD        " ).append("\n"); 
		query.append("                          ,'R' AS TRSP_SO_TP_CD        " ).append("\n"); 
		query.append("                          ,I.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                          ,I.INV_NO        " ).append("\n"); 
		query.append("                          ,I.CSR_NO        " ).append("\n"); 
		query.append("                          ,S.CURR_CD        " ).append("\n"); 
		query.append("                          ,S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) AS WO_AMT        " ).append("\n"); 
		query.append("                          ,S.INV_CURR_CD" ).append("\n"); 
		query.append("                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD        " ).append("\n"); 
		query.append("                                                                                                           ,S.CURR_CD        " ).append("\n"); 
		query.append("                                                                                                           ,S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                                                                                           + NVL(S.INV_ETC_ADD_AMT,0)        " ).append("\n"); 
		query.append("                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')        " ).append("\n"); 
		query.append("                                                                                                           )        " ).append("\n"); 
		query.append("                                 ELSE S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                 + NVL(S.INV_ETC_ADD_AMT,0)        " ).append("\n"); 
		query.append("                            END) AS INV_AMT        " ).append("\n"); 
		query.append("                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG        " ).append("\n"); 
		query.append("                          ,(SELECT X.USR_NM FROM COM_USER X WHERE X.USR_ID = I.CRE_USR_ID) INV_ISS_USR_NM        " ).append("\n"); 
		query.append("                          ,(SELECT CASE WHEN X.GEN_PAY_TERM_CD = 'O60' THEN '0'        " ).append("\n"); 
		query.append("                                        ELSE X.GEN_PAY_TERM_CD        " ).append("\n"); 
		query.append("                                   END PAY_TERM_CD        " ).append("\n"); 
		query.append("                              FROM MDM_VENDOR X        " ).append("\n"); 
		query.append("                             WHERE X.VNDR_SEQ = I.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                           ) PAY_TERM_CD        " ).append("\n"); 
		query.append("                          ,TO_CHAR(I.PAY_DT, 'YYYY-MM-DD') PAY_DT        " ).append("\n"); 
		query.append("                          ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') INV_TERM_DT" ).append("\n"); 
		query.append("                          ,NULL NO_AGMT_FLG" ).append("\n"); 
		query.append("                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    " ).append("\n"); 
		query.append("                                                                                                           ,S.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                           ,S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                                                                                           + NVL(S.INV_ETC_ADD_AMT,0)" ).append("\n"); 
		query.append("                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                           )    " ).append("\n"); 
		query.append("                                 ELSE S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                 + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                            END)" ).append("\n"); 
		query.append("                            - (S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0)) AS INV_DIFF_AMT    " ).append("\n"); 
		query.append("                          ,NULL NO_OPTM_ROUT_FLG        " ).append("\n"); 
		query.append("                          ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio        " ).append("\n"); 
		query.append("                                  FROM EAS_TRSP_AUTO_AUD_CRTE X        " ).append("\n"); 
		query.append("                                 WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD         " ).append("\n"); 
		query.append("                                   AND X.TRSP_CRR_MOD_CD  = 'RD'        " ).append("\n"); 
		query.append("                                   AND X.CGO_TP_CD        = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                                   AND X.EXPN_AUD_TGT_FLG = 'Y'        " ).append("\n"); 
		query.append("                                   AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO        " ).append("\n"); 
		query.append("                                                                        FROM EAS_TRSP_AUTO_AUD_CRTE X        " ).append("\n"); 
		query.append("                                                                       WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)        " ).append("\n"); 
		query.append("                                                                         AND X.TRSP_CRR_MOD_CD  = 'RD'        " ).append("\n"); 
		query.append("                                                                         AND X.CGO_TP_CD        = S.CGO_TP_CD        " ).append("\n"); 
		query.append("                                                                         AND X.EXPN_AUD_TGT_FLG = 'Y'        " ).append("\n"); 
		query.append("                                                                         AND X.EXPN_AUD_CRTE_TP_CD = 'D')        " ).append("\n"); 
		query.append("                           ) AS INV_DIFF_RTO        " ).append("\n"); 
		query.append("                          ,W.LOCL_CRE_DT AS WO_ISS_DT        " ).append("\n"); 
		query.append("                          ,S.CGO_TP_CD        " ).append("\n"); 
		query.append("                          ,'RD' TRSP_CRR_MOD_CD        " ).append("\n"); 
		query.append("                          ,W.TRSP_COST_DTL_MOD_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_SO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                          ,S.TRSP_SO_SEQ        " ).append("\n"); 
		query.append("                          ,W.BKG_RCVDE_TERM_CD        " ).append("\n"); 
		query.append("                          ,W.EQ_NO        " ).append("\n"); 
		query.append("                          ,W.EQ_TPSZ_CD        " ).append("\n"); 
		query.append("                          ,W.BKG_NO        " ).append("\n"); 
		query.append("                          ,W.TRSP_BND_CD        " ).append("\n"); 
		query.append("                          ,TO_CHAR(I.INV_CFM_DT, 'YYYYMMDD') INV_CFM_DT        " ).append("\n"); 
		query.append("                          ,W.FM_NOD_CD        " ).append("\n"); 
		query.append("                          ,W.TO_NOD_CD        " ).append("\n"); 
		query.append("                          ,NULL VIA_NOD_CD        " ).append("\n"); 
		query.append("                          ,NULL DOR_NOD_CD    " ).append("\n"); 
		query.append("                          ,W.LOCL_CRE_DT    " ).append("\n"); 
		query.append("                      FROM TRS_TRSP_RAIL_INV_WRK I        " ).append("\n"); 
		query.append("                          ,TRS_TRSP_RAIL_INV_DTL S        " ).append("\n"); 
		query.append("                          ,TRS_TRSP_RAIL_BIL_ORD W        " ).append("\n"); 
		query.append("                          ,AP_INV_HDR            A        " ).append("\n"); 
		query.append("                     WHERE I.INV_NO       = S.INV_NO        " ).append("\n"); 
		query.append("                       AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_OFC_CTY_CD = W.TRSP_SO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                       AND S.TRSP_SO_SEQ        = W.TRSP_SO_SEQ        " ).append("\n"); 
		query.append("                       AND I.CSR_NO             = A.CSR_NO(+)        " ).append("\n"); 
		query.append("                               " ).append("\n"); 
		query.append("                       -- Service Order Type으로 조회 (ALL 또는 R일 경우만 조회된다.)" ).append("\n"); 
		query.append("                       #if(${s_trsp_so_tp_cd} == 'R'|| ${s_trsp_crr_mod_cd} == '')        " ).append("\n"); 
		query.append("                       AND 1=1        " ).append("\n"); 
		query.append("                       #else         " ).append("\n"); 
		query.append("                       AND 1=2        " ).append("\n"); 
		query.append("                       #end        " ).append("\n"); 
		query.append("                               " ).append("\n"); 
		query.append("                       -- S/P Code로 조회        " ).append("\n"); 
		query.append("                       AND I.INV_VNDR_SEQ = @[s_inv_vndr_seq]" ).append("\n"); 
		query.append("                       -- Invoice No로 조회         " ).append("\n"); 
		query.append("                       AND I.INV_NO = @[s_inv_no]" ).append("\n"); 
		query.append("            " ).append("\n"); 
		query.append("                       -- Cost Mode로 조회" ).append("\n"); 
		query.append("                       #if(${s_trsp_cost_dtl_mod_cd} != '')        " ).append("\n"); 
		query.append("                         AND EXISTS (SELECT 1        " ).append("\n"); 
		query.append("                                       FROM TRS_TRSP_RAIL_INV_WRK X        " ).append("\n"); 
		query.append("                                           ,TRS_TRSP_RAIL_INV_DTL Y        " ).append("\n"); 
		query.append("                                           ,TRS_TRSP_RAIL_BIL_ORD Z        " ).append("\n"); 
		query.append("                                      WHERE X.INV_NO       = Y.INV_NO        " ).append("\n"); 
		query.append("                                        AND X.INV_VNDR_SEQ = Y.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                        AND Y.TRSP_SO_OFC_CTY_CD = Z.TRSP_SO_OFC_CTY_CD        " ).append("\n"); 
		query.append("                                        AND Y.TRSP_SO_SEQ        = Z.TRSP_SO_SEQ        " ).append("\n"); 
		query.append("                                        AND X.INV_NO       = I.INV_NO        " ).append("\n"); 
		query.append("                                        AND X.INV_VNDR_SEQ = I.INV_VNDR_SEQ        " ).append("\n"); 
		query.append("                                        AND Z.TRSP_COST_DTL_MOD_CD = @[s_trsp_cost_dtl_mod_cd]" ).append("\n"); 
		query.append("                                    )        " ).append("\n"); 
		query.append("                       #end" ).append("\n"); 
		query.append("                       -- Trans Mode로 조회 (ALL 또는 RD일 경우만 조회된다.)        " ).append("\n"); 
		query.append("                       #if(${s_trsp_crr_mod_cd} == 'RD' || ${s_trsp_crr_mod_cd} == '' )    " ).append("\n"); 
		query.append("                       AND 1=1        " ).append("\n"); 
		query.append("                       #else         " ).append("\n"); 
		query.append("                       AND 1=2        " ).append("\n"); 
		query.append("                       #end" ).append("\n"); 
		query.append("                   ) AA        " ).append("\n"); 
		query.append("                  ,EAS_TRSP_AUD BB        " ).append("\n"); 
		query.append("             WHERE 1=1        " ).append("\n"); 
		query.append("               AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)        " ).append("\n"); 
		query.append("               AND AA.INV_NO        = BB.INV_NO(+)        " ).append("\n"); 
		query.append("               AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)        " ).append("\n"); 
		query.append("    ) AAA        " ).append("\n"); 
		query.append("    WHERE 1=1        " ).append("\n"); 
		query.append("       -- Diffrence로 조회시    " ).append("\n"); 
		query.append("       #if(${s_aud_itm_cd} == 'DA')" ).append("\n"); 
		query.append("       AND AUTO_AUD_STS_CD = 'C'" ).append("\n"); 
		query.append("       #elseif(${s_aud_itm_cd} == 'DF')    " ).append("\n"); 
		query.append("       AND INV_DIFF_AMT_FLG = 'Y'    " ).append("\n"); 
		query.append("       #elseif(${s_aud_itm_cd} == 'NT')    " ).append("\n"); 
		query.append("       AND NO_AGMT_FLG = 'N'    " ).append("\n"); 
		query.append("       #elseif (${s_aud_itm_cd} == 'EX')    " ).append("\n"); 
		query.append("       AND EXCEED_AVG_FLG = 'Y'    " ).append("\n"); 
		query.append("       #elseif (${s_aud_itm_cd} == 'OT')    " ).append("\n"); 
		query.append("      AND NO_OPTM_ROUT_FLG = 'N'    " ).append("\n"); 
		query.append("      #end    " ).append("\n"); 
		query.append("    ORDER BY BKG_NO, EQ_NO" ).append("\n"); 

	}
}