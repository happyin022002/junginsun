<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccrualBatchExecuteResultDBDAOSearchAccrualBatchResultInvoiceInquiryRSQL">
			<desc><![CDATA[   ]]></desc>
			<sql><![CDATA[
SELECT	M.EXE_YRMON EXE_YRMON , NVL(M.REV_YRMON, ' ') REV_YRMON, B.RHQ_CD RHQ_CD ,
		--f_report = '1'(RHQ)&& vendor = '0'

		--f_report = '1'(RHQ)&& vendor = '1'
		#if (${f_report} == '1' && ${f_vndr} == '1' )
		M.INV_VNDR_SEQ  VNDR_SEQ , V.VNDR_LGL_ENG_NM  VNDR_LGL_ENG_NM ,
		#end

		--f_report = '2'(Control Office) && vendor = '0'
		#if (${f_report} == '2' && ${f_vndr} != '1')
		B.OFC_CD CTRL_OFC_CD,
		M.CTRL_OFC_CD SUB_OFC_CD ,
		#end

        --f_report = '2'(Control Office)&& vendor = '1'
		#if (${f_report} == '2' && ${f_vndr} == '1' )
		B.OFC_CD CTRL_OFC_CD,
		M.CTRL_OFC_CD SUB_OFC_CD ,
		M.INV_VNDR_SEQ  VNDR_SEQ , V.VNDR_LGL_ENG_NM  VNDR_LGL_ENG_NM ,
		#end

		C.COST_MN_TP  MN_COST_TP_NM , C.SUB_COST_TP_NM  SUB_COST_TP_NM ,
		M.COA_COST_SRC_CD COA_COST_SRC_CD , M.ACCT_CD ACCT_CD,
		M.N1ST_NOD_CD N1ST_NOD_CD , M.N2ND_NOD_CD N2ND_NOD_CD, NVL(M.N3RD_NOD_CD, '')  N3RD_NOD_CD , NVL(M.N4TH_NOD_CD ,'')  N4TH_NOD_CD ,
		M.LOCL_CURR_CD CURR_CD, SUM(M.LOCL_COST_AMT) LOCL_COST_AMT ,
		CASE	WHEN M.REV_YRMON IS NULL THEN
					ROUND(SUM(M.LOCL_COST_AMT / U.USD_LOCL_XCH_RT), 20)
				ELSE
					SUM(M.USD_COST_AMT)
		END USD_COST_AMT
FROM	LEA_ACT_COST_IF M
	,
		(SELECT 	VNDR_SEQ
				, 	SUBSTR(VNDR_LGL_ENG_NM , 1, 50) VNDR_LGL_ENG_NM
		 FROM		MDM_VENDOR
		 WHERE 		DELT_FLG 			= 'N'
		) v
	,
		(SELECT		CURR_CD
				, 	USD_LOCL_XCH_RT
		 FROM		GL_MON_XCH_RT
		 WHERE		ACCT_XCH_RT_YRMON 	= REPLACE(@[frm_exe_yrmon_to],'-')
		 AND		ACCT_XCH_RT_LVL 	= '3'
		 AND 		DELT_FLG 			= 'N'
		) U
	,
		(SELECT		DECODE(Y.MN_COST_TP_CD, 'TM', 'Terminal', 'TR', 'Transport', 'MT', 'Mty Reposition ', 'CH', 'Chassis ', 'ETC' ) COST_MN_TP
				,	Y.MN_COST_TP_CD
				,	X.SUB_COST_TP_CD
				, 	Y.SUB_COST_TP_NM
				, 	X.COA_COST_SRC_CD
				, 	X.ACCT_CD
				,  	X.ACCL_AUTO_CD
		FROM	(	SELECT		DISTINCT
								SUB_COST_TP_CD SUB_COST_TP_CD
							, 	COA_COST_SRC_CD
							, 	ACCT_CD ACCT_CD
							, 	ACCL_AUTO_CD
					FROM		LEA_LGS_COST
					WHERE		DELT_FLG 	= 'N'

			        UNION

		            SELECT  DISTINCT
            		        LL.SUB_COST_TP_CD
		                ,   LL.COA_COST_SRC_CD
		                ,   LL.OTR_CRR_ACCT_CD
		                ,   LL.OTR_CRR_ACCL_AUTO_CD
		            FROM    LEA_LGS_COST   LL
		            WHERE   LL.DELT_FLG    = 'N'
		            AND     LL.OTR_CRR_ACCT_CD  IS NOT NULL

				)	X
			,		LEA_SUB_COST_TP Y
		WHERE   X.SUB_COST_TP_CD 		= Y.SUB_COST_TP_CD
		AND		Y.DELT_FLG = 'N'
		) C
	,
		(
	     /* ::JSK::
		 SELECT SUB_OFC_CD, OFC_CD, RHQ_CD
		 FROM	(	SELECT		DISTINCT
								OFC_CD SUB_OFC_CD
							, 	OFC_N5TH_LVL_CD OFC_CD
							, 	OFC_N3RD_LVL_CD RHQ_CD
					FROM		COA_OFC_LVL
                    WHERE  		1 = 1
				    --::JSK::--AND			REPLACE([frm_exe_yrmon_to], '-')  BETWEEN OFC_APLY_FM_YRMON AND OFC_APLY_TO_YRMON           --월별관리--
 				    AND OFC_CD NOT IN ('SELTBB','SELOPE') --('SELTOB', 'SELCOE')
                    UNION ALL
                    SELECT   'SELTBB' , 'SELSC', 'SHARC' FROM DUAL --'SELTOB' , 'SELBB', 'SHAAS' 
                    UNION ALL
                    SELECT  'SELOPE' , 'SELSC', 'SHARC' FROM DUAL   --'SELCOE' , 'SELBB', 'SHAAS'
		*/

			SELECT 	YY.RHQ_CD
				,	YY.OFC_CD
				,	YY.SUB_OFC_CD
				----::JSK::--,   OFC_APLY_FM_YRMON
				----::JSK::--,   OFC_APLY_TO_YRMON
		 	FROM	(
					------------------------------------------------------------------------------------------------------------------------
        			SELECT     	DISTINCT
                   				CASE WHEN XX.OFC_CD IN ('SELTBB','SELOPE') THEN 'SHARC' --('SELTOB','SELCOE') THEN 'SHAAS'
                        			 ELSE XX.OFC_N3RD_LVL_CD
                   				END							AS RHQ_CD
               				,   CASE WHEN XX.OFC_CD IN ('SELTBB','SELOPE') THEN 'SELSC' --('SELTOB','SELCOE') THEN 'SELBB'
                        			 ELSE XX.OFC_N5TH_LVL_CD
                   				END  						AS OFC_CD
               				,   XX.OFC_CD            		AS SUB_OFC_CD
        			FROM       	(
                           SELECT     *
                           FROM       (
                                      SELECT          L.OFC_N3RD_LVL_CD
                                                 ,    L.OFC_N5TH_LVL_CD
                                                 ,    L.OFC_CD
                                                 ,    L.OFC_APLY_TO_YRMON
                                                 ,    L.OFC_APLY_FM_YRMON
                                                 ,    ROW_NUMBER() OVER (PARTITION BY L.OFC_CD ORDER BY L.OFC_APLY_TO_YRMON DESC)  OFC_ORDER
                                       FROM           COA_OFC_LVL            L
                                       WHERE          L.OFC_N3RD_LVL_CD      IS NOT NULL
                                       AND            L.OFC_N5TH_LVL_CD      IS NOT NULL
                                       ) X
                            WHERE      X.OFC_ORDER    = 1
                          ) XX
					------------------------------------------------------------------------------------------------------------------------
					) YY
			WHERE	YY.RHQ_CD 			= @[f_rhq_cd]

			#if (${f_ctrl_ofc_cd} != '')
				AND   YY.OFC_CD   = @[f_ctrl_ofc_cd]
			#elseif(${f_report} == '2')
				AND   YY.OFC_CD   IN (
					  ------------------------------------------------------------------
					  SELECT     DISTINCT
								 LL.OFC_N5TH_LVL_CD
					  FROM       COA_OFC_LVL                LL
					  WHERE      1 = 1
					  AND        CASE (
									  SELECT  OFC_LVL
									  FROM    (
											  SELECT  L.OFC_LVL
											  FROM    COA_OFC_LVL       L
											  WHERE   L.OFC_N3RD_LVL_CD IS NOT NULL
											  AND     L.OFC_N5TH_LVL_CD IS NOT NULL
											  AND     L.OFC_CD          = @[bind_ofc_cd]    /* LOGIN-OFFICE CODE BINDING */
											  ORDER BY L.OFC_APLY_TO_YRMON  DESC
											  )
									   WHERE   ROWNUM  = 1
									  )
									   WHEN '1' THEN 'XXXXX'
									   WHEN '2' THEN LL.OFC_N3RD_LVL_CD
									   WHEN '3' THEN LL.OFC_N3RD_LVL_CD
									   WHEN '4' THEN LL.OFC_CD
									   WHEN '5' THEN LL.OFC_CD
									   WHEN '6' THEN LL.OFC_CD
									   WHEN '7' THEN LL.OFC_CD
									   WHEN '9' THEN 'XXXXX'
									   ELSE          'XXXXX'
								 END                        = @[bind_ofc_cd]    /* LOGIN-OFFICE CODE BINDING */
					  AND        LL.OFC_N5TH_LVL_CD         IS NOT NULL
					  ------------------------------------------------------------------
					 )
			#end


			#if (${f_sub_ofc_cd} != '')
				AND	  YY.SUB_OFC_CD = @[f_sub_ofc_cd]

			#elseif(${f_report} == '2' && '1'=='0')
				AND   YY.SUB_OFC_CD IN (
					  ------------------------------------------------------------------
					  SELECT     XX.SUB_OFC_CD
					  FROM       (
								 ----------------------------------------------------
								  SELECT     DISTINCT
											 LL.OFC_CD                  AS SUB_OFC_CD
								  FROM       COA_OFC_LVL                LL
								  WHERE      1 = 1
								  AND        CASE (
												  SELECT  OFC_LVL
												  FROM    (
														  SELECT  L.OFC_LVL
														  FROM    COA_OFC_LVL       L
														  WHERE   L.OFC_N3RD_LVL_CD IS NOT NULL
														  AND     L.OFC_N5TH_LVL_CD IS NOT NULL
														  AND     L.OFC_CD          = @[bind_sub_ofc_cd]     /* LOGIN-OFFICE CODE BINDING */
														  ORDER BY L.OFC_APLY_TO_YRMON  DESC
														  )
												   WHERE   ROWNUM  = 1
												  )
												   WHEN '1' THEN 'XXXXX'
												   WHEN '2' THEN 'XXXXX'
												   WHEN '3' THEN 'XXXXX'
												   WHEN '4' THEN LL.OFC_N5TH_LVL_CD
												   WHEN '5' THEN LL.OFC_N5TH_LVL_CD
												   WHEN '6' THEN LL.OFC_N5TH_LVL_CD
												   WHEN '7' THEN LL.OFC_N5TH_LVL_CD
												   WHEN '9' THEN 'XXXXX'
												   ELSE          'XXXXX'
											 END                        = @[bind_sub_ofc_cd]	/* LOGIN-OFFICE CODE BINDING */

										 OR  LL.OFC_CD                  = @[bind_sub_ofc_cd]	/* LOGIN-OFFICE CODE BINDING */
								 ----------------------------------------------------
								 ) XX
					  ------------------------------------------------------------------
					 )
			#end

			) B
WHERE		M.EXE_YRMON 			BETWEEN REPLACE(@[frm_exe_yrmon_from], '-') AND REPLACE(@[frm_exe_yrmon_to], '-')
AND			M.COA_COST_SRC_CD 		= C.COA_COST_SRC_CD
AND			M.ACCT_CD 				= C.ACCT_CD
AND			M.LOCL_CURR_CD 			= U.CURR_CD
AND			M.CTRL_OFC_CD 			= B.SUB_OFC_CD
AND 		M.INV_VNDR_SEQ 			= V.VNDR_SEQ        (+)

AND (1=2
#if (${f_cost_type_f} == '1')
    OR C.MN_COST_TP_CD      IN ('TR', 'TM')
#end
#if (${f_cost_type_m} == '1')
    OR C.MN_COST_TP_CD = 'MT'
#end
#if (${f_cost_type_c} == '1')
    OR C.MN_COST_TP_CD = 'CH'
#end
#if (${f_cost_type_fv} == '1')
    OR C.SUB_COST_TP_CD     IN ('TRDF','TMDF')
#end
#if (${f_cost_type_ev} == '1')
    OR C.SUB_COST_TP_CD     IN ('TRDM','TMDM')
#end
#if (${f_other_carrier_expense} == '1')
    OR M.OTR_CRR_FLG  = 'Y'
#end
)

GROUP BY	M.EXE_YRMON , M.REV_YRMON, B.RHQ_CD ,
			--f_report = '1'(RHQ)&& vendor = '0'

			--f_report = '1'(RHQ)&& vendor = '1'
			#if (${f_report} == '1' && ${f_vndr} == '1' )
			M.INV_VNDR_SEQ , V.VNDR_LGL_ENG_NM ,
			#end

			--f_report = '2'(Control Office) && vendor = '0'
			#if (${f_report} == '2' && ${f_vndr} != '1')
			B.OFC_CD,
			M.CTRL_OFC_CD ,
			#end

			--f_report = '2'(Control Office)&& vendor = '1'
			#if (${f_report} == '2' && ${f_vndr} == '1' )
			B.OFC_CD,
			M.CTRL_OFC_CD ,
			M.INV_VNDR_SEQ , V.VNDR_LGL_ENG_NM ,
			#end

			C.COST_MN_TP , C.SUB_COST_TP_NM , M.COA_COST_SRC_CD, M.ACCT_CD,
			M.N1ST_NOD_CD, M.N2ND_NOD_CD, NVL(M.N3RD_NOD_CD, '') , NVL(M.N4TH_NOD_CD ,'') ,
			M.LOCL_CURR_CD
ORDER BY	M.EXE_YRMON , M.REV_YRMON, B.RHQ_CD ,
			#if (${f_report} == '2')
			B.OFC_CD , M.CTRL_OFC_CD ,
			#end
			C.COST_MN_TP			]]></sql>
			<params>
				<param name="frm_exe_yrmon_to" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
				<param name="f_ctrl_ofc_cd" type="12" value="" out="N"/>
				<param name="bind_ofc_cd" type="12" value="" out="N"/>
				<param name="f_sub_ofc_cd" type="12" value="" out="N"/>
				<param name="bind_sub_ofc_cd" type="12" value="" out="N"/>
				<param name="frm_exe_yrmon_from" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
