<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MnrAdvanceAuditDBDAOauditMnrInvoiceRSQL">
			<desc><![CDATA[MNR INVOICE에 대한 EAS 심사 결과를 리턴함
INVOICE 단건에 대한 심사이므로 INVOICE에 속한 장비수대로 최대 3건의 데이터가 발생할수 있음
MNR REPAIR에서 DETAIL로 넘어오는 경우 AP(CSR)과 I/F가 되지 않았으므로
이 SQL을 변형하여 사용함
]]></desc>
			<sql><![CDATA[
SELECT A.AUTO_AUDIT
     , (SELECT INTG_CD_VAL_DP_DESC FROM COM_INTG_CD_DTL X WHERE INTG_CD_ID = 'CD03417' AND X.INTG_CD_VAL_CTNT = A.AUTO_AUDIT) AUTO_AUDIT_DESC
  FROM
  (
SELECT B.EXPN_AUD_STS_CD AUDIT_RESULT
     , TO_CHAR(UPD_DT, 'YYYY-MM-DD') CHEKED_DT
     , (SELECT USR_NM 
          FROM COM_USER F 
         WHERE B.UPD_USR_ID = F.USR_ID
       ) CHECKED_USER_NM
     -- S : Coincidence|F : Discrepancy|C : Candidate EAC|O : N/A
     , CASE WHEN A.WK_VRFY_YN = 'Y' THEN 'C'
            WHEN A.EST_VRFY_YN = 'Y' THEN 'C'
            WHEN A.EXPN_MAX_PRMT_RTO < A.WO_INV_RTO  THEN 'C'
            WHEN A.WO_INV_RTO <= -1 THEN 'F'
            WHEN A.EST_VRFY_DESC IS NOT NULL THEN 'F'
            WHEN A.WK_VRFY_DESC IS NOT NULL THEN 'F'
            WHEN ABS(A.WO_INV_RTO) < 1 THEN 'S' 
            WHEN A.EXPN_MAX_PRMT_RTO > A.WO_INV_RTO THEN 'F'
       ELSE 'C'       END AUTO_AUDIT
       -- ERROR CODE : N 이고 금액차가 -1 보다 작으면 POTENTIAL EAC
       -- ERROR CODE : N 이고 금액차가 +- 1 안이면 COINCIDENCE
       -- ERROR CODE : N 이고 설정 차이 비율보다 낮으면 COINCIDENCE
       -- P : Coincidence|A : Candidate EAC|E : Potential EAC
     , CASE WHEN A.WK_VRFY_YN = 'Y' THEN ''
            WHEN A.EST_VRFY_YN = 'Y' THEN ''
            WHEN A.EXPN_MAX_PRMT_RTO < A.WO_INV_RTO THEN ''
            WHEN A.WO_INV_RTO <= -1 AND B.EXPN_AUD_STS_CD IS NULL THEN 'E'
            WHEN A.EST_VRFY_DESC IS NOT NULL THEN 'E'
            WHEN A.WK_VRFY_DESC IS NOT NULL THEN 'E'
            WHEN ABS(A.WO_INV_RTO) < 1 AND B.EXPN_AUD_STS_CD IS NULL THEN 'P' 
            WHEN A.EXPN_MAX_PRMT_RTO > A.WO_INV_RTO AND B.EXPN_AUD_STS_CD IS NULL THEN 'E'
       ELSE ''
       END SELECT_FLG
       -- SELECT FLG와 SELECT_FLG_TEMP는 서로 같아야 함
     , CASE WHEN A.WK_VRFY_YN = 'Y' THEN ''
            WHEN A.EST_VRFY_YN = 'Y' THEN ''
            WHEN A.EXPN_MAX_PRMT_RTO < A.WO_INV_RTO THEN ''
            WHEN A.WO_INV_RTO <= -1 AND B.EXPN_AUD_STS_CD IS NULL THEN 'E'
            WHEN A.EST_VRFY_DESC IS NOT NULL THEN 'E'
            WHEN A.WK_VRFY_DESC IS NOT NULL THEN 'E'
            WHEN ABS(A.WO_INV_RTO) < 1 AND B.EXPN_AUD_STS_CD IS NULL THEN 'P' 
            WHEN A.EXPN_MAX_PRMT_RTO > A.WO_INV_RTO AND B.EXPN_AUD_STS_CD IS NULL THEN 'E'
       ELSE ''
       END SELECT_FLG_TEMP
       -- ERROR CODE : N 이고 금액차가 -1 보다 작으면 POTENTIAL EAC
       -- ERROR CODE : N 이고 금액차가 +- 1 안이면 COINCIDENCE
       -- ERROR CODE : N 이고 설정 차이 비율보다 낮으면 COINCIDENCE
     , CASE WHEN A.EST_VRFY_YN = 'Y' THEN '0'
            WHEN A.WK_VRFY_YN = 'Y' THEN '0'
            WHEN A.EXPN_MAX_PRMT_RTO < A.WO_INV_RTO THEN '0'
            WHEN A.WO_INV_RTO <= -1 AND B.EXPN_AUD_STS_CD IS NULL THEN '1'
            WHEN A.EST_VRFY_DESC IS NOT NULL THEN '1'
            WHEN A.WK_VRFY_DESC IS NOT NULL THEN '1'
            WHEN ABS(A.WO_INV_RTO) < 1 AND B.EXPN_AUD_STS_CD IS NULL THEN '1' 
            WHEN A.EXPN_MAX_PRMT_RTO > A.WO_INV_RTO AND B.EXPN_AUD_STS_CD IS NULL THEN '1'
       ELSE '0'
       END SEL
     , A.INV_NO
     , A.CSR_NO
     , A.EQ_KND_CD_NM
     , A.EQ_KND_CD
     , A.VNDR_SEQ
     , A.VNDR_NM
     , A.RHQ_INV_OFC_CD
     , A.INV_OFC_CD
     , A.WO_CURR_CD
     , A.MNR_AGMT_AMT
     , A.MNR_WRK_AMT
     , A.TTL_INV_AMT
     , A.SPR_PRT_UC_AMT
     , A.INV_CURR_CD
     , DECODE(A.REFL_EX_YN, 'Y', 'Y', '') REFL_EX_YN
     , A.BZC_AMT
     , A.COST_AMT
     , A.INV_AMT
     , A.INV_CHG_AMT
     , A.GEN_PAY_TERM_CD
     , A.ISS_DT
     , A.AP_PAY_DT
     , A.PAY_DUE_DT
     , A.CFM_DT
     , A.INV_RMK
     , A.INV_STS_CD
     , A.CHG_WO_AMT
     , ROUND((A.CHG_WO_AMT/(DECODE(A.COST_AMT, 0, 1, A.COST_AMT))) * 100, 3) INV_DIFF_PCT
     , DECODE(A.WK_VRFY_YN, 'Y', 'Y', '') WK_VRFY_YN
     , DECODE(A.EST_VRFY_YN, 'Y', 'Y', '') EST_VRFY_YN
     , A.WO_INV_RTO
     , A.EXPN_MAX_PRMT_RTO
     , A.INV_STS_NM
     , A.INV_STS_CD
     , A.INV_CRE_USER_NM
     , TO_CHAR(B.UPD_DT, 'YYYY-MM-DD') AUDIT_DT
     , (
       SELECT DECODE(MAX(CFM.EAC_NO), NULL, '', 'Y') 
         FROM EAS_MNR_CFM_INV_DTL CFM
        WHERE A.INV_NO = CFM.INV_NO
          AND A.VNDR_SEQ = CFM.VNDR_SEQ
          AND A.EQ_KND_CD = CFM.EQ_KND_CD
     ) EAC_YN
     , B.EXPN_AUD_RSLT_RMK
     , B.EXPN_AUD_RSLT_USR_ID
     , (SELECT U.USR_NM FROM COM_USER U WHERE U.USR_ID = B.EXPN_AUD_RSLT_USR_ID) EXPN_AUD_RSLT_USR_NM
     , A.EST_VRFY_DESC || DECODE(A.WK_VRFY_DESC, NULL, '', '@'||A.WK_VRFY_DESC) EST_VRFY_DESC
  FROM
  (    
    SELECT A.INV_NO
         , A.CSR_NO
         , A.EQ_KND_CD_NM
         , A.EQ_KND_CD
         , A.VNDR_SEQ
         , A.VNDR_NM
         , A.RHQ_INV_OFC_CD
         , A.INV_OFC_CD
         , A.WO_CURR_CD
         , A.MNR_AGMT_AMT
         , A.MNR_WRK_AMT
         , A.TTL_INV_AMT
         , A.SPR_PRT_UC_AMT
         , A.INV_CURR_CD
         , A.REFL_EX_YN
         , A.BZC_AMT
         , A.COST_AMT
         , A.INV_AMT
         , A.INV_CHG_AMT
         , A.GEN_PAY_TERM_CD
         , A.ISS_DT
         , A.AP_PAY_DT
         , A.PAY_DUE_DT
         , A.CFM_DT
         , A.INV_RMK
         , NVL(TO_NUMBER(A.CHG_WO_AMT), 0) CHG_WO_AMT
         , NVL(TO_NUMBER(A.WO_INV_RTO), 0) WO_INV_RTO
         , A.INV_OFC_CD OFC
         , A.RHQ_INV_OFC_CD RHQ
         -- WO 검증
         , CASE WHEN A.WO_OFC_CNT = 0 THEN
                (
                SELECT DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                  FROM EAS_MNR_PRE_AUD_VRFY_CFG V
                     , TABLE(BKG_SPLIT_FNC(A.WK_VRFY_DESC, ',')) Q
                 WHERE V.AUD_OFC_CD = A.RHQ_INV_OFC_CD
                   AND V.EXPN_AUD_MNR_VRFY_TP_CD = 'W'
                   AND V.MNR_VRFY_TP_AUD_FLG = 'Y'
                   AND V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                )
           ELSE 
                (
                SELECT DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                  FROM EAS_MNR_PRE_AUD_VRFY_CFG V
                     , TABLE(BKG_SPLIT_FNC(A.WK_VRFY_DESC, ',')) Q
                 WHERE V.AUD_OFC_CD = A.INV_OFC_CD
                   AND V.EXPN_AUD_MNR_VRFY_TP_CD = 'W'
                   AND V.MNR_VRFY_TP_AUD_FLG = 'Y'
                   AND V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                )
           END WK_VRFY_YN
         -- VRFY 검증
         , CASE WHEN EST_OFC_CNT = 0 THEN
                (
                SELECT DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                  FROM EAS_MNR_PRE_AUD_VRFY_CFG V
                     , TABLE(BKG_SPLIT_FNC(A.EST_VRFY_DESC, ',')) Q
                 WHERE V.AUD_OFC_CD = A.RHQ_INV_OFC_CD
                   AND V.EXPN_AUD_MNR_VRFY_TP_CD = 'E'
                   AND V.MNR_VRFY_TP_AUD_FLG = 'Y'
                   AND V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                )
           ELSE
                (
                SELECT DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                  FROM EAS_MNR_PRE_AUD_VRFY_CFG V
                     , TABLE(BKG_SPLIT_FNC(A.EST_VRFY_DESC, ',')) Q
                 WHERE V.AUD_OFC_CD = A.INV_OFC_CD
                   AND V.EXPN_AUD_MNR_VRFY_TP_CD = 'E'
                   AND V.MNR_VRFY_TP_AUD_FLG = 'Y'
                   AND V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                )
           END EST_VRFY_YN
         , A.WK_VRFY_DESC
         , A.EST_VRFY_DESC
         , A.EST_OFC_CNT
         , A.WO_OFC_CNT
         , A.INV_STS_NM
         , A.INV_STS_CD
         , A.INV_CRE_USER_NM
         , A.EXPN_MAX_PRMT_RTO
      FROM
      (
        SELECT /*+USE_NL(B C E A)*/ 
               B.INV_NO
             , E.CSR_NO
             , (
                SELECT MGC.MNR_CD_DESC 
                  FROM MNR_GEN_CD MGC 
                 WHERE A.EQ_KND_CD = MGC.MNR_CD_ID 
                   AND MGC.PRNT_CD_ID = 'CD00002'
                   AND ROWNUM = 1
               ) EQ_KND_CD_NM
             , A.EQ_KND_CD
             , MAX(E.VNDR_SEQ) VNDR_SEQ
             , MAX(D.VNDR_LGL_ENG_NM) VNDR_NM
             , MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(C.ISS_OFC_CD) RHQ_INV_OFC_CD
             , C.ISS_OFC_CD INV_OFC_CD
             , A.CURR_CD WO_CURR_CD
             , SUM(A.MNR_AGMT_AMT) MNR_AGMT_AMT
             , SUM(A.MNR_WRK_AMT) MNR_WRK_AMT
             , SUM(A.INV_AMT) TTL_INV_AMT
             , SUM(B.SPR_PRT_UC_AMT) SPR_PRT_UC_AMT
             , C.CURR_CD INV_CURR_CD
             , DECODE(A.CURR_CD, C.CURR_CD, 'N', 'Y') REFL_EX_YN
             , SUM(B.BZC_AMT) BZC_AMT
             , SUM(B.COST_AMT) COST_AMT
             , SUM(B.INV_AMT) INV_AMT
             , MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(MAX(C.ISS_DT), 'YYYYMM'), C.CURR_CD, A.CURR_CD, SUM(B.INV_AMT)) INV_CHG_AMT
             , MAX(C.GEN_PAY_TERM_CD) GEN_PAY_TERM_CD
             , TO_CHAR(MAX(C.ISS_DT), 'YYYY-MM-DD') ISS_DT
             , TO_CHAR(MAX(E.AP_PAY_DT), 'YYYY-MM-DD') AP_PAY_DT
             , (SELECT TO_CHAR(TO_DATE(INV_TERM_DT, 'YYYYMMDD'), 'YYYY-MM-DD') FROM AP_INV_HDR PAY WHERE PAY.CSR_NO = E.CSR_NO) PAY_DUE_DT
             , TO_CHAR(MAX(C.CFM_DT), 'YYYY-MM-DD') CFM_DT
             , MAX(E.INV_RMK) INV_RMK
             , MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(MAX(C.ISS_DT), 'YYYYMM'), C.CURR_CD, A.CURR_CD, SUM(B.INV_AMT)) - SUM(B.COST_AMT) CHG_WO_AMT
             -- B.COST_AMT의 합이 0이면 ERROR 발생
             , DECODE(SUM(B.COST_AMT), 0, 0, ROUND((MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(MAX(C.ISS_DT), 'YYYYMM'), C.CURR_CD, A.CURR_CD, SUM(B.INV_AMT)) - SUM(B.COST_AMT)) / SUM(B.COST_AMT) * 100 , 2)) WO_INV_RTO
             , WM_CONCAT(DISTINCT DECODE(B.MNR_VRFY_TP_CD, 'SS','','OF','','SL','',B.MNR_VRFY_TP_CD)) AS WK_VRFY_DESC
             , (
                SELECT WM_CONCAT(DISTINCT RD.MNR_VRFY_TP_CD)
                  FROM MNR_RPR_RQST_HDR RH
                     , MNR_RPR_RQST_DTL RD
                     , MNR_ORD_HDR OH
                     , MNR_ORD_DTL OD
                     , MNR_PAY_INV_WRK WRK
                     , AP_PAY_INV INV
                 WHERE RH.MNR_ORD_OFC_CTY_CD = OH.MNR_ORD_OFC_CTY_CD
                   AND RH.MNR_ORD_SEQ = OH.MNR_ORD_SEQ
                   AND RH.RQST_EQ_NO = RD.RQST_EQ_NO
                   AND RH.RPR_RQST_SEQ = RD.RPR_RQST_SEQ
                   AND RH.RPR_RQST_VER_NO = RD.RPR_RQST_VER_NO
                   AND OH.MNR_ORD_OFC_CTY_CD = OD.MNR_ORD_OFC_CTY_CD
                   AND OH.MNR_ORD_SEQ = OD.MNR_ORD_SEQ
                   AND OD.PAY_INV_SEQ = WRK.PAY_INV_SEQ
                   AND WRK.INV_RGST_NO = INV.INV_RGST_NO
                   AND INV.INV_NO = B.INV_NO
                   AND INV.VNDR_SEQ = E.VNDR_SEQ
                   AND OH.EQ_KND_CD = A.EQ_KND_CD
                   AND OD.EQ_NO = RH.RQST_EQ_NO
                   AND OH.MNR_GRP_TP_CD = 'RPR'
                   AND RD.MNR_VRFY_TP_CD NOT IN ('SS', 'SL' ,'OF')
             ) AS EST_VRFY_DESC
             , (
                SELECT MGC.MNR_CD_DESC 
                  FROM MNR_GEN_CD MGC 
                 WHERE E.INV_STS_CD = MGC.MNR_CD_ID 
                   AND MGC.PRNT_CD_ID = 'CD00042'
                   AND ROWNUM = 1
               ) INV_STS_NM
             , E.INV_STS_CD
             , (SELECT USR_NM 
                  FROM COM_USER F 
                 WHERE C.CRE_USR_ID = F.USR_ID
               ) INV_CRE_USER_NM
             , NVL(
                    (SELECT EXPN_MAX_PRMT_RTO FROM EAS_MNR_PRE_AUD_RTO_CFG WHERE AUD_OFC_CD = C.ISS_OFC_CD AND MNR_VRFY_TP_AUD_FLG = 'Y')
                  , (SELECT EXPN_MAX_PRMT_RTO FROM EAS_MNR_PRE_AUD_RTO_CFG WHERE AUD_OFC_CD = MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(C.ISS_OFC_CD) AND MNR_VRFY_TP_AUD_FLG = 'Y')
               ) EXPN_MAX_PRMT_RTO
             , (SELECT COUNT(1) FROM EAS_MNR_PRE_AUD_VRFY_CFG CFG WHERE C.ISS_OFC_CD = CFG.AUD_OFC_CD AND CFG.EXPN_AUD_MNR_VRFY_TP_CD = 'E' AND CFG.MNR_VRFY_TP_AUD_FLG = 'Y') EST_OFC_CNT
             , (SELECT COUNT(1) FROM EAS_MNR_PRE_AUD_VRFY_CFG CFG WHERE C.ISS_OFC_CD = CFG.AUD_OFC_CD AND CFG.EXPN_AUD_MNR_VRFY_TP_CD = 'W' AND CFG.MNR_VRFY_TP_AUD_FLG = 'Y') WO_OFC_CNT
          FROM MNR_ORD_HDR A
             , MNR_ORD_DTL B
             , MNR_PAY_INV_WRK C
             , MDM_VENDOR D
             , AP_PAY_INV E
         WHERE A.MNR_ORD_OFC_CTY_CD = B.MNR_ORD_OFC_CTY_CD
           AND A.MNR_ORD_SEQ = B.MNR_ORD_SEQ
           AND B.PAY_INV_SEQ = C.PAY_INV_SEQ
           AND C.MNR_PRNR_SEQ = D.VNDR_SEQ
           AND C.INV_RGST_NO = E.INV_RGST_NO(+)
           AND C.MNR_GRP_TP_CD = 'RPR'
           AND A.MNR_WO_TP_CD IN ('EST','SPL')
           AND B.ACCT_CD != '511591'
           AND E.DELT_FLG(+) = 'N'
           AND C.INV_NO = @[inv_no]
           AND C.MNR_PRNR_SEQ = @[vndr_seq]
         GROUP BY B.INV_NO
                , E.CSR_NO
                , A.EQ_KND_CD
                , E.VNDR_SEQ
                , C.ISS_OFC_CD
                , C.CURR_CD
                , A.CURR_CD
                , E.INV_STS_CD
                , C.CRE_USR_ID
        ) A
      ) A, EAS_MNR_CFM_INV B
 WHERE A.INV_NO = B.INV_NO(+)
   AND A.VNDR_SEQ = B.VNDR_SEQ(+)
   AND A.EQ_KND_CD = B.EQ_KND_CD(+)
  ) A			]]></sql>
			<params>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
