<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SupplementSOManageDBDAOSearchSupplementSOTargetListRSQL">
			<desc><![CDATA[Supplement 대상 조회]]></desc>
			<sql><![CDATA[
SELECT 
  X.BASIS_NO ,
  Z.BASIS_NO2 ,
  '' IBCHECK ,
  DECODE(Z.BASIS_NO2, 1, 'WorkOrder', 2, 'Invoiced', 3, 'Adjusted') AMOUNT_KIND ,
  NVL(X.TRSP_SO_CMB_TP_CD , '　') TRSP_SO_CMB_TP_CD ,
  NVL(X.TRSP_SO_CMB_SEQ , '　') TRSP_SO_CMB_SEQ ,
  NVL(X.TRSP_SO_CMB_SRT_NO , '　') TRSP_SO_CMB_SRT_NO ,
  X.EQ_NO ,
  DECODE(X.EQ_TPSZ_CD , NULL, '　', EQ_TPSZ_CD ) EQ_TPSZ_CD ,
  DECODE(X.TRSP_COST_DTL_MOD_CD , NULL, '　', TRSP_COST_DTL_MOD_CD ) TRSP_COST_DTL_MOD_CD ,
  DECODE(X.TRSP_CRR_MOD_CD , NULL, '　', TRSP_CRR_MOD_CD ) TRSP_CRR_MOD_CD ,
  X.FM_NOD_CD ,
  X.VIA_NOD_CD ,
  X.TO_NOD_CD ,
  X.DOR_NOD_CD ,
  DECODE(X.FM_LOC , NULL, '　', FM_LOC ) FM_LOC ,
  DECODE(X.FM_YARD , NULL, '　', FM_YARD ) FM_YARD ,
  DECODE(X.VIA_LOC , NULL, '　', VIA_LOC ) VIA_LOC ,
  DECODE(X.VIA_YARD , NULL, '　', VIA_YARD ) VIA_YARD ,
  DECODE(X.TO_LOC , NULL, '　', TO_LOC ) TO_LOC ,
  DECODE(X.TO_YARD , NULL, '　', TO_YARD ) TO_YARD ,
  DECODE(X.DOR_LOC , NULL, '　', DOR_LOC ) DOR_LOC ,
  DECODE(X.DOR_ZONE , NULL, '　', DOR_ZONE ) DOR_ZONE ,
  DECODE(X.CUST_VAL , NULL, '　', CUST_VAL ) CUST_VAL ,
  DECODE(X.DOR_DE_ADDR , NULL, '　', DOR_DE_ADDR ) DOR_DE_ADDR ,
  DECODE(X.VNDR_SEQ , NULL, '　', VNDR_SEQ ) VNDR_SEQ ,
  DECODE(X.VNDR_SEQ , NULL, '　', TRS_COMMON_PKG.GET_VNDR_FULL_NM_FNC(VNDR_SEQ)) VNDR_NM , 
  DECODE(X.BKG_SQ , NULL, '　', BKG_SQ ) BKG_SQ ,
  DECODE(X.BL_NO , NULL, '　', BL_NO ) BL_NO ,
  DECODE(X.TRUCK_VVD , NULL, '　', TRUCK_VVD ) TRUCK_VVD ,
  DECODE(X.SO_NUMBER , NULL, '　', SO_NUMBER ) SO_NUMBER ,
  DECODE(X.WO_NUMBER , NULL, '　', WO_NUMBER ) WO_NUMBER ,
  DECODE(X.LOCL_CRE_DT, NULL, '　', TO_CHAR(X.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI') ) CRE_DT ,
  X.LOCL_CRE_DT CREATE_DATE ,
  DECODE(X.INV_NO , NULL, '　', INV_NO ) INV_NO ,
  DECODE(X.INV_CFM_DT , NULL, '　', TO_CHAR(X.INV_CFM_DT, 'YYYY-MM-DD HH24:MI') ) INV_CFM_DT ,
  DECODE(X.REF_NO , NULL, '　', X.REF_NO ) REF_NO ,
  DECODE(X.SPL_ISS_RSN , NULL, '　', X.SPL_ISS_RSN ) SPL_ISS_RSN ,
  X.TRSP_SO_OFC_CTY_CD ,
  X.TRSP_SO_SEQ ,
  X.TRSP_SO_SEQ AS SURCHARGE_KEY ,
  DECODE(BASIS_NO2, 1, X.TRSP_AGMT_RT_TP_CD , 2, X.TRSP_AGMT_RT_TP_CD) AGMT_RT_TP_CD ,
  DECODE(BASIS_NO2, 1, X.TRSP_AGMT_WY_TP_CD , 2, X.TRSP_AGMT_WY_TP_CD) AGMT_WY_TP_CD ,
  DECODE(BASIS_NO2, 1, X.CURR_CD , 2, X.INV_CURR_CD, 3, X.INV_CURR_CD ) CURR_CD ,
  NVL(DECODE(BASIS_NO2, 1, X.BZC_AMT , 2, X.INV_BZC_AMT ), 0) BZC_AMT ,
  NVL(DECODE(BASIS_NO2, 1, X.FUEL_SCG_AMT , 2, 0 ), 0) FUEL_SCG_AMT ,						
  NVL(DECODE(BASIS_NO2, 1, X.OVR_WGT_SCG_AMT , 2, 0 ), 0) OVR_WGT_SCG_AMT ,   		       
  NVL(DECODE(BASIS_NO2, 1, X.ETC_ADD_AMT , 2, X.INV_ETC_ADD_AMT ), 0) ETC_ADD_AMT ,	
  NVL(DECODE(BASIS_NO2, 1, X.NEGO_AMT , 2, 0 ), 0) NEGO_AMT ,								
  NVL(DECODE(BASIS_NO2, 1, X.TOT_AMT , 2, X.TOT_INV_AMT ), 0) TOT_AMT ,
  NVL(X.TRSP_SO_TP_CD , '　') TRSP_SO_TP_CD ,
  NVL(X.TRSP_BND_CD , '　') TRSP_BND_CD ,
  NVL(X.EQ_KND_CD , '　') EQ_KND_CD ,
  NVL(X.BKG_NO , '　') BKG_NO ,
  X.BDL_KNT ,
  X.WGT_MEAS_UT_CD ,
  X.CNTR_WGT ,
  X.SPCL_CGO_CNTR_TP_CD ,
  X.CRE_OFC_CD ,
  X.CGO_TP_CD ,
  NVL(X.CUST_NOMI_TRKR_FLG, 'N') CUST_NOMI_TRKR_FLG ,
  X.CUST_CNT_CD ,
  X.CUST_SEQ ,
  X.CMDT_CD ,
  X.TRSP_DFLT_VNDR_FLG,
  X.TTL_DIST,
  X.LNK_DIST_DIV_CD
FROM (
    SELECT ROWNUM BASIS_NO ,
      A.TRSP_SO_CMB_TP_CD ,
      TO_CHAR(A.TRSP_SO_CMB_SEQ) TRSP_SO_CMB_SEQ ,
      A.TRSP_SO_CMB_SRT_NO ,
      A.EQ_NO ,
      A.EQ_TPSZ_CD ,
      A.TRSP_COST_DTL_MOD_CD ,
      A.TRSP_CRR_MOD_CD ,
      A.FM_NOD_CD ,
      A.VIA_NOD_CD ,
      A.TO_NOD_CD ,
      A.DOR_NOD_CD ,
      SUBSTR(A.FM_NOD_CD , 1, 5) FM_LOC ,
      SUBSTR(A.FM_NOD_CD , 6, 2) FM_YARD ,
      SUBSTR(A.VIA_NOD_CD, 1, 5) VIA_LOC ,
      SUBSTR(A.VIA_NOD_CD, 6, 2) VIA_YARD ,
      SUBSTR(A.TO_NOD_CD , 1, 5) TO_LOC ,
      SUBSTR(A.TO_NOD_CD , 6, 2) TO_YARD ,
      SUBSTR(A.DOR_NOD_CD, 1, 5) DOR_LOC ,
      SUBSTR(A.DOR_NOD_CD, 6, 2) DOR_ZONE ,
      A.CUST_CNT_CD||A.CUST_SEQ CUST_VAL ,
      A.CUST_NOMI_TRKR_FLG ,
      A.CUST_CNT_CD ,
      A.CUST_SEQ ,
      A.DOR_DE_ADDR ,
      A.VNDR_SEQ ,
      A.TRSP_AGMT_RT_TP_CD ,
      A.TRSP_AGMT_WY_TP_CD ,
      A.CURR_CD ,
      A.BZC_AMT ,
      A.FUEL_SCG_AMT ,
      A.OVR_WGT_SCG_AMT ,
      A.ETC_ADD_AMT ,
      A.NEGO_AMT ,
      NVL(A.BZC_AMT, 0)+NVL(A.FUEL_SCG_AMT, 0)+NVL(A.OVR_WGT_SCG_AMT, 0)+NVL(A.ETC_ADD_AMT, 0)+NVL(A.NEGO_AMT, 0) TOT_AMT ,
      A.INV_CURR_CD ,
      A.INV_BZC_AMT ,
      A.INV_ETC_ADD_AMT ,
	  NVL(A.INV_ETC_ADD_AMT, 0) TOT_INV_AMT ,			 
      A.BKG_NO BKG_SQ ,                                  
      A.BL_NO AS BL_NO ,                                 
      A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD TRUCK_VVD ,
      A.TRSP_SO_OFC_CTY_CD||A.TRSP_SO_SEQ SO_NUMBER ,
      A.TRSP_WO_OFC_CTY_CD||A.TRSP_WO_SEQ WO_NUMBER ,
      B.LOCL_CRE_DT LOCL_CRE_DT, 
      A.INV_NO ,
      C.INV_CFM_DT ,
      A.REF_ID||A.REF_SEQ REF_NO ,
      A.SPL_ISS_RSN ,
      A.TRSP_SO_OFC_CTY_CD ,
      A.TRSP_SO_SEQ ,
      A.TRSP_SO_TP_CD ,
      A.TRSP_BND_CD ,
      A.EQ_KND_CD ,
      A.BKG_NO ,
      CASE 
        WHEN A.EQ_KND_CD = 'Z' AND A.TRSP_SO_CMB_TP_CD = 'BD' THEN COUNT(*) OVER (PARTITION BY A.TRSP_SO_CMB_TP_CD, A.TRSP_SO_CMB_SEQ) 
        WHEN A.EQ_KND_CD = 'Z' THEN 1 
        WHEN A.EQ_KND_CD = 'U' AND SUBSTR(A.EQ_TPSZ_CD, 1, 1) = 'F' AND A.TRSP_SO_CMB_TP_CD = 'BD' 
            THEN COUNT(*) OVER (PARTITION BY A.TRSP_SO_CMB_TP_CD, A.TRSP_SO_CMB_SEQ) 
        WHEN A.EQ_KND_CD = 'U' AND SUBSTR(A.EQ_TPSZ_CD, 1, 1) = 'F' THEN 1 
      ELSE 0 
      END BDL_KNT ,
      A.WGT_MEAS_UT_CD ,
      A.CNTR_WGT ,
	  A.SPCL_CGO_CNTR_TP_CD ,
      A.CRE_OFC_CD ,
      A.CGO_TP_CD ,
      A.CMDT_CD ,
      NVL(A.TRSP_DFLT_VNDR_FLG, 'N') TRSP_DFLT_VNDR_FLG,
	  A.TTL_DIST,
	  NVL(A.LNK_DIST_DIV_CD,' ') LNK_DIST_DIV_CD
    FROM TRS_TRSP_SVC_ORD A ,
      TRS_TRSP_WRK_ORD B ,
      TRS_TRSP_INV_WRK C
    WHERE 1=1
	  AND A.TRSP_WO_OFC_CTY_CD = B.TRSP_WO_OFC_CTY_CD
      AND A.TRSP_WO_SEQ = B.TRSP_WO_SEQ
      AND A.INV_NO = C.INV_NO
      AND A.INV_VNDR_SEQ = C.INV_VNDR_SEQ
      AND NVL(A.DELT_FLG, 'N') = 'N'
      AND A.TRSP_SO_TP_CD <> 'S'
      AND C.TRSP_INV_AUD_STS_CD IN ('AR', 'IF', 'PD')
      AND A.PRNT_TRSP_SO_OFC_CTY_CD IS NULL
      AND A.PRNT_TRSP_SO_SEQ IS NULL
      AND A.TRSP_SO_OFC_CTY_CD = @[loginUsrOfcCtyCd]
      AND NOT EXISTS (
        SELECT ''
        FROM TRS_TRSP_SVC_ORD M
        WHERE A.TRSP_SO_OFC_CTY_CD = M.PRNT_TRSP_SO_OFC_CTY_CD
          AND A.TRSP_SO_SEQ = M.PRNT_TRSP_SO_SEQ
          AND NVL(M.DELT_FLG, 'N') = 'N'
          AND M.TRSP_SPL_SO_TP_CD = @[hid_kind]
      )
      AND A.EQ_KND_CD = @[hid_eq_radio]
      
      #if(!($sonumberArr.size() > 0 || $wonumberArr.size() > 0 || $bkgnumberArr.size() > 0 
            || $blnumberArr.size() > 0 || $vvdnumberArr.size() > 0 || $refnumberArr.size() > 0 || $invnumberArr.size() > 0))
        #if (${from_date} != '' && ${to_date} != '') 
            #if(${hid_period} != '') 
                #if(${hid_period} == 'S') 
                    AND A.LOCL_CRE_DT BETWEEN TO_DATE(@[from_date], 'YYYYMMDD') AND TO_DATE(@[to_date], 'YYYYMMDD')+0.99999
                #elseif(${hid_period} == 'W') 
                    AND B.LOCL_CRE_DT BETWEEN TO_DATE(@[from_date], 'YYYYMMDD') AND TO_DATE(@[to_date], 'YYYYMMDD')+0.99999
                #elseif(${hid_period} == 'I') 
                    AND C.INV_CFM_DT BETWEEN TO_DATE(@[from_date], 'YYYYMMDD') AND TO_DATE(@[to_date], 'YYYYMMDD')+0.99999
                #elseif(${hid_period} == 'P') 
                    AND A.N1ST_NOD_PLN_DT BETWEEN TO_DATE(@[from_date], 'YYYYMMDD') AND TO_DATE(@[to_date], 'YYYYMMDD')+0.99999
                #elseif(${hid_period} == 'D') 
                    AND A.DOR_NOD_PLN_DT BETWEEN TO_DATE(@[from_date], 'YYYYMMDD') AND TO_DATE(@[to_date], 'YYYYMMDD')+0.99999
                #end
            #end
        #end
      #end           

      AND NVL(A.TRSP_BND_CD          , 'N/A')	= NVL(@[hid_boundmode], NVL(A.TRSP_BND_CD           , 'N/A'))  
      AND NVL(A.TRSP_COST_DTL_MOD_CD , 'N/A')   = NVL(@[hid_costmode] , NVL(A.TRSP_COST_DTL_MOD_CD  , 'N/A')) 
      AND NVL(A.TRSP_CRR_MOD_CD      , 'N/A')   = NVL(@[hid_transmode], NVL(A.TRSP_CRR_MOD_CD       , 'N/A')) 
      AND NVL(A.VNDR_SEQ             , 0    )   = NVL(@[hid_provider] , NVL(A.VNDR_SEQ              , 0    )) 
      AND A.HJL_NO IS NULL
      AND B.HJL_NO IS NULL
      AND C.HJL_NO IS NULL  
      
      #if(${hid_from_node} != '')
        AND A.FM_NOD_CD LIKE @[hid_from_node]||'%'
      #end
        
      #if(${hid_via_node} != '')
        AND A.VIA_NOD_CD LIKE @[hid_via_node]||'%' 
      #end
        
      #if(${hid_to_node} != '')
        AND A.TO_NOD_CD LIKE @[hid_to_node]||'%'
      #end
      
      #if(${hid_dor_node} != '')
        AND A.DOR_NOD_CD LIKE @[hid_dor_node]||'%'
      #end
      
      #if(${hid_tp_sz} != '' && ${hid_tp_sz}!='ALL')
        AND A.EQ_TPSZ_CD = @[hid_tp_sz]
      #end
      
      #if($invnumberArr.size() > 0) 
        AND A.INV_NO IN (
	       #foreach( ${key} in ${invnumberArr}) 
		      #if($velocityCount == 1)
 			    '${key}'
		      #else 
 			    , '${key}'
		      #end 
	       #end 
        )
      #end 

      #if($vvdnumberArr.size() > 0) 
        AND (( A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD ) IN (
	       #foreach( ${key} in ${vvdnumberArr}) 
		      #if($velocityCount == 1)
 			    ( '${key.vslCd}', '${key.skdVoyNo}', '${key.skdDirCd}' )
		      #else 
 			    , ( '${key.vslCd}', '${key.skdVoyNo}', '${key.skdDirCd}' )
		      #end 
	       #end 
        ))
      #end 

      #if($refnumberArr.size() > 0) 
        AND (
	       #foreach( ${key} in ${refnumberArr}) 
		      #if($velocityCount == 1)
 			  	( 
					A.REF_ID = '${key.refId}' 
					#if(${key.refSeq} != '') 
						AND A.REF_SEQ = ${key.refSeq} 
					#end
				)
		      #else 
 			    OR ( 
					A.REF_ID = '${key.refId}' 
					#if(${key.refSeq} != '') 
						AND A.REF_SEQ = ${key.refSeq} 
					#end
				)
		      #end 
	       #end 
        )
      #end 
     
		#if($sonumberArr.size() > 0) 
      		AND ( 
	       			#foreach( ${key} in ${sonumberArr}) 			
		      			#if($velocityCount == 1)
 			     			( A.TRSP_SO_OFC_CTY_CD =  '${key.trspSoOfcCtyCd}'
							#if(${key.trspSoSeq} != '')
								AND A.TRSP_SO_SEQ = ${key.trspSoSeq}
							#end
							)
		      			#else 
 			     			OR ( A.TRSP_SO_OFC_CTY_CD =  '${key.trspSoOfcCtyCd}'
							#if(${key.trspSoSeq} != '')
								AND A.TRSP_SO_SEQ = ${key.trspSoSeq}
							#end
							)
						#end 
	       			#end 
				)
      	#end 

      	#if($wonumberArr.size() > 0) 
      		AND ( 
	       			#foreach( ${key} in ${wonumberArr}) 			
		      			#if($velocityCount == 1)
 			     			( A.TRSP_WO_OFC_CTY_CD =  '${key.trspWoOfcCtyCd}'
							#if(${key.trspWoSeq}!= '')
								AND A.TRSP_WO_SEQ = ${key.trspWoSeq}
							#end
							)
		      			#else 
 			     			OR ( A.TRSP_WO_OFC_CTY_CD =  '${key.trspWoOfcCtyCd}'
							#if(${key.trspWoSeq} != '')
								AND A.TRSP_WO_SEQ = ${key.trspWoSeq}
							#end
							)
						#end 
	       			#end 
				)
       	#end 
   
      #if($blnumberArr.size() > 0) 
        AND A.BL_NO IN (
	       #foreach( ${key} in ${blnumberArr}) 
		      #if($velocityCount == 1)
 			    '${key}'
		      #else 
 			    , '${key}'
		      #end 
	       #end 
        )
      #end 

      #if($bkgnumberArr.size() > 0)
  	     AND A.BKG_NO IN (
	       #foreach( ${key} in ${bkgnumberArr}) 
		      #if($velocityCount == 1)
 			    '${key}'	
		      #else 
 			    , '${key}'	
		      #end 
	       #end 
	     )
      #end      
 
      #if($eqnumberArr.size() > 0)
  	     AND A.EQ_NO IN (
	       #foreach( ${key} in ${eqnumberArr}) 
		      #if($velocityCount == 1)
 			    '${key}'	
		      #else 
 			    , '${key}'	
		      #end 
	       #end 
	     )
      #end      
    
    ORDER BY EQ_NO ASC , EQ_TPSZ_CD ASC , TRSP_COST_DTL_MOD_CD ASC , TRSP_CRR_MOD_CD ASC , WO_NUMBER ASC 
 ) X , 
 (
    SELECT 1 BASIS_NO2
    FROM DUAL
    UNION ALL
    SELECT 2
    FROM DUAL
    UNION ALL
    SELECT 3
    FROM DUAL 
) Z
ORDER BY X.BASIS_NO ASC , Z.BASIS_NO2 ASC			]]></sql>
			<params>
				<param name="loginUsrOfcCtyCd" type="12" value="" out="N"/>
				<param name="hid_kind" type="12" value="" out="N"/>
				<param name="hid_eq_radio" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="hid_boundmode" type="12" value="" out="N"/>
				<param name="hid_costmode" type="12" value="" out="N"/>
				<param name="hid_transmode" type="12" value="" out="N"/>
				<param name="hid_provider" type="12" value="" out="N"/>
				<param name="hid_from_node" type="12" value="" out="N"/>
				<param name="hid_via_node" type="12" value="" out="N"/>
				<param name="hid_to_node" type="12" value="" out="N"/>
				<param name="hid_dor_node" type="12" value="" out="N"/>
				<param name="hid_tp_sz" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
