<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="StatusInquiryDBDAOSearchTPBInvoiceListRSQL">
			<desc><![CDATA[TPB -> Status & Performance -> TPB Invoice Inquiry]]></desc>
			<sql><![CDATA[
##${s_trd_party_val}
SELECT   IT.OFC_CD
       , SC.IDA_GST_RGST_NO AS SM_IDA_GST_RGST_NO
       , ID.N3PTY_NO
       , IM.N3PTY_INV_NO
       , IM.N3PTY_INV_RVIS_SEQ AS N3PTY_INV_HIS_SEQ
       , IM.N3PTY_INV_RVIS_CD
       , TO_CHAR(TPB_GET_LCL_DATE_FNC(IM.INV_ISS_LOCL_DT,@[s_usr_ofc_cd]),'YYYY-MM-DD HH24:MI') AS INV_ISS_LOCL_DT
       , IM.UPD_USR_ID
       , IM.CLT_AGN_FLG
       , TO_CHAR(TPB_GET_LCL_DATE_FNC(IM.AR_IF_DT,@[s_usr_ofc_cd]),'YYYY-MM-DD HH24:MI') AS AR_IF_DT
       , ID.BKG_NO
       , IM.IF_BL_NO
       , NVL(CC.IDA_SPCL_ECN_ZN_UT_FLG,'N') AS N3PTY_IDA_SPCL_ECN_ZN_UT_FLG
       , IM.VNDR_CUST_DIV_CD
       , CASE IM.VNDR_CUST_DIV_CD WHEN 'V' THEN TRIM(TO_CHAR(IM.VNDR_SEQ,'000000'))
                                  WHEN 'C' THEN IM.CUST_CNT_CD||TRIM(TO_CHAR(IM.CUST_SEQ,'000000'))
         END AS TRD_PARTY_CODE
       , IM.VNDR_CUST_NM AS TRD_PARTY_NM
       , CASE IM.VNDR_CUST_DIV_CD WHEN 'V' THEN CV.IDA_GST_RGST_NO
                                  WHEN 'C' THEN CC.IDA_GST_RGST_NO
         END AS N3PTY_IDA_GST_RGST_NO
       , BT.N3PTY_EXPN_TP_CD
       , BT.IDA_SAC_CD
       , IM.CURR_CD
       , IM.NET_AMT AS OTS_AMT
       , IM.ADD_AMT
       , IM.DDCT_AMT
       , IM.VAT_AMT + NVL(IM.LOCL_TAX_AMT,0) AS VAT_AMT
       , IM.INV_AMT
       , IM.CLT_AMT
       , SS.IDA_STE_CD AS SM_IDA_STE_CD
       , CS.IDA_STE_CD AS N3PTY_IDA_STE_CD
       , CASE WHEN SC.IDA_GST_RGST_NO IS NULL THEN 'Yes' ELSE 'No' END AS RVS_CHG_FLG
       , NVL(IM.NET_AMT,0) + NVL(IM.ADD_AMT,0) - NVL(IM.DDCT_AMT,0) AS TAXABL_AMT
       , IM.IDA_IGST_RTO
       , IM.IDA_IGST_AMT
       , IM.IDA_CGST_RTO
       , IM.IDA_CGST_AMT
       , IM.IDA_SGST_RTO
       , IM.IDA_SGST_AMT
       , IM.IDA_UGST_RTO
       , IM.IDA_UGST_AMT
       , IM.VAT_AMT AS IDA_GST_TAX_AMT
       , ( SELECT COUNT(DISTINCT N3PTY_BIL_TP_CD) FROM TPB_INV_RVIS_DTL S WHERE S.N3PTY_INV_NO = IM.N3PTY_INV_NO AND S.N3PTY_INV_RVIS_SEQ = IM.N3PTY_INV_RVIS_SEQ ) AS LENGTH_N3PTY_BIL_TP_CD
       , OL.CNT_CD
FROM     TPB_INVOICE IT
       , TPB_INV_RVIS IM
       , TPB_INV_RVIS_DTL ID
       , TPB_N3RD_PTY_BIL_TP BT
--Table For India Taxtion
       , MDM_ORGANIZATION SO
       , MDM_LOCATION OL
       , MDM_CUSTOMER SC -- Office Code에 해당하는 Customer 정보를 가져오기 위한 조인 ( SM 상선용 )
       , MDM_LOCATION SL -- Office Code와 Customer에 매핑되는 Location 정보를 가져오기 위한 조인 ( SM 상선용 )
       , MDM_STATE SS -- Office Code와 Customer에 매핑되는 State 정보를 가져오기 위한 조인 ( SM 상선용 )
       , MDM_CUSTOMER CC -- Invoice Customer에 해당하는 Customer 정보를 가져오기 위한 조인 ( Customer용 )
       , MDM_VENDOR CV -- Invoice Vendor에 해당하는 Vendor 정보를 가져오기 위한 조인 ( Customer용 )
       , MDM_LOCATION CL -- Invoice Customer/Vendor에 매핑되는 Location 정보를 가져오기 위한 조인 ( Customer용 )
       , MDM_STATE CS -- Invoice Customer/Vendor에 매핑되는 State 정보를 가져오기 위한 조인 ( Customer용 )
--Table For India Taxtion
WHERE    1 = 1
AND      IT.N3PTY_INV_NO = IM.N3PTY_INV_NO
AND      IM.N3PTY_INV_NO = ID.N3PTY_INV_NO
AND      IM.N3PTY_INV_RVIS_SEQ = ID.N3PTY_INV_RVIS_SEQ
AND      ID.N3PTY_BIL_TP_CD = BT.N3PTY_BIL_TP_CD
--Join For India Taxtion
AND      IT.OFC_CD = SO.OFC_CD
AND      SO.LOC_CD = OL.LOC_CD
AND      SO.REP_CUST_CNT_CD = SC.CUST_CNT_CD(+)
AND      SO.REP_CUST_SEQ = SC.CUST_SEQ(+)
AND      NVL(SC.LOC_CD,'KRSEL') = SL.LOC_CD
AND      SL.CNT_CD = SS.CNT_CD(+)
AND      SL.STE_CD = SS.STE_CD(+)
AND      IM.CUST_CNT_CD = CC.CUST_CNT_CD(+)
AND      IM.CUST_SEQ = CC.CUST_SEQ(+)
AND      IM.VNDR_SEQ = CV.VNDR_SEQ(+)
AND      CL.LOC_CD = CASE WHEN IM.VNDR_CUST_DIV_CD = 'C' THEN CC.LOC_CD ELSE CV.LOC_CD END
AND      CL.CNT_CD = CS.CNT_CD(+)
AND      CL.STE_CD = CS.STE_CD(+)
--Join For India Taxtion
AND      ID.N3PTY_INV_RVIS_DTL_SEQ = 1
AND      BT.N3PTY_BIL_TP_CD != 'JO'

#if (${s_if_type} == 'S') 
AND      BT.N3PTY_IF_TP_CD IN ('M','S')
#else
AND      BT.N3PTY_IF_TP_CD = 'R'
#end

#if (${s_cond} == '1') 
AND      IM.INV_ISS_LOCL_DT >= TPB_GET_SRCH_DATE_FNC(@[s_sdate],'YYYY-MM-DD',@[s_usr_ofc_cd])
AND      IM.INV_ISS_LOCL_DT < TPB_GET_SRCH_DATE_FNC(@[s_edate],'YYYY-MM-DD',@[s_usr_ofc_cd]) + 1
AND      IT.OFC_CD IN
         (
           SELECT   OFC_CD
           FROM     TPB_HNDL_OFC
           WHERE    1 = 1
           AND      N3PTY_OFC_TP_CD = 'T'
	#if (${s_if_rhq_cd} != '') 
           AND      RHQ_CD = @[s_if_rhq_cd]
    #end
    #if (${s_if_ctrl_cd} != '')
           AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]
    #end
    #if (${s_if_ofc_cd} != '')
           AND      OFC_CD = @[s_if_ofc_cd]
    #end
         )

#elseif (${s_cond} == '2')
--invoice NSO.
AND      IM.N3PTY_INV_NO = SUBSTRB(@[s_n3pty_inv_no_for_search],1,11)
	#if (${s_n3pty_inv_rmd_cd_for_search} != '')
AND      IM.N3PTY_INV_RVIS_CD LIKE @[s_n3pty_inv_rmd_cd_for_search]||'%'
	#end 
#elseif (${s_cond} == '3')
--EQ NSO.
AND      EXISTS
         (
           SELECT   S.N3PTY_INV_NO
           FROM     TPB_INV_RVIS_DTL S
           WHERE    1 = 1
           AND      S.EQ_NO = @[s_eq_no]
           AND      S.N3PTY_INV_NO = IM.N3PTY_INV_NO
           AND      S.N3PTY_DELT_TP_CD = 'N'
         )
#end
		
--Collection Agency
#if (${s_clt_agn_flg} == 'E') 
--Excluding
AND      IM.CLT_AGN_FLG = 'N'  
#elseif (${s_clt_agn_flg} == 'O')
--Only
AND      IM.CLT_AGN_FLG = 'Y'  
#end

--ERP I/F

#if (${s_n3pty_inv_sts_cd} == 'E')
--Excluding
AND      IM.N3PTY_INV_STS_CD = 'N'  
#elseif (${s_n3pty_inv_sts_cd} == 'O')
--Only
AND      IM.N3PTY_INV_STS_CD <> 'N'  
#end

--- 3rd Party --- 
#if (${s_vndr_cust_div_cd} != '')
AND      IM.VNDR_CUST_DIV_CD = @[s_vndr_cust_div_cd]
    #if (${s_trd_party_val} != '')
        #if (${s_vndr_cust_div_cd} == 'V')
AND      IM.VNDR_SEQ = TO_NUMBER(@[s_trd_party_val])
		#elseif (${s_vndr_cust_div_cd} == 'C')
AND      IM.CUST_CNT_CD = SUBSTRB(TRIM(@[s_trd_party_val]),1,2)
			#if ($s_trd_party_val.length() > 2)
AND      IM.CUST_SEQ = TO_NUMBER(SUBSTRB(TRIM(@[s_trd_party_val]),3))
			#end
		#elseif (${s_vndr_cust_div_cd} == 'S')
AND      'Y' = @[s_trd_party_val]
		#end
	#end
#end

-- search version value - A/O/C/R/L
#if (${s_invce_search_version} == 'O')
--ORG
AND      IM.N3PTY_INV_RVIS_CD = 'ORG'
#elseif (${s_invce_search_version} == 'C')
--Cxx
AND      IM.N3PTY_INV_RVIS_CD LIKE 'C%'
#elseif (${s_invce_search_version} == 'R')
--Rxx
AND      IM.N3PTY_INV_RVIS_CD LIKE 'R%'
#elseif (${s_invce_search_version} == 'L')
--Last Version
AND      IT.LST_N3PTY_INV_RVIS_SEQ = IM.N3PTY_INV_RVIS_SEQ
#end

ORDER BY IM.N3PTY_INV_NO ASC
       , IM.N3PTY_INV_RVIS_SEQ ASC			]]></sql>
			<params>
				<param name="s_usr_ofc_cd" type="12" value="" out="N"/>
				<param name="s_sdate" type="12" value="" out="N"/>
				<param name="s_edate" type="12" value="" out="N"/>
				<param name="s_if_rhq_cd" type="12" value="" out="N"/>
				<param name="s_if_ctrl_cd" type="12" value="" out="N"/>
				<param name="s_if_ofc_cd" type="12" value="" out="N"/>
				<param name="s_n3pty_inv_no_for_search" type="12" value="" out="N"/>
				<param name="s_n3pty_inv_rmd_cd_for_search" type="12" value="" out="N"/>
				<param name="s_eq_no" type="12" value="" out="N"/>
				<param name="s_vndr_cust_div_cd" type="12" value="" out="N"/>
				<param name="s_trd_party_val" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
