CREATE OR REPLACE PROCEDURE PRD_A_ACT_GRP_DTL_DEL_PRC(NAME IN  CHAR )IS    V_LOG_SEQ          MIG_LOG.MIG_LOG_SEQ%TYPE;    V_LOG_SEQ2         MIG_LOG.MIG_LOG_SEQ%TYPE;    V_LOG_SEQ3         MIG_LOG.MIG_LOG_SEQ%TYPE;    V_LOG_SEQ4         MIG_LOG.MIG_LOG_SEQ%TYPE;    V_LOG_SEQ5         MIG_LOG.MIG_LOG_SEQ%TYPE;    V_LOG_SEQ6         MIG_LOG.MIG_LOG_SEQ%TYPE;    V_WORK_SEQ        MIG_LOG.WORK_SEQ%TYPE;    V_SYS_NM          MIG_LOG.SYS_NM%TYPE;    V_PROG_NM         MIG_LOG.PROG_NM%TYPE;    V_OWN_NM          VARCHAR2(30);    V_ENT_NM          MIG_LOG.ENT_NM%TYPE;    V_TAB_NM          MIG_LOG.TAB_NM%TYPE;    V_ACT_TP          MIG_LOG.ACT_TP%TYPE;    V_INS_ROW_CNT     MIG_LOG.INS_ROW_CNT%TYPE;    V_PRC_ROW_CNT     MIG_LOG.INS_ROW_CNT%TYPE;    V_LOG_MSG         MIG_LOG.LOG_MSG%TYPE;    V_LOG_MSG_MAIN    MIG_LOG.LOG_MSG%TYPE;    V_AUTHOR_NM       MIG_LOG.AUTHOR_NM%TYPE;    V_WORK_GRP_ID     MIG_LOG.WORK_GRP_ID%TYPE;    V_SUB_STEP_DESC   MIG_LOG_SUB_STEP.SUB_STEP_DESC%TYPE;    V_LOG_SUB_SEQ     MIG_LOG_SUB_STEP.MIG_LOG_SUB_SEQ%TYPE;    V_ERRNO           MIG_LOG.ERR_TP%TYPE;    V_ERRMSG          MIG_LOG.LOG_MSG%TYPE;    V_ERRNO_SUB_STEP  MIG_LOG_SUB_STEP.ERR_TP%TYPE;    ARRAY_SIZE  CONSTANT NUMBER := 10000;    TYPE ARRAY_PCTL_NO IS VARRAY(10000) OF VARCHAR2(100);    VA_PCTL_NO  ARRAY_PCTL_NO;    I           NUMBER;    CURSOR PC_NO_CUR IS          SELECT PCTL_NO FROM PUG_PCTL_NO;BEGIN    V_WORK_SEQ      := 1;    V_SYS_NM        := 'PRD';    V_PROG_NM       := 'PRD PURGE';    V_OWN_NM        := 'NISADM';    V_ENT_NM        := 'PRD';    V_TAB_NM        := 'PRD_PROD_CTL_ACT_GRP_DTL';    V_INS_ROW_CNT   := 0;    V_LOG_MSG       := '';    V_LOG_MSG_MAIN  := '';    V_ERRNO         := '';    V_WORK_GRP_ID   := '${WORK_GRP_ID}';    V_PRC_ROW_CNT      := 0;    -- LOG START    MIG_UTL_PURGE.PRC_MIG_PGM_LOG (        I_LOG_MODE => 'LOG_START',  I_LOG_SEQ => NULL,      I_WORK_SEQ => V_WORK_SEQ,   I_SYS_NM => V_SYS_NM,       I_PROG_NM=> V_PROG_NM,        I_ENT_NM => V_ENT_NM,       I_TAB_NM => 'PRD_PROD_CTL_ACT_GRP_DTL',   I_ACT_TP   => 'D',          I_INS_ROW_CNT => 0,         I_LOG_MSG => V_LOG_MSG_MAIN,        I_AUTHOR_NM => V_AUTHOR_NM, O_LOG_SEQ => V_LOG_SEQ, O_ERRNO => V_ERRNO,         O_ERRMSG => V_ERRMSG,       I_WORK_GRP_ID => V_WORK_GRP_ID);         V_SUB_STEP_DESC := 'DATA_PURGE';    OPEN PC_NO_CUR;    LOOP        FETCH PC_NO_CUR BULK COLLECT INTO VA_PCTL_NO LIMIT ARRAY_SIZE;        -- SUB STEP LOG START            MIG_UTL_PURGE.PRC_MIG_PGM_LOG_SUB_STEP (               I_LOG_MODE => 'LOG_START',      I_LOG_SEQ => V_LOG_SEQ,      I_LOG_SUB_SEQ => NULL,  I_SUB_STEP_DESC => V_SUB_STEP_DESC,               I_ACT_TP   => 'D',              I_PRC_ROW_CNT => 0,          I_LOG_MSG => NULL,               O_LOG_SUB_SEQ => V_LOG_SUB_SEQ, O_ERRNO => V_ERRNO_SUB_STEP, O_ERRMSG => V_ERRMSG );        FORALL I IN VA_PCTL_NO.FIRST..VA_PCTL_NO.LAST            DELETE PRD_PROD_CTL_ACT_GRP_DTL    WHERE PCTL_NO = VA_PCTL_NO(I); -- 20            DBMS_OUTPUT.PUT_LINE('[' ||  SQL%ROWCOUNT  || '] 1 ');            V_PRC_ROW_CNT := SQL%ROWCOUNT;            V_INS_ROW_CNT := V_INS_ROW_CNT + V_PRC_ROW_CNT;          COMMIT;            -- SUB STEP LOG FINISH            MIG_UTL_PURGE.PRC_MIG_PGM_LOG_SUB_STEP (               I_LOG_MODE => 'LOG_FINISH',     I_LOG_SEQ => V_LOG_SEQ,      I_LOG_SUB_SEQ => V_LOG_SUB_SEQ,  I_SUB_STEP_DESC => V_SUB_STEP_DESC,               I_PRC_ROW_CNT => V_PRC_ROW_CNT, I_LOG_MSG => V_LOG_MSG,               O_LOG_SUB_SEQ => V_LOG_SUB_SEQ, O_ERRNO => V_ERRNO_SUB_STEP, O_ERRMSG => V_ERRMSG  );        EXIT WHEN PC_NO_CUR%NOTFOUND;    END LOOP;    -- LOG FINISH    MIG_UTL_PURGE.PRC_MIG_PGM_LOG (        I_LOG_MODE => 'LOG_FINISH', I_LOG_SEQ => V_LOG_SEQ, I_WORK_SEQ => V_WORK_SEQ,       I_SYS_NM => V_SYS_NM,       I_PROG_NM=> V_PROG_NM,        I_ENT_NM => V_ENT_NM,       I_TAB_NM =>  'PRD_PROD_CTL_ACT_GRP_DTL',   I_INS_ROW_CNT => V_INS_ROW_CNT, I_LOG_MSG => V_LOG_MSG_MAIN,     I_AUTHOR_NM => V_AUTHOR_NM,        O_LOG_SEQ => V_LOG_SEQ,     O_ERRNO => V_ERRNO,     O_ERRMSG => V_ERRMSG );    V_INS_ROW_CNT := 0;   -- SUB STEP PROCESS COUNT CLEAR    COMMIT;    CLOSE PC_NO_CUR;EXCEPTION WHEN OTHERS THEN    CLOSE PC_NO_CUR;    COMMIT;END;/