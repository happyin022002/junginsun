CREATE OR REPLACE FUNCTION PRD_GET_ERD_FNC/* ========================================================   1. Object Name      : PRD_GET_CCT_FNC   2. Version          : 1.0   3. Create Date      : 2010.05.06   4. Sub System       : Product Catalog   5. Author           : 조용인   6. Description      : CCT 산출   7. Revision History : 2010.05.06 조용인 최초 생성                       : 2010.08.23 - Day Type에 적용하는 -1일 Buffer 삭제                                    - Exclude Day 적용시 토요일 2일, 일요일1일 적용                                    - DIR(Bound) column이 삭제됨 추후 생성되는 값은 무조건 A로 Insert                                      Rank시 Dir Column 삭제.                                    - ETB/ETD Type에 CCT Hour 적용(등록된값 없는 경우 계산결과 그대로)                         2010.09.16 기존에는 CCT 최종결과에 Excl.Day 적용하였으나                                    ETB/ETD ~ CCT 사이에 Excl.Day가 포함된 경우 해당일수 제외하도록 변경                         2013.05.28 PRD_TML_CCT_MGMT 에 APLY_RAIL_CTNT 의 구분에 따른 순위지정                                    APLY_RAIL_CTNT: ['LOCAL', 'RAIL']중  RAIL 이 우선 순위 ======================================================== */(    I_POR IN VARCHAR2,    I_POL IN VARCHAR2,    I_VVD IN VARCHAR2,    I_CGO_TP_CD IN VARCHAR2  -- CCCT CGO_TP_CD (DG,DR,RF,AL)      ------------------------------PARAMETERS--------------------------------    I_YD_CD IN VARCHAR2,    -- CCT YARD (KRPUSHN)--    I_VSL_SLAN_CD IN VARCHAR2,  -- CCT VSL_SLAN_CD (KJS)--    I_VSL_SLAN_DIR_CD IN VARCHAR2,  -- CCT VSL_SLAN_DIR_CD (W) ::: 사용되지 않는 변수.2010.08.23--    I_CGO_TP_CD IN VARCHAR2,  -- CCCT CGO_TP_CD (DG,DR,RF,AL)  ----    I_ETB_DT IN DATE,   -- VVD ETB--    I_ETD_DT IN DATE    -- VVD ETD--    ,I_VVD_CD IN VARCHAR2    -----------------------------------------------------------------------) RETURN VARCHAR2authid current_userIS  V_OUT_VAL VARCHAR2(16) := NULL;  V_ERD DATE;  V_ERT_RCV_DT_SAT_FLG VARCHAR2(1) :='';  V_ERT_RCV_DT_SUN_FLG VARCHAR2(1) :='';  V_ERT_RCV_DT_HOL_FLG VARCHAR2(1) :='';  V_VPS_ETA_DT DATE;  V_VPS_ETB_DT DATE;  V_VPS_ETD_DT  DATE;  V_YD_CD  VARCHAR2(7) := NULL;  V_SLAN_CD VARCHAR2(3):= NULL;-----------------------------------  --  V_CCT DATE;--  GET_HOL VARCHAR2(1) :='';--  V_XCLD_HOL_HOL_FLG VARCHAR2(1);  IS_HOL BOOLEAN :=TRUE;  CNT NUMBER:=0;--  I_ETB VARCHAR2(8) := TO_CHAR(I_ETB_DT,'YYYYMMDD');--  I_ETD VARCHAR2(8) := TO_CHAR(I_ETD_DT,'YYYYMMDD');--  I_GAP NUMBER:=0;--  I_XCLD_DAY NUMBER:=0;BEGINDBMS_OUTPUT.ENABLE ;DBMS_OUTPUT.PUT_LINE('--------------1.I_VVD:'||I_VVD) ;    BEGINDBMS_OUTPUT.PUT_LINE('--------------START' ) ;        SELECT (VPS_ETA_DT - ERT_RCV_DT_FREE_DY) ERD,            VPS_ETA_DT,VPS_ETB_DT,VPS_ETD_DT,YD_CD,SLAN_CD, ERT_RCV_DT_SAT_FLG,ERT_RCV_DT_SUN_FLG, ERT_RCV_DT_HOL_FLG        INTO V_ERD, V_VPS_ETA_DT, V_VPS_ETB_DT, V_VPS_ETD_DT, V_YD_CD, V_SLAN_CD, V_ERT_RCV_DT_SAT_FLG, V_ERT_RCV_DT_SUN_FLG, V_ERT_RCV_DT_HOL_FLG        FROM (            SELECT VPS_ETA_DT,VPS_ETB_DT,VPS_ETD_DT,C.YD_CD,SLAN_CD,ERT_RCV_DT_FREE_DY ,ERT_RCV_DT_SAT_FLG,ERT_RCV_DT_SUN_FLG, ERT_RCV_DT_HOL_FLG---C.*,VSK.*            ,RANK() OVER (PARTITION BY VSK.YD_CD ORDER BY DECODE(LENGTH(VVD_CD),9,1,2 ) ,DECODE( CGO_TP_CD,I_CGO_TP_CD,1,2), DECODE(APLY_RAIL_CTNT, 'RAIL',1,2)  ) RNK            FROM PRD_TML_CCT_MGMT C,            (                SELECT VPS_ETA_DT,VPS_ETB_DT,VPS_ETD_DT,YD_CD,SLAN_CD  ,SKD_DIR_CD                FROM VSK_VSL_PORT_SKD                 WHERE VSL_CD = SUBSTR(I_VVD,1,4) --'YMRT'                AND SKD_VOY_NO = SUBSTR(I_VVD,5,4) --'0004'                AND SKD_DIR_CD = SUBSTR(I_VVD,9,1) --'W'                 AND VPS_PORT_CD = I_POL                 AND TURN_PORT_FLG||TURN_PORT_IND_CD NOT IN ('ND', 'NV','NF')                AND NVL(SKD_CNG_STS_CD,' ') <> 'S'                 AND ROWNUM =1                ORDER BY CLPT_SEQ            ) VSK            WHERE C.YD_CD =VSK.YD_CD            AND C.VSL_SLAN_CD = VSK.SLAN_CD            AND NVL(C.DELT_FLG,'N') <> 'Y'            AND C.VSL_SLAN_DIR_CD IN (VSK.SKD_DIR_CD,'A') -- PK이므로 그냥 유지. INDEX..            AND C.CGO_TP_CD IN (C.CGO_TP_CD,'AL')             AND DECODE (C.VVD_CD, 'ALL', DECODE(I_VVD, '', 'ALL', I_VVD),C.VVD_CD ) = DECODE(I_VVD, '', 'ALL', I_VVD)            AND C.ERT_RCV_DT_FREE_DY >0        )        WHERE RNK =1            AND ROWNUM=1        ;     DBMS_OUTPUT.PUT_LINE('1  V_ERD:' ||TO_CHAR(V_ERD,'YYYY/MM/DD hh24:mi:ss') ||' D CODE:'||TO_CHAR(V_ERD, 'D') );        EXCEPTION        	WHEN NO_DATA_FOUND THEN        		V_OUT_VAL := NULL;        		DBMS_OUTPUT.PUT_LINE('1 NO_DATA_FOUND'  );        	WHEN OTHERS THEN        		V_OUT_VAL := NULL;        		DBMS_OUTPUT.PUT_LINE('1 OTHERS'  );        	RETURN V_OUT_VAL;        END;     BEGIN        IF V_ERT_RCV_DT_SUN_FLG = 'Y' AND TO_CHAR(V_ERD, 'D') = '1' THEN -- 일요일이면            V_ERD := V_ERD -1;            END IF;    DBMS_OUTPUT.PUT_LINE('2 SUN_FLG V_ERD:' ||TO_CHAR(V_ERD,'YYYY/MM/DD hh24:mi:ss'));                IF V_ERT_RCV_DT_SAT_FLG = 'Y' AND TO_CHAR(V_ERD, 'D') = '7' THEN -- 토요일이면            V_ERD := V_ERD -1;            END IF;    DBMS_OUTPUT.PUT_LINE('3 SAT_FLG V_ERD:' ||TO_CHAR(V_ERD,'YYYY/MM/DD hh24:mi:ss'));         END;        WHILE IS_HOL AND CNT <30 LOOP        IF V_ERT_RCV_DT_HOL_FLG ='Y' AND  PRD_GET_HOL_DAY( SUBSTR(V_YD_CD,1,5), V_ERD  ) ='Y' THEN                         V_ERD := V_ERD-1;                    END IF;                IF PRD_GET_HOL_DAY( SUBSTR(V_YD_CD,1,5), V_ERD  ) ='X' or V_ERT_RCV_DT_HOL_FLG != 'Y' THEN             IS_HOL:=FALSE;        END IF;        CNT:=CNT+1;            END LOOP;     V_OUT_VAL := TO_CHAR(V_ERD,  'yyyy-mm-dd HH24:MI');    RETURN V_OUT_VAL;    END ;/