<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesAdvanceAuditDBDAOTesInvoiceAuditRSQL">
			<desc><![CDATA[TesInvoiceAudit]]></desc>
			<sql><![CDATA[
SELECT   
		  '' AS CHK
		, '' AS SEL_AUD_CD
		, '' AS S_SAVE_TP_CD	-- CONFIRM REMARK 저장 구분
		, RHQ_CD
		, INV_OFC_CD
		, COST_OFC_CD
		, YD_CD
		, VNDR_SEQ
		, TML_INV_TP_CD
		, INV_NO
		, TML_INV_RJCT_STS_CD
		, ISS_DT
		, INV_CFM_DT
		, INV_CFM_DT_YMD
		, CSR_NO
		, PAY_TERM
		, PAY_DUE_DT
		, PAY_DT
		, CSR_STS_CD
		, VSL_CD
		, SKD_VOY_NO
		, SKD_DIR_CD
		, VVD
		, IO_BND_CD
		, ATB_DT
		, INV_PRD_DT
		, FM_PRD_DT
		, TO_PRD_DT
		, CURR_CD
		, INV_AMT
		, EXPN_AUD_ESTM_AMT
		, DIFF_RTO
		, AMT_AUD_TGT_FLG
		, AUD_LGS_COST_CD_QTY
		, VRFY_RSLT_CD_CTNT
		, VOL_AUD_TGT_QTY
		, BAT_VOL_RSLT_CD
		, BAT_AMT_RSLT_CD
		, BAT_ESTM_VOL_RSLT_CD
		, AUTO_EXPN_AUD_STS_CD
		, EXPN_AUD_STS_CD
		, EXPN_AUD_SEQ
		, EAC_FLG
		, '' AS UPD_USR_ID
		, BAT_RSLT
		, CALC_TP_CD_CTNT
		, AUD_CASE_DTL_QTY
		, EXPN_AUD_RSLT_RMK
		, EXPN_AUD_RSLT_USR_ID
		, (SELECT X.USR_NM FROM COM_USER X WHERE X.USR_ID = EXPN_AUD_RSLT_USR_ID) AS EXPN_AUD_RSLT_USR_NM
		, CRE_USR_ID
		, INV_CRE_USR_NM
		, UPD_DT
		, DECODE(EXPN_AUD_STS_CD, NULL, '', AUD_UPD_DT) AS AUD_UPD_DT
		, UPD_USR_ID
		, AUD_UPD_USR_ID
		, DECODE(EXPN_AUD_STS_CD, NULL, '', AUD_UPD_USR_NM) AS AUD_UPD_USR_NM
		, ATCH_FILE_LNK_ID
		, EXPN_AUD_RSLT_CD
		, BAT_PROG_STS_CD
		, INV_AUD_CURR_CD
		, INV_AUD_DIFF_AMT
		, INV_AUD_USD_DIFF_AMT
FROM (
	  SELECT   A.RHQ_CD
			, A.INV_OFC_CD
			, A.COST_OFC_CD
			, A.YD_CD
			, A.VNDR_SEQ
			, A.TML_INV_TP_CD
			, A.INV_NO
			, H.TML_INV_RJCT_STS_CD
			, TO_CHAR(A.ISS_DT, 'YYYY-MM-DD') AS ISS_DT
			, TO_CHAR(A.INV_CFM_DT, 'YYYYMMDDHH24MISS') AS INV_CFM_DT
			, TO_CHAR(A.INV_CFM_DT, 'YYYY-MM-DD') AS INV_CFM_DT_YMD
			, H.CSR_NO
			, CASE WHEN AH.VNDR_TERM_NM IS NULL
				THEN (SELECT CASE WHEN X.GEN_PAY_TERM_CD = 'O60'
				   THEN '0'
				   ELSE X.GEN_PAY_TERM_CD
				 END
				  FROM MDM_VENDOR X
				 WHERE X.VNDR_SEQ = H.VNDR_SEQ
				)
				ELSE AH.VNDR_TERM_NM 
			  END AS PAY_TERM
			, CASE WHEN AH.VNDR_TERM_NM IS NOT NULL AND SUBSTR(AH.VNDR_TERM_NM, 0, 1) = 'O'
				THEN TO_CHAR(TO_DATE(AH.INV_TERM_DT, 'YYYY-MM-DD'))
				ELSE TO_CHAR(TO_DATE(AH.INV_TERM_DT, 'YYYY-MM-DD') + TO_NUMBER(DECODE(AH.VNDR_TERM_NM, 'O60', '0', AH.VNDR_TERM_NM)), 'YYYY-MM-DD')
			  END PAY_DUE_DT
			, TO_CHAR(H.PAY_DT, 'YYYY-MM-DD') AS PAY_DT
			, CASE WHEN H.TML_INV_STS_CD = 'C' THEN 'C' -- Invoice Confirmed
				WHEN H.TML_INV_STS_CD = 'D' THEN 'D' -- Paid
				WHEN H.TML_INV_RJCT_STS_CD IN ('RJ') AND AH.AFT_ACT_FLG IS NULL THEN 'R' -- Disapproved
				WHEN AH.IF_FLG IS NULL AND AH.APRO_FLG = 'N' AND AH.RQST_APRO_STEP_FLG = 'Y' THEN 'L' -- Requesting Approval
				WHEN AH.IF_FLG IS NULL 
					THEN CASE WHEN AH.APRO_FLG = 'Y' THEN 'S' -- Sending
							  ELSE 'A' -- Approval Requested
						 END
				WHEN AH.IF_FLG = 'E' THEN 'E' -- I/F Error
				WHEN AH.RCV_ERR_FLG = 'E' THEN 'J' -- A/P Rejected
				WHEN AH.IF_FLG = 'Y' AND AH.RCV_ERR_FLG IS NULL THEN 'P' -- I/F Success
				ELSE 'ALL'
			  END AS CSR_STS_CD
			, A.VSL_CD
			, A.SKD_VOY_NO
			, A.SKD_DIR_CD
			, A.VSL_CD || A.SKD_VOY_NO || A.SKD_DIR_CD AS VVD
			, A.IO_BND_CD
			, TO_CHAR(A.ATB_DT, 'YYYY-MM-DD') AS ATB_DT
			, DECODE(A.FM_PRD_DT, NULL, '', SUBSTR(A.FM_PRD_DT, 0, 4) ||'-'|| SUBSTR(A.FM_PRD_DT, 5, 2) || '-' || SUBSTR(A.FM_PRD_DT, 7, 2) || '~' || SUBSTR(A.TO_PRD_DT, 0, 4) ||'-'|| SUBSTR(A.TO_PRD_DT, 5, 2) || '-' || SUBSTR(A.TO_PRD_DT, 7, 2)) AS INV_PRD_DT
			, A.FM_PRD_DT
			, A.TO_PRD_DT
			, A.CURR_CD
			, A.INV_AMT
			, NVL(A.EXPN_AUD_ESTM_AMT, 0) AS EXPN_AUD_ESTM_AMT
			, DECODE(A.EXPN_AUD_ESTM_AMT, 0, NULL, ROUND(((A.INV_AMT - A.EXPN_AUD_ESTM_AMT) / DECODE(A.EXPN_AUD_ESTM_AMT, 0, 1, A.EXPN_AUD_ESTM_AMT)) * 100, 1)) AS DIFF_RTO
			, A.AMT_AUD_TGT_FLG
			, NVL(A.AUD_LGS_COST_CD_QTY, 0) AS AUD_LGS_COST_CD_QTY
			, A.VRFY_RSLT_CD_CTNT
			, NVL(A.VOL_AUD_TGT_QTY, 0) AS VOL_AUD_TGT_QTY
			, A.BAT_VOL_RSLT_CD
			, A.BAT_AMT_RSLT_CD
			, A.BAT_ESTM_VOL_RSLT_CD
			, A.AUTO_EXPN_AUD_STS_CD
			, A.EXPN_AUD_STS_CD
			, A.EXPN_AUD_SEQ
			, ( SELECT DECODE(MAX(EAC_NO), NULL, 'N', 'I')
				  FROM EAS_TML_AUD_DTL
				 WHERE INV_NO   	= A.INV_NO
				   AND VNDR_SEQ  	= A.VNDR_SEQ
				   AND INV_CFM_DT  	= A.INV_CFM_DT
				   AND EXPN_AUD_SEQ = A.EXPN_AUD_SEQ
			   ) AS EAC_FLG
			, (CASE WHEN A.BAT_VOL_RSLT_CD = 'S' AND A.BAT_AMT_RSLT_CD = 'S' AND A.BAT_ESTM_VOL_RSLT_CD = 'S' THEN 'Success'
					WHEN NVL(A.AUD_DTL_TGT_QTY, 0) - NVL(A.BAT_VOL_RSLT_CD_QTY, 0) > 0 
						 AND NVL(A.AUD_DTL_TGT_QTY, 0) - NVL(A.BAT_AMT_RSLT_CD_QTY, 0) > 0 
						 AND NVL(A.AUD_DTL_TGT_QTY, 0) - NVL(A.BAT_ESTM_VOL_RSLT_CD_QTY, 0) > 0 THEN 'P.Fail'
					ELSE 'Fail'
			  END) BAT_RSLT
			, NVL(A.AUD_LGS_COST_CD_QTY, 0) || '/' || A.AUD_DTL_TGT_QTY AS AUD_CASE_DTL_QTY
			, A.CALC_TP_CD_CTNT
			, A.EXPN_AUD_RSLT_RMK
			, A.EXPN_AUD_RSLT_USR_ID
			, H.CRE_USR_ID
			, (SELECT USR_NM FROM COM_USER WHERE USR_ID = H.CRE_USR_ID) AS INV_CRE_USR_NM
			, A.UPD_DT
			, DECODE(A.EXPN_AUD_STS_CD, NULL, '', TO_CHAR(A.UPD_DT, 'YYYYMMDD')) AS AUD_UPD_DT
			, A.UPD_USR_ID
			, DECODE(A.EXPN_AUD_STS_CD, NULL, '', A.UPD_USR_ID) AS AUD_UPD_USR_ID
			, DECODE(A.EXPN_AUD_STS_CD, NULL, '', (SELECT USR_NM FROM COM_USER WHERE USR_ID = A.UPD_USR_ID)) AS AUD_UPD_USR_NM
			, ATCH_FILE_LNK_ID
			, EXPN_AUD_RSLT_CD
			, (SELECT MAX(BAT_PROG_STS_CD) 
				FROM EAS_AUTO_AUD_BAT B 
				WHERE B.SUB_SYS_CD = 'TES' 
				AND B.INV_NO = A.INV_NO 
				AND B.INV_VNDR_SEQ = A.VNDR_SEQ 
				AND INV_CFM_DT = A.INV_CFM_DT
				AND	NVL(B.VSL_CD, 'X') = NVL(A.VSL_CD, 'X') 
				AND NVL(B.SKD_VOY_NO, 'X') = NVL(A.SKD_VOY_NO, 'X') 
				AND NVL(B.SKD_DIR_CD, 'X') = NVL(A.SKD_DIR_CD, 'X') 
				AND NVL(B.IO_BND_CD, 'X') = NVL(A.IO_BND_CD, 'X')
				AND B.CRE_DT > SYSDATE - 1
				) AS BAT_PROG_STS_CD
			, A.AUD_CURR_CD AS INV_AUD_CURR_CD
			, A.AUD_DIFF_AMT AS INV_AUD_DIFF_AMT
			, A.AUD_USD_DIFF_AMT AS INV_AUD_USD_DIFF_AMT
	  FROM EAS_TML_AUD A
			, TES_TML_SO_HDR H
			, AP_INV_HDR AH
	  WHERE 1 = 1
	  AND  A.YD_CD               = H.YD_CD
	  AND  A.VNDR_SEQ            = H.VNDR_SEQ
	  AND  A.INV_NO              = H.INV_NO
	  AND  A.INV_CFM_DT          = H.INV_CFM_DT
	  AND  NVL(H.DELT_FLG, 'N')	 = 'N'
	  AND  H.TML_INV_STS_CD      <> 'R'
	  AND  H.TML_INV_RJCT_STS_CD <> 'RJ'
	  AND  AH.RCV_ERR_FLG(+) 	 <> 'E'
	  AND  H.CSR_NO  			 = AH.CSR_NO(+)
	  -- Detail중 한건이라도 Estimation 물량집계 데이타가 있는 데이타를 기본으로 보여주고 Estimation 물량이 없을 경우 Confirm후 14일 이후 심사대상으로 조회한다.
	  -- Estimation 물량이 없을 경우 Confirm후 5일 이후 심사대상으로 조회한다. 2017.08.11
	  -- Confirm후 5일이후 조건 잠시 삭제 2018.05.03
	  AND	( ((NVL(A.AUD_DTL_TGT_QTY, 0) - NVL(A.BAT_ESTM_VOL_RSLT_CD_QTY, 0)) > 0) 
	  OR	( ((NVL(A.AUD_DTL_TGT_QTY, 0) - NVL(A.BAT_ESTM_VOL_RSLT_CD_QTY, 0)) = 0) 
	  --AND	A.INV_CFM_DT < SYSDATE - 5
      ))
#if (${s_rhq_ofc_cd} != '')
	AND  A.RHQ_CD = @[s_rhq_ofc_cd]
#end

#if (${s_inv_ofc_cd} != '')
	AND  A.INV_OFC_CD = @[s_inv_ofc_cd]
#end
	AND  A.INV_CFM_DT BETWEEN TO_DATE(REPLACE(@[s_from_inv_cfm_dt],'-',''),'YYYYMMDD') AND TO_DATE(REPLACE(@[s_to_inv_cfm_dt],'-',''),'YYYYMMDD') + 0.99999

#if (${s_tml_inv_tp_cd} != '')
	AND  A.TML_INV_TP_CD = @[s_tml_inv_tp_cd]
#end

#if (${s_loc_cd} != '')
	AND  A.YD_CD LIKE @[s_loc_cd]||@[s_nod_cd]||'%'
#end

#if (${s_vsl_cd} != '')
	AND  A.VSL_CD = @[s_vsl_cd]
#end

#if (${s_vndr_seq} != '')
	AND  A.VNDR_SEQ = @[s_vndr_seq]
#end

-- VO 생성시 IN절 조건 삭제후 실행
#if (${s_inv_no}!= '')
	AND A.INV_NO IN (
 #foreach( ${key} IN ${invNos}) 
    #if($velocityCount < $invNos.size()) 
    '${key}',
    #else 
    '${key}'
    #end 
 #end
	)
#end

#if (${s_csr_no}!= '')
	AND H.CSR_NO IN (
 #foreach( ${key} IN ${csrNos}) 
    #if($velocityCount < $csrNos.size()) 
    '${key}',
    #else 
    '${key}'
    #end 
 #end
	)
#end

	) X
WHERE 1 = 1
-- CSR STATUS
#if (${s_csr_sts_cd} != '')
AND  CSR_STS_CD = @[s_csr_sts_cd]
#end
-- DIFF
#if (${s_diff_sgn} == '1')
AND  DIFF_RTO < @[s_diff_rto]
#elseif (${s_diff_sgn} == '2')
AND  DIFF_RTO > @[s_diff_rto]
#elseif (${s_diff_sgn} == '3')
AND  DIFF_RTO = @[s_diff_rto]
#elseif (${s_diff_sgn} == '4')
AND  DIFF_RTO <= @[s_diff_rto]
#elseif (${s_diff_sgn} == '5')
AND  DIFF_RTO >= @[s_diff_rto]
#end
-- AUDIT STATUS - AUTO
#if (${s_auto_expn_aud_sts_cd} != '')
AND  AUTO_EXPN_AUD_STS_CD = @[s_auto_expn_aud_sts_cd]
#end

#if (${s_expn_aud_sts_cd} == 'N')
AND		EXPN_AUD_STS_CD IS NULL
#elseif (${s_expn_aud_sts_cd} == 'D')
AND		EXPN_AUD_STS_CD IS NOT NULL
#elseif(${s_expn_aud_sts_cd} == 'P' || ${s_expn_aud_sts_cd} == 'E' || ${s_expn_aud_sts_cd} == 'A')	
AND		EXPN_AUD_STS_CD	= @[s_expn_aud_sts_cd]
#elseif (${s_expn_aud_sts_cd} == 'I')
AND		EAC_FLG = @[s_expn_aud_sts_cd]
#end			]]></sql>
			<params>
				<param name="s_rhq_ofc_cd" type="12" value="" out="N"/>
				<param name="s_inv_ofc_cd" type="12" value="" out="N"/>
				<param name="s_from_inv_cfm_dt" type="12" value="" out="N"/>
				<param name="s_to_inv_cfm_dt" type="12" value="" out="N"/>
				<param name="s_tml_inv_tp_cd" type="12" value="" out="N"/>
				<param name="s_loc_cd" type="12" value="" out="N"/>
				<param name="s_nod_cd" type="12" value="" out="N"/>
				<param name="s_vsl_cd" type="12" value="" out="N"/>
				<param name="s_vndr_seq" type="12" value="" out="N"/>
				<param name="s_csr_sts_cd" type="12" value="" out="N"/>
				<param name="s_diff_rto" type="12" value="" out="N"/>
				<param name="s_auto_expn_aud_sts_cd" type="12" value="" out="N"/>
				<param name="s_expn_aud_sts_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
