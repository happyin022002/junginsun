<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesAudDBDAOsearchTesRowDataListRSQL">
			<desc><![CDATA[searchTesRowDataList]]></desc>
			<sql><![CDATA[
SELECT
    	RHQ,
		INV_OFC_CD,
		COST_OFC_CD,
		EXE_YRMON,
		ACT_VVD_CD,
		ATB_DT,
		INV_NO,
		CRE_USR_NM,
		ISS_DT,
		RCV_DT,
		CRE_DT,
		ACCT_CD,
		CNT_CD,
		N1ST_NOD_CD,
		SP_CODE,
		SP_NAME,
		INVOICE_STATUS,  
		CALC_TYPE,   
		COA_COST_SRC_CD,    
		CNTR_TPSZ_CD, 
		IO_BND_CD,
		DCGO_IND_CD,
		RC_FLG,
		TML_WRK_DY_CD,
		IOC_CD,
    	TML_TRNS_MOD_CD,
		LANE_CD,
		TIER,
		CALC_VOL_QTY,
		RVIS_VOL_QTY,
		CALC_VOL,
		RVIS_VOL,
		VOL_TR_UT_CD,
		RATE,  
		USD_RATE,
		AGMT_CURR,
		INV_XCH_RT,
		INV_AMT,
		AMOUNT,
		CALC_RMK,
		TML_CRR_CD,  
		N3PTY_FLG,
 		ROW_COUNT
 FROM	(   
      SELECT	DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMUR', 'E', 'HAMUR', 'M', 'NYCNA', 'A', O.AR_HD_QTR_OFC_CD)) RHQ,  
      		TES.INV_OFC_CD,
      		TES.COST_OFC_CD,
      		TES.EXE_YRMON,
      		TES.VVD ACT_VVD_CD,
      		TES.ATB_DT,
      		TES.INV_NO,
			TES.CRE_USR_NM,
      		TES.ISS_DT,
      		TES.RCV_DT,
      		TES.CRE_DT,
      		TES.ACCT_CD,
      		TES.CNT_CD,
      		TES.YD_CD N1ST_NOD_CD,
      		TES.SP_CODE,
      		TES.SP_NAME,
      		TES.TML_INV_STS_CD INVOICE_STATUS,  
      		TES.CALC_TYPE,   
      		TES.LGS_COST_CD COA_COST_SRC_CD,    
      		TES.CNTR_TPSZ_CD, 
      		TES.IO_BND_CD,
      		TES.DCGO_IND_CD,
      		TES.RC_FLG,
      		TES.TML_WRK_DY_CD,
      		TES.IOC_CD,
          	DECODE(TES.TML_TRNS_MOD_CD,'V','Mother','R','Rail','B','Barge','T','Truck','O','Other','S','Same','F','Feeder','') TML_TRNS_MOD_CD,
      		TES.LANE_CD,
      		TES.TIER,
      		TES.CALC_VOL_QTY,
      		TES.RVIS_VOL_QTY,
      		SUM(TES.CALC_VOL_QTY) CALC_VOL,
      		SUM(TES.RVIS_VOL_QTY) RVIS_VOL,
      		TES.VOL_TR_UT_CD,
      		TES.CTRT_RT RATE,  
      		NVL(ROUND(TES.CTRT_RT/G.USD_LOCL_XCH_RT, 2), 0) USD_RATE,
      		TES.CURR_CD AGMT_CURR,
      		TES.INV_XCH_RT,
      		TES.INV_AMT,
      		SUM(NVL(ROUND(TES.INV_AMT / G.USD_LOCL_XCH_RT, 2),0)) AMOUNT,
      		TES.CALC_RMK,
      		TES.TML_CRR_CD,  
      		TES.N3PTY_FLG,
       		ROW_NUMBER() OVER (ORDER BY TES.INV_NO ASC) AS ROW_NUM,
		    COUNT(TES.INV_NO) OVER() AS ROW_COUNT
      FROM	(
      		SELECT  DECODE(H.TML_INV_STS_CD,'R','Received','C','Comfirm','A','Approval Request','P','A/P Interfaced','D','Paid','') TML_INV_STS_CD,
      				SUBSTR(A.GL_DT, 1, 6) EXE_YRMON,
      				DECODE(D.DCGO_IND_CD,'','N',D.DCGO_IND_CD) DCGO_IND_CD,
      				D.ACCT_CD,
      				SUBSTR(H.YD_CD,0,2) CNT_CD,
      				D.TML_WRK_DY_CD,
      				D.LGS_COST_CD,
      				D.RC_FLG,
      				H.INV_OFC_CD, 
      				TO_CHAR(D.ATB_DT,'YYYY-MM-DD') ATB_DT,
      				TO_CHAR(H.ISS_DT,'YYYY-MM-DD') ISS_DT,
      				TO_CHAR(H.RCV_DT,'YYYY-MM-DD') RCV_DT,
      				TO_CHAR(H.CRE_DT,'YYYY-MM-DD HH24:MI:SS') CRE_DT,
      				D.VOL_TR_UT_CD,
      				D.TML_TRNS_MOD_CD,
      				D.INV_XCH_RT,
      				H.YD_CD,
      				D.IOC_CD,
      				D.LANE_CD,
      				NVL(D.FM_TR_VOL_VAL,'1')||' ~ '||NVL(D.TO_TR_VOL_VAL,'99999')  TIER,
      				D.VSL_CD||D.SKD_VOY_NO||D.SKD_DIR_CD VVD,
      				D.N3PTY_FLG,
      				H.CSR_NO,
      				H.INV_NO,
      				D.CNTR_TPSZ_CD,
      				D.CALC_VOL_QTY,
      				H.CURR_CD,
      				D.RVIS_VOL_QTY,
      				D.TML_CRR_CD,      
      				D.INV_AMT,
      				D.CTRT_RT,
      				D.CALC_RMK,
      				DECODE(D.CALC_TP_CD ,'A','Auto','M','Manual','') CALC_TYPE,
      				H.VNDR_SEQ SP_CODE,
      				(SELECT VNDR_LGL_ENG_NM
      				FROM MDM_VENDOR
      				WHERE VNDR_SEQ = H.VNDR_SEQ) SP_NAME
      				, H.COST_OFC_CD
      				, D.IO_BND_CD
					, (SELECT USR_NM FROM COM_USER WHERE USR_ID = H.CRE_USR_ID) CRE_USR_NM
      		FROM	TES_TML_SO_HDR H
      				, TES_TML_SO_DTL D
      				, TES_TML_SO_COST SC
      				, TES_LGS_COST LC
      				, AP_INV_HDR A
					, COM_APRO_CSR_DTL C
					, COM_APRO_RQST_HDR R
      		WHERE	1	= 1
      		AND		H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD
      		AND		H.TML_SO_SEQ		= D.TML_SO_SEQ
      		AND		NVL(H.DELT_FLG, 'N') <> 'Y'
      		AND		D.LGS_COST_CD	= LC.LGS_COST_CD
      		AND		D.LGS_COST_CD	= SC.LGS_COST_CD
			--// CHM-201642099 TES Intensive Audit 검색 조건 code 추가 (2016-06-16)
      		AND		H.CSR_NO			= A.CSR_NO(+)
			AND		H.CSR_NO			= C.CSR_NO(+)
			AND		C.APRO_RQST_NO		= R.APRO_RQST_NO(+)
			#if (${inv_date_type} == 'I') 	-- ISSUED DATE
			AND		H.ISS_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD')+0.99999
			#elseif (${inv_date_type} == 'R')	-- RECEIVED DATE
			AND		H.RCV_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD')+0.99999
			#elseif (${inv_date_type} == 'P')	-- INVOICE UPDATE DATE
			AND		H.LOCL_UPD_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD')+0.99999
			#elseif (${inv_date_type} == 'A')	-- ARRROVAL REQUESTED DATE
			AND		( (R.RQST_ST_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999 )
			OR		( A.CSR_APRO_STEP_ASGN_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999 ) )
			#elseif (${inv_date_type} == 'C')	-- CONFIRMED DATE
			AND		H.INV_CFM_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD')+0.99999
			#elseif (${inv_date_type} == 'U')	-- I/F STATUS UPDATED
			AND		A.IF_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999
			#end
      
      --		--// 2. YARD CODE
      		#if ( ${yd_cd} != '' ) 
      		AND		H.YD_CD		 = @[yd_cd]
      		#end
      
      --		--// 3. S/P CODE
      		#if ( ${vndr_seq} != '' ) 
      		AND		H.VNDR_SEQ		 = @[vndr_seq] 	
      		#end
      
      --		--// 4. Manual Input Only
      		#if ( ${manual_check} != '' ) 
      		AND		D.CALC_TP_CD = 'M' 	-- Check시에 조건 추가
      		#end
      
      --		--// 5. VVD
      		#if ( ${vvd} != '' )
      		AND		D.VSL_CD || D.SKD_VOY_NO || D.SKD_DIR_CD = @[vvd]
      		#end
      
      --		--// 6. Cost Office
      		#if ( ${cost_ofc_cd} != '' )
      		AND		H.COST_OFC_CD	= @[cost_ofc_cd] 
      		#end
      
      --		--// 7. Invoice Office
      		#if ( ${inv_ofc_cd} != '' )
      		AND		H.INV_OFC_CD	= @[inv_ofc_cd]
      		#end
      
      --		--// 8. Inv Status
      		#if ( ${tml_inv_sts_cd} != '' )
      		AND		H.TML_INV_STS_CD = @[tml_inv_sts_cd]
      		#end
      
      --		--// 9 - 1. Cost Code Type 대분류 1차
      		#if ( ${lgs_cost_subj_cd} != '' )
      		AND		LC.LGS_COST_SUBJ_CD = @[lgs_cost_subj_cd]
      		#end
      
       -- Cost Code Type 세분류 2차 조회시 (MULTI 리스트로 파라메터 받아 loop문에서 처리)
        	#if ($lgs_cost_dtl_cd.size() > 0)
              		AND   LC.LGS_COST_CD IN (
        		#foreach($key in ${lgs_cost_dtl_cd}) 
         			#if($velocityCount < $lgs_cost_dtl_cd.size()) 
        				'$key', 
        			#else 
        				'$key' 
        			#end 
        
        		#end
        		)
        	#end
     
      		) TES
      		, GL_MON_XCH_RT G
      		, MDM_ORGANIZATION O
      		, MDM_LOCATION L
      WHERE	TES.CURR_CD = G.CURR_CD
      AND		TES.EXE_YRMON = G.ACCT_XCH_RT_YRMON
      AND		G.ACCT_XCH_RT_LVL = 1
      AND		TES.INV_OFC_CD = O.OFC_CD(+)
      AND		O.LOC_CD     = L.LOC_CD(+)
      GROUP BY 
      		DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMUR', 'E', 'HAMUR', 'M', 'NYCNA', 'A', O.AR_HD_QTR_OFC_CD)),
      		TES.INV_OFC_CD,
      		TES.COST_OFC_CD,
      		TES.EXE_YRMON,
      		TES.VVD,
      		TES.ATB_DT,
      		TES.INV_NO,
			TES.CRE_USR_NM,
      		TES.ISS_DT,
      		TES.RCV_DT,
      		TES.CRE_DT,
      		TES.ACCT_CD,
      		TES.CNT_CD,
      		TES.YD_CD,
      		TES.SP_CODE,
      		TES.SP_NAME,
      		TES.TML_INV_STS_CD,  
      		TES.CALC_TYPE,   
      		TES.LGS_COST_CD,    
      		TES.CNTR_TPSZ_CD, 
      		TES.IO_BND_CD,
      		TES.DCGO_IND_CD,
      		TES.RC_FLG,
      		TES.TML_WRK_DY_CD,
      		TES.IOC_CD,
      		DECODE(TES.TML_TRNS_MOD_CD,'V','Mother','R','Rail','B','Barge','T','Truck','O','Other','S','Same','F','Feeder',''),
      		TES.LANE_CD,
      		TES.TIER,
      		TES.CALC_VOL_QTY,
      		TES.RVIS_VOL_QTY,
      		TES.VOL_TR_UT_CD,
      		TES.CTRT_RT,  
      		NVL(ROUND(TES.CTRT_RT/G.USD_LOCL_XCH_RT, 2), 0),
      		TES.CURR_CD,
      		TES.INV_XCH_RT,
      		TES.INV_AMT,
      		TES.CALC_RMK,
      		TES.TML_CRR_CD,  
      		TES.N3PTY_FLG
		)
  WHERE    ROW_NUM >= (@[pagerows] * (@[page_no] - 1) + 1)
  AND    ROW_NUM <= (@[pagerows] * @[page_no])			]]></sql>
			<params>
				<param name="fm_prd_dt" type="12" value="" out="N"/>
				<param name="to_prd_dt" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="cost_ofc_cd" type="12" value="" out="N"/>
				<param name="inv_ofc_cd" type="12" value="" out="N"/>
				<param name="tml_inv_sts_cd" type="12" value="" out="N"/>
				<param name="lgs_cost_subj_cd" type="12" value="" out="N"/>
				<param name="pagerows" type="12" value="" out="N"/>
				<param name="page_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
