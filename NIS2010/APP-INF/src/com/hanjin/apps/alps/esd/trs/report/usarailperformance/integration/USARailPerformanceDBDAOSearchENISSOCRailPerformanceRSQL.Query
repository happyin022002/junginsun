<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="USARailPerformanceDBDAOSearchENISSOCRailPerformanceRSQL">
			<desc><![CDATA[searchENISSOCRailPerformance SELECT]]></desc>
			<sql><![CDATA[
SELECT
#if( ${loc_on} == 'L' )
	'' MONTH,
	'' WEEK,
#else
	MONTH,
	WEEK,
#end
    'International' COMPANY,
    RAIL_CODE,
    RAIL_NAME,
    FULL_EMPTY,
    '-' BOUND,
#if( ${agmt_chk} == 'Y' )
	AGMT_REF_NO,
#else
	'' AGMT_REF_NO,
#end
    '-' SLAN_CD  ,
    '-' VVD      ,
    FM,
    T_O,
    CURR,
    SUM(ROUND(VOL_20,0))  VOL_20,
    SUM(ROUND(VOL_40,0))   VOL_40,
    SUM(ROUND(VOL_40HC,0))   VOL_40HC,
    SUM(ROUND(VOL_45,0)) VOL_45,
    SUM(ROUND(TOT_VOL,0))  TOT_VOL,

	SUM(LOC_BZC_AMT_20) LOC_BZC_AMT_20,
	SUM(LOC_FUEL_AMT_20) LOC_FUEL_AMT_20,
	SUM(LOC_OVR_HZD_AMT_20) LOC_OVR_HZD_AMT_20,
	SUM(LOC_TTL_AMT_20) LOC_TTL_AMT_20,
	SUM(USD_BZC_AMT_20) USD_BZC_AMT_20,
	SUM(USD_FUEL_AMT_20) USD_FUEL_AMT_20,
	SUM(USD_OVR_HZD_AMT_20) USD_OVR_HZD_AMT_20,
	SUM(USD_TTL_AMT_20) USD_TTL_AMT_20,
	
	SUM(LOC_BZC_AMT_40) LOC_BZC_AMT_40,
	SUM(LOC_FUEL_AMT_40) LOC_FUEL_AMT_40,
	SUM(LOC_OVR_HZD_AMT_40) LOC_OVR_HZD_AMT_40,
	SUM(LOC_TTL_AMT_40) LOC_TTL_AMT_40,
	SUM(USD_BZC_AMT_40) USD_BZC_AMT_40,
	SUM(USD_FUEL_AMT_40) USD_FUEL_AMT_40,
	SUM(USD_OVR_HZD_AMT_40) USD_OVR_HZD_AMT_40,
	SUM(USD_TTL_AMT_40) USD_TTL_AMT_40,
	
	SUM(LOC_BZC_AMT_40HC) LOC_BZC_AMT_40HC,
	SUM(LOC_FUEL_AMT_40HC) LOC_FUEL_AMT_40HC,
	SUM(LOC_OVR_HZD_AMT_40HC) LOC_OVR_HZD_AMT_40HC,
	SUM(LOC_TTL_AMT_40HC) LOC_TTL_AMT_40HC,
	SUM(USD_BZC_AMT_40HC) USD_BZC_AMT_40HC,
	SUM(USD_FUEL_AMT_40HC) USD_FUEL_AMT_40HC,
	SUM(USD_OVR_HZD_AMT_40HC) USD_OVR_HZD_AMT_40HC,
    SUM(USD_TTL_AMT_40HC) USD_TTL_AMT_40HC,

	SUM(LOC_BZC_AMT_45) LOC_BZC_AMT_45,
	SUM(LOC_FUEL_AMT_45) LOC_FUEL_AMT_45,
	SUM(LOC_OVR_HZD_AMT_45) LOC_OVR_HZD_AMT_45,
	SUM(LOC_TTL_AMT_45) LOC_TTL_AMT_45,
	SUM(USD_BZC_AMT_45) USD_BZC_AMT_45,
	SUM(USD_FUEL_AMT_45) USD_FUEL_AMT_45,
	SUM(USD_OVR_HZD_AMT_45) USD_OVR_HZD_AMT_45,
	SUM(USD_TTL_AMT_45) USD_TTL_AMT_45,
	
	SUM(TOT_LOC_BZC_AMT)  TOT_LOC_BZC_AMT,
	SUM(TOT_LOC_FUEL_AMT)  TOT_LOC_FUEL_AMT,
	SUM(TOT_LOC_OVR_HZD_AMT)  TOT_LOC_OVR_HZD_AMT,
	SUM(TOT_LOC_TTL_AMT)  TOT_LOC_TTL_AMT,
	SUM(TOT_USD_BZC_AMT) TOT_USD_BZC_AMT,
	SUM(TOT_USD_FUEL_AMT) TOT_USD_FUEL_AMT,
	SUM(TOT_USD_OVR_HZD_AMT) TOT_USD_OVR_HZD_AMT,
	SUM(TOT_USD_TTL_AMT) TOT_USD_TTL_AMT
	    
FROM (
SELECT
    SO_CRE_YRMON MONTH,
	WEEK WEEK,
    'International' COMPANY,
    WO_VNDR_SEQ  RAIL_CODE,
    TRS_COMMON_PKG.GET_VNDR_FULL_NM_FNC(WO_VNDR_SEQ) RAIL_NAME,
    DECODE(CGO_TP_CD  , 'F', 'Full', 'M', 'Empty', CGO_TP_CD  ) FULL_EMPTY,
    DECODE(TRSP_BND_CD, 'I', 'In'  , 'O', 'Out'  , TRSP_BND_CD) BOUND,
#if( ${agmt_chk} == 'Y' )
	AGMT_REF_NO,
#end
    SLAN_CD  ,
    VVD      ,
    FM_NOD_CD FM,
    TO_NOD_CD T_O,
    CURR_CD  CURR,
    SUM(CNTR_20_CNT)  VOL_20,
    SUM(CNTR_40_CNT)   VOL_40,
    SUM(CNTR_40HC_CNT)   VOL_40HC,
    SUM(CNTR_45_CNT) VOL_45,
    SUM(CNTR_20_CNT) + SUM(CNTR_40_CNT) + SUM(CNTR_40HC_CNT) + SUM(CNTR_45_CNT)  TOT_VOL,
	SUM(CNTR_20_BZC_AMT) LOC_BZC_AMT_20,
	SUM(CNTR_20_FUEL_AMT) LOC_FUEL_AMT_20,
	SUM(CNTR_20_OVR_HZD_AMT) LOC_OVR_HZD_AMT_20,
	SUM(CNTR_20_TTL_AMT) LOC_TTL_AMT_20,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_BZC_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_BZC_AMT), SO_CRE_YRMON),2) END USD_BZC_AMT_20,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_FUEL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_FUEL_AMT), SO_CRE_YRMON),2) END USD_FUEL_AMT_20,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_OVR_HZD_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_OVR_HZD_AMT), SO_CRE_YRMON),2) END USD_OVR_HZD_AMT_20,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_TTL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_TTL_AMT), SO_CRE_YRMON),2) END USD_TTL_AMT_20,

	SUM(CNTR_40_BZC_AMT) LOC_BZC_AMT_40,
	SUM(CNTR_40_FUEL_AMT) LOC_FUEL_AMT_40,
	SUM(CNTR_40_OVR_HZD_AMT) LOC_OVR_HZD_AMT_40,
	SUM(CNTR_40_TTL_AMT) LOC_TTL_AMT_40,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40_BZC_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_BZC_AMT), SO_CRE_YRMON),2) END USD_BZC_AMT_40,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40_FUEL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_FUEL_AMT), SO_CRE_YRMON),2) END USD_FUEL_AMT_40,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40_OVR_HZD_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_OVR_HZD_AMT), SO_CRE_YRMON),2) END USD_OVR_HZD_AMT_40,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40_TTL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_TTL_AMT), SO_CRE_YRMON),2) END USD_TTL_AMT_40,

	SUM(CNTR_40HC_BZC_AMT) LOC_BZC_AMT_40HC,
	SUM(CNTR_40HC_FUEL_AMT) LOC_FUEL_AMT_40HC,
  	SUM(CNTR_40HC_OVR_HZD_AMT) LOC_OVR_HZD_AMT_40HC,
  	SUM(CNTR_40HC_TTL_AMT) LOC_TTL_AMT_40HC,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40HC_BZC_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_BZC_AMT), SO_CRE_YRMON),2) END USD_BZC_AMT_40HC,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40HC_FUEL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_FUEL_AMT), SO_CRE_YRMON),2) END USD_FUEL_AMT_40HC,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40HC_OVR_HZD_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_OVR_HZD_AMT), SO_CRE_YRMON),2) END USD_OVR_HZD_AMT_40HC,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_40HC_TTL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_TTL_AMT), SO_CRE_YRMON),2) END USD_TTL_AMT_40HC,

	SUM(CNTR_45_BZC_AMT) LOC_BZC_AMT_45,
	SUM(CNTR_45_FUEL_AMT) LOC_FUEL_AMT_45,
	SUM(CNTR_45_OVR_HZD_AMT) LOC_OVR_HZD_AMT_45,
	SUM(CNTR_45_TTL_AMT) LOC_TTL_AMT_45,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_45_BZC_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_BZC_AMT), SO_CRE_YRMON),2) END USD_BZC_AMT_45,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_45_FUEL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_FUEL_AMT), SO_CRE_YRMON),2) END USD_FUEL_AMT_45,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_45_OVR_HZD_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_OVR_HZD_AMT), SO_CRE_YRMON),2) END USD_OVR_HZD_AMT_45,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_45_TTL_AMT), 2) ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_TTL_AMT), SO_CRE_YRMON),2) END USD_TTL_AMT_45,

    SUM(CNTR_20_BZC_AMT) + SUM(CNTR_40_BZC_AMT) + SUM(CNTR_40HC_BZC_AMT) + SUM(CNTR_45_BZC_AMT)  TOT_LOC_BZC_AMT,
    SUM(CNTR_20_FUEL_AMT) + SUM(CNTR_40_FUEL_AMT) + SUM(CNTR_40HC_FUEL_AMT) + SUM(CNTR_45_FUEL_AMT)  TOT_LOC_FUEL_AMT,
    SUM(CNTR_20_OVR_HZD_AMT) + SUM(CNTR_40_OVR_HZD_AMT) + SUM(CNTR_40HC_OVR_HZD_AMT) + SUM(CNTR_45_OVR_HZD_AMT)  TOT_LOC_OVR_HZD_AMT,
    SUM(CNTR_20_TTL_AMT) + SUM(CNTR_40_TTL_AMT) + SUM(CNTR_40HC_TTL_AMT) + SUM(CNTR_45_TTL_AMT)  TOT_LOC_TTL_AMT,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_BZC_AMT) + SUM(CNTR_40_BZC_AMT) + SUM(CNTR_40HC_BZC_AMT) + SUM(CNTR_45_BZC_AMT), 2)
    ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_BZC_AMT) + SUM(CNTR_40_BZC_AMT) + SUM(CNTR_40HC_BZC_AMT) + SUM(CNTR_45_BZC_AMT) , SO_CRE_YRMON),2) END TOT_USD_BZC_AMT,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_FUEL_AMT) + SUM(CNTR_40_FUEL_AMT) + SUM(CNTR_40HC_FUEL_AMT) + SUM(CNTR_45_FUEL_AMT), 2)
    ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD, SUM(CNTR_20_FUEL_AMT) + SUM(CNTR_40_FUEL_AMT) + SUM(CNTR_40HC_FUEL_AMT) + SUM(CNTR_45_FUEL_AMT) , SO_CRE_YRMON),2) END TOT_USD_FUEL_AMT,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_OVR_HZD_AMT) + SUM(CNTR_40_OVR_HZD_AMT) + SUM(CNTR_40HC_OVR_HZD_AMT) + SUM(CNTR_45_OVR_HZD_AMT), 2)
    ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD, SUM(CNTR_20_OVR_HZD_AMT) + SUM(CNTR_40_OVR_HZD_AMT) + SUM(CNTR_40HC_OVR_HZD_AMT) + SUM(CNTR_45_OVR_HZD_AMT) , SO_CRE_YRMON),2) END TOT_USD_OVR_HZD_AMT,
	CASE WHEN CURR_CD = 'USD' THEN ROUND(SUM(CNTR_20_TTL_AMT) + SUM(CNTR_40_TTL_AMT) + SUM(CNTR_40HC_TTL_AMT) + SUM(CNTR_45_TTL_AMT), 2)
    ELSE ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD, SUM(CNTR_20_TTL_AMT) + SUM(CNTR_40_TTL_AMT) + SUM(CNTR_40HC_TTL_AMT) + SUM(CNTR_45_TTL_AMT) , SO_CRE_YRMON),2) END TOT_USD_TTL_AMT
  
FROM
     (
          SELECT /*+ USE_HASH(LOCTO) USE_HASH(LOCFM) */
            TO_CHAR(LOCL_CRE_DT, 'YYYYMM') SO_CRE_YRMON,
#if( ${f_chkprd} == 'M' )
            '' WEEK,
#elseif( ${f_chkprd} == 'W' )
			COST_WK WEEK,
#end
			VNDR_SEQ WO_VNDR_SEQ,
        	EQ_NO,
        	TRSP_BND_CD,
#if( ${agmt_chk} == 'Y' )
			AGMT_REF_NO,
#end
        	SLAN_CD,
        	VSL_CD||SKD_VOY_NO||SKD_DIR_CD VVD,
        	CGO_TP_CD,
            DECODE(@[loc_on], 'L', SUBSTR(FM_NOD_CD,1,5), FM_NOD_CD) FM_NOD_CD,
            DECODE(@[loc_on], 'L', SUBSTR(TO_NOD_CD,1,5), TO_NOD_CD) TO_NOD_CD,
            DECODE(CURR_CD, NULL, INV_CURR_CD,  CURR_CD) CURR_CD  ,
            LOCTO.LOC_CD,
            LOCTO.EQ_CTRL_OFC_CD,
            LOCFM.LOC_CD,
            LOCFM.EQ_CTRL_OFC_CD,
			T.DELT_FLG,
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', 1, 0) )   CNTR_20_CNT,
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', 1, 0) )   CNTR_40_CNT,
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', 1, 0) )   CNTR_40HC_CNT,
        	SUM(DECODE(EQ_TPSZ_CD , 'D7', 1, 0) )   CNTR_45_CNT,

	        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(BZC_AMT,0) , 0) )   CNTR_20_BZC_AMT,
    	    SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(FUEL_SCG_AMT,0), 0) )   CNTR_20_FUEL_AMT, 
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_20_OVR_HZD_AMT,
	        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_20_TTL_AMT,

    	    SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(BZC_AMT,0) , 0) )   CNTR_40_BZC_AMT,
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(FUEL_SCG_AMT,0), 0) )   CNTR_40_FUEL_AMT, 
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40_OVR_HZD_AMT,
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40_TTL_AMT,

 	        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(BZC_AMT,0) , 0) )   CNTR_40HC_BZC_AMT,
    	    SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(FUEL_SCG_AMT,0), 0) )   CNTR_40HC_FUEL_AMT, 
        	SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40HC_OVR_HZD_AMT,
	        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40HC_TTL_AMT,

    	    SUM(DECODE(EQ_TPSZ_CD, 'D7', NVL(BZC_AMT,0) ,0 )  )   CNTR_45_BZC_AMT,
        	SUM(DECODE(EQ_TPSZ_CD, 'D7', NVL(FUEL_SCG_AMT,0) ,0 )  )   CNTR_45_FUEL_AMT,
        	SUM(DECODE(EQ_TPSZ_CD, 'D7', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0) ,0 )  )   CNTR_45_OVR_HZD_AMT,
        	SUM(DECODE(EQ_TPSZ_CD, 'D7', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0) ,0 )  )   CNTR_45_TTL_AMT

      FROM
        (SELECT  
#if( ${f_chkprd} == 'M' )
            '' COST_WK ,
#elseif( ${f_chkprd} == 'W' )
            C.COST_WK ,
#end
            TR.LOCL_CRE_DT ,
            TR.EQ_NO,
            TR.TRSP_BND_CD,
            TR.SLAN_CD,
            TR.VSL_CD, 
            TR.SKD_VOY_NO, 
            TR.SKD_DIR_CD ,
            TR.CGO_TP_CD,
            YY.FM_NOD_CD,
            YY.TO_NOD_CD,
            TR.DELT_FLG,
            TR.EQ_TPSZ_CD,
            YY.VNDR_SEQ,
            YY.CURR_CD CURR_CD ,
            YY.INV_CURR_CD,
            YY.ETC_ADD_AMT ,
            YY.HZD_MTRL_SCG_AMT ,
            YY.OVR_WGT_SCG_AMT ,
            YY.FUEL_SCG_AMT ,
            YY.BZC_AMT ,
            YY.INV_BZC_AMT,
            YY.INV_ETC_ADD_AMT,
            YY.TRSP_AGMT_OFC_CTY_CD,
            YY.TRSP_AGMT_SEQ
            
            FROM
            TRS_TRSP_RAIL_BIL_ORD TR,
            TRS_TRSP_RAIL_BIL_VNDR_SET YY
#if( ${f_chkprd} == 'W' )
            ,MAS_WK_PRD C
#end
            WHERE 1=1
#if( ${f_chkprd} == 'W' )
            AND TR.LOCL_CRE_DT BETWEEN TO_DATE(C.SLS_FM_DT,'YYYYMMDD') AND TO_DATE(C.SLS_TO_DT,'YYYYMMDD')+0.99999
#end
            AND TR.TRSP_SO_OFC_CTY_CD = YY.TRSP_SO_OFC_CTY_CD
            AND TR.TRSP_SO_SEQ        = YY.TRSP_SO_SEQ
#if ( ${fm_month} != '' && ${to_month} != '')
            AND TR.LOCL_CRE_DT BETWEEN TO_DATE( @[fm_month],'YYYYMMDD') AND TO_DATE( @[to_month],'YYYYMMDD')+ 0.99999
#end
            AND TR.EQ_TPSZ_CD IN (SELECT  INTG_CD_VAL_CTNT
                                 FROM COM_INTG_CD_DTL
                                WHERE INTG_CD_ID = 'CD01860'
                                  AND (INSTR('ALL', INTG_CD_VAL_CTNT) > 0
                                   OR 'ALL' = 'ALL'
                                      )
                             )
            AND NVL(TR.DELT_FLG,'N')  = 'N' 
        ) T,
        
        TRS_AGMT_HDR AH,
        MDM_LOCATION LOCTO,
        MDM_LOCATION LOCFM  
        
        WHERE 1 = 1
        AND LOCTO.LOC_CD = SUBSTR(T.TO_NOD_CD,1,5)
        AND LOCFM.LOC_CD = SUBSTR(T.FM_NOD_CD,1,5)
        AND T.TRSP_AGMT_OFC_CTY_CD = AH.TRSP_AGMT_OFC_CTY_CD -- add Agmt. Ref. No. 
        AND T.TRSP_AGMT_SEQ = AH.TRSP_AGMT_SEQ -- add Agmt. Ref. No.

#if ( ${vndr_seq} != '' )
      AND   T.VNDR_SEQ = @[vndr_seq]
#end
#if ( ${cgo_tp_cd} != 'A')
	#if ( ${cgo_tp_cd} != 'X')
      AND   T.CGO_TP_CD = @[cgo_tp_cd]
	#else
      AND   (T.TRSP_BND_CD = 'O'
             OR T.CGO_TP_CD = 'M')
	#end
#end
#if ( ${io_bound} != 'A' )
	#if ( ${cgo_tp_cd} != 'X')
      AND   T.TRSP_BND_CD = @[io_bound]
	#end
#end
#if ( ${ctrl_ofc} != '' )
      AND DECODE(T.TRSP_BND_CD , 'I',  LOCTO.EQ_CTRL_OFC_CD, 'O', LOCFM.EQ_CTRL_OFC_CD , LOCFM.EQ_CTRL_OFC_CD) =  @[ctrl_ofc]
#end
#if ( ${input_fm_node} != '' )
      AND T.FM_NOD_CD LIKE @[input_fm_node] || '%'
#end
#if ( ${input_to_node} != '' )
      AND T.TO_NOD_CD LIKE @[input_to_node] || '%'
#end
#if ( ${agmt_ref_no} != '' )
	AND AH.AGMT_REF_NO = @[agmt_ref_no]
#end
#if ( ${cntr_tpsz} != '' )
      AND T.EQ_TPSZ_CD IN (SELECT INTG_CD_VAL_CTNT
                             FROM COM_INTG_CD_DTL
                            WHERE INTG_CD_ID = 'CD01860'
                              AND (INSTR(@[cntr_tpsz], INTG_CD_VAL_CTNT) > 0
                               OR @[cntr_tpsz] = 'ALL'
                                  )
                          )
#end
      GROUP BY
              TO_CHAR(LOCL_CRE_DT, 'YYYYMM'),
#if( ${f_chkprd} == 'W' )
			  COST_WK,
#end
              VNDR_SEQ,
    		  EQ_NO,
        	  TRSP_BND_CD      ,
#if( ${agmt_chk} == 'Y' )
			  AGMT_REF_NO,
#end
        	  SLAN_CD		  ,
        	  VSL_CD||SKD_VOY_NO||SKD_DIR_CD,
        	  CGO_TP_CD        ,
        	  FM_NOD_CD        ,
        	  TO_NOD_CD        ,
        	  CURR_CD          ,
        	  DECODE(CURR_CD, NULL, INV_CURR_CD,  CURR_CD),
        	  EQ_TPSZ_CD       ,
        	  BZC_AMT          ,
        	  LOCTO.LOC_CD        ,
        	  LOCTO.EQ_CTRL_OFC_CD,
        	  LOCFM.LOC_CD        ,
        	  LOCFM.EQ_CTRL_OFC_CD,
        	  T.DELT_FLG
	UNION ALL
SELECT 
        TO_CHAR(LOCL_CRE_DT, 'YYYYMM') SO_CRE_YRMON,
#if( ${f_chkprd} == 'M' )
            '' WEEK,
#elseif( ${f_chkprd} == 'W' )
			COST_WK WEEK,
#end
		VNDR_SEQ WO_VNDR_SEQ,
        EQ_NO,
        TRSP_BND_CD,
#if( ${agmt_chk} == 'Y' )
		AGMT_REF_NO,
#end
        SLAN_CD,
        VSL_CD||SKD_VOY_NO||SKD_DIR_CD VVD,
        CGO_TP_CD,
        DECODE(@[loc_on], 'L', SUBSTR(FM_NOD_CD,1,5), FM_NOD_CD) FM_NOD_CD,
        DECODE(@[loc_on], 'L', SUBSTR(TO_NOD_CD,1,5), TO_NOD_CD) TO_NOD_CD,
        DECODE(CURR_CD, NULL, INV_CURR_CD,  CURR_CD) CURR_CD ,
        LOCTO.LOC_CD a,
        LOCTO.EQ_CTRL_OFC_CD b,
        LOCFM.LOC_CD c,
        LOCFM.EQ_CTRL_OFC_CD d,
        T.DELT_FLG,
        
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', 1, 0) )   CNTR_20_CNT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', 1, 0) )   CNTR_40_CNT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', 1, 0) )   CNTR_40HC_CNT,
        SUM(DECODE( EQ_TPSZ_CD , 'D7', 1, 0) )   CNTR_45_CNT,
        
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(BZC_AMT,0), 0) )   CNTR_20_BZC_AMT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(FUEL_SCG_AMT,0), 0) )   CNTR_20_FUEL_AMT, 
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_20_OVR_HZD_AMT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '2', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_20_TTL_AMT,
        
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(BZC_AMT,0), 0) )   CNTR_40_BZC_AMT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(FUEL_SCG_AMT,0), 0) )   CNTR_40_FUEL_AMT, 
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40_OVR_HZD_AMT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '4', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40_TTL_AMT,
        
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(BZC_AMT,0), 0) )   CNTR_40HC_BZC_AMT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(FUEL_SCG_AMT,0), 0) )   CNTR_40HC_FUEL_AMT, 
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40HC_OVR_HZD_AMT,
        SUM(DECODE(SUBSTR(EQ_TPSZ_CD,2,1), '5', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0) )   CNTR_40HC_TTL_AMT,
        
        SUM(DECODE( EQ_TPSZ_CD, 'D7', NVL(BZC_AMT,0) ,0 )  )   CNTR_45_BZC_AMT,
        SUM(DECODE( EQ_TPSZ_CD, 'D7', NVL(FUEL_SCG_AMT,0), 0 )  )   CNTR_45_FUEL_AMT,
        SUM(DECODE( EQ_TPSZ_CD, 'D7', NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0 ) ) CNTR_45_OVR_HZD_AMT,
        SUM(DECODE( EQ_TPSZ_CD, 'D7', NVL(BZC_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(OVR_WGT_SCG_AMT,0)+NVL(HZD_MTRL_SCG_AMT,0)+NVL(ETC_ADD_AMT,0), 0 )  )   CNTR_45_TTL_AMT

      FROM
        (SELECT  
#if( ${f_chkprd} == 'M' )
            '' COST_WK ,
#elseif( ${f_chkprd} == 'W' )
            C.COST_WK ,
#end
            TR.LOCL_CRE_DT ,
            TR.EQ_NO,
            TR.TRSP_BND_CD,
            TR.SLAN_CD,
            TR.VSL_CD, 
            TR.SKD_VOY_NO, 
            TR.SKD_DIR_CD ,
            TR.CGO_TP_CD,
            YY.FM_NOD_CD,
            YY.TO_NOD_CD,
            TR.DELT_FLG,
            TR.EQ_TPSZ_CD,
            YY.VNDR_SEQ,
            YY.CURR_CD CURR_CD ,
            YY.INV_CURR_CD,
            YY.ETC_ADD_AMT ,
            YY.HZD_MTRL_SCG_AMT ,
            YY.OVR_WGT_SCG_AMT ,
            YY.FUEL_SCG_AMT ,
            YY.BZC_AMT ,
            YY.INV_BZC_AMT,
            YY.INV_ETC_ADD_AMT,
            YY.TRSP_AGMT_OFC_CTY_CD,
            YY.TRSP_AGMT_SEQ
            
            FROM
            TRS_TRSP_RAIL_BIL_ORD TR,
            TRS_TRSP_RAIL_BIL_VNDR_SET YY
#if( ${f_chkprd} == 'W' )
            ,MAS_WK_PRD C
#end
            WHERE 1=1
#if( ${f_chkprd} == 'W' )
            AND TR.LOCL_CRE_DT BETWEEN TO_DATE(C.SLS_FM_DT,'YYYYMMDD') AND TO_DATE(C.SLS_TO_DT,'YYYYMMDD') + 0.99999
#end
            AND TR.TRSP_SO_OFC_CTY_CD = YY.TRSP_SO_OFC_CTY_CD
            AND TR.TRSP_SO_SEQ        = YY.TRSP_SO_SEQ
#if ( ${fm_month} != '' && ${to_month} != '')
            AND TR.LOCL_CRE_DT BETWEEN TO_DATE( @[fm_month],'YYYYMMDD') AND TO_DATE( @[to_month],'YYYYMMDD')+0.99999
#end
            AND TR.EQ_TPSZ_CD IN (SELECT  INTG_CD_VAL_CTNT
                                 FROM COM_INTG_CD_DTL
                                WHERE INTG_CD_ID = 'CD01860'
                                  AND (INSTR('ALL', INTG_CD_VAL_CTNT) > 0
                                   OR 'ALL' = 'ALL'
                                      )
                              )
            AND NVL(TR.DELT_FLG,'N')  = 'Y' 
        ) T,
        
        TRS_AGMT_HDR AH,
        MDM_LOCATION LOCTO,
        MDM_LOCATION LOCFM  
        
        WHERE 1 = 1
        AND LOCTO.LOC_CD = SUBSTR(T.TO_NOD_CD,1,5)
        AND LOCFM.LOC_CD = SUBSTR(T.FM_NOD_CD,1,5)
        AND T.TRSP_AGMT_OFC_CTY_CD = AH.TRSP_AGMT_OFC_CTY_CD -- add Agmt. Ref. No. 
        AND T.TRSP_AGMT_SEQ = AH.TRSP_AGMT_SEQ -- add Agmt. Ref. No.
        AND NVL(T.INV_BZC_AMT, 0) + NVL(T.INV_ETC_ADD_AMT, 0) <> 0

#if ( ${vndr_seq} != '' )
      AND   VNDR_SEQ = @[vndr_seq]
#end
#if ( ${cgo_tp_cd} != 'A' )
      AND   T.CGO_TP_CD = @[cgo_tp_cd]
#end
#if ( ${io_bound} != 'A' )
      AND   T.TRSP_BND_CD = @[io_bound]
#end
#if ( ${ctrl_ofc} != '' )
      AND DECODE(T.TRSP_BND_CD , 'I',  LOCTO.EQ_CTRL_OFC_CD, 'O', LOCFM.EQ_CTRL_OFC_CD , LOCFM.EQ_CTRL_OFC_CD) =  @[ctrl_ofc]
#end

#if(${fm_node_length} == '7')
      AND   T.FM_NOD_CD = @[input_fm_node]
#elseif (${fm_node_length} == '5')
      AND   T.FM_NOD_CD LIKE @[input_fm_node] || '%'
#elseif (${fm_node_length} != '0')
      AND   T.FM_NOD_CD LIKE @[input_fm_node] || '%'
#end

#if(${to_node_length} == '7')
      AND   T.TO_NOD_CD = @[input_to_node]
#elseif (${to_node_length} == '5')
      AND   T.TO_NOD_CD LIKE @[input_to_node] || '%'
#elseif (${to_node_length} != '0')
      AND   T.TO_NOD_CD LIKE @[input_to_node] || '%'
#end
#if ( ${agmt_ref_no} != '' )
	AND AH.AGMT_REF_NO = @[agmt_ref_no]
#end 
#if ( ${cntr_tpsz} != '' )
      AND T.EQ_TPSZ_CD IN (SELECT INTG_CD_VAL_CTNT
                             FROM COM_INTG_CD_DTL
                            WHERE INTG_CD_ID = 'CD01860'
                              AND (INSTR(@[cntr_tpsz], INTG_CD_VAL_CTNT) > 0
                               OR @[cntr_tpsz] = 'ALL'
                                  )
                          )
#end
       GROUP BY
        TO_CHAR(LOCL_CRE_DT, 'YYYYMM'),
#if( ${f_chkprd} == 'W' )
        COST_WK,
#end
 		VNDR_SEQ,
        EQ_NO,
        TRSP_BND_CD      ,
#if( ${agmt_chk} == 'Y' )
	    AGMT_REF_NO,
#end
        SLAN_CD		  ,
        VSL_CD||SKD_VOY_NO||SKD_DIR_CD,
        CGO_TP_CD        ,
        FM_NOD_CD        ,
        TO_NOD_CD        ,
        CURR_CD          ,
        DECODE(CURR_CD, NULL, INV_CURR_CD,  CURR_CD),
        EQ_TPSZ_CD       ,
        BZC_AMT          ,
        LOCTO.LOC_CD        ,
        LOCTO.EQ_CTRL_OFC_CD,
        LOCFM.LOC_CD        ,
        LOCFM.EQ_CTRL_OFC_CD,
        T.DELT_FLG
     )A
GROUP BY
        SO_CRE_YRMON,
		WEEK,
        WO_VNDR_SEQ , 
        CGO_TP_CD   ,
        TRSP_BND_CD ,
#if( ${agmt_chk} == 'Y' )
		AGMT_REF_NO,
#end
		SLAN_CD	  ,
        VVD         ,
        FM_NOD_CD,
        TO_NOD_CD,
        CURR_CD,	  
		DELT_FLG
ORDER BY 
        RAIL_NAME
        , FM_NOD_CD
        , TO_NOD_CD
        , SO_CRE_YRMON
#if( ${f_chkprd} == 'W' )
		, WEEK
#end
        , CGO_TP_CD
)
GROUP BY
#if( ${loc_on} != 'L' )
        MONTH,
		WEEK,
#end
		RAIL_CODE,
		RAIL_NAME,
		FULL_EMPTY,
#if( ${agmt_chk} == 'Y' )
		AGMT_REF_NO,
#end
    	FM,
    	T_O,
		CURR
ORDER BY 
        RAIL_NAME
    	,FM
    	,T_O
#if( ${loc_on} != 'L' )
        , MONTH
#if( ${f_chkprd} == 'W' )
		, WEEK
#end
#end
        , FULL_EMPTY			]]></sql>
			<params>
				<param name="loc_on" type="12" value="" out="N"/>
				<param name="fm_month" type="12" value="" out="N"/>
				<param name="to_month" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="cgo_tp_cd" type="12" value="" out="N"/>
				<param name="io_bound" type="12" value="" out="N"/>
				<param name="ctrl_ofc" type="12" value="" out="N"/>
				<param name="input_fm_node" type="12" value="" out="N"/>
				<param name="input_to_node" type="12" value="" out="N"/>
				<param name="agmt_ref_no" type="12" value="" out="N"/>
				<param name="cntr_tpsz" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
