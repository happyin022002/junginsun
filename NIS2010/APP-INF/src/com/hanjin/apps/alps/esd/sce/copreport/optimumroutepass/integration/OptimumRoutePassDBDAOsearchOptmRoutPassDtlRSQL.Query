<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OptimumRoutePassDBDAOsearchOptmRoutPassDtlRSQL">
			<desc><![CDATA[Optimum Route Summary에서 선택한 세부사항을 조회한다.]]></desc>
			<sql><![CDATA[
------ OptmRoutPassDtlVO

SELECT 
		OPTM_ROUT_PASS_FLG,PASS_TYPE,WO_CRE_OFC_CD,TRO_OFC_CD,TRSP_MOD_CD,DSCR_RSN_DESC,BKG_FM_NOD_CD,BKG_DOR_NOD_CD,

		-- 20120730 Added By SBKIM 

		(
			SELECT N.NOD_NM
			FROM PRD_NODE N
			WHERE N.NOD_CD = BKG_DOR_NOD_CD 
		)   BKG_DOR_NOD_NAME,

		-- 20120730 Added  By SBKIM
		EQ_NO,EQ_TPSZ_CD,TRSP_BND_CD,TRSP_COST_DTL_MOD_CD,
		BKG_NO,SC_NO,RFA_NO,TAA_NO,TRO_SEQ,SO_NO, WO_NO,WO_ISS_DT,INV_CFM_DT,WO_ISS_USR_ID,
		TRSP_CRR_MOD_CD,WO_VNDR_SEQ,VNDR_NAME,FM_NOD_CD,VIA_NOD_CD,TO_NOD_CD,DOR_NOD_CD,
		DOOR_FCTRY_NM,DOOR_ZIP,
		OPTM_TRSP_MOD_CD,OPTM_SP_CODE,OPTM_SP_NAME,OPTM_FROM_NODE,OPTM_VIA_NODE,OPTM_TO_NODE,OPTM_DOOR_NODE,
		POR_CD,POL_CD,POD_CD,DEL_CD,
		
		-- 20121011 Added  By SBKIM (Remark)

		NOT_OPTM_RSN,
		CNG_RSN_DESC,

		-- 20121011 Added  By SBKIM
		
		
		SHPR_CUST_NM,CNEE_CUST_NM,
		TOT_KNT,
		MOD_COLR_FLG,FM_COLR_FLG,VIA_COLR_FLG,TO_COLR_FLG,DOR_COLR_FLG

FROM	(
			SELECT	/*+ ORDERED */
					DECODE(SO_DSCR_RSN_CD, 'M', 'YES','NO') OPTM_ROUT_PASS_FLG,  -- 신규
					DECODE(PASS_TP_CD, 'A', 'Alternative', '') PASS_TYPE,
					A.CRE_OFC_CD                      WO_CRE_OFC_CD, -- wo create office
					ETRO.CFM_OFC_CD TRO_OFC_CD,
                    B.TRSP_CRR_MOD_CD TRSP_MOD_CD,
					DECODE(DSCR_RSN_CD, 'M', NULL, DRCD.DSCR_RSN_DESC) DSCR_RSN_DESC,
					DECODE(B.TRSP_BND_CD, 'O', BKGM.POL_NOD_CD, BKGM.POD_NOD_CD) BKG_FM_NOD_CD,  -- bkg나 trs의 from / to
					DECODE((SELECT  MAX(OFC_CD)
                            FROM    MDM_ORGANIZATION A
                            WHERE   DELT_FLG = 'N'
                            AND OFC_KND_CD = '2'
                            AND LENGTH(OFC_CD)=5
                            CONNECT BY PRIOR PRNT_OFC_CD =  OFC_CD
                            START WITH OFC_CD IN (SELECT COLUMN_VALUE FROM TABLE(BKG_SPLIT_FNC(REPLACE(@[input_office],'#',','), ','))))
                            ,'HAMUR'
        					,NVL((SELECT  ZN_CD
                                 FROM BKG_EUR_TRO_DTL TD
                                    , SCE_TRO_MAPG M
                                 WHERE 1=1
                                 AND B.COP_NO = M.COP_NO
                                 AND TD.BKG_NO = M.BKG_NO
                                 AND TD.IO_BND_CD = M.IO_BND_CD
                                 AND TD.TRO_SEQ = M.TRO_SEQ
                                 AND TD.ZN_CD IS NOT NULL
                                 AND TD.DOR_ADDR_TP_CD = 'D'
                                 AND ROWNUM=1)
					           , DECODE(B.TRSP_BND_CD, 'O', BKGM.POR_NOD_CD, BKGM.DEL_NOD_CD))
                            ,'SHAAS',DECODE(B.TRSP_BND_CD, 'O', BKGM.POR_NOD_CD, BKGM.DEL_NOD_CD)
                            ,'SINWA',DECODE(B.TRSP_BND_CD, 'O', BKGM.POR_NOD_CD, BKGM.DEL_NOD_CD))
						BKG_DOR_NOD_CD,   -- bkg나 trs의 from / to
					NVL(COPM.CNTR_NO, B.EQ_NO) EQ_NO,
					B.EQ_TPSZ_CD ,
					B.TRSP_BND_CD,
					B.TRSP_COST_DTL_MOD_CD ,
					B.BKG_NO,
					BKGM.SC_NO,
					BKGM.RFA_NO,
					BKGM.TAA_NO,
					B.TRO_SEQ,
					B.TRSP_SO_OFC_CTY_CD || B.TRSP_SO_SEQ SO_NO,
					A.TRSP_WO_OFC_CTY_CD || A.TRSP_WO_SEQ WO_NO,
					TO_CHAR(A.LOCL_UPD_DT, 'YYYY-MM-DD') AS WO_ISS_DT ,
                    TO_CHAR(I.INV_CFM_DT, 'YYYY-MM-DD') AS INV_CFM_DT ,
					A.CRE_USR_ID WO_ISS_USR_ID, --
					B.TRSP_CRR_MOD_CD ,
					DECODE( A.HJL_NO, NULL, B.VNDR_SEQ, J.HJL_VNDR_SEQ ) WO_VNDR_SEQ ,
					(
					   SELECT  VNDR.VNDR_LGL_ENG_NM
					   FROM    MDM_VENDOR   VNDR
					   WHERE   VNDR.VNDR_SEQ   =   DECODE( A.HJL_NO, NULL, B.VNDR_SEQ, J.HJL_VNDR_SEQ )
					)  VNDR_NAME,
					B.FM_NOD_CD,
					B.VIA_NOD_CD,
					B.TO_NOD_CD,
					B.DOR_NOD_CD,
					REPLACE(REPLACE(REPLACE(B.FCTRY_NM, CHR(13), ' '), CHR(10), ' '), CHR(34), '') AS DOOR_FCTRY_NM,
					B.DOR_PST_CD DOOR_ZIP,
					DECODE(B.PASS_TP_CD, 'A', OPTM.IRG_TRSP_CRR_MOD_CD, OPTM.TRSP_CRR_MOD_CD) OPTM_TRSP_MOD_CD,
					DECODE(B.PASS_TP_CD, 'A', OPTM.IRG_N1ST_VNDR_SEQ, OPTM.VNDR_SEQ) OPTM_SP_CODE,
					DECODE(B.PASS_TP_CD, 'A',
					                         CASE WHEN OPTM.IRG_N1ST_VNDR_SEQ IS NOT NULL THEN OPVN2.VNDR_LGL_ENG_NM
						                     WHEN OPTM.IRG_N1ST_VNDR_SEQ IS NULL AND B.SO_DSCR_RSN_CD = 'R' THEN 'Multi S/P' END,
						                     CASE WHEN OPTM.VNDR_SEQ IS NOT NULL THEN OPVN.VNDR_LGL_ENG_NM
						                     WHEN OPTM.VNDR_SEQ IS NULL AND B.SO_DSCR_RSN_CD = 'R' THEN 'Multi S/P' END) OPTM_SP_NAME,
					DECODE(B.PASS_TP_CD, 'A', OPTM.IRG_FM_NOD_CD, OPTM.FM_NOD_CD) OPTM_FROM_NODE,
					DECODE(B.PASS_TP_CD, 'A', OPTM.IRG_VIA_NOD_CD, OPTM.VIA_NOD_CD) OPTM_VIA_NODE,
					DECODE(B.PASS_TP_CD, 'A', OPTM.IRG_TO_NOD_CD, OPTM.TO_NOD_CD) OPTM_TO_NODE,
					DECODE(B.PASS_TP_CD, 'A', OPTM.IRG_DOR_NOD_CD, OPTM.DOR_NOD_CD) OPTM_DOOR_NODE,
					B.POR_CD,
					B.POL_CD,
					B.POD_CD,
					B.DEL_CD,
			
					-- 20121011 Added  By SBKIM

					REPLACE (ETRO.NOT_OPTM_RSN, CHR (13) || CHR (10),' ') AS NOT_OPTM_RSN,
					REPLACE (B.CNG_RSN_DESC,	CHR (13) || CHR (10),' ') AS CNG_RSN_DESC,
					
					-- 20121011 Added  By SBKIM

					REPLACE (SHPR.CUST_NM, CHR (13) || CHR (10),' ') AS SHPR_CUST_NM,
					REPLACE (CNEE.CUST_NM, CHR (13) || CHR (10),' ') AS CNEE_CUST_NM,
					CASE WHEN SO_DSCR_RSN_CD = 'M' THEN NULL
						 WHEN B.TRSP_CRR_MOD_CD <> OPTM.TRSP_CRR_MOD_CD THEN 'Y' 
					END AS MOD_COLR_FLG,
					CASE WHEN SO_DSCR_RSN_CD IN('M','N','I') THEN NULL
						 WHEN B.TRSP_BND_CD = 'O' AND B.TRSP_COST_DTL_MOD_CD = 'DR' THEN NULL
						 WHEN B.TRSP_BND_CD = 'O' AND OPTM.DOR_NOD_CD IS NOT NULL THEN NULL
						 WHEN SO_DSCR_RSN_CD = 'P' AND B.TRSP_BND_CD = 'I' THEN 'Y'
						 WHEN SO_DSCR_RSN_CD = 'O' AND B.TRSP_BND_CD = 'O' AND B.TRSP_COST_DTL_MOD_CD = 'CY' THEN 'Y'
						 WHEN (NOT(B.TRSP_BND_CD = 'O' AND B.TRSP_COST_DTL_MOD_CD = 'DR')) AND B.FM_NOD_CD <> OPTM.FM_NOD_CD THEN 'Y' 
					END AS FM_COLR_FLG,
					CASE WHEN SO_DSCR_RSN_CD IN('M','N','I', 'P') THEN NULL
						 WHEN NVL(B.VIA_NOD_CD, 'X') <> NVL(OPTM.VIA_NOD_CD, 'X') THEN 'Y' 
					END AS VIA_COLR_FLG,
					CASE WHEN SO_DSCR_RSN_CD IN('M','N','I') THEN NULL
						 WHEN B.TRSP_BND_CD = 'I' AND B.TRSP_COST_DTL_MOD_CD = 'DR' THEN NULL
						 WHEN B.TRSP_BND_CD = 'I' AND OPTM.DOR_NOD_CD IS NOT NULL THEN NULL
						 WHEN SO_DSCR_RSN_CD = 'P' AND B.TRSP_BND_CD = 'O' THEN 'Y'
						 WHEN SO_DSCR_RSN_CD = 'D' AND B.TRSP_BND_CD = 'I' AND B.TRSP_COST_DTL_MOD_CD = 'CY' THEN 'Y'
						 WHEN (NOT(B.TRSP_BND_CD = 'I' AND B.TRSP_COST_DTL_MOD_CD = 'DR')) AND B.TO_NOD_CD <> OPTM.TO_NOD_CD THEN 'Y' 
					END AS TO_COLR_FLG,
					CASE WHEN SO_DSCR_RSN_CD IN('M','N','I') THEN NULL
						 WHEN B.TRSP_COST_DTL_MOD_CD = 'DR' AND NVL(B.DOR_NOD_CD, 'X') <> NVL(OPTM.DOR_NOD_CD, 'X') THEN 'Y' 
						 WHEN B.TRSP_BND_CD = 'I' AND B.TRSP_COST_DTL_MOD_CD = 'CY' AND OPTM.DOR_NOD_CD IS NOT NULL THEN 'Y' 
						 WHEN B.TRSP_BND_CD = 'O' AND B.TRSP_COST_DTL_MOD_CD = 'CY' AND OPTM.DOR_NOD_CD IS NOT NULL AND NVL(B.DOR_NOD_CD, 'X') <> NVL(OPTM.DOR_NOD_CD, 'X') THEN 'Y' 
					END AS DOR_COLR_FLG,
					COUNT(1) OVER() TOT_KNT,
					ROW_NUMBER() OVER (ORDER BY DECODE(DSCR_RSN_CD, 'M', 'Y','N'), A.CRE_OFC_CD, B.TRSP_CRR_MOD_CD, DP_ODR ) ODR_NO
			FROM	
                    (
                       SELECT INV_NO, INV_VNDR_SEQ, INV_CFM_DT FROM TRS_TRSP_INV_WRK C
                        WHERE 1=1
#if(${sel_date} == 'inv')
                          AND C.INV_CFM_DT BETWEEN TO_DATE(REPLACE(@[from_date],'-',''),	'YYYYMMDD')
											AND		TO_DATE(REPLACE(@[to_date],'-',''),		'YYYYMMDD') + 0.999999
#end
					 ) I,
					TRS_TRSP_SVC_ORD			B ,
					TRS_TRSP_WRK_ORD			A ,
					TRS_TRSP_HJL_SVC_ORD        J ,   -- /* 20121113 ETS Vendor 반영 By  S.B.Kim */
					BKG_CUSTOMER				SHPR ,
					BKG_CUSTOMER				CNEE ,
					BKG_EUR_TRO				ETRO ,
					(	
							SELECT	INTG_CD_VAL_CTNT DSCR_RSN_CD, INTG_CD_VAL_DP_DESC DSCR_RSN_DESC, INTG_CD_VAL_DP_SEQ DP_ODR
							FROM	COM_INTG_CD_DTL
							WHERE	INTG_CD_ID = 'CD03059'
					) DRCD ,
					TRS_TRSP_OPTM_INLND_ROUT	OPTM ,
					MDM_VENDOR				OPVN ,
					MDM_VENDOR              OPVN2,
					BKG_BOOKING				BKGM ,
					SCE_COP_HDR				COPM
			WHERE	1=1
#if(${sel_date} == 'wo')
			AND     B.INV_NO = I.INV_NO(+)
			AND     B.INV_VNDR_SEQ = I.INV_VNDR_SEQ(+)
#end
#if(${sel_date} == 'inv')
			AND     B.INV_NO = I.INV_NO
			AND     B.INV_VNDR_SEQ = I.INV_VNDR_SEQ
#end
            AND     B.BKG_NO		IS NOT NULL
			AND		B.TRSP_BND_CD	IN ('I','O')
			AND		B.DELT_FLG            	= 'N'
			AND		B.SO_DSCR_RSN_CD		IS NOT NULL			
		
			AND		B.TRSP_SO_OFC_CTY_CD	= J.TRSP_SO_OFC_CTY_CD	(+)    -- /* 20121113 ETS Vendor 반영 By  S.B.Kim */
			AND		B.TRSP_SO_SEQ	        = J.TRSP_SO_SEQ	        (+)    -- /* 20121113 ETS Vendor 반영 By  S.B.Kim */
			AND		B.LOCL_CRE_DT			>= TO_DATE('20120701', 'YYYYMMDD')  -- System Open시 처리
#if(${sel_date} == 'wo')
			AND		A.LOCL_UPD_DT			BETWEEN TO_DATE(REPLACE(@[from_date],'-',''),	'YYYYMMDD')
											AND		TO_DATE(REPLACE(@[to_date],'-',''),		'YYYYMMDD') + 0.999999
#end
#if (${from_node} != '') 
            AND DECODE(B.TRSP_BND_CD, 'O', BKGM.POL_NOD_CD, BKGM.POD_NOD_CD) LIKE @[from_node]||'%'
#end
#if (${door_node} != '') 
            AND NVL((SELECT  ZN_CD
                         FROM BKG_EUR_TRO_DTL TD
                            , SCE_TRO_MAPG M
                         WHERE 1=1
                         AND B.COP_NO = M.COP_NO
                         AND TD.BKG_NO = M.BKG_NO
                         AND TD.IO_BND_CD = M.IO_BND_CD
                         AND TD.TRO_SEQ = M.TRO_SEQ
                         AND TD.ZN_CD IS NOT NULL
                         AND TD.DOR_ADDR_TP_CD = 'D'
                         AND ROWNUM=1)
					   , DECODE(B.TRSP_BND_CD, 'O', BKGM.POR_NOD_CD, BKGM.DEL_NOD_CD)) LIKE @[door_node]||'%'
#end
			AND		B.TRSP_WO_OFC_CTY_CD	= A.TRSP_WO_OFC_CTY_CD	
			AND		B.TRSP_WO_SEQ			= A.TRSP_WO_SEQ	
			AND		SHPR.BKG_NO(+)			= B.BKG_NO
			AND		SHPR.BKG_CUST_TP_CD(+)	= 'S'
			
			AND		CNEE.BKG_NO(+)			= B.BKG_NO
			AND		CNEE.BKG_CUST_TP_CD(+)	= 'C'
					
			AND		ETRO.BKG_NO		(+)		= B.BKG_NO
			AND		ETRO.IO_BND_CD	(+)		= B.TRSP_BND_CD
			AND		ETRO.TRO_SEQ	(+)		= B.TRO_SEQ
			AND		ETRO.HLG_TP_CD(+)		= 'C'
			
			AND		DRCD.DSCR_RSN_CD		= B.SO_DSCR_RSN_CD
			
			AND		OPTM.TRSP_SO_OFC_CTY_CD(+)	= B.TRSP_SO_OFC_CTY_CD
			AND		OPTM.TRSP_SO_SEQ(+)			= B.TRSP_SO_SEQ

			AND		OPVN.VNDR_SEQ(+)			= OPTM.VNDR_SEQ

			AND		OPVN2.VNDR_SEQ(+)			= OPTM.IRG_N1ST_VNDR_SEQ

			AND		B.BKG_NO				=	BKGM.BKG_NO
	
			AND		B.COP_NO				=	COPM.COP_NO
		
			AND		B.SO_DSCR_RSN_CD IN (
											SELECT	INTG_CD_VAL_CTNT
											FROM	COM_INTG_CD_DTL
											WHERE	INTG_CD_ID = 'CD03059'
											AND		(  
															(@[optm_rout_pass_flg] = 'A' AND (@[dscr_rsn_cd] = 'A' OR INSTR(@[dscr_rsn_cd], INTG_CD_VAL_CTNT) > 0)) -- ALL/ALL
														OR	(@[optm_rout_pass_flg] = 'Y' AND INTG_CD_VAL_CTNT = 'M') -- Optimum Route일 경우 세부는 무시
														OR	(@[optm_rout_pass_flg] = 'N' AND INTG_CD_VAL_CTNT <> 'M' AND (@[dscr_rsn_cd] = 'A' OR INSTR(@[dscr_rsn_cd], INTG_CD_VAL_CTNT) > 0))
													)
										)
		#if (${sel_op_tp} == 'SINGLE')
			AND A.CRE_OFC_CD IN (SELECT COLUMN_VALUE FROM TABLE(BKG_SPLIT_FNC(@[input_office], ',')))
			AND B.TRSP_BND_CD = @[bnd_cd]
			and B.TRSP_CRR_MOD_CD IN	(
											SELECT	INTG_CD_VAL_CTNT
											FROM	COM_INTG_CD_DTL
											WHERE	INTG_CD_ID = 'CD00283'
											AND		(
														INSTR(@[trsp_mod_cd], INTG_CD_VAL_CTNT) > 0
														OR 
														@[trsp_mod_cd] = 'ALL'
													)
										 )
		#end

		#if (${sel_op_tp} != 'SINGLE')
			AND	(A.CRE_OFC_CD, b.TRSP_BND_CD, b.TRSP_CRR_MOD_CD )
				IN (
			  #foreach ($user_condtions IN ${condtions})
				#if($velocityCount < $condtions.size())
				  $user_condtions,
				#else
				  $user_condtions
				#end
			  #end
			)
		#end

        #if (${sel_so_no} != '') 
            AND (B.TRSP_SO_OFC_CTY_CD, B.TRSP_SO_SEQ) IN (  (SUBSTR(@[sel_so_no],1,3),SUBSTR(@[sel_so_no],4))  )
        #end

    ) SUBQ
WHERE ODR_NO <= DECODE(@[exl_flg], 'N', 2000, TOT_KNT)
ORDER BY ODR_NO			]]></sql>
			<params>
				<param name="input_office" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="from_node" type="12" value="" out="N"/>
				<param name="door_node" type="12" value="" out="N"/>
				<param name="optm_rout_pass_flg" type="12" value="" out="N"/>
				<param name="dscr_rsn_cd" type="12" value="" out="N"/>
				<param name="bnd_cd" type="12" value="" out="N"/>
				<param name="trsp_mod_cd" type="12" value="" out="N"/>
				<param name="sel_so_no" type="12" value="" out="N"/>
				<param name="exl_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
