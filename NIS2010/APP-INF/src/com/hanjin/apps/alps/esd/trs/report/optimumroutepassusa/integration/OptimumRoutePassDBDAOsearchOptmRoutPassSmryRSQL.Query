<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OptimumRoutePassDBDAOsearchOptmRoutPassSmryRSQL">
			<desc><![CDATA[searchOptmRoutPassSmry]]></desc>
			<sql><![CDATA[
SELECT CPY_NO, WO_CRE_OFC_CD, TRSP_BND_CD, TOT_SO_CNT, PASS_CNT, NON_PASS_CNT, NON_PASS_RATIO
     , NON_PASS_T_CNT, NON_PASS_R_CNT, NON_PASS_N_CNT, NON_PASS_O_CNT
     , NON_PASS_T_RATIO, NON_PASS_R_RATIO, NON_PASS_N_RATIO, NON_PASS_O_RATIO
     , DECODE(CPY_NO, 0, 0, DENSE_RANK() OVER (ORDER BY WO_CRE_OFC_CD, TRSP_BND_CD)) GRP_NO -- GRP_NO가 0일 경우 체크 불가
     , CASE WHEN CPY_NO = 0 THEN @[input_office] ELSE WO_CRE_OFC_CD END QRY_OFC_CD -- DETAIL조회시 OFFICE CODE에 해당
     , @[from_date]        IN_FROM_DATE
     , @[to_date]          IN_TO_DATE
     , DSCR_RSN_MAP
FROM (
    SELECT CPY_NO
         , DECODE(CPY_NO, 0, 'ALL', CRE_OFC_CD) WO_CRE_OFC_CD
         , TRSP_BND_CD
         , SUM(TOT_CNT) AS TOT_SO_CNT
         , SUM(PASS_CNT) AS PASS_CNT
         , SUM(NON_PASS_CNT) AS NON_PASS_CNT
         , (ROUND(NVL(SUM(NON_PASS_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' AS NON_PASS_RATIO
         , SUM(NON_PASS_T_CNT) AS NON_PASS_T_CNT
         , (ROUND(NVL(SUM(NON_PASS_T_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' AS NON_PASS_T_RATIO
         , SUM(NON_PASS_R_CNT) AS NON_PASS_R_CNT
         , (ROUND(NVL(SUM(NON_PASS_R_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' AS NON_PASS_R_RATIO
         , SUM(NON_PASS_N_CNT) AS NON_PASS_N_CNT
         , (ROUND(NVL(SUM(NON_PASS_N_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' AS NON_PASS_N_RATIO
         , SUM(NON_PASS_O_CNT) AS NON_PASS_O_CNT
         , (ROUND(NVL(SUM(NON_PASS_O_CNT),0) / SUM(TOT_CNT), 2) * 100) || '%' AS NON_PASS_O_RATIO
         , ROW_NUMBER() OVER (ORDER BY INSTR('ALL,' || @[input_office], DECODE(CPY_NO, 0, 'ALL', CRE_OFC_CD))
                                     , TRSP_BND_CD DESC
                             ) SORT_RN
         , MAX(DSCR_RSN_MAP_T)
            || MAX(DSCR_RSN_MAP_R)
            || MAX(DSCR_RSN_MAP_O)
            || MAX(DSCR_RSN_MAP_D)
            || MAX(DSCR_RSN_MAP_P)
            || MAX(DSCR_RSN_MAP_N)
            || MAX(DSCR_RSN_MAP_I)
            || MAX(DSCR_RSN_MAP_M) DSCR_RSN_MAP
      FROM (
           SELECT 
               CRE_OFC_CD, TRSP_BND_CD
              ,SUM(ACT_CNTR_QTY) TOT_CNT
              ,SUM((CASE WHEN SO_DSCR_RSN_CD IN ('M') THEN 1*NVL(ACT_CNTR_QTY,0) ELSE 0 END)) PASS_CNT
              ,SUM((CASE WHEN SO_DSCR_RSN_CD IN ('M') THEN 0 ELSE 1*NVL(ACT_CNTR_QTY,0) END)) NON_PASS_CNT
              ,SUM((CASE WHEN SO_DSCR_RSN_CD IN ('T') THEN 1*NVL(ACT_CNTR_QTY,0) ELSE 0 END)) NON_PASS_T_CNT
              ,SUM((CASE WHEN SO_DSCR_RSN_CD IN ('R') THEN 1*NVL(ACT_CNTR_QTY,0) ELSE 0 END)) NON_PASS_R_CNT
              ,SUM((CASE WHEN SO_DSCR_RSN_CD IN ('N') THEN 1*NVL(ACT_CNTR_QTY,0) ELSE 0 END)) NON_PASS_N_CNT
              ,SUM((CASE WHEN SO_DSCR_RSN_CD IN ('T', 'R', 'N', 'M') THEN 0 ELSE 1*NVL(ACT_CNTR_QTY,0) END)) NON_PASS_O_CNT
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'T', 'T')) DSCR_RSN_MAP_T
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'R', 'R')) DSCR_RSN_MAP_R
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'O', 'O')) DSCR_RSN_MAP_O
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'D', 'D')) DSCR_RSN_MAP_D
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'P', 'P')) DSCR_RSN_MAP_P
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'N', 'N')) DSCR_RSN_MAP_N
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'I', 'I')) DSCR_RSN_MAP_I
              ,MAX(DECODE(SO_DSCR_RSN_CD, 'M', 'M')) DSCR_RSN_MAP_M
            FROM TRS_TRSP_OPTM_USA_ROUT
            WHERE 1=1
#if(${sel_date} == 'inv')
            AND INV_CFM_DT BETWEEN TO_DATE(REPLACE(@[from_date],'-',''), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_date],'-',''), 'YYYYMMDD')+0.99999
#end
#if(${sel_date} == 'wo')
            AND WO_ISS_DT BETWEEN TO_DATE(REPLACE(@[from_date],'-',''), 'YYYYMMDD') AND TO_DATE(REPLACE(@[to_date],'-',''), 'YYYYMMDD')+0.99999
#end
            AND TRSP_BND_CD = DECODE(@[bnd_cd], 'A', TRSP_BND_CD, @[bnd_cd])
            AND CRE_OFC_CD IN (SELECT COLUMN_VALUE FROM TABLE(BKG_SPLIT_FNC(@[input_office], ',')))
            AND RSLT_FLG = 'Y' AND DELT_FLG = 'N'
            GROUP BY CRE_OFC_CD, TRSP_BND_CD
            ) MSTD,
            (SELECT CPY_NO
             FROM COM_CPY_NO
             WHERE CPY_NO IN (1,
                              CASE WHEN @[input_office] = 'ALL' OR INSTR(@[input_office], ',') > 0 THEN 0 END
                              )
             ) CPYT
GROUP BY CPY_NO
         , DECODE(CPY_NO, 0, 'ALL', CRE_OFC_CD)
         , TRSP_BND_CD
     )
ORDER BY SORT_RN			]]></sql>
			<params>
				<param name="input_office" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="bnd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
