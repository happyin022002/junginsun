<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccrualBatchExecuteResultDBDAOSearchACBMInquiryRSQL">
			<desc><![CDATA[Accessorial cost budget management Report]]></desc>
			<sql><![CDATA[
SELECT RHQ_CD,
       COST_MN_TP,
       MN_COST_TP_NM,
       SUB_COST_TP_NM,
       COA_COST_SRC_CD,
       COST_DESC,
       COST_SRC_SYS_CD,
#if (${f_report} == '2') 
       CTRL_OFC_CD,  
#end  
       MON_BUD ,
       PRD_SUM,
       LSTYR_SUM,
       DIFF_BUD,
       DIFF_BUD_RTO,
       DIFF_LSTYR,
       TTL_BUD,
       TTL_BUD_RTO,
       MON1, MON2, MON3, MON4, MON5, MON6, 
       MON7, MON8, MON9, MON10, MON11, MON12
FROM (
SELECT  T.RHQ_CD,
        C.COST_MN_TP,
        C.MN_COST_TP_NM,
        C.SUB_COST_TP_NM,
        T.COA_COST_SRC_CD,
        C.COST_DESC,
        C.COST_SRC_SYS_CD,
#if (${f_report} == '2')  
        T.CTRL_OFC_CD,    
        T.MON_BUD ,
        T.PRD_SUM,
        T.LSTYR_SUM,
        (T.PRD_SUM - T.MON_BUD) AS DIFF_BUD,
        DECODE(T.MON_BUD,0,0,ROUND(T.PRD_SUM / T.MON_BUD,2))*100 AS DIFF_BUD_RTO,
        (T.PRD_SUM - T.LSTYR_SUM) AS DIFF_LSTYR,
        T.TTL_BUD,
        DECODE(T.TTL_BUD,0,0,ROUND(T.PRD_SUM / T.TTL_BUD,2))*100 AS TTL_BUD_RTO,
        T.MON1, T.MON2, T.MON3, T.MON4, T.MON5, T.MON6, 
        T.MON7, T.MON8, T.MON9, T.MON10, T.MON11, T.MON12
#elseif(${f_report} == '1')
		SUM(T.MON_BUD) AS MON_BUD,
        SUM(T.PRD_SUM) AS PRD_SUM,
        SUM(T.LSTYR_SUM) AS LSTYR_SUM,
        (SUM(T.PRD_SUM) -  SUM(T.MON_BUD)) AS DIFF_BUD,
        (DECODE(SUM(T.MON_BUD),0,0,ROUND(SUM(T.PRD_SUM) /SUM(T.MON_BUD),2))*100) AS DIFF_BUD_RTO,
        (SUM(T.PRD_SUM) - SUM(T.LSTYR_SUM)) AS DIFF_LSTYR,
        SUM(T.TTL_BUD) AS TTL_BUD,
        (DECODE(SUM(T.TTL_BUD),0,0,ROUND(SUM(T.PRD_SUM)/SUM(T.TTL_BUD),2))*100) AS TTL_BUD_RTO,
        SUM(T.MON1) AS MON1,SUM(T.MON2) AS MON2, SUM(T.MON3) AS MON3, SUM(T.MON4) AS MON4,
        SUM(T.MON5) AS MON5,SUM(T.MON6) AS MON6, SUM(T.MON7) AS MON7, SUM(T.MON8) AS MON8,
        SUM(T.MON9) AS MON9,SUM(T.MON10) AS MON10, SUM(T.MON11) AS MON11, SUM(T.MON12) AS MON12
#end         
FROM
(SELECT	B.RHQ_CD RHQ_CD,
		F.CTRL_OFC_CD CTRL_OFC_CD,
		F.COA_COST_SRC_CD COA_COST_SRC_CD, 
		ROUND(F.MON_BUD_USD_AMT *(REPLACE(@[gl_mon_to], '-') - REPLACE(@[gl_mon_from], '-')+1),2) MON_BUD,
        ROUND(NVL(SUM(CASE WHEN M.REV_YRMON IS NULL THEN
				  ROUND(M.LOCL_COST_AMT /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	              ELSE M.USD_COST_AMT
		          END ),0),2) PRD_SUM,
         (SELECT  ROUND(NVL(SUM(CASE WHEN LM.REV_YRMON IS NULL THEN
				          ROUND(LM.LOCL_COST_AMT /(SELECT U1.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U1 
                                             WHERE U1.ACCT_XCH_RT_YRMON =  REPLACE(@[lstyr_to],'-')
                                               AND U1.CURR_CD =  LM.LOCL_CURR_CD
                                      		   AND U1.ACCT_XCH_RT_LVL = '3'
                                      		   AND U1.DELT_FLG 		 = 'N'), 2)
	                      ELSE LM.USD_COST_AMT
		                  END  ),0),2) 
           FROM LEA_ACT_COST_IF LM
           WHERE LM.EXE_YRMON(+) BETWEEN REPLACE(@[lstyr_from], '-') AND REPLACE(@[lstyr_to], '-')
           AND F.COA_COST_SRC_CD = LM.COA_COST_SRC_CD
           AND F.CTRL_OFC_CD  = DECODE(LM.CTRL_OFC_CD ,'PUSBS','PUSSC','PUSBO','PUSSC','SKGBA', 'PIRBA', LM.CTRL_OFC_CD)
           AND LM.OTR_CRR_FLG = 'N'
          ) LSTYR_SUM,
        ROUND(F.TTL_USD_AMT,2) TTL_BUD,
        ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				            ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'01',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                                                                            FROM GL_MON_XCH_RT U 
                                                                                           WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                                                                             AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		                                                 AND U.ACCT_XCH_RT_LVL = '3'
                                      		                                                 AND U.DELT_FLG = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'01',M.USD_COST_AMT,0)
		                END ),0),2) MON1,
        ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				            ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'02',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                                                                            FROM GL_MON_XCH_RT U 
                                                                                           WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                                                                             AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		                                                 AND U.ACCT_XCH_RT_LVL = '3'
                                      		                                                 AND U.DELT_FLG = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'02',M.USD_COST_AMT,0)
		                END ),0),2) MON2,        
        ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				            ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'03',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                                                                             FROM GL_MON_XCH_RT U 
                                                                                            WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                                                                              AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		                                                  AND U.ACCT_XCH_RT_LVL = '3'
                                      		                                                  AND U.DELT_FLG = 'N'), 2)
	                   ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'03',M.USD_COST_AMT,0)
		               END ),0),2) MON3,
        ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				           ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'04',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                   ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'04',M.USD_COST_AMT,0)
		               END ),0),2) MON4,  
	    ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				            ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'05',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                                                                 FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                   ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'05',M.USD_COST_AMT,0)
		               END ),0),2) MON5,
       ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'06',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'06',M.USD_COST_AMT,0)
		                  END ),0),2) MON6,  	                         
       ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'07',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'07',M.USD_COST_AMT,0)
		                  END ),0),2) MON7,  	        
       ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'08',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'08',M.USD_COST_AMT,0)
		                  END ),0),2) MON8,  	                         
       ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'09',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'09',M.USD_COST_AMT,0)
		                  END ),0),2) MON9,
		       ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'10',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'10',M.USD_COST_AMT,0)
		                  END ),0),2) MON10,  	                         
       ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'11',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'11',M.USD_COST_AMT,0)
		                  END ),0),2) MON11,
		   ROUND(NVL(SUM( CASE WHEN M.REV_YRMON IS NULL THEN
				                   ROUND(DECODE(SUBSTR(M.EXE_YRMON,5,2),'12',M.LOCL_COST_AMT,0) /(SELECT U.USD_LOCL_XCH_RT  
                                              FROM GL_MON_XCH_RT U 
                                             WHERE U.ACCT_XCH_RT_YRMON =  REPLACE(@[gl_mon_to],'-')
                                               AND U.CURR_CD =  M.LOCL_CURR_CD
                                      		   AND U.ACCT_XCH_RT_LVL = '3'
                                      		   AND U.DELT_FLG 		 = 'N'), 2)
	                    ELSE DECODE(SUBSTR(M.EXE_YRMON,5,2),'12',M.USD_COST_AMT,0)
		                  END ),0),2) MON12
 FROM LEA_YRY_COST_BUD F, LEA_ACT_COST_IF M,
	 (SELECT  YY.RHQ_CD ,YY.OFC_CD , YY.SUB_OFC_CD
	  FROM( SELECT DISTINCT
                   	CASE WHEN XX.OFC_CD IN ('SELTBB','SELOPE') THEN 'SHARC' --('SELTOB','SELCOE') THEN 'SHAAS'
                         ELSE XX.OFC_N3RD_LVL_CD
                    END	      AS RHQ_CD
               	   ,CASE WHEN XX.OFC_CD IN ('SELTBB','SELOPE') THEN 'SELSC' --('SELTOB','SELCOE') THEN 'SELBB'
                         ELSE XX.OFC_N5TH_LVL_CD
                   	END       AS OFC_CD
               		, XX.OFC_CD AS SUB_OFC_CD
        	FROM(  SELECT *
                     FROM( SELECT L.OFC_N3RD_LVL_CD
                                      ,L.OFC_N5TH_LVL_CD
                                      ,L.OFC_CD
                                      ,L.OFC_APLY_TO_YRMON
                                      ,L.OFC_APLY_FM_YRMON
                                      ,ROW_NUMBER() OVER (PARTITION BY L.OFC_CD ORDER BY L.OFC_APLY_TO_YRMON DESC)  OFC_ORDER
                              FROM  COA_OFC_LVL L
                             WHERE  L.OFC_N3RD_LVL_CD IS NOT NULL
                               AND  L.OFC_N5TH_LVL_CD IS NOT NULL
                           ) X
                     WHERE X.OFC_ORDER = 1
                  ) XX
			  ) YY
	WHERE 1=1
    #if (${f_rhq_cd} != '')
     AND YY.RHQ_CD = @[f_rhq_cd]
    #end
    #if (${f_ofc_cd} != '')
	AND YY.OFC_CD = @[f_ofc_cd]
    #elseif(${f_report} == '2')
	AND YY.OFC_CD IN (    SELECT DISTINCT
						         LL.OFC_N5TH_LVL_CD
					 	   FROM   COA_OFC_LVL LL
					 			WHERE  1=1
					  			 AND CASE (
							         SELECT  OFC_LVL
								     FROM (
									   SELECT  L.OFC_LVL
									   FROM    COA_OFC_LVL L
									   WHERE   L.OFC_N3RD_LVL_CD IS NOT NULL
									   AND     L.OFC_N5TH_LVL_CD IS NOT NULL
									   AND     L.OFC_CD = @[bind_ofc_cd]    /* LOGIN-OFFICE CODE BINDING */
									   ORDER BY L.OFC_APLY_TO_YRMON  DESC
									  )
									   WHERE ROWNUM  = 1
									  )
									   WHEN '1' THEN 'XXXXX'
									   WHEN '2' THEN LL.OFC_N3RD_LVL_CD
									   WHEN '3' THEN LL.OFC_N3RD_LVL_CD
									   WHEN '4' THEN LL.OFC_CD
									   WHEN '5' THEN LL.OFC_CD
									   WHEN '6' THEN LL.OFC_CD
									   WHEN '7' THEN LL.OFC_CD
									   WHEN '9' THEN 'XXXXX'
									   ELSE          'XXXXX'
								 END = @[bind_ofc_cd]    /* LOGIN-OFFICE CODE BINDING */
					  AND LL.OFC_N5TH_LVL_CD IS NOT NULL
					 )
	#end
	#if (${f_sub_ofc_cd} != '')
		AND	YY.SUB_OFC_CD = @[f_sub_ofc_cd]
	#end
		) B
   		WHERE 1=1
		AND M.EXE_YRMON(+) BETWEEN REPLACE(@[gl_mon_from], '-') AND REPLACE(@[gl_mon_to], '-')
        AND F.BSE_YR = SUBSTR(@[gl_mon_from],1,4) -1
        AND F.COA_COST_SRC_CD = M.COA_COST_SRC_CD(+)
        AND F.CTRL_OFC_CD = decode(M.CTRL_OFC_CD(+) ,'PUSBS','PUSSC','PUSBO','PUSSC','SKGBA', 'PIRBA', M.CTRL_OFC_CD(+) )
        AND F.CTRL_OFC_CD = B.SUB_OFC_CD
        AND M.OTR_CRR_FLG(+)  = 'N'
   GROUP BY F.BSE_YR, B.RHQ_CD, F.CTRL_OFC_CD ,F.COA_COST_SRC_CD, F.TTL_USD_AMT ,F.MON_BUD_USD_AMT 
 )T,
  (SELECT DISTINCT DECODE(Y.MN_COST_TP_CD, 'TM', 'Terminal', 'TR', 'Transport', 'MT', 'Mty Reposition ', 'CH', 'Chassis ', 'ETC' ) MN_COST_TP_NM
		        ,Y.MN_COST_TP_CD COST_MN_TP
            ,CASE WHEN Y.SUB_COST_TP_NM like 'Full CNTR Transportation%' THEN
                      'Full CNTR Transportation' 
                  ELSE  Y.SUB_COST_TP_NM
             END SUB_COST_TP_NM      
		        ,X.COA_COST_SRC_CD, X.ACCT_CD, X.SUB_COST_TP_CD
		        ,X.LGS_COST_FULL_NM COST_DESC
                ,X.COST_SRC_SYS_CD
    FROM   LEA_LGS_COST X, LEA_SUB_COST_TP Y
    WHERE  X.SUB_COST_TP_CD = Y.SUB_COST_TP_CD
     AND   X.DELT_FLG = 'N'			 
     AND   Y.DELT_FLG = 'N'
   )C
 WHERE 1=1
 AND	T.COA_COST_SRC_CD = C.COA_COST_SRC_CD
 AND (1=2
 #if (${f_cost_type_f} == '1')
     OR C.COST_MN_TP IN ('TR', 'TM')
 #end
 #if (${f_cost_type_m} == '1')
     OR C.COST_MN_TP = 'MT'
 #end
 )
#if(${f_report} == '1') 
 GROUP BY T.RHQ_CD,
        C.COST_MN_TP,
        C.MN_COST_TP_NM,
        C.SUB_COST_TP_NM,
        T.COA_COST_SRC_CD,
        C.COST_DESC,
        C.COST_SRC_SYS_CD
)
ORDER BY
        (SUM(MON_BUD) OVER(PARTITION BY RHQ_CD)) DESC,
        (SUM(MON_BUD) OVER(PARTITION BY RHQ_CD, COST_SRC_SYS_CD)) DESC ,
        (SUM(MON_BUD) OVER(PARTITION BY RHQ_CD, COST_SRC_SYS_CD, SUB_COST_TP_NM)) DESC ,
        (SUM(MON_BUD) OVER(PARTITION BY RHQ_CD, COST_SRC_SYS_CD, SUB_COST_TP_NM, COA_COST_SRC_CD)) DESC

#else
)
ORDER BY
        (SUM(MON_BUD) OVER(PARTITION BY CTRL_OFC_CD)) DESC,
        (SUM(MON_BUD) OVER(PARTITION BY CTRL_OFC_CD, COST_SRC_SYS_CD)) DESC ,
        (SUM(MON_BUD) OVER(PARTITION BY CTRL_OFC_CD, COST_SRC_SYS_CD, SUB_COST_TP_NM)) DESC ,
        (SUM(MON_BUD) OVER(PARTITION BY CTRL_OFC_CD, COST_SRC_SYS_CD, SUB_COST_TP_NM, COA_COST_SRC_CD)) DESC

#end			]]></sql>
			<params>
				<param name="gl_mon_to" type="12" value="" out="N"/>
				<param name="gl_mon_from" type="12" value="" out="N"/>
				<param name="lstyr_to" type="12" value="" out="N"/>
				<param name="lstyr_from" type="12" value="" out="N"/>
				<param name="f_rhq_cd" type="12" value="" out="N"/>
				<param name="f_ofc_cd" type="12" value="" out="N"/>
				<param name="bind_ofc_cd" type="12" value="" out="N"/>
				<param name="f_sub_ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
