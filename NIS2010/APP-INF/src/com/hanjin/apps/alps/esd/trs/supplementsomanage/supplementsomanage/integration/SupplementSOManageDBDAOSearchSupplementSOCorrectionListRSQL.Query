<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SupplementSOManageDBDAOSearchSupplementSOCorrectionListRSQL">
			<desc><![CDATA[Supplement Correction 대상 목록 조회]]></desc>
			<sql><![CDATA[
SELECT 
    X.BASIS_NO ,
    Z.BASIS_NO2 ,
    '' IBCHECK ,
    NVL(X.TRSP_SPL_SO_TP_CD, 'AS') TRSP_SPL_SO_TP_CD ,
    DECODE(Z.BASIS_NO2, 1, 'WorkOrder', 2, 'Invoiced', 3, 'Adjusted') AMOUNT_KIND ,
    NVL(X.TRSP_SO_CMB_TP_CD , '　') TRSP_SO_CMB_TP_CD ,
    NVL(X.TRSP_SO_CMB_SEQ , '　') TRSP_SO_CMB_SEQ ,
    NVL(X.TRSP_SO_CMB_SRT_NO , '　') TRSP_SO_CMB_SRT_NO ,
    X.EQ_NO ,
    DECODE(X.EQ_TPSZ_CD , NULL, '　', EQ_TPSZ_CD ) EQ_TPSZ_CD ,
    DECODE(X.TRSP_COST_DTL_MOD_CD , NULL, '　', TRSP_COST_DTL_MOD_CD ) TRSP_COST_DTL_MOD_CD ,
    DECODE(X.TRSP_CRR_MOD_CD , NULL, '　', TRSP_CRR_MOD_CD ) TRSP_CRR_MOD_CD ,
    NVL(X.FM_NOD_CD , '　') FM_NOD_CD ,
    NVL(X.VIA_NOD_CD, '　') VIA_NOD_CD ,
    NVL(X.TO_NOD_CD , '　') TO_NOD_CD ,
    NVL(X.DOR_NOD_CD, '　') DOR_NOD_CD ,
    DECODE(X.FM_LOC , NULL, '　', FM_LOC ) FM_LOC ,
    DECODE(X.FM_YARD , NULL, '　', FM_YARD ) FM_YARD ,
    DECODE(X.VIA_LOC , NULL, '　', VIA_LOC ) VIA_LOC ,
    DECODE(X.VIA_YARD , NULL, '　', VIA_YARD ) VIA_YARD ,
    DECODE(X.TO_LOC , NULL, '　', TO_LOC ) TO_LOC ,
    DECODE(X.TO_YARD , NULL, '　', TO_YARD ) TO_YARD ,
    DECODE(X.DOR_LOC , NULL, '　', DOR_LOC ) DOR_LOC ,
    DECODE(X.DOR_ZONE , NULL, '　', DOR_ZONE ) DOR_ZONE ,
    DECODE(X.CUST_VAL , NULL, '　', CUST_VAL ) CUST_VAL ,
    DECODE(X.DOR_DE_ADDR , NULL, '　', DOR_DE_ADDR ) DOR_DE_ADDR ,
    DECODE(X.VNDR_SEQ , NULL, '　', VNDR_SEQ ) VNDR_SEQ ,
	DECODE(X.VNDR_SEQ             , NULL, '　', TRS_COMMON_PKG.GET_VNDR_FULL_NM_FNC(VNDR_SEQ)) VNDR_NM, 
    DECODE(X.BKG_SQ , NULL, '　', BKG_SQ ) BKG_SQ ,
    DECODE(X.BL_NO , NULL, '　', BL_NO ) BL_NO ,
    DECODE(X.TRUCK_VVD , NULL, '　', TRUCK_VVD ) TRUCK_VVD ,
    DECODE(X.SO_NUMBER , NULL, '　', SO_NUMBER ) SO_NUMBER ,
    DECODE(X.WO_NUMBER , NULL, '　', WO_NUMBER ) WO_NUMBER ,
    DECODE(X.LOCL_CRE_DT , NULL, '　', TO_CHAR(X.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI') ) CRE_DT ,
    DECODE(X.LOCL_CRE_DT , NULL, '　', TO_CHAR(X.LOCL_CRE_DT, 'YYYY-MM-DD HH24:MI:SS') ) CREATE_DATE ,
    DECODE(X.INV_NO , NULL, '　', INV_NO ) INV_NO ,
    DECODE(X.INV_CFM_DT , NULL, '　', TO_CHAR(INV_CFM_DT, 'YYYY-MM-DD HH24:MI') ) INV_CFM_DT ,
    DECODE(X.REF_NO , NULL, '　', REF_NO ) REF_NO ,
    DECODE(X.SPL_ISS_RSN , NULL, '　', SPL_ISS_RSN ) SPL_ISS_RSN ,
    X.TRSP_SO_OFC_CTY_CD ,
    X.TRSP_SO_SEQ ,
    DECODE(BASIS_NO2, 1, X.TRSP_AGMT_RT_TP_CD , 2, X.TRSP_AGMT_RT_TP_CD , 3, X.TRSP_AGMT_RT_TP_CD ) AGMT_RT_TP_CD ,
    DECODE(BASIS_NO2, 1, X.TRSP_AGMT_WY_TP_CD , 2, X.TRSP_AGMT_WY_TP_CD , 3, X.TRSP_AGMT_WY_TP_CD ) AGMT_WY_TP_CD ,
    DECODE(BASIS_NO2, 1, X.WO_CURR_CD , 2, X.INV_CURR_CD, 3, X.SO_CURR_CD ) CURR_CD ,
    DECODE(BASIS_NO2, 1, X.WO_BZC_AMT , 2, X.INV_BZC_AMT , 3, X.SO_BZC_AMT ) BZC_AMT ,
	DECODE(BASIS_NO2, 1, X.WO_FUEL_SCG_AMT , 2, 0 , 3, X.SO_FUEL_SCG_AMT ) FUEL_SCG_AMT ,					  
	DECODE(BASIS_NO2, 1, X.WO_OVR_WGT_SCG_AMT , 2, 0 , 3, X.SO_OVR_WGT_SCG_AMT ) OVR_WGT_SCG_AMT ,					
    DECODE(BASIS_NO2, 1, X.WO_ETC_ADD_AMT , 2, X.INV_ETC_ADD_AMT , 3, X.SO_ETC_ADD_AMT ) ETC_ADD_AMT ,					
    DECODE(BASIS_NO2, 1, X.WO_TOT_AMT , 2, X.TOT_INV_AMT , 3, X.SO_TOT_AMT ) TOT_AMT ,
    NVL(X.TRSP_SO_TP_CD , '　') TRSP_SO_TP_CD ,
    NVL(X.TRSP_BND_CD , '　') TRSP_BND_CD ,
    NVL(X.EQ_KND_CD , '　') EQ_KND_CD ,
    NVL(X.BKG_NO , '　') BKG_NO ,
    X.BDL_KNT ,
    X.WGT_MEAS_UT_CD ,
    X.CNTR_WGT ,
    X.CRE_OFC_CD ,
    X.CGO_TP_CD ,
    NVL(X.CUST_NOMI_TRKR_FLG, 'N') CUST_NOMI_TRKR_FLG ,
    X.CUST_CNT_CD ,
    X.CUST_SEQ ,
    X.CMDT_CD ,
    X.TRSP_DFLT_VNDR_FLG,
	X.TTL_DIST,
	NVL(X.LNK_DIST_DIV_CD,' ') LNK_DIST_DIV_CD
FROM 
(
    SELECT 
        ROWNUM BASIS_NO ,
        A.TRSP_SPL_SO_TP_CD ,
        A.TRSP_SO_CMB_TP_CD ,
        TO_CHAR(A.TRSP_SO_CMB_SEQ) TRSP_SO_CMB_SEQ ,
        A.TRSP_SO_CMB_SRT_NO ,
        A.EQ_NO ,
        A.EQ_TPSZ_CD ,
        A.TRSP_COST_DTL_MOD_CD ,
        A.TRSP_CRR_MOD_CD ,
        A.FM_NOD_CD ,
        A.VIA_NOD_CD ,
        A.TO_NOD_CD ,
        A.DOR_NOD_CD ,
        SUBSTR(A.FM_NOD_CD , 1, 5) FM_LOC ,
        SUBSTR(A.FM_NOD_CD , 6, 2) FM_YARD ,
        SUBSTR(A.VIA_NOD_CD, 1, 5) VIA_LOC ,
        SUBSTR(A.VIA_NOD_CD, 6, 2) VIA_YARD ,
        SUBSTR(A.TO_NOD_CD , 1, 5) TO_LOC ,
        SUBSTR(A.TO_NOD_CD , 6, 2) TO_YARD ,
        SUBSTR(A.DOR_NOD_CD, 1, 5) DOR_LOC ,
        SUBSTR(A.DOR_NOD_CD, 6, 2) DOR_ZONE ,
        A.CUST_CNT_CD||A.CUST_SEQ CUST_VAL ,
        A.CUST_NOMI_TRKR_FLG ,
        A.CUST_CNT_CD ,
        A.CUST_SEQ ,
        A.DOR_DE_ADDR ,
        A.VNDR_SEQ ,
        A.TRSP_AGMT_RT_TP_CD ,
        A.TRSP_AGMT_WY_TP_CD ,
        AA.CURR_CD WO_CURR_CD ,
        AA.BZC_AMT WO_BZC_AMT ,
        AA.FUEL_SCG_AMT WO_FUEL_SCG_AMT ,
        AA.OVR_WGT_SCG_AMT WO_OVR_WGT_SCG_AMT ,
        AA.ETC_ADD_AMT WO_ETC_ADD_AMT ,
        NVL(AA.BZC_AMT, 0)+NVL(AA.FUEL_SCG_AMT, 0)+NVL(AA.OVR_WGT_SCG_AMT, 0)+NVL(AA.ETC_ADD_AMT, 0) WO_TOT_AMT ,
        AA.INV_CURR_CD ,
        AA.INV_BZC_AMT ,
        AA.INV_ETC_ADD_AMT ,
		NVL(AA.INV_BZC_AMT, 0)+NVL(AA.INV_ETC_ADD_AMT, 0) TOT_INV_AMT ,
        A.CURR_CD SO_CURR_CD ,
        A.BZC_AMT SO_BZC_AMT ,
        A.FUEL_SCG_AMT SO_FUEL_SCG_AMT ,
        A.OVR_WGT_SCG_AMT SO_OVR_WGT_SCG_AMT ,
        A.ETC_ADD_AMT SO_ETC_ADD_AMT ,
        NVL(A.BZC_AMT, 0)+NVL(A.FUEL_SCG_AMT, 0)+NVL(A.OVR_WGT_SCG_AMT, 0)+NVL(A.ETC_ADD_AMT, 0) SO_TOT_AMT ,	
		A.BKG_NO BKG_SQ ,									  
		A.BL_NO AS BL_NO , 									
        A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD TRUCK_VVD ,
        A.TRSP_SO_OFC_CTY_CD||A.TRSP_SO_SEQ SO_NUMBER ,
        AA.TRSP_WO_OFC_CTY_CD||AA.TRSP_WO_SEQ WO_NUMBER ,
        B.LOCL_CRE_DT ,
        AA.INV_NO ,
        C.INV_CFM_DT ,
        AA.REF_ID||AA.REF_SEQ REF_NO ,
        A.SPL_ISS_RSN ,
        A.TRSP_SO_OFC_CTY_CD ,
        A.TRSP_SO_SEQ ,
        A.TRSP_SO_TP_CD ,
        A.TRSP_BND_CD ,
        A.EQ_KND_CD ,
        A.BKG_NO ,
        CASE    
            WHEN A.EQ_KND_CD = 'Z' AND A.TRSP_SO_CMB_TP_CD = 'BD' 
                THEN COUNT(*) OVER (PARTITION BY A.TRSP_SO_CMB_TP_CD, A.TRSP_SO_CMB_SEQ) 
            WHEN A.EQ_KND_CD = 'Z' THEN 1 
            WHEN A.EQ_KND_CD = 'U' AND SUBSTR(A.EQ_TPSZ_CD, 1, 1) = 'F' AND A.TRSP_SO_CMB_TP_CD = 'BD' 
                THEN COUNT(*) OVER (PARTITION BY A.TRSP_SO_CMB_TP_CD, A.TRSP_SO_CMB_SEQ) 
            WHEN A.EQ_KND_CD = 'U' AND SUBSTR(A.EQ_TPSZ_CD, 1, 1) = 'F' THEN 1 
        ELSE 0 
        END BDL_KNT ,
        A.WGT_MEAS_UT_CD ,
        A.CNTR_WGT ,
        A.CRE_OFC_CD ,
        A.CGO_TP_CD ,
        A.CMDT_CD ,
        NVL(A.TRSP_DFLT_VNDR_FLG, 'N') TRSP_DFLT_VNDR_FLG,
		A.TTL_DIST,
		A.LNK_DIST_DIV_CD
    FROM TRS_TRSP_SVC_ORD AA ,
        TRS_TRSP_SVC_ORD A ,
        TRS_TRSP_WRK_ORD B ,
        TRS_TRSP_INV_WRK C
    WHERE AA.TRSP_SO_OFC_CTY_CD = A.PRNT_TRSP_SO_OFC_CTY_CD
        AND AA.TRSP_SO_SEQ = A.PRNT_TRSP_SO_SEQ
        AND AA.TRSP_WO_OFC_CTY_CD = B.TRSP_WO_OFC_CTY_CD
        AND AA.TRSP_WO_SEQ = B.TRSP_WO_SEQ
        AND AA.INV_NO = C.INV_NO
        AND AA.INV_VNDR_SEQ = C.INV_VNDR_SEQ
        AND NVL(A.DELT_FLG, 'N') = 'N'
        AND A.TRSP_SO_STS_CD IN ('C', 'R')
        AND A.TRSP_SO_TP_CD = 'S'
        AND A.TRSP_SO_OFC_CTY_CD = @[loginUsrOfcCtyCd]
        AND A.TRSP_SPL_SO_TP_CD = @[hid_kind]
        AND A.EQ_KND_CD = @[hid_eq_radio]

		#if(!($sonumberArr.size() > 0 || $wonumberArr.size() > 0 || $bkgnumberArr.size() > 0 
            || $blnumberArr.size() > 0 || $vvdnumberArr.size() > 0 || $refnumberArr.size() > 0 || $invnumberArr.size() > 0))
       		AND A.LOCL_CRE_DT >= TO_DATE(NVL(@[from_date], '20070101'), 'YYYYMMDD')
        	AND A.LOCL_CRE_DT < TO_DATE(NVL(@[to_date], '99991231'), 'YYYYMMDD')+0.99999
		#end

        AND NVL(A.TRSP_BND_CD , 'N/A') 			= NVL(@[hid_boundmode], NVL(A.TRSP_BND_CD , 'N/A'))
        AND NVL(A.TRSP_COST_DTL_MOD_CD , 'N/A') = NVL(@[hid_costmode], NVL(A.TRSP_COST_DTL_MOD_CD , 'N/A'))
        AND NVL(A.TRSP_CRR_MOD_CD , 'N/A') 		= NVL(@[hid_transmode], NVL(A.TRSP_CRR_MOD_CD , 'N/A'))
        AND NVL(A.VNDR_SEQ , 0 ) 				= NVL(@[hid_provider], NVL(A.VNDR_SEQ , 0 )) 
        -- /* 2008.04.29 ETS OPEN */
        AND AA.HJL_NO IS NULL
        AND A.HJL_NO IS NULL
        AND B.HJL_NO IS NULL
        AND C.HJL_NO IS NULL

      	#if(${hid_from_node} != '')
        	AND A.FM_NOD_CD LIKE @[hid_from_node]||'%'
      	#end
        
      	#if(${hid_via_node} != '')
        	AND A.VIA_NOD_CD LIKE @[hid_via_node]||'%' 
      	#end
        
      	#if(${hid_to_node} != '')
       		AND A.TO_NOD_CD LIKE @[hid_to_node]||'%'
      	#end
      
      	#if(${hid_dor_node} != '')
        	AND A.DOR_NOD_CD LIKE @[hid_dor_node]||'%'
      	#end

      	-- //2009-03-12 CSR 요건 추가
      	#if(${hid_tp_sz} != '' && ${hid_tp_sz}!='ALL')
        	AND A.EQ_TPSZ_CD = @[hid_tp_sz]
      	#end

      	#if($vvdnumberArr.size() > 0) 
       		AND (( A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD ) IN (
	       		#foreach( ${key} in ${vvdnumberArr}) 
		      		#if($velocityCount == 1)
 			    		( '${key.vslCd}', '${key.skdVoyNo}', '${key.skdDirCd}' )
		      		#else 
 			    		, ( '${key.vslCd}', '${key.skdVoyNo}', '${key.skdDirCd}' )
		      		#end 
	       		#end 
        	))
      	#end 

      	#if($refnumberArr.size() > 0) 
        	AND (
	       		#foreach( ${key} in ${refnumberArr}) 
		      		#if($velocityCount == 1)
 			  			( 
							A.REF_ID = '${key.refId}' 
							#if(${key.refSeq} != '') 
								AND A.REF_SEQ = ${key.refSeq} 
							#end
						)
		      		#else 
 			    		OR ( 
							A.REF_ID = '${key.refId}' 
							#if(${key.refSeq} != '') 
								AND A.REF_SEQ = ${key.refSeq} 
							#end
						)
		      		#end 
	       		#end 
       		)
      	#end 
     
     	#if($sonumberArr.size() > 0) 
      		AND ( 
	       			#foreach( ${key} in ${sonumberArr}) 			
		      			#if($velocityCount == 1)
 			     			( A.TRSP_SO_OFC_CTY_CD =  '${key.trspSoOfcCtyCd}'
							#if(${key.trspSoSeq}!= '')
								AND A.TRSP_SO_SEQ = ${key.trspSoSeq}
							#end
							)
		      			#else 
 			     			OR ( A.TRSP_SO_OFC_CTY_CD =  '${key.trspSoOfcCtyCd}'
							#if(${key.trspSoSeq} != '')
								AND A.TRSP_SO_SEQ = ${key.trspSoSeq}
							#end
							)
						#end 
	       			#end 
				)
       	#end 

      	#if($wonumberArr.size() > 0) 
      		AND ( 
	       			#foreach( ${key} in ${wonumberArr}) 			
		      			#if($velocityCount == 1)
 			     			( AA.TRSP_WO_OFC_CTY_CD =  '${key.trspWoOfcCtyCd}'
							#if(${key.trspWoSeq}!= '')
								AND AA.TRSP_WO_SEQ = ${key.trspWoSeq}
							#end
							)
		      			#else 
 			     			OR ( AA.TRSP_WO_OFC_CTY_CD =  '${key.trspWoOfcCtyCd}'
							#if(${key.trspWoSeq} != '')
								AND AA.TRSP_WO_SEQ = ${key.trspWoSeq}
							#end
							)
						#end 
	       			#end 
				)
       	#end 
     
      	#if($blnumberArr.size() > 0) 
        	AND A.BL_NO IN (
	       		#foreach( ${key} in ${blnumberArr}) 
		      		#if($velocityCount == 1)
 			    		'${key}'
		      		#else 
 			    		, '${key}'
		      		#end 
	       		#end 
        	)
      	#end 

      	#if($bkgnumberArr.size() > 0)
  	     	AND A.BKG_NO IN (
	       		#foreach( ${key} in ${bkgnumberArr}) 
		      		#if($velocityCount == 1)
 			    		'${key}'	
		      		#else 
 			    		, '${key}'	
		      		#end 
	       		#end 
	    	)
      	#end      
 
      	#if($eqnumberArr.size() > 0)
  	     	AND A.EQ_NO IN (
	       		#foreach( ${key} in ${eqnumberArr}) 
		      		#if($velocityCount == 1)
 			    		'${key}'	
		      		#else 
 			    		, '${key}'	
		      		#end 
	       		#end 
	     	)
      	#end    
  
	    ORDER BY   EQ_NO ASC                                                                   
	    	, TRSP_SPL_SO_TP_CD     ASC                                                                   
	        , EQ_TPSZ_CD            ASC                                                                   
	        , TRSP_COST_DTL_MOD_CD  ASC                                                                   
	        , TRSP_CRR_MOD_CD       ASC                                                                   
	        , WO_NUMBER             ASC         		                                                   
) X,                                                                                                      
(                                                                                                      
	SELECT 1 BASIS_NO2 	FROM DUAL	
	UNION ALL         
    SELECT 2 			FROM DUAL	
	UNION ALL         
    SELECT 3			FROM DUAL	                   
) Z                                                                                                    
ORDER BY   X.BASIS_NO  ASC, Z.BASIS_NO2 ASC			]]></sql>
			<params>
				<param name="loginUsrOfcCtyCd" type="12" value="" out="N"/>
				<param name="hid_kind" type="12" value="" out="N"/>
				<param name="hid_eq_radio" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="hid_boundmode" type="12" value="" out="N"/>
				<param name="hid_costmode" type="12" value="" out="N"/>
				<param name="hid_transmode" type="12" value="" out="N"/>
				<param name="hid_provider" type="12" value="" out="N"/>
				<param name="hid_from_node" type="12" value="" out="N"/>
				<param name="hid_via_node" type="12" value="" out="N"/>
				<param name="hid_to_node" type="12" value="" out="N"/>
				<param name="hid_dor_node" type="12" value="" out="N"/>
				<param name="hid_tp_sz" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
