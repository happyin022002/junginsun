<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TESeBillingManageBizType000DBDAOValidateEDIInvoice01RSQL">
			<desc><![CDATA[EDI invoice data 유효성 확인]]></desc>
			<sql><![CDATA[
SELECT
	CASE WHEN (NVL((SELECT COUNT(H.INV_NO)
			FROM TES_TML_SO_HDR H
			WHERE NVL(H.DELT_FLG,'N') <> 'Y'
			AND H.TML_INV_STS_CD IN ('R','C','A','P','D')
			AND H.VNDR_SEQ = Y.VNDR_SEQ 
			AND H.INV_NO = Y.INV_NO),0) >= 1
		OR NVL((SELECT COUNT(H.INV_NO)
			FROM TES_EDI_SO_HDR H
			WHERE NVL(H.DELT_FLG,'N') <> 'Y'
			AND H.TML_INV_STS_CD IN ('R')
			AND NVL(H.TML_INV_RJCT_STS_CD,'N') = 'NL'
			AND NVL(H.VLD_CHK_FLG,'N') = 'Y'
			AND H.TML_SO_OFC_CTY_CD IS NULL 
			AND H.TML_SO_SEQ IS NULL
			AND H.VNDR_SEQ = Y.VNDR_SEQ AND H.INV_NO = Y.INV_NO),0) >= 1)
		THEN 'INVOICE DUPLICATED'
		ELSE ''
	END DUP_CHK
	, Y.TML_INV_TP_CD_CHK
	, Y.INV_OFC_CD_CHK
	, Y.COST_OFC_CD_CHK
	, Y.VNDR_SEQ_CHK
	, Y.YD_CD_CHK
	, Y.INV_NO_CHK
	, Y.CURR_CD_CHK
	, Y.TTL_INV_AMT_CHK
    , Y.ISS_DT_CHK
	, Y.DTL_RATE_CHK
	, Y.DTL_LGS_COST_CD_CHK
	, Y.DTL_MNL_COST_CD_CHK
	, Y.DTL_INV_AMT_CHK
	, Y.DTL_VOL_QTY_CHK
	, Y.DTL_STAY_DYS_CHK
	, Y.DTL_VVD_CHK
	, Y.CNTR_LIST_VVD_CHK
	, Y.DTL_IO_BND_CD_CHK
	, Y.CNTR_STY_CD_CHK
	, Y.CNTR_IO_BND_CD_CHK
	, Y.CNTR_CNTR_NO_CHK
	, Y.INV_GATE_IN_TM_MSG
	, Y.INV_GATE_OUT_TM_MSG
	, Y.GATE_IN_OUT_DT_CHK
	, Y.RF_COST_CD_TPSZ_CHK    
	, CASE WHEN (NVL(Y.CNTR_LIST_KNT,0) + NVL(Y.DTL_LIST_KNT,0)) <= 0
	       THEN 'NO DATA FOUND'
	       ELSE ''
	  END BODY_CHK
FROM	(
	SELECT	MAX(VNDR_SEQ)           VNDR_SEQ
		, MAX(INV_NO)             INV_NO
		, MAX(TML_INV_TP_CD_CHK)  TML_INV_TP_CD_CHK
		, MAX(INV_OFC_CD_CHK)     INV_OFC_CD_CHK
		, MAX(COST_OFC_CD_CHK)    COST_OFC_CD_CHK
		, MAX(VNDR_SEQ_CHK)       VNDR_SEQ_CHK
		, MAX(YD_CD_CHK)          YD_CD_CHK
		, MAX(INV_NO_CHK)         INV_NO_CHK
		, MAX(CURR_CD_CHK)        CURR_CD_CHK
		, MAX(TTL_INV_AMT_CHK)    TTL_INV_AMT_CHK
        , MAX(ISS_DT_CHK)         ISS_DT_CHK
		, MAX(DTL_LGS_COST_CD_CHK) DTL_LGS_COST_CD_CHK
		, MAX(DTL_MNL_COST_CD_CHK) DTL_MNL_COST_CD_CHK
		, MAX(DTL_RATE_CHK)       DTL_RATE_CHK
		, MAX(DTL_INV_AMT_CHK)    DTL_INV_AMT_CHK
		, MAX(DTL_VOL_QTY_CHK)    DTL_VOL_QTY_CHK
		, MAX(DTL_STAY_DYS_CHK)   DTL_STAY_DYS_CHK
		, MAX(DTL_VVD_CHK)        DTL_VVD_CHK
		, MAX(CNTR_LIST_VVD_CHK)  CNTR_LIST_VVD_CHK
        , MAX(DTL_IO_BND_CD_CHK)  DTL_IO_BND_CD_CHK
		, MAX(CNTR_STY_CD_CHK)    CNTR_STY_CD_CHK
		, MAX(CNTR_IO_BND_CD_CHK) CNTR_IO_BND_CD_CHK
		, MAX(CNTR_CNTR_NO_CHK)   CNTR_CNTR_NO_CHK
		, MAX(INV_GATE_IN_TM_MSG) INV_GATE_IN_TM_MSG
		, MAX(INV_GATE_OUT_TM_MSG) INV_GATE_OUT_TM_MSG
		, MAX(GATE_IN_OUT_DT_CHK) GATE_IN_OUT_DT_CHK
		, MAX(RF_COST_CD_TPSZ_CHK) RF_COST_CD_TPSZ_CHK
		, MAX(CNTR_LIST_KNT) CNTR_LIST_KNT
		, MAX(DTL_LIST_KNT) DTL_LIST_KNT
	FROM	( 
			SELECT /***  HDR INFO ***/
			DISTINCT
			CASE 
			WHEN H.TML_INV_TP_CD IS NULL
			THEN 'INVOICE TYPE MISSING'
			WHEN H.TML_INV_TP_CD NOT IN('TM','ST','OF','ON')
			THEN 'WRONG INVOICE TYPE'
			ELSE ''
			END TML_INV_TP_CD_CHK,
			CASE 
			WHEN H.INV_OFC_CD   IS NULL 
			THEN 'INVOICE OFFICE MISSING'
			WHEN IO.OFC_CD      IS NULL 
			THEN 'WRONG INVOICE OFFICE'
			ELSE ''
			END INV_OFC_CD_CHK,
			CASE 
			WHEN H.COST_OFC_CD  IS NULL 
			THEN 'COST OFFICE MISSING'
			WHEN CO.OFC_CD      IS NULL 
			THEN 'WRONG COST OFFICE'
			ELSE ''
			END COST_OFC_CD_CHK,
			CASE 
			WHEN H.VNDR_SEQ     IS NULL 
			THEN 'S/P CODE MISSING'
			WHEN V.VNDR_SEQ     IS NULL 
			THEN 'WRONG S/P CODE'
			ELSE ''
			END VNDR_SEQ_CHK,
			CASE 
			WHEN H.YD_CD        IS NULL 
			THEN 'YARD CODE MISSING'
			WHEN Y.YD_CD        IS NULL 
			THEN 'WRONG YARD CODE'
			ELSE ''
			END YD_CD_CHK,
			CASE 
			WHEN H.INV_NO       IS NULL 
			THEN 'INVOICE No. MISSING'
			ELSE ''
			END INV_NO_CHK,
			CASE 
			WHEN H.CURR_CD      IS NULL 
			THEN 'CURRENCY MISSING'
			WHEN MC.CURR_CD     IS NULL 
			THEN 'WRONG CURRENCY'
			ELSE ''
			END CURR_CD_CHK,
			CASE 
			WHEN H.TTL_INV_AMT  IS NULL 
			THEN 'TOTAL INVOICE AMOUNT MISSING'
			ELSE ''
			END TTL_INV_AMT_CHK,
			CASE 
			WHEN H.ISS_DT  IS NULL 
			THEN 'ISSUE DATE MISSING'
			ELSE ''
			END ISS_DT_CHK,
			/*** DTL ***/
			CASE 
			WHEN D.TML_EDI_SO_DTL_SEQ IS NOT NULL
			THEN
				CASE 
				WHEN D.LGS_COST_CD IS NULL 
				THEN 'TARIFF MISSING AT DTL LIST'
				WHEN TC.LGS_COST_CD IS NULL 
				THEN 'WRONG TARIFF AT DTL LIST'
				ELSE ''
				END
			ELSE ''
			END DTL_LGS_COST_CD_CHK,
			CASE 
			WHEN D.TML_EDI_SO_DTL_SEQ IS NOT NULL
			THEN
				CASE 
				WHEN TC.COST_CALC_MZD_CD IS NOT NULL AND COST_CALC_MZD_CD <> 'M'
				THEN 'AUTOMATIC AUDIT COST CODE FOUND AT DTL LIST'
				ELSE ''
				END
			ELSE ''
			END DTL_MNL_COST_CD_CHK,
			CASE 
			WHEN D.TML_EDI_SO_DTL_SEQ IS NOT NULL AND D.CTRT_RT IS NULL
			THEN 'RATE MISSING AT DTL LIST'
			END DTL_RATE_CHK,
			CASE 
			WHEN D.TML_EDI_SO_DTL_SEQ IS NOT NULL
			THEN 
				CASE 
				WHEN D.INV_AMT IS NULL 
				THEN 'INVOICE AMOUNT MISSING AT DTL LIST'
				ELSE ''
				END
			END DTL_INV_AMT_CHK,
			CASE 
			WHEN H.TML_INV_TP_CD IN('TM') AND D.TML_EDI_SO_DTL_SEQ IS NOT NULL AND D.CALC_VOL_QTY IS NULL
			THEN 'VOLUME QTY MISSING AT DTL LIST'
			ELSE ''
			END DTL_VOL_QTY_CHK,
			CASE 
			WHEN H.TML_INV_TP_CD IN('ST') AND D.TML_EDI_SO_DTL_SEQ IS NOT NULL AND D.STAY_DYS IS NULL
			THEN 'STAY DAYS MISSING AT DTL LIST'
			ELSE ''
			END DTL_STAY_DYS_CHK,
            CASE 
			WHEN H.TML_INV_TP_CD IN('TM') AND D.TML_EDI_SO_DTL_SEQ IS NOT NULL
			THEN
				CASE 
				WHEN D.IO_BND_CD IS NULL
				THEN 'I/O BOUND MISSING AT DTL LIST'
				WHEN D.IO_BND_CD NOT IN('I','O')
				THEN 'WRONG I/O BOUND AT DTL LIST'
				ELSE ''
				END
			ELSE ''
			END DTL_IO_BND_CD_CHK,
			CASE 
			WHEN H.TML_INV_TP_CD IN('TM') AND D.TML_EDI_SO_DTL_SEQ IS NOT NULL
			THEN
				CASE 
--				WHEN D.VSL_CD IS NULL AND D.SKD_VOY_NO IS NULL AND D.SKD_DIR_CD IS NULL
--				THEN 'VVD MISSING AT DTL LIST'
				WHEN (D.VSL_CD IS NULL OR D.SKD_VOY_NO IS NULL OR D.SKD_DIR_CD IS NULL)
				THEN 'WRONG VVD AT DTL LIST'
				ELSE ''
				END
			ELSE ''
			END DTL_VVD_CHK,
        	CASE
			WHEN D.TML_EDI_SO_DTL_SEQ IS NOT NULL
			THEN 
                CASE 
				-- CHM-201432352 [TESLEA] 철도운송 RF 화물 Genset 관련 Cost Code 생성 (TMRFGR) 추가 - 4347-10-13
                WHEN D.LGS_COST_CD IS NOT NULL AND D.LGS_COST_CD IN ('SVSCRF','TMRFGO','TMRFMO','TMRFPL','TMRFPT','TMRFXX','TMRFGR')
                THEN 
                    CASE
                    WHEN D.CNTR_TPSZ_CD IS NOT NULL
                    THEN 
                        CASE
                        WHEN TES_GET_EDI_CNTR_TPSZ_CD_FNC(H.VNDR_SEQ,D.CNTR_TPSZ_CD) IS NULL OR SUBSTR(TES_GET_EDI_CNTR_TPSZ_CD_FNC(H.VNDR_SEQ,D.CNTR_TPSZ_CD),1,1) != 'R'
                        THEN 'WRONG REEFER CONTAINER TYPE SIZE AT DTL LIST'
                        ELSE ''
                        END 
                    ELSE 
                        CASE 
                        WHEN D.CNTR_NO IS NOT NULL
                        THEN 
                            CASE
                            WHEN TES_GET_EDI_CNTR_TPSZ_CD_FNC(H.VNDR_SEQ,D.CNTR_TPSZ_CD,D.CNTR_NO) IS NULL OR SUBSTR(TES_GET_EDI_CNTR_TPSZ_CD_FNC(H.VNDR_SEQ,D.CNTR_TPSZ_CD,D.CNTR_NO),1,1) != 'R'
                            THEN 'WRONG REEFER CONTAINER TYPE SIZE AT DTL LIST'
                            ELSE ''
                            END
                        ELSE 'WRONG CONTAINER TPSZ CODE AT DTL LIST'
                        END
                    END
                ELSE ''
                END
			ELSE ''
			END RF_COST_CD_TPSZ_CHK,
			/*** CNTR LIST ***/
			CASE 
			WHEN H.TML_INV_TP_CD IN('TM') AND C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL
			THEN
				CASE 
--				WHEN C.VSL_CD IS NULL AND C.SKD_VOY_NO IS NULL AND C.SKD_DIR_CD IS NULL
--				THEN 'VVD MISSING AT CNTR LIST'
				WHEN (C.VSL_CD IS NULL OR C.SKD_VOY_NO IS NULL OR C.SKD_DIR_CD IS NULL)
				THEN 'WRONG VVD AT CNTR LIST'
				ELSE ''
				END
			ELSE ''
			END CNTR_LIST_VVD_CHK,
			CASE 
			WHEN H.TML_INV_TP_CD IN('TM') AND C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL
			THEN
				CASE 
				WHEN C.CNTR_STY_CD IS NULL
				THEN 'FULL/EMPTY MISSING AT CNTR LIST'
				WHEN C.CNTR_STY_CD NOT IN('F','M')
				THEN 'WRONG FULL/EMPTY AT CNTR LIST'
				ELSE ''
				END
			ELSE ''
			END CNTR_STY_CD_CHK,
			CASE 
			WHEN  H.TML_INV_TP_CD IN('TM') AND C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL
			THEN 
				CASE 
				WHEN C.IO_BND_CD IS NULL
				THEN 'I/O BOUND MISSING AT CNTR LIST'
				WHEN C.IO_BND_CD NOT IN('I','O')
				THEN 'WRONG I/O BOUND AT CNTR LIST'
				ELSE ''
				END
			ELSE ''
			END CNTR_IO_BND_CD_CHK,
			CASE 
			WHEN C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL
			THEN 
				CASE 
				WHEN C.CNTR_NO IS NULL 
				THEN 'CNTR NO IS MISSING AT CNTR LIST'
				ELSE ''
				END
			ELSE ''
			END CNTR_CNTR_NO_CHK,
			CASE 
			WHEN H.TML_INV_TP_CD IN('ST') AND C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL 
			THEN 
				CASE
				WHEN C.INV_GATE_IN_TM_MSG IS NULL 
				THEN 'GATE IN DATE MISSING'
				WHEN C.INV_GATE_IN_TM_MSG IS NOT NULL AND LENGTH(C.INV_GATE_IN_TM_MSG) NOT IN (8,12)
				THEN 'WRONG GATE IN DATE FORMAT'
				END
			ELSE ''
  		    END INV_GATE_IN_TM_MSG,
			CASE 
			WHEN H.TML_INV_TP_CD IN('ST') AND C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL 
            THEN 
				CASE
				WHEN C.INV_GATE_OUT_TM_MSG  IS NULL 
				THEN 'GATE OUT DATE MISSING'
				WHEN C.INV_GATE_OUT_TM_MSG IS NOT NULL AND LENGTH(C.INV_GATE_OUT_TM_MSG) NOT IN (8,12)
				THEN 'WRONG GATE OUT DATE FORMAT'
				END
			ELSE ''
			END INV_GATE_OUT_TM_MSG,
			CASE 
			WHEN H.TML_INV_TP_CD IN('ST') AND C.TML_EDI_SO_CNTR_LIST_SEQ IS NOT NULL 
			THEN 
				CASE
				WHEN C.INV_GATE_IN_TM_MSG IS NOT NULL AND LENGTH(C.INV_GATE_IN_TM_MSG) NOT IN (8,12) 
					 AND C.INV_GATE_OUT_TM_MSG IS NOT NULL AND LENGTH(C.INV_GATE_OUT_TM_MSG) NOT IN (8,12) 
					 AND C.INV_GATE_OUT_TM_MSG < C.INV_GATE_IN_TM_MSG
				THEN 'WRONG GATE IN/OUT DATE'
				END
			ELSE ''
			END GATE_IN_OUT_DT_CHK,
			H.VNDR_SEQ, 
			H.INV_NO,
			COUNT(C.TML_EDI_SO_CNTR_LIST_SEQ) OVER () AS CNTR_LIST_KNT,
			COUNT(D.TML_EDI_SO_DTL_SEQ) OVER () AS DTL_LIST_KNT
		 FROM TES_EDI_SO_HDR H
			, TES_EDI_SO_DTL D
			, TES_EDI_SO_CNTR_LIST C
			, TES_EDI_SO_AUTO_FREE_POOL F
			, MDM_VENDOR V
			, MDM_YARD Y
			, MDM_ORGANIZATION IO
			, MDM_ORGANIZATION CO
			, MDM_CURRENCY MC
			, TES_TML_SO_COST TC
		 WHERE	H.TML_EDI_SO_OFC_CTY_CD	= @[tml_edi_so_ofc_cty_cd]
		 AND	H.TML_EDI_SO_SEQ 		= @[tml_edi_so_seq]
		 AND	H.VNDR_SEQ = V.VNDR_SEQ(+)
		 AND	H.YD_CD = Y.YD_CD(+)
		 AND	H.INV_OFC_CD = IO.OFC_CD(+)
		 AND	H.COST_OFC_CD = CO.OFC_CD(+)
		 AND	H.CURR_CD = MC.CURR_CD(+)
		 AND	D.LGS_COST_CD = TC.LGS_COST_CD(+)
		 AND	H.TML_EDI_SO_OFC_CTY_CD = D.TML_EDI_SO_OFC_CTY_CD(+)
		 AND	H.TML_EDI_SO_SEQ = D.TML_EDI_SO_SEQ(+)
		 AND	H.TML_EDI_SO_OFC_CTY_CD = C.TML_EDI_SO_OFC_CTY_CD(+)
		 AND	H.TML_EDI_SO_SEQ = C.TML_EDI_SO_SEQ(+)
		 AND	H.TML_EDI_SO_OFC_CTY_CD = F.TML_EDI_SO_OFC_CTY_CD(+)
		 AND	H.TML_EDI_SO_SEQ = F.TML_EDI_SO_SEQ(+)
		) X 
	) Y			]]></sql>
			<params>
				<param name="tml_edi_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_edi_so_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
