<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ProductCatalogCreateDBDAOSearchEurDrRePatternRSQL">
			<desc><![CDATA[구주지역 door 재작업을 위한 pattern select]]></desc>
			<sql><![CDATA[
SELECT DISTINCT
FIRST_VALUE(M.COP_NO) OVER(PARTITION BY M.COP_PATT_ORD_NO ORDER BY M.COP_PATT_ORD_NO) COP_NO,
M.COP_PATT_ORD_NO,
FIRST_VALUE(M.PCTL_NO) OVER(PARTITION BY M.COP_PATT_ORD_NO ORDER BY M.COP_PATT_ORD_NO) NEW_PCTL_NO,
FIRST_VALUE(H.PCTL_NO) OVER(PARTITION BY M.COP_PATT_ORD_NO ORDER BY M.COP_PATT_ORD_NO) OLD_PCTL_NO,
(CASE WHEN (SELECT CONTI_CD FROM MDM_LOCATION L WHERE L.LOC_CD = SUBSTR(B.POR_NOD_CD,1,5) AND NVL(L.DELT_FLG,'N')='N') ='E'
            AND  H.OB_TRO_FLG ='Y' AND H.POR_NOD_CD <> B.POR_NOD_CD
THEN 'Y'
ELSE 'N'
END) EUR_OB_FLG,
M.BKG_RCV_TERM_CD, 
DECODE(B.RCV_TERM_CD||B.POR_NOD_CD||B.POL_CD,M3.BKG_RCV_TERM_CD||M3.POR_NOD_CD||M3.POL_CD,'N','Y') OB_UNCONFIRM_FLG,
DECODE(M3.POL_NOD_CD,H.POL_NOD_CD,'N','Y') POL_TML_DIFF_FLG,
H.POR_NOD_CD NEW_POR,
DECODE(M3.POR_NOD_CD,H.POR_NOD_CD,'N','Y') POR_TML_DIFF_FLG,
(CASE WHEN SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'O'),2,5) <> SUBSTR(M3.POL_NOD_CD,1,5)
      AND SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'O'),-8,5) = SUBSTR(M3.POL_NOD_CD,1,5)
      AND SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'O'),-8,7) <> M3.POL_NOD_CD
      AND NVL((SELECT 'Y' FROM PRD_NODE
               WHERE NOD_CD =SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'O'),-8,7)
               AND NOD_TP_CD IN ('M','B')),'X') = 'Y'
     THEN SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'O'),-8,7)          
END) NEW_POL,
M2.MTY_PKUP_YD_CD,
M2.FULL_RTN_YD_CD,
DECODE(TRO.IO_BND_CD,'O',TRO.BKG_TRSP_MZD_CD) OB_TRSP_MOD,
(CASE WHEN (SELECT CONTI_CD FROM MDM_LOCATION L WHERE L.LOC_CD = SUBSTR(B.DEL_NOD_CD,1,5) AND NVL(L.DELT_FLG,'N')='N') ='E'
            AND H.IB_TRO_FLG ='Y' AND H.DEL_NOD_CD <> B.DEL_NOD_CD
THEN 'Y'
ELSE 'N'
END) EUR_IB_FLG,
M.BKG_DE_TERM_CD,
DECODE(B.DE_TERM_CD||B.DEL_NOD_CD||B.POD_CD,M3.BKG_DE_TERM_CD||M3.DEL_NOD_CD||M3.POD_CD,'N','Y') IB_UNCONFIRM_FLG,
DECODE(M3.POD_NOD_CD,H.POD_NOD_CD,'N','Y') POD_TML_DIFF_FLG,
(CASE WHEN SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'T'),-8,5) <> SUBSTR(M3.POD_NOD_CD,1,5)
      AND SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'I'),2,5) = SUBSTR(M3.POD_NOD_CD,1,5)
      AND SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'I'),2,7) <> M3.POD_NOD_CD
      AND NVL((SELECT 'Y' FROM PRD_NODE
               WHERE NOD_CD =SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'I'),2,7)
               AND NOD_TP_CD IN ('M','B')),'X') = 'Y'
     THEN SUBSTR(PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'I'),2,7)           
       END) NEW_POD,
H.DEL_NOD_CD NEW_DEL,
DECODE(M3.DEL_NOD_CD,H.DEL_NOD_CD,'N','Y') DEL_TML_DIFF_FLG,
M2.FULL_PKUP_YD_CD,
M2.MTY_RTN_YD_CD,
DECODE(TRO.IO_BND_CD,'I',TRO.BKG_TRSP_MZD_CD) IB_TRSP_MOD,
PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'O') OB_CONTENT,
PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'I') IB_CONTENT,
PRD_GET_COP_BND_SO_STR_FNC (H.COP_NO,'T') OCN_CONTENT,
(SELECT TO_CHAR(MAX(ARR_ST_DT),'YYYYMMDDHH24MISS')
FROM PRD_PROD_CTL_ROUT_DTL
WHERE PCTL_NO =M.PCTL_NO
AND PCTL_IO_BND_CD ='O') CCT ,
(SELECT TO_CHAR(MIN(ARR_ST_DT),'YYYYMMDDHH24MISS')
FROM PRD_PROD_CTL_ROUT_DTL
WHERE PCTL_NO =M.PCTL_NO
AND PCTL_IO_BND_CD ='T') POL_T, 
(SELECT TO_CHAR(MIN(ARR_ST_DT),'YYYYMMDDHH24MISS') 
FROM PRD_PROD_CTL_ROUT_DTL
WHERE PCTL_NO =M.PCTL_NO
AND PCTL_IO_BND_CD ='I') POD_T ,
M3.TRNK_VSL_CD||M3.TRNK_SKD_VOY_NO||M3.TRNK_SKD_DIR_CD T_VVD,
CLL_P.ORG_LOC_CD,CLL_P.DEST_LOC_CD,CLL_P.OCN_SEQ,
PRD_GET_OCN_VVD_FNC(M.PCTL_NO,1) VVD1,PRD_GET_OCN_VVD_FNC(M.PCTL_NO,2) VVD2,PRD_GET_OCN_VVD_FNC(M.PCTL_NO,3) VVD3,PRD_GET_OCN_VVD_FNC(M.PCTL_NO,4) VVD4,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N1_POL_SEQ')+10,1)) N1_POL_CLPT_SEQ,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N1_POD_SEQ')+10,1)) N1_POD_CLPT_SEQ,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N2_POL_SEQ')+10,1)) N2_POL_CLPT_SEQ,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N2_POD_SEQ')+10,1)) N2_POD_CLPT_SEQ,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N3_POL_SEQ')+10,1)) N3_POL_CLPT_SEQ,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N3_POD_SEQ')+10,1)) N3_POD_CLPT_SEQ, 
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N4_POL_SEQ')+10,1)) N4_POL_CLPT_SEQ,
TRIM(SUBSTR(CLL_P.CLPT_SEQ,  INSTR(CLL_P.CLPT_SEQ,'N4_POD_SEQ')+10,1)) N4_POD_CLPT_SEQ
FROM PRD_BKG_COP_MAP M, BKG_BOOKING B, SCE_COP_HDR H, PRD_PROD_CTL_MST M3, SCE_TRO_MAPG TM, BKG_EUR_TRO TRO, BKG_EUR_TRO_DTL TDTL, PRD_PROD_CTL_MST M2 ,
     (
    SELECT PCTL_NO,ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ OCN_SEQ,
        'N1_POL_SEQ'||MAX(DECODE(R,1, ORG_CLPT_IND_SEQ,' ')) ||
        'N1_POD_SEQ'||MAX(DECODE(R,1, DEST_CLPT_IND_SEQ,' ')) ||
        'N2_POL_SEQ'||MAX(DECODE(R,2, ORG_CLPT_IND_SEQ,' ')) ||
        'N2_POD_SEQ'||MAX(DECODE(R,2, DEST_CLPT_IND_SEQ,' ')) ||
        'N3_POL_SEQ'||MAX(DECODE(R,3, ORG_CLPT_IND_SEQ,' ')) ||
        'N3_POD_SEQ'||MAX(DECODE(R,3, DEST_CLPT_IND_SEQ,' ')) ||
        'N4_POL_SEQ'||MAX(DECODE(R,4, ORG_CLPT_IND_SEQ,' ')) ||
        'N4_POD_SEQ'||MAX(DECODE(R,4, DEST_CLPT_IND_SEQ,' ')) CLPT_SEQ    
    FROM (           
        SELECT D.PCTL_NO,D.ORG_CLPT_IND_SEQ, D.DEST_CLPT_IND_SEQ,O.ORG_LOC_CD,O.DEST_LOC_CD,O.ROUT_SEQ, ROW_NUMBER() OVER (PARTITION BY D.PCTL_NO ORDER BY PCTL_SEQ) R
        FROM PRD_PROD_CTL_ROUT_DTL D, PRD_OCN_ROUT O
        WHERE D.PCTL_NO = (SELECT PCTL_NO FROM PRD_BKG_COP_MAP WHERE BKG_NO =@[bkg_no] AND COP_MAPG_SEQ =@[mapSeq] AND COP_PATT_ORD_NO =1 AND ROWNUM =1)
        AND D.PCTL_IO_BND_CD ='T'
        AND D.TRSP_MOD_CD IN ('WD','VD')
        AND D.ROUT_ORG_NOD_CD= O.ORG_LOC_CD
        AND D.ROUT_DEST_NOD_CD=DEST_LOC_CD
        AND D.ROUT_SEQ= O.ROUT_SEQ
        AND D.VSL_SLAN_CD IN (O.N1ST_LANE_CD, N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD)          
        ) 
    GROUP BY PCTL_NO,ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ
    ) CLL_P
WHERE M.BKG_NO =@[bkg_no]
AND M.COP_MAPG_SEQ =@[mapSeq]
AND M.COP_PATT_ORD_NO IS NOT NULL
AND M.BKG_NO = B.BKG_NO
AND M.COP_NO = H.COP_NO
AND M.PCTL_NO = M3.PCTL_NO
AND H.COP_NO =TM.COP_NO
AND H.PCTL_NO = M2.PCTL_NO
AND TRO.BKG_NO =B.BKG_NO
AND TM.TRO_SEQ = TRO.TRO_SEQ
--AND TM.TRO_SUB_SEQ = TRO.RQST_SUB_SEQ
AND TDTL.BKG_NO = TRO.BKG_NO
AND TDTL.TRO_SEQ = TRO.TRO_SEQ
AND TDTL.TRO_SUB_SEQ = CASE WHEN TRO.IO_BND_CD = 'O' 
                                 THEN (SELECT MIN(TRO_SUB_SEQ) FROM BKG_EUR_TRO_DTL IDTL
                                       WHERE IDTL.BKG_NO = TRO.BKG_NO
                                         AND TDTL.TRO_SEQ = TRO.TRO_SEQ
                                         AND TDTL.DOR_ADDR_TP_CD = 'D')
                            ELSE (SELECT MAX(TRO_SUB_SEQ) FROM BKG_EUR_TRO_DTL IDTL
                                       WHERE IDTL.BKG_NO = TRO.BKG_NO
                                         AND TDTL.TRO_SEQ = TRO.TRO_SEQ
                                         AND TDTL.DOR_ADDR_TP_CD = 'D')
                        END
AND TM.IO_BND_CD = TRO.IO_BND_CD			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="mapSeq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
