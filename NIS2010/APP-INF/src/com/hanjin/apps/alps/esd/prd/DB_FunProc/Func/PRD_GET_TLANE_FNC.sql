CREATE OR REPLACE FUNCTION PRD_GET_TLANE_FNC /* ========================================================   1. Object Name      : PRD_GET_TLANE_FNC   2. Version          : 1.0   3. Create Date      : 2008.10.28   4. Sub System       : Product Catalog   5. Author           : 조용인   6. Description      : 해상 운송 구간중 TRUNK LANE을 구한다.                         DECODE구문 중 COA_RANK_INFO_FNC와 동기화 해야할 부분이 있으므로 유의. MGPARK 20120229   7. Revision History : 2008.10.28 조용인 최초 생성                         2010.04.01 조용인 'WAFIE','RESIA' 에 대한 예외사항 추가                         2010.04.09 이재위 TZ_DWLL_TM_HRS 으로 결정하는 로직 추가                         2010.04.16 이재위 수석 04.09 로직 반영 구멍 보완                         2010.05.27 이재위 'ALXIA' 에 대한 예외사항 추가                         2011.05.30 박만건 GENERAL한 경우에도 같은 Revenue Lane별로 TRANSIT TIME이 긴 VVD선택                         2011.10.14 박만건 null값 잘못 계산하고 있는 부분 수정                         2012.02.29 박만건 COA의 변경사항을 적용                                           [CHM-201109408] ZoneCode가 IF일 경우 모두 IE로 인식하도록 로직추가                                           [CHM-201112266] SFXEM 노선 관련 우선순위 예외처리 Logic 삭제                                                           'SFXEM', DECODE(v_n2nd_ioc_cd, 'IF', 'IA',  v_n2nd_ioc_cd) 부분 삭제하여 IF -> IE로 인식 하도록 함                                           [CHM-201114921] SFX 노선 예외처리                                                           SFXIA 노선의 POD가 아프리카 대륙일 경우 IOC_CD를 'IF' -> 'IA' 변환                                           상기 3개의 CHANGE는 COA_RANK_INFO_FNC의 DECODE(변환)에 적용된 것으로 항상 해당 구분은 COA_RANK_INFO_FNC와 동기화 유지해야 함                                           추가로 COA 소스 확인 결과 SFXIA의 경우 2012년 이전과 이후의 REV LANE 다르게 처리되도록 되어있어                                                           COA_SLANE_RLANE_CONV_FNC을 사용해서 2011이전과 R.LANE구분하도록 처리 추가                        2012.08.06 정선용 COA의 변경사항을 적용                                          COA_RANK_INFO_FNC 변경으로 param 추가 (N1ST_VVD~N4TH_VVD)                                          COA_RANK_INFO_FNC 호출시 사용하는 decode 문 제거( coa 에서 같은 r-lane 일경우 우선순위를 찾는 로직이 들어감)                        2014.09.22 정선용 COA의 변경사항을 적용                                          COA_RANK_INFO_FNC  가 COA_RANK_INFO_COMP_FNC 로 변경======================================================== */(   ------------------------------PARAMETERS------------------------------    v_pctl_no           IN VARCHAR2,    v_div               IN VARCHAR2 -- 'VVD' : RETURN VVD(HJSS0043E), 'SEQ' : RETURN SEQ OF T.LANE    -----------------------------------------------------------------------)RETURN VARCHARAUTHID CURRENT_USERIS    ret_val     VARCHAR2(100) := NULL;    r_pctl_seq  VARCHAR2(5) := NULL;    r_vvd       VARCHAR2(9) := NULL;BEGIN    FOR V_AA IN    (        SELECT              PCTL_NO            , DECODE(T_SEQ, 1, N1ST_PCTL_SEQ  , 2, N2ND_PCTL_SEQ  , 3, N3RD_PCTL_SEQ  , 4, N4TH_PCTL_SEQ  ) PCTL_SEQ            , DECODE(T_SEQ, 1, N1ST_VSL_CD || N1ST_SKD_VOY_NO || N1ST_SKD_DIR_CD                          , 2, N2ND_VSL_CD || N2ND_SKD_VOY_NO || N2ND_SKD_DIR_CD                          , 3, N3RD_VSL_CD || N3RD_SKD_VOY_NO || N3RD_SKD_DIR_CD                          , 4, N4TH_VSL_CD || N4TH_SKD_VOY_NO || N4TH_SKD_DIR_CD                    ) AS VVD        FROM(            SELECT                  PCTL_NO                , CNT                , N1ST_PCTL_SEQ, N1ST_VSL_CD, N1ST_SKD_VOY_NO, N1ST_SKD_DIR_CD, N1ST_VSL_SLAN_CD, N1ST_ORG_CONTI_CD, N1ST_DEST_CONTI_CD, N1ST_R_LANE                , N2ND_PCTL_SEQ, N2ND_VSL_CD, N2ND_SKD_VOY_NO, N2ND_SKD_DIR_CD, N2ND_VSL_SLAN_CD, N2ND_ORG_CONTI_CD, N2ND_DEST_CONTI_CD, N2ND_R_LANE                , N3RD_PCTL_SEQ, N3RD_VSL_CD, N3RD_SKD_VOY_NO, N3RD_SKD_DIR_CD, N3RD_VSL_SLAN_CD, N3RD_ORG_CONTI_CD, N3RD_DEST_CONTI_CD, N3RD_R_LANE                , N4TH_PCTL_SEQ, N4TH_VSL_CD, N4TH_SKD_VOY_NO, N4TH_SKD_DIR_CD, N4TH_VSL_SLAN_CD, N4TH_ORG_CONTI_CD, N4TH_DEST_CONTI_CD, N4TH_R_LANE                , (CASE WHEN -- COA_RANK_INFO_FNC 의 예외사항처리 : TZ_DWLL_TM_HRS의 MAX값으로 결정한다                        -- 1. Mother Vsl 인데, R.Lane이 'RBCCO'로 결정될 경우                             ('NOFDR' IN (N1ST_R_LANE,N2ND_R_LANE,N3RD_R_LANE,N4TH_R_LANE))                        -- 2. COA_RANK_INFO_FNC 내에서 동일 순위 처리되는 경우                             OR  1 <   (SELECT COUNT(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N1ST_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA1,1,2) AND DELT_FLG='N')                             OR  1 <   DECODE(N2ND_R_LANE,NULL,0,(SELECT COUNT(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N2ND_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA2,1,2) AND DELT_FLG='N'))                             OR  1 <   DECODE(N3RD_R_LANE,NULL,0,(SELECT COUNT(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N3RD_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA3,1,2) AND DELT_FLG='N'))                             OR  1 <   DECODE(N4TH_R_LANE,NULL,0,(SELECT COUNT(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N4TH_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA4,1,2) AND DELT_FLG='N'))                        -- 3. COA_RANK_INFO_FNC 내에서 rnk_seq 가 null 로 결정될 경우                             OR ((SELECT SUM(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N1ST_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA1,1,2) AND DELT_FLG='N')                                  + DECODE(N2ND_R_LANE,NULL,0,(SELECT SUM(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N2ND_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA2,1,2) AND DELT_FLG='N'))                                  + DECODE(N3RD_R_LANE,NULL,0,(SELECT SUM(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N3RD_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA3,1,2) AND DELT_FLG='N'))                                  + DECODE(N4TH_R_LANE,NULL,0,(SELECT SUM(RNK_SEQ) FROM AR_ROUT_RNK WHERE RLANE_CD = N4TH_R_LANE AND SUBSTR (ZN_IOC_CD,1,2) = SUBSTR(CPARA4,1,2) AND DELT_FLG='N'))                                  IS NULL)                            THEN MAX_TZ_TM                        --COA_RANK_INFO_FNC 호출시 사용하는 decode 문 제거( coa 에서 같은 r-lane 일경우 우선순위를 찾는 로직이 들어감) 2012.08.06                        --ELSE DECODE(COA_RANK_INFO_FNC_BAK(N1ST_R_LANE,N2ND_R_LANE,N3RD_R_LANE,N4TH_R_LANE,CPARA1,CPARA2,CPARA3,CPARA4                        --            , N1ST_VVD, N2ND_VVD , N3RD_VVD, N4TH_VVD)                        --            , 1, N1ST_TZTM_HRS_BY_R_LANE, 2, N2ND_TZTM_HRS_BY_R_LANE, 3, N3RD_TZTM_HRS_BY_R_LANE, N4TH_TZTM_HRS_BY_R_LANE)                        ELSE COA_RANK_INFO_COMP_FNC(N1ST_R_LANE,N2ND_R_LANE,N3RD_R_LANE,N4TH_R_LANE,CPARA1,CPARA2,CPARA3,CPARA4                                    ,'P', null, PCTL_NO, null, null, null, null, null, null, null, null, null, null, null, null )--                                    , N1ST_VVD, N2ND_VVD , N3RD_VVD, N4TH_VVD)                                                                                         END) T_SEQ            FROM(                SELECT                      PCTL_NO                    , MAX(RNK) CNT                    , MAX(DECODE(RNK, 1, PCTL_SEQ            )) N1ST_PCTL_SEQ                    , MAX(DECODE(RNK, 1, VSL_CD              )) N1ST_VSL_CD                    , MAX(DECODE(RNK, 1, SKD_VOY_NO          )) N1ST_SKD_VOY_NO                    , MAX(DECODE(RNK, 1, SKD_DIR_CD          )) N1ST_SKD_DIR_CD                    , MAX(DECODE(RNK, 1, VSL_SLAN_CD         )) N1ST_VSL_SLAN_CD                    , MAX(DECODE(RNK, 1, ORG_CONTI_CD        )) N1ST_ORG_CONTI_CD                    , MAX(DECODE(RNK, 1, DEST_CONTI_CD       )) N1ST_DEST_CONTI_CD                    , MAX(DECODE(RNK, 1, R_LANE_CD           )) N1ST_R_LANE                    , MAX(DECODE(RNK, 1, TZ_DWLL_TM_HRS      )) N1ST_TZTM_HRS                    , MAX(DECODE(RNK, 1, MAX_TZ_TM_BY_R_LANE )) N1ST_TZTM_HRS_BY_R_LANE                    , MAX(DECODE(RNK, 1, CAPAR               )) CPARA1                    , MAX(DECODE(RNK, 2, PCTL_SEQ            )) N2ND_PCTL_SEQ                    , MAX(DECODE(RNK, 2, VSL_CD              )) N2ND_VSL_CD                    , MAX(DECODE(RNK, 2, SKD_VOY_NO          )) N2ND_SKD_VOY_NO                    , MAX(DECODE(RNK, 2, SKD_DIR_CD          )) N2ND_SKD_DIR_CD                    , MAX(DECODE(RNK, 2, VSL_SLAN_CD         )) N2ND_VSL_SLAN_CD                    , MAX(DECODE(RNK, 2, ORG_CONTI_CD        )) N2ND_ORG_CONTI_CD                    , MAX(DECODE(RNK, 2, DEST_CONTI_CD       )) N2ND_DEST_CONTI_CD                    , MAX(DECODE(RNK, 2, R_LANE_CD           )) N2ND_R_LANE                    , MAX(DECODE(RNK, 2, TZ_DWLL_TM_HRS      )) N2ND_TZTM_HRS                    , MAX(DECODE(RNK, 2, MAX_TZ_TM_BY_R_LANE )) N2ND_TZTM_HRS_BY_R_LANE                    , MAX(DECODE(RNK, 2, CAPAR               )) CPARA2                    , MAX(DECODE(RNK, 3, PCTL_SEQ            )) N3RD_PCTL_SEQ                    , MAX(DECODE(RNK, 3, VSL_CD              )) N3RD_VSL_CD                    , MAX(DECODE(RNK, 3, SKD_VOY_NO          )) N3RD_SKD_VOY_NO                    , MAX(DECODE(RNK, 3, SKD_DIR_CD          )) N3RD_SKD_DIR_CD                    , MAX(DECODE(RNK, 3, VSL_SLAN_CD         )) N3RD_VSL_SLAN_CD                    , MAX(DECODE(RNK, 3, ORG_CONTI_CD        )) N3RD_ORG_CONTI_CD                    , MAX(DECODE(RNK, 3, DEST_CONTI_CD       )) N3RD_DEST_CONTI_CD                    , MAX(DECODE(RNK, 3, R_LANE_CD           )) N3RD_R_LANE                    , MAX(DECODE(RNK, 3, TZ_DWLL_TM_HRS      )) N3RD_TZTM_HRS                    , MAX(DECODE(RNK, 3, MAX_TZ_TM_BY_R_LANE )) N3RD_TZTM_HRS_BY_R_LANE                    , MAX(DECODE(RNK, 3, CAPAR               )) CPARA3                    , MAX(DECODE(RNK, 4, PCTL_SEQ            )) N4TH_PCTL_SEQ                    , MAX(DECODE(RNK, 4, VSL_CD              )) N4TH_VSL_CD                    , MAX(DECODE(RNK, 4, SKD_VOY_NO          )) N4TH_SKD_VOY_NO                    , MAX(DECODE(RNK, 4, SKD_DIR_CD          )) N4TH_SKD_DIR_CD                    , MAX(DECODE(RNK, 4, VSL_SLAN_CD         )) N4TH_VSL_SLAN_CD                    , MAX(DECODE(RNK, 4, ORG_CONTI_CD        )) N4TH_ORG_CONTI_CD                    , MAX(DECODE(RNK, 4, DEST_CONTI_CD       )) N4TH_DEST_CONTI_CD                    , MAX(DECODE(RNK, 4, R_LANE_CD           )) N4TH_R_LANE                    , MAX(DECODE(RNK, 4, TZ_DWLL_TM_HRS      )) N4TH_TZTM_HRS                    , MAX(DECODE(RNK, 4, MAX_TZ_TM_BY_R_LANE )) N4TH_TZTM_HRS_BY_R_LANE                    , MAX(DECODE(RNK, 4, CAPAR               )) CPARA4                    , MAX(MAX_TZ_TM) MAX_TZ_TM                    , MAX(DECODE(RNK, 1, VSL_CD||SKD_VOY_NO||SKD_DIR_CD   )) N1ST_VVD --COA_RANK_INFO_FNC 변경으로 param 추가 2012.08.06                    , MAX(DECODE(RNK, 2, VSL_CD||SKD_VOY_NO||SKD_DIR_CD   )) N2ND_VVD                    , MAX(DECODE(RNK, 3, VSL_CD||SKD_VOY_NO||SKD_DIR_CD   )) N3RD_VVD                    , MAX(DECODE(RNK, 4, VSL_CD||SKD_VOY_NO||SKD_DIR_CD   )) N4TH_VVD                FROM(                    SELECT                          PCTL_NO,PCTL_SEQ,ORG_NOD_CD,ORG_CONTI_CD,DEST_NOD_CD,DEST_CONTI_CD,VSL_SLAN_CD,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,TZ_DWLL_TM_HRS,RNK,R_LANE_CD                        , MAX(DECODE(MAX_TZ_TM, 1, RNK)) OVER (PARTITION BY PCTL_NO) MAX_TZ_TM                        , DECODE(R_LANE_CD, 'RESIA', DECODE(IOC_CD, 'IF', 'IA', IOC_CD)                                          , 'ALXIA', DECODE(IOC_CD, 'IF', 'IA', 'IM', 'IA',  IOC_CD)                                          , 'INXTP', DECODE(IOC_CD, 'IF', 'IA',  IOC_CD)                                          , 'AWZTP', DECODE(IOC_CD, 'IF', 'IA',  IOC_CD)                                          , 'SFXIA', DECODE(IOC_CD, 'IF', 'IA',  IOC_CD)                                          , DECODE(IOC_CD, 'IF', 'IE',IOC_CD)) -- ZoneCode가 IF일 경우 모두 IE로 인식하도록 로직추가 (해당 DECODE는 COA_RANK_INFO_FNC와 동기화 유지 필요 MGPARK 20120229)                          AS CAPAR                        , MAX(DECODE(MAX_TZ_TM_BY_R_LANE, 1, RNK)) OVER (PARTITION BY PCTL_NO, R_LANE_CD) MAX_TZ_TM_BY_R_LANE                    FROM(                        SELECT                              RDTL.PCTL_NO                            , RDTL.PCTL_SEQ                            , DECODE(IOC_CD, 'O', 'OO', NULL, DECODE(OLOC.CONTI_CD, DLOC.CONTI_CD, 'I' || DLOC.CONTI_CD, 'OO'), IOC_CD || DLOC.CONTI_CD) AS IOC_CD -- FDR의 경우 IOC CODE가 없기 때문에 중간에 DECODE처리됨                            , RDTL.ORG_NOD_CD                            , OLOC.CONTI_CD ORG_CONTI_CD                            , RDTL.DEST_NOD_CD                            , DLOC.CONTI_CD DEST_CONTI_CD                            , RDTL.VSL_SLAN_CD, RDTL.VSL_CD, RDTL.SKD_VOY_NO, RDTL.SKD_DIR_CD                            , RDTL.TZ_DWLL_TM_HRS                            , CASE WHEN RLAN.RLANE_CD IS NULL OR RLAN.RLANE_CD = 'RBCCO' THEN DECODE(MVSL.VSL_SVC_TP_CD, 'O', 'RBCCO', 'NOFDR')                                 ELSE RLAN.RLANE_CD                              END AS  R_LANE_CD                            , RANK() OVER (PARTITION BY PCTL_NO ORDER BY PCTL_SEQ) RNK                            , ROW_NUMBER() OVER (PARTITION BY PCTL_NO ORDER BY TZ_DWLL_TM_HRS DESC, PCTL_SEQ) MAX_TZ_TM                            , ROW_NUMBER() OVER (PARTITION BY PCTL_NO                                                            , CASE WHEN RLAN.RLANE_CD IS NULL OR RLAN.RLANE_CD = 'RBCCO' THEN DECODE(MVSL.VSL_SVC_TP_CD, 'O', 'RBCCO', 'NOFDR')                                                                   ELSE RLAN.RLANE_CD                                                              END -- AS R_LANE_CD                                                 ORDER BY TZ_DWLL_TM_HRS DESC, PCTL_SEQ) MAX_TZ_TM_BY_R_LANE                        FROM PRD_PROD_CTL_ROUT_DTL RDTL                            LEFT OUTER JOIN MDM_LOCATION OLOC                            ON (OLOC.LOC_CD = SUBSTR(RDTL.ORG_NOD_CD,1,5)                                AND NVL(OLOC.DELT_FLG, 'N') = 'N')                            LEFT OUTER JOIN MDM_LOCATION DLOC                            ON (DLOC.LOC_CD = SUBSTR(RDTL.DEST_NOD_CD,1,5)                                AND NVL(DLOC.DELT_FLG, 'N') = 'N')                            LEFT OUTER JOIN MDM_DTL_REV_LANE RLAN                            ON (RLAN.VSL_SLAN_DIR_CD = RDTL.SKD_DIR_CD                                AND RLAN.FM_CONTI_CD = OLOC.CONTI_CD                                AND RLAN.TO_CONTI_CD = DLOC.CONTI_CD                                AND RLAN.RLANE_CD = COA_SLANE_RLANE_CONV_FNC(RDTL.VSL_CD || RDTL.SKD_VOY_NO || RDTL.SKD_DIR_CD, RDTL.VSL_SLAN_CD, SUBSTR(RDTL.ORG_NOD_CD,1,5), SUBSTR(RDTL.DEST_NOD_CD,1,5))                                AND RLAN.DELT_FLG = 'N')                            LEFT OUTER JOIN MDM_VSL_SVC_LANE MVSL -- REVENUE LANE이 없거나, RBCCO인 경우, MDM_VSL_SVC_LANE을 확인해서 FEEDER인지 확인한다.                            ON (NVL(RLAN.RLANE_CD,'RBCCO') = 'RBCCO'                                AND MVSL.VSL_SLAN_CD = RDTL.VSL_SLAN_CD                                AND NVL(MVSL.DELT_FLG, 'N') = 'N')                        WHERE RDTL.PCTL_NO LIKE v_pctl_no||'%'                        AND RDTL.PCTL_IO_BND_CD = 'T'                        AND RDTL.NOD_LNK_DIV_CD = 'L'                        AND RDTL.VSL_SLAN_CD IS NOT NULL                        AND RDTL.TRSP_MOD_CD IN ('WD','VD')                        )                    )                GROUP BY PCTL_NO               )           )    )    LOOP        r_pctl_seq := V_AA.PCTL_SEQ;        r_vvd      := V_AA.VVD;    END LOOP;    IF v_div = 'VVD' THEN        ret_val := r_vvd;    ELSIF v_div = 'SEQ' THEN        ret_val := r_pctl_seq;    END IF;    RETURN ret_val;END PRD_GET_TLANE_FNC;/