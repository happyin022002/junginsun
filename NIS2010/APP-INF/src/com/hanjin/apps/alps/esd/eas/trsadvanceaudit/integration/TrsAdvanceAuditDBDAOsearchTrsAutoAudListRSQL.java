/*=========================================================
*Copyright(c) 2018 CyberLogitec
*@FileName : TrsAdvanceAuditDBDAOsearchTrsAutoAudListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2018.03.05
*@LastModifier : 
*@LastVersion : 1.0
* 2018.03.05 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esd.eas.trsadvanceaudit.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class TrsAdvanceAuditDBDAOsearchTrsAutoAudListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchTrsAutoAudList 조회쿼리 (TRS Auto Audit 배치에서 사용)
	  * </pre>
	  */
	public TrsAdvanceAuditDBDAOsearchTrsAutoAudListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_rhq_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_fm_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_to_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_datetime",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esd.eas.trsadvanceaudit.integration").append("\n"); 
		query.append("FileName : TrsAdvanceAuditDBDAOsearchTrsAutoAudListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT AUTO_AUD_STS_CD" ).append("\n"); 
		query.append("      ,EXPN_AUD_STS_CD" ).append("\n"); 
		query.append("      ,RHQ_OFC_CD" ).append("\n"); 
		query.append("      ,INV_OFC_CD" ).append("\n"); 
		query.append("      ,TRSP_SO_TP_CD" ).append("\n"); 
		query.append("      ,INV_VNDR_SEQ" ).append("\n"); 
		query.append("      ,INV_NO" ).append("\n"); 
		query.append("      ,HJL_INV_VNDR_SEQ" ).append("\n"); 
		query.append("      ,HJL_INV_NO" ).append("\n"); 
		query.append("      ,INV_ISS_DT" ).append("\n"); 
		query.append("      ,INV_AUD_STS_CD" ).append("\n"); 
		query.append("      ,CSR_NO" ).append("\n"); 
		query.append("      ,CURR_CD" ).append("\n"); 
		query.append("      ,WO_AMT" ).append("\n"); 
		query.append("      ,INV_AMT" ).append("\n"); 
		query.append("      ,CURR_CNG_FLG" ).append("\n"); 
		query.append("      ,INV_DIFF_AMT" ).append("\n"); 
		query.append("      ,INV_DIFF_AMT_FLG" ).append("\n"); 
		query.append("      ,CASE WHEN ROUND((INV_DIFF_AMT/(DECODE(WO_AMT, 0, 1, WO_AMT))) * 100, 3) > 100 THEN 100" ).append("\n"); 
		query.append("            ELSE ROUND((INV_DIFF_AMT/(DECODE(WO_AMT, 0, 1, WO_AMT))) * 100, 3)" ).append("\n"); 
		query.append("       END INV_DIFF_PCT" ).append("\n"); 
		query.append("      ,NO_AGMT_FLG" ).append("\n"); 
		query.append("      ,NO_OPTM_ROUT_FLG" ).append("\n"); 
		query.append("      ,EXCEED_AVG_DIFF_AMT" ).append("\n"); 
		query.append("      ,EXCEED_AVG_FLG" ).append("\n"); 
		query.append("      ,INV_ISS_USR_ID" ).append("\n"); 
		query.append("      ,PAY_TERM_CD" ).append("\n"); 
		query.append("      ,DECODE(EAC_IF_FLG, 'I', 'Y') AS EAC_IF_FLG" ).append("\n"); 
		query.append("      ,DECODE(EXPN_AUD_STS_CD, NULL, '', LOCL_CRE_DT) LOCL_CRE_DT" ).append("\n"); 
		query.append("      ,TO_CHAR(INV_CFM_DT, 'YYYYMMDDHH24MISS') INV_CFM_DT" ).append("\n"); 
		query.append("      ,AUD_RLST_FLG" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("        SELECT  MIN(AUTO_AUD_STS_CD) AUTO_AUD_STS_CD    " ).append("\n"); 
		query.append("               ,MAX(EXPN_AUD_STS_CD) EXPN_AUD_STS_CD    " ).append("\n"); 
		query.append("               ,MAX(RHQ_OFC_CD) RHQ_OFC_CD" ).append("\n"); 
		query.append("               ,MAX(INV_OFC_CD) INV_OFC_CD" ).append("\n"); 
		query.append("               ,TRSP_SO_TP_CD" ).append("\n"); 
		query.append("               ,INV_VNDR_SEQ" ).append("\n"); 
		query.append("               ,INV_NO" ).append("\n"); 
		query.append("               ,MAX(HJL_INV_VNDR_SEQ) HJL_INV_VNDR_SEQ" ).append("\n"); 
		query.append("               ,MAX(HJL_INV_NO) HJL_INV_NO" ).append("\n"); 
		query.append("               ,MAX(INV_ISS_DT) INV_ISS_DT    " ).append("\n"); 
		query.append("               ,MAX(INV_AUD_STS_CD) INV_AUD_STS_CD    " ).append("\n"); 
		query.append("               ,MAX(CSR_NO) CSR_NO" ).append("\n"); 
		query.append("               ,MAX(CURR_CD) CURR_CD    " ).append("\n"); 
		query.append("               ,SUM(WO_AMT) WO_AMT    " ).append("\n"); 
		query.append("               ,SUM(INV_AMT) INV_AMT    " ).append("\n"); 
		query.append("               ,MAX(CURR_CNG_FLG) CURR_CNG_FLG    " ).append("\n"); 
		query.append("               ,SUM(INV_DIFF_AMT) INV_DIFF_AMT    " ).append("\n"); 
		query.append("               ,MAX(INV_DIFF_AMT_FLG) INV_DIFF_AMT_FLG    " ).append("\n"); 
		query.append("               ,MAX(NO_AGMT_FLG) NO_AGMT_FLG    " ).append("\n"); 
		query.append("               ,MAX(NO_OPTM_ROUT_FLG) NO_OPTM_ROUT_FLG    " ).append("\n"); 
		query.append("               ,SUM(EXCEED_AVG_DIFF_AMT) EXCEED_AVG_DIFF_AMT    " ).append("\n"); 
		query.append("               ,MAX(EXCEED_AVG_FLG) EXCEED_AVG_FLG          " ).append("\n"); 
		query.append("               ,MAX(INV_ISS_USR_ID) INV_ISS_USR_ID" ).append("\n"); 
		query.append("               ,MAX(PAY_TERM_CD) PAY_TERM_CD" ).append("\n"); 
		query.append("               ,MAX(DECODE(EAC_IF_FLG, NULL, '', 'I')) EAC_IF_FLG" ).append("\n"); 
		query.append("               ,MAX(LOCL_CRE_DT) LOCL_CRE_DT" ).append("\n"); 
		query.append("               ,MAX(INV_CFM_DT) INV_CFM_DT" ).append("\n"); 
		query.append("               ,MAX(AUD_RLST_FLG) AUD_RLST_FLG" ).append("\n"); 
		query.append("          FROM (" ).append("\n"); 
		query.append("                SELECT AA.RHQ_OFC_CD" ).append("\n"); 
		query.append("                      ,AA.INV_OFC_CD" ).append("\n"); 
		query.append("                      ,AA.WO_OFC_CD" ).append("\n"); 
		query.append("                      ,AA.TRSP_SO_TP_CD" ).append("\n"); 
		query.append("                      ,AA.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                      ,AA.INV_NO" ).append("\n"); 
		query.append("                      ,AA.HJL_INV_VNDR_SEQ" ).append("\n"); 
		query.append("                      ,AA.HJL_INV_NO" ).append("\n"); 
		query.append("                      ,AA.INV_ISS_DT    " ).append("\n"); 
		query.append("                      ,AA.INV_AUD_STS_CD    " ).append("\n"); 
		query.append("                      ,AA.CSR_NO    " ).append("\n"); 
		query.append("                      ,AA.CURR_CD    " ).append("\n"); 
		query.append("                      ,AA.WO_AMT    " ).append("\n"); 
		query.append("                      ,AA.INV_AMT    " ).append("\n"); 
		query.append("                      ,AA.CURR_CNG_FLG    " ).append("\n"); 
		query.append("                      ,AA.INV_ISS_USR_ID" ).append("\n"); 
		query.append("                      ,AA.PAY_TERM_CD    " ).append("\n"); 
		query.append("                      ,LEAST((CASE WHEN AA.NO_AGMT_FLG = 'N' THEN 'C'" ).append("\n"); 
		query.append("                                   ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.) ELSE가 없을 경우 NULL 값이 리턴될 수 있는데 LEAST에서 최소값은 NULL이므로 NULL이 선택되지 않도록 구분 추가" ).append("\n"); 
		query.append("                              END)" ).append("\n"); 
		query.append("                            ,(CASE WHEN AA.NO_OPTM_ROUT_FLG = 'N' THEN 'F'" ).append("\n"); 
		query.append("                                   ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.) ELSE가 없을 경우 NULL 값이 리턴될 수 있는데 LEAST에서 최소값은 NULL이므로 NULL이 선택되지 않도록 구분 추가" ).append("\n"); 
		query.append("                              END)" ).append("\n"); 
		query.append("                            ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'" ).append("\n"); 
		query.append("                                   WHEN AA.INV_DIFF_AMT < 0 THEN 'F'" ).append("\n"); 
		query.append("                                   WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'" ).append("\n"); 
		query.append("                                                                                                                                            ELSE 'F'" ).append("\n"); 
		query.append("                                                                                                                                       END" ).append("\n"); 
		query.append("                                   WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'" ).append("\n"); 
		query.append("                                   ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우" ).append("\n"); 
		query.append("                              END)" ).append("\n"); 
		query.append("                            ,(CASE WHEN AA.EXCEED_AVG_RTO >= (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)" ).append("\n"); 
		query.append("                                                                                                                                                        ,AA.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    " ).append("\n"); 
		query.append("                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                                                                        )    " ).append("\n"); 
		query.append("                                                                        ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    " ).append("\n"); 
		query.append("                                                                   END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'S'" ).append("\n"); 
		query.append("                                   WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)" ).append("\n"); 
		query.append("                                                                                                                                                        ,AA.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    " ).append("\n"); 
		query.append("                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                                                                        )    " ).append("\n"); 
		query.append("                                                                       ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    " ).append("\n"); 
		query.append("                                                                  END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'F'" ).append("\n"); 
		query.append("                                   WHEN AVG_3MON_RT_INFO IS NULL THEN 'F' -- 평균단가가 없는 경우                               " ).append("\n"); 
		query.append("                                   WHEN AVG_3MON_RT_INFO = ',' THEN 'F' -- 평균단가가 없는 경우" ).append("\n"); 
		query.append("                                   WHEN TRIM(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)) IS NULL THEN 'F' -- 평균단가가 없는 경우" ).append("\n"); 
		query.append("                                   ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우" ).append("\n"); 
		query.append("                             END)" ).append("\n"); 
		query.append("                       ) AS AUTO_AUD_STS_CD" ).append("\n"); 
		query.append("                      ,AA.NO_AGMT_FLG    " ).append("\n"); 
		query.append("                      ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'" ).append("\n"); 
		query.append("                             WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' " ).append("\n"); 
		query.append("                        END) INV_DIFF_AMT_FLG    " ).append("\n"); 
		query.append("                      ,AA.INV_DIFF_AMT    " ).append("\n"); 
		query.append("                      ,AA.NO_OPTM_ROUT_FLG    " ).append("\n"); 
		query.append("                      ,CASE WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)    " ).append("\n"); 
		query.append("                                                                                                                                                        ,AA.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    " ).append("\n"); 
		query.append("                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                                                                        )    " ).append("\n"); 
		query.append("                                                                ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    " ).append("\n"); 
		query.append("                                                           END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    " ).append("\n"); 
		query.append("                            THEN 'Y'" ).append("\n"); 
		query.append("                       END EXCEED_AVG_FLG    " ).append("\n"); 
		query.append("                      ,NVL(AA.WO_AMT,0) - NVL((CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)    " ).append("\n"); 
		query.append("                                                                                                                                                        ,AA.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    " ).append("\n"); 
		query.append("                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                                                                        )    " ).append("\n"); 
		query.append("                                                      ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    " ).append("\n"); 
		query.append("                                               END),0) EXCEED_AVG_DIFF_AMT    " ).append("\n"); 
		query.append("                      ,AA.CGO_TP_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_CRR_MOD_CD" ).append("\n"); 
		query.append("                      ,AA.TRSP_COST_DTL_MOD_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_SO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_SO_SEQ    " ).append("\n"); 
		query.append("                      ,AA.TRSP_WO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_WO_SEQ    " ).append("\n"); 
		query.append("                      ,AA.BKG_RCVDE_TERM_CD    " ).append("\n"); 
		query.append("                      ,AA.EQ_NO    " ).append("\n"); 
		query.append("                      ,BB.EXPN_AUD_STS_CD" ).append("\n"); 
		query.append("                      ,TO_CHAR(BB.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') LOCL_CRE_DT" ).append("\n"); 
		query.append("                      ,(SELECT 'I'    " ).append("\n"); 
		query.append("                         FROM EAS_TRSP_AUD_CHK X    " ).append("\n"); 
		query.append("                        WHERE X.INV_NO        = AA.INV_NO    " ).append("\n"); 
		query.append("                          AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                          AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                          AND ROWNUM = 1    " ).append("\n"); 
		query.append("                       ) EAC_IF_FLG" ).append("\n"); 
		query.append("                      ,AA.INV_CFM_DT" ).append("\n"); 
		query.append("                      ,(CASE WHEN BB.INV_NO IS NOT NULL THEN 'Y' ELSE 'N' END) AUD_RLST_FLG" ).append("\n"); 
		query.append("                  FROM (    " ).append("\n"); 
		query.append("                        SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */    " ).append("\n"); 
		query.append("                               (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD    " ).append("\n"); 
		query.append("                              ,I.CRE_OFC_CD AS INV_OFC_CD    " ).append("\n"); 
		query.append("                              ,W.CRE_OFC_CD AS WO_OFC_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                              ,I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                              ,I.INV_NO" ).append("\n"); 
		query.append("                              ,I.HJL_INV_VNDR_SEQ" ).append("\n"); 
		query.append("                              ,L.HJL_INV_NO" ).append("\n"); 
		query.append("                              ,TO_CHAR(I.INV_ISS_DT, 'YYYYMMDDHH24MISS') INV_ISS_DT    " ).append("\n"); 
		query.append("                              ,I.CSR_NO    " ).append("\n"); 
		query.append("                              ,S.CURR_CD    " ).append("\n"); 
		query.append("                              ,S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(SCG_VAT_AMT,0) + NVL(TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0) AS WO_AMT    " ).append("\n"); 
		query.append("                              ,S.INV_CURR_CD    " ).append("\n"); 
		query.append("                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                               )    " ).append("\n"); 
		query.append("                                     ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                END) AS INV_AMT    " ).append("\n"); 
		query.append("                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG    " ).append("\n"); 
		query.append("                              ,CASE WHEN L.HJL_NO IS NOT NULL THEN 'ETS'    " ).append("\n"); 
		query.append("                                    ELSE I.CRE_USR_ID" ).append("\n"); 
		query.append("                               END INV_ISS_USR_ID" ).append("\n"); 
		query.append("                              ,(SELECT X.GEN_PAY_TERM_CD" ).append("\n"); 
		query.append("                                  FROM MDM_VENDOR X    " ).append("\n"); 
		query.append("                                 WHERE X.VNDR_SEQ = CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                                                         ELSE I.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                                                    END    " ).append("\n"); 
		query.append("                               ) PAY_TERM_CD    " ).append("\n"); 
		query.append("                              ,TO_CHAR(I.PAY_DT, 'YYYYMMDDHH24MISS') PAY_DT    " ).append("\n"); 
		query.append("                              ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYYMMDD'), 'YYYYMMDD') INV_TERM_DT    " ).append("\n"); 
		query.append("                              ,(CASE WHEN I.TRSP_INV_AUD_STS_CD = 'CF' THEN 'C' -- Invoice Confirmed    " ).append("\n"); 
		query.append("                                     WHEN (A.IF_FLG IS NULL AND A.RQST_APRO_STEP_FLG = 'Y') OR (I.TRSP_INV_AUD_STS_CD = 'RA') THEN 'L' -- Requesting Approval" ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'AR' THEN 'A' -- Approval Requested    " ).append("\n"); 
		query.append("                                     WHEN A.IF_ERR_RSN = 'Sending...' THEN 'S' -- Sending    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'DA' THEN 'R' -- Disapproved    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IE' THEN 'E' -- I/F Error    " ).append("\n"); 
		query.append("                                     WHEN A.RCV_ERR_FLG = 'E' THEN 'J'-- A/P Rejected                 " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IF' THEN 'P' -- I/F Success    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'PD' THEN 'D' -- Paid    " ).append("\n"); 
		query.append("                                END) INV_AUD_STS_CD    " ).append("\n"); 
		query.append("                              ,(CASE WHEN ((S.TRSP_AGMT_OFC_CTY_CD IS NULL) AND (SELECT X.TRSP_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("                                                                                   FROM TRS_TRSP_SVC_ORD X" ).append("\n"); 
		query.append("                                                                                  WHERE X.TRSP_SO_OFC_CTY_CD = SUBSTR(S.MCNTR_BDL_GRP_SEQ, 1,3)" ).append("\n"); 
		query.append("                                                                                    AND X.TRSP_SO_SEQ = SUBSTR(S.MCNTR_BDL_GRP_SEQ,4)) IS NULL)" ).append("\n"); 
		query.append("                                     THEN 'N'" ).append("\n"); 
		query.append("                                END) NO_AGMT_FLG" ).append("\n"); 
		query.append("                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                               )    " ).append("\n"); 
		query.append("                                     ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                END)" ).append("\n"); 
		query.append("                                - (S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(S.SCG_VAT_AMT,0) + NVL(S.TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0)) AS INV_DIFF_AMT" ).append("\n"); 
		query.append("                              ,CASE WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD    " ).append("\n"); 
		query.append("                                                            FROM MDM_ORGANIZATION X    " ).append("\n"); 
		query.append("                                                           WHERE X.DELT_FLG = 'N'    " ).append("\n"); 
		query.append("                                                         CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD    " ).append("\n"); 
		query.append("                                                           START WITH X.OFC_CD IN ('HAMRU', 'SHARC', 'SINRS'))    " ).append("\n"); 
		query.append("                                         AND S.TRSP_SO_TP_CD = 'Y'    " ).append("\n"); 
		query.append("                                         AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')    " ).append("\n"); 
		query.append("                                         AND S.TRSP_BND_CD IN ('I','O')    " ).append("\n"); 
		query.append("                                         AND S.SO_DSCR_RSN_CD <> 'M'    " ).append("\n"); 
		query.append("                                    THEN 'N'    " ).append("\n"); 
		query.append("                                    WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD    " ).append("\n"); 
		query.append("                                                            FROM MDM_ORGANIZATION X    " ).append("\n"); 
		query.append("                                                           WHERE X.DELT_FLG = 'N'    " ).append("\n"); 
		query.append("                                                         CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD    " ).append("\n"); 
		query.append("                                                           START WITH X.OFC_CD IN ('NYCRAG', 'NYCNOG', 'NYCRAO', 'NYCRAX', 'NYCNKG', 'SAOLA'))    " ).append("\n"); 
		query.append("                                         AND (SELECT X.SO_DSCR_RSN_CD FROM TRS_TRSP_OPTM_USA_ROUT X WHERE X.BKG_NO = S.BKG_NO AND ROWNUM = 1) <> 'M'    " ).append("\n"); 
		query.append("                                         AND S.TRSP_SO_TP_CD = 'Y'    " ).append("\n"); 
		query.append("                                         AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')    " ).append("\n"); 
		query.append("                                         AND S.TRSP_BND_CD IN ('I','O')    " ).append("\n"); 
		query.append("                                         AND TRSP_CRR_MOD_CD NOT IN ('WD')    " ).append("\n"); 
		query.append("                                    THEN 'N'    " ).append("\n"); 
		query.append("                               END NO_OPTM_ROUT_FLG    " ).append("\n"); 
		query.append("                              ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio    " ).append("\n"); 
		query.append("                                      FROM EAS_TRSP_AUTO_AUD_CRTE X    " ).append("\n"); 
		query.append("                                     WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD     " ).append("\n"); 
		query.append("                                       AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD    " ).append("\n"); 
		query.append("                                       AND X.CGO_TP_CD        = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                       AND X.EXPN_AUD_TGT_FLG = 'Y'    " ).append("\n"); 
		query.append("                                       AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO    " ).append("\n"); 
		query.append("                                                                            FROM EAS_TRSP_AUTO_AUD_CRTE X    " ).append("\n"); 
		query.append("                                                                           WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)    " ).append("\n"); 
		query.append("                                                                             AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD    " ).append("\n"); 
		query.append("                                                                             AND X.CGO_TP_CD        = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                                                             AND X.EXPN_AUD_TGT_FLG = 'Y'    " ).append("\n"); 
		query.append("                                                                             AND X.EXPN_AUD_CRTE_TP_CD = 'D')    " ).append("\n"); 
		query.append("                               ) AS INV_DIFF_RTO    " ).append("\n"); 
		query.append("                              ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- Exceed Average Ratio    " ).append("\n"); 
		query.append("                                      FROM EAS_TRSP_AUTO_AUD_CRTE X    " ).append("\n"); 
		query.append("                                     WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD     " ).append("\n"); 
		query.append("                                       AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD" ).append("\n"); 
		query.append("                                       AND X.CGO_TP_CD        = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                       AND X.EXPN_AUD_TGT_FLG = 'Y'    " ).append("\n"); 
		query.append("                                       AND X.EXPN_AUD_CRTE_TP_CD = 'A'), (SELECT X.EXPN_MAX_PRMT_RTO    " ).append("\n"); 
		query.append("                                                                            FROM EAS_TRSP_AUTO_AUD_CRTE X    " ).append("\n"); 
		query.append("                                                                           WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)    " ).append("\n"); 
		query.append("                                                                             AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD    " ).append("\n"); 
		query.append("                                                                             AND X.CGO_TP_CD        = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                                                             AND X.EXPN_AUD_TGT_FLG = 'Y'    " ).append("\n"); 
		query.append("                                                                             AND X.EXPN_AUD_CRTE_TP_CD = 'A')    " ).append("\n"); 
		query.append("                               ) AS EXCEED_AVG_RTO    " ).append("\n"); 
		query.append("                              ,(SELECT (CASE WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))    " ).append("\n"); 
		query.append("                                             THEN WO_20FT_DRY_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))    " ).append("\n"); 
		query.append("                                             THEN WO_40FT_DRY_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('6', '7') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))    " ).append("\n"); 
		query.append("                                             THEN WO_45FT_DRY_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'    " ).append("\n"); 
		query.append("                                             THEN WO_20FT_RF_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'    " ).append("\n"); 
		query.append("                                             THEN WO_40FT_RF_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'    " ).append("\n"); 
		query.append("                                             THEN WO_20FT_DG_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'    " ).append("\n"); 
		query.append("                                             THEN WO_40FT_DG_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'    " ).append("\n"); 
		query.append("                                             THEN WO_20FT_AWK_AVG_AMT    " ).append("\n"); 
		query.append("                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'    " ).append("\n"); 
		query.append("                                             THEN WO_40FT_AWK_AVG_AMT    " ).append("\n"); 
		query.append("                                        END)||','|| X.WO_CURR_CD    " ).append("\n"); 
		query.append("                                  FROM EAS_EXPN_AUD_CS_INLND_COST X    " ).append("\n"); 
		query.append("                                 WHERE X.INLND_COST_YRMON = TO_CHAR(ADD_MONTHS(W.LOCL_CRE_DT,-1), 'YYYYMM')" ).append("\n"); 
		query.append("                                   AND X.WO_OFC_CD        = W.CRE_OFC_CD    " ).append("\n"); 
		query.append("                                   AND X.TRSP_SO_TP_CD    = S.TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                                   AND TRSP_COST_DTL_MOD_CD = S.TRSP_COST_DTL_MOD_CD    " ).append("\n"); 
		query.append("                                   AND X.TRSP_CRR_MOD_CD    = S.TRSP_CRR_MOD_CD     " ).append("\n"); 
		query.append("                                   AND X.CGO_TP_CD          = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                   AND X.FM_NOD_CD          = S.FM_NOD_CD    " ).append("\n"); 
		query.append("                                   AND NVL(X.VIA_NOD_CD,'X')= NVL(S.VIA_NOD_CD,'X')    " ).append("\n"); 
		query.append("                                   AND X.TO_NOD_CD          = S.TO_NOD_CD    " ).append("\n"); 
		query.append("                                   AND NVL(X.DOR_NOD_CD,'X')= NVL(S.DOR_NOD_CD,'X')    " ).append("\n"); 
		query.append("                                   AND NVL(X.TRSP_BND_CD,'X')= NVL(S.TRSP_BND_CD,'X')    " ).append("\n"); 
		query.append("                                   AND ROWNUM = 1    " ).append("\n"); 
		query.append("                               ) AVG_3MON_RT_INFO    " ).append("\n"); 
		query.append("                              ,W.LOCL_CRE_DT AS WO_ISS_DT    " ).append("\n"); 
		query.append("                              ,S.CGO_TP_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_CRR_MOD_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_COST_DTL_MOD_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_SO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_SO_SEQ    " ).append("\n"); 
		query.append("                              ,S.TRSP_WO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_WO_SEQ    " ).append("\n"); 
		query.append("                              ,S.BKG_RCVDE_TERM_CD    " ).append("\n"); 
		query.append("                              ,S.EQ_NO" ).append("\n"); 
		query.append("                              ,I.INV_CFM_DT" ).append("\n"); 
		query.append("                          FROM TRS_TRSP_INV_WRK I    " ).append("\n"); 
		query.append("                              ,TRS_TRSP_SVC_ORD S    " ).append("\n"); 
		query.append("                              ,TRS_TRSP_WRK_ORD W    " ).append("\n"); 
		query.append("                              ,TRS_TRSP_HJL_SVC_ORD L    " ).append("\n"); 
		query.append("                              ,AP_INV_HDR A    " ).append("\n"); 
		query.append("                         WHERE I.INV_NO       = S.INV_NO    " ).append("\n"); 
		query.append("                           AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                           AND S.TRSP_WO_OFC_CTY_CD = W.TRSP_WO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                           AND S.TRSP_WO_SEQ        = W.TRSP_WO_SEQ    " ).append("\n"); 
		query.append("                           AND S.TRSP_SO_OFC_CTY_CD = L.TRSP_SO_OFC_CTY_CD(+)    " ).append("\n"); 
		query.append("                           AND S.TRSP_SO_SEQ        = L.TRSP_SO_SEQ(+)    " ).append("\n"); 
		query.append("                           AND I.CSR_NO             = A.CSR_NO(+)    " ).append("\n"); 
		query.append("                           AND S.DELT_FLG = 'N'    " ).append("\n"); 
		query.append("                           AND S.TRSP_SO_STS_CD = 'I'    " ).append("\n"); 
		query.append("                           AND S.TRSP_SO_TP_CD IN ('Y', 'M')    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                           -- 2시간 배치" ).append("\n"); 
		query.append("                           #if(${batch_tp_cd} == 'A')" ).append("\n"); 
		query.append("                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')    " ).append("\n"); 
		query.append("                             AND NOT EXISTS (SELECT 'X'" ).append("\n"); 
		query.append("                                               FROM EAS_TRSP_AUD X" ).append("\n"); 
		query.append("                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                                                AND X.INV_NO        = I.INV_NO" ).append("\n"); 
		query.append("                                                AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD" ).append("\n"); 
		query.append("                                            )" ).append("\n"); 
		query.append("                           #elseif(${batch_tp_cd} == 'M') -- 실시간 배치" ).append("\n"); 
		query.append("                             AND EXISTS (SELECT 'X' " ).append("\n"); 
		query.append("                                           FROM EAS_AUTO_AUD_BAT X" ).append("\n"); 
		query.append("                                          WHERE X.INV_NO        = I.INV_NO" ).append("\n"); 
		query.append("                                            AND X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                                            AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD" ).append("\n"); 
		query.append("                                            AND X.SUB_SYS_CD      = 'TRS'" ).append("\n"); 
		query.append("                                            AND X.BAT_PROG_STS_CD = 'P'" ).append("\n"); 
		query.append("                                            AND X.CRE_DT > SYSDATE - 2 -- 다양한 사유로 배치 중지 되었을 경우를 대비하여 이틀간 자료 배치 수행" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                           #elseif(${batch_tp_cd} == 'E') -- 메뉴얼 기간 배치 (Period로 조회)" ).append("\n"); 
		query.append("                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("                             AND NOT EXISTS (SELECT 'X'" ).append("\n"); 
		query.append("                                               FROM EAS_TRSP_AUD X" ).append("\n"); 
		query.append("                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                                                AND X.INV_NO        = I.INV_NO" ).append("\n"); 
		query.append("                                                AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD" ).append("\n"); 
		query.append("                                            )" ).append("\n"); 
		query.append("                           #elseif(${batch_tp_cd} == 'F') -- 초기 자료 생성 (Period로 조회)" ).append("\n"); 
		query.append("                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                             -- RHQ로 조회 (초기 자료 생성시 등에 옵션 조건으로 사용하기 위하여 남겨둠)" ).append("\n"); 
		query.append("                           #if(${s_rhq_ofc_cd} != '')" ).append("\n"); 
		query.append("                           AND I.CRE_OFC_CD IN (SELECT OFC_CD    " ).append("\n"); 
		query.append("                                                      FROM MDM_ORGANIZATION    " ).append("\n"); 
		query.append("                                                     WHERE DELT_FLG = 'N'    " ).append("\n"); 
		query.append("                                                   CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD    " ).append("\n"); 
		query.append("                                                     START WITH OFC_CD = @[s_rhq_ofc_cd]    " ).append("\n"); 
		query.append("                                               )" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                           -- Invoice No로 조회     " ).append("\n"); 
		query.append("                           #if (${s_inv_no}!= '')" ).append("\n"); 
		query.append("                             AND I.INV_NO IN (" ).append("\n"); 
		query.append("                             #foreach( ${key} IN ${invNos}) " ).append("\n"); 
		query.append("                                #if($velocityCount < $invNos.size()) " ).append("\n"); 
		query.append("                                '${key}'," ).append("\n"); 
		query.append("                                #else " ).append("\n"); 
		query.append("                                '${key}'" ).append("\n"); 
		query.append("                                #end " ).append("\n"); 
		query.append("                             #end" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("                       ) AA    " ).append("\n"); 
		query.append("                      ,EAS_TRSP_AUD BB    " ).append("\n"); 
		query.append("                 WHERE 1=1    " ).append("\n"); 
		query.append("                   AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)    " ).append("\n"); 
		query.append("                   AND AA.INV_NO        = BB.INV_NO(+)    " ).append("\n"); 
		query.append("                   AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)" ).append("\n"); 
		query.append("                -- Rail    " ).append("\n"); 
		query.append("                UNION ALL" ).append("\n"); 
		query.append("                SELECT AA.RHQ_OFC_CD    " ).append("\n"); 
		query.append("                      ,AA.INV_OFC_CD    " ).append("\n"); 
		query.append("                      ,AA.WO_OFC_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                      ,AA.INV_VNDR_SEQ     " ).append("\n"); 
		query.append("                      ,AA.INV_NO" ).append("\n"); 
		query.append("                      ,NULL HJL_INV_VNDR_SEQ" ).append("\n"); 
		query.append("                      ,NULL HJL_INV_NO" ).append("\n"); 
		query.append("                      ,AA.INV_ISS_DT    " ).append("\n"); 
		query.append("                      ,AA.INV_AUD_STS_CD    " ).append("\n"); 
		query.append("                      ,AA.CSR_NO    " ).append("\n"); 
		query.append("                      ,AA.CURR_CD    " ).append("\n"); 
		query.append("                      ,AA.WO_AMT    " ).append("\n"); 
		query.append("                      ,AA.INV_AMT    " ).append("\n"); 
		query.append("                      ,AA.CURR_CNG_FLG" ).append("\n"); 
		query.append("                      ,AA.INV_ISS_USR_ID" ).append("\n"); 
		query.append("                      ,AA.PAY_TERM_CD" ).append("\n"); 
		query.append("                      ,CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'" ).append("\n"); 
		query.append("                            WHEN AA.INV_DIFF_AMT < -1 THEN 'F'" ).append("\n"); 
		query.append("                            WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'" ).append("\n"); 
		query.append("                                                                                                                                     ELSE 'F'" ).append("\n"); 
		query.append("                                                                                                                                END" ).append("\n"); 
		query.append("                            WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'" ).append("\n"); 
		query.append("                            WHEN AA.INV_DIFF_RTO IS NULL THEN 'T'" ).append("\n"); 
		query.append("                       END AUTO_AUD_STS_CD" ).append("\n"); 
		query.append("                      ,AA.NO_AGMT_FLG    " ).append("\n"); 
		query.append("                      ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'" ).append("\n"); 
		query.append("                             WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' " ).append("\n"); 
		query.append("                        END) INV_DIFF_AMT_FLG" ).append("\n"); 
		query.append("                      ,AA.INV_DIFF_AMT    " ).append("\n"); 
		query.append("                      ,AA.NO_OPTM_ROUT_FLG    " ).append("\n"); 
		query.append("                      ,'N' EXCEED_AVG_FLG                           " ).append("\n"); 
		query.append("                      ,0 EXCEED_AVG_DIFF_AMT    " ).append("\n"); 
		query.append("                      ,AA.CGO_TP_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_CRR_MOD_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_COST_DTL_MOD_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_SO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                      ,AA.TRSP_SO_SEQ    " ).append("\n"); 
		query.append("                      ,NULL TRSP_WO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                      ,NULL TRSP_WO_SEQ    " ).append("\n"); 
		query.append("                      ,AA.BKG_RCVDE_TERM_CD    " ).append("\n"); 
		query.append("                      ,AA.EQ_NO    " ).append("\n"); 
		query.append("                      ,BB.EXPN_AUD_STS_CD" ).append("\n"); 
		query.append("                      ,TO_CHAR(BB.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') LOCL_CRE_DT" ).append("\n"); 
		query.append("                      ,(SELECT 'I'    " ).append("\n"); 
		query.append("                         FROM EAS_TRSP_AUD_CHK X    " ).append("\n"); 
		query.append("                        WHERE X.INV_NO        = AA.INV_NO    " ).append("\n"); 
		query.append("                          AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                          AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                          AND ROWNUM = 1    " ).append("\n"); 
		query.append("                       ) EAC_IF_FLG" ).append("\n"); 
		query.append("                      ,AA.INV_CFM_DT" ).append("\n"); 
		query.append("                      ,(CASE WHEN BB.INV_NO IS NOT NULL THEN 'Y' ELSE 'N' END) AUD_RLST_FLG" ).append("\n"); 
		query.append("                  FROM (    " ).append("\n"); 
		query.append("                        SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */    " ).append("\n"); 
		query.append("                               (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD    " ).append("\n"); 
		query.append("                              ,I.CRE_OFC_CD AS INV_OFC_CD    " ).append("\n"); 
		query.append("                              ,DECODE(W.CRE_OFC_CD, 'SYSTEM', S.TRSP_SO_OFC_CTY_CD, W.CRE_OFC_CD) AS WO_OFC_CD    " ).append("\n"); 
		query.append("                              ,'R' AS TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                              ,I.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                              ,I.INV_NO    " ).append("\n"); 
		query.append("                              ,TO_CHAR(I.INV_ISS_DT, 'YYYYMMDDHH24MISS') INV_ISS_DT    " ).append("\n"); 
		query.append("                              ,I.CSR_NO    " ).append("\n"); 
		query.append("                              ,S.CURR_CD    " ).append("\n"); 
		query.append("                              ,S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) AS WO_AMT    " ).append("\n"); 
		query.append("                              ,S.INV_CURR_CD    " ).append("\n"); 
		query.append("                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                                                                                               + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                               )    " ).append("\n"); 
		query.append("                                     ELSE S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                     + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                END) AS INV_AMT    " ).append("\n"); 
		query.append("                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG    " ).append("\n"); 
		query.append("                              ,I.CRE_USR_ID INV_ISS_USR_ID" ).append("\n"); 
		query.append("                              ,(SELECT X.GEN_PAY_TERM_CD" ).append("\n"); 
		query.append("                                  FROM MDM_VENDOR X    " ).append("\n"); 
		query.append("                                 WHERE X.VNDR_SEQ = I.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                               ) PAY_TERM_CD" ).append("\n"); 
		query.append("                              ,TO_CHAR(I.PAY_DT, 'YYYYMMDDHH24MISS') PAY_DT    " ).append("\n"); 
		query.append("                              ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYYMMDD'), 'YYYYMMDD') INV_TERM_DT    " ).append("\n"); 
		query.append("                              ,(CASE WHEN I.TRSP_INV_AUD_STS_CD = 'CF' THEN 'C' -- Invoice Confirmed    " ).append("\n"); 
		query.append("                                     WHEN A.IF_FLG IS NULL AND A.RQST_APRO_STEP_FLG = 'Y' THEN 'L' -- Requesting Approval    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'AR' THEN 'A' -- Approval Requested    " ).append("\n"); 
		query.append("                                     WHEN A.IF_ERR_RSN = 'Sending...' THEN 'S' -- Sending    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'DA' THEN 'R' -- Disapproved    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IE' THEN 'C' -- I/F Error    " ).append("\n"); 
		query.append("                                     WHEN A.RCV_ERR_FLG = 'E' THEN 'E'-- A/P Rejected                 " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IF' THEN 'P' -- I/F Success    " ).append("\n"); 
		query.append("                                     WHEN I.TRSP_INV_AUD_STS_CD = 'PD' THEN 'D' -- Paid    " ).append("\n"); 
		query.append("                                END) INV_AUD_STS_CD    " ).append("\n"); 
		query.append("                              ,NULL NO_AGMT_FLG    " ).append("\n"); 
		query.append("                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.CURR_CD    " ).append("\n"); 
		query.append("                                                                                                               ,S.INV_BZC_AMT    " ).append("\n"); 
		query.append("                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    " ).append("\n"); 
		query.append("                                                                                                               )    " ).append("\n"); 
		query.append("                                     ELSE S.INV_BZC_AMT " ).append("\n"); 
		query.append("--                                     + NVL(S.INV_ETC_ADD_AMT,0)    " ).append("\n"); 
		query.append("                                END)" ).append("\n"); 
		query.append("                                - (S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0)) AS INV_DIFF_AMT    " ).append("\n"); 
		query.append("                              ,NULL NO_OPTM_ROUT_FLG    " ).append("\n"); 
		query.append("                              ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio    " ).append("\n"); 
		query.append("                                      FROM EAS_TRSP_AUTO_AUD_CRTE X    " ).append("\n"); 
		query.append("                                     WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD     " ).append("\n"); 
		query.append("                                       AND X.TRSP_CRR_MOD_CD  = 'RD'    " ).append("\n"); 
		query.append("                                       AND X.CGO_TP_CD        = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                       AND X.EXPN_AUD_TGT_FLG = 'Y'    " ).append("\n"); 
		query.append("                                       AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO    " ).append("\n"); 
		query.append("                                                                            FROM EAS_TRSP_AUTO_AUD_CRTE X    " ).append("\n"); 
		query.append("                                                                           WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)    " ).append("\n"); 
		query.append("                                                                             AND X.TRSP_CRR_MOD_CD  = 'RD'    " ).append("\n"); 
		query.append("                                                                             AND X.CGO_TP_CD        = S.CGO_TP_CD    " ).append("\n"); 
		query.append("                                                                             AND X.EXPN_AUD_TGT_FLG = 'Y'    " ).append("\n"); 
		query.append("                                                                             AND X.EXPN_AUD_CRTE_TP_CD = 'D')    " ).append("\n"); 
		query.append("                               ) AS INV_DIFF_RTO" ).append("\n"); 
		query.append("                              ,W.LOCL_CRE_DT AS WO_ISS_DT    " ).append("\n"); 
		query.append("                              ,S.CGO_TP_CD    " ).append("\n"); 
		query.append("                              ,'RD' TRSP_CRR_MOD_CD    " ).append("\n"); 
		query.append("                              ,W.TRSP_COST_DTL_MOD_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_SO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                              ,S.TRSP_SO_SEQ    " ).append("\n"); 
		query.append("                              ,W.BKG_RCVDE_TERM_CD    " ).append("\n"); 
		query.append("                              ,W.EQ_NO" ).append("\n"); 
		query.append("                              ,I.INV_CFM_DT" ).append("\n"); 
		query.append("                          FROM TRS_TRSP_RAIL_INV_WRK I    " ).append("\n"); 
		query.append("                              ,TRS_TRSP_RAIL_INV_DTL S    " ).append("\n"); 
		query.append("                              ,TRS_TRSP_RAIL_BIL_ORD W    " ).append("\n"); 
		query.append("                              ,AP_INV_HDR            A    " ).append("\n"); 
		query.append("                         WHERE I.INV_NO       = S.INV_NO    " ).append("\n"); 
		query.append("                           AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                           AND S.TRSP_SO_OFC_CTY_CD = W.TRSP_SO_OFC_CTY_CD    " ).append("\n"); 
		query.append("                           AND S.TRSP_SO_SEQ        = W.TRSP_SO_SEQ    " ).append("\n"); 
		query.append("                           AND I.CSR_NO             = A.CSR_NO(+)    " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                           #if(${batch_tp_cd} == 'A') -- 2시간 배치" ).append("\n"); 
		query.append("                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')" ).append("\n"); 
		query.append("                             AND NOT EXISTS (SELECT 'X'" ).append("\n"); 
		query.append("                                               FROM EAS_TRSP_AUD X" ).append("\n"); 
		query.append("                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                                                AND X.INV_NO        = I.INV_NO" ).append("\n"); 
		query.append("                                            )" ).append("\n"); 
		query.append("                           -- 실시간 배치" ).append("\n"); 
		query.append("                           #elseif(${batch_tp_cd} == 'M') -- 실시간 배치" ).append("\n"); 
		query.append("                             AND EXISTS (SELECT 'X' " ).append("\n"); 
		query.append("                                           FROM EAS_AUTO_AUD_BAT X" ).append("\n"); 
		query.append("                                          WHERE X.INV_NO        = I.INV_NO" ).append("\n"); 
		query.append("                                            AND X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                                            AND X.SUB_SYS_CD      = 'TRS'" ).append("\n"); 
		query.append("                                            AND X.BAT_PROG_STS_CD = 'P'" ).append("\n"); 
		query.append("                                            AND X.CRE_DT > SYSDATE - 2 -- 다양한 사유로 배치 중지 되었을 경우를 대비하여 이틀간 자료를 배치 수행" ).append("\n"); 
		query.append("                                         )" ).append("\n"); 
		query.append("                           #elseif(${batch_tp_cd} == 'E') --  메뉴얼 기간 배치 (Period로 조회)" ).append("\n"); 
		query.append("                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("                             AND NOT EXISTS (SELECT 'X'" ).append("\n"); 
		query.append("                                               FROM EAS_TRSP_AUD X" ).append("\n"); 
		query.append("                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ" ).append("\n"); 
		query.append("                                                AND X.INV_NO        = I.INV_NO" ).append("\n"); 
		query.append("                                            )" ).append("\n"); 
		query.append("                           #elseif(${batch_tp_cd} == 'F') -- 초기 자료 생성 (Period로 조회)" ).append("\n"); 
		query.append("                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                           -- RHQ로 조회 (초기 자료 생성시 등에 옵션 조건으로 사용하기 위하여 남겨둠)" ).append("\n"); 
		query.append("                           #if(${s_rhq_ofc_cd} != '')" ).append("\n"); 
		query.append("                           AND I.CRE_OFC_CD IN (SELECT OFC_CD" ).append("\n"); 
		query.append("                                                      FROM MDM_ORGANIZATION    " ).append("\n"); 
		query.append("                                                     WHERE DELT_FLG = 'N'    " ).append("\n"); 
		query.append("                                                   CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD    " ).append("\n"); 
		query.append("                                                     START WITH OFC_CD = @[s_rhq_ofc_cd]    " ).append("\n"); 
		query.append("                                               )" ).append("\n"); 
		query.append("                           #end" ).append("\n"); 
		query.append("                           -- Invoice No로 조회 " ).append("\n"); 
		query.append("                           #if (${s_inv_no}!= '')" ).append("\n"); 
		query.append("                             AND I.INV_NO IN (" ).append("\n"); 
		query.append("                             #foreach( ${key} IN ${invNos}) " ).append("\n"); 
		query.append("                                #if($velocityCount < $invNos.size()) " ).append("\n"); 
		query.append("                                '${key}'," ).append("\n"); 
		query.append("                                #else " ).append("\n"); 
		query.append("                                '${key}'" ).append("\n"); 
		query.append("                                #end " ).append("\n"); 
		query.append("                             #end" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                           #end " ).append("\n"); 
		query.append("                       ) AA    " ).append("\n"); 
		query.append("                      ,EAS_TRSP_AUD BB    " ).append("\n"); 
		query.append("                 WHERE 1=1    " ).append("\n"); 
		query.append("                   AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)    " ).append("\n"); 
		query.append("                   AND AA.INV_NO        = BB.INV_NO(+)    " ).append("\n"); 
		query.append("                   AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)" ).append("\n"); 
		query.append("                ) AAA    " ).append("\n"); 
		query.append("            GROUP BY TRSP_SO_TP_CD    " ).append("\n"); 
		query.append("                    ,INV_VNDR_SEQ    " ).append("\n"); 
		query.append("                    ,INV_NO" ).append("\n"); 
		query.append("        ) AAAA" ).append("\n"); 
		query.append("    WHERE 1=1" ).append("\n"); 

	}
}