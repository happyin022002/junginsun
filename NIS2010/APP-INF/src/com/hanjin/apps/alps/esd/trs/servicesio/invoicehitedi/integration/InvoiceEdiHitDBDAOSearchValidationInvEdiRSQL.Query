<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InvoiceEdiHitDBDAOSearchValidationInvEdiRSQL">
			<desc><![CDATA[EDI F/F INVOICE 데이터 검증]]></desc>
			<sql><![CDATA[
SELECT NVL(SUBSTR(Z.INV_NO_CHK || Z.INV_NO_CHK2 || Z.INV_VNDR_SEQ_CHK || Z.INV_CURR_CD_CHK || Z.INV_TTL_AMT_CHK || Z.INV_ISS_DT_CHK || Z.INV_TTL_AMT_CHK2, 2),'Y') VAL_CHK
 FROM ( SELECT CASE WHEN TRIM(Y.INV_NO)      IS NULL THEN ',INVALID INVOICE NO' ELSE ''  END AS INV_NO_CHK
              ,CASE WHEN Y.TRS_INV_NO IS NOT NULL THEN ',INVOICE NUMBER DUPLICATION' ELSE '' END AS INV_NO_CHK2
              ,CASE WHEN Y.INV_VNDR_SEQ IS NULL THEN ',INVALID VENDOR'     ELSE ''  END AS INV_VNDR_SEQ_CHK
              ,CASE WHEN TRIM(Y.INV_CURR_CD) IS NULL THEN ',INVALID CURRENCY'   ELSE ''  END AS INV_CURR_CD_CHK
              ,CASE WHEN NVL(Y.INV_TTL_AMT,0) =0 THEN ',INVALID TOTAL INVOICE AMOUNT(0)'  ELSE ''  END AS INV_TTL_AMT_CHK
              ,CASE WHEN Y.INV_ISS_DT IS NULL THEN ',INVALID INVOICE ISSUE DATE' ELSE  '' END AS INV_ISS_DT_CHK
              ,CASE WHEN Y.USD_INV_TTL_AMT <> Y.USD_SO_AMT THEN ',INVOICE AMOUNT MISMATCH' ELSE '' END AS INV_TTL_AMT_CHK2
         FROM ( SELECT X.INV_NO
                      ,X.TRS_INV_NO TRS_INV_NO
                      ,X.INV_VNDR_SEQ
                      ,X.INV_CURR_CD
                      ,X.INV_TTL_AMT
                      ,X.INV_ISS_DT
                      ,X.USD_INV_TTL_AMT
                      ,SUM(ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(X.TRS_SO_CURR_CD,X.TRS_SO_AMT),2)) USD_SO_AMT
                  FROM ( SELECT A.INV_NO
                               ,D.INV_NO TRS_INV_NO
                               ,A.INV_VNDR_SEQ
                               ,A.INV_CURR_CD
                               ,A.INV_TTL_AMT
                               ,A.INV_ISS_DT
                               ,ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(A.INV_CURR_CD,A.INV_TTL_AMT),2) USD_INV_TTL_AMT
                               ,C.CURR_CD TRS_SO_CURR_CD
                               ,SUM(NVL(C.BZC_AMT,0)+NVL(C.FUEL_SCG_AMT,0)+NVL(C.NEGO_AMT,0)+NVL(C.ETC_ADD_AMT,0)+NVL(C.SCG_VAT_AMT,0)+NVL(C.HJL_HNDL_AMT,0)+NVL(C.TOLL_FEE_AMT,0)) TRS_SO_AMT
                            FROM TRS_INV_EDI_RCV A
                                ,TRS_INV_EDI_RCV_EQ B
                                ,TRS_TRSP_SVC_ORD C
                                ,TRS_TRSP_INV_WRK D
                           WHERE A.INV_EDI_RCV_SEQ = B.INV_EDI_RCV_SEQ
                             AND B.TRSP_SO_OFC_CTY_CD = C.TRSP_SO_OFC_CTY_CD(+)
                             AND B.TRSP_SO_SEQ = C.TRSP_SO_SEQ(+)
                             AND A.INV_NO = D.INV_NO(+)
                             AND A.INV_VNDR_SEQ = D.INV_VNDR_SEQ(+)
                             AND A.INV_EDI_RCV_SEQ = @[inv_edi_rcv_seq]
                        GROUP BY A.INV_NO
                                ,D.INV_NO       
                                ,A.INV_VNDR_SEQ
                                ,A.INV_CURR_CD
                                ,A.INV_TTL_AMT
                                ,A.INV_ISS_DT
                                ,A.INV_TTL_AMT
                                ,C.CURR_CD
                        ) X
                     GROUP BY X.INV_NO
                             ,X.TRS_INV_NO 
                             ,X.INV_VNDR_SEQ
                             ,X.INV_CURR_CD
                             ,X.INV_TTL_AMT
                             ,X.INV_ISS_DT
                             ,X.USD_INV_TTL_AMT
                    ) Y
               ) Z			]]></sql>
			<params>
				<param name="inv_edi_rcv_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
