<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="MnrAdvanceAuditDBDAOsearchMnrAutoAudListRSQL">
			<desc><![CDATA[searchMnrAutoAudList 조회쿼리 (MNR Auto Audit 배치에서 사용)]]></desc>
			<sql><![CDATA[
SELECT   A.INV_NO
       , A.VNDR_SEQ
       , A.EQ_KND_CD
       , NULL AS EXPN_AUD_STS_CD
       , 'BATCH' AS CRE_USR_ID -- 해당 내용은 BATCH성격에 맞게 변경하세요
       , SYSDATE AS CRE_DT
       , 'BATCH' AS UPD_USR_ID -- 해당 내용은 BATCH성격에 맞게 변경하세요
       , SYSDATE AS UPD_DT
       , NULL AS EXPN_AUD_RSLT_RMK
       , NULL AS EXPN_AUD_RSLT_USR_ID
       , NULL AS ATCH_FILE_LNK_ID
       , NULL AS EXPN_AUD_RSLT_CD
       , A.RHQ_INV_OFC_CD AS RHQ_CD
       , A.INV_OFC_CD AS INV_OFC_CD
       , A.INV_CFM_DT
       , CASE WHEN A.WK_VRFY_YN = 'Y' THEN 'C'
              WHEN A.EST_VRFY_YN = 'Y' THEN 'C'
              WHEN A.EXPN_MAX_PRMT_RTO < A.WO_INV_RTO  THEN 'C'
              WHEN A.MLT_WO_CURR_FLG = 'Y' THEN 'C'
              WHEN A.WO_INV_RTO <= -1 THEN 'F'
              WHEN A.EST_VRFY_DESC IS NOT NULL THEN 'F'
              WHEN A.WK_VRFY_DESC IS NOT NULL THEN 'F'
              WHEN ABS(A.WO_INV_RTO) < 1 THEN 'S'
              WHEN A.EXPN_MAX_PRMT_RTO > A.WO_INV_RTO THEN 'F'
              ELSE 'C'
         END AS AUTO_EXPN_AUD_STS_CD
         -- ERROR CODE : N 이고 금액차가 -1 보다 작으면 POTENTIAL EAC
         -- ERROR CODE : N 이고 금액차가 +- 1 안이면 COINCIDENCE
         -- ERROR CODE : N 이고 설정 차이 비율보다 낮으면 COINCIDENCE
         -- P : Coincidence|A : Candidate EAC|E : Potential EAC
       , A.EXPN_MAX_PRMT_RTO
       , A.WO_CURR_CD AS CURR_CD
       , A.COST_AMT AS WO_AMT
       , A.INV_AMT AS INV_AMT
       , DECODE(A.REFL_EX_YN, 'Y', 'Y', '') AS CURR_CNG_FLG -- W/O CURR_CD와 INV CURR_CD가 같을경우 Y 
       , A.INV_CURR_CD -- FIELD추가 요청사항
       , A.CHG_WO_AMT AS INV_DIFF_AMT  -- INV AMT - W/O AMT 금액
       , ROUND((A.CHG_WO_AMT/(DECODE(A.COST_AMT, 0, 1, A.COST_AMT))) * 100, 3) AS INV_DIFF_RTO
       , A.INV_CHG_AMT  -- W/O 기준으로 변환된 금액
       , DECODE(A.WK_VRFY_YN, 'Y', 'Y', '') AS WO_VRFY_FLG 
       , DECODE(A.EST_VRFY_YN, 'Y', 'Y', '') AS ESTM_VRFY_FLG 
       , A.EST_VRFY_DESC AS ESTM_VRFY_DESC
       , A.WK_VRFY_DESC AS WO_VRFY_DESC
       , A.INV_CRE_USER_ID
       , A.INV_CRE_USER_NM
       , A.INV_RGST_NO
       , A.MLT_WO_CURR_FLG
FROM     (    
           SELECT   A.INV_NO
                  , A.CSR_NO
                  , A.EQ_KND_CD_NM
                  , A.EQ_KND_CD
                  , A.VNDR_SEQ
                  , A.VNDR_NM
                  , A.RHQ_INV_OFC_CD
                  , A.INV_OFC_CD
                  , A.WO_CURR_CD
                  , A.MNR_AGMT_AMT
                  , A.MNR_WRK_AMT
                  , A.TTL_INV_AMT
                  , A.SPR_PRT_UC_AMT
                  , A.INV_CURR_CD
                  , A.REFL_EX_YN
                  , A.BZC_AMT
                  , A.COST_AMT 
                  , A.INV_AMT
                  , A.INV_CHG_AMT
                  , A.GEN_PAY_TERM_CD
                  , A.ISS_DT
                  , A.AP_PAY_DT
                  , A.PAY_DUE_DT
                  , A.CFM_DT
                  , A.INV_CFM_DT
                  , A.INV_RMK
                  , NVL(TO_NUMBER(A.CHG_WO_AMT), 0) AS CHG_WO_AMT
                  , NVL(TO_NUMBER(A.WO_INV_RTO), 0) AS WO_INV_RTO
                  , A.INV_OFC_CD OFC
                  , A.RHQ_INV_OFC_CD RHQ
                  -- WO 검증
                  , CASE WHEN A.WO_OFC_CNT = 0 THEN
                              (
                                SELECT   DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                                FROM     EAS_MNR_PRE_AUD_VRFY_CFG V
                                       , TABLE(BKG_SPLIT_FNC(A.WK_VRFY_DESC, ',')) Q
                                WHERE    1 = 1
                                AND      V.AUD_OFC_CD = A.RHQ_INV_OFC_CD
                                AND      V.EXPN_AUD_MNR_VRFY_TP_CD = 'W'
                                AND      V.MNR_VRFY_TP_AUD_FLG = 'Y'
                                AND      V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                              )
                         ELSE 
                              (
                                SELECT   DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                                FROM     EAS_MNR_PRE_AUD_VRFY_CFG V
                                       , TABLE(BKG_SPLIT_FNC(A.WK_VRFY_DESC, ',')) Q
                                WHERE    1 = 1
                                AND      V.AUD_OFC_CD = A.INV_OFC_CD
                                AND      V.EXPN_AUD_MNR_VRFY_TP_CD = 'W'
                                AND      V.MNR_VRFY_TP_AUD_FLG = 'Y'
                                AND      V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                              )
                    END AS WK_VRFY_YN
                  -- VRFY 검증
                  , CASE WHEN EST_OFC_CNT = 0 THEN
                              (
                                SELECT   DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                                FROM     EAS_MNR_PRE_AUD_VRFY_CFG V
                                       , TABLE(BKG_SPLIT_FNC(A.EST_VRFY_DESC, ',')) Q
                                WHERE    1 = 1
                                AND      V.AUD_OFC_CD = A.RHQ_INV_OFC_CD
                                AND      V.EXPN_AUD_MNR_VRFY_TP_CD = 'E'
                                AND      V.MNR_VRFY_TP_AUD_FLG = 'Y'
                                AND      V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                              )
                    ELSE
                              (
                                SELECT   DECODE(SIGN(COUNT(1)), 1, 'Y', 'N')
                                FROM     EAS_MNR_PRE_AUD_VRFY_CFG V
                                       , TABLE(BKG_SPLIT_FNC(A.EST_VRFY_DESC, ',')) Q
                                WHERE    1 = 1
                                AND      V.AUD_OFC_CD = A.INV_OFC_CD
                                AND      V.EXPN_AUD_MNR_VRFY_TP_CD = 'E'
                                AND      V.MNR_VRFY_TP_AUD_FLG = 'Y'
                                AND      V.MNR_VRFY_TP_CD = Q.COLUMN_VALUE
                              )
                    END AS EST_VRFY_YN
                  , A.WK_VRFY_DESC
                  , A.EST_VRFY_DESC
                  -- CHM-201537754 NA, UR, UH는 설정을 안하더라도 CATDIDATE 오류로 지정
                  , SIGN(NVL(INSTR(A.EST_VRFY_DESC, 'NA'), 0)) AS EST_NA_CNT -- EST ERROR에 Agreement Not Found가 포함된경우
                  , SIGN(NVL(INSTR(A.EST_VRFY_DESC, 'UR'), 0)) AS EST_UR_CNT -- EST ERROR에 Labor Rate Unmatched가 포함된경우
                  , SIGN(NVL(INSTR(A.EST_VRFY_DESC, 'UH'), 0)) AS EST_UH_CNT -- EST ERROR에 Man-hour Unmatched가 포함된경우
                  , SIGN(NVL(INSTR(A.EST_VRFY_DESC, 'VT'), 0)) AS EST_VT_CNT -- EST ERROR에 Volume Type Error가 포함된경우
                  , A.EST_OFC_CNT
                  , A.WO_OFC_CNT
                  , A.INV_STS_NM
                  , A.INV_STS_CD
                  , A.INV_CRE_USER_ID
                  , A.INV_CRE_USER_NM
                  , A.EXPN_MAX_PRMT_RTO
                  , A.INV_RGST_NO
                  , DECODE(SIGN(A.WO_CURR_CNT - 1), 1, 'Y', 'N') AS MLT_WO_CURR_FLG
                  --, EST_WO_TP_FLG
                  --, MNR_WO_TP_CD_CNT
           FROM     (
                      SELECT   /*+USE_NL(B C E A)*/ 
                               C.INV_NO
                             , E.CSR_NO
                             , (
                                 SELECT   MGC.MNR_CD_DESC 
                                 FROM     MNR_GEN_CD MGC 
                                 WHERE    1 = 1
                                 AND      A.EQ_KND_CD = MGC.MNR_CD_ID 
                                 AND      MGC.PRNT_CD_ID = 'CD00002'
                                 AND      ROWNUM = 1
                               ) AS EQ_KND_CD_NM
                             , A.EQ_KND_CD
                             , MAX(E.VNDR_SEQ) AS VNDR_SEQ
                             , MAX(D.VNDR_LGL_ENG_NM) AS VNDR_NM
                             , MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(E.INV_OFC_CD) AS RHQ_INV_OFC_CD
                             , E.INV_OFC_CD
                             , A.CURR_CD AS WO_CURR_CD
                             , SUM(A.MNR_AGMT_AMT) AS MNR_AGMT_AMT
                             , SUM(A.MNR_WRK_AMT) AS MNR_WRK_AMT
                             , SUM(A.INV_AMT) AS TTL_INV_AMT
                             , SUM(B.SPR_PRT_UC_AMT) AS SPR_PRT_UC_AMT
                             , C.CURR_CD AS INV_CURR_CD
                             , DECODE(A.CURR_CD, C.CURR_CD, 'N', 'Y') AS REFL_EX_YN
                             , SUM(B.BZC_AMT) AS BZC_AMT
                             , SUM(B.COST_AMT) AS COST_AMT
                             , SUM(B.INV_AMT) AS INV_AMT
                             , MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(MAX(E.INV_ISS_DT), 'YYYYMM'), C.CURR_CD, A.CURR_CD, SUM(B.INV_AMT)) AS INV_CHG_AMT
                             , MAX(C.GEN_PAY_TERM_CD) AS GEN_PAY_TERM_CD
                             , TO_CHAR(MAX(C.ISS_DT), 'YYYY-MM-DD') AS ISS_DT
                             , TO_CHAR(MAX(E.AP_PAY_DT), 'YYYY-MM-DD') AS AP_PAY_DT
                             , (SELECT TO_CHAR(TO_DATE(INV_TERM_DT, 'YYYYMMDD'), 'YYYY-MM-DD') FROM AP_INV_HDR PAY WHERE PAY.CSR_NO = E.CSR_NO) AS PAY_DUE_DT
                             , TO_CHAR(MAX(C.CFM_DT), 'YYYY-MM-DD') AS CFM_DT
                             , TO_CHAR(MAX(C.INV_CFM_DT), 'YYYYMMDDHH24MISS') AS INV_CFM_DT
                             , MAX(E.INV_RMK) AS INV_RMK
                             , MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(MAX(E.INV_ISS_DT), 'YYYYMM'), C.CURR_CD, A.CURR_CD, SUM(B.INV_AMT)) - SUM(B.COST_AMT) AS CHG_WO_AMT
                             -- B.COST_AMT의 합이 0이면 ERROR 발생
                             , DECODE(SUM(B.COST_AMT), 0, 0, ROUND((MNR_COMMON_PKG.MNR_CAL_CURR_RATE_FNC(TO_CHAR(MAX(E.INV_ISS_DT), 'YYYYMM'), C.CURR_CD, A.CURR_CD, SUM(B.INV_AMT)) - SUM(B.COST_AMT)) / SUM(B.COST_AMT) * 100 , 2)) AS WO_INV_RTO
                             , WM_CONCAT(DISTINCT DECODE(B.MNR_VRFY_TP_CD, 'SS','','OF','','SL','',B.MNR_VRFY_TP_CD)) AS WK_VRFY_DESC
                             , (
                                 SELECT   WM_CONCAT(DISTINCT RD.MNR_VRFY_TP_CD)
                                 FROM     MNR_RPR_RQST_HDR RH
                                        , MNR_RPR_RQST_DTL RD
                                        , MNR_ORD_HDR OH
                                        , MNR_ORD_DTL OD
                                        , MNR_PAY_INV_WRK WRK
                                        , AP_PAY_INV INV
                                 WHERE    1 = 1
                                 AND      RH.MNR_ORD_OFC_CTY_CD = OH.MNR_ORD_OFC_CTY_CD
                                 AND      RH.MNR_ORD_SEQ = OH.MNR_ORD_SEQ
                                 AND      RH.RQST_EQ_NO = RD.RQST_EQ_NO
                                 AND      RH.RPR_RQST_SEQ = RD.RPR_RQST_SEQ
                                 AND      RH.RPR_RQST_VER_NO = RD.RPR_RQST_VER_NO
                                 AND      OH.MNR_ORD_OFC_CTY_CD = OD.MNR_ORD_OFC_CTY_CD
                                 AND      OH.MNR_ORD_SEQ = OD.MNR_ORD_SEQ
                                 AND      OD.PAY_INV_SEQ = WRK.PAY_INV_SEQ
                                 AND      WRK.INV_RGST_NO = INV.INV_RGST_NO
                                 AND      INV.INV_NO = C.INV_NO
                                 AND      INV.VNDR_SEQ = E.VNDR_SEQ
                                 AND      OH.EQ_KND_CD = A.EQ_KND_CD
                                 AND      OD.EQ_NO = RH.RQST_EQ_NO
                                 AND      OH.MNR_GRP_TP_CD = 'RPR'
                                 AND      RD.MNR_VRFY_TP_CD NOT IN ('SS', 'SL' ,'OF')
                               ) AS EST_VRFY_DESC
                             , (
                                 SELECT   MGC.MNR_CD_DESC 
                                 FROM     MNR_GEN_CD MGC 
                                 WHERE    1 = 1
                                 AND      E.INV_STS_CD = MGC.MNR_CD_ID 
                                 AND      MGC.PRNT_CD_ID = 'CD00042'
                                 AND      ROWNUM = 1
                               ) AS INV_STS_NM
                             , E.INV_STS_CD
                             , C.CRE_USR_ID AS INV_CRE_USER_ID
                             , ( SELECT USR_NM FROM COM_USER F WHERE C.CRE_USR_ID = F.USR_ID ) AS INV_CRE_USER_NM
                             , ( SELECT USR_NM FROM COM_USER F WHERE C.CRE_USR_ID = F.USR_ID ) AS INV_CRE_USER_NM2
                             , NVL(
                                    ( SELECT EXPN_MAX_PRMT_RTO FROM EAS_MNR_PRE_AUD_RTO_CFG WHERE AUD_OFC_CD = E.INV_OFC_CD AND MNR_VRFY_TP_AUD_FLG = 'Y' )
                                  , ( SELECT EXPN_MAX_PRMT_RTO FROM EAS_MNR_PRE_AUD_RTO_CFG WHERE AUD_OFC_CD = MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(E.INV_OFC_CD) AND MNR_VRFY_TP_AUD_FLG = 'Y' )
                               ) AS EXPN_MAX_PRMT_RTO
                             , ( SELECT COUNT(1) FROM EAS_MNR_PRE_AUD_VRFY_CFG CFG WHERE E.INV_OFC_CD = CFG.AUD_OFC_CD AND CFG.EXPN_AUD_MNR_VRFY_TP_CD = 'E' AND CFG.MNR_VRFY_TP_AUD_FLG = 'Y' ) AS EST_OFC_CNT
                             , (SELECT COUNT(1) FROM EAS_MNR_PRE_AUD_VRFY_CFG CFG WHERE E.INV_OFC_CD = CFG.AUD_OFC_CD AND CFG.EXPN_AUD_MNR_VRFY_TP_CD = 'W' AND CFG.MNR_VRFY_TP_AUD_FLG = 'Y' ) AS WO_OFC_CNT
                             , MAX(E.INV_RGST_NO) AS INV_RGST_NO
                             , ROW_NUMBER() OVER( PARTITION BY C.INV_NO, E.VNDR_SEQ, A.EQ_KND_CD ORDER BY SUM(B.INV_AMT) DESC ) AS WO_CURR_SEQ
                             , COUNT(1) OVER( PARTITION BY C.INV_NO, E.VNDR_SEQ, A.EQ_KND_CD ) AS WO_CURR_CNT
                             --, SUM( DISTINCT DECODE(A.MNR_WO_TP_CD,'EST',1,0 ) ) AS EST_WO_TP_FLG
                             --, COUNT( DISTINCT A.MNR_WO_TP_CD ) AS MNR_WO_TP_CD_CNT
                      FROM     MNR_ORD_HDR A
                             , MNR_ORD_DTL B
                             , MNR_PAY_INV_WRK C
                             , MDM_VENDOR D
                             , AP_PAY_INV E
                      WHERE    1 = 1
                      AND      A.MNR_ORD_OFC_CTY_CD = B.MNR_ORD_OFC_CTY_CD
                      AND      A.MNR_ORD_SEQ = B.MNR_ORD_SEQ
                      AND      B.PAY_INV_SEQ = C.PAY_INV_SEQ
                      AND      C.INV_RGST_NO = E.INV_RGST_NO
                      AND      E.VNDR_SEQ = D.VNDR_SEQ
                      AND      C.MNR_INV_STS_CD = 'HC'
                      AND      C.MNR_GRP_TP_CD = 'RPR'
                      AND      A.MNR_WO_TP_CD IN ('EST','SPL','EXT')
                      AND      B.ACCT_CD != '511591'
                      AND      E.DELT_FLG = 'N'
                      -- BATCH 대상 4건에 대한 조건 완성
#if(${batch_tp_cd} == 'A')
                      AND      C.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')
                      AND      NOT EXISTS
                               (
                                 SELECT   'X'
                                 FROM     EAS_MNR_CFM_INV X
                                 WHERE    1 = 1
                                 AND      X.VNDR_SEQ  = C.MNR_PRNR_SEQ
                                 AND      X.INV_NO    = C.INV_NO
                                 AND      X.EQ_KND_CD = A.EQ_KND_CD
                               )
                      --AND C.INV_CFM_DT BETWEEN TO_DATE([to_datetime], 'YYYYMMDDHH24MISS') - 0.0834 AND TO_DATE([to_datetime], 'YYYYMMDDHH24MISS')
                      --AND E.INV_CFM_DT BETWEEN TO_DATE('20141201', 'YYYY-MM-DD') AND TO_DATE('20141231', 'YYYY-MM-DD') + 0.99999	
                      --MNR_PAY_INV_WRK의 INV_CFM_DT: 한국 시간
                      --AP_PAY_INV의 INV_CFM_DT: 로컬 시간
#end
#if(${batch_tp_cd} == 'M')
                      AND      EXISTS
                               (
                                 SELECT   'X'
						         FROM     EAS_AUTO_AUD_BAT X
                                 WHERE    1 = 1
                                 AND      X.INV_NO        = C.INV_NO
                                 AND      X.INV_VNDR_SEQ  = C.MNR_PRNR_SEQ
                                 AND      X.EQ_KND_CD     = A.EQ_KND_CD
                                 AND      X.BAT_PROG_STS_CD = 'P'
                               )
#end
#if(${batch_tp_cd} == 'E')
                      AND      C.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999
                      AND      NOT EXISTS
                               (
                                 SELECT   'X'
                                 FROM     EAS_MNR_CFM_INV X
                                 WHERE    1 = 1
                                 AND      X.VNDR_SEQ  = C.MNR_PRNR_SEQ
                                 AND      X.INV_NO    = C.INV_NO
                                 AND      X.EQ_KND_CD = A.EQ_KND_CD
                               )
#end
#if(${batch_tp_cd} == 'F')
                      AND      C.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999
#end

#if(${rhq_cd} != '')
                      AND      @[rhq_cd] = ( SELECT MNR_COMMON_PKG.MNR_GET_RHQ_OFC_FNC(E.INV_OFC_CD) FROM DUAL )
#end
                      GROUP BY C.INV_NO
                             , E.CSR_NO
                             , A.EQ_KND_CD
                             , E.VNDR_SEQ
                             , E.INV_OFC_CD
                             , C.CURR_CD
                             , A.CURR_CD
                             , E.INV_STS_CD
                             , C.CRE_USR_ID
                    ) A
           WHERE    WO_CURR_SEQ = 1
         ) A			]]></sql>
			<params>
				<param name="to_datetime" type="12" value="" out="N"/>
				<param name="s_fm_dt" type="12" value="" out="N"/>
				<param name="s_to_dt" type="12" value="" out="N"/>
				<param name="rhq_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
