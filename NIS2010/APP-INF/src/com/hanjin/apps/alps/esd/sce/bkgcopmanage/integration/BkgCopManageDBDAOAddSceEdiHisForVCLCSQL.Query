<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BkgCopManageDBDAOAddSceEdiHisForVCLCSQL">
			<desc><![CDATA[BKG에서 VVD 변경시 315 EDI Event 'VCL'을 발송하기 위해 SCE_EDI_HIS에 발송 대상 data를 insert 한다.]]></desc>
			<sql><![CDATA[
INSERT ALL 
WHEN 1=1
AND EDI_STND_STS_CD IN  ('VCL') 
-- VL 이전에만 VCL을 전송한다.
AND EXISTS (SELECT 'X' FROM SCE_COP_DTL D WHERE COP_NO_TMP = D.COP_NO AND D.COP_DTL_SEQ < 4000 AND D.ACT_STS_CD = 'C') 
THEN INTO SCE_EDI_HIS (EDI_RCV_DT, EDI_RCV_SEQ, EDI_STND_STS_CD, CUST_EDI_STS_CD, ACT_STS_MAPG_CD, COP_ACT_CD, BKG_NO, BL_NO, CNTR_NO, COP_NO, COP_DTL_SEQ, COST_ACT_GRP_SEQ , CRNT_VSL_CD, CRNT_SKD_VOY_NO , CRNT_SKD_DIR_CD, EDI_EVNT_DT, EVNT_YD_CD, CLPT_IND_SEQ, SRC_MDL_ID, EDI_IF_STS_CD, IF_RMK, EDI_CUST_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT)
VALUES (EDI_RCV_DT, SCE_EDI_HIS_SEQ.NEXTVAL, EDI_STND_STS_CD, CUST_EDI_STS_CD, ACT_STS_MAPG_CD, COP_ACT_CD, BKG_NO, BL_NO, CNTR_NO, COP_NO_TMP, COP_DTL_SEQ, COST_ACT_GRP_SEQ , CRNT_VSL_CD, CRNT_SKD_VOY_NO , CRNT_SKD_DIR_CD, EDI_EVNT_DT, EVNT_YD_CD, CLPT_IND_SEQ, SRC_MDL_ID, EDI_IF_STS_CD, IF_RMK, EDI_CUST_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT)

WHEN 1=1
AND EDI_STND_STS_CD IN  ('VBE')
-- VL 이후에만 VBE를 전송한다.
AND EXISTS (SELECT 'X' FROM SCE_COP_DTL D WHERE COP_NO_TMP = D.COP_NO AND D.COP_DTL_SEQ BETWEEN 4000 AND 6000 AND D.ACT_STS_CD = 'C')
THEN INTO SCE_EDI_HIS (EDI_RCV_DT, EDI_RCV_SEQ, EDI_STND_STS_CD, CUST_EDI_STS_CD, ACT_STS_MAPG_CD, COP_ACT_CD, BKG_NO, BL_NO, CNTR_NO, COP_NO, COP_DTL_SEQ, COST_ACT_GRP_SEQ , CRNT_VSL_CD, CRNT_SKD_VOY_NO , CRNT_SKD_DIR_CD, EDI_EVNT_DT, EVNT_YD_CD, CLPT_IND_SEQ, SRC_MDL_ID, EDI_IF_STS_CD, IF_RMK, EDI_CUST_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT)
VALUES (EDI_RCV_DT, SCE_EDI_HIS_SEQ.NEXTVAL, EDI_STND_STS_CD, CUST_EDI_STS_CD, ACT_STS_MAPG_CD, COP_ACT_CD, BKG_NO, BL_NO, CNTR_NO, COP_NO_TMP, COP_DTL_SEQ, COST_ACT_GRP_SEQ , CRNT_VSL_CD, CRNT_SKD_VOY_NO , CRNT_SKD_DIR_CD, EDI_EVNT_DT_ETB, EVNT_YD_CD_ETB, CLPT_IND_SEQ, SRC_MDL_ID, EDI_IF_STS_CD, IF_RMK, EDI_CUST_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT)

WHEN 1=1
AND EDI_STND_STS_CD IN  ('VE')
-- VL 이후에만 VE를 전송한다.
AND EXISTS (SELECT 'X' FROM SCE_COP_DTL D WHERE COP_NO_TMP = D.COP_NO AND D.COP_DTL_SEQ BETWEEN 4000 AND 6000 AND D.ACT_STS_CD = 'C')
THEN INTO SCE_EDI_HIS (EDI_RCV_DT, EDI_RCV_SEQ, EDI_STND_STS_CD, CUST_EDI_STS_CD, ACT_STS_MAPG_CD, COP_ACT_CD, BKG_NO, BL_NO, CNTR_NO, COP_NO, COP_DTL_SEQ, COST_ACT_GRP_SEQ , CRNT_VSL_CD, CRNT_SKD_VOY_NO , CRNT_SKD_DIR_CD, EDI_EVNT_DT, EVNT_YD_CD, CLPT_IND_SEQ, SRC_MDL_ID, EDI_IF_STS_CD, IF_RMK, EDI_CUST_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT)
VALUES (EDI_RCV_DT, SCE_EDI_HIS_SEQ.NEXTVAL, EDI_STND_STS_CD, CUST_EDI_STS_CD, ACT_STS_MAPG_CD, COP_ACT_CD, BKG_NO, BL_NO, CNTR_NO, COP_NO_TMP, COP_DTL_SEQ, COST_ACT_GRP_SEQ , CRNT_VSL_CD, CRNT_SKD_VOY_NO , CRNT_SKD_DIR_CD, EDI_EVNT_DT_ETA, EVNT_YD_CD_ETA, CLPT_IND_SEQ, SRC_MDL_ID, EDI_IF_STS_CD, IF_RMK, EDI_CUST_RMK, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT)     

SELECT 
	 TO_CHAR(SYSDATE,'YYYYMMDD')  EDI_RCV_DT
--	,SCE_EDI_HIS_SEQ.NEXTVAL     EDI_RCV_SEQ 
    ,E.EDI_STND_STS_CD                  
    ,E.CUST_EDI_STS_CD                  
    ,'' AS ACT_STS_MAPG_CD
    ,'' AS COP_ACT_CD
    ,H.BKG_NO AS BKG_NO
    ,H.BKG_NO AS BL_NO
    ,H.CNTR_NO AS CNTR_NO
    ,H.COP_NO AS COP_NO_TMP         
    ,'' AS COP_DTL_SEQ
    ,'' AS COST_ACT_GRP_SEQ    
    ,'' AS CRNT_VSL_CD 
    ,'' AS CRNT_SKD_VOY_NO 
    ,'' AS CRNT_SKD_DIR_CD 
    ,SYSDATE AS EDI_EVNT_DT
    ,S.POD_ETB AS EDI_EVNT_DT_ETB -- ETB 추가
    ,S.POD_ETA AS EDI_EVNT_DT_ETA -- ETA 추가
    ,H.POL_NOD_CD AS EVNT_YD_CD
    ,H.POD_NOD_CD AS EVNT_YD_CD_ETB
    ,H.POD_NOD_CD AS EVNT_YD_CD_ETA
    ,'' AS CLPT_IND_SEQ
    ,'BKG' AS SRC_MDL_ID
    ,'00' AS EDI_IF_STS_CD          /* For running 'Edi315BatchSend' */
    ,T.EDI_GRP_CD AS IF_RMK
    ,T.EDI_GRP_CD AS EDI_CUST_RMK
    ,'BKG_VVD_CHG' AS CRE_USR_ID
    ,SYSDATE AS CRE_DT
    ,'BKG_VVD_CHG' AS UPD_USR_ID
    ,SYSDATE   AS UPD_DT   
    FROM    
            (
                SELECT  /*+ LEADING (BC) USE_NL ( BC EC EG ) +*/    -- /*+ USE_NL ( EC , EG ) +*/
                		DISTINCT BC.BKG_NO,  EC.EDI_GRP_CD
                FROM	EDI_GRP_CUST	EC,
                		EDI_GROUP		EG,
                		BKG_CUSTOMER	BC
                WHERE	1 = 1
                AND     EC.CGO_TRC_BAT_FLG	=	'Y'		/* Target data for Batch */
                AND		EC.CGO_TRC_SVC_FLG	=	'Y'  
                AND     EC.IB_SVC_FLG		=	'N'  
                AND		EC.EDI_GRP_CD		=	EG.EDI_GRP_CD	
                AND     EG.DELT_FLG			<>	'Y'  	
                AND     EC.BKG_CTRT_DIV_CD  IS  NULL
                AND     EC.CUST_CNT_CD      =   BC.CUST_CNT_CD  
                AND     EC.CUST_SEQ         =   BC.CUST_SEQ 
                AND     NVL(EC.BKG_CUST_TP_DESC, BC.BKG_CUST_TP_CD) LIKE '%'||BC.BKG_CUST_TP_CD||'%'
                AND     BC.BKG_NO=@[bkg_no]
                UNION
                
                SELECT  /*+ USE_NL ( EC , EG ) +*/
                		DISTINCT BK.BKG_NO, EC.EDI_GRP_CD  
                FROM	EDI_GRP_CUST	EC,
                		EDI_GROUP		EG,
                		BKG_BOOKING		BK
                WHERE	1 = 1
                AND     EC.CGO_TRC_BAT_FLG	=	'Y'		/* Target data for Batch */
                AND		EC.CGO_TRC_SVC_FLG	=	'Y'  
                AND     EC.IB_SVC_FLG		=	'N'  
                AND		EC.EDI_GRP_CD		=	EG.EDI_GRP_CD	
                AND     EG.DELT_FLG			<>	'Y'  	
                AND     EC.BKG_CTRT_DIV_CD  IS  NOT NULL
                AND     (
                			( EC.BKG_CTRT_DIV_CD = '1' AND ( EC.SC_NO =  BK.SC_NO ) )
                			OR
                			( EC.BKG_CTRT_DIV_CD = '2' AND ( EC.SC_NO =  BK.RFA_NO ) )
                		) 
                AND     BK.BKG_NO=@[bkg_no]	
            )               T,
			(
				SELECT  A.COP_NO,
						MAX(B.VPS_ETB_DT) POD_ETB,
                        MAX(B.VPS_ETA_DT) POD_ETA
                FROM    SCE_COP_HDR HD,
                        SCE_COP_DTL A,
                        VSK_VSL_PORT_SKD B
                WHERE   1 = 1
                        AND HD.BKG_NO=@[bkg_no]
                        AND HD.COP_NO = A.COP_NO
                        AND A.STND_EDI_STS_CD = 'UVD'
                        AND A.VSL_CD = B.VSL_CD
                        AND A.SKD_VOY_NO = B.SKD_VOY_NO
                        AND A.SKD_DIR_CD = B.SKD_DIR_CD
                        AND A.VPS_PORT_CD = B.VPS_PORT_CD
                        AND A.CLPT_IND_SEQ = B.CLPT_IND_SEQ
                GROUP BY A.COP_NO
			)				S,
            BKG_BOOKING     B,
            SCE_COP_HDR     H,
            EDI_GRP_CGO     E
    WHERE   1   =   1
    AND     B.BKG_NO       =   T.BKG_NO
    AND     B.BKG_NO       =   H.BKG_NO
    AND     S.COP_NO 	   =   H.COP_NO
    AND     H.COP_STS_CD   <> 'X'
    AND     H.CNTR_NO      <> 'SMCU0000000'
    AND     T.EDI_GRP_CD   =   E.EDI_GRP_CD
--  AND     E.EDI_SND_FLG  =   'Y'			]]></sql>
			<params>
				<param name="bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
