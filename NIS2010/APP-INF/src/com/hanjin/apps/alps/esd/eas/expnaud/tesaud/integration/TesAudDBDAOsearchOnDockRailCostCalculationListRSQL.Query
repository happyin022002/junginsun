<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesAudDBDAOsearchOnDockRailCostCalculationListRSQL">
			<desc><![CDATA[searchOnDockRailCostCalculationList]]></desc>
			<sql><![CDATA[
SELECT	
		RHQ,
		INV_OFC_CD,
		COST_OFC_CD,
		YD_CD,
		VNDR_SEQ,
		VNDR_LGL_ENG_NM,
		INV_NO,
		CRE_USR_NM,
		CALC_TP_CD,
		LGS_COST_CD,
		CNTR_TPSZ_CD,
		TML_WRK_DY_CD,
		DCGO_IND_CD,
		CALC_VOL_QTY,
		RVIS_VOL_QTY,
		VOL_TR_UT_CD,
		CTRT_RT,
		CURR_CD,
		INV_XCH_RT,
		INV_AMT,
		CALC_RMK,
		N3PTY_FLG,
		ROW_COUNT
FROM	(
    SELECT	DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMUR', 'E', 'HAMUR', 'M', 'NYCNA', 'A', O.AR_HD_QTR_OFC_CD)) AS RHQ 
    		, TES.INV_OFC_CD
    		, TES.COST_OFC_CD
    		, TES.YD_CD			-- YARD
    		, TES.VNDR_SEQ			-- S/P
    		, V.VNDR_LGL_ENG_NM		-- S/P NAME
    		, TES.INV_NO
			, TES.CRE_USR_NM		
    		, DECODE(TES.CALC_TP_CD, 'A', 'Auto Input', 'S', 'Semi-updated', 'Manual Input') AS CALC_TP_CD	-- Calculated Type
    		, TES.LGS_COST_CD			-- Cost Code
    		, TES.CNTR_TPSZ_CD			-- Type/Size
    		, TES.TML_WRK_DY_CD			-- Applied Date
    		, TES.DCGO_IND_CD			-- DG
    		, TES.CALC_VOL_QTY			-- CAlculated Vol.
    		, TES.RVIS_VOL_QTY			-- Revised Vol.
    		, TES.VOL_TR_UT_CD			-- UOM
    		, TES.CTRT_RT				-- Rate
    		, TES.CURR_CD				-- AGMT Curr.
    		, TES.INV_XCH_RT			-- Exch Rate
    		, TES.INV_AMT				-- Amount(USD)
    		, TES.CALC_RMK				-- Remark
    		, TES.N3PTY_FLG				-- 3rd Party
    		,ROW_NUMBER() OVER (ORDER BY TES.INV_NO ASC) AS ROW_NUM
		    ,COUNT(TES.INV_NO) OVER() AS ROW_COUNT
    FROM	(				
    		SELECT	 H.INV_OFC_CD
    				, H.COST_OFC_CD
    				, H.YD_CD
    				, H.VNDR_SEQ
    				, H.INV_NO	  
    				, D.TML_SO_OFC_CTY_CD
    				, D.TML_SO_SEQ
    				, D.TML_SO_DTL_SEQ
    				, D.CALC_COST_GRP_CD
    				, DECODE(D.CALC_TP_CD, 'A', D.CALC_TP_CD, (DECODE(D.SEMI_AUTO_CALC_FLG, 'Y','S', D.CALC_TP_CD))) AS CALC_TP_CD
    				, D.VSL_CD
    				, D.SKD_VOY_NO
    				, D.SKD_DIR_CD 
    				, D.VSL_CD||SKD_VOY_NO||SKD_DIR_CD AS VVD_NO
    				, D.FINC_VSL_CD
    				, D.FINC_SKD_VOY_NO
    				, D.FINC_SKD_DIR_CD
    				, D.IOC_CD
    				, D.LANE_CD
    				, D.IO_BND_CD
    				, D.LGS_COST_CD
    				, D.LGS_COST_CD AS LGS_COST_CD2
    				, D.ACCT_CD
    				, TO_CHAR(ATB_DT,'YYYYMMDD') AS ATB_DT
    				, D.CNTR_NO
    				, D.CNTR_TPSZ_CD
    				, D.CNTR_TPSZ_CD AS CNTR_TPSZ_CD2
    				, D.CALC_VOL_QTY
    				, D.FM_TR_VOL_VAL
    				, D.TO_TR_VOL_VAL
    				, D.RVIS_VOL_QTY
    				, D.DCGO_IND_CD
    				, D.STAY_DYS
    				, D.FREE_DYS
    				, D.OVR_DYS
    				, D.FP_CALC_PRD_CD
    				, D.WRK_DT
    				, D.TML_WRK_DY_CD
    				, D.STK_VOL_QTY
    				, D.FP_TEU_QTY
    				, D.INV_VOL_QTY
    				, D.DIFF_VOL_QTY
    				, D.OVR_VOL_QTY
    				, D.VOL_TR_UT_CD
    				, D.CTRT_RT
    				, LPAD(REF_VNDR_SEQ,6,'0') AS REF_VNDR_SEQ
    				, D.CALC_AMT
    				, D.INV_AMT
    				, D.TML_CRR_CD
    				, D.CALC_RMK
    				, D.CURR_CD
    				, D.INV_XCH_RT
    				, D.N3PTY_FLG
    				, D.TML_AGMT_OFC_CTY_CD
    				, D.TML_AGMT_SEQ
    				, D.TML_AGMT_VER_NO
					, (SELECT USR_NM FROM COM_USER WHERE USR_ID = H.CRE_USR_ID) CRE_USR_NM
    		FROM	TES_TML_SO_HDR H
    				, TES_TML_SO_DTL D
					, AP_INV_HDR A
					, COM_APRO_CSR_DTL C
					, COM_APRO_RQST_HDR R
    		WHERE	1	= 1
    		AND		H.TML_SO_OFC_CTY_CD	= D.TML_SO_OFC_CTY_CD
    		AND		H.TML_SO_SEQ		= D.TML_SO_SEQ
    		AND		H.TML_INV_TP_CD		= 'ON'
    --		--// 1. Invoice Date
		--// CHM-201642099 TES Intensive Audit 검색 조건 code 추가 (2016-06-16)
			AND		H.CSR_NO			= A.CSR_NO(+)
			AND		H.CSR_NO			= C.CSR_NO(+)
			AND		C.APRO_RQST_NO		= R.APRO_RQST_NO(+)
			#if (${inv_date_type} == 'I') 	-- ISSUED DATE
			AND		H.ISS_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'R')	-- RECEIVED DATE
			AND		H.RCV_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'P')	-- INVOICE UPDATE DATE
			AND		H.LOCL_UPD_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'A')	-- ARRROVAL REQUESTED DATE
			AND		( (R.RQST_ST_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999 )
			OR		( A.CSR_APRO_STEP_ASGN_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999 ) )
			#elseif (${inv_date_type} == 'C')	-- CONFIRMED DATE
			AND		H.INV_CFM_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'U')	-- I/F STATUS UPDATED
			AND		A.IF_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999
			#end
    
         --		--// 2. YARD CODE
    		#if ( ${yd_cd} != '' ) 
    		AND		H.YD_CD		 = @[yd_cd]
    		#end
          
          --		--// 3. S/P CODE
    		#if ( ${vndr_seq} != '' ) 
    		AND		H.VNDR_SEQ		 = @[vndr_seq] 	
    		#end
          
          --		--// 6. Cost Office
    		#if ( ${cost_ofc_cd} != '' )
    		AND		H.COST_OFC_CD	= @[cost_ofc_cd] 
    		#end
          
          --		--// 7. Invoice Office
    		#if ( ${inv_ofc_cd} != '' )
    		AND		H.INV_OFC_CD	= @[inv_ofc_cd]
    		#end
          
    	  --		--// 7. Invoice No
    		#if ( ${inv_no} != '' )
    		AND		H.INV_NO	= @[inv_no]
    		#end
    
          --		--// 8. Inv Status
    		#if ( ${tml_inv_sts_cd} != '' )
    		AND		H.TML_INV_STS_CD = @[tml_inv_sts_cd]
    		#end
         --		--// 4. Manual Input Only
    		#if ( ${manual_check} != '' ) 
    		AND		D.CALC_TP_CD = 'M'
    		#end
    		) TES
    		, MDM_ORGANIZATION O
    		, MDM_LOCATION L
    		, MDM_VENDOR V
    WHERE	1	= 1
    AND		TES.INV_OFC_CD	= O.OFC_CD(+)
    AND		O.LOC_CD     	= L.LOC_CD(+)
    AND		TES.VNDR_SEQ	= V.VNDR_SEQ(+)
    ORDER BY DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMUR', 'E', 'HAMUR', 'M', 'NYCNA', 'A', O.AR_HD_QTR_OFC_CD))
    		, INV_OFC_CD, COST_OFC_CD, YD_CD, VNDR_SEQ, INV_NO
	)
WHERE    ROW_NUM >= (@[pagerows] * (@[page_no] - 1) + 1)
AND    ROW_NUM <= (@[pagerows] * @[page_no])			]]></sql>
			<params>
				<param name="fm_prd_dt" type="12" value="S" out="N"/>
				<param name="to_prd_dt" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="cost_ofc_cd" type="12" value="" out="N"/>
				<param name="inv_ofc_cd" type="12" value="" out="N"/>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="tml_inv_sts_cd" type="12" value="" out="N"/>
				<param name="pagerows" type="12" value="" out="N"/>
				<param name="page_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
