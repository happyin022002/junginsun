<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="Edi315SendDBDAOSearchCOPInfoPolDtRSQL">
			<desc><![CDATA[SearchCOPInfoPolDt]]></desc>
			<sql><![CDATA[
SELECT 
      TO_CHAR(E_T1, 'YYYYMMDDHH24MI') POL_ETA,
      DECODE(NOD, NULL, '', DECODE(E_T1, NULL, '', TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC(NOD, E_T1, 'GMT'), 'YYYYMMDDHH24MI'))) POL_ETA_GMT ,
      TO_CHAR(A_T1, 'YYYYMMDDHH24MI') POL_ATA,
      DECODE(NOD, NULL, '', DECODE(A_T1, NULL, '', TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC(NOD, A_T1, 'GMT'), 'YYYYMMDDHH24MI'))) POL_ATA_GMT ,
      TO_CHAR(E_T2, 'YYYYMMDDHH24MI') POL_ETD,
      DECODE(NOD, NULL, '', DECODE(E_T2, NULL, '', TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC(NOD, E_T2, 'GMT'), 'YYYYMMDDHH24MI'))) POL_ETD_GMT ,
      TO_CHAR(A_T2, 'YYYYMMDDHH24MI') POL_ATD,
      DECODE(NOD, NULL, '', DECODE(A_T2, NULL, '', TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC(NOD, A_T2, 'GMT'), 'YYYYMMDDHH24MI'))) POL_ATD_GMT
    FROM (
        SELECT A.BEF_ESTM_DT E_T1 ,
          CASE WHEN A.BEF_ACT_DT IS NULL
          AND A.BEF_COP_STS = 'F' THEN A.BEF_ESTM_DT ELSE A.BEF_ACT_DT END A_T1 ,
          A.AFT_ESTM_DT E_T2 ,
          CASE WHEN A.AFT_ACT_CD IS NULL
          AND A.AFT_COP_STS = 'F' THEN A.AFT_ESTM_DT ELSE A.AFT_ACT_CD END A_T2 ,
          NVL(A.BEF_NOD_CD, A.AFT_NOD_CD) AS NOD --CFS Term 경우에 GMT로 변환기준이 되는Node 를 aft_nod_cd 로 찾음
        FROM (
            SELECT BEF_ESTM_DT,
              BEF_ACT_DT,
              BEF_NOD_CD,
              BEF_COP_STS,
              AFT_ESTM_DT,
              AFT_ACT_CD,
              AFT_NOD_CD,
              AFT_COP_STS
            FROM (
                SELECT STND_EDI_STS_CD,
                  D.ESTM_DT ,
                  LAG(D.ESTM_DT, 1) --  POL TEMINAL ARRIVAL 
                  OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) BEF_ESTM_DT ,
                  LAG(D.ACT_DT, 1) OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) BEF_ACT_DT ,
                  LAG(SUBSTR(D.NOD_CD, 1, 5), 1) OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) BEF_NOD_CD ,
                  LAG(D.ACT_STS_CD, 1) OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) BEF_COP_STS ,
                  LEAD(D.ESTM_DT, 1) -- POL VESSLE DEPARTURE 
                  OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) AFT_ESTM_DT ,
                  LEAD(D.ACT_DT, 1) OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) AFT_ACT_CD ,
                  LEAD(SUBSTR(D.NOD_CD, 1, 5), 1) OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) AFT_NOD_CD ,
                  LEAD(D.ACT_STS_CD, 1) OVER (PARTITION BY D.COP_NO
                    ORDER BY D.COP_NO, D.COP_DTL_SEQ) AFT_COP_STS
                FROM SCE_COP_DTL D
                WHERE 1=1
                AND D.COP_NO = @[e_cop_no] 
                )
            WHERE STND_EDI_STS_CD = 'AEL' ) A )			]]></sql>
			<params>
				<param name="e_cop_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
