<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TrsAdvanceAuditDBDAOsearchTrsPreAudDtListRSQL">
			<desc><![CDATA[searchTrsPreAudDtList 조회]]></desc>
			<sql><![CDATA[
SELECT RHQ_OFC_CD    
          ,WO_OFC_CD    
          ,INV_OFC_CD    
          ,BKG_NO        
          ,EQ_NO        
          ,WO_NO        
          ,SO_NO        
          ,BKG_RCVDE_TERM_CD        
          ,CURR_CD        
          ,WO_AMT        
          ,INV_AMT        
          ,CURR_CNG_FLG        
          ,INV_DIFF_AMT_FLG        
          ,INV_DIFF_AMT
          ,ROUND((INV_DIFF_AMT/(DECODE(WO_AMT, 0, 1, WO_AMT))) * 100, 3) INV_DIFF_PCT
          ,NVL(NO_AGMT_FLG, 'Y') AS NO_AGMT_FLG
          ,NVL(NO_OPTM_ROUT_FLG, 'Y') AS NO_OPTM_ROUT_FLG    
          ,EXCEED_AVG_FLG
          ,NVL(EXCEED_AVG_DIFF_AMT, 0) AS EXCEED_AVG_DIFF_AMT
          ,EAC_IF_FLG        
          ,TRSP_SO_TP_CD        
          ,INV_VNDR_SEQ        
          ,INV_NO        
          ,CGO_TP_CD        
          ,TRSP_CRR_MOD_CD        
          ,TRSP_COST_DTL_MOD_CD        
          ,TRSP_BND_CD        
          ,INV_CFM_DT        
          ,AUD_STS_FLG        
          ,TO_CHAR(WO_ISS_DT, 'YYYYMMDD') WO_ISS_DT        
          ,TO_CHAR(ADD_MONTHS(WO_ISS_DT,-1), 'YYYYMM') WO_ISS_PRE_MON
          ,AUTO_AUD_STS_CD
          ,FM_NOD_CD
          ,TO_NOD_CD
          ,VIA_NOD_CD
          ,DOR_NOD_CD
          ,EQ_TPSZ_CD
          ,INV_DIFF_RTO
          ,EXCEED_AVG_RTO
          ,TRSP_SO_OFC_CTY_CD
          ,TRSP_SO_SEQ
          ,NEGO_AMT
          ,NEGO_RMK
          ,ETC_SCG_NM
          ,ETC_SCG_AMT
          ,OTR_RMK
          ,INV_ETC_SCG_NM
          ,INV_ETC_SCG_AMT
          ,INV_OTR_RMK
          ,TO_CHAR(LOCL_CRE_DT,'YYYY-MM-DD') LOCL_CRE_DT
      FROM (
            SELECT AA.RHQ_OFC_CD        
                  ,AA.WO_OFC_CD        
                  ,AA.INV_OFC_CD        
                  ,AA.BKG_NO        
                  ,AA.EQ_NO        
                  ,AA.EQ_TPSZ_CD        
                  ,AA.TRSP_WO_OFC_CTY_CD || AA.TRSP_WO_SEQ AS WO_NO        
                  ,AA.TRSP_SO_OFC_CTY_CD || AA.TRSP_SO_SEQ AS SO_NO        
                  ,AA.BKG_RCVDE_TERM_CD        
                  ,AA.CURR_CD
                  ,AA.WO_AMT
                  ,AA.INV_AMT
                  ,AA.CURR_CNG_FLG
                  ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'
                         WHEN AA.INV_DIFF_AMT < -1 THEN 'F'
                         WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' 
                     END) INV_DIFF_AMT_FLG        
                  ,AA.INV_DIFF_AMT
                  ,AA.NO_AGMT_FLG
                  ,AA.NO_OPTM_ROUT_FLG        
                  ,CASE WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)        
                                                                                                                                                    ,AA.CURR_CD        
                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)        
                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')        
                                                                                                                                                    )        
                                                            ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))        
                                                       END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100
                        THEN 'Y'        
                   END EXCEED_AVG_FLG
                  ,NVL(AA.WO_AMT,0) - NVL((CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)        
                                                                                                                                                    ,AA.CURR_CD        
                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)        
                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')        
                                                                                                                                                    )        
                                                ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))        
                                           END),0) EXCEED_AVG_DIFF_AMT
                  ,LEAST((CASE WHEN AA.NO_AGMT_FLG = 'N' THEN 'C'
                               ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.)
                          END)
                        ,(CASE WHEN AA.NO_OPTM_ROUT_FLG = 'N' THEN 'F'
                               ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.)
                          END)
                        ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'
                               WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'
                                                                                                                                        ELSE 'F'
                                                                                                                                   END
                               WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'
                               ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우
                          END)
                        ,(CASE WHEN AA.EXCEED_AVG_RTO >= (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)
                                                                                                                                                    ,AA.CURR_CD    
                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    
                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    
                                                                                                                                                    )    
                                                                    ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    
                                                               END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'S'
                               WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)
                                                                                                                                                    ,AA.CURR_CD    
                                                                                                                                                    ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    
                                                                                                                                                    ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    
                                                                                                                                                    )    
                                                                   ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    
                                                              END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'F'
                               ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우
                         END)
                   ) AS AUTO_AUD_STS_CD
                  ,(SELECT 'Y'        
                     FROM EAS_TRSP_AUD_CHK X        
                    WHERE X.INV_NO        = AA.INV_NO        
                      AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ        
                      AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD        
                      AND X.TRSP_SO_OFC_CTY_CD = AA.TRSP_SO_OFC_CTY_CD        
                      AND X.TRSP_SO_SEQ = AA.TRSP_SO_SEQ        
                   ) EAC_IF_FLG                    
                  ,AA.TRSP_SO_TP_CD        
                  ,AA.INV_VNDR_SEQ        
                  ,AA.INV_NO        
                  ,AA.CGO_TP_CD        
                  ,AA.TRSP_CRR_MOD_CD        
                  ,AA.TRSP_COST_DTL_MOD_CD        
                  ,AA.TRSP_BND_CD        
                  ,AA.INV_CFM_DT        
                  ,AA.WO_ISS_DT        
                  ,AA.FM_NOD_CD        
                  ,AA.TO_NOD_CD        
                  ,AA.VIA_NOD_CD        
                  ,AA.DOR_NOD_CD                      
                  ,DECODE(BB.EXPN_AUD_STS_CD, NULL, NULL, 'Y') AUD_STS_FLG -- 심사내역이 있을 경우만 EAC I/F가 가능하다.    
                  ,AA.INV_DIFF_RTO
                  ,AA.EXCEED_AVG_RTO
                  ,AA.TRSP_SO_OFC_CTY_CD
                  ,AA.TRSP_SO_SEQ
                  ,AA.NEGO_AMT
                  ,AA.NEGO_RMK
                  ,BKG_GET_TOKEN_FNC(AA.SCG_INFO,1) ETC_SCG_NM
                  ,BKG_GET_TOKEN_FNC(AA.SCG_INFO,2) ETC_SCG_AMT
                  ,BKG_GET_TOKEN_FNC(AA.SCG_INFO,3) OTR_RMK
                  ,BKG_GET_TOKEN_FNC(AA.INV_SCG_INFO,1) INV_ETC_SCG_NM
                  ,BKG_GET_TOKEN_FNC(AA.INV_SCG_INFO,2) INV_ETC_SCG_AMT
                  ,BKG_GET_TOKEN_FNC(AA.INV_SCG_INFO,3) INV_OTR_RMK
                  ,AA.LOCL_CRE_DT
              FROM (
                    SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */        
                           (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD        
                          ,I.CRE_OFC_CD AS INV_OFC_CD        
                          ,W.CRE_OFC_CD AS WO_OFC_CD        
                          ,S.TRSP_SO_TP_CD        
                          ,CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_VNDR_SEQ        
                                ELSE I.INV_VNDR_SEQ        
                           END INV_VNDR_SEQ        
                          ,CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_NO        
                                ELSE I.INV_NO        
                           END INV_NO        
                          ,I.CSR_NO        
                          ,S.CURR_CD        
                          ,S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(S.SCG_VAT_AMT,0) + NVL(S.TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0) AS WO_AMT        
                          ,S.INV_CURR_CD
                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD        
                                                                                                           ,S.CURR_CD        
                                                                                                           ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)        
                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')        
                                                                                                           )        
                                 ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)        
                            END) AS INV_AMT        
                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG        
                          ,CASE WHEN L.HJL_NO IS NOT NULL THEN 'ETS'        
                                ELSE (SELECT X.USR_NM FROM COM_USER X WHERE X.USR_ID = I.CRE_USR_ID)        
                           END INV_ISS_USR_NM        
                          ,(SELECT CASE WHEN X.GEN_PAY_TERM_CD = 'O60' THEN '0'        
                                        ELSE X.GEN_PAY_TERM_CD        
                                   END PAY_TERM_CD        
                              FROM MDM_VENDOR X        
                             WHERE X.VNDR_SEQ = CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_VNDR_SEQ        
                                                     ELSE I.INV_VNDR_SEQ        
                                                END        
                           ) PAY_TERM_CD        
                          ,TO_CHAR(I.PAY_DT, 'YYYY-MM-DD') PAY_DT        
                          ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') INV_TERM_DT        
                          ,(CASE WHEN ((S.TRSP_AGMT_OFC_CTY_CD IS NULL) AND (SELECT X.TRSP_AGMT_OFC_CTY_CD
                                                                              FROM TRS_TRSP_SVC_ORD X
                                                                             WHERE X.TRSP_SO_OFC_CTY_CD = SUBSTR(S.MCNTR_BDL_GRP_SEQ, 1,3)
                                                                               AND X.TRSP_SO_SEQ = SUBSTR(S.MCNTR_BDL_GRP_SEQ,4)) IS NULL)
                                 THEN 'N'
                            END) NO_AGMT_FLG
                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    
                                                                                                           ,S.CURR_CD    
                                                                                                           ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    
                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    
                                                                                                           )    
                                 ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    
                            END)
                            - (S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(S.SCG_VAT_AMT,0) + NVL(S.TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0)) AS INV_DIFF_AMT
                          ,CASE WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD        
                                                        FROM MDM_ORGANIZATION X        
                                                       WHERE X.DELT_FLG = 'N'        
                                                     CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD        
                                                       START WITH X.OFC_CD IN ('HAMRU', 'SHARC', 'SINRS'))        
                                     AND S.TRSP_SO_TP_CD = 'Y'        
                                     AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')        
                                     AND S.TRSP_BND_CD IN ('I','O')        
                                     AND S.SO_DSCR_RSN_CD <> 'M'        
                                THEN 'N'        
                                WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD        
                                                        FROM MDM_ORGANIZATION X        
                                                       WHERE X.DELT_FLG = 'N'        
                                                     CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD        
                                                       START WITH X.OFC_CD IN ('NYCRAG', 'NYCNOG', 'NYCRAO', 'NYCRAX', 'NYCNKG', 'SAOLA'))        
                                     AND (SELECT X.SO_DSCR_RSN_CD FROM TRS_TRSP_OPTM_USA_ROUT X WHERE X.BKG_NO = S.BKG_NO AND ROWNUM = 1) <> 'M'        
                                     AND S.TRSP_SO_TP_CD = 'Y'        
                                     AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')        
                                     AND S.TRSP_BND_CD IN ('I','O')        
                                     AND TRSP_CRR_MOD_CD NOT IN ('WD')        
                                THEN 'N'        
                           END NO_OPTM_ROUT_FLG        
                          ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio        
                                  FROM EAS_TRSP_AUTO_AUD_CRTE X        
                                 WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD         
                                   AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        
                                   AND X.CGO_TP_CD        = S.CGO_TP_CD        
                                   AND X.EXPN_AUD_TGT_FLG = 'Y'        
                                   AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO        
                                                                        FROM EAS_TRSP_AUTO_AUD_CRTE X        
                                                                       WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)        
                                                                         AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        
                                                                         AND X.CGO_TP_CD        = S.CGO_TP_CD        
                                                                         AND X.EXPN_AUD_TGT_FLG = 'Y'        
                                                                         AND X.EXPN_AUD_CRTE_TP_CD = 'D')        
                           ) AS INV_DIFF_RTO        
                          ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- Exceed Average Ratio        
                                  FROM EAS_TRSP_AUTO_AUD_CRTE X        
                                 WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD         
                                   AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        
                                   AND X.CGO_TP_CD        = S.CGO_TP_CD        
                                   AND X.EXPN_AUD_TGT_FLG = 'Y'        
                                   AND X.EXPN_AUD_CRTE_TP_CD = 'A'), (SELECT X.EXPN_MAX_PRMT_RTO        
                                                                        FROM EAS_TRSP_AUTO_AUD_CRTE X        
                                                                       WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)        
                                                                         AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD        
                                                                         AND X.CGO_TP_CD        = S.CGO_TP_CD        
                                                                         AND X.EXPN_AUD_TGT_FLG = 'Y'        
                                                                         AND X.EXPN_AUD_CRTE_TP_CD = 'A')        
                           ) AS EXCEED_AVG_RTO        
                          ,(SELECT (CASE WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))        
                                         THEN WO_20FT_DRY_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))        
                                         THEN WO_40FT_DRY_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('6', '7') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))        
                                         THEN WO_45FT_DRY_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'        
                                         THEN WO_20FT_RF_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'        
                                         THEN WO_40FT_RF_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'        
                                         THEN WO_20FT_DG_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'        
                                         THEN WO_40FT_DG_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'        
                                         THEN WO_20FT_AWK_AVG_AMT        
                                         WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'        
                                         THEN WO_40FT_AWK_AVG_AMT        
                                    END)||','|| X.WO_CURR_CD        
                              FROM EAS_EXPN_AUD_CS_INLND_COST X        
                             WHERE X.INLND_COST_YRMON = TO_CHAR(ADD_MONTHS(W.LOCL_CRE_DT,-1), 'YYYYMM')    
                               AND X.WO_OFC_CD        = W.CRE_OFC_CD        
                               AND X.TRSP_SO_TP_CD    = S.TRSP_SO_TP_CD        
                               AND TRSP_COST_DTL_MOD_CD = S.TRSP_COST_DTL_MOD_CD        
                               AND X.TRSP_CRR_MOD_CD    = S.TRSP_CRR_MOD_CD         
                               AND X.CGO_TP_CD          = S.CGO_TP_CD        
                               AND X.FM_NOD_CD          = S.FM_NOD_CD        
                               AND NVL(X.VIA_NOD_CD,'X')= NVL(S.VIA_NOD_CD,'X')        
                               AND X.TO_NOD_CD          = S.TO_NOD_CD        
                               AND NVL(X.DOR_NOD_CD,'X')= NVL(S.DOR_NOD_CD,'X')        
                               AND NVL(X.TRSP_BND_CD,'X')= NVL(S.TRSP_BND_CD,'X')        
                               AND ROWNUM = 1        
                           ) AVG_3MON_RT_INFO        
                          ,W.LOCL_CRE_DT AS WO_ISS_DT        
                          ,S.CGO_TP_CD        
                          ,S.TRSP_CRR_MOD_CD        
                          ,S.TRSP_COST_DTL_MOD_CD        
                          ,S.TRSP_SO_OFC_CTY_CD        
                          ,S.TRSP_SO_SEQ        
                          ,S.TRSP_WO_OFC_CTY_CD        
                          ,S.TRSP_WO_SEQ        
                          ,S.BKG_RCVDE_TERM_CD        
                          ,S.EQ_NO        
                          ,S.EQ_TPSZ_CD        
                          ,S.BKG_NO        
                          ,S.TRSP_BND_CD        
                          ,TO_CHAR(I.INV_CFM_DT, 'YYYYMMDD') INV_CFM_DT        
                          ,S.FM_NOD_CD        
                          ,S.TO_NOD_CD        
                          ,S.VIA_NOD_CD        
                          ,S.DOR_NOD_CD
                          ,S.NEGO_AMT
                          ,S.NEGO_RMK
                          ,(SELECT CASE WHEN MIN(X.LGS_COST_CD) <> MAX(X.LGS_COST_CD) THEN 'Multi-Reason'||','||SUM(X.SCG_AMT)
                                         ELSE MAX(Y.LGS_COST_FULL_NM||','||X.SCG_AMT||','||OTR_RMK)
                                   END XXX
                              FROM TRS_TRSP_SCG_DTL X
                                  ,TES_LGS_COST     Y
                             WHERE X.LGS_COST_CD = Y.LGS_COST_CD
                               AND X.TRSP_SO_OFC_CTY_CD = S.TRSP_SO_OFC_CTY_CD
                               AND X.TRSP_SO_SEQ = S.TRSP_SO_SEQ
                               AND (Y.LGS_COST_CD NOT IN ('SCHLOP', 'SCHLCF') AND SUBSTR(Y.LGS_COST_CD, 3,2) <> 'FU')
                               AND X.SCG_AMT > 0
                            ) SCG_INFO
                          ,(SELECT CASE WHEN MIN(X.LGS_COST_CD) <> MAX(X.LGS_COST_CD) THEN 'Multi-Reason'||','||SUM(X.INV_SCG_AMT)
                                         ELSE MAX(Y.LGS_COST_FULL_NM||','||X.INV_SCG_AMT||','||INV_OTR_RMK)
                                   END XXX
                              FROM TRS_TRSP_SCG_DTL X
                                  ,TES_LGS_COST     Y
                             WHERE X.LGS_COST_CD = Y.LGS_COST_CD
                               AND X.TRSP_SO_OFC_CTY_CD = S.TRSP_SO_OFC_CTY_CD
                               AND X.TRSP_SO_SEQ = S.TRSP_SO_SEQ
                               AND (Y.LGS_COST_CD NOT IN ('SCHLOP', 'SCHLCF') AND SUBSTR(Y.LGS_COST_CD, 3,2) <> 'FU')
                               AND X.INV_SCG_AMT > 0
                            ) INV_SCG_INFO
                          ,S.LOCL_CRE_DT
                      FROM TRS_TRSP_INV_WRK I        
                          ,TRS_TRSP_SVC_ORD S        
                          ,TRS_TRSP_WRK_ORD W        
                          ,TRS_TRSP_HJL_SVC_ORD L        
                          ,AP_INV_HDR A        
                     WHERE I.INV_NO       = S.INV_NO        
                       AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ        
                       AND S.TRSP_WO_OFC_CTY_CD = W.TRSP_WO_OFC_CTY_CD        
                       AND S.TRSP_WO_SEQ        = W.TRSP_WO_SEQ        
                       AND S.TRSP_SO_OFC_CTY_CD = L.TRSP_SO_OFC_CTY_CD(+)        
                       AND S.TRSP_SO_SEQ        = L.TRSP_SO_SEQ(+)        
                       AND I.CSR_NO             = A.CSR_NO(+)        
                       AND S.DELT_FLG = 'N'        
                       AND S.TRSP_SO_STS_CD = 'I'        
                       AND S.TRSP_SO_TP_CD IN ('Y', 'M')        
                               
                       -- Service Order Type으로 조회        
                       AND S.TRSP_SO_TP_CD = @[s_trsp_so_tp_cd]
                               
                       AND I.INV_VNDR_SEQ = @[s_inv_vndr_seq]
                       AND I.INV_NO = @[s_inv_no]

                       -- Cost Mode로 조회        
                       #if(${s_trsp_cost_dtl_mod_cd} != '')
                       AND EXISTS (SELECT 1        
                                     FROM TRS_TRSP_SVC_ORD X        
                                    WHERE X.INV_NO       = S.INV_NO        
                                      AND X.INV_VNDR_SEQ = S.INV_VNDR_SEQ        
                                      AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD        
                                      AND X.TRSP_COST_DTL_MOD_CD = @[s_trsp_cost_dtl_mod_cd]
                                  )        
                       #end
                       -- Trans Mode로 조회        
                       #if(${s_trsp_crr_mod_cd} != '')
                       AND EXISTS (SELECT 1        
                                     FROM TRS_TRSP_SVC_ORD X        
                                    WHERE X.INV_NO       = S.INV_NO        
                                      AND X.INV_VNDR_SEQ = S.INV_VNDR_SEQ        
                                      AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD        
                                      AND X.TRSP_CRR_MOD_CD = @[s_trsp_crr_mod_cd]
                                  )
                       #end        
            
                   ) AA        
                  ,EAS_TRSP_AUD BB        
             WHERE 1=1        
               AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)        
               AND AA.INV_NO        = BB.INV_NO(+)        
               AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)        
            
            -- Rail
            UNION ALL
            SELECT AA.RHQ_OFC_CD        
                  ,AA.WO_OFC_CD        
                  ,AA.INV_OFC_CD        
                  ,AA.BKG_NO        
                  ,AA.EQ_NO        
                  ,AA.EQ_TPSZ_CD        
                  ,NULL AS WO_NO        
                  ,AA.TRSP_SO_OFC_CTY_CD || AA.TRSP_SO_SEQ AS SO_NO        
                  ,AA.BKG_RCVDE_TERM_CD        
                  ,AA.CURR_CD        
                  ,AA.WO_AMT        
                  ,AA.INV_AMT        
                  ,AA.CURR_CNG_FLG        
                  ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'
                         WHEN AA.INV_DIFF_AMT < -1 THEN 'F'
                         WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' 
                     END) INV_DIFF_AMT_FLG        
                  ,AA.INV_DIFF_AMT        
                  ,AA.NO_AGMT_FLG        
                  ,AA.NO_OPTM_ROUT_FLG        
                  ,'N' EXCEED_AVG_FLG        
                  ,0 EXCEED_AVG_DIFF_AMT
                  ,CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'
                        WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'
                                                                                                                                 ELSE 'F'
                                                                                                                            END
                        WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'
                        WHEN AA.INV_DIFF_RTO IS NULL THEN 'T'
                   END AUTO_AUD_STS_CD
                  ,(SELECT 'Y'        
                     FROM EAS_TRSP_AUD_CHK X        
                    WHERE X.INV_NO        = AA.INV_NO        
                      AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ        
                      AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD        
                      AND X.TRSP_SO_OFC_CTY_CD = AA.TRSP_SO_OFC_CTY_CD        
                      AND X.TRSP_SO_SEQ = AA.TRSP_SO_SEQ        
                   ) EAC_IF_FLG    
                  ,AA.TRSP_SO_TP_CD        
                  ,AA.INV_VNDR_SEQ           
                  ,AA.INV_NO        
                  ,AA.CGO_TP_CD        
                  ,AA.TRSP_CRR_MOD_CD        
                  ,AA.TRSP_COST_DTL_MOD_CD        
                  ,AA.TRSP_BND_CD        
                  ,AA.INV_CFM_DT        
                  ,AA.WO_ISS_DT        
                  ,AA.FM_NOD_CD        
                  ,AA.TO_NOD_CD        
                  ,AA.VIA_NOD_CD        
                  ,AA.DOR_NOD_CD         
                  ,DECODE(BB.EXPN_AUD_STS_CD, NULL, NULL, 'Y') AUD_STS_FLG -- 심사내역이 있을 경우만 EAC I/F가 가능하다.
                  ,AA.INV_DIFF_RTO
                  ,0 EXCEED_AVG_RTO
                  ,AA.TRSP_SO_OFC_CTY_CD
                  ,AA.TRSP_SO_SEQ
                  ,NULL NEGO_AMT
                  ,NULL NEGO_RMK
                  ,NULL ETC_SCG_NM
                  ,NULL ETC_SCG_AMT
                  ,NULL OTR_RMK
                  ,NULL INV_ETC_SCG_NM
                  ,NULL INV_ETC_SCG_AMT
                  ,NULL INV_OTR_RMK
                  ,AA.LOCL_CRE_DT
              FROM (        
                    SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */        
                           (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD        
                          ,I.CRE_OFC_CD AS INV_OFC_CD        
                          ,DECODE(W.CRE_OFC_CD, 'SYSTEM', S.TRSP_SO_OFC_CTY_CD, W.CRE_OFC_CD) AS WO_OFC_CD        
                          ,'R' AS TRSP_SO_TP_CD        
                          ,I.INV_VNDR_SEQ        
                          ,I.INV_NO        
                          ,I.CSR_NO        
                          ,S.CURR_CD        
                          ,S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) AS WO_AMT        
                          ,S.INV_CURR_CD
                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD        
                                                                                                           ,S.CURR_CD        
                                                                                                           ,S.INV_BZC_AMT 
--                                                                                                           + NVL(S.INV_ETC_ADD_AMT,0)        
                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')        
                                                                                                           )        
                                 ELSE S.INV_BZC_AMT 
--                                 + NVL(S.INV_ETC_ADD_AMT,0)        
                            END) AS INV_AMT        
                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG        
                          ,(SELECT X.USR_NM FROM COM_USER X WHERE X.USR_ID = I.CRE_USR_ID) INV_ISS_USR_NM        
                          ,(SELECT CASE WHEN X.GEN_PAY_TERM_CD = 'O60' THEN '0'        
                                        ELSE X.GEN_PAY_TERM_CD        
                                   END PAY_TERM_CD        
                              FROM MDM_VENDOR X        
                             WHERE X.VNDR_SEQ = I.INV_VNDR_SEQ        
                           ) PAY_TERM_CD        
                          ,TO_CHAR(I.PAY_DT, 'YYYY-MM-DD') PAY_DT        
                          ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYY-MM-DD'), 'YYYY-MM-DD') INV_TERM_DT
                          ,NULL NO_AGMT_FLG
                          ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    
                                                                                                           ,S.CURR_CD    
                                                                                                           ,S.INV_BZC_AMT 
--                                                                                                           + NVL(S.INV_ETC_ADD_AMT,0)
                                                                                                           ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    
                                                                                                           )    
                                 ELSE S.INV_BZC_AMT 
--                                 + NVL(S.INV_ETC_ADD_AMT,0)    
                            END)
                            - (S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0)) AS INV_DIFF_AMT    
                          ,NULL NO_OPTM_ROUT_FLG        
                          ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio        
                                  FROM EAS_TRSP_AUTO_AUD_CRTE X        
                                 WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD         
                                   AND X.TRSP_CRR_MOD_CD  = 'RD'        
                                   AND X.CGO_TP_CD        = S.CGO_TP_CD        
                                   AND X.EXPN_AUD_TGT_FLG = 'Y'        
                                   AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO        
                                                                        FROM EAS_TRSP_AUTO_AUD_CRTE X        
                                                                       WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)        
                                                                         AND X.TRSP_CRR_MOD_CD  = 'RD'        
                                                                         AND X.CGO_TP_CD        = S.CGO_TP_CD        
                                                                         AND X.EXPN_AUD_TGT_FLG = 'Y'        
                                                                         AND X.EXPN_AUD_CRTE_TP_CD = 'D')        
                           ) AS INV_DIFF_RTO        
                          ,W.LOCL_CRE_DT AS WO_ISS_DT        
                          ,S.CGO_TP_CD        
                          ,'RD' TRSP_CRR_MOD_CD        
                          ,W.TRSP_COST_DTL_MOD_CD        
                          ,S.TRSP_SO_OFC_CTY_CD        
                          ,S.TRSP_SO_SEQ        
                          ,W.BKG_RCVDE_TERM_CD        
                          ,W.EQ_NO        
                          ,W.EQ_TPSZ_CD        
                          ,W.BKG_NO        
                          ,W.TRSP_BND_CD        
                          ,TO_CHAR(I.INV_CFM_DT, 'YYYYMMDD') INV_CFM_DT        
                          ,W.FM_NOD_CD        
                          ,W.TO_NOD_CD        
                          ,NULL VIA_NOD_CD        
                          ,NULL DOR_NOD_CD    
                          ,W.LOCL_CRE_DT    
                      FROM TRS_TRSP_RAIL_INV_WRK I        
                          ,TRS_TRSP_RAIL_INV_DTL S        
                          ,TRS_TRSP_RAIL_BIL_ORD W        
                          ,AP_INV_HDR            A        
                     WHERE I.INV_NO       = S.INV_NO        
                       AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ        
                       AND S.TRSP_SO_OFC_CTY_CD = W.TRSP_SO_OFC_CTY_CD        
                       AND S.TRSP_SO_SEQ        = W.TRSP_SO_SEQ        
                       AND I.CSR_NO             = A.CSR_NO(+)        
                               
                       -- Service Order Type으로 조회 (ALL 또는 R일 경우만 조회된다.)
                       #if(${s_trsp_so_tp_cd} == 'R'|| ${s_trsp_crr_mod_cd} == '')        
                       AND 1=1        
                       #else         
                       AND 1=2        
                       #end        
                               
                       -- S/P Code로 조회        
                       AND I.INV_VNDR_SEQ = @[s_inv_vndr_seq]
                       -- Invoice No로 조회         
                       AND I.INV_NO = @[s_inv_no]
            
                       -- Cost Mode로 조회
                       #if(${s_trsp_cost_dtl_mod_cd} != '')        
                         AND EXISTS (SELECT 1        
                                       FROM TRS_TRSP_RAIL_INV_WRK X        
                                           ,TRS_TRSP_RAIL_INV_DTL Y        
                                           ,TRS_TRSP_RAIL_BIL_ORD Z        
                                      WHERE X.INV_NO       = Y.INV_NO        
                                        AND X.INV_VNDR_SEQ = Y.INV_VNDR_SEQ        
                                        AND Y.TRSP_SO_OFC_CTY_CD = Z.TRSP_SO_OFC_CTY_CD        
                                        AND Y.TRSP_SO_SEQ        = Z.TRSP_SO_SEQ        
                                        AND X.INV_NO       = I.INV_NO        
                                        AND X.INV_VNDR_SEQ = I.INV_VNDR_SEQ        
                                        AND Z.TRSP_COST_DTL_MOD_CD = @[s_trsp_cost_dtl_mod_cd]
                                    )        
                       #end
                       -- Trans Mode로 조회 (ALL 또는 RD일 경우만 조회된다.)        
                       #if(${s_trsp_crr_mod_cd} == 'RD' || ${s_trsp_crr_mod_cd} == '' )    
                       AND 1=1        
                       #else         
                       AND 1=2        
                       #end
                   ) AA        
                  ,EAS_TRSP_AUD BB        
             WHERE 1=1        
               AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)        
               AND AA.INV_NO        = BB.INV_NO(+)        
               AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)        
    ) AAA        
    WHERE 1=1        
       -- Diffrence로 조회시    
       #if(${s_aud_itm_cd} == 'DA')
       AND AUTO_AUD_STS_CD = 'C'
       #elseif(${s_aud_itm_cd} == 'DF')    
       AND INV_DIFF_AMT_FLG = 'Y'    
       #elseif(${s_aud_itm_cd} == 'NT')    
       AND NO_AGMT_FLG = 'N'    
       #elseif (${s_aud_itm_cd} == 'EX')    
       AND EXCEED_AVG_FLG = 'Y'    
       #elseif (${s_aud_itm_cd} == 'OT')    
      AND NO_OPTM_ROUT_FLG = 'N'    
      #end    
    ORDER BY BKG_NO, EQ_NO			]]></sql>
			<params>
				<param name="s_trsp_so_tp_cd" type="12" value="" out="N"/>
				<param name="s_inv_vndr_seq" type="12" value="" out="N"/>
				<param name="s_inv_no" type="12" value="" out="N"/>
				<param name="s_trsp_cost_dtl_mod_cd" type="12" value="" out="N"/>
				<param name="s_trsp_crr_mod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
