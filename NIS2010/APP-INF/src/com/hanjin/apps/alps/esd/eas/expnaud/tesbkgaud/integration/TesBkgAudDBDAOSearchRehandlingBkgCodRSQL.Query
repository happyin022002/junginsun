<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesBkgAudDBDAOSearchRehandlingBkgCodRSQL">
			<desc><![CDATA[Rehandling(BKG COD) 데이타 조회]]></desc>
			<sql><![CDATA[
SELECT BKG_NO
      ,CNTR_QTY
      ,BKG_OFC_CD
      ,CORR_OFC_CD
      ,TO_CHAR(CORR_DT,'YYYY-MM-DD HH24:MI:SS') CORR_DT
      ,VVD
      ,SVC_SCP_CD
      ,O_POD_CD
      ,O_DEL_CD
      ,O_RLY_PORT_CD
      ,C_POD_CD
      ,C_DEL_CD
      ,C_RLY_PORT_CD
      ,CORR_NO
	  , CA_RSN_CD
      ,REPLACE(REPLACE(BKG_CORR_RMK, CHR(13), ''), CHR(10),'') AS BKG_CORR_RMK
      ,CORR_USR_NM
      ,BKG_GET_TOKEN_FNC(DVC,1,'^') AS DVC_TRF_ITM_NO
      ,BKG_GET_TOKEN_FNC(DVC,2,'^') AS DVC_CURR_CD
      ,BKG_GET_TOKEN_FNC(DVC,3,'^') AS DVC_CHG_AMT      
      ,BKG_GET_TOKEN_FNC(DVC,4,'^') AS DVC_RAT_AS_QTY
      ,BKG_GET_TOKEN_FNC(DVC,5,'^') AS DVC_INCL_OFT_FLG
      ,BKG_GET_TOKEN_FNC(DVC,6,'^') AS DVC_CHG_USD_AMT
      ,BKG_GET_TOKEN_FNC(OCH,1,'^') AS OCH_TRF_ITM_NO
      ,BKG_GET_TOKEN_FNC(OCH,2,'^') AS OCH_CURR_CD
      ,BKG_GET_TOKEN_FNC(OCH,3,'^') AS OCH_CHG_AMT      
      ,BKG_GET_TOKEN_FNC(OCH,4,'^') AS OCH_RAT_AS_QTY
      ,BKG_GET_TOKEN_FNC(OCH,5,'^') AS OCH_INCL_OFT_FLG
      ,BKG_GET_TOKEN_FNC(OCH,6,'^') AS OCH_CHG_USD_AMT
      ,BKG_GET_TOKEN_FNC(DCH,1,'^') AS DCH_TRF_ITM_NO
      ,BKG_GET_TOKEN_FNC(DCH,2,'^') AS DCH_CURR_CD
      ,BKG_GET_TOKEN_FNC(DCH,3,'^') AS DCH_CHG_AMT      
      ,BKG_GET_TOKEN_FNC(DCH,4,'^') AS DCH_RAT_AS_QTY
      ,BKG_GET_TOKEN_FNC(DCH,5,'^') AS DCH_INCL_OFT_FLG
      ,BKG_GET_TOKEN_FNC(DCH,6,'^') AS DCH_CHG_USD_AMT
      ,BKG_GET_TOKEN_FNC(MIS,1,'^') AS MIS_TRF_ITM_NO
      ,BKG_GET_TOKEN_FNC(MIS,2,'^') AS MIS_CURR_CD
      ,BKG_GET_TOKEN_FNC(MIS,3,'^') AS MIS_CHG_AMT      
      ,BKG_GET_TOKEN_FNC(MIS,4,'^') AS MIS_RAT_AS_QTY
      ,BKG_GET_TOKEN_FNC(MIS,5,'^') AS MIS_INCL_OFT_FLG
      ,BKG_GET_TOKEN_FNC(MIS,6,'^') AS MIS_CHG_USD_AMT
      ,( SELECT	'Y'
		 FROM	EAS_DEST_CNG_CHK EE
		 WHERE  1 =1
				AND EE.BKG_NO = AA.BKG_NO 
				AND EE.CORR_NO = AA.CORR_NO ) EAC_IF_FLG
  FROM (
        SELECT A.BKG_NO
              ,(SELECT SUM(X.OP_CNTR_QTY) FROM BKG_QUANTITY X WHERE X.BKG_NO = A.BKG_NO) CNTR_QTY
              ,A.BKG_OFC_CD
              ,B.CORR_OFC_CD
              ,B.CORR_DT
              ,A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS VVD
              ,D.POD_CD          AS O_POD_CD
              ,D.DEL_CD          AS O_DEL_CD
              ,D.PST_RLY_PORT_CD AS O_RLY_PORT_CD
              ,C.POD_CD          AS C_POD_CD
              ,C.DEL_CD          AS C_DEL_CD
              ,C.PST_RLY_PORT_CD AS C_RLY_PORT_CD
              ,B.CORR_NO
			  , B.CA_RSN_CD
              ,B.BKG_CORR_RMK
              ,A.SVC_SCP_CD
              ,(SELECT X.USR_NM FROM COM_USER X WHERE X.USR_ID = B.CORR_USR_ID) CORR_USR_NM
              ,(SELECT MAX(TRF_ITM_NO) ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN MAX(CURR_CD) END ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN SUM(CHG_AMT) END ||'^'||
                       MAX(RAT_AS_QTY) ||'^'||
                       MAX(FRT_INCL_XCLD_DIV_CD) ||'^'||
                       SUM(ROUND (X.CHG_AMT / 
                             CASE WHEN NVL(X.CURR_CD,'USD') = 'USD' THEN 1
                                  ELSE (SELECT USD_LOCL_XCH_RT
                                          FROM GL_MON_XCH_RT XCH
                                         WHERE XCH.ACCT_XCH_RT_LVL = 1 
                                           AND XCH.CURR_CD           = X.CURR_CD
                                           AND XCH.ACCT_XCH_RT_YRMON = TO_CHAR(B.CORR_DT, 'YYYYMM') )
                             END
                       , 2))
                  FROM BKG_CHG_RT X
                 WHERE X.BKG_NO = A.BKG_NO
                   AND X.CHG_CD = 'DVC') DVC
              ,(SELECT MAX(TRF_ITM_NO) ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN MAX(CURR_CD) END ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN SUM(CHG_AMT) END ||'^'||
                       MAX(RAT_AS_QTY) ||'^'||
                       MAX(FRT_INCL_XCLD_DIV_CD) ||'^'||
                       SUM(ROUND (X.CHG_AMT / 
                             CASE WHEN NVL(X.CURR_CD,'USD') = 'USD' THEN 1
                                  ELSE (SELECT USD_LOCL_XCH_RT
                                          FROM GL_MON_XCH_RT XCH
                                         WHERE XCH.ACCT_XCH_RT_LVL = 1 
                                           AND XCH.CURR_CD           = X.CURR_CD
                                           AND XCH.ACCT_XCH_RT_YRMON = TO_CHAR(B.CORR_DT, 'YYYYMM') )
                             END
                       , 2))
                  FROM BKG_CHG_RT X
                 WHERE X.BKG_NO = A.BKG_NO
                   AND X.CHG_CD = 'OCH') OCH
              ,(SELECT MAX(TRF_ITM_NO) ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN MAX(CURR_CD) END ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN SUM(CHG_AMT) END ||'^'||
                       MAX(RAT_AS_QTY) ||'^'||
                       MAX(FRT_INCL_XCLD_DIV_CD) ||'^'||
                       SUM(ROUND (X.CHG_AMT / 
                             CASE WHEN NVL(X.CURR_CD,'USD') = 'USD' THEN 1
                                  ELSE (SELECT USD_LOCL_XCH_RT
                                          FROM GL_MON_XCH_RT XCH
                                         WHERE XCH.ACCT_XCH_RT_LVL = 1 
                                           AND XCH.CURR_CD           = X.CURR_CD
                                           AND XCH.ACCT_XCH_RT_YRMON = TO_CHAR(B.CORR_DT, 'YYYYMM') )
                             END
                       , 2))
                  FROM BKG_CHG_RT X
                 WHERE X.BKG_NO = A.BKG_NO
                   AND X.CHG_CD = 'DCH') DCH
              ,(SELECT MAX(TRF_ITM_NO) ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN MAX(CURR_CD) END ||'^'||
                       CASE WHEN MIN(CURR_CD) = MAX(CURR_CD) THEN SUM(CHG_AMT) END ||'^'||
                       MAX(RAT_AS_QTY) ||'^'||
                       MAX(FRT_INCL_XCLD_DIV_CD) ||'^'||
                       SUM(ROUND (X.CHG_AMT / 
                             CASE WHEN NVL(X.CURR_CD,'USD') = 'USD' THEN 1
                                  ELSE (SELECT USD_LOCL_XCH_RT
                                          FROM GL_MON_XCH_RT XCH
                                         WHERE XCH.ACCT_XCH_RT_LVL = 1 
                                           AND XCH.CURR_CD           = X.CURR_CD
                                           AND XCH.ACCT_XCH_RT_YRMON = TO_CHAR(B.CORR_DT, 'YYYYMM') )
                             END
                       , 2))
                  FROM BKG_CHG_RT X
                 WHERE X.BKG_NO = A.BKG_NO
                   AND X.CHG_CD = 'MIS') MIS
          FROM BKG_BOOKING    A
              ,BKG_CORRECTION B
              ,BKG_BKG_HIS    C
              ,BKG_BKG_HIS    D
         WHERE A.BKG_NO  = B.BKG_NO
           AND B.BKG_NO  = C.BKG_NO
           AND B.CORR_NO = C.CORR_NO  
           AND B.CORR_NO NOT IN ('0000000001', 'TMP0000001')   
           AND B.ROUT_CORR_FLG = 'Y'
           AND D.BKG_NO  = A.BKG_NO
           AND D.CORR_NO = '0000000001'
           
           -- C/A Issue Date로 조회시
		   #if( ${s_fm_dt} != '' && ${s_to_dt} != '')
           AND B.CORR_DT BETWEEN TO_DATE(REPLACE(@[s_fm_dt],'-',''),'YYYYMMDD') AND TO_DATE(REPLACE(@[s_to_dt],'-',''),'YYYYMMDD') + 0.99998 
           #end
           -- RHQ로 조회시 -- 필수
           AND B.CORR_OFC_CD IN (SELECT OFC_CD
                                   FROM MDM_ORGANIZATION
                                  WHERE DELT_FLG = 'N'
                                CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD
                                  START WITH OFC_CD = @[s_rhq_ofc_cd]
                                )
           #if(${s_ofc_cd} != '')                     
                AND B.CORR_OFC_CD = @[s_ofc_cd]
           #end
           
           #if(${s_ca_item_cd} == 'P')
                AND NVL(D.POD_CD,'X') <> NVL(C.POD_CD,'X')
           #elseif (${s_ca_item_cd} == 'D')
                AND NVL(D.DEL_CD,'X') <> NVL(C.DEL_CD,'X')
           #elseif (${s_ca_item_cd} == 'T')
                AND NVL(D.PST_RLY_PORT_CD,'X') <> NVL(C.PST_RLY_PORT_CD,'X')
           #end

           #if($s_ca_reason.size() > 0)
                AND B.CA_RSN_CD IN ( 
                    #foreach( ${key} in ${s_ca_reason})
                        #if($velocityCount == 1)
                            '$key'
                        #else
                            , '$key'
                        #end    
                    #end
                                )
           #end
           
           #if(${s_vvd} != '')
                AND (A.VSL_CD,A.SKD_VOY_NO,A.SKD_DIR_CD) IN ( (SUBSTR(@[s_vvd],1,4), SUBSTR(@[s_vvd],5,4), SUBSTR(@[s_vvd],9,1)) )
           #end
           -- BKG No로 조회시 (Multi로 입력 가능)
           #if($s_bkg_no.size() > 0)
                AND A.BKG_NO IN ( 
                    #foreach( ${key} in ${s_bkg_no})
                        #if($velocityCount == 1)
                            '$key'
                        #else
                            , '$key'
                        #end    
                    #end
                                )
           #end
       ) AA
 WHERE 1=1
        #if ( ${s_scg_cd} == 'DVC')
            AND REPLACE(DVC, '^', '') IS NOT NULL
        #elseif ( ${s_scg_cd} == 'OCH')
            AND REPLACE(OCH, '^', '') IS NOT NULL
        #elseif ( ${s_scg_cd} == 'DCH')
            AND REPLACE(DCH, '^', '') IS NOT NULL
        #elseif ( ${s_scg_cd} == 'MIS')
            AND REPLACE(MIS, '^', '') IS NOT NULL
        #end
		#if (${s_eac_if} != '')
      		#if (${s_eac_if} == 'Y')
         		AND EXISTS (SELECT	'1'
                  		      FROM	EAS_DEST_CNG_CHK EE
                		     WHERE	1=1
									AND EE.BKG_NO = AA.BKG_NO 
									AND EE.CORR_NO = AA.CORR_NO
                 		    )
      		#else
         		AND NOT EXISTS (SELECT	'1'
                 		          FROM	EAS_DEST_CNG_CHK EE
                	          	 WHERE	1=1
										AND EE.BKG_NO = AA.BKG_NO 
										AND EE.CORR_NO = AA.CORR_NO
                         	)
      		#end
   		#end
ORDER BY CORR_DT			]]></sql>
			<params>
				<param name="s_fm_dt" type="12" value="" out="N"/>
				<param name="s_to_dt" type="12" value="" out="N"/>
				<param name="s_rhq_ofc_cd" type="12" value="" out="N"/>
				<param name="s_ofc_cd" type="12" value="" out="N"/>
				<param name="s_vvd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
