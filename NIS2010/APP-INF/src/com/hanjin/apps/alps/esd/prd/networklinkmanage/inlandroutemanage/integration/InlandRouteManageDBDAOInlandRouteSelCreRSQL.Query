<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="InlandRouteManageDBDAOInlandRouteSelCreRSQL">
			<desc><![CDATA[InlandRouteSelCre]]></desc>
			<sql><![CDATA[
select rout_org_nod_cd, rout_dest_nod_cd, rn, inlnd_rout_rmk,
     org_loc,  org_loc_type,
     dest_loc,  dest_loc_type,
     rout_seq, prio_seq,
     sum_tt_time, sum_dw_tt ,tot_tt,fr.trsp trsp_mod,
     ltrim(to_char(trunc(tot_tt/24,0),'00'))||ltrim(to_char(mod(tot_tt,24  ),'00')) fmt_tot_tt,
     'Y' hub_search_gb, fr.front_gb front_gb , NOD_CD undefine_nod, group_gubun, NOD_CD,
     decode(fr.front_gb,'F', NOD_CD||'( '||fr.trsp||' )'||'-'||route , route||'( '||fr.trsp||' )'||'-'||NOD_CD) route   ,
      firstMod
 from (


     select
         rout_org_nod_cd, rout_dest_nod_cd, rn, inlnd_rout_rmk,
         org_loc,  org_loc_type,
         dest_loc,  dest_loc_type,
         rout_seq, prio_seq, route,
         sum_tt_time, sum_dw_tt ,tot_tt,
         ltrim(to_char(trunc(tot_tt/24,0),'00'))||ltrim(to_char(mod(tot_tt,24  ),'00')) fmt_tot_tt,
         length(to_char(trunc(tot_tt/24,0),'00')||to_char(mod(tot_tt,24  ),'00')) aa,
         ltrim(to_char(trunc(tot_tt/24,0),'00')) bb,to_char(mod(tot_tt,24  ),'00') cc,
          '' hub_search_gb, '' front_gb , '' undefine_nod,
         max(rn) OVER (PARTITION BY rout_org_nod_cd, rout_dest_nod_cd  ORDER BY rout_org_nod_cd,
                           rout_dest_nod_cd) AS group_gubun,
         route  cre_route ,firstMod
     from (
       SELECT rout_org_nod_cd, rout_dest_nod_cd, rownum rn,inlnd_rout_rmk,
            substr( rout_org_nod_cd,1,5) org_loc, substr( rout_org_nod_cd,6) org_loc_type,
              substr( rout_dest_nod_cd,1,5) dest_loc, substr( rout_dest_nod_cd,6) dest_loc_type,
             rout_seq, prio_seq, route,
            sum_tt_time, sum_dw_tt , (sum_tt_time + sum_dw_tt) tot_tt ,firstMod
       FROM (

         SELECT   rout_org_nod_cd, rout_dest_nod_cd, rout_seq, prio_seq ,inlnd_rout_rmk
                ,rout_org_nod_cd || ' ( ' ||
                MAX(decode ( cnt,1 ,(decode(ROUT_DTL_SEQ ,1 , trsp_mod , ''  )),
                                                             (decode(ROUT_DTL_SEQ ,1 , trsp_mod , ''  ))) ) || ' ) ' ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,1 ,'', DECODE(rout_dtl_seq, 1 , '-'||lnk_dest_nod_cd || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,2 , trsp_mod  || ' ) ', ''  ))) )  ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,2 ,'', DECODE(rout_dtl_seq, 2 , '-'||lnk_dest_nod_cd || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,3 , trsp_mod || ' ) ', ''  ))) )   ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,3 ,'', DECODE(rout_dtl_seq, 3 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,4 , trsp_mod  || ' ) ', ''  ))) )  ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,4 ,'', DECODE(rout_dtl_seq, 4 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,5 , trsp_mod || ' ) ', ''  ))) )  ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,5 ,'', DECODE(rout_dtl_seq, 5 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,6 , trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,6 ,'', DECODE(rout_dtl_seq, 6 , '-'||lnk_dest_nod_cd  || ' ( ' ))))   ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,7 , trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,7 ,'', DECODE(rout_dtl_seq, 7 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,8 , trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,8 ,'', DECODE(rout_dtl_seq, 8 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,9 , trsp_mod || ' ) ' , ''  ))) )  ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,9 ,'', DECODE(rout_dtl_seq, 9 , '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,10, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,10,'', DECODE(rout_dtl_seq, 10, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,11, trsp_mod || ' ) ' , ''  ))) )  ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,11,'', DECODE(rout_dtl_seq, 11, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,12, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,12,'', DECODE(rout_dtl_seq, 12, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,13, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,13,'', DECODE(rout_dtl_seq, 13, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,14, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,14,'', DECODE(rout_dtl_seq, 14, '-'||lnk_dest_nod_cd  || ' ( '))))    ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,15, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,15,'', DECODE(rout_dtl_seq, 15, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,16, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,16,'', DECODE(rout_dtl_seq, 16, '-'||lnk_dest_nod_cd  || ' ( ' ))))   ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,17, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,17,'', DECODE(rout_dtl_seq, 17, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,18, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,18,'', DECODE(rout_dtl_seq, 18, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,19, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,19,'', DECODE(rout_dtl_seq, 19, '-'||lnk_dest_nod_cd || ' ( '))))     ||
                MAX(decode ( cnt,1 , '' , (decode(ROUT_DTL_SEQ ,20, trsp_mod || ' ) ', ''  ))) )    ||
                MAX(DECODE(cnt,1,'', DECODE(cnt,20,'', DECODE(rout_dtl_seq, 20, '-'||lnk_dest_nod_cd))))
                ||  '-'||rout_dest_nod_cd as route
                , rout_org_nod_cd AS pod0
                , rout_dest_nod_cd AS del, sum_tt_time,
      MAX(DECODE ( cnt,1 , DECODE(rout_dtl_seq ,1 , dest_dw_time , 0  ),
                              DECODE(rout_dtl_seq ,1 , dest_dw_time, 0  )) )  +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,2 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,3 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,4 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,5 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,6 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,7 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,8 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,9 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,10 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,11 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,12 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,13 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,14 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,15 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,16 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,17 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,18 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,19 , dest_dw_time, 0  )) )   +
      MAX(DECODE ( cnt,1 ,0, DECODE(rout_dtl_seq ,20 , dest_dw_time, 0  )) )   sum_dw_tt ,
      MAX(decode ( cnt,1 ,(decode(ROUT_DTL_SEQ ,1 , trsp_mod , ''  )), (decode(ROUT_DTL_SEQ ,1 , trsp_mod , ''  ))) ) firstMod
             FROM (

                   SELECT rout_org_nod_cd, rout_dest_nod_cd, rout_seq, prio_seq,inlnd_rout_rmk,
                          rout_dtl_seq, cnt,lnk_org_nod_cd, lnk_dest_nod_cd,trsp_mod_cd,
                          decode(trsp_mod_cd,'TD','TRUCK','RD','RAIL','WD','WATER',trsp_mod_cd) trsp_mod,
                          tztm_hrs link_tt_time ,sum_tt_time, org_dw_time,nvl(dest_dw_time,0) dest_dw_time
                     FROM (
                   SELECT   m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq, m.prio_seq,
                            d.lnk_org_nod_cd,d.lnk_dest_nod_cd, d.rout_dtl_seq,d.trsp_mod_cd,
                            COUNT (*) OVER (PARTITION BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq
                            ORDER BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq) AS cnt,
                            l.tztm_hrs  ,m.inlnd_rout_rmk
                            , sum(l.tztm_hrs) over(PARTITION BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq
                            ORDER BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq) AS sum_tt_time
                            ,nvl(DECODE(@[r_inbound], 'O', m1.OB_dry_avg_dwll_hrs,M1.IB_dry_avg_dwll_hrs),0) org_dw_time,  nvl(DECODE(@[r_inbound], 'O', m2.OB_dry_avg_dwll_hrs,m2.IB_dry_avg_dwll_hrs),0) dest_dw_time
                       FROM prd_inlnd_rout_mst m, prd_inlnd_rout_dtl d, prd_inlnd_each_lnk l
                            ,mdm_yard m1, mdm_yard m2

                            , mdm_yard m3
#if(${from_chk} =='Y')
                      WHERE m.rout_org_nod_cd  LIKE @[i_org_cd]||'%'
                        AND m.rout_dest_nod_cd LIKE @[hub_loc_cd]||'%'
#elseif(${to_chk} == 'Y')
					WHERE m.rout_org_nod_cd  LIKE @[hub_loc_cd]||'%'
                        AND m.rout_dest_nod_cd LIKE @[i_dest_cd]||'%'
#else
					WHERE m.rout_org_nod_cd  LIKE '' ||'%'
                        AND m.rout_dest_nod_cd LIKE '' ||'%'
#end
                        AND m.rout_org_nod_cd = d.rout_org_nod_cd
                        AND m.rout_dest_nod_cd = d.rout_dest_nod_cd
                        AND m.rout_seq = d.rout_seq
#if(${from_chk} == 'Y')

              AND m.rout_dest_nod_cd = m3.YD_CD
              AND m3.hub_yd_flg = 'Y'
#elseif(${to_chk} == 'Y')

              AND m.rout_org_nod_cd = m3.YD_CD
              AND m3.hub_yd_flg = 'Y'
#end



                        AND d.lnk_org_nod_cd = l.lnk_org_nod_cd
                        AND d.lnk_dest_nod_cd = l.lnk_dest_nod_cd
                        AND d.trsp_mod_cd = l.trsp_mod_cd


#if(${r_inbound} == 'I')


						AND m.PCTL_IO_BND_CD ='I'
                       AND EXISTS
                            (
                                SELECT 'X' FROM PRD_NODE N
                                WHERE N.NOD_CD = M.ROUT_ORG_NOD_CD
                                AND  N.NOD_TP_CD  IN ( 'M','B' )
                             )
                       AND EXISTS
                            (
                                SELECT 'X' FROM PRD_NODE N
                                WHERE N.NOD_CD = M.rout_dest_nod_cd
	#if(${nod_tp1} == 'Z')
                                AND  N.NOD_TP_CD  = 'Z'
	#else
                                AND  N.NOD_TP_CD  != 'Z'
	#end
                             )

#elseif(${r_inbound} == 'O')

						AND m.PCTL_IO_BND_CD ='O'
                       AND EXISTS
                            (
                                SELECT 'X' FROM PRD_NODE N
                                WHERE N.NOD_CD = M.rout_dest_nod_cd
                                AND  N.NOD_TP_CD  IN ( 'M','B' )
                             )
                       AND EXISTS
                            (
                                SELECT 'X' FROM PRD_NODE N
                                WHERE N.NOD_CD = M.ROUT_ORG_NOD_CD
	#if(${nod_tp2} == 'Z')
                                AND  N.NOD_TP_CD  = 'Z'
	#else
                                AND  N.NOD_TP_CD  != 'Z'
	#end
                             )

#else

						AND m.PCTL_IO_BND_CD ='B'

#end




                        and m1.YD_CD(+) = d.lnk_org_nod_cd
                        and m2.YD_CD(+) = d.lnk_dest_nod_cd
                   ORDER BY m.rout_seq, d.rout_dtl_seq
                   )

          ) m
         GROUP BY m.rout_org_nod_cd, m.rout_dest_nod_cd, m.rout_seq, m.prio_seq,sum_tt_time ,m.inlnd_rout_rmk
         ORDER BY rout_org_nod_cd, rout_dest_nod_cd, prio_seq

       )
     )
     ORDER BY  prio_seq

 ) rout
 ,(select nod_cd from PRD_NODE
  	where loc_cd=DECODE (@[from_chk] ,'Y', SUBSTR(@[i_dest_cd],1,5), DECODE (@[to_chk], 'Y', SUBSTR(@[i_org_cd],1,5), ' '))
 		AND NOD_CD LIKE DECODE (@[from_chk],'Y', @[i_dest_cd], DECODE (@[to_chk], 'Y', @[i_org_cd], ' '))||'%'
 		AND  nvl(DELT_FLG,'N') = 'N'
#if(${r_inbound} == 'I')
	#if(${nod_tp1} == 'Z')
                                AND  NOD_TP_CD  = 'Z'
	#else
                                AND  NOD_TP_CD  != 'Z'
	#end
#elseif(${r_inbound}=='O')
	#if(${nod_tp2}== 'Z')
                                AND  NOD_TP_CD  = 'Z'
	#else
                                AND  NOD_TP_CD  != 'Z'
	#end
#end


   )
#if(${from_chk} =='Y')
 ,( select  'B'  front_gb, decode(@[trsp_mod_cd],'TD','TRUCK','RD','RAIL','WD','WATER')  trsp from dual where rownum = 1 ) fr
#elseif(${to_chk} == 'Y')
 ,( select  'F'  front_gb, decode(@[trsp_mod_cd],'TD','TRUCK','RD','RAIL','WD','WATER')  trsp from dual where rownum = 1 ) fr
#else
 ,( select  ''  front_gb, decode('','TD','TRUCK','RD','RAIL','WD','WATER')  trsp from dual where rownum = 1 ) fr
#end			]]></sql>
			<params>
				<param name="r_inbound" type="12" value="" out="N"/>
				<param name="i_org_cd" type="12" value="" out="N"/>
				<param name="hub_loc_cd" type="12" value="" out="N"/>
				<param name="i_dest_cd" type="12" value="" out="N"/>
				<param name="from_chk" type="12" value="" out="N"/>
				<param name="to_chk" type="12" value="" out="N"/>
				<param name="trsp_mod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
