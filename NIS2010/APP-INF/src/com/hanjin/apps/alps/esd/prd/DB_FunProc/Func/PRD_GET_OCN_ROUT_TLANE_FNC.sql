CREATE OR REPLACE FUNCTION PRD_GET_OCN_ROUT_TLANE_FNC /* ========================================================   1. Object Name      : PRD_GET_OCN_ROUT_TLANE_FNC   2. Version          : 1.0   3. Create Date      : 2011.12.08   4. Sub System       : Product Catalog   5. Author           : 박만건   6. Description      : OCEAN ROUTE형태의 정보로 해상 운송 구간중 TRUNK LANE을 구한다.                         Ocean Route Excel Upload와 같이 Ocean Route 등록처리에만 관여하므로, 배치서버에 등록할 필요 없음   7. Revision History : 2011.12.08 박만건 최초 생성                         2012.02.29 박만건 COA_SLANE_RLANE_CONV_FNC의 예외사항 추가                                           COA_RANK_INFO_FNC와 동기화 유지 사항 추가                        2012.08.06 정선용 COA의 변경사항을 적용                                          COA_RANK_INFO_FNC 변경으로 param 추가 (N1ST_VVD~N4TH_VVD)                                          COA_RANK_INFO_FNC 호출시 사용하는 decode 문 제거( coa 에서 같은 r-lane 일경우 우선순위를 찾는 로직이 들어감)                        2014.09.22 정선용 COA의 변경사항을 적용                                          COA_RANK_INFO_FNC  가 COA_RANK_INFO_COMP_FNC 로 변경                   ======================================================== */(    ------------------------------PARAMETERS------------------------------    V_POL           IN VARCHAR2,    V_TS1_PORT      IN VARCHAR2,    V_TS2_PORT      IN VARCHAR2,    V_TS3_PORT      IN VARCHAR2,    V_POD           IN VARCHAR2,    V_LANE1         IN VARCHAR2,    V_LANE2         IN VARCHAR2,    V_LANE3         IN VARCHAR2,    V_LANE4         IN VARCHAR2    -----------------------------------------------------------------------)RETURN VARCHARauthid current_userIS    RET_VAL     NUMBER  (1) := NULL;BEGIN    IF LENGTH(V_POL) <> 5 THEN        RETURN NULL;    ELSIF LENGTH(V_POD) <> 5 THEN        RETURN NULL;    ELSIF LENGTH(V_LANE1) <> 3 THEN        RETURN NULL;    ELSIF (V_TS1_PORT IS NOT NULL OR V_LANE2 IS NOT NULL) AND (LENGTH(V_TS1_PORT) <> 5 OR LENGTH(V_LANE2) <> 3) THEN        RETURN NULL;    ELSIF (V_TS2_PORT IS NOT NULL OR V_LANE3 IS NOT NULL) AND (LENGTH(V_TS2_PORT) <> 5 OR LENGTH(V_LANE3) <> 3) THEN        RETURN NULL;    ELSIF (V_TS3_PORT IS NOT NULL OR V_LANE4 IS NOT NULL) AND (LENGTH(V_TS3_PORT) <> 5 OR LENGTH(V_LANE4) <> 3) THEN        RETURN NULL;    END IF;    SELECT        (CASE WHEN -- COA_RANK_INFO_FNC 의 예외사항처리 : TZ_DWLL_TM_HRS의 MAX값으로 결정한다                -- 1. Mother Vsl 인데, R.Lane이 'RBCCO'로 결정될 경우                   ('NOFDR' IN (N1ST_R_LANE,N2ND_R_LANE,N3RD_R_LANE,N4TH_R_LANE))                -- 2. COA_RANK_INFO_FNC 내에서 동일 순위 처리되는 경우                   OR  1 <   (SELECT COUNT(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N1ST_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA1,1,2) AND delt_flg='N')                   OR  1 <   DECODE(N2ND_R_LANE,NULL,0,(SELECT COUNT(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N2ND_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA2,1,2) AND delt_flg='N'))                   OR  1 <   DECODE(N3RD_R_LANE,NULL,0,(SELECT COUNT(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N3RD_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA3,1,2) AND delt_flg='N'))                   OR  1 <   DECODE(N4TH_R_LANE,NULL,0,(SELECT COUNT(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N4TH_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA4,1,2) AND delt_flg='N'))                -- 3. COA_RANK_INFO_FNC 내에서 rnk_seq 가 null 로 결정될 경우                   OR ((SELECT SUM(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N1ST_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA1,1,2) AND delt_flg='N')                        + DECODE(N2ND_R_LANE,NULL,0,(SELECT SUM(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N2ND_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA2,1,2) AND delt_flg='N'))                        + DECODE(N3RD_R_LANE,NULL,0,(SELECT SUM(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N3RD_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA3,1,2) AND delt_flg='N'))                        + DECODE(N4TH_R_LANE,NULL,0,(SELECT SUM(rnk_seq) FROM ar_rout_rnk WHERE rlane_cd = N4TH_R_LANE AND SUBSTR (zn_ioc_cd,1,2) = substr(CPARA4,1,2) AND delt_flg='N'))                        IS NULL)                   THEN MAX_TZ_TM--              ELSE DECODE(COA_RANK_INFO_FNC(N1ST_R_LANE,N2ND_R_LANE,N3RD_R_LANE,N4TH_R_LANE,CPARA1,CPARA2,CPARA3,CPARA4)--                          , 1, N1ST_TZTM_HRS_BY_R_LANE, 2, N2ND_TZTM_HRS_BY_R_LANE, 3, N3RD_TZTM_HRS_BY_R_LANE, N4TH_TZTM_HRS_BY_R_LANE)              ELSE COA_RANK_INFO_COMP_FNC(N1ST_R_LANE,N2ND_R_LANE,N3RD_R_LANE,N4TH_R_LANE,CPARA1,CPARA2,CPARA3,CPARA4                        ,'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null )                        --, '', '' , '', '')                                  END) T_SEQ    INTO RET_VAL    FROM (        SELECT              MAX(RNK) CNT            , MAX(DECODE(RNK, 1, VSL_SLAN_CD         )) N1ST_VSL_SLAN_CD            , MAX(DECODE(RNK, 1, ORG_CONTI_CD        )) N1ST_ORG_CONTI_CD            , MAX(DECODE(RNK, 1, DEST_CONTI_CD       )) N1ST_DEST_CONTI_CD            , MAX(DECODE(RNK, 1, R_LANE_CD           )) N1ST_R_LANE            , MAX(DECODE(RNK, 1, TZ_DWLL_TM_HRS      )) N1ST_TZTM_HRS            , MAX(DECODE(RNK, 1, MAX_TZ_TM_BY_R_LANE )) N1ST_TZTM_HRS_BY_R_LANE            , MAX(DECODE(RNK, 1, CAPAR               )) CPARA1            , MAX(DECODE(RNK, 2, VSL_SLAN_CD         )) N2ND_VSL_SLAN_CD            , MAX(DECODE(RNK, 2, ORG_CONTI_CD        )) N2ND_ORG_CONTI_CD            , MAX(DECODE(RNK, 2, DEST_CONTI_CD       )) N2ND_DEST_CONTI_CD            , MAX(DECODE(RNK, 2, R_LANE_CD           )) N2ND_R_LANE            , MAX(DECODE(RNK, 2, TZ_DWLL_TM_HRS      )) N2ND_TZTM_HRS            , MAX(DECODE(RNK, 2, MAX_TZ_TM_BY_R_LANE )) N2ND_TZTM_HRS_BY_R_LANE            , MAX(DECODE(RNK, 2, CAPAR               )) CPARA2            , MAX(DECODE(RNK, 3, VSL_SLAN_CD         )) N3RD_VSL_SLAN_CD            , MAX(DECODE(RNK, 3, ORG_CONTI_CD        )) N3RD_ORG_CONTI_CD            , MAX(DECODE(RNK, 3, DEST_CONTI_CD       )) N3RD_DEST_CONTI_CD            , MAX(DECODE(RNK, 3, R_LANE_CD           )) N3RD_R_LANE            , MAX(DECODE(RNK, 3, TZ_DWLL_TM_HRS      )) N3RD_TZTM_HRS            , MAX(DECODE(RNK, 3, MAX_TZ_TM_BY_R_LANE )) N3RD_TZTM_HRS_BY_R_LANE            , MAX(DECODE(RNK, 3, CAPAR               )) CPARA3            , MAX(DECODE(RNK, 4, VSL_SLAN_CD         )) N4TH_VSL_SLAN_CD            , MAX(DECODE(RNK, 4, ORG_CONTI_CD        )) N4TH_ORG_CONTI_CD            , MAX(DECODE(RNK, 4, DEST_CONTI_CD       )) N4TH_DEST_CONTI_CD            , MAX(DECODE(RNK, 4, R_LANE_CD           )) N4TH_R_LANE            , MAX(DECODE(RNK, 4, TZ_DWLL_TM_HRS      )) N4TH_TZTM_HRS            , MAX(DECODE(RNK, 4, MAX_TZ_TM_BY_R_LANE )) N4TH_TZTM_HRS_BY_R_LANE            , MAX(DECODE(RNK, 4, CAPAR               )) CPARA4            , MAX(MAX_TZ_TM) MAX_TZ_TM        FROM(            SELECT                  ORG_NOD_CD,ORG_CONTI_CD,DEST_NOD_CD,DEST_CONTI_CD,VSL_SLAN_CD,TZ_DWLL_TM_HRS,RNK,R_LANE_CD                , MAX(DECODE(MAX_TZ_TM, 1, RNK)) OVER () MAX_TZ_TM                , CAPAR                , MAX(DECODE(MAX_TZ_TM_BY_R_LANE, 1, RNK)) OVER (PARTITION BY R_LANE_CD) MAX_TZ_TM_BY_R_LANE            FROM(                SELECT                   ORG_NOD_CD                  , ORG_CONTI_CD                  , DEST_NOD_CD                  , DEST_CONTI_CD                  , VSL_SLAN_CD                  , SKD_DIR_CD                  , TZ_DWLL_TM_HRS                  , RANK() OVER (ORDER BY LINK_POS) RNK                  , R_LANE_CD                  , ROW_NUMBER() OVER (ORDER BY TZ_DWLL_TM_HRS DESC, LINK_POS) MAX_TZ_TM                  , DECODE(R_LANE_CD, 'RESIA', DECODE(IOC_CD, 'IF', 'IA', IOC_CD)                                          , 'ALXIA', DECODE(IOC_CD, 'IF', 'IA', 'IM', 'IA',  IOC_CD)                                          , 'INXTP', DECODE(IOC_CD, 'IF', 'IA',  IOC_CD)                                          , 'AWZTP', DECODE(IOC_CD, 'IF', 'IA',  IOC_CD)                                          , 'SFXIA', DECODE(IOC_CD, 'IF', 'IA',  IOC_CD)                                          , DECODE(IOC_CD, 'IF', 'IE',IOC_CD)) -- ZoneCode가 IF일 경우 모두 IE로 인식하도록 로직추가 (해당 DECODE는 COA_RANK_INFO_FNC와 동기화 유지 필요 MGPARK 20120229)                          AS CAPAR                     , ROW_NUMBER() OVER  (PARTITION BY R_LANE_CD ORDER BY TZ_DWLL_TM_HRS DESC, LINK_POS) MAX_TZ_TM_BY_R_LANE                FROM(                    SELECT SUBQ.LINK_POS                         , DECODE(IOC_CD, 'O', 'OO', NULL, DECODE(MPOL.CONTI_CD, MPOD.CONTI_CD, 'I' || MPOD.CONTI_CD, 'OO'), IOC_CD || MPOD.CONTI_CD) AS IOC_CD                         , MPOL.CONTI_CD ORG_CONTI_CD                         , SUBQ.POL_CD ORG_NOD_CD                         , SUBQ.SLAN_CD VSL_SLAN_CD                         , MPOD.CONTI_CD DEST_CONTI_CD                         , SUBQ.POD_CD DEST_NOD_CD                         , DECODE(SLAN_CD, 'FDR',PFDR.SKD_DIR_CD, PFTZ.SKD_DIR_CD) SKD_DIR_CD                         , DECODE(SLAN_CD, 'FDR',PFDR.TZTM_HRS, PFTZ.TZTM_HRS) TZ_DWLL_TM_HRS                         , CASE WHEN LINK_POS = 5 THEN NULL                              WHEN RLAN.RLANE_CD IS NULL OR RLAN.RLANE_CD = 'RBCCO' THEN DECODE(MVSL.VSL_SVC_TP_CD, 'O', 'RBCCO', 'NOFDR')                              ELSE RLAN.RLANE_CD                           END AS R_LANE_CD                    FROM(                        SELECT LINK_POS, POL_CD, SLAN_CD                              , DECODE(LINK_POS, MAX(DECODE(LINK_POS, 5, 0, LINK_POS)) OVER (), V_POD, POD_CD) POD_CD                              , MAX(DECODE(LINK_POS, 5, 0, LINK_POS)) OVER () LINK_COUNT                         FROM (                             SELECT CPY_NO LINK_POS                                  , DECODE(CPY_NO, 1, V_POL,      2, V_TS1_PORT, 3, V_TS2_PORT, 4, V_TS3_PORT, 5, V_POD ) POL_CD                                  , DECODE(CPY_NO, 1, V_LANE1,    2, V_LANE2,    3, V_LANE3,    4, V_LANE4 ) SLAN_CD                                  , DECODE(CPY_NO, 1, V_TS1_PORT, 2, V_TS2_PORT, 3, V_TS3_PORT ) POD_CD                             FROM COM_CPY_NO                             WHERE CPY_NO BETWEEN 1 AND 5                              )                         WHERE POL_CD IS NOT NULL OR SLAN_CD IS NOT NULL                          ) SUBQ                    LEFT OUTER JOIN MDM_LOCATION MPOL                        ON (    SUBQ.POL_CD = MPOL.LOC_CD                            AND NVL(MPOL.DELT_FLG, 'N') = 'N')                    LEFT OUTER JOIN MDM_LOCATION MPOD                        ON (    SUBQ.POD_CD = MPOD.LOC_CD                            AND NVL(MPOD.DELT_FLG, 'N') = 'N')                    LEFT OUTER JOIN MDM_VSL_SVC_LANE MLAN                        ON (    SUBQ.SLAN_CD = MLAN.VSL_SLAN_CD                            AND NVL(MLAN.DELT_FLG, 'N') = 'N')                    LEFT OUTER JOIN PRD_PF_TZ_TM PFTZ                        ON (    SUBQ.SLAN_CD = PFTZ.VSL_SLAN_CD                            AND SUBQ.POL_CD = PFTZ.FM_PORT_CD                            AND SUBQ.POD_CD = PFTZ.TO_PORT_CD                            AND NVL(PFTZ.DELT_FLG, 'N') = 'N')                    LEFT OUTER JOIN PRD_FDR_LNK PFDR                        ON (    SUBQ.SLAN_CD = PFDR.VSL_SLAN_CD                            AND SUBQ.POL_CD = PFDR.LNK_ORG_LOC_CD                            AND SUBQ.POD_CD = PFDR.LNK_DEST_LOC_CD                            AND NVL(PFDR.DELT_FLG, 'N') = 'N')                    LEFT OUTER JOIN MDM_DTL_REV_LANE RLAN                        ON (    RLAN.VSL_SLAN_DIR_CD = DECODE(SLAN_CD, 'FDR',PFDR.SKD_DIR_CD, PFTZ.SKD_DIR_CD)                            AND RLAN.FM_CONTI_CD = MPOL.CONTI_CD                            AND RLAN.TO_CONTI_CD = MPOD.CONTI_CD                            AND SUBSTR(RLAN.RLANE_CD,1,3) = SUBQ.SLAN_CD                            AND RLAN.DELT_FLG = 'N'                            AND RLAN.RLANE_CD = CASE WHEN SUBQ.SLAN_CD  = 'SFX' THEN CASE WHEN TO_NUMBER(TO_CHAR(SYSDATE, 'YYYYMM')) >= 201201 THEN 'SFXIA' ELSE 'SFXEM' END -- COA_SLANE_RLANE_CONV_FNC의 예외사항 추가 20120229 MGPARK                                                     ELSE RLAN.RLANE_CD                                                END                            )                    LEFT OUTER JOIN MDM_VSL_SVC_LANE MVSL -- REVENUE LANE이 없거나, RBCCO인 경우, MDM_VSL_SVC_LANE을 확인해서 FEEDER인지 확인한다.                        ON (    NVL(RLAN.RLANE_CD,'RBCCO') = 'RBCCO'                            AND MVSL.VSL_SLAN_CD = SUBQ.SLAN_CD                            AND NVL(MVSL.DELT_FLG, 'N') = 'N' )                    )                 WHERE LINK_POS <> 5                )            )        )        ;    RETURN RET_VAL;END PRD_GET_OCN_ROUT_TLANE_FNC;/