<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListEurDrRSQL">
			<desc><![CDATA[구주 Door S/O 대상 조회]]></desc>
			<sql><![CDATA[
SELECT IB_VVD_CD
      ,OB_VVD_CD
      ,CTRL_OFC_CD
      ,COP_NO
      ,EQ_NO
      ,EQ_TPSZ_CD
      ,COST_ACT_GRP_SEQ
      ,COST_ACT_GRP_CD
      ,VNDR_SEQ
      ,DECODE(TRSP_COST_DTL_MOD_CD, 'CY', 'CY', 'DR', 'DOOR', 'CY') TRSP_COST_DTL_MOD_CD
      ,TRSP_CRR_MOD_CD
	  ,TRSP_CRR_MOD_CD TRSP_CRR_MOD_CD2
      ,FM_NOD_CD
      ,FM_NOD_YARD
      ,TO_NOD_CD
      ,TO_NOD_YARD
      ,VIA_NOD_CD
      ,VIA_NOD_YARD
      ,DOR_NOD_CD
      ,DOR_NOD_YARD
      ,FM_NOD_CD2
      ,FM_NOD_YARD2
      ,TO_NOD_CD2
      ,TO_NOD_YARD2
      ,VIA_NOD_CD2
      ,VIA_NOD_YARD2
      ,DOR_NOD_CD2 
      ,DOR_NOD_YARD2
      ,N1ST_NOD_PLN_DT
      ,N1ST_NOD_PLN_DT_HMS
      ,LST_NOD_PLN_DT
      ,LST_NOD_PLN_DT_HMS
      ,NVL2(SUBSTR(T_DOR_ARR_DT,1,8),SUBSTR(T_DOR_ARR_DT,1,8),TO_CHAR(DOR_NOD_PLN_DT, 'YYYYMMDD')) AS DOR_NOD_PLN_DT
      ,NVL2(SUBSTR(T_DOR_ARR_DT,9),SUBSTR(T_DOR_ARR_DT,9),TO_CHAR(DOR_NOD_PLN_DT, 'HH24MISS')) AS DOR_NOD_PLN_DT_HMS
      ,SUBSTR(T_DOR_ARR_DT,1,8) AS DOR_ARR_DT_DD
      ,SUBSTR(T_DOR_ARR_DT,9) AS DOR_ARR_DT_HMS
      ,T_DOR_ARR_DT AS DOR_ARR_DT
      ,DOR_NOD_PLN
      ,TRO_SEQ
      ,TRO_SUB_SEQ
      ,TRO_CNFM
      ,T_TRO_CFM_OFC_CD  AS TRO_CFM_OFC_CD
      ,T_TRO_CFM_USR_ID  AS TRO_CFM_USR_ID
      ,SUBSTR(T_TRO_CFM_UPD_DT,1,8) AS TRO_CFM_UPD_DT1
      ,SUBSTR(T_TRO_CFM_UPD_DT,9)   AS TRO_CFM_UPD_DT2
      ,T_TRO_CFM_CURR_CD AS TRO_CFM_CURR_CD
      ,T_TRSP_RQST_ORD_REV_AMT AS TRO_CFM_REV_AMT
      ,T_TRO_LOD_REF_NO  AS TRO_LOD_REF_NO
      ,T_TRO_REP_CMDT_CD AS TRO_REP_CMDT_CD
      ,TRSP_BND_CD
      ,TRNS_RQST_OFC_CD
      ,TRNS_RQST_USR_ID
      ,TRNS_RQST_RSN
      ,RAIL_CMB_THRU_TP_CD
      ,BKG_RCVDE_TERM_CD
      ,BKG_NO
      ,POD_CONTI_CD
      ,FM_LOC_CONTI_CD
      ,CUST_NOMI_TRKR_FLG
      ,CUST_CNT_CD
      ,CUST_SEQ
      ,CNEE_CUST_CNT_CD
      ,CNEE_CUST_SEQ
      ,SHPR_CUST_CNT_CD
      ,SHPR_CUST_SEQ
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_ACT_CUST_CD
            WHEN C_EXIST IS NOT NULL THEN C_ACT_CUST_CD  
       END AS ACT_CUST_CD
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_ACT_CUST_CNT_CD
            WHEN C_EXIST IS NOT NULL THEN C_ACT_CUST_CNT_CD
       END AS ACT_CUST_CNT_CD
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_ACT_CUST_SEQ
            WHEN C_EXIST IS NOT NULL THEN C_ACT_CUST_SEQ
       END AS ACT_CUST_SEQ
      ,CASE WHEN T_EXIST IS NOT NULL THEN ''
            WHEN C_EXIST IS NOT NULL THEN C_ACT_CUST_ADDR_SEQ
       END AS ACT_CUST_ADDR_SEQ
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_DOR_PST_CD
            WHEN C_EXIST IS NOT NULL THEN C_DOR_PST_CD
       END AS DOR_PST_CD
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_FCTRY_NM
            WHEN C_EXIST IS NOT NULL THEN C_FCTRY_NM
       END AS FCTRY_NM
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_DOR_DE_ADDR
            WHEN C_EXIST IS NOT NULL THEN C_DOR_DE_ADDR
       END AS DOR_DE_ADDR
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_CNTC_PSON_PHN_NO
            WHEN C_EXIST IS NOT NULL THEN C_CNTC_PSON_PHN_NO
       END AS CNTC_PSON_PHN_NO
      ,CASE WHEN T_EXIST IS NOT NULL THEN ''
            WHEN C_EXIST IS NOT NULL THEN C_CNTC_PSON_FAX_NO
       END AS CNTC_PSON_FAX_NO
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_CNTC_PSON_NM
            WHEN C_EXIST IS NOT NULL THEN C_CNTC_PSON_NM
       END AS CNTC_PSON_NM
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_TRSP_RQST_ORD_RMK
            WHEN C_EXIST IS NOT NULL THEN ''
       END AS SPCL_INSTR_RMK 
      ,NULL AS USA_DO_USR_INFO --US D/O Only
      ,NULL AS DO_CRE_DATE     --US D/O Only
      ,NULL AS DO_CRE_TIME     --US D/O Only
      ,BL_NO
      ,BKG_CGO_TP_CD
      ,CGO_TP_CD
      ,PKGCODE
      ,TRUNKVVD
      ,SLAN_CD
      ,POR_CD
      ,POL_CD
      ,POD_CD
      ,DEL_CD
      ,BKG_BDR_DT
      ,BKG_BDR_FLG
      ,SEALNO
      ,SEALNO2
      ,NVL2(T_EXIST, T_CNTR_WGT, CNTR_WGT) CNTR_WGT
      ,WGT_MEAS_UT_CD
      ,NOOFPKG
      ,CASE WHEN T_AWK_CGO_SEQ IS NOT NULL AND T_AWK_CGO_SEQ > 0 THEN 'AK'
            WHEN T_RC_SEQ      IS NOT NULL AND T_RC_SEQ > 0 THEN 'RF'
            WHEN DG_INFO       IS NOT NULL AND DG_INFO > 0 THEN 'DG'
            WHEN T_DCGO_SEQ    IS NOT NULL AND T_DCGO_SEQ > 0 THEN 'DG'
            ELSE SPCL_CGO_CNTR_TP_CD
       END AS SPCL_CGO_CNTR_TP_CD 
      ,SHPR_CUST_NM
      ,CNEE_CUST_NM
      ,TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(NVL2(T_EXIST, 'KGS', WGT_MEAS_UT_CD), NVL2(T_EXIST, T_CNTR_WGT, CNTR_WGT)) AS CNTR_KGS_WGT -- EUR TRO에 Weight가 없으면 BKG CNTR 의 Weight값을 조회한다.
      ,TRS_COMMON_PKG.GET_CONV_WGT_TO_LBS_FNC(NVL2(T_EXIST, 'KGS', WGT_MEAS_UT_CD), NVL2(T_EXIST, T_CNTR_WGT, CNTR_WGT)) AS CNTR_LBS_WGT -- EUR TRO에 Weight가 없으면 BKG CNTR 의 Weight값을 조회한다.
      ,NTFY_CUST_NM
      ,SC_NO
      ,RFANO
      ,CMDT_CD
      ,CMDT_NAME
      ,CGOR_FRT_PAY_IND_FLG
      ,CGOR_ORG_BL_RCVR_IND_FLG
      ,CGOR_CSTMS_ACPT_RE_IND_FLG
      ,OWNR_CO_CD
      ,IMDT_EXT_FLG
      ,LSTM_CD
      ,IBD_CSTMS_CLR_LOC_CD
      ,DOR_SVC_TP_CD
      ,INTER_RMK
      ,CRE_USR_ID
      ,UPD_USR_ID
      ,TRSP_SO_OFC_CTY_CD
      ,TRSP_NXT_PORT_CD
      ,LST_LOC_CD
      ,T_CSTMS_CLR_NO  AS CUSTOMSCLEARANCENO -- TRO Only
      ,DECODE(T_CSTMS_CLR_NO,NULL, '', 'Y')   AS CUSTOMSCLEARANCE -- TRO Only
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_MLT_STOP_DE_FLG
            WHEN C_EXIST IS NOT NULL THEN '' -- TRO Only
       END AS MLT_STOP_DE_FLG
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_PROC_CFM_IND_CD
            WHEN C_EXIST IS NOT NULL THEN '' -- TRO Only
       END AS PROC_CFM_IND_CD
      ,TRSP_COST_DTL_MOD_SEP
      ,CASE WHEN DG_INFO IS NOT NULL THEN DG_INFO  
            WHEN T_EXIST IS NOT NULL THEN T_DCGO_SEQ  
            WHEN C_EXIST IS NOT NULL THEN '' -- TRO Only  
       END AS DCGO_SEQ
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_RC_SEQ
            WHEN C_EXIST IS NOT NULL THEN '' -- TRO Only
       END AS RC_SEQ
      ,CASE WHEN T_EXIST IS NOT NULL THEN T_AWK_CGO_SEQ
            WHEN C_EXIST IS NOT NULL THEN '' -- TRO Only
       END AS AWK_CGO_SEQ
      ,CNTR_PKUP_NO
      ,AVAL_DT
      ,AVAL_DT_HMS
      ,LST_FREE_DT
      ,LST_FREE_DT_HMS
      ,BKG_QTY
      ,T_CSTMS_CLR_NO AS CSTMS_CLR_NO
      ,T_REP_CMDT_CD AS REP_CMDT_CD
      ,T_REV_CURR_CD AS REV_CURR_CD
      ,T_TRSP_RQST_ORD_REV_AMT AS TRSP_RQST_ORD_REV_AMT
      ,T_TRSP_RQST_ORD_BND_CD AS TRSP_RQST_ORD_BND_CD
      ,T_TRSP_RQST_ORD_SEQ AS TRSP_RQST_ORD_SEQ
      ,TRSP_SO_STS_CD
      ,TRSP_SO_STS_NM
      ,CHK1
      ,PRT_BKG_NO
      ,RAIL_CRE_DT_DD
      ,RAIL_CRE_DT_HMS
      ,RAIL_TO_NOD_CD
      ,LSE_CNTR_FLG
      ,TRSP_CRR_MOD_CD2
      ,FEEDERVVD
      ,'N' DUP_FLG
      ,SUBSTR(PRD_DIST, 1, INSTR(PRD_DIST, '/') - 1) LNK_DIST_DIV_CD
      ,SUBSTR(PRD_DIST, INSTR(PRD_DIST, '/') + 1) TTL_DIST
      ,NON_RT_STS_CD
  FROM (
    SELECT  SUBSTR(X.BKG_VVD_IB, 1, INSTR(X.BKG_VVD_IB, '^', 1, 1) - 1) AS IB_VVD_CD
           ,SUBSTR(X.BKG_VVD_OB, 1, INSTR(X.BKG_VVD_OB, '^', 1, 1) - 1) AS OB_VVD_CD
           ,X.CTRL_OFC_CD
           ,X.COP_NO
           ,(CASE WHEN X.EQ_NO = 'SMCU0000000' THEN ''
                  WHEN X.TRSP_BND_CD = 'O' AND X.TRSP_COST_DTL_MOD_CD  = 'DR' THEN ''
                  ELSE X.EQ_NO
            END) AS EQ_NO
           ,X.EQ_TPSZ_CD
           ,X.COST_ACT_GRP_SEQ
           ,X.COST_ACT_GRP_CD
           ,X.VNDR_SEQ
           ,DECODE(X.TRSP_COST_DTL_MOD_CD,'','CY',X.TRSP_COST_DTL_MOD_CD) AS TRSP_COST_DTL_MOD_CD
           ,X.TRSP_CRR_MOD_CD
           ,X.FM_NOD_CD
           ,X.FM_NOD_YD_NO AS FM_NOD_YARD
           ,X.TO_NOD_CD
           ,X.TO_NOD_YD_NO AS TO_NOD_YARD
           ,X.VIA_NOD_CD
           ,X.VIA_NOD_YD_NO AS VIA_NOD_YARD
           ,X.DOR_NOD_CD
           ,X.DOR_NOD_YD_NO AS DOR_NOD_YARD
           ,'' AS FM_NOD_CD2    -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS FM_NOD_YARD2  -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS TO_NOD_CD2    -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS TO_NOD_YARD2  -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS VIA_NOD_CD2   -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS VIA_NOD_YARD2 -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS DOR_NOD_CD2   -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS DOR_NOD_YARD2 -- java Adapter에서 데이타를 셋팅한다.
           ,TO_CHAR(X.N1ST_NOD_PLN_DT, 'YYYYMMDD'  )                              AS N1ST_NOD_PLN_DT
           ,TO_CHAR(X.N1ST_NOD_PLN_DT, 'HH24:MI:SS')                              AS N1ST_NOD_PLN_DT_HMS
           ,TO_CHAR(X.LST_NOD_PLN_DT, 'YYYYMMDD'  )                               AS LST_NOD_PLN_DT
           ,TO_CHAR(X.LST_NOD_PLN_DT, 'HH24:MI:SS')                               AS LST_NOD_PLN_DT_HMS
           , X.DOR_NOD_PLN_DT
           ,TO_CHAR(X.DOR_NOD_PLN_DT, 'YYYYMMDDHH24MISS')                         AS DOR_NOD_PLN
           ,X.TRO_SEQ
           ,X.TRO_SUB_SEQ
           ,DECODE(X.TRO_SEQ, NULL, 'N', 'Y') AS TRO_CNFM
           ,X.TRSP_BND_CD
           ,X.TRNS_RQST_OFC_CD
           ,X.TRNS_RQST_USR_ID
           ,X.TRNS_RQST_RSN
           ,X.RAIL_CMB_THRU_TP_CD
           ,X.BKG_RCVDE_TERM_CD
           ,X.BKG_NO
           ,X.POD_CONTI_CD
           ,X.FM_LOC_CONTI_CD
           ,X.CUST_NOMI_TRKR_FLG
           ,X.CUST_CNT_CD
           ,X.CUST_SEQ
           ,X.CNEE_CUST_CNT_CD
           ,X.CNEE_CUST_SEQ
           ,X.SHPR_CUST_CNT_CD
           ,X.SHPR_CUST_SEQ
           ,X.BL_NO
           ,X.BKG_CGO_TP_CD
           ,X.CGO_TP_CD
           ,SUBSTR(X.BKG_CNTR, 1, INSTR(X.BKG_CNTR, '^', 1, 1) - 1) AS PKGCODE
           ,X.TRNK_VVD_CD AS TRUNKVVD
           ,X.SLAN_CD
           ,X.POR_CD
           ,X.POL_CD
           ,X.POD_CD
           ,X.DEL_CD
           ,TO_DATE(SUBSTR(X.BDR_INFO, 1, INSTR(X.BDR_INFO, '^', 1, 1) - 1),'YYYYMMDDHH24MISS') AS BKG_BDR_DT -- SUBSTR의 첫번째 값
           ,SUBSTR(X.BDR_INFO, INSTR(X.BDR_INFO, '^', 1, 1) + 1) BKG_BDR_FLG -- SUBSTR의 두번째 값
           ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 1) AS SEALNO
           ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 2) AS SEALNO2
           ,TRIM(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 8) + 1, INSTR(X.BKG_CNTR, '^', 1, 9) - INSTR(X.BKG_CNTR, '^', 1, 8) - 1)) AS CNTR_WGT
           ,SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 2) + 1, INSTR(X.BKG_CNTR, '^', 1, 3) - INSTR(X.BKG_CNTR, '^', 1, 2) - 1) AS WGT_MEAS_UT_CD
           ,TO_NUMBER(TRIM(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 1) + 1, INSTR(X.BKG_CNTR, '^', 1, 2) - INSTR(X.BKG_CNTR, '^', 1, 1) - 1))) AS NOOFPKG
       
           ,CASE WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 3) + 1, INSTR(X.BKG_CNTR, '^', 1, 4) - INSTR(X.BKG_CNTR, '^', 1, 3) - 1) = 'Y' THEN 'DG'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 4) + 1, INSTR(X.BKG_CNTR, '^', 1, 5) - INSTR(X.BKG_CNTR, '^', 1, 4) - 1) = 'Y' THEN 'BB'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 5) + 1, INSTR(X.BKG_CNTR, '^', 1, 6) - INSTR(X.BKG_CNTR, '^', 1, 5) - 1) = 'Y' THEN 'AK'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 6) + 1, INSTR(X.BKG_CNTR, '^', 1, 7) - INSTR(X.BKG_CNTR, '^', 1, 6) - 1) = 'Y' THEN 'RF'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 7) + 1, INSTR(X.BKG_CNTR, '^', 1, 8) - INSTR(X.BKG_CNTR, '^', 1, 7) - 1) = 'Y' THEN 'RD'  
                ELSE ''                                                                 
            END AS SPCL_CGO_CNTR_TP_CD
           ,X.SHPR_CUST_NM
           ,X.CNEE_CUST_NM
           ,X.NTFY_CUST_NM
           ,X.SC_NO
           ,X.GEN_RFA_NO AS RFANO
           ,X.CMDT_CD
           , NVL((SELECT LPAD(NVL(V.PCK_TP_CD, ' '),2, ' ') || TO_CHAR(V.PCK_QTY)
                    FROM BKG_CNTR_MF_DESC V
                   WHERE V.BKG_NO = X.BKG_NO
                     AND V.CNTR_NO  = X.EQ_NO
                     AND V.CNTR_MF_SEQ = 1),
                 (SELECT REPLACE(W.CMDT_NM, CHR(13)||CHR(10)||CHR(9)||CHR(43), ' ') 
                    FROM MDM_COMMODITY W
                   WHERE W.CMDT_CD = X.CMDT_CD) 
                ) AS CMDT_NAME

           ,'' AS CGOR_FRT_PAY_IND_FLG
           ,'' AS CGOR_ORG_BL_RCVR_IND_FLG
           ,'' AS CGOR_CSTMS_ACPT_RE_IND_FLG           
           ,SUBSTR(X.MST_CNTR, 1, INSTR(X.MST_CNTR, '^', 1, 1) - 1) OWNR_CO_CD
           ,SUBSTR(X.MST_CNTR, INSTR(X.MST_CNTR, '^', 1, 1) + 1, INSTR(X.MST_CNTR, '^', 1, 2) - INSTR(X.MST_CNTR, '^', 1, 1) - 1) IMDT_EXT_FLG
           ,SUBSTR(X.MST_CNTR, INSTR(X.MST_CNTR, '^', 1, 2) + 1) LSTM_CD
           ,'' AS IBD_CSTMS_CLR_LOC_CD
           ,X.DOR_SVC_TP_CD
           ,X.INTER_RMK
           ,X.CRE_USR_ID
           ,X.UPD_USR_ID
           ,X.TRSP_SO_OFC_CTY_CD
           ,NVL(CASE WHEN X.TRSP_BND_CD = 'I' THEN SUBSTR(X.BKG_VVD_IB, INSTR(X.BKG_VVD_IB, '^', 1, 1) + 1, INSTR(X.BKG_VVD_IB, '^', 1, 2) - INSTR(X.BKG_VVD_IB, '^', 1, 1) - 1)
                     ELSE SUBSTR(X.BKG_VVD_OB, INSTR(X.BKG_VVD_OB, '^', 1, 1) + 1, INSTR(X.BKG_VVD_OB, '^', 1, 2) - INSTR(X.BKG_VVD_OB, '^', 1, 1) - 1)
                END,X.POD_CD) AS TRSP_NXT_PORT_CD
           ,TRS_CYDOOR_COMM_PKG.GET_MULTI_LST_LOC(X.FM_NOD_CD, X.TO_NOD_CD) AS LST_LOC_CD
           ,TRS_CYDOOR_COMM_PKG.GET_TRSP_COST_DTL_MOD_SEP(X.TRSP_COST_DTL_MOD_CD, X.FM_NOD_CD, X.TO_NOD_CD, X.TRSP_BND_CD) AS TRSP_COST_DTL_MOD_SEP
           ,X.CNTR_PKUP_NO
           ,TO_CHAR(X.AVAL_DT, 'YYYYMMDD')       AS AVAL_DT
           ,TO_CHAR(X.AVAL_DT, 'HH24:MI:SS')     AS AVAL_DT_HMS
           ,TO_CHAR(X.LST_FREE_DT, 'YYYYMMDD')   AS LST_FREE_DT
           ,TO_CHAR(X.LST_FREE_DT, 'HH24:MI:SS') AS LST_FREE_DT_HMS
           ,(SELECT DECODE(NVL(U.EQ_SUBST_CGO_QTY, 0), 0, U.CNTR_TPSZ_CD
                           ||' '||U.OP_CNTR_QTY, U.CNTR_TPSZ_CD||' '||U.OP_CNTR_QTY
                           ||'-SUB '||U.EQ_SUBST_CNTR_TPSZ_CD ||' '||U.EQ_SUBST_CGO_QTY
                          )
              FROM BKG_QUANTITY U
             WHERE U.BKG_NO       = X.BKG_NO
               AND U.CNTR_TPSZ_CD = X.EQ_TPSZ_CD) AS BKG_QTY
           ,X.TRSP_SO_STS_CD
           ,X.TRSP_SO_STS_NM
           ,CASE WHEN X.MST_LCL_CD = 'P'
                  AND SUBSTR(X.BDR_INFO, INSTR(X.BDR_INFO, '^', 1, 1) + 1) = 'N'
                  AND X.TRSP_BND_CD            = 'I'
                  AND X.TRSP_COST_DTL_MOD_CD   = 'DR'
                 THEN 'FALSE'
                 WHEN X.MST_LCL_CD = 'P'
                 THEN 'TRUE'
                 ELSE 'FALSE'
            END                      AS  CHK1
           ,(SELECT U.BKG_NO
               FROM SCE_COP_HDR U
              WHERE U.MST_COP_NO = X.COP_NO
                AND ROWNUM = 1) AS PRT_BKG_NO
           ,TO_CHAR(X.RAIL_CRE_DT, 'YYYY-MM-DD') AS RAIL_CRE_DT_DD
           ,TO_CHAR(X.RAIL_CRE_DT, 'HH24:MI:SS') AS RAIL_CRE_DT_HMS
           ,X.RAIL_TO_NOD_CD
           ,'' LSE_CNTR_FLG
           ,'' TRSP_CRR_MOD_CD2
           ,DG_INFO
           ,CASE WHEN X.TRSP_BND_CD = 'I' THEN SUBSTR(X.BKG_VVD_IB, 1, INSTR(X.BKG_VVD_IB, '^', 1, 1) - 1)
                 ELSE SUBSTR(X.BKG_VVD_OB, 1, INSTR(X.BKG_VVD_OB, '^', 1, 1) - 1)
            END AS FEEDERVVD           
           ,SUBSTR(X.HD_INFO, 1, INSTR(X.HD_INFO, '^', 1, 1) - 1) AS T_ACT_CUST_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 1) + 1, INSTR(X.HD_INFO, '^', 1, 2) - INSTR(X.HD_INFO, '^', 1, 1) - 1) AS T_ACT_CUST_CNT_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 2) + 1, INSTR(X.HD_INFO, '^', 1, 3) - INSTR(X.HD_INFO, '^', 1, 2) - 1) AS T_ACT_CUST_SEQ
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 3) + 1, INSTR(X.HD_INFO, '^', 1, 4) - INSTR(X.HD_INFO, '^', 1, 3) - 1) AS T_PROC_CFM_IND_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 4) + 1, INSTR(X.HD_INFO, '^', 1, 5) - INSTR(X.HD_INFO, '^', 1, 4) - 1) AS T_CSTMS_CLR_NO
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 5) + 1, INSTR(X.HD_INFO, '^', 1, 6) - INSTR(X.HD_INFO, '^', 1, 5) - 1) AS T_REP_CMDT_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 6) + 1, INSTR(X.HD_INFO, '^', 1, 7) - INSTR(X.HD_INFO, '^', 1, 6) - 1) AS T_REV_CURR_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 7) + 1, INSTR(X.HD_INFO, '^', 1, 8) - INSTR(X.HD_INFO, '^', 1, 7) - 1) AS T_TRSP_RQST_ORD_REV_AMT
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 8) + 1, INSTR(X.HD_INFO, '^', 1, 9) - INSTR(X.HD_INFO, '^', 1, 8) - 1) AS T_TRO_CFM_OFC_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1, 9) + 1, INSTR(X.HD_INFO, '^', 1,10) - INSTR(X.HD_INFO, '^', 1, 9) - 1) AS T_TRO_CFM_USR_ID
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,10) + 1, INSTR(X.HD_INFO, '^', 1,11) - INSTR(X.HD_INFO, '^', 1,10) - 1) AS T_TRO_CFM_UPD_DT
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,11) + 1, INSTR(X.HD_INFO, '^', 1,12) - INSTR(X.HD_INFO, '^', 1,11) - 1) AS T_TRO_CFM_REV_AMT
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,12) + 1, INSTR(X.HD_INFO, '^', 1,13) - INSTR(X.HD_INFO, '^', 1,12) - 1) AS T_TRO_CFM_CURR_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,13) + 1, INSTR(X.HD_INFO, '^', 1,14) - INSTR(X.HD_INFO, '^', 1,13) - 1) AS T_TRO_REP_CMDT_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,14) + 1, INSTR(X.HD_INFO, '^', 1,15) - INSTR(X.HD_INFO, '^', 1,14) - 1) AS T_TRSP_RQST_ORD_BND_CD
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,15) + 1, INSTR(X.HD_INFO, '^', 1,16) - INSTR(X.HD_INFO, '^', 1,15) - 1) AS T_TRSP_RQST_ORD_SEQ
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,16) + 1, INSTR(X.HD_INFO, '^', 1,17) - INSTR(X.HD_INFO, '^', 1,16) - 1) AS T_CNTR_WGT
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,17) + 1, INSTR(X.HD_INFO, '^', 1,18) - INSTR(X.HD_INFO, '^', 1,17) - 1) AS T_DCGO_SEQ
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,18) + 1, INSTR(X.HD_INFO, '^', 1,19) - INSTR(X.HD_INFO, '^', 1,18) - 1) AS T_RC_SEQ
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,19) + 1, INSTR(X.HD_INFO, '^', 1,20) - INSTR(X.HD_INFO, '^', 1,19) - 1) AS T_AWK_CGO_SEQ
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,20) + 1, INSTR(X.HD_INFO, '^', 1,21) - INSTR(X.HD_INFO, '^', 1,20) - 1) AS T_EXIST
           ,SUBSTR(X.HD_INFO, INSTR(X.HD_INFO, '^', 1,21) + 1, INSTR(X.HD_INFO, '^', 1,22) - INSTR(X.HD_INFO, '^', 1,21) - 1) AS T_TRSP_RQST_ORD_RMK

           ,SUBSTR(X.DTL_INFO, 1, INSTR(X.DTL_INFO, '^', 1, 1) - 1) AS T_DOR_ARR_DT
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 1) + 1,  INSTR(X.DTL_INFO, '^', 1, 2) -  INSTR(X.DTL_INFO, '^', 1, 1)  - 1) AS T_TRO_LOD_REF_NO
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 2) + 1,  INSTR(X.DTL_INFO, '^', 1, 3) -  INSTR(X.DTL_INFO, '^', 1, 2)  - 1) AS T_DOR_PST_CD 
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 3) + 1,  INSTR(X.DTL_INFO, '^', 1, 4) -  INSTR(X.DTL_INFO, '^', 1, 3)  - 1) AS T_DOR_DE_ADDR
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 4) + 1,  INSTR(X.DTL_INFO, '^', 1, 5) -  INSTR(X.DTL_INFO, '^', 1, 4)  - 1) AS T_FCTRY_NM
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 5) + 1,  INSTR(X.DTL_INFO, '^', 1, 6) -  INSTR(X.DTL_INFO, '^', 1, 5)  - 1) AS T_CNTC_PSON_PHN_NO
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 6) + 1,  INSTR(X.DTL_INFO, '^', 1, 7) -  INSTR(X.DTL_INFO, '^', 1, 6)  - 1) AS T_CNTC_PSON_NM
           ,SUBSTR(X.DTL_INFO, INSTR(X.DTL_INFO, '^', 1, 7) + 1,  INSTR(X.DTL_INFO, '^', 1, 8) -  INSTR(X.DTL_INFO, '^', 1, 7)  - 1) AS T_MLT_STOP_DE_FLG
           
           ,SUBSTR(X.CUST_INFO, 1, INSTR(X.CUST_INFO, '^', 1, 1) - 1) AS C_ACT_CUST_CD
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 1) + 1,  INSTR(X.CUST_INFO, '^', 1, 2) -  INSTR(X.CUST_INFO, '^', 1, 1)  - 1) AS C_ACT_CUST_CNT_CD  
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 2) + 1,  INSTR(X.CUST_INFO, '^', 1, 3) -  INSTR(X.CUST_INFO, '^', 1, 2)  - 1) AS C_ACT_CUST_SEQ     
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 3) + 1,  INSTR(X.CUST_INFO, '^', 1, 4) -  INSTR(X.CUST_INFO, '^', 1, 3)  - 1) AS C_DOR_PST_CD       
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 4) + 1,  INSTR(X.CUST_INFO, '^', 1, 5) -  INSTR(X.CUST_INFO, '^', 1, 4)  - 1) AS C_DOR_DE_ADDR      
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 5) + 1,  INSTR(X.CUST_INFO, '^', 1, 6) -  INSTR(X.CUST_INFO, '^', 1, 5)  - 1) AS C_FCTRY_NM         
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 6) + 1,  INSTR(X.CUST_INFO, '^', 1, 7) -  INSTR(X.CUST_INFO, '^', 1, 6)  - 1) AS C_CNTC_PSON_PHN_NO 
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 7) + 1,  INSTR(X.CUST_INFO, '^', 1, 8) -  INSTR(X.CUST_INFO, '^', 1, 7)  - 1) AS C_CNTC_PSON_FAX_NO 
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 8) + 1,  INSTR(X.CUST_INFO, '^', 1, 9) -  INSTR(X.CUST_INFO, '^', 1, 8)  - 1) AS C_CNTC_PSON_NM     
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1, 9) + 1,  INSTR(X.CUST_INFO, '^', 1,10) -  INSTR(X.CUST_INFO, '^', 1, 9)  - 1) AS C_ACT_CUST_ADDR_SEQ
           ,SUBSTR(X.CUST_INFO, INSTR(X.CUST_INFO, '^', 1,10) + 1,  INSTR(X.CUST_INFO, '^', 1,11) -  INSTR(X.CUST_INFO, '^', 1,10)  - 1) AS C_EXIST

   		   ,TRS_COMMON_PKG.GET_PRD_DISTANCE_FNC ( X.FM_NOD_CD || X.FM_NOD_YD_NO
               			                         ,X.TO_NOD_CD || X.TO_NOD_YD_NO
                                                 ,X.VIA_NOD_CD || X.VIA_NOD_YD_NO 
                                                 ,X.DOR_NOD_CD || X.DOR_NOD_YD_NO
                                                 ,X.TRSP_BND_CD
                                                 ,X.TRSP_COST_DTL_MOD_CD
								 				 ,X.TRSP_CRR_MOD_CD
                                                 ) PRD_DIST
        ,X.NON_RT_STS_CD        
    FROM  (SELECT TMP.*
                ,(SELECT NVL(IB.VSL_CD||IB.SKD_VOY_NO||IB.SKD_DIR_CD, ' ')||'^'||NVL(IB.POD_CD, ' ')||'^'||NVL(IB.VSL_PRE_PST_CD, ' ')||'^'
                    FROM BKG_VVD IB
                   WHERE IB.BKG_NO = TMP.BKG_NO
                     AND IB.POD_CD = TMP.FM_NOD_CD
                     AND ROWNUM = 1) BKG_VVD_IB
                ,(SELECT NVL(OB.VSL_CD||OB.SKD_VOY_NO||OB.SKD_DIR_CD, ' ')||'^'||NVL(OB.POD_CD, ' ')||'^'
                    FROM BKG_VVD OB
                   WHERE OB.BKG_NO = TMP.BKG_NO
                     AND OB.POL_CD = ( CASE WHEN TMP.TRSP_BND_CD <> 'O' THEN TMP.FM_NOD_CD
                                       ELSE TMP.TO_NOD_CD END )
                     AND ROWNUM = 1) BKG_VVD_OB
                ,(SELECT NVL(BKG_CNTR.PCK_TP_CD, ' ') || '^' || NVL(TO_CHAR(BKG_CNTR.PCK_QTY), ' ') || '^' || NVL(WGT_UT_CD, ' ')
                         || '^' || NVL(BKG_CNTR.DCGO_FLG , ' ') || '^' || NVL(BKG_CNTR.BB_CGO_FLG , ' ') || '^' || NVL(BKG_CNTR.AWK_CGO_FLG , ' ') 
                         || '^' || NVL(BKG_CNTR.RC_FLG , ' ') || '^' || NVL(BKG_CNTR.RD_CGO_FLG , ' ') || '^' || NVL(TO_CHAR(BKG_CNTR.CNTR_WGT) , ' ') || '^'
                    FROM BKG_CONTAINER BKG_CNTR
                   WHERE BKG_CNTR.BKG_NO  = TMP.BKG_NO
                     AND BKG_CNTR.CNTR_NO = TMP.EQ_NO ) BKG_CNTR
                ,(SELECT NVL(MST_CNTR.OWNR_CO_CD, ' ') || '^' || NVL(MST_CNTR.IMDT_EXT_FLG, ' ') || '^' || NVL(MST_CNTR.LSTM_CD, ' ')
                    FROM MST_CONTAINER MST_CNTR
                   WHERE MST_CNTR.CNTR_NO = TMP.EQ_NO) MST_CNTR
                ,(SELECT TO_CHAR(BDR_DT,'YYYYMMDDHH24MISS')||'^'||NVL(BDR_FLG,'N')
                    FROM BKG_BL_DOC DOC
                   WHERE DOC.BKG_NO = TMP.BKG_NO) BDR_INFO
                -- Door infomation 을 조회하기 위한 정보 조회
                ,(SELECT HD.ACT_CNT_CD||DECODE(HD.ACT_CUST_SEQ, 0, NULL, HD.ACT_CUST_SEQ)
                         ||'^'|| HD.ACT_CNT_CD
                         ||'^'|| DECODE(HD.ACT_CUST_SEQ, 0, NULL, HD.ACT_CUST_SEQ)
                         ||'^'|| HD.TRO_PROC_CD
                         ||'^'|| HD.CSTMS_CLR_NO
                         ||'^'|| HD.REP_CMDT_CD
                         ||'^'|| HD.CURR_CD
                         ||'^'|| TO_CHAR(CASE WHEN HD.ALL_IN_RT_CD = 'Y' THEN NVL(HD.TRNS_REV_AMT,0)
                                 WHEN HD.ALL_IN_RT_CD = 'N' THEN NVL(HD.NMF_TRNS_REV_AMT,0)
                                 WHEN HD.ALL_IN_RT_CD = 'A' THEN NVL(HD.TRNS_REV_AMT,0) + NVL(HD.ADD_REV_AMT,0)
                                 WHEN HD.ALL_IN_RT_CD = 'B' THEN NVL(HD.NMF_TRNS_REV_AMT,0) + NVL(HD.ADD_REV_AMT,0)
                                 ELSE 0
                                  END)                         
                         ||'^'|| HD.CFM_OFC_CD
                         ||'^'|| HD.CFM_USR_ID
                         ||'^'|| TO_CHAR(HD.CFM_DT,'YYYYMMDDHH24MISS')
                         ||'^'|| HD.CFM_REV_AMT
                         ||'^'|| HD.CFM_CURR_CD
                         ||'^'|| HD.REP_CMDT_CD
                         ||'^'|| HD.IO_BND_CD
                         ||'^'|| HD.TRO_SEQ
                         ||'^'|| HD.CGO_WGT
                         ||'^'|| HD.DCGO_SEQ
                         ||'^'|| HD.RC_SEQ
                         ||'^'|| HD.AWK_CGO_SEQ
                         ||'^'|| HD.BKG_NO
                         ||'^'|| REPLACE(HD.SPCL_INSTR_RMK, '^', ' ')
                         ||'^'
                    FROM BKG_EUR_TRO HD
                   WHERE HD.BKG_NO      = TMP.BKG_NO
                     AND HD.IO_BND_CD   = TMP.TRSP_BND_CD
                     AND HD.TRO_SEQ     = TMP.TRO_SEQ) HD_INFO
                ,(SELECT TO_CHAR(DCGO_SEQ)   
                    FROM BKG_EUR_TRO_DG_SEQ DG   
                   WHERE DG.BKG_NO  = TMP.BKG_NO  
                     AND DG.IO_BND_CD = TMP.TRSP_BND_CD   
                     AND DG.TRO_SEQ   = TMP.TRO_SEQ   
                     AND ROWNUM = 1 
                  ) DG_INFO
                ,DECODE(TMP.TRSP_BND_CD,'I',  (SELECT /*+ INDEX_DESC(DTL XPKBKG_EUR_TRO_DTL) */
                                                      TO_CHAR(DTL.ARR_DT,'YYYYMMDDHH24MISS')
                                                      ||'^'|| DTL.LOD_REF_NO
                                                      ||'^'|| DTL.DOR_ZIP_ID
                                                      ||CASE WHEN DTL.UPD_DT < (SELECT TO_DATE(ATTR_CTNT1, 'YYYYMMDDHH24MISS') 
									                                             FROM BKG_HRD_CDG_CTNT 
									                                            WHERE HRD_CDG_ID = 'EUR_TRO_ADDRESS') THEN
																	'^'|| TRIM(SUBSTR(DTL.DOR_ADDR,31,30))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,61,30))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,91,30))
			                                                      ||'^'|| TRIM(SUBSTR(DTL.DOR_ADDR,1,30))
														     ELSE
														            '^'|| TRIM(SUBSTR(DTL.DOR_ADDR,51,50))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,101,50))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,151,50))
                                                                  ||'^'|| TRIM(SUBSTR(DTL.DOR_ADDR,1,50))
														END		
                                                      ||'^'|| DTL.CNTC_PHN_NO
                                                      ||'^'|| DTL.CNTC_PSON_NM
                                                      ||'^'|| (CASE WHEN (SELECT COUNT(1)
                                                                   FROM BKG_EUR_TRO_DTL X
                                                                  WHERE X.BKG_NO      = DTL.BKG_NO
                                                                    AND X.IO_BND_CD   = DTL.IO_BND_CD
                                                                    AND X.TRO_SEQ     = DTL.TRO_SEQ) > 1 THEN 'Y'
                                                               ELSE '' END)
                                                      ||'^'
                                                FROM BKG_EUR_TRO_DTL DTL
                                               WHERE BKG_NO      = TMP.BKG_NO
                                                 AND IO_BND_CD   = TMP.TRSP_BND_CD
                                                 AND TRO_SEQ     = TMP.TRO_SEQ
                                                 AND DOR_ADDR_TP_CD = 'D'
                                                 AND ROWNUM = 1 )
                                          ,  (SELECT /*+ INDEX_ASC(DTL XPKBKG_EUR_TRO_DTL) */
                                                     TO_CHAR(DTL.ARR_DT,'YYYYMMDDHH24MISS')
                                                     ||'^'|| DTL.LOD_REF_NO
                                                     ||'^'|| DTL.DOR_ZIP_ID
                                                     ||CASE WHEN DTL.UPD_DT < (SELECT TO_DATE(ATTR_CTNT1, 'YYYYMMDDHH24MISS') 
									                                             FROM BKG_HRD_CDG_CTNT 
									                                            WHERE HRD_CDG_ID = 'EUR_TRO_ADDRESS') THEN
                                                          		  '^'|| TRIM(SUBSTR(DTL.DOR_ADDR,31,30))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,61,30))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,91,30))
                                                        		||'^'|| TRIM(SUBSTR(DTL.DOR_ADDR,1,30))
                                                            ELSE
														          '^'|| TRIM(SUBSTR(DTL.DOR_ADDR,51,50))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,101,50))||' '||TRIM(SUBSTR(DTL.DOR_ADDR,151,50))
                                                                ||'^'|| TRIM(SUBSTR(DTL.DOR_ADDR,1,50))
													   END	
                                                     ||'^'|| DTL.CNTC_PHN_NO
                                                     ||'^'|| DTL.CNTC_PSON_NM
                                                     ||'^'|| (CASE WHEN (SELECT COUNT(1)
                                                                   FROM BKG_EUR_TRO_DTL X
                                                                  WHERE X.BKG_NO      = DTL.BKG_NO
                                                                    AND X.IO_BND_CD   = DTL.IO_BND_CD
                                                                    AND X.TRO_SEQ     = DTL.TRO_SEQ) > 1 THEN 'Y'
                                                              ELSE '' END)
                                                     ||'^'
                                                FROM BKG_EUR_TRO_DTL DTL
                                               WHERE BKG_NO      = TMP.BKG_NO
                                                 AND IO_BND_CD   = TMP.TRSP_BND_CD
                                                 AND TRO_SEQ     = TMP.TRO_SEQ
                                                 AND DOR_ADDR_TP_CD = 'D'
                                                 AND ROWNUM = 1 )
                  ) AS DTL_INFO
                ,(SELECT ATH.ACT_CUST_CNT_CD||ATH.ACT_CUST_SEQ
                         ||'^'|| ATH.ACT_CUST_CNT_CD
                         ||'^'|| ATH.ACT_CUST_SEQ
                         ||'^'|| ATD.ACT_CUST_ZIP_CD
                         ||'^'|| REPLACE(ATD.ACT_CUST_ADDR, '^', ' ') 
                         ||'^'|| REPLACE(ATD.ACT_CUST_NM, '^', ' ')
                         ||'^'|| ATD.ACT_CUST_PHN_NO
                         ||'^'|| ATD.ACT_CUST_FAX_NO
                         ||'^'|| REPLACE(ATD.CNTC_PSON_NM, '^', ' ') 
                         ||'^'|| ATD.TRSP_ACT_CUST_SEQ
                         ||'^'|| ATH.TRSP_ACT_CUST_NO
                         ||'^'
                   FROM TRS_TRSP_USA_ACT_CUST        ATH
                       ,TRS_TRSP_USA_ACT_CUST_DTL    ATD
                  WHERE ATH.TRSP_ACT_CUST_NO = ATD.TRSP_ACT_CUST_NO
                    AND ATH.ACT_CUST_CNT_CD  = DECODE(TMP.TRSP_BND_CD, 'I', TMP.CNEE_CUST_CNT_CD, 'O', TMP.SHPR_CUST_CNT_CD )
                    AND ATH.ACT_CUST_SEQ     = DECODE(TMP.TRSP_BND_CD, 'I', TMP.CNEE_CUST_SEQ, 'O', TMP.SHPR_CUST_SEQ )
                    AND ATH.ACT_CUST_BND_CD  = TMP.TRSP_BND_CD
                    AND ATH.DOR_NOD_CD       = TMP.DOR_NOD_CD||TMP.DOR_NOD_YD_NO
                    AND ATD.DFLT_ACT_CUST_FLG = 'Y'
                    AND ATH.DELT_FLG = 'N'
                    AND ATD.DELT_FLG = 'N' ) AS CUST_INFO
                ,(SELECT BB.NON_RT_STS_CD
                    FROM BKG_BOOKING BB
                   WHERE BB.BKG_NO = TMP.BKG_NO
                     ) NON_RT_STS_CD
             FROM TRS_TRSP_SVC_ORD_TMP TMP
            WHERE TRSP_TMP_SEQ = @[trsp_tmp_seq]
          ) X
    ) XX
-- Provision 체크여부 체크일 경우 'UD' (TRO_MAPPING 데이타가 정확 할 경우엔 불표요한 구문(안정화되면 삭제해도 됨)
#if (${TroUnConfirmDoor} == 'UD')
    WHERE 1=1
#else
    WHERE T_PROC_CFM_IND_CD = DECODE(TRO_CNFM, 'Y', 'C', '')
#end
ORDER BY XX.N1ST_NOD_PLN_DT DESC			]]></sql>
			<params>
				<param name="trsp_tmp_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
