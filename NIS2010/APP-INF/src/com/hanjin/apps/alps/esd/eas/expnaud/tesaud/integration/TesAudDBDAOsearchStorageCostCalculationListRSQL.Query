<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesAudDBDAOsearchStorageCostCalculationListRSQL">
			<desc><![CDATA[searchStorageCostCalculationList]]></desc>
			<sql><![CDATA[
SELECT 
	  RHQ
	  ,COST_OFC_CD
	  ,INV_OFC_CD
	  ,YD_CD
	  ,VNDR_SEQ
	  ,VNDR_LGL_ENG_NM
	  ,INV_NO
	  ,CRE_USR_NM
	  ,TML_SO_OFC_CTY_CD
	  ,TML_SO_SEQ
	  ,TML_SO_DTL_SEQ
	  ,CALC_COST_GRP_CD
	  ,CALC_TP_CD
	  ,VSL_CD
	  ,SKD_VOY_NO
	  ,SKD_DIR_CD
	  ,FINC_VSL_CD
	  ,FINC_SKD_VOY_NO
	  ,FINC_SKD_DIR_CD
	  ,IOC_CD
	  ,LANE_CD
	  ,IO_BND_CD
	  ,LGS_COST_CD
	  ,LGS_COST_CD2
	  ,ACCT_CD
	  ,ATB_DT
	  ,CNTR_NO
	  ,CNTR_TPSZ_CD
	  ,CALC_VOL_QTY
	  ,FM_TR_VOL_VAL
	  ,TO_TR_VOL_VAL
	  ,RVIS_VOL_QTY
	  ,DCGO_IND_CD
	  ,STAY_DYS
	  ,FREE_DYS
	  ,PAY_DYS
	  ,FREE_DY_XCLD_DYS
	  ,OVR_DYS
	  ,OVR_DYS2
	  ,TML_WRK_DY_CD
	  ,WRK_DT
	  ,STK_VOL_QTY
	  ,FP_TEU_QTY
	  ,INV_VOL_QTY
	  ,DIFF_VOL_QTY
	  ,OVR_VOL_QTY
	  ,VOL_TR_UT_CD
	  ,CTRT_RT
	  ,REF_VNDR_SEQ
	  ,CALC_AMT
	  ,INV_AMT
	  ,TML_CRR_CD
	  ,CALC_RMK
	  ,N3PTY_FLG
	  ,TML_AGMT_OFC_CTY_CD
	  ,TML_AGMT_SEQ
	  ,TML_AGMT_VER_NO
	  ,CURR_CD
	  ,INV_XCH_RT
	  ,REV_YRMON
	  ,ROW_COUNT
FROM  (
      SELECT	DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMUR', 'E', 'HAMUR', 'M', 'NYCNA', 'A', O.AR_HD_QTR_OFC_CD)) AS RHQ
      		, TES.COST_OFC_CD			-- Cost Office
      		, TES.INV_OFC_CD			-- Inv Office
      		, TES.YD_CD					-- Yard
      		, TES.VNDR_SEQ				-- S/P
      		, V.VNDR_LGL_ENG_NM			-- S/P NAME
      		, TES.INV_NO				-- INV No.
			, TES.CRE_USR_NM
      		, TES.TML_SO_OFC_CTY_CD
      		, TES.TML_SO_SEQ
      		, TES.TML_SO_DTL_SEQ
      		, TES.CALC_COST_GRP_CD		
      		, DECODE(TES.CALC_TP_CD, 'A', 'Auto Calculated Cost', 'S', 'Semi-Updated', 'M', 'Manual Calculated Cost') AS CALC_TP_CD
      		, TES.VSL_CD
      		, TES.SKD_VOY_NO
      		, TES.SKD_DIR_CD
      		, TES.FINC_VSL_CD
      		, TES.FINC_SKD_VOY_NO
      		, TES.FINC_SKD_DIR_CD
      		, TES.IOC_CD
      		, TES.LANE_CD
      		, TES.IO_BND_CD				-- I/O
      		, TES.LGS_COST_CD			-- Cost Code
      		, TES.LGS_COST_CD2
      		, TES.ACCT_CD
      		, TES.ATB_DT
      		, TES.CNTR_NO				-- CNTR No.
      		, TES.CNTR_TPSZ_CD			-- Type/Size
      		, TES.CALC_VOL_QTY			-- 
      		, TES.FM_TR_VOL_VAL
      		, TES.TO_TR_VOL_VAL
      		, TES.RVIS_VOL_QTY			-- 
      		, TES.DCGO_IND_CD			-- DG.
      		, TES.STAY_DYS				-- Stay Days
      		, TES.FREE_DYS				-- F/Days
      		, TES.PAY_DYS				-- Paid Days
      		, TES.FREE_DY_XCLD_DYS		-- Exclude Days
      		, TES.OVR_DYS				-- Over Days
      		, TES.OVR_DYS2
      		, TES.TML_WRK_DY_CD
      		, TES.WRK_DT
      		, TES.STK_VOL_QTY			-- (FP) Stacking Vol
      		, TES.FP_TEU_QTY			-- (FP) Free Pool
      		, TES.INV_VOL_QTY			-- (FP) Vol. by Invoice
      		, TES.DIFF_VOL_QTY			-- (FP) Differ
      		, TES.OVR_VOL_QTY			-- (FP) Over Vol
      		, TES.VOL_TR_UT_CD			-- UOM
      		, TES.CTRT_RT				-- Rate
      		, TES.REF_VNDR_SEQ
      		, TES.CALC_AMT
      		, TES.INV_AMT				-- Amount
      		, TES.TML_CRR_CD
      		, TES.CALC_RMK				-- Remarks
      		, TES.N3PTY_FLG				-- 3rd Party
      		, TES.TML_AGMT_OFC_CTY_CD
      		, TES.TML_AGMT_SEQ
      		, TES.TML_AGMT_VER_NO
      		, TES.CURR_CD				-- AGMT Curr.
      		, TES.INV_XCH_RT			-- Exch. Rate
      		, TES.REV_YRMON        		-- Year Month
      		, ROW_NUMBER() OVER (ORDER BY TES.INV_NO ASC) AS ROW_NUM
      		, COUNT(TES.INV_NO) OVER() AS ROW_COUNT
      FROM	(SELECT
      				  H.INV_OFC_CD
      				, H.COST_OFC_CD
      				, H.YD_CD
      				, H.VNDR_SEQ
      				, H.INV_NO
      				, D.TML_SO_OFC_CTY_CD
      				, D.TML_SO_SEQ
      				, D.TML_SO_DTL_SEQ
      				, D.CALC_COST_GRP_CD
      				, D.CALC_TP_CD
      				, D.VSL_CD
      				, D.SKD_VOY_NO
      				, D.SKD_DIR_CD
      				, D.FINC_VSL_CD
      				, D.FINC_SKD_VOY_NO
      				, D.FINC_SKD_DIR_CD
      				, D.IOC_CD
      				, D.LANE_CD
      				, D.IO_BND_CD
      				, D.LGS_COST_CD
      				, D.LGS_COST_CD AS LGS_COST_CD2
      				, D.ACCT_CD
      				, D.ATB_DT
      				, D.CNTR_NO
      				, D.CNTR_TPSZ_CD
      				, D.CALC_VOL_QTY
      				, D.FM_TR_VOL_VAL
      				, D.TO_TR_VOL_VAL
      				, D.RVIS_VOL_QTY
      				, D.DCGO_IND_CD
      				, D.STAY_DYS
      				, D.FREE_DYS
      				, D.PAY_DYS
      				, D.FREE_DY_XCLD_DYS
      				, D.OVR_DYS
      				, D.OVR_DYS OVR_DYS2
      				, D.TML_WRK_DY_CD
      				, D.WRK_DT
      				, D.STK_VOL_QTY
      				, D.FP_TEU_QTY
      				, D.INV_VOL_QTY
      				, D.DIFF_VOL_QTY
      				, D.OVR_VOL_QTY
      				, D.VOL_TR_UT_CD
      				, D.CTRT_RT
      				, D.REF_VNDR_SEQ
      				, D.CALC_AMT
      				, D.INV_AMT
      				, D.TML_CRR_CD
      				, D.CALC_RMK
      				, D.N3PTY_FLG
      				, D.TML_AGMT_OFC_CTY_CD
      				, D.TML_AGMT_SEQ
      				, D.TML_AGMT_VER_NO
      				, D.CURR_CD
      				, D.INV_XCH_RT
      				, D.REV_YRMON 
					, (SELECT USR_NM FROM COM_USER WHERE USR_ID = H.CRE_USR_ID) CRE_USR_NM                 
      		FROM	TES_TML_SO_HDR H
      				, TES_TML_SO_DTL D
					, AP_INV_HDR A
					, COM_APRO_CSR_DTL C
					, COM_APRO_RQST_HDR R
      		WHERE	1	= 1
      		AND		H.TML_SO_OFC_CTY_CD	= D.TML_SO_OFC_CTY_CD
      		AND		H.TML_SO_SEQ		= D.TML_SO_SEQ
      		AND		D.CALC_COST_GRP_CD	= @[calc_cost_grp_cd]
     		AND		H.TML_INV_TP_CD		= @[tml_inv_tp_cd]
			--// CHM-201642099 TES Intensive Audit 검색 조건 code 추가 (2016-06-16)
      		AND		H.CSR_NO			= A.CSR_NO(+)
			AND		H.CSR_NO			= C.CSR_NO(+)
			AND		C.APRO_RQST_NO		= R.APRO_RQST_NO(+)
			#if (${inv_date_type} == 'I') 	-- ISSUED DATE
			AND		H.ISS_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'R')	-- RECEIVED DATE
			AND		H.RCV_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'P')	-- INVOICE UPDATE DATE
			AND		H.LOCL_UPD_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'A')	-- ARRROVAL REQUESTED DATE
			AND		( (R.RQST_ST_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999 )
			OR		( A.CSR_APRO_STEP_ASGN_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999 ) )
			#elseif (${inv_date_type} == 'C')	-- CONFIRMED DATE
			AND		H.INV_CFM_DT BETWEEN TO_DATE(@[fm_prd_dt],'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt],'YYYY-MM-DD') + 0.99999
			#elseif (${inv_date_type} == 'U')	-- I/F STATUS UPDATED
			AND		A.IF_DT BETWEEN TO_DATE(@[fm_prd_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_prd_dt], 'YYYY-MM-DD') + 0.99999
			#end
  
            #if ( ${yd_cd} != '' ) 
            AND		H.YD_CD		 = @[yd_cd]
            #end
 
            #if (${calc_cost_grp_cd} =='SD' && ${io_bnd_cd} != 'A' ) 
            AND		D.IO_BND_CD		 	= @[io_bnd_cd] 	
            #end
            
            #if ( ${vndr_seq} != '' ) 
            AND		H.VNDR_SEQ		 = @[vndr_seq] 	
            #end	
            

            #if ( ${cost_ofc_cd} != '' )
            AND		H.COST_OFC_CD	= @[cost_ofc_cd] 
            #end
            

            #if ( ${inv_ofc_cd} != '' )
            AND		H.INV_OFC_CD	= @[inv_ofc_cd]
            #end
            

            #if ( ${tml_inv_sts_cd} != '' )
            AND		H.TML_INV_STS_CD = @[tml_inv_sts_cd]
            #end
            
  
            #if ( ${lgs_cost_cd} != '' )
          	AND		D.LGS_COST_CD		= @[lgs_cost_cd]
            #end
            
 
            #if ( ${calc_tp_cd} != '' ) 
            AND		D.CALC_TP_CD 		= 'M' 	
            #end
      		) TES 
      		, MDM_ORGANIZATION O
      		, MDM_LOCATION L
      		, MDM_VENDOR V
      WHERE	1	= 1
      AND		TES.INV_OFC_CD	= O.OFC_CD(+)
      AND		O.LOC_CD     	= L.LOC_CD(+)
      AND		TES.VNDR_SEQ	= V.VNDR_SEQ(+)
      ORDER BY DECODE(O.OFC_CD, 'DURBA', O.AR_HD_QTR_OFC_CD, 'DARBA', O.AR_HD_QTR_OFC_CD, 'MBABA', O.AR_HD_QTR_OFC_CD, 'AISBA', O.AR_HD_QTR_OFC_CD, DECODE(L.CONTI_CD, 'F', 'HAMUR', 'E', 'HAMUR', 'M', 'NYCNA', 'A', O.AR_HD_QTR_OFC_CD))
      		, INV_OFC_CD, COST_OFC_CD, YD_CD, VNDR_SEQ, INV_NO )
  WHERE    ROW_NUM >= (@[pagerows] * (@[page_no] - 1) + 1)
  AND    ROW_NUM <= (@[pagerows] * @[page_no])			]]></sql>
			<params>
				<param name="calc_cost_grp_cd" type="12" value="SD" out="N"/>
				<param name="tml_inv_tp_cd" type="12" value="OF" out="N"/>
				<param name="fm_prd_dt" type="12" value="20140301" out="N"/>
				<param name="to_prd_dt" type="12" value="20140310" out="N"/>
				<param name="yd_cd" type="12" value="KRPUSHN" out="N"/>
				<param name="io_bnd_cd" type="12" value="I" out="N"/>
				<param name="vndr_seq" type="12" value="180020" out="N"/>
				<param name="cost_ofc_cd" type="12" value="PUSBB" out="N"/>
				<param name="inv_ofc_cd" type="12" value="PUSBB" out="N"/>
				<param name="tml_inv_sts_cd" type="12" value="D" out="N"/>
				<param name="lgs_cost_cd" type="12" value="SRNDFL" out="N"/>
				<param name="pagerows" type="12" value="10000" out="N"/>
				<param name="page_no" type="12" value="1" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
