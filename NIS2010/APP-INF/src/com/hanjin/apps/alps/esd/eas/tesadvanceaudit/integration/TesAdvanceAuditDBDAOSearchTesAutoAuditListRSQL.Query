<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesAdvanceAuditDBDAOSearchTesAutoAuditListRSQL">
			<desc><![CDATA[Auto Audit Batch 대상 목록 조회]]></desc>
			<sql><![CDATA[
SELECT	  INV_NO
		, VNDR_SEQ
		, EAS_EXPN_AUD_PKG.GET_RHQ_OFC_CD(INV_OFC_CD) AS RHQ_CD
		, INV_CFM_DT
		, TML_INV_TP_CD
		, CALC_COST_GRP_CD
		, VSL_CD 
		, SKD_VOY_NO
		, SKD_DIR_CD
		, IO_BND_CD 
		, TO_CHAR(
			ADD_MONTHS(
				TO_DATE( 
					(CASE	WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'IO' THEN MIN_MVMT_GATE_OUT_DT 
							WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'DT' AND MIN_MVMT_GATE_IN_DT IS NOT NULL THEN MIN_MVMT_GATE_IN_DT 
							WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'DT' AND MIN_MVMT_GATE_IN_DT IS NULL THEN MIN_MVMT_GATE_OUT_DT 
							WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'TP' THEN MIN_MVMT_GATE_OUT_DT 
							WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'SP' AND MIN_MVMT_GATE_IN_DT IS NOT NULL THEN MIN_MVMT_GATE_IN_DT 
							WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'SP' AND MIN_MVMT_GATE_IN_DT IS NULL THEN MIN_MVMT_GATE_OUT_DT 
							ELSE (CASE WHEN TO_DATE(TO_PRD_DT, 'YYYYMMDD') - TO_DATE(FM_PRD_DT, 'YYYYMMDD') > 45 THEN TO_CHAR(TO_DATE(TO_PRD_DT, 'YYYYMMDD') - 31, 'YYYYMMDD')
										ELSE FM_PRD_DT
									END)
					END),'YYYYMMDD')
				, -1)
			, 'YYYYMM') AS PRD_YM
		, (CASE WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'IO' THEN MIN_MVMT_GATE_OUT_DT 
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'DT' AND MIN_MVMT_GATE_IN_DT IS NOT NULL THEN MIN_MVMT_GATE_IN_DT 
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'DT' AND MIN_MVMT_GATE_IN_DT IS NULL THEN MIN_MVMT_GATE_OUT_DT
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'TP' THEN MIN_MVMT_GATE_OUT_DT 
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'SP' AND MIN_MVMT_GATE_IN_DT IS NOT NULL THEN MIN_MVMT_GATE_IN_DT 
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'SP' AND MIN_MVMT_GATE_IN_DT IS NULL THEN MIN_MVMT_GATE_OUT_DT
				ELSE (CASE WHEN TO_DATE(TO_PRD_DT, 'YYYYMMDD') - TO_DATE(FM_PRD_DT, 'YYYYMMDD') > 45 THEN TO_CHAR(TO_DATE(TO_PRD_DT, 'YYYYMMDD') - 31, 'YYYYMMDD')
							ELSE FM_PRD_DT
						END)
			END) AS FM_PRD_DT
		, (CASE WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'IO' THEN MAX_MVMT_GATE_OUT_DT
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'DT' AND MAX_MVMT_GATE_OUT_DT IS NOT NULL THEN MAX_MVMT_GATE_OUT_DT
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'SD' AND STO_DYS_IND_CD = 'DT' AND MAX_MVMT_GATE_IN_DT  IS NOT NULL THEN MAX_MVMT_GATE_IN_DT
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'TP' THEN MAX_MVMT_GATE_OUT_DT
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'SP' AND MAX_MVMT_GATE_OUT_DT IS NOT NULL THEN MAX_MVMT_GATE_OUT_DT
				WHEN CALC_TP_CD = 'A' AND CALC_COST_GRP_CD = 'TM' AND TML_CALC_IND_CD = 'SP' AND MAX_MVMT_GATE_IN_DT  IS NOT NULL THEN MAX_MVMT_GATE_IN_DT
				ELSE TO_PRD_DT 
			END) AS TO_PRD_DT
FROM	(
		SELECT	  H.INV_NO
				, H.VNDR_SEQ
				, H.INV_OFC_CD
				, TO_CHAR(H.INV_CFM_DT, 'YYYYMMDDHH24MISS') AS INV_CFM_DT
				, H.TML_INV_TP_CD
				, D.CALC_COST_GRP_CD
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE NULL END) AS VSL_CD
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE NULL END) AS SKD_VOY_NO
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE NULL END) AS SKD_DIR_CD
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE NULL END) AS IO_BND_CD
				, (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN H.FM_PRD_DT ELSE NULL END) AS FM_PRD_DT
				, (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN H.TO_PRD_DT ELSE NULL END) AS TO_PRD_DT
				, (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN TO_CHAR(MIN(MVMT_GATE_IN_DT),'YYYYMMDD') END) AS MIN_MVMT_GATE_IN_DT
				, (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN TO_CHAR(MAX(MVMT_GATE_IN_DT),'YYYYMMDD') END) AS MAX_MVMT_GATE_IN_DT
				, (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN TO_CHAR(MIN(MVMT_GATE_OUT_DT),'YYYYMMDD') END) AS MIN_MVMT_GATE_OUT_DT
				, (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN TO_CHAR(MAX(MVMT_GATE_OUT_DT),'YYYYMMDD') END) AS MAX_MVMT_GATE_OUT_DT
				, H.STO_DYS_IND_CD
				, H.TML_CALC_IND_CD
				, MIN(D.CALC_TP_CD) AS CALC_TP_CD
		FROM	TES_TML_SO_HDR H
				, TES_TML_SO_DTL D
				, TES_TML_SO_COST C
				, TES_TML_SO_CNTR_LIST E
		#if(${batch_tp_cd} == 'M')-- 실시간(5분) 배치
				, EAS_AUTO_AUD_BAT X
		#end
		WHERE	H.TML_SO_OFC_CTY_CD = D.TML_SO_OFC_CTY_CD
		AND		H.TML_SO_SEQ = D.TML_SO_SEQ
		AND		H.TML_SO_OFC_CTY_CD = E.TML_SO_OFC_CTY_CD(+)
		AND		H.TML_SO_SEQ = E.TML_SO_SEQ(+)
		AND		NVL(H.DELT_FLG, 'N') <> 'Y'
		AND		H.TML_INV_STS_CD <> 'R'
		AND		H.TML_INV_RJCT_STS_CD <> 'RJ'

		#if(${batch_tp_cd} == 'A')-- 2시간 배치 -> 1일전으로 수정
		AND		H.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')
		#end

		#if(${batch_tp_cd} == 'M')-- 실시간(5분) 배치
		AND		H.INV_NO			= X.INV_NO
		AND		H.VNDR_SEQ			= X.INV_VNDR_SEQ
		AND		H.INV_CFM_DT		= X.INV_CFM_DT
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE 'X' END) = NVL(X.VSL_CD, 'X')
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE 'X' END) = NVL(X.SKD_VOY_NO, 'X')
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE 'X' END) = NVL(X.SKD_DIR_CD, 'X')
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE 'X' END) = NVL(X.IO_BND_CD, 'X')
		AND		X.BAT_PROG_STS_CD	= 'P'
		AND		X.SUB_SYS_CD		= 'TES'
		#end

		#if(${batch_tp_cd} == 'E')-- 메뉴얼 기간 배치 (Period로 조회)
		AND		H.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYY-MM-DD') AND TO_DATE(@[s_to_dt], 'YYYY-MM-DD') + 0.99999
		AND		NOT EXISTS (SELECT	'X'
							FROM	EAS_TML_AUD X
							WHERE	X.INV_NO			= H.INV_NO
							AND		X.VNDR_SEQ			= H.VNDR_SEQ
							AND		X.INV_CFM_DT		= H.INV_CFM_DT
							)
		#end

		AND		D.LGS_COST_CD = C.LGS_COST_CD
		AND		C.EAS_AUD_FLG = 'Y'
		#if(${batch_tp_cd} != 'M') -- 실시간 배치가 아닌경우에 심사결과가 있는건은 제외
		AND		NOT EXISTS (SELECT	1
							FROM	EAS_TML_AUD A
							WHERE	A.INV_NO   = H.INV_NO
							AND		A.VNDR_SEQ = H.VNDR_SEQ
							AND		A.INV_CFM_DT = H.INV_CFM_DT
							AND		NVL(A.VSL_CD,'X')     = (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE 'X' END)
							AND		NVL(A.SKD_VOY_NO,'X') = (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE 'X' END)
							AND		NVL(A.SKD_DIR_CD,'X') = (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE 'X' END)
							AND		NVL(A.IO_BND_CD,'X')  = (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE 'X' END)
							AND		A.EXPN_AUD_STS_CD IN ('A', 'P', 'E')
							)
		#end
		GROUP BY H.INV_NO, H.VNDR_SEQ, H.INV_OFC_CD, H.INV_CFM_DT, H.TML_INV_TP_CD, D.CALC_COST_GRP_CD
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE NULL END)
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE NULL END) 
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE NULL END) 
				, (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE NULL END) 
				, H.FM_PRD_DT
				, H.TO_PRD_DT
				, H.STO_DYS_IND_CD
				, H.TML_CALC_IND_CD
		)
#if(${batch_tp_cd} != 'M') -- 실시간 배치가 아닌경우에 심사결과가 있는건은 제외
UNION
SELECT  DISTINCT A.INV_NO
		, A.VNDR_SEQ
		, EAS_EXPN_AUD_PKG.GET_RHQ_OFC_CD(H.INV_OFC_CD) AS RHQ_CD
		, TO_CHAR(A.INV_CFM_DT, 'YYYYMMDDHH24MISS') INV_CFM_DT
		, A.TML_INV_TP_CD
		, D.CALC_COST_GRP_CD
		, A.VSL_CD
		, A.SKD_VOY_NO
		, A.SKD_DIR_CD
		, A.IO_BND_CD
		, TO_CHAR(ADD_MONTHS(TO_DATE(A.FM_PRD_DT, 'YYYYMMDD'), -1), 'YYYYMM') AS PRD_YM
		, A.FM_PRD_DT
		, A.TO_PRD_DT
FROM	TES_TML_SO_HDR H
		, TES_TML_SO_DTL D
		, EAS_TML_AUD A
WHERE	A.INV_NO		= H.INV_NO
AND		A.VNDR_SEQ		= H.VNDR_SEQ
AND		A.INV_CFM_DT	= H.INV_CFM_DT
AND		A.VSL_CD		= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE NULL END)
AND		A.SKD_VOY_NO	= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE NULL END)
AND		A.SKD_DIR_CD	= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE NULL END)
AND		A.IO_BND_CD		= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE NULL END)
AND		H.TML_SO_OFC_CTY_CD 	= D.TML_SO_OFC_CTY_CD
AND		H.TML_SO_SEQ			= D.TML_SO_SEQ
AND		NVL(H.DELT_FLG, 'N') 	<> 'Y'
AND		H.TML_INV_STS_CD 		<> 'R'
AND		H.TML_INV_RJCT_STS_CD 	<> 'RJ'
AND		(A.BAT_VOL_RSLT_CD	= 'F' OR A.BAT_AMT_RSLT_CD	= 'F' OR A.BAT_ESTM_VOL_RSLT_CD = 'F')
AND		A.CRE_DT > TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 14 --// 14일내에 오류난 내역은 배치 재수행
#end			]]></sql>
			<params>
				<param name="to_datetime" type="12" value="" out="N"/>
				<param name="s_fm_dt" type="12" value="" out="N"/>
				<param name="s_to_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
