<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OndockRailChargeInvoiceManageDBDAOVerifyOndockRailChargeContainerListRSQL">
			<desc><![CDATA[VerifyOndockRailChargeContainerList]]></desc>
			<sql><![CDATA[
SELECT DECODE(A.CNTR_NO,NULL,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.EQ_NO,'CA',B.EQ_NO,C.EQ_NO),A.CNTR_NO) CNTR_NO
	  ,A.CNTR_TPSZ_CD
	  ,DECODE(A.CNTR_STY_CD,NULL,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.MT,'CA',B.MT,C.MT),A.CNTR_STY_CD) CNTR_STY_CD 
	  ,TO_CHAR(TO_DATE(DECODE(A.CNTR_NO,NULL,'',A.WRK_DT),'YYYY-MM-DD'),'YYYY-MM-DD') WRK_DT
	  ,A.VNDR_SEQ
	  ,A.YD_CD
	  ,A.RCV_DT
	  ,A.CNTR_RMK
--	  ,DECODE(A.DSCR_IND_CD,NULL,'HO',A.DSCR_IND_CD)      DSCR_IND_CD
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.VSL_CD,'CA',B.VSL_CD,C.VSL_CD) VSL_CD
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.SKD_VOY_NO,'CA',B.SKD_VOY_NO,C.SKD_VOY_NO) SKD_VOY_NO
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.SKD_DIR_CD,'CA',B.SKD_DIR_CD,C.SKD_DIR_CD) SKD_DIR_CD
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD,'CA',B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD,C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD) VVD_NO
--	  ,MAX(B.BKG_NO_SPLIT) BKG_NO_SPLIT
--	  ,MAX(B.BL_NO_CHK) BL_NO_CHK
--	  ,MAX(B.BL_NO_TP) BL_NO_TP
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',MAX(B.BKG_NO),'CA',MAX(B.BKG_NO),MAX(C.BKG_NO)) BKG_NO
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',MAX(B.BL_NO),'CA',MAX(B.BL_NO),MAX(C.BL_NO)) BL_NO
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.RC_FLG,'CA',B.RC_FLG,C.RC_FLG) RC_FLG
--	  ,DECODE(B.DCGO_CLSS_CD,NULL,'N',DECODE(SUBSTR(A.YD_CD,1,2),'US',B.DCGO_CLSS_CD,'CA',B.DCGO_CLSS_CD,C.DCGO_CLSS_CD)) ASDCGO_CLSS_CD
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',MAX(TO_CHAR(B.CLM_DT,'YYYY-MM-DD')),'CA',MAX(TO_CHAR(B.CLM_DT,'YYYY-MM-DD')),MAX(TO_CHAR(C.CLM_DT,'YYYY-MM-DD'))) CLM_DT
--	  ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.RAIL_BIL_DT,'CA',B.RAIL_BIL_DT,C.RAIL_BIL_DT) RAIL_BIL_DT
--	  ,CASE WHEN SUBSTR(A.DSCR_IND_CD,0,2) IN  ('DD','DP','HO','PD','NH','DB','DF') THEN 'DC' ELSE 'CO' END VRFY_RSLT_IND_CD
		, DECODE(A.DSCR_IND_CD, NULL, 'HO', 'NH', DECODE(D.BKG_NO, NULL, 'NH', 'CO'), A.DSCR_IND_CD) AS DSCR_IND_CD
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD, 'CA', B.VSL_CD, C.VSL_CD), D.VSL_CD), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD, 'CA', B.VSL_CD,C.VSL_CD)) AS VSL_CD
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_VOY_NO, 'CA', B.SKD_VOY_NO, C.SKD_VOY_NO), D.SKD_VOY_NO), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_VOY_NO, 'CA', B.SKD_VOY_NO, C.SKD_VOY_NO)) AS SKD_VOY_NO
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_DIR_CD, 'CA', B.SKD_DIR_CD, C.SKD_DIR_CD), D.SKD_DIR_CD), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_DIR_CD, 'CA', B.SKD_DIR_CD, C.SKD_DIR_CD)) AS SKD_DIR_CD
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, 'CA', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD), D.VSL_CD||D.SKD_VOY_NO||D.SKD_DIR_CD), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, 'CA', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD)) AS VVD_NO
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', MAX(B.BKG_NO), 'CA', MAX(B.BKG_NO), MAX(C.BKG_NO)), MAX(D.BKG_NO)), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', MAX(B.BKG_NO), 'CA', MAX(B.BKG_NO), MAX(C.BKG_NO))) AS BKG_NO
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', MAX(B.BL_NO), 'CA', MAX(B.BL_NO), MAX(C.BL_NO)), MAX(D.BL_NO)), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', MAX(B.BL_NO), 'CA', MAX(B.BL_NO), MAX(C.BL_NO))) AS BL_NO
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.FM_NOD_CD, 'CA', B.FM_NOD_CD, C.FM_NOD_CD), D.POL_NOD_CD) ) AS FM_NOD_CD
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.TO_NOD_CD, 'CA', B.TO_NOD_CD, C.TO_NOD_CD), D.POD_NOD_CD) ) AS TO_NOD_CD
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RC_FLG, 'CA', B.RC_FLG, C.RC_FLG), D.RC_FLG), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RC_FLG, 'CA', B.RC_FLG, C.RC_FLG)) AS RC_FLG
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(B.DCGO_CLSS_CD, NULL, 'N', DECODE(SUBSTR(A.YD_CD,1,2), 'US', B.DCGO_CLSS_CD, 'CA', B.DCGO_CLSS_CD, C.DCGO_CLSS_CD)), D.DCGO_CLSS_CD), DECODE(B.DCGO_CLSS_CD, NULL, 'N', DECODE(SUBSTR(A.YD_CD,1,2), 'US', B.DCGO_CLSS_CD, 'CA', B.DCGO_CLSS_CD, C.DCGO_CLSS_CD))) AS DCGO_CLSS_CD
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', MAX(TO_CHAR(B.CLM_DT, 'YYYY-MM-DD')), 'CA', MAX(TO_CHAR(B.CLM_DT, 'YYYY-MM-DD')), MAX(TO_CHAR(C.CLM_DT, 'YYYY-MM-DD'))), MAX(D.CLM_DT)), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', MAX(TO_CHAR(B.CLM_DT, 'YYYY-MM-DD')), 'CA', MAX(TO_CHAR(B.CLM_DT, 'YYYY-MM-DD')), MAX(TO_CHAR(C.CLM_DT, 'YYYY-MM-DD')))) AS CLM_DT
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RAIL_BIL_DT, 'CA', B.RAIL_BIL_DT, C.RAIL_BIL_DT), D.RAIL_BIL_DT), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RAIL_BIL_DT, 'CA', B.RAIL_BIL_DT, C.RAIL_BIL_DT)) AS RAIL_BIL_DT
		, CASE  WHEN SUBSTR(A.DSCR_IND_CD, 0, 2) = 'NH' AND D.BKG_NO IS NULL THEN 'DC'
				WHEN SUBSTR(A.DSCR_IND_CD, 0, 2) IN ('DD','DP','HO','PD', 'DB','DF') THEN 'DC' ELSE 'CO' END VRFY_RSLT_IND_CD
		, A.IO_BND_CD
FROM   ( SELECT P.CNTR_NO        CNTR_NO
    ,C.CNTR_TPSZ_CD  CNTR_TPSZ_CD
    ,DB.CNTR_RMK
    ,P.CNTR_STY_CD   CNTR_STY_CD
    ,P.VNDR_SEQ      VNDR_SEQ
    ,P.YD_CD         YD_CD
    ,P.RCV_DT        RCV_DT
    ,P.WRK_DT        WRK_DT
    ,P.TML_SO_TMP_SEQ TML_SO_TMP_SEQ
	,P.IO_BND_CD
    ,CASE WHEN LENGTH(DB.CNTR_RMK) > 1 THEN 'DB' -- 'Double Bill' Check
--                  ,CASE WHEN (( SELECT COUNT(*) -- 'Double Bill' Check
--                                  FROM    TES_TML_SO_HDR A,
--                                          TES_TML_SO_CNTR_LIST B
--                                  WHERE  A.TML_SO_OFC_CTY_CD  = B.TML_SO_OFC_CTY_CD
--                                  AND    A.TML_SO_SEQ         = B.TML_SO_SEQ
--                                  AND    A.VNDR_SEQ           = P.VNDR_SEQ
--                                  AND    A.YD_CD              = P.YD_CD
--                                  AND    A.TML_INV_TP_CD      = 'ON'
--                                  AND    NVL(A.DELT_FLG,'N')  <> 'Y'
--                                  AND    B.CNTR_NO            = P.CNTR_NO
--                                  AND    B.CNTR_STY_CD        = P.CNTR_STY_CD
--  -- 김기영 부장님 요청으로 double billing checking period를 현재 3개월에서 (+/-)7일로 수정 - 2007.07.16
--                                  AND    ABS(MONTHS_BETWEEN(P.RCV_DT,A.RCV_DT )) <= 0.25) > 0 ) THEN 'DB'
 WHEN SUBSTR(P.YD_CD ,1,2) IN ('US','CA') THEN --미주지역의 경우
     CASE WHEN ( SELECT COUNT(*) -- 'Not in SML Souce' Check
        FROM   TRS_TRSP_RAIL_BIL_ORD O, BKG_BOOKING B, BKG_DG_CGO D
               , SCE_COP_HDR H, SCE_COP_DTL D, MDM_ACTIVITY M
        WHERE  ( O.FM_NOD_CD = P.YD_CD  OR  O.TO_NOD_CD = P.YD_CD )
                                AND    NVL(D.ACT_DT,D.ESTM_DT) >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
                                      FROM   TES_FILE_IMP_TMP
                                      WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                      AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
                                AND    NVL(D.ACT_DT,D.ESTM_DT) <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
                                      FROM   TES_FILE_IMP_TMP
                                      WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                      AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
        AND    NVL(O.DELT_FLG,'N') <> 'Y'
        AND    O.EQ_NO             = P.CNTR_NO
        AND    O.BKG_NO            = B.BKG_NO(+)
        --AND    O.BKG_NO_SPLIT      = B.BKG_NO_SPLIT(+)
        AND    B.BKG_STS_CD IN ('F','W')
        AND    O.BKG_NO            = D.BKG_NO(+)
        --AND    O.BKG_NO_SPLIT      = D.BKG_NO_SPLIT(+) 
                                AND    O.COP_NO = H.COP_NO
                                AND    H.COP_NO = D.COP_NO
                                AND    D.NOD_CD = P.YD_CD
                                AND    D.ACT_CD = M.ACT_CD
                                AND    M.NOD_TP_CD = 'R' --// RAIL RAMP
                                AND    M.BND_VSKD_SEQ_CD = P.IO_BND_CD --// I/O BND를 받으면 사용가능하다
                                AND    M.ACT_OP_TP_CD IN ('L','U') --// 미주지역인 경우에는 RAIL RAMP ACT중 LOAD/UNLOAD를 사용하고, 미주지역이 아닌 경우에는 Arrival/Departure를 사용한다.
								AND    P.CNTR_STY_CD = O.CGO_TP_CD
        ) = 0 THEN 'NH'
        ELSE
       (SELECT DECODE(CGO_TP_CD,'F','CO','DDF')
          FROM(
         SELECT MAX(O.BKG_NO), --MAX(O.BKG_NO_SPLIT), 
           P.CNTR_NO, O.CGO_TP_CD -- 'Discrepancy by Detail Data' Check
         FROM   TRS_TRSP_RAIL_BIL_ORD O, BKG_BOOKING B, BKG_DG_CGO D, TES_FILE_IMP_TMP P
                , SCE_COP_HDR H, SCE_COP_DTL D, MDM_ACTIVITY M
         WHERE  ( O.FM_NOD_CD = P.YD_CD   OR   O.TO_NOD_CD = P.YD_CD )
                                    AND    NVL(D.ACT_DT,D.ESTM_DT) >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
                                          FROM   TES_FILE_IMP_TMP
                                          WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                          AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
                                    AND    NVL(D.ACT_DT,D.ESTM_DT) <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
                                          FROM   TES_FILE_IMP_TMP
                                          WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                          AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
         AND    NVL(O.DELT_FLG,'N') <> 'Y'
         AND    O.EQ_NO             = P.CNTR_NO
         AND    O.BKG_NO            = B.BKG_NO(+)
         --AND    O.BKG_NO_SPLIT      = B.BKG_NO_SPLIT(+)
         AND    B.BKG_STS_CD IN ('F','W')
         AND    O.BKG_NO            = D.BKG_NO(+)
         --AND    O.BKG_NO_SPLIT      = D.BKG_NO_SPLIT(+)
         AND    P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    P.TML_SO_SEQ = @[tml_so_seq]
                                    AND    O.COP_NO = H.COP_NO
                                    AND    H.COP_NO = D.COP_NO
                                    AND    D.NOD_CD = P.YD_CD
                                    AND    D.ACT_CD = M.ACT_CD
                                    AND    M.NOD_TP_CD = 'R' --// RAIL RAMP
                                    AND    M.BND_VSKD_SEQ_CD = P.IO_BND_CD --// I/O BND를 받으면 사용가능하다
                                    AND    M.ACT_OP_TP_CD IN ('L','U') --// 미주지역인 경우에는 RAIL RAMP ACT중 LOAD/UNLOAD를 사용하고, 미주지역이 아닌 경우에는 Arrival/Departure를 사용한다.
									AND    P.CNTR_STY_CD = O.CGO_TP_CD
         GROUP BY P.CNTR_NO, O.CGO_TP_CD )
        WHERE P.CNTR_NO = CNTR_NO
        )
        END
 WHEN SUBSTR(P.YD_CD ,1,2) NOT IN ('US','CA') THEN --미주지역 외의 경우
	CASE WHEN ( SELECT COUNT(*) -- 'Not in SML Souce' Check    
        FROM   TRS_TRSP_SVC_ORD O, BKG_BOOKING B, BKG_DG_CGO D
               , SCE_COP_HDR H, SCE_COP_DTL D, MDM_ACTIVITY M, TRS_TRSP_WRK_ORD WO
        WHERE  ( O.FM_NOD_CD = P.YD_CD  OR  O.TO_NOD_CD = P.YD_CD )
                                AND    NVL(D.ACT_DT,D.ESTM_DT) >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
                                      FROM   TES_FILE_IMP_TMP
                                      WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                      AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
                                AND    NVL(D.ACT_DT,D.ESTM_DT) <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
                                      FROM   TES_FILE_IMP_TMP
                                      WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                      AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
        AND    NVL(O.DELT_FLG,'N') <> 'Y'
        AND    O.TRSP_SO_TP_CD      = 'Y'
        AND    O.TRSP_CRR_MOD_CD    IN ('RD','TR','RT')
        AND    O.TRSP_COST_DTL_MOD_CD IN ('CY','DR')
        AND    O.EQ_NO             = P.CNTR_NO
        AND    O.BKG_NO            = B.BKG_NO(+)
        --AND    O.BKG_NO_SPLIT      = B.BKG_NO_SPLIT(+)
        AND    B.BKG_STS_CD IN ('F','W')
        AND    O.BKG_NO            = D.BKG_NO(+)
        --AND    O.BKG_NO_SPLIT      = D.BKG_NO_SPLIT(+) 
                                AND    O.COP_NO = H.COP_NO
                                AND    H.COP_NO = D.COP_NO
                                AND    D.NOD_CD = P.YD_CD
                                AND    D.ACT_CD = M.ACT_CD
								AND    WO.TRSP_WO_OFC_CTY_CD = O.TRSP_WO_OFC_CTY_CD(+)
								AND    WO.TRSP_WO_SEQ = O.TRSP_WO_SEQ(+)
                                AND    M.NOD_TP_CD = 'R' --// RAIL RAMP
                                AND    M.BND_VSKD_SEQ_CD = P.IO_BND_CD --// I/O BND를 받으면 사용가능하다
                                AND    M.ACT_OP_TP_CD IN ('A','D') --// 미주지역인 경우에는 RAIL RAMP ACT중 LOAD/UNLOAD를 사용하고, 미주지역이 아닌 경우에는 Arrival/Departure를 사용한다.
                                AND    P.CNTR_STY_CD = O.CGO_TP_CD
        ) = 0 THEN 'NH' 
        else (SELECT DECODE(CGO_TP_CD,'F','CO','DDF')
          FROM(
         SELECT MAX(O.BKG_NO), --MAX(O.BKG_NO_SPLIT), 
           P.CNTR_NO, O.CGO_TP_CD -- 'Discrepancy by Detail Data' Check
         FROM   TRS_TRSP_SVC_ORD O, BKG_BOOKING B, BKG_DG_CGO D, TES_FILE_IMP_TMP P
                , SCE_COP_HDR H, SCE_COP_DTL D, MDM_ACTIVITY M, TRS_TRSP_WRK_ORD WO
         WHERE  ( O.FM_NOD_CD = P.YD_CD   OR   O.TO_NOD_CD = P.YD_CD )
                                    AND    NVL(D.ACT_DT,D.ESTM_DT) >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
                                          FROM   TES_FILE_IMP_TMP
                                          WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                          AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
                                    AND    NVL(D.ACT_DT,D.ESTM_DT) <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
                                          FROM   TES_FILE_IMP_TMP
                                          WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
                                          AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
         AND    NVL(O.DELT_FLG,'N') <> 'Y'
         AND    O.TRSP_SO_TP_CD      = 'Y'
         AND    O.TRSP_CRR_MOD_CD    IN ('RD','TR','RT')
         AND    O.TRSP_COST_DTL_MOD_CD IN ('CY','DR')
         AND    O.EQ_NO             = P.CNTR_NO
         AND    O.BKG_NO            = B.BKG_NO(+)
         --AND    O.BKG_NO_SPLIT      = B.BKG_NO_SPLIT(+)
         AND    B.BKG_STS_CD IN ('F','W')
         AND    O.BKG_NO            = D.BKG_NO(+)
         --AND    O.BKG_NO_SPLIT      = D.BKG_NO_SPLIT(+)
         AND    P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    P.TML_SO_SEQ = @[tml_so_seq]
                                    AND    O.COP_NO = H.COP_NO
                                    AND    H.COP_NO = D.COP_NO
                                    AND    D.NOD_CD = P.YD_CD
                                    AND    D.ACT_CD = M.ACT_CD
									AND    WO.TRSP_WO_OFC_CTY_CD = O.TRSP_WO_OFC_CTY_CD(+)
									AND    WO.TRSP_WO_SEQ = O.TRSP_WO_SEQ(+)
                                    AND    M.NOD_TP_CD = 'R' --// RAIL RAMP
                                    AND    M.BND_VSKD_SEQ_CD = P.IO_BND_CD --// I/O BND를 받으면 사용가능하다
                                    AND    M.ACT_OP_TP_CD IN ('A','D') --// 미주지역인 경우에는 RAIL RAMP ACT중 LOAD/UNLOAD를 사용하고, 미주지역이 아닌 경우에는 Arrival/Departure를 사용한다.
									AND    P.CNTR_STY_CD = O.CGO_TP_CD
         GROUP BY P.CNTR_NO, O.CGO_TP_CD )
        WHERE P.CNTR_NO = CNTR_NO
        )
        END
     END  DSCR_IND_CD
   FROM  TES_FILE_IMP_TMP P, MST_CONTAINER C,
      (SELECT /*+ USE_HASH(A) */ B.CNTR_NO, B.CNTR_STY_CD,'Double billing Inv : '|| MAX(A.INV_NO) CNTR_RMK
    FROM    TES_FILE_IMP_TMP P, 
      ( SELECT * 
       FROM TES_TML_SO_HDR
       WHERE UPD_DT>=(SELECT MIN(TO_DATE(WRK_DT,'YYYYMMDD')) FROM TES_FILE_IMP_TMP 
           WHERE TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd] AND TML_SO_SEQ = @[tml_so_seq])
      ) A, 
      TES_TML_SO_CNTR_LIST B
    WHERE  P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
    AND    P.TML_SO_SEQ = @[tml_so_seq]
    AND    P.VNDR_SEQ           = A.VNDR_SEQ
    AND    P.YD_CD              = A.YD_CD
    AND    A.TML_INV_TP_CD      = 'ON'
    AND    NVL(A.DELT_FLG,'N')  <> 'Y'
    AND    A.TML_SO_OFC_CTY_CD  = B.TML_SO_OFC_CTY_CD
    AND    A.TML_SO_SEQ         = B.TML_SO_SEQ
    AND    P.CNTR_NO            = B.CNTR_NO
    AND    P.CNTR_STY_CD        = B.CNTR_STY_CD
    AND    ABS(MONTHS_BETWEEN(TO_DATE(P.WRK_DT,'YYYYMMDD'),B.RAIL_BIL_DT )) <= 0.25
    GROUP BY B.CNTR_NO, B.CNTR_STY_CD
    ) DB
   WHERE P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
   AND   P.TML_SO_SEQ        = @[tml_so_seq]
   AND   P.CNTR_NO = DB.CNTR_NO(+)
   AND   P.CNTR_STY_CD = DB.CNTR_STY_CD(+)
   AND   P.CNTR_NO           = C.CNTR_NO(+) ) A,
    ( SELECT  B.VSL_CD,
     B.SKD_VOY_NO,
     B.SKD_DIR_CD,
     O.BKG_NO,
     --O.BKG_NO_SPLIT,
     B.BL_NO,
     --B.BL_NO_CHK,
     --B.BL_NO_TP,
     O.EQ_NO,
     O.EQ_TPSZ_CD,
     O.CGO_TP_CD MT,
     O.FM_NOD_CD,
     O.TO_NOD_CD,
     P.TML_SO_TMP_SEQ,
     MIN(NVL(SUBSTR(D.IMDG_CLSS_CD,1,1),'N')) DCGO_CLSS_CD,
     NVL(B.RC_FLG,'N') RC_FLG,
     TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'YYYY-MM-DD') WK_DT,
     DECODE(DECODE(SUBSTR(P.YD_CD,1,5),B.POL_CD,'O','I'),'O',MIN(U.ARR_DT),MAX(V.ARR_DT)) CLM_DT,
     TO_CHAR(O.CRE_DT,'YYYY-MM-DD') RAIL_BIL_DT,
     DECODE(TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'DY'),'SAT','SA','SUN','SU','WD') DY,
    ( SELECT COUNT(*)
      FROM   DMT_HOLIDAY
      WHERE  TO_CHAR(HOL_DT,'YYYYMMDD') = TO_CHAR(P.WRK_DT,'YYYYMMDD')
      AND    CNT_CD = P.YD_CD
       ) HO
   FROM   TRS_TRSP_RAIL_BIL_ORD O, BKG_BOOKING B, BKG_DG_CGO D, SCE_CLM U, SCE_CLM V, TES_FILE_IMP_TMP P
                 , SCE_COP_HDR H, SCE_COP_DTL D, MDM_ACTIVITY M
   WHERE  P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
   AND    P.TML_SO_SEQ        = @[tml_so_seq]
   AND    ( O.FM_NOD_CD = P.YD_CD  OR O.TO_NOD_CD = P.YD_CD )
   AND    NVL(D.ACT_DT,D.ESTM_DT) >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
         FROM   TES_FILE_IMP_TMP
         WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
   AND    NVL(D.ACT_DT,D.ESTM_DT) <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
         FROM   TES_FILE_IMP_TMP
         WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
   AND    NVL(O.DELT_FLG,'N')  <> 'Y'
   AND    O.EQ_NO              = P.CNTR_NO
   AND    O.BKG_NO             = B.BKG_NO(+)
   --AND    O.BKG_NO_SPLIT       = B.BKG_NO_SPLIT(+)
   AND    B.BKG_STS_CD IN ('F','W')
   AND    O.BKG_NO             = D.BKG_NO(+)
   --AND    O.BKG_NO_SPLIT       = D.BKG_NO_SPLIT(+)
   AND    O.TRSP_SO_OFC_CTY_CD = U.TRSP_SO_OFC_CTY_CD(+)
   AND    O.TRSP_SO_SEQ        = U.TRSP_SO_SEQ(+)
   AND    O.EQ_NO              = U.CNTR_NO(+)
   AND    U.CLM_SGHT_CD(+)     = 'U'
   AND    O.TRSP_SO_OFC_CTY_CD = V.TRSP_SO_OFC_CTY_CD(+)
   AND    O.TRSP_SO_SEQ        = V.TRSP_SO_SEQ(+)
   AND    O.EQ_NO              = V.CNTR_NO(+)
   AND    V.CLM_SGHT_CD(+)     = 'V'
   AND    O.COP_NO = H.COP_NO
   AND    H.COP_NO = D.COP_NO
   AND    D.NOD_CD = P.YD_CD
         AND    D.ACT_CD = M.ACT_CD
         AND    M.NOD_TP_CD = 'R' --// RAIL RAMP
         AND    M.BND_VSKD_SEQ_CD = P.IO_BND_CD --// I/O BND를 받으면 사용가능하다
		 --// 미주지역인 경우에는 RAIL RAMP ACT중 LOAD/UNLOAD를 사용하고, 미주지역이 아닌 경우에는 Arrival/Departure를 사용한다.
         AND    (M.ACT_OP_TP_CD = DECODE(SUBSTR(P.YD_CD, 1, 2),'US','L','CA','L','A') OR M.ACT_OP_TP_CD = DECODE(SUBSTR(P.YD_CD, 1, 2),'US','U','CA','U','D'))
		 AND    P.CNTR_STY_CD = O.CGO_TP_CD
   GROUP BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, O.BKG_NO, --O.BKG_NO_SPLIT, 
    B.BL_NO, --B.BL_NO_CHK, B.BL_NO_TP,
      O.EQ_NO, O.EQ_TPSZ_CD, O.CGO_TP_CD, O.FM_NOD_CD, O.TO_NOD_CD, P.TML_SO_TMP_SEQ, P.WRK_DT, P.YD_CD, P.IO_BND_CD,
      B.POL_CD, O.CRE_DT, B.RC_FLG ) B,
(SELECT  B.VSL_CD,
     B.SKD_VOY_NO,
     B.SKD_DIR_CD,
     O.BKG_NO,
     B.BL_NO,
     O.EQ_NO,
     O.EQ_TPSZ_CD,
     O.CGO_TP_CD MT,
     O.FM_NOD_CD,
     O.TO_NOD_CD,
     P.TML_SO_TMP_SEQ,
     MIN(NVL(SUBSTR(D.IMDG_CLSS_CD,1,1),'N')) DCGO_CLSS_CD,
     NVL(B.RC_FLG,'N') RC_FLG,
     TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'YYYY-MM-DD') WK_DT,
     DECODE(DECODE(SUBSTR(P.YD_CD,1,5),B.POL_CD,'O','I'),'O',MIN(U.ARR_DT),MAX(V.ARR_DT)) CLM_DT,
     TO_CHAR(WO.LOCL_CRE_DT,'YYYY-MM-DD') RAIL_BIL_DT,
     DECODE(TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'DY'),'SAT','SA','SUN','SU','WD') DY,
    ( SELECT COUNT(*)
      FROM   DMT_HOLIDAY
      WHERE  TO_CHAR(HOL_DT,'YYYYMMDD') = TO_CHAR(P.WRK_DT,'YYYYMMDD')
      AND    CNT_CD = P.YD_CD
       ) HO
   FROM   TRS_TRSP_SVC_ORD O, BKG_BOOKING B, BKG_DG_CGO D, SCE_CLM U, SCE_CLM V, TES_FILE_IMP_TMP P
                 , SCE_COP_HDR H, SCE_COP_DTL D, MDM_ACTIVITY M, TRS_TRSP_WRK_ORD WO
   WHERE  P.TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
   AND    P.TML_SO_SEQ        = @[tml_so_seq]
   AND    ( O.FM_NOD_CD = P.YD_CD  OR O.TO_NOD_CD = P.YD_CD )
   AND    NVL(D.ACT_DT,D.ESTM_DT) >= ( SELECT TO_DATE(MIN(WRK_DT),'YYYYMMDD') - 7
         FROM   TES_FILE_IMP_TMP
         WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    TML_SO_SEQ        = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MIN 값
   AND    NVL(D.ACT_DT,D.ESTM_DT) <= ( SELECT TO_DATE(MAX(WRK_DT),'YYYYMMDD') + 7
         FROM   TES_FILE_IMP_TMP
         WHERE  TML_SO_OFC_CTY_CD = @[tml_so_ofc_cty_cd]
         AND    TML_SO_SEQ = @[tml_so_seq] )   -- FILE IMPORT한 WORKING DATE의 MAX 값
   AND    NVL(O.DELT_FLG,'N')  <> 'Y'
   AND    O.EQ_NO              = P.CNTR_NO
   AND    O.BKG_NO             = B.BKG_NO(+)
   AND    B.BKG_STS_CD IN ('F','W')
   AND    O.BKG_NO             = D.BKG_NO(+)
   AND    O.TRSP_SO_OFC_CTY_CD = U.TRSP_SO_OFC_CTY_CD(+)
   AND    O.TRSP_SO_SEQ        = U.TRSP_SO_SEQ(+)
   AND    O.EQ_NO              = U.CNTR_NO(+)
   AND    U.CLM_SGHT_CD(+)     = 'U'
   AND    O.TRSP_SO_TP_CD      = 'Y'
   AND    O.TRSP_CRR_MOD_CD    IN ('RD','TR','RT')
   AND    O.TRSP_COST_DTL_MOD_CD IN ('CY','DR')
   AND    O.TRSP_SO_OFC_CTY_CD = V.TRSP_SO_OFC_CTY_CD(+)
   AND    O.TRSP_SO_SEQ        = V.TRSP_SO_SEQ(+)
   AND    O.EQ_NO              = V.CNTR_NO(+)
   AND    V.CLM_SGHT_CD(+)     = 'V'
   AND    O.COP_NO = H.COP_NO
   AND    H.COP_NO = D.COP_NO
   AND    D.NOD_CD = P.YD_CD
         AND    D.ACT_CD = M.ACT_CD
		 AND    WO.TRSP_WO_OFC_CTY_CD = O.TRSP_WO_OFC_CTY_CD(+)
		 AND    WO.TRSP_WO_SEQ = O.TRSP_WO_SEQ(+)
         AND    M.NOD_TP_CD = 'R' --// RAIL RAMP
         AND    M.BND_VSKD_SEQ_CD = P.IO_BND_CD --// I/O BND를 받으면 사용가능하다
         --// 미주지역인 경우에는 RAIL RAMP ACT중 LOAD/UNLOAD를 사용하고, 미주지역이 아닌 경우에는 Arrival/Departure를 사용한다.
         AND    (M.ACT_OP_TP_CD = DECODE(SUBSTR(P.YD_CD, 1, 2),'US','L','CA','L','A') OR M.ACT_OP_TP_CD = DECODE(SUBSTR(P.YD_CD, 1, 2),'US','U','CA','U','D'))
		 AND    P.CNTR_STY_CD = O.CGO_TP_CD
   GROUP BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD, O.BKG_NO, B.BL_NO, 
      O.EQ_NO, O.EQ_TPSZ_CD, O.CGO_TP_CD, O.FM_NOD_CD, O.TO_NOD_CD, P.TML_SO_TMP_SEQ, P.WRK_DT, P.YD_CD, P.IO_BND_CD,
      B.POL_CD, WO.LOCL_CRE_DT, B.RC_FLG ) C
		, (
		-- 1) CNTR verify 결과가NH
		-- 2) F/M가Full
		-- 3) Outbound
		-- 4) US, CA, MX의 Yard
		SELECT	H.CNTR_NO
				, H.BKG_NO
				, B.BL_NO
				, B.VSL_CD
				, B.SKD_VOY_NO
				, B.SKD_DIR_CD
				, H.CNTR_TPSZ_CD
				, B.BKG_CGO_TP_CD AS MT
				, H.POL_NOD_CD
				, H.POD_NOD_CD
				, P.TML_SO_OFC_CTY_CD
				, P.TML_SO_SEQ
				, P.TML_SO_TMP_SEQ
				, MIN(NVL(SUBSTR(DC.IMDG_CLSS_CD, 1, 1), 'N')) AS DCGO_CLSS_CD
				, NVL(B.RC_FLG, 'N') AS RC_FLG
				, TO_CHAR(TO_DATE(P.WRK_DT, 'YYYYMMDD'), 'YYYY-MM-DD') AS WK_DT
				, TO_CHAR(NVL(D.ACT_DT, D.PLN_DT), 'YYYY-MM-DD') AS CLM_DT
				, TO_CHAR(NVL(D.ACT_DT, D.PLN_DT), 'YYYY-MM-DD') AS RAIL_BIL_DT
				, DECODE(TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'DY'),'SAT','SA','SUN','SU','WD') DY
		FROM	SCE_COP_HDR H
				, SCE_COP_DTL D
				, BKG_BOOKING B
				, BKG_DG_CGO DC
				, TES_FILE_IMP_TMP P
		WHERE	1	= 1
		AND		H.COP_NO	= D.COP_NO
		AND		H.BKG_NO	= DC.BKG_NO(+)
		AND		H.BKG_NO	= B.BKG_NO
		AND		H.CNTR_NO	= P.CNTR_NO	
		AND		TML_SO_OFC_CTY_CD	= @[tml_so_ofc_cty_cd]
		AND		TML_SO_SEQ			= @[tml_so_seq]
		AND		NVL(D.ACT_DT, D.ESTM_DT)  >= (
											SELECT	TO_DATE(MIN(WRK_DT), 'YYYYMMDD') - 7
											FROM	TES_FILE_IMP_TMP
											WHERE	TML_SO_OFC_CTY_CD	= @[tml_so_ofc_cty_cd]
											AND		TML_SO_SEQ			= @[tml_so_seq]
											)
		AND		NVL(D.ACT_DT, D.ESTM_DT)  <= (
											SELECT	TO_DATE(MAX(WRK_DT), 'YYYYMMDD') + 7
											FROM	TES_FILE_IMP_TMP
											WHERE	TML_SO_OFC_CTY_CD	= @[tml_so_ofc_cty_cd]
											AND		TML_SO_SEQ			= @[tml_so_seq]
											)
		AND		D.ACT_STS_MAPG_CD		= 'OC'
--		AND		SUBSTR(H.COP_RAIL_CHK_CD, 0, 1) = 'O' -- RAIL O/B
--		AND		B.BKG_CGO_TP_CD			= 'F'
        AND     B.BKG_STS_CD IN ('F','W')
		AND		SUBSTR(P.YD_CD, 0, 5)	= SUBSTR(D.NOD_CD, 0, 5)
		AND		SUBSTR(P.YD_CD, 1, 2)	IN ('US', 'CA', 'MX')
		GROUP BY H.CNTR_NO
				, H.BKG_NO
				, B.BL_NO
				, B.VSL_CD
				, B.SKD_VOY_NO
				, B.SKD_DIR_CD
				, H.CNTR_TPSZ_CD
				, B.BKG_CGO_TP_CD
				, H.POL_NOD_CD
				, H.POD_NOD_CD
				, P.TML_SO_OFC_CTY_CD
				, P.TML_SO_SEQ
				, P.TML_SO_TMP_SEQ
				, NVL(B.RC_FLG, 'N')
				, TO_CHAR(TO_DATE(P.WRK_DT,'YYYYMMDD'),'YYYY-MM-DD')
				, NVL(D.ACT_DT, D.PLN_DT)
				, DECODE(TO_CHAR(TO_DATE(P.WRK_DT, 'YYYYMMDD'), 'DY'),'SAT','SA','SUN','SU','WD')
		) D
WHERE A.CNTR_NO        = B.EQ_NO(+)
AND   A.TML_SO_TMP_SEQ = B.TML_SO_TMP_SEQ(+)
AND   A.CNTR_NO        = C.EQ_NO(+)
AND   A.TML_SO_TMP_SEQ = C.TML_SO_TMP_SEQ(+)
AND   A.CNTR_NO        = D.CNTR_NO(+)
AND   A.TML_SO_TMP_SEQ = D.TML_SO_TMP_SEQ(+)
GROUP BY DECODE(A.CNTR_NO,NULL, DECODE(SUBSTR(A.YD_CD,1,2),'US',B.EQ_NO,'CA',B.EQ_NO,C.EQ_NO),A.CNTR_NO)
--         ,A.CNTR_TPSZ_CD
--         ,DECODE(A.CNTR_STY_CD,NULL,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.MT,'CA',B.MT,C.MT),A.CNTR_STY_CD)
--         ,TO_CHAR(TO_DATE(DECODE(A.CNTR_NO,NULL,'',A.WRK_DT),'YYYY-MM-DD'),'YYYY-MM-DD')
--         ,A.VNDR_SEQ
--         ,A.YD_CD
--         ,A.RCV_DT
--         ,DECODE(A.DSCR_IND_CD,NULL,'HO',A.DSCR_IND_CD)
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.VSL_CD,    'CA',B.VSL_CD,C.VSL_CD)
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.SKD_VOY_NO,'CA',B.SKD_VOY_NO,C.SKD_VOY_NO)
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.SKD_DIR_CD,'CA',B.SKD_DIR_CD,C.SKD_DIR_CD)
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD,'CA',B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD,C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD)
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.FM_NOD_CD,'CA',B.FM_NOD_CD,C.FM_NOD_CD)   
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.TO_NOD_CD,'CA',B.TO_NOD_CD,C.TO_NOD_CD)    
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.RC_FLG,   'CA',B.RC_FLG,C.RC_FLG)
--         ,DECODE(B.DCGO_CLSS_CD,NULL,'N',B.DCGO_CLSS_CD)
--         ,DECODE(B.DCGO_CLSS_CD,NULL,'N',DECODE(SUBSTR(A.YD_CD,1,2),'US',B.DCGO_CLSS_CD,'CA',B.DCGO_CLSS_CD,C.DCGO_CLSS_CD))
--         ,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.RAIL_BIL_DT,'CA',B.RAIL_BIL_DT,C.RAIL_BIL_DT)    
--         ,A.DSCR_IND_CD, A.CNTR_RMK, A.IO_BND_CD
		, A.CNTR_TPSZ_CD
		, DECODE(A.CNTR_STY_CD,NULL,DECODE(SUBSTR(A.YD_CD,1,2),'US',B.MT,'CA',B.MT,C.MT),A.CNTR_STY_CD)
		, TO_CHAR(TO_DATE(DECODE(A.CNTR_NO,NULL,'',A.WRK_DT),'YYYY-MM-DD'),'YYYY-MM-DD')
		, A.VNDR_SEQ
		, A.YD_CD
		, A.RCV_DT
		, DECODE(A.DSCR_IND_CD, NULL, 'HO', 'NH', DECODE(D.BKG_NO, NULL, 'NH', 'CO'), A.DSCR_IND_CD)
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD, 'CA', B.VSL_CD, C.VSL_CD), D.VSL_CD), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD, 'CA', B.VSL_CD,C.VSL_CD))
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_VOY_NO, 'CA', B.SKD_VOY_NO, C.SKD_VOY_NO), D.SKD_VOY_NO), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_VOY_NO, 'CA', B.SKD_VOY_NO, C.SKD_VOY_NO))
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_DIR_CD, 'CA', B.SKD_DIR_CD, C.SKD_DIR_CD), D.SKD_DIR_CD), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.SKD_DIR_CD, 'CA', B.SKD_DIR_CD, C.SKD_DIR_CD))
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, 'CA', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD), D.VSL_CD||D.SKD_VOY_NO||D.SKD_DIR_CD), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, 'CA', B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD))
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.FM_NOD_CD, 'CA', B.FM_NOD_CD, C.FM_NOD_CD), D.POL_NOD_CD) )
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.TO_NOD_CD, 'CA', B.TO_NOD_CD, C.TO_NOD_CD), D.POD_NOD_CD) )
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RC_FLG, 'CA', B.RC_FLG, C.RC_FLG), D.RC_FLG), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RC_FLG, 'CA', B.RC_FLG, C.RC_FLG))
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(B.DCGO_CLSS_CD, NULL, 'N', DECODE(SUBSTR(A.YD_CD,1,2), 'US', B.DCGO_CLSS_CD, 'CA', B.DCGO_CLSS_CD, C.DCGO_CLSS_CD)), D.DCGO_CLSS_CD), DECODE(B.DCGO_CLSS_CD, NULL, 'N', DECODE(SUBSTR(A.YD_CD,1,2), 'US', B.DCGO_CLSS_CD, 'CA', B.DCGO_CLSS_CD, C.DCGO_CLSS_CD)))
		, DECODE(A.DSCR_IND_CD, 'NH', DECODE(D.BKG_NO, NULL, DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RAIL_BIL_DT, 'CA', B.RAIL_BIL_DT, C.RAIL_BIL_DT), D.RAIL_BIL_DT), DECODE(SUBSTR(A.YD_CD, 1, 2), 'US', B.RAIL_BIL_DT, 'CA', B.RAIL_BIL_DT, C.RAIL_BIL_DT))
		, A.DSCR_IND_CD, A.CNTR_RMK, A.IO_BND_CD, D.BKG_NO			]]></sql>
			<params>
				<param name="tml_so_ofc_cty_cd" type="12" value="" out="N"/>
				<param name="tml_so_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
