<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesAdvanceAuditDBDAOSearchVvdQtyRSQL">
			<desc><![CDATA[Batch VVD Quantity 조회]]></desc>
			<sql><![CDATA[
WITH ESTM_VVD AS (
	SELECT	H.YD_CD, D.VSL_CD, D.SKD_VOY_NO, D.SKD_DIR_CD, C.CNTR_STY_CD, D.IO_BND_CD, NVL(E.TS_FLG, 'N') TS_FLG
	FROM	TES_TML_SO_HDR H
		, TES_TML_SO_DTL D
		, TES_TML_SO_COST C
		, EAS_TML_AUTO_AUD_CRTE E
		#if(${batch_tp_cd} == 'M')
		, EAS_AUTO_AUD_BAT X
		#end
	WHERE	H.TML_SO_OFC_CTY_CD		= D.TML_SO_OFC_CTY_CD
	AND		H.TML_SO_SEQ			= D.TML_SO_SEQ
	AND		D.LGS_COST_CD			= C.LGS_COST_CD
	AND		D.LGS_COST_CD			= E.LGS_COST_CD
	AND		EAS_EXPN_AUD_PKG.GET_RHQ_OFC_CD(H.INV_OFC_CD) = E.AUD_OFC_CD
	AND		H.TML_INV_TP_CD			= 'TM'
	AND		NVL(H.DELT_FLG, 'N')	<> 'Y'
	AND		H.TML_INV_STS_CD		<> 'R'
	AND		H.TML_INV_RJCT_STS_CD	<> 'RJ'

	-- 2시간 배치 -> 1일전으로 수정
	#if(${batch_tp_cd} == 'A')
	AND		H.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')
	#end

	-- 실시간(5분) 배치
	#if(${batch_tp_cd} == 'M')
	AND		H.INV_NO			= X.INV_NO
	AND		H.VNDR_SEQ			= X.INV_VNDR_SEQ
	AND		H.INV_CFM_DT		= X.INV_CFM_DT
	AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE 'X' END) = NVL(X.VSL_CD, 'X')
	AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE 'X' END) = NVL(X.SKD_VOY_NO, 'X')
	AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE 'X' END) = NVL(X.SKD_DIR_CD, 'X')
	AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE 'X' END) = NVL(X.IO_BND_CD, 'X')
	AND		X.BAT_PROG_STS_CD	= 'P'
	AND		X.SUB_SYS_CD		= 'TES'
	#end

	-- 메뉴얼 기간 배치 (Period로 조회)
	#if(${batch_tp_cd} == 'E')
	AND		H.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYY-MM-DD') AND TO_DATE(@[s_to_dt], 'YYYY-MM-DD') + 0.99999
	AND		NOT EXISTS (SELECT	'X'
						FROM	EAS_TML_AUD X
						WHERE	X.INV_NO			= H.INV_NO
						AND		X.VNDR_SEQ			= H.VNDR_SEQ
						AND		X.INV_CFM_DT		= H.INV_CFM_DT
						)
	#end

	GROUP BY H.YD_CD, D.VSL_CD, D.SKD_VOY_NO, D.SKD_DIR_CD, C.CNTR_STY_CD, D.IO_BND_CD, NVL(E.TS_FLG, 'N')
	UNION 
	SELECT	H.YD_CD, D.VSL_CD, D.SKD_VOY_NO, D.SKD_DIR_CD, C.CNTR_STY_CD, D.IO_BND_CD, NVL(E.TS_FLG, 'N') TS_FLG
	FROM	TES_TML_SO_HDR H
		, TES_TML_SO_DTL D
		, EAS_TML_AUD A
		, TES_TML_SO_COST C
		, EAS_TML_AUTO_AUD_CRTE E
	WHERE	A.INV_NO	= H.INV_NO
	AND	A.VNDR_SEQ	= H.VNDR_SEQ
	AND	A.INV_CFM_DT	= H.INV_CFM_DT
	AND	A.VSL_CD	= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE NULL END)
	AND	A.SKD_VOY_NO	= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE NULL END)
	AND	A.SKD_DIR_CD	= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE NULL END)
	AND	A.IO_BND_CD	= (CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE NULL END)
	AND	A.FM_PRD_DT	= (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN H.FM_PRD_DT ELSE NULL END)
	AND	A.TO_PRD_DT	= (CASE WHEN H.TML_INV_TP_CD IN ('ST', 'OF') THEN H.TO_PRD_DT ELSE NULL END)
	AND	H.TML_SO_OFC_CTY_CD	= D.TML_SO_OFC_CTY_CD
	AND	H.TML_SO_SEQ		= D.TML_SO_SEQ
	AND	D.LGS_COST_CD		= C.LGS_COST_CD
	AND	D.LGS_COST_CD		= E.LGS_COST_CD
	AND	EAS_EXPN_AUD_PKG.GET_RHQ_OFC_CD(H.INV_OFC_CD) = E.AUD_OFC_CD
	AND	(A.BAT_VOL_RSLT_CD = 'F' OR A.BAT_AMT_RSLT_CD = 'F' OR A.BAT_ESTM_VOL_RSLT_CD = 'F')
	AND	A.CRE_DT > TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 14 --// 14일내에 오류난 내역은 배치 재수행
	)
	, SRC_M AS (
		-- 실항차 물량 집계
		SELECT	  AA.YD_CD
			, AA.VSL_CD
			, AA.SKD_VOY_NO
			, AA.SKD_DIR_CD            
			, AA.IO_BND_CD
			, AA.CNTR_TPSZ_CD
			, NVL(TRIM(AA.TS_FLG), 'N') AS TS_FLG
			, AA.FULL_MTY_CD
			, AA.CNTR_TTL_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,1)) AS DCGO_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,2)) AS RC_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,3)) AS DG_RC_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,4)) AS AWK_CGO_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,5)) AS BB_CGO_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,6)) AS AWK_BB_CGO_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,7)) AS HNGR_CGO_QTY
			, TO_NUMBER(BKG_GET_TOKEN_FNC(AA.SPE_QTY,8)) AS CFS_CGO_QTY
		FROM	(
			SELECT	/*+ USE_HASH (A B) */
				  A.YD_CD
				, A.CNTR_TPSZ_CD
				, A.FULL_MTY_CD
				, 'O' AS IO_BND_CD
				, A.TS_FLG
				, A.VSL_CD
				, A.SKD_VOY_NO
				, A.SKD_DIR_CD
				, SUM(A.OB_QTY) AS CNTR_TTL_QTY
				, (SELECT SUM(CASE WHEN Z.DCGO_FLG = 'Y' AND Z.RC_FLG = 'N' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Z.DCGO_FLG = 'N' AND Z.RC_FLG = 'Y' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Z.DCGO_FLG = 'Y' AND Z.RC_FLG = 'Y' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Z.AWK_CGO_FLG = 'Y' AND Z.BB_CGO_FLG = 'N' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Z.AWK_CGO_FLG = 'N' AND Z.BB_CGO_FLG = 'Y' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Z.AWK_CGO_FLG = 'Y' AND Z.BB_CGO_FLG = 'Y' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Z.HNGR_FLG = 'Y' THEN 1 ELSE 0 END)
                                   ||','||SUM(CASE WHEN Y.RCV_TERM_CD = 'S' THEN 1 ELSE 0 END)
				  FROM	BKG_VVD X
					, BKG_BOOKING Y
					, BKG_CONTAINER Z
				WHERE	X.BKG_NO	= Y.BKG_NO
                                AND	X.BKG_NO	= Z.BKG_NO
                                AND	X.VSL_CD	= A.VSL_CD
                                AND	X.SKD_VOY_NO	= A.SKD_VOY_NO
                                AND	X.SKD_DIR_CD	= A.SKD_DIR_CD
                                AND	Y.POL_CD	= SUBSTR(A.YD_CD, 1,5)
                                AND	Z.CNTR_TPSZ_CD	= A.CNTR_TPSZ_CD
				) AS SPE_QTY
			FROM	CIM_PORT_MTCH_BAK_SMRY A
				, ESTM_VVD B
			WHERE	A.YD_CD		= B.YD_CD
			AND	A.VSL_CD	= B.VSL_CD
			AND	A.SKD_VOY_NO	= B.SKD_VOY_NO
			AND	A.SKD_DIR_CD	= B.SKD_DIR_CD
			AND	A.FULL_MTY_CD	= B.CNTR_STY_CD
			AND	(CASE WHEN A.FULL_MTY_CD = 'F' AND NVL(A.TS_FLG,'N') = 'N' AND TRIM(A.INLND_SVC_MOD_CD) IS NOT NULL THEN A.FULL_MTY_CD
					WHEN A.FULL_MTY_CD = 'F' AND NVL(A.TS_FLG,'N') = 'Y' THEN A.FULL_MTY_CD
					WHEN A.FULL_MTY_CD = 'M' THEN A.FULL_MTY_CD
				END) = A.FULL_MTY_CD
			AND	A.TS_FLG	= B.TS_FLG
			AND	B.IO_BND_CD	= CASE WHEN A.OB_QTY > 0 THEN 'O' END
			AND	A.TGT_MVMT_DT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS'), -6), 'YYYYMMDD') AND TO_CHAR(TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS'), 'YYYYMMDD')
			GROUP BY A.YD_CD
				, A.CNTR_TPSZ_CD
				, A.FULL_MTY_CD
				, A.TS_FLG
				, A.VSL_CD
				, A.SKD_VOY_NO
				, A.SKD_DIR_CD
			UNION ALL
			SELECT	/*+ USE_HASH (A B) */
				  A.YD_CD
				, A.CNTR_TPSZ_CD
				, A.FULL_MTY_CD
				, 'I' AS IO_BND_CD
				, A.TS_FLG
				, A.VSL_CD
				, A.SKD_VOY_NO
				, A.SKD_DIR_CD
				, SUM(A.IB_QTY) AS CNTR_TTL_QTY
				,(SELECT SUM(CASE WHEN Z.DCGO_FLG = 'Y' AND Z.RC_FLG = 'N' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Z.DCGO_FLG = 'N' AND Z.RC_FLG = 'Y' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Z.DCGO_FLG = 'Y' AND Z.RC_FLG = 'Y' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Z.AWK_CGO_FLG = 'Y' AND Z.BB_CGO_FLG = 'N' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Z.AWK_CGO_FLG = 'N' AND Z.BB_CGO_FLG = 'Y' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Z.AWK_CGO_FLG = 'Y' AND Z.BB_CGO_FLG = 'Y' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Z.HNGR_FLG = 'Y' THEN 1 ELSE 0 END)
					||','||SUM(CASE WHEN Y.RCV_TERM_CD = 'S' THEN 1 ELSE 0 END)
				FROM	BKG_VVD X
					, BKG_BOOKING Y
					, BKG_CONTAINER Z
				WHERE	X.BKG_NO	= Y.BKG_NO
				AND	X.BKG_NO	= Z.BKG_NO
				AND	X.VSL_CD	= A.VSL_CD
				AND	X.SKD_VOY_NO	= A.SKD_VOY_NO
				AND	X.SKD_DIR_CD	= A.SKD_DIR_CD
				AND	Y.POD_CD	= SUBSTR(A.YD_CD, 1,5)
				AND	Z.CNTR_TPSZ_CD	= A.CNTR_TPSZ_CD
				) AS SPE_QTY
			FROM	CIM_PORT_MTCH_BAK_SMRY A
				, ESTM_VVD B
			WHERE	A.YD_CD      = B.YD_CD
			AND	A.VSL_CD     = B.VSL_CD
			AND	A.SKD_VOY_NO = B.SKD_VOY_NO
			AND	A.SKD_DIR_CD = B.SKD_DIR_CD
			AND	A.FULL_MTY_CD = B.CNTR_STY_CD
			AND	(CASE WHEN A.FULL_MTY_CD = 'F' AND NVL(A.TS_FLG,'N') = 'N' AND TRIM(A.INLND_SVC_MOD_CD) IS NOT NULL THEN A.FULL_MTY_CD
                                      WHEN A.FULL_MTY_CD = 'F' AND NVL(A.TS_FLG,'N') = 'Y' THEN A.FULL_MTY_CD
                                      WHEN A.FULL_MTY_CD = 'M' THEN A.FULL_MTY_CD
				END) = A.FULL_MTY_CD
			AND	A.TS_FLG = B.TS_FLG
			AND	B.IO_BND_CD = CASE WHEN A.IB_QTY > 0 THEN 'I' END
			AND	A.TGT_MVMT_DT BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS'), -6), 'YYYYMMDD') AND TO_CHAR(TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS'), 'YYYYMMDD')
			GROUP BY  A.YD_CD
				, A.CNTR_TPSZ_CD
				, A.FULL_MTY_CD
				, A.TS_FLG
				, A.VSL_CD
				, A.SKD_VOY_NO
				, A.SKD_DIR_CD
			) AA
		UNION ALL
		-- 공통항차 물량 집계
		SELECT	  H.YD_CD
				, D.VSL_CD
				, D.SKD_VOY_NO
				, D.SKD_DIR_CD
				, D.IO_BND_CD
				, NVL(D.CNTR_TPSZ_CD, 'XX') AS CNTR_TPSZ_CD
				, NVL(TRIM(E.TS_FLG), 'N') AS TS_FLG
				, C.CNTR_STY_CD AS FULL_MTY_CD
				, SUM(D.RVIS_VOL_QTY) AS CNTR_TTL_QTY
				, SUM((CASE WHEN DECODE(D.DCGO_IND_CD, 'N', 'N', 'Y') = 'Y' AND D.RC_FLG = 'N' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS DCGO_QTY
				, SUM((CASE WHEN DECODE(D.DCGO_IND_CD, 'N', 'N', 'Y') = 'N' AND D.RC_FLG = 'Y' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS RC_QTY
				, SUM((CASE WHEN DECODE(D.DCGO_IND_CD, 'N', 'N', 'Y') = 'Y' AND D.RC_FLG = 'Y' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS DG_RC_QTY
				, SUM((CASE WHEN E.SPCL_CGO_TP_CALC_CD = 'AK' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS AWK_CGO_QTY
				, SUM((CASE WHEN E.SPCL_CGO_TP_CALC_CD = 'BB' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS BB_CGO_QTY
				, SUM((CASE WHEN E.SPCL_CGO_TP_CALC_CD = 'BA' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS AWK_BB_CGO_QTY
				, SUM((CASE WHEN E.SPCL_CGO_TP_CALC_CD = 'GH' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS HNGR_CGO_QTY
				, SUM((CASE WHEN E.SPCL_CGO_TP_CALC_CD = 'CF' THEN D.RVIS_VOL_QTY ELSE 0 END)) AS CFS_CGO_QTY
		FROM	TES_TML_SO_HDR H
				, TES_TML_SO_DTL D
				, TES_TML_SO_COST C
				, EAS_TML_AUTO_AUD_CRTE E
				#if(${batch_tp_cd} == 'M')
				, EAS_AUTO_AUD_BAT X
				#end
		WHERE	H.TML_SO_OFC_CTY_CD		= D.TML_SO_OFC_CTY_CD
		AND		H.TML_SO_SEQ			= D.TML_SO_SEQ
		AND		D.LGS_COST_CD			= C.LGS_COST_CD                   
		AND		D.LGS_COST_CD			= E.LGS_COST_CD
		AND		EAS_EXPN_AUD_PKG.GET_RHQ_OFC_CD(H.INV_OFC_CD) = E.AUD_OFC_CD
		AND		H.TML_INV_TP_CD			= 'TM'
		AND		NVL(H.DELT_FLG, 'N')	<> 'Y'
		AND		H.TML_INV_STS_CD		<> 'R'
		AND		H.TML_INV_RJCT_STS_CD	<> 'RJ'
		AND		D.VSL_CD				= 'CNTC'
		AND		D.SKD_VOY_NO IN (SELECT X.SKD_VOY_NO FROM ESTM_VVD X WHERE X.VSL_CD = 'CNTC' GROUP BY X.SKD_VOY_NO)

		-- 2시간 배치 -> 1일전으로 수정
		#if(${batch_tp_cd} == 'A')
		AND		H.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')
		#end

		-- 실시간(5분) 배치
		#if(${batch_tp_cd} == 'M')
		AND		H.INV_NO			= X.INV_NO
		AND		H.VNDR_SEQ			= X.INV_VNDR_SEQ
		AND		H.INV_CFM_DT		= X.INV_CFM_DT
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.VSL_CD ELSE 'X' END) = NVL(X.VSL_CD, 'X')
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_VOY_NO ELSE 'X' END) = NVL(X.SKD_VOY_NO, 'X')
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.SKD_DIR_CD ELSE 'X' END) = NVL(X.SKD_DIR_CD, 'X')
		AND		(CASE WHEN H.TML_INV_TP_CD = 'TM' THEN D.IO_BND_CD ELSE 'X' END) = NVL(X.IO_BND_CD, 'X')
		AND		X.BAT_PROG_STS_CD	= 'P'
		AND		X.SUB_SYS_CD		= 'TES'
		#end

		-- 메뉴얼 기간 배치 (Period로 조회)
		#if(${batch_tp_cd} == 'E')
		AND		H.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYY-MM-DD') AND TO_DATE(@[s_to_dt], 'YYYY-MM-DD') + 0.99999
		AND		NOT EXISTS (SELECT	'X'
							FROM	EAS_TML_AUD X
							WHERE	X.INV_NO			= H.INV_NO
							AND		X.VNDR_SEQ			= H.VNDR_SEQ
							AND		X.INV_CFM_DT		= H.INV_CFM_DT
							)
		#end

		GROUP BY  H.YD_CD
			, D.VSL_CD
			, D.SKD_VOY_NO
			, D.SKD_DIR_CD
			, D.IO_BND_CD
			, NVL(D.CNTR_TPSZ_CD, 'XX')
			, NVL(TRIM(E.TS_FLG), 'N')
			, C.CNTR_STY_CD 
	)
	SELECT	  YD_CD
		, VSL_CD
		, SKD_VOY_NO
		, SKD_DIR_CD
		, IO_BND_CD
		, CNTR_TPSZ_CD
		, TS_FLG
		, FULL_MTY_CD
		, CNTR_TTL_QTY
		, DCGO_QTY
		, RC_QTY
		, DG_RC_QTY
		, AWK_CGO_QTY
		, BB_CGO_QTY
		, AWK_BB_CGO_QTY
		, HNGR_CGO_QTY
		, CFS_CGO_QTY
		, 'BATCH' AS CRE_USR_ID
		, SYSDATE AS CRE_DT
		, 'BATCH' AS UPD_USR_ID
		, SYSDATE AS UPD_DT
	FROM	SRC_M
	WHERE	CNTR_TPSZ_CD <> 'XX'
	UNION ALL
	SELECT	  YD_CD
		, VSL_CD
		, SKD_VOY_NO
		, SKD_DIR_CD
		, IO_BND_CD
		, 'XX' AS CNTR_TPSZ_CD
		, TS_FLG
		, FULL_MTY_CD
		, SUM(CNTR_TTL_QTY)
		, SUM(DCGO_QTY)
		, SUM(RC_QTY)
		, SUM(DG_RC_QTY)
		, SUM(AWK_CGO_QTY)
		, SUM(BB_CGO_QTY)
		, SUM(AWK_BB_CGO_QTY)
		, SUM(HNGR_CGO_QTY)
		, SUM(CFS_CGO_QTY)
		, 'BATCH' AS CRE_USR_ID
		, SYSDATE AS CRE_DT
		, 'BATCH' AS UPD_USR_ID
		, SYSDATE AS UPD_DT
	FROM	SRC_M
	GROUP BY  YD_CD
		, VSL_CD
		, SKD_VOY_NO
		, SKD_DIR_CD
		, IO_BND_CD
		, TS_FLG
		, FULL_MTY_CD			]]></sql>
			<params>
				<param name="to_datetime" type="12" value="" out="N"/>
				<param name="s_fm_dt" type="12" value="" out="N"/>
				<param name="s_to_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
