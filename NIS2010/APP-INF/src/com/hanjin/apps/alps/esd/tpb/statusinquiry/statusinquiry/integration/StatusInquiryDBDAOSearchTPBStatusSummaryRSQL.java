/*=========================================================
*Copyright(c) 2018 CyberLogitec
*@FileName : StatusInquiryDBDAOSearchTPBStatusSummaryRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2018.01.19
*@LastModifier : 
*@LastVersion : 1.0
* 2018.01.19 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.esd.tpb.statusinquiry.statusinquiry.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class StatusInquiryDBDAOSearchTPBStatusSummaryRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SearchTPBStatusSummary
	  * </pre>
	  */
	public StatusInquiryDBDAOSearchTPBStatusSummaryRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_if_rhq_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_if_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("s_if_ctrl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.esd.tpb.statusinquiry.statusinquiry.integration").append("\n"); 
		query.append("FileName : StatusInquiryDBDAOSearchTPBStatusSummaryRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if (${s_status} == 'S')---- 1. By Status" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT   O.RHQ IF_RHQ_CD" ).append("\n"); 
		query.append("       , O.OFC IF_OFC_CD" ).append("\n"); 
		query.append("       , NVL(A.CNT,0) CNT_A, NVL(A.AMT,0) AS AMT_A" ).append("\n"); 
		query.append("       , NVL(B.CNT,0) CNT_B, NVL(B.AMT,0) AS AMT_B" ).append("\n"); 
		query.append("       , NVL(C.CNT,0) CNT_C, NVL(C.AMT,0) AS AMT_C" ).append("\n"); 
		query.append("       , NVL(D.CNT,0) CNT_D, NVL(D.AMT,0) AS AMT_D" ).append("\n"); 
		query.append("       , NVL(E.CNT,0) CNT_E, NVL(E.AMT,0) AS AMT_E" ).append("\n"); 
		query.append("       , NVL(F.CNT,0) CNT_F, NVL(F.AMT,0) AS AMT_F" ).append("\n"); 
		query.append("       , NVL(G.CNT,0) CNT_G, NVL(G.AMT,0) AS AMT_G" ).append("\n"); 
		query.append("       , NVL(A.CNT,0)+NVL(B.CNT,0)+NVL(C.CNT,0)+NVL(D.CNT,0)+NVL(E.CNT,0)+NVL(F.CNT,0)+NVL(G.CNT,0) AS CNT_TOT" ).append("\n"); 
		query.append("       , NVL(A.AMT,0)+NVL(B.AMT,0)+NVL(C.AMT,0)+NVL(D.AMT,0)+NVL(E.AMT,0)+NVL(F.AMT,0)+NVL(G.AMT,0) AS AMT_TOT" ).append("\n"); 
		query.append("FROM     (" ).append("\n"); 
		query.append("           SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                  , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                  , OFC_CD AS OFC" ).append("\n"); 
		query.append("           FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("           WHERE    1 = 1" ).append("\n"); 
		query.append("           AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("           AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("           AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("           AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("           AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           UNION ALL" ).append("\n"); 
		query.append("           SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                  , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                  , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("           FROM     DUAL" ).append("\n"); 
		query.append("         ) O" ).append("\n"); 
		query.append("       , (" ).append("\n"); 
		query.append("           -- Initial Confirm. / O" ).append("\n"); 
		query.append("           SELECT   NVL(M.RHQ,'(TOTAL)') AS RHQ" ).append("\n"); 
		query.append("                  , NVL(M.OFC,'(TOTAL)') AS OFC" ).append("\n"); 
		query.append("                  , COUNT(0) AS CNT" ).append("\n"); 
		query.append("                  , SUM(TPB_GET_USD_AMT_FNC(A.OTS_AMT,A.CURR_CD,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(SYSDATE,-1),A.OFC_CD))) AS AMT" ).append("\n"); 
		query.append("           FROM     TPB_OTS_GRP A" ).append("\n"); 
		query.append("                  , TPB_OTS_GRP_STS C" ).append("\n"); 
		query.append("                  , (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                    ) M" ).append("\n"); 
		query.append("           WHERE    1 = 1" ).append("\n"); 
		query.append("           AND      A.N3PTY_NO = C.N3PTY_NO" ).append("\n"); 
		query.append("           AND      A.OFC_CD = M.OFC" ).append("\n"); 
		query.append("           AND      A.N3PTY_DELT_TP_CD IN ('N')" ).append("\n"); 
		query.append("           AND      A.N3PTY_BIL_TP_CD IN" ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                      SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD NOT IN ('JO') AND ACT_FLG = 'Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                      SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG = 'Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			          SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           AND      C.OTS_STS_LST_FLG = 'Y'" ).append("\n"); 
		query.append("           AND      C.OTS_STS_CD IN ('O')" ).append("\n"); 
		query.append("           AND      A.OFC_CD IN" ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           GROUP BY ROLLUP(M.RHQ, M.OFC)" ).append("\n"); 
		query.append("           HAVING GROUPING(M.RHQ) = 1 OR GROUPING(M.OFC)= 0" ).append("\n"); 
		query.append("         ) A" ).append("\n"); 
		query.append("       , (" ).append("\n"); 
		query.append("          -- Cancellation Invoice / M" ).append("\n"); 
		query.append("           SELECT   NVL(M.RHQ,'(TOTAL)') AS RHQ" ).append("\n"); 
		query.append("                  , NVL(M.OFC,'(TOTAL)') AS OFC" ).append("\n"); 
		query.append("                  , COUNT(0) AS CNT" ).append("\n"); 
		query.append("                  , SUM(TPB_GET_USD_AMT_FNC(A.OTS_AMT,A.CURR_CD,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(SYSDATE,-1),A.OFC_CD))) AS AMT" ).append("\n"); 
		query.append("           FROM     TPB_OTS_GRP A" ).append("\n"); 
		query.append("                  , TPB_OTS_GRP_STS C" ).append("\n"); 
		query.append("                  , (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                    ) M" ).append("\n"); 
		query.append("           WHERE    1 = 1" ).append("\n"); 
		query.append("           AND      A.N3PTY_NO = C.N3PTY_NO" ).append("\n"); 
		query.append("           AND      A.OFC_CD = M.OFC" ).append("\n"); 
		query.append("           AND      A.N3PTY_DELT_TP_CD IN ('N')" ).append("\n"); 
		query.append("           AND      A.N3PTY_BIL_TP_CD IN" ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                      SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD NOT IN ('JO') AND ACT_FLG = 'Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                      SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG = 'Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			          SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG = 'Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("           AND      c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("           AND      c.ots_sts_cd IN ('M')" ).append("\n"); 
		query.append("           AND      a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- INV Issued / I, N" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('I','N')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Bal. remained (ERP I/F) / L, A" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("			/* L(ERP I/F 되었으나 Balance Amount가 남아있는)상태도 종결로 처리함. */" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('A')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) d," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- ADJ. Requested / R" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('R')" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) e," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- ADJ. Rejected / J,K" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('J','K')" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) f," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Collection Agency & Legal Action / Y" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             AND c.ots_sts_cd IN ('Y')" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) g" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = d.rhq(+) AND o.ofc = d.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = e.rhq(+) AND o.ofc = e.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = f.rhq(+) AND o.ofc = f.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = g.rhq(+) AND o.ofc = g.ofc(+)" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#elseif (${s_status} == 'E') ---- 2. By Expense Type" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT o.rhq if_rhq_cd, o.ofc if_ofc_cd" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0) cnt_a, NVL(a.amt,0) amt_a" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0) cnt_b, NVL(b.amt,0) amt_b" ).append("\n"); 
		query.append("      ,NVL(c.cnt,0) cnt_c, NVL(c.amt,0) amt_c" ).append("\n"); 
		query.append(" 	  ,NVL(d.cnt,0) cnt_d, NVL(d.amt,0) amt_d" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0)+NVL(b.cnt,0)+NVL(c.cnt,0)+NVL(d.cnt,0) cnt_tot" ).append("\n"); 
		query.append("      ,NVL(a.amt,0)+NVL(b.amt,0)+NVL(c.amt,0)+NVL(d.amt,0) amt_tot" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("       ) o," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- TES" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y') /* 'L','A' close상태, 제외 */" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("             AND a.n3pty_expn_tp_cd = 'TES'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) a," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- TRS" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')  /* 'L','A' close상태, 제외 */" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("             AND a.n3pty_expn_tp_cd = 'TRS'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- MNR" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')  /* 'L','A' close상태, 제외 */" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("             AND a.n3pty_expn_tp_cd = 'MNR'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y') " ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c" ).append("\n"); 
		query.append("-- PSO [CHM-201222161-01]start-----------------------------" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("  (" ).append("\n"); 
		query.append("-- PSO" ).append("\n"); 
		query.append("    SELECT NVL(m.rhq, '(TOTAL)') rhq," ).append("\n"); 
		query.append("      NVL(m.ofc, '(TOTAL)') ofc ," ).append("\n"); 
		query.append("      COUNT(0) cnt ," ).append("\n"); 
		query.append("      SUM(TPB_GET_USD_AMT_FNC(a.ots_amt, a.curr_cd, TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate, -1), a.ofc_cd))) amt" ).append("\n"); 
		query.append("    FROM TPB_OTS_GRP a," ).append("\n"); 
		query.append("      TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("      (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                    ) m" ).append("\n"); 
		query.append("    WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("      AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("      AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("      AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("      AND c.ots_sts_cd IN ('O'," ).append("\n"); 
		query.append("          'M'," ).append("\n"); 
		query.append("          'I'," ).append("\n"); 
		query.append("          'N'," ).append("\n"); 
		query.append("          'R'," ).append("\n"); 
		query.append("          'J'," ).append("\n"); 
		query.append("          'K'," ).append("\n"); 
		query.append("          'Y') /* 'L','A' close????, ???? */" ).append("\n"); 
		query.append("      AND a.n3pty_expn_tp_cd = 'PSO'" ).append("\n"); 
		query.append("      AND a.ofc_cd IN (" ).append("\n"); 
		query.append("        SELECT ofc_cd ofc" ).append("\n"); 
		query.append("        FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("        WHERE n3pty_ofc_tp_cd='T'" ).append("\n"); 
		query.append("           #if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("              AND rhq_cd = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("           #end" ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("        SELECT '(TOTAL)' ofc" ).append("\n"); 
		query.append("        FROM DUAL )" ).append("\n"); 
		query.append("    GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("    HAVING GROUPING(m.rhq)=1" ).append("\n"); 
		query.append("      OR GROUPING(m.ofc)=0  ) d" ).append("\n"); 
		query.append("-- PSO [CHM-201222161-01]end-------------------------------      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append("--[CHM-201222161-01]start------  " ).append("\n"); 
		query.append("  AND o.rhq = d.rhq(+)" ).append("\n"); 
		query.append("  AND o.ofc = d.ofc(+)" ).append("\n"); 
		query.append("--[CHM-201222161-01]end--------" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#elseif (${s_status} == 'A') ---- 3. By Aging" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT o.rhq if_rhq_cd, o.ofc if_ofc_cd" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0) cnt_a, NVL(a.amt,0) amt_a" ).append("\n"); 
		query.append("      ,NVL(b.cnt,0) cnt_b, NVL(b.amt,0) amt_b" ).append("\n"); 
		query.append("      ,NVL(c.cnt,0) cnt_c, NVL(c.amt,0) amt_c" ).append("\n"); 
		query.append("      ,NVL(d.cnt,0) cnt_d, NVL(d.amt,0) amt_d" ).append("\n"); 
		query.append("      ,NVL(e.cnt,0) cnt_e, NVL(e.amt,0) amt_e" ).append("\n"); 
		query.append("      ,NVL(a.cnt,0)+NVL(b.cnt,0)+NVL(c.cnt,0)+NVL(d.cnt,0)+NVL(e.cnt,0) cnt_tot" ).append("\n"); 
		query.append("      ,NVL(a.amt,0)+NVL(b.amt,0)+NVL(c.amt,0)+NVL(d.amt,0)+NVL(e.amt,0) amt_tot" ).append("\n"); 
		query.append("  FROM (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("       ) o," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- in 30 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,0),a.ofc_cd))) amt        --[CHM-201322948]" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '30'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) a," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- 31~60 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,0),a.ofc_cd))) amt        --[CHM-201322948]" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '31'" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '60'" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) b," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- 61~90 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,0),a.ofc_cd))) amt        --[CHM-201322948]" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '61'" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '90'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) c," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- 91~180 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,0),a.ofc_cd))) amt        --[CHM-201322948]" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '91'" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) <= '180'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) d," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- over 180 days" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,0),a.ofc_cd))) amt        --[CHM-201322948]" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m" ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND c.ots_sts_lst_flg = 'Y'" ).append("\n"); 
		query.append("             --AND c.ots_sts_cd IN ('O','M','I','N','R','J','K','Y')                                                    -- 'L','A' close상태, 제외" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("/*	2009-02-17 O Wan-Ki      1.6 Status Summary - Aging Overdue별 집계쿼리보완. */" ).append("\n"); 
		query.append("             AND DECODE((SELECT COUNT(1) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no),0,TRUNC(SYSDATE - a.cfm_dt),TRUNC(SYSDATE-(SELECT MAX(cre_dt) FROM tpb_ots_grp_sts WHERE ots_sts_cd = 'T' AND n3pty_no = a.n3pty_no))) >= '181'" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( c.ots_sts_cd IN ('O','M','I','N','Y') OR ( c.ots_sts_cd IN ('R','J','K') AND EXISTS ( SELECT 0 FROM tpb_adj_sts e WHERE e.n3pty_no=a.n3pty_no AND e.n3pty_stl_tp_cd IN ('D','C','W') AND e.stl_sts_lst_flg = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND a.ofc_cd IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(m.rhq, m.ofc)" ).append("\n"); 
		query.append("          HAVING GROUPING(m.rhq)=1 OR GROUPING(m.ofc)=0" ).append("\n"); 
		query.append("       ) e" ).append("\n"); 
		query.append(" WHERE 1 = 1" ).append("\n"); 
		query.append("   AND o.rhq = a.rhq(+) AND o.ofc = a.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = b.rhq(+) AND o.ofc = b.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = c.rhq(+) AND o.ofc = c.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = d.rhq(+) AND o.ofc = d.ofc(+)" ).append("\n"); 
		query.append("   AND o.rhq = e.rhq(+) AND o.ofc = e.ofc(+)" ).append("\n"); 
		query.append(" ORDER BY o.seq, o.rhq, o.ofc" ).append("\n"); 
		query.append(" " ).append("\n"); 
		query.append("#elseif (${s_status} == 'C') ---- 4. Current Status" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT   O.RHQ AS IF_RHQ_CD" ).append("\n"); 
		query.append("       , O.OFC AS IF_OFC_CD" ).append("\n"); 
		query.append("       , NVL(A.CNT,0) CNT_A, NVL(A.AMT,0) AMT_A" ).append("\n"); 
		query.append("       , NVL(B.CNT,0) CNT_B, NVL(B.AMT,0) AMT_B" ).append("\n"); 
		query.append("       , NVL(C.CNT,0) CNT_C, NVL(C.AMT,0) AMT_C" ).append("\n"); 
		query.append("       , NVL(D.CNT,0) CNT_D, NVL(D.AMT,0) AMT_D" ).append("\n"); 
		query.append("       , NVL(E.CNT,0) CNT_E, NVL(E.AMT,0) AMT_E" ).append("\n"); 
		query.append("       , NVL(B.CNT,0)+NVL(C.CNT,0)+NVL(D.CNT,0)+NVL(E.CNT,0) CNT_TOT" ).append("\n"); 
		query.append("       , NVL(B.AMT,0)+NVL(C.AMT,0)+NVL(D.AMT,0)+NVL(E.AMT,0) AMT_TOT" ).append("\n"); 
		query.append("FROM     (" ).append("\n"); 
		query.append("           SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                  , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                  , OFC_CD" ).append("\n"); 
		query.append("           FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("           WHERE    1 = 1" ).append("\n"); 
		query.append("           AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("           AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("           AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("           AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("           AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           UNION ALL" ).append("\n"); 
		query.append("           SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                  , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                  , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("           FROM     DUAL" ).append("\n"); 
		query.append("         ) O" ).append("\n"); 
		query.append("       , (" ).append("\n"); 
		query.append("          -- Open" ).append("\n"); 
		query.append("          SELECT NVL(m.rhq,'(TOTAL)') rhq, NVL(m.ofc,'(TOTAL)') ofc" ).append("\n"); 
		query.append("                ,COUNT(0) cnt" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(a.ots_amt,a.curr_cd,TPB_GET_LCL_DATE_FNC(ADD_MONTHS(sysdate,-1),a.ofc_cd))) amt" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP a, TPB_OTS_GRP_STS c," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) m            " ).append("\n"); 
		query.append("           WHERE a.n3pty_no = c.n3pty_no" ).append("\n"); 
		query.append("             AND a.ofc_cd = m.ofc" ).append("\n"); 
		query.append("             AND a.n3pty_delt_tp_cd IN ('N')" ).append("\n"); 
		query.append("             AND a.n3pty_bil_tp_cd IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT n3pty_bil_tp_cd FROM tpb_n3rd_pty_bil_tp WHERE n3pty_bil_tp_cd NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' n3pty_bil_tp_cd FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG = 'Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND C.OTS_STS_LST_FLG = 'Y'" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD NOT IN ('D','E','L','A')" ).append("\n"); 
		query.append("#if (${s_exclude_roc_requested} == 'Y')" ).append("\n"); 
		query.append("             AND ( C.OTS_STS_CD IN ('O','M','I','N','Y') OR ( C.OTS_STS_CD IN ('R','J','K') AND EXISTS ( SELECT 0 FROM TPB_ADJ_STS E WHERE E.N3PTY_NO=A.N3PTY_NO AND E.N3PTY_STL_TP_CD IN ('D','C','W') AND E.STL_STS_LST_FLG = 'Y' ) ) )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("             AND A.OFC_CD IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(M.RHQ, M.OFC)" ).append("\n"); 
		query.append("          HAVING GROUPING(M.RHQ)=1 OR GROUPING(M.OFC)=0" ).append("\n"); 
		query.append("       ) A," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- CLOSED ERP I/F" ).append("\n"); 
		query.append("          SELECT NVL(M.RHQ,'(TOTAL)') RHQ, NVL(M.OFC,'(TOTAL)') OFC" ).append("\n"); 
		query.append("                ,COUNT(0) CNT" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(A.CLT_AMT,A.CURR_CD,TPB_GET_LCL_DATE_FNC(C.OTS_STS_CRE_DT,A.OFC_CD))) AMT" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP A, TPB_OTS_GRP_STS C," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) M" ).append("\n"); 
		query.append("           WHERE A.N3PTY_NO = C.N3PTY_NO" ).append("\n"); 
		query.append("             AND A.OFC_CD = M.OFC" ).append("\n"); 
		query.append("             AND A.N3PTY_DELT_TP_CD IN ('N')" ).append("\n"); 
		query.append("             AND A.N3PTY_BIL_TP_CD IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG = 'Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND C.OTS_STS_LST_FLG = 'Y'" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD IN ('E','L','A') -- ADD L A" ).append("\n"); 
		query.append("             AND ( A.ADJ_AMT IS NULL OR A.ADJ_AMT = 0 )" ).append("\n"); 
		query.append("             AND A.OFC_CD IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(M.RHQ, M.OFC)" ).append("\n"); 
		query.append("          HAVING GROUPING(M.RHQ)=1 OR GROUPING(M.OFC)=0" ).append("\n"); 
		query.append("       ) B," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Closed Write-Off" ).append("\n"); 
		query.append("          SELECT NVL(M.RHQ,'(TOTAL)') RHQ, NVL(M.OFC,'(TOTAL)') OFC" ).append("\n"); 
		query.append("                ,COUNT(0) CNT" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(A.ADJ_AMT,A.CURR_CD,TPB_GET_LCL_DATE_FNC(C.OTS_STS_CRE_DT,A.OFC_CD))) AMT" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP A, TPB_OTS_GRP_STS C," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) M" ).append("\n"); 
		query.append("           WHERE A.N3PTY_NO = C.N3PTY_NO" ).append("\n"); 
		query.append("             AND A.OFC_CD = M.OFC" ).append("\n"); 
		query.append("             AND A.N3PTY_DELT_TP_CD IN ('N')" ).append("\n"); 
		query.append("             AND A.N3PTY_BIL_TP_CD IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND C.OTS_STS_LST_FLG = 'Y'" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD IN ('E')" ).append("\n"); 
		query.append("             AND A.ADJ_AMT != 0" ).append("\n"); 
		query.append("             AND A.OFC_CD IN (" ).append("\n"); 
		query.append("                                SELECT OFC_CD OFC" ).append("\n"); 
		query.append("                                  FROM TPB_HNDL_OFC" ).append("\n"); 
		query.append("                                 WHERE N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                                   AND RHQ_CD = @[s_if_rhq_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                                   AND N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                                   AND OFC_CD = @[s_if_ofc_cd]     /* bind */" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                             UNION ALL" ).append("\n"); 
		query.append("                                SELECT '(TOTAL)' OFC" ).append("\n"); 
		query.append("                                  FROM DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(M.RHQ, M.OFC)" ).append("\n"); 
		query.append("          HAVING GROUPING(M.RHQ)=1 OR GROUPING(M.OFC)=0" ).append("\n"); 
		query.append("       ) C," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- Closed ROC" ).append("\n"); 
		query.append("          SELECT NVL(M.RHQ,'(TOTAL)') RHQ, NVL(M.OFC,'(TOTAL)') OFC" ).append("\n"); 
		query.append("                ,COUNT(0) CNT" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(A.OTS_AMT,A.CURR_CD,TPB_GET_LCL_DATE_FNC(C.OTS_STS_CRE_DT,A.OFC_CD))) AMT" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP A, TPB_OTS_GRP_STS C," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) M" ).append("\n"); 
		query.append("           WHERE A.N3PTY_NO = C.N3PTY_NO" ).append("\n"); 
		query.append("             AND A.OFC_CD = M.OFC" ).append("\n"); 
		query.append("             AND A.N3PTY_DELT_TP_CD IN ('N')" ).append("\n"); 
		query.append("             AND A.N3PTY_BIL_TP_CD IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD NOT IN ('JO') AND ACT_FLG='Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG = 'Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG = 'Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("             AND C.OTS_STS_LST_FLG = 'Y'" ).append("\n"); 
		query.append("             AND C.OTS_STS_CD IN ('E')" ).append("\n"); 
		query.append("             AND A.OFC_CD IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(M.RHQ, M.OFC)" ).append("\n"); 
		query.append("          HAVING GROUPING(M.RHQ)=1 OR GROUPING(M.OFC)=0" ).append("\n"); 
		query.append("       ) D," ).append("\n"); 
		query.append("       (" ).append("\n"); 
		query.append("          -- PROCESS CLOSE" ).append("\n"); 
		query.append("          SELECT NVL(M.RHQ,'(TOTAL)') RHQ, NVL(M.OFC,'(TOTAL)') OFC" ).append("\n"); 
		query.append("                ,COUNT(0) CNT" ).append("\n"); 
		query.append("                ,SUM(TPB_GET_USD_AMT_FNC(A.OTS_AMT,A.CURR_CD,TPB_GET_LCL_DATE_FNC(C.OTS_STS_CRE_DT,A.OFC_CD))) AMT" ).append("\n"); 
		query.append("            FROM TPB_OTS_GRP A, TPB_OTS_GRP_STS C," ).append("\n"); 
		query.append("                 (" ).append("\n"); 
		query.append("                      SELECT   0 AS SEQ" ).append("\n"); 
		query.append("                             , RHQ_CD AS RHQ" ).append("\n"); 
		query.append("                             , OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   999 AS SEQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS RHQ" ).append("\n"); 
		query.append("                             , '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                 ) M" ).append("\n"); 
		query.append("           WHERE A.N3PTY_NO = C.N3PTY_NO" ).append("\n"); 
		query.append("             AND A.OFC_CD = M.OFC" ).append("\n"); 
		query.append("             AND A.N3PTY_DELT_TP_CD IN ('C')" ).append("\n"); 
		query.append("             AND A.N3PTY_BIL_TP_CD IN (" ).append("\n"); 
		query.append("#if (${s_exclude_jo} == 'X') -- excluding JO" ).append("\n"); 
		query.append("	/* 2009-02-03 O Wan-Ki      1.5 Bill Type Code : MX 누락에 의한 보완 */" ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD NOT IN ('JO') AND ACT_FLG = 'Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'O') " ).append("\n"); 
		query.append("                                        SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE N3PTY_BIL_TP_CD IN ('JO') AND ACT_FLG='Y'" ).append("\n"); 
		query.append("#elseif (${s_exclude_jo} == 'A')" ).append("\n"); 
		query.append("			SELECT N3PTY_BIL_TP_CD FROM TPB_N3RD_PTY_BIL_TP WHERE ACT_FLG = 'Y' UNION ALL SELECT 'MX' N3PTY_BIL_TP_CD FROM DUAL" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("             AND C.OTS_STS_LST_FLG = 'Y'" ).append("\n"); 
		query.append("             AND A.OFC_CD IN (" ).append("\n"); 
		query.append("                      SELECT   OFC_CD AS OFC" ).append("\n"); 
		query.append("                      FROM     TPB_HNDL_OFC" ).append("\n"); 
		query.append("                      WHERE    1 = 1" ).append("\n"); 
		query.append("                      AND      N3PTY_OFC_TP_CD = 'T'" ).append("\n"); 
		query.append("                      AND      NVL(DELT_FLG,'N') = 'N'" ).append("\n"); 
		query.append("#if (${s_if_rhq_cd} != '' )" ).append("\n"); 
		query.append("                      AND      RHQ_CD = @[s_if_rhq_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ctrl_cd} != '' )" ).append("\n"); 
		query.append("                      AND      N3PTY_CTRL_OFC_CD = @[s_if_ctrl_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${s_if_ofc_cd} != '' )" ).append("\n"); 
		query.append("                      AND      OFC_CD = @[s_if_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                      UNION ALL" ).append("\n"); 
		query.append("                      SELECT   '(TOTAL)' AS OFC" ).append("\n"); 
		query.append("                      FROM     DUAL" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("        GROUP BY ROLLUP(M.RHQ, M.OFC)" ).append("\n"); 
		query.append("          HAVING GROUPING(M.RHQ)=1 OR GROUPING(M.OFC)=0" ).append("\n"); 
		query.append("       ) E" ).append("\n"); 
		query.append("WHERE    1 = 1" ).append("\n"); 
		query.append("AND      O.RHQ = A.RHQ(+)" ).append("\n"); 
		query.append("AND      O.OFC = A.OFC(+)" ).append("\n"); 
		query.append("AND      O.RHQ = B.RHQ(+)" ).append("\n"); 
		query.append("AND      O.OFC = B.OFC(+)" ).append("\n"); 
		query.append("AND      O.RHQ = C.RHQ(+)" ).append("\n"); 
		query.append("AND      O.OFC = C.OFC(+)" ).append("\n"); 
		query.append("AND      O.RHQ = D.RHQ(+)" ).append("\n"); 
		query.append("AND      O.OFC = D.OFC(+)" ).append("\n"); 
		query.append("AND      O.RHQ = E.RHQ(+)" ).append("\n"); 
		query.append("AND      O.OFC = E.OFC(+)" ).append("\n"); 
		query.append("ORDER BY O.SEQ" ).append("\n"); 
		query.append("       , O.RHQ" ).append("\n"); 
		query.append("       , O.OFC" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}