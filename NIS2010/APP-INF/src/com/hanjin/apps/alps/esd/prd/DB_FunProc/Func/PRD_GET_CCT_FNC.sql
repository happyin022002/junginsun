CREATE OR REPLACE FUNCTION PRD_GET_CCT_FNC /* ========================================================   1. Object Name      : PRD_GET_CCT_FNC   2. Version          : 1.0   3. Create Date      : 2010.05.06   4. Sub System       : Product Catalog   5. Author           : 조용인   6. Description      : CCT 산출   7. Revision History : 2010.05.06 조용인 최초 생성                       : 2010.08.23 - Day Type에 적용하는 -1일 Buffer 삭제                                    - Exclude Day 적용시 토요일 2일, 일요일1일 적용                                    - DIR(Bound) column이 삭제됨 추후 생성되는 값은 무조건 A로 Insert                                      Rank시 Dir Column 삭제.                                    - ETB/ETD Type에 CCT Hour 적용(등록된값 없는 경우 계산결과 그대로)                         2010.09.16 기존에는 CCT 최종결과에 Excl.Day 적용하였으나                                    ETB/ETD ~ CCT 사이에 Excl.Day가 포함된 경우 해당일수 제외하도록 변경                         2013.05.28 PRD_TML_CCT_MGMT 에 APLY_RAIL_CTNT 의 구분에 따른 순위지정                                    APLY_RAIL_CTNT: ['LOCAL', 'RAIL']중  RAIL 이 우선 순위                          2014.08.13 PARAM I_VVD_CD 추가 ======================================================== */(    ------------------------------PARAMETERS------------------------------    I_YD_CD IN VARCHAR2,    -- CCT YARD (KRPUSHN)    I_VSL_SLAN_CD IN VARCHAR2,  -- CCT VSL_SLAN_CD (KJS)    I_VSL_SLAN_DIR_CD IN VARCHAR2,  -- CCT VSL_SLAN_DIR_CD (W) ::: 사용되지 않는 변수.2010.08.23    I_CGO_TP_CD IN VARCHAR2,  -- CCCT CGO_TP_CD (DG,DR,RF,AL)      I_ETB_DT IN DATE,   -- VVD ETB    I_ETD_DT IN DATE    -- VVD ETD    ,I_VVD_CD IN VARCHAR2    -----------------------------------------------------------------------) return DATEauthid current_userIS  V_CCT DATE;  GET_HOL VARCHAR2(1) :='';  V_XCLD_HOL_HOL_FLG VARCHAR2(1);  IS_HOL BOOLEAN :=TRUE;  CNT NUMBER:=0;  I_ETB VARCHAR2(8) := TO_CHAR(I_ETB_DT,'YYYYMMDD');  I_ETD VARCHAR2(8) := TO_CHAR(I_ETD_DT,'YYYYMMDD');  I_GAP NUMBER:=0;  I_XCLD_DAY NUMBER:=0;BEGINDBMS_OUTPUT.ENABLE ;DBMS_OUTPUT.PUT_LINE('--------------1.etb:'||I_ETB) ;    BEGIN    SELECT         --CCT,XCLD_HOL_SAT_FLG,XCLD_HOL_SUN_FLG,XCLD_HOL_HOL_FLG,        (        CASE --일:1, 월:2, 화:3,...토:7            --WHEN XCLD_HOL_SAT_FLG ='1' AND TO_CHAR( CCT ,'D') = '7'            --    THEN CCT - 1              --WHEN XCLD_HOL_SUN_FLG ='1' AND TO_CHAR( CCT ,'D') = '1'            --    THEN CCT - 1             --WHEN (XCLD_HOL_SUN_FLG ='1' AND XCLD_HOL_SAT_FLG = '1') AND TO_CHAR( CCT ,'D') = '1'            --    THEN CCT - 2             --WHEN (XCLD_HOL_SUN_FLG ='1' AND XCLD_HOL_SAT_FLG <> '1') AND TO_CHAR( CCT ,'D') = '1'            --    THEN CCT - 1             WHEN XCLD_HOL_HOL_FLG ='1'              AND EXISTS (                    select 'X' from DMT_HOLIDAY                     where TO_CHAR(HOL_DT,'YYYYMMDD') = TO_CHAR(CCT,'YYYYMMDD') --TO_CHAR(CCT,'YYYYMMDD')  --'20091130' --to_date('20091130','yyyymmdd')                    and nvl(TRIM(LOC_CD),SUBSTR(I_YD_CD,1,5) )= SUBSTR(I_YD_CD,1,5)                    and NVL(TRIM(STE_CD) ,(select NVL(STE_CD,'X') from mdm_location where LOC_CD=SUBSTR(I_YD_CD,1,5))) =                                     (select NVL(STE_CD,'X') from mdm_location where LOC_CD=SUBSTR(I_YD_CD,1,5))                    AND NVL(TRIM(RGN_CD),(select NVL(RGN_CD,'X') from mdm_location where LOC_CD=SUBSTR(I_YD_CD,1,5))) =                                    (select NVL(RGN_CD,'X') from mdm_location where LOC_CD=SUBSTR(I_YD_CD,1,5))                    AND NVL(TRIM(CNT_CD),(select NVL(CNT_CD,'X') from mdm_location where LOC_CD=SUBSTR(I_YD_CD,1,5)) ) =                                    (select NVL(CNT_CD,'X') from mdm_location where LOC_CD=SUBSTR(I_YD_CD,1,5))                                 ) --=  '20091225' --CCT                                                THEN  CCT - 1  -- TO_DATE(CCT,'yyyymmdd hh24:mi:ss')-24            ELSE CCT         END        )CCT2 , XCLD_HOL_HOL_FLG--, TO_CHAR( CCT ,'D') DY    INTO V_CCT , V_XCLD_HOL_HOL_FLG    FROM (        SELECT --TO_DATE(I_ETB, 'YYYYMMDD') etb,TO_DATE(I_ETD, 'YYYYMMDD') etD, CCT_TP_CD,CCT_DY_CD,CCT_HRMNT,CCT_HR,            CASE                -- ETB,ETD                WHEN CCT_TP_CD = 'ETB' THEN TO_DATE(TO_CHAR(TRUNC((TO_DATE(I_ETB, 'YYYYMMDD') - CCT_HR /24)), 'YYYY/MM/DD')                                                     ||NVL(CCT_HRMNT,TO_CHAR(TO_DATE(I_ETB, 'YYYYMMDD') - CCT_HR /24,'HH24MI')), 'YYYY/MM/DD HH24MI')                 WHEN CCT_TP_CD = 'ETD' THEN TO_DATE(TO_CHAR(TRUNC((TO_DATE(I_ETD, 'YYYYMMDD') - CCT_HR /24)), 'YYYY/MM/DD')                                                     ||NVL(CCT_HRMNT,TO_CHAR(TO_DATE(I_ETD, 'YYYYMMDD') - CCT_HR /24,'HH24MI')), 'YYYY/MM/DD HH24MI') --                WHEN CCT_TP_CD = 'ETD' THEN TO_DATE(TO_CHAR(TRUNC((TO_DATE(I_ETD, 'YYYYMMDD') - CCT_HR /24)), 'YYYY/MM/DD') ||CCT_HRMNT, 'YYYY/MM/DD HH24MI')                  -- DAY ( 해당 요일의 시간보다 ETB 가 작으면 안되게)                                WHEN CCT_TP_CD ='Day' THEN                       CASE WHEN TO_DATE(I_ETB, 'YYYYMMDD')  >                           TO_DATE(TO_CHAR(TRUNC(TO_DATE(I_ETB, 'YYYYMMDD') ,'d') +                           (DECODE(CCT_DY_CD, 'SUN',0, 'MON',1,'TUE',2,'WED',3,'THU',4,'FRI',5,'SAT',6 )) , 'YYYY/MM/DD') ||CCT_HRMNT, 'YYYY/MM/DD HH24MI')                           THEN                             TO_DATE(TO_CHAR(TRUNC(TO_DATE(I_ETB, 'YYYYMMDD'),'d') +                             (DECODE(CCT_DY_CD, 'SUN',0, 'MON',1,'TUE',2,'WED',3,'THU',4,'FRI',5,'SAT',6 )) , 'YYYY/MM/DD') ||CCT_HRMNT, 'YYYY/MM/DD HH24MI')                      ELSE  TO_DATE(TO_CHAR(TRUNC(TO_DATE(I_ETB, 'YYYYMMDD') - 7,'d') +                             (DECODE(CCT_DY_CD, 'SUN',0, 'MON',1,'TUE',2,'WED',3,'THU',4,'FRI',5,'SAT',6 )) , 'YYYY/MM/DD') ||CCT_HRMNT, 'YYYY/MM/DD HH24MI')                      END                       -- CMN : ETB 하루전 특정시간                  WHEN CCT_TP_CD ='CMN' THEN TO_DATE(TO_CHAR(TO_DATE(I_ETB, 'YYYYMMDD') - 1  , 'YYYY/MM/DD') || CCT_HRMNT, 'YYYY/MM/DD HH24MI')            END CCT, XCLD_HOL_SAT_FLG,  XCLD_HOL_SUN_FLG, XCLD_HOL_HOL_FLG,            RANK() OVER (PARTITION BY YD_CD ORDER BY DECODE(LENGTH(VVD_CD),9,1,2 ),DECODE( CGO_TP_CD,I_CGO_TP_CD,1,2), decode(APLY_RAIL_CTNT, 'RAIL',1,2) ) RNK    --    INTO V_CCT        FROM (                SELECT *                FROM PRD_TML_CCT_MGMT                WHERE YD_CD = I_YD_CD                AND VSL_SLAN_CD = I_VSL_SLAN_CD                AND NVL(DELT_FLG,'N') <> 'Y'                AND VSL_SLAN_DIR_CD IN (I_VSL_SLAN_DIR_CD,'A') -- PK이므로 그냥 유지. Index..                AND CGO_TP_CD IN (I_CGO_TP_CD,'AL')                 --AND VVD_CD = DECODE(I_VVD_CD, '', 'ALL', I_VVD_CD)                AND DECODE (VVD_CD, 'ALL', DECODE(I_VVD_CD, '', 'ALL', I_VVD_CD),VVD_CD ) = NVL(I_VVD_CD,'ALL')        )    )    WHERE rownum=1    ORDER BY RNK;    DBMS_OUTPUT.PUT_LINE('1  V_CCT:' ||TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'));                               EXCEPTION          WHEN OTHERS          THEN                            V_CCT := (TO_DATE(I_ETB, 'YYYYMMDD') - 10 /24) ;--              enis_log_prc(SYSDATE, 'PRD_GET_CCT_FNC', 'V_CCT OTHERS: ' || TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'), TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'));              DBMS_OUTPUT.PUT_LINE('1 EXCEPTION V_CCT:' || V_CCT);              RETURN V_CCT;                                    END;     --    enis_log_prc(SYSDATE, 'PRD_GET_CCT_FNC', 'PRD_GET_HOL_DAY Call-V_XCLD_HOL_HOL_FLG:' || V_XCLD_HOL_HOL_FLG, V_XCLD_HOL_HOL_FLG);--    enis_log_prc(SYSDATE, 'PRD_GET_CCT_FNC', 'PRD_GET_HOL_DAY Call-V_CCT:' ||TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss') , TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'));--    enis_log_prc(SYSDATE, 'PRD_GET_CCT_FNC', 'PRD_GET_HOL_DAY Call-I_YD_CD:' ||I_YD_CD , I_YD_CD);    DBMS_OUTPUT.PUT_LINE('PRD_GET_HOL_DAY Call-V_XCLD_HOL_HOL_FLG:' || V_XCLD_HOL_HOL_FLG);    DBMS_OUTPUT.PUT_LINE('PRD_GET_HOL_DAY Call-V_CCT:' ||TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'));    DBMS_OUTPUT.PUT_LINE('PRD_GET_HOL_DAY Call-I_YD_CD:' ||I_YD_CD );        BEGIN        SELECT CASE WHEN CCT_TP_CD = 'ETB'                      THEN TO_DATE(I_ETB,'yyyymmdd') - V_CCT                WHEN CCT_TP_CD = 'ETD'                      THEN TO_DATE(I_ETD,'yyyymmdd') - V_CCT                 ELSE 0                END    INTO I_GAP    FROM (         SELECT PRD_TML_CCT_MGMT.*,RANK() OVER (PARTITION BY YD_CD ORDER BY DECODE(CGO_TP_CD,'RF',1,2), decode(APLY_RAIL_CTNT, 'RAIL',1,2)) RNK        FROM PRD_TML_CCT_MGMT        WHERE YD_CD = I_YD_CD        AND VSL_SLAN_CD = I_VSL_SLAN_CD        AND NVL(DELT_FLG,'N') <> 'Y'        AND VSL_SLAN_DIR_CD IN (I_VSL_SLAN_DIR_CD,'A') -- PK이므로 그냥 유지. Index..        AND CGO_TP_CD IN (I_CGO_TP_CD,'AL')         )     WHERE ROWNUM=1    ORDER BY RNK;        DBMS_OUTPUT.PUT_LINE('I_GAP:' ||I_GAP );      DBMS_OUTPUT.PUT_LINE('V_CCT:' ||V_CCT );          SELECT NVL(           SUM(CASE WHEN CCT_TP_CD = 'ETB'                      THEN DECODE(XCLD_HOL_SUN_FLG,'1',DECODE(TO_CHAR(TO_DATE(I_ETB,'yyyymmdd')-ROWNUM,'D'),'1','1','0'),0)                WHEN CCT_TP_CD = 'ETD'                      THEN DECODE(XCLD_HOL_SUN_FLG,'1',DECODE(TO_CHAR(TO_DATE(I_ETD,'yyyymmdd')-ROWNUM,'D'),'1','1','0'),0) END            +            CASE WHEN CCT_TP_CD = 'ETB'                      THEN DECODE(XCLD_HOL_SAT_FLG,'1',DECODE(TO_CHAR(TO_DATE(I_ETB,'yyyymmdd')-ROWNUM,'D'),'7','1','0'),0)                WHEN CCT_TP_CD = 'ETD'                      THEN DECODE(XCLD_HOL_SAT_FLG,'1',DECODE(TO_CHAR(TO_DATE(I_ETD,'yyyymmdd')-ROWNUM,'D'),'7','1','0'),0) END),0)    INTO I_XCLD_DAY    FROM (         SELECT PRD_TML_CCT_MGMT.*,RANK() OVER (PARTITION BY YD_CD ORDER BY DECODE(CGO_TP_CD,'RF',1,2) , decode(APLY_RAIL_CTNT, 'RAIL',1,2)) RNK        FROM PRD_TML_CCT_MGMT        WHERE YD_CD = I_YD_CD        AND VSL_SLAN_CD = I_VSL_SLAN_CD        AND NVL(DELT_FLG,'N') <> 'Y'        AND VSL_SLAN_DIR_CD IN (I_VSL_SLAN_DIR_CD,'A') -- PK이므로 그냥 유지. Index..        AND CGO_TP_CD IN (I_CGO_TP_CD,'AL')         ) RUL, (SELECT CPY_NO L_N0 FROM COM_CPY_NO WHERE CPY_NO < I_GAP)    WHERE rownum=1    order by RNK;    DBMS_OUTPUT.PUT_LINE('--------------5') ;DBMS_OUTPUT.PUT_LINE('I_XCLD_DAY:' ||I_XCLD_DAY );  DBMS_OUTPUT.PUT_LINE('--------------6') ;         V_CCT := V_CCT - I_XCLD_DAY;    END;        WHILE IS_HOL AND CNT <30 LOOP        IF V_XCLD_HOL_HOL_FLG ='1' AND  PRD_GET_HOL_DAY( SUBSTR(I_YD_CD,1,5), V_CCT  ) ='Y' THEN                         V_CCT := V_CCT-1;--            enis_log_prc(SYSDATE, 'PRD_GET_CCT_FNC', 'V_CCT OTHERS: ' || TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'), TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'));                    END IF;                -- -1일한 v_cct로 다시 한번 hol_day 체크 , hol_day가 아니면 while문 빠짐.        IF PRD_GET_HOL_DAY( SUBSTR(I_YD_CD,1,5), V_CCT  ) ='X' or V_XCLD_HOL_HOL_FLG != 1 THEN             IS_HOL:=FALSE;        END IF;        CNT:=CNT+1;            END LOOP; --    enis_log_prc(SYSDATE, 'PRD_GET_CCT_FNC', 'V_CCT return: ' || TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'), TO_CHAR(V_CCT,'YYYY/MM/DD hh24:mi:ss'));        RETURN V_CCT;    END ;/