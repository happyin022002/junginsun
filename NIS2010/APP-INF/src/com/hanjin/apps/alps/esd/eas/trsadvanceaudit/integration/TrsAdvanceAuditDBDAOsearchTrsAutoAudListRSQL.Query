<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TrsAdvanceAuditDBDAOsearchTrsAutoAudListRSQL">
			<desc><![CDATA[searchTrsAutoAudList 조회쿼리 (TRS Auto Audit 배치에서 사용)]]></desc>
			<sql><![CDATA[
SELECT AUTO_AUD_STS_CD
      ,EXPN_AUD_STS_CD
      ,RHQ_OFC_CD
      ,INV_OFC_CD
      ,TRSP_SO_TP_CD
      ,INV_VNDR_SEQ
      ,INV_NO
      ,HJL_INV_VNDR_SEQ
      ,HJL_INV_NO
      ,INV_ISS_DT
      ,INV_AUD_STS_CD
      ,CSR_NO
      ,CURR_CD
      ,WO_AMT
      ,INV_AMT
      ,CURR_CNG_FLG
      ,INV_DIFF_AMT
      ,INV_DIFF_AMT_FLG
      ,CASE WHEN ROUND((INV_DIFF_AMT/(DECODE(WO_AMT, 0, 1, WO_AMT))) * 100, 3) > 100 THEN 100
            ELSE ROUND((INV_DIFF_AMT/(DECODE(WO_AMT, 0, 1, WO_AMT))) * 100, 3)
       END INV_DIFF_PCT
      ,NO_AGMT_FLG
      ,NO_OPTM_ROUT_FLG
      ,EXCEED_AVG_DIFF_AMT
      ,EXCEED_AVG_FLG
      ,INV_ISS_USR_ID
      ,PAY_TERM_CD
      ,DECODE(EAC_IF_FLG, 'I', 'Y') AS EAC_IF_FLG
      ,DECODE(EXPN_AUD_STS_CD, NULL, '', LOCL_CRE_DT) LOCL_CRE_DT
      ,TO_CHAR(INV_CFM_DT, 'YYYYMMDDHH24MISS') INV_CFM_DT
      ,AUD_RLST_FLG
  FROM (
        SELECT  MIN(AUTO_AUD_STS_CD) AUTO_AUD_STS_CD    
               ,MAX(EXPN_AUD_STS_CD) EXPN_AUD_STS_CD    
               ,MAX(RHQ_OFC_CD) RHQ_OFC_CD
               ,MAX(INV_OFC_CD) INV_OFC_CD
               ,TRSP_SO_TP_CD
               ,INV_VNDR_SEQ
               ,INV_NO
               ,MAX(HJL_INV_VNDR_SEQ) HJL_INV_VNDR_SEQ
               ,MAX(HJL_INV_NO) HJL_INV_NO
               ,MAX(INV_ISS_DT) INV_ISS_DT    
               ,MAX(INV_AUD_STS_CD) INV_AUD_STS_CD    
               ,MAX(CSR_NO) CSR_NO
               ,MAX(CURR_CD) CURR_CD    
               ,SUM(WO_AMT) WO_AMT    
               ,SUM(INV_AMT) INV_AMT    
               ,MAX(CURR_CNG_FLG) CURR_CNG_FLG    
               ,SUM(INV_DIFF_AMT) INV_DIFF_AMT    
               ,MAX(INV_DIFF_AMT_FLG) INV_DIFF_AMT_FLG    
               ,MAX(NO_AGMT_FLG) NO_AGMT_FLG    
               ,MAX(NO_OPTM_ROUT_FLG) NO_OPTM_ROUT_FLG    
               ,SUM(EXCEED_AVG_DIFF_AMT) EXCEED_AVG_DIFF_AMT    
               ,MAX(EXCEED_AVG_FLG) EXCEED_AVG_FLG          
               ,MAX(INV_ISS_USR_ID) INV_ISS_USR_ID
               ,MAX(PAY_TERM_CD) PAY_TERM_CD
               ,MAX(DECODE(EAC_IF_FLG, NULL, '', 'I')) EAC_IF_FLG
               ,MAX(LOCL_CRE_DT) LOCL_CRE_DT
               ,MAX(INV_CFM_DT) INV_CFM_DT
               ,MAX(AUD_RLST_FLG) AUD_RLST_FLG
          FROM (
                SELECT AA.RHQ_OFC_CD
                      ,AA.INV_OFC_CD
                      ,AA.WO_OFC_CD
                      ,AA.TRSP_SO_TP_CD
                      ,AA.INV_VNDR_SEQ
                      ,AA.INV_NO
                      ,AA.HJL_INV_VNDR_SEQ
                      ,AA.HJL_INV_NO
                      ,AA.INV_ISS_DT    
                      ,AA.INV_AUD_STS_CD    
                      ,AA.CSR_NO    
                      ,AA.CURR_CD    
                      ,AA.WO_AMT    
                      ,AA.INV_AMT    
                      ,AA.CURR_CNG_FLG    
                      ,AA.INV_ISS_USR_ID
                      ,AA.PAY_TERM_CD    
                      ,LEAST((CASE WHEN AA.NO_AGMT_FLG = 'N' THEN 'C'
                                   ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.) ELSE가 없을 경우 NULL 값이 리턴될 수 있는데 LEAST에서 최소값은 NULL이므로 NULL이 선택되지 않도록 구분 추가
                              END)
                            ,(CASE WHEN AA.NO_OPTM_ROUT_FLG = 'N' THEN 'F'
                                   ELSE 'Z' -- Z는 의미없는 임의의 값이다. (Least 항목중 아래에서 C, F, S중 하나가 항상 나오게 되므로 Z가 선택되는 경우는 존재 할 수 없음.) ELSE가 없을 경우 NULL 값이 리턴될 수 있는데 LEAST에서 최소값은 NULL이므로 NULL이 선택되지 않도록 구분 추가
                              END)
                            ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'
                                   WHEN AA.INV_DIFF_AMT < 0 THEN 'F'
                                   WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'
                                                                                                                                            ELSE 'F'
                                                                                                                                       END
                                   WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'
                                   ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우
                              END)
                            ,(CASE WHEN AA.EXCEED_AVG_RTO >= (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)
                                                                                                                                                        ,AA.CURR_CD    
                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    
                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    
                                                                                                                                                        )    
                                                                        ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    
                                                                   END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'S'
                                   WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)
                                                                                                                                                        ,AA.CURR_CD    
                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    
                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    
                                                                                                                                                        )    
                                                                       ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    
                                                                  END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    THEN 'F'
                                   WHEN AVG_3MON_RT_INFO IS NULL THEN 'F' -- 평균단가가 없는 경우                               
                                   WHEN AVG_3MON_RT_INFO = ',' THEN 'F' -- 평균단가가 없는 경우
                                   WHEN TRIM(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)) IS NULL THEN 'F' -- 평균단가가 없는 경우
                                   ELSE 'O' -- Ratio가 등록되지 않아 비교값이 없는 경우
                             END)
                       ) AS AUTO_AUD_STS_CD
                      ,AA.NO_AGMT_FLG    
                      ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'
                             WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' 
                        END) INV_DIFF_AMT_FLG    
                      ,AA.INV_DIFF_AMT    
                      ,AA.NO_OPTM_ROUT_FLG    
                      ,CASE WHEN AA.EXCEED_AVG_RTO < (1 - (CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)    
                                                                                                                                                        ,AA.CURR_CD    
                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    
                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    
                                                                                                                                                        )    
                                                                ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    
                                                           END) / (DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100    
                            THEN 'Y'
                       END EXCEED_AVG_FLG    
                      ,NVL(AA.WO_AMT,0) - NVL((CASE WHEN AA.CURR_CD <> BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2) THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,2)    
                                                                                                                                                        ,AA.CURR_CD    
                                                                                                                                                        ,BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1)    
                                                                                                                                                        ,TO_CHAR(AA.WO_ISS_DT, 'YYYYMM')    
                                                                                                                                                        )    
                                                      ELSE TO_NUMBER(BKG_GET_TOKEN_FNC(AA.AVG_3MON_RT_INFO,1))    
                                               END),0) EXCEED_AVG_DIFF_AMT    
                      ,AA.CGO_TP_CD    
                      ,AA.TRSP_CRR_MOD_CD
                      ,AA.TRSP_COST_DTL_MOD_CD    
                      ,AA.TRSP_SO_OFC_CTY_CD    
                      ,AA.TRSP_SO_SEQ    
                      ,AA.TRSP_WO_OFC_CTY_CD    
                      ,AA.TRSP_WO_SEQ    
                      ,AA.BKG_RCVDE_TERM_CD    
                      ,AA.EQ_NO    
                      ,BB.EXPN_AUD_STS_CD
                      ,TO_CHAR(BB.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') LOCL_CRE_DT
                      ,(SELECT 'I'    
                         FROM EAS_TRSP_AUD_CHK X    
                        WHERE X.INV_NO        = AA.INV_NO    
                          AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ    
                          AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD    
                          AND ROWNUM = 1    
                       ) EAC_IF_FLG
                      ,AA.INV_CFM_DT
                      ,(CASE WHEN BB.INV_NO IS NOT NULL THEN 'Y' ELSE 'N' END) AUD_RLST_FLG
                  FROM (    
                        SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */    
                               (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD    
                              ,I.CRE_OFC_CD AS INV_OFC_CD    
                              ,W.CRE_OFC_CD AS WO_OFC_CD    
                              ,S.TRSP_SO_TP_CD    
                              ,I.INV_VNDR_SEQ
                              ,I.INV_NO
                              ,I.HJL_INV_VNDR_SEQ
                              ,L.HJL_INV_NO
                              ,TO_CHAR(I.INV_ISS_DT, 'YYYYMMDDHH24MISS') INV_ISS_DT    
                              ,I.CSR_NO    
                              ,S.CURR_CD    
                              ,S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(SCG_VAT_AMT,0) + NVL(TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0) AS WO_AMT    
                              ,S.INV_CURR_CD    
                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    
                                                                                                               ,S.CURR_CD    
                                                                                                               ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    
                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    
                                                                                                               )    
                                     ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    
                                END) AS INV_AMT    
                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG    
                              ,CASE WHEN L.HJL_NO IS NOT NULL THEN 'ETS'    
                                    ELSE I.CRE_USR_ID
                               END INV_ISS_USR_ID
                              ,(SELECT X.GEN_PAY_TERM_CD
                                  FROM MDM_VENDOR X    
                                 WHERE X.VNDR_SEQ = CASE WHEN L.HJL_NO IS NOT NULL THEN L.HJL_INV_VNDR_SEQ    
                                                         ELSE I.INV_VNDR_SEQ    
                                                    END    
                               ) PAY_TERM_CD    
                              ,TO_CHAR(I.PAY_DT, 'YYYYMMDDHH24MISS') PAY_DT    
                              ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYYMMDD'), 'YYYYMMDD') INV_TERM_DT    
                              ,(CASE WHEN I.TRSP_INV_AUD_STS_CD = 'CF' THEN 'C' -- Invoice Confirmed    
                                     WHEN (A.IF_FLG IS NULL AND A.RQST_APRO_STEP_FLG = 'Y') OR (I.TRSP_INV_AUD_STS_CD = 'RA') THEN 'L' -- Requesting Approval
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'AR' THEN 'A' -- Approval Requested    
                                     WHEN A.IF_ERR_RSN = 'Sending...' THEN 'S' -- Sending    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'DA' THEN 'R' -- Disapproved    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IE' THEN 'E' -- I/F Error    
                                     WHEN A.RCV_ERR_FLG = 'E' THEN 'J'-- A/P Rejected                 
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IF' THEN 'P' -- I/F Success    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'PD' THEN 'D' -- Paid    
                                END) INV_AUD_STS_CD    
                              ,(CASE WHEN ((S.TRSP_AGMT_OFC_CTY_CD IS NULL) AND (SELECT X.TRSP_AGMT_OFC_CTY_CD
                                                                                   FROM TRS_TRSP_SVC_ORD X
                                                                                  WHERE X.TRSP_SO_OFC_CTY_CD = SUBSTR(S.MCNTR_BDL_GRP_SEQ, 1,3)
                                                                                    AND X.TRSP_SO_SEQ = SUBSTR(S.MCNTR_BDL_GRP_SEQ,4)) IS NULL)
                                     THEN 'N'
                                END) NO_AGMT_FLG
                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    
                                                                                                               ,S.CURR_CD    
                                                                                                               ,S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    
                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    
                                                                                                               )    
                                     ELSE S.INV_BZC_AMT + NVL(S.INV_ETC_ADD_AMT,0)    
                                END)
                                - (S.BZC_AMT + NVL(S.NEGO_AMT,0) + NVL(S.FUEL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) + NVL(S.SCG_VAT_AMT,0) + NVL(S.TOLL_FEE_AMT,0) + NVL(S.HJL_HNDL_AMT,0)) AS INV_DIFF_AMT
                              ,CASE WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD    
                                                            FROM MDM_ORGANIZATION X    
                                                           WHERE X.DELT_FLG = 'N'    
                                                         CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD    
                                                           START WITH X.OFC_CD IN ('HAMRU', 'SHARC', 'SINRS'))    
                                         AND S.TRSP_SO_TP_CD = 'Y'    
                                         AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')    
                                         AND S.TRSP_BND_CD IN ('I','O')    
                                         AND S.SO_DSCR_RSN_CD <> 'M'    
                                    THEN 'N'    
                                    WHEN I.CRE_OFC_CD IN (SELECT X.OFC_CD    
                                                            FROM MDM_ORGANIZATION X    
                                                           WHERE X.DELT_FLG = 'N'    
                                                         CONNECT BY NOCYCLE PRIOR X.OFC_CD = X.PRNT_OFC_CD    
                                                           START WITH X.OFC_CD IN ('NYCRAG', 'NYCNOG', 'NYCRAO', 'NYCRAX', 'NYCNKG', 'SAOLA'))    
                                         AND (SELECT X.SO_DSCR_RSN_CD FROM TRS_TRSP_OPTM_USA_ROUT X WHERE X.BKG_NO = S.BKG_NO AND ROWNUM = 1) <> 'M'    
                                         AND S.TRSP_SO_TP_CD = 'Y'    
                                         AND S.TRSP_COST_DTL_MOD_CD IN ('CY', 'DR')    
                                         AND S.TRSP_BND_CD IN ('I','O')    
                                         AND TRSP_CRR_MOD_CD NOT IN ('WD')    
                                    THEN 'N'    
                               END NO_OPTM_ROUT_FLG    
                              ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio    
                                      FROM EAS_TRSP_AUTO_AUD_CRTE X    
                                     WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD     
                                       AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD    
                                       AND X.CGO_TP_CD        = S.CGO_TP_CD    
                                       AND X.EXPN_AUD_TGT_FLG = 'Y'    
                                       AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO    
                                                                            FROM EAS_TRSP_AUTO_AUD_CRTE X    
                                                                           WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)    
                                                                             AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD    
                                                                             AND X.CGO_TP_CD        = S.CGO_TP_CD    
                                                                             AND X.EXPN_AUD_TGT_FLG = 'Y'    
                                                                             AND X.EXPN_AUD_CRTE_TP_CD = 'D')    
                               ) AS INV_DIFF_RTO    
                              ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- Exceed Average Ratio    
                                      FROM EAS_TRSP_AUTO_AUD_CRTE X    
                                     WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD     
                                       AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD
                                       AND X.CGO_TP_CD        = S.CGO_TP_CD    
                                       AND X.EXPN_AUD_TGT_FLG = 'Y'    
                                       AND X.EXPN_AUD_CRTE_TP_CD = 'A'), (SELECT X.EXPN_MAX_PRMT_RTO    
                                                                            FROM EAS_TRSP_AUTO_AUD_CRTE X    
                                                                           WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)    
                                                                             AND X.TRSP_CRR_MOD_CD  = S.TRSP_CRR_MOD_CD    
                                                                             AND X.CGO_TP_CD        = S.CGO_TP_CD    
                                                                             AND X.EXPN_AUD_TGT_FLG = 'Y'    
                                                                             AND X.EXPN_AUD_CRTE_TP_CD = 'A')    
                               ) AS EXCEED_AVG_RTO    
                              ,(SELECT (CASE WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))    
                                             THEN WO_20FT_DRY_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))    
                                             THEN WO_40FT_DRY_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('6', '7') AND ((SUBSTR(S.EQ_TPSZ_CD, 1,1) <> 'R' AND S.SPCL_CGO_CNTR_TP_CD IS NULL) OR (SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RD'))    
                                             THEN WO_45FT_DRY_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'    
                                             THEN WO_20FT_RF_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND SUBSTR(S.EQ_TPSZ_CD, 1,1) = 'R' AND S.SPCL_CGO_CNTR_TP_CD = 'RF'    
                                             THEN WO_40FT_RF_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'    
                                             THEN WO_20FT_DG_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'DG'    
                                             THEN WO_40FT_DG_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('2', '3') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'    
                                             THEN WO_20FT_AWK_AVG_AMT    
                                             WHEN SUBSTR(S.EQ_TPSZ_CD, 2,1) IN ('4', '5') AND S.SPCL_CGO_CNTR_TP_CD = 'AK'    
                                             THEN WO_40FT_AWK_AVG_AMT    
                                        END)||','|| X.WO_CURR_CD    
                                  FROM EAS_EXPN_AUD_CS_INLND_COST X    
                                 WHERE X.INLND_COST_YRMON = TO_CHAR(ADD_MONTHS(W.LOCL_CRE_DT,-1), 'YYYYMM')
                                   AND X.WO_OFC_CD        = W.CRE_OFC_CD    
                                   AND X.TRSP_SO_TP_CD    = S.TRSP_SO_TP_CD    
                                   AND TRSP_COST_DTL_MOD_CD = S.TRSP_COST_DTL_MOD_CD    
                                   AND X.TRSP_CRR_MOD_CD    = S.TRSP_CRR_MOD_CD     
                                   AND X.CGO_TP_CD          = S.CGO_TP_CD    
                                   AND X.FM_NOD_CD          = S.FM_NOD_CD    
                                   AND NVL(X.VIA_NOD_CD,'X')= NVL(S.VIA_NOD_CD,'X')    
                                   AND X.TO_NOD_CD          = S.TO_NOD_CD    
                                   AND NVL(X.DOR_NOD_CD,'X')= NVL(S.DOR_NOD_CD,'X')    
                                   AND NVL(X.TRSP_BND_CD,'X')= NVL(S.TRSP_BND_CD,'X')    
                                   AND ROWNUM = 1    
                               ) AVG_3MON_RT_INFO    
                              ,W.LOCL_CRE_DT AS WO_ISS_DT    
                              ,S.CGO_TP_CD    
                              ,S.TRSP_CRR_MOD_CD    
                              ,S.TRSP_COST_DTL_MOD_CD    
                              ,S.TRSP_SO_OFC_CTY_CD    
                              ,S.TRSP_SO_SEQ    
                              ,S.TRSP_WO_OFC_CTY_CD    
                              ,S.TRSP_WO_SEQ    
                              ,S.BKG_RCVDE_TERM_CD    
                              ,S.EQ_NO
                              ,I.INV_CFM_DT
                          FROM TRS_TRSP_INV_WRK I    
                              ,TRS_TRSP_SVC_ORD S    
                              ,TRS_TRSP_WRK_ORD W    
                              ,TRS_TRSP_HJL_SVC_ORD L    
                              ,AP_INV_HDR A    
                         WHERE I.INV_NO       = S.INV_NO    
                           AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ    
                           AND S.TRSP_WO_OFC_CTY_CD = W.TRSP_WO_OFC_CTY_CD    
                           AND S.TRSP_WO_SEQ        = W.TRSP_WO_SEQ    
                           AND S.TRSP_SO_OFC_CTY_CD = L.TRSP_SO_OFC_CTY_CD(+)    
                           AND S.TRSP_SO_SEQ        = L.TRSP_SO_SEQ(+)    
                           AND I.CSR_NO             = A.CSR_NO(+)    
                           AND S.DELT_FLG = 'N'    
                           AND S.TRSP_SO_STS_CD = 'I'    
                           AND S.TRSP_SO_TP_CD IN ('Y', 'M')    

                           -- 2시간 배치
                           #if(${batch_tp_cd} == 'A')
                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')    
                             AND NOT EXISTS (SELECT 'X'
                                               FROM EAS_TRSP_AUD X
                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ
                                                AND X.INV_NO        = I.INV_NO
                                                AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD
                                            )
                           #elseif(${batch_tp_cd} == 'M') -- 실시간 배치
                             AND EXISTS (SELECT 'X' 
                                           FROM EAS_AUTO_AUD_BAT X
                                          WHERE X.INV_NO        = I.INV_NO
                                            AND X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ
                                            AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD
                                            AND X.SUB_SYS_CD      = 'TRS'
                                            AND X.BAT_PROG_STS_CD = 'P'
                                            AND X.CRE_DT > SYSDATE - 2 -- 다양한 사유로 배치 중지 되었을 경우를 대비하여 이틀간 자료 배치 수행
                                         )
                           #elseif(${batch_tp_cd} == 'E') -- 메뉴얼 기간 배치 (Period로 조회)
                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999
                             AND NOT EXISTS (SELECT 'X'
                                               FROM EAS_TRSP_AUD X
                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ
                                                AND X.INV_NO        = I.INV_NO
                                                AND X.TRSP_SO_TP_CD = S.TRSP_SO_TP_CD
                                            )
                           #elseif(${batch_tp_cd} == 'F') -- 초기 자료 생성 (Period로 조회)
                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999
                           #end

                             -- RHQ로 조회 (초기 자료 생성시 등에 옵션 조건으로 사용하기 위하여 남겨둠)
                           #if(${s_rhq_ofc_cd} != '')
                           AND I.CRE_OFC_CD IN (SELECT OFC_CD    
                                                      FROM MDM_ORGANIZATION    
                                                     WHERE DELT_FLG = 'N'    
                                                   CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD    
                                                     START WITH OFC_CD = @[s_rhq_ofc_cd]    
                                               )
                           #end

                           -- Invoice No로 조회     
                           #if (${s_inv_no}!= '')
                             AND I.INV_NO IN (
                             #foreach( ${key} IN ${invNos}) 
                                #if($velocityCount < $invNos.size()) 
                                '${key}',
                                #else 
                                '${key}'
                                #end 
                             #end
                             )
                           #end
                       ) AA    
                      ,EAS_TRSP_AUD BB    
                 WHERE 1=1    
                   AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)    
                   AND AA.INV_NO        = BB.INV_NO(+)    
                   AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)
                -- Rail    
                UNION ALL
                SELECT AA.RHQ_OFC_CD    
                      ,AA.INV_OFC_CD    
                      ,AA.WO_OFC_CD    
                      ,AA.TRSP_SO_TP_CD    
                      ,AA.INV_VNDR_SEQ     
                      ,AA.INV_NO
                      ,NULL HJL_INV_VNDR_SEQ
                      ,NULL HJL_INV_NO
                      ,AA.INV_ISS_DT    
                      ,AA.INV_AUD_STS_CD    
                      ,AA.CSR_NO    
                      ,AA.CURR_CD    
                      ,AA.WO_AMT    
                      ,AA.INV_AMT    
                      ,AA.CURR_CNG_FLG
                      ,AA.INV_ISS_USR_ID
                      ,AA.PAY_TERM_CD
                      ,CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'S'
                            WHEN AA.INV_DIFF_AMT < -1 THEN 'F'
                            WHEN AA.INV_DIFF_RTO >= ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3) THEN CASE WHEN AA.INV_DIFF_AMT = 0 THEN 'S'
                                                                                                                                     ELSE 'F'
                                                                                                                                END
                            WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'C'
                            WHEN AA.INV_DIFF_RTO IS NULL THEN 'T'
                       END AUTO_AUD_STS_CD
                      ,AA.NO_AGMT_FLG    
                      ,(CASE WHEN AA.INV_DIFF_AMT BETWEEN -1 AND 1 THEN 'N'
                             WHEN AA.INV_DIFF_RTO < ROUND((AA.INV_DIFF_AMT/(DECODE(AA.WO_AMT, 0, 1, AA.WO_AMT))) * 100, 3)  THEN 'Y' 
                        END) INV_DIFF_AMT_FLG
                      ,AA.INV_DIFF_AMT    
                      ,AA.NO_OPTM_ROUT_FLG    
                      ,'N' EXCEED_AVG_FLG                           
                      ,0 EXCEED_AVG_DIFF_AMT    
                      ,AA.CGO_TP_CD    
                      ,AA.TRSP_CRR_MOD_CD    
                      ,AA.TRSP_COST_DTL_MOD_CD    
                      ,AA.TRSP_SO_OFC_CTY_CD    
                      ,AA.TRSP_SO_SEQ    
                      ,NULL TRSP_WO_OFC_CTY_CD    
                      ,NULL TRSP_WO_SEQ    
                      ,AA.BKG_RCVDE_TERM_CD    
                      ,AA.EQ_NO    
                      ,BB.EXPN_AUD_STS_CD
                      ,TO_CHAR(BB.LOCL_CRE_DT, 'YYYYMMDDHH24MISS') LOCL_CRE_DT
                      ,(SELECT 'I'    
                         FROM EAS_TRSP_AUD_CHK X    
                        WHERE X.INV_NO        = AA.INV_NO    
                          AND X.INV_VNDR_SEQ  = AA.INV_VNDR_SEQ    
                          AND X.TRSP_SO_TP_CD = AA.TRSP_SO_TP_CD    
                          AND ROWNUM = 1    
                       ) EAC_IF_FLG
                      ,AA.INV_CFM_DT
                      ,(CASE WHEN BB.INV_NO IS NOT NULL THEN 'Y' ELSE 'N' END) AUD_RLST_FLG
                  FROM (    
                        SELECT /*+ INDEX (L XPKTRS_TRSP_HJL_SVC_ORD) */    
                               (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL) RHQ_OFC_CD    
                              ,I.CRE_OFC_CD AS INV_OFC_CD    
                              ,DECODE(W.CRE_OFC_CD, 'SYSTEM', S.TRSP_SO_OFC_CTY_CD, W.CRE_OFC_CD) AS WO_OFC_CD    
                              ,'R' AS TRSP_SO_TP_CD    
                              ,I.INV_VNDR_SEQ    
                              ,I.INV_NO    
                              ,TO_CHAR(I.INV_ISS_DT, 'YYYYMMDDHH24MISS') INV_ISS_DT    
                              ,I.CSR_NO    
                              ,S.CURR_CD    
                              ,S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0) AS WO_AMT    
                              ,S.INV_CURR_CD    
                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    
                                                                                                               ,S.CURR_CD    
                                                                                                               ,S.INV_BZC_AMT 
--                                                                                                               + NVL(S.INV_ETC_ADD_AMT,0)    
                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    
                                                                                                               )    
                                     ELSE S.INV_BZC_AMT 
--                                     + NVL(S.INV_ETC_ADD_AMT,0)    
                                END) AS INV_AMT    
                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN 'Y' END) AS CURR_CNG_FLG    
                              ,I.CRE_USR_ID INV_ISS_USR_ID
                              ,(SELECT X.GEN_PAY_TERM_CD
                                  FROM MDM_VENDOR X    
                                 WHERE X.VNDR_SEQ = I.INV_VNDR_SEQ    
                               ) PAY_TERM_CD
                              ,TO_CHAR(I.PAY_DT, 'YYYYMMDDHH24MISS') PAY_DT    
                              ,TO_CHAR(TO_DATE(A.INV_TERM_DT, 'YYYYMMDD'), 'YYYYMMDD') INV_TERM_DT    
                              ,(CASE WHEN I.TRSP_INV_AUD_STS_CD = 'CF' THEN 'C' -- Invoice Confirmed    
                                     WHEN A.IF_FLG IS NULL AND A.RQST_APRO_STEP_FLG = 'Y' THEN 'L' -- Requesting Approval    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'AR' THEN 'A' -- Approval Requested    
                                     WHEN A.IF_ERR_RSN = 'Sending...' THEN 'S' -- Sending    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'DA' THEN 'R' -- Disapproved    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IE' THEN 'C' -- I/F Error    
                                     WHEN A.RCV_ERR_FLG = 'E' THEN 'E'-- A/P Rejected                 
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'IF' THEN 'P' -- I/F Success    
                                     WHEN I.TRSP_INV_AUD_STS_CD = 'PD' THEN 'D' -- Paid    
                                END) INV_AUD_STS_CD    
                              ,NULL NO_AGMT_FLG    
                              ,(CASE WHEN S.CURR_CD <> S.INV_CURR_CD THEN TRS_COMMON_PKG.GET_CONVERSION_AMT_FNC(S.INV_CURR_CD    
                                                                                                               ,S.CURR_CD    
                                                                                                               ,S.INV_BZC_AMT    
                                                                                                               ,TO_CHAR(W.LOCL_CRE_DT, 'YYYYMM')    
                                                                                                               )    
                                     ELSE S.INV_BZC_AMT 
--                                     + NVL(S.INV_ETC_ADD_AMT,0)    
                                END)
                                - (S.BZC_AMT + NVL(S.FUEL_SCG_AMT,0) + NVL(S.OVR_WGT_SCG_AMT,0) + NVL(S.HZD_MTRL_SCG_AMT,0) + NVL(S.ETC_ADD_AMT,0)) AS INV_DIFF_AMT    
                              ,NULL NO_OPTM_ROUT_FLG    
                              ,NVL((SELECT X.EXPN_MAX_PRMT_RTO  -- WO/Inv Diff Ratio    
                                      FROM EAS_TRSP_AUTO_AUD_CRTE X    
                                     WHERE X.AUD_OFC_CD       = I.CRE_OFC_CD     
                                       AND X.TRSP_CRR_MOD_CD  = 'RD'    
                                       AND X.CGO_TP_CD        = S.CGO_TP_CD    
                                       AND X.EXPN_AUD_TGT_FLG = 'Y'    
                                       AND X.EXPN_AUD_CRTE_TP_CD = 'D'), (SELECT X.EXPN_MAX_PRMT_RTO    
                                                                            FROM EAS_TRSP_AUTO_AUD_CRTE X    
                                                                           WHERE X.AUD_OFC_CD = (SELECT TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(I.CRE_OFC_CD) FROM DUAL)    
                                                                             AND X.TRSP_CRR_MOD_CD  = 'RD'    
                                                                             AND X.CGO_TP_CD        = S.CGO_TP_CD    
                                                                             AND X.EXPN_AUD_TGT_FLG = 'Y'    
                                                                             AND X.EXPN_AUD_CRTE_TP_CD = 'D')    
                               ) AS INV_DIFF_RTO
                              ,W.LOCL_CRE_DT AS WO_ISS_DT    
                              ,S.CGO_TP_CD    
                              ,'RD' TRSP_CRR_MOD_CD    
                              ,W.TRSP_COST_DTL_MOD_CD    
                              ,S.TRSP_SO_OFC_CTY_CD    
                              ,S.TRSP_SO_SEQ    
                              ,W.BKG_RCVDE_TERM_CD    
                              ,W.EQ_NO
                              ,I.INV_CFM_DT
                          FROM TRS_TRSP_RAIL_INV_WRK I    
                              ,TRS_TRSP_RAIL_INV_DTL S    
                              ,TRS_TRSP_RAIL_BIL_ORD W    
                              ,AP_INV_HDR            A    
                         WHERE I.INV_NO       = S.INV_NO    
                           AND I.INV_VNDR_SEQ = S.INV_VNDR_SEQ    
                           AND S.TRSP_SO_OFC_CTY_CD = W.TRSP_SO_OFC_CTY_CD    
                           AND S.TRSP_SO_SEQ        = W.TRSP_SO_SEQ    
                           AND I.CSR_NO             = A.CSR_NO(+)    

                           #if(${batch_tp_cd} == 'A') -- 2시간 배치
                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS') - 1 AND TO_DATE(@[to_datetime], 'YYYYMMDDHH24MISS')
                             AND NOT EXISTS (SELECT 'X'
                                               FROM EAS_TRSP_AUD X
                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ
                                                AND X.INV_NO        = I.INV_NO
                                            )
                           -- 실시간 배치
                           #elseif(${batch_tp_cd} == 'M') -- 실시간 배치
                             AND EXISTS (SELECT 'X' 
                                           FROM EAS_AUTO_AUD_BAT X
                                          WHERE X.INV_NO        = I.INV_NO
                                            AND X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ
                                            AND X.SUB_SYS_CD      = 'TRS'
                                            AND X.BAT_PROG_STS_CD = 'P'
                                            AND X.CRE_DT > SYSDATE - 2 -- 다양한 사유로 배치 중지 되었을 경우를 대비하여 이틀간 자료를 배치 수행
                                         )
                           #elseif(${batch_tp_cd} == 'E') --  메뉴얼 기간 배치 (Period로 조회)
                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999
                             AND NOT EXISTS (SELECT 'X'
                                               FROM EAS_TRSP_AUD X
                                              WHERE X.INV_VNDR_SEQ  = I.INV_VNDR_SEQ
                                                AND X.INV_NO        = I.INV_NO
                                            )
                           #elseif(${batch_tp_cd} == 'F') -- 초기 자료 생성 (Period로 조회)
                             AND I.INV_CFM_DT BETWEEN TO_DATE(@[s_fm_dt], 'YYYYMMDD') AND TO_DATE(@[s_to_dt], 'YYYYMMDD') + 0.99999
                           #end

                           -- RHQ로 조회 (초기 자료 생성시 등에 옵션 조건으로 사용하기 위하여 남겨둠)
                           #if(${s_rhq_ofc_cd} != '')
                           AND I.CRE_OFC_CD IN (SELECT OFC_CD
                                                      FROM MDM_ORGANIZATION    
                                                     WHERE DELT_FLG = 'N'    
                                                   CONNECT BY NOCYCLE PRIOR OFC_CD = PRNT_OFC_CD    
                                                     START WITH OFC_CD = @[s_rhq_ofc_cd]    
                                               )
                           #end
                           -- Invoice No로 조회 
                           #if (${s_inv_no}!= '')
                             AND I.INV_NO IN (
                             #foreach( ${key} IN ${invNos}) 
                                #if($velocityCount < $invNos.size()) 
                                '${key}',
                                #else 
                                '${key}'
                                #end 
                             #end
                             )
                           #end 
                       ) AA    
                      ,EAS_TRSP_AUD BB    
                 WHERE 1=1    
                   AND AA.INV_VNDR_SEQ  = BB.INV_VNDR_SEQ(+)    
                   AND AA.INV_NO        = BB.INV_NO(+)    
                   AND AA.TRSP_SO_TP_CD = BB.TRSP_SO_TP_CD(+)
                ) AAA    
            GROUP BY TRSP_SO_TP_CD    
                    ,INV_VNDR_SEQ    
                    ,INV_NO
        ) AAAA
    WHERE 1=1			]]></sql>
			<params>
				<param name="to_datetime" type="12" value="" out="N"/>
				<param name="s_fm_dt" type="12" value="" out="N"/>
				<param name="s_to_dt" type="12" value="" out="N"/>
				<param name="s_rhq_ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
