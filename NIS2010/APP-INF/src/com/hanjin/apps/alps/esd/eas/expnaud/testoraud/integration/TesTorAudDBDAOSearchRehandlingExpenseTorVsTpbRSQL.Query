<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TesTorAudDBDAOSearchRehandlingExpenseTorVsTpbRSQL">
			<desc><![CDATA[Rehandling Expense - TOR vs. TPB 데이타 조회]]></desc>
			<sql><![CDATA[
SELECT OFC_CD 
     , PORT_CD
     , CLPT_IND_SEQ
     , RHND_EXPN_SEQ
     , VVD
     , LANE_CD
     , ACT_DEP_DT
     , CNTR_NO
     , RESPB_CNTR_NO
     , SZTP
     , POL
     , OPR_CD
     , PRECELL
     , POSITION
     , SHIFT_RSN
     , PARTY
     , FILE_ATCH
     , TPB_NO
     , TPB_AMT_USD
     , TPB_OFC
     , TPB_PTY_3RD
     , TPB_STS_NM
     , DECODE(OPR_CD,'SML',BKG_NO,'') BKG_NO
     , ( SELECT 'Y'
          FROM   EAS_RHND_CHG_CHK X
          WHERE  X.VSL_CD			  = SUBSTR(RT.VVD,1,4)
				 AND X.SKD_VOY_NO	  = SUBSTR(RT.VVD,5,4)
				 AND X.SKD_DIR_CD  	  = SUBSTR(RT.VVD,9,1)
                 AND X.PORT_CD        = RT.PORT_CD
                 AND X.CLPT_IND_SEQ   = RT.CLPT_IND_SEQ
                 AND X.CNTR_NO        = RT.CNTR_NO
                 AND X.RHND_EXPN_SEQ  = RT.RHND_EXPN_SEQ

        ) EAC_IF_FLG
  FROM (
        SELECT /*+ OPT_PARAM('_optimizer_push_pred_cost_based','TRUE') PUSH_PRED(BKG) */
               TOR.OFC_CD
             , TOR.PORT_CD
             , TOR.CLPT_IND_SEQ
             , RANK() OVER (PARTITION BY TOR.PORT_CD, TOR.VSL_CD||TOR.SKD_VOY_NO||TOR.SKD_DIR_CD, TOR.CNTR_NO ORDER BY TOR.PORT_CD, TOR.VSL_CD||TOR.SKD_VOY_NO||TOR.SKD_DIR_CD, TOR.CNTR_NO, BKG.BKG_NO) RHND_EXPN_SEQ -- Rehandling Expense Sequence
             , TOR.VSL_CD||TOR.SKD_VOY_NO||TOR.SKD_DIR_CD VVD
             , TOR.LANE_CD
             , TO_CHAR(TOR.ACT_DEP_DT,'YYYY-MM-DD') ACT_DEP_DT
             , TOR.CNTR_NO
             , TOR.RESPB_CNTR_NO
             , TOR.SZTP
             , TOR.POL
             , TOR.OPR_CD
             , TOR.PRECELL
             , TOR.POSITION
             , TOR.SHIFT_RSN
             , TOR.PARTY
             , TOR.FILE_ATCH
             , TPB.TPB_NO
             , TPB.TPB_AMT_USD
             , TPB.TPB_OFC
             , TPB.TPB_PTY_3RD
             , TPB.TPB_STS_NM
             , BKG.BKG_NO
          FROM (
                SELECT /*+ LEADING(A) INDEX(A XAK1VSK_ACT_PORT_SKD) */
                 CASE WHEN R.CNTR_NO IS NOT NULL AND LENGTH(R.CNTR_NO) >= 10 THEN C.RESPB_CNTR_NO
                         WHEN M.CNTR_NO IS NOT NULL AND LENGTH(M.CNTR_NO) >= 10 THEN C.CNTR_NO
                    END AS TOR_CNTR_NO
                     , M.CNTR_NO MST_M_CNTR_NO
                     , R.CNTR_NO MST_R_CNTR_NO
                     , L.EQ_CTRL_OFC_CD OFC_CD
                     , H.PORT_CD
                     , V.VSL_CD
                     , V.SKD_VOY_NO
                     , V.SKD_DIR_CD
                     , V.CLPT_IND_SEQ
                     , S.VSL_SLAN_CD LANE_CD
                     , A.ACT_DEP_DT
                     , C.CNTR_NO          
                     , C.RESPB_CNTR_NO
                     , C.SZTP
                     , C.POL
                     , C.OPR_CD
                     , C.PRECELL
                     , C.POSITION
                     , C.STATUS CNTR_HNDL_KND_CD
                     , NVL(C.SHIFT_TYPE,'')||NVL(C.SHIFT_RSN,'') AS SHIFT_RSN
                     , C.PARTY
                     , (SELECT DECODE(SIGN(COUNT(1)),1,'File Attached',NULL)
                          FROM OPF_TDR_ATCH_FILE F
                         WHERE C.VSL_CD   = F.VSL_CD
                           AND C.VOY_NO   = F.SKD_VOY_NO
                           AND C.DIR_CD   = F.SKD_DIR_CD
                           AND C.PORT_CD  = F.VPS_PORT_CD
                           AND C.CALL_IND = F.CLPT_IND_SEQ
                           AND C.STATUS   = F.CNTR_HNDL_KND_CD
                           AND C.CNTR_NO  = F.CNTR_NO
                       ) AS FILE_ATCH 
                  FROM VSK_VSL_SKD S
                     , VSK_VSL_PORT_SKD V
                     , VSK_ACT_PORT_SKD A
                     , TDR_HEADER H
                     , TDR_CNTR_DETAIL C
                     , MDM_LOCATION L
                     , MST_CONTAINER M
                     , MST_CONTAINER R
                 WHERE 1=1
                   AND S.VSL_CD       = V.VSL_CD
                   AND S.SKD_VOY_NO   = V.SKD_VOY_NO
                   AND S.SKD_DIR_CD   = V.SKD_DIR_CD
                   AND V.VSL_CD       = A.VSL_CD
                   AND V.SKD_VOY_NO   = A.SKD_VOY_NO
                   AND V.SKD_DIR_CD   = A.SKD_DIR_CD
                   AND V.VPS_PORT_CD  = A.VPS_PORT_CD
                   AND V.CLPT_IND_SEQ = A.CLPT_IND_SEQ
                   AND A.ACT_DEP_DT BETWEEN TO_DATE(REPLACE(@[s_fm_dt],'-',''),'YYYYMMDD') AND TO_DATE(REPLACE(@[s_to_dt],'-',''),'YYYYMMDD') + 0.99998 
                   #if($s_vvd.size() > 0) 
                       AND (V.VSL_CD, V.SKD_VOY_NO, V.SKD_DIR_CD) IN (
                           #foreach( ${key} in ${s_vvd}) 
                             #if($velocityCount == 1) 
                                ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9, 1))
                             #else 
                              , ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9, 1))
                             #end 
                           #end
                         )
                   #end
                   AND V.VSL_CD        = H.VSL_CD
                   AND V.SKD_VOY_NO    = H.VOY_NO
                   AND V.SKD_DIR_CD    = H.DIR_CD
                   AND V.VPS_PORT_CD   = H.PORT_CD
                   AND V.CLPT_IND_SEQ  = H.CALL_IND
                   AND H.VSL_CD        = C.VSL_CD
                   AND H.VOY_NO        = C.VOY_NO
                   AND H.DIR_CD        = C.DIR_CD
                   AND H.PORT_CD       = C.PORT_CD
                   AND H.CALL_IND      = C.CALL_IND
                   AND C.STATUS        = 'ST'
                   AND TRIM(C.PRECELL) IS NOT NULL
                   #if (${s_shift_rsn} == '1')
                        AND NVL(C.SHIFT_TYPE,'')||NVL(C.SHIFT_RSN,'') IN ('BIC','QIC')
                   #elseif ( ${s_shift_rsn} == '2')
                        AND NVL(C.SHIFT_TYPE,'')||NVL(C.SHIFT_RSN,'') IN ('BIT','QIT')
                   #elseif ( ${s_shift_rsn} == '3')
                        AND NVL(C.SHIFT_TYPE,'')||NVL(C.SHIFT_RSN,'') NOT IN ('QIC','BIC','BIT','QIT')
                   #end
                   AND L.LOC_CD         = H.PORT_CD
                   AND NVL(L.DELT_FLG, 'N') <> 'Y'
                   AND TRS_COMMON_PKG.TRS_GET_RHQ_OFC_CD(L.EQ_CTRL_OFC_CD) = @[s_rhq_ofc_cd]
                   AND C.CNTR_NO = M.CNTR_NO(+)
                   #if (${s_cntr_no} != '')
                        AND INSTR(@[s_cntr_no], C.CNTR_NO) > 0
                   #end
                   AND C.RESPB_CNTR_NO = R.CNTR_NO(+)
                   #if (${s_port_cd} != '' && ${s_trmnl_cd} == '')		--// PORT/YARD 조건
                        AND V.VPS_PORT_CD = @[s_port_cd]
                   #elseif (${s_port_cd} != '' && ${s_trmnl_cd} != '')
				   		--AND V.YD_CD IN ( ${s_trmnl_cd} )
						AND ( V.VPS_PORT_CD = @[s_port_cd] AND INSTR(@[s_trmnl_cd], SUBSTR(V.YD_CD,6)) > 0 )
				   #end
               ) TOR
             , (
                SELECT /*+ INDEX(BC XAK1BKG_CONTAINER) INDEX(BV XAK1BKG_VVD) */
                       BB.BKG_NO
                     , BV.VSL_CD VSL_CD
                     , BV.SKD_VOY_NO SKD_VOY_NO
                     , BV.SKD_DIR_CD SKD_DIR_CD
                     , BV.POL_CD 
                     , BV.POL_CLPT_IND_SEQ
                     , BV.POD_CD
                     , BV.POD_CLPT_IND_SEQ
                     , BV.VSL_PRE_PST_CD
                     , BV.SLAN_CD
                     , BC.CNTR_NO
                  FROM BKG_BOOKING BB
                     , BKG_VVD BV
                     , BKG_CONTAINER BC
                 WHERE 1=1
                   AND BB.BKG_STS_CD IN ('F','W')
                   AND BB.BKG_NO = BC.BKG_NO
                   AND BB.BKG_NO = BV.BKG_NO 
                   AND BC.BKG_NO = BV.BKG_NO 
                   AND BV.VSL_PRE_PST_CD IN ('S','T','U')
               ) BKG
             , (
                SELECT W.BKG_NO AS TPB_BKG_NO
                     , W.EQ_NO  AS TPB_CNTR_NO
                     , MAX(NVL(W.FM_CLT_CNG_OFC_N3PTY_NO, W.N3PTY_NO)) TPB_NO  --TPB_TPB NBR TPB Billing Case : RH / CNTR nbr + BKG nbr 가 일치하는 TPB nbr
                     , SUM(ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(W.CFM_CURR_CD, W.CFM_AMT, TO_CHAR(W.CFM_DT,'YYYYMM')),2)) TPB_AMT_USD
                     , MAX(W.OFC_CD) TPB_OFC                                            -- TPB_TPB OFC 현재 Responsible OFC
                     , MAX(DECODE(W.VNDR_CUST_DIV_CD,'V',W.VNDR_CNT_CD||W.VNDR_SEQ,'C',W.CUST_CNT_CD||W.CUST_SEQ,W.N3PTY_OFC_CD)) TPB_PTY_3RD          --TPB_3rd Party 해당 TPB의 3rd         Party Name     
                     , MAX(CASE WHEN Z.OTS_STS_CD IN ('R','T','J') THEN COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD02799',X.OTS_STS_DTL_CD)
                                ELSE COMMCODE_PKG.GET_COMDTL_NAME_FNC('CD00588', Z.OTS_STS_CD)
                           END) AS TPB_STS_NM -- TPB status
                  FROM TPB_OTS_GRP X
                     , TPB_ADJ_STS Y
                     , TPB_OTS_GRP_STS Z
                     , TPB_OTS_DTL W
                 WHERE X.N3PTY_NO           = Y.N3PTY_NO(+)
                   AND Y.STL_STS_LST_FLG(+) = 'Y' 
                   AND Y.N3PTY_STL_TP_CD(+) = 'O'
                   AND X.N3PTY_NO           = Z.N3PTY_NO
                   AND Z.OTS_STS_LST_FLG    = 'Y' 
                   AND X.N3PTY_NO           = W.N3PTY_NO 
                   AND W.N3PTY_BIL_TP_CD    = 'RH'
                   AND W.N3PTY_EXPN_TP_CD   = 'TES'
                   AND W.N3PTY_DELT_TP_CD IN ('N','S')
                   AND W.BKG_NO IS NOT NULL
                   AND W.EQ_NO  IS NOT NULL
                 GROUP BY W.BKG_NO, W.EQ_NO
               ) TPB
         WHERE 1=1
           AND TOR_CNTR_NO    = BKG.CNTR_NO(+)
           AND TOR.VSL_CD     = BKG.VSL_CD(+)
           AND TOR.SKD_VOY_NO = BKG.SKD_VOY_NO(+)
           --AND TOR.SKD_DIR_CD = BKG.SKD_DIR_CD(+)
           AND TOR.LANE_CD    = BKG.SLAN_CD(+)
           AND BKG.BKG_NO     = TPB.TPB_BKG_NO(+)
           AND BKG.CNTR_NO    = TPB.TPB_CNTR_NO(+)
           #if (${s_bkg_no} != '')
                AND INSTR(@[s_bkg_no], BKG.BKG_NO) > 0
           #end
           #if (${s_tpb_flg} == 'Y')
                AND TPB.TPB_NO IS NOT NULL
           #elseif (${s_tpb_flg} == 'N')
                AND TPB.TPB_NO IS NULL 
           #end
         GROUP BY 
               TOR.OFC_CD 
             , TOR.PORT_CD
             , TOR.VSL_CD||TOR.SKD_VOY_NO||TOR.SKD_DIR_CD
             , TOR.CLPT_IND_SEQ
             , TOR.LANE_CD
             , TOR.ACT_DEP_DT
             , TOR.CNTR_NO
             , TOR.RESPB_CNTR_NO
             , TOR.SZTP
             , TOR.POL
             , TOR.OPR_CD
             , TOR.PRECELL
             , TOR.POSITION
             , TOR.SHIFT_RSN
             , TOR.PARTY
             , TOR.FILE_ATCH
             , TPB.TPB_NO
             , TPB.TPB_AMT_USD
             , TPB.TPB_OFC
             , TPB.TPB_PTY_3RD
             , TPB.TPB_STS_NM
             , BKG.BKG_NO
             , TOR.CNTR_HNDL_KND_CD
         ORDER BY 
               TOR.OFC_CD
             , TOR.PORT_CD
             , TOR.VSL_CD||TOR.SKD_VOY_NO||TOR.SKD_DIR_CD
             , TOR.CNTR_NO
             , TO_CHAR(TOR.ACT_DEP_DT,'YYYY-MM-DD')
             , BKG.BKG_NO
        )RT
WHERE 	1 = 1
       	#if (${s_eac_if} != '')
        	#if (${s_eac_if} == 'Y')
             	AND EXISTS (SELECT 	'1'
							FROM   	EAS_RHND_CHG_CHK X
         					WHERE  	X.VSL_CD			  = SUBSTR(RT.VVD,1,4)
				 					AND X.SKD_VOY_NO	  = SUBSTR(RT.VVD,5,4)
				 					AND X.SKD_DIR_CD  	  = SUBSTR(RT.VVD,9,1)
                 					AND X.PORT_CD        = RT.PORT_CD
                 					AND X.CLPT_IND_SEQ   = RT.CLPT_IND_SEQ
                 					AND X.CNTR_NO        = RT.CNTR_NO
                 					AND X.RHND_EXPN_SEQ  = RT.RHND_EXPN_SEQ
                           )
          	#else
             	AND NOT EXISTS (SELECT 	'1'
                	            FROM   	EAS_RHND_CHG_CHK X
         						WHERE  	X.VSL_CD			  = SUBSTR(RT.VVD,1,4)
				 						AND X.SKD_VOY_NO	  = SUBSTR(RT.VVD,5,4)
				 						AND X.SKD_DIR_CD  	  = SUBSTR(RT.VVD,9,1)
                 						AND X.PORT_CD        = RT.PORT_CD
                 						AND X.CLPT_IND_SEQ   = RT.CLPT_IND_SEQ
                 						AND X.CNTR_NO        = RT.CNTR_NO
                 						AND X.RHND_EXPN_SEQ  = RT.RHND_EXPN_SEQ
                         		)
          	#end
       	#end			]]></sql>
			<params>
				<param name="s_fm_dt" type="12" value="" out="N"/>
				<param name="s_to_dt" type="12" value="" out="N"/>
				<param name="s_rhq_ofc_cd" type="12" value="" out="N"/>
				<param name="s_cntr_no" type="12" value="" out="N"/>
				<param name="s_port_cd" type="12" value="" out="N"/>
				<param name="s_trmnl_cd" type="12" value="" out="N"/>
				<param name="s_bkg_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
