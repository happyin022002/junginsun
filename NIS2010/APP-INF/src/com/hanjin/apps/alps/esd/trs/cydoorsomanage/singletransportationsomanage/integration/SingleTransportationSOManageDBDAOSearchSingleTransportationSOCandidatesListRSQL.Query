<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SingleTransportationSOManageDBDAOSearchSingleTransportationSOCandidatesListRSQL">
			<desc><![CDATA[SO 대상 조회]]></desc>
			<sql><![CDATA[
SELECT  SUBSTR(X.BKG_VVD_IB, 1, INSTR(X.BKG_VVD_IB, '^', 1, 1) - 1) AS IB_VVD_CD
           ,SUBSTR(X.BKG_VVD_OB, 1, INSTR(X.BKG_VVD_OB, '^', 1, 1) - 1) AS OB_VVD_CD
           ,X.CTRL_OFC_CD
           ,X.COP_NO
           ,(CASE WHEN X.EQ_NO = 'SMCU0000000' THEN ''
                  WHEN X.TRSP_BND_CD = 'O' AND X.TRSP_COST_DTL_MOD_CD  = 'DR' THEN ''
                  ELSE X.EQ_NO
            END) AS EQ_NO
           ,X.EQ_TPSZ_CD
           ,X.COST_ACT_GRP_SEQ
           ,X.COST_ACT_GRP_CD
           ,X.VNDR_SEQ
           ,DECODE(X.TRSP_COST_DTL_MOD_CD,'','CY',X.TRSP_COST_DTL_MOD_CD) AS TRSP_COST_DTL_MOD_CD
           ,X.TRSP_CRR_MOD_CD
		   ,X.TRSP_CRR_MOD_CD TRSP_CRR_MOD_CD2
           ,X.FM_NOD_CD
           ,X.FM_NOD_YD_NO AS FM_NOD_YARD
           ,X.TO_NOD_CD
           ,X.TO_NOD_YD_NO AS TO_NOD_YARD
           ,X.VIA_NOD_CD
           ,X.VIA_NOD_YD_NO AS VIA_NOD_YARD
           ,X.DOR_NOD_CD
           ,X.DOR_NOD_YD_NO AS DOR_NOD_YARD
           ,'' AS FM_NOD_CD2    -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS FM_NOD_YARD2  -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS TO_NOD_CD2    -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS TO_NOD_YARD2  -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS VIA_NOD_CD2   -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS VIA_NOD_YARD2 -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS DOR_NOD_CD2   -- java Adapter에서 데이타를 셋팅한다.
           ,'' AS DOR_NOD_YARD2 -- java Adapter에서 데이타를 셋팅한다.
           ,TO_CHAR(X.N1ST_NOD_PLN_DT, 'YYYYMMDD'  )                              AS N1ST_NOD_PLN_DT
           ,TO_CHAR(X.N1ST_NOD_PLN_DT, 'HH24:MI:SS')                              AS N1ST_NOD_PLN_DT_HMS
           ,TO_CHAR(X.LST_NOD_PLN_DT, 'YYYYMMDD'  )                               AS LST_NOD_PLN_DT
           ,TO_CHAR(X.LST_NOD_PLN_DT, 'HH24:MI:SS')                               AS LST_NOD_PLN_DT_HMS
           ,NULL DOR_NOD_PLN_DT
           ,NULL DOR_NOD_PLN_DT_HMS    
           ,NULL DOR_ARR_DT_DD
           ,NULL DOR_ARR_DT_HMS
           ,NULL DOR_ARR_DT
           ,NULL DOR_NOD_PLN
           ,X.TRO_SEQ
           ,X.TRO_SUB_SEQ
           ,DECODE(X.TRO_SEQ, NULL, 'N', 'Y') AS TRO_CNFM
           ,NULL TRO_CFM_OFC_CD
           ,NULL TRO_CFM_USR_ID
           ,NULL TRO_CFM_UPD_DT1
           ,NULL TRO_CFM_UPD_DT2
           ,NULL TRO_CFM_CURR_CD
           ,NULL TRO_CFM_REV_AMT
           ,NULL TRO_LOD_REF_NO
           ,NULL TRO_REP_CMDT_CD
           ,X.TRSP_BND_CD
           ,X.TRNS_RQST_OFC_CD
           ,X.TRNS_RQST_USR_ID
           ,X.TRNS_RQST_RSN
           ,X.RAIL_CMB_THRU_TP_CD
           ,X.BKG_RCVDE_TERM_CD
           ,X.BKG_NO
           ,X.POD_CONTI_CD
           ,X.FM_LOC_CONTI_CD
           ,X.CUST_NOMI_TRKR_FLG
           ,X.CUST_CNT_CD
           ,X.CUST_SEQ
           ,X.CNEE_CUST_CNT_CD
           ,X.CNEE_CUST_SEQ
           ,X.SHPR_CUST_CNT_CD
           ,X.SHPR_CUST_SEQ
           ,NULL ACT_CUST_CD
           ,NULL ACT_CUST_CNT_CD
           ,NULL ACT_CUST_SEQ
           ,NULL ACT_CUST_ADDR_SEQ
           ,NULL DOR_PST_CD
           ,NULL FCTRY_NM
           ,NULL DOR_DE_ADDR
           ,NULL CNTC_PSON_PHN_NO
           ,NULL CNTC_PSON_FAX_NO
           ,NULL CNTC_PSON_NM
		#if( ${ui_conti_cd} == 'E' )
		   ,(SELECT A.SPCL_INSTR_RMK
    		   FROM BKG_EUR_TRO A
			  WHERE  1=1
			    AND A.BKG_NO = X.BKG_NO
                AND A.IO_BND_CD = X.TRSP_BND_CD
                AND A.TRO_SEQ  = X.TRO_SEQ
                AND A.RQST_SUB_SEQ = X.TRO_SUB_SEQ ) SPCL_INSTR_RMK
		#else			
           ,NULL SPCL_INSTR_RMK
		#end
           ,NULL USA_DO_USR_INFO
           ,NULL DO_CRE_DATE
           ,NULL DO_CRE_TIME
           ,X.BL_NO
           ,X.BKG_CGO_TP_CD
           ,X.CGO_TP_CD
           ,SUBSTR(X.BKG_CNTR, 1, INSTR(X.BKG_CNTR, '^', 1, 1) - 1) AS PKGCODE
           ,X.TRNK_VVD_CD AS TRUNKVVD
           ,X.SLAN_CD
           ,X.POR_CD
           ,X.POL_CD
           ,X.POD_CD
           ,X.DEL_CD
           ,TO_DATE(SUBSTR(X.BDR_INFO, 1, INSTR(X.BDR_INFO, '^', 1, 1) - 1),'YYYYMMDDHH24MISS') AS BKG_BDR_DT -- SUBSTR의 첫번째 값
           ,SUBSTR(X.BDR_INFO, INSTR(X.BDR_INFO, '^', 1, 1) + 1) BKG_BDR_FLG -- SUBSTR의 두번째 값
           ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 1) AS SEALNO
           ,(SELECT CNTR_SEAL_NO FROM BKG_CNTR_SEAL_NO WHERE BKG_NO  = X.BKG_NO AND CNTR_NO = X.EQ_NO AND CNTR_SEAL_SEQ = 2) AS SEALNO2
           ,SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 8) + 1, INSTR(X.BKG_CNTR, '^', 1, 9) - INSTR(X.BKG_CNTR, '^', 1, 8) - 1) AS CNTR_WGT
           ,SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 2) + 1, INSTR(X.BKG_CNTR, '^', 1, 3) - INSTR(X.BKG_CNTR, '^', 1, 2) - 1) AS WGT_MEAS_UT_CD
           ,TO_NUMBER(TRIM(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 1) + 1, INSTR(X.BKG_CNTR, '^', 1, 2) - INSTR(X.BKG_CNTR, '^', 1, 1) - 1))) AS NOOFPKG
       
           ,CASE WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 3) + 1, INSTR(X.BKG_CNTR, '^', 1, 4) - INSTR(X.BKG_CNTR, '^', 1, 3) - 1) = 'Y' THEN 'DG'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 4) + 1, INSTR(X.BKG_CNTR, '^', 1, 5) - INSTR(X.BKG_CNTR, '^', 1, 4) - 1) = 'Y' THEN 'BB'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 5) + 1, INSTR(X.BKG_CNTR, '^', 1, 6) - INSTR(X.BKG_CNTR, '^', 1, 5) - 1) = 'Y' THEN 'AK'                            
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 6) + 1, INSTR(X.BKG_CNTR, '^', 1, 7) - INSTR(X.BKG_CNTR, '^', 1, 6) - 1) = 'Y' THEN 'RF'
                 WHEN SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 7) + 1, INSTR(X.BKG_CNTR, '^', 1, 8) - INSTR(X.BKG_CNTR, '^', 1, 7) - 1) = 'Y' THEN 'RD'                                                   
                ELSE -- Adds logic of Partial Booking Special Cargo
                    CASE WHEN X.EQ_NO = 'SMCU0000000' THEN ''
	                     WHEN X.TRSP_BND_CD = 'O' AND X.TRSP_COST_DTL_MOD_CD  = 'DR' THEN ''
                       ELSE 
	                     ( SELECT MAX(DECODE(DCGO_FLG,'Y', 'DG', DECODE(RC_FLG, 'Y', 'RF', DECODE(BB_CGO_FLG, 'Y', 'BB', DECODE(AWK_CGO_FLG, 'Y', 'AK', DECODE(RD_CGO_FLG, 'Y', 'RD', ''))))))
                           FROM BKG_CONTAINER
		                   WHERE (BKG_NO, CNTR_NO) IN (
			                 SELECT BKG_NO,CNTR_NO FROM  SCE_COP_HDR WHERE MST_COP_NO IN (SELECT MST_COP_NO FROM SCE_COP_HDR WHERE BKG_NO = X.BKG_NO AND CNTR_NO = X.EQ_NO)
                         ))
                    END
            END AS SPCL_CGO_CNTR_TP_CD
           ,X.SHPR_CUST_NM
           ,X.CNEE_CUST_NM

           ,TRS_COMMON_PKG.GET_CONV_WGT_TO_KGS_FNC(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 2) + 1, INSTR(X.BKG_CNTR, '^', 1, 3) - INSTR(X.BKG_CNTR, '^', 1, 2) - 1),
                                              TRIM(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 8) + 1, INSTR(X.BKG_CNTR, '^', 1, 9) - INSTR(X.BKG_CNTR, '^', 1, 8) - 1))
           ) AS CNTR_KGS_WGT -- EUR TRO에 Weight가 없으면 BKG CNTR 의 Weight값을 조회한다.

           ,TRS_COMMON_PKG.GET_CONV_WGT_TO_LBS_FNC(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 2) + 1, INSTR(X.BKG_CNTR, '^', 1, 3) - INSTR(X.BKG_CNTR, '^', 1, 2) - 1),
                                              TRIM(SUBSTR(X.BKG_CNTR, INSTR(X.BKG_CNTR, '^', 1, 8) + 1, INSTR(X.BKG_CNTR, '^', 1, 9) - INSTR(X.BKG_CNTR, '^', 1, 8) - 1))
           ) AS CNTR_LBS_WGT -- EUR TRO에 Weight가 없으면 BKG CNTR 의 Weight값을 조회한다.
           ,X.NTFY_CUST_NM
           ,X.SC_NO
           ,X.GEN_RFA_NO AS RFANO
           ,X.CMDT_CD
           , NVL((SELECT LPAD(NVL(V.PCK_TP_CD, ' '),2, ' ') || TO_CHAR(V.PCK_QTY)
                    FROM BKG_CNTR_MF_DESC V
                   WHERE V.BKG_NO = X.BKG_NO
                     AND V.CNTR_NO  = X.EQ_NO
                     AND V.CNTR_MF_SEQ = 1),
                 (SELECT REPLACE(W.CMDT_NM, CHR(13)||CHR(10)||CHR(9)||CHR(43), ' ') 
                    FROM MDM_COMMODITY W
                   WHERE W.CMDT_CD = X.CMDT_CD) 
                ) AS CMDT_NAME

           ,DECODE(@[ui_conti_cd], 'M', SUBSTR(X.CGO_RLSE, 1, INSTR(X.CGO_RLSE, '^', 1, 1) - 1), '') AS CGOR_FRT_PAY_IND_FLG
           ,DECODE(@[ui_conti_cd], 'M', SUBSTR(X.CGO_RLSE, INSTR(X.CGO_RLSE, '^', 1, 1) + 1, INSTR(X.CGO_RLSE, '^', 1, 2) - INSTR(X.CGO_RLSE, '^', 1, 1) - 1), '') AS CGOR_ORG_BL_RCVR_IND_FLG
           ,DECODE(@[ui_conti_cd], 'M', SUBSTR(X.CGO_RLSE, INSTR(X.CGO_RLSE, '^', 1, 2) + 1), '') AS CGOR_CSTMS_ACPT_RE_IND_FLG           
           ,SUBSTR(X.MST_CNTR, 1, INSTR(X.MST_CNTR, '^', 1, 1) - 1) OWNR_CO_CD
           ,SUBSTR(X.MST_CNTR, INSTR(X.MST_CNTR, '^', 1, 1) + 1, INSTR(X.MST_CNTR, '^', 1, 2) - INSTR(X.MST_CNTR, '^', 1, 1) - 1) IMDT_EXT_FLG
           ,SUBSTR(X.MST_CNTR, INSTR(X.MST_CNTR, '^', 1, 2) + 1) LSTM_CD
           ,(SELECT CSTMS_ADV_BL.CSTMS_LOC_CD FROM BKG_CSTMS_ADV_BL CSTMS_ADV_BL WHERE CSTMS_ADV_BL.BL_NO = X.BL_NO AND CSTMS_ADV_BL.CNT_CD = 'US' AND CSTMS_ADV_BL.MF_NO IS NULL AND ROWNUM =1) AS IBD_CSTMS_CLR_LOC_CD
           ,X.DOR_SVC_TP_CD
           ,X.INTER_RMK
           ,X.CRE_USR_ID
           ,X.UPD_USR_ID
           ,X.TRSP_SO_OFC_CTY_CD
		   ,NVL(CASE WHEN X.TRSP_BND_CD = 'I' THEN SUBSTR(X.BKG_VVD_IB, INSTR(X.BKG_VVD_IB, '^', 1, 1) + 1, INSTR(X.BKG_VVD_IB, '^', 1, 2) - INSTR(X.BKG_VVD_IB, '^', 1, 1) - 1)
                     ELSE SUBSTR(X.BKG_VVD_OB, INSTR(X.BKG_VVD_OB, '^', 1, 1) + 1, INSTR(X.BKG_VVD_OB, '^', 1, 2) - INSTR(X.BKG_VVD_OB, '^', 1, 1) - 1)
                END,X.POD_CD) AS TRSP_NXT_PORT_CD
           ,TRS_CYDOOR_COMM_PKG.GET_MULTI_LST_LOC(X.FM_NOD_CD, X.TO_NOD_CD) AS LST_LOC_CD
           ,NULL CUSTOMSCLEARANCENO
           ,NULL CUSTOMSCLEARANCE
           ,NULL MLT_STOP_DE_FLG
           ,NULL PROC_CFM_IND_CD
           ,TRS_CYDOOR_COMM_PKG.GET_TRSP_COST_DTL_MOD_SEP(X.TRSP_COST_DTL_MOD_CD, X.FM_NOD_CD, X.TO_NOD_CD, X.TRSP_BND_CD) AS TRSP_COST_DTL_MOD_SEP
           ,'' DCGO_SEQ -- CY에서는 데이타 없음
           ,'' RC_SEQ  -- CY에서는 데이타 없음
           ,'' AWK_CGO_SEQ -- CY에서는 데이타 없음
           ,X.CNTR_PKUP_NO
           ,TO_CHAR(X.AVAL_DT, 'YYYYMMDD')       AS AVAL_DT
           ,TO_CHAR(X.AVAL_DT, 'HH24:MI:SS')     AS AVAL_DT_HMS
           ,TO_CHAR(X.LST_FREE_DT, 'YYYYMMDD')   AS LST_FREE_DT
           ,TO_CHAR(X.LST_FREE_DT, 'HH24:MI:SS') AS LST_FREE_DT_HMS
           ,(SELECT DECODE(NVL(U.EQ_SUBST_CGO_QTY, 0), 0, U.CNTR_TPSZ_CD
                           ||' '||U.OP_CNTR_QTY, U.CNTR_TPSZ_CD||' '||U.OP_CNTR_QTY
                           ||'-SUB '||U.EQ_SUBST_CNTR_TPSZ_CD ||' '||U.EQ_SUBST_CGO_QTY
                          )
              FROM BKG_QUANTITY U
             WHERE U.BKG_NO       = X.BKG_NO
               AND U.CNTR_TPSZ_CD = X.EQ_TPSZ_CD) AS BKG_QTY
           ,NULL CSTMS_CLR_NO
           ,NULL REP_CMDT_CD
           ,NULL REV_CURR_CD
           ,NULL TRSP_RQST_ORD_REV_AMT
           ,NULL TRSP_RQST_ORD_BND_CD
           ,NULL TRSP_RQST_ORD_SEQ
           ,X.TRSP_SO_STS_CD
           ,X.TRSP_SO_STS_NM
           ,CASE WHEN X.MST_LCL_CD = 'P'
                  AND SUBSTR(X.BDR_INFO, INSTR(X.BDR_INFO, '^', 1, 1) + 1) = 'N'
                  AND X.TRSP_BND_CD            = 'I'
                  AND X.TRSP_COST_DTL_MOD_CD   = 'DR'
                 THEN 'FALSE'
                 WHEN X.MST_LCL_CD = 'P'
                 THEN 'TRUE'
                 ELSE 'FALSE'
            END                      AS  CHK1
           ,(SELECT U.BKG_NO
               FROM SCE_COP_HDR U
              WHERE U.MST_COP_NO = X.COP_NO
                AND ROWNUM = 1) AS PRT_BKG_NO

           ,TO_CHAR(X.RAIL_CRE_DT, 'YYYY-MM-DD') AS RAIL_CRE_DT_DD
           ,TO_CHAR(X.RAIL_CRE_DT, 'HH24:MI:SS') AS RAIL_CRE_DT_HMS
           ,X.RAIL_TO_NOD_CD
           ,'' LSE_CNTR_FLG
           ,'' TRSP_CRR_MOD_CD2
           ,CASE WHEN X.TRSP_BND_CD = 'I' THEN SUBSTR(X.BKG_VVD_IB, 1, INSTR(X.BKG_VVD_IB, '^', 1, 1) - 1)
                 ELSE SUBSTR(X.BKG_VVD_OB, 1, INSTR(X.BKG_VVD_OB, '^', 1, 1) - 1)
            END AS FEEDERVVD
		   ,(  SELECT CASE
                        WHEN COUNT(*) = 0 THEN 'N'
                        ELSE 'Y'
                      END AS SO_DUP_CHK
                FROM TRS_TRSP_SVC_ORD
                WHERE COP_NO = X.COP_NO
                  AND DECODE(TRSP_COST_DTL_MOD_CD, 'LS', 'CY', 'TS', 'CY', TRSP_COST_DTL_MOD_CD ) = X.TRSP_COST_DTL_MOD_CD
                  AND TRSP_CRR_MOD_CD = X.TRSP_CRR_MOD_CD
                  AND FM_NOD_CD = X.FM_NOD_CD||X.FM_NOD_YD_NO
                  AND TO_NOD_CD = X.TO_NOD_CD||X.TO_NOD_YD_NO
                  AND NVL(VIA_NOD_CD, ' ') = NVL(X.VIA_NOD_CD||X.VIA_NOD_YD_NO, ' ') 
                  AND DELT_FLG = 'N'
			) DUP_FLG
      	  ,SUBSTR (X.PRD_DIST, 1, INSTR (X.PRD_DIST, '/') - 1) LNK_DIST_DIV_CD
      	  ,SUBSTR (X.PRD_DIST, INSTR (X.PRD_DIST, '/') + 1) TTL_DIST
          ,X.NON_RT_STS_CD
          ,X.BLCK_STWG
    FROM  (SELECT TMP.*
                ,(SELECT NVL(IB.VSL_CD||IB.SKD_VOY_NO||IB.SKD_DIR_CD, ' ')||'^'||NVL(IB.POD_CD, ' ')||'^'||NVL(IB.VSL_PRE_PST_CD, ' ')||'^'
                    FROM BKG_VVD IB
                   WHERE IB.BKG_NO = TMP.BKG_NO
                     AND IB.POD_CD = TMP.FM_NOD_CD
                     AND ROWNUM = 1) BKG_VVD_IB
                ,(SELECT NVL(OB.VSL_CD||OB.SKD_VOY_NO||OB.SKD_DIR_CD, ' ')||'^'||NVL(OB.POD_CD, ' ')||'^'
                    FROM BKG_VVD OB
                   WHERE OB.BKG_NO = TMP.BKG_NO
                     AND OB.POL_CD = ( CASE WHEN TMP.TRSP_BND_CD <> 'O' THEN TMP.FM_NOD_CD
                                       ELSE TMP.TO_NOD_CD END )
                     AND ROWNUM = 1) BKG_VVD_OB
                ,(SELECT NVL(RLSE.FRT_CLT_FLG, ' ') || '^' || NVL(RLSE.OBL_RDEM_FLG, ' ') || '^' || DECODE(RLSE.CSTMS_CLR_CD, 'Y', 'Y', ' ')
                    FROM BKG_CGO_RLSE RLSE
                   WHERE RLSE.BL_NO = TMP.BL_NO) CGO_RLSE
                ,(SELECT NVL(BKG_CNTR.PCK_TP_CD, ' ') || '^' || NVL(TO_CHAR(BKG_CNTR.PCK_QTY), ' ') || '^' || NVL(WGT_UT_CD, ' ')
                         || '^' || NVL(BKG_CNTR.DCGO_FLG , ' ') || '^' || NVL(BKG_CNTR.BB_CGO_FLG , ' ') || '^' || NVL(BKG_CNTR.AWK_CGO_FLG , ' ') 
                         || '^' || NVL(BKG_CNTR.RC_FLG , ' ') || '^' || NVL(BKG_CNTR.RD_CGO_FLG , ' ') || '^' || NVL(TO_CHAR(BKG_CNTR.CNTR_WGT) , ' ') || '^'   
                    FROM BKG_CONTAINER BKG_CNTR
                   WHERE BKG_CNTR.BKG_NO  = TMP.BKG_NO
                     AND BKG_CNTR.CNTR_NO = TMP.EQ_NO ) BKG_CNTR
                ,(SELECT NVL(MST_CNTR.OWNR_CO_CD, ' ') || '^' || NVL(MST_CNTR.IMDT_EXT_FLG, ' ') || '^' || NVL(MST_CNTR.LSTM_CD, ' ')
                    FROM MST_CONTAINER MST_CNTR
                   WHERE MST_CNTR.CNTR_NO = TMP.EQ_NO) MST_CNTR
                ,(SELECT TO_CHAR(BDR_DT,'YYYYMMDDHH24MISS')||'^'||NVL(BDR_FLG,'N')
                    FROM BKG_BL_DOC DOC
                   WHERE DOC.BKG_NO = TMP.BKG_NO) BDR_INFO
				,TRS_COMMON_PKG.GET_PRD_DISTANCE_FNC ( FM_NOD_CD || FM_NOD_YD_NO
                 			                          ,TO_NOD_CD || TO_NOD_YD_NO
                                                      ,VIA_NOD_CD || VIA_NOD_YD_NO
		                                              ,DOR_NOD_CD || DOR_NOD_YD_NO
                                                      ,TRSP_BND_CD
													  ,TRSP_COST_DTL_MOD_CD
                                                      ,TRSP_CRR_MOD_CD
                                                      ) PRD_DIST
                ,(SELECT BB.NON_RT_STS_CD
                  FROM BKG_BOOKING BB
                  WHERE BB.BKG_NO = TMP.BKG_NO ) NON_RT_STS_CD
                ,(SELECT BB.BLCK_STWG_CD FROM BKG_BOOKING BB WHERE BB.BKG_NO = TMP.BKG_NO) AS BLCK_STWG
             FROM TRS_TRSP_SVC_ORD_TMP TMP
            WHERE TRSP_TMP_SEQ = @[trsp_tmp_seq]
         ) X
         ORDER BY N1ST_NOD_PLN_DT DESC			]]></sql>
			<params>
				<param name="ui_conti_cd" type="12" value="" out="N"/>
				<param name="trsp_tmp_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
