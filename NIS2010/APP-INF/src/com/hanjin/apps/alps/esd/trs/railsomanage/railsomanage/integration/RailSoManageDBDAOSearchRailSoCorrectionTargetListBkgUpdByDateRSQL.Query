<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailSoManageDBDAOSearchRailSoCorrectionTargetListBkgUpdByDateRSQL">
			<desc><![CDATA[SO 발행 된 건들 중 BKG UPDAT(DATE 조회)E에 대한 조회 SQL]]></desc>
			<sql><![CDATA[
SELECT
    TMP.TRSP_SO_OFC_CTY_CD,
    TMP.TRSP_SO_SEQ,
    TMP.BIL_ISS_KNT,
	MAX(TMP.BIL_ISS_STS_CD) BIL_ISS_STS_CD,
    MAX(
         CASE WHEN (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM')THEN
                                                                                                CASE WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'A' THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'Y', 'N') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'N' THEN 'N' 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NOT NULL THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'Y', 'N') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL THEN 'N' 
                                                                                                     ELSE '' 
                                                                                                END 
			  WHEN ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM') THEN
                                                                                                CASE WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) = 'N' THEN 'N' 
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NOT NULL THEN 'Y'
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NULL THEN 'N' 
                                                                                                     ELSE '' 
                                                                                                END 
             ELSE '' 
        END 
       ) EDI_RESENT,
    MAX( 
        CASE WHEN (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND TMP.BKG_NO_RVIS_FLG IS NOT NULL AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND DECODE(TMP.CGO_TP_CD, 'F', TMP.POL_NOD_CD, 'M', TMP.TO_NOD_CD||TMP.TO_NOD_YARD) = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR (TMP.TRSP_SO_STS_CD = 'I' AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM')THEN
                                                                                                CASE WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'A' THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'N', 'Y') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) = 'N' THEN 'Y' 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NOT NULL THEN DECODE(TMP.BKG_NO, SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), 'N', 'Y') 
                                                                                                     WHEN SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 1) + 1, INSTR(TMP.WO, '$', 1, 2) - INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL AND SUBSTR(TMP.WO, 1, INSTR(TMP.WO, '$', 1, 1) - 1) IS NULL THEN 'Y' 
                                                                                                     ELSE 'X' 
                                                                                                END 
			  WHEN ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'I' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.FM_NOD_CD||TMP.FM_NOD_YARD = 'USLAXYM')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLGBPT')
				   OR ((TMP.TRSP_SO_STS_CD = 'C' OR TMP.TRSP_SO_STS_CD = 'R') AND NVL(TMP.TRSP_BND_CD, 'O') = 'O' 
						AND TMP.CGO_TP_CD = 'F' AND TMP.TO_NOD_CD||TMP.TO_NOD_YARD = 'USLAXYM') THEN
                                                                                                CASE WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) = 'N' THEN 'Y' 
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NOT NULL THEN 'N'
                                                                                                     WHEN SUBSTR(TMP.REWO, INSTR(TMP.REWO, '$', 1, 1) + 1) IS NULL AND SUBSTR(TMP.REWO, 1, INSTR(TMP.REWO, '$', 1, 1) - 1) IS NULL THEN 'Y' 
                                                                                                     ELSE 'X' 
                                                                                                END 
             ELSE 'X' 
        END 
       ) EDI_RESEND_TARGET_FLAG,
    MAX(TMP.BLK_FLG) BLK_FLG,
    MAX(TMP.STEL_WIRE_FLG) STEL_WIRE_FLG,
    MAX(TMP.COIL_SHP_FLG) COIL_SHP_FLG,
    MAX(TMP.FUMG_FLG) FUMG_FLG,
    MAX(TMP.COP_NO) COP_NO,
    MAX(TMP.STATUS) STATUS,
    MAX(TMP.COST_ACT_GRP_SEQ) COST_ACT_GRP_SEQ,
    MAX(TMP.EQ_NO) EQ_NO,
    MAX(TMP.EQ_TPSZ_CD) EQ_TPSZ_CD,
    MAX(TMP.REPO_PLN_ID) REPO_PLN_ID,
    MAX(TMP.PLN_YRWK) PLN_YRWK,
    MAX(TMP.REF_SEQ) REF_SEQ,
    MAX(TMP.REF_ID) REF_ID,
    MAX(TMP.CGO_TP_CD) CGO_TP_CD,
    MAX(TMP.TRSP_BND_CD) TRSP_BND_CD,
    MAX(TMP.CXL_RQST_FLG) CXL_RQST_FLG,
    MAX(TMP.THROUGH) THROUGH,
    MAX(TMP.TRSP_RAIL_BIL_TP_CD) TRSP_RAIL_BIL_TP_CD,
    MAX(TMP.IBD_IPI_LOCL_IND_CD) IBD_IPI_LOCL_IND_CD,
    MAX(TMP.BL_NO) BL_NO,
    MAX(TMP.BKG_BKG_STS_CD) BKG_STS_CD,
    MAX(NVL(TMP.BKG_RCVDE_TERM_CD, DECODE(TMP.TRSP_BND_CD , 
            'I', TMP.BKG_DE_TERM_CD, 'O', TMP.BKG_RCV_TERM_CD) )) BKG_RCVDE_TERM_CD,
    MAX(DECODE(TMP.BIL_ISS_STS_CD , 'I', SUBSTR(TMP.WO, INSTR(TMP.WO, '$', 1, 2) + 1), TMP.BKG_NO)) BKG_NO,
    MAX(TMP.REVISED_BKG_NO) REVISED_BKG_NO,
    MAX(TMP.PODPOR_CD) PODPOR_CD,
    MAX(TMP.PODPOR_YARD) PODPOR_YARD,
    MAX(TMP.FM_NOD_CD) FM_NOD_CD,
    MAX(TMP.FM_NOD_YARD) FM_NOD_YARD,
    MAX(TMP.TO_NOD_CD) TO_NOD_CD,
    MAX(TMP.TO_NOD_YARD) TO_NOD_YARD,
    MAX(TMP.ORG_FM_NOD_CD) ORG_FM_NOD_CD,
    MAX(TMP.ORG_FM_NOD_YARD) ORG_FM_NOD_YARD,
    MAX(TMP.ORG_TO_NOD_CD) ORG_TO_NOD_CD,
    MAX(TMP.ORG_TO_NOD_YARD) ORG_TO_NOD_YARD,
    MAX(TMP.POLDEL_CD) POLDEL_CD,
    MAX(TMP.POLDEL_YARD) POLDEL_YARD,
    MAX(TMP.POL_CD) POL_CD,
    MAX(TMP.IBD_CSTMS_CLR_LOC_CD) IBD_CSTMS_CLR_LOC_CD,
    MAX(TMP.EDI) IBD_NO,
    CASE WHEN MAX(NVL(TMP.TRUNKVVD, 'N/A')) = MAX(NVL(BKG_VVD, 'N/A')) THEN 'N' 
         ELSE 'Y' 
    END UNMATCH_VVD,
    CASE WHEN MAX(NVL(TMP.POD_CD, 'N/A')) = MAX(NVL(TMP.BKG_POD_CD, 'N/A')) THEN 'N' 
         ELSE 'Y' 
    END UNMATCH_POD,
    MAX(TMP.TRUNKVVD) TRUNKVVD,
    MAX(TMP.BKG_VVD) TRUNKVVD_REVISED,
    MAX(TMP.POD_CD) POD_CD,
    MAX(TMP.BKG_POD_CD) POD_CD_REVISED,    
    MAX(MVMT_YARD) MVMT_YARD,
	MAX(MVMT_STATUS) MVMT_STATUS,
    MAX(TMP.BKG_SPE) BKG_SPE,
    MAX(TMP.VNDR) VNDR_ABBR_NM,
    MAX(TMP.REQUEST_SP) REQUEST_SP,
    MAX(TMP.VNDR_SEQ) VNDR_SEQ,
    '' COST_MONTH,
    MAX(TMP.CRE_DT) CRE_DT,
    MAX(TMP.CRE_DT_HMS) CRE_DT_HMS,
    MAX(DECODE(TMP.TRSP_BND_CD, 'O', TMP.BKG_UPDATED_DT, '')) BKG_UPDATED_DT,
    MAX(DECODE(TMP.TRSP_BND_CD, 'O', TMP.BKG_UPDATED_DT_HMS, '')) BKG_UPDATED_DT_HMS,
    MAX(TMP.CXL_RQST_DT) CXL_RQST_DT,
    MAX(TMP.CXL_RQST_DT_HMS) CXL_RQST_DT_HMS,    
    MAX(TMP.CXL_RQST_RSN) CXL_RQST_RSN,
    MAX(TMP.CXL_RQST_RJCT_DT) CXL_RQST_RJCT_DT,
    MAX(TMP.CXL_RQST_RJCT_DT_HMS) CXL_RQST_RJCT_DT_HMS,
    MAX(TMP.RQST_RJCT_RSN) RQST_RJCT_RSN,
    MAX(TMP.INTER_RMK) INTER_RMK,
    MAX(TMP.SPCL_INSTR_RMK) SPCL_INSTR_RMK,
    MAX(TMP.ROUT_ORG_NOD_CD) ROUT_ORG_NOD_CD,
    MAX(TMP.ROUT_DEST_NOD_CD) ROUT_DEST_NOD_CD,
    MAX(TMP.ROUT_SEQ) ROUT_SEQ,
    MAX(TMP.MSG) ERR_DESC,
    MAX(TMP.ROUT_PLN_CD) ROUT_PLN_CD,
    MAX(TMP.INLND_ROUT_RMK) INLND_ROUT_RMK,
    MAX(TMP.INV_BIL_PATT_DIV_FLG) INV_BIL_PATT_DIV_FLG,
    MAX(TMP.RAIL_CMB_THRU_TP_CD) RAIL_CMB_THRU_TP_CD,
    MAX(DECODE(TMP.SUB_RAIL_SEQ, 1 , AGMT.AGMT_REF_NO) || DECODE(TMP.VNDR_SET_TO_NOD_CD, NULL, '' , TMP.TO_NOD_CD||TMP.TO_NOD_YARD, '', ' / ')) || 
    MAX(DECODE(TMP.SUB_RAIL_SEQ, 2 , AGMT.AGMT_REF_NO) || DECODE(TMP.VNDR_SET_TO_NOD_CD, NULL, '' , TMP.TO_NOD_CD||TMP.TO_NOD_YARD, '', ' / ')) || 
    MAX(DECODE(TMP.SUB_RAIL_SEQ, 3 , AGMT.AGMT_REF_NO)) REF_NO,
    MAX(TMP.MDM_CO) CMDT_NAME,
    ROUND(MAX(TMP.CNTR_WGT)) CNTR_WGT,
	MAX(TMP.ACT_GRP_CD) ACT_GRP_CD
FROM
(
    SELECT
        X.*
        ,(
            SELECT
                NVL(C.BIL_EDI_RSND_DT, '') || '$' || NVL(C.BIL_EDI_RSND_RCV_RSLT_CD, '') || '$' ||
                NVL(C.BKG_NO, '')
            FROM
                TRS_TRSP_EDI_RAIL_ORD C
            WHERE X.TRSP_SO_OFC_CTY_CD = C.TRSP_SO_OFC_CTY_CD
            AND   X.TRSP_SO_SEQ = C.TRSP_SO_SEQ
            AND   X.BIL_ISS_KNT = C.BIL_ISS_KNT
        ) WO
		,(
            SELECT
                NVL(C1.BIL_EDI_RSND_DT, '') || '$' || NVL(C1.BIL_EDI_RSND_RCV_RSLT_CD, '')
            FROM
                TRS_TRSP_EDI_RAIL_ORD_RSND C1
            WHERE X.TRSP_SO_OFC_CTY_CD = C1.TRSP_SO_OFC_CTY_CD
            AND   X.TRSP_SO_SEQ = C1.TRSP_SO_SEQ
        ) REWO
        ,(
            SELECT
                EDI.IBD_TRSP_NO
            FROM
                BKG_CSTMS_ADV_IBD EDI
            WHERE X.BL_NO = EDI.BL_NO
        ) EDI
        ,(
            SELECT
                DECODE(X.SUB_RAIL_SEQ, 1, V.VNDR_ABBR_NM) VNDR_ABBR_NM
            FROM
                MDM_VENDOR V
            WHERE X.VNDR_SEQ = V.VNDR_SEQ
        ) VNDR
        ,(
            SELECT
                CASE WHEN X.TRSP_RAIL_BIL_TP_CD = 'W' AND X.TRSP_SO_STS_CD = 'C' AND X.DELT_FLG ='N' AND X.SPND_FLG ='N' THEN 'GOOD/EDI Failure' 
                     ELSE REPLACE(Z.ERR_DESC, CHR(13)||CHR(10), ' ') 
                END ERR_DESC
            FROM
                COM_ERR_MSG Z
            WHERE X.SPND_ERR_MSG_CD = Z.ERR_MSG_CD
            AND   X.SPND_LANG_TP_CD = Z.LANG_TP_CD
        ) MSG
    FROM
        (
            SELECT /*+ ORDERED USE_NL(SKD A) */
				MAX(A1.INV_NO) OVER (PARTITION BY A.TRSP_SO_OFC_CTY_CD, A.TRSP_SO_SEQ, A.BIL_ISS_KNT) MAX_CHK,
				(
		            SELECT 
						REPLACE(MDM_CO.CMDT_NM, CHR(13)||CHR(10), ' ') CMDT_NAME
			        FROM MDM_COMMODITY MDM_CO
            		WHERE B.CMDT_CD = MDM_CO.CMDT_CD
				) MDM_CO,
                A.TRSP_SO_OFC_CTY_CD AS TRSP_SO_OFC_CTY_CD,
                A.TRSP_SO_SEQ AS TRSP_SO_SEQ,
                A.BIL_ISS_KNT AS BIL_ISS_KNT,
                A.TRSP_SO_STS_CD AS TRSP_SO_STS_CD,
                A.BKG_NO_RVIS_FLG AS BKG_NO_RVIS_FLG, 
                A.POL_NOD_CD AS POL_NOD_CD,
                A.BKG_NO AS BKG_NO,
                A.BLK_FLG AS BLK_FLG,
                A.STEL_WIRE_FLG AS STEL_WIRE_FLG,
                A.COIL_SHP_FLG AS COIL_SHP_FLG,
                A.FUMG_FLG AS FUMG_FLG,
                A.COP_NO AS COP_NO,
                DECODE(A.TRSP_SO_STS_CD, 'C', 'S/O Created', 'R', 'S/O Corrected', 'I', 'EDI Sent', '') AS STATUS,
                A.COST_ACT_GRP_SEQ AS COST_ACT_GRP_SEQ,
                A.EQ_NO AS EQ_NO,
                A.EQ_TPSZ_CD AS EQ_TPSZ_CD,
                A.REPO_PLN_ID AS REPO_PLN_ID,
                A.PLN_YRWK AS PLN_YRWK,
                A.REF_SEQ AS REF_SEQ,
                A.REF_ID AS REF_ID,
                A.CGO_TP_CD AS CGO_TP_CD,
                A.TRSP_BND_CD AS TRSP_BND_CD,
                A.CXL_RQST_FLG AS CXL_RQST_FLG,
                DECODE(A.TRSP_RAIL_BIL_TP_CD, 'E', 'ALPS', 'W', 'WRS', '') AS THROUGH,
                A.TRSP_RAIL_BIL_TP_CD AS TRSP_RAIL_BIL_TP_CD,
                A.IBD_IPI_LOCL_IND_CD AS IBD_IPI_LOCL_IND_CD,
                A.BL_NO AS BL_NO,
                A.BKG_RCVDE_TERM_CD AS BKG_RCVDE_TERM_CD,
                A.BIL_ISS_STS_CD AS BIL_ISS_STS_CD,
                DECODE(A.BKG_NO_RVIS_FLG, NULL, '', A.BKG_NO) AS REVISED_BKG_NO,
                SUBSTR( DECODE(A.TRSP_BND_CD, 'I', NVL(A.POD_NOD_CD, A.POD_CD) , 'O', A.POR_NOD_CD, '') , 1, 5) AS PODPOR_CD,
                SUBSTR( DECODE(A.TRSP_BND_CD, 'I', NVL(A.POD_NOD_CD, A.POD_CD) , 'O', A.POR_NOD_CD, '') , 6) AS PODPOR_YARD,
                SUBSTR(A.FM_NOD_CD, 1, 5) AS FM_NOD_CD,
                SUBSTR(A.FM_NOD_CD, 6) AS FM_NOD_YARD,
                SUBSTR(A.TO_NOD_CD, 1, 5) AS TO_NOD_CD,
                SUBSTR(A.TO_NOD_CD, 6) AS TO_NOD_YARD,
                SUBSTR(A.FM_NOD_CD, 1, 5) AS ORG_FM_NOD_CD,
                SUBSTR(A.FM_NOD_CD, 6) AS ORG_FM_NOD_YARD,
                SUBSTR(A.TO_NOD_CD, 1, 5) AS ORG_TO_NOD_CD,
                SUBSTR(A.TO_NOD_CD, 6) AS ORG_TO_NOD_YARD,
                SUBSTR(DECODE(A.TRSP_BND_CD, 'I', A.DEL_NOD_CD, 'O', NVL(A.POL_NOD_CD, A.POL_CD) , '') , 1, 5) AS POLDEL_CD,
                SUBSTR(DECODE(A.TRSP_BND_CD, 'I', A.DEL_NOD_CD, 'O', NVL(A.POL_NOD_CD, A.POL_CD) , '') , 6) AS POLDEL_YARD,
                A.POL_CD AS POL_CD,
                A.IBD_CSTMS_CLR_LOC_CD AS IBD_CSTMS_CLR_LOC_CD,
                A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD AS TRUNKVVD,
                A.POD_CD AS POD_CD,
                A1.SUB_RAIL_SEQ AS SUB_RAIL_SEQ,
                A.PROV_VNDR_SEQ AS REQUEST_SP,
                A1.VNDR_SEQ AS VNDR_SEQ,
                '' AS COST_MONTH,
                TO_CHAR(A.LOCL_CRE_DT, 'YYYYMMDD') AS CRE_DT,
                TO_CHAR(A.LOCL_CRE_DT, 'HH24:MI:SS') AS CRE_DT_HMS,
                TO_CHAR(A.CXL_RQST_DT, 'YYYYMMDD') AS CXL_RQST_DT,
                TO_CHAR(A.CXL_RQST_DT, 'HH24:MI:SS') AS CXL_RQST_DT_HMS,
                A.CXL_RQST_RSN AS CXL_RQST_RSN,
                TO_CHAR(A.CXL_RQST_RJCT_DT, 'YYYYMMDD') AS CXL_RQST_RJCT_DT,
                TO_CHAR(A.CXL_RQST_RJCT_DT, 'HH24:MI:SS') AS CXL_RQST_RJCT_DT_HMS,
                A.CXL_RQST_RJCT_RSN AS RQST_RJCT_RSN,
                A.INTER_RMK AS INTER_RMK,
                A.SPCL_INSTR_RMK AS SPCL_INSTR_RMK,
                A.ROUT_ORG_NOD_CD AS ROUT_ORG_NOD_CD,
                A.ROUT_DEST_NOD_CD AS ROUT_DEST_NOD_CD,
                NVL(A.ROUT_SEQ, 0) AS ROUT_SEQ,
                A.DELT_FLG AS DELT_FLG,
                A.SPND_FLG AS SPND_FLG,
                A.ROUT_PLN_CD AS ROUT_PLN_CD,
                A.INLND_ROUT_RMK AS INLND_ROUT_RMK,
                A.INV_BIL_PATT_DIV_FLG AS INV_BIL_PATT_DIV_FLG,
                A.RAIL_CMB_THRU_TP_CD AS RAIL_CMB_THRU_TP_CD,
                A1.TO_NOD_CD AS VNDR_SET_TO_NOD_CD,
                ROUND(A.CNTR_WGT) AS CNTR_WGT,
                A.SPND_ERR_MSG_CD AS SPND_ERR_MSG_CD,
                A.SPND_LANG_TP_CD AS SPND_LANG_TP_CD,
                A1.TRSP_AGMT_OFC_CTY_CD AS TRSP_AGMT_OFC_CTY_CD,
                A1.TRSP_AGMT_SEQ AS TRSP_AGMT_SEQ,
				A1.INV_NO AS INV_NO,
				A.COST_ACT_GRP_CD AS ACT_GRP_CD,
                A.SPCL_CGO_CNTR_TP_CD AS SPCL_CGO_CNTR_TP_CD,                
                B.BKG_STS_CD AS BKG_BKG_STS_CD,
                B.DE_TERM_CD AS BKG_DE_TERM_CD,
                B.RCV_TERM_CD AS BKG_RCV_TERM_CD,
                B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD AS BKG_VVD,
                B.POD_CD AS BKG_POD_CD,
                B.BKG_NO AS BKG_BKG_NO,
                TO_CHAR(SKD.EVNT_DT, 'YYYYMMDD') AS BKG_UPDATED_DT,
                TO_CHAR(SKD.EVNT_DT, 'HH24:MI:SS') AS BKG_UPDATED_DT_HMS,
                DECODE( B.DCGO_FLG , 'Y', 'DG ') || 
                DECODE( B.RC_FLG , 'Y', 'RF ') || 
                DECODE( B.AWK_CGO_FLG , 'Y', 'AK ') || 
                DECODE( B.BB_CGO_FLG , 'Y', 'BB ') || 
                DECODE( B.SPCL_HIDE_FLG , 'Y', 'HD ') || 
                DECODE( B.FD_GRD_FLG , 'Y', 'FG ') || 
                DECODE( B.RAIL_BLK_CD , '', '', 'RB ') AS BKG_SPE,
                D.DCGO_FLG AS CNTR_DCGO_FLG,
                D.BB_CGO_FLG AS CNTR_BB_CGO_FLG,
                D.AWK_CGO_FLG AS CNTR_AWK_CGO_FLG,
                D.RC_FLG AS CNTR_RC_FLG,
                D.RD_CGO_FLG AS CNTR_RD_CGO_FLG,
				SUBSTR(MVMT.ORG_YD_CD, 1, 5) AS MVMT_YARD,
				MVMT.MVMT_STS_CD AS MVMT_STATUS
            FROM
                ( SELECT SKD.BKG_NO , MAX(EVNT_DT)  EVNT_DT FROM BKG_DOC_PROC_SKD SKD
		          WHERE  SKD.EVNT_DT BETWEEN TO_DATE(@[splanFromDate], 'YYYYMMDD') AND TO_DATE(@[splanToDate], 'YYYYMMDD') + 0.99999
        		  GROUP BY SKD.BKG_NO
		        ) SKD ,
				TRS_TRSP_RAIL_BIL_ORD A,
                TRS_TRSP_RAIL_BIL_VNDR_SET A1,
                BKG_BOOKING B,
                BKG_CONTAINER D,
				CTM_MOVEMENT MVMT
            WHERE A.TRSP_SO_OFC_CTY_CD = A1.TRSP_SO_OFC_CTY_CD
            AND   A.TRSP_SO_SEQ = A1.TRSP_SO_SEQ
            AND   A.BKG_NO = B.BKG_NO
			AND   A.BKG_NO = SKD.BKG_NO
            AND   A.BKG_NO = D.BKG_NO (+)
            AND   A.EQ_NO = D.CNTR_NO (+)
			AND   D.CNTR_NO = MVMT.CNTR_NO(+)
			AND   D.CNMV_YR = MVMT.CNMV_YR(+)
			AND   D.CNMV_ID_NO = MVMT.CNMV_ID_NO(+)
            AND   A.CRE_OFC_CD IN (@[sctrlOfcCd], 'SYSTEM')
            AND   A.DELT_FLG = 'N'

#if($vvd.size() > 0)
	AND ((A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD) IN (
	#foreach($key IN ${vvd})
		#if($velocityCount == 1)						
			( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
		#else
			, ( SUBSTR('$key', 1, 4), SUBSTR('$key', 5, 4), SUBSTR('$key', 9))
		#end
	#end
		)
	)
#end

#if($bkg.size() > 0)
	AND A.BKG_NO IN (
	#foreach($key IN ${bkg})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if($bl.size() > 0)
	AND A.BL_NO IN (
	#foreach($key IN ${bl})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if($cntr.size() > 0)
	AND A.EQ_NO IN (
	#foreach($key IN ${cntr})
		#if($velocityCount == 1)						
			'$key'
		#else
			,'$key'
		#end
	#end
	)
#end

#if(${sselStatus} == "ALL")
	AND A.TRSP_SO_STS_CD IN ('C', 'R','I')
#else
	AND A.TRSP_SO_STS_CD = @[sselStatus]
#end

#if(${sfromLocationCd} != "")
	AND A.FM_NOD_CD LIKE @[sfromLocationCd]||'%'
#end

#if(${stoLocationCd} != "")
	AND A.TO_NOD_CD LIKE @[stoLocationCd]||'%'
#end

#if(${sselEdikind} == "ALL")
#else
	AND A.CGO_TP_CD = @[sselEdikind]
#end

#if(${sselBnd} == "ALL")
#else
	AND A.TRSP_BND_CD = @[sselBnd]
#end

#if(${sselThrough} == "ALL")
#else
	AND A.TRSP_RAIL_BIL_TP_CD = @[sselThrough]
#end

#if(${sselLimtinq} == "ALL")
#elseif(${sselLimtinq} == 'X')
	AND A.TRSP_RAIL_BIL_TP_CD='W'
	AND NVL(A.CXL_RQST_RJCT_FLG, 'N') = 'N'
#else
	AND A.CXL_RQST_RJCT_FLG='Y'
#end

#if(${radVendor} == "V2" && ${comboSvcProvider} != "")
	AND A.PROV_VNDR_SEQ = @[comboSvcProvider]
#elseif(${radVendor} == "V1" && ${selRailRoad} != "ALL")
	AND A1.VNDR_SEQ = @[selRailRoad]
#end

#if(${sselUnmatch} == "ALL")
#elseif(${sselUnmatch} == 'N')
	AND NVL(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD, 'N/A') = NVL(B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, 'N/A')
	AND NVL(A.POD_CD, 'N/A') = NVL(B.POD_CD, 'N/A')
#else
	AND ( NVL(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD, 'N/A') <> NVL(B.VSL_CD||B.SKD_VOY_NO||B.SKD_DIR_CD, 'N/A')
			OR NVL(A.POD_CD, 'N/A') <> NVL(B.POD_CD, 'N/A'))
#end 

        ) X
	WHERE X.MAX_CHK IS NULL
) TMP,
TRS_AGMT_HDR AGMT
WHERE TMP.TRSP_AGMT_OFC_CTY_CD = AGMT.TRSP_AGMT_OFC_CTY_CD(+)
AND   TMP.TRSP_AGMT_SEQ = AGMT.TRSP_AGMT_SEQ(+)

AND (NVL(TMP.SPCL_CGO_CNTR_TP_CD, 'NN') <> CASE WHEN TMP.CNTR_DCGO_FLG='Y' THEN 'DG'  
                                                  WHEN TMP.CNTR_BB_CGO_FLG ='Y' THEN 'BB'  
                                                  WHEN TMP.CNTR_AWK_CGO_FLG='Y' THEN 'AK'  
                                                  WHEN TMP.CNTR_RC_FLG='Y' THEN 'RF'  
                                                  WHEN TMP.CNTR_RD_CGO_FLG='Y' THEN 'RD'  
                                             ELSE 'XY'  
                                             END 
                                             OR NVL(DECODE(TMP.TRSP_BND_CD, 'O', TMP.TRUNKVVD, ''), '') <> NVL(DECODE(TMP.TRSP_BND_CD, 'O', TMP.BKG_VVD, ''), '') 
                                             OR NVL(DECODE(TMP.TRSP_BND_CD, 'O', TMP.POL_CD, ''), '') <> NVL(DECODE(TMP.TRSP_BND_CD, 'O', TMP.BKG_POD_CD, ''), '') 
                                             OR NVL(DECODE(TMP.TRSP_BND_CD, 'O', TMP.BKG_NO, ''), '') <> DECODE(TMP.TRSP_BND_CD, 'O', TMP.BKG_BKG_NO, ''))  
GROUP BY 
    TMP.TRSP_SO_OFC_CTY_CD, 
    TMP.TRSP_SO_SEQ, 
    TMP.BIL_ISS_KNT
HAVING MAX(TMP.INV_NO) IS NULL
			]]></sql>
			<params>
				<param name="splanFromDate" type="12" value="" out="N"/>
				<param name="splanToDate" type="12" value="" out="N"/>
				<param name="sctrlOfcCd" type="12" value="" out="N"/>
				<param name="sselStatus" type="12" value="" out="N"/>
				<param name="sfromLocationCd" type="12" value="" out="N"/>
				<param name="stoLocationCd" type="12" value="" out="N"/>
				<param name="sselEdikind" type="12" value="" out="N"/>
				<param name="sselBnd" type="12" value="" out="N"/>
				<param name="sselThrough" type="12" value="" out="N"/>
				<param name="comboSvcProvider" type="12" value="" out="N"/>
				<param name="selRailRoad" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
