<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VskEmailSetupDBDAOSearchVslSkdEmlSetUpRSQL">
			<desc><![CDATA[VSL E-MAIL 대상 조회]]></desc>
			<sql><![CDATA[
SELECT 
    D.EML_GRP_ID,
    D.VSL_SLAN_CD,
    D.TO_PORT_CD,
    CASE WHEN LENGTH(D.VSKD_DUR_ID) = 3 THEN
            CASE WHEN SUBSTR(D.VSKD_DUR_ID, 3, 1) = 'Q' THEN SUBSTR(D.VSKD_DUR_ID, 1, 2) * 30
            
                 WHEN SUBSTR(D.VSKD_DUR_ID, 3, 1) = 'W' THEN SUBSTR(D.VSKD_DUR_ID, 1, 2) * 7
                 
                 WHEN SUBSTR(D.VSKD_DUR_ID, 3, 1) = 'D' THEN SUBSTR(D.VSKD_DUR_ID, 1, 2) * 1
            END    
         WHEN LENGTH(D.VSKD_DUR_ID) = 2 THEN
            CASE WHEN SUBSTR(D.VSKD_DUR_ID, 2, 1) = 'Q' THEN SUBSTR(D.VSKD_DUR_ID, 1, 1) * 30
            
                 WHEN SUBSTR(D.VSKD_DUR_ID, 2, 1) = 'W' THEN SUBSTR(D.VSKD_DUR_ID, 1, 1) * 7
                 
                 WHEN SUBSTR(D.VSKD_DUR_ID, 2, 1) = 'D' THEN SUBSTR(D.VSKD_DUR_ID, 1, 1) * 1
            END
    END VSKD_DUR_ID,
    'days' UNIT,
    D.EML_SND_HR,
	DECODE(instr(D.EML_SND_DYS_CTNT, 1), 0, 0, 1) EML_SND_DYS_CTNT_SUN,
	DECODE(instr(D.EML_SND_DYS_CTNT, 2), 0, 0, 1) EML_SND_DYS_CTNT_MON,
	DECODE(instr(D.EML_SND_DYS_CTNT, 3), 0, 0, 1) EML_SND_DYS_CTNT_TUE,
	DECODE(instr(D.EML_SND_DYS_CTNT, 4), 0, 0, 1) EML_SND_DYS_CTNT_WEB,
	DECODE(instr(D.EML_SND_DYS_CTNT, 5), 0, 0, 1) EML_SND_DYS_CTNT_THR,
	DECODE(instr(D.EML_SND_DYS_CTNT, 6), 0, 0, 1) EML_SND_DYS_CTNT_FRI,
	DECODE(instr(D.EML_SND_DYS_CTNT, 7), 0, 0, 1) EML_SND_DYS_CTNT_SAT,
    (MIN(DECODE(D.RK, 1, DECODE(D.SUBSC_EML, '', '', D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 2, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 3, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 4, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 5, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 6, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 7, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 8, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 9, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 10, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 11, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 12, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 13, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 14, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 15, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML)))) SUBSC_EML,    
    D.EML_JB_ID,
    D.SVC_ST_DT,
    D.SVC_END_DT,
	D.EML_GRP_ID EML_GRP_ID_HIS,
	D.EML_SND_HR EML_SND_HR_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 1), 0, 0, 1) EML_SND_DYS_CTNT_SUN_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 2), 0, 0, 1) EML_SND_DYS_CTNT_MON_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 3), 0, 0, 1) EML_SND_DYS_CTNT_TUE_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 4), 0, 0, 1) EML_SND_DYS_CTNT_WEB_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 5), 0, 0, 1) EML_SND_DYS_CTNT_THR_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 6), 0, 0, 1) EML_SND_DYS_CTNT_FRI_HIS,
	DECODE(instr(D.EML_SND_DYS_CTNT, 7), 0, 0, 1) EML_SND_DYS_CTNT_SAT_HIS,
	D.VSL_SLAN_CD VSL_SLAN_CD_HIS,
	D.TO_PORT_CD TO_PORT_CD_HIS,
	CASE WHEN LENGTH(D.VSKD_DUR_ID) = 3 THEN
			CASE WHEN SUBSTR(D.VSKD_DUR_ID, 3, 1) = 'Q' THEN SUBSTR(D.VSKD_DUR_ID, 1, 2) * 30

		 	 	 WHEN SUBSTR(D.VSKD_DUR_ID, 3, 1) = 'W' THEN SUBSTR(D.VSKD_DUR_ID, 1, 2) * 7

		 	 	 WHEN SUBSTR(D.VSKD_DUR_ID, 3, 1) = 'D' THEN SUBSTR(D.VSKD_DUR_ID, 1, 2) * 1
			END
		 WHEN LENGTH(D.VSKD_DUR_ID) = 2 THEN
			CASE WHEN SUBSTR(D.VSKD_DUR_ID, 2, 1) = 'Q' THEN SUBSTR(D.VSKD_DUR_ID, 1, 1) * 30

				 WHEN SUBSTR(D.VSKD_DUR_ID, 2, 1) = 'W' THEN SUBSTR(D.VSKD_DUR_ID, 1, 1) * 7

				 WHEN SUBSTR(D.VSKD_DUR_ID, 2, 1) = 'D' THEN SUBSTR(D.VSKD_DUR_ID, 1, 1) * 1
			END
	END VSKD_DUR_ID_HIS,
	(MIN(DECODE(D.RK, 1, DECODE(D.SUBSC_SEQ, '', '', D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 2, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 3, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 4, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 5, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 6, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 7, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 8, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 9, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
	MIN(DECODE(D.RK, 10, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
	MIN(DECODE(D.RK, 11, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
	MIN(DECODE(D.RK, 12, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
	MIN(DECODE(D.RK, 13, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
	MIN(DECODE(D.RK, 14, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ))) ||
    MIN(DECODE(D.RK, 15, DECODE(D.SUBSC_SEQ, '', '', ';' ||D.SUBSC_SEQ)))) SUBSC_SEQ_HIS,
	(MIN(DECODE(D.RK, 1, DECODE(D.SUBSC_EML, '', '', D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 2, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 3, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 4, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 5, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 6, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 7, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 8, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 9, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 10, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 11, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 12, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 13, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
	MIN(DECODE(D.RK, 14, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML))) ||
    MIN(DECODE(D.RK, 15, DECODE(D.SUBSC_EML, '', '', ';' ||D.SUBSC_EML)))) SUBSC_EML_HIS,
	D.FM_PORT_CD FM_PORT_CD_HIS,
	D.EML_GRP_CD_DESC EML_GRP_CD_DESC_HIS
FROM
(
SELECT 
    ROW_NUMBER() OVER (PARTITION BY A.EML_GRP_ID, A.VSL_SLAN_CD, A.TO_PORT_CD, A.VSKD_DUR_ID, B.EML_SND_HR, B.EML_SND_DYS_CTNT, A.EML_JB_ID, A.SVC_ST_DT, A.SVC_END_DT
        ORDER BY A.EML_GRP_ID, A.VSL_SLAN_CD, A.TO_PORT_CD, A.VSKD_DUR_ID, B.EML_SND_HR, B.EML_SND_DYS_CTNT, C.SUBSC_SEQ ASC) AS RK,
    A.EML_GRP_ID,
    A.VSL_SLAN_CD,
    A.TO_PORT_CD,
    A.VSKD_DUR_ID,
    B.EML_SND_HR,    
	B.EML_SND_DYS_CTNT,
    C.SUBSC_EML,
    A.EML_JB_ID,
    A.SVC_ST_DT,
    A.SVC_END_DT,
	C.SUBSC_SEQ,
	A.FM_PORT_CD,
	B.EML_GRP_CD_DESC
FROM
    SCE_VSL_SKD_EML A,
    SCE_EML_JB_GRP B,
    SCE_EML_JB_SUBSC C
WHERE A.EML_JB_ID = B.EML_JB_ID
AND A.SVC_ST_DT = B.SVC_ST_DT
AND A.SVC_END_DT = B.SVC_END_DT
AND A.EML_GRP_ID = B.EML_GRP_ID
AND A.EML_JB_ID = C.EML_JB_ID
AND A.SVC_ST_DT = C.SVC_ST_DT
AND A.SVC_END_DT = C.SVC_END_DT
AND A.EML_GRP_ID = C.EML_GRP_ID
AND A.VSL_SLAN_CD = C.VSL_SLAN_CD
AND A.TO_PORT_CD = C.TO_PORT_CD
AND NVL(A.DELT_FLG, 'N') = 'N'
AND NVL(C.DELT_FLG, 'N') = 'N'
) D
GROUP BY
    D.EML_GRP_ID,
    D.VSL_SLAN_CD,
    D.TO_PORT_CD,
    D.VSKD_DUR_ID,
    D.EML_SND_HR,
    D.EML_SND_DYS_CTNT,
    D.EML_JB_ID,
    D.SVC_ST_DT,
    D.SVC_END_DT,
	D.FM_PORT_CD,
	D.EML_GRP_CD_DESC
ORDER BY
	D.EML_GRP_ID ASC,
    D.VSL_SLAN_CD ASC,
    D.TO_PORT_CD ASC			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
