<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChAnalysisReportDBDAOSearchChAnalysisRSQL">
			<desc><![CDATA[TRO 비용 및 S/O비용 집계내역을 조회한다]]></desc>
			<sql><![CDATA[
SELECT          
        GR_ID,WRK_OFC,TRSP_BND_CD,D2,D4,D5,D7,D_ETC,R2,R4,R5,R7,R8,O2+S2 O2,O4+S4 O4,O5,O7,F2+A2 F2,F4+A4 F4,F5,P2,P4,T2,T4, 
        VOL_TOT,VOL_20,VOL_40,     
        REV_1,REV_2,REV_3,     
        WO_COST,RECAL_WO,     
        DIFF_1,REV_1 - WO_COST,     
        DIFF_2,REV_2 - WO_COST profit_wo,      
        INV_COST,     
        DIFF_3,    DIFF_4,    
        (REV_2 - INV_COST) profit_inv ,
        rev_2 - inv_cost - recal_wo PROFIT_TMP  
        FROM  (  
        SELECT                              
        DECODE (WRK_OFC, NULL, 99, 1) DEP, GROUPING_ID(WRK_OFC,B.TRSP_BND_CD ) GR_ID,     
        NVL( WRK_OFC, 'TOTAL'  ) WRK_OFC,     
        NVL( B.TRSP_BND_CD , 'I+O' ) TRSP_BND_CD      
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,D2) ) D2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,D4) ) D4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,D5) ) D5     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,D7) ) D7     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,D_etc) ) D_etc     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,R2) ) R2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,R4) ) R4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,R5) ) R5     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,R7) ) R7     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,R8) ) R8    
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,O2) ) O2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,O4) ) O4
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,O5) ) O5
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,O7) ) O7
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,S2) ) S2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,S4) ) S4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,F2) ) F2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,F4) ) F4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,A2) ) A2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,A4) ) A4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,F5) ) F5     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,P2) ) P2     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,P4) ) P4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,T2) ) T2      
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,T4) ) T4     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,1) ) VOL_TOT  
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,DECODE(SUBSTR(A.EQ_TPSZ_CD,2,1),'2',1,0  ) )  ) VOL_20     
        ,SUM( DECODE( A.TRSP_COST_DTL_MOD_CD, 'DR' ,DECODE(SUBSTR(A.EQ_TPSZ_CD,2,1),'2',0,1  ) )  ) VOL_40     
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , NVL(REV_1,0) ) ,B.WO_DT  ) ) , 2) REV_1          
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( TRO_MANI, 'Y', DECODE( SIGN(REV_1), 0, DECODE(B.TERM , 'D',  DECODE(B.COSTMODE, 'CY', 0 , (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT) ,REV_1 ), REV_1 ), 'A',WO_COST + REV_1, REV_1),B.WO_DT ) )  ,2) REV_2           
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( TRO_MANI, 'Y', DECODE( SIGN(REV_1), 0, DECODE(B.TERM , 'D', INV_COST , (NVL(A.INV_BZC_AMT,0) + NVL(A.INV_ETC_ADD_AMT,0))/XB.USD_LOCL_XCH_RT ,REV_1 ), REV_1 ) ,REV_1  )  ,B.WO_DT ) )  ,2) REV_3            
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , WO_COST) ,   (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT),B.WO_DT)  ) ,2) WO_COST
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( INV_COST, 0, DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , WO_COST) ,   (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT) ,0  )  , B.WO_DT  ) ) ,2 ) RECAL_WO         
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , NVL(REV_1,0) ) ,B.WO_DT  ) ) ,2) - ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , WO_COST) ,   (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT),B.WO_DT)  ) ,2) DIFF_1       
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( TRO_MANI, 'Y', DECODE( SIGN(REV_1), 0, DECODE(B.TERM , 'D', WO_COST , (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT ,REV_1 ), REV_1 ) ,REV_1  )  ,B.WO_DT ) )  ,2)  -  ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , WO_COST) ,   (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT),B.WO_DT)  ) ,2) DIFF_2        
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , INV_COST) ,  (NVL(A.INV_BZC_AMT,0) + NVL(A.INV_ETC_ADD_AMT,0))/XB.USD_LOCL_XCH_RT), B.WO_DT ) ) ,2) INV_COST     
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( TRO_MANI, 'Y', DECODE( SIGN(REV_1), 0, DECODE(B.TERM , 'D', WO_COST , (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT ,REV_1 ), REV_1 ) ,REV_1  )  ,B.WO_DT ) )  ,2)  -  ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , WO_COST) ,   (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT),B.WO_DT)  ) ,2)  DIFF_3         
        ,ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE( INV_COST, 0, DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , WO_COST) , (NVl( A.BZC_AMT,0)+NVL(A.ETC_ADD_AMT,0)+NVL(A.HJL_HNDL_AMT,0)+NVL(A.FUEL_SCG_AMT,0)+NVL(A.NEGO_AMT,0))/XA.USD_LOCL_XCH_RT) ,0  )  , B.WO_DT  ) ) ,2 )  - ROUND( SUM( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC ( 'USD', DECODE(B.TERM , 'D', DECODE( A.TRSP_SO_SEQ, B.TRSP_SO_SEQ , INV_COST) ,  (NVL(A.INV_BZC_AMT,0) + NVL(A.INV_ETC_ADD_AMT,0))/XB.USD_LOCL_XCH_RT), B.WO_DT ) ) ,2) DIFF_4       
FROM    TRS_TRSP_SVC_ORD A, GL_MON_XCH_RT XA, GL_MON_XCH_RT XB,     
    (     
        SELECT      /*+ ORDERED INDEX(FL XAK7TRS_TRSP_SVC_ORD) USE_HASH(WRK) */
                FL. TRSP_SO_OFC_CTY_CD, FL.TRSP_SO_SEQ, FL.BKG_NO, COP_NO , FL.TRSP_COST_DTL_MOD_CD COSTMODE, DECODE(MAX( BKG_RCVDE_TERM_CD), 'D', NVL(TRO.CFM_ALL_IN_RT_CD,'Y'), NVL(TRO.CFM_ALL_IN_RT_CD,'N')) TRO_MANI    
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'D2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) D2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'D4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) D4     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'D5', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) D5      
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'D7', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) D7      
                ,SUM(DECODE(SUBSTR(FL.EQ_TPSZ_CD,1,1) , 'D',DECODE (FL.EQ_TPSZ_CD,'D2',0,'D4',0,'D5',0,'D7',0, DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1)))) D_etc     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'R2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) R2      
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'R4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) R4     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'R5', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) R5     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'R7', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) R7     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'R8', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) R8     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'O2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) O2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'O4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) O4
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'O5', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) O5
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'O7', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) O7     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'S2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) S2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'S4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) S4     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'F2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) F2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'F4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) F4      
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'A2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) A2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'A4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) A4      
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'F5', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) F5      
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'P2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) P2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'P4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) P4     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'T2', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) T2     
                ,SUM(DECODE(FL.EQ_TPSZ_CD, 'T4', DECODE(TRO.EUR_TRNS_TP_CD,'PU',0,1), 0)) T4     
                ,MAX(WRK.CRE_OFC_CD) WRK_OFC, MAX( DECODE(TRO.EUR_TRNS_TP_CD,'FR','N',  TRO.TRO_PROC_CD ) ) TRO_STS     
                ,MAX(FL.TRSP_BND_CD) TRSP_BND_CD , MAX( BKG_RCVDE_TERM_CD ) TERM , MAX( TO_CHAR( FL.LOCL_CRE_DT, 'RRRRMM') ) WO_DT     
                ,SUM(ROUND( (NVl(BZC_AMT,0)+NVL(ETC_ADD_AMT,0)+NVL(HJL_HNDL_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(NEGO_AMT,0))/FM.USD_LOCL_XCH_RT,2)) WO_COST      
                ,SUM(ROUND( (NVL(INV_BZC_AMT,0) + NVL(INV_ETC_ADD_AMT,0))/FM2.USD_LOCL_XCH_RT , 2) ) INV_COST     
                ,SUM(ROUND( NVL(DECODE(TRO.EUR_TRNS_TP_CD,'PU',0, NVL(DECODE(DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',NVL(TRO.TRNS_REV_AMT,0),0)+DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',NVL(TRO.NMF_TRNS_REV_AMT, 0),0)+DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',NVL(TRO.ADD_REV_AMT, 0),0),0,'',DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',NVL(TRO.TRNS_REV_AMT,0),0)+DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',NVL(TRO.NMF_TRNS_REV_AMT, 0),0)+DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',NVL(TRO.ADD_REV_AMT, 0),0)) ,DECODE(FL.TRSP_COST_DTL_MOD_CD,'DR',FL.TRSP_RQST_ORD_REV_AMT,0) ) / FM1.USD_LOCL_XCH_RT),0) ,2)) REV_1 
                ,SUM(ROUND(DECODE(TRO.EUR_TRNS_TP_CD,'PU',0, DECODE( TRO.CFM_ALL_IN_RT_CD,'Y', NVL(DECODE(NVL(TRO.TRNS_REV_AMT,0)+NVL(TRO.NMF_TRNS_REV_AMT, 0)+NVL(TRO.ADD_REV_AMT, 0),0,'',NVL(TRO.TRNS_REV_AMT,0)+NVL(TRO.NMF_TRNS_REV_AMT, 0)+NVL(TRO.ADD_REV_AMT, 0)) ,FL.TRSP_RQST_ORD_REV_AMT ) /FM1.USD_LOCL_XCH_RT) ) ,2) ) TRO_MANI_Y_REV      
                ,SUM(ROUND(DECODE(TRO.EUR_TRNS_TP_CD,'PU',0, DECODE( TRO.CFM_ALL_IN_RT_CD,'Y', 0, NVL(DECODE(NVL(TRO.TRNS_REV_AMT,0)+NVL(TRO.NMF_TRNS_REV_AMT, 0)+NVL(TRO.ADD_REV_AMT, 0),0,'',NVL(TRO.TRNS_REV_AMT,0)+NVL(TRO.NMF_TRNS_REV_AMT, 0)+NVL(TRO.ADD_REV_AMT, 0)) ,FL.TRSP_RQST_ORD_REV_AMT ) /FM1.USD_LOCL_XCH_RT) ) ,2) ) TRO_REV   
        FROM    TRS_TRSP_SVC_ORD FL, TRS_TRSP_WRK_ORD WRK, BKG_EUR_TRO TRO, GL_MON_XCH_RT FM,GL_MON_XCH_RT  FM1 , GL_MON_XCH_RT  FM2 , BKG_BOOKING BK     
        WHERE    1=1     
                AND FL.BKG_NO = TRO.BKG_NO(+)  
                AND FL.TRSP_BND_CD = TRO.IO_BND_CD(+)     
                AND FL.TRO_SEQ = TRO.TRO_SEQ(+)     
                AND FL.BKG_NO = BK.BKG_NO(+)      
                AND FL.TRSP_WO_OFC_CTY_CD = WRK.TRSP_WO_OFC_CTY_CD(+)     
                AND FL.TRSP_WO_SEQ= WRK.TRSP_WO_SEQ(+)     
                AND FL.trsp_bnd_cd IN ('I','O')      
                AND FL.TRSP_SO_TP_CD = 'Y'     
                AND NVL(TRO.CXL_FLG,'N') != 'Y'     
                AND NVL(FL.DELT_FLG, 'N') != 'Y'      
                AND FM.ACCT_XCH_RT_LVL = 1     
                AND FM.CURR_CD = FL.CURR_CD     
                AND FM.ACCT_XCH_RT_YRMON = TO_CHAR(FL.LOCL_CRE_DT,'YYYYMM')      
                AND FM1.ACCT_XCH_RT_LVL = 1     
                AND FM1.CURR_CD = NVL(RTRIM(TRO.CURR_CD),'EUR')     
                AND FM1.ACCT_XCH_RT_YRMON = TO_CHAR(FL.LOCL_CRE_DT,'YYYYMM')       
                AND FM2.ACCT_XCH_RT_LVL = 1     
                AND FM2.CURR_CD = NVL(FL.INV_CURR_CD,'EUR')     
                AND FM2.ACCT_XCH_RT_YRMON = TO_CHAR(FL.LOCL_CRE_DT,'YYYYMM')       
                AND TRSP_COST_DTL_MOD_CD IN ('CY','DR','ER','CF','CN' )  
                AND DECODE(FL.TRSP_COST_DTL_MOD_CD, 'CY',TRSP_CRR_MOD_CD, 'TD') IN ('TD', 'RD', 'TR', 'RT')  
                AND DECODE(FL.TRSP_COST_DTL_MOD_CD, 'CY',BKG_RCVDE_TERM_CD, 'D') = 'D'     

#if($MONTH_FLG) 
    AND FL.LOCL_CRE_DT BETWEEN TO_DATE( @[SO_FMDT] , 'RRRRMM') AND LAST_DAY( to_date( @[SO_TODT] , 'RRRRMM'))+1
#else 
    AND FL.LOCL_CRE_DT BETWEEN TO_DATE( @[SO_FMDT] , 'RRRRMMDD') AND TO_DATE( @[SO_TODT] , 'RRRRMMDD')+0.999
#end 

#if(${HID_BOUNDMODE} != 'ALL') 
    AND   FL.trsp_bnd_cd = @[HID_BOUNDMODE]
#end 

#if ($INPUT_OFFICE.size() > 0) 
    AND WRK.CRE_OFC_CD  IN (
        #foreach( ${key} in ${INPUT_OFFICE}) 
            #if($velocityCount < $INPUT_OFFICE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

#if ($FRM_NODE.size() > 0) 
    AND   FL.FM_NOD_CD  IN  (
        #foreach( ${key} in ${FRM_NODE}) 
            #if($velocityCount < $FRM_NODE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

#if ($TO_NODE.size() > 0) 
    AND   FL.TO_NOD_CD  IN  (
        #foreach( ${key} in ${TO_NODE}) 
            #if($velocityCount < $TO_NODE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end
    
#if( ${HID_BKGTERM} == 'Y') 
    AND DECODE ( FL.TRSP_BND_CD, 'O' , BK.RCV_TERM_CD ,'I' ,BK.DE_TERM_CD )= 'Y'
#end 

#if( ${HID_TROSTS} == 'C') 
    AND TRO.TRO_PROC_CD = 'C'
    AND NVL(TRO.EUR_TRNS_TP_CD,'X') <>'FR' 
#elseif ( ${HID_TROSTS} == 'F') 
    AND ( NVL(TRO.TRO_PROC_CD,'N')  <> 'C'
    OR NVL(TRO.EUR_TRNS_TP_CD,'X') ='FR' )
#end 

        GROUP BY FL.TRSP_SO_OFC_CTY_CD, FL.TRSP_SO_SEQ, COP_NO,FL.TRSP_COST_DTL_MOD_CD,  FL.BKG_NO    ,NVL(TRO.CFM_ALL_IN_RT_CD,'N') ,NVL(TRO.CFM_ALL_IN_RT_CD,'Y')    
       
    UNION ALL            

        SELECT    /*+ ORDERED INDEX(SV XAK7TRS_TRSP_SVC_ORD) USE_HASH(WRK) */
                SV. TRSP_SO_OFC_CTY_CD, SV.TRSP_SO_SEQ, SV.BKG_NO, SV.COP_NO , 'DR' COSTMODE, 'Y' TRO_MANI            
                ,0 D2, 0 D4    ,0 D5 ,0 D7    ,0 D_etc ,0 R2 ,0 R4            
                ,0 R5, 0 R7 ,0 R8 ,0 O2 ,0 O4    ,0 O5  ,0 O7 ,0 S2  ,0 S4 ,0 F2            
                ,0 F4, 0 A2    ,0 A4 ,0 F5 ,0 P2    ,0 P4  ,0 T2 ,0 T4            
                ,MAX(SV.CRE_OFC_CD) WRK_OFC, MAX( COP.TRO_PROC_CD ) TRO_STS            
                ,MAX(SV.TRSP_BND_CD) TRSP_BND_CD , MAX( BKG_RCVDE_TERM_CD ) TERM , MAX( TO_CHAR( SV.LOCL_CRE_DT, 'RRRRMM') ) WO_DT            
                ,0 WO_COST, 0 INV_COST, 0 REV_1 ,0 TRO_MANI_Y_REV ,0 TRO_REV            
        FROM    TRS_TRSP_SVC_ORD SV,TRS_TRSP_WRK_ORD WRK, BKG_BOOKING BK,         
                (
                SELECT    A.COP_NO, B.TRO_PROC_CD, B.EUR_TRNS_TP_CD            
                FROM    TRS_TRSP_SVC_ORD A, BKG_EUR_TRO B            
                WHERE    1=1            
                        AND A.BKG_NO = B.BKG_NO(+)             
                        AND A.TRSP_BND_CD = B.IO_BND_CD(+)            
                        AND A.TRO_SEQ = B.TRO_SEQ(+)            
                        AND A.TRSP_RQST_ORD_REV_AMT IN (0, NULL)            
                        AND B.TRNS_REV_AMT IN (0, NULL)            
                        AND B.NMF_TRNS_REV_AMT IN (0, NULL)    
                        AND B.ADD_REV_AMT IN (0, NULL)
                        AND A.TRSP_COST_DTL_MOD_CD = 'DR'            
                ) COP            
        WHERE    SV.COP_NO = COP.COP_NO     
                AND SV.TRSP_COST_DTL_MOD_CD = 'CY'        
                AND SV.TRSP_WO_OFC_CTY_CD = WRK.TRSP_WO_OFC_CTY_CD     
                AND SV.TRSP_WO_SEQ= WRK.TRSP_WO_SEQ     
                AND SV.BKG_NO = BK.BKG_NO(+)     
                AND TRSP_COST_DTL_MOD_CD IN ('CY','DR','ER','CF','CN' )        
                AND DECODE(SV.TRSP_COST_DTL_MOD_CD, 'CY',TRSP_CRR_MOD_CD, 'TD') IN ('TD', 'RD', 'TR', 'RT')        
                AND DECODE(SV.TRSP_COST_DTL_MOD_CD, 'CY',BKG_RCVDE_TERM_CD, 'D') = 'D'     

#if($MONTH_FLG) 
    AND SV.LOCL_CRE_DT BETWEEN TO_DATE( @[SO_FMDT] , 'RRRRMM') AND LAST_DAY( to_date( @[SO_TODT], 'RRRRMM'))+1
#else 
    AND SV.LOCL_CRE_DT BETWEEN TO_DATE( @[SO_FMDT] , 'RRRRMMDD') AND TO_DATE( @[SO_TODT], 'RRRRMMDD')+0.999
#end 

#if(${HID_BOUNDMODE} != 'ALL') 
    AND   SV.TRSP_BND_CD = @[HID_BOUNDMODE]
#end 

#if ($INPUT_OFFICE.size() > 0) 
    AND WRK.CRE_OFC_CD  IN (
        #foreach( ${key} in ${INPUT_OFFICE}) 
            #if($velocityCount < $INPUT_OFFICE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

#if ($FRM_NODE.size() > 0) 
    AND   SV.FM_NOD_CD  IN  (
        #foreach( ${key} in ${FRM_NODE}) 
            #if($velocityCount < $FRM_NODE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

#if ($TO_NODE.size() > 0) 
    AND   SV.TO_NOD_CD  IN  (
        #foreach( ${key} in ${TO_NODE}) 
            #if($velocityCount < $TO_NODE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end
    
#if(${HID_BKGTERM} == 'Y') 
    AND DECODE ( SV.TRSP_BND_CD, 'O' , BK.RCV_TERM_CD ,'I' ,BK.DE_TERM_CD )= 'Y'
#end 

#if(${HID_TROSTS} == 'C') 
    AND COP.TRO_PROC_CD = 'C'
    AND NVL(COP.EUR_TRNS_TP_CD,'X') <>'FR' 
#elseif (${HID_TROSTS} == 'F') 
    AND ( NVL(COP.TRO_PROC_CD,'N')  <> 'C'
    OR NVL(COP.EUR_TRNS_TP_CD,'X') ='FR' )
#end 
        GROUP BY SV.TRSP_SO_OFC_CTY_CD, SV.TRSP_SO_SEQ, SV.COP_NO,SV.TRSP_COST_DTL_MOD_CD,  SV.BKG_NO    





    ) B     
    WHERE     
        A.COP_NO = B.COP_NO     
    AND A.TRSP_BND_CD = B.TRSP_BND_CD     
    AND A.TRSP_SO_OFC_CTY_CD = B.TRSP_SO_OFC_CTY_CD
    AND A.TRSP_SO_SEQ = B.TRSP_SO_SEQ
    AND A.TRSP_SO_TP_CD = 'Y'     
    AND A.DELT_FLG <> 'Y'     
    AND   XA.ACCT_XCH_RT_LVL = 1     
    AND   XA.CURR_CD = A.CURR_CD     
    AND   XA.ACCT_XCH_RT_YRMON = B.WO_DT     
    AND   XB.ACCT_XCH_RT_LVL = 1     
    AND   XB.CURR_CD = NVL(A.INV_CURR_CD,'EUR')     
    AND   XB.ACCT_XCH_RT_YRMON = B.WO_DT     
    GROUP BY  CUBE(   
             WRK_OFC, B.TRSP_BND_CD   
    )     

#if(${HID_BOUNDMODE} != 'ALL') 
    HAVING   B.TRSP_BND_CD = @[HID_BOUNDMODE]
#end 
    
    UNION ALL     
     
        SELECT      
                1,  9,WRK.CRE_OFC_CD  WRK_OFC     
                ,'Mty' BND     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'D2', 1, 0)) D2      
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'D4', 1, 0)) D4     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'D5', 1, 0)) D5      
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'D7', 1, 0)) D7      
                ,SUM(DECODE(SUBSTR(MT.EQ_TPSZ_CD,1,1) , 'D',DECODE (MT.EQ_TPSZ_CD,'D2',0,'D4',0,'D5',0,'D7',0, 1))) D_etc     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'R2', 1, 0)) R2     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'R4', 1, 0)) R4      
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'R5', 1, 0)) R5      
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'R7', 1, 0)) R7     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'R8', 1, 0)) R8     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'O2', 1, 0)) O2     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'O4', 1, 0)) O4     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'O5', 1, 0)) O5
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'O7', 1, 0)) O7
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'S2', 1, 0)) S2     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'S4', 1, 0)) S4     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'F2', 1, 0)) F2     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'F4', 1, 0)) F4     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'A2', 1, 0)) A2     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'A4', 1, 0)) A4     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'F5', 1, 0)) F5     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'P2', 1, 0)) P2      
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'P4', 1, 0)) P4     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'T2', 1, 0)) T2     
                ,SUM(DECODE(MT.EQ_TPSZ_CD, 'T4', 1, 0)) T4     
                ,COUNT( MT.EQ_TPSZ_CD ) VOL_TOT  
                ,SUM( DECODE( SUBSTR( MT.EQ_TPSZ_CD,2,1) , '2', 1,0) ) VOL_20     
                ,SUM( DECODE( SUBSTR( MT.EQ_TPSZ_CD,2,1) , '2', 0,1) ) VOL_40     
                ,0 REV_1     
                ,0 REV_2     
                ,0 REV_3     
                ,SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD', ( NVl(BZC_AMT,0)+NVL(ETC_ADD_AMT,0)+NVL(HJL_HNDL_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(NEGO_AMT,0) ) /FM1.USD_LOCL_XCH_RT , TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM')  )    ,2)) WO_COST    
                ,SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD', DECODE( NVL(INV_BZC_AMT,0) + NVL(INV_ETC_ADD_AMT,0), 0 , ( NVl(BZC_AMT,0)+NVL(ETC_ADD_AMT,0)+NVL(HJL_HNDL_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(NEGO_AMT,0) ) /FM1.USD_LOCL_XCH_RT , 0 ) , TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM') )   ,2)  ) RECAL_WO       
                ,0-  SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD', ( NVl(BZC_AMT,0)+NVL(ETC_ADD_AMT,0)+NVL(HJL_HNDL_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(NEGO_AMT,0) ) /FM1.USD_LOCL_XCH_RT,  TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM') ) ,     2)  ) DIFF_1     
                ,0-  SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD', ( NVl(BZC_AMT,0)+NVL(ETC_ADD_AMT,0)+NVL(HJL_HNDL_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(NEGO_AMT,0) ) /FM1.USD_LOCL_XCH_RT,  TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM') ) ,     2)  ) DIFF_2     
                ,SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD',  (NVL(INV_BZC_AMT,0) + NVL(INV_ETC_ADD_AMT,0))/FM2.USD_LOCL_XCH_RT , TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM') ) , 2) ) INV_COST     
                ,0-SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD', (NVL(BZC_AMT,0)+NVL(ETC_ADD_AMT,0)+NVL(HJL_HNDL_AMT,0)+NVL(FUEL_SCG_AMT,0)+NVL(NEGO_AMT,0) ) /FM1.USD_LOCL_XCH_RT , TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM')  )    ,2)) DIFF_3    
                ,0-SUM(ROUND( TRS_COMMON_PKG.GET_CONVERSION_EUR_AMT_FNC( 'USD', (NVL(INV_BZC_AMT,0) + NVL(INV_ETC_ADD_AMT,0))/FM2.USD_LOCL_XCH_RT , TO_CHAR(MT.LOCL_CRE_DT,'RRRRMM') ) , 2) ) DIFF_4     
        FROM    TRS_TRSP_SVC_ORD MT, TRS_TRSP_WRK_ORD WRK, GL_MON_XCH_RT FM2 , GL_MON_XCH_RT FM1     
        WHERE      
                MT.CGO_TP_CD = 'M'     
                AND MT.EQ_KND_CD = 'U'     
                AND MT.TRSP_SO_TP_CD = 'M'     
                AND MT.TRSP_COST_DTL_MOD_CD = 'ER'
                AND MT.TRSP_WO_OFC_CTY_CD = WRK.TRSP_WO_OFC_CTY_CD     
                AND MT.TRSP_WO_SEQ= WRK.TRSP_WO_SEQ     

#if($MONTH_FLG) 
    AND MT.LOCL_CRE_DT BETWEEN TO_DATE( @[SO_FMDT] , 'RRRRMM') AND LAST_DAY( to_date( @[SO_TODT] , 'RRRRMM'))+1
#else 
    AND MT.LOCL_CRE_DT BETWEEN TO_DATE( @[SO_FMDT] , 'RRRRMMDD') AND TO_DATE( @[SO_TODT] , 'RRRRMMDD')+1    
#end 

#if(${HID_INCLMTY} != 'Y') 
    AND   MT.TRSP_SO_SEQ = 0    
#end 

#if ($INPUT_OFFICE.size() > 0) 
    AND WRK.CRE_OFC_CD  IN (
        #foreach( ${key} in ${INPUT_OFFICE}) 
            #if($velocityCount < $INPUT_OFFICE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

#if ($FRM_NODE.size() > 0) 
    AND   MT.FM_NOD_CD  IN  (
        #foreach( ${key} in ${FRM_NODE}) 
            #if($velocityCount < $FRM_NODE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

#if ($TO_NODE.size() > 0) 
    AND  MT.TO_NOD_CD  IN  (
        #foreach( ${key} in ${TO_NODE}) 
            #if($velocityCount < $TO_NODE.size()) 
                UPPER('$key'), 
            #else 
                UPPER('$key') 
            #end 
        #end
    )
#end

    AND   FM1.ACCT_XCH_RT_LVL = 1     
    AND   FM1.CURR_CD = MT.CURR_CD     
    AND   FM1.ACCT_XCH_RT_YRMON = TO_CHAR(MT.LOCL_CRE_DT,'YYYYMM')     
    AND   FM2.ACCT_XCH_RT_LVL = 1     
    AND   FM2.CURR_CD = NVL(MT.INV_CURR_CD,'EUR')     
    AND   FM2.ACCT_XCH_RT_YRMON = TO_CHAR(MT.LOCL_CRE_DT,'YYYYMM')     
    GROUP BY       
    WRK.CRE_OFC_CD     

    )    ORDER BY DEP, WRK_OFC,GR_ID,TRSP_BND_CD			]]></sql>
			<params>
				<param name="SO_FMDT" type="12" value="" out="N"/>
				<param name="SO_TODT" type="12" value="" out="N"/>
				<param name="HID_BOUNDMODE" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
