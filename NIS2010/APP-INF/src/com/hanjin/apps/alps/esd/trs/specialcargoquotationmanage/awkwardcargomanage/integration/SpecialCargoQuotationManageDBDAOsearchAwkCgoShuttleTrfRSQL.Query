<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SpecialCargoQuotationManageDBDAOsearchAwkCgoShuttleTrfRSQL">
			<desc><![CDATA[searchAwkCgoShuttleTrf]]></desc>
			<sql><![CDATA[
SELECT * FROM (
SELECT
  CASE
  WHEN NVL(W.TRSP_ACT_COST_SEQ,0) > 0 AND NVL(W.TRSP_ACT_COST_SEQ,0) <> NVL(Q.TRSP_ACT_COST_SEQ,0)
  THEN CASE
       WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
       THEN 'U'
       ELSE ''
       END
  ELSE ''
  END IBFLAG
, CASE
  WHEN NVL(W.TRSP_ACT_COST_SEQ,0) > 0 AND NVL(W.TRSP_ACT_COST_SEQ,0) <> NVL(Q.TRSP_ACT_COST_SEQ,0)
  THEN CASE
       WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
       THEN W.TRSP_ACT_COST_SEQ
       ELSE Q.TRSP_ACT_COST_SEQ
       END
  ELSE Q.TRSP_ACT_COST_SEQ
  END TRSP_ACT_COST_SEQ  
 , SUBSTR(Q.FM_YD_CD,1,5) FM_LOC_CD
 , SUBSTR(Q.FM_YD_CD,6,2) FM_NOD_YD_NO
 , SUBSTR(Q.TO_YD_CD,1,5) TO_LOC_CD
 , SUBSTR(Q.TO_YD_CD,6,2) TO_NOD_YD_NO
 , Q.TRSP_AWK_CGO_TRF_TP_CD
 , Q.IO_GA_CD
 , Q.TRSP_CRR_MOD_CD
 , Q.COND_NO
 , Q.COND_DESC
 , Q.TRSP_AWK_TRF_VER_NO
 , Q.MAN_LOCL_CURR_CD
 , Q.MAN_LOCL_AMT_20FT
 , Q.MAN_LOCL_AMT_40FT
 , Q.MAN_USD_AMT_20FT
 , Q.MAN_USD_AMT_40FT
 ,
 CASE
 WHEN NVL(W.TRSP_ACT_COST_SEQ,0) > 0 AND NVL(W.TRSP_ACT_COST_SEQ,0) <> NVL(Q.TRSP_ACT_COST_SEQ,0)
 THEN CASE
      WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
      THEN NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0)
      ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)
      END
 ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)
 END AUTO_USD_AMT_20FT
 ,
 CASE
 WHEN NVL(W.TRSP_ACT_COST_SEQ,0) > 0 AND NVL(W.TRSP_ACT_COST_SEQ,0) <> NVL(Q.TRSP_ACT_COST_SEQ,0)
 THEN CASE
      WHEN (NVL(TO_NUMBER(W.ACT_USD_AMT_20FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_20FT),0)) OR (NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0) <> NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0))
      THEN NVL(TO_NUMBER(W.ACT_USD_AMT_40FT),0)
      ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0)
      END
 ELSE NVL(TO_NUMBER(Q.AUTO_USD_AMT_40FT),0)
 END AUTO_USD_AMT_40FT
 , Q.SUM_USD_AMT_20FT
 , Q.SUM_USD_AMT_40FT
 , Q.CALC_RMK
 , Q.LST_UPD_USR_ID
 , Q.LST_UPD_DT
 , Q.CRE_USR_OFC_CD
 , Q.UPD_USR_OFC_CD
 ,
 CASE
 WHEN Q.CRE_USR_OFC_AUTH_YN IS NOT NULL AND Q.CRE_USR_OFC_AUTH_YN = 'Y'
 THEN 'Y'
 WHEN Q.UPD_USR_OFC_AUTH_YN IS NOT NULL AND Q.UPD_USR_OFC_AUTH_YN = 'Y'
 THEN 'Y'
 ELSE 'N'
 END CHK_AUTH_YN
 , Q.SPCL_CGO_REF_SEQ
 , CASE
   WHEN W.ACT_YD_OFC_AUTH_YN = 'Y'
   THEN W.ACT_YD_OFC_AUTH_YN
   ELSE 
    	CASE
    	WHEN Q.CRE_USR_OFC_AUTH_YN = 'Y' OR Q.UPD_USR_OFC_AUTH_YN = 'Y'
    	THEN 'Y'
     	ELSE ''
    	END
   END ACT_YD_OFC_AUTH_YN
FROM (
    SELECT 
	AD.TRSP_ACT_COST_SEQ
    , AD.FM_YD_CD
    , AD.TO_YD_CD
    , X.TRSP_AWK_CGO_TRF_TP_CD
 	, X.IO_GA_CD
 	, X.TRSP_CRR_MOD_CD
 	, X.COND_NO
	,(SELECT C.COND_DESC
	  FROM TES_TRF_COND C
	  WHERE 1=1
	  AND C.COND_NO = X.COND_NO) COND_DESC	
 	, X.TRSP_AWK_TRF_VER_NO
    , X.MAN_LOCL_CURR_CD
    , X.MAN_LOCL_AMT_20FT
    , X.MAN_LOCL_AMT_40FT
    , X.MAN_USD_AMT_20FT
    , X.MAN_USD_AMT_40FT
    , X.AUTO_USD_AMT_20FT
    , X.AUTO_USD_AMT_40FT
	, X.SUM_USD_AMT_20FT
    , X.SUM_USD_AMT_40FT
    , AD.CALC_RMK
    , AD.LST_UPD_USR_ID
    , TO_CHAR(AD.LST_UPD_DT,'YYYY-MM-DD') LST_UPD_DT
    , AD.CRE_USR_ID
    , (SELECT Y.OFC_CD FROM MDM_YARD Y WHERE Y.YD_CD = AD.FM_YD_CD) CRE_USR_OFC_CD
    , UU.OFC_CD UPD_USR_OFC_CD
    , TRS_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], (SELECT Y.OFC_CD FROM MDM_YARD Y WHERE Y.YD_CD = AD.FM_YD_CD)) CRE_USR_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
    , TRS_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], UU.OFC_CD) UPD_USR_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
    , CASE 
      WHEN X.SPCL_CGO_REF_SEQ IS NOT NULL 
      THEN X.SPCL_CGO_REF_SEQ
      WHEN X.SPCL_CGO_REF_SEQ_PM IS NOT NULL 
      THEN X.SPCL_CGO_REF_SEQ_PM
      ELSE TO_NUMBER('')
      END SPCL_CGO_REF_SEQ
    FROM TRS_AWK_CGO_TRF_HDR AD, (
        SELECT 
            /** HDR + DTL **/
            T.FM_YD_CD, T.TO_YD_CD, T.TRSP_AWK_CGO_TRF_TP_CD, T.IO_GA_CD, T.TRSP_CRR_MOD_CD, T.COND_NO, MAX(T.TRSP_AWK_TRF_VER_NO) TRSP_AWK_TRF_VER_NO, 
            /** UNIT COST MANUAL (LOCL CURR) **/
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'M'
            THEN T.LOCL_CURR_CD
            END) MAN_LOCL_CURR_CD, 
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.LOCL_CURR_AMT,'')
            END) MAN_LOCL_AMT_20FT,
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.LOCL_CURR_AMT,'')
            END) MAN_LOCL_AMT_40FT,
            /** UNIT COST MANUAL (USD) **/
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) MAN_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'M'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) MAN_USD_AMT_40FT,
            /** UNIT COST AUTO (USD) **/
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'A'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) AUTO_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'A'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) AUTO_USD_AMT_40FT,
			/** TOTAL HANDLING COST (USD) **/
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'S'
            THEN DECODE(T.CNTR_SZ_CD,'2',T.USD_AMT,'')
            END) SUM_USD_AMT_20FT,
            MAX(
            CASE
            WHEN T.TRSP_AWK_UC_CALC_TP_CD = 'S'
            THEN DECODE(T.CNTR_SZ_CD,'4',T.USD_AMT,'')
            END) SUM_USD_AMT_40FT
            , MAX(PD.SPCL_CGO_REF_SEQ) SPCL_CGO_REF_SEQ
			, MAX(PM.SPCL_CGO_REF_SEQ) SPCL_CGO_REF_SEQ_PM
        FROM TRS_AWK_CGO_TRF_HDR D, TRS_AWK_CGO_TRF_TP_SZ T, PRI_SCQ_AWK_ROUT_DTL PD, PRI_SCQ_AWK_ROUT_DTL_TMP PM
        WHERE 1=1
        AND D.FM_YD_CD = T.FM_YD_CD
        AND D.TO_YD_CD  = T.TO_YD_CD 
        AND D.TRSP_AWK_CGO_TRF_TP_CD = T.TRSP_AWK_CGO_TRF_TP_CD
        AND D.IO_GA_CD = T.IO_GA_CD
        AND D.TRSP_CRR_MOD_CD = T.TRSP_CRR_MOD_CD
        AND D.COND_NO = T.COND_NO
        AND D.TRSP_AWK_TRF_VER_NO = T.TRSP_AWK_TRF_VER_NO
        AND D.TRSP_AWK_TRF_VER_NO = (
            SELECT MAX(XD.TRSP_AWK_TRF_VER_NO)
            FROM TRS_AWK_CGO_TRF_HDR XD
            WHERE 1=1
            AND XD.FM_YD_CD = D.FM_YD_CD
            AND XD.TO_YD_CD = D.TO_YD_CD
            AND XD.TRSP_AWK_CGO_TRF_TP_CD = D.TRSP_AWK_CGO_TRF_TP_CD
            AND XD.IO_GA_CD = D.IO_GA_CD
            AND XD.TRSP_CRR_MOD_CD = D.TRSP_CRR_MOD_CD
            AND XD.COND_NO = D.COND_NO        
        )
        AND T.SPCL_CGO_REF_SEQ = PD.SPCL_CGO_REF_SEQ(+)
		AND T.SPCL_CGO_REF_SEQ = PM.SPCL_CGO_REF_SEQ(+)
        GROUP BY T.FM_YD_CD, T.TO_YD_CD, T.TRSP_AWK_CGO_TRF_TP_CD, T.IO_GA_CD, T.TRSP_CRR_MOD_CD, T.COND_NO
    
    ) X
    , COM_USER CU, COM_USER UU
    WHERE 1=1
    #if(${yd_cd} != '' )
    AND (AD.FM_YD_CD LIKE @[yd_cd]||'%' OR AD.TO_YD_CD LIKE @[yd_cd]||'%')  --// PORT 조회조건으로 받는다
    #end
    AND AD.TRSP_AWK_CGO_TRF_TP_CD = @[trsp_awk_cgo_trf_tp_cd] --// COST 유형 받아 걸기
    AND AD.TRSP_AWK_TRF_VER_NO = (
        SELECT MAX(XD.TRSP_AWK_TRF_VER_NO)
        FROM TRS_AWK_CGO_TRF_HDR XD
        WHERE 1=1
        AND XD.FM_YD_CD = AD.FM_YD_CD
        AND XD.TO_YD_CD = AD.TO_YD_CD
        AND XD.TRSP_AWK_CGO_TRF_TP_CD = AD.TRSP_AWK_CGO_TRF_TP_CD
        AND XD.IO_GA_CD = AD.IO_GA_CD
        AND XD.TRSP_CRR_MOD_CD = AD.TRSP_CRR_MOD_CD
        AND XD.COND_NO = AD.COND_NO
    )
    AND AD.FM_YD_CD = X.FM_YD_CD
    AND AD.TO_YD_CD = X.TO_YD_CD
    AND AD.TRSP_AWK_CGO_TRF_TP_CD = X.TRSP_AWK_CGO_TRF_TP_CD
    AND AD.IO_GA_CD = X.IO_GA_CD
    AND AD.TRSP_CRR_MOD_CD = X.TRSP_CRR_MOD_CD
    AND AD.COND_NO = X.COND_NO 
    AND AD.CRE_USR_ID = CU.USR_ID(+)
    AND NVL(CU.USE_FLG(+),'N') = 'Y'
    AND AD.LST_UPD_USR_ID = UU.USR_ID(+)
    AND NVL(UU.USE_FLG(+),'N') = 'Y'
    )Q
, (
    SELECT 
        TD.TRSP_ACT_COST_SEQ, TD.FM_YD_CD, TD.TO_YD_CD, TD.TRSP_AWK_CGO_TRF_TP_CD, TD.IO_GA_CD, TD.TRSP_CRR_MOD_CD,
        MAX(DECODE(TT.CNTR_SZ_CD,'2',TT.USD_AMT,'')) ACT_USD_AMT_20FT,
        MAX(DECODE(TT.CNTR_SZ_CD,'4',TT.USD_AMT,'')) ACT_USD_AMT_40FT, Y.OFC_CD ACT_YD_OFC_CD
		, TRS_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], Y.OFC_CD) ACT_YD_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
    FROM TRS_ACT_COST_HDR TH, TRS_ACT_COST_DTL TD, TRS_ACT_COST_TP_SZ TT, MDM_YARD Y
    WHERE 1=1
	AND TH.TRSP_ACT_COST_SEQ > 0 
    AND NVL(TH.DELT_FLG,'N') <> 'Y'
    AND TH.EXE_STS_CD IN ('C')
    #if( ${year_month} != '' )
    AND TO_CHAR(TH.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
    #end
    AND TH.TRSP_ACT_COST_SEQ = (
        SELECT MAX(X.TRSP_ACT_COST_SEQ) TRSP_ACT_COST_SEQ
        FROM TRS_ACT_COST_HDR X
        WHERE 1=1
		AND X.TRSP_ACT_COST_SEQ > 0 
        AND NVL(X.DELT_FLG,'N') <> 'Y'
        AND X.EXE_STS_CD IN ('C')
        #if( ${year_month} != '' )
        AND TO_CHAR(X.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
        #end
    )
    AND TH.TRSP_ACT_COST_SEQ = TD.TRSP_ACT_COST_SEQ
    AND TD.TRSP_AWK_CGO_TRF_TP_CD = @[trsp_awk_cgo_trf_tp_cd]  --// COST 유형 받아 걸기
    AND TD.TRSP_ACT_COST_SEQ = TT.TRSP_ACT_COST_SEQ
    AND TD.FM_YD_CD = TT.FM_YD_CD
    AND TD.TO_YD_CD = TT.TO_YD_CD
    AND TD.TRSP_AWK_CGO_TRF_TP_CD = TT.TRSP_AWK_CGO_TRF_TP_CD
    AND TD.IO_GA_CD = TT.IO_GA_CD
    AND TD.TRSP_CRR_MOD_CD = TT.TRSP_CRR_MOD_CD
	AND TD.FM_YD_CD = Y.YD_CD(+)
    GROUP BY TD.TRSP_ACT_COST_SEQ, TD.FM_YD_CD, TD.TO_YD_CD, TD.TRSP_AWK_CGO_TRF_TP_CD, TD.IO_GA_CD, TD.TRSP_CRR_MOD_CD, Y.OFC_CD
) W
WHERE 1=1
AND Q.FM_YD_CD  = W.FM_YD_CD(+)
AND Q.TO_YD_CD  = W.TO_YD_CD(+)
AND Q.TRSP_AWK_CGO_TRF_TP_CD  = W.TRSP_AWK_CGO_TRF_TP_CD(+)
AND Q.IO_GA_CD  = W.IO_GA_CD(+)
AND Q.TRSP_CRR_MOD_CD  = W.TRSP_CRR_MOD_CD(+)
UNION ALL
SELECT 
	'I' IBFLAG
    , TD.TRSP_ACT_COST_SEQ
	, SUBSTR(TD.FM_YD_CD,1,5) FM_LOC_CD
	, SUBSTR(TD.FM_YD_CD,6,2) FM_NOD_YD_NO
	, SUBSTR(TD.TO_YD_CD,1,5) TO_LOC_CD
	, SUBSTR(TD.TO_YD_CD,6,2) TO_NOD_YD_NO
    , TD.TRSP_AWK_CGO_TRF_TP_CD
    , TD.IO_GA_CD
    , TD.TRSP_CRR_MOD_CD
	, DECODE(TD.IO_GA_CD,'I',TO_NUMBER('1'),'O',TO_NUMBER('2')) COND_NO
	, DECODE(TD.IO_GA_CD,'I',(SELECT C.COND_DESC
	                      	FROM TES_TRF_COND C
	                      	WHERE 1=1
	                      	AND C.COND_NO = '1'),
                     	'O',(SELECT C.COND_DESC
	                      	FROM TES_TRF_COND C
                          	WHERE 1=1
                         	AND C.COND_NO = '2')) COND_DESC
    , TO_NUMBER('') TRSP_AWK_TRF_VER_NO
    , '' MAN_LOCL_CURR_CD
    , TO_NUMBER('') MAN_LOCL_AMT_20FT
    , TO_NUMBER('') MAN_LOCL_AMT_40FT
    , TO_NUMBER('') MAN_USD_AMT_20FT
    , TO_NUMBER('') MAN_USD_AMT_40FT
    , MAX(DECODE(TT.CNTR_SZ_CD,'2',NVL(TT.USD_AMT,''),'')) AUTO_USD_AMT_20FT
    , MAX(DECODE(TT.CNTR_SZ_CD,'4',NVL(TT.USD_AMT,''),'')) AUTO_USD_AMT_40FT
	, MAX(DECODE(TT.CNTR_SZ_CD,'2',NVL(TT.USD_AMT,''),'')) SUM_USD_AMT_20FT
	, MAX(DECODE(TT.CNTR_SZ_CD,'4',NVL(TT.USD_AMT,''),'')) SUM_USD_AMT_40FT
    , '' CALC_RMK
    , TD.UPD_USR_ID LST_UPD_USR_ID
    , TO_CHAR(TD.UPD_DT,'YYYY-MM-DD') LST_UPD_DT
    , '' CRE_USR_OFC_CD
    , '' UPD_USR_OFC_CD
    , 'Y' CHK_AUTH_YN
    , TO_NUMBER('') SPCL_CGO_REF_SEQ
	, TRS_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], Y.OFC_CD) ACT_YD_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
FROM TRS_ACT_COST_HDR TH, TRS_ACT_COST_DTL TD, TRS_ACT_COST_TP_SZ TT, MDM_YARD Y
WHERE 1=1
AND NVL(TH.DELT_FLG,'N') <> 'Y'
AND TH.EXE_STS_CD IN ('C')
AND TO_CHAR(TH.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
AND TH.TRSP_ACT_COST_SEQ > 0
AND TH.TRSP_ACT_COST_SEQ = (
    SELECT MAX(X.TRSP_ACT_COST_SEQ) TRSP_ACT_COST_SEQ
    FROM TRS_ACT_COST_HDR X
    WHERE 1=1
	AND X.TRSP_ACT_COST_SEQ > 0 
    AND NVL(X.DELT_FLG,'N') <> 'Y'
    AND X.EXE_STS_CD IN ('C')
    AND TO_CHAR(X.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
)
#if(${yd_cd} != '' )
AND (TD.FM_YD_CD LIKE  @[yd_cd]||'%' OR TD.TO_YD_CD LIKE @[yd_cd]||'%') 
#end
AND TH.TRSP_ACT_COST_SEQ = TD.TRSP_ACT_COST_SEQ
AND TD.TRSP_AWK_CGO_TRF_TP_CD = @[trsp_awk_cgo_trf_tp_cd]  --// COST 유형 받아 걸기
AND TT.TRSP_ACT_COST_SEQ > 0
AND TD.TRSP_ACT_COST_SEQ = TT.TRSP_ACT_COST_SEQ
AND TD.FM_YD_CD = TT.FM_YD_CD
AND TD.TO_YD_CD = TT.TO_YD_CD
AND TD.TRSP_AWK_CGO_TRF_TP_CD = TT.TRSP_AWK_CGO_TRF_TP_CD
AND TD.IO_GA_CD = TT.IO_GA_CD
AND TD.TRSP_CRR_MOD_CD = TT.TRSP_CRR_MOD_CD
AND NOT EXISTS (
    SELECT D.FM_YD_CD
    FROM TRS_AWK_CGO_TRF_HDR D
    WHERE 1=1
    AND D.TRSP_AWK_CGO_TRF_TP_CD = @[trsp_awk_cgo_trf_tp_cd] --// COST 유형 받아 걸기
    AND D.FM_YD_CD = TD.FM_YD_CD
    AND D.TO_YD_CD = TD.TO_YD_CD
)
AND TD.FM_YD_CD = Y.YD_CD(+)
GROUP BY TD.TRSP_ACT_COST_SEQ, TD.FM_YD_CD, TD.TO_YD_CD, TD.TRSP_AWK_CGO_TRF_TP_CD, TD.IO_GA_CD, TD.TRSP_CRR_MOD_CD, TD.UPD_USR_ID, TO_CHAR(TD.UPD_DT,'YYYY-MM-DD'), Y.OFC_CD
--// DEFAULT 추가 -- 시작 ----------------------------------------
UNION ALL
SELECT 
X.IBFLAG
, X.TRSP_ACT_COST_SEQ
, X.FM_LOC_CD
, X.FM_NOD_YD_NO
, X.TO_LOC_CD
, X.TO_NOD_YD_NO
, X.TRSP_AWK_CGO_TRF_TP_CD
, 'A' IO_GA_CD
, 'TD' TRSP_CRR_MOD_CD
, 0 COND_NO
, '' COND_DESC
, TO_NUMBER('') TRSP_AWK_TRF_VER_NO
, '' MAN_LOCL_CURR_CD 
, TO_NUMBER('') MAN_LOCL_AMT_20FT
, TO_NUMBER('') MAN_LOCL_AMT_40FT
, TO_NUMBER('') MAN_USD_AMT_20FT
, TO_NUMBER('') MAN_USD_AMT_40FT
, AVG(X.AUTO_USD_AMT_20FT) AUTO_USD_AMT_20FT
, AVG(X.AUTO_USD_AMT_40FT) AUTO_USD_AMT_40FT
, AVG(X.SUM_USD_AMT_20FT) SUM_USD_AMT_20FT
, AVG(X.SUM_USD_AMT_40FT) SUM_USD_AMT_40FT
, '' CALC_RMK 
, X.LST_UPD_USR_ID
, X.LST_UPD_DT
, X.CRE_USR_OFC_CD
, X.UPD_USR_OFC_CD
, X.CHK_AUTH_YN
, X.SPCL_CGO_REF_SEQ
, X.ACT_YD_OFC_AUTH_YN
FROM (
SELECT 
	'I' IBFLAG
    , TD.TRSP_ACT_COST_SEQ
	, SUBSTR(TD.FM_YD_CD,1,5) FM_LOC_CD
	, SUBSTR(TD.FM_YD_CD,6,2) FM_NOD_YD_NO
	, SUBSTR(TD.TO_YD_CD,1,5) TO_LOC_CD
	, SUBSTR(TD.TO_YD_CD,6,2) TO_NOD_YD_NO
    , TD.TRSP_AWK_CGO_TRF_TP_CD
    , TD.IO_GA_CD
    , TD.TRSP_CRR_MOD_CD
	, DECODE(TD.IO_GA_CD,'I',TO_NUMBER('1'),'O',TO_NUMBER('2')) COND_NO
	, DECODE(TD.IO_GA_CD,'I',(SELECT C.COND_DESC
	                      	FROM TES_TRF_COND C
	                      	WHERE 1=1
	                      	AND C.COND_NO = '1'),
                     	'O',(SELECT C.COND_DESC
	                      	FROM TES_TRF_COND C
                          	WHERE 1=1
                         	AND C.COND_NO = '2')) COND_DESC
    , TO_NUMBER('') TRSP_AWK_TRF_VER_NO
    , '' MAN_LOCL_CURR_CD
    , TO_NUMBER('') MAN_LOCL_AMT_20FT
    , TO_NUMBER('') MAN_LOCL_AMT_40FT
    , TO_NUMBER('') MAN_USD_AMT_20FT
    , TO_NUMBER('') MAN_USD_AMT_40FT
    , MAX(DECODE(TT.CNTR_SZ_CD,'2',NVL(TT.USD_AMT,''),'')) AUTO_USD_AMT_20FT
    , MAX(DECODE(TT.CNTR_SZ_CD,'4',NVL(TT.USD_AMT,''),'')) AUTO_USD_AMT_40FT
	, MAX(DECODE(TT.CNTR_SZ_CD,'2',NVL(TT.USD_AMT,''),'')) SUM_USD_AMT_20FT
	, MAX(DECODE(TT.CNTR_SZ_CD,'4',NVL(TT.USD_AMT,''),'')) SUM_USD_AMT_40FT
    , '' CALC_RMK
    , TD.UPD_USR_ID LST_UPD_USR_ID
    , TO_CHAR(TD.UPD_DT,'YYYY-MM-DD') LST_UPD_DT
    , '' CRE_USR_OFC_CD
    , '' UPD_USR_OFC_CD
    , 'Y' CHK_AUTH_YN
    , TO_NUMBER('') SPCL_CGO_REF_SEQ
	, TRS_OOG_GET_AUTH_YN_FNC(@[lg_ofc_cd], Y.OFC_CD) ACT_YD_OFC_AUTH_YN  --// LOGIN OFC를 조건으로 걸기
FROM TRS_ACT_COST_HDR TH, TRS_ACT_COST_DTL TD, TRS_ACT_COST_TP_SZ TT, MDM_YARD Y
WHERE 1=1
AND NVL(TH.DELT_FLG,'N') <> 'Y'
AND TH.EXE_STS_CD IN ('C')
AND TO_CHAR(TH.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
AND TH.TRSP_ACT_COST_SEQ > 0
AND TH.TRSP_ACT_COST_SEQ = (
    SELECT MAX(X.TRSP_ACT_COST_SEQ) TRSP_ACT_COST_SEQ
    FROM TRS_ACT_COST_HDR X
    WHERE 1=1
	AND X.TRSP_ACT_COST_SEQ > 0 
    AND NVL(X.DELT_FLG,'N') <> 'Y'
    AND X.EXE_STS_CD IN ('C')
    AND TO_CHAR(X.EXE_FM_DT,'YYYYMM') = REPLACE(@[year_month],'-','') --// 년월 날짜 입력값
)
#if(${yd_cd} != '' )
AND (TD.FM_YD_CD LIKE  @[yd_cd]||'%' OR TD.TO_YD_CD LIKE @[yd_cd]||'%') 
#end
AND TH.TRSP_ACT_COST_SEQ = TD.TRSP_ACT_COST_SEQ
AND TD.TRSP_AWK_CGO_TRF_TP_CD = @[trsp_awk_cgo_trf_tp_cd]  --// COST 유형 받아 걸기
AND TT.TRSP_ACT_COST_SEQ > 0
AND TD.TRSP_ACT_COST_SEQ = TT.TRSP_ACT_COST_SEQ
AND TD.FM_YD_CD = TT.FM_YD_CD
AND TD.TO_YD_CD = TT.TO_YD_CD
AND TD.TRSP_AWK_CGO_TRF_TP_CD = TT.TRSP_AWK_CGO_TRF_TP_CD
AND TD.IO_GA_CD = TT.IO_GA_CD
AND TD.TRSP_CRR_MOD_CD IN ('TD')
AND TD.TRSP_CRR_MOD_CD = TT.TRSP_CRR_MOD_CD
AND NOT EXISTS (
    SELECT D.FM_YD_CD
    FROM TRS_AWK_CGO_TRF_HDR D
    WHERE 1=1
    AND D.TRSP_AWK_CGO_TRF_TP_CD = @[trsp_awk_cgo_trf_tp_cd] --// COST 유형 받아 걸기
    AND D.FM_YD_CD = TD.FM_YD_CD
    AND D.TO_YD_CD = TD.TO_YD_CD
)
AND TD.FM_YD_CD = Y.YD_CD(+)
GROUP BY TD.TRSP_ACT_COST_SEQ, TD.FM_YD_CD, TD.TO_YD_CD, TD.TRSP_AWK_CGO_TRF_TP_CD, TD.IO_GA_CD, TD.TRSP_CRR_MOD_CD, TD.UPD_USR_ID, TO_CHAR(TD.UPD_DT,'YYYY-MM-DD'), Y.OFC_CD
) X 
GROUP BY 
X.IBFLAG, X.TRSP_ACT_COST_SEQ, X.FM_LOC_CD, X.FM_NOD_YD_NO, X.TO_LOC_CD, X.TO_NOD_YD_NO, X.TRSP_AWK_CGO_TRF_TP_CD,
X.LST_UPD_USR_ID, X.LST_UPD_DT, X.CRE_USR_OFC_CD, X.UPD_USR_OFC_CD, X.CHK_AUTH_YN, X.SPCL_CGO_REF_SEQ, X.ACT_YD_OFC_AUTH_YN
--// DEFAULT 추가 -- 끝 ----------------------------------------
) P
#if(${cond_no} != '' )
WHERE P.COND_NO = @[cond_no]
#end
ORDER BY P.FM_LOC_CD, P.FM_NOD_YD_NO, P.TO_LOC_CD, P.TO_NOD_YD_NO, P.TRSP_AWK_CGO_TRF_TP_CD, P.IO_GA_CD, P.TRSP_CRR_MOD_CD, P.COND_NO			]]></sql>
			<params>
				<param name="lg_ofc_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="trsp_awk_cgo_trf_tp_cd" type="12" value="" out="N"/>
				<param name="year_month" type="12" value="" out="N"/>
				<param name="cond_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
