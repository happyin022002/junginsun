<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="PortPairRouteDBDAOSearchPortPairOceanRouteInformationRSQL">
			<desc><![CDATA[PortPairRouteDBDAOSearchPortPairOceanRouteInformationRSQL]]></desc>
			<sql><![CDATA[

WITH POR_TT AS
(
			SELECT 
					MIN(SUM_TT) POR_TT
			FROM (
						SELECT	ROUT_ORG_NOD_CD,
								ROUT_DEST_NOD_CD,
								SUM_TT_TIME 
											+ MAX( DECODE ( CNT, 1 ,	DECODE(ROUT_DTL_SEQ , 1 , DEST_DW_TIME , 0 ), 
																		DECODE(ROUT_DTL_SEQ , 1 , DEST_DW_TIME, 0 )) ) 
											+ MAX( DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 2 , DEST_DW_TIME, 0 )) ) 
											+ MAX( DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 3 , DEST_DW_TIME, 0 )) ) 
											+ MAX( DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 4 , DEST_DW_TIME, 0 )) ) 
											+ MAX( DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 5 , DEST_DW_TIME, 0 )) ) SUM_TT
						FROM (
								SELECT	M.ROUT_ORG_NOD_CD,
										M.ROUT_DEST_NOD_CD,
										D.ROUT_DTL_SEQ,
										COUNT (*) OVER (PARTITION BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ
											ORDER BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ)							AS CNT ,
										SUM(L.TZTM_HRS) OVER(PARTITION BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ
											ORDER BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ)							AS SUM_TT_TIME,
										NVL	(	 
												(
													SELECT NVL(DRY_AVG_DWLL_HRS, 0)
													FROM MDM_YARD
													WHERE YD_CD = D.LNK_DEST_NOD_CD 
												), 0
											) DEST_DW_TIME,
										NULL
								FROM	
										PRD_INLND_ROUT_MST M,
										PRD_INLND_ROUT_DTL D,
										PRD_INLND_EACH_LNK L,
										TRS_TRSP_AGMT_HDR A
								WHERE   1 = 1  
								AND SUBSTR(M.ROUT_ORG_NOD_CD, 1, 5) =     @[por_cd]
								AND M.ROUT_DEST_NOD_CD		LIKE		  @[pol_cd]||'%' 
								AND NVL(M.DELT_FLG, 'N')	='N'
								AND M.INLND_ROUT_BKG_FLG	= 'Y'
								AND M.ROUT_ORG_NOD_CD		= D.ROUT_ORG_NOD_CD
								AND M.ROUT_DEST_NOD_CD		= D.ROUT_DEST_NOD_CD
								AND M.ROUT_SEQ				= D.ROUT_SEQ
								AND D.LNK_ORG_NOD_CD		= L.LNK_ORG_NOD_CD
								AND D.LNK_DEST_NOD_CD		= L.LNK_DEST_NOD_CD
								AND D.TRSP_MOD_CD			= L.TRSP_MOD_CD
								AND D.TRSP_AGMT_OFC_CTY_CD	= A.TRSP_AGMT_OFC_CTY_CD(+)
								AND D.TRSP_AGMT_SEQ			= A.TRSP_AGMT_SEQ(+)
								AND NVL(A.DELT_FLG(+), 'N') = 'N'
								AND EXISTS	(
												SELECT 'X'
												FROM PRD_NODE N
												WHERE N.NOD_CD = M.ROUT_ORG_NOD_CD 
											)
								AND EXISTS	(
												SELECT 'X'
												FROM PRD_NODE N
												WHERE N.NOD_CD = M.ROUT_DEST_NOD_CD 
											)
								ORDER BY M.ROUT_SEQ, D.ROUT_DTL_SEQ 
							) M
						GROUP BY M.ROUT_ORG_NOD_CD, ROUT_DEST_NOD_CD, SUM_TT_TIME 
				)
) ,              
DEL_TT AS 
(
			SELECT 
					MIN(SUM_TT) DEL_TT
			FROM	(
						SELECT	ROUT_ORG_NOD_CD,
								ROUT_DEST_NOD_CD,
								SUM_TT_TIME + MAX(DECODE ( CNT, 1 , DECODE(ROUT_DTL_SEQ , 1 , DEST_DW_TIME , 0 ), DECODE(ROUT_DTL_SEQ , 1 , DEST_DW_TIME, 0 )) ) + MAX(DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 2 , DEST_DW_TIME, 0 )) ) + MAX(DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 3 , DEST_DW_TIME, 0 )) ) + MAX(DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 4 , DEST_DW_TIME, 0 )) ) + MAX(DECODE ( CNT, 1 , 0, DECODE(ROUT_DTL_SEQ , 5 , DEST_DW_TIME, 0 )) ) SUM_TT
						FROM	(
									SELECT /*+ LEADING(A M) USE_NL(A M) */
											M.ROUT_ORG_NOD_CD,
											M.ROUT_DEST_NOD_CD,
											D.ROUT_DTL_SEQ,
											COUNT (*) OVER (PARTITION BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ
												ORDER BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ)							AS CNT ,
											SUM(L.TZTM_HRS) OVER(PARTITION BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ
												ORDER BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ)							AS SUM_TT_TIME,
											NVL( 
													(
														SELECT NVL(DRY_AVG_DWLL_HRS, 0)
														FROM MDM_YARD
														WHERE YD_CD = D.LNK_DEST_NOD_CD 
													), 0
												) DEST_DW_TIME
									FROM	
											PRD_INLND_ROUT_MST	M,
											PRD_INLND_ROUT_DTL	D,
											PRD_INLND_EACH_LNK	L,
											TRS_TRSP_AGMT_HDR	A
									WHERE 1 = 1
									AND SUBSTR(M.ROUT_ORG_NOD_CD, 1, 5) =	@[pod_cd] 
									AND M.ROUT_DEST_NOD_CD             LIKE @[del_cd]||'%'
									AND NVL(M.DELT_FLG, 'N') ='N'
									AND M.INLND_ROUT_BKG_FLG = 'Y'
									AND M.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
									AND M.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
									AND M.ROUT_SEQ = D.ROUT_SEQ
									AND D.LNK_ORG_NOD_CD = L.LNK_ORG_NOD_CD
									AND D.LNK_DEST_NOD_CD = L.LNK_DEST_NOD_CD
									AND D.TRSP_MOD_CD = L.TRSP_MOD_CD
									AND D.TRSP_AGMT_OFC_CTY_CD = A.TRSP_AGMT_OFC_CTY_CD(+)
									AND D.TRSP_AGMT_SEQ = A.TRSP_AGMT_SEQ(+)
									AND NVL(A.DELT_FLG(+), 'N') = 'N'
									AND EXISTS	(
													SELECT 'X'
													FROM PRD_NODE N
													WHERE N.NOD_CD = M.ROUT_ORG_NOD_CD 
												)
									AND EXISTS	(
													SELECT 'X'
													FROM PRD_NODE N
													WHERE N.NOD_CD = M.ROUT_DEST_NOD_CD 
												)
									ORDER BY M.ROUT_SEQ, D.ROUT_DTL_SEQ 
								) M
						GROUP BY M.ROUT_ORG_NOD_CD, ROUT_DEST_NOD_CD, SUM_TT_TIME 
					)
),
 
BLK_LANES AS 
(

    SELECT  WM_CONCAT(SLAN_CD)   BLK_LANES  -- CKI,KIS
    FROM    SCE_CUST_EDI_BLCK
    WHERE   1 = 1
    AND     ROUT_RCV_DT =   @[rout_rcv_dt]
    AND     ROUT_SEQ    =   @[rout_seq]   
    AND     DELT_FLG    =   'N'
)

--<<---------------------------------------  CHM-201326574 : Added

 


SELECT 
        ORG_LOC_CD pol_cd, DEST_LOC_CD pod_cd, ROUT_SEQ, 
        N1ST_POL_CD POL1, N1ST_POD_CD POD1, N1ST_LANE_CD LANE1, N1ST_SKD_DIR_CD DIR1, N1ST_LANE_FDR_FLG FDR_FLG1, 
        (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N1ST_LANE_CD) SVC_TP1, 
        N2ND_POL_CD POL2, N2ND_POD_CD POD2, N2ND_LANE_CD LANE2, N2ND_SKD_DIR_CD DIR2, N2ND_LANE_FDR_FLG FDR_FLG2, 
        (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N2ND_LANE_CD) SVC_TP2, 
        N3RD_POL_CD POL3, N3RD_POD_CD POD3, N3RD_LANE_CD LANE3, N3RD_SKD_DIR_CD DIR3, N3RD_LANE_FDR_FLG FDR_FLG3, 
        (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N3RD_LANE_CD) SVC_TP3, 
        N4TH_POL_CD POL4, N4TH_POD_CD POD4, N4TH_LANE_CD LANE4, N4TH_SKD_DIR_CD DIR4, N4TH_LANE_FDR_FLG FDR_FLG4, 
        (SELECT DECODE(VSL_SVC_TP_CD, 'O','C', VSL_SVC_TP_CD) FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N4TH_LANE_CD) SVC_TP4, 
        OCN_ROUT_PRIO_CD PRIO, OCN_ROUT_USR_RMK RMK,  
        (N1ST_TZTM_HRS + N2ND_TZTM_HRS + N3RD_TZTM_HRS + N4TH_TZTM_HRS) TZTM_HRS, 
        
      
        

/* CHM-201326574 :Replaced */

        LTRIM(TO_CHAR(TRUNC(( nvl(N1ST_TZTM_HRS ,0)+ nvl(N2ND_TZTM_HRS ,0)+ nvl(N3RD_TZTM_HRS,0) + nvl(N4TH_TZTM_HRS,0) + nvl(POR_TT,0) + nvl(DEL_TT,0) )/24),'00'))
        ||
        LTRIM(TO_CHAR(MOD((nvl(N1ST_TZTM_HRS,0) + nvl(N2ND_TZTM_HRS,0) + nvl(N3RD_TZTM_HRS,0) + nvl(N4TH_TZTM_HRS,0) + nvl(POR_TT,0) + nvl(DEL_TT,0) ),24  ),'00')) FMT_TZTM_HRS ,

/* CHM-201326574 :Replaced */

		  
        N1ST_TZTM_HRS, N2ND_TZTM_HRS, N3RD_TZTM_HRS, N4TH_TZTM_HRS, 
        (N1ST_STAY_TM_HRS + N2ND_STAY_TM_HRS + N3RD_STAY_TM_HRS) ST_HRS, 
        
        LTRIM(TO_CHAR(TRUNC((N1ST_STAY_TM_HRS + N2ND_STAY_TM_HRS + N3RD_STAY_TM_HRS)/24),'00'))||LTRIM(TO_CHAR(MOD  ((N1ST_STAY_TM_HRS + N2ND_STAY_TM_HRS + N3RD_STAY_TM_HRS),24),'00')) FMT_ST_HRS ,  
        
        
        N1ST_STAY_TM_HRS/24 N1ST_STAY_TM_HRS, N2ND_STAY_TM_HRS/24 N2ND_STAY_TM_HRS, N3RD_STAY_TM_HRS/24 N3RD_STAY_TM_HRS,  
        TS_IND_CD, NVL(FDR_USD_FLG, 'N') F_USED,  
        B.TO_PORT_ETB_DY_CD POD1ETB, C.FM_PORT_ETB_DY_CD POL2ETB, C.TO_PORT_ETB_DY_CD POD2ETB,  
        D.FM_PORT_ETB_DY_CD POL3ETB, D.TO_PORT_ETB_DY_CD POD3ETB, E.FM_PORT_ETB_DY_CD POL4ETB, 
        LNK_KNT LNK_CNT,  TO_CHAR(A.CRE_DT, 'YYYY-MM-DD') C_DATE, A.CRE_USR_ID C_USER, 
        TO_CHAR(A.OCN_ROUT_UPD_DT, 'YYYY-MM-DD') U_DATE, A.UPD_USR_ID U_USER, 
        DECODE(UPD_IND_CD, 'G', 1, 'S', 2, 'T', 3, 'A', 4, 'V', 5, 'N', 6, 'D', 7) ord 
        ,OCN_ROUT_TMP_FLG ,TO_CHAR(OCN_ROUT_TMP_EXP_DT, 'YYYY-MM-DD')OCN_ROUT_TMP_EXP_DT
        ,OCN_ROUT_TMP_RMK s_route_note
        ,ROW_NUMBER() OVER (ORDER BY DECODE(UPD_IND_CD, 'G', 1, 'S', 2, 'T', 3, 'A', 4, 'V', 5, 'N', 6, 'D', 7),TO_CHAR(A.OCN_ROUT_UPD_DT , 'YYYY-MM-DD')  DESC) NO
        ,DECODE(UPD_IND_CD, 'G', 'Guide', 'S', 'Standard', 'T', 'Temporary', 'V', 'Validation', 'N', 'Not Used', 'D', 'Deleted') UPD_IND_CD
        -------------------------->> CHM-201326574 : Added

        ,CASE    WHEN   instr(@[block_lanes],N1ST_LANE_CD )> 0 OR 
                        instr(@[block_lanes],N2ND_LANE_CD )> 0 OR 
                        instr(@[block_lanes],N3RD_LANE_CD )> 0 OR 
                        instr(@[block_lanes],N4th_LANE_CD )> 0  THEN 
                        'Y'
                ELSE
                        'N'
        END         BLOCK_YN,                      
        @[por_cd] POR_CD,  
        @[del_cd] del_CD                 
        
        -------------------------->>  CHM-201326574 : Added
        
FROM   PRD_OCN_ROUT A, PRD_PF_TZ_TM B, PRD_PF_TZ_TM C, PRD_PF_TZ_TM D, PRD_PF_TZ_TM E 

        -------------------------->> CHM-201326574 : Added
       ,POR_TT, DEL_TT, BLK_LANES  
       -------------------------->> CHM-201326574 : Added

WHERE  ORG_LOC_CD   LIKE RTRIM(@[pol_cd])||'%'                          
  AND  DEST_LOC_CD  LIKE RTRIM(@[pod_cd])||'%'           

 

  AND  UPD_IND_CD   IN ( 'S','G' )                                          
	
  AND  N1ST_POL_CD  = B.FM_PORT_CD(+) 
  AND  N1ST_POD_CD  = B.TO_PORT_CD(+) 
  AND  N1ST_LANE_CD = B.VSL_SLAN_CD(+) 
  AND  N2ND_POL_CD  = C.FM_PORT_CD(+) 
  AND  N2ND_POD_CD  = C.TO_PORT_CD(+) 
  AND  N2ND_LANE_CD = C.VSL_SLAN_CD(+) 
  AND  N3RD_POL_CD  = D.FM_PORT_CD(+) 
  AND  N3RD_POD_CD  = D.TO_PORT_CD(+) 
  AND  N3RD_LANE_CD = D.VSL_SLAN_CD(+) 
  AND  N4TH_POL_CD  = E.FM_PORT_CD(+)  
  AND  N4TH_POD_CD  = E.TO_PORT_CD(+) 
  AND  N4TH_LANE_CD = E.VSL_SLAN_CD(+)
  
   -------------------------->> Added : CHM-201326574
  
    #if (${n1st_pol_cd} != '' ) 
    	 AND  N1ST_POL_CD  = @[n1st_pol_cd]
    #end	   
    #if (${n1st_pod_cd} != '' ) 
    	 AND  N1ST_POD_CD  = @[n1st_pod_cd]
    #end	   
    #if (${n2nd_pol_cd} != '' ) 
    	 AND  N2ND_POL_CD  = @[n2nd_pol_cd]
    #end	   
    #if (${n2nd_pod_cd} != '' ) 
    	 AND  N2ND_POD_CD  = @[n2nd_pod_cd]
    #end	   
    #if (${n3rd_pol_cd} != '' ) 
    	 AND  N3RD_POL_CD  = @[n3rd_pol_cd]
    #end	   
    #if (${n3rd_pod_cd} != '' ) 
    	 AND  N3RD_POD_CD  = @[n3rd_pod_cd]
    #end	     
  
   -------------------------->> Added : CHM-201326574
  

 
 order by ord, U_DATE desc



 			]]></sql>
			<params>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="rout_rcv_dt" type="12" value="" out="N"/>
				<param name="rout_seq" type="12" value="" out="N"/>
				<param name="block_lanes" type="12" value="" out="N"/>
				<param name="n1st_pol_cd" type="12" value="" out="N"/>
				<param name="n1st_pod_cd" type="12" value="" out="N"/>
				<param name="n2nd_pol_cd" type="12" value="" out="N"/>
				<param name="n2nd_pod_cd" type="12" value="" out="N"/>
				<param name="n3rd_pol_cd" type="12" value="" out="N"/>
				<param name="n3rd_pod_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
