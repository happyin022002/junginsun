<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="DOFChgColInqmanageDBDAOSearchDODCollectionPerformanceRSQL">
			<desc><![CDATA[DOD Performance 조회]]></desc>
			<sql><![CDATA[
SELECT 
    '' SEQ,
    TMP.CNTR_RTN_YD_CD,
    NVL(TMP.D2_QTY,0) D2_QTY,
    NVL(TMP.D4_QTY,0) D4_QTY,
    NVL(TMP.D5_QTY,0) D5_QTY,
    NVL(TMP.R2_QTY,0) R2_QTY,
    NVL(TMP.R5_QTY,0) R5_QTY,
    NVL(TMP.R9_QTY,0) R9_QTY,
    NVL((TMP.D2_QTY + TMP.D4_QTY + TMP.D5_QTY + TMP.R2_QTY + TMP.R5_QTY + TMP.R9_QTY),0) CNTR_QTY,
    NVL(TRF.TRF_D2_QTY,0) TRF_D2_QTY,
    NVL(TRF.TRF_D4_QTY,0) TRF_D4_QTY,
    NVL(TRF.TRF_D5_QTY,0) TRF_D5_QTY,
    NVL(TRF.TRF_R2_QTY,0) TRF_R2_QTY,
    NVL(TRF.TRF_R5_QTY,0) TRF_R5_QTY,
    NVL(TRF.TRF_R9_QTY,0) TRF_R9_QTY,
    NVL((TMP.D2_QTY*TRF.TRF_D2_QTY) + (TMP.D4_QTY*TRF.TRF_D4_QTY) + (TMP.D5_QTY*TRF.TRF_D5_QTY) +
        (TMP.R2_QTY*TRF.TRF_R2_QTY) + (TMP.R5_QTY*TRF.TRF_R5_QTY) + (TMP.R9_QTY*TRF.TRF_R9_QTY),0) TRF_AMT,
    NVL(TRO_AMT,0) TRO_AMT,
    NVL(DOD_AMT,0) DOD_AMT,
    TMP.HLG_TP_CD
FROM (
    SELECT SUBSTR(CNTR_RTN_YD_CD, 1, 5) CNTR_RTN_YD_CD,
        SUM(D2_QTY) D2_QTY,
        SUM(D4_QTY) D4_QTY,
        SUM(D5_QTY) D5_QTY,
        SUM(R2_QTY) R2_QTY,
        SUM(R5_QTY) R5_QTY,
        SUM(R9_QTY) R9_QTY,
        SUM(TRO_AMT) TRO_AMT,
        SUM(DOD_AMT) DOD_AMT,
        HLG_TP_CD
    FROM (
        SELECT 
            MAIN.MT_ORG_YD CNTR_RTN_YD_CD,
            DECODE(MAIN.CNTR_TPSZ_CD, 'D2', 1, 0) D2_QTY,
            DECODE(MAIN.CNTR_TPSZ_CD, 'D4', 1, 0) D4_QTY,
            DECODE(MAIN.CNTR_TPSZ_CD, 'D5', 1, 0) D5_QTY,
            DECODE(MAIN.CNTR_TPSZ_CD, 'R2', 1, 0) R2_QTY,
            DECODE(MAIN.CNTR_TPSZ_CD, 'R5', 1, 0) R5_QTY,
            DECODE(MAIN.CNTR_TPSZ_CD, 'R9', 1, 0) R9_QTY,
            MAIN.TRNS_REV_AMT TRO_AMT,
            MAIN.DIF_AMT DOD_AMT,
            MAIN.HLG_TP_CD
        FROM (    
                SELECT
                    ( SELECT 
                    M.ORG_YD_CD
                    FROM CTM_MOVEMENT M
                    WHERE 1=1
                    AND M.CNTR_NO = TMP.CNTR_NO
                    AND M.BKG_NO = TMP.BKG_NO
                    AND M.MVMT_STS_CD = 'MT'
                    #if (${return_cy} != '') 
                    AND M.ORG_YD_CD LIKE @[return_cy]||'%'
                    #end
					#if ( ${sel_tp_cd} != '1')
                    ## mt return month 
                    #if (${mt_rtn_mth} != '') 
                    AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[mt_rtn_mth]||'01','YYYYMMDD') AND LAST_DAY(TO_DATE(@[mt_rtn_mth],'YYYYMM')) + 0.999
                    #else  
                    ## mt return period 
                    AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[fm_mt_rtn_prd],'YYYYMMDD') AND TO_DATE(@[to_mt_rtn_prd],'YYYYMMDD') + 0.999
                    #end  
					#end
                    AND M.CNMV_SEQ = (  SELECT 
                                        MIN(M2.CNMV_SEQ)
                                        FROM CTM_MOVEMENT M2
                                        WHERE 1=1
                                        AND M2.CNTR_NO = TMP.CNTR_NO
                                        AND M2.BKG_NO = TMP.BKG_NO
                                        AND M2.MVMT_STS_CD = 'MT'  ) ) MT_ORG_YD,
                    TMP.CNTR_TPSZ_CD,
                    TMP.HLG_TP_CD,
                    TMP.DIF_AMT,
                    TMP.TRNS_REV_AMT
                FROM
                    (
                        SELECT 
                            BTR.CRE_OFC_CD,
                            BTR.BKG_NO,
                            BKG.DE_TERM_CD,
                            BKG.BL_NO BL_NO,
                            BCS.CUST_CNT_CD,
                            BCS.CUST_SEQ,
                            BCN.CNTR_NO,
                            BCN.CNMV_ID_NO,
                            BCN.CNMV_YR,
                            BCN.CNTR_TPSZ_CD,
                            BTR.CNTR_RTN_YD_CD,
                            BKG.POR_CD,
                            BKG.POL_CD,
                            BKG.POD_CD,
                            BKG.DEL_CD,
                            DECODE(TRIM(BKG.RFA_NO),NULL,(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),'',(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),TRIM(BKG.RFA_NO)) SC_RFA_TAA, 
                            BTR.CRE_DT,
                            CMV.MVMT_STS_CD,
                            CMV.ORG_YD_CD,
                            BTR.CURR_CD,
                            BTR.HLG_TP_CD,
                            (NVL (BTR.TRNS_REV_AMT, 0) + NVL (BTR.NMF_TRNS_REV_AMT,0)) AS TRNS_REV_AMT,
                            ARM.LOCL_CURR_CD AS AR_CURR_CD,
                            SUM(
                                (SELECT
                                SUM (CHG_AMT * INV_XCH_RT)
                                FROM INV_AR_CHG ARC
                                WHERE ARC.CHG_CD   = 'DOD'
                                AND ARC.AR_IF_NO = ARM.AR_IF_NO)
                            ) AS DIF_AMT
                        FROM BKG_EUR_TRO   BTR,
                            BKG_BOOKING   BKG,
                            BKG_CUSTOMER  BCS,
                            BKG_CONTAINER BCN,
                            CTM_MOVEMENT  CMV,
                            INV_AR_MN     ARM
                        WHERE  1=1

                             -- TRO OFC. 기준 
                             #if ( ${sel_tp_cd} == '1' )
							

 								#if( ${ctrl_ofc_cd} != '' )
						    	AND    BTR.CRE_OFC_CD IN (${ctrl_ofc_cd})
								#end

							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
                                #if (${tromonth} != '') 
                             	AND    TO_CHAR(BTR.CRE_DT,'YYYYMM')= @[tromonth] --> TRO Month조건
                                #else 
                             	AND    TO_CHAR(BTR.CRE_DT,'YYYYMMDD') >= @[fromtrodate] --> TRO Period조건
                             	AND    TO_CHAR(BTR.CRE_DT,'YYYYMMDD') <= @[totrodate] + 0.999 --> TRO Period조건
                                #end
                             #end
                             -- RFA 기준 
                             #if ( ${sel_tp_cd} == '2' )
   							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
                             AND    ARM.RFA_NO    = @[rfa_no]  --BAH11A0106 TYO11A0160 FRA10A0008
							 #end

                             -- MERCHANT 기준 
                             #if ( ${sel_tp_cd} == '3' )
							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
                             AND    BCS.CUST_CNT_CD = SUBSTR(@[cust_cd],1,2)  --  DE000441  + DEBERY1
                             AND    BCS.CUST_SEQ = SUBSTR(@[cust_cd],3)
							 #end
                             
                             -- MT RETURN YD 기준 
                             #if ( ${sel_tp_cd} == '4' )
							 	#if ( ${haul_cd} != 'A') 
									#if ( ${haul_cd} != 'X')
                             		AND    BTR.HLG_TP_CD = @[haul_cd]  --> M이면 M만... C이면 C만 + ALL이면 조건 자체를 아예 뺀다
									#else 
                             		AND    BTR.HLG_TP_CD IS NULL --> Null로 했을 경우 + ALL이면 조건 자체를 아예 뺀다
                                    #end
                                #end 
							 #end                             
                             
                             -- MT RETURN YD나 MT RETURN DT가 조회 기준으로 잡힐 경우만

                             AND EXISTS (
                                SELECT 'X'
                                FROM CTM_MOVEMENT M
                                WHERE 1=1
                                #if (${return_cy} != '') 
                                AND M.ORG_YD_CD LIKE @[return_cy]||'%'
                                #end
                                AND M.CNTR_NO = BCN.CNTR_NO
                                AND M.BKG_NO = BCN.BKG_NO
                                AND M.CNTR_NO = BTR.CNTR_NO
                                AND M.BKG_NO = BTR.BKG_NO
                                AND M.MVMT_STS_CD = 'MT'

                                ## mt return month 
                             	#if ( ${sel_tp_cd} != '1')
                                #if (${mt_rtn_mth} != '') 
                                AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[mt_rtn_mth]||'01','YYYYMMDD') AND LAST_DAY(TO_DATE(@[mt_rtn_mth],'YYYYMM')) + 0.999
                                #else  
                                ## mt return period 
                                AND M.CNMV_EVNT_DT BETWEEN TO_DATE(@[fm_mt_rtn_prd],'YYYYMMDD') AND TO_DATE(@[to_mt_rtn_prd],'YYYYMMDD') + 0.999
                                #end 
                                #end 
                             )
                             
                             AND BTR.IO_BND_CD                    = 'I'
                             AND BTR.TRO_SEQ > 0
                             AND BTR.BKG_NO                       = BKG.BKG_NO
                             AND BTR.BKG_NO                       = BCN.BKG_NO
                             AND BTR.BKG_NO                       = BCS.BKG_NO
                             AND SUBSTR (BTR.CNTR_RTN_YD_CD,1,5) != BKG.POD_CD

                             AND BCN.CNMV_CYC_NO > 0
                             AND BCN.CRE_DT >= TO_DATE('19990101','YYYYMMDD')
                             
                             AND BTR.CNTR_NO    = BCN.CNTR_NO
                             AND BCN.CNTR_NO    = CMV.CNTR_NO
                             AND BCN.CNMV_ID_NO = CMV.CNMV_ID_NO
                             AND BCN.CNMV_YR    = CMV.CNMV_YR
                             AND BTR.BKG_NO     = ARM.BKG_NO(+)
                             AND BTR.IO_BND_CD  = ARM.IO_BND_CD(+)
                             AND BCS.BKG_CUST_TP_CD
                               =
                               (
								    SELECT BCS2.BKG_CUST_TP_CD  --2011-10-21 추가
                                    FROM BKG_CUSTOMER BCS2
                                    WHERE BCS2.BKG_NO = BCS.BKG_NO
                                    AND BCS2.BKG_CUST_TP_CD = DECODE(BKG.CUST_TO_ORD_FLG,'Y','N','C')
                               )
                        GROUP BY BTR.CRE_OFC_CD,
                                 BTR.BKG_NO,
                                 BKG.DE_TERM_CD,
                                 BKG.BL_NO,
                                 BCS.CUST_CNT_CD,
                                 BCS.CUST_SEQ,
                                 BCN.CNTR_NO,
                                 BCN.CNMV_ID_NO,
                                 BCN.CNMV_YR,
                                 BCN.CNTR_TPSZ_CD,
                                 BTR.CNTR_RTN_YD_CD,
                                 BKG.POR_CD,
                                 BKG.POL_CD,
                                 BKG.POD_CD,
                                 BKG.DEL_CD,
                                 BTR.CRE_DT,
                                 CMV.MVMT_STS_CD,
                                 CMV.ORG_YD_CD,
                                 BTR.CURR_CD,
                                 BTR.HLG_TP_CD, 
                                   (
                                     NVL (BTR.TRNS_REV_AMT, 0)
                                   + NVL (BTR.NMF_TRNS_REV_AMT,0)
                                   ) ,
                                 ARM.LOCL_CURR_CD, 
                                 DECODE(TRIM(BKG.RFA_NO),NULL,(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),'',(DECODE(TRIM(BKG.SC_NO),NULL,TRIM(BKG.TAA_NO),'',TRIM(BKG.TAA_NO),TRIM(BKG.SC_NO))),TRIM(BKG.RFA_NO))
               ) TMP
         ) MAIN
    )
    GROUP BY SUBSTR(CNTR_RTN_YD_CD, 1, 5), HLG_TP_CD
    ) TMP,
    (
        SELECT
        X.FM_LOC_CD,
        MAX(X.TRF_D2_QTY) TRF_D2_QTY,
        MAX(X.TRF_D4_QTY) TRF_D4_QTY,
        MAX(X.TRF_D5_QTY) TRF_D5_QTY,
        MAX(X.TRF_R2_QTY) TRF_R2_QTY,
        MAX(X.TRF_R5_QTY) TRF_R5_QTY,
        MAX(X.TRF_R9_QTY) TRF_R9_QTY
        FROM (
             SELECT
                D.SCC_CD FM_LOC_CD,
                DECODE(T.CNTR_TPSZ_CD,'D2',T.CHRR_FRT_TAX_VAL,0) TRF_D2_QTY,
                DECODE(T.CNTR_TPSZ_CD,'D4',T.CHRR_FRT_TAX_VAL,0) TRF_D4_QTY,
                DECODE(T.CNTR_TPSZ_CD,'D5',T.CHRR_FRT_TAX_VAL,0) TRF_D5_QTY,
                DECODE(T.CNTR_TPSZ_CD,'R2',T.CHRR_FRT_TAX_VAL,0) TRF_R2_QTY,
                DECODE(T.CNTR_TPSZ_CD,'R5',T.CHRR_FRT_TAX_VAL,0) TRF_R5_QTY,
                DECODE(T.CNTR_TPSZ_CD,'R9',T.CHRR_FRT_TAX_VAL,0) TRF_R9_QTY
            FROM EAS_DRFF_CHG_TRF_HDR H, EAS_DRFF_CHG_TRF_DTL D, EAS_DRFF_CHG_TRF_TP_SZ T
            WHERE 1=1
            AND H.DRFF_CHG_TRF_SEQ = D.DRFF_CHG_TRF_SEQ
            AND H.DRFF_CHG_TRF_VER_NO = D.DRFF_CHG_TRF_VER_NO
            AND NVL(H.DELT_FLG,'N') <> 'Y'
            AND (H.DRFF_CHG_TRF_SEQ, H.DRFF_CHG_TRF_VER_NO) IN (
                SELECT DRFF_CHG_TRF_SEQ, MAX(DRFF_CHG_TRF_VER_NO) DRFF_CHG_TRF_VER_NO
                FROM EAS_DRFF_CHG_TRF_HDR H
                WHERE 1=1
                AND NVL(H.DELT_FLG,'N') <> 'Y'
                GROUP BY DRFF_CHG_TRF_SEQ
            )
            AND D.DRFF_CHG_TRF_SEQ = T.DRFF_CHG_TRF_SEQ
            AND D.DRFF_CHG_TRF_VER_NO = T.DRFF_CHG_TRF_VER_NO
            AND D.DRFF_CHG_TRF_DTL_SEQ = T.DRFF_CHG_TRF_DTL_SEQ
        ) X
        GROUP BY X.FM_LOC_CD    
    ) TRF
WHERE TMP.CNTR_RTN_YD_CD = TRF.FM_LOC_CD (+) 
ORDER BY TMP.CNTR_RTN_YD_CD, TMP.HLG_TP_CD			]]></sql>
			<params>
				<param name="return_cy" type="12" value="" out="N"/>
				<param name="mt_rtn_mth" type="12" value="" out="N"/>
				<param name="fm_mt_rtn_prd" type="12" value="" out="N"/>
				<param name="to_mt_rtn_prd" type="12" value="" out="N"/>
				<param name="haul_cd" type="12" value="" out="N"/>
				<param name="tromonth" type="12" value="" out="N"/>
				<param name="fromtrodate" type="12" value="" out="N"/>
				<param name="totrodate" type="12" value="" out="N"/>
				<param name="rfa_no" type="12" value="" out="N"/>
				<param name="cust_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
