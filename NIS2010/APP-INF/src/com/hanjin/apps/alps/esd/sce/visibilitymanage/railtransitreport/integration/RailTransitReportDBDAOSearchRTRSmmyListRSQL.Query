<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="RailTransitReportDBDAOSearchRTRSmmyListRSQL">
			<desc><![CDATA[RTR Report Summary List 조회]]></desc>
			<sql><![CDATA[
SELECT
#if(${chk_period} == 'M')
    DECODE(GROUPING_ID(MNTH, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD), 0, MNTH, 'Total') AS MNTH
,   '' AS WEEK
,   DECODE(GROUPING_ID(MNTH, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD), 0, CGO_TP_CD, '') AS CGO_TP_CD
,   DECODE(GROUPING_ID(MNTH, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD), 0, TRSP_BND_CD, '') AS TRSP_BND_CD
#elseif(${chk_period} == 'W')
    DECODE(GROUPING_ID(WEEK, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD, SLS_FM_DT, SLS_TO_DT), 0, '', 'Total') AS MNTH
,   DECODE(GROUPING_ID(WEEK, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD, SLS_FM_DT, SLS_TO_DT), 0, WEEK, '') AS WEEK
,   DECODE(GROUPING_ID(WEEK, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD, SLS_FM_DT, SLS_TO_DT), 0, CGO_TP_CD, '') AS CGO_TP_CD
,   DECODE(GROUPING_ID(WEEK, CGO_TP_CD, TRSP_BND_CD, FM_NOD_CD, TO_NOD_CD, SLS_FM_DT, SLS_TO_DT), 0, TRSP_BND_CD, '') AS TRSP_BND_CD
#end
,   @[rank_prefix]||DENSE_RANK() OVER (ORDER BY FM_NOD_CD, TO_NOD_CD) AS RANK_CD
,   FM_NOD_CD
,   TO_NOD_CD
,   COUNT(*) BOX_CNT
,   DECODE(SUM(DECODE(TML_DEP_FLG,'Y',1,0)),0,0, ROUND(SUM(DECODE(TML_DEP_FLG,'Y',TML_DWLL_TM_HRS,0))/SUM(DECODE(TML_DEP_FLG,'Y',1,0)),1)) TML_DWLL_TM_HRS
,   DECODE(SUM(DECODE(ORG_DEP_FLG,'Y',1,0)),0,0, ROUND(SUM(DECODE(ORG_DEP_FLG,'Y',ORG_DWLL_TM_HRS,0))/SUM(DECODE(ORG_DEP_FLG,'Y',1,0)),1)) ORG_DWLL_TM_HRS
,   ROUND(AVG(RAIL_RUN_TM_HRS),1) AS RAIL_RUN_TM_HRS
,   DECODE(SUM(DECODE(ITCHG_N1ST_DEP_FLG,'Y',1,0)),0,0, ROUND(SUM(DECODE(ITCHG_N1ST_DEP_FLG,'Y',ITCHG_N1ST_DWLL_TM_HRS,0))/SUM(DECODE(ITCHG_N1ST_DEP_FLG,'Y',1,0)),1)) ITCHG_N1ST_DWLL_TM_HRS
,   DECODE(SUM(DECODE(ITCHG_N2ND_DEP_FLG,'Y',1,0)),0,0, ROUND(SUM(DECODE(ITCHG_N2ND_DEP_FLG,'Y',ITCHG_N2ND_DWLL_TM_HRS,0))/SUM(DECODE(ITCHG_N2ND_DEP_FLG,'Y',1,0)),1)) ITCHG_N2ND_DWLL_TM_HRS
,   DECODE(SUM(DECODE(DEST_N1ST_DEP_FLG,'Y',1,0)),0,0, ROUND(SUM(DECODE(DEST_N1ST_DEP_FLG,'Y',DEST_N1ST_DWLL_TM_HRS,0))/SUM(DECODE(DEST_N1ST_DEP_FLG,'Y',1,0)),1)) DEST_N1ST_DWLL_TM_HRS
,   DECODE(SUM(DECODE(DEST_N2ND_DEP_FLG,'Y',1,0)),0,0, ROUND(SUM(DECODE(DEST_N2ND_DEP_FLG,'Y',DEST_N2ND_DWLL_TM_HRS,0))/SUM(DECODE(DEST_N2ND_DEP_FLG,'Y',1,0)),1)) DEST_N2ND_DWLL_TM_HRS
,   ROUND(AVG(RAIL_TZTM_HRS),1) AS RAIL_TZTM_HRS
,   ROUND(AVG(TTL_TZTM_HRS),1) AS TTL_TZTM_HRS
#if(${chk_period} == 'M')
,   MNTH||NVL2(MNTH,'01','') SLS_FM_DT
,   TO_CHAR(LAST_DAY(TO_DATE(MNTH, 'YYYYMM')),'YYYYMMDD') SLS_TO_DT
#elseif(${chk_period} == 'W')
,   SLS_FM_DT
,   SLS_TO_DT
#end
FROM
(
SELECT 
     (SELECT CP.COST_YR||CP.COST_WK WEEK FROM MAS_WK_PRD CP WHERE 
     CASE WHEN @[date_kind] = 'S' THEN RPT.SO_CRE_DT
          WHEN @[date_kind] = 'A' THEN RPT.DEST_AVAL_DT
          WHEN @[date_kind] = 'O' THEN (CASE WHEN(SELECT MAX(CASE WHEN (T.TRSP_BND_CD = 'O' AND T.POR_CD = T.POL_CD) OR (T.TRSP_BND_CD = 'I' AND T.POD_CD = T.DEL_CD)
                                                                   THEN 'ON' ELSE 'OFF' END) CHKDOCK FROM TRS_TRSP_RAIL_BIL_ORD T
                                                    WHERE T.TRSP_SO_OFC_CTY_CD = RPT.TRSP_SO_OFC_CTY_CD
                                                    AND T.TRSP_SO_SEQ = RPT.TRSP_SO_SEQ) = 'ON' 
                                              THEN RPT.DEST_AVAL_DT
                                        ELSE RPT.DEST_GATE_OUT_DT END)
          WHEN @[date_kind] = 'I' THEN RPT.ORG_GATE_IN_DT
          WHEN @[date_kind] = 'D' THEN RPT.VD_DT
          WHEN @[date_kind] = 'P' THEN RPT.ORG_GATE_OUT_DT
     END
     BETWEEN TO_DATE(CP.SLS_FM_DT,'YYYYMMDD') AND TO_DATE(CP.SLS_TO_DT,'YYYYMMDD')+0.99999) WEEK
    ,CASE WHEN @[date_kind] = 'S' THEN TO_CHAR(RPT.SO_CRE_DT, 'YYYYMM')
          WHEN @[date_kind] = 'A' THEN TO_CHAR(RPT.DEST_AVAL_DT, 'YYYYMM')
          WHEN @[date_kind] = 'O' THEN TO_CHAR((CASE WHEN(SELECT MAX(CASE WHEN (T.TRSP_BND_CD = 'O' AND T.POR_CD = T.POL_CD) OR (T.TRSP_BND_CD = 'I' AND T.POD_CD = T.DEL_CD)
                                                                   THEN 'ON' ELSE 'OFF' END) CHKDOCK FROM TRS_TRSP_RAIL_BIL_ORD T
                                                    WHERE T.TRSP_SO_OFC_CTY_CD = RPT.TRSP_SO_OFC_CTY_CD
                                                    AND T.TRSP_SO_SEQ = RPT.TRSP_SO_SEQ) = 'ON' 
                                              THEN RPT.DEST_AVAL_DT
                                        ELSE RPT.DEST_GATE_OUT_DT END), 'YYYYMM')
          WHEN @[date_kind] = 'I' THEN TO_CHAR(RPT.ORG_GATE_IN_DT, 'YYYYMM')
          WHEN @[date_kind] = 'D' THEN TO_CHAR(RPT.VD_DT, 'YYYYMM')
          WHEN @[date_kind] = 'P' THEN TO_CHAR(RPT.ORG_GATE_OUT_DT, 'YYYYMM')
     END MNTH
    ,CGO_TP_CD
    ,NVL(TRSP_BND_CD, 'ALL') AS TRSP_BND_CD
    ,SUBSTR(FM_NOD_CD, 1, LENGTH(@[fm_nod_cd])) AS FM_NOD_CD
    ,SUBSTR(TO_NOD_CD, 1, LENGTH(@[to_nod_cd])) AS TO_NOD_CD
    ,        (CASE WHEN NOD_CD = 'USLGBPT' AND RHS.BKG_NO IS NOT NULL THEN
              CASE WHEN RHS.LST_RLSE_DT IS NULL THEN NULL
                   WHEN RPT.VD_DT IS NULL THEN NULL
                   WHEN RPT.VD_DT > RHS.LST_RLSE_DT THEN (ROUND(DECODE(VD_DT, NULL, 0,
                        DECODE(TRSP_BND_CD, 'I',
                        DECODE(ORG_GATE_IN_DT, NULL, (CASE
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT >= AMS_UPD_DT THEN
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG        = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - VD_DT)*24
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT < AMS_UPD_DT THEN
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG        = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - AMS_UPD_DT)*24
                        ELSE
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG      = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - VD_DT)*24
                        END) ,
                        (CASE WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT >= AMS_UPD_DT THEN
                        (ORG_GATE_IN_DT - VD_DT)*24
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT < AMS_UPD_DT THEN
                        CASE WHEN (ORG_GATE_IN_DT - AMS_UPD_DT)<0 THEN
                        (ORG_GATE_IN_DT - VD_DT)*24
                        ELSE
                        (ORG_GATE_IN_DT - AMS_UPD_DT)*24
                        END
                        ELSE
                        (ORG_GATE_IN_DT - VD_DT)*24 END)
                        )
                        ,'O', 0)),1))
                   WHEN RPT.VD_DT <= RHS.LST_RLSE_DT THEN (ROUND(DECODE(RHS.LST_RLSE_DT, NULL, 0,
                        DECODE(TRSP_BND_CD, 'I',
                        DECODE(ORG_GATE_IN_DT, NULL, (CASE
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND RHS.LST_RLSE_DT >= AMS_UPD_DT THEN
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG        = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - RHS.LST_RLSE_DT)*24
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND RHS.LST_RLSE_DT < AMS_UPD_DT THEN
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG        = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - AMS_UPD_DT)*24
                        ELSE
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG      = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - RHS.LST_RLSE_DT)*24
                        END) ,
                        (CASE WHEN IB_IPI_LOCL_IND_CD = 'L' AND RHS.LST_RLSE_DT >= AMS_UPD_DT THEN
                        (ORG_GATE_IN_DT - RHS.LST_RLSE_DT)*24
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND RHS.LST_RLSE_DT < AMS_UPD_DT THEN
                        CASE WHEN (ORG_GATE_IN_DT - AMS_UPD_DT)<0 THEN
                        (ORG_GATE_IN_DT - RHS.LST_RLSE_DT)*24
                        ELSE
                        (ORG_GATE_IN_DT - AMS_UPD_DT)*24
                        END
                        ELSE
                        (ORG_GATE_IN_DT - RHS.LST_RLSE_DT)*24 END)
                        )
                        ,'O', 0)),1))
                    END
              ELSE 
              	(ROUND(DECODE(VD_DT, NULL, 0,
                        DECODE(TRSP_BND_CD, 'I',
                        DECODE(ORG_GATE_IN_DT, NULL, (CASE
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT >= AMS_UPD_DT THEN
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG        = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y'  THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - VD_DT)*24
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT < AMS_UPD_DT THEN
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG        = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - AMS_UPD_DT)*24
                        ELSE
                        (CASE WHEN TML_DEP_FLG = 'Y' THEN ORG_GATE_IN_DT
                        WHEN ORG_DEP_FLG      = 'Y' THEN ORG_GATE_OUT_DT
                        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
                        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
                        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
                        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(TO_NOD_CD, RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
                        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
                        END  - VD_DT)*24
                        END) ,
                        (CASE WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT >= AMS_UPD_DT THEN
                        (ORG_GATE_IN_DT - VD_DT)*24
                        WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT < AMS_UPD_DT THEN
                        CASE WHEN (ORG_GATE_IN_DT - AMS_UPD_DT)<0 THEN
                        (ORG_GATE_IN_DT - VD_DT)*24
                        ELSE
                        (ORG_GATE_IN_DT - AMS_UPD_DT)*24
                        END
                        ELSE
                        (ORG_GATE_IN_DT - VD_DT)*24 END)
                        )
                        ,'O', 0)),1))
             END
             ) TML_DWLL_TM_HRS
    ,NVL(ROUND(DECODE( ORG_GATE_IN_DT, NULL, 0,
        DECODE(ORG_GATE_OUT_DT, NULL,
        (CASE WHEN ORG_DEP_FLG = 'Y' THEN ORG_GATE_OUT_DT
        WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
        WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
        WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
        WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(RPT.TO_NOD_CD, MR_TML.RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
        ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
    END - ORG_GATE_IN_DT)*24, (ORG_GATE_OUT_DT - ORG_GATE_IN_DT)*24)),1), 0) ORG_DWLL_TM_HRS

    ,DECODE(ROUND(((DEST_GATE_IN_DT - ORG_GATE_OUT_DT)*24),1), NULL, '', 0, '',
    ROUND(((DEST_GATE_IN_DT - ORG_GATE_OUT_DT)*24),1)) RAIL_RUN_TM_HRS

    ,ROUND(DECODE(ITCHG_GATE_IN_DT, NULL, 0,
    DECODE(ITCHG_DT, NULL,
    (CASE WHEN ITCHG_N1ST_DEP_FLG = 'Y' THEN ITCHG_DT
    WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
    WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
    WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(RPT.TO_NOD_CD, MR_TML.RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
    ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
    END - ITCHG_GATE_IN_DT)*24, (ITCHG_DT - ITCHG_GATE_IN_DT)*24)),1) ITCHG_N1ST_DWLL_TM_HRS

    ,ROUND(DECODE(ITCHG_DT, NULL, 0,
    DECODE(ITCHG_GATE_OUT_DT, NULL,
    (CASE WHEN ITCHG_N2ND_DEP_FLG = 'Y' THEN ITCHG_GATE_OUT_DT
    WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
    WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(RPT.TO_NOD_CD, MR_TML.RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
    ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
    END - ITCHG_DT)*24, (ITCHG_GATE_OUT_DT - ITCHG_DT)*24)),1) ITCHG_N2ND_DWLL_TM_HRS

    ,ROUND(DECODE(DEST_GATE_IN_DT, NULL, 0,
    DECODE(DEST_AVAL_DT, NULL,
    (CASE WHEN DEST_N1ST_DEP_FLG  = 'Y' THEN DEST_AVAL_DT
    WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DECODE(RPT.TO_NOD_CD, MR_TML.RAIL_NOD, DEST_AVAL_DT, DEST_GATE_OUT_DT)
    ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
    END - DEST_GATE_IN_DT)*24, (DEST_AVAL_DT - DEST_GATE_IN_DT)*24)),1) DEST_N1ST_DWLL_TM_HRS

    ,ROUND(DECODE(DEST_AVAL_DT, NULL, 0,
    DECODE(RPT.TO_NOD_CD, MR_TML.RAIL_NOD, '0',
    DECODE(DEST_GATE_OUT_DT, NULL,
    (CASE WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DEST_GATE_OUT_DT
    ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
    END - DEST_AVAL_DT)*24,
    (DEST_GATE_OUT_DT - DEST_AVAL_DT)*24))),1) DEST_N2ND_DWLL_TM_HRS

    ,DECODE(TRSP_BND_CD, 'O',
    DECODE(ROUND(((DEST_AVAL_DT - ORG_GATE_IN_DT )*24),1), NULL, '', 0, '',
    ROUND(((DEST_AVAL_DT - ORG_GATE_IN_DT)*24),1)),
    DECODE(ROUND(((DEST_AVAL_DT - VD_DT)*24),1), NULL, '', 0, '',
    (CASE WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT < AMS_UPD_DT THEN
    ROUND(((DEST_AVAL_DT - AMS_UPD_DT)*24),1)
    WHEN IB_IPI_LOCL_IND_CD = 'L' OR IB_IPI_LOCL_IND_CD = 'I' THEN
    ROUND(((DEST_AVAL_DT - VD_DT)*24),1)
    ELSE ROUND(((DEST_AVAL_DT - VD_DT)*24),1)
    END )
    )) RAIL_TZTM_HRS
    ,DECODE(TRSP_BND_CD, 'O',
    DECODE(ROUND(((DEST_GATE_OUT_DT - ORG_GATE_IN_DT )*24),1), NULL, '', 0, '',
    ROUND(((DEST_GATE_OUT_DT - ORG_GATE_IN_DT)*24),1)),
    DECODE(ROUND(((DEST_AVAL_DT - VD_DT)*24),1), NULL, '', 0, '',
    (CASE WHEN IB_IPI_LOCL_IND_CD = 'L' AND VD_DT < AMS_UPD_DT THEN
    ROUND(((DEST_AVAL_DT - AMS_UPD_DT)*24),1)
    WHEN IB_IPI_LOCL_IND_CD = 'L' OR IB_IPI_LOCL_IND_CD = 'I' THEN
    ROUND(((DEST_AVAL_DT - VD_DT)*24),1)
    ELSE ROUND(((DEST_AVAL_DT - VD_DT)*24),1)
    END )
    )
    +
    DECODE(DEST_N2ND_DEP_FLG, 'Y',
    ROUND(DECODE(DEST_AVAL_DT, NULL, 0,
    DECODE(RPT.TO_NOD_CD, MR_TML.RAIL_NOD, '0',
    DECODE(DEST_GATE_OUT_DT, NULL,
    (CASE WHEN DEST_N2ND_DEP_FLG  = 'Y' THEN DEST_GATE_OUT_DT
    ELSE (GLOBALDATE_PKG.TIME_CONV_FNC(SUBSTR('KRPUS',1,5), SYSDATE, 'USNYC'))
    END - DEST_AVAL_DT)*24,
    (DEST_GATE_OUT_DT - DEST_AVAL_DT)*24))),1))
    ) AS TTL_TZTM_HRS, 
    TML_DEP_FLG,
    ORG_DEP_FLG,
    ITCHG_N1ST_DEP_FLG,
    ITCHG_N2ND_DEP_FLG,
    DEST_N1ST_DEP_FLG,
    DEST_N2ND_DEP_FLG
FROM    SCE_RAIL_TZ_RPT         RPT
,       BKG_BOOKING             BKG
,       BKG_CGO_RLSE            CR
,       SCE_RAIL_HLD_STS        RHS
,       (
        SELECT 'CAVANM2' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USLGBPT' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USORFM2' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USPDXM1' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USSAVM1' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USTIWM1' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USLGBM5' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USLGBM6' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USLAXYM' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USLAXM2' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USORFM5' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USTIWYM' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'CAPRRM1' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'CAMTRC2' RAIL_NOD FROM DUAL UNION ALL
		SELECT 'USLAXM3' RAIL_NOD FROM DUAL UNION ALL
        SELECT 'USLAXM4' RAIL_NOD FROM DUAL
        ) MR_TML
WHERE   RPT.BKG_NO              = BKG.BKG_NO (+)
AND     NVL(RPT.DELT_FLG, 'N')  = 'N'
AND     CR.BL_NO (+)            = BKG.BL_NO
AND     RPT.TO_NOD_CD           = MR_TML.RAIL_NOD(+)
AND     RPT.BKG_NO		        = RHS.BKG_NO(+)
AND     RPT.EQ_NO	        	= RHS.CNTR_NO(+)
#if(${date_kind} != '')
    #if(${date_kind} == 'S')
        #if(${fm_date} != '' && ${to_date} != '')
AND RPT.SO_CRE_DT BETWEEN TO_DATE(@[fm_date]||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(@[to_date]||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        #end	
    #elseif(${date_kind} == 'A')
        #if(${fm_date} != '' && ${to_date} != '')
AND RPT.DEST_AVAL_DT BETWEEN  TO_DATE(@[fm_date]||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(@[to_date]||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        #end
    #elseif(${date_kind} == 'O')
        #if(${fm_date} != '' && ${to_date} != '')
AND (CASE WHEN(SELECT MAX(CASE WHEN (T.TRSP_BND_CD = 'O' AND T.POR_CD = T.POL_CD) OR (T.TRSP_BND_CD = 'I' AND T.POD_CD = T.DEL_CD)
                               THEN 'ON' ELSE 'OFF' END) CHKDOCK
                 FROM TRS_TRSP_RAIL_BIL_ORD T
                WHERE T.TRSP_SO_OFC_CTY_CD = RPT.TRSP_SO_OFC_CTY_CD
                  AND T.TRSP_SO_SEQ = RPT.TRSP_SO_SEQ) = 'ON' THEN RPT.DEST_AVAL_DT
          ELSE RPT.DEST_GATE_OUT_DT
      END) BETWEEN  TO_DATE(@[fm_date]||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(@[to_date]||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        #end
    #elseif(${date_kind} == 'I')
        #if(${fm_date} != '' && ${to_date} != '')
AND RPT.ORG_GATE_IN_DT BETWEEN  TO_DATE(@[fm_date]||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(@[to_date]||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        #end
    #elseif(${date_kind} == 'D')
        #if(${fm_date} != '' && ${to_date} != '')
AND RPT.VD_DT BETWEEN  TO_DATE(@[fm_date]||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(@[to_date]||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        #end
    #elseif(${date_kind} == 'P')
        #if(${fm_date} != '' && ${to_date} != '')
AND RPT.ORG_GATE_OUT_DT BETWEEN  TO_DATE(@[fm_date]||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(@[to_date]||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
        #end
    #end
#end			
#if(${fm_nod_cd} != '')
AND FM_NOD_CD LIKE @[fm_nod_cd]||'%'
#end
#if(${to_nod_cd} != '')
AND TO_NOD_CD LIKE @[to_nod_cd]||'%'
#end
#if(${cgo_tp_cd} != '')
AND CGO_TP_CD = @[cgo_tp_cd]
#end
#if(${trsp_bnd_cd} != '')
AND TRSP_BND_CD = @[trsp_bnd_cd]
#end
#if(${sc_no} != '')
AND RPT.SC_NO = @[sc_no]
#end
) I
#if(${chk_period} == 'W')
, MAS_WK_PRD J
#end
WHERE 1=1
#if(${chk_period} == 'W')
AND SUBSTR(I.WEEK,1,4) = COST_YR
AND SUBSTR(I.WEEK,5,2) = COST_WK
#end
GROUP BY
GROUPING SETS(
(
#if(${chk_period} == 'W')
    WEEK
#elseif(${chk_period} == 'M')
    MNTH
#end
,   CGO_TP_CD
,   TRSP_BND_CD
,   FM_NOD_CD
,   TO_NOD_CD
#if(${chk_period} == 'W')
,   SLS_FM_DT
,   SLS_TO_DT
#end
),
(   FM_NOD_CD
,   TO_NOD_CD )
)			]]></sql>
			<params>
				<param name="rank_prefix" type="12" value="" out="N"/>
				<param name="date_kind" type="12" value="" out="N"/>
				<param name="fm_nod_cd" type="12" value="" out="N"/>
				<param name="to_nod_cd" type="12" value="" out="N"/>
				<param name="fm_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="cgo_tp_cd" type="12" value="" out="N"/>
				<param name="trsp_bnd_cd" type="12" value="" out="N"/>
				<param name="sc_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
