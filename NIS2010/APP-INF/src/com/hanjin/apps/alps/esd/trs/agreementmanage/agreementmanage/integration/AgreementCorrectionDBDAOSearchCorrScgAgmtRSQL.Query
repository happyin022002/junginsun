<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AgreementCorrectionDBDAOSearchCorrScgAgmtRSQL">
			<desc><![CDATA[Agreement Surcharge Rate정보 조회]]></desc>
			<sql><![CDATA[
#if (${grid_flg} != 'Y')
SELECT 
    'Surcharge'
    ,'Cost Mode'
    ,'Trans Mode'
    ,'Cargo Type'
    ,'CNT Type'
    ,'Customer Code'
    ,'Commodity GroupCode'
    ,'RailService Type'
    ,'From'
    ,'To'
    ,'AllRoute'
    ,'Loc'
    ,'Node'
    ,'Loc'
    ,'Node'
    ,'Loc'
    ,'Node'
    ,'Loc'
    ,'Node'
    ,'Fixed Ratio Div'
    ,'Currency'
    ,'One Way'
    ,'Round Trip'
    ,'ALAL'
#if (${fm_eq_knd_cd} == 'U')
    ,'DAL'
    ,'RAL'
    ,'AAL'
    ,'FAL'
    ,'TAL'
    ,'SAL'
    ,'OAL'
    ,'PAL'
#end
#if (${fm_eq_knd_cd} == 'Z')
    ,'SFAL'
    ,'SLAL'
    ,'TAAL'
    ,'GNAL'
    ,'EGAL'
#end
#if (${fm_eq_knd_cd} != 'G')
    ,'AL2'
    ,'AL4'
    ,'AL5'
#end
#if (${fm_eq_knd_cd} == 'U')
    ,'AL7'
    ,'AL9'
    ,'D2'
    ,'D4'
    ,'D5'
    ,'D7'
    ,'R2'
    ,'R4'
    ,'R5'
    ,'R7'
    ,'R8'
    ,'R9'
    ,'A2'
    ,'A4'
    ,'A5'
    ,'F2'
    ,'F4'
    ,'F5'
    ,'T2'
    ,'T4'
    ,'S2'
    ,'S4'
    ,'O2'
    ,'O4'
    ,'O5'
    ,'O7'
    ,'P2'
    ,'P4'
#end
#if (${fm_eq_knd_cd} == 'Z')
    ,'AL8'
    ,'SF2'
    ,'SF4'
    ,'SL2'
    ,'TA2'
    ,'GN4'
    ,'GN5'
    ,'EG5'
    ,'EG8'
    ,'ZT4'
    ,'CB4'
#end
#if (${fm_eq_knd_cd} == 'G')
    ,'CG'
    ,'UG'
#end
    ,'Weight Tier'
    ,'UOM'
#if (${fm_eq_knd_cd} == 'U')
    ,'Confirm(Manager Level)'
#end
FROM DUAL
UNION ALL
#end
SELECT 
    TRSP_SCG_CD
    ,TRSP_COST_MOD_CD
    ,AGMT_TRSP_TP_CD
    ,CGO_TP_CD
    ,CUST_NOMI_TRKR_IND_CD
    ,CUST_CD
    ,CMDT_GRP_CD
    ,RAIL_SVC_TP_CD
    ,EFF_FM_DT
    ,EFF_TO_DT
    ,AGMT_ROUT_ALL_FLG
    ,FM_NOD_CD
    ,FM_NOD_YD
    ,VIA_NOD_CD
    ,VIA_NOD_YD
    ,DOR_NOD_CD
    ,DOR_NOD_YD
    ,TO_NOD_CD
    ,TO_NOD_YD
    ,AGMT_SCG_RT_DIV_CD
    ,CURR_CD
    ,TO_CHAR(TRSP_ONE_WY_RT) AS TRSP_ONE_WY_RT
    ,TO_CHAR(TRSP_RND_RT) AS TRSP_RND_RT
    ,EQ_ALAL
#if (${fm_eq_knd_cd} == 'U')
    ,EQ_DAL
    ,EQ_RAL
    ,EQ_AAL
    ,EQ_FAL
    ,EQ_TAL
    ,EQ_SAL
    ,EQ_OAL
    ,EQ_PAL
#end
#if (${fm_eq_knd_cd} == 'Z')
    ,EQ_SFAL
    ,EQ_SLAL
    ,EQ_TAAL
    ,EQ_GNAL
    ,EQ_EGAL
#end
#if (${fm_eq_knd_cd} != 'G')
    ,EQ_AL2
    ,EQ_AL4
    ,EQ_AL5
#end
#if (${fm_eq_knd_cd} == 'U')
    ,EQ_AL7
    ,EQ_AL9
    ,EQ_D2
    ,EQ_D4
    ,EQ_D5
    ,EQ_D7
    ,EQ_R2
    ,EQ_R4
    ,EQ_R5
    ,EQ_R7
    ,EQ_R8
    ,EQ_R9
    ,EQ_A2
    ,EQ_A4
    ,EQ_A5
    ,EQ_F2
    ,EQ_F4
    ,EQ_F5
    ,EQ_T2
    ,EQ_T4
    ,EQ_S2
    ,EQ_S4
    ,EQ_O2
    ,EQ_O4
    ,EQ_O5
    ,EQ_O7
    ,EQ_P2
    ,EQ_P4
#end
#if (${fm_eq_knd_cd} == 'Z')
    ,EQ_AL8
    ,EQ_SF2
    ,EQ_SF4
    ,EQ_SL2
    ,EQ_TA2
    ,EQ_GN4
    ,EQ_GN5
    ,EQ_EG5
    ,EQ_EG8
    ,EQ_ZT4
    ,EQ_CB4
#end
#if (${fm_eq_knd_cd} == 'G')
    ,EQ_CG
    ,EQ_UG
#end
    ,TO_WGT
    ,WGT_MEAS_UT_CD
#if (${fm_eq_knd_cd} == 'U')
    ,CFM_FLG
#end 
#if (${grid_flg} == 'Y')
    ,CK_VF
    ,NUM
    ,TRSP_AGMT_RT_TP_CD
    ,EQ_D3
    ,EQ_D8
    ,EQ_D9
    ,EQ_DW
    ,EQ_DX
    ,ALL_TP_CD
#end
  FROM (
    SELECT ROWNUM NUM, X.*
      FROM (
        SELECT  C.TRSP_AGMT_RT_TP_CD
               ,C.TRSP_COST_MOD_CD
               ,C.AGMT_TRSP_TP_CD
               ,C.CGO_TP_CD
               ,DECODE(C.CUST_NOMI_TRKR_IND_CD, 'HJS', 'SML', C.CUST_NOMI_TRKR_IND_CD) AS CUST_NOMI_TRKR_IND_CD
               ,DECODE(C.CUST_CNT_CD||C.CUST_SEQ, 'XX0', NULL, C.CUST_CNT_CD||C.CUST_SEQ) CUST_CD
               ,DECODE(C.CMDT_GRP_CD, 'XXXX', NULL, C.CMDT_GRP_CD) CMDT_GRP_CD
               ,DECODE(C.RAIL_SVC_TP_CD, '00', NULL, C.RAIL_SVC_TP_CD) RAIL_SVC_TP_CD
               ,D.TRSP_SCG_CD
               ,D.AGMT_ROUT_ALL_FLG
               ,DECODE(SUBSTR(D.FM_NOD_CD,1,5), '00000', NULL, SUBSTR(D.FM_NOD_CD,1,5)) AS FM_NOD_CD
               ,DECODE(SUBSTR(D.FM_NOD_CD,6), '00', NULL, SUBSTR(D.FM_NOD_CD,6)) AS FM_NOD_YD
               ,DECODE(SUBSTR(D.VIA_NOD_CD,1,5), '00000', NULL, SUBSTR(D.VIA_NOD_CD,1,5)) AS VIA_NOD_CD
               ,DECODE(SUBSTR(D.VIA_NOD_CD,6), '00', NULL, SUBSTR(D.VIA_NOD_CD,6)) AS VIA_NOD_YD
               ,DECODE(SUBSTR(D.DOR_NOD_CD,1,5), '00000', NULL, SUBSTR(D.DOR_NOD_CD,1,5)) AS DOR_NOD_CD
               ,DECODE(SUBSTR(D.DOR_NOD_CD,6), '00', NULL, SUBSTR(D.DOR_NOD_CD,6)) AS DOR_NOD_YD
               ,DECODE(SUBSTR(D.TO_NOD_CD,1,5), '00000', NULL, SUBSTR(D.TO_NOD_CD,1,5)) AS TO_NOD_CD
               ,DECODE(SUBSTR(D.TO_NOD_CD,6), '00', NULL, SUBSTR(D.TO_NOD_CD,6)) AS TO_NOD_YD
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D2', 'Y')) EQ_D2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D3', 'Y')) EQ_D3
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D4', 'Y')) EQ_D4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D5', 'Y')) EQ_D5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D7', 'Y')) EQ_D7
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D8', 'Y')) EQ_D8
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'D9', 'Y')) EQ_D9
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DW', 'Y')) EQ_DW
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DX', 'Y')) EQ_DX
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R2', 'Y')) EQ_R2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R4', 'Y')) EQ_R4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R5', 'Y')) EQ_R5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R7', 'Y')) EQ_R7
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R8', 'Y')) EQ_R8
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'R9', 'Y')) EQ_R9
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A2', 'Y')) EQ_A2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A4', 'Y')) EQ_A4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'A5', 'Y')) EQ_A5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F2', 'Y')) EQ_F2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F4', 'Y')) EQ_F4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'F5', 'Y')) EQ_F5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'T2', 'Y')) EQ_T2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'T4', 'Y')) EQ_T4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'S2', 'Y')) EQ_S2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'S4', 'Y')) EQ_S4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O2', 'Y')) EQ_O2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O4', 'Y')) EQ_O4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O5', 'Y')) EQ_O5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'O7', 'Y')) EQ_O7
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'P2', 'Y')) EQ_P2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'P4', 'Y')) EQ_P4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SF2', 'Y')) EQ_SF2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SF4', 'Y')) EQ_SF4 
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SL2', 'Y')) EQ_SL2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TA2', 'Y')) EQ_TA2 
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GN4', 'Y')) EQ_GN4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GN5', 'Y')) EQ_GN5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EG5', 'Y')) EQ_EG5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EG8', 'Y')) EQ_EG8
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'ZT4', 'Y')) EQ_ZT4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'CB4', 'Y')) EQ_CB4 
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'CG', 'Y'))  EQ_CG
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'UG', 'Y'))  EQ_UG
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'ALAL', 'Y')) EQ_ALAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'DAL', 'Y'))  EQ_DAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'RAL', 'Y'))  EQ_RAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AAL', 'Y'))  EQ_AAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'FAL', 'Y'))  EQ_FAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TAL', 'Y'))  EQ_TAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SAL', 'Y'))  EQ_SAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'OAL', 'Y'))  EQ_OAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'PAL', 'Y'))  EQ_PAL
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL2', 'Y'))  EQ_AL2
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL4', 'Y'))  EQ_AL4
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL5', 'Y'))  EQ_AL5
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL7', 'Y'))  EQ_AL7
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL8', 'Y'))  EQ_AL8
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'AL9', 'Y'))  EQ_AL9      
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SFAL', 'Y'))  EQ_SFAL      
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'SLAL', 'Y'))  EQ_SLAL      
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'TAAL', 'Y'))  EQ_TAAL      
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'GNAL', 'Y'))  EQ_GNAL      
               ,MAX(DECODE(E.TRSP_AGMT_EQ_TP_SZ_CD, 'EGAL', 'Y'))  EQ_EGAL  
               ,DECODE(E.CURR_CD, 'XXX', NULL, E.CURR_CD) CURR_CD
               ,E.TRSP_ONE_WY_RT
               ,E.TRSP_RND_RT
               ,DECODE(E.TO_WGT, '0', NULL, E.TO_WGT) TO_WGT
               ,DECODE(E.WGT_MEAS_UT_CD, 'XXX', NULL, E.WGT_MEAS_UT_CD) WGT_MEAS_UT_CD
               ,TO_CHAR(E.EFF_FM_DT,'YYYYMMDD')  AS EFF_FM_DT
               ,TO_CHAR(E.EFF_TO_DT,'YYYYMMDD')  AS EFF_TO_DT
               ,'0' AS CK_VF
               ,CASE WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,1,2) = 'AL' THEN 1
                     WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,2,2) = 'AL' THEN 1
                     WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,3,2) = 'AL' THEN 1
                     ELSE 0
                END ALL_TP_CD
               ,AGMT_SCG_RT_DIV_CD
               ,E.CFM_FLG
          FROM  TRS_AGMT_HDR   A
               ,TRS_AGMT_RT_TP C
               ,TRS_AGMT_SCG_NOD   D
               ,TRS_AGMT_SCG_RT E
         WHERE A.TRSP_AGMT_OFC_CTY_CD   = C.TRSP_AGMT_OFC_CTY_CD
           AND A.TRSP_AGMT_SEQ          = C.TRSP_AGMT_SEQ
           AND C.TRSP_AGMT_OFC_CTY_CD   = D.TRSP_AGMT_OFC_CTY_CD
           AND C.TRSP_AGMT_SEQ          = D.TRSP_AGMT_SEQ
           AND C.TRSP_AGMT_RT_TP_SER_NO = D.TRSP_AGMT_RT_TP_SER_NO
           AND D.TRSP_AGMT_OFC_CTY_CD   = E.TRSP_AGMT_OFC_CTY_CD
           AND D.TRSP_AGMT_SEQ          = E.TRSP_AGMT_SEQ
           AND D.TRSP_AGMT_RT_TP_SER_NO = E.TRSP_AGMT_RT_TP_SER_NO
           AND D.TRSP_AGMT_SCG_NOD_SEQ  = E.TRSP_AGMT_SCG_NOD_SEQ
           AND A.TRSP_AGMT_OFC_CTY_CD   = SUBSTR(@[fm_agmtno],1,3)
           AND A.TRSP_AGMT_SEQ          = SUBSTR(@[fm_agmtno],4)
           AND NVL(E.DELT_FLG, 'N')     = 'N'
#if (${fm_trsp_agmt_rt_tp_ser_no} != '' )
           AND C.TRSP_AGMT_RT_TP_SER_NO = @[fm_trsp_agmt_rt_tp_ser_no]
#end

#if (${fm_effective_agmt} != 'A' )
       AND (SELECT GLOBALDATE_PKG.TIME_LOCAL_OFC_FNC(A.CTRT_OFC_CD) FROM DUAL) BETWEEN E.EFF_FM_DT AND E.EFF_TO_DT
#end

#if (${fm_eq_knd_cd} != '' )
      AND E.EQ_KND_CD = @[fm_eq_knd_cd]
#end

#if (${fm_cfm_flg} != '' )
      AND E.CFM_FLG = @[fm_cfm_flg]
#end

        GROUP BY C.TRSP_AGMT_RT_TP_CD
                ,C.TRSP_COST_MOD_CD
                ,C.AGMT_TRSP_TP_CD
                ,C.CGO_TP_CD
                ,C.CUST_NOMI_TRKR_FLG
                ,C.CUST_NOMI_TRKR_IND_CD
                ,C.CUST_CNT_CD||C.CUST_SEQ
                ,C.CMDT_GRP_CD
                ,C.RAIL_SVC_TP_CD
                ,D.TRSP_SCG_CD
                ,D.AGMT_ROUT_ALL_FLG
                ,SUBSTR(D.FM_NOD_CD,1,5)
                ,SUBSTR(D.FM_NOD_CD,6)
                ,SUBSTR(D.VIA_NOD_CD,1,5)
                ,SUBSTR(D.VIA_NOD_CD,6)
                ,SUBSTR(D.DOR_NOD_CD,1,5)
                ,SUBSTR(D.DOR_NOD_CD,6)
                ,SUBSTR(D.TO_NOD_CD,1,5)
                ,SUBSTR(D.TO_NOD_CD,6)
                ,D.TRSP_AGMT_OFC_CTY_CD
                ,D.TRSP_AGMT_SEQ
                ,D.TRSP_AGMT_RT_TP_SER_NO
                ,D.TRSP_AGMT_SCG_NOD_SEQ
                ,E.CURR_CD
                ,E.TRSP_ONE_WY_RT
                ,E.TRSP_RND_RT
                ,E.TO_WGT
                ,E.WGT_MEAS_UT_CD
                ,TO_CHAR(E.EFF_FM_DT,'YYYYMMDD')
                ,TO_CHAR(E.EFF_TO_DT,'YYYYMMDD')
                ,CASE WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,1,2) = 'AL' THEN 1
                      WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,2,2) = 'AL' THEN 1
                      WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,3,2) = 'AL' THEN 1
                      ELSE 0
                 END
                ,AGMT_SCG_RT_DIV_CD
                ,E.CFM_FLG
        ORDER BY D.TRSP_AGMT_OFC_CTY_CD
                ,D.TRSP_AGMT_SEQ
                ,C.CGO_TP_CD
                ,C.CUST_NOMI_TRKR_FLG
                ,C.CUST_NOMI_TRKR_IND_CD
                ,C.CUST_CNT_CD || CUST_SEQ
                ,C.TRSP_COST_MOD_CD
                ,C.AGMT_TRSP_TP_CD
                ,C.CMDT_GRP_CD
                ,C.RAIL_SVC_TP_CD
                ,SUBSTR(D.FM_NOD_CD,1,5)
                ,SUBSTR(D.FM_NOD_CD,6)
                ,SUBSTR(D.VIA_NOD_CD,1,5)
                ,SUBSTR(D.VIA_NOD_CD,6)
                ,SUBSTR(D.DOR_NOD_CD,1,5)
                ,SUBSTR(D.DOR_NOD_CD,6)
                ,SUBSTR(D.TO_NOD_CD,1,5)
                ,SUBSTR(D.TO_NOD_CD,6)
                ,E.CURR_CD
                ,E.TRSP_ONE_WY_RT
                ,E.TRSP_RND_RT
                ,E.TO_WGT
                ,E.WGT_MEAS_UT_CD
                ,TO_CHAR(E.EFF_FM_DT,'YYYYMMDD')
                ,TO_CHAR(E.EFF_TO_DT,'YYYYMMDD')
                ,CASE WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,1,2) = 'AL' THEN 1
                      WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,2,2) = 'AL' THEN 1
                      WHEN SUBSTR(E.TRSP_AGMT_EQ_TP_SZ_CD,3,2) = 'AL' THEN 1
                      ELSE 0
                 END
    ) X
) XX
#if (${grid_flg} == 'Y')
WHERE NUM BETWEEN 1 + ((@[cur_page_cnt]-1)*@[page_size]) AND (@[cur_page_cnt]*@[page_size])
#end			]]></sql>
			<params>
				<param name="fm_agmtno" type="12" value="" out="N"/>
				<param name="fm_trsp_agmt_rt_tp_ser_no" type="12" value="" out="N"/>
				<param name="fm_eq_knd_cd" type="12" value="" out="N"/>
				<param name="fm_cfm_flg" type="12" value="" out="N"/>
				<param name="cur_page_cnt" type="12" value="" out="N"/>
				<param name="page_size" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
