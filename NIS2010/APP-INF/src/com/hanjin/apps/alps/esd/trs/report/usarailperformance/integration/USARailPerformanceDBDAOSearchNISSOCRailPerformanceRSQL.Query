<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="USARailPerformanceDBDAOSearchNISSOCRailPerformanceRSQL">
			<desc><![CDATA[searchNISSOCRailPerformance SELECT]]></desc>
			<sql><![CDATA[
SELECT
      SO_CRE_YRMON MONTH,
      WEEK WEEK,
      TRSP_CO_IND_CD COMPANY,
      VNDR_SEQ RAIL_CODE,
      TRS_COMMON_PKG.GET_VNDR_FULL_NM_FNC(VNDR_SEQ) RAIL_NAME,
      'Full' FULL_EMPTY,
      DECODE(TRSP_BND_CD, 'I', 'In'  , 'O', 'Out'  , TRSP_BND_CD) BOUND,
#if( ${agmt_chk} == 'Y' )
	  AGMT_REF_NO,
#else
	  '' AGMT_REF_NO,
#end
	  SLAN_CD,
      VVD,
      FM_NOD_CD FM,
      TO_NOD_CD T_O,
      CURR_CD  CURR,
      SUM(CNTR_20_CNT)    VOL_20,
      SUM(CNTR_20_BASIC)  LOC_BZC_AMT_20,
      SUM(CNTR_20_FUEL)   LOC_FUEL_AMT_20,   
      SUM(CNTR_20_HAZARD) LOC_OVR_HZD_AMT_20,      
      SUM(CNTR_20_TOTAL)  LOC_TTL_AMT_20,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_BASIC), SO_CRE_YRMON),2) USD_BZC_AMT_20,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_FUEL), SO_CRE_YRMON),2) USD_FUEL_AMT_20,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_HAZARD), SO_CRE_YRMON),2) USD_OVR_HZD_AMT_20,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_TOTAL), SO_CRE_YRMON),2) USD_TTL_AMT_20,
      SUM(CNTR_40_CNT)    VOL_40,
      SUM(CNTR_40_BASIC)  LOC_BZC_AMT_40,
      SUM(CNTR_40_FUEL)   LOC_FUEL_AMT_40,   
      SUM(CNTR_40_HAZARD) LOC_OVR_HZD_AMT_40,      
      SUM(CNTR_40_TOTAL)  LOC_TTL_AMT_40,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_BASIC), SO_CRE_YRMON),2) USD_BZC_AMT_40,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_FUEL), SO_CRE_YRMON),2) USD_FUEL_AMT_40,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_HAZARD), SO_CRE_YRMON),2) USD_OVR_HZD_AMT_40,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40_TOTAL), SO_CRE_YRMON),2) USD_TTL_AMT_40,
      SUM(CNTR_40HC_CNT)   VOL_40HC,
	  SUM(CNTR_40HC_BASIC) LOC_BZC_AMT_40HC,
	  SUM(CNTR_40HC_FUEL) LOC_FUEL_AMT_40HC,
	  SUM(CNTR_40HC_HAZARD) LOC_OVR_HZD_AMT_40HC,
	  SUM(CNTR_40HC_TOTAL) LOC_TTL_AMT_40HC,
	  ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_BASIC), SO_CRE_YRMON),2) USD_BZC_AMT_40HC,
	  ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_FUEL), SO_CRE_YRMON),2) USD_FUEL_AMT_40HC,
	  ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_HAZARD), SO_CRE_YRMON),2) USD_OVR_HZD_AMT_40HC,
  	  ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_40HC_TOTAL), SO_CRE_YRMON),2) USD_TTL_AMT_40HC,
      SUM(CNTR_45_CNT)    VOL_45,
      SUM(CNTR_45_BASIC)  LOC_BZC_AMT_45,
      SUM(CNTR_45_FUEL)   LOC_FUEL_AMT_45,   
      SUM(CNTR_45_HAZARD) LOC_OVR_HZD_AMT_45,      
      SUM(CNTR_45_TOTAL)  LOC_TTL_AMT_45,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_BASIC), SO_CRE_YRMON),2) USD_BZC_AMT_45,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_FUEL), SO_CRE_YRMON),2) USD_FUEL_AMT_45,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_HAZARD), SO_CRE_YRMON),2) USD_OVR_HZD_AMT_45,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_45_TOTAL), SO_CRE_YRMON),2) USD_TTL_AMT_45,
      SUM(CNTR_20_CNT) + SUM(CNTR_40_CNT) + SUM(CNTR_40HC_CNT) + SUM(CNTR_45_CNT) TOT_VOL,
      SUM(CNTR_20_BASIC) + SUM(CNTR_40_BASIC) + SUM(CNTR_40HC_BASIC) + SUM(CNTR_45_BASIC)  TOT_LOC_BZC_AMT,
      SUM(CNTR_20_FUEL) + SUM(CNTR_40_FUEL) + SUM(CNTR_40HC_FUEL) + SUM(CNTR_45_FUEL)  TOT_LOC_FUEL_AMT,
      SUM(CNTR_20_HAZARD) + SUM(CNTR_40_HAZARD) + SUM(CNTR_40HC_HAZARD) + SUM(CNTR_45_HAZARD)  TOT_LOC_OVR_HZD_AMT,
      SUM(CNTR_20_TOTAL) + SUM(CNTR_40_TOTAL) + SUM(CNTR_40HC_TOTAL) + SUM(CNTR_45_TOTAL)  TOT_LOC_TTL_AMT,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_BASIC) + SUM(CNTR_40_BASIC) + SUM(CNTR_40HC_BASIC) + SUM(CNTR_45_BASIC) , SO_CRE_YRMON),2) TOT_USD_BZC_AMT,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_FUEL) + SUM(CNTR_40_FUEL) + SUM(CNTR_40HC_FUEL) + SUM(CNTR_45_FUEL) , SO_CRE_YRMON),2) TOT_USD_FUEL_AMT,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_HAZARD) + SUM(CNTR_40_HAZARD) + SUM(CNTR_40HC_HAZARD) + SUM(CNTR_45_HAZARD) , SO_CRE_YRMON),2) TOT_USD_OVR_HZD_AMT,
      ROUND(TRS_COMMON_PKG.GET_CONVERSION_USD_AMT_FNC(CURR_CD,SUM(CNTR_20_TOTAL) + SUM(CNTR_40_TOTAL) + SUM(CNTR_40HC_TOTAL) + SUM(CNTR_45_TOTAL) , SO_CRE_YRMON),2) TOT_USD_TTL_AMT
         
FROM
(
    SELECT TO_CHAR(A.CRE_DT, 'YYYYMM') SO_CRE_YRMON,
#if( ${f_chkprd} == 'M' )
           '' WEEK,
#elseif( ${f_chkprd} == 'W' )
           A.WEEK,
#end
           'Domestic' TRSP_CO_IND_CD,
           B.VNDR_SEQ,
    	   '' TRSP_BND_CD,
#if( ${agmt_chk} == 'Y' )
	       X.AGMT_REF_NO,
#end
		   A.LANE_CD SLAN_CD,
    	   A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD VVD,
    	   B.FM_YD_CD FM_NOD_CD,
   		   B.TO_YD_CD TO_NOD_CD,
     	   LOCTO.LOC_CD,
    	   LOCTO.EQ_CTRL_OFC_CD,
    	   LOCFM.LOC_CD,
    	   LOCFM.EQ_CTRL_OFC_CD,
    	   'USD' CURR_CD,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '2', 1, 0)                                 )  CNTR_20_CNT,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '2', NVL(B.AGMT_BZC_AMT,0)+NVL('',0), 0)   )  CNTR_20_BASIC,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '2', NVL(B.FUEL_SCG_AMT,0)+NVL('',0), 0)   )  CNTR_20_FUEL,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '2', NVL(B.HZD_MTRL_SCG_AMT,0)+NVL(B.TTL_SCG_AMT,0)+NVL('',0), 0)) CNTR_20_HAZARD,  
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '2', NVL(B.AGMT_RT_AMT,0)+NVL('',0), 0)   )   CNTR_20_TOTAL,

    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '4', 1, 0)                                 )  CNTR_40_CNT,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '4', NVL(B.AGMT_BZC_AMT,0)+NVL('',0), 0)   )  CNTR_40_BASIC,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '4', NVL(B.FUEL_SCG_AMT,0)+NVL('',0), 0)   )  CNTR_40_FUEL,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '4', NVL(B.HZD_MTRL_SCG_AMT,0)+NVL(B.TTL_SCG_AMT,0)+NVL('',0), 0)) CNTR_40_HAZARD,  
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '4', NVL(B.AGMT_RT_AMT,0)+NVL('',0), 0)   )   CNTR_40_TOTAL,

		   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '5', 1, 0)                                 )  CNTR_40HC_CNT,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '5', NVL(B.AGMT_BZC_AMT,0)+NVL('',0), 0)   )  CNTR_40HC_BASIC,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '5', NVL(B.FUEL_SCG_AMT,0)+NVL('',0), 0)   )  CNTR_40HC_FUEL,
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '5', NVL(B.HZD_MTRL_SCG_AMT,0)+NVL(B.TTL_SCG_AMT,0)+NVL('',0), 0)) CNTR_40HC_HAZARD,  
    	   SUM(DECODE(SUBSTR(F.CNTR_TPSZ_CD,2,1), '5', NVL(B.AGMT_RT_AMT,0)+NVL('',0), 0)   )   CNTR_40HC_TOTAL,

    	   SUM(DECODE(F.CNTR_TPSZ_CD, 'D7', 1, 0)                                           )   CNTR_45_CNT,
    	   SUM(DECODE(F.CNTR_TPSZ_CD, 'D7', NVL(B.AGMT_BZC_AMT,0)+NVL('',0) , 0 )           )   CNTR_45_BASIC,   
    	   SUM(DECODE(F.CNTR_TPSZ_CD, 'D7', NVL(B.FUEL_SCG_AMT,0)+NVL('',0) , 0 )           )   CNTR_45_FUEL,      	    	   
    	   SUM(DECODE(F.CNTR_TPSZ_CD, 'D7', NVL(B.HZD_MTRL_SCG_AMT,0)+NVL(B.TTL_SCG_AMT,0)+NVL('',0) , 0 )       )   CNTR_45_HAZARD,    
    	   SUM(DECODE(F.CNTR_TPSZ_CD, 'D7', NVL(B.AGMT_RT_AMT,0)+NVL('',0) , 0 )            )   CNTR_45_TOTAL
	FROM
#if( ${f_chkprd} == 'M' )
           DOM_RAIL_SO_MST       A
#elseif( ${f_chkprd} == 'W' )
    	    (SELECT TRSP_SO_OFC_CTY_CD, TRSP_SO_SEQ, CNTR_NO, DMST_BKG_NO, LANE_CD, VSL_CD, SKD_VOY_NO, SKD_DIR_CD,AA.CRE_DT, DELT_FLG, DMST_SO_STS_CD, DMST_EDI_STS_CD, DMST_EDI_SND_CD, ROUT_ORG_YD_CD, ROUT_DEST_YD_CD
			, BB.COST_WK WEEK
			FROM DOM_RAIL_SO_MST AA, MAS_WK_PRD BB
			WHERE AA.CRE_DT BETWEEN TO_DATE(BB.SLS_FM_DT,'YYYYMMDD') AND TO_DATE(BB.SLS_TO_DT,'YYYYMMDD')+0.99999)   A
#end
  	   , DOM_RAIL_SO_DTL       B
  	   , (SELECT LOC_CD, EQ_CTRL_OFC_CD FROM MDM_LOCATION ) LOCTO
  	   , (SELECT LOC_CD, EQ_CTRL_OFC_CD FROM MDM_LOCATION ) LOCFM
  	   , MST_CONTAINER         F
  	   , DOM_BOOKING           G
  	   , MDM_VENDOR            V
       , TRS_AGMT_HDR          X
    WHERE A.TRSP_SO_OFC_CTY_CD  = B.TRSP_SO_OFC_CTY_CD
    AND   A.TRSP_SO_SEQ         = B.TRSP_SO_SEQ
    AND   B.AGMT_RT_AMT > 0
    AND   NVL(A.DELT_FLG,'N')   = 'N'
    AND   LOCTO.LOC_CD = SUBSTR(A.ROUT_ORG_YD_CD,1,5)
    AND   LOCFM.LOC_CD = SUBSTR(A.ROUT_DEST_YD_CD,1,5)
    AND   A.DMST_SO_STS_CD      <> 'D' -- SO 삭제 제외
    AND   A.DMST_EDI_STS_CD     = 'C'  -- COMPLETE ACK
    AND   A.DMST_EDI_SND_CD     = 'S'  -- 404 EDI SUCESS
    AND   A.CNTR_NO             = F.CNTR_NO
    AND   A.DMST_BKG_NO         = G.DMST_BKG_NO
    AND   A.CNTR_NO             = G.CNTR_NO
    AND   B.VNDR_SEQ            = V.VNDR_SEQ
    AND   B.TRSP_AGMT_OFC_CTY_CD= X.TRSP_AGMT_OFC_CTY_CD
    AND   B.TRSP_AGMT_SEQ       = X.TRSP_AGMT_SEQ    
#if ( ${vndr_seq} != '' )
      AND   B.VNDR_SEQ = @[vndr_seq]
#end
#if ( ${cgo_tp_cd} != 'A' )
      AND   'F' = @[cgo_tp_cd]
#end

#if ( ${ctrl_ofc} != '' )
      AND   LOCFM.EQ_CTRL_OFC_CD = @[ctrl_ofc]
#end

#if(${fm_node_length} == '7')
      AND   B.FM_YD_CD = @[input_fm_node]
#elseif (${fm_node_length} == '5')
      AND   B.FM_YD_CD LIKE @[input_fm_node] || '%'
#elseif (${fm_node_length} != '0')
      AND   B.FM_YD_CD LIKE @[input_fm_node] || '%'
#end

#if(${to_node_length} == '7')
	  AND   B.TO_YD_CD = @[input_to_node]
#elseif (${to_node_length} == '5')
	  AND   B.TO_YD_CD LIKE @[input_to_node] || '%'
#elseif (${to_node_length} != '0')
	  AND   B.TO_YD_CD LIKE @[input_to_node] || '%'
#end
#if ( ${fm_month} != '' && ${to_month} != '')
    AND   A.CRE_DT BETWEEN TO_DATE(@[fm_month],'YYYYMMDD') AND TO_DATE(@[to_month],'YYYYMMDD')+0.99999
#end
#if ( ${agmt_ref_no} != '' )
	AND   X.AGMT_REF_NO = @[agmt_ref_no]
#end
#if ( ${cntr_tpsz} != '' )
      AND F.CNTR_TPSZ_CD IN (SELECT INTG_CD_VAL_CTNT
                             FROM COM_INTG_CD_DTL
                            WHERE INTG_CD_ID = 'CD01860'
                              AND (INSTR(@[cntr_tpsz], INTG_CD_VAL_CTNT) > 0
                               OR @[cntr_tpsz] = 'ALL'
                                  )
                          )
#end
    GROUP BY
    		TO_CHAR(A.CRE_DT, 'YYYYMM'),
#if( ${f_chkprd} == 'W' )
            A.WEEK,
#end
   		    B.VNDR_SEQ,
#if( ${agmt_chk} == 'Y' )
		    X.AGMT_REF_NO,
#end
			A.LANE_CD,
    		A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD,
    		B.FM_YD_CD,
    		B.TO_YD_CD,
    		LOCTO.LOC_CD,
    		LOCTO.EQ_CTRL_OFC_CD,
    		LOCFM.LOC_CD,
    		LOCFM.EQ_CTRL_OFC_CD

) A
GROUP BY
        SO_CRE_YRMON  ,
#if( ${f_chkprd} == 'W' )
        WEEK,
#end
        TRSP_CO_IND_CD,
        VNDR_SEQ,
        TRSP_BND_CD   ,
#if( ${agmt_chk} == 'Y' )
		AGMT_REF_NO,
#end
		SLAN_CD       ,
        VVD           ,
        FM_NOD_CD     ,
        TO_NOD_CD     ,
        CURR_CD
     
ORDER BY
        SO_CRE_YRMON  ,
#if( ${f_chkprd} == 'W' )
        WEEK,
#end
        TRSP_CO_IND_CD,
        TRSP_BND_CD   ,
        FM_NOD_CD     ,
        TO_NOD_CD			]]></sql>
			<params>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="cgo_tp_cd" type="12" value="" out="N"/>
				<param name="ctrl_ofc" type="12" value="" out="N"/>
				<param name="input_fm_node" type="12" value="" out="N"/>
				<param name="input_to_node" type="12" value="" out="N"/>
				<param name="fm_month" type="12" value="" out="N"/>
				<param name="to_month" type="12" value="" out="N"/>
				<param name="agmt_ref_no" type="12" value="" out="N"/>
				<param name="cntr_tpsz" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
