<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselReportDBDAOSearchVslFcmDepRptListRSQL">
			<desc><![CDATA[Departure Report Inquiry 조회]]></desc>
			<sql><![CDATA[
WITH VSL_SKD_1 AS (
    -- Last Port 를 추출하기 위한 쿼리
    SELECT
        T1.VSL_CD
        ,T1.SKD_VOY_NO
        ,T1.SKD_DIR_CD
        ,T1.SLAN_CD
        ,LAG (T1.VPS_PORT_CD) OVER (PARTITION BY T1.VSL_CD ORDER BY T1.SKD_VOY_NO, T2.VSL_SLAN_DIR_SEQ, T1.CLPT_SEQ) AS LAST_PORT_CD
        ,T1.VPS_PORT_CD
        ,T1.CLPT_IND_SEQ
		,T1.VPS_ETD_DT AS VSK_ETD_DT
    FROM VSK_VSL_PORT_SKD T1, MDM_VSL_SVC_LANE_DIR T2
    WHERE T1.SLAN_CD = T2.VSL_SLAN_CD
    AND T1.SKD_DIR_CD = T2.VSL_SLAN_DIR_CD
    AND T1.TURN_PORT_IND_CD IN ('Y','N')
    AND NVL(T1.SKD_CNG_STS_CD, 'X')<>'S'
    AND T1.VSL_CD IN (
        SELECT
        T1.VSL_CD
        FROM MDM_VSL_CNTR T1, FCM_VSL_CNTR_RGST T2
        WHERE T1.VSL_CD=T2.VSL_CD
        AND T1.DELT_FLG='N'
        AND T1.CRR_CD='SML'
    )
#if(${fm_dt} != '' && ${to_dt} != '')
    AND T1.VPS_ETD_DT BETWEEN ADD_MONTHS(TO_DATE(@[fm_dt], 'YYYY-MM-DD'), -2) AND TO_DATE(@[to_dt], 'YYYY-MM-DD')
#end
#if(${vsl_slan_cd} != '')
	AND T1.SLAN_CD IN (
	#foreach($sVslSlanCd in ${vel_vsl_slan_cd})
		'$sVslSlanCd',
	#end
		'')
#end
#if( ${vsl_cd} != '' )
    AND T1.VSL_CD IN (                     
	#foreach($sVslCd in ${vel_vsl_cd})  
		'$sVslCd',  
	#end  
		'') 
#end
)
, VSL_SKD_2 AS (
    -- Last Port 포함 Vessel Schedule 기준 데이터를 추출하기 위한 쿼리
    SELECT T1.*
    FROM VSL_SKD_1 T1, VSK_VSL_PORT_SKD T2
    WHERE T1.VSL_CD = T2.VSL_CD
    AND T1.SKD_VOY_NO = T2.SKD_VOY_NO
    AND T1.SKD_DIR_CD = T2.SKD_DIR_CD
    AND T1.VPS_PORT_CD = T2.VPS_PORT_CD
    AND T1.CLPT_IND_SEQ = T2.CLPT_IND_SEQ
    AND T2.TURN_PORT_IND_CD IN ('Y','N')
    AND NVL(T2.SKD_CNG_STS_CD, 'X')<>'S'
    AND T1.VSL_CD IN (
        SELECT
        T1.VSL_CD
        FROM MDM_VSL_CNTR T1, FCM_VSL_CNTR_RGST T2
        WHERE T1.VSL_CD=T2.VSL_CD
        AND T1.DELT_FLG='N'
        AND T1.CRR_CD='SML'
    )
#if(${fm_dt} != '' && ${to_dt} != '')
    AND T2.VPS_ETD_DT BETWEEN TO_DATE(@[fm_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_dt], 'YYYY-MM-DD')
#end
#if(${vsl_slan_cd} != '')
	AND T2.SLAN_CD IN (
	#foreach($sVslSlanCd in ${vel_vsl_slan_cd})
		'$sVslSlanCd',
	#end
		'')
#end
#if( ${vsl_cd} != '' )
    AND T2.VSL_CD IN (                     
	#foreach($sVslCd in ${vel_vsl_cd})  
		'$sVslCd',  
	#end  
		'') 
#end
#if( ${last_port} != '' )
	AND T1.LAST_PORT_CD = @[last_port]
#end
#if( ${dep_port} != '' )
	AND T2.VPS_PORT_CD = @[dep_port]
#end
#if( ${skd_dir_cd} != '' )
    AND T2.SKD_DIR_CD=@[skd_dir_cd]
#end
)

SELECT *
FROM (
    -- Vessel Schedule 기준 Departure Report
    SELECT
        'Y' AS VSK_FLG,
		DECODE(DEP.CLPT_IND_SEQ, NULL, 'N', 'Y') AS DEP_FLG,
		SKD.SKD_VOY_NO,
		SKD.SKD_DIR_CD,
		SKD.CLPT_IND_SEQ,
        DECODE(DEP.AVG_EXPT_FLG, NULL, 'N', DEP.AVG_EXPT_FLG) AS AVG_EXPT_FLG,
        (SELECT CNTR_DZN_CAPA FROM MDM_VSL_CNTR WHERE VSL_CD = SKD.VSL_CD) AS CNTR_DZN_CAPA,
        SKD.VSL_CD,
        SKD.SKD_VOY_NO || SKD.SKD_DIR_CD AS SKD_VOY_DIR,
        SKD.SLAN_CD AS VSL_SLAN_CD,
        SKD.LAST_PORT_CD,
        SKD.VPS_PORT_CD AS DEP_PORT_CD,
		TO_CHAR(SKD.VSK_ETD_DT, 'YYYY.MM.DD HH24:MI') AS VSK_ETD_DT,
        NVGT_ML_DIST,
        ENG_ML_DIST,
        MNVR_IN_ML_DIST,
        MNVR_OUT_ML_DIST,
        AVG_SPD,
        AVG_RPM_PWR,
        CASE WHEN ROUND(AVG_SPD, 1) <> 0 AND ROUND(AVG_RPM_PWR, 1) <> 0 AND ((NVGT_ML_DIST / AVG_SPD) * 60 * AVG_RPM_PWR) <> 0
            THEN ROUND(ENG_ML_DIST / ((NVGT_ML_DIST / AVG_SPD) * 60 * AVG_RPM_PWR), 7)
            ELSE NULL
        END AS PRO_PITCH,
        CASE WHEN ROUND(AVG_SPD, 1) <> 0
            THEN ROUND(NVGT_ML_DIST / AVG_SPD, 1)
            ELSE NULL
        END AS SAILING_TIME,
		CASE WHEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0), 1) <> 0
            THEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0), 1)
            ELSE NULL
        END AS SEA_STEAMING_ME,
		CASE WHEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_FOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_DOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1) <> 0
            THEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_FOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_DOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1)
            ELSE NULL
        END AS SEA_STEAMING_TTL,
		CASE WHEN ROUND(NVL(PORT_MN_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_FOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(PORT_MN_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_DOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1) <> 0
            THEN ROUND(NVL(PORT_MN_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_FOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(PORT_MN_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_DOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1)
            ELSE NULL
        END AS HARBOR_IN_PORT_TTL,
        SEA_MN_FOIL_CSM_QTY,
        SEA_GNR_FOIL_CSM_QTY,
        SEA_BLR_FOIL_CSM_QTY,
        CASE WHEN SEA_MN_FOIL_CSM_QTY IS NOT NULL OR SEA_GNR_FOIL_CSM_QTY IS NOT NULL OR SEA_BLR_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_FOIL_CSM_QTY,
        SEA_MN_LOW_SULP_FOIL_CSM_QTY,
        SEA_GNR_LOW_SULP_FOIL_CSM_QTY,
        SEA_BLR_LOW_SULP_FOIL_CSM_QTY,
        CASE WHEN SEA_MN_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR SEA_GNR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR SEA_BLR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_LOW_SULP_FOIL_CSM_QTY,
        SEA_MN_DOIL_CSM_QTY,
        SEA_GNR_DOIL_CSM_QTY,
        SEA_BLR_DOIL_CSM_QTY,
        CASE WHEN SEA_MN_DOIL_CSM_QTY IS NOT NULL OR SEA_GNR_DOIL_CSM_QTY IS NOT NULL OR SEA_BLR_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_DOIL_CSM_QTY,
        SEA_MN_LOW_SULP_DOIL_CSM_QTY,
        SEA_GNR_LOW_SULP_DOIL_CSM_QTY,
        SEA_BLR_LOW_SULP_DOIL_CSM_QTY,
        CASE WHEN SEA_MN_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR SEA_GNR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR SEA_BLR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_LOW_SULP_DOIL_CSM_QTY,
        PORT_MN_FOIL_CSM_QTY,
        PORT_GNR_FOIL_CSM_QTY,
        PORT_BLR_FOIL_CSM_QTY,
        CASE WHEN PORT_MN_FOIL_CSM_QTY IS NOT NULL OR PORT_GNR_FOIL_CSM_QTY IS NOT NULL OR PORT_BLR_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_FOIL_CSM_QTY,
        PORT_MN_LOW_SULP_FOIL_CSM_QTY,
        PORT_GNR_LOW_SULP_FOIL_CSM_QTY,
        PORT_BLR_LOW_SULP_FOIL_CSM_QTY,
        CASE WHEN PORT_MN_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR PORT_GNR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR PORT_BLR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_LOW_SULP_FOIL_CSM_QTY,
        PORT_MN_DOIL_CSM_QTY,
        PORT_GNR_DOIL_CSM_QTY,
        PORT_BLR_DOIL_CSM_QTY,
        CASE WHEN PORT_MN_DOIL_CSM_QTY IS NOT NULL OR PORT_GNR_DOIL_CSM_QTY IS NOT NULL OR PORT_BLR_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_DOIL_CSM_QTY,
        PORT_MN_LOW_SULP_DOIL_CSM_QTY,
        PORT_GNR_LOW_SULP_DOIL_CSM_QTY,
        PORT_BLR_LOW_SULP_DOIL_CSM_QTY,
        CASE WHEN PORT_MN_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR PORT_GNR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR PORT_BLR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_LOW_SULP_DOIL_CSM_QTY,
        ARR_FOIL_WGT,
        ARR_LOW_SULP_FOIL_WGT,
        ARR_DOIL_WGT,
        ARR_LOW_SULP_DOIL_WGT,
        ARR_FRSH_WTR_WGT,
        ARR_BLST_WGT,
        DEP_FOIL_WGT,
        DEP_LOW_SULP_FOIL_WGT,
        DEP_DOIL_WGT,
        DEP_LOW_SULP_DOIL_WGT,
        DEP_FRSH_WTR_WGT,
        DEP_BLST_WGT,
        SPL_FOIL_BDR_WGT,
        SPL_FOIL_ACT_WGT,
        SPL_FOIL_SULP_WGT,
        SPL_FOIL_BRG_WGT1,
        SPL_FOIL_BRG_WGT2,
        SPL_LOW_SULP_FOIL_BDR_WGT,
        SPL_LOW_SULP_FOIL_ACT_WGT,
        SPL_LOW_SULP_FOIL_SULP_WGT,
        SPL_LOW_SULP_FOIL_BRG_WGT1,
        SPL_LOW_SULP_FOIL_BRG_WGT2,
        SPL_DOIL_BDR_WGT,
        SPL_DOIL_ACT_WGT,
        SPL_DOIL_SULP_WGT,
        SPL_DOIL_BRG_WGT1,
        SPL_DOIL_BRG_WGT2,
        SPL_LOW_SULP_DOIL_BDR_WGT,
        SPL_LOW_SULP_DOIL_ACT_WGT,
        SPL_LOW_SULP_DOIL_SULP_WGT,
        SPL_LOW_SULP_DOIL_BRG_WGT1,
        SPL_LOW_SULP_DOIL_BRG_WGT2,
        NXT_PORT_CD,
        TO_CHAR(NXT_PORT_ETA_DT, 'YYYY.MM.DD HH24:MI') AS NXT_PORT_ETA_DT,
        RMN_DIST,
        RMN_AVG_SPD,
        TO_CHAR(SB_ENG_DT, 'YYYY.MM.DD HH24:MI') AS SB_ENG_DT,
        TO_CHAR(PLT_IN_DT, 'YYYY.MM.DD HH24:MI') AS PLT_IN_DT,
        TO_CHAR(BFR_BRTH_ANK_DRP_DT, 'YYYY.MM.DD HH24:MI') AS BFR_BRTH_ANK_DRP_DT,
        TO_CHAR(BFR_BRTH_ANK_OFF_DT, 'YYYY.MM.DD HH24:MI') AS BFR_BRTH_ANK_OFF_DT,
        TO_CHAR(VPS_ETB_DT, 'YYYY.MM.DD HH24:MI') AS VPS_ETB_DT,
        TO_CHAR(CGO_WRK_ST_DT, 'YYYY.MM.DD HH24:MI') AS CGO_WRK_ST_DT,
        TO_CHAR(CGO_WRK_END_DT, 'YYYY.MM.DD HH24:MI') AS CGO_WRK_END_DT,
        TO_CHAR(VPS_ETD_DT, 'YYYY.MM.DD HH24:MI') AS VPS_ETD_DT,
        TO_CHAR(AFT_UNBRTH_ANK_DRP_DT, 'YYYY.MM.DD HH24:MI') AS AFT_UNBRTH_ANK_DRP_DT,
        TO_CHAR(AFT_UNBRTH_ANK_OFF_DT, 'YYYY.MM.DD HH24:MI') AS AFT_UNBRTH_ANK_OFF_DT,
        TO_CHAR(PLT_OUT_DT, 'YYYY.MM.DD HH24:MI') AS PLT_OUT_DT,
        TO_CHAR(RUP_DT, 'YYYY.MM.DD HH24:MI') AS RUP_DT,
        ARR_FWDDR_HGT,
        ARR_MID_DRFT_HGT,
        ARR_AFTDR_HGT,
        ARR_GM_HGT,
        DEP_FWDDR_HGT,
        DEP_MID_DRFT_HGT,
        DEP_AFTDR_HGT,
        DEP_GM_HGT,
        FULL_CNTR_OBRD_TEU,
        MTY_CNTR_OBRD_TEU,
        TTL_CNTR_OBRD_TEU,
        DEP_CGO_WGT,
        DEP_DPL_WGT,
        RF_CNTR_DCHG_KNT,
        RF_CNTR_LOD_KNT,
        RF_CNTR_OBRD_KNT
    FROM VSL_SKD_2 SKD, FCM_DEP_RPT DEP
    WHERE SKD.VSL_CD = DEP.VSL_CD(+)
    AND SKD.SKD_VOY_NO = DEP.SKD_VOY_NO(+)
    AND SKD.SKD_DIR_CD = DEP.SKD_DIR_CD(+)
    AND SKD.VPS_PORT_CD = DEP.DEP_PORT_CD(+)
    AND SKD.CLPT_IND_SEQ = DEP.CLPT_IND_SEQ(+)

    UNION ALL

    -- Vessel Schedule 에 존재하지 않는 Departure Report
    SELECT
        'N' AS VSK_FLG,
		'Y' AS DEP_FLG,
		SKD_VOY_NO,
		SKD_DIR_CD,
		CLPT_IND_SEQ,
        AVG_EXPT_FLG,
        (SELECT CNTR_DZN_CAPA FROM MDM_VSL_CNTR WHERE VSL_CD = DEP.VSL_CD) AS CNTR_DZN_CAPA,
        VSL_CD,
        SKD_VOY_NO || SKD_DIR_CD AS SKD_VOY_DIR,
        VSL_SLAN_CD,
        NULL AS LAST_PORT_CD,
        DEP_PORT_CD,
		NULL AS VSK_ETD_DT,
        NVGT_ML_DIST,
        ENG_ML_DIST,
        MNVR_IN_ML_DIST,
        MNVR_OUT_ML_DIST,
        AVG_SPD,
        AVG_RPM_PWR,
        CASE WHEN ROUND(AVG_SPD, 1) <> 0 AND ROUND(AVG_RPM_PWR, 1) <> 0 AND ((NVGT_ML_DIST / AVG_SPD) * 60 * AVG_RPM_PWR) <> 0
            THEN ROUND(ENG_ML_DIST / ((NVGT_ML_DIST / AVG_SPD) * 60 * AVG_RPM_PWR), 7)
            ELSE NULL
        END AS PRO_PITCH,
        CASE WHEN ROUND(AVG_SPD, 1) <> 0
            THEN ROUND(NVGT_ML_DIST / AVG_SPD, 1)
            ELSE NULL
        END AS SAILING_TIME,
		CASE WHEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0), 1) <> 0
            THEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0), 1)
            ELSE NULL
        END AS SEA_STEAMING_ME,
		CASE WHEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_FOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_DOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1) <> 0
            THEN ROUND(NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_FOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_DOIL_CSM_QTY, 0)
                + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1)
            ELSE NULL
        END AS SEA_STEAMING_TTL,
		CASE WHEN ROUND(NVL(PORT_MN_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_FOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(PORT_MN_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_DOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1) <> 0
            THEN ROUND(NVL(PORT_MN_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_FOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
			    + NVL(PORT_MN_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_DOIL_CSM_QTY, 0)
                + NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 1)
            ELSE NULL
        END AS HARBOR_IN_PORT_TTL,
        SEA_MN_FOIL_CSM_QTY,
        SEA_GNR_FOIL_CSM_QTY,
        SEA_BLR_FOIL_CSM_QTY,
        CASE WHEN SEA_MN_FOIL_CSM_QTY IS NOT NULL OR SEA_GNR_FOIL_CSM_QTY IS NOT NULL OR SEA_BLR_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_FOIL_CSM_QTY,
        SEA_MN_LOW_SULP_FOIL_CSM_QTY,
        SEA_GNR_LOW_SULP_FOIL_CSM_QTY,
        SEA_BLR_LOW_SULP_FOIL_CSM_QTY,
        CASE WHEN SEA_MN_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR SEA_GNR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR SEA_BLR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_LOW_SULP_FOIL_CSM_QTY,
        SEA_MN_DOIL_CSM_QTY,
        SEA_GNR_DOIL_CSM_QTY,
        SEA_BLR_DOIL_CSM_QTY,
        CASE WHEN SEA_MN_DOIL_CSM_QTY IS NOT NULL OR SEA_GNR_DOIL_CSM_QTY IS NOT NULL OR SEA_BLR_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_DOIL_CSM_QTY,
        SEA_MN_LOW_SULP_DOIL_CSM_QTY,
        SEA_GNR_LOW_SULP_DOIL_CSM_QTY,
        SEA_BLR_LOW_SULP_DOIL_CSM_QTY,
        CASE WHEN SEA_MN_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR SEA_GNR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR SEA_BLR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS SEA_TTL_LOW_SULP_DOIL_CSM_QTY,
        PORT_MN_FOIL_CSM_QTY,
        PORT_GNR_FOIL_CSM_QTY,
        PORT_BLR_FOIL_CSM_QTY,
        CASE WHEN PORT_MN_FOIL_CSM_QTY IS NOT NULL OR PORT_GNR_FOIL_CSM_QTY IS NOT NULL OR PORT_BLR_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_FOIL_CSM_QTY,
        PORT_MN_LOW_SULP_FOIL_CSM_QTY,
        PORT_GNR_LOW_SULP_FOIL_CSM_QTY,
        PORT_BLR_LOW_SULP_FOIL_CSM_QTY,
        CASE WHEN PORT_MN_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR PORT_GNR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL OR PORT_BLR_LOW_SULP_FOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_LOW_SULP_FOIL_CSM_QTY,
        PORT_MN_DOIL_CSM_QTY,
        PORT_GNR_DOIL_CSM_QTY,
        PORT_BLR_DOIL_CSM_QTY,
        CASE WHEN PORT_MN_DOIL_CSM_QTY IS NOT NULL OR PORT_GNR_DOIL_CSM_QTY IS NOT NULL OR PORT_BLR_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_DOIL_CSM_QTY,
        PORT_MN_LOW_SULP_DOIL_CSM_QTY,
        PORT_GNR_LOW_SULP_DOIL_CSM_QTY,
        PORT_BLR_LOW_SULP_DOIL_CSM_QTY,
        CASE WHEN PORT_MN_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR PORT_GNR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL OR PORT_BLR_LOW_SULP_DOIL_CSM_QTY IS NOT NULL
            THEN NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0) + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0)
            ELSE NULL
        END AS PORT_TTL_LOW_SULP_DOIL_CSM_QTY,
        ARR_FOIL_WGT,
        ARR_LOW_SULP_FOIL_WGT,
        ARR_DOIL_WGT,
        ARR_LOW_SULP_DOIL_WGT,
        ARR_FRSH_WTR_WGT,
        ARR_BLST_WGT,
        DEP_FOIL_WGT,
        DEP_LOW_SULP_FOIL_WGT,
        DEP_DOIL_WGT,
        DEP_LOW_SULP_DOIL_WGT,
        DEP_FRSH_WTR_WGT,
        DEP_BLST_WGT,
        SPL_FOIL_BDR_WGT,
        SPL_FOIL_ACT_WGT,
        SPL_FOIL_SULP_WGT,
        SPL_FOIL_BRG_WGT1,
        SPL_FOIL_BRG_WGT2,
        SPL_LOW_SULP_FOIL_BDR_WGT,
        SPL_LOW_SULP_FOIL_ACT_WGT,
        SPL_LOW_SULP_FOIL_SULP_WGT,
        SPL_LOW_SULP_FOIL_BRG_WGT1,
        SPL_LOW_SULP_FOIL_BRG_WGT2,
        SPL_DOIL_BDR_WGT,
        SPL_DOIL_ACT_WGT,
        SPL_DOIL_SULP_WGT,
        SPL_DOIL_BRG_WGT1,
        SPL_DOIL_BRG_WGT2,
        SPL_LOW_SULP_DOIL_BDR_WGT,
        SPL_LOW_SULP_DOIL_ACT_WGT,
        SPL_LOW_SULP_DOIL_SULP_WGT,
        SPL_LOW_SULP_DOIL_BRG_WGT1,
        SPL_LOW_SULP_DOIL_BRG_WGT2,
        NXT_PORT_CD,
        TO_CHAR(NXT_PORT_ETA_DT, 'YYYY.MM.DD HH24:MI') AS NXT_PORT_ETA_DT,
        RMN_DIST,
        RMN_AVG_SPD,
        TO_CHAR(SB_ENG_DT, 'YYYY.MM.DD HH24:MI') AS SB_ENG_DT,
        TO_CHAR(PLT_IN_DT, 'YYYY.MM.DD HH24:MI') AS PLT_IN_DT,
        TO_CHAR(BFR_BRTH_ANK_DRP_DT, 'YYYY.MM.DD HH24:MI') AS BFR_BRTH_ANK_DRP_DT,
        TO_CHAR(BFR_BRTH_ANK_OFF_DT, 'YYYY.MM.DD HH24:MI') AS BFR_BRTH_ANK_OFF_DT,
        TO_CHAR(VPS_ETB_DT, 'YYYY.MM.DD HH24:MI') AS VPS_ETB_DT,
        TO_CHAR(CGO_WRK_ST_DT, 'YYYY.MM.DD HH24:MI') AS CGO_WRK_ST_DT,
        TO_CHAR(CGO_WRK_END_DT, 'YYYY.MM.DD HH24:MI') AS CGO_WRK_END_DT,
        TO_CHAR(VPS_ETD_DT, 'YYYY.MM.DD HH24:MI') AS VPS_ETD_DT,
        TO_CHAR(AFT_UNBRTH_ANK_DRP_DT, 'YYYY.MM.DD HH24:MI') AS AFT_UNBRTH_ANK_DRP_DT,
        TO_CHAR(AFT_UNBRTH_ANK_OFF_DT, 'YYYY.MM.DD HH24:MI') AS AFT_UNBRTH_ANK_OFF_DT,
        TO_CHAR(PLT_OUT_DT, 'YYYY.MM.DD HH24:MI') AS PLT_OUT_DT,
        TO_CHAR(RUP_DT, 'YYYY.MM.DD HH24:MI') AS RUP_DT,
        ARR_FWDDR_HGT,
        ARR_MID_DRFT_HGT,
        ARR_AFTDR_HGT,
        ARR_GM_HGT,
        DEP_FWDDR_HGT,
        DEP_MID_DRFT_HGT,
        DEP_AFTDR_HGT,
        DEP_GM_HGT,
        FULL_CNTR_OBRD_TEU,
        MTY_CNTR_OBRD_TEU,
        TTL_CNTR_OBRD_TEU,
        DEP_CGO_WGT,
        DEP_DPL_WGT,
        RF_CNTR_DCHG_KNT,
        RF_CNTR_LOD_KNT,
        RF_CNTR_OBRD_KNT
    FROM FCM_DEP_RPT DEP
	WHERE 1=1
    AND VSL_CD IN (
        SELECT
        T1.VSL_CD
        FROM MDM_VSL_CNTR T1, FCM_VSL_CNTR_RGST T2
        WHERE T1.VSL_CD=T2.VSL_CD
        AND T1.DELT_FLG='N'
        AND T1.CRR_CD='SML'
    )
#if(${fm_dt} != '' && ${to_dt} != '')
    AND NVL(VPS_ETD_DT, RUP_DT) BETWEEN TO_DATE(@[fm_dt], 'YYYY-MM-DD') AND TO_DATE(@[to_dt], 'YYYY-MM-DD')
#end
#if(${vsl_slan_cd} != '')
	AND VSL_SLAN_CD IN (
	#foreach($sVslSlanCd in ${vel_vsl_slan_cd})
		'$sVslSlanCd',
	#end
		'')
#end
#if( ${vsl_cd} != '' )
    AND VSL_CD IN (                     
	#foreach($sVslCd in ${vel_vsl_cd})  
		'$sVslCd',  
	#end  
		'') 
#end
#if( ${dep_port} != '' )
	AND DEP_PORT_CD = @[dep_port]
#end
#if( ${skd_dir_cd} != '' )
    AND SKD_DIR_CD=@[skd_dir_cd]
#end
    AND NOT EXISTS (
        SELECT 1
        FROM VSK_VSL_PORT_SKD SKD
        WHERE SKD.VSL_CD = DEP.VSL_CD
        AND SKD.SKD_VOY_NO = DEP.SKD_VOY_NO
        AND SKD.SKD_DIR_CD = DEP.SKD_DIR_CD
        AND SKD.VPS_PORT_CD = DEP.DEP_PORT_CD
        AND SKD.CLPT_IND_SEQ = DEP.CLPT_IND_SEQ
        AND SKD.TURN_PORT_IND_CD IN ('Y','N')
        AND NVL(SKD.SKD_CNG_STS_CD, 'X')<>'S'
        AND SKD.VSL_CD IN (
            SELECT
            T1.VSL_CD
            FROM MDM_VSL_CNTR T1, FCM_VSL_CNTR_RGST T2
            WHERE T1.VSL_CD=T2.VSL_CD
            AND T1.DELT_FLG='N'
            AND T1.CRR_CD='SML'
        )
    )
)
ORDER BY VSL_CD, NVL(RUP_DT, VSK_ETD_DT) DESC			]]></sql>
			<params>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="last_port" type="12" value="" out="N"/>
				<param name="dep_port" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
