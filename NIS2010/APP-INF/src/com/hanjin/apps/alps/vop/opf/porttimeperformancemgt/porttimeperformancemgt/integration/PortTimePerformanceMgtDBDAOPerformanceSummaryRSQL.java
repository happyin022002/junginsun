/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : PortTimePerformanceMgtDBDAOPerformanceSummaryRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.19
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.19 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.opf.porttimeperformancemgt.porttimeperformancemgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class PortTimePerformanceMgtDBDAOPerformanceSummaryRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Port Time Performance Report 조회
	  * --------------------------------------------------------------------------------------------
	  * 2012.01.16 김민아 [CHM-201215697-01] Port Time Reduction관리 시스템 개발(1차)
	  * 2012.01.25 김민아 [CHM-201215832-01] 2012 Port Time Reduction Project 시스템 개발 (1차_추가사항)
	  * 2012.01.31 김민아 [CHM-201215910-01] 2012 Port Time Reduction Project 시스템 개발 (1차) 추가사항(Port time외1건)
	  * 2012.02.20 김민아 [CHM-201215901-01] Port Time Reduction project 개발 (2차)
	  * 2012.03.19 김민아 [CHM-201216890-01] Port Time Reduction project (2차) 수정사항 (Direction, 2nd Call추가)
	  * 2012.04.13 김민아 [CHM-201217193-01] HJS VVD 판별 logic 수정 (PTRP)
	  * 2015.08.17 김기원 CHM-201537021  조직코드 변경
	  * 2016.04.28 Arie Im CHM-201641178 아프리카 대륙 구주지역본부/동서남아지역본부 구분 로직 추가
	  * </pre>
	  */
	public PortTimePerformanceMgtDBDAOPerformanceSummaryRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("to_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("fr_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("port_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("kpi_tgt_yr",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("slan_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rhq_ofc_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("kpi_ver_seq",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.opf.porttimeperformancemgt.porttimeperformancemgt.integration").append("\n"); 
		query.append("FileName : PortTimePerformanceMgtDBDAOPerformanceSummaryRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("#if(${gubun} == 'KPI' || ${gubun} == 'KPI_PFMC' || ${gubun} == 'PFMC')" ).append("\n"); 
		query.append("WITH KPI AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT  KPI_TGT_YR        , KPI_VER_SEQ       , SLAN_CD            , TO_CHAR(COMMENCE, 'YYYY-MM-DD HH24:MI') AS COMMENCE " ).append("\n"); 
		query.append("	  , VSL_CD			  , SKD_VOY_NO		  , SKD_DIR_CD		   , YD_CD     " ).append("\n"); 
		query.append("      , PORT_KPI_DIR_CD   , VPS_PORT_CD       , CLPT_IND_SEQ       , CLPT_SEQ" ).append("\n"); 
		query.append("      , VPS_ETD_DT        , FM_EFF_DT         , TO_EFF_DT          , TTL_CNTR_MV_KNT    ,MVS  , STM_IN_HRS" ).append("\n"); 
		query.append("      , VSL_ARR_HRS       , TML_OP_HRS        , VSL_DEP_HRS        , STM_OUT_HRS" ).append("\n"); 
		query.append("      , PORT_STAY_HRS     , GRS_TML_PROD_HRS  , GRS_CRN_PROD_HRS   , NET_CRN_PROD_HRS" ).append("\n"); 
		query.append("      , TWN_LFT_HRS       , DUL_CYC_HRS       , RSTWG_HRS          , RHQ" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        SELECT  KPI_TGT_YR        , T.SLAN_CD         , T.VPS_PORT_CD      , KPI_VER_SEQ	, T2.VPS_ETD_DT" ).append("\n"); 
		query.append("              , FM_EFF_DT         , TO_EFF_DT         , TTL_CNTR_MV_KNT    , STM_IN_HRS" ).append("\n"); 
		query.append("              , VSL_ARR_HRS       , TML_OP_HRS        , VSL_DEP_HRS        , STM_OUT_HRS" ).append("\n"); 
		query.append("              , PORT_STAY_HRS     , GRS_TML_PROD_HRS  , GRS_CRN_PROD_HRS   , NET_CRN_PROD_HRS" ).append("\n"); 
		query.append("              , TWN_LFT_HRS       , DUL_CYC_HRS       , RSTWG_HRS          " ).append("\n"); 
		query.append("              , (" ).append("\n"); 
		query.append("                SELECT  CASE WHEN NVL(ML.DELT_FLG,'N') <> 'N' OR ML.CALL_PORT_FLG <> 'Y' THEN ''" ).append("\n"); 
		query.append("                        ELSE (SELECT O.OFC_N3RD_LVL_CD FROM MAS_OFC_LVL O WHERE O.OFC_CD = ML.EQ_CTRL_OFC_CD AND O.OFC_APLY_TO_YRMON ='999912' AND O.OFC_LVL < 9)" ).append("\n"); 
		query.append("--                                 CASE WHEN ML.CONTI_CD  IN ('E','F') AND ML.LOC_CD NOT IN('EGAIS','ZADUR','RUVVO')               THEN 'HAMRU'" ).append("\n"); 
		query.append("--                                      WHEN ML.CONTI_CD  = 'M'                                                                    THEN 'NYCRA'" ).append("\n"); 
		query.append("--                                      WHEN ML.CONTI_CD = 'A' AND ML.SCONTI_CD = 'AF'  THEN DECODE(ML.CNT_CD,'KR','SELIB','JP','TYOIB','SHARC')" ).append("\n"); 
		query.append("--                                      WHEN (ML.CONTI_CD = 'A'        AND ML.SCONTI_CD <> 'AF') OR ML.LOC_CD IN ('EGAIS','ZADUR') THEN 'SINRS'" ).append("\n"); 
		query.append("--									  WHEN ML.CONTI_CD  IN ('E') AND ML.LOC_CD = 'RUVVO' THEN 'VVOIA'" ).append("\n"); 
		query.append("--                                      ELSE ''" ).append("\n"); 
		query.append("--                                 END" ).append("\n"); 
		query.append("                       END" ).append("\n"); 
		query.append("                FROM   MDM_LOCATION  ML" ).append("\n"); 
		query.append("                WHERE  ML.LOC_CD = T.VPS_PORT_CD" ).append("\n"); 
		query.append("                )                                              AS RHQ" ).append("\n"); 
		query.append("              , T.PORT_KPI_DIR_CD" ).append("\n"); 
		query.append("              , T.CLPT_IND_SEQ  " ).append("\n"); 
		query.append("              , T3.VSL_CD" ).append("\n"); 
		query.append("              , T3.SKD_VOY_NO" ).append("\n"); 
		query.append("              , T3.SKD_DIR_CD" ).append("\n"); 
		query.append("              , T2.CLPT_SEQ" ).append("\n"); 
		query.append("              , T1.MVS" ).append("\n"); 
		query.append("              , T2.YD_CD AS YD_CD" ).append("\n"); 
		query.append("              , T1.COMMENCE" ).append("\n"); 
		query.append("        FROM    OPF_PORT_TM_KPI T" ).append("\n"); 
		query.append("              , TDR_HEADER       T1" ).append("\n"); 
		query.append("              , VSK_VSL_PORT_SKD T2" ).append("\n"); 
		query.append("              , VSK_VSL_SKD      T3 " ).append("\n"); 
		query.append("        WHERE   1=1" ).append("\n"); 
		query.append("        AND     T1.VSL_CD            = T2.VSL_CD" ).append("\n"); 
		query.append("        AND     T1.VOY_NO            = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND     T1.DIR_CD            = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND     T1.PORT_CD           = T2.VPS_PORT_CD" ).append("\n"); 
		query.append("        AND     T1.CALL_IND          = T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        AND     T2.VSL_CD            = T3.VSL_CD" ).append("\n"); 
		query.append("        AND     T2.SKD_VOY_NO        = T3.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND     T2.SKD_DIR_CD        = T3.SKD_DIR_CD  " ).append("\n"); 
		query.append("        AND     T2.SLAN_CD           = T3.VSL_SLAN_CD" ).append("\n"); 
		query.append("        AND     T.SLAN_CD            = T2.SLAN_CD" ).append("\n"); 
		query.append("        AND     T.VPS_PORT_CD        = T2.VPS_PORT_CD        " ).append("\n"); 
		query.append("        AND     CASE WHEN T.PORT_KPI_DIR_CD = 'A' THEN T2.SKD_DIR_CD" ).append("\n"); 
		query.append("             	     ELSE T.PORT_KPI_DIR_CD " ).append("\n"); 
		query.append("        	     END                 = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND     T.CLPT_IND_SEQ       = T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        AND     T2.PORT_SKD_STS_CD   = 'D'" ).append("\n"); 
		query.append("        AND     T2.TURN_PORT_IND_CD IN ('Y','N')" ).append("\n"); 
		query.append("        AND     NVL(T2.SKD_CNG_STS_CD, ' ') <> 'S'" ).append("\n"); 
		query.append("        AND     T2.VPS_PORT_CD      NOT IN ('PAPAC','EGSUZ')" ).append("\n"); 
		query.append("        AND     T2.VPS_ETD_DT       BETWEEN T.FM_EFF_DT	AND	T.TO_EFF_DT+1   " ).append("\n"); 
		query.append("        AND     T3.ACT_CRR_CD = 'SML'" ).append("\n"); 
		query.append("#if(${slan_cd} != '')" ).append("\n"); 
		query.append("        AND     T.SLAN_CD      = @[slan_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${port_cd} != '')" ).append("\n"); 
		query.append("        AND     T.VPS_PORT_CD  = @[port_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${kpi_tgt_yr} != '')" ).append("\n"); 
		query.append("        AND     T.KPI_TGT_YR   = @[kpi_tgt_yr]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${kpi_ver_seq} != '')" ).append("\n"); 
		query.append("        AND     T.KPI_VER_SEQ  = @[kpi_ver_seq]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("WHERE   1=1" ).append("\n"); 
		query.append("#if(${rhq_ofc_cd} != '')" ).append("\n"); 
		query.append("AND     RHQ    = @[rhq_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#elseif(${gubun} == 'BASE' || ${gubun} == 'BASE_PFMC')" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("WITH KPI AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT  KPI_TGT_YR        , KPI_VER_SEQ       , SLAN_CD            , TO_CHAR(COMMENCE, 'YYYY-MM-DD HH24:MI') AS COMMENCE , VSL_CD, SKD_VOY_NO, SKD_DIR_CD, YD_CD     " ).append("\n"); 
		query.append("      , PORT_KPI_DIR_CD   , VPS_PORT_CD       , CLPT_IND_SEQ       , CLPT_SEQ" ).append("\n"); 
		query.append("      , VPS_ETD_DT        , FM_EFF_DT         , TO_EFF_DT          , TTL_CNTR_MV_KNT    ,MVS  , STM_IN_HRS" ).append("\n"); 
		query.append("      , VSL_ARR_HRS       , TML_OP_HRS        , VSL_DEP_HRS        , STM_OUT_HRS" ).append("\n"); 
		query.append("      , PORT_STAY_HRS     , GRS_TML_PROD_HRS  , GRS_CRN_PROD_HRS   , NET_CRN_PROD_HRS" ).append("\n"); 
		query.append("      , TWN_LFT_HRS       , DUL_CYC_HRS       , RSTWG_HRS          , RHQ" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        SELECT  BSEL_YR AS KPI_TGT_YR                 , T.SLAN_CD          , T.VPS_PORT_CD      , BSEL_VER_SEQ AS KPI_VER_SEQ     " ).append("\n"); 
		query.append("              , T2.VPS_ETD_DT     , FM_EFF_DT         , TO_EFF_DT          , TTL_CNTR_MV_KNT    , STM_IN_HRS" ).append("\n"); 
		query.append("              , VSL_ARR_HRS       , TML_OP_HRS        , VSL_DEP_HRS        , STM_OUT_HRS" ).append("\n"); 
		query.append("              , PORT_STAY_HRS     , GRS_TML_PROD_HRS  , GRS_CRN_PROD_HRS   , NET_CRN_PROD_HRS" ).append("\n"); 
		query.append("              , TWN_LFT_HRS       , DUL_CYC_HRS       , RSTWG_HRS          " ).append("\n"); 
		query.append("              , (" ).append("\n"); 
		query.append("                SELECT  CASE WHEN NVL(ML.DELT_FLG,'N') <> 'N' OR ML.CALL_PORT_FLG <> 'Y' THEN ''" ).append("\n"); 
		query.append("                        ELSE (SELECT O.OFC_N3RD_LVL_CD FROM MAS_OFC_LVL O WHERE O.OFC_CD = ML.EQ_CTRL_OFC_CD AND O.OFC_APLY_TO_YRMON ='999912' AND O.OFC_LVL < 9)" ).append("\n"); 
		query.append("--                                 CASE WHEN ML.CONTI_CD  IN ('E','F') AND ML.LOC_CD NOT IN('EGAIS','ZADUR','RUVVO')               THEN 'HAMRU'" ).append("\n"); 
		query.append("--                                      WHEN ML.CONTI_CD  = 'M'                                                                    THEN 'NYCRA'" ).append("\n"); 
		query.append("--                                      WHEN ML.CONTI_CD = 'A' AND ML.SCONTI_CD = 'AF'  THEN DECODE(ML.CNT_CD,'KR','SELIB','JP','TYOIB','SHARC')" ).append("\n"); 
		query.append("--                                      WHEN (ML.CONTI_CD = 'A'        AND ML.SCONTI_CD <> 'AF') OR ML.LOC_CD IN ('EGAIS','ZADUR') THEN 'SINRS'" ).append("\n"); 
		query.append("--									  WHEN ML.CONTI_CD  IN ('E') AND ML.LOC_CD = 'RUVVO' THEN 'VVOIA'" ).append("\n"); 
		query.append("--                                      ELSE ''" ).append("\n"); 
		query.append("--                                 END" ).append("\n"); 
		query.append("                       END" ).append("\n"); 
		query.append("                FROM   MDM_LOCATION  ML" ).append("\n"); 
		query.append("                WHERE  ML.LOC_CD = T.VPS_PORT_CD" ).append("\n"); 
		query.append("                )                            AS RHQ" ).append("\n"); 
		query.append("              , T.PORT_BSEL_DIR_CD AS PORT_KPI_DIR_CD" ).append("\n"); 
		query.append("              , T.CLPT_IND_SEQ  " ).append("\n"); 
		query.append("              , T3.VSL_CD" ).append("\n"); 
		query.append("              , T3.SKD_VOY_NO" ).append("\n"); 
		query.append("              , T3.SKD_DIR_CD" ).append("\n"); 
		query.append("              , T2.CLPT_SEQ" ).append("\n"); 
		query.append("              , T1.MVS" ).append("\n"); 
		query.append("              , T2.YD_CD AS YD_CD" ).append("\n"); 
		query.append("              , T1.COMMENCE" ).append("\n"); 
		query.append("        FROM    OPF_PORT_TM_BSEL T" ).append("\n"); 
		query.append("              , TDR_HEADER       T1" ).append("\n"); 
		query.append("              , VSK_VSL_PORT_SKD T2" ).append("\n"); 
		query.append("              , VSK_VSL_SKD      T3        " ).append("\n"); 
		query.append("        WHERE   1=1" ).append("\n"); 
		query.append("        AND     T1.VSL_CD            = T2.VSL_CD" ).append("\n"); 
		query.append("        AND     T1.VOY_NO            = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND     T1.DIR_CD            = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND     T1.PORT_CD           = T2.VPS_PORT_CD" ).append("\n"); 
		query.append("        AND     T1.CALL_IND          = T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        AND     T2.VSL_CD            = T3.VSL_CD" ).append("\n"); 
		query.append("        AND     T2.SKD_VOY_NO        = T3.SKD_VOY_NO" ).append("\n"); 
		query.append("        AND     T2.SKD_DIR_CD        = T3.SKD_DIR_CD  " ).append("\n"); 
		query.append("        AND     T2.SLAN_CD           = T3.VSL_SLAN_CD" ).append("\n"); 
		query.append("        AND     T.SLAN_CD            = T2.SLAN_CD" ).append("\n"); 
		query.append("        AND     T.VPS_PORT_CD        = T2.VPS_PORT_CD        " ).append("\n"); 
		query.append("        AND     CASE WHEN T.PORT_BSEL_DIR_CD = 'A' THEN T2.SKD_DIR_CD" ).append("\n"); 
		query.append("             	     ELSE T.PORT_BSEL_DIR_CD " ).append("\n"); 
		query.append("        	     END                 = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("        AND     T.CLPT_IND_SEQ       = T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        AND     T2.PORT_SKD_STS_CD   = 'D'" ).append("\n"); 
		query.append("        AND     T2.TURN_PORT_IND_CD IN ('Y','N')" ).append("\n"); 
		query.append("        AND     NVL(T2.SKD_CNG_STS_CD, ' ') <> 'S'" ).append("\n"); 
		query.append("        AND     T2.VPS_PORT_CD      NOT IN ('PAPAC','EGSUZ')" ).append("\n"); 
		query.append("        AND     T2.VPS_ETD_DT       BETWEEN T.FM_EFF_DT   " ).append("\n"); 
		query.append("                                    AND     T.TO_EFF_DT+1   " ).append("\n"); 
		query.append("        AND     T3.ACT_CRR_CD = 'SML' " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("#if(${slan_cd} != '')" ).append("\n"); 
		query.append("        AND     T.SLAN_CD      = @[slan_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${port_cd} != '')" ).append("\n"); 
		query.append("        AND     T.VPS_PORT_CD  = @[port_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${kpi_tgt_yr} != '')" ).append("\n"); 
		query.append("        AND     T.BSEL_YR   = @[kpi_tgt_yr]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if(${kpi_ver_seq} != '')" ).append("\n"); 
		query.append("        AND     T.BSEL_VER_SEQ  = @[kpi_ver_seq]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("WHERE   1=1" ).append("\n"); 
		query.append("#if(${rhq_ofc_cd} != '')" ).append("\n"); 
		query.append("AND     RHQ    = @[rhq_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(") " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT  RHQ" ).append("\n"); 
		query.append("      , DECODE(NO, 1, 'KPI', 'PFMC') AS GUBUN" ).append("\n"); 
		query.append("      , VPS_PORT_CD" ).append("\n"); 
		query.append("      , SLAN_CD" ).append("\n"); 
		query.append("        --::JSK::----------" ).append("\n"); 
		query.append("      , DECODE(PORT_KPI_DIR_CD, 'A', '', PORT_KPI_DIR_CD) AS PORT_KPI_DIR_CD" ).append("\n"); 
		query.append("      , CLPT_IND_SEQ" ).append("\n"); 
		query.append("      , DECODE(CLPT_IND_SEQ, 2, 1, 0) AS CLPT_IND_SEQ_VIEW" ).append("\n"); 
		query.append("        -------------------" ).append("\n"); 
		query.append("      , VSL_CD		 " ).append("\n"); 
		query.append("      , SKD_VOY_NO " ).append("\n"); 
		query.append("      , SKD_DIR_CD " ).append("\n"); 
		query.append("      , PORT_CD" ).append("\n"); 
		query.append("      , DECODE(NO, 1, NULL, KPI_ACHIVE) AS KPI_ACHIVE" ).append("\n"); 
		query.append("      , VVD_CD" ).append("\n"); 
		query.append("      , TTL_MVS" ).append("\n"); 
		query.append("	  , TTL_MVS		AS TTL_MVS2" ).append("\n"); 
		query.append("      , STEAM_IN_TIME" ).append("\n"); 
		query.append("      , ARRIVAL_TIME" ).append("\n"); 
		query.append("      , OPERATION_TIME" ).append("\n"); 
		query.append("      , DEPARTURE_TIME" ).append("\n"); 
		query.append("      , PORT_TIME" ).append("\n"); 
		query.append("      , GROSS_TML_PROD" ).append("\n"); 
		query.append("      , GROSS_CRANE_PROD" ).append("\n"); 
		query.append("      , NET_CRANE_PROD" ).append("\n"); 
		query.append("      , TWIN_LIFT" ).append("\n"); 
		query.append("      , DUAL_CYCLE" ).append("\n"); 
		query.append("      , RESTOW" ).append("\n"); 
		query.append("      , PORT_ACT_CTNT " ).append("\n"); 
		query.append("      , PORT_ACT_COUNT" ).append("\n"); 
		query.append("      , CRANE_NO" ).append("\n"); 
		query.append("      , STW_DIF_HRS_FLG" ).append("\n"); 
		query.append("      , STW_DIF_HRS" ).append("\n"); 
		query.append("      , ACT_DEP_DT, WORK_COMMENCED, WORK_COPLETED" ).append("\n"); 
		query.append("      , VVD_CD_GROUP" ).append("\n"); 
		query.append("		, EXCEPT_CD" ).append("\n"); 
		query.append("		, EXCEPT_POB_FLG" ).append("\n"); 
		query.append("		, UPDATE_SYS" ).append("\n"); 
		query.append("        , DECODE(FULL_D_20,0, NULL, FULL_D_20) FULL_D_20  " ).append("\n"); 
		query.append("        , DECODE(FULL_D_40,0, NULL, FULL_D_40) FULL_D_40" ).append("\n"); 
		query.append("        , DECODE(ET_D_20  ,0, NULL, ET_D_20  ) ET_D_20" ).append("\n"); 
		query.append("        , DECODE(ET_D_40  ,0, NULL, ET_D_40  ) ET_D_40 " ).append("\n"); 
		query.append("        , DECODE(FULL_L_20,0, NULL, FULL_L_20) FULL_L_20 " ).append("\n"); 
		query.append("        , DECODE(FULL_L_40,0, NULL, FULL_L_40) FULL_L_40 " ).append("\n"); 
		query.append("        , DECODE(ET_L_20  ,0, NULL, ET_L_20  ) ET_L_20 " ).append("\n"); 
		query.append("        , DECODE(ET_L_40  ,0, NULL, ET_L_40  ) ET_L_40" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("                SELECT  ROW_NUMBER () OVER (ORDER BY KPI.RHQ" ).append("\n"); 
		query.append("                                            , CASE WHEN (VVD_CD_GROUP = 1 AND RHQ_GROUP = 1) THEN NULL" ).append("\n"); 
		query.append("                                                   ELSE KPI.VPS_PORT_CD || KPI.SLAN_CD" ).append("\n"); 
		query.append("                                              END" ).append("\n"); 
		query.append("                                            , KPI.PORT_KPI_DIR_CD     ASC" ).append("\n"); 
		query.append("                                            , KPI.CLPT_IND_SEQ        ASC" ).append("\n"); 
		query.append("                                            , CASE WHEN KPI.NO = 1 THEN NVL(KPI.YD_CD,'ZZZZZZZ')  " ).append("\n"); 
		query.append("                                                   ELSE NVL(T21.YD_CD,'AAAAAAA')" ).append("\n"); 
		query.append("                                              END DESC" ).append("\n"); 
		query.append("                                            , CASE WHEN KPI.NO = 1 THEN KPI.COMMENCE " ).append("\n"); 
		query.append("                                                   ELSE WORK_COMMENCED" ).append("\n"); 
		query.append("                                              END " ).append("\n"); 
		query.append("                                            , KPI.NO" ).append("\n"); 
		query.append("                                            , VVD_CD" ).append("\n"); 
		query.append("                                            , VVD_CD_GROUP  NULLS FIRST" ).append("\n"); 
		query.append("                                            , RHQ_GROUP  NULLS FIRST" ).append("\n"); 
		query.append("                                            ) AS ROW_SEQ" ).append("\n"); 
		query.append("                      , VVD_CD_GROUP" ).append("\n"); 
		query.append("                      , RHQ_GROUP" ).append("\n"); 
		query.append("                      , KPI.NO" ).append("\n"); 
		query.append("                      , KPI.RHQ" ).append("\n"); 
		query.append("                      , KPI.VPS_PORT_CD" ).append("\n"); 
		query.append("                      , KPI.SLAN_CD                       " ).append("\n"); 
		query.append("                      , KPI.PORT_KPI_DIR_CD" ).append("\n"); 
		query.append("                      , KPI.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.VSL_CD	    	, T21.VSL_CD	  )    AS VSL_CD		 " ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.SKD_VOY_NO		, T21.SKD_VOY_NO  )    AS SKD_VOY_NO" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.SKD_DIR_CD		, T21.SKD_DIR_CD  )    AS SKD_DIR_CD" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.VPS_PORT_CD		, T21.PORT_CD     )    AS PORT_CD" ).append("\n"); 
		query.append("                      , CASE WHEN KPI.PORT_STAY_HRS <= T21.PORT_TIME THEN 'N'" ).append("\n"); 
		query.append("                               ELSE 'Y'" ).append("\n"); 
		query.append("                               END  KPI_ACHIVE " ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.VSL_CD||KPI.SKD_VOY_NO||KPI.SKD_DIR_CD,    T21.VVD_CD ) AS VVD_CD                               " ).append("\n"); 
		query.append("                      , VSL_CALL_NO" ).append("\n"); 
		query.append("					  , NVL2(T21.YD_CD, SUBSTR(T21.YD_CD, 1, 5) ||'('|| SUBSTR(T21.YD_CD, 6, 2) ||')', NULL)    AS YD_CD" ).append("\n"); 
		query.append("					  , DECODE(KPI.NO, 1, KPI.MVS               , T21.TTL_MVS           ) AS TTL_MVS                   " ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.TTL_CNTR_MV_KNT   , ''                    ) AS TTL_MVS_KPI" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.STM_IN_HRS        , T21.STEAM_IN_TIME     ) AS STEAM_IN_TIME" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.VSL_ARR_HRS       , T21.ARRIVAL_TIME      ) AS ARRIVAL_TIME" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.TML_OP_HRS        , T21.OPERATION_TIME    ) AS OPERATION_TIME" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.VSL_DEP_HRS       , T21.DEPARTURE_TIME    ) AS DEPARTURE_TIME" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.PORT_STAY_HRS     , T21.PORT_TIME         ) AS PORT_TIME" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.GRS_TML_PROD_HRS  , T21.GROSS_TML_PROD    ) AS GROSS_TML_PROD" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.GRS_CRN_PROD_HRS  , T21.GROSS_CRANE_PROD  ) AS GROSS_CRANE_PROD" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.NET_CRN_PROD_HRS  , T21.NET_CRANE_PROD    ) AS NET_CRANE_PROD" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.TWN_LFT_HRS       , T21.TWIN_LIFT         ) AS TWIN_LIFT" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.DUL_CYC_HRS       , T21.DUAL_CYCLE        ) AS DUAL_CYCLE" ).append("\n"); 
		query.append("                      , DECODE(KPI.NO, 1, KPI.RSTWG_HRS         , T21.RESTOW            ) AS RESTOW" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                      , PORT_ACT_CTNT " ).append("\n"); 
		query.append("                      , PORT_ACT_COUNT                      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                      , CRANE_NO" ).append("\n"); 
		query.append("                      , ACT_DEP_DT" ).append("\n"); 
		query.append("					  , DECODE(KPI.NO, 1, COMMENCE	    , WORK_COMMENCED	  )    AS WORK_COMMENCED" ).append("\n"); 
		query.append("				      , WORK_COPLETED" ).append("\n"); 
		query.append("						, DECODE(KPI.NO, 1, ''   , T21.EXCEPT_CD)       AS EXCEPT_CD" ).append("\n"); 
		query.append("						, DECODE(KPI.NO, 1, ''   , T21.EXCEPT_POB_FLG)  AS EXCEPT_POB_FLG" ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''   , T21.UPDATE_SYS)      AS UPDATE_SYS" ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''   , T21.FULL_D_20)       AS FULL_D_20" ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.FULL_D_40)	 	AS FULL_D_40  " ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.ET_D_20  )	 	AS ET_D_20   " ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.ET_D_40  )	 	AS ET_D_40 " ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.FULL_L_20)	 	AS FULL_L_20" ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.FULL_L_40)	 	AS FULL_L_40 " ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.ET_L_20  )	 	AS ET_L_20" ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.ET_L_40  )	 	AS ET_L_40 " ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.STW_DIF_HRS_FLG  )	AS STW_DIF_HRS_FLG" ).append("\n"); 
		query.append("                        , DECODE(KPI.NO, 1, ''	 , T21.STW_DIF_HRS  )	AS STW_DIF_HRS                                                                                                                                                                      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                FROM    (" ).append("\n"); 
		query.append("                        SELECT   2 NO" ).append("\n"); 
		query.append("                               , GROUPING(KPI.RHQ)                                                    AS RHQ_GROUP   " ).append("\n"); 
		query.append("                               , GROUPING(VVD_CD)                                                     AS VVD_CD_GROUP  " ).append("\n"); 
		query.append("                               , CASE WHEN (GROUPING(KPI.RHQ) = 1 AND GROUPING(VVD_CD) = 1) THEN" ).append("\n"); 
		query.append("                                           LAG(KPI.RHQ) OVER (ORDER BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.SLAN_CD)" ).append("\n"); 
		query.append("                                           ELSE " ).append("\n"); 
		query.append("                                           KPI.RHQ" ).append("\n"); 
		query.append("                                           END                                                        AS RHQ" ).append("\n"); 
		query.append("                               , CASE WHEN (GROUPING(KPI.RHQ) = 1 AND GROUPING(VVD_CD) = 1) THEN" ).append("\n"); 
		query.append("                                          LAG(KPI.SLAN_CD) OVER (ORDER BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.SLAN_CD)" ).append("\n"); 
		query.append("                                           ELSE " ).append("\n"); 
		query.append("                                           KPI.SLAN_CD" ).append("\n"); 
		query.append("                                           END                                                        AS SLAN_CD" ).append("\n"); 
		query.append("                               , CASE WHEN (GROUPING(KPI.RHQ) = 1 AND GROUPING(VVD_CD) = 1) THEN" ).append("\n"); 
		query.append("                                           LAG(KPI.VPS_PORT_CD) OVER (ORDER BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.SLAN_CD)" ).append("\n"); 
		query.append("                                           ELSE" ).append("\n"); 
		query.append("                                           KPI.VPS_PORT_CD " ).append("\n"); 
		query.append("                                           END                                                        AS VPS_PORT_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                               , CASE WHEN (GROUPING(KPI.RHQ) = 1 AND GROUPING(VVD_CD) = 1) THEN" ).append("\n"); 
		query.append("                                           LAG(KPI.PORT_KPI_DIR_CD) OVER (ORDER BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.SLAN_CD, KPI.PORT_KPI_DIR_CD, KPI.CLPT_IND_SEQ)" ).append("\n"); 
		query.append("                                           ELSE" ).append("\n"); 
		query.append("                                           KPI.PORT_KPI_DIR_CD " ).append("\n"); 
		query.append("                                           END                                                        AS PORT_KPI_DIR_CD   " ).append("\n"); 
		query.append("                               , CASE WHEN (GROUPING(KPI.RHQ) = 1 AND GROUPING(VVD_CD) = 1) THEN" ).append("\n"); 
		query.append("                                           LAG(KPI.CLPT_IND_SEQ) OVER (ORDER BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.SLAN_CD, KPI.PORT_KPI_DIR_CD, KPI.CLPT_IND_SEQ)" ).append("\n"); 
		query.append("                                           ELSE" ).append("\n"); 
		query.append("                                           KPI.CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                           END                                                        AS CLPT_IND_SEQ                                                                                                                      " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                               , MAX(T11.VSL_CD	     )  VSL_CD			 " ).append("\n"); 
		query.append("                               , MAX(T11.SKD_VOY_NO  )  SKD_VOY_NO   " ).append("\n"); 
		query.append("                               , MAX(T11.SKD_DIR_CD  )  SKD_DIR_CD " ).append("\n"); 
		query.append("                               , MAX(T11.PORT_CD     )  PORT_CD " ).append("\n"); 
		query.append("                               , T11.YD_CD" ).append("\n"); 
		query.append("                               , T11.VVD_CD" ).append("\n"); 
		query.append("                               , ACT_DEP_DT" ).append("\n"); 
		query.append("                               , WORK_COMMENCED" ).append("\n"); 
		query.append("                               , WORK_COPLETED" ).append("\n"); 
		query.append("                               , CASE WHEN (GROUPING(KPI.RHQ) = 1 AND GROUPING(VVD_CD) = 1) THEN COUNT(DECODE(MAX(T11.EXCEPT_CD),'1','', T11.VVD_CD)) OVER ()" ).append("\n"); 
		query.append("                                      ELSE COUNT(DECODE(MAX(T11.EXCEPT_CD),'1','', T11.VVD_CD)) OVER (PARTITION BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.SLAN_CD, KPI.PORT_KPI_DIR_CD, KPI.CLPT_IND_SEQ)" ).append("\n"); 
		query.append("                                 END                                                        AS VSL_CALL_NO" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', T11.TTL_MVS)), 0)              AS TTL_MVS" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', STEAM_IN_TIME)), 1)            AS STEAM_IN_TIME" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', ARRIVAL_TIME)), 1)             AS ARRIVAL_TIME" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1',''," ).append("\n"); 
		query.append("                                 CASE WHEN KPI.TTL_CNTR_MV_KNT IS NULL  THEN NULL" ).append("\n"); 
		query.append("                                      WHEN T11.OPERATION_TIME = 0       THEN 0" ).append("\n"); 
		query.append("                                      WHEN T11.TTL_MVS        = 0       THEN 0" ).append("\n"); 
		query.append("                                      ELSE T11.OPERATION_TIME" ).append("\n"); 
		query.append("                                 END                         )), 1)                                    AS OPERATION_TIME" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', DEPARTURE_TIME )), 1)          AS DEPARTURE_TIME" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', STEAM_IN_TIME )), 1) + ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',ARRIVAL_TIME )), 1) + ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',DEPARTURE_TIME )), 1) +" ).append("\n"); 
		query.append("                                 ROUND(AVG(DECODE(T11.EXCEPT_CD,'1',''," ).append("\n"); 
		query.append("                                 CASE WHEN KPI.TTL_CNTR_MV_KNT IS NULL  THEN NULL" ).append("\n"); 
		query.append("                                      WHEN T11.OPERATION_TIME = 0       THEN 0" ).append("\n"); 
		query.append("                                      WHEN T11.TTL_MVS        = 0       THEN 0" ).append("\n"); 
		query.append("                                      ELSE KPI.MVS / (T11.TTL_MVS / T11.OPERATION_TIME)" ).append("\n"); 
		query.append("                                 END                        )), 1)                                    AS PORT_TIME" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',GROSS_TML_PROD    )), 1)       AS GROSS_TML_PROD" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',GROSS_CRANE_PROD  )), 1)       AS GROSS_CRANE_PROD" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',NET_CRANE_PROD    )), 1)       AS NET_CRANE_PROD" ).append("\n"); 
		query.append("                               , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',CRANE_NO          )), 1)       AS CRANE_NO" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                               , MAX(DECODE(T11.EXCEPT_CD,'1','', T11.PORT_ACT_CTNT  )) 	AS PORT_ACT_CTNT" ).append("\n"); 
		query.append("                               , MAX(DECODE(T11.EXCEPT_CD,'1','', T11.PORT_ACT_COUNT )) 	AS PORT_ACT_COUNT  " ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', T11.TWIN_LIFT  )), 1) AS TWIN_LIFT                " ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', T11.DUAL_CYCLE )), 1) AS DUAL_CYCLE               " ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','', T11.RESTOW     )), 1) AS RESTOW " ).append("\n"); 
		query.append("								" ).append("\n"); 
		query.append("								, MAX(T11.EXCEPT_CD)  EXCEPT_CD" ).append("\n"); 
		query.append("								, MAX(T11.EXCEPT_POB_FLG)  EXCEPT_POB_FLG" ).append("\n"); 
		query.append("								, MAX(T11.UPDATE_SYS) UPDATE_SYS" ).append("\n"); 
		query.append("								, ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.FULL_D_20)), 0)     AS FULL_D_20" ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.FULL_D_40)), 0)		AS FULL_D_40 " ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.ET_D_20  )), 0)		AS ET_D_20" ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.ET_D_40  )), 0)		AS ET_D_40" ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.FULL_L_20)), 0)		AS FULL_L_20" ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.FULL_L_40)), 0)		AS FULL_L_40  " ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.ET_L_20  )), 0)		AS ET_L_20 " ).append("\n"); 
		query.append("                                , ROUND(AVG(DECODE(T11.EXCEPT_CD,'1','',T11.ET_L_40  )), 0)		AS ET_L_40 " ).append("\n"); 
		query.append("                                , MAX(NVL2(STW_DIF_HRS, DECODE(SIGN(STW_DIF_HRS), -1, 'N', 'Y') ,'N')) STW_DIF_HRS_FLG" ).append("\n"); 
		query.append("                                , MAX(STW_DIF_HRS) STW_DIF_HRS" ).append("\n"); 
		query.append("                        FROM    (" ).append("\n"); 
		query.append("                                SELECT     (" ).append("\n"); 
		query.append("                                            SELECT  CASE WHEN NVL(ML.DELT_FLG,'N') <> 'N' OR ML.CALL_PORT_FLG <> 'Y' THEN ''" ).append("\n"); 
		query.append("                                                    ELSE (SELECT O.OFC_N3RD_LVL_CD FROM MAS_OFC_LVL O WHERE O.OFC_CD = ML.EQ_CTRL_OFC_CD AND O.OFC_APLY_TO_YRMON ='999912' AND O.OFC_LVL < 9)" ).append("\n"); 
		query.append("--                                                             CASE WHEN ML.CONTI_CD  IN ('E','F') AND ML.LOC_CD NOT IN('EGAIS','ZADUR','RUVVO')               THEN 'HAMRU'" ).append("\n"); 
		query.append("--                                                                  WHEN ML.CONTI_CD  = 'M'                                                                    THEN 'NYCRA'" ).append("\n"); 
		query.append("--                                                                  WHEN ML.CONTI_CD = 'A' AND ML.SCONTI_CD = 'AF'  THEN DECODE(ML.CNT_CD,'KR','SELIB','JP','TYOIB','SHARC')" ).append("\n"); 
		query.append("--                                                                  WHEN (ML.CONTI_CD = 'A'        AND ML.SCONTI_CD <> 'AF') OR ML.LOC_CD IN ('EGAIS','ZADUR') THEN 'SINRS'" ).append("\n"); 
		query.append("--																  WHEN ML.CONTI_CD  IN ('E') AND ML.LOC_CD = 'RUVVO' THEN 'VVOIA'" ).append("\n"); 
		query.append("--                                                                  ELSE ''" ).append("\n"); 
		query.append("--                                                             END" ).append("\n"); 
		query.append("                                                   END" ).append("\n"); 
		query.append("                                             FROM   MDM_LOCATION  ML" ).append("\n"); 
		query.append("                                             WHERE  ML.LOC_CD = M.VPS_PORT_CD" ).append("\n"); 
		query.append("                                             )                                              AS RHQ" ).append("\n"); 
		query.append("                                           , M.VSL_CD" ).append("\n"); 
		query.append("                                           , M.SKD_VOY_NO" ).append("\n"); 
		query.append("                                           , M.SKD_DIR_CD         " ).append("\n"); 
		query.append("                                           , M.VSL_CD||M.SKD_VOY_NO||M.SKD_DIR_CD           AS VVD_CD  " ).append("\n"); 
		query.append("                                           , M.VPS_PORT_CD                                  AS PORT_CD" ).append("\n"); 
		query.append("                                           , M.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                           , M.SLAN_CD" ).append("\n"); 
		query.append("                                           , M.YD_CD       " ).append("\n"); 
		query.append("                                           , M.MVS                                         AS TTL_MVS" ).append("\n"); 
		query.append("                                           , M.TOR_POB" ).append("\n"); 
		query.append("								           , M.EXCEPT_POB_FLG" ).append("\n"); 
		query.append("								           , CASE WHEN M.EXCEPT_POB_FLG <> '1' THEN" ).append("\n"); 
		query.append("								                         CASE WHEN NVL(M.PLT_IN_DT, M.VPS_ETA_DT) > M.VPS_ETA_DT AND NVL(M.PLT_IN_DT, M.VPS_ETA_DT) < M.VPS_ETB_DT THEN NVL((M.VPS_ETB_DT  - M.PLT_IN_DT )*24, 0)   " ).append("\n"); 
		query.append("								                              ELSE NVL((M.VPS_ETB_DT  - M.VPS_ETA_DT  )*24, 0)" ).append("\n"); 
		query.append("								                               END    " ).append("\n"); 
		query.append("								                  ELSE      " ).append("\n"); 
		query.append("								                         CASE WHEN NVL(M.TOR_POB, M.VPS_ETA_DT) > M.VPS_ETA_DT AND NVL(M.TOR_POB, M.VPS_ETA_DT) < M.VPS_ETB_DT THEN NVL((M.VPS_ETB_DT  - NVL(M.TOR_POB, M.VPS_ETA_DT) )*24, 0)   " ).append("\n"); 
		query.append("								                              ELSE NVL((M.VPS_ETB_DT  - M.VPS_ETA_DT  )*24, 0)" ).append("\n"); 
		query.append("								                               END    " ).append("\n"); 
		query.append("								                  END AS STEAM_IN_TIME " ).append("\n"); 
		query.append("								            , CASE WHEN NVL(M.TOR_POB, M.VPS_ETA_DT) > M.VPS_ETA_DT AND NVL(M.TOR_POB, M.VPS_ETA_DT) < M.VPS_ETB_DT THEN NVL((M.VPS_ETB_DT  - NVL(M.TOR_POB, M.VPS_ETA_DT) )*24, 0)   " ).append("\n"); 
		query.append("								                              ELSE NVL((M.VPS_ETB_DT  - M.VPS_ETA_DT  )*24, 0)" ).append("\n"); 
		query.append("								              END TOR_STEAM_IN_TIME                                  " ).append("\n"); 
		query.append("                                           , NVL((M.COMMENCE    - M.VPS_ETB_DT  )*24, 0)   AS ARRIVAL_TIME" ).append("\n"); 
		query.append("                                           , NVL((M.COMPLETE    - M.COMMENCE    )*24, 0)   AS OPERATION_TIME" ).append("\n"); 
		query.append("                                           , NVL((M.VPS_ETD_DT  - M.COMPLETE    )*24, 0)   AS DEPARTURE_TIME" ).append("\n"); 
		query.append("                                           , NVL((M.VPS_ETD_DT  - M.VPS_ETA_DT  )*24, 0)   AS PORT_TIME" ).append("\n"); 
		query.append("                                           , CASE WHEN NVL(TO_NUMBER(SUBSTR(M.GROSS_WORK,1,INSTR(M.GROSS_WORK,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_WORK,INSTR(M.GROSS_WORK,':')+1)/60),0) = 0 THEN 0" ).append("\n"); 
		query.append("                                                  ELSE M.MVS / (NVL(TO_NUMBER(SUBSTR(M.GROSS_WORK,1,INSTR(M.GROSS_WORK,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_WORK,INSTR(M.GROSS_WORK,':')+1)/60),0))" ).append("\n"); 
		query.append("                                             END                                             AS GROSS_TML_PROD     /* TOTAL MOVES / GROSS_WORK */     " ).append("\n"); 
		query.append("                                           , CASE WHEN NVL(TO_NUMBER(SUBSTR(M.GROSS_GANG,1,INSTR(M.GROSS_GANG,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_GANG,INSTR(M.GROSS_GANG,':')+1)/60),0) = 0 THEN 0" ).append("\n"); 
		query.append("                                                  ELSE M.MVS / (NVL(TO_NUMBER(SUBSTR(M.GROSS_GANG,1,INSTR(M.GROSS_GANG,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_GANG,INSTR(M.GROSS_GANG,':')+1)/60),0)) " ).append("\n"); 
		query.append("                                             END                                             AS GROSS_CRANE_PROD   /* TOTAL MOVES / GROSS_GANG */" ).append("\n"); 
		query.append("                                           , CASE WHEN NVL(TO_NUMBER(SUBSTR(M.NET_GANG,1,INSTR(M.NET_GANG,':')-1)) + TO_NUMBER(SUBSTR(M.NET_GANG,INSTR(M.NET_GANG,':')+1)/60),0) = 0 THEN 0" ).append("\n"); 
		query.append("                                                  ELSE M.MVS / (NVL(TO_NUMBER(SUBSTR(M.NET_GANG,1,INSTR(M.NET_GANG,':')-1)) + TO_NUMBER(SUBSTR(M.NET_GANG,INSTR(M.NET_GANG,':')+1)/60),0))" ).append("\n"); 
		query.append("                                             END                                             AS NET_CRANE_PROD     /* TOTAL MOVES / NET_GANG   */" ).append("\n"); 
		query.append("                                           , CASE WHEN NVL(TO_NUMBER(SUBSTR(M.GROSS_WORK,1,INSTR(M.GROSS_WORK,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_WORK,INSTR(M.GROSS_WORK,':')+1)/60),0) = 0 THEN 0" ).append("\n"); 
		query.append("                                                  ELSE (NVL(TO_NUMBER(SUBSTR(M.GROSS_GANG,1,INSTR(M.GROSS_GANG,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_GANG,INSTR(M.GROSS_GANG,':')+1)/60),0)) / (NVL(TO_NUMBER(SUBSTR(M.GROSS_WORK,1,INSTR(M.GROSS_WORK,':')-1)) + TO_NUMBER(SUBSTR(M.GROSS_WORK,INSTR(M.GROSS_WORK,':')+1)/60),0))" ).append("\n"); 
		query.append("                                             END                                             AS CRANE_NO           /* GROSS_GANG / GROSS_WORK    */" ).append("\n"); 
		query.append("                                           , M.VPS_ETD_DT                                   AS ACT_DEP_DT" ).append("\n"); 
		query.append("                                           , TO_CHAR(M.COMMENCE, 'YYYY-MM-DD HH24:MI')      AS WORK_COMMENCED" ).append("\n"); 
		query.append("                                           , TO_CHAR(M.COMPLETE, 'YYYY-MM-DD HH24:MI')      AS WORK_COPLETED" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("											, PORT_ACT_CTNT" ).append("\n"); 
		query.append("											, PORT_ACT_COUNT" ).append("\n"); 
		query.append("                                          , CASE WHEN ACT_CTNT1='CHT0001' THEN NULLIF(ACT_COUNT1,'0')" ).append("\n"); 
		query.append("                                                 WHEN ACT_CTNT2='CHT0001' THEN NULLIF(ACT_COUNT2,'0')" ).append("\n"); 
		query.append("                                                 WHEN ACT_CTNT3='CHT0001' THEN NULLIF(ACT_COUNT3,'0')" ).append("\n"); 
		query.append("                                                 ELSE ''" ).append("\n"); 
		query.append("                                            END TWIN_LIFT                " ).append("\n"); 
		query.append("                                          , CASE WHEN ACT_CTNT1='CHT0002' THEN NULLIF(ACT_COUNT1,'0')" ).append("\n"); 
		query.append("                                                 WHEN ACT_CTNT2='CHT0002' THEN NULLIF(ACT_COUNT2,'0')" ).append("\n"); 
		query.append("                                                 WHEN ACT_CTNT3='CHT0002' THEN NULLIF(ACT_COUNT3,'0')" ).append("\n"); 
		query.append("                                                 ELSE ''" ).append("\n"); 
		query.append("                                            END DUAL_CYCLE                " ).append("\n"); 
		query.append("                                          , CASE WHEN ACT_CTNT1='CHT0003' THEN NULLIF(ACT_COUNT1,'0')" ).append("\n"); 
		query.append("                                                 WHEN ACT_CTNT2='CHT0003' THEN NULLIF(ACT_COUNT2,'0')" ).append("\n"); 
		query.append("                                                 WHEN ACT_CTNT3='CHT0003' THEN NULLIF(ACT_COUNT3,'0')" ).append("\n"); 
		query.append("                                                 ELSE ''" ).append("\n"); 
		query.append("                                            END RESTOW " ).append("\n"); 
		query.append("                                           " ).append("\n"); 
		query.append("                                            , EXCEPT_CD" ).append("\n"); 
		query.append("											, UPDATE_SYS" ).append("\n"); 
		query.append("                                            , FULL_D_20" ).append("\n"); 
		query.append("											, FULL_D_40" ).append("\n"); 
		query.append("                                            , ET_D_20  " ).append("\n"); 
		query.append("                                            , ET_D_40 " ).append("\n"); 
		query.append("                                            , FULL_L_20" ).append("\n"); 
		query.append("                                            , FULL_L_40" ).append("\n"); 
		query.append("                                            , ET_L_20 " ).append("\n"); 
		query.append("                                            , ET_L_40" ).append("\n"); 
		query.append("                                            , (SELECT NVL(ROUND((ACT_BRTH_DT - TRSM_LOCL_DT)*24,2), -1) " ).append("\n"); 
		query.append("												 FROM (" ).append("\n"); 
		query.append("                                                        SELECT" ).append("\n"); 
		query.append("                                                        H.VSL_CD," ).append("\n"); 
		query.append("                                                        H.SKD_VOY_NO," ).append("\n"); 
		query.append("                                                        H.SKD_DIR_CD," ).append("\n"); 
		query.append("                                                        H.VPS_PORT_CD," ).append("\n"); 
		query.append("                                                        H.CLPT_IND_SEQ, " ).append("\n"); 
		query.append("                                                        AK.ACT_BRTH_DT," ).append("\n"); 
		query.append("                                                        H.TRSM_LOCL_DT," ).append("\n"); 
		query.append("                                                        ROW_NUMBER() OVER(PARTITION BY " ).append("\n"); 
		query.append("                                                        H.VSL_CD," ).append("\n"); 
		query.append("                                                        H.SKD_VOY_NO," ).append("\n"); 
		query.append("                                                        H.SKD_DIR_CD," ).append("\n"); 
		query.append("                                                        H.VPS_PORT_CD," ).append("\n"); 
		query.append("                                                        H.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                                        ORDER BY H.TRSM_HIS_SEQ DESC) RN" ).append("\n"); 
		query.append("                                                        FROM" ).append("\n"); 
		query.append("                                                        VSK_VSL_PORT_SKD_TRSM_HIS H," ).append("\n"); 
		query.append("                                                        VSK_ACT_PORT_SKD AK" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND H.VSL_CD         = AK.VSL_CD           (+)" ).append("\n"); 
		query.append("                                                        AND H.SKD_VOY_NO     = AK.SKD_VOY_NO       (+)" ).append("\n"); 
		query.append("                                                        AND H.SKD_DIR_CD     = AK.SKD_DIR_CD       (+)" ).append("\n"); 
		query.append("                                                        AND H.VPS_PORT_CD    = AK.VPS_PORT_CD      (+)" ).append("\n"); 
		query.append("                                                        AND H.CLPT_IND_SEQ   = AK.CLPT_IND_SEQ     (+) " ).append("\n"); 
		query.append("                                                        AND H.ACT_CRR_CD    = 'SML'" ).append("\n"); 
		query.append("                                                        AND H.TRSM_PURP_CD	= 'STW'" ).append("\n"); 
		query.append("                                                       )" ).append("\n"); 
		query.append("                                                  WHERE RN = 1 " ).append("\n"); 
		query.append("                                                    AND VSL_CD         = M.VSL_CD" ).append("\n"); 
		query.append("                                                    AND SKD_VOY_NO     = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                    AND SKD_DIR_CD     = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                    AND VPS_PORT_CD    = M.VPS_PORT_CD" ).append("\n"); 
		query.append("                                                    AND CLPT_IND_SEQ   = M.CLPT_IND_SEQ                                               " ).append("\n"); 
		query.append("                                                 ) AS STW_DIF_HRS     -- VSK > Pre stowage plan CHECK" ).append("\n"); 
		query.append("									FROM   (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("									SELECT C.VSL_CD      " ).append("\n"); 
		query.append("                                         , C.SKD_VOY_NO  " ).append("\n"); 
		query.append("                                         , C.SKD_DIR_CD  " ).append("\n"); 
		query.append("                                         , C.VPS_PORT_CD " ).append("\n"); 
		query.append("                                         , C.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                         , C.SLAN_CD     " ).append("\n"); 
		query.append("                                         , C.YD_CD       " ).append("\n"); 
		query.append("                                         , MAX(C.MVS       )    AS MVS   " ).append("\n"); 
		query.append("                                         , MAX(C.VPS_ETA_DT)    AS VPS_ETA_DT" ).append("\n"); 
		query.append("                                         , MAX(C.PLT_IN_DT )    AS PLT_IN_DT  " ).append("\n"); 
		query.append("                                         , MAX(C.VPS_ETB_DT)    AS VPS_ETB_DT" ).append("\n"); 
		query.append("                                         , MAX(C.COMMENCE  )    AS COMMENCE  " ).append("\n"); 
		query.append("                                         , MAX(C.COMPLETE  )    AS COMPLETE  " ).append("\n"); 
		query.append("                                         , MAX(C.VPS_ETD_DT)    AS VPS_ETD_DT" ).append("\n"); 
		query.append("                                         , MAX((SELECT WRK_PERF_DT FROM OPF_PORT_TM_ACT A" ).append("\n"); 
		query.append("								               WHERE C.VSL_CD      = A.VSL_CD" ).append("\n"); 
		query.append("								                AND C.SKD_VOY_NO   = A.SKD_VOY_NO" ).append("\n"); 
		query.append("								                AND C.SKD_DIR_CD   = A.SKD_DIR_CD" ).append("\n"); 
		query.append("								                AND C.VPS_PORT_CD  = A.VPS_PORT_CD" ).append("\n"); 
		query.append("								                AND C.CLPT_IND_SEQ = A.CLPT_IND_SEQ " ).append("\n"); 
		query.append("								                AND A.PORT_ACT_CTNT IN ('PTA0001')   -- TOR POB(Pilot on board)" ).append("\n"); 
		query.append("								           )) TOR_POB" ).append("\n"); 
		query.append("                                         , MAX(C.GROSS_WORK)    AS GROSS_WORK" ).append("\n"); 
		query.append("                                         , MAX(C.GROSS_GANG)    AS GROSS_GANG" ).append("\n"); 
		query.append("                                         , MAX(C.NET_GANG  )    AS NET_GANG  " ).append("\n"); 
		query.append("                                         , MAX(C.PORT_ACT_CTNT) AS PORT_ACT_CTNT" ).append("\n"); 
		query.append("                                         , MAX(C.PORT_ACT_COUNT)AS PORT_ACT_COUNT" ).append("\n"); 
		query.append("                                          , REGEXP_SUBSTR(MAX(C.PORT_ACT_CTNT),'[^,]+',1,1)  AS ACT_CTNT1" ).append("\n"); 
		query.append("                                          , REGEXP_SUBSTR(MAX(C.PORT_ACT_CTNT),'[^,]+',1,2)  AS ACT_CTNT2" ).append("\n"); 
		query.append("                                          , REGEXP_SUBSTR(MAX(C.PORT_ACT_CTNT),'[^,]+',1,3)  AS ACT_CTNT3                      " ).append("\n"); 
		query.append("                                          , REGEXP_SUBSTR(MAX(C.PORT_ACT_COUNT),'[^,]+',1,1) AS ACT_COUNT1 " ).append("\n"); 
		query.append("                                          , REGEXP_SUBSTR(MAX(C.PORT_ACT_COUNT),'[^,]+',1,2) AS ACT_COUNT2 " ).append("\n"); 
		query.append("                                          , REGEXP_SUBSTR(MAX(C.PORT_ACT_COUNT),'[^,]+',1,3) AS ACT_COUNT3" ).append("\n"); 
		query.append("                                         , MAX(C.EXCEPT_CD)     AS EXCEPT_CD" ).append("\n"); 
		query.append("                                         , MAX(C.EXCEPT_POB_FLG)     AS EXCEPT_POB_FLG" ).append("\n"); 
		query.append("                                         , MAX(C.UPDATE_SYS)    AS UPDATE_SYS                                         " ).append("\n"); 
		query.append("                                        , MAX(C.FULL_D_20) AS FULL_D_20" ).append("\n"); 
		query.append("                                        , MAX(C.FULL_D_40) AS FULL_D_40" ).append("\n"); 
		query.append("                                        , MAX(C.ET_D_20  ) AS ET_D_20  " ).append("\n"); 
		query.append("                                        , MAX(C.ET_D_40  ) AS ET_D_40  " ).append("\n"); 
		query.append("                                        , MAX(C.FULL_L_20) AS FULL_L_20" ).append("\n"); 
		query.append("                                        , MAX(C.FULL_L_40) AS FULL_L_40" ).append("\n"); 
		query.append("                                        , MAX(C.ET_L_20  ) AS ET_L_20  " ).append("\n"); 
		query.append("                                        , MAX(C.ET_L_40  ) AS ET_L_40    " ).append("\n"); 
		query.append("									    FROM (" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("											SELECT " ).append("\n"); 
		query.append("    									               WM_CONCAT(B2.PORT_ACT_CTNT) OVER(PARTITION BY   B.VSL_CD " ).append("\n"); 
		query.append("    									                                                        ,B.SKD_VOY_NO  " ).append("\n"); 
		query.append("                                                                                                ,B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                                                                                                ,B.VPS_PORT_CD " ).append("\n"); 
		query.append("                                                                                                ,B.CLPT_IND_SEQ									                " ).append("\n"); 
		query.append("									                                                       ) PORT_ACT_CTNT" ).append("\n"); 
		query.append("                                                      ,WM_CONCAT(B2.CNTR_HNDL_KNT) OVER(PARTITION BY   B.VSL_CD      " ).append("\n"); 
		query.append("                                                                                                ,B.SKD_VOY_NO  " ).append("\n"); 
		query.append("                                                                                                ,B.SKD_DIR_CD  " ).append("\n"); 
		query.append("                                                                                                ,B.VPS_PORT_CD " ).append("\n"); 
		query.append("                                                                                                ,B.CLPT_IND_SEQ	" ).append("\n"); 
		query.append("                                                                                            ) PORT_ACT_COUNT                                " ).append("\n"); 
		query.append("                                                       ,B.*                                                       " ).append("\n"); 
		query.append("    	       								FROM (			" ).append("\n"); 
		query.append("                                              SELECT " ).append("\n"); 
		query.append("                                                     T2.VSL_CD        		AS VSL_CD" ).append("\n"); 
		query.append("                                                   , T2.SKD_VOY_NO    		AS SKD_VOY_NO" ).append("\n"); 
		query.append("                                                   , T2.SKD_DIR_CD    		AS SKD_DIR_CD" ).append("\n"); 
		query.append("                                                   , T2.VPS_PORT_CD   		AS VPS_PORT_CD" ).append("\n"); 
		query.append("                                                   , T2.CLPT_IND_SEQ  		AS CLPT_IND_SEQ " ).append("\n"); 
		query.append("                                                   , T2.SLAN_CD       		AS SLAN_CD" ).append("\n"); 
		query.append("                                                   , T2.YD_CD         		AS YD_CD" ).append("\n"); 
		query.append("                                                   , MAX(T1.MVS       )    AS MVS   " ).append("\n"); 
		query.append("                                                   , MAX(T2.VPS_ETA_DT)    AS VPS_ETA_DT" ).append("\n"); 
		query.append("                                                   , MAX(T4.PLT_IN_DT )    AS PLT_IN_DT  " ).append("\n"); 
		query.append("                                                   , MAX(T2.VPS_ETB_DT)    AS VPS_ETB_DT" ).append("\n"); 
		query.append("                                                   , MAX(T1.COMMENCE  )    AS COMMENCE  " ).append("\n"); 
		query.append("                                                   , MAX(T1.COMPLETE  )    AS COMPLETE  " ).append("\n"); 
		query.append("                                                   , MAX(T2.VPS_ETD_DT)    AS VPS_ETD_DT" ).append("\n"); 
		query.append("                                                   , MAX(T1.GROSS_WORK)    AS GROSS_WORK" ).append("\n"); 
		query.append("                                                   , MAX(T1.GROSS_GANG)    AS GROSS_GANG" ).append("\n"); 
		query.append("                                                   , MAX(T1.NET_GANG  )    AS NET_GANG                                                    " ).append("\n"); 
		query.append("												   , MAX(DECODE(NVL(T1.EXCEPT_CD,'N'), 'Y', 1, 0)) AS EXCEPT_CD" ).append("\n"); 
		query.append("												   , MAX(DECODE(NVL(T1.EXCEPT_POB_FLG,'N'), 'Y', 1, 0)) AS EXCEPT_POB_FLG" ).append("\n"); 
		query.append("                                                   , MAX(T1.UPDATE_SYS)    AS UPDATE_SYS" ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0))) FULL_D_20  --DS+DT" ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0))) FULL_D_40" ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0), 0)) ET_D_20" ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'DS', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'DT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0), 0)) ET_D_40" ).append("\n"); 
		query.append("                                                      " ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'LM', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'OT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) +" ).append("\n"); 
		query.append("                                                                                  DECODE(S.STATUS, 'LI', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'LT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0))) FULL_L_20  --LM+OT+LI+LT" ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', NULL, DECODE(S.STATUS, 'LM', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'OT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) +" ).append("\n"); 
		query.append("                                                                                  DECODE(S.STATUS, 'LI', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'LT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0))) FULL_L_40" ).append("\n"); 
		query.append("                                                                                " ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'LM', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'OT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) +" ).append("\n"); 
		query.append("                                                                                  DECODE(S.STATUS, 'LI', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'LT', DECODE(S.CNTR_SIZE, '2', DECODE(QTY,NULL,0, QTY), 0),0), 0)) ET_L_20 " ).append("\n"); 
		query.append("                                                    , SUM(DECODE(S.CNTR_TYPE, 'E', DECODE(S.STATUS, 'LM', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'OT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) +" ).append("\n"); 
		query.append("                                                                                  DECODE(S.STATUS, 'LI', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0) + DECODE(S.STATUS, 'LT', DECODE(S.CNTR_SIZE, '4', DECODE(QTY,NULL,0, QTY), 0),0), 0)) ET_L_40" ).append("\n"); 
		query.append("			                                FROM     TDR_HEADER       T1" ).append("\n"); 
		query.append("			                                       , VSK_VSL_PORT_SKD T2" ).append("\n"); 
		query.append("			                                       , VSK_VSL_SKD      T3" ).append("\n"); 
		query.append("												   , FCM_DEP_RPT      T4" ).append("\n"); 
		query.append("												   , TDR_SUMMARY      S" ).append("\n"); 
		query.append("			                                WHERE     1 = 1" ).append("\n"); 
		query.append("			                                AND     T1.VSL_CD            = T2.VSL_CD" ).append("\n"); 
		query.append("			                                AND     T1.VOY_NO            = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("			                                AND     T1.DIR_CD            = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("			                                AND     T1.PORT_CD           = T2.VPS_PORT_CD" ).append("\n"); 
		query.append("			                                AND     T1.CALL_IND          = T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("			                                AND     T2.VSL_CD            = T3.VSL_CD" ).append("\n"); 
		query.append("			                                AND     T2.SKD_VOY_NO        = T3.SKD_VOY_NO" ).append("\n"); 
		query.append("			                                AND     T2.SKD_DIR_CD        = T3.SKD_DIR_CD  " ).append("\n"); 
		query.append("			                                AND     T2.SLAN_CD           = T3.VSL_SLAN_CD" ).append("\n"); 
		query.append("			        						AND     T1.VSL_CD            = T4.VSL_CD(+)" ).append("\n"); 
		query.append("											AND     T1.VOY_NO            = T4.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("											AND     T1.DIR_CD            = T4.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("											AND     T1.PORT_CD           = T4.DEP_PORT_CD(+)" ).append("\n"); 
		query.append("											AND     T1.CALL_IND          = T4.CLPT_IND_SEQ(+)" ).append("\n"); 
		query.append("											AND   	T1.VSL_CD      		 = S.VSL_CD" ).append("\n"); 
		query.append("											AND   	T1.VOY_NO      		 = S.VOY_NO" ).append("\n"); 
		query.append("			                                AND   	T1.DIR_CD      		 = S.DIR_CD" ).append("\n"); 
		query.append("			                                AND   	T1.PORT_CD     		 = S.PORT_CD" ).append("\n"); 
		query.append("			                                AND   	T1.CALL_IND    		 = S.CALL_IND " ).append("\n"); 
		query.append("			                                AND     T2.PORT_SKD_STS_CD   = 'D'" ).append("\n"); 
		query.append("			                                AND     T2.TURN_PORT_IND_CD IN ('Y','N')" ).append("\n"); 
		query.append("			                                AND     NVL(T2.SKD_CNG_STS_CD, ' ') <> 'S'" ).append("\n"); 
		query.append("			                                AND     T2.VPS_PORT_CD      NOT IN ('PAPAC','EGSUZ')" ).append("\n"); 
		query.append("			                                AND     T2.VPS_ETD_DT       BETWEEN TO_DATE(REPLACE(@[fr_dt], '-', '')||'000000', 'YYYYMMDDHH24MISS') " ).append("\n"); 
		query.append("			                                                            AND     TO_DATE(REPLACE(@[to_dt], '-', '')||'235959', 'YYYYMMDDHH24MISS')" ).append("\n"); 
		query.append("			                                AND     T3.ACT_CRR_CD = 'SML'" ).append("\n"); 
		query.append("											AND   	S.STATUS   IN ('DS','DT','LM','OT','LI','LT')" ).append("\n"); 
		query.append("											AND    ((T1.UPDATE_SYS = 'N' AND S.CNTR_TYPE NOT IN ('D', 'R', 'A')) OR T1.UPDATE_SYS = 'I')   --ALPS(N): D,R,A 포함하지 않고 F/E CNTR COUNT계산, ISTOWG(I): D,R,A 포함하여  CNTR COUNT계산" ).append("\n"); 
		query.append("			#if (${gubun} == 'KPI')" ).append("\n"); 
		query.append("			                                AND      1 = 2        -- KPI가 입력될 경우 실적 정보는 조회될 필요가 없다." ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if(${slan_cd} != '')" ).append("\n"); 
		query.append("			                                AND     SLAN_CD             = @[slan_cd]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			#if(${port_cd} != '')" ).append("\n"); 
		query.append("			                                AND     T2.VPS_PORT_CD      = @[port_cd]" ).append("\n"); 
		query.append("			#end" ).append("\n"); 
		query.append("			                                            GROUP BY                               " ).append("\n"); 
		query.append("			                                              T2.VSL_CD      " ).append("\n"); 
		query.append("			                                            , T2.SKD_VOY_NO  " ).append("\n"); 
		query.append("			                                            , T2.SKD_DIR_CD  " ).append("\n"); 
		query.append("			                                            , T2.VPS_PORT_CD " ).append("\n"); 
		query.append("			                                            , T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("			                                            , T2.SLAN_CD     " ).append("\n"); 
		query.append("			                                            , T2.YD_CD " ).append("\n"); 
		query.append("        			                        ) B LEFT OUTER JOIN" ).append("\n"); 
		query.append("        			                          OPF_PORT_TM_ACT B2" ).append("\n"); 
		query.append("        			                             ON B2.VSL_CD       = B.VSL_CD" ).append("\n"); 
		query.append("                                                AND B2.SKD_VOY_NO   = B.SKD_VOY_NO" ).append("\n"); 
		query.append("                                                AND B2.SKD_DIR_CD   = B.SKD_DIR_CD" ).append("\n"); 
		query.append("                                                AND B2.VPS_PORT_CD  = B.VPS_PORT_CD" ).append("\n"); 
		query.append("                                                AND B2.CLPT_IND_SEQ = B.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                                AND B2.PORT_ACT_CTNT IN ('CHT0001','CHT0002','CHT0003')  -- TWIN_LIFT, DUAL_CYCLE, RESTOW" ).append("\n"); 
		query.append("                                         ) C " ).append("\n"); 
		query.append("                                         GROUP BY         C.VSL_CD      " ).append("\n"); 
		query.append("			                                            , C.SKD_VOY_NO  " ).append("\n"); 
		query.append("			                                            , C.SKD_DIR_CD  " ).append("\n"); 
		query.append("			                                            , C.VPS_PORT_CD " ).append("\n"); 
		query.append("			                                            , C.CLPT_IND_SEQ" ).append("\n"); 
		query.append("			                                            , C.SLAN_CD     " ).append("\n"); 
		query.append("			                                            , C.YD_CD      " ).append("\n"); 
		query.append("			                           ) M" ).append("\n"); 
		query.append("                                )   T11" ).append("\n"); 
		query.append("                              , KPI" ).append("\n"); 
		query.append("                        WHERE   1 = 1" ).append("\n"); 
		query.append("                        AND     KPI.SLAN_CD     = T11.SLAN_CD" ).append("\n"); 
		query.append("                        AND     KPI.VPS_PORT_CD = T11.PORT_CD" ).append("\n"); 
		query.append("#if(${rhq_ofc_cd} != '')" ).append("\n"); 
		query.append("                        AND     KPI.RHQ         = @[rhq_ofc_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        AND     CASE WHEN KPI.PORT_KPI_DIR_CD = 'A' THEN T11.SKD_DIR_CD" ).append("\n"); 
		query.append("                                     ELSE KPI.PORT_KPI_DIR_CD " ).append("\n"); 
		query.append("                                END                 = T11.SKD_DIR_CD" ).append("\n"); 
		query.append("                        AND     KPI.CLPT_IND_SEQ    = T11.CLPT_IND_SEQ" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        AND     KPI.VSL_CD      = T11.VSL_CD" ).append("\n"); 
		query.append("                        AND     KPI.SKD_VOY_NO  = T11.SKD_VOY_NO" ).append("\n"); 
		query.append("                        AND     KPI.SKD_DIR_CD  = T11.SKD_DIR_CD" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        --::JSK::--GROUP BY GROUPING SETS( (KPI.RHQ, KPI.VPS_PORT_CD, YD_CD, KPI.SLAN_CD, VVD_CD, ACT_DEP_DT, WORK_COMMENCED, WORK_COPLETED), (KPI.RHQ, KPI.VPS_PORT_CD, YD_CD, KPI.SLAN_CD), ())" ).append("\n"); 
		query.append("      GROUP BY GROUPING SETS( (KPI.RHQ, KPI.VPS_PORT_CD, KPI.PORT_KPI_DIR_CD, KPI.CLPT_IND_SEQ, T11.YD_CD, KPI.SLAN_CD, VVD_CD, ACT_DEP_DT, WORK_COMMENCED, WORK_COPLETED), (KPI.RHQ, KPI.VPS_PORT_CD, KPI.PORT_KPI_DIR_CD, KPI.CLPT_IND_SEQ, T11.YD_CD, KPI.SLAN_CD), ())" ).append("\n"); 
		query.append("                        )   T21, " ).append("\n"); 
		query.append("                        (" ).append("\n"); 
		query.append("                        SELECT    NO" ).append("\n"); 
		query.append("                                , KPI_TGT_YR        , SLAN_CD           , VPS_PORT_CD        , KPI_VER_SEQ" ).append("\n"); 
		query.append("                                , FM_EFF_DT         , TO_EFF_DT         , TTL_CNTR_MV_KNT    , STM_IN_HRS" ).append("\n"); 
		query.append("                                , VSL_ARR_HRS       , ROUND(MVS/GRS_TML_PROD_HRS,1)  AS TML_OP_HRS    " ).append("\n"); 
		query.append("								, VSL_DEP_HRS       , STM_OUT_HRS" ).append("\n"); 
		query.append("                                , PORT_STAY_HRS     , GRS_TML_PROD_HRS  , GRS_CRN_PROD_HRS   , NET_CRN_PROD_HRS" ).append("\n"); 
		query.append("                                , TWN_LFT_HRS       , DUL_CYC_HRS       , RSTWG_HRS          , RHQ" ).append("\n"); 
		query.append("                                , PORT_KPI_DIR_CD   , CLPT_IND_SEQ   " ).append("\n"); 
		query.append("                                , VSL_CD           " ).append("\n"); 
		query.append("                                , SKD_VOY_NO" ).append("\n"); 
		query.append("                                , SKD_DIR_CD" ).append("\n"); 
		query.append("                                , MVS    " ).append("\n"); 
		query.append("                                , YD_CD" ).append("\n"); 
		query.append("                                , COMMENCE                                 " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        FROM      KPI" ).append("\n"); 
		query.append("        , (SELECT LEVEL AS NO FROM DUAL CONNECT BY LEVEL <=2)" ).append("\n"); 
		query.append("		   ORDER BY KPI.RHQ, KPI.VPS_PORT_CD, KPI.PORT_KPI_DIR_CD, KPI.CLPT_IND_SEQ, KPI.SLAN_CD, KPI.YD_CD, KPI.COMMENCE, NO, VSL_CD ,SKD_VOY_NO ,SKD_DIR_CD" ).append("\n"); 
		query.append("                        )   KPI" ).append("\n"); 
		query.append("                WHERE   1 = 1" ).append("\n"); 
		query.append("                AND     KPI.NO               = T21.NO        (+)" ).append("\n"); 
		query.append("                AND     KPI.SLAN_CD          = T21.SLAN_CD      (+)" ).append("\n"); 
		query.append("                AND     KPI.VPS_PORT_CD      = T21.VPS_PORT_CD  (+)" ).append("\n"); 
		query.append("                AND     KPI.PORT_KPI_DIR_CD  = T21.PORT_KPI_DIR_CD  (+)" ).append("\n"); 
		query.append("                AND     KPI.CLPT_IND_SEQ     = T21.CLPT_IND_SEQ     (+)   " ).append("\n"); 
		query.append("                AND     KPI.VSL_CD      	 = T21.VSL_CD(+)  " ).append("\n"); 
		query.append("                AND     KPI.SKD_VOY_NO  	 = T21.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("                AND     KPI.SKD_DIR_CD  	 = T21.SKD_DIR_CD(+) " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("WHERE   1=1" ).append("\n"); 
		query.append("#if(${gubun} == 'KPI' || ${gubun} == 'BASE')" ).append("\n"); 
		query.append("AND     NO = 1" ).append("\n"); 
		query.append("#elseif(${gubun} == 'PFMC')" ).append("\n"); 
		query.append("AND     NO = 2" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND     1 = CASE WHEN (NO = 2 AND VVD_CD IS NULL) THEN 0 ELSE 1 END" ).append("\n"); 
		query.append("ORDER BY ROW_SEQ" ).append("\n"); 

	}
}