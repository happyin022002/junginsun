<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOSearchCstSkdByPfSkdSimRSQL">
			<desc><![CDATA[Proforma Schedule 을 조회합니다.

History
2012.10.24 CHM-201220527-01 진마리아 Departure/Noon Report 데이터를 FCM 데이터와 I/F하도록 변경 요청]]></desc>
			<sql><![CDATA[
SELECT @[vsl_cd] AS VSL_CD
       , @[skd_voy_no] AS SKD_VOY_NO
       , SKD_DIR_CD
       , @[vsl_cd] || @[skd_voy_no] || SKD_DIR_CD AS VVD
       , T2.VSL_SLAN_CD
       , 'ACT' AS SKD_STS_CD
       , '' AS SKD_VOY_TP_CD
	   , '' AS SKD_USD_IND_CD
       , T2.PF_SVC_TP_CD AS PF_SKD_TP_CD
	   , (
	       SELECT  PORT_CD 
	       FROM    VSK_PF_SKD_DTL 
	       WHERE   VSL_SLAN_CD     = @[vsl_slan_cd]
           AND     PF_SVC_TP_CD    = @[pf_svc_tp_cd]
           AND     SKD_DIR_CD      = T2.SKD_DIR_CD
           AND     PORT_ROTN_SEQ   = (
                                        SELECT  MIN(PORT_ROTN_SEQ)
                                        FROM    VSK_PF_SKD_DTL 
                                        WHERE   VSL_SLAN_CD     = @[vsl_slan_cd]
                                        AND     PF_SVC_TP_CD    = @[pf_svc_tp_cd]
                                        AND     SKD_DIR_CD      = T2.SKD_DIR_CD
                                     )
	     ) AS ST_PORT_CD
	   , '' AS N1ST_PORT_BRTH_DT
       , '' AS PSDO_VVD_CD
       , '' AS CO_CD
       , '' AS SKD_RMK
       , '' AS CRE_USR_ID
       , '' AS CRE_DT
       , '' AS UPD_USR_ID
       , '' AS UPD_DT
       , T2.PORT_CD AS VPS_PORT_CD
       , '' AS CLPT_IND_SEQ
       , '' AS CLPT_SEQ
	   , T2.VSL_SLAN_CD AS SLAN_CD
       , '' AS PORT_SKD_STS_CD
       , YD_CD
       , DECODE(YD_CD, NULL, '', SUBSTR(YD_CD, 6, 2)) AS TML_CD
       , '' AS CALL_YD_IND_SEQ
#if (${pf_etb_dt} != '') 
       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(@[pf_etb_dt], 1, 8), 'YYYYMMDD') + (ETB_DY_NO - FIRST_VALUE(ETB_DY_NO) OVER (ORDER BY PORT_ROTN_SEQ)), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI') - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS PF_ETA_DT
       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(@[pf_etb_dt], 1, 8), 'YYYYMMDD') + (ETB_DY_NO - FIRST_VALUE(ETB_DY_NO) OVER (ORDER BY PORT_ROTN_SEQ)), 'YYYYMMDD') || ETB_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS PF_ETB_DT
       , TO_CHAR(TO_DATE(TO_CHAR(TO_DATE(SUBSTR(@[pf_etb_dt], 1, 8), 'YYYYMMDD') + (ETB_DY_NO - FIRST_VALUE(ETB_DY_NO) OVER (ORDER BY PORT_ROTN_SEQ)), 'YYYYMMDD') || ETD_TM_HRMNT, 'YYYYMMDD HH24:MI'), 'YYYYMMDDHH24MI') AS PF_ETD_DT
#else 
       , '' AS PF_ETA_DT
       , '' AS PF_ETB_DT
       , '' AS PF_ETD_DT
#end
       , TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS INIT_ETA_DT
       , TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS INIT_ETB_DT
       , TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETD_DY_NO, 'YYYYMMDD') || T2.ETD_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS INIT_ETD_DT
       , TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(MNVR_IN_HRS,'HOUR'), 'YYYYMMDDHH24MI') AS VPS_ETA_DT
       , TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS VPS_ETB_DT
       , TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETD_DY_NO, 'YYYYMMDD') || T2.ETD_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')), 'YYYYMMDDHH24MI') AS VPS_ETD_DT
       , '' AS VSL_DLAY_RSN_CD
       , '' AS VSL_DLAY_RSN_DESC
       , '' AS VSL_DLAY_RSN_LOC_CD
       , '' AS SHP_CALL_NO
       , '' AS SHP_CALL_NO_UPD_USR_ID
       , TURN_PORT_FLG
       , TURN_PORT_FLG AS TURN_PORT_IND_CD
       , LNK_DIST
       , LNK_SPD
       , TZTM_HRS
       , MNVR_IN_HRS
       , MNVR_OUT_HRS
       , CRN_KNT
       , TML_PROD_QTY
       , ACT_WRK_HRS
       , NVL(PORT_BUF_HRS, 0) AS PORT_BUF_HRS
       , NVL(SEA_BUF_HRS, 0) AS SEA_BUF_HRS
       , PORT_ROTN_SEQ
       , ETB_DY_CD
       , ETB_DY_NO
       , ETB_TM_HRMNT
       , ETD_DY_CD
       , ETD_DY_NO
       , ETD_TM_HRMNT
       , LNK_SPD AS PF_SPD
       , SEA_BUF_SPD
       , IB_IPCGO_QTY
       , IB_OCN_CGO_QTY
       , OB_IPCGO_QTY
       , OB_OCN_CGO_QTY
       , T2.PF_SVC_TP_CD
       , (
			SELECT  ROUND((FOC_HR / POWER(SPD_P, 3)) * POWER((T2.LNK_SPD / (1 - (SLIP / 100))), 3) * 24, 1)
			FROM    (
						SELECT  T11.*,
								ROUND(((SPD_P - SPD_O)/SPD_P) * 100, 1)   AS SLIP,
								ROUND(BUNK_CONS / (DIST_O / SPD_O), 2)  AS FOC_HR
						FROM    (
									SELECT  /*+INDEX_DESC(T XPKVSK_NOON_RPT) */
											NXT_PORT_CD     AS NXT_PORT_CD,
											NXT_PORT_ETA_DT AS NXT_PORT_ETA_DT,
											NVGT_ML_DIST       AS DIST_O,
											ENG_ML_DIST     AS DIST_P,
											SAIL_AVG_SPD    AS SPD_O,
											ROUND(ENG_ML_DIST / (NVGT_ML_DIST / SAIL_AVG_SPD),1) AS SPD_P,
											ROUND(VSK_REMOVE_NONE_NUMERIC_FNC(MN_FOIL_CSM_QTY))    AS BUNK_CONS
									FROM    FCM_NOON_RPT T
									WHERE   VSL_CD      = @[vsl_cd]
									AND     ROWNUM      = 1
								) T11
					)
        ) AS BNK_UNIT_QTY
       , (
            SELECT  ACT_PRC
            FROM    VSK_BNK_PRC T11,
                    (
                        SELECT  MAX(TO_CHAR(VPS_ETB_DT, 'YYYYMMDD') || DEP_PORT_CD ) CURR_PORT
                        FROM    FCM_DEP_RPT
                        WHERE   VSL_CD          = @[vsl_cd]
                        AND     VSK_REMOVE_NONE_NUMERIC_FNC(NVL(SPL_FOIL_ACT_WGT,0)) > 0
                    )
            WHERE   1 = 1
            AND     PORT_CD             = SUBSTR(CURR_PORT, 9)
            AND     FOIL_DOIL_DIV_CD    = 'F'
            AND     EVNT_DT             = TO_DATE(SUBSTR(CURR_PORT, 1, 8), 'YYYYMMDD')
        ) AS BNK_UNIT_AMT
       , (
            SELECT  SUM(TTL_CHG_AMT)
			FROM    PSO_VSL_CLSS_TRF
			WHERE   BSE_YR      = TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(T2.MNVR_IN_HRS,'HOUR'), 'YYYY')
			AND     BSE_QTR_CD  = TO_CHAR(T1.START_DATE + (TO_DATE(TO_CHAR(SYSDATE + T2.ETB_DY_NO, 'YYYYMMDD') || T2.ETB_TM_HRMNT, 'YYYYMMDDHH24MI') - TO_DATE(TO_CHAR(SYSDATE + T1.CUR_ETB_DY_NO, 'YYYYMMDD') || T1.CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')) - NUMTODSINTERVAL(T2.MNVR_IN_HRS,'HOUR'), 'Q') || 'Q'
			AND     YD_CD       = T2.YD_CD
			AND     CNTR_VSL_CLSS_CAPA = 
			        (
			            SELECT  CNTR_VSL_CLSS_CAPA
			            FROM    MDM_VSL_CNTR
			            WHERE   VSL_CD      = @[vsl_cd]
			            AND     DELT_FLG    = 'N'
			        )
        ) AS PE_USD_TTL_AMT
FROM	(	/* FROM - TO 에 의해 START DATE를 생성한다. */
			SELECT	VSL_SLAN_CD, PF_SVC_TP_CD, CUR_PORT_ROTN_SEQ
					, TO_DATE(@[vps_etd_dt], 'YYYYMMDDHH24MI') +
						(TO_DATE(TO_CHAR(SYSDATE + CUR_ETB_DY_NO, 'YYYYMMDD') || CUR_ETB_TM_HRMNT, 'YYYYMMDDHH24MI')
						- TO_DATE(TO_CHAR(SYSDATE + ETD_DY_NO, 'YYYYMMDD') || ETD_TM_HRMNT, 'YYYYMMDDHH24MI')) AS START_DATE
					, CUR_ETB_DY_NO, CUR_ETB_TM_HRMNT
			FROM	(
						SELECT	/* Phase Out Port에 ETD와 Next Port에 ETB 를 조회한다. */
								ROW_NUMBER() OVER (ORDER BY PORT_ROTN_SEQ) AS NO
								, PORT_ROTN_SEQ, ETB_DY_NO, ETB_TM_HRMNT, ETD_DY_NO, ETD_TM_HRMNT
								, LAST_VALUE(ETB_DY_NO		) OVER ( ) AS CUR_ETB_DY_NO
								, LAST_VALUE(ETB_TM_HRMNT	) OVER ( ) AS CUR_ETB_TM_HRMNT
								, LAST_VALUE(PORT_ROTN_SEQ	) OVER ( ) AS CUR_PORT_ROTN_SEQ
								, VSL_SLAN_CD, PF_SVC_TP_CD
						FROM	VSK_PF_SKD_DTL T1
						WHERE	PORT_ROTN_SEQ	>= (	/* Phase Out Cancel된 Port Seq를 조회한다. */
										SELECT	S.PORT_ROTN_SEQ
										FROM	VSK_PF_SKD_DTL S
										WHERE 	S.VSL_SLAN_CD	= T1.VSL_SLAN_CD
										AND		S.PF_SVC_TP_CD	= T1.PF_SVC_TP_CD
										AND		S.SKD_DIR_CD	= @[skd_dir_cd]
										AND		S.PORT_CD		= @[vps_port_cd]
								)
						AND		T1.VSL_SLAN_CD		= @[vsl_slan_cd]
						AND		T1.PF_SVC_TP_CD		= @[pf_svc_tp_cd]
						AND		T1.TURN_PORT_IND_CD	!= 'F'
						AND		ROWNUM				<= 2
					)
			WHERE	NO	= 1					
		) T1, VSK_PF_SKD_DTL T2
WHERE	1					= 1
AND		T1.VSL_SLAN_CD		= T2.VSL_SLAN_CD
AND		T1.PF_SVC_TP_CD		= T2.PF_SVC_TP_CD
AND		T2.PORT_ROTN_SEQ	>= CUR_PORT_ROTN_SEQ
AND		T2.TURN_PORT_IND_CD != 'F'
ORDER BY T2.PORT_ROTN_SEQ			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="vsl_slan_cd" type="12" value="" out="N"/>
				<param name="pf_svc_tp_cd" type="12" value="" out="N"/>
				<param name="pf_etb_dt" type="12" value="" out="N"/>
				<param name="vps_etd_dt" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
