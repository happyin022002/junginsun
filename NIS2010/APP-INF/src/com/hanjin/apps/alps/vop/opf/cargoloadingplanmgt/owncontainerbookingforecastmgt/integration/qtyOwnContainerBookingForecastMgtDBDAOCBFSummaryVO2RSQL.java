/*=========================================================
*Copyright(c) 2010 CyberLogitec
*@FileName : qtyOwnContainerBookingForecastMgtDBDAOCBFSummaryVO2RSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2010.01.19
*@LastModifier : 김현욱
*@LastVersion : 1.0
* 2010.01.19 김현욱
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.opf.cargoloadingplanmgt.owncontainerbookingforecastmgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author Kim Hyun Uk
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class qtyOwnContainerBookingForecastMgtDBDAOCBFSummaryVO2RSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * searchCBF Summary Volume/Weight
	  * </pre>
	  */
	public qtyOwnContainerBookingForecastMgtDBDAOCBFSummaryVO2RSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("stwg_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("awk_cgo_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dcgo_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bb_cgo_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("rc_flg",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("mlb_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("yd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("pod_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qty1",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qty3",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_voy_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qty2",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qty5",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("qty4",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.opf.cargoloadingplanmgt.owncontainerbookingforecastmgt.integration").append("\n"); 
		query.append("FileName : qtyOwnContainerBookingForecastMgtDBDAOCBFSummaryVO2RSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT POD," ).append("\n"); 
		query.append("MLB," ).append("\n"); 
		query.append("FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("#if (${qty1} != '')" ).append("\n"); 
		query.append("OPR1," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR1_QTY_2/1000,DECODE(FM,'Grand Weight',OPR1_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR1_QTY_2/1000,'Total Weight',OPR1_QTY_2/1000,OPR1_QTY_2)))    OPR1_QTY_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR1_QTY_2H/1000,DECODE(FM,'Grand Weight',OPR1_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR1_QTY_2H/1000,'Total Weight',OPR1_QTY_2H/1000,OPR1_QTY_2H))) OPR1_QTY_2H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR1_QTY_4/1000,DECODE(FM,'Grand Weight',OPR1_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR1_QTY_4/1000,'Total Weight',OPR1_QTY_4/1000,OPR1_QTY_4)))    OPR1_QTY_4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR1_QTY_4H/1000,DECODE(FM,'Grand Weight',OPR1_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR1_QTY_4H/1000,'Total Weight',OPR1_QTY_4H/1000,OPR1_QTY_4H))) OPR1_QTY_4H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR1_QTY_45/1000,DECODE(FM,'Grand Weight',OPR1_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR1_QTY_45/1000,'Total Weight',OPR1_QTY_45/1000,OPR1_QTY_45))) OPR1_QTY_45," ).append("\n"); 
		query.append("OPR1_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty2} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR2_QTY_2/1000,DECODE(FM,'Grand Weight',OPR2_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR2_QTY_2/1000,'Total Weight',OPR2_QTY_2/1000,OPR2_QTY_2)))    OPR2_QTY_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR2_QTY_2H/1000,DECODE(FM,'Grand Weight',OPR2_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR2_QTY_2H/1000,'Total Weight',OPR2_QTY_2H/1000,OPR2_QTY_2H))) OPR2_QTY_2H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR2_QTY_4/1000,DECODE(FM,'Grand Weight',OPR2_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR2_QTY_4/1000,'Total Weight',OPR2_QTY_4/1000,OPR2_QTY_4)))    OPR2_QTY_4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR2_QTY_4H/1000,DECODE(FM,'Grand Weight',OPR2_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR2_QTY_4H/1000,'Total Weight',OPR2_QTY_4H/1000,OPR2_QTY_4H))) OPR2_QTY_4H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR2_QTY_45/1000,DECODE(FM,'Grand Weight',OPR2_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR2_QTY_45/1000,'Total Weight',OPR2_QTY_45/1000,OPR2_QTY_45))) OPR2_QTY_45," ).append("\n"); 
		query.append("OPR2_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty3} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR3," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR3_QTY_2/1000,DECODE(FM,'Grand Weight',OPR3_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR3_QTY_2/1000,'Total Weight',OPR3_QTY_2/1000,OPR3_QTY_2)))    OPR3_QTY_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR3_QTY_2H/1000,DECODE(FM,'Grand Weight',OPR3_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR3_QTY_2H/1000,'Total Weight',OPR3_QTY_2H/1000,OPR3_QTY_2H))) OPR3_QTY_2H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR3_QTY_4/1000,DECODE(FM,'Grand Weight',OPR3_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR3_QTY_4/1000,'Total Weight',OPR3_QTY_4/1000,OPR3_QTY_4)))    OPR3_QTY_4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR3_QTY_4H/1000,DECODE(FM,'Grand Weight',OPR3_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR3_QTY_4H/1000,'Total Weight',OPR3_QTY_4H/1000,OPR3_QTY_4H))) OPR3_QTY_4H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR3_QTY_45/1000,DECODE(FM,'Grand Weight',OPR3_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR3_QTY_45/1000,'Total Weight',OPR3_QTY_45/1000,OPR3_QTY_45))) OPR3_QTY_45," ).append("\n"); 
		query.append("OPR3_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty4} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR4_QTY_2/1000,DECODE(FM,'Grand Weight',OPR4_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR4_QTY_2/1000,'Total Weight',OPR4_QTY_2/1000,OPR4_QTY_2)))    OPR4_QTY_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR4_QTY_2H/1000,DECODE(FM,'Grand Weight',OPR4_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR4_QTY_2H/1000,'Total Weight',OPR4_QTY_2H/1000,OPR4_QTY_2H))) OPR4_QTY_2H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR4_QTY_4/1000,DECODE(FM,'Grand Weight',OPR4_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR4_QTY_4/1000,'Total Weight',OPR4_QTY_4/1000,OPR4_QTY_4)))    OPR4_QTY_4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR4_QTY_4H/1000,DECODE(FM,'Grand Weight',OPR4_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR4_QTY_4H/1000,'Total Weight',OPR4_QTY_4H/1000,OPR4_QTY_4H))) OPR4_QTY_4H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR4_QTY_45/1000,DECODE(FM,'Grand Weight',OPR4_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR4_QTY_45/1000,'Total Weight',OPR4_QTY_45/1000,OPR4_QTY_45))) OPR4_QTY_45," ).append("\n"); 
		query.append("OPR4_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty5} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR5," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR5_QTY_2/1000,DECODE(FM,'Grand Weight',OPR5_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR5_QTY_2/1000,'Total Weight',OPR5_QTY_2/1000,OPR5_QTY_2)))    OPR5_QTY_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR5_QTY_2H/1000,DECODE(FM,'Grand Weight',OPR5_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR5_QTY_2H/1000,'Total Weight',OPR5_QTY_2H/1000,OPR5_QTY_2H))) OPR5_QTY_2H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR5_QTY_4/1000,DECODE(FM,'Grand Weight',OPR5_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR5_QTY_4/1000,'Total Weight',OPR5_QTY_4/1000,OPR5_QTY_4)))    OPR5_QTY_4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR5_QTY_4H/1000,DECODE(FM,'Grand Weight',OPR5_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR5_QTY_4H/1000,'Total Weight',OPR5_QTY_4H/1000,OPR5_QTY_4H))) OPR5_QTY_4H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',OPR5_QTY_45/1000,DECODE(FM,'Grand Weight',OPR5_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',OPR5_QTY_45/1000,'Total Weight',OPR5_QTY_45/1000,OPR5_QTY_45))) OPR5_QTY_45," ).append("\n"); 
		query.append("OPR5_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_2/1000,DECODE(FM,'Grand Weight',TOT_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_2/1000,'Total Weight',TOT_QTY_2/1000,TOT_QTY_2)))       TOT_QTY_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_2H/1000,DECODE(FM,'Grand Weight',TOT_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_2H/1000,'Total Weight',TOT_QTY_2H/1000,TOT_QTY_2H)))    TOT_QTY_2H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_4/1000,DECODE(FM,'Grand Weight',TOT_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_4/1000,'Total Weight',TOT_QTY_4/1000,TOT_QTY_4)))       TOT_QTY_4," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_4H/1000,DECODE(FM,'Grand Weight',TOT_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_4H/1000,'Total Weight',TOT_QTY_4H/1000,TOT_QTY_4H)))    TOT_QTY_4H," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_45/1000,DECODE(FM,'Grand Weight',TOT_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_45/1000,'Total Weight',TOT_QTY_45/1000,TOT_QTY_45)))    TOT_QTY_45," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_2/1000,DECODE(FM,'Grand Weight',TOT_QTY_2/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_2/1000,'Total Weight',TOT_QTY_2/1000,TOT_QTY_2))) +" ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_2H/1000,DECODE(FM,'Grand Weight',TOT_QTY_2H/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_2H/1000,'Total Weight',TOT_QTY_2H/1000,TOT_QTY_2H)))+" ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_4/1000,DECODE(FM,'Grand Weight',TOT_QTY_4/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_4/1000,'Total Weight',TOT_QTY_4/1000,TOT_QTY_4))) +" ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_4H/1000,DECODE(FM,'Grand Weight',TOT_QTY_4H/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_4H/1000,'Total Weight',TOT_QTY_4H/1000,TOT_QTY_4H))) +" ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',TOT_QTY_45/1000,DECODE(FM,'Grand Weight',TOT_QTY_45/1000," ).append("\n"); 
		query.append("'Sub Weight',TOT_QTY_45/1000,'Total Weight',TOT_QTY_45/1000,TOT_QTY_45)))    TOT_TTL," ).append("\n"); 
		query.append("TOT_TEU," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',AV_WGT_2/1000,DECODE(FM,'Grand Weight',AV_WGT_2/1000,'Sub Weight',AV_WGT_2/1000,'Total Weight',AV_WGT_2/1000,NULL)),1) AV_WGT_2," ).append("\n"); 
		query.append("ROUND(DECODE(WG,'Total Weight',AV_WGT_4/1000,DECODE(FM,'Grand Weight',AV_WGT_4/1000,'Sub Weight',AV_WGT_4/1000,'Total Weight',AV_WGT_4/1000,NULL)),1) AV_WGT_4," ).append("\n"); 
		query.append("(SELECT UPD_USR_ID" ).append("\n"); 
		query.append("FROM OPF_CGO_BKG_FCAST" ).append("\n"); 
		query.append("WHERE  VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("AND    SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    YD_CD = @[yd_cd]" ).append("\n"); 
		query.append("AND    ROWNUM = 1) UPD_USR_ID," ).append("\n"); 
		query.append("(SELECT TO_CHAR(UPD_DT,'YYYY-MM-DD HH:MM') UPD_DT" ).append("\n"); 
		query.append("FROM OPF_CGO_BKG_FCAST_CNTR" ).append("\n"); 
		query.append("WHERE  VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("AND    SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    YD_CD = @[yd_cd]" ).append("\n"); 
		query.append("AND    ROWNUM = 1) UPD_DT" ).append("\n"); 
		query.append("FROM   (" ).append("\n"); 
		query.append("SELECT POD," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 1 AND S = 0 AND W = 0 THEN 'Sub WG'" ).append("\n"); 
		query.append("ELSE MLB" ).append("\n"); 
		query.append("END  MLB," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 1 AND S = 1 AND W = 1 THEN 'Sub Total'" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 0 AND S = 1 AND W = 1 THEN 'Total'" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 1 AND S = 0 AND W = 1 THEN DECODE(FM,'F','Full Total','E','Empty Total',FM)" ).append("\n"); 
		query.append("ELSE DECODE(FM,'F','Full','E','Empty',FM)" ).append("\n"); 
		query.append("END  FM," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 0 AND S = 0 AND W = 1 THEN 'Total'" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 1 AND S = 0 AND W = 1 THEN DECODE(FM,'F','','E','',FM)" ).append("\n"); 
		query.append("ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')" ).append("\n"); 
		query.append("END  WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("#if (${qty1} != '')" ).append("\n"); 
		query.append("OPR1," ).append("\n"); 
		query.append("OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4," ).append("\n"); 
		query.append("OPR1_QTY_4H, OPR1_QTY_45,  OPR1_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty2} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR2," ).append("\n"); 
		query.append("OPR2_QTY_2,  OPR2_QTY_2H,  OPR2_QTY_4," ).append("\n"); 
		query.append("OPR2_QTY_4H, OPR2_QTY_45,  OPR2_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty3} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR3," ).append("\n"); 
		query.append("OPR3_QTY_2,  OPR3_QTY_2H,  OPR3_QTY_4," ).append("\n"); 
		query.append("OPR3_QTY_4H, OPR3_QTY_45,  OPR3_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty4} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR4," ).append("\n"); 
		query.append("OPR4_QTY_2,  OPR4_QTY_2H,  OPR4_QTY_4," ).append("\n"); 
		query.append("OPR4_QTY_4H, OPR4_QTY_45,  OPR4_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty5} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR5," ).append("\n"); 
		query.append("OPR5_QTY_2,  OPR5_QTY_2H,  OPR5_QTY_4," ).append("\n"); 
		query.append("OPR5_QTY_4H, OPR5_QTY_45,  OPR5_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4," ).append("\n"); 
		query.append("TOT_QTY_4H,  TOT_QTY_45,   TOT_TEU," ).append("\n"); 
		query.append("NULL AV_WGT_2, NULL AV_WGT_4," ).append("\n"); 
		query.append("DECODE(FM,NULL,3,SORT)     SORT," ).append("\n"); 
		query.append("P.SEQ" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ," ).append("\n"); 
		query.append("GROUPING(POD) P, GROUPING(MLB) M, GROUPING(SORT) S, GROUPING(WG) W," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=0 AND GROUPING(WG)=0 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=0 AND GROUPING(WG)=0 THEN 1" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END C4," ).append("\n"); 
		query.append("SORT," ).append("\n"); 
		query.append("MAX(OPR1) OPR1," ).append("\n"); 
		query.append("SUM(OPR1_QTY_2)  OPR1_QTY_2,  SUM(OPR1_QTY_2H) OPR1_QTY_2H, SUM(OPR1_QTY_4)  OPR1_QTY_4," ).append("\n"); 
		query.append("SUM(OPR1_QTY_4H) OPR1_QTY_4H, SUM(OPR1_QTY_45) OPR1_QTY_45, SUM(OPR1_TEU)    OPR1_TEU," ).append("\n"); 
		query.append("MAX(OPR2) OPR2," ).append("\n"); 
		query.append("SUM(OPR2_QTY_2)  OPR2_QTY_2,  SUM(OPR2_QTY_2H) OPR2_QTY_2H, SUM(OPR2_QTY_4)  OPR2_QTY_4," ).append("\n"); 
		query.append("SUM(OPR2_QTY_4H) OPR2_QTY_4H, SUM(OPR2_QTY_45) OPR2_QTY_45, SUM(OPR2_TEU)    OPR2_TEU," ).append("\n"); 
		query.append("MAX(OPR3) OPR3," ).append("\n"); 
		query.append("SUM(OPR3_QTY_2)  OPR3_QTY_2,  SUM(OPR3_QTY_2H) OPR3_QTY_2H, SUM(OPR3_QTY_4)  OPR3_QTY_4," ).append("\n"); 
		query.append("SUM(OPR3_QTY_4H) OPR3_QTY_4H, SUM(OPR3_QTY_45) OPR3_QTY_45, SUM(OPR3_TEU)    OPR3_TEU," ).append("\n"); 
		query.append("MAX(OPR4) OPR4," ).append("\n"); 
		query.append("SUM(OPR4_QTY_2)  OPR4_QTY_2,  SUM(OPR4_QTY_2H) OPR4_QTY_2H, SUM(OPR4_QTY_4)  OPR4_QTY_4," ).append("\n"); 
		query.append("SUM(OPR4_QTY_4H) OPR4_QTY_4H, SUM(OPR4_QTY_45) OPR4_QTY_45, SUM(OPR4_TEU)    OPR4_TEU," ).append("\n"); 
		query.append("MAX(OPR5) OPR5," ).append("\n"); 
		query.append("SUM(OPR5_QTY_2)  OPR5_QTY_2,  SUM(OPR5_QTY_2H) OPR5_QTY_2H, SUM(OPR5_QTY_4)  OPR5_QTY_4," ).append("\n"); 
		query.append("SUM(OPR5_QTY_4H) OPR5_QTY_4H, SUM(OPR5_QTY_45) OPR5_QTY_45, SUM(OPR5_TEU)    OPR5_TEU," ).append("\n"); 
		query.append("SUM(TOT_QTY_2)   TOT_QTY_2,   SUM(TOT_QTY_2H)  TOT_QTY_2H,  SUM(TOT_QTY_4)   TOT_QTY_4," ).append("\n"); 
		query.append("SUM(TOT_QTY_4H)  TOT_QTY_4H,  SUM(TOT_QTY_45)  TOT_QTY_45,  SUM(TOT_TEU)     TOT_TEU" ).append("\n"); 
		query.append("FROM ( SELECT DISTINCT O.POD POD, O.MLB, O.FM FM, O.WG WG, O.WSEQ WSEQ," ).append("\n"); 
		query.append("O.OPR1 OPR1," ).append("\n"); 
		query.append("O.TQYT_OPR1  OPR1_QTY_2,  O.THQTY_OPR1 OPR1_QTY_2H, O.FQTY_OPR1  OPR1_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR1 OPR1_QTY_4H, O.SQTY_OPR1  OPR1_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR1+O.THQTY_OPR1) + ((O.FQTY_OPR1+O.FHQTY_OPR1+O.SQTY_OPR1)*2) OPR1_TEU," ).append("\n"); 
		query.append("O.OPR2 OPR2," ).append("\n"); 
		query.append("O.TQYT_OPR2  OPR2_QTY_2,  O.THQTY_OPR2 OPR2_QTY_2H, O.FQTY_OPR2  OPR2_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR2 OPR2_QTY_4H, O.SQTY_OPR2  OPR2_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR2+O.THQTY_OPR2) + ((O.FQTY_OPR2+O.FHQTY_OPR2+O.SQTY_OPR2)*2) OPR2_TEU," ).append("\n"); 
		query.append("O.OPR3 OPR3," ).append("\n"); 
		query.append("O.TQYT_OPR3  OPR3_QTY_2,  O.THQTY_OPR3 OPR3_QTY_2H, O.FQTY_OPR3  OPR3_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR3 OPR3_QTY_4H, O.SQTY_OPR3  OPR3_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR3+O.THQTY_OPR3) + ((O.FQTY_OPR3+O.FHQTY_OPR3+O.SQTY_OPR3)*2) OPR3_TEU," ).append("\n"); 
		query.append("O.OPR4 OPR4," ).append("\n"); 
		query.append("O.TQTY_OPR4  OPR4_QTY_2,  O.THQTY_OPR4 OPR4_QTY_2H, O.FQTY_OPR4  OPR4_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR4 OPR4_QTY_4H, O.SQTY_OPR4  OPR4_QTY_45," ).append("\n"); 
		query.append("(O.TQTY_OPR4+O.THQTY_OPR4) + ((O.FQTY_OPR4+O.FHQTY_OPR4+O.SQTY_OPR4)*2) OPR4_TEU," ).append("\n"); 
		query.append("O.OPR5 OPR5," ).append("\n"); 
		query.append("O.TQYT_OPR5  OPR5_QTY_2,  O.THQTY_OPR5 OPR5_QTY_2H, O.FQTY_OPR5  OPR5_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR5 OPR5_QTY_4H, O.SQTY_OPR5  OPR5_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR5+O.THQTY_OPR5) + ((O.FQTY_OPR5+O.FHQTY_OPR5+O.SQTY_OPR5)*2) OPR5_TEU," ).append("\n"); 
		query.append("T.TQTY       TOT_QTY_2,   T.THQTY      TOT_QTY_2H,  T.FQTY       TOT_QTY_4," ).append("\n"); 
		query.append("T.FHQTY      TOT_QTY_4H,  T.SQTY       TOT_QTY_45,  (T.TQTY+T.THQTY) + ((T.FQTY+T.FHQTY+T.SQTY)*2) TOT_TEU," ).append("\n"); 
		query.append("O.SORT" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, FM, SORT, WG, WSEQ," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,OPR,0))   OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,TQTY,0))  TQYT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,THQTY,0)) THQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FQTY,0))  FQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FHQTY,0)) FHQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,SQTY,0))  SQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,OPR,0))   OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,TQTY,0))  TQYT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,THQTY,0)) THQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FQTY,0))  FQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FHQTY,0)) FHQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,SQTY,0))  SQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,OPR,0))   OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,TQTY,0))  TQYT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,THQTY,0)) THQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FQTY,0))  FQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FHQTY,0)) FHQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,SQTY,0))  SQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,OPR,0))   OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,TQTY,0))  TQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,THQTY,0)) THQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FQTY,0))  FQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FHQTY,0)) FHQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,SQTY,0))  SQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,OPR,0))   OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,TQTY,0))  TQYT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,THQTY,0)) THQTY_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FQTY,0))  FQTY_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FHQTY,0)) FHQTY_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,SQTY,0))  SQTY_OPR5" ).append("\n"); 
		query.append("FROM ( WITH S AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT POD," ).append("\n"); 
		query.append("MLB," ).append("\n"); 
		query.append("FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("OPR," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FHQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY" ).append("\n"); 
		query.append("FROM   ( SELECT D.POD_CD        POD," ).append("\n"); 
		query.append("D.MLB_CD          MLB," ).append("\n"); 
		query.append("D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CRR_CD          OPR," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("H.BKG_SHPR_OWNR_FLG OWNR," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))       CNTR_QTY," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO))) CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND    D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND    D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY POD, MLB, FM, WG, WSEQ, OPR )," ).append("\n"); 
		query.append("DUMY AS" ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL )" ).append("\n"); 
		query.append("SELECT S1.POD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ, S1.OPR," ).append("\n"); 
		query.append("NVL(S2.TQTY,0)  TQTY,  NVL(S2.THQTY,0) THQTY," ).append("\n"); 
		query.append("NVL(S2.FQTY,0)  FQTY,  NVL(S2.FHQTY,0) FHQTY," ).append("\n"); 
		query.append("NVL(S2.SQTY,0)  SQTY," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty1] THEN 1" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty2] THEN 2" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty3] THEN 3" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty4] THEN 4" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty5] THEN 5" ).append("\n"); 
		query.append("END  ROW_NUM" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, FM, OPR" ).append("\n"); 
		query.append("FROM   ( SELECT DISTINCT POD, MLB, OPR" ).append("\n"); 
		query.append("FROM S ) S, DUMY ) S1, S S2" ).append("\n"); 
		query.append("WHERE S1.POD  = S2.POD(+)" ).append("\n"); 
		query.append("AND   NVL(S1.MLB,'N')  = NVL(S2.MLB(+),'N')" ).append("\n"); 
		query.append("AND   S1.FM   = S2.FM(+)" ).append("\n"); 
		query.append("AND   S1.OPR  = S2.OPR(+) )" ).append("\n"); 
		query.append("GROUP BY SORT, POD, MLB, FM, WG, WSEQ ) O," ).append("\n"); 
		query.append("( WITH S AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT POD," ).append("\n"); 
		query.append("MLB," ).append("\n"); 
		query.append("FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FHQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,0))                FHWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT D.POD_CD          POD," ).append("\n"); 
		query.append("D.MLB_CD          MLB," ).append("\n"); 
		query.append("D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("H.BKG_SHPR_OWNR_FLG OWNR," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND	D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND	D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY POD, MLB, FM, WG, WSEQ )," ).append("\n"); 
		query.append("DUMY AS" ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL )" ).append("\n"); 
		query.append("SELECT S1.POD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ," ).append("\n"); 
		query.append("NVL(S2.TQTY,0)  TQTY," ).append("\n"); 
		query.append("NVL(S2.TWGT,0)  TWGT," ).append("\n"); 
		query.append("NVL(S2.THQTY,0) THQTY," ).append("\n"); 
		query.append("NVL(S2.THWGT,0) THWGT," ).append("\n"); 
		query.append("NVL(S2.FQTY,0)  FQTY," ).append("\n"); 
		query.append("NVL(S2.FWGT,0)  FWGT," ).append("\n"); 
		query.append("NVL(S2.FHQTY,0) FHQTY," ).append("\n"); 
		query.append("NVL(S2.FHWGT,0) FHWGT," ).append("\n"); 
		query.append("NVL(S2.SQTY,0)  SQTY," ).append("\n"); 
		query.append("NVL(S2.SWGT,0)  SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, FM" ).append("\n"); 
		query.append("FROM   ( SELECT DISTINCT POD, MLB" ).append("\n"); 
		query.append("FROM S ) S, DUMY ) S1, S S2" ).append("\n"); 
		query.append("WHERE S1.POD  = S2.POD(+)" ).append("\n"); 
		query.append("AND   NVL(S1.MLB,'N')  = NVL(S2.MLB(+),'N')" ).append("\n"); 
		query.append("AND   S1.FM   = S2.FM(+) ) T" ).append("\n"); 
		query.append("WHERE  O.POD          = T.POD" ).append("\n"); 
		query.append("AND    O.FM           = T.FM" ).append("\n"); 
		query.append("AND    NVL(O.WG,'N')  = NVL(T.WG,'N')" ).append("\n"); 
		query.append("AND    NVL(O.MLB,'N') = NVL(T.MLB,'N') )" ).append("\n"); 
		query.append("GROUP BY CUBE(POD, MLB, SORT, WG) ) A," ).append("\n"); 
		query.append("( SELECT V.VPS_PORT_CD PORT, V.CLPT_SEQ SEQ" ).append("\n"); 
		query.append("FROM   VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("WHERE  V.VSL_CD     = @[vsl_cd]" ).append("\n"); 
		query.append("AND    V.SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    V.SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    V.CLPT_SEQ   > ( SELECT CLPT_SEQ" ).append("\n"); 
		query.append("FROM   VSK_VSL_PORT_SKD R" ).append("\n"); 
		query.append("WHERE  R.VSL_CD     = @[vsl_cd]" ).append("\n"); 
		query.append("AND    R.SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    R.SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    R.YD_CD      = @[yd_cd]" ).append("\n"); 
		query.append("AND    ROWNUM = 1 ) ) P" ).append("\n"); 
		query.append("WHERE NVL(C4,0) = 1" ).append("\n"); 
		query.append("AND   A.POD     = P.PORT(+)" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT NVL(POD,'Grand Total') POD, MLB," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN P = 1 AND M = 1 AND S = 1 AND W = 1 THEN 'Grand Weight'" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 1 AND S = 1 AND W = 1 THEN 'Sub Weight'" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 0 AND S = 1 AND W = 1 THEN 'Total Weight'" ).append("\n"); 
		query.append("ELSE DECODE(FM,'F','Full','E','Empty',FM)" ).append("\n"); 
		query.append("END  FM," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN P = 0 AND M = 0 AND S = 0 AND W = 1 THEN 'Total Weight'" ).append("\n"); 
		query.append("ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')" ).append("\n"); 
		query.append("END  WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("#if (${qty1} != '')" ).append("\n"); 
		query.append("OPR1," ).append("\n"); 
		query.append("OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4," ).append("\n"); 
		query.append("OPR1_QTY_4H, OPR1_QTY_45,  NULL OPR1_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty2} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR2," ).append("\n"); 
		query.append("OPR2_QTY_2,  OPR2_QTY_2H,  OPR2_QTY_4," ).append("\n"); 
		query.append("OPR2_QTY_4H, OPR2_QTY_45,  NULL OPR2_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty3} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR3," ).append("\n"); 
		query.append("OPR3_QTY_2,  OPR3_QTY_2H,  OPR3_QTY_4," ).append("\n"); 
		query.append("OPR3_QTY_4H, OPR3_QTY_45,  NULL OPR3_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty4} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR4," ).append("\n"); 
		query.append("OPR4_QTY_2,  OPR4_QTY_2H,  OPR4_QTY_4," ).append("\n"); 
		query.append("OPR4_QTY_4H, OPR4_QTY_45,  NULL OPR4_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty5} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR5," ).append("\n"); 
		query.append("OPR5_QTY_2,  OPR5_QTY_2H,  OPR5_QTY_4," ).append("\n"); 
		query.append("OPR5_QTY_4H, OPR5_QTY_45,  NULL OPR5_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4," ).append("\n"); 
		query.append("TOT_QTY_4H,  TOT_QTY_45,   NULL TOT_TEU," ).append("\n"); 
		query.append("TW/DECODE(TH,0,1,TH) AV_WGT_2," ).append("\n"); 
		query.append("FW/DECODE(FH,0,1,FH) AV_WGT_4," ).append("\n"); 
		query.append("DECODE(POD,NULL,8,DECODE(FM,NULL,6,SORT)) SORT," ).append("\n"); 
		query.append("P.SEQ" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ," ).append("\n"); 
		query.append("GROUPING(POD) P, GROUPING(MLB) M, GROUPING(SORT) S, GROUPING(WG) W," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(POD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END C4," ).append("\n"); 
		query.append("SORT," ).append("\n"); 
		query.append("MAX(OPR1) OPR1," ).append("\n"); 
		query.append("SUM(OPR1_WGT_2)  OPR1_QTY_2,  SUM(OPR1_WGT_2H) OPR1_QTY_2H, SUM(OPR1_WGT_4)  OPR1_QTY_4," ).append("\n"); 
		query.append("SUM(OPR1_WGT_4H) OPR1_QTY_4H, SUM(OPR1_WGT_45) OPR1_QTY_45," ).append("\n"); 
		query.append("MAX(OPR2) OPR2," ).append("\n"); 
		query.append("SUM(OPR2_WGT_2)  OPR2_QTY_2,  SUM(OPR2_WGT_2H) OPR2_QTY_2H, SUM(OPR2_WGT_4)  OPR2_QTY_4," ).append("\n"); 
		query.append("SUM(OPR2_WGT_4H) OPR2_QTY_4H, SUM(OPR2_WGT_45) OPR2_QTY_45," ).append("\n"); 
		query.append("MAX(OPR3) OPR3," ).append("\n"); 
		query.append("SUM(OPR3_WGT_2)  OPR3_QTY_2,  SUM(OPR3_WGT_2H) OPR3_QTY_2H, SUM(OPR3_WGT_4)  OPR3_QTY_4," ).append("\n"); 
		query.append("SUM(OPR3_WGT_4H) OPR3_QTY_4H, SUM(OPR3_WGT_45) OPR3_QTY_45," ).append("\n"); 
		query.append("MAX(OPR4) OPR4," ).append("\n"); 
		query.append("SUM(OPR4_WGT_2)  OPR4_QTY_2,  SUM(OPR4_WGT_2H) OPR4_QTY_2H, SUM(OPR4_WGT_4)  OPR4_QTY_4," ).append("\n"); 
		query.append("SUM(OPR4_WGT_4H) OPR4_QTY_4H, SUM(OPR4_WGT_45) OPR4_QTY_45," ).append("\n"); 
		query.append("MAX(OPR5) OPR5," ).append("\n"); 
		query.append("SUM(OPR5_WGT_2)  OPR5_QTY_2,  SUM(OPR5_WGT_2H) OPR5_QTY_2H, SUM(OPR5_WGT_4)  OPR5_QTY_4," ).append("\n"); 
		query.append("SUM(OPR5_WGT_4H) OPR5_QTY_4H, SUM(OPR5_WGT_45) OPR5_QTY_45," ).append("\n"); 
		query.append("SUM(TOT_WGT_2)   TOT_QTY_2,   SUM(TOT_WGT_2H)  TOT_QTY_2H,  SUM(TOT_WGT_4)   TOT_QTY_4," ).append("\n"); 
		query.append("SUM(TOT_WGT_4H)  TOT_QTY_4H,  SUM(TOT_WGT_45)  TOT_QTY_45," ).append("\n"); 
		query.append("SUM(TW) TW,      SUM(TH) TH,  SUM(FW) FW,      SUM(FH) FH" ).append("\n"); 
		query.append("FROM ( SELECT DISTINCT O.POD POD, O.MLB, O.FM FM, O.WG WG, O.WSEQ WSEQ," ).append("\n"); 
		query.append("O.OPR1 OPR1," ).append("\n"); 
		query.append("O.TWGT_OPR1  OPR1_WGT_2,  O.THWGT_OPR1 OPR1_WGT_2H, O.FWGT_OPR1 OPR1_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR1 OPR1_WGT_4H, O.SWGT_OPR1 OPR1_WGT_45," ).append("\n"); 
		query.append("O.OPR2 OPR2," ).append("\n"); 
		query.append("O.TWGT_OPR2  OPR2_WGT_2,  O.THWGT_OPR2 OPR2_WGT_2H, O.FWGT_OPR2  OPR2_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR2 OPR2_WGT_4H, O.SWGT_OPR2  OPR2_WGT_45," ).append("\n"); 
		query.append("O.OPR3 OPR3," ).append("\n"); 
		query.append("O.TWGT_OPR3  OPR3_WGT_2,  O.THWGT_OPR3 OPR3_WGT_2H, O.FWGT_OPR3  OPR3_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR3 OPR3_WGT_4H, O.SWGT_OPR3  OPR3_WGT_45," ).append("\n"); 
		query.append("O.OPR4 OPR4," ).append("\n"); 
		query.append("O.TWGT_OPR4  OPR4_WGT_2,  O.THWGT_OPR4 OPR4_WGT_2H, O.FWGT_OPR4  OPR4_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR4 OPR4_WGT_4H, O.SWGT_OPR4  OPR4_WGT_45," ).append("\n"); 
		query.append("O.OPR5 OPR5," ).append("\n"); 
		query.append("O.TWGT_OPR5  OPR5_WGT_2,  O.THWGT_OPR5 OPR5_WGT_2H, O.FWGT_OPR5  OPR5_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR5 OPR5_WGT_4H, O.SWGT_OPR5  OPR5_WGT_45," ).append("\n"); 
		query.append("T.TWGT       TOT_WGT_2,   T.THWGT      TOT_WGT_2H,  T.FWGT       TOT_WGT_4," ).append("\n"); 
		query.append("T.FHWGT      TOT_WGT_4H,  T.SWGT       TOT_WGT_45," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.TWGT,0)+DECODE(O.FM,'F',T.THWGT,0)) TW," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0)) TH," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.FWGT,0)+DECODE(O.FM,'F',T.FHWGT,0)+DECODE(O.FM,'F',T.SWGT,0)) FW," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0)) FH," ).append("\n"); 
		query.append("O.SORT" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, FM, SORT, WG, WSEQ," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,OPR,0))   OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,TWGT,0))  TWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,THWGT,0)) THWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FWGT,0))  FWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FHWGT,0)) FHWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,SWGT,0))  SWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,OPR,0))   OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,TWGT,0))  TWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,THWGT,0)) THWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FWGT,0))  FWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FHWGT,0)) FHWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,SWGT,0))  SWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,OPR,0))   OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,TWGT,0))  TWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,THWGT,0)) THWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FWGT,0))  FWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FHWGT,0)) FHWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,SWGT,0))  SWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,OPR,0))   OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,TWGT,0))  TWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,THWGT,0)) THWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FWGT,0))  FWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FHWGT,0)) FHWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,SWGT,0))  SWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,OPR,0))   OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,TWGT,0))  TWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,THWGT,0)) THWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FWGT,0))  FWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FHWGT,0)) FHWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,SWGT,0))  SWGT_OPR5" ).append("\n"); 
		query.append("FROM ( WITH S AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT POD," ).append("\n"); 
		query.append("MLB," ).append("\n"); 
		query.append("FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("OPR," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0)) TWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0)) THWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0)) FWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,0)) FHWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0)) SWGT" ).append("\n"); 
		query.append("FROM   (" ).append("\n"); 
		query.append("SELECT D.POD_CD          POD," ).append("\n"); 
		query.append("D.MLB_CD          MLB," ).append("\n"); 
		query.append("D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("D.CRR_CD          OPR," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND    D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND    D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY POD, MLB, FM, WG, OPR, WSEQ )," ).append("\n"); 
		query.append("DUMY AS" ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL )" ).append("\n"); 
		query.append("SELECT S1.POD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ, S1.OPR," ).append("\n"); 
		query.append("NVL(S2.TWGT,0)  TWGT,  NVL(S2.THWGT,0) THWGT," ).append("\n"); 
		query.append("NVL(S2.FWGT,0)  FWGT,  NVL(S2.FHWGT,0) FHWGT," ).append("\n"); 
		query.append("NVL(S2.SWGT,0)  SWGT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty1] THEN 1" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty2] THEN 2" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty3] THEN 3" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty4] THEN 4" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty5] THEN 5" ).append("\n"); 
		query.append("END  ROW_NUM" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, FM, OPR" ).append("\n"); 
		query.append("FROM   ( SELECT DISTINCT POD, MLB, OPR" ).append("\n"); 
		query.append("FROM S ) S, DUMY ) S1, S S2" ).append("\n"); 
		query.append("WHERE S1.POD  = S2.POD(+)" ).append("\n"); 
		query.append("AND   NVL(S1.MLB,'N')  = NVL(S2.MLB(+),'N')" ).append("\n"); 
		query.append("AND   S1.FM   = S2.FM(+)" ).append("\n"); 
		query.append("AND   S1.OPR  = S2.OPR(+) )" ).append("\n"); 
		query.append("GROUP BY SORT, POD, MLB, FM, WG, WSEQ ) O," ).append("\n"); 
		query.append("( WITH S AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT POD," ).append("\n"); 
		query.append("MLB," ).append("\n"); 
		query.append("FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FHQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,0))                FHWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT D.POD_CD          POD," ).append("\n"); 
		query.append("D.MLB_CD          MLB," ).append("\n"); 
		query.append("D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("H.BKG_SHPR_OWNR_FLG OWNR," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND	   D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND	   D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY POD, MLB, FM, WG, WSEQ )," ).append("\n"); 
		query.append("DUMY AS" ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL )" ).append("\n"); 
		query.append("SELECT S1.POD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ," ).append("\n"); 
		query.append("NVL(S2.TQTY,0)  TQTY," ).append("\n"); 
		query.append("NVL(S2.TWGT,0)  TWGT," ).append("\n"); 
		query.append("NVL(S2.THQTY,0) THQTY," ).append("\n"); 
		query.append("NVL(S2.THWGT,0) THWGT," ).append("\n"); 
		query.append("NVL(S2.FQTY,0)  FQTY," ).append("\n"); 
		query.append("NVL(S2.FWGT,0)  FWGT," ).append("\n"); 
		query.append("NVL(S2.FHQTY,0) FHQTY," ).append("\n"); 
		query.append("NVL(S2.FHWGT,0) FHWGT," ).append("\n"); 
		query.append("NVL(S2.SQTY,0)  SQTY," ).append("\n"); 
		query.append("NVL(S2.SWGT,0)  SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT POD, MLB, FM" ).append("\n"); 
		query.append("FROM   ( SELECT DISTINCT POD, MLB" ).append("\n"); 
		query.append("FROM S ) S, DUMY ) S1, S S2" ).append("\n"); 
		query.append("WHERE S1.POD  = S2.POD(+)" ).append("\n"); 
		query.append("AND   NVL(S1.MLB,'N')  = NVL(S2.MLB(+),'N')" ).append("\n"); 
		query.append("AND   S1.FM   = S2.FM(+) ) T" ).append("\n"); 
		query.append("WHERE  O.POD          = T.POD" ).append("\n"); 
		query.append("AND    O.FM           = T.FM" ).append("\n"); 
		query.append("AND    NVL(O.WG,'N')  = NVL(T.WG,'N')" ).append("\n"); 
		query.append("AND    NVL(O.MLB,'N') = NVL(T.MLB,'N') )" ).append("\n"); 
		query.append("GROUP BY CUBE(POD, MLB, SORT, WG) ) A," ).append("\n"); 
		query.append("( SELECT V.VPS_PORT_CD PORT, V.CLPT_SEQ SEQ" ).append("\n"); 
		query.append("FROM   VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("WHERE  V.VSL_CD     = @[vsl_cd]" ).append("\n"); 
		query.append("AND    V.SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    V.SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    V.CLPT_SEQ   > ( SELECT CLPT_SEQ" ).append("\n"); 
		query.append("FROM   VSK_VSL_PORT_SKD R" ).append("\n"); 
		query.append("WHERE  R.VSL_CD     = @[vsl_cd]" ).append("\n"); 
		query.append("AND    R.SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    R.SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    R.YD_CD      = @[yd_cd]" ).append("\n"); 
		query.append("AND    ROWNUM = 1 ) ) P" ).append("\n"); 
		query.append("WHERE NVL(A.C4,0) = 1" ).append("\n"); 
		query.append("AND   A.POD       = P.PORT(+)" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'Grand Total' POD," ).append("\n"); 
		query.append("NULL MLB," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S = 1 AND W = 1 THEN 'Grand Total'" ).append("\n"); 
		query.append("ELSE DECODE(FM,'F','Full','E','Empty',FM)" ).append("\n"); 
		query.append("END  FM," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S = 0 AND W = 1 THEN 'Total'" ).append("\n"); 
		query.append("ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')" ).append("\n"); 
		query.append("END  WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("#if (${qty1} != '')" ).append("\n"); 
		query.append("OPR1," ).append("\n"); 
		query.append("OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4," ).append("\n"); 
		query.append("OPR1_QTY_4H, OPR1_QTY_45,  OPR1_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty2} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR2," ).append("\n"); 
		query.append("OPR2_QTY_2,  OPR2_QTY_2H,  OPR2_QTY_4," ).append("\n"); 
		query.append("OPR2_QTY_4H, OPR2_QTY_45,  OPR2_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty3} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR3," ).append("\n"); 
		query.append("OPR3_QTY_2,  OPR3_QTY_2H,  OPR3_QTY_4," ).append("\n"); 
		query.append("OPR3_QTY_4H, OPR3_QTY_45,  OPR3_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty4} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR4," ).append("\n"); 
		query.append("OPR4_QTY_2,  OPR4_QTY_2H,  OPR4_QTY_4," ).append("\n"); 
		query.append("OPR4_QTY_4H, OPR4_QTY_45,  OPR4_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty5} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR5," ).append("\n"); 
		query.append("OPR5_QTY_2,  OPR5_QTY_2H,  OPR5_QTY_4," ).append("\n"); 
		query.append("OPR5_QTY_4H, OPR5_QTY_45,  OPR5_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4," ).append("\n"); 
		query.append("TOT_QTY_4H,  TOT_QTY_45,   TOT_TEU," ).append("\n"); 
		query.append("AV_WGT_2,    AV_WGT_4," ).append("\n"); 
		query.append("DECODE(FM,NULL,7,SORT) SORT," ).append("\n"); 
		query.append("1000 SEQ" ).append("\n"); 
		query.append("FROM   ( SELECT DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ," ).append("\n"); 
		query.append("GROUPING(SORT) S, GROUPING(WG) W," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN GROUPING(SORT)=0 AND GROUPING(WG)=0 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END C4," ).append("\n"); 
		query.append("SORT," ).append("\n"); 
		query.append("MAX(OPR1) OPR1," ).append("\n"); 
		query.append("SUM(OPR1_QTY_2)  OPR1_QTY_2,  SUM(OPR1_QTY_2H) OPR1_QTY_2H, SUM(OPR1_QTY_4)  OPR1_QTY_4," ).append("\n"); 
		query.append("SUM(OPR1_QTY_4H) OPR1_QTY_4H, SUM(OPR1_QTY_45) OPR1_QTY_45, SUM(OPR1_TEU)    OPR1_TEU," ).append("\n"); 
		query.append("MAX(OPR2) OPR2," ).append("\n"); 
		query.append("SUM(OPR2_QTY_2)  OPR2_QTY_2,  SUM(OPR2_QTY_2H) OPR2_QTY_2H, SUM(OPR2_QTY_4)  OPR2_QTY_4," ).append("\n"); 
		query.append("SUM(OPR2_QTY_4H) OPR2_QTY_4H, SUM(OPR2_QTY_45) OPR2_QTY_45, SUM(OPR2_TEU)    OPR2_TEU," ).append("\n"); 
		query.append("MAX(OPR3) OPR3," ).append("\n"); 
		query.append("SUM(OPR3_QTY_2)  OPR3_QTY_2,  SUM(OPR3_QTY_2H) OPR3_QTY_2H, SUM(OPR3_QTY_4)  OPR3_QTY_4," ).append("\n"); 
		query.append("SUM(OPR3_QTY_4H) OPR3_QTY_4H, SUM(OPR3_QTY_45) OPR3_QTY_45, SUM(OPR3_TEU)    OPR3_TEU," ).append("\n"); 
		query.append("MAX(OPR4) OPR4," ).append("\n"); 
		query.append("SUM(OPR4_QTY_2)  OPR4_QTY_2,  SUM(OPR4_QTY_2H) OPR4_QTY_2H, SUM(OPR4_QTY_4)  OPR4_QTY_4," ).append("\n"); 
		query.append("SUM(OPR4_QTY_4H) OPR4_QTY_4H, SUM(OPR4_QTY_45) OPR4_QTY_45, SUM(OPR4_TEU)    OPR4_TEU," ).append("\n"); 
		query.append("MAX(OPR5) OPR5," ).append("\n"); 
		query.append("SUM(OPR5_QTY_2)  OPR5_QTY_2,  SUM(OPR5_QTY_2H) OPR5_QTY_2H, SUM(OPR5_QTY_4)  OPR5_QTY_4," ).append("\n"); 
		query.append("SUM(OPR5_QTY_4H) OPR5_QTY_4H, SUM(OPR5_QTY_45) OPR5_QTY_45, SUM(OPR5_TEU)    OPR5_TEU," ).append("\n"); 
		query.append("SUM(TOT_QTY_2)   TOT_QTY_2,   SUM(TOT_QTY_2H)  TOT_QTY_2H,  SUM(TOT_QTY_4)   TOT_QTY_4," ).append("\n"); 
		query.append("SUM(TOT_QTY_4H)  TOT_QTY_4H,  SUM(TOT_QTY_45)  TOT_QTY_45,  SUM(TOT_TEU)     TOT_TEU," ).append("\n"); 
		query.append("SUM(AV_WGT_2)    AV_WGT_2,    SUM(AV_WGT_4)    AV_WGT_4" ).append("\n"); 
		query.append("FROM ( SELECT DISTINCT O.FM FM, O.WG WG, O.WSEQ," ).append("\n"); 
		query.append("O.OPR1 OPR1," ).append("\n"); 
		query.append("O.TQYT_OPR1  OPR1_QTY_2,  O.THQTY_OPR1 OPR1_QTY_2H, O.FQTY_OPR1  OPR1_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR1 OPR1_QTY_4H, O.SQTY_OPR1  OPR1_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR1+O.THQTY_OPR1) + ((O.FQTY_OPR1+O.FHQTY_OPR1+O.SQTY_OPR1)*2) OPR1_TEU," ).append("\n"); 
		query.append("O.OPR2 OPR2," ).append("\n"); 
		query.append("O.TQYT_OPR2  OPR2_QTY_2,  O.THQTY_OPR2 OPR2_QTY_2H, O.FQTY_OPR2  OPR2_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR2 OPR2_QTY_4H, O.SQTY_OPR2  OPR2_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR2+O.THQTY_OPR2) + ((O.FQTY_OPR2+O.FHQTY_OPR2+O.SQTY_OPR2)*2) OPR2_TEU," ).append("\n"); 
		query.append("O.OPR3 OPR3," ).append("\n"); 
		query.append("O.TQYT_OPR3  OPR3_QTY_2,  O.THQTY_OPR3 OPR3_QTY_2H, O.FQTY_OPR3  OPR3_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR3 OPR3_QTY_4H, O.SQTY_OPR3  OPR3_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR3+O.THQTY_OPR3) + ((O.FQTY_OPR3+O.FHQTY_OPR3+O.SQTY_OPR3)*2) OPR3_TEU," ).append("\n"); 
		query.append("O.OPR4 OPR4," ).append("\n"); 
		query.append("O.TQTY_OPR4  OPR4_QTY_2,  O.THQTY_OPR4 OPR4_QTY_2H, O.FQTY_OPR4  OPR4_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR4 OPR4_QTY_4H, O.SQTY_OPR4  OPR4_QTY_45," ).append("\n"); 
		query.append("(O.TQTY_OPR4+O.THQTY_OPR4) + ((O.FQTY_OPR4+O.FHQTY_OPR4+O.SQTY_OPR4)*2) OPR4_TEU," ).append("\n"); 
		query.append("O.OPR5 OPR5," ).append("\n"); 
		query.append("O.TQYT_OPR5  OPR5_QTY_2,  O.THQTY_OPR5 OPR5_QTY_2H, O.FQTY_OPR5  OPR5_QTY_4," ).append("\n"); 
		query.append("O.FHQTY_OPR5 OPR5_QTY_4H, O.SQTY_OPR5  OPR5_QTY_45," ).append("\n"); 
		query.append("(O.TQYT_OPR5+O.THQTY_OPR5) + ((O.FQTY_OPR5+O.FHQTY_OPR5+O.SQTY_OPR5)*2) OPR5_TEU," ).append("\n"); 
		query.append("T.TQTY       TOT_QTY_2,   T.THQTY      TOT_QTY_2H,  T.FQTY       TOT_QTY_4," ).append("\n"); 
		query.append("T.FHQTY      TOT_QTY_4H,  T.SQTY       TOT_QTY_45,  (T.TQTY+T.THQTY) + ((T.FQTY+T.FHQTY+T.SQTY)*2) TOT_TEU," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.TWGT,0)+DECODE(O.FM,'F',T.THWGT,0))/" ).append("\n"); 
		query.append("DECODE((DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0)),0,1," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0))) AV_WGT_2," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.FWGT,0)+DECODE(O.FM,'F',T.FHWGT,0)+DECODE(O.FM,'F',T.SWGT,0))/" ).append("\n"); 
		query.append("DECODE((DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0)),0,1," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0))) AV_WGT_4," ).append("\n"); 
		query.append("O.SORT" ).append("\n"); 
		query.append("FROM   ( SELECT FM, SORT, WG, WSEQ," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,OPR,0))   OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,TQTY,0))  TQYT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,THQTY,0)) THQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FQTY,0))  FQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FHQTY,0)) FHQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,SQTY,0))  SQTY_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,OPR,0))   OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,TQTY,0))  TQYT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,THQTY,0)) THQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FQTY,0))  FQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FHQTY,0)) FHQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,SQTY,0))  SQTY_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,OPR,0))   OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,TQTY,0))  TQYT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,THQTY,0)) THQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FQTY,0))  FQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FHQTY,0)) FHQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,SQTY,0))  SQTY_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,OPR,0))   OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,TQTY,0))  TQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,THQTY,0)) THQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FQTY,0))  FQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FHQTY,0)) FHQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,SQTY,0))  SQTY_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,OPR,0))   OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,TQTY,0))  TQYT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,THQTY,0)) THQTY_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FQTY,0))  FQTY_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FHQTY,0)) FHQTY_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,SQTY,0))  SQTY_OPR5" ).append("\n"); 
		query.append("FROM ( WITH S AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("OPR," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0))            TQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0))            THQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0))            FQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),0))            FHQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0))            SQTY" ).append("\n"); 
		query.append("FROM   ( SELECT D.FULL_MTY_CD                 FM," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD             WG," ).append("\n"); 
		query.append("D.CRR_CD                      OPR," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("H.BKG_SHPR_OWNR_FLG OWNR," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))       CNTR_QTY," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO))) CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND    D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND    D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY FM, WG, WSEQ, OPR )," ).append("\n"); 
		query.append("DUMY AS" ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL )" ).append("\n"); 
		query.append("SELECT S1.FM, DECODE(S1.FM,'F',4,5) SORT, S2.WG, S2.WSEQ, S1.OPR," ).append("\n"); 
		query.append("NVL(S2.TQTY,0)  TQTY,  NVL(S2.THQTY,0) THQTY," ).append("\n"); 
		query.append("NVL(S2.FQTY,0)  FQTY,  NVL(S2.FHQTY,0) FHQTY," ).append("\n"); 
		query.append("NVL(S2.SQTY,0)  SQTY," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty1] THEN 1" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty2] THEN 2" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty3] THEN 3" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty4] THEN 4" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty5] THEN 5" ).append("\n"); 
		query.append("END  ROW_NUM" ).append("\n"); 
		query.append("FROM   ( SELECT FM, OPR" ).append("\n"); 
		query.append("FROM   ( SELECT DISTINCT OPR" ).append("\n"); 
		query.append("FROM S ) S, DUMY ) S1, S S2" ).append("\n"); 
		query.append("WHERE S1.FM   = S2.FM(+)" ).append("\n"); 
		query.append("AND   S1.OPR  = S2.OPR(+) )" ).append("\n"); 
		query.append("GROUP BY SORT, FM, WG, WSEQ ) O," ).append("\n"); 
		query.append("( SELECT B.FM, A.SORT, A.WG, A.WSEQ," ).append("\n"); 
		query.append("NVL(A.TQTY,0)  TQTY," ).append("\n"); 
		query.append("NVL(A.TWGT,0)  TWGT," ).append("\n"); 
		query.append("NVL(A.THQTY,0) THQTY," ).append("\n"); 
		query.append("NVL(A.THWGT,0) THWGT," ).append("\n"); 
		query.append("NVL(A.FQTY,0)  FQTY," ).append("\n"); 
		query.append("NVL(A.FWGT,0)  FWGT," ).append("\n"); 
		query.append("NVL(A.FHQTY,0) FHQTY," ).append("\n"); 
		query.append("NVL(A.FHWGT,0) FHWGT," ).append("\n"); 
		query.append("NVL(A.SQTY,0)  SQTY," ).append("\n"); 
		query.append("NVL(A.SWGT,0)  SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT FM," ).append("\n"); 
		query.append("SORT," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FHQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,0))                FHWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("DECODE(D.FULL_MTY_CD,'F',4,5) SORT," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("H.BKG_SHPR_OWNR_FLG OWNR," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND	D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND	D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY FM, SORT, WG, WSEQ ) A," ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL ) B" ).append("\n"); 
		query.append("WHERE B.FM = A.FM(+) ) T" ).append("\n"); 
		query.append("WHERE  O.FM           = T.FM" ).append("\n"); 
		query.append("AND    NVL(O.WG,'N')  = NVL(T.WG,'N') )" ).append("\n"); 
		query.append("GROUP BY CUBE(SORT, WG) )" ).append("\n"); 
		query.append("WHERE NVL(C4,0) = 1" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'Grand Total' POD," ).append("\n"); 
		query.append("NULL MLB," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S = 1 AND W = 1 THEN 'Grand Weight'" ).append("\n"); 
		query.append("ELSE DECODE(FM,'F','Full','E','Empty',FM)" ).append("\n"); 
		query.append("END  FM," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S = 0 AND W = 1 THEN 'Total Weight'" ).append("\n"); 
		query.append("ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')" ).append("\n"); 
		query.append("END  WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("#if (${qty1} != '')" ).append("\n"); 
		query.append("OPR1," ).append("\n"); 
		query.append("OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4," ).append("\n"); 
		query.append("OPR1_QTY_4H, OPR1_QTY_45,  NULL OPR1_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty2} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR2," ).append("\n"); 
		query.append("OPR2_QTY_2,  OPR2_QTY_2H,  OPR2_QTY_4," ).append("\n"); 
		query.append("OPR2_QTY_4H, OPR2_QTY_45,  NULL OPR2_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty3} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR3," ).append("\n"); 
		query.append("OPR3_QTY_2,  OPR3_QTY_2H,  OPR3_QTY_4," ).append("\n"); 
		query.append("OPR3_QTY_4H, OPR3_QTY_45,  NULL OPR3_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty4} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR4," ).append("\n"); 
		query.append("OPR4_QTY_2,  OPR4_QTY_2H,  OPR4_QTY_4," ).append("\n"); 
		query.append("OPR4_QTY_4H, OPR4_QTY_45,  NULL OPR4_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${qty5} != '')" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("OPR5," ).append("\n"); 
		query.append("OPR5_QTY_2,  OPR5_QTY_2H,  OPR5_QTY_4," ).append("\n"); 
		query.append("OPR5_QTY_4H, OPR5_QTY_45,  NULL OPR5_TEU" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("," ).append("\n"); 
		query.append("TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4," ).append("\n"); 
		query.append("TOT_QTY_4H,  TOT_QTY_45,   NULL TOT_TEU," ).append("\n"); 
		query.append("TW/DECODE(TH,0,1,TH) AV_WGT_2," ).append("\n"); 
		query.append("FW/DECODE(FH,0,1,FH) AV_WGT_4," ).append("\n"); 
		query.append("DECODE(FM,NULL,7,SORT) SORT," ).append("\n"); 
		query.append("1000 SEQ" ).append("\n"); 
		query.append("FROM   ( SELECT DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ," ).append("\n"); 
		query.append("GROUPING(SORT) S, GROUPING(WG) W," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("WHEN GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1" ).append("\n"); 
		query.append("ELSE 0" ).append("\n"); 
		query.append("END C4," ).append("\n"); 
		query.append("SORT," ).append("\n"); 
		query.append("MAX(OPR1) OPR1," ).append("\n"); 
		query.append("SUM(OPR1_WGT_2)  OPR1_QTY_2,  SUM(OPR1_WGT_2H) OPR1_QTY_2H, SUM(OPR1_WGT_4)  OPR1_QTY_4," ).append("\n"); 
		query.append("SUM(OPR1_WGT_4H) OPR1_QTY_4H, SUM(OPR1_WGT_45) OPR1_QTY_45," ).append("\n"); 
		query.append("MAX(OPR2) OPR2," ).append("\n"); 
		query.append("SUM(OPR2_WGT_2)  OPR2_QTY_2,  SUM(OPR2_WGT_2H) OPR2_QTY_2H, SUM(OPR2_WGT_4)  OPR2_QTY_4," ).append("\n"); 
		query.append("SUM(OPR2_WGT_4H) OPR2_QTY_4H, SUM(OPR2_WGT_45) OPR2_QTY_45," ).append("\n"); 
		query.append("MAX(OPR3) OPR3," ).append("\n"); 
		query.append("SUM(OPR3_WGT_2)  OPR3_QTY_2,  SUM(OPR3_WGT_2H) OPR3_QTY_2H, SUM(OPR3_WGT_4)  OPR3_QTY_4," ).append("\n"); 
		query.append("SUM(OPR3_WGT_4H) OPR3_QTY_4H, SUM(OPR3_WGT_45) OPR3_QTY_45," ).append("\n"); 
		query.append("MAX(OPR4) OPR4," ).append("\n"); 
		query.append("SUM(OPR4_WGT_2)  OPR4_QTY_2,  SUM(OPR4_WGT_2H) OPR4_QTY_2H, SUM(OPR4_WGT_4)  OPR4_QTY_4," ).append("\n"); 
		query.append("SUM(OPR4_WGT_4H) OPR4_QTY_4H, SUM(OPR4_WGT_45) OPR4_QTY_45," ).append("\n"); 
		query.append("MAX(OPR5) OPR5," ).append("\n"); 
		query.append("SUM(OPR5_WGT_2)  OPR5_QTY_2,  SUM(OPR5_WGT_2H) OPR5_QTY_2H, SUM(OPR5_WGT_4)  OPR5_QTY_4," ).append("\n"); 
		query.append("SUM(OPR5_WGT_4H) OPR5_QTY_4H, SUM(OPR5_WGT_45) OPR5_QTY_45," ).append("\n"); 
		query.append("SUM(TOT_WGT_2)   TOT_QTY_2,   SUM(TOT_WGT_2H)  TOT_QTY_2H,  SUM(TOT_WGT_4)   TOT_QTY_4," ).append("\n"); 
		query.append("SUM(TOT_WGT_4H)  TOT_QTY_4H,  SUM(TOT_WGT_45)  TOT_QTY_45," ).append("\n"); 
		query.append("SUM(TW) TW,      SUM(TH) TH,  SUM(FW) FW,      SUM(FH) FH" ).append("\n"); 
		query.append("FROM ( SELECT DISTINCT O.FM FM, O.WG WG, O.WSEQ WSEQ," ).append("\n"); 
		query.append("O.OPR1 OPR1," ).append("\n"); 
		query.append("O.TWGT_OPR1  OPR1_WGT_2,  O.THWGT_OPR1 OPR1_WGT_2H, O.FWGT_OPR1 OPR1_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR1 OPR1_WGT_4H, O.SWGT_OPR1 OPR1_WGT_45," ).append("\n"); 
		query.append("O.OPR2 OPR2," ).append("\n"); 
		query.append("O.TWGT_OPR2  OPR2_WGT_2,  O.THWGT_OPR2 OPR2_WGT_2H, O.FWGT_OPR2  OPR2_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR2 OPR2_WGT_4H, O.SWGT_OPR2  OPR2_WGT_45," ).append("\n"); 
		query.append("O.OPR3 OPR3," ).append("\n"); 
		query.append("O.TWGT_OPR3  OPR3_WGT_2,  O.THWGT_OPR3 OPR3_WGT_2H, O.FWGT_OPR3  OPR3_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR3 OPR3_WGT_4H, O.SWGT_OPR3  OPR3_WGT_45," ).append("\n"); 
		query.append("O.OPR4 OPR4," ).append("\n"); 
		query.append("O.TWGT_OPR4  OPR4_WGT_2,  O.THWGT_OPR4 OPR4_WGT_2H, O.FWGT_OPR4  OPR4_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR4 OPR4_WGT_4H, O.SWGT_OPR4  OPR4_WGT_45," ).append("\n"); 
		query.append("O.OPR5 OPR5," ).append("\n"); 
		query.append("O.TWGT_OPR5  OPR5_WGT_2,  O.THWGT_OPR5 OPR5_WGT_2H, O.FWGT_OPR5  OPR5_WGT_4," ).append("\n"); 
		query.append("O.FHWGT_OPR5 OPR5_WGT_4H, O.SWGT_OPR5  OPR5_WGT_45," ).append("\n"); 
		query.append("T.TWGT       TOT_WGT_2,   T.THWGT      TOT_WGT_2H,  T.FWGT       TOT_WGT_4," ).append("\n"); 
		query.append("T.FHWGT      TOT_WGT_4H,  T.SWGT       TOT_WGT_45," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.TWGT,0)+DECODE(O.FM,'F',T.THWGT,0)) TW," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0)) TH," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.FWGT,0)+DECODE(O.FM,'F',T.FHWGT,0)+DECODE(O.FM,'F',T.SWGT,0)) FW," ).append("\n"); 
		query.append("(DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0)) FH," ).append("\n"); 
		query.append("O.SORT" ).append("\n"); 
		query.append("FROM   ( SELECT FM, SORT, WG, WSEQ," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,OPR,0))        OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,TWGT,0))  TWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,THWGT,0)) THWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FWGT,0))  FWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,FHWGT,0)) FHWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,1,SWGT,0))  SWGT_OPR1," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,OPR,0))        OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,TWGT,0))  TWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,THWGT,0)) THWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FWGT,0))  FWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,FHWGT,0)) FHWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,2,SWGT,0))  SWGT_OPR2," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,OPR,0))        OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,TWGT,0))  TWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,THWGT,0)) THWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FWGT,0))  FWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,FHWGT,0)) FHWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,3,SWGT,0))  SWGT_OPR3," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,OPR,0))        OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,TWGT,0))  TWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,THWGT,0)) THWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FWGT,0))  FWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,FHWGT,0)) FHWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,4,SWGT,0))  SWGT_OPR4," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,OPR,0))        OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,TWGT,0))  TWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,THWGT,0)) THWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FWGT,0))  FWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,FHWGT,0)) FHWGT_OPR5," ).append("\n"); 
		query.append("MAX(DECODE(ROW_NUM,5,SWGT,0))  SWGT_OPR5" ).append("\n"); 
		query.append("FROM ( WITH S AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT FM," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("OPR," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0)) TWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0)) THWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0)) FWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,0)) FHWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0)) SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CRR_CD          OPR," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND    D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND    D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY FM, WG, WSEQ, OPR )," ).append("\n"); 
		query.append("DUMY AS" ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL )" ).append("\n"); 
		query.append("SELECT S1.FM, DECODE(S1.FM,'F',4,5) SORT, S2.WG, S2.WSEQ, S1.OPR," ).append("\n"); 
		query.append("NVL(S2.TWGT,0)  TWGT,  NVL(S2.THWGT,0) THWGT," ).append("\n"); 
		query.append("NVL(S2.FWGT,0)  FWGT,  NVL(S2.FHWGT,0) FHWGT," ).append("\n"); 
		query.append("NVL(S2.SWGT,0)  SWGT," ).append("\n"); 
		query.append("CASE" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty1] THEN 1" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty2] THEN 2" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty3] THEN 3" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty4] THEN 4" ).append("\n"); 
		query.append("WHEN S1.OPR = @[qty5] THEN 5" ).append("\n"); 
		query.append("END  ROW_NUM" ).append("\n"); 
		query.append("FROM   ( SELECT FM, OPR" ).append("\n"); 
		query.append("FROM   ( SELECT DISTINCT OPR" ).append("\n"); 
		query.append("FROM S ) S, DUMY ) S1, S S2" ).append("\n"); 
		query.append("WHERE S1.FM   = S2.FM(+)" ).append("\n"); 
		query.append("AND   S1.OPR  = S2.OPR(+) )" ).append("\n"); 
		query.append("GROUP BY SORT, FM, WG, WSEQ ) O," ).append("\n"); 
		query.append("( SELECT B.FM, A.SORT, A.WG, A.WSEQ," ).append("\n"); 
		query.append("NVL(A.TQTY,0)  TQTY," ).append("\n"); 
		query.append("NVL(A.TWGT,0)  TWGT," ).append("\n"); 
		query.append("NVL(A.THQTY,0) THQTY," ).append("\n"); 
		query.append("NVL(A.THWGT,0) THWGT," ).append("\n"); 
		query.append("NVL(A.FQTY,0)  FQTY," ).append("\n"); 
		query.append("NVL(A.FWGT,0)  FWGT," ).append("\n"); 
		query.append("NVL(A.FHQTY,0) FHQTY," ).append("\n"); 
		query.append("NVL(A.FHWGT,0) FHWGT," ).append("\n"); 
		query.append("NVL(A.SQTY,0)  SQTY," ).append("\n"); 
		query.append("NVL(A.SWGT,0)  SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT FM," ).append("\n"); 
		query.append("SORT," ).append("\n"); 
		query.append("WG," ).append("\n"); 
		query.append("WSEQ," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FHQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,0))                FHWGT," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY," ).append("\n"); 
		query.append("SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT" ).append("\n"); 
		query.append("FROM   ( SELECT D.FULL_MTY_CD     FM," ).append("\n"); 
		query.append("DECODE(D.FULL_MTY_CD,'F',4,5) SORT," ).append("\n"); 
		query.append("D.CNTR_WGT_GRP_CD WG," ).append("\n"); 
		query.append("( SELECT CNTR_WGT_GRP_SEQ" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST_WGT_GRP W" ).append("\n"); 
		query.append("WHERE  H.SLAN_CD    = W.SLAN_CD(+)" ).append("\n"); 
		query.append("AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)" ).append("\n"); 
		query.append("AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)" ).append("\n"); 
		query.append("AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ," ).append("\n"); 
		query.append("D.CNTR_TPSZ_CD    TP," ).append("\n"); 
		query.append("H.BKG_SHPR_OWNR_FLG OWNR," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT," ).append("\n"); 
		query.append("DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN" ).append("\n"); 
		query.append("FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D" ).append("\n"); 
		query.append("WHERE  H.VSL_CD            = @[vsl_cd]" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = @[skd_voy_no]" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = @[skd_dir_cd]" ).append("\n"); 
		query.append("AND    H.YD_CD             = @[yd_cd]" ).append("\n"); 
		query.append("AND    H.VSL_CD            = D.VSL_CD" ).append("\n"); 
		query.append("AND    H.SKD_VOY_NO        = D.SKD_VOY_NO" ).append("\n"); 
		query.append("AND    H.SKD_DIR_CD        = D.SKD_DIR_CD" ).append("\n"); 
		query.append("AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG" ).append("\n"); 
		query.append("AND    H.CRR_CD            = D.CRR_CD" ).append("\n"); 
		query.append("AND    H.YD_CD             = D.YD_CD" ).append("\n"); 
		query.append("AND    D.CBF_DP_CD         = 'V'" ).append("\n"); 
		query.append("#if (${crr_cd} != '')" ).append("\n"); 
		query.append("AND    D.CRR_CD IN ( @[qty1], @[qty2], @[qty3], @[qty4], @[qty5] )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${pod_cd} != '')" ).append("\n"); 
		query.append("AND	   D.POD_CD LIKE @[pod_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${mlb_cd} != '')" ).append("\n"); 
		query.append("AND	   D.MLB_CD LIKE @[mlb_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("AND    CASE WHEN @[dcgo_flg] IS NULL AND @[rc_flg] IS NULL AND @[awk_cgo_flg] IS NULL AND @[bb_cgo_flg] IS NULL AND @[stwg_cd] IS NULL THEN 1" ).append("\n"); 
		query.append("ELSE DECODE(D.DCGO_FLG,@[dcgo_flg],1,0)+DECODE(D.RC_FLG,@[rc_flg],1,0)+DECODE(D.AWK_CGO_FLG,@[awk_cgo_flg],1,0)+DECODE(D.BB_CGO_FLG,@[bb_cgo_flg],1,0)+DECODE(DECODE(D.STWG_CD,NULL,'N','Y'),@[stwg_cd],1,0)" ).append("\n"); 
		query.append("END  >=1 )" ).append("\n"); 
		query.append("WHERE CNTR_RN = 1" ).append("\n"); 
		query.append("GROUP BY FM, SORT, WG, WSEQ ) A," ).append("\n"); 
		query.append("( SELECT 'F' FM FROM DUAL" ).append("\n"); 
		query.append("UNION ALL" ).append("\n"); 
		query.append("SELECT 'E' FM FROM DUAL ) B" ).append("\n"); 
		query.append("WHERE B.FM = A.FM(+) ) T" ).append("\n"); 
		query.append("WHERE  O.FM           = T.FM" ).append("\n"); 
		query.append("AND    NVL(O.WG,'N')  = NVL(T.WG,'N') )" ).append("\n"); 
		query.append("GROUP BY CUBE(SORT, WG) )" ).append("\n"); 
		query.append("WHERE NVL(C4,0) = 1" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("ORDER BY SEQ, DECODE(POD,'Grand Total','ZZZZZ',POD), NVL(MLB,'ZZZ')," ).append("\n"); 
		query.append("DECODE(FM,'Grand Weight','Z','Grand Total','Y','Sub Weight','X','Sub Total','W','Empty Total','V','Full Total','U','Total Weight','T','Total','S',SORT)," ).append("\n"); 
		query.append("DECODE(WG,'Total Weight','Z','Total','Y',NULL,'X',WSEQ) ASC" ).append("\n"); 

	}
}