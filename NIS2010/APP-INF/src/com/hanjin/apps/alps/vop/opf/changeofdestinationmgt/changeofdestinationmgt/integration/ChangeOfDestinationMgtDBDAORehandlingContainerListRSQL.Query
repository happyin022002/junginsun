<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ChangeOfDestinationMgtDBDAORehandlingContainerListRSQL">
			<desc><![CDATA[dummy]]></desc>
			<sql><![CDATA[
WITH MAX_CLPT_SEQ AS
(
SELECT MAX(V.CLPT_SEQ) CLPT_SEQ
FROM   VSK_VSL_PORT_SKD V
WHERE  V.VSL_CD      = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd
AND    V.SKD_VOY_NO  = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
AND    V.SKD_DIR_CD  = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
AND    V.VPS_PORT_CD IN ( SELECT DISTINCT B.PORT_CD
                          FROM   VSK_VSL_PORT_SKD V, BAY_PLAN B
                          WHERE  V.VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd         
                          AND    V.SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                          AND    V.SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                          AND    V.CLPT_SEQ   < ( SELECT CLPT_SEQ
                                                  FROM   VSK_VSL_PORT_SKD
                                                  WHERE  VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                                                  AND    SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                                                  AND    SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                                                  AND    YD_CD      = @[cod_rhnd_port_yd_cd]       --:cod_rhnd_port_yd_cd
                                                  AND    ROWNUM     = 1 )
                          AND    V.VSL_CD     = B.VSL_CD
                          AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                           'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO) = B.VOY_NO
                          AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                           'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD) = B.DIR_CD
                          AND    V.VPS_PORT_CD = B.PORT_CD
                          AND    B.PLAN_TYPE   = 'F' )
)                              
--SELECT TPSZ, COUNT(CNTR) QTY, FM, CATE
SELECT CNTR AS CNTR
,      CATE AS CGO_CATE_CD
,      PORT AS PORT
,      POSITION AS POSITION
FROM   ( 
         /* Q1 */
		 SELECT DISTINCT TPSZ, CNTR, FM, PORT, POSITION, CATE
         FROM   ( 
				  /* Q2 */ 
				  /* Q3 */			
		          SELECT TPSZ, CNTR, FM, PORT, POSITION, CATE
                  FROM   ( /* Q33 */
                          SELECT /*+ LEADING(TP V B C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT
                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||
                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                                  C.ID                                                                   CNTR,
                                  C.FE                                                                   FM,
                                  C.PORT_CD                                                              PORT,
                                  C.BAY||C.ROWW||C.TIER                                                  POSITION,
                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF',
                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE
                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T,
                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S
                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no
                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   TP.CNTR_NO in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '4'
                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )
                           AND    V.VSL_CD           = B.VSL_CD
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
                           AND    V.VPS_PORT_CD      = B.PORT_CD
                           AND    B.PLAN_TYPE        = 'F'
                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   B.ID in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    B.VSL_CD           = C.VSL_CD
                           AND    B.VOY_NO           = C.VOY_NO
                           AND    B.DIR_CD           = C.DIR_CD
                           AND    B.PORT_CD          = C.PORT_CD
                           AND    B.CALL_IND         = C.CALL_IND
                           AND    C.PLAN_TYPE        = 'F'
                           AND    B.BAY              = C.BAY
                           AND    B.ROWW             = C.ROWW
                           AND    B.TIER             < C.TIER
                           AND    C.TIER             < '40'
                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
                           AND    B.VSL_CD           = M.VSL_CD
                           AND    B.VOY_NO           = M.SKD_VOY_NO
                           AND    B.DIR_CD           = M.SKD_DIR_CD
                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]    --:cod_rhnd_port_yd_cd
                           AND    C.VSL_CD           = S.VSL_CD
                           AND    C.VOY_NO           = S.SKD_VOY_NO
                           AND    C.DIR_CD           = S.SKD_DIR_CD
                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD
                           AND    M.CLPT_SEQ         < S.CLPT_SEQ
                           /* Q33 */
                           UNION ALL
                           /* Q34 */ --   
                           SELECT /*+ LEADING(TP V B C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT
                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||
                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                                  C.ID                                                                   CNTR,
                                  C.FE                                                                   FM,
                                  C.PORT_CD                                                              PORT,
                                  C.BAY||C.ROWW||C.TIER                                                  POSITION,
                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF',
                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE
                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T,
                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S
                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no
                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   TP.CNTR_NO in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '4'
                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )
                           AND    V.VSL_CD           = B.VSL_CD
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
                           AND    V.VPS_PORT_CD      = B.PORT_CD
                           AND    B.PLAN_TYPE        = 'F'
                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   B.ID in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    B.VSL_CD           = C.VSL_CD
                           AND    B.VOY_NO           = C.VOY_NO
                           AND    B.DIR_CD           = C.DIR_CD
                           AND    B.PORT_CD          = C.PORT_CD
                           AND    B.CALL_IND         = C.CALL_IND
                           AND    C.PLAN_TYPE        = 'F'
                           AND    B.BAY              = C.BAY
                           AND    B.TIER             < C.TIER
                           AND    C.TIER             >= '40'

                           AND    ( DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                   >= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                         FROM   OPF_HTCH_CVR_LODG_LIST
                                         WHERE  VSL_CD     = B.VSL_CD
                                         AND    VSL_BAY_NO = B.BAY
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )
                           OR     DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                   >= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                         FROM   OPF_HTCH_CVR_LODG_LIST
                                         WHERE  VSL_CD     = B.VSL_CD
                                         AND    VSL_BAY_NO = B.BAY
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )
                           AND    ( DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                     <= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW
                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                          WHERE  VSL_CD     = B.VSL_CD
                                          AND    VSL_BAY_NO = B.BAY
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )
                           OR     DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                     <= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW
                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                          WHERE  VSL_CD     = B.VSL_CD
                                          AND    VSL_BAY_NO = B.BAY
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )
                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
                           AND    B.VSL_CD           = M.VSL_CD
                           AND    B.VOY_NO           = M.SKD_VOY_NO
                           AND    B.DIR_CD           = M.SKD_DIR_CD
                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]       --:cod_rhnd_port_yd_cd
                           AND    C.VSL_CD           = S.VSL_CD
                           AND    C.VOY_NO           = S.SKD_VOY_NO
                           AND    C.DIR_CD           = S.SKD_DIR_CD
                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD
                           AND    M.CLPT_SEQ         < S.CLPT_SEQ                            
                           /* Q34 */
                           UNION ALL
                           /* Q44 */
                           SELECT /*+ LEADING(TP V B @CCC C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT 
                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||
                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                                  C.ID                                                                   CNTR,
                                  C.FE                                                                   FM,
                                  C.PORT_CD                                                              PORT,
                                  C.BAY||C.ROWW||C.TIER                                                  POSITION,
                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF',
                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE
                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T,
                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S
                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no
                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   TP.CNTR_NO in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '4'
                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )
                           AND    V.VSL_CD           = B.VSL_CD
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
                           AND    V.VPS_PORT_CD      = B.PORT_CD
                           AND    B.PLAN_TYPE        = 'F'
                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   B.ID in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    B.VSL_CD           = C.VSL_CD
                           AND    B.VOY_NO           = C.VOY_NO
                           AND    B.DIR_CD           = C.DIR_CD
                           AND    B.PORT_CD          = C.PORT_CD
                           AND    B.CALL_IND         = C.CALL_IND
                           AND    C.PLAN_TYPE        = 'F'
                           AND    C.BAY IN ( SELECT /*+ QB_NAME(CCC) index(n xak9OPF_HTCH_CVR_LODG_LIST) */
                                                    DECODE(SIGN(B.TIER - 40),1,B.BAY,0,B.BAY,N.VSL_BAY_NO) VSL_BAY_NO
                                             FROM   OPF_HTCH_CVR_LODG_LIST O, OPF_HTCH_CVR_LODG_LIST N
                                             WHERE  O.VSL_CD = B.VSL_CD
                                             AND    O.VSL_BAY_NO = B.BAY
                                             AND    ( DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)
                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )
                                             OR     DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)
                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )
                                             AND    ( DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)
                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )
                                             OR     DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)
                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )
                                             AND    O.VSL_CD = N.VSL_CD
                                             AND    O.ST_DECK_NO = N.ST_DECK_NO
                                             AND    O.END_DECK_NO = N.END_DECK_NO
                                             AND    O.CNN_HTCH_CVR_IDX_NO = N.CNN_HTCH_CVR_IDX_NO
                                             )
                           AND    B.TIER            < C.TIER
                           AND    C.TIER            >= '40'
                           AND    ( DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                   >= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                         FROM   OPF_HTCH_CVR_LODG_LIST
                                         WHERE  VSL_CD     = B.VSL_CD
                                         AND    VSL_BAY_NO = B.BAY
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )
                           OR     DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                   >= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                         FROM   OPF_HTCH_CVR_LODG_LIST
                                         WHERE  VSL_CD     = B.VSL_CD
                                         AND    VSL_BAY_NO = B.BAY
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )
                           AND    ( DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                     <= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW
                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                          WHERE  VSL_CD     = B.VSL_CD
                                          AND    VSL_BAY_NO = B.BAY
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )
                           OR     DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                     <= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW
                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                          WHERE  VSL_CD     = B.VSL_CD
                                          AND    VSL_BAY_NO = B.BAY
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )
                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
                           AND    B.VSL_CD           = M.VSL_CD
                           AND    B.VOY_NO           = M.SKD_VOY_NO
                           AND    B.DIR_CD           = M.SKD_DIR_CD
                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]        --:cod_rhnd_port_yd_cd
                           AND    C.VSL_CD           = S.VSL_CD
                           AND    C.VOY_NO           = S.SKD_VOY_NO
                           AND    C.DIR_CD           = S.SKD_DIR_CD
                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD
                           AND    M.CLPT_SEQ         < S.CLPT_SEQ 
                           )                  
				  /* Q3 */
                  UNION All                
					/* Q4 */ -- 	
                  SELECT TPSZ, CNTR, FM, PORT, POSITION, CATE
                  FROM   ( 
                           /* Q41 */
                           SELECT /*+ LEADING(TP V B @CCC C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT 
                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||
                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                                  C.ID                                                                   CNTR,
                                  C.FE                                                                   FM,
                                  C.PORT_CD                                                              PORT,
                                  C.BAY||C.ROWW||C.TIER                                                  POSITION,
                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF',
                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE
                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T,
                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S
                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no
                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   TP.CNTR_NO in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '2'
                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )
                           AND    V.VSL_CD           = B.VSL_CD
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
                           AND    V.VPS_PORT_CD      = B.PORT_CD
                           AND    B.PLAN_TYPE        = 'F'
                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   B.ID in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    B.VSL_CD           = C.VSL_CD
                           AND    B.VOY_NO           = C.VOY_NO
                           AND    B.DIR_CD           = C.DIR_CD
                           AND    B.PORT_CD          = C.PORT_CD
                           AND    B.CALL_IND         = C.CALL_IND
                           AND    C.PLAN_TYPE        = 'F'
                           AND    C.BAY IN ( SELECT /*+ QB_NAME(CCC) */
                                                    DECODE(SIGN(B.TIER - 40),1,B.BAY,0,B.BAY,N.VSL_BAY_NO) VSL_BAY_NO
                                             FROM   OPF_HTCH_CVR_LODG_LIST O, OPF_HTCH_CVR_LODG_LIST N
                                             WHERE  O.VSL_CD     = B.VSL_CD
                                             AND    O.VSL_BAY_NO = B.BAY
                                             AND    ( DECODE(MOD(O.ST_HLD_NO,2),1,-O.ST_HLD_NO,O.ST_HLD_NO)
                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))
                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))
                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )
                                             OR     DECODE(MOD(O.ST_HLD_NO,2),1,-O.ST_HLD_NO,O.ST_HLD_NO)
                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))
                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))
                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )
                                             AND    ( DECODE(MOD(O.END_HLD_NO,2),1,-O.END_HLD_NO,O.END_HLD_NO)
                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))
                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))
                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )
                                             OR     DECODE(MOD(O.END_HLD_NO,2),1,-O.END_HLD_NO,O.END_HLD_NO)
                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))
                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1,
                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))
                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )
                                             AND    O.VSL_CD              = N.VSL_CD
                                             AND    O.ST_HLD_NO           = N.ST_HLD_NO
                                             AND    O.END_HLD_NO          = N.END_HLD_NO
                                             AND    O.CNN_HTCH_CVR_IDX_NO = N.CNN_HTCH_CVR_IDX_NO
                                             AND    O.VSL_BAY_NO <> N.VSL_BAY_NO
                                             )
                           AND    B.ROWW = C.ROWW
                           AND    C.TIER < '40'
                           AND    C.TIER > ( SELECT /*+ index(BAY_PLAN xak1bay_plan) */ MAX(TIER)
                                             FROM   BAY_PLAN
                                             WHERE  VSL_CD  = B.VSL_CD
                                             AND    VOY_NO  = B.VOY_NO
                                             AND    DIR_CD  = B.DIR_CD
                                             AND    PORT_CD = B.PORT_CD
                                             AND    BAY     = B.BAY
                                             AND    ROWW    = B.ROWW )
                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
                           AND    B.VSL_CD           = M.VSL_CD
                           AND    B.VOY_NO           = M.SKD_VOY_NO
                           AND    B.DIR_CD           = M.SKD_DIR_CD
                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]        --:cod_rhnd_port_yd_cd
                           AND    C.VSL_CD           = S.VSL_CD
                           AND    C.VOY_NO           = S.SKD_VOY_NO
                           AND    C.DIR_CD           = S.SKD_DIR_CD
                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD
                           AND    M.CLPT_SEQ         < S.CLPT_SEQ
                           /* Q41 */
                           UNION ALL
                           /* Q43 */
                           SELECT /*+ LEADING(TP V B C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT 
                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||
                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                                  C.ID                                                                   CNTR,
                                  C.FE                                                                   FM,
                                  C.PORT_CD                                                              PORT,
                                  C.BAY||C.ROWW||C.TIER                                                  POSITION,
                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF',
                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE
                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T,
                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S
                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no
                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   TP.CNTR_NO in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '2'
                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )
                           AND    V.VSL_CD           = B.VSL_CD
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
                           AND    V.VPS_PORT_CD      = B.PORT_CD
                           AND    B.PLAN_TYPE        = 'F'
                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   B.ID in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    B.VSL_CD           = C.VSL_CD
                           AND    B.VOY_NO           = C.VOY_NO
                           AND    B.DIR_CD           = C.DIR_CD
                           AND    B.PORT_CD          = C.PORT_CD
                           AND    B.CALL_IND         = C.CALL_IND
                           AND    C.PLAN_TYPE        = 'F'
                           AND    B.BAY              = C.BAY
                           AND    B.ROWW             = C.ROWW
                           AND    C.TIER             < '40'
                           AND    C.TIER             > B.TIER
                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
                           AND    B.VSL_CD           = M.VSL_CD
                           AND    B.VOY_NO           = M.SKD_VOY_NO
                           AND    B.DIR_CD           = M.SKD_DIR_CD
                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]       --:cod_rhnd_port_yd_cd
                           AND    C.VSL_CD           = S.VSL_CD
                           AND    C.VOY_NO           = S.SKD_VOY_NO
                           AND    C.DIR_CD           = S.SKD_DIR_CD
                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD
                           AND    M.CLPT_SEQ         < S.CLPT_SEQ
                           /* Q43 */
                           UNION ALL
                           /* Q44 */
                           SELECT /*+ LEADING(TP V B @CCC C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT 
                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||
                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                                  C.ID                                                                   CNTR,
                                  C.FE                                                                   FM,
                                  C.PORT_CD                                                              PORT,
                                  C.BAY||C.ROWW||C.TIER                                                  POSITION,
                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF',
                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE
                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T,
                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S
                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no
                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   TP.CNTR_NO in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '2'
                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )
                           AND    V.VSL_CD           = B.VSL_CD
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
                           AND    V.VPS_PORT_CD      = B.PORT_CD
                           AND    B.PLAN_TYPE        = 'F'
                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
	                         #if (${cntr_no} != '') 
	                           AND   B.ID in ( 
	                         #foreach($key IN ${cntr_no}) 
	                         	#if($velocityCount < $cntr_no.size()) 
	                         	'$key', 
	                         	#else 
	                         	'$key' 
	                         	#end 
	                         #end 
	                         )  
	                         #end
                           AND    B.VSL_CD           = C.VSL_CD
                           AND    B.VOY_NO           = C.VOY_NO
                           AND    B.DIR_CD           = C.DIR_CD
                           AND    B.PORT_CD          = C.PORT_CD
                           AND    B.CALL_IND         = C.CALL_IND
                           AND    C.PLAN_TYPE        = 'F'
                           AND    C.BAY IN ( SELECT /*+ QB_NAME(CCC) index(n xak9OPF_HTCH_CVR_LODG_LIST) */
                                                    DECODE(SIGN(B.TIER - 40),1,B.BAY,0,B.BAY,N.VSL_BAY_NO) VSL_BAY_NO
                                             FROM   OPF_HTCH_CVR_LODG_LIST O, OPF_HTCH_CVR_LODG_LIST N
                                             WHERE  O.VSL_CD = B.VSL_CD
                                             AND    O.VSL_BAY_NO = B.BAY
                                             AND    ( DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)
                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )
                                             OR     DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)
                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )
                                             AND    ( DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)
                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )
                                             OR     DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)
                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                                          WHERE  VSL_CD     = B.VSL_CD
                                                          AND    VSL_BAY_NO = B.BAY
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )
                                             AND    O.VSL_CD = N.VSL_CD
                                             AND    O.ST_DECK_NO = N.ST_DECK_NO
                                             AND    O.END_DECK_NO = N.END_DECK_NO
                                             AND    O.CNN_HTCH_CVR_IDX_NO = N.CNN_HTCH_CVR_IDX_NO
                                             )
                           AND    B.TIER            < C.TIER
                           AND    C.TIER            >= '40'
                           AND    ( DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                   >= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                         FROM   OPF_HTCH_CVR_LODG_LIST
                                         WHERE  VSL_CD     = B.VSL_CD
                                         AND    VSL_BAY_NO = B.BAY
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )
                           OR     DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                   >= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW
                                         FROM   OPF_HTCH_CVR_LODG_LIST
                                         WHERE  VSL_CD     = B.VSL_CD
                                         AND    VSL_BAY_NO = B.BAY
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )
                           AND    ( DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                     <= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW
                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                          WHERE  VSL_CD     = B.VSL_CD
                                          AND    VSL_BAY_NO = B.BAY
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )
                           OR     DECODE(SIGN(B.TIER - 40),1,C.ROWW,0,C.ROWW,DECODE(MOD(C.ROWW,2),1,-C.ROWW,C.ROWW))
                                     <= ( DECODE(SIGN(B.TIER - 40),1,B.ROWW,0,B.ROWW,
                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW
                                          FROM   OPF_HTCH_CVR_LODG_LIST
                                          WHERE  VSL_CD     = B.VSL_CD
                                          AND    VSL_BAY_NO = B.BAY
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))
                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)
                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1,
                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))
                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )
                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
                           AND    B.VSL_CD           = M.VSL_CD
                           AND    B.VOY_NO           = M.SKD_VOY_NO
                           AND    B.DIR_CD           = M.SKD_DIR_CD
                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]        --:cod_rhnd_port_yd_cd
                           AND    C.VSL_CD           = S.VSL_CD
                           AND    C.VOY_NO           = S.SKD_VOY_NO
                           AND    C.DIR_CD           = S.SKD_DIR_CD
                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD
                           AND    M.CLPT_SEQ         < S.CLPT_SEQ 
                           /* Q44 */
                           ) 
						   /* Q4 */
         UNION ALL
		 /* Q5 */
         SELECT /*+ LEADING(@VVV V B O N) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ 
         NVL(T.CNTR_TPSZ_CD,DECODE(B.CNTR_TYPE,'N','D',B.CNTR_TYPE)|| 
                    DECODE(B.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ,
                B.ID                                                                   CNT,
                B.FE                                                                   FM,
                B.PORT_CD                                                              PORT,
                B.BAY||B.ROWW||B.TIER                                                  POSITION,
                DECODE(B.CARGO_TYPE,'DG','DG',DECODE(B.CARGO_TYPE,'RF','RF',
                  DECODE(B.CARGO_TYPE,'AK','AK',DECODE(B.CARGO_TYPE,'BB','BB','DR')))) CATE
         FROM   BAY_PLAN B, VSK_VSL_PORT_SKD V, MDM_CNTR_TP_SZ T,
                VSK_VSL_PORT_SKD O, VSK_VSL_PORT_SKD N
         WHERE  V.VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
         AND    V.SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
         AND    V.SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
         AND    V.CLPT_SEQ   =  ( SELECT /*+ QB_NAME(VVV) */ DECODE(VPS_PORT_CD,'EGSUZ',CLPT_SEQ - 1,'PAPAC',CLPT_SEQ - 1,CLPT_SEQ)
                                  FROM   VSK_VSL_PORT_SKD V
                                  WHERE  V.VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                                  AND    V.SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                                  AND    V.SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                                  AND    V.CLPT_SEQ = ( SELECT MAX(V.CLPT_SEQ) - 1
                                                        FROM   VSK_VSL_PORT_SKD V
                                                        WHERE  V.VSL_CD         = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                                                        AND    V.SKD_VOY_NO     = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                                                        AND    V.SKD_DIR_CD     = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                                                        AND    V.VPS_PORT_CD    IN ( SELECT DISTINCT B.PORT_CD
                                                                                     FROM   VSK_VSL_PORT_SKD V, BAY_PLAN B
                                                                                     WHERE  V.VSL_CD      = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                                                                                     AND    V.SKD_VOY_NO  = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                                                                                     AND    V.SKD_DIR_CD  = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                                                                                     AND    V.CLPT_SEQ    <= ( SELECT CLPT_SEQ
                                                                                                               FROM   VSK_VSL_PORT_SKD V
                                                                                                               WHERE  V.VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    
                                                                                                               AND    V.SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no
                                                                                                               AND    V.SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd
                                                                                                               AND    V.YD_CD      = @[old_pod_yd_cd]          --:old_pod_yd_cd
                                                                                                               AND    ROWNUM       = 1 )
                                                                                     AND    V.VSL_CD       = B.VSL_CD
                                                                                     AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                                                                                                      'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO) = B.VOY_NO
                                                                                     AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                                                                                                      'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD) = B.DIR_CD
                                                                                     AND    V.VPS_PORT_CD  = B.PORT_CD
                                                                                     AND    B.PLAN_TYPE    = 'F' ) ) )
         AND    V.VSL_CD           = B.VSL_CD
         AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO,
                                          'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO
         AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD,
                                          'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD
         --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list
                         #if (${cntr_no} != '') 
                           AND   B.ID in ( 
                         #foreach($key IN ${cntr_no}) 
                         	#if($velocityCount < $cntr_no.size()) 
                         	'$key', 
                         	#else 
                         	'$key' 
                         	#end  
                         #end 
                         )  
                         #end
         AND    V.VPS_PORT_CD      = B.PORT_CD
         AND    B.PLAN_TYPE        = 'F'
         AND    B.SZTP             = T.CNTR_TPSZ_ISO_CD(+)
         AND    V.VSL_CD           = O.VSL_CD
         AND    V.SKD_VOY_NO       = O.SKD_VOY_NO
         AND    V.SKD_DIR_CD       = O.SKD_DIR_CD
         AND    O.YD_CD            = @[old_pod_yd_cd]      --:old_pod_yd_cd
         AND    V.VSL_CD           = N.VSL_CD
         AND    V.SKD_VOY_NO       = N.SKD_VOY_NO
         AND    V.SKD_DIR_CD       = N.SKD_DIR_CD
         AND    N.YD_CD            = @[new_pod_yd_cd]      --:new_pod_yd_cd
         AND    O.CLPT_SEQ         < N.CLPT_SEQ 
		 /* Q5 */
		 /* Q2 */
         ) 
		 /* Q1 */
		 ) 
WHERE TPSZ = @[tpsz] --:cntr_tp_sz
AND   FM   = @[cntr_cgo_tp_cd] --:fm
AND   CATE = @[cgo_cate_cd]
GROUP BY CNTR, PORT, POSITION, CATE
ORDER BY CNTR			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="cod_rhnd_port_yd_cd" type="12" value="" out="N"/>
				<param name="bkg_no" type="12" value="" out="N"/>
				<param name="old_pod_yd_cd" type="12" value="" out="N"/>
				<param name="new_pod_yd_cd" type="12" value="" out="N"/>
				<param name="tpsz" type="12" value="" out="N"/>
				<param name="cntr_cgo_tp_cd" type="12" value="" out="N"/>
				<param name="cgo_cate_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
