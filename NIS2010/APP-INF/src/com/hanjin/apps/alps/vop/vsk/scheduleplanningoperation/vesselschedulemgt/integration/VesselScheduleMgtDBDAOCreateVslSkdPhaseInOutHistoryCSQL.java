/*=========================================================
*Copyright(c) 2016 CyberLogitec
*@FileName : VesselScheduleMgtDBDAOCreateVslSkdPhaseInOutHistoryCSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2016.06.09
*@LastModifier : 
*@LastVersion : 1.0
* 2016.06.09 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.vsk.scheduleplanningoperation.vesselschedulemgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class VesselScheduleMgtDBDAOCreateVslSkdPhaseInOutHistoryCSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * SKD 변경시 Phase In/Out의 경우 히스토리 생성(SPC모듈 에서 참조)
	  * </pre>
	  */
	public VesselScheduleMgtDBDAOCreateVslSkdPhaseInOutHistoryCSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("upd_usr_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("clpt_ind_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vps_port_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cre_usr_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_voy_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.vsk.scheduleplanningoperation.vesselschedulemgt.integration").append("\n"); 
		query.append("FileName : VesselScheduleMgtDBDAOCreateVslSkdPhaseInOutHistoryCSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("MERGE INTO VSK_PHS_IO_HIS HIS" ).append("\n"); 
		query.append("    USING" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("        SELECT      X.VSL_CD" ).append("\n"); 
		query.append("                            , X.SKD_VOY_NO" ).append("\n"); 
		query.append("                            , X.SKD_DIR_CD" ).append("\n"); 
		query.append("                            , X.VPS_PORT_CD" ).append("\n"); 
		query.append("                            , X.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                            , X.CLPT_SEQ" ).append("\n"); 
		query.append("                            , X.YD_CD" ).append("\n"); 
		query.append("                            , X.SLAN_CD AS VSL_SLAN_CD" ).append("\n"); 
		query.append("                            , X.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                            , X.PF_SVC_TP_CD" ).append("\n"); 
		query.append("                            , X.PF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                            , X.REF_VSL_CD" ).append("\n"); 
		query.append("                            , X.REF_SKD_VOY_NO" ).append("\n"); 
		query.append("                            , X.REF_SKD_DIR_CD" ).append("\n"); 
		query.append("                            , X.REF_VPS_PORT_CD" ).append("\n"); 
		query.append("                            , X.REF_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                            , X.REF_CLPT_SEQ" ).append("\n"); 
		query.append("                            , X.REF_YD_CD" ).append("\n"); 
		query.append("                            , X.REF_VSL_SLAN_CD" ).append("\n"); 
		query.append("                            , X.REF_PF_SVC_TP_CD" ).append("\n"); 
		query.append("                            , X.REF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                            , @[cre_usr_id] AS CRE_USR_ID" ).append("\n"); 
		query.append("                            , SYSDATE   AS CRE_DT" ).append("\n"); 
		query.append("                            , @[upd_usr_id] AS UPD_USR_ID" ).append("\n"); 
		query.append("                            , SYSDATE   AS UPD_DT" ).append("\n"); 
		query.append("                FROM    (" ).append("\n"); 
		query.append("                        SELECT     T3.SLAN_CD " ).append("\n"); 
		query.append("                                  , T3.VSL_CD" ).append("\n"); 
		query.append("                                  , T3.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  , T3.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  , T4.VSL_SLAN_DIR_SEQ AS DIR_SEQ" ).append("\n"); 
		query.append("                                  , T3.VPS_PORT_CD" ).append("\n"); 
		query.append("                                  , T3.CLPT_SEQ" ).append("\n"); 
		query.append("                                  , T3.YD_CD" ).append("\n"); 
		query.append("                                  , T3.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                  , T3.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                                  , T3.PF_SVC_TP_CD" ).append("\n"); 
		query.append("                                  , T3.PORT_ROTN_SEQ AS PF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                                  , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.SLAN_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.SLAN_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.SLAN_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.SLAN_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.SLAN_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                                    END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                       " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.SLAN_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.SLAN_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.SLAN_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.SLAN_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.SLAN_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                               END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_VSL_SLAN_CD" ).append("\n"); 
		query.append("                                  " ).append("\n"); 
		query.append("                                , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.VSL_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.VSL_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.VSL_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.VSL_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.VSL_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.VSL_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.VSL_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.VSL_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.VSL_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.VSL_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_VSL_CD" ).append("\n"); 
		query.append("                                                        " ).append("\n"); 
		query.append("                                  , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.SKD_VOY_NO, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.SKD_VOY_NO, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.SKD_VOY_NO, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.SKD_VOY_NO, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.SKD_VOY_NO, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.SKD_VOY_NO, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.SKD_VOY_NO, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.SKD_VOY_NO, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.SKD_VOY_NO, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.SKD_VOY_NO, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_SKD_VOY_NO" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.SKD_DIR_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.SKD_DIR_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.SKD_DIR_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.SKD_DIR_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.SKD_DIR_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.SKD_DIR_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.SKD_DIR_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.SKD_DIR_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.SKD_DIR_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.SKD_DIR_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_SKD_DIR_CD" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.VPS_PORT_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.VPS_PORT_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.VPS_PORT_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.VPS_PORT_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.VPS_PORT_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.VPS_PORT_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.VPS_PORT_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.VPS_PORT_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.VPS_PORT_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.VPS_PORT_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_VPS_PORT_CD" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.CLPT_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.CLPT_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.CLPT_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.CLPT_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.CLPT_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.CLPT_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.CLPT_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.CLPT_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.CLPT_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.CLPT_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_CLPT_SEQ" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.YD_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.YD_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.YD_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.YD_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.YD_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.YD_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.YD_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.YD_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.YD_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.YD_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_YD_CD" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.CLPT_IND_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.CLPT_IND_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.CLPT_IND_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.CLPT_IND_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.CLPT_IND_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.CLPT_IND_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.CLPT_IND_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.CLPT_IND_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_ETA_DT, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.CLPT_IND_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.CLPT_IND_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_PF_SVC_TP_CD" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LAG (T3.PORT_ROTN_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LAG (T3.PORT_ROTN_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LAG (T3.PORT_ROTN_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LAG (T3.PORT_ROTN_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LAG (T3.PORT_ROTN_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END" ).append("\n"); 
		query.append("                                         WHEN   T3.SKD_CNG_STS_CD = 'I' " ).append("\n"); 
		query.append("                                                THEN" ).append("\n"); 
		query.append("                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                     THEN   LEAD (T3.PORT_ROTN_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        " ).append("\n"); 
		query.append("                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                     THEN" ).append("\n"); 
		query.append("                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                 THEN   LEAD (T3.PORT_ROTN_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     " ).append("\n"); 
		query.append("                                                                 THEN" ).append("\n"); 
		query.append("                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                             THEN   LEAD (T3.PORT_ROTN_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                             THEN" ).append("\n"); 
		query.append("                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                         THEN   LEAD (T3.PORT_ROTN_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL" ).append("\n"); 
		query.append("                                                                                         THEN    " ).append("\n"); 
		query.append("                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL" ).append("\n"); 
		query.append("                                                                                                     THEN   LEAD (T3.PORT_ROTN_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                                                                                     END" ).append("\n"); 
		query.append("                                                                                         END" ).append("\n"); 
		query.append("                                                                            END" ).append("\n"); 
		query.append("                                                                END                                                        " ).append("\n"); 
		query.append("                                                END " ).append("\n"); 
		query.append("                                   END  AS REF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                                   " ).append("\n"); 
		query.append("                                  " ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("                        FROM        (                                   " ).append("\n"); 
		query.append("                                    SELECT  P.PF_SVC_TP_CD, P.PORT_ROTN_SEQ, X.*" ).append("\n"); 
		query.append("                                    FROM    (" ).append("\n"); 
		query.append("                                            SELECT  V1.VSL_SLAN_CD, V1.PF_SKD_TP_CD, V2.*" ).append("\n"); 
		query.append("                                            FROM    VSK_VSL_SKD V1" ).append("\n"); 
		query.append("                                                    , VSK_VSL_PORT_SKD V2" ).append("\n"); 
		query.append("                                            WHERE   1=1" ).append("\n"); 
		query.append("                                            AND     V2.VSL_CD   = V1.VSL_CD" ).append("\n"); 
		query.append("                                            AND     V2.SKD_VOY_NO = V1.SKD_VOY_NO" ).append("\n"); 
		query.append("                                            AND     V2.SKD_DIR_CD = V1.SKD_DIR_CD" ).append("\n"); 
		query.append("                                            AND     V2.SLAN_CD    = V1.VSL_SLAN_CD" ).append("\n"); 
		query.append("                                            ) X" ).append("\n"); 
		query.append("                                            , VSK_PF_SKD_DTL P" ).append("\n"); 
		query.append("                                            , MDM_VSL_SVC_LANE_DIR M" ).append("\n"); 
		query.append("                                    WHERE   1=1" ).append("\n"); 
		query.append("                                    AND     X.SLAN_CD   = P.VSL_SLAN_CD (+)" ).append("\n"); 
		query.append("                                    AND     X.PF_SKD_TP_CD  = P.PF_SVC_TP_CD (+)" ).append("\n"); 
		query.append("                                    AND     X.VPS_PORT_CD   = P.PORT_CD (+)" ).append("\n"); 
		query.append("                                    AND     X.SKD_DIR_CD    = P.SKD_DIR_CD (+)" ).append("\n"); 
		query.append("                                    AND     X.CLPT_IND_SEQ  = P.CLPT_SEQ (+)" ).append("\n"); 
		query.append("                                    AND     X.YD_CD         = P.YD_CD (+)" ).append("\n"); 
		query.append("                                    AND     X.SLAN_CD       = M.VSL_SLAN_CD" ).append("\n"); 
		query.append("                                    AND     X.SKD_DIR_CD    = M.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("                                    ORDER BY    X.VSL_CD, X.SKD_VOY_NO, M.VSL_SLAN_DIR_SEQ, X.SKD_DIR_CD, X.CLPT_SEQ) T3" ).append("\n"); 
		query.append("                                  , MDM_VSL_SVC_LANE_DIR T4" ).append("\n"); 
		query.append("                                  , MDM_VSL_SVC_LANE T5" ).append("\n"); 
		query.append("                        WHERE       1=1" ).append("\n"); 
		query.append("                        AND         T3.SLAN_CD      = T4.VSL_SLAN_CD" ).append("\n"); 
		query.append("                        AND         T3.SKD_DIR_CD   = T4.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("                        AND         T3.SLAN_CD      = T5.VSL_SLAN_CD" ).append("\n"); 
		query.append("                        AND         NVL(T3.SKD_CNG_STS_CD, ' ') <> 'S'" ).append("\n"); 
		query.append("                        ORDER BY    T3.VSL_CD, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.SKD_DIR_CD, T3.CLPT_SEQ" ).append("\n"); 
		query.append("                        ) X" ).append("\n"); 
		query.append("                WHERE   1=1" ).append("\n"); 
		query.append("                AND     NVL(X.SKD_CNG_STS_CD, '*') IN ('O', 'I')" ).append("\n"); 
		query.append("                AND     X.VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                AND     X.SKD_VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("                AND     X.SKD_DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("                AND     X.VPS_PORT_CD = @[vps_port_cd]" ).append("\n"); 
		query.append("                AND     X.CLPT_IND_SEQ = @[clpt_ind_seq]" ).append("\n"); 
		query.append("    )   SRC" ).append("\n"); 
		query.append("    ON" ).append("\n"); 
		query.append("    (" ).append("\n"); 
		query.append("                HIS.VSL_CD      = SRC.VSL_CD" ).append("\n"); 
		query.append("                AND HIS.SKD_VOY_NO  = SRC.SKD_VOY_NO" ).append("\n"); 
		query.append("                AND HIS.SKD_DIR_CD  = SRC.SKD_DIR_CD" ).append("\n"); 
		query.append("                AND HIS.VPS_PORT_CD = SRC.VPS_PORT_CD" ).append("\n"); 
		query.append("                AND HIS.CLPT_IND_SEQ = SRC.CLPT_IND_SEQ	" ).append("\n"); 
		query.append("    )" ).append("\n"); 
		query.append("WHEN MATCHED THEN " ).append("\n"); 
		query.append("UPDATE" ).append("\n"); 
		query.append("SET            " ).append("\n"); 
		query.append("                  CLPT_SEQ			=	SRC.CLPT_SEQ" ).append("\n"); 
		query.append("                , YD_CD				=	SRC.YD_CD" ).append("\n"); 
		query.append("                , VSL_SLAN_CD			=	SRC.VSL_SLAN_CD" ).append("\n"); 
		query.append("                , SKD_CNG_STS_CD		=	SRC.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                , PF_SVC_TP_CD		=	SRC.PF_SVC_TP_CD" ).append("\n"); 
		query.append("                , PF_PORT_ROTN_SEQ	=	SRC.PF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                , REF_VSL_CD			=	SRC.REF_VSL_CD" ).append("\n"); 
		query.append("                , REF_SKD_VOY_NO		=	SRC.REF_SKD_VOY_NO" ).append("\n"); 
		query.append("                , REF_SKD_DIR_CD		=	SRC.REF_SKD_DIR_CD" ).append("\n"); 
		query.append("                , REF_VPS_PORT_CD		=	SRC.REF_VPS_PORT_CD" ).append("\n"); 
		query.append("                , REF_CLPT_IND_SEQ	=	SRC.REF_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , REF_CLPT_SEQ		=	SRC.REF_CLPT_SEQ" ).append("\n"); 
		query.append("                , REF_YD_CD			=	SRC.REF_YD_CD" ).append("\n"); 
		query.append("                , REF_VSL_SLAN_CD		=	SRC.REF_VSL_SLAN_CD" ).append("\n"); 
		query.append("                , REF_PF_SVC_TP_CD		=	SRC.REF_PF_SVC_TP_CD" ).append("\n"); 
		query.append("                , REF_PORT_ROTN_SEQ		=	SRC.REF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                , UPD_USR_ID			=	SRC.UPD_USR_ID" ).append("\n"); 
		query.append("                , UPD_DT				=	SRC.UPD_DT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                " ).append("\n"); 
		query.append("WHEN NOT MATCHED THEN" ).append("\n"); 
		query.append("INSERT (" ).append("\n"); 
		query.append("                  VSL_CD" ).append("\n"); 
		query.append("                , SKD_VOY_NO" ).append("\n"); 
		query.append("                , SKD_DIR_CD" ).append("\n"); 
		query.append("                , VPS_PORT_CD" ).append("\n"); 
		query.append("                , CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , CLPT_SEQ" ).append("\n"); 
		query.append("                , YD_CD" ).append("\n"); 
		query.append("                , VSL_SLAN_CD" ).append("\n"); 
		query.append("                , SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                , PF_SVC_TP_CD" ).append("\n"); 
		query.append("                , PF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                , REF_VSL_CD" ).append("\n"); 
		query.append("                , REF_SKD_VOY_NO" ).append("\n"); 
		query.append("                , REF_SKD_DIR_CD" ).append("\n"); 
		query.append("                , REF_VPS_PORT_CD" ).append("\n"); 
		query.append("                , REF_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , REF_CLPT_SEQ" ).append("\n"); 
		query.append("                , REF_YD_CD" ).append("\n"); 
		query.append("                , REF_VSL_SLAN_CD" ).append("\n"); 
		query.append("                , REF_PF_SVC_TP_CD" ).append("\n"); 
		query.append("                , REF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                , CRE_USR_ID" ).append("\n"); 
		query.append("                , CRE_DT" ).append("\n"); 
		query.append("                , UPD_USR_ID" ).append("\n"); 
		query.append("                , UPD_DT" ).append("\n"); 
		query.append("       )    " ).append("\n"); 
		query.append("VALUES (" ).append("\n"); 
		query.append("                  SRC.VSL_CD" ).append("\n"); 
		query.append("                , SRC.SKD_VOY_NO" ).append("\n"); 
		query.append("                , SRC.SKD_DIR_CD" ).append("\n"); 
		query.append("                , SRC.VPS_PORT_CD" ).append("\n"); 
		query.append("                , SRC.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , SRC.CLPT_SEQ" ).append("\n"); 
		query.append("                , SRC.YD_CD" ).append("\n"); 
		query.append("                , SRC.VSL_SLAN_CD" ).append("\n"); 
		query.append("                , SRC.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                , SRC.PF_SVC_TP_CD" ).append("\n"); 
		query.append("                , SRC.PF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                , SRC.REF_VSL_CD" ).append("\n"); 
		query.append("                , SRC.REF_SKD_VOY_NO" ).append("\n"); 
		query.append("                , SRC.REF_SKD_DIR_CD" ).append("\n"); 
		query.append("                , SRC.REF_VPS_PORT_CD" ).append("\n"); 
		query.append("                , SRC.REF_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , SRC.REF_CLPT_SEQ" ).append("\n"); 
		query.append("                , SRC.REF_YD_CD" ).append("\n"); 
		query.append("                , SRC.REF_VSL_SLAN_CD" ).append("\n"); 
		query.append("                , SRC.REF_PF_SVC_TP_CD" ).append("\n"); 
		query.append("                , SRC.REF_PORT_ROTN_SEQ" ).append("\n"); 
		query.append("                , SRC.CRE_USR_ID" ).append("\n"); 
		query.append("                , SRC.CRE_DT" ).append("\n"); 
		query.append("                , SRC.UPD_USR_ID" ).append("\n"); 
		query.append("                , SRC.UPD_DT" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("	   )" ).append("\n"); 

	}
}