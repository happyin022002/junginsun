<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OwnContainerBookingForecastMgtDBDAOCBFSummaryVORSQL">
			<desc><![CDATA[ CBFSummaryVO조회
2012.12.03 CHM-201221299-01 이혜민 신규 장비 R8,R9 을 40’HC으로 분류하여 CBF 및 COD 메뉴에 반영
2013.06.18 CHM-201324915 SKY  CBF – POD TMNL code로 구분]]></desc>
			<sql><![CDATA[
SELECT POD,
       POD_YD_CD,
       MLB,
       FM,
       WG,
       OPR1,
       ROUND(DECODE(WG,'Total Weight',OPR1_QTY_2/1000,DECODE(FM,'Grand Weight',OPR1_QTY_2/1000,
                       'Sub Weight',OPR1_QTY_2/1000,'Total Weight',OPR1_QTY_2/1000,OPR1_QTY_2)))    OPR1_QTY_2,
       ROUND(DECODE(WG,'Total Weight',OPR1_QTY_2H/1000,DECODE(FM,'Grand Weight',OPR1_QTY_2H/1000,
                       'Sub Weight',OPR1_QTY_2H/1000,'Total Weight',OPR1_QTY_2H/1000,OPR1_QTY_2H))) OPR1_QTY_2H,
       ROUND(DECODE(WG,'Total Weight',OPR1_QTY_4/1000,DECODE(FM,'Grand Weight',OPR1_QTY_4/1000,
                       'Sub Weight',OPR1_QTY_4/1000,'Total Weight',OPR1_QTY_4/1000,OPR1_QTY_4)))    OPR1_QTY_4,
       ROUND(DECODE(WG,'Total Weight',OPR1_QTY_4H/1000,DECODE(FM,'Grand Weight',OPR1_QTY_4H/1000,
                       'Sub Weight',OPR1_QTY_4H/1000,'Total Weight',OPR1_QTY_4H/1000,OPR1_QTY_4H))) OPR1_QTY_4H,
       ROUND(DECODE(WG,'Total Weight',OPR1_QTY_45/1000,DECODE(FM,'Grand Weight',OPR1_QTY_45/1000,
                       'Sub Weight',OPR1_QTY_45/1000,'Total Weight',OPR1_QTY_45/1000,OPR1_QTY_45))) OPR1_QTY_45,
       OPR1_TEU,
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_2/1000,DECODE(FM,'Grand Weight',TOT_QTY_2/1000,
                       'Sub Weight',TOT_QTY_2/1000,'Total Weight',TOT_QTY_2/1000,TOT_QTY_2)))       TOT_QTY_2,
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_2H/1000,DECODE(FM,'Grand Weight',TOT_QTY_2H/1000,
                       'Sub Weight',TOT_QTY_2H/1000,'Total Weight',TOT_QTY_2H/1000,TOT_QTY_2H)))    TOT_QTY_2H,
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_4/1000,DECODE(FM,'Grand Weight',TOT_QTY_4/1000,
                       'Sub Weight',TOT_QTY_4/1000,'Total Weight',TOT_QTY_4/1000,TOT_QTY_4)))       TOT_QTY_4,
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_4H/1000,DECODE(FM,'Grand Weight',TOT_QTY_4H/1000,
                       'Sub Weight',TOT_QTY_4H/1000,'Total Weight',TOT_QTY_4H/1000,TOT_QTY_4H)))    TOT_QTY_4H,
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_45/1000,DECODE(FM,'Grand Weight',TOT_QTY_45/1000,
                       'Sub Weight',TOT_QTY_45/1000,'Total Weight',TOT_QTY_45/1000,TOT_QTY_45)))    TOT_QTY_45,
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_2/1000,DECODE(FM,'Grand Weight',TOT_QTY_2/1000,
                       'Sub Weight',TOT_QTY_2/1000,'Total Weight',TOT_QTY_2/1000,TOT_QTY_2))) +
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_2H/1000,DECODE(FM,'Grand Weight',TOT_QTY_2H/1000,
                       'Sub Weight',TOT_QTY_2H/1000,'Total Weight',TOT_QTY_2H/1000,TOT_QTY_2H)))+
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_4/1000,DECODE(FM,'Grand Weight',TOT_QTY_4/1000,
                       'Sub Weight',TOT_QTY_4/1000,'Total Weight',TOT_QTY_4/1000,TOT_QTY_4))) +
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_4H/1000,DECODE(FM,'Grand Weight',TOT_QTY_4H/1000,
                       'Sub Weight',TOT_QTY_4H/1000,'Total Weight',TOT_QTY_4H/1000,TOT_QTY_4H))) +
       ROUND(DECODE(WG,'Total Weight',TOT_QTY_45/1000,DECODE(FM,'Grand Weight',TOT_QTY_45/1000,
                       'Sub Weight',TOT_QTY_45/1000,'Total Weight',TOT_QTY_45/1000,TOT_QTY_45)))    TOT_TTL,
       TOT_TEU,
       ROUND(DECODE(WG,'Total Weight',AV_WGT_2/1000,DECODE(FM,'Grand Weight',AV_WGT_2/1000,'Sub Weight',AV_WGT_2/1000,'Total Weight',AV_WGT_2/1000,NULL)),1) AV_WGT_2,
       ROUND(DECODE(WG,'Total Weight',AV_WGT_4/1000,DECODE(FM,'Grand Weight',AV_WGT_4/1000,'Sub Weight',AV_WGT_4/1000,'Total Weight',AV_WGT_4/1000,NULL)),1) AV_WGT_4
FROM   (
SELECT SUBSTR(POD,1,5) AS POD,
       SUBSTR(POD, 12,2) AS POD_YD_CD, 
       CASE
       WHEN P = 0 AND M = 1 AND S = 0 AND W = 0 THEN 'Sub WG'
       ELSE MLB
       END  MLB,
       CASE
       WHEN P = 0 AND M = 1 AND S = 1 AND W = 1 THEN 'Sub Total'
       WHEN P = 0 AND M = 0 AND S = 1 AND W = 1 THEN 'Total'
       WHEN P = 0 AND M = 1 AND S = 0 AND W = 1 THEN DECODE(FM,'F','Full Total','E','Empty Total',FM)
       ELSE DECODE(FM,'F','Full','E','Empty',FM)
       END  FM,
       CASE
       WHEN P = 0 AND M = 0 AND S = 0 AND W = 1 THEN 'Total'
       WHEN P = 0 AND M = 1 AND S = 0 AND W = 1 THEN DECODE(FM,'F','','E','',FM)
       ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')
       END  WG,
       WSEQ,
       OPR1,
       OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4,
       OPR1_QTY_4H, OPR1_QTY_45,  OPR1_TEU,
       TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4,
       TOT_QTY_4H,  TOT_QTY_45,   TOT_TEU,
       NULL AV_WGT_2, NULL AV_WGT_4,
       DECODE(FM,NULL,3,SORT)     SORT,
       P.SEQ
FROM   ( SELECT (POD||POD_CLPT_IND_SEQ||POD_YD_CD) AS POD, MLB, DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ,
                GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD) P, GROUPING(MLB) M, GROUPING(SORT) S, GROUPING(WG) W,
                CASE
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=0 AND GROUPING(WG)=0 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=0 AND GROUPING(WG)=0 THEN 1
                ELSE 0
                END C4,
                SORT,
                MAX(OPR1) OPR1,
                SUM(OPR1_QTY_2)  OPR1_QTY_2,  SUM(OPR1_QTY_2H) OPR1_QTY_2H, SUM(OPR1_QTY_4)  OPR1_QTY_4,
                SUM(OPR1_QTY_4H) OPR1_QTY_4H, SUM(OPR1_QTY_45) OPR1_QTY_45, SUM(OPR1_TEU)    OPR1_TEU,
                MAX(OPR2) OPR2,
                SUM(OPR2_QTY_2)  OPR2_QTY_2,  SUM(OPR2_QTY_2H) OPR2_QTY_2H, SUM(OPR2_QTY_4)  OPR2_QTY_4,
                SUM(OPR2_QTY_4H) OPR2_QTY_4H, SUM(OPR2_QTY_45) OPR2_QTY_45, SUM(OPR2_TEU)    OPR2_TEU,
                MAX(OPR3) OPR3,
                SUM(OPR3_QTY_2)  OPR3_QTY_2,  SUM(OPR3_QTY_2H) OPR3_QTY_2H, SUM(OPR3_QTY_4)  OPR3_QTY_4,
                SUM(OPR3_QTY_4H) OPR3_QTY_4H, SUM(OPR3_QTY_45) OPR3_QTY_45, SUM(OPR3_TEU)    OPR3_TEU,
                MAX(OPR4) OPR4,
                SUM(OPR4_QTY_2)  OPR4_QTY_2,  SUM(OPR4_QTY_2H) OPR4_QTY_2H, SUM(OPR4_QTY_4)  OPR4_QTY_4,
                SUM(OPR4_QTY_4H) OPR4_QTY_4H, SUM(OPR4_QTY_45) OPR4_QTY_45, SUM(OPR4_TEU)    OPR4_TEU,
                MAX(OPR5) OPR5,
                SUM(OPR5_QTY_2)  OPR5_QTY_2,  SUM(OPR5_QTY_2H) OPR5_QTY_2H, SUM(OPR5_QTY_4)  OPR5_QTY_4,
                SUM(OPR5_QTY_4H) OPR5_QTY_4H, SUM(OPR5_QTY_45) OPR5_QTY_45, SUM(OPR5_TEU)    OPR5_TEU,
                SUM(TOT_QTY_2)   TOT_QTY_2,   SUM(TOT_QTY_2H)  TOT_QTY_2H,  SUM(TOT_QTY_4)   TOT_QTY_4,
                SUM(TOT_QTY_4H)  TOT_QTY_4H,  SUM(TOT_QTY_45)  TOT_QTY_45,  SUM(TOT_TEU)     TOT_TEU
         FROM ( SELECT DISTINCT O.POD POD, O.POD_CLPT_IND_SEQ, O.POD_YD_CD, O.MLB, O.FM FM, O.WG WG, O.WSEQ WSEQ,
                       O.OPR1 OPR1,
                       O.TQYT_OPR1  OPR1_QTY_2,  O.THQTY_OPR1 OPR1_QTY_2H, O.FQTY_OPR1  OPR1_QTY_4,
                       O.FHQTY_OPR1 OPR1_QTY_4H, O.SQTY_OPR1  OPR1_QTY_45,
                       (O.TQYT_OPR1+O.THQTY_OPR1) + ((O.FQTY_OPR1+O.FHQTY_OPR1+O.SQTY_OPR1)*2) OPR1_TEU,
                       O.OPR2 OPR2,
                       O.TQYT_OPR2  OPR2_QTY_2,  O.THQTY_OPR2 OPR2_QTY_2H, O.FQTY_OPR2  OPR2_QTY_4,
                       O.FHQTY_OPR2 OPR2_QTY_4H, O.SQTY_OPR2  OPR2_QTY_45,
                       (O.TQYT_OPR2+O.THQTY_OPR2) + ((O.FQTY_OPR2+O.FHQTY_OPR2+O.SQTY_OPR2)*2) OPR2_TEU,
                       O.OPR3 OPR3,
                       O.TQYT_OPR3  OPR3_QTY_2,  O.THQTY_OPR3 OPR3_QTY_2H, O.FQTY_OPR3  OPR3_QTY_4,
                       O.FHQTY_OPR3 OPR3_QTY_4H, O.SQTY_OPR3  OPR3_QTY_45,
                       (O.TQYT_OPR3+O.THQTY_OPR3) + ((O.FQTY_OPR3+O.FHQTY_OPR3+O.SQTY_OPR3)*2) OPR3_TEU,
                       O.OPR4 OPR4,
                       O.TQTY_OPR4  OPR4_QTY_2,  O.THQTY_OPR4 OPR4_QTY_2H, O.FQTY_OPR4  OPR4_QTY_4,
                       O.FHQTY_OPR4 OPR4_QTY_4H, O.SQTY_OPR4  OPR4_QTY_45,
                       (O.TQTY_OPR4+O.THQTY_OPR4) + ((O.FQTY_OPR4+O.FHQTY_OPR4+O.SQTY_OPR4)*2) OPR4_TEU,
                       O.OPR5 OPR5,
                       O.TQYT_OPR5  OPR5_QTY_2,  O.THQTY_OPR5 OPR5_QTY_2H, O.FQTY_OPR5  OPR5_QTY_4,
                       O.FHQTY_OPR5 OPR5_QTY_4H, O.SQTY_OPR5  OPR5_QTY_45,
                       (O.TQYT_OPR5+O.THQTY_OPR5) + ((O.FQTY_OPR5+O.FHQTY_OPR5+O.SQTY_OPR5)*2) OPR5_TEU,
                       T.TQTY       TOT_QTY_2,   T.THQTY      TOT_QTY_2H,  T.FQTY       TOT_QTY_4,
                       T.FHQTY      TOT_QTY_4H,  T.SQTY       TOT_QTY_45,  (T.TQTY+T.THQTY) + ((T.FQTY+T.FHQTY+T.SQTY)*2) TOT_TEU,
                       O.SORT
                FROM   ( SELECT POD, POD_CLPT_IND_SEQ, POD_YD_CD,MLB, FM, SORT, WG, WSEQ,
                                MAX(DECODE(ROW_NUM,1,OPR,0))   OPR1,
                                MAX(DECODE(ROW_NUM,1,TQTY,0))  TQYT_OPR1,
                                MAX(DECODE(ROW_NUM,1,THQTY,0)) THQTY_OPR1,
                                MAX(DECODE(ROW_NUM,1,FQTY,0))  FQTY_OPR1,
                                MAX(DECODE(ROW_NUM,1,FHQTY,0)) FHQTY_OPR1,
                                MAX(DECODE(ROW_NUM,1,SQTY,0))  SQTY_OPR1,
                                MAX(DECODE(ROW_NUM,2,OPR,0))   OPR2,
                                MAX(DECODE(ROW_NUM,2,TQTY,0))  TQYT_OPR2,
                                MAX(DECODE(ROW_NUM,2,THQTY,0)) THQTY_OPR2,
                                MAX(DECODE(ROW_NUM,2,FQTY,0))  FQTY_OPR2,
                                MAX(DECODE(ROW_NUM,2,FHQTY,0)) FHQTY_OPR2,
                                MAX(DECODE(ROW_NUM,2,SQTY,0))  SQTY_OPR2,
                                MAX(DECODE(ROW_NUM,3,OPR,0))   OPR3,
                                MAX(DECODE(ROW_NUM,3,TQTY,0))  TQYT_OPR3,
                                MAX(DECODE(ROW_NUM,3,THQTY,0)) THQTY_OPR3,
                                MAX(DECODE(ROW_NUM,3,FQTY,0))  FQTY_OPR3,
                                MAX(DECODE(ROW_NUM,3,FHQTY,0)) FHQTY_OPR3,
                                MAX(DECODE(ROW_NUM,3,SQTY,0))  SQTY_OPR3,
                                MAX(DECODE(ROW_NUM,4,OPR,0))   OPR4,
                                MAX(DECODE(ROW_NUM,4,TQTY,0))  TQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,THQTY,0)) THQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,FQTY,0))  FQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,FHQTY,0)) FHQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,SQTY,0))  SQTY_OPR4,
                                MAX(DECODE(ROW_NUM,5,OPR,0))   OPR5,
                                MAX(DECODE(ROW_NUM,5,TQTY,0))  TQYT_OPR5,
                                MAX(DECODE(ROW_NUM,5,THQTY,0)) THQTY_OPR5,
                                MAX(DECODE(ROW_NUM,5,FQTY,0))  FQTY_OPR5,
                                MAX(DECODE(ROW_NUM,5,FHQTY,0)) FHQTY_OPR5,
                                MAX(DECODE(ROW_NUM,5,SQTY,0))  SQTY_OPR5
                         FROM ( WITH S AS
                                (
                                SELECT POD,
                                       POD_CLPT_IND_SEQ,
                                       POD_YD_CD,
                                       MLB,
                                       FM,
                                       WG,
                                       WSEQ,
                                       OPR,
                                       SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),CASE WHEN TP IN ('R8', 'R9') THEN DECODE(OWNR,'Y',1,CNTR_QTY) ELSE 0 END)) FHQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY
                                FROM   ( SELECT D.POD_CD        POD,
                                                D.POD_CLPT_IND_SEQ,
                                                D.POD_YD_CD,
                                                D.MLB_CD          MLB,
                                                D.FULL_MTY_CD     FM,
                                                D.CNTR_WGT_GRP_CD WG,
                                                ( SELECT CNTR_WGT_GRP_SEQ
                                                  FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                                  WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                                  AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                                  AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                                  AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                                  AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                                D.CRR_CD          OPR,
                                                D.CNTR_TPSZ_CD    TP,
                                                H.BKG_SHPR_OWNR_FLG OWNR,
                                                DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))       CNTR_QTY,
                                                DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO))) CNTR_RN
                                         FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                                				 WHERE  H.VSL_CD                    = @[vsl_cd]
                                				 AND    H.SKD_VOY_NO                = @[skd_voy_no]
                                				 AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                                				 AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                         AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                         AND    H.VSL_CD            = D.VSL_CD
                                         AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                         AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                         AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                         AND    H.CRR_CD            = D.CRR_CD
                                         AND    H.YD_CD             = D.YD_CD
                                         AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                         AND    D.CBF_DP_CD         = 'V'
                                         AND    D.CRR_CD            = @[crr_cd]
                                        )
                                WHERE CNTR_RN = 1
                                GROUP BY POD, POD_CLPT_IND_SEQ, POD_YD_CD,MLB, FM, WG, WSEQ, OPR ),
                                DUMY AS
                                ( SELECT 'F' FM FROM DUAL
                                  UNION ALL
                                  SELECT 'E' FM FROM DUAL )
                                SELECT S1.POD, S1.POD_CLPT_IND_SEQ, S1.POD_YD_CD,S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ, S1.OPR,
                                       NVL(S2.TQTY,0)  TQTY,  NVL(S2.THQTY,0) THQTY,
                                       NVL(S2.FQTY,0)  FQTY,  NVL(S2.FHQTY,0) FHQTY,
                                       NVL(S2.SQTY,0)  SQTY,
                                       1 ROW_NUM
                                FROM   ( SELECT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, OPR
                                         FROM   ( SELECT DISTINCT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, OPR
                                                  FROM S ) S, DUMY ) S1, S S2
                                WHERE S1.POD              = S2.POD(+)
                                AND   S1.POD_CLPT_IND_SEQ = S2.POD_CLPT_IND_SEQ(+)
                                AND   NVL(S1.POD_YD_CD,'N')  = NVL(S2.POD_YD_CD(+),'N')
                                AND   NVL(S1.MLB,'N')     = NVL(S2.MLB(+),'N')
                                AND   S1.FM               = S2.FM(+)
                                AND   S1.OPR              = S2.OPR(+) )
                         GROUP BY SORT, POD, POD_CLPT_IND_SEQ, POD_YD_CD,MLB, FM, WG, WSEQ ) O,
                       ( WITH S AS
                         (  
                         SELECT POD,
                                POD_CLPT_IND_SEQ,
                                POD_YD_CD,
                                MLB,
                                FM,
                                WG,
                                WSEQ,
                                SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),CASE WHEN TP IN ('R8', 'R9') THEN DECODE(OWNR,'Y',1,CNTR_QTY) ELSE 0 END)) FHQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,CASE WHEN TP IN ('R8', 'R9') THEN CNTR_GRS_WGT ELSE 0 END))  FHWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT
                         FROM   ( SELECT D.POD_CD          POD,
                                         D.POD_CLPT_IND_SEQ,
                                         D.POD_YD_CD,
                                         D.MLB_CD          MLB,
                                         D.FULL_MTY_CD     FM,
                                         D.CNTR_WGT_GRP_CD WG,
                                         ( SELECT CNTR_WGT_GRP_SEQ
                                           FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                           WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                           AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                           AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                           AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                           AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                         D.CNTR_TPSZ_CD    TP,
                                         H.BKG_SHPR_OWNR_FLG OWNR,
                                         DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY,
                                         DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT,
                                         DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN
                                  FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                         					WHERE  H.VSL_CD                    = @[vsl_cd]
                         					AND    H.SKD_VOY_NO                = @[skd_voy_no]
                         					AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                         					AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                  AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                  AND    H.VSL_CD            = D.VSL_CD
                                  AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                  AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                  AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                  AND    H.CRR_CD            = D.CRR_CD
                                  AND    H.YD_CD             = D.YD_CD
                                  AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                  AND    D.CBF_DP_CD         = 'V'
                                  AND    D.CRR_CD            = @[crr_cd]
                                 )
                         WHERE CNTR_RN = 1
                         GROUP BY POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, WG, WSEQ ),
                         DUMY AS
                         ( SELECT 'F' FM FROM DUAL
                           UNION ALL
                           SELECT 'E' FM FROM DUAL )
                         SELECT S1.POD, S1.POD_CLPT_IND_SEQ, S1.POD_YD_CD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ,
                                NVL(S2.TQTY,0)  TQTY,
                                NVL(S2.TWGT,0)  TWGT,
                                NVL(S2.THQTY,0) THQTY,
                                NVL(S2.THWGT,0) THWGT,
                                NVL(S2.FQTY,0)  FQTY,
                                NVL(S2.FWGT,0)  FWGT,
                                NVL(S2.FHQTY,0) FHQTY,
                                NVL(S2.FHWGT,0) FHWGT,
                                NVL(S2.SQTY,0)  SQTY,
                                NVL(S2.SWGT,0)  SWGT
                         FROM   ( SELECT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM
                                  FROM   ( SELECT DISTINCT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB
                                           FROM S ) S, DUMY ) S1, S S2
                         WHERE S1.POD              = S2.POD(+)
                         AND   NVL(S1.POD_YD_CD,'N')  = NVL(S2.POD_YD_CD(+),'N')
                         AND   S1.POD_CLPT_IND_SEQ = S2.POD_CLPT_IND_SEQ(+)
                         AND   NVL(S1.MLB,'N')     = NVL(S2.MLB(+),'N')
                         AND   S1.FM               = S2.FM(+) ) T
                WHERE  O.POD              = T.POD
                AND    O.POD_CLPT_IND_SEQ = T.POD_CLPT_IND_SEQ
                AND    NVL(O.POD_YD_CD,'N') = NVL(T.POD_YD_CD,'N')
                AND    O.FM               = T.FM
                AND    NVL(O.WG,'N')      = NVL(T.WG,'N')
                AND    NVL(O.MLB,'N')     = NVL(T.MLB,'N') )
         GROUP BY CUBE(POD||POD_CLPT_IND_SEQ||POD_YD_CD, MLB, SORT, WG) ) A, 
         ( SELECT V.VPS_PORT_CD PORT, V.CLPT_IND_SEQ, V.CLPT_SEQ SEQ
                                FROM   VSK_VSL_PORT_SKD V
                                WHERE  V.VSL_CD     = @[vsl_cd]
                                AND    V.SKD_VOY_NO = @[skd_voy_no]
                                AND    V.SKD_DIR_CD = @[skd_dir_cd]
                                AND    V.CLPT_SEQ   > ( SELECT CLPT_SEQ
                                                        FROM   VSK_VSL_PORT_SKD R
                                                        WHERE  R.VSL_CD                = @[vsl_cd]
                                                        AND    R.SKD_VOY_NO            = @[skd_voy_no]
                                                        AND    R.SKD_DIR_CD            = @[skd_dir_cd]
                                                        AND    R.YD_CD||R.CLPT_IND_SEQ = @[yd_cd] 
                                                        AND    ROWNUM = 1 ) ) P
WHERE NVL(C4,0) = 1 
AND   SUBSTR(POD,1,5) = P.PORT(+)
AND   SUBSTR(POD,6,1) = P.CLPT_IND_SEQ(+)
UNION ALL
SELECT NVL(SUBSTR(POD,1,5),'Grand Total') POD, 
       NVL(SUBSTR(POD, 12,2), '') POD_YD_CD, 
       MLB,
       CASE
       WHEN P = 1 AND M = 1 AND S = 1 AND W = 1 THEN 'Grand Weight'
       WHEN P = 0 AND M = 1 AND S = 1 AND W = 1 THEN 'Sub Weight'
       WHEN P = 0 AND M = 0 AND S = 1 AND W = 1 THEN 'Total Weight'
       ELSE DECODE(FM,'F','Full','E','Empty',FM)
       END  FM,
       CASE
       WHEN P = 0 AND M = 0 AND S = 0 AND W = 1 THEN 'Total Weight'
       ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')
       END  WG,
       WSEQ,
       OPR1,
       OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4,
       OPR1_QTY_4H, OPR1_QTY_45,  NULL OPR1_TEU,
       TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4,
       TOT_QTY_4H,  TOT_QTY_45,   NULL TOT_TEU,
       TW/DECODE(TH,0,1,TH) AV_WGT_2,
       FW/DECODE(FH,0,1,FH) AV_WGT_4,
       DECODE(POD,NULL,8,DECODE(FM,NULL,6,SORT)) SORT,
       P.SEQ
FROM   ( SELECT (POD||POD_CLPT_IND_SEQ||POD_YD_CD) AS POD, MLB, DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ,
                GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD) P, GROUPING(MLB) M, GROUPING(SORT) S, GROUPING(WG) W,
                CASE
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=1 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(POD||POD_CLPT_IND_SEQ||POD_YD_CD)=0 AND GROUPING(MLB)=0 AND GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1
                ELSE 0
                END C4,
                SORT,
                MAX(OPR1) OPR1,
                SUM(OPR1_WGT_2)  OPR1_QTY_2,  SUM(OPR1_WGT_2H) OPR1_QTY_2H, SUM(OPR1_WGT_4)  OPR1_QTY_4,
                SUM(OPR1_WGT_4H) OPR1_QTY_4H, SUM(OPR1_WGT_45) OPR1_QTY_45,
                MAX(OPR2) OPR2,
                SUM(OPR2_WGT_2)  OPR2_QTY_2,  SUM(OPR2_WGT_2H) OPR2_QTY_2H, SUM(OPR2_WGT_4)  OPR2_QTY_4,
                SUM(OPR2_WGT_4H) OPR2_QTY_4H, SUM(OPR2_WGT_45) OPR2_QTY_45,
                MAX(OPR3) OPR3,
                SUM(OPR3_WGT_2)  OPR3_QTY_2,  SUM(OPR3_WGT_2H) OPR3_QTY_2H, SUM(OPR3_WGT_4)  OPR3_QTY_4,
                SUM(OPR3_WGT_4H) OPR3_QTY_4H, SUM(OPR3_WGT_45) OPR3_QTY_45,
                MAX(OPR4) OPR4,
                SUM(OPR4_WGT_2)  OPR4_QTY_2,  SUM(OPR4_WGT_2H) OPR4_QTY_2H, SUM(OPR4_WGT_4)  OPR4_QTY_4,
                SUM(OPR4_WGT_4H) OPR4_QTY_4H, SUM(OPR4_WGT_45) OPR4_QTY_45,
                MAX(OPR5) OPR5,
                SUM(OPR5_WGT_2)  OPR5_QTY_2,  SUM(OPR5_WGT_2H) OPR5_QTY_2H, SUM(OPR5_WGT_4)  OPR5_QTY_4,
                SUM(OPR5_WGT_4H) OPR5_QTY_4H, SUM(OPR5_WGT_45) OPR5_QTY_45,
                SUM(TOT_WGT_2)   TOT_QTY_2,   SUM(TOT_WGT_2H)  TOT_QTY_2H,  SUM(TOT_WGT_4)   TOT_QTY_4,
                SUM(TOT_WGT_4H)  TOT_QTY_4H,  SUM(TOT_WGT_45)  TOT_QTY_45,
                SUM(TW) TW,      SUM(TH) TH,  SUM(FW) FW,      SUM(FH) FH
         FROM ( SELECT DISTINCT O.POD POD, O.POD_CLPT_IND_SEQ, O.POD_YD_CD, O.MLB, O.FM FM, O.WG WG, O.WSEQ WSEQ,
                       O.OPR1 OPR1,
                       O.TWGT_OPR1  OPR1_WGT_2,  O.THWGT_OPR1 OPR1_WGT_2H, O.FWGT_OPR1 OPR1_WGT_4,
                       O.FHWGT_OPR1 OPR1_WGT_4H, O.SWGT_OPR1 OPR1_WGT_45,
                       O.OPR2 OPR2,
                       O.TWGT_OPR2  OPR2_WGT_2,  O.THWGT_OPR2 OPR2_WGT_2H, O.FWGT_OPR2  OPR2_WGT_4,
                       O.FHWGT_OPR2 OPR2_WGT_4H, O.SWGT_OPR2  OPR2_WGT_45,
                       O.OPR3 OPR3,
                       O.TWGT_OPR3  OPR3_WGT_2,  O.THWGT_OPR3 OPR3_WGT_2H, O.FWGT_OPR3  OPR3_WGT_4,
                       O.FHWGT_OPR3 OPR3_WGT_4H, O.SWGT_OPR3  OPR3_WGT_45,
                       O.OPR4 OPR4,
                       O.TWGT_OPR4  OPR4_WGT_2,  O.THWGT_OPR4 OPR4_WGT_2H, O.FWGT_OPR4  OPR4_WGT_4,
                       O.FHWGT_OPR4 OPR4_WGT_4H, O.SWGT_OPR4  OPR4_WGT_45,
                       O.OPR5 OPR5,
                       O.TWGT_OPR5  OPR5_WGT_2,  O.THWGT_OPR5 OPR5_WGT_2H, O.FWGT_OPR5  OPR5_WGT_4,
                       O.FHWGT_OPR5 OPR5_WGT_4H, O.SWGT_OPR5  OPR5_WGT_45,
                       T.TWGT       TOT_WGT_2,   T.THWGT      TOT_WGT_2H,  T.FWGT       TOT_WGT_4,
                       T.FHWGT      TOT_WGT_4H,  T.SWGT       TOT_WGT_45,
                       (DECODE(O.FM,'F',T.TWGT,0)+DECODE(O.FM,'F',T.THWGT,0)) TW,
                       (DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0)) TH,
                       (DECODE(O.FM,'F',T.FWGT,0)+DECODE(O.FM,'F',T.FHWGT,0)+DECODE(O.FM,'F',T.SWGT,0)) FW,
                       (DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0)) FH,
                       O.SORT
                FROM   ( SELECT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, SORT, WG, WSEQ,
                                MAX(DECODE(ROW_NUM,1,OPR,0))   OPR1,
                                MAX(DECODE(ROW_NUM,1,TWGT,0))  TWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,THWGT,0)) THWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,FWGT,0))  FWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,FHWGT,0)) FHWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,SWGT,0))  SWGT_OPR1,
                                MAX(DECODE(ROW_NUM,2,OPR,0))   OPR2,
                                MAX(DECODE(ROW_NUM,2,TWGT,0))  TWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,THWGT,0)) THWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,FWGT,0))  FWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,FHWGT,0)) FHWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,SWGT,0))  SWGT_OPR2,
                                MAX(DECODE(ROW_NUM,3,OPR,0))   OPR3,
                                MAX(DECODE(ROW_NUM,3,TWGT,0))  TWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,THWGT,0)) THWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,FWGT,0))  FWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,FHWGT,0)) FHWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,SWGT,0))  SWGT_OPR3,
                                MAX(DECODE(ROW_NUM,4,OPR,0))   OPR4,
                                MAX(DECODE(ROW_NUM,4,TWGT,0))  TWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,THWGT,0)) THWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,FWGT,0))  FWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,FHWGT,0)) FHWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,SWGT,0))  SWGT_OPR4,
                                MAX(DECODE(ROW_NUM,5,OPR,0))   OPR5,
                                MAX(DECODE(ROW_NUM,5,TWGT,0))  TWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,THWGT,0)) THWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,FWGT,0))  FWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,FHWGT,0)) FHWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,SWGT,0))  SWGT_OPR5
                         FROM ( WITH S AS
                                (
                                SELECT POD,
                                       POD_CLPT_IND_SEQ,
                                       POD_YD_CD,
                                       MLB,
                                       FM,
                                       WG,
                                       WSEQ,
                                       OPR,
                                       SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0)) TWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0)) THWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0)) FWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,CASE WHEN TP IN ('R8', 'R9') THEN CNTR_GRS_WGT ELSE 0 END))  FHWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0)) SWGT
                                FROM   (
                                SELECT D.POD_CD          POD,
                                       D.POD_CLPT_IND_SEQ,
                                       D.POD_YD_CD,
                                       D.MLB_CD          MLB,
                                       D.FULL_MTY_CD     FM,
                                       D.CNTR_WGT_GRP_CD WG,
                                       D.CRR_CD          OPR,
                                       ( SELECT CNTR_WGT_GRP_SEQ
                                         FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                         WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                         AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                         AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                         AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                         AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                       D.CNTR_TPSZ_CD    TP,
                                       DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT,
                                       DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN
                                FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                                WHERE  H.VSL_CD                    = @[vsl_cd]
                                AND    H.SKD_VOY_NO                = @[skd_voy_no]
                                AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                                AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                AND    H.BKG_SHPR_OWNR_FLG         = @[bkg_shpr_ownr_flg]
                                AND    H.VSL_CD                    = D.VSL_CD
                                AND    H.SKD_VOY_NO                = D.SKD_VOY_NO
                                AND    H.SKD_DIR_CD                = D.SKD_DIR_CD
                                AND    H.BKG_SHPR_OWNR_FLG         = D.BKG_SHPR_OWNR_FLG
                                AND    H.CRR_CD                    = D.CRR_CD
                                AND    H.YD_CD                     = D.YD_CD
                                AND    H.POL_CLPT_IND_SEQ          = D.POL_CLPT_IND_SEQ
                                AND    D.CBF_DP_CD                 = 'V'
                                AND    D.CRR_CD                    = @[crr_cd]
                                )
                                WHERE CNTR_RN = 1
                                GROUP BY POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, WG, OPR, WSEQ ),
                                DUMY AS
                                ( SELECT 'F' FM FROM DUAL
                                  UNION ALL
                                  SELECT 'E' FM FROM DUAL )
                                SELECT S1.POD, S1.POD_CLPT_IND_SEQ,  S1.POD_YD_CD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ, S1.OPR,
                                       NVL(S2.TWGT,0)  TWGT,  NVL(S2.THWGT,0) THWGT,
                                       NVL(S2.FWGT,0)  FWGT,  NVL(S2.FHWGT,0) FHWGT,
                                       NVL(S2.SWGT,0)  SWGT,
                                       1 ROW_NUM
                                FROM   ( SELECT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, OPR
                                         FROM   ( SELECT DISTINCT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, OPR
                                                  FROM S ) S, DUMY ) S1, S S2
                                WHERE S1.POD              = S2.POD(+)
                                AND   S1.POD_CLPT_IND_SEQ = S2.POD_CLPT_IND_SEQ(+)
                                AND   NVL(S1.POD_YD_CD,'N')  = NVL(S2.POD_YD_CD(+),'N')
                                AND   NVL(S1.MLB,'N')     = NVL(S2.MLB(+),'N')
                                AND   S1.FM               = S2.FM(+)
                                AND   S1.OPR              = S2.OPR(+) )
                         GROUP BY SORT, POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, WG, WSEQ ) O,
                       ( WITH S AS
                         (  
                         SELECT POD,
                                POD_CLPT_IND_SEQ,
                                POD_YD_CD,
                                MLB,
                                FM,
                                WG,
                                WSEQ,
                                SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),CASE WHEN TP IN ('R8', 'R9') THEN DECODE(OWNR,'Y',1,CNTR_QTY) ELSE 0 END)) FHQTY,
								SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,CASE WHEN TP IN ('R8', 'R9') THEN CNTR_GRS_WGT ELSE 0 END))  FHWGT,
                                SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY,
                                SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT
                         FROM   ( SELECT D.POD_CD          POD,
                                         D.POD_CLPT_IND_SEQ,
                                         D.POD_YD_CD,
                                         D.MLB_CD          MLB,
                                         D.FULL_MTY_CD     FM,
                                         D.CNTR_WGT_GRP_CD WG,
                                         ( SELECT CNTR_WGT_GRP_SEQ
                                           FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                           WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                           AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                           AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                           AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                           AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                         D.CNTR_TPSZ_CD    TP,
                                         H.BKG_SHPR_OWNR_FLG OWNR,
                                         DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY,
                                         DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT,
                                         DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN
                                  FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                         					WHERE  H.VSL_CD                    = @[vsl_cd]
                         					AND    H.SKD_VOY_NO                = @[skd_voy_no]
                         					AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                         					AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                  AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                  AND    H.VSL_CD            = D.VSL_CD
                                  AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                  AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                  AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                  AND    H.CRR_CD            = D.CRR_CD
                                  AND    H.YD_CD             = D.YD_CD
                                  AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                  AND    D.CBF_DP_CD         = 'V'
                                  AND    D.CRR_CD            = @[crr_cd]
                                  )
                         WHERE CNTR_RN = 1
                         GROUP BY POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM, WG, WSEQ ),
                         DUMY AS
                         ( SELECT 'F' FM FROM DUAL
                           UNION ALL
                           SELECT 'E' FM FROM DUAL )
                         SELECT S1.POD, S1.POD_CLPT_IND_SEQ, S1.POD_YD_CD, S1.MLB, S1.FM, DECODE(S1.FM,'F',1,2) SORT, S2.WG, S2.WSEQ,
                                NVL(S2.TQTY,0)  TQTY,
                                NVL(S2.TWGT,0)  TWGT,
                                NVL(S2.THQTY,0) THQTY,
                                NVL(S2.THWGT,0) THWGT,
                                NVL(S2.FQTY,0)  FQTY,
                                NVL(S2.FWGT,0)  FWGT,
                                NVL(S2.FHQTY,0) FHQTY,
                                NVL(S2.FHWGT,0) FHWGT,
                                NVL(S2.SQTY,0)  SQTY,
                                NVL(S2.SWGT,0)  SWGT
                         FROM   ( SELECT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB, FM
                                  FROM   ( SELECT DISTINCT POD, POD_CLPT_IND_SEQ, POD_YD_CD, MLB
                                           FROM S ) S, DUMY ) S1, S S2
                         WHERE S1.POD              = S2.POD(+)
                         AND   S1.POD_CLPT_IND_SEQ = S2.POD_CLPT_IND_SEQ(+)
                         AND   NVL(S1.POD_YD_CD,'N')  = NVL(S2.POD_YD_CD(+),'N')
                         AND   NVL(S1.MLB,'N')     = NVL(S2.MLB(+),'N')
                         AND   S1.FM               = S2.FM(+) ) T
                WHERE  O.POD              = T.POD
                AND    O.POD_CLPT_IND_SEQ = T.POD_CLPT_IND_SEQ
                AND    NVL(O.POD_YD_CD,'N')  = NVL(T.POD_YD_CD,'N')
                AND    O.FM               = T.FM
                AND    NVL(O.WG,'N')      = NVL(T.WG,'N')
                AND    NVL(O.MLB,'N')     = NVL(T.MLB,'N') )
         GROUP BY CUBE(POD||POD_CLPT_IND_SEQ||POD_YD_CD, MLB, SORT, WG) ) A,
         ( SELECT V.VPS_PORT_CD PORT, V.CLPT_IND_SEQ, V.CLPT_SEQ SEQ
                                FROM   VSK_VSL_PORT_SKD V
                                WHERE  V.VSL_CD     = @[vsl_cd]
                                AND    V.SKD_VOY_NO = @[skd_voy_no]
                                AND    V.SKD_DIR_CD = @[skd_dir_cd]
                                AND    V.CLPT_SEQ   > ( SELECT CLPT_SEQ
                                                        FROM   VSK_VSL_PORT_SKD R
                                                        WHERE  R.VSL_CD                = @[vsl_cd]
                                                        AND    R.SKD_VOY_NO            = @[skd_voy_no]
                                                        AND    R.SKD_DIR_CD            = @[skd_dir_cd]
                                                        AND    R.YD_CD||R.CLPT_IND_SEQ = @[yd_cd] 
                                                        AND    ROWNUM = 1 ) ) P
WHERE NVL(A.C4,0) = 1
AND   SUBSTR(A.POD,1,5) = P.PORT(+)
AND   SUBSTR(A.POD,6,1) = P.CLPT_IND_SEQ(+)
UNION ALL
SELECT 'Grand Total' POD,
       '' POD_YD_CD,
       NULL MLB,
       CASE
       WHEN S = 1 AND W = 1 THEN 'Grand Total'
       ELSE DECODE(FM,'F','Full','E','Empty',FM)
       END  FM,
       CASE
       WHEN S = 0 AND W = 1 THEN 'Total'
       ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')
       END  WG,
       WSEQ,
       OPR1,
       OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4,
       OPR1_QTY_4H, OPR1_QTY_45,  OPR1_TEU,
       TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4,
       TOT_QTY_4H,  TOT_QTY_45,   TOT_TEU,
       AV_WGT_2,    AV_WGT_4,
       DECODE(FM,NULL,7,SORT) SORT,
       1000 SEQ
FROM   ( SELECT DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ,
                GROUPING(SORT) S, GROUPING(WG) W,
                CASE
                WHEN GROUPING(SORT)=0 AND GROUPING(WG)=0 THEN 1
                WHEN GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1
                ELSE 0
                END C4,
                SORT,
                MAX(OPR1) OPR1,
                SUM(OPR1_QTY_2)  OPR1_QTY_2,  SUM(OPR1_QTY_2H) OPR1_QTY_2H, SUM(OPR1_QTY_4)  OPR1_QTY_4,
                SUM(OPR1_QTY_4H) OPR1_QTY_4H, SUM(OPR1_QTY_45) OPR1_QTY_45, SUM(OPR1_TEU)    OPR1_TEU,
                MAX(OPR2) OPR2,
                SUM(OPR2_QTY_2)  OPR2_QTY_2,  SUM(OPR2_QTY_2H) OPR2_QTY_2H, SUM(OPR2_QTY_4)  OPR2_QTY_4,
                SUM(OPR2_QTY_4H) OPR2_QTY_4H, SUM(OPR2_QTY_45) OPR2_QTY_45, SUM(OPR2_TEU)    OPR2_TEU,
                MAX(OPR3) OPR3,
                SUM(OPR3_QTY_2)  OPR3_QTY_2,  SUM(OPR3_QTY_2H) OPR3_QTY_2H, SUM(OPR3_QTY_4)  OPR3_QTY_4,
                SUM(OPR3_QTY_4H) OPR3_QTY_4H, SUM(OPR3_QTY_45) OPR3_QTY_45, SUM(OPR3_TEU)    OPR3_TEU,
                MAX(OPR4) OPR4,
                SUM(OPR4_QTY_2)  OPR4_QTY_2,  SUM(OPR4_QTY_2H) OPR4_QTY_2H, SUM(OPR4_QTY_4)  OPR4_QTY_4,
                SUM(OPR4_QTY_4H) OPR4_QTY_4H, SUM(OPR4_QTY_45) OPR4_QTY_45, SUM(OPR4_TEU)    OPR4_TEU,
                MAX(OPR5) OPR5,
                SUM(OPR5_QTY_2)  OPR5_QTY_2,  SUM(OPR5_QTY_2H) OPR5_QTY_2H, SUM(OPR5_QTY_4)  OPR5_QTY_4,
                SUM(OPR5_QTY_4H) OPR5_QTY_4H, SUM(OPR5_QTY_45) OPR5_QTY_45, SUM(OPR5_TEU)    OPR5_TEU,
                SUM(TOT_QTY_2)   TOT_QTY_2,   SUM(TOT_QTY_2H)  TOT_QTY_2H,  SUM(TOT_QTY_4)   TOT_QTY_4,
                SUM(TOT_QTY_4H)  TOT_QTY_4H,  SUM(TOT_QTY_45)  TOT_QTY_45,  SUM(TOT_TEU)     TOT_TEU,
                SUM(AV_WGT_2)    AV_WGT_2,    SUM(AV_WGT_4)    AV_WGT_4
         FROM ( SELECT DISTINCT O.FM FM, O.WG WG, O.WSEQ,
                       O.OPR1 OPR1,
                       O.TQYT_OPR1  OPR1_QTY_2,  O.THQTY_OPR1 OPR1_QTY_2H, O.FQTY_OPR1  OPR1_QTY_4,
                       O.FHQTY_OPR1 OPR1_QTY_4H, O.SQTY_OPR1  OPR1_QTY_45,
                       (O.TQYT_OPR1+O.THQTY_OPR1) + ((O.FQTY_OPR1+O.FHQTY_OPR1+O.SQTY_OPR1)*2) OPR1_TEU,
                       O.OPR2 OPR2,
                       O.TQYT_OPR2  OPR2_QTY_2,  O.THQTY_OPR2 OPR2_QTY_2H, O.FQTY_OPR2  OPR2_QTY_4,
                       O.FHQTY_OPR2 OPR2_QTY_4H, O.SQTY_OPR2  OPR2_QTY_45,
                       (O.TQYT_OPR2+O.THQTY_OPR2) + ((O.FQTY_OPR2+O.FHQTY_OPR2+O.SQTY_OPR2)*2) OPR2_TEU,
                       O.OPR3 OPR3,
                       O.TQYT_OPR3  OPR3_QTY_2,  O.THQTY_OPR3 OPR3_QTY_2H, O.FQTY_OPR3  OPR3_QTY_4,
                       O.FHQTY_OPR3 OPR3_QTY_4H, O.SQTY_OPR3  OPR3_QTY_45,
                       (O.TQYT_OPR3+O.THQTY_OPR3) + ((O.FQTY_OPR3+O.FHQTY_OPR3+O.SQTY_OPR3)*2) OPR3_TEU,
                       O.OPR4 OPR4,
                       O.TQTY_OPR4  OPR4_QTY_2,  O.THQTY_OPR4 OPR4_QTY_2H, O.FQTY_OPR4  OPR4_QTY_4,
                       O.FHQTY_OPR4 OPR4_QTY_4H, O.SQTY_OPR4  OPR4_QTY_45,
                       (O.TQTY_OPR4+O.THQTY_OPR4) + ((O.FQTY_OPR4+O.FHQTY_OPR4+O.SQTY_OPR4)*2) OPR4_TEU,
                       O.OPR5 OPR5,
                       O.TQYT_OPR5  OPR5_QTY_2,  O.THQTY_OPR5 OPR5_QTY_2H, O.FQTY_OPR5  OPR5_QTY_4,
                       O.FHQTY_OPR5 OPR5_QTY_4H, O.SQTY_OPR5  OPR5_QTY_45,
                       (O.TQYT_OPR5+O.THQTY_OPR5) + ((O.FQTY_OPR5+O.FHQTY_OPR5+O.SQTY_OPR5)*2) OPR5_TEU,
                       T.TQTY       TOT_QTY_2,   T.THQTY      TOT_QTY_2H,  T.FQTY       TOT_QTY_4,
                       T.FHQTY      TOT_QTY_4H,  T.SQTY       TOT_QTY_45,  (T.TQTY+T.THQTY) + ((T.FQTY+T.FHQTY+T.SQTY)*2) TOT_TEU,
                       (DECODE(O.FM,'F',T.TWGT,0)+DECODE(O.FM,'F',T.THWGT,0))/
                       DECODE((DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0)),0,1,
                       (DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0))) AV_WGT_2,
                       (DECODE(O.FM,'F',T.FWGT,0)+DECODE(O.FM,'F',T.FHWGT,0)+DECODE(O.FM,'F',T.SWGT,0))/
                       DECODE((DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0)),0,1,
                       (DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0))) AV_WGT_4,
                       O.SORT
                FROM   ( SELECT FM, SORT, WG, WSEQ,
                                MAX(DECODE(ROW_NUM,1,OPR,0))   OPR1,
                                MAX(DECODE(ROW_NUM,1,TQTY,0))  TQYT_OPR1,
                                MAX(DECODE(ROW_NUM,1,THQTY,0)) THQTY_OPR1,
                                MAX(DECODE(ROW_NUM,1,FQTY,0))  FQTY_OPR1,
                                MAX(DECODE(ROW_NUM,1,FHQTY,0)) FHQTY_OPR1,
                                MAX(DECODE(ROW_NUM,1,SQTY,0))  SQTY_OPR1,
                                MAX(DECODE(ROW_NUM,2,OPR,0))   OPR2,
                                MAX(DECODE(ROW_NUM,2,TQTY,0))  TQYT_OPR2,
                                MAX(DECODE(ROW_NUM,2,THQTY,0)) THQTY_OPR2,
                                MAX(DECODE(ROW_NUM,2,FQTY,0))  FQTY_OPR2,
                                MAX(DECODE(ROW_NUM,2,FHQTY,0)) FHQTY_OPR2,
                                MAX(DECODE(ROW_NUM,2,SQTY,0))  SQTY_OPR2,
                                MAX(DECODE(ROW_NUM,3,OPR,0))   OPR3,
                                MAX(DECODE(ROW_NUM,3,TQTY,0))  TQYT_OPR3,
                                MAX(DECODE(ROW_NUM,3,THQTY,0)) THQTY_OPR3,
                                MAX(DECODE(ROW_NUM,3,FQTY,0))  FQTY_OPR3,
                                MAX(DECODE(ROW_NUM,3,FHQTY,0)) FHQTY_OPR3,
                                MAX(DECODE(ROW_NUM,3,SQTY,0))  SQTY_OPR3,
                                MAX(DECODE(ROW_NUM,4,OPR,0))   OPR4,
                                MAX(DECODE(ROW_NUM,4,TQTY,0))  TQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,THQTY,0)) THQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,FQTY,0))  FQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,FHQTY,0)) FHQTY_OPR4,
                                MAX(DECODE(ROW_NUM,4,SQTY,0))  SQTY_OPR4,
                                MAX(DECODE(ROW_NUM,5,OPR,0))   OPR5,
                                MAX(DECODE(ROW_NUM,5,TQTY,0))  TQYT_OPR5,
                                MAX(DECODE(ROW_NUM,5,THQTY,0)) THQTY_OPR5,
                                MAX(DECODE(ROW_NUM,5,FQTY,0))  FQTY_OPR5,
                                MAX(DECODE(ROW_NUM,5,FHQTY,0)) FHQTY_OPR5,
                                MAX(DECODE(ROW_NUM,5,SQTY,0))  SQTY_OPR5
                         FROM ( WITH S AS
                                (
                                SELECT FM,
                                       WG,
                                       WSEQ,
                                       OPR,
                                       SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0))            TQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0))            THQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0))            FQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),CASE WHEN TP IN ('R8', 'R9') THEN DECODE(OWNR,'Y',1,CNTR_QTY) ELSE 0 END)) FHQTY,
                                       SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0))            SQTY
                                FROM   ( SELECT D.FULL_MTY_CD                 FM,
                                                D.CNTR_WGT_GRP_CD             WG,
                                                D.CRR_CD                      OPR,
                                                ( SELECT CNTR_WGT_GRP_SEQ
                                                  FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                                  WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                                  AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                                  AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                                  AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                                  AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                                D.CNTR_TPSZ_CD    TP,
                                                H.BKG_SHPR_OWNR_FLG OWNR,
                                                DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))       CNTR_QTY,
                                                DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO))) CNTR_RN
                                         FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                                				 WHERE  H.VSL_CD                    = @[vsl_cd]
                                				 AND    H.SKD_VOY_NO                = @[skd_voy_no]
                                				 AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                                				 AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                         AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                         AND    H.VSL_CD            = D.VSL_CD
                                         AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                         AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                         AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                         AND    H.CRR_CD            = D.CRR_CD
                                         AND    H.YD_CD             = D.YD_CD
                                         AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                         AND    D.CBF_DP_CD         = 'V'
                                		 AND    D.CRR_CD            = @[crr_cd]
                                  		 )
                                WHERE CNTR_RN = 1
                                GROUP BY FM, WG, WSEQ, OPR ),
                                DUMY AS
                                ( SELECT 'F' FM FROM DUAL
                                  UNION ALL
                                  SELECT 'E' FM FROM DUAL )
                                SELECT S1.FM, DECODE(S1.FM,'F',4,5) SORT, S2.WG, S2.WSEQ, S1.OPR,
                                       NVL(S2.TQTY,0)  TQTY,  NVL(S2.THQTY,0) THQTY,
                                       NVL(S2.FQTY,0)  FQTY,  NVL(S2.FHQTY,0) FHQTY,
                                       NVL(S2.SQTY,0)  SQTY,
                                       1 ROW_NUM
                                FROM   ( SELECT FM, OPR
                                         FROM   ( SELECT DISTINCT OPR
                                                  FROM S ) S, DUMY ) S1, S S2
                                WHERE S1.FM   = S2.FM(+)
                                AND   S1.OPR  = S2.OPR(+) )
                         GROUP BY SORT, FM, WG, WSEQ ) O,
                       ( SELECT B.FM, A.SORT, A.WG, A.WSEQ,
                                NVL(A.TQTY,0)  TQTY,
                                NVL(A.TWGT,0)  TWGT,
                                NVL(A.THQTY,0) THQTY,
                                NVL(A.THWGT,0) THWGT,
                                NVL(A.FQTY,0)  FQTY,
                                NVL(A.FWGT,0)  FWGT,
                                NVL(A.FHQTY,0) FHQTY,
                                NVL(A.FHWGT,0) FHWGT,
                                NVL(A.SQTY,0)  SQTY,
                                NVL(A.SWGT,0)  SWGT
                         FROM   ( SELECT FM,
                                         SORT,
                                         WG,
                                         WSEQ,
                                         SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),CASE WHEN TP IN ('R8', 'R9') THEN DECODE(OWNR,'Y',1,CNTR_QTY) ELSE 0 END)) FHQTY,
										 SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,CASE WHEN TP IN ('R8', 'R9') THEN CNTR_GRS_WGT ELSE 0 END))  FHWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT
                                  FROM   ( SELECT D.FULL_MTY_CD     FM,
                                                  DECODE(D.FULL_MTY_CD,'F',4,5) SORT,
                                                  D.CNTR_WGT_GRP_CD WG,
                                                  ( SELECT CNTR_WGT_GRP_SEQ
                                                    FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                                    WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                                    AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                                    AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                                    AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                                    AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                                  D.CNTR_TPSZ_CD    TP,
                                                  H.BKG_SHPR_OWNR_FLG OWNR,
                                                  DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY,
                                                  DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT,
                                                  DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN
                                           FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                         									 WHERE  H.VSL_CD                        = @[vsl_cd]
                         									 AND    H.SKD_VOY_NO                    = @[skd_voy_no]
                         									 AND    H.SKD_DIR_CD                    = @[skd_dir_cd]
                         									 AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                           AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                           AND    H.VSL_CD            = D.VSL_CD
                                           AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                           AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                           AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                           AND    H.CRR_CD            = D.CRR_CD
                                           AND    H.YD_CD             = D.YD_CD
                                           AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                           AND    D.CBF_DP_CD         = 'V'
                                           AND    D.CRR_CD            = @[crr_cd]
                                  		   )
                                  WHERE CNTR_RN = 1
                                  GROUP BY FM, SORT, WG, WSEQ ) A,
                         ( SELECT 'F' FM FROM DUAL
                           UNION ALL
                           SELECT 'E' FM FROM DUAL ) B
                         WHERE B.FM = A.FM(+) ) T
                WHERE  O.FM           = T.FM
                AND    NVL(O.WG,'N')  = NVL(T.WG,'N') )
         GROUP BY CUBE(SORT, WG) )
WHERE NVL(C4,0) = 1
UNION ALL
SELECT 'Grand Total' POD,
       '' POD_YD_CD,
       NULL MLB,
       CASE
       WHEN S = 1 AND W = 1 THEN 'Grand Weight'
       ELSE DECODE(FM,'F','Full','E','Empty',FM)
       END  FM,
       CASE
       WHEN S = 0 AND W = 1 THEN 'Total Weight'
       ELSE DECODE(WG,'X','Extra Heavy','H','Heavy','M','Medium','L','Light','E','Ultra Light')
       END  WG,
       WSEQ,
       OPR1,
       OPR1_QTY_2,  OPR1_QTY_2H,  OPR1_QTY_4,
       OPR1_QTY_4H, OPR1_QTY_45,  NULL OPR1_TEU,
       TOT_QTY_2,   TOT_QTY_2H,   TOT_QTY_4,
       TOT_QTY_4H,  TOT_QTY_45,   NULL TOT_TEU,
       TW/DECODE(TH,0,1,TH) AV_WGT_2,
       FW/DECODE(FH,0,1,FH) AV_WGT_4,
       DECODE(FM,NULL,7,SORT) SORT,
       1000 SEQ
FROM   ( SELECT DECODE(NVL(SORT,0),0,NULL,MAX(FM)) FM, WG, MAX(WSEQ) WSEQ,
                GROUPING(SORT) S, GROUPING(WG) W,
                CASE
                WHEN GROUPING(SORT)=1 AND GROUPING(WG)=1 THEN 1
                WHEN GROUPING(SORT)=0 AND GROUPING(WG)=1 THEN 1
                ELSE 0
                END C4,
                SORT,
                MAX(OPR1) OPR1,
                SUM(OPR1_WGT_2)  OPR1_QTY_2,  SUM(OPR1_WGT_2H) OPR1_QTY_2H, SUM(OPR1_WGT_4)  OPR1_QTY_4,
                SUM(OPR1_WGT_4H) OPR1_QTY_4H, SUM(OPR1_WGT_45) OPR1_QTY_45,
                MAX(OPR2) OPR2,
                SUM(OPR2_WGT_2)  OPR2_QTY_2,  SUM(OPR2_WGT_2H) OPR2_QTY_2H, SUM(OPR2_WGT_4)  OPR2_QTY_4,
                SUM(OPR2_WGT_4H) OPR2_QTY_4H, SUM(OPR2_WGT_45) OPR2_QTY_45,
                MAX(OPR3) OPR3,
                SUM(OPR3_WGT_2)  OPR3_QTY_2,  SUM(OPR3_WGT_2H) OPR3_QTY_2H, SUM(OPR3_WGT_4)  OPR3_QTY_4,
                SUM(OPR3_WGT_4H) OPR3_QTY_4H, SUM(OPR3_WGT_45) OPR3_QTY_45,
                MAX(OPR4) OPR4,
                SUM(OPR4_WGT_2)  OPR4_QTY_2,  SUM(OPR4_WGT_2H) OPR4_QTY_2H, SUM(OPR4_WGT_4)  OPR4_QTY_4,
                SUM(OPR4_WGT_4H) OPR4_QTY_4H, SUM(OPR4_WGT_45) OPR4_QTY_45,
                MAX(OPR5) OPR5,
                SUM(OPR5_WGT_2)  OPR5_QTY_2,  SUM(OPR5_WGT_2H) OPR5_QTY_2H, SUM(OPR5_WGT_4)  OPR5_QTY_4,
                SUM(OPR5_WGT_4H) OPR5_QTY_4H, SUM(OPR5_WGT_45) OPR5_QTY_45,
                SUM(TOT_WGT_2)   TOT_QTY_2,   SUM(TOT_WGT_2H)  TOT_QTY_2H,  SUM(TOT_WGT_4)   TOT_QTY_4,
                SUM(TOT_WGT_4H)  TOT_QTY_4H,  SUM(TOT_WGT_45)  TOT_QTY_45,
                SUM(TW) TW,      SUM(TH) TH,  SUM(FW) FW,      SUM(FH) FH
         FROM ( SELECT DISTINCT O.FM FM, O.WG WG, O.WSEQ WSEQ,
                       O.OPR1 OPR1,
                       O.TWGT_OPR1  OPR1_WGT_2,  O.THWGT_OPR1 OPR1_WGT_2H, O.FWGT_OPR1 OPR1_WGT_4,
                       O.FHWGT_OPR1 OPR1_WGT_4H, O.SWGT_OPR1 OPR1_WGT_45,
                       O.OPR2 OPR2,
                       O.TWGT_OPR2  OPR2_WGT_2,  O.THWGT_OPR2 OPR2_WGT_2H, O.FWGT_OPR2  OPR2_WGT_4,
                       O.FHWGT_OPR2 OPR2_WGT_4H, O.SWGT_OPR2  OPR2_WGT_45,
                       O.OPR3 OPR3,
                       O.TWGT_OPR3  OPR3_WGT_2,  O.THWGT_OPR3 OPR3_WGT_2H, O.FWGT_OPR3  OPR3_WGT_4,
                       O.FHWGT_OPR3 OPR3_WGT_4H, O.SWGT_OPR3  OPR3_WGT_45,
                       O.OPR4 OPR4,
                       O.TWGT_OPR4  OPR4_WGT_2,  O.THWGT_OPR4 OPR4_WGT_2H, O.FWGT_OPR4  OPR4_WGT_4,
                       O.FHWGT_OPR4 OPR4_WGT_4H, O.SWGT_OPR4  OPR4_WGT_45,
                       O.OPR5 OPR5,
                       O.TWGT_OPR5  OPR5_WGT_2,  O.THWGT_OPR5 OPR5_WGT_2H, O.FWGT_OPR5  OPR5_WGT_4,
                       O.FHWGT_OPR5 OPR5_WGT_4H, O.SWGT_OPR5  OPR5_WGT_45,
                       T.TWGT       TOT_WGT_2,   T.THWGT      TOT_WGT_2H,  T.FWGT       TOT_WGT_4,
                       T.FHWGT      TOT_WGT_4H,  T.SWGT       TOT_WGT_45,
                       (DECODE(O.FM,'F',T.TWGT,0)+DECODE(O.FM,'F',T.THWGT,0)) TW,
                       (DECODE(O.FM,'F',T.TQTY,0)+DECODE(O.FM,'F',T.THQTY,0)) TH,
                       (DECODE(O.FM,'F',T.FWGT,0)+DECODE(O.FM,'F',T.FHWGT,0)+DECODE(O.FM,'F',T.SWGT,0)) FW,
                       (DECODE(O.FM,'F',T.FQTY,0)+DECODE(O.FM,'F',T.FHQTY,0)+DECODE(O.FM,'F',T.SQTY,0)) FH,
                       O.SORT
                FROM   ( SELECT FM, SORT, WG, WSEQ,
                                MAX(DECODE(ROW_NUM,1,OPR,0))        OPR1,
                                MAX(DECODE(ROW_NUM,1,TWGT,0))  TWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,THWGT,0)) THWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,FWGT,0))  FWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,FHWGT,0)) FHWGT_OPR1,
                                MAX(DECODE(ROW_NUM,1,SWGT,0))  SWGT_OPR1,
                                MAX(DECODE(ROW_NUM,2,OPR,0))        OPR2,
                                MAX(DECODE(ROW_NUM,2,TWGT,0))  TWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,THWGT,0)) THWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,FWGT,0))  FWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,FHWGT,0)) FHWGT_OPR2,
                                MAX(DECODE(ROW_NUM,2,SWGT,0))  SWGT_OPR2,
                                MAX(DECODE(ROW_NUM,3,OPR,0))        OPR3,
                                MAX(DECODE(ROW_NUM,3,TWGT,0))  TWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,THWGT,0)) THWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,FWGT,0))  FWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,FHWGT,0)) FHWGT_OPR3,
                                MAX(DECODE(ROW_NUM,3,SWGT,0))  SWGT_OPR3,
                                MAX(DECODE(ROW_NUM,4,OPR,0))        OPR4,
                                MAX(DECODE(ROW_NUM,4,TWGT,0))  TWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,THWGT,0)) THWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,FWGT,0))  FWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,FHWGT,0)) FHWGT_OPR4,
                                MAX(DECODE(ROW_NUM,4,SWGT,0))  SWGT_OPR4,
                                MAX(DECODE(ROW_NUM,5,OPR,0))        OPR5,
                                MAX(DECODE(ROW_NUM,5,TWGT,0))  TWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,THWGT,0)) THWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,FWGT,0))  FWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,FHWGT,0)) FHWGT_OPR5,
                                MAX(DECODE(ROW_NUM,5,SWGT,0))  SWGT_OPR5
                         FROM ( WITH S AS
                                (
                                SELECT FM,
                                       WG,
                                       WSEQ,
                                       OPR,
                                       SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0)) TWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0)) THWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0)) FWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,CASE WHEN TP IN ('R8', 'R9') THEN CNTR_GRS_WGT ELSE 0 END))  FHWGT,
                                       SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0)) SWGT
                                FROM   ( SELECT D.FULL_MTY_CD     FM,
                                                D.CNTR_WGT_GRP_CD WG,
                                                ( SELECT CNTR_WGT_GRP_SEQ
                                                  FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                                  WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                                  AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                                  AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                                  AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                                  AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                                D.CRR_CD          OPR,
                                                D.CNTR_TPSZ_CD    TP,
                                                DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT,
                                                DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN
                                         FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                                				 WHERE  H.VSL_CD                    = @[vsl_cd]
                                				 AND    H.SKD_VOY_NO                = @[skd_voy_no]
                                				 AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                                				 AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                         AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                         AND    H.VSL_CD            = D.VSL_CD
                                         AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                         AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                         AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                         AND    H.CRR_CD            = D.CRR_CD
                                         AND    H.YD_CD             = D.YD_CD
                                         AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                         AND    D.CBF_DP_CD         = 'V'
                                		 AND    D.CRR_CD            = @[crr_cd]
                                  		 )
                                WHERE CNTR_RN = 1
                                GROUP BY FM, WG, WSEQ, OPR ),
                                DUMY AS
                                ( SELECT 'F' FM FROM DUAL
                                  UNION ALL
                                  SELECT 'E' FM FROM DUAL )
                                SELECT S1.FM, DECODE(S1.FM,'F',4,5) SORT, S2.WG, S2.WSEQ, S1.OPR,
                                       NVL(S2.TWGT,0)  TWGT,  NVL(S2.THWGT,0) THWGT,
                                       NVL(S2.FWGT,0)  FWGT,  NVL(S2.FHWGT,0) FHWGT,
                                       NVL(S2.SWGT,0)  SWGT,
                                       1 ROW_NUM
                                FROM   ( SELECT FM, OPR
                                         FROM   ( SELECT DISTINCT OPR
                                                  FROM S ) S, DUMY ) S1, S S2
                                WHERE S1.FM   = S2.FM(+)
                                AND   S1.OPR  = S2.OPR(+) )
                         GROUP BY SORT, FM, WG, WSEQ ) O,
                       ( SELECT B.FM, A.SORT, A.WG, A.WSEQ,
                                NVL(A.TQTY,0)  TQTY,
                                NVL(A.TWGT,0)  TWGT,
                                NVL(A.THQTY,0) THQTY,
                                NVL(A.THWGT,0) THWGT,
                                NVL(A.FQTY,0)  FQTY,
                                NVL(A.FWGT,0)  FWGT,
                                NVL(A.FHQTY,0) FHQTY,
                                NVL(A.FHWGT,0) FHWGT,
                                NVL(A.SQTY,0)  SQTY,
                                NVL(A.SWGT,0)  SWGT
                         FROM   ( SELECT FM,
                                         SORT,
                                         WG,
                                         WSEQ,
                                         SUM(DECODE(SUBSTR(TP,2,1),'2',DECODE(OWNR,'Y',1,CNTR_QTY),0)) TQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'2',CNTR_GRS_WGT,0))                TWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'3',DECODE(OWNR,'Y',1,CNTR_QTY),0)) THQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'3',CNTR_GRS_WGT,0))                THWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'4',DECODE(OWNR,'Y',1,CNTR_QTY),0)) FQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'4',CNTR_GRS_WGT,0))                FWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'5',DECODE(OWNR,'Y',1,CNTR_QTY),CASE WHEN TP IN ('R8', 'R9') THEN DECODE(OWNR,'Y',1,CNTR_QTY) ELSE 0 END)) FHQTY,
										 SUM(DECODE(SUBSTR(TP,2,1),'5',CNTR_GRS_WGT,CASE WHEN TP IN ('R8', 'R9') THEN CNTR_GRS_WGT ELSE 0 END))  FHWGT,
                                         SUM(DECODE(SUBSTR(TP,2,1),'7',DECODE(OWNR,'Y',1,CNTR_QTY),0)) SQTY,
                                         SUM(DECODE(SUBSTR(TP,2,1),'7',CNTR_GRS_WGT,0))                SWGT
                                  FROM   ( SELECT D.FULL_MTY_CD     FM,
                                                  DECODE(D.FULL_MTY_CD,'F',4,5) SORT,
                                                  D.CNTR_WGT_GRP_CD WG,
                                                  ( SELECT CNTR_WGT_GRP_SEQ
                                                    FROM   OPF_CGO_BKG_FCAST_WGT_GRP W
                                                    WHERE  H.SLAN_CD    = W.SLAN_CD(+)
                                                    AND    D.SKD_DIR_CD = W.SKD_DIR_CD(+)
                                                    AND    SUBSTR(H.YD_CD,1,5) = W.POL_CD(+)
                                                    AND    DECODE(SUBSTR(D.CNTR_TPSZ_CD,2,1),'2','2','4') = W.CNTR_SZ_CD(+)
                                                    AND    D.CNTR_WGT_GRP_CD = W.CNTR_WGT_GRP_CD(+) ) WSEQ,
                                                  D.CNTR_TPSZ_CD    TP,
                                                  H.BKG_SHPR_OWNR_FLG OWNR,
                                                  DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_QTY,SUM(D.CNTR_QTY) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO)))         CNTR_QTY,
                                                  DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,D.CNTR_GRS_WGT,SUM(D.CNTR_GRS_WGT) OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO))) CNTR_GRS_WGT,
                                                  DECODE(DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO),NULL,1,ROW_NUMBER() OVER (PARTITION BY D.CRR_CD, DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.CNTR_NO, D.PRNR_CNTR_REF_NO) ORDER BY DECODE(H.BKG_SHPR_OWNR_FLG, 'Y', D.BKG_NO, D.PRNR_BKG_REF_NO)))   CNTR_RN
                                           FROM   OPF_CGO_BKG_FCAST H, OPF_CGO_BKG_FCAST_CNTR D
                         									 WHERE  H.VSL_CD                    = @[vsl_cd]
                         									 AND    H.SKD_VOY_NO                = @[skd_voy_no]
                         									 AND    H.SKD_DIR_CD                = @[skd_dir_cd]
                         									 AND    H.YD_CD||H.POL_CLPT_IND_SEQ = @[yd_cd]
                                           AND    H.BKG_SHPR_OWNR_FLG = @[bkg_shpr_ownr_flg]
                                           AND    H.VSL_CD            = D.VSL_CD
                                           AND    H.SKD_VOY_NO        = D.SKD_VOY_NO
                                           AND    H.SKD_DIR_CD        = D.SKD_DIR_CD
                                           AND    H.BKG_SHPR_OWNR_FLG = D.BKG_SHPR_OWNR_FLG
                                           AND    H.CRR_CD            = D.CRR_CD
                                           AND    H.YD_CD             = D.YD_CD
                                           AND    H.POL_CLPT_IND_SEQ  = D.POL_CLPT_IND_SEQ
                                           AND    D.CBF_DP_CD         = 'V'
                                           AND    D.CRR_CD            = @[crr_cd]
                                  		   )
                                  WHERE CNTR_RN = 1
                                  GROUP BY FM, SORT, WG, WSEQ ) A,
                         ( SELECT 'F' FM FROM DUAL
                           UNION ALL
                           SELECT 'E' FM FROM DUAL ) B
                         WHERE B.FM = A.FM(+) ) T
                WHERE  O.FM           = T.FM
                AND    NVL(O.WG,'N')  = NVL(T.WG,'N') )
         GROUP BY CUBE(SORT, WG) )
WHERE NVL(C4,0) = 1
 )
ORDER BY SEQ, DECODE(POD,'Grand Total','ZZZZZ',POD), DECODE(POD_YD_CD,'', 'ZZZZZ',POD_YD_CD), NVL(MLB,'ZZZ'),
         DECODE(FM,'Grand Weight','Z','Grand Total','Y','Sub Weight','X','Sub Total','W','Empty Total','V','Full Total','U','Total Weight','T','Total','S',SORT),
         DECODE(WG,'Total Weight','Z','Total','Y',NULL,'X',WSEQ) ASC			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="COCN" out="N"/>
				<param name="skd_voy_no" type="12" value="0001" out="N"/>
				<param name="skd_dir_cd" type="12" value="E" out="N"/>
				<param name="yd_cd" type="12" value="GBFXTK1" out="N"/>
				<param name="bkg_shpr_ownr_flg" type="12" value="" out="N"/>
				<param name="crr_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
