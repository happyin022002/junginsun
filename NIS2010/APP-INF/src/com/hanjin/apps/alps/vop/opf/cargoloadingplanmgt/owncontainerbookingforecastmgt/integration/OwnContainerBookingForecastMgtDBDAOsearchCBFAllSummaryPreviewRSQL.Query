<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OwnContainerBookingForecastMgtDBDAOsearchCBFAllSummaryPreviewRSQL">
			<desc><![CDATA[HJS 포함 모든 BOOKING선사의 CBF SUMMARY ..]]></desc>
			<sql><![CDATA[
SELECT @[vvd] AS pod,
       @[vvd] AS a_20,@[vvd] AS a_40,@[vvd] AS a_40h,@[vvd] AS a_45 ,
       @[vvd] AS b_20,@[vvd] AS b_40,@[vvd] AS b_40h,@[vvd] AS b_45 ,
       @[vvd] AS c_20,@[vvd] AS c_40,@[vvd] AS c_40h,@[vvd] AS c_45 ,
       @[vvd] AS d_20,@[vvd] AS d_40,@[vvd] AS d_40h,@[vvd] AS d_45 ,
       @[vvd] AS e_20,@[vvd] AS e_40,@[vvd] AS e_40h,@[vvd] AS e_45 ,
       @[vvd] AS f_20,@[vvd] AS f_40,@[vvd] AS f_40h,@[vvd] AS f_45 ,
       @[vvd] AS g_20,@[vvd] AS g_40,@[vvd] AS g_40h,@[vvd] AS g_45 ,
       @[vvd] AS h_20,@[vvd] AS h_40,@[vvd] AS h_40h,@[vvd] AS h_45 ,
       @[vvd] AS i_20,@[vvd] AS i_40,@[vvd] AS i_40h,@[vvd] AS i_45 ,
       @[vvd] AS j_20,@[vvd] AS j_40,@[vvd] AS j_40h,@[vvd] AS j_45 ,
       @[vvd] AS k_20,@[vvd] AS k_40,@[vvd] AS k_40h,@[vvd] AS k_45 ,
       @[vvd] AS l_20,@[vvd] AS l_40,@[vvd] AS l_40h,@[vvd] AS l_45 ,
       @[vvd] AS tot_20 , @[vvd] AS tot_40,   @[vvd] AS tot_40h,   @[vvd] AS tot_45,    @[vvd] AS  tot_teu,
       @[vvd] AS crr_cd,  @[vvd] AS sp_20,    @[vvd] AS  sp_40,  @[vvd] AS sp_40h,  @[vvd] AS  sp_45
 FROM DUAL
UNION ALL
SELECT * FROM (
SELECT  decode(aa.pod,'PORT', 'POD', 'SIZE', 'POD', aa.pod) pod, nvl(aa.a_20,'.') a_20, nvl(aa.a_40,'.') a_40, nvl(aa.a_40h,'.') a_40h, nvl(aa.a_45,'.') a_45,
                    nvl(aa.b_20,'.') b_20, nvl(aa.b_40,'.') b_40 , nvl(aa.b_40h,'.') b_40h , nvl(aa.b_45,'.') b_45,
                    nvl(aa.c_20,'.') c_20, nvl(aa.c_40,'.') c_40 , nvl(aa.c_40h,'.') c_40h , nvl(aa.c_45,'.') c_45,
                    nvl(aa.d_20,'.') d_20, nvl(aa.d_40,'.') d_40 , nvl(aa.d_40h,'.') d_40h , nvl(aa.d_45,'.') d_45,
                    nvl(aa.e_20,'.') e_20, nvl(aa.e_40,'.') e_40 , nvl(aa.e_40h,'.') e_40h , nvl(aa.e_45,'.') e_45,
                    nvl(aa.f_20,'.') f_20, nvl(aa.f_40,'.') f_40 , nvl(aa.f_40h,'.') f_40h , nvl(aa.f_45,'.') f_45,
                    nvl(aa.g_20,'.') g_20, nvl(aa.g_40,'.') g_40 , nvl(aa.g_40h,'.') g_40h , nvl(aa.g_45,'.') g_45,
                    nvl(aa.h_20,'.') h_20, nvl(aa.h_40,'.') h_40 , nvl(aa.h_40h,'.') h_40h , nvl(aa.h_45,'.') h_45,
                    nvl(aa.i_20,'.') i_20, nvl(aa.i_40,'.') i_40 , nvl(aa.i_40h,'.') i_40h , nvl(aa.i_45,'.') i_45,
                    nvl(aa.j_20,'.') j_20, nvl(aa.j_40,'.') j_40 , nvl(aa.j_40h,'.') j_40h , nvl(aa.j_45,'.') j_45,
                    nvl(aa.k_20,'.') k_20, nvl(aa.k_40,'.') k_40 , nvl(aa.k_40h,'.') k_40h , nvl(aa.k_45,'.') k_45,
                    nvl(aa.l_20,'.') l_20, nvl(aa.l_40,'.') l_40 , nvl(aa.l_40h,'.') l_40h , nvl(aa.l_45,'.') l_45,
                    aa.tot_20,   aa.tot_40, aa.tot_40h, aa.tot_45,aa.tot_teu,
                    bb.crr_cd, bb.sp_20, bb.sp_40, bb.sp_40h, bb.sp_45
FROM (
WITH V1 AS
( SELECT  CRR_CD,  ROWNUM RK
    FROM (
  SELECT DISTINCT DECODE(CRR_CD,'SML',1||'SML','2'||CRR_CD) CRR_CD FROM OPF_CGO_BKG_FCAST_SMRY
WHERE VSL_CD     = substr(@[vvd],1,4)
  AND SKD_VOY_NO = substr(@[vvd],5,4)
  AND SKD_DIR_CD = substr(@[vvd],9,1)
  AND YD_CD      = @[yd_cd]
  AND POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
   ORDER BY CRR_CD  
 ) X  ) ,
 V2 AS 
 (   SELECT X.POD, X.VPS_ETA_DT
       FROM (
              SELECT DISTINCT SUBSTR(POD_CD,1,2)||BLCK_STWG_CD POD,A.BLCK_STWG_CD, B.YD_CD, NVL(B.VPS_ETA_DT,TO_DATE('29991201','YYYYMMDD')) VPS_ETA_DT  ,
               CASE WHEN B.YD_CD IN ('KRPUSB1','KRPUSBN','KRPUSHN','KRPUSNH','KRPUSPN','KRPUSYN') THEN 'PUS' 
                   WHEN B.YD_CD IN ('KRPUSHH','KRPUSM1','KRPUSYO','KRPUSNY1','KRPUSY3','KRPUSY7','KRPUSYA','KRPUSYE','KRPUSYG','KRPUSYH','KRPUSYK','KRPUSYL','KRPUSYQ','KRPUSYR','KRPUSYS','KRPUSYT') THEN 'PU1' 
                           END AS BLCK_CD
                FROM OPF_CGO_BKG_FCAST_SMRY A, VSK_VSL_PORT_SKD B
               WHERE A.VSL_CD     = substr(@[vvd],1,4)
                 AND A.SKD_VOY_NO = substr(@[vvd],5,4)
                 AND A.SKD_DIR_CD = substr(@[vvd],9,1)
                 AND A.YD_CD      = @[yd_cd]
                 AND A.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
                 AND A.VSL_CD     = B.VSL_CD(+)
                 AND A.SKD_VOY_NO = B.SKD_VOY_NO(+)
                 AND A.SKD_DIR_CD = B.SKD_DIR_CD(+)
                 AND A.POD_CD     = B.VPS_PORT_CD(+)
                 AND B.CALL_YD_IND_SEQ(+) = 1 
       ) X 
     WHERE (X.BLCK_CD IS NULL OR (X.BLCK_STWG_CD = X.BLCK_CD))
     AND  NVL(X.YD_CD,'XXXXXXX') <> @[yd_cd]
 )  
 SELECT ROWNUM RK , zz.eta, zz.pod, zz.a_20, zz.a_40, zz.a_40h, zz.a_45,
                    zz.b_20, zz.b_40, zz.b_40h, zz.b_45,
                    zz.c_20, zz.c_40, zz.c_40h, zz.c_45,
                    zz.d_20, zz.d_40, zz.d_40h, zz.d_45,
                    zz.e_20, zz.e_40, zz.e_40h, zz.e_45,
                    zz.f_20, zz.f_40, zz.f_40h, zz.f_45,
                    zz.g_20, zz.g_40, zz.g_40h, zz.g_45,
                    zz.h_20, zz.h_40, zz.h_40h, zz.h_45,
                    zz.i_20, zz.i_40, zz.i_40h, zz.i_45,
                    zz.j_20, zz.j_40, zz.j_40h, zz.j_45,
                    zz.k_20, zz.k_40, zz.k_40h, zz.k_45,
                    zz.l_20, zz.l_40, zz.l_40h, zz.l_45,
                    CASE WHEN ROWNUM = 1 THEN 'Total' 
                         WHEN ROWNUM = 2 THEN '20'
                         ELSE to_char(nvl(zz.a_20,0)+nvl(zz.b_20,0)+nvl(zz.c_20,0)+nvl(zz.d_20,0)+nvl(zz.e_20,0)+nvl(zz.f_20,0)+                                                                      
                                      nvl(zz.g_20,0)+nvl(zz.h_20,0)+nvl(zz.i_20,0)+nvl(zz.j_20,0)+nvl(zz.k_20,0)+nvl(zz.l_20,0)) 
                         END tot_20,
                    CASE WHEN ROWNUM = 1 then 'Total' 
                         WHEN ROWNUM = 2 then '40'
                         ELSE to_char(nvl(zz.a_40,0)+nvl(zz.b_40,0)+nvl(zz.c_40,0)+nvl(zz.d_40,0)+nvl(zz.e_40,0)+nvl(zz.f_40,0)+                                                                      
                                      nvl(zz.g_40,0)+nvl(zz.h_40,0)+nvl(zz.i_40,0)+nvl(zz.j_40,0)+nvl(zz.k_40,0)+nvl(zz.l_40,0)) end tot_40,
                    CASE WHEN ROWNUM = 1 then 'Total' 
                         WHEN ROWNUM = 2 then '40H'
                         ELSE to_char (nvl(zz.a_40h,0)+nvl(zz.b_40h,0)+nvl(zz.c_40h,0)+nvl(zz.d_40h,0)+nvl(zz.e_40h,0)+nvl(zz.f_40h,0)+                                                                
                              nvl(zz.g_40h,0)+nvl(zz.h_40h,0)+nvl(zz.i_40h,0)+nvl(zz.j_40h,0)+nvl(zz.k_40h,0)+nvl(zz.l_40h,0)) END tot_40h,
                    CASE WHEN ROWNUM = 1 THEN 'Total' 
                         WHEN ROWNUM = 2 tHEN '45'
                         ELSE to_char(nvl(zz.a_45,0)+nvl(zz.b_45,0)+nvl(zz.c_45,0)+nvl(zz.d_45,0)+nvl(zz.e_45,0)+nvl(zz.f_45,0)+                                                                      
                              nvl(zz.g_45,0)+nvl(zz.h_45,0)+nvl(zz.i_45,0)+nvl(zz.j_45,0)+nvl(zz.k_45,0)+nvl(zz.l_45,0)) END tot_45,
                    CASE WHEN ROWNUM = 1 THEN 'TEU'  
                          WHEN ROWNUM = 2 THEN NULL
                          ELSE to_char(nvl(zz.a_20,0)+nvl(zz.b_20,0)+nvl(zz.c_20,0)+nvl(zz.d_20,0)+nvl(zz.e_20,0)+nvl(zz.f_20,0)+                                                                      
                                      nvl(zz.g_20,0)+nvl(zz.h_20,0)+nvl(zz.i_20,0)+nvl(zz.j_20,0)+nvl(zz.k_20,0)+nvl(zz.l_20,0) +
                                      ((nvl(zz.a_40,0)+nvl(zz.b_40,0)+nvl(zz.c_40,0)+nvl(zz.d_40,0)+nvl(zz.e_40,0)+nvl(zz.f_40,0)+                                                                      
                                      nvl(zz.g_40,0)+nvl(zz.h_40,0)+nvl(zz.i_40,0)+nvl(zz.j_40,0)+nvl(zz.k_40,0)+nvl(zz.l_40,0)+
                                      nvl(zz.a_40h,0)+nvl(zz.b_40h,0)+nvl(zz.c_40h,0)+nvl(zz.d_40h,0)+nvl(zz.e_40h,0)+nvl(zz.f_40h,0)+                                                                
                                      nvl(zz.g_40h,0)+nvl(zz.h_40h,0)+nvl(zz.i_40h,0)+nvl(zz.j_40h,0)+nvl(zz.k_40h,0)+nvl(zz.l_40h,0)+
                                      nvl(zz.a_45,0)+nvl(zz.b_45,0)+nvl(zz.c_45,0)+nvl(zz.d_45,0)+nvl(zz.e_45,0)+nvl(zz.f_45,0)+                                                                      
                                      nvl(zz.g_45,0)+nvl(zz.h_45,0)+nvl(zz.i_45,0)+nvl(zz.j_45,0)+nvl(zz.k_45,0)+nvl(zz.l_45,0)) * 2))               
                          END tot_teu                      
 FROM ( 
  SELECT 'PORT' POD, 
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) A_20,  
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) A_40,  
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) A_40H,  
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) A_45,  
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) B_20,  
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) B_40,  
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) B_40H,  
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) B_45,  
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) C_20,
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) C_40,
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) C_40H,
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) C_45,
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) D_20,   
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) D_40,   
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) D_40H,  
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) D_45,   
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) E_20,           
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) E_40,           
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) E_40H,          
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) E_45,   
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) F_20,                   
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) F_40,           
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) F_40H,          
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) F_45,           
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) G_20,           
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) G_40,           
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) G_40H,          
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) G_45,           
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) H_20,           
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) H_40,           
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) H_40H,          
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) H_45,           
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) I_20,           
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) I_40,           
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) I_40H,          
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) I_45,           
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) J_20,           
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) J_40,           
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) J_40H,          
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) J_45,           
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) K_20,           
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) K_40,           
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) K_40H,          
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) K_45,  
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) L_20,           
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) L_40,           
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) L_40H,          
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) L_45,
       TO_DATE('19980101','YYYYMMDD') ETA                           
 FROM V1 
 UNION ALL
 SELECT 'SIZE' POD, MAX(DECODE(V1.RK,1,'20')), 
              MAX(DECODE(V1.RK,1,'40')),
              MAX(DECODE(V1.RK,1,'40H')),
              MAX(DECODE(V1.RK,1,'45')),
              MAX(DECODE(V1.RK,2,'20')), 
              MAX(DECODE(V1.RK,2,'40')),
              MAX(DECODE(V1.RK,2,'40H')),
              MAX(DECODE(V1.RK,2,'45')),
              MAX(DECODE(V1.RK,3,'20')), 
              MAX(DECODE(V1.RK,3,'40')),
              MAX(DECODE(V1.RK,3,'40H')),
              MAX(DECODE(V1.RK,3,'45')),
              MAX(DECODE(V1.RK,4,'20')), 
              MAX(DECODE(V1.RK,4,'40')),
              MAX(DECODE(V1.RK,4,'40H')),
              MAX(DECODE(V1.RK,4,'45')),
              MAX(DECODE(V1.RK,5,'20')),                          
              MAX(DECODE(V1.RK,5,'40')),            
              MAX(DECODE(V1.RK,5,'40H')),           
              MAX(DECODE(V1.RK,5,'45')),            
              MAX(DECODE(V1.RK,6,'20')),     
              MAX(DECODE(V1.RK,6,'40')),     
              MAX(DECODE(V1.RK,6,'40H')),    
              MAX(DECODE(V1.RK,6,'45')),     
              MAX(DECODE(V1.RK,7,'20')),     
              MAX(DECODE(V1.RK,7,'40')),     
              MAX(DECODE(V1.RK,7,'40H')),    
              MAX(DECODE(V1.RK,7,'45')),     
              MAX(DECODE(V1.RK,8,'20')),     
              MAX(DECODE(V1.RK,8,'40')),     
              MAX(DECODE(V1.RK,8,'40H')),    
              MAX(DECODE(V1.RK,8,'45')),     
              MAX(DECODE(V1.RK,9,'20')),     
              MAX(DECODE(V1.RK,9,'40')),     
              MAX(DECODE(V1.RK,9,'40H')),    
              MAX(DECODE(V1.RK,9,'45')),     
              MAX(DECODE(V1.RK,10,'20')),     
              MAX(DECODE(V1.RK,10,'40')),     
              MAX(DECODE(V1.RK,10,'40H')),    
              MAX(DECODE(V1.RK,10,'45')),     
              MAX(DECODE(V1.RK,11,'20')),     
              MAX(DECODE(V1.RK,11,'40')),     
              MAX(DECODE(V1.RK,11,'40H')),    
              MAX(DECODE(V1.RK,11,'45')),     
              MAX(DECODE(V1.RK,12,'20')),     
              MAX(DECODE(V1.RK,12,'40')),     
              MAX(DECODE(V1.RK,12,'40H')),    
              MAX(DECODE(V1.RK,12,'45')),
              TO_DATE('19990101','YYYYMMDD') ETA                    
 FROM V1      
 UNION ALL 
 SELECT DECODE(GROUPING(V2.POD),1,'TTL',V2.POD) POD, 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.A_20, Y.BKG_20FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.A_40, Y.BKG_40FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.A_4H, Y.BKG_40FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.A_45, Y.BKG_45FT_HC_QTY))),     
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.B_20, Y.BKG_20FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.B_40, Y.BKG_40FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.B_4H, Y.BKG_40FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.B_45, Y.BKG_45FT_HC_QTY))),      
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.C_20, Y.BKG_20FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.C_40, Y.BKG_40FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.C_4H, Y.BKG_40FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.C_45, Y.BKG_45FT_HC_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.D_20, Y.BKG_20FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.D_40, Y.BKG_40FT_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.D_4H, Y.BKG_40FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.D_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.E_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.E_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.E_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.E_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.F_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.F_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.F_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.F_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.G_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.G_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.G_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.G_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.H_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.H_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.H_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.H_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.I_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.I_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.I_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.I_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.J_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.J_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.J_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.J_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.K_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.K_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.K_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.K_45,  Y.BKG_45FT_HC_QTY))),
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.L_20, Y.BKG_20FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.L_40, Y.BKG_40FT_QTY))),    
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.L_4H, Y.BKG_40FT_HC_QTY))), 
        TO_CHAR(SUM(DECODE(Y.CRR_CD, X.L_45,  Y.BKG_45FT_HC_QTY))),
        DECODE(GROUPING(V2.POD),1,TO_DATE('29991230','YYYYMMDD'), MIN(V2.VPS_ETA_DT)) ETA      
 FROM ( 
SELECT MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) a_20,  
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) a_40,
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) a_4h,
       MAX(DECODE(V1.RK,1,SUBSTR(V1.CRR_CD,2,3))) a_45,
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) b_20,
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) b_40,  
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) b_4h,  
       MAX(DECODE(V1.RK,2,SUBSTR(V1.CRR_CD,2,3))) b_45,  
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) c_20,
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) c_40,
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) c_4h,
       MAX(DECODE(V1.RK,3,SUBSTR(V1.CRR_CD,2,3))) c_45,
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) d_20,
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) d_40,
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) d_4h,
       MAX(DECODE(V1.RK,4,SUBSTR(V1.CRR_CD,2,3))) d_45,
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) e_20,
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) e_40,
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) e_4h,
       MAX(DECODE(V1.RK,5,SUBSTR(V1.CRR_CD,2,3))) e_45 ,
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) f_20,
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) f_40,
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) f_4h,
       MAX(DECODE(V1.RK,6,SUBSTR(V1.CRR_CD,2,3))) f_45 ,
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) g_20,
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) g_40,
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) g_4h,
       MAX(DECODE(V1.RK,7,SUBSTR(V1.CRR_CD,2,3))) g_45 ,
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) h_20,
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) h_40,
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) h_4h,
       MAX(DECODE(V1.RK,8,SUBSTR(V1.CRR_CD,2,3))) h_45 ,
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) i_20,
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) i_40,
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) i_4h,
       MAX(DECODE(V1.RK,9,SUBSTR(V1.CRR_CD,2,3))) i_45 ,
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) j_20,
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) j_40,
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) j_4h,
       MAX(DECODE(V1.RK,10,SUBSTR(V1.CRR_CD,2,3))) j_45 ,
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) k_20,
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) k_40,
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) k_4h,
       MAX(DECODE(V1.RK,11,SUBSTR(V1.CRR_CD,2,3))) k_45 ,
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) l_20,
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) l_40,
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) l_4h,
       MAX(DECODE(V1.RK,12,SUBSTR(V1.CRR_CD,2,3))) l_45 
 FROM V1 ) X, OPF_CGO_BKG_FCAST_SMRY Y, V2
 WHERE V2.POD = SUBSTR(Y.POD_CD,1,2)||Y.BLCK_STWG_CD
   AND Y.VSL_CD    = substr(@[vvd],1,4)        
   AND Y.SKD_VOY_NO= substr(@[vvd],5,4) 
   AND Y.SKD_DIR_CD= substr(@[vvd],9,1) 
   AND Y.YD_CD     = @[yd_cd]
   AND Y.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
 GROUP BY ROLLUP(V2.POD)
 UNION ALL 
  SELECT  'WGT',
         TO_CHAR(MAX(DECODE(V1.RK,1,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,1,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,1,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,1,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,2,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,2,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,2,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,2,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,3,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,3,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,3,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,3,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,4,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,4,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,4,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,4,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,5,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,5,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,5,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,5,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,6,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,6,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,6,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,6,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,7,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,7,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,7,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,7,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,8,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,8,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,8,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,8,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,9,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,9,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,9,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,9,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,10,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,10,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,10,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,10,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,11,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,11,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,11,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,11,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,12,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,12,B.CGO_GRS_WGT))), 
         TO_CHAR(MAX(DECODE(V1.RK,12,B.CGO_GRS_WGT))),
         TO_CHAR(MAX(DECODE(V1.RK,12,B.CGO_GRS_WGT))),
         TO_DATE('29991231','YYYYMMDD') ETA           
    FROM OPF_CGO_BKG_FCAST_WGT_SMRY B, V1 
  WHERE SUBSTR(V1.CRR_CD,2,3) = B.CRR_CD 
    AND B.VSL_CD    = substr(@[vvd],1,4)        
    AND B.SKD_VOY_NO= substr(@[vvd],5,4) 
    AND B.SKD_DIR_CD= substr(@[vvd],9,1) 
    AND B.YD_CD     = @[yd_cd]
    AND B.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
 UNION ALL
    SELECT INFO2,'','','','','','','','','','','','','','','','','','','','','','','','',
           '','','','','','','','','','','','','','','','','','','','','','','','',
           TO_DATE('39991231','YYYYMMDD') ETA  
      FROM (  SELECT TO_CHAR(WM_CONCAT(INFO)) INFO2
                FROM (
                  SELECT 'G.TTL: ' || TO_CHAR(SUM(NVL(BKG_20FT_QTY,0)+NVL(BKG_40FT_QTY,0)+NVL(BKG_40FT_HC_QTY,0)+NVL(BKG_45FT_HC_QTY,0))) INFO
                    FROM OPF_CGO_BKG_FCAST_SMRY
                   WHERE VSL_CD     = substr(@[vvd],1,4)    
                     AND SKD_VOY_NO = substr(@[vvd],5,4)  
                     AND SKD_DIR_CD = substr(@[vvd],9,1) 
                     AND YD_CD      = @[yd_cd]
                     AND POL_CLPT_IND_SEQ  = @[pol_clpt_ind_seq]
                  UNION ALL
                   SELECT '   DG :' ||TO_CHAR(NVL(SUM(CNTR_QTY),0)) INFO 
                     FROM OPF_CGO_BKG_FCAST_SPCL_SMRY
                    WHERE VSL_CD     = substr(@[vvd],1,4)    
                      AND SKD_VOY_NO = substr(@[vvd],5,4)  
                      AND SKD_DIR_CD = substr(@[vvd],9,1) 
                      AND YD_CD      = @[yd_cd]
                      AND POL_CLPT_IND_SEQ  =  @[pol_clpt_ind_seq]
                      AND DCGO_FLG          = 'Y' 
                      AND NVL(AWK_CGO_FLG,'N') = 'N'  
                      AND NVL(RC_FLG ,'N')     = 'N'
                   UNION ALL
                   SELECT '   DG RF:' ||TO_CHAR(NVL(SUM(CNTR_QTY),0)) INFO 
                     FROM OPF_CGO_BKG_FCAST_SPCL_SMRY
                    WHERE VSL_CD     = substr(@[vvd],1,4)    
                      AND SKD_VOY_NO = substr(@[vvd],5,4)  
                      AND SKD_DIR_CD = substr(@[vvd],9,1) 
                      AND YD_CD      = @[yd_cd]
                      AND POL_CLPT_IND_SEQ  =  @[pol_clpt_ind_seq]
                      AND DCGO_FLG          = 'Y' 
                      AND RC_FLG            = 'Y' 
                   UNION ALL
                   SELECT '   DG AWK:' ||TO_CHAR(NVL(SUM(CNTR_QTY),0)) INFO 
                     FROM OPF_CGO_BKG_FCAST_SPCL_SMRY
                    WHERE VSL_CD     = substr(@[vvd],1,4)    
                      AND SKD_VOY_NO = substr(@[vvd],5,4)  
                      AND SKD_DIR_CD = substr(@[vvd],9,1) 
                      AND YD_CD      = @[yd_cd]
                      AND POL_CLPT_IND_SEQ  =  @[pol_clpt_ind_seq]
                      AND DCGO_FLG          = 'Y' 
                      AND AWK_CGO_FLG       = 'Y'  
                  UNION ALL
                   SELECT  '   AWK :' ||TO_CHAR(NVL(SUM(CNTR_QTY),0)) INFO 
                     FROM OPF_CGO_BKG_FCAST_SPCL_SMRY
                    WHERE VSL_CD     = substr(@[vvd],1,4)    
                      AND SKD_VOY_NO = substr(@[vvd],5,4)  
                      AND SKD_DIR_CD = substr(@[vvd],9,1) 
                      AND YD_CD      = @[yd_cd]
                      AND POL_CLPT_IND_SEQ  =  @[pol_clpt_ind_seq]
                      AND AWK_CGO_FLG ='Y' 
                      AND NVL(DCGO_FLG, 'N' ) = 'N' 
                      AND (FWRD_OVR_DIM_LEN <> 0 OR BKWD_OVR_DIM_LEN <> 0 OR HGT_OVR_DIM_LEN <> 0 OR LF_SD_OVR_DIM_LEN <> 0 OR RT_SD_OVR_DIM_LEN <> 0 )
                   UNION ALL
                    SELECT '   RF :' ||TO_CHAR(NVL(SUM(CNTR_QTY),0)) INFO  
                      FROM OPF_CGO_BKG_FCAST_SPCL_SMRY
                     WHERE VSL_CD     = substr(@[vvd],1,4)    
                      AND SKD_VOY_NO = substr(@[vvd],5,4)  
                      AND SKD_DIR_CD = substr(@[vvd],9,1) 
                      AND YD_CD      = @[yd_cd]
                      AND POL_CLPT_IND_SEQ  =  @[pol_clpt_ind_seq]
                      AND NVL(DCGO_FLG, 'N' ) = 'N' 
                      AND RC_FLG =       'Y')) 
 ) ZZ) AA, 
 ( SELECT X.CRR_CD, X.POD, MIN(X.SP_20) SP_20, MIN(X.SP_40) SP_40, MIN(X.SP_40H) SP_40H, MIN(X.SP_45) SP_45, MIN(RN) RN
     FROM (
          SELECT  DISTINCT CRR_CD, SUBSTR(POD_CD,1,2)||BLCK_STWG_CD POD,
                  CASE WHEN B.CNTR_SZ_CD IN ('2','3') THEN replace(OPF_CBF_INFO_FNC(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD, A.YD_CD, A.BLCK_STWG_CD, A.POD_CD, A.CNTR_TPSZ_CD,A.CRR_CD,A.POL_CLPT_IND_SEQ) ,',','\n')
                       ELSE NULL
                       END SP_20,
                  NULL SP_40, NULL SP_40H, NULL SP_45, DECODE(CRR_CD,'SML',1,2) RN
             FROM OPF_CGO_BKG_FCAST_SPCL_SMRY A, OPF_CNTR_TYPE_SIZE_V B
            WHERE A.VSL_CD    = substr(@[vvd],1,4)        
              AND A.SKD_VOY_NO= substr(@[vvd],5,4) 
              AND A.SKD_DIR_CD= substr(@[vvd],9,1) 
              AND A.YD_CD     = @[yd_cd]
              AND A.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
              AND A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD
          UNION ALL
          SELECT  DISTINCT CRR_CD, SUBSTR(POD_CD,1,2)||BLCK_STWG_CD POD,
                  NULL SP_20,
                  CASE WHEN B.CNTR_SZ_CD = '4' THEN replace(OPF_CBF_INFO_FNC(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD, A.YD_CD, A.BLCK_STWG_CD, A.POD_CD, A.CNTR_TPSZ_CD,A.CRR_CD,A.POL_CLPT_IND_SEQ) ,',','\n')
                       ELSE NULL
                        END SP_40,
                  NULL SP_40H, NULL SP_45, DECODE(CRR_CD,'SML',1,2) RN
             FROM OPF_CGO_BKG_FCAST_SPCL_SMRY A, OPF_CNTR_TYPE_SIZE_V B
            WHERE A.VSL_CD    = substr(@[vvd],1,4)        
              AND A.SKD_VOY_NO= substr(@[vvd],5,4) 
              AND A.SKD_DIR_CD= substr(@[vvd],9,1) 
              AND A.YD_CD     = @[yd_cd]
              AND A.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
              AND A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD
          UNION ALL
          SELECT  DISTINCT CRR_CD, SUBSTR(POD_CD,1,2)||BLCK_STWG_CD POD,
                  NULL SP_20,
                  NULL SP_40,   
                  CASE WHEN B.CNTR_SZ_CD IN ('5','8','9') THEN replace(OPF_CBF_INFO_FNC(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD, A.YD_CD, A.BLCK_STWG_CD, A.POD_CD, A.CNTR_TPSZ_CD,A.CRR_CD,A.POL_CLPT_IND_SEQ) ,',','\n')
                       ELSE NULL
                       END SP_40H,    
                  NULL SP_45, DECODE(CRR_CD,'SML',1,2) RN
             FROM OPF_CGO_BKG_FCAST_SPCL_SMRY A, OPF_CNTR_TYPE_SIZE_V B
            WHERE A.VSL_CD    = substr(@[vvd],1,4)        
              AND A.SKD_VOY_NO= substr(@[vvd],5,4) 
              AND A.SKD_DIR_CD= substr(@[vvd],9,1) 
              AND A.YD_CD     = @[yd_cd]
              AND A.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
              AND A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD
          UNION ALL
         SELECT  DISTINCT CRR_CD, SUBSTR(POD_CD,1,2)||BLCK_STWG_CD POD,
                 NULL SP_20,
                 NULL SP_40,   
                 NULL SP_40H,    
                 CASE WHEN B.CNTR_SZ_CD IN ('7','W','X') THEN replace(OPF_CBF_INFO_FNC(A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD, A.YD_CD, A.BLCK_STWG_CD, A.POD_CD, A.CNTR_TPSZ_CD,A.CRR_CD,A.POL_CLPT_IND_SEQ),',','\n') 
                      ELSE NULL
                      END SP_45, DECODE(CRR_CD,'SML',1,2) RN
          FROM OPF_CGO_BKG_FCAST_SPCL_SMRY A, OPF_CNTR_TYPE_SIZE_V B
         WHERE A.VSL_CD    = substr(@[vvd],1,4)       
           AND A.SKD_VOY_NO= substr(@[vvd],5,4)
           AND A.SKD_DIR_CD= substr(@[vvd],9,1)
           AND A.YD_CD     = @[yd_cd]
           AND A.POL_CLPT_IND_SEQ = @[pol_clpt_ind_seq]
           AND A.CNTR_TPSZ_CD = B.CNTR_TPSZ_CD ) X
     GROUP BY X.CRR_CD, X.POD
 UNION ALL
 SELECT 'OPR' CRR_CD, 'PORT' POD,  'Speical Cargo' SP_20, 'Speical Cargo' SP_40, 'Speical Cargo' SP_40H, 'Speical Cargo' SP_45, 0
 FROM DUAL
  UNION ALL
 SELECT 'OPR' CRR_CD, 'SIZE' POD,  '20' SP_20, '40' SP_40, '40H' SP_40H, '45' SP_45, 0
 FROM DUAL
 ) BB
 WHERE AA.POD = BB.POD(+)
ORDER BY AA.ETA , AA.RK, BB.RN, BB.CRR_CD )			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="pol_clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
