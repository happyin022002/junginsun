<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OwnContainerBookingForecastMgtDBDAOsearchCBFBKGListRSQL">
			<desc><![CDATA[searchCBFBKGList 조회
2013.06.12 [CHM-201324915] [VOP-OPF] CBF – POD TMNL code로 구분]]></desc>
			<sql><![CDATA[
WITH WGT_GRP AS ( 
     SELECT SLAN_CD,
            SKD_DIR_CD,
            POL_CD,
            CNTR_SZ_CD,
            FULL_MTY_CD,
            CNTR_WGT_GRP_CD,
            FM_LMT_WGT FROM_LMT_WGT,
            TO_LMT_WGT TO_LMT_WGT
       FROM OPF_CGO_BKG_FCAST_WGT_GRP 
)
SELECT QT.BKG_NO,
       QT.CNTR_NO,
       QT.POD POD_CD,
       QT.POD_YD_CD,
       QT.POD_CLPT_IND_SEQ,
       QT.MLB MLB_CD,
       'SML' CRR_CD,
       QT.TP CNTR_TPSZ_CD,
       WP.CNTR_WGT_GRP_CD CNTR_WGT_GRP_CD,
       QT.FM FULL_MTY_CD,
       QT.DG DCGO_FLG,
       QT.RF RC_FLG,
       QT.AK AWK_CGO_FLG,
       QT.BB BB_CGO_FLG,
       QT.STWG_CD,
       QT.PRCT_FLG,
       ROUND(CNTR_GRS_WGT,3) CNTR_GRS_WGT,
       QT.STS BKG_STS_CD,
       @[vsl_cd] VSL_CD,
       @[skd_voy_no] SKD_VOY_NO,
       @[skd_dir_cd] SKD_DIR_CD,
       QT.POL_YD_CD  YD_CD,
       QT.POL_CLPT_IND_SEQ,
       'D' RD_ST,
       'Y' BKG_SHPR_OWNR_FLG,
       (SELECT VSL_SLAN_CD 
          FROM VSK_VSL_SKD
         WHERE VSL_CD     = @[vsl_cd]
           AND SKD_VOY_NO = @[skd_voy_no]
           AND SKD_DIR_CD = @[skd_dir_cd]) SLAN_CD,
       'V' CBF_DP_CD
  FROM ( 
        SELECT QT.BKG_NO,
               QT.CNTR_NO,
               QT.POD,
               QT.POD_YD_CD   POD_YD_CD ,
               QT.POD_CLPT_IND_SEQ,
               QT.POL_YD_CD,
               QT.POL_CLPT_IND_SEQ,
               QT.MLB,
               QT.TP,
               QT.FM,
               QT.DG,
               QT.RF,
               QT.AK,
               QT.BB,
               QT.CNTR_GRS_WGT+DECODE(NVL(TP.CNTR_TPSZ_TARE_WGT,0),0,DECODE(SUBSTR(QT.TP,2,1),2,2500,4000),NVL(TP.CNTR_TPSZ_TARE_WGT,0)) CNTR_GRS_WGT,
               QT.SLAN_CD,
               QT.SKD_DIR_CD,
               QT.POL_CD,
               QT.PRCT_FLG,
               QT.STWG_CD,
               QT.STS
          FROM ( 
                WITH COPY_T AS ( 
                     SELECT ROWNUM NO
                       FROM BKG_BOOKING
                      WHERE ROWNUM<=1000 
                )
                SELECT /*+ ORDERED */ 
                       BKG_NO,
                       CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CNTR_NO END CNTR_NO,
                       POD,
                       POD_YD_CD,
                       POD_CLPT_IND_SEQ,
                       POL_YD_CD,
                       POL_CLPT_IND_SEQ,
                       MLB,
                       TP,
                       FM,
                       NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CDG END,DG) DG,
                       NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CRF END,RF) RF ,
                       NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CAK END,AK) AK ,
                       NVL(CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CBB END,BB) BB,
                       CNTR_GRS_WGT,
                       SLAN_CD ,
                       SKD_DIR_CD ,
                       POL_CD,
                       PRCT_FLG,
                       STWG_CD,
                       STS
                  FROM ( 
                        SELECT BKG_NO,
                               POD,
                               POD_YD_CD,
                               POD_CLPT_IND_SEQ,
                               POL_YD_CD,
                               POL_CLPT_IND_SEQ,
                               MLB,
                               TP,
                               FM,
                               DG,
                               RF,
                               AK,
                               BB,
                               DECODE(@[ac_cntr_flg],'C',AC_CNTR_QTY,OP_CNTR_QTY) CNTR_QTY,
                               SLAN_CD,
                               SKD_DIR_CD,
                               POL_CD,
                               PRCT_FLG,
                               STWG_CD,
                               CNTR_NO,
                               CDG,
                               CRF,
                               CAK,
                               CBB,
                               STS,
                               ROW_NUMBER() OVER (PARTITION BY BKG_NO, TP ORDER BY CNTR_NO) RN,
                               COUNT(CNTR_NO) OVER (PARTITION BY BKG_NO, TP ) CNT,
                               (CASE WHEN @[ac_cntr_flg] = 'C' THEN 
                                        ACT_WGT*(TP_CNR_QTY/TOT_TP_AC_QTY)/(DECODE(SUBSTR(TP,2,1),2,TP_CNR_QTY,TP_CNR_QTY/2))
                                    ELSE
                                        ACT_WGT*(TP_OP_QTY/TOT_TP_OP_QTY)/(DECODE(SUBSTR(TP,2,1),2,TP_OP_QTY,TP_OP_QTY/2))
                               END) AS CNTR_GRS_WGT ,
                               RK
                          FROM ( 
                                SELECT /*+ ORDERED */
                                       QTY.BKG_NO       BKG_NO,
                                       VVD.POD_CD       POD,
                                       VVD.POD_YD_CD    POD_YD_CD,
                                       VVD.POD_CLPT_IND_SEQ,
                                       VVD.POL_YD_CD,
                                       VVD.POL_CLPT_IND_SEQ,
                                       BKG.BLCK_STWG_CD MLB,
                                       QTY.CNTR_TPSZ_CD TP,
                                       DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E') FM,
                                       BKG.DCGO_FLG     DG,
                                       BKG.RC_FLG       RF,
                                       BKG.AWK_CGO_FLG  AK,
                                       BKG.BB_CGO_FLG   BB,
                                       DOC.ACT_WGT,
                                       
                                       (SELECT SUM(BQ.OP_CNTR_QTY*DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),2,1,2))  
                                          FROM BKG_QUANTITY BQ
                                         WHERE BQ.BKG_NO = BKG.BKG_NO 
                                           AND BQ.CNTR_TPSZ_CD NOT LIKE 'Q%'
                                       ) AS TOT_TP_OP_QTY,                                           
                                       (SELECT SUM(BQ.OP_CNTR_QTY*DECODE(SUBSTR(BQ.CNTR_TPSZ_CD,2,1),2,1,2))
                                          FROM BKG_QUANTITY BQ
                                         WHERE BQ.BKG_NO       = BKG.BKG_NO
                                           AND BQ.CNTR_TPSZ_CD = QTY.CNTR_TPSZ_CD
                                           AND BQ.CNTR_TPSZ_CD NOT LIKE 'Q%'
                                       ) AS TP_OP_QTY,                                           
                                       SUM(DISTINCT(DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,QTY.ACT_CNTR_QTY,QTY.ACT_CNTR_QTY*2))) OVER (PARTITION BY BKG.BKG_NO, QTY.CNTR_TPSZ_CD) AS TP_AC_QTY, 
                                       SUM(DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,1,2)) OVER (PARTITION BY QTY.BKG_NO) AS TOT_TP_AC_QTY,
                                       SUM(DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,1,2)) OVER (PARTITION BY QTY.BKG_NO, QTY.CNTR_TPSZ_CD) AS TP_CNR_QTY,
                                       
                                       (SELECT COUNT(*)
                                          FROM BKG_CONTAINER C
                                         WHERE C.BKG_NO       = QTY.BKG_NO
                                           AND C.CNTR_TPSZ_CD = QTY.CNTR_TPSZ_CD
                                       ) AS AC_CNTR_QTY,                                           
                                       QTY.OP_CNTR_QTY AS OP_CNTR_QTY, 
                                       VVD.SLAN_CD      SLAN_CD,
                                       VVD.SKD_DIR_CD   SKD_DIR_CD,
                                       VVD.POL_CD       POL_CD,
                                       BKG.PRCT_FLG     PRCT_FLG,
                                       BKG.STWG_CD      STWG_CD,
                                       CNTR.CNTR_NO     CNTR_NO,
                                       CNTR.DCGO_FLG    CDG,
                                       CNTR.RC_FLG      CRF,
                                       CNTR.AWK_CGO_FLG CAK,
                                       CNTR.BB_CGO_FLG  CBB,
                                       BKG.BKG_STS_CD   STS,
                                       CASE WHEN LENGTH(CNTR_NO) = 11 THEN RANK() OVER(PARTITION BY CNTR_NO ORDER BY BKG.BKG_NO,BKG_CRE_TP_CD DESC) 
                                            ELSE 1
                                       END RK
                                  FROM BKG_VVD       VVD, 
                                       BKG_BOOKING   BKG, 
                                       BKG_BL_DOC    DOC, 
                                       BKG_QUANTITY  QTY, 
                                       BKG_CONTAINER CNTR
                                 WHERE VVD.VSL_CD                          = @[vsl_cd]
                                   AND VVD.SKD_VOY_NO                      = @[skd_voy_no]
                                   AND VVD.SKD_DIR_CD                      = @[skd_dir_cd]
                                   AND VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]
                                   AND VVD.BKG_NO                          = BKG.BKG_NO
                                   #if(${bk_st} == 'F')
                                   AND BKG.BKG_STS_CD  LIKE 'F'||'%'            --:BKG_STS(CONFIRM : 'F', ALL : '')
                                   #end
                                   AND BKG.BKG_STS_CD  <> 'X'
                                   AND BKG.BKG_NO       = DOC.BKG_NO
                                   AND BKG.BKG_NO       = QTY.BKG_NO
                                   AND QTY.CNTR_TPSZ_CD NOT LIKE 'Q%'
                                   AND QTY.BKG_NO       = CNTR.BKG_NO(+)
                                   AND QTY.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD(+) 
                               ) 
                       )      QTY, 
                       COPY_T C
                 WHERE 
                  1=1
                  AND QTY.RK = 1
                  AND DECODE(QTY.RN,1,CNTR_QTY - DECODE(QTY.CNT,0,0,QTY.CNT-1)) >= C.NO(+) 
#if (${ac_cntr_flg} == 'C')
                   AND CNTR_QTY >= RN                  
#end
                   
               )              QT, 
               MDM_CNTR_TP_SZ TP
         WHERE QT.TP = TP.CNTR_TPSZ_CD(+) 
       )       QT, 
       WGT_GRP WP
 WHERE QT.SLAN_CD         = WP.SLAN_CD(+)
   AND QT.SKD_DIR_CD      = WP.SKD_DIR_CD(+)
   AND QT.POL_CD          = WP.POL_CD(+)
   AND DECODE(SUBSTR(QT.TP,2,1),'2','2','4') = WP.CNTR_SZ_CD(+)
   AND QT.FM              = WP.FULL_MTY_CD(+)
   AND QT.CNTR_GRS_WGT/1000 > WP.FROM_LMT_WGT(+) 
   AND QT.CNTR_GRS_WGT/1000 <= NVL(WP.TO_LMT_WGT(+),9999999999)
 ORDER BY 
       POD_CD, 
       POD_CLPT_IND_SEQ,
       MLB_CD, 
       BKG_NO, 
       CNTR_NO,
       CNTR_TPSZ_CD, 
       CNTR_WGT_GRP_CD,
       FULL_MTY_CD, 
       DECODE(DCGO_FLG,'Y','1',RC_FLG,'Y','2',AWK_CGO_FLG,'Y','3',BB_CGO_FLG,'Y','4')			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="HNBR" out="N"/>
				<param name="skd_voy_no" type="12" value="0032" out="N"/>
				<param name="skd_dir_cd" type="12" value="E" out="N"/>
				<param name="ac_cntr_flg" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="KRPUSYG" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
