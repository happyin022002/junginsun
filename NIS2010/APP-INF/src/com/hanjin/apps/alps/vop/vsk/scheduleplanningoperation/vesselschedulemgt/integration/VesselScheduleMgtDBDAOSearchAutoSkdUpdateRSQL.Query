<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOSearchAutoSkdUpdateRSQL">
			<desc><![CDATA[Actual SKD 생성에 의한 Auto Update 대상 SKD을 조회한다.
----------------------------------------------------------------
2010.10.18 유혁 CHM-201006456-01 SKD Auto Update 기능 보완
2011.01.24 이석준 CHM-201108237-01 Actual Schedule update시 해당 항차 다음의 3
항차까지 update될 수 있도록 logic 수정]]></desc>
			<sql><![CDATA[
WITH TB_SRC1 AS (
SELECT  *
FROM    (
        SELECT  MAX(CASE WHEN MAX_ETD >= ETA_YYYYMM THEN LVL ELSE 0 END) OVER () MAX_LVL
                , T1.*
        FROM    (
                SELECT  T1.LVL, T3.VSL_SLAN_CD, T3.PF_SKD_TP_CD, T2.*, TO_CHAR(T2.VPS_ETA_DT, 'YYYYMM') AS ETA_YYYYMM,
                        (
                        SELECT  SUBSTR(MAX(LTRIM(TO_CHAR(S.CLPT_IND_SEQ, '0000') || TO_CHAR(S.VPS_ETD_DT, 'YYYYMM'))), 5)
                        FROM    VSK_VSL_PORT_SKD S
                        WHERE   S.VSL_CD        = @[vsl_cd]
                        AND     S.SKD_VOY_NO    = @[skd_voy_no]
                        AND     S.SKD_DIR_CD    = @[skd_dir_cd]
                        AND     'S'            != NVL(S.SKD_CNG_STS_CD, ' ')
                        ) AS MAX_ETD
                FROM    (
                        -- UNION 001 해당 VVD 부터 TURNING으로 계속 연결된 VVD 목록. 즉 TURNING 정보를 가지는 VVD만 조회됨
                        SELECT  LEVEL AS LVL
                                , T11.VSL_CD, T11.SKD_VOY_NO, T11.SKD_DIR_CD
                                , T11.TURN_SKD_VOY_NO, T11.TURN_SKD_DIR_CD
                        FROM    (
                                SELECT  DISTINCT
                                        T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD
                                        , T1.TURN_SKD_VOY_NO, T1.TURN_SKD_DIR_CD
                                FROM    VSK_VSL_PORT_SKD T1, VSK_VSL_PORT_SKD T2
                                WHERE   T1.VSL_CD          = @[vsl_cd]
                                AND     T1.VSL_CD          = T2.VSL_CD
                                AND     T1.TURN_SKD_VOY_NO = T2.SKD_VOY_NO
                                AND     T1.TURN_SKD_DIR_CD = T2.SKD_DIR_CD
                                AND     T1.TURN_PORT_IND_CD IN ('D', 'V', 'F')
                                AND     T2.TURN_PORT_FLG   = 'Y'
                                ) T11
                        START WITH SKD_VOY_NO = @[skd_voy_no] AND SKD_DIR_CD = @[skd_dir_cd]
                        CONNECT BY PRIOR TURN_SKD_VOY_NO = SKD_VOY_NO AND PRIOR TURN_SKD_DIR_CD = SKD_DIR_CD
                        -- UNION 001
                        UNION ALL
                        -- UNION 002 해당 VVD가 앞뒤로 모두 없을 경우, 해당 VVD 조회
                        SELECT  DISTINCT 1 AS LVL
                                , VSL_CD, SKD_VOY_NO, SKD_DIR_CD
                                , TURN_SKD_VOY_NO, TURN_SKD_DIR_CD
                        FROM    VSK_VSL_PORT_SKD T3
                        WHERE   VSL_CD     = @[vsl_cd]
                        AND     SKD_VOY_NO = @[skd_voy_no]
                        AND     SKD_DIR_CD = @[skd_dir_cd]
                        AND     1          = NVL(
                                                (
                                                SELECT 2
                                                FROM   VSK_VSL_PORT_SKD
                                                WHERE  VSL_CD     = T3.VSL_CD
                                                AND    SKD_VOY_NO = T3.SKD_VOY_NO
                                                AND    SKD_DIR_CD = T3.SKD_DIR_CD
                                                AND   (TURN_PORT_FLG = 'Y' OR TURN_PORT_IND_CD IN ('D', 'V', 'F'))
                                                AND    ROWNUM = 1
                                                )
                                             , 1)
                        -- UNION 002
                        UNION ALL
                        -- UNION 003 해당 VVD가 앞만 있을 경우, 해당 VVD 조회
                        SELECT  DISTINCT 1 AS LVL
                                , VSL_CD, SKD_VOY_NO, SKD_DIR_CD
                                , '' TURN_SKD_VOY_NO, '' TURN_SKD_DIR_CD
                        FROM    VSK_VSL_PORT_SKD T
                        WHERE   VSL_CD        = @[vsl_cd] 
                        AND     SKD_VOY_NO    = @[skd_voy_no] 
                        AND     SKD_DIR_CD    = @[skd_dir_cd]
                        AND     TURN_PORT_FLG ='Y'
                        AND     1             = NVL(
                                                   (
                                                   SELECT 2
                                                   FROM   VSK_VSL_PORT_SKD
                                                   WHERE  VSL_CD      = T.VSL_CD
                                                   AND    SKD_VOY_NO  = T.SKD_VOY_NO
                                                   AND    SKD_DIR_CD  = T.SKD_DIR_CD
                                                   AND    TURN_PORT_IND_CD IN ('D', 'V', 'F')
                                                   AND    ROWNUM      = 1
                                                   )
                                                , 1)
                        -- UNION 003
                        UNION ALL
                        -- UNION 004 해당 VVD에 연결된 다음 VVD가 뒤가 없을 경우, 다음 VVD 조회
                        SELECT  DISTINCT 2 AS LVL
                                , VSL_CD, TURN_SKD_VOY_NO AS SKD_VOY_NO, TURN_SKD_DIR_CD AS SKD_DIR_CD
                                , '' AS TURN_SKD_VOY_NO, '' AS TURN_SKD_DIR_CD
                        FROM    VSK_VSL_PORT_SKD T4
                        WHERE   VSL_CD     = @[vsl_cd]
                        AND     SKD_VOY_NO = @[skd_voy_no]
                        AND     SKD_DIR_CD = @[skd_dir_cd]
                        AND     TURN_PORT_IND_CD IN ('F', 'V', 'D')
                        AND     1          = NVL(
                                                (
                                                SELECT 2
                                                FROM   VSK_VSL_PORT_SKD
                                                WHERE  VSL_CD       = T4.VSL_CD
                                                AND    SKD_VOY_NO   = T4.TURN_SKD_VOY_NO
                                                AND    SKD_DIR_CD   = T4.TURN_SKD_DIR_CD
                                                AND    TURN_PORT_IND_CD IN ('D', 'V', 'F')
                                                AND    ROWNUM       = 1
                                                )
                                             , 1)
                        -- UNION 004
                        )                   T1,
                        VSK_VSL_PORT_SKD    T2,
                        VSK_VSL_SKD         T3
                WHERE   1=1
                AND     T1.VSL_CD       = T2.VSL_CD
                AND     T1.SKD_VOY_NO   = T2.SKD_VOY_NO
                AND     T1.SKD_DIR_CD   = T2.SKD_DIR_CD
                AND     T1.VSL_CD       = T3.VSL_CD
                AND     T1.SKD_VOY_NO   = T3.SKD_VOY_NO
                AND     T2.SKD_DIR_CD   = T3.SKD_DIR_CD
                AND     T2.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
                ) T1
        WHERE   1=1
        ) T1
WHERE   1=1
AND     LVL <= MAX_LVL
)
--------------------------------------------------------------------------
SELECT  T1.*

        , CASE
          WHEN ( (NVL(LAG (T1.INIT_ETA_DT) OVER (ORDER BY T1.LVL, T1.CLPT_SEQ), '195101010000') > T1.INIT_ETA_DT) OR
                 (NVL(LEAD(T1.INIT_ETA_DT) OVER (ORDER BY T1.LVL, T1.CLPT_SEQ), '299912310000') < T1.INIT_ETA_DT)) THEN
                  'Y'

          ELSE
                  'N' 
          END                                                 AS RVS_FLG


FROM    (
        SELECT  DISTINCT T1.LVL
                , T1.VSL_CD
                , T1.SKD_VOY_NO
                , T1.SKD_DIR_CD
                , T1.VPS_PORT_CD
                , T1.CLPT_IND_SEQ
                , T1.CLPT_SEQ
                , T1.YD_CD
                , T1.SLAN_CD
                , T1.ACT_INP_FLG
                , T1.PF_ETA_DT
                , T1.PF_ETB_DT
                , T1.PF_ETD_DT
                , T1.INIT_ETA_DT
                , T1.INIT_ETB_DT
                , T1.INIT_ETD_DT
                , T1.VPS_ETA_DT
                , T1.VPS_ETB_DT
                , T1.VPS_ETD_DT
                , T1.TURN_PORT_FLG
                , T1.TURN_PORT_IND_CD
                , T1.TURN_SKD_VOY_NO
                , T1.TURN_SKD_DIR_CD
                , T1.TURN_CLPT_IND_SEQ
                , T1.VSL_SLAN_CD
                , T1.PF_SKD_TP_CD
                , NVL(T1.SKD_CNG_STS_CD, ' ') AS SKD_CNG_STS_CD
                , T1.AUTO_SKD_CNG_FLG
                , T1.GMT_HRS
                , T1.LNK_DIST
                , T1.LNK_SPD
                , DECODE(T1.TZTM_HRS    , 0, NVL(T2.TZTM_HRS    , 0), T1.TZTM_HRS    ) AS TZTM_HRS
                , DECODE(T1.SEA_BUF_HRS , 0, NVL(T2.SEA_BUF_HRS , 0), T1.SEA_BUF_HRS ) AS SEA_BUF_HRS
                , DECODE(T1.MNVR_OUT_HRS, 0, NVL(T2.MNVR_OUT_HRS, 0), T1.MNVR_OUT_HRS) AS MNVR_OUT_HRS
                , DECODE(T1.MNVR_IN_HRS , 0, NVL(T2.MNVR_IN_HRS , 0), T1.MNVR_IN_HRS ) AS MNVR_IN_HRS
                , DECODE(T1.ACT_WRK_HRS , 0, NVL(T2.ACT_WRK_HRS , 0), T1.ACT_WRK_HRS ) AS PORT_WRK_HRS
                , DECODE(T1.PORT_BUF_HRS, 0, NVL(T2.PORT_BUF_HRS, 0), T1.PORT_BUF_HRS) AS PORT_BUF_HRS
        FROM    (
                -- 마지막 VVD를 제외한 SKD 조회
                SELECT  T1.LVL
                        , T1.MAX_LVL
                        , T1.VSL_CD
                        , T1.SKD_VOY_NO
                        , T1.SKD_DIR_CD
                        , T1.VPS_PORT_CD
                        , T1.CLPT_IND_SEQ
                        , T1.CLPT_SEQ
                        , T1.YD_CD
                        , T1.SLAN_CD
                        , T1.ACT_INP_FLG
                        , TO_CHAR(T1.PF_ETA_DT  , 'YYYYMMDDHH24MI') AS PF_ETA_DT
                        , TO_CHAR(T1.PF_ETB_DT  , 'YYYYMMDDHH24MI') AS PF_ETB_DT
                        , TO_CHAR(T1.PF_ETD_DT  , 'YYYYMMDDHH24MI') AS PF_ETD_DT
                        , TO_CHAR(T1.INIT_ETA_DT, 'YYYYMMDDHH24MI') AS INIT_ETA_DT
                        , TO_CHAR(T1.INIT_ETB_DT, 'YYYYMMDDHH24MI') AS INIT_ETB_DT
                        , TO_CHAR(T1.INIT_ETD_DT, 'YYYYMMDDHH24MI') AS INIT_ETD_DT
                        , TO_CHAR(T1.VPS_ETA_DT , 'YYYYMMDDHH24MI') AS VPS_ETA_DT
                        , TO_CHAR(T1.VPS_ETB_DT , 'YYYYMMDDHH24MI') AS VPS_ETB_DT
                        , TO_CHAR(T1.VPS_ETD_DT , 'YYYYMMDDHH24MI') AS VPS_ETD_DT
                        , T1.TURN_PORT_FLG, T1.TURN_PORT_IND_CD, T1.TURN_SKD_VOY_NO, T1.TURN_SKD_DIR_CD, T1.TURN_CLPT_IND_SEQ
                        , T1.VSL_SLAN_CD, T1.PF_SKD_TP_CD
                        , T1.SKD_CNG_STS_CD
                        , CASE
                          WHEN ((T1.AUTO_SKD_CNG_FLG = 'Y') OR (TO_CHAR(T1.UPD_DT, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') AND T1.UPD_USR_ID != 'ACT_AUTO_UPDATE')) THEN
                               -- 자동 UPDATE 된 건은 당일 계속 UPDATE 되도록
                               'Y'
                          ELSE
                               'N'
                          END         AS AUTO_SKD_CNG_FLG
                        , (
                          SELECT NVL(MAX(S1.GMT_HRS/60.0), 0)
                          FROM   MDM_LOCATION S1
                          WHERE  S1.LOC_CD     = T1.VPS_PORT_CD
                          )                                        AS GMT_HRS
                        , NVL(T1.LNK_DIST    , 0 ) AS LNK_DIST
                        , NVL(T1.LNK_SPD     , 0 ) AS LNK_SPD
                        , NVL(T1.TZTM_HRS    , 0 ) AS TZTM_HRS
                        , NVL(T1.SEA_BUF_HRS , 0 ) AS SEA_BUF_HRS
                        , NVL(T1.MNVR_IN_HRS , 0 ) AS MNVR_IN_HRS 
                        , NVL(T1.MNVR_OUT_HRS, 0 ) AS MNVR_OUT_HRS
                        , NVL(T1.PORT_WRK_HRS, 0 ) AS ACT_WRK_HRS
                        , NVL(T1.PORT_BUF_HRS, 0 ) AS PORT_BUF_HRS
                FROM    TB_SRC1             T1
                WHERE   1=1
                AND     T1.LVL         <> T1.MAX_LVL
                AND     (
                        (
                        T1.LVL = 1 AND T1.CLPT_SEQ  >= (
                                                       -- 입력한 VVD 부터 나오도록 찾는다.(START PORT)
                                                       SELECT  S.CLPT_SEQ
                                                       FROM    VSK_VSL_PORT_SKD S 
                                                       WHERE   S.VSL_CD       = @[vsl_cd]
                                                       AND     S.SKD_VOY_NO   = @[skd_voy_no]
                                                       AND     S.SKD_DIR_CD   = @[skd_dir_cd]
                                                       AND     S.VPS_PORT_CD  = @[vps_port_cd]
                                                       AND     S.CLPT_IND_SEQ = @[clpt_ind_seq]
                                                       )
                        )
                        OR
                        ( T1.LVL > 1)
                        )
                
                UNION ALL
                
                -- 마지막 VVD만 SKD 조회
                SELECT  T1.LVL
                        , T1.MAX_LVL
                        , T1.VSL_CD
                        , T1.SKD_VOY_NO
                        , T1.SKD_DIR_CD
                        , T1.VPS_PORT_CD
                        , T1.CLPT_IND_SEQ
                        , T1.CLPT_SEQ
                        , T1.YD_CD
                        , T1.SLAN_CD
                        , T1.ACT_INP_FLG
                        , TO_CHAR(T1.PF_ETA_DT  , 'YYYYMMDDHH24MI') AS PF_ETA_DT
                        , TO_CHAR(T1.PF_ETB_DT  , 'YYYYMMDDHH24MI') AS PF_ETB_DT
                        , TO_CHAR(T1.PF_ETD_DT  , 'YYYYMMDDHH24MI') AS PF_ETD_DT
                        , TO_CHAR(T1.INIT_ETA_DT, 'YYYYMMDDHH24MI') AS INIT_ETA_DT
                        , TO_CHAR(T1.INIT_ETB_DT, 'YYYYMMDDHH24MI') AS INIT_ETB_DT
                        , TO_CHAR(T1.INIT_ETD_DT, 'YYYYMMDDHH24MI') AS INIT_ETD_DT
                        , TO_CHAR(T1.VPS_ETA_DT , 'YYYYMMDDHH24MI') AS VPS_ETA_DT
                        , TO_CHAR(T1.VPS_ETB_DT , 'YYYYMMDDHH24MI') AS VPS_ETB_DT
                        , TO_CHAR(T1.VPS_ETD_DT , 'YYYYMMDDHH24MI') AS VPS_ETD_DT
                        , T1.TURN_PORT_FLG, T1.TURN_PORT_IND_CD, T1.TURN_SKD_VOY_NO, T1.TURN_SKD_DIR_CD, T1.TURN_CLPT_IND_SEQ
                        , T1.VSL_SLAN_CD, T1.PF_SKD_TP_CD
                        , T1.SKD_CNG_STS_CD
                        , CASE
                          WHEN ((T1.AUTO_SKD_CNG_FLG = 'Y') OR (TO_CHAR(T1.UPD_DT, 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') AND T1.UPD_USR_ID != 'ACT_AUTO_UPDATE')) THEN
                               -- 자동 UPDATE 된 건은 당일 계속 UPDATE 되도록
                               'Y'
                          ELSE
                               'N'
                          END         AS AUTO_SKD_CNG_FLG
                        , (
                          SELECT NVL(MAX(S1.GMT_HRS/60.0), 0)
                          FROM   MDM_LOCATION S1
                          WHERE  S1.LOC_CD     = T1.VPS_PORT_CD
                          )                                        AS GMT_HRS
                        , NVL(T1.LNK_DIST    , 0 ) AS LNK_DIST
                        , NVL(T1.LNK_SPD     , 0 ) AS LNK_SPD
                        , NVL(T1.TZTM_HRS    , 0 ) AS TZTM_HRS
                        , NVL(T1.SEA_BUF_HRS , 0 ) AS SEA_BUF_HRS
                        , NVL(T1.MNVR_IN_HRS , 0 ) AS MNVR_IN_HRS
                        , NVL(T1.MNVR_OUT_HRS, 0 ) AS MNVR_OUT_HRS
                        , NVL(T1.PORT_WRK_HRS, 0 ) AS ACT_WRK_HRS
                        , NVL(T1.PORT_BUF_HRS, 0 ) AS PORT_BUF_HRS
                FROM    TB_SRC1             T1,
                        VSK_VSL_PORT_SKD    T2
                WHERE   1=1
                AND     T1.LVL          = T1.MAX_LVL
                AND     T1.VSL_CD       = T2.VSL_CD
                AND     T1.SKD_VOY_NO   = T2.SKD_VOY_NO
                AND     T1.SKD_DIR_CD   = T2.SKD_DIR_CD
                AND     T2.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
                AND     T2.CLPT_SEQ    >= (
                                          -- 입력한 VVD 부터 나오도록 찾는다.(START PORT)
                                          SELECT  S.CLPT_SEQ
                                          FROM    VSK_VSL_PORT_SKD S 
                                          WHERE   S.VSL_CD       = @[vsl_cd]
                                          AND     S.SKD_VOY_NO   = @[skd_voy_no]
                                          AND     S.SKD_DIR_CD   = @[skd_dir_cd]
                                          AND     S.VPS_PORT_CD  = @[vps_port_cd]
                                          AND     S.CLPT_IND_SEQ = @[clpt_ind_seq]
                                          )
                )       T1,
                (
                -- T002 START
                SELECT  T1.VSL_SLAN_CD, T1.PF_SVC_TP_CD, T1.PORT_CD, DECODE(VIRT_FLG, 'V', T1.DIR_CD2, T2.SKD_DIR_CD) AS SKD_DIR_CD
                        , T1.CLPT_SEQ, T2.PORT_ROTN_SEQ, T2.YD_CD, CALL_YD_IND_SEQ, TURN_PORT_FLG, TURN_PORT_IND_CD, ETB_DY_CD, ETB_DY_NO
                        , ETB_TM_HRMNT, ETD_DY_CD, ETD_DY_NO, ETD_TM_HRMNT, LNK_DIST, LNK_SPD, TZTM_HRS
                        , SEA_BUF_HRS, SEA_BUF_SPD, MNVR_IN_HRS, MNVR_OUT_HRS
                        , IB_IPCGO_QTY, IB_OCN_CGO_QTY, OB_IPCGO_QTY
                        , OB_OCN_CGO_QTY, TML_PROD_QTY, CRN_KNT, ACT_WRK_HRS, PORT_BUF_HRS, CRE_USR_ID, CRE_DT, UPD_USR_ID, UPD_DT
                FROM	(
                        -- T001 START
                        SELECT  NVL(T3.VSL_SLAN_CD    , T1.VSL_SLAN_CD  ) AS VSL_SLAN_CD
                                , NVL(T3.PF_SVC_TP_CD , T1.PF_SVC_TP_CD ) AS PF_SVC_TP_CD
                                , NVL(T3.PORT_CD      , T1.PORT_CD      ) AS PORT_CD
                                , DECODE(T3.SKD_DIR_CD, NULL, (
                                                              SELECT  S.VSL_SLAN_DIR_CD
                                                              FROM    MDM_VSL_SVC_LANE_DIR S
                                                              WHERE   1 = 1
                                                              AND     T1.VSL_SLAN_CD    = S.VSL_SLAN_CD
                                                              AND     T1.SKD_DIR_CD    != S.VSL_SLAN_DIR_CD
                                                              AND     S.DELT_FLG        = 'N'
                                                              AND     ROWNUM            = 1
                                                              ), T1.SKD_DIR_CD
                                  ) AS SKD_DIR_CD
                                , DECODE(T3.CLPT_SEQ, NULL, (
                                                            SELECT  T1.CLPT_SEQ
                                                            FROM    VSK_PF_SKD_DTL M
                                                            WHERE   1 = 1
                                                            AND     T1.VSL_SLAN_CD  = M.VSL_SLAN_CD
                                                            AND     T1.PF_SVC_TP_CD = M.PF_SVC_TP_CD
                                                            AND     T1.SKD_DIR_CD   = (
                                                                                      SELECT  S.VSL_SLAN_DIR_CD
                                                                                      FROM    MDM_VSL_SVC_LANE_DIR S
                                                                                      WHERE   1 = 1
                                                                                      AND     T1.VSL_SLAN_CD  = S.VSL_SLAN_CD
                                                                                      AND     T1.SKD_DIR_CD   = S.VSL_SLAN_DIR_CD
                                                                                      AND     S.DELT_FLG      = 'N'
                                                                                      )
                                                            AND     T1.PORT_CD      = M.PORT_CD
                                                            AND     T1.CLPT_SEQ     = M.CLPT_SEQ
                                                            AND     M.TURN_PORT_IND_CD != 'F'
                                                            ), T1.CLPT_SEQ
                                  )                                     AS CLPT_SEQ
                                , DECODE(T3.SKD_DIR_CD, NULL, 'V', 'N') AS VIRT_FLG
                                , T1.SKD_DIR_CD                         AS DIR_CD2
                        FROM    VSK_PF_CALL_PORT     T1,
                                MDM_VSL_SVC_LANE_DIR T2,
                                VSK_PF_SKD_DTL       T3,
                                (
                                SELECT  T1.SKD_DIR_CD, T1.VSL_SLAN_CD, T1.PF_SKD_TP_CD
                                FROM    TB_SRC1     T1
                                WHERE   1=1
                                GROUP BY T1.SKD_DIR_CD, T1.VSL_SLAN_CD, T1.PF_SKD_TP_CD
                                )                   T4
                        WHERE   1=1
                        AND     T1.VSL_SLAN_CD   = T4.VSL_SLAN_CD
                        AND     T1.SKD_DIR_CD    = T4.SKD_DIR_CD
                        AND     T1.PF_SVC_TP_CD  = T4.PF_SKD_TP_CD
                        AND     T1.VSL_SLAN_CD   = T2.VSL_SLAN_CD
                        AND     T1.SKD_DIR_CD    = T2.VSL_SLAN_DIR_CD
                        AND     T1.VSL_SLAN_CD   = T3.VSL_SLAN_CD       (+)
                        AND     T1.PF_SVC_TP_CD  = T3.PF_SVC_TP_CD      (+)
                        AND     T1.SKD_DIR_CD    = T3.SKD_DIR_CD        (+)
                        AND     T1.PORT_CD       = T3.PORT_CD           (+)
                        AND     T1.CLPT_SEQ      = T3.CLPT_SEQ          (+)
                        AND     'F'             != T3.TURN_PORT_IND_CD  (+)
                        -- T001 END
                        )              T1,
                        VSK_PF_SKD_DTL T2
                WHERE   1=1
                AND     T1.VSL_SLAN_CD  = T2.VSL_SLAN_CD
                AND     T1.PF_SVC_TP_CD = T2.PF_SVC_TP_CD
                AND     T1.PORT_CD      = T2.PORT_CD
                AND     T1.SKD_DIR_CD   = T2.SKD_DIR_CD
                AND     T1.CLPT_SEQ     = T2.CLPT_SEQ
                -- T002 END
                )       T2
        WHERE   1 = 1
        AND     T1.VSL_SLAN_CD  = T2.VSL_SLAN_CD  (+)
        AND     T1.PF_SKD_TP_CD = T2.PF_SVC_TP_CD (+)
        AND     T1.SKD_DIR_CD   = T2.SKD_DIR_CD   (+)
        AND     T1.VPS_PORT_CD  = T2.PORT_CD      (+)
        AND     T1.CLPT_IND_SEQ = T2.CLPT_SEQ     (+)
        )   T1
WHERE   1=1
ORDER BY T1.LVL, T1.CLPT_SEQ				]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
