/*=========================================================
*Copyright(c) 2014 CyberLogitec
*@FileName : ChangeOfDestinationMgtDBDAORehandlingQTYRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2014.09.30
*@LastModifier : 원종규
*@LastVersion : 1.0
* 2014.09.30 원종규
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.opf.changeofdestinationmgt.changeofdestinationmgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author Won, Jong-Kyu
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class ChangeOfDestinationMgtDBDAORehandlingQTYRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * CHR, CUR, Rate 를 조회한다.
	  * -------------------------------------------------------------------------------------------
	  * 2012.04.05 김민아 [CHM-201217130-01] COD application 승인 화면내 Rehnadling Q"ty를 계산한 Bayplan 정보 칼럼 추가
	  * </pre>
	  */
	public ChangeOfDestinationMgtDBDAORehandlingQTYRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("new_pod_yd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bkg_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cod_rhnd_port_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cod_rhnd_port_yd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("old_pod_yd_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cod_rqst_seq",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.opf.changeofdestinationmgt.changeofdestinationmgt.integration").append("\n"); 
		query.append("FileName : ChangeOfDestinationMgtDBDAORehandlingQTYRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH MAX_CLPT_SEQ AS" ).append("\n"); 
		query.append("(" ).append("\n"); 
		query.append("SELECT MAX(V.CLPT_SEQ) CLPT_SEQ" ).append("\n"); 
		query.append("FROM   VSK_VSL_PORT_SKD V" ).append("\n"); 
		query.append("WHERE  V.VSL_CD      = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd " ).append("\n"); 
		query.append("AND    V.SKD_VOY_NO  = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("AND    V.SKD_DIR_CD  = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("AND    V.VPS_PORT_CD IN ( SELECT DISTINCT B.PORT_CD" ).append("\n"); 
		query.append("                          FROM   VSK_VSL_PORT_SKD V, BAY_PLAN B" ).append("\n"); 
		query.append("                          WHERE  V.VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd         " ).append("\n"); 
		query.append("                          AND    V.SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                          AND    V.SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                          AND    V.CLPT_SEQ   < ( SELECT CLPT_SEQ" ).append("\n"); 
		query.append("                                                   FROM   VSK_VSL_PORT_SKD" ).append("\n"); 
		query.append("                                                   WHERE  VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                                                   AND    SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                                                   AND    SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                                                   AND    YD_CD      = @[cod_rhnd_port_yd_cd]       --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                                                   AND    ROWNUM     = 1 )" ).append("\n"); 
		query.append("                          AND    V.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                          AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                           'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO) = B.VOY_NO" ).append("\n"); 
		query.append("                          AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                           'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD) = B.DIR_CD" ).append("\n"); 
		query.append("                          AND    V.VPS_PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("                          AND    B.PLAN_TYPE   = 'F' )" ).append("\n"); 
		query.append(")                              " ).append("\n"); 
		query.append("--SELECT TPSZ, COUNT(CNTR) QTY, FM, CATE" ).append("\n"); 
		query.append("SELECT TPSZ        AS RAT_UT_CD" ).append("\n"); 
		query.append(",      COUNT(CNTR) AS RAT_AS_QTY" ).append("\n"); 
		query.append(",      FM          AS CNTR_CGO_TP_CD" ).append("\n"); 
		query.append(",      PORT        AS PORT" ).append("\n"); 
		query.append("--,      POSITION    AS POSITION" ).append("\n"); 
		query.append(",      CATE        AS CGO_CATE_CD" ).append("\n"); 
		query.append(",      @[bkg_no]   AS BKG_NO" ).append("\n"); 
		query.append(",      @[cod_rqst_seq] AS COD_RQST_SEQ" ).append("\n"); 
		query.append(",      'RLO'       AS CHG_CD" ).append("\n"); 
		query.append(",      (SELECT C.CURR_CD FROM MDM_LOCATION L,MDM_CURRENCY C WHERE L.LOC_CD=@[cod_rhnd_port_cd] AND L.CNT_CD=C.CNT_CD AND ROWNUM = 1) AS CURR_CD" ).append("\n"); 
		query.append(",      @[vvd]      AS VVD" ).append("\n"); 
		query.append(",      @[cod_rhnd_port_yd_cd] AS COD_RHND_PORT_CD" ).append("\n"); 
		query.append("FROM   ( " ).append("\n"); 
		query.append("         /* Q1 */" ).append("\n"); 
		query.append("		 SELECT DISTINCT TPSZ, CNTR, FM, PORT, POSITION, CATE" ).append("\n"); 
		query.append("         FROM   ( " ).append("\n"); 
		query.append("				  /* Q2 */ " ).append("\n"); 
		query.append("				  /* Q3 */			" ).append("\n"); 
		query.append("		          SELECT TPSZ, CNTR, FM, PORT, POSITION, CATE" ).append("\n"); 
		query.append("                  FROM   ( /* Q33 */" ).append("\n"); 
		query.append("                          SELECT /*+ LEADING(TP V B C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT" ).append("\n"); 
		query.append("                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||" ).append("\n"); 
		query.append("                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                                  C.ID                                                                   CNTR," ).append("\n"); 
		query.append("                                  C.FE                                                                   FM," ).append("\n"); 
		query.append("                                  C.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                                  C.BAY||C.ROWW||C.TIER                                                  POSITION," ).append("\n"); 
		query.append("                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S" ).append("\n"); 
		query.append("                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no" ).append("\n"); 
		query.append("                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   TP.CNTR_NO in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '4'" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("                           AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   B.ID in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = C.VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                           AND    B.PORT_CD          = C.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.CALL_IND         = C.CALL_IND" ).append("\n"); 
		query.append("                           AND    C.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           AND    B.BAY              = C.BAY" ).append("\n"); 
		query.append("                           AND    B.ROWW             = C.ROWW" ).append("\n"); 
		query.append("                           AND    B.TIER             < C.TIER" ).append("\n"); 
		query.append("                           AND    C.TIER             < '40'" ).append("\n"); 
		query.append("                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]    --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                           AND    C.VSL_CD           = S.VSL_CD" ).append("\n"); 
		query.append("                           AND    C.VOY_NO           = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    C.DIR_CD           = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD" ).append("\n"); 
		query.append("                           AND    M.CLPT_SEQ         < S.CLPT_SEQ" ).append("\n"); 
		query.append("                           /* Q33 */" ).append("\n"); 
		query.append("                           UNION ALL" ).append("\n"); 
		query.append("                           /* Q34 */ --   " ).append("\n"); 
		query.append("                           SELECT /*+ LEADING(TP V B C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT" ).append("\n"); 
		query.append("                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||" ).append("\n"); 
		query.append("                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                                  C.ID                                                                   CNTR," ).append("\n"); 
		query.append("                                  C.FE                                                                   FM," ).append("\n"); 
		query.append("                                  C.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                                  C.BAY||C.ROWW||C.TIER                                                  POSITION," ).append("\n"); 
		query.append("                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S" ).append("\n"); 
		query.append("                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no" ).append("\n"); 
		query.append("                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   TP.CNTR_NO in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '4'" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("                           AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   B.ID in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = C.VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                           AND    B.PORT_CD          = C.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.CALL_IND         = C.CALL_IND" ).append("\n"); 
		query.append("                           AND    C.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           AND    B.BAY              = C.BAY" ).append("\n"); 
		query.append("                           AND    B.TIER             < C.TIER" ).append("\n"); 
		query.append("                           AND    C.TIER             >= '40'" ).append("\n"); 
		query.append("                           AND    ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                   >= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                         FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                         WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                         AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )" ).append("\n"); 
		query.append("                           OR     DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                   >= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                         FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                         WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                         AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )" ).append("\n"); 
		query.append("                           AND    ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                     <= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW" ).append("\n"); 
		query.append("                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )" ).append("\n"); 
		query.append("                           OR     DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                     <= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW" ).append("\n"); 
		query.append("                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )" ).append("\n"); 
		query.append("                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]       --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                           AND    C.VSL_CD           = S.VSL_CD" ).append("\n"); 
		query.append("                           AND    C.VOY_NO           = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    C.DIR_CD           = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD" ).append("\n"); 
		query.append("                           AND    M.CLPT_SEQ         < S.CLPT_SEQ                            " ).append("\n"); 
		query.append("                           /* Q34 */" ).append("\n"); 
		query.append("                           UNION ALL" ).append("\n"); 
		query.append("                           SELECT /*+ LEADING(TP V B @CCC C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT " ).append("\n"); 
		query.append("                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||" ).append("\n"); 
		query.append("                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                                  C.ID                                                                   CNTR," ).append("\n"); 
		query.append("                                  C.FE                                                                   FM," ).append("\n"); 
		query.append("                                  C.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                                  C.BAY||C.ROWW||C.TIER                                                  POSITION," ).append("\n"); 
		query.append("                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S" ).append("\n"); 
		query.append("                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no" ).append("\n"); 
		query.append("                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   TP.CNTR_NO in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '4'" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("                           AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   B.ID in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = C.VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                           AND    B.PORT_CD          = C.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.CALL_IND         = C.CALL_IND" ).append("\n"); 
		query.append("                           AND    C.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           AND    C.BAY IN ( SELECT /*+ QB_NAME(CCC) index(n xak9OPF_HTCH_CVR_LODG_LIST) */" ).append("\n"); 
		query.append("                                                    DECODE(SIGN(B.TIER - 40),1,B.BAY,0,B.BAY,N.VSL_BAY_NO) VSL_BAY_NO" ).append("\n"); 
		query.append("                                             FROM   OPF_HTCH_CVR_LODG_LIST O, OPF_HTCH_CVR_LODG_LIST N" ).append("\n"); 
		query.append("                                             WHERE  O.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                             AND    O.VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                             AND    ( DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)" ).append("\n"); 
		query.append("                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )" ).append("\n"); 
		query.append("                                             OR     DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)" ).append("\n"); 
		query.append("                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )" ).append("\n"); 
		query.append("                                             AND    ( DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)" ).append("\n"); 
		query.append("                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )" ).append("\n"); 
		query.append("                                             OR     DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)" ).append("\n"); 
		query.append("                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )" ).append("\n"); 
		query.append("                                             AND    O.VSL_CD = N.VSL_CD" ).append("\n"); 
		query.append("                                             AND    O.ST_DECK_NO = N.ST_DECK_NO" ).append("\n"); 
		query.append("                                             AND    O.END_DECK_NO = N.END_DECK_NO" ).append("\n"); 
		query.append("                                             AND    O.CNN_HTCH_CVR_IDX_NO = N.CNN_HTCH_CVR_IDX_NO" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("                           AND    B.TIER            < C.TIER" ).append("\n"); 
		query.append("                           AND    C.TIER            >= '40'" ).append("\n"); 
		query.append("                           AND    ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                   >= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                         FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                         WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                         AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )" ).append("\n"); 
		query.append("                           OR     DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                   >= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                         FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                         WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                         AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )" ).append("\n"); 
		query.append("                           AND    ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                     <= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW" ).append("\n"); 
		query.append("                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )" ).append("\n"); 
		query.append("                           OR     DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                     <= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW" ).append("\n"); 
		query.append("                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )" ).append("\n"); 
		query.append("                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]        --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                           AND    C.VSL_CD           = S.VSL_CD" ).append("\n"); 
		query.append("                           AND    C.VOY_NO           = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    C.DIR_CD           = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD" ).append("\n"); 
		query.append("                           AND    M.CLPT_SEQ         < S.CLPT_SEQ " ).append("\n"); 
		query.append("                           /* Q44 */" ).append("\n"); 
		query.append("                           )" ).append("\n"); 
		query.append("                  UNION All                " ).append("\n"); 
		query.append("					/* Q4 */	" ).append("\n"); 
		query.append("                  SELECT TPSZ, CNTR, FM, PORT, POSITION, CATE" ).append("\n"); 
		query.append("                  FROM   ( " ).append("\n"); 
		query.append("                           /* Q41 */" ).append("\n"); 
		query.append("                           SELECT /*+ LEADING(TP V B @CCC C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT " ).append("\n"); 
		query.append("                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||" ).append("\n"); 
		query.append("                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                                  C.ID                                                                   CNTR," ).append("\n"); 
		query.append("                                  C.FE                                                                   FM," ).append("\n"); 
		query.append("                                  C.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                                  C.BAY||C.ROWW||C.TIER                                                  POSITION," ).append("\n"); 
		query.append("                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S" ).append("\n"); 
		query.append("                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no" ).append("\n"); 
		query.append("                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   TP.CNTR_NO in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '2'" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("                           AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   B.ID in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = C.VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                           AND    B.PORT_CD          = C.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.CALL_IND         = C.CALL_IND" ).append("\n"); 
		query.append("                           AND    C.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           AND    C.BAY IN ( SELECT /*+ QB_NAME(CCC) */" ).append("\n"); 
		query.append("                                                    DECODE(SIGN(B.TIER - 40),1,B.BAY,0,B.BAY,N.VSL_BAY_NO) VSL_BAY_NO" ).append("\n"); 
		query.append("                                             FROM   OPF_HTCH_CVR_LODG_LIST O, OPF_HTCH_CVR_LODG_LIST N" ).append("\n"); 
		query.append("                                             WHERE  O.VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                             AND    O.VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                             AND    ( DECODE(MOD(O.ST_HLD_NO,2),1,-O.ST_HLD_NO,O.ST_HLD_NO)" ).append("\n"); 
		query.append("                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))" ).append("\n"); 
		query.append("                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))" ).append("\n"); 
		query.append("                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )" ).append("\n"); 
		query.append("                                             OR     DECODE(MOD(O.ST_HLD_NO,2),1,-O.ST_HLD_NO,O.ST_HLD_NO)" ).append("\n"); 
		query.append("                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))" ).append("\n"); 
		query.append("                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))" ).append("\n"); 
		query.append("                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )" ).append("\n"); 
		query.append("                                             AND    ( DECODE(MOD(O.END_HLD_NO,2),1,-O.END_HLD_NO,O.END_HLD_NO)" ).append("\n"); 
		query.append("                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))" ).append("\n"); 
		query.append("                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))" ).append("\n"); 
		query.append("                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )" ).append("\n"); 
		query.append("                                             OR     DECODE(MOD(O.END_HLD_NO,2),1,-O.END_HLD_NO,O.END_HLD_NO)" ).append("\n"); 
		query.append("                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO),DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO))" ).append("\n"); 
		query.append("                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO) - DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_HLD_NO,2),1,-ST_HLD_NO,ST_HLD_NO),DECODE(MOD(END_HLD_NO,2),1,-END_HLD_NO,END_HLD_NO))" ).append("\n"); 
		query.append("                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )" ).append("\n"); 
		query.append("                                             AND    O.VSL_CD              = N.VSL_CD" ).append("\n"); 
		query.append("                                             AND    O.ST_HLD_NO           = N.ST_HLD_NO" ).append("\n"); 
		query.append("                                             AND    O.END_HLD_NO          = N.END_HLD_NO" ).append("\n"); 
		query.append("                                             AND    O.CNN_HTCH_CVR_IDX_NO = N.CNN_HTCH_CVR_IDX_NO" ).append("\n"); 
		query.append("                                             AND    O.VSL_BAY_NO <> N.VSL_BAY_NO" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("                           AND    B.ROWW = C.ROWW" ).append("\n"); 
		query.append("                           AND    C.TIER < '40'" ).append("\n"); 
		query.append("                           AND    C.TIER > ( SELECT /*+ index(BAY_PLAN xak1bay_plan) */ MAX(TIER)" ).append("\n"); 
		query.append("                                             FROM   BAY_PLAN" ).append("\n"); 
		query.append("                                             WHERE  VSL_CD  = B.VSL_CD" ).append("\n"); 
		query.append("                                             AND    VOY_NO  = B.VOY_NO" ).append("\n"); 
		query.append("                                             AND    DIR_CD  = B.DIR_CD" ).append("\n"); 
		query.append("                                             AND    PORT_CD = B.PORT_CD" ).append("\n"); 
		query.append("                                             AND    BAY     = B.BAY" ).append("\n"); 
		query.append("                                             AND    ROWW    = B.ROWW )" ).append("\n"); 
		query.append("                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]        --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                           AND    C.VSL_CD           = S.VSL_CD" ).append("\n"); 
		query.append("                           AND    C.VOY_NO           = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    C.DIR_CD           = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD" ).append("\n"); 
		query.append("                           AND    M.CLPT_SEQ         < S.CLPT_SEQ" ).append("\n"); 
		query.append("                           /* Q41 */" ).append("\n"); 
		query.append("                           UNION ALL" ).append("\n"); 
		query.append("                           /* Q43 */" ).append("\n"); 
		query.append("                           SELECT /*+ LEADING(TP V B C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT " ).append("\n"); 
		query.append("                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||" ).append("\n"); 
		query.append("                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                                  C.ID                                                                   CNTR," ).append("\n"); 
		query.append("                                  C.FE                                                                   FM," ).append("\n"); 
		query.append("                                  C.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                                  C.BAY||C.ROWW||C.TIER                                                  POSITION," ).append("\n"); 
		query.append("                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S" ).append("\n"); 
		query.append("                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no" ).append("\n"); 
		query.append("                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   TP.CNTR_NO in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '2'" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("                           AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   B.ID in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = C.VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                           AND    B.PORT_CD          = C.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.CALL_IND         = C.CALL_IND" ).append("\n"); 
		query.append("                           AND    C.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           AND    B.BAY              = C.BAY" ).append("\n"); 
		query.append("                           AND    B.ROWW             = C.ROWW" ).append("\n"); 
		query.append("                           AND    C.TIER             < '40'" ).append("\n"); 
		query.append("                           AND    C.TIER             > B.TIER" ).append("\n"); 
		query.append("                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]       --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                           AND    C.VSL_CD           = S.VSL_CD" ).append("\n"); 
		query.append("                           AND    C.VOY_NO           = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    C.DIR_CD           = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD" ).append("\n"); 
		query.append("                           AND    M.CLPT_SEQ         < S.CLPT_SEQ" ).append("\n"); 
		query.append("                           /* Q43 */" ).append("\n"); 
		query.append("                           UNION ALL" ).append("\n"); 
		query.append("                           /* Q44 */" ).append("\n"); 
		query.append("                           SELECT /*+ LEADING(TP V B @CCC C T M S) index(b xak1bay_plan) index(c xak1bay_plan) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ DISTINCT " ).append("\n"); 
		query.append("                                  NVL(T.CNTR_TPSZ_CD,DECODE(C.CNTR_TYPE,'N','D',C.CNTR_TYPE)||" ).append("\n"); 
		query.append("                                      DECODE(C.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                                  C.ID                                                                   CNTR," ).append("\n"); 
		query.append("                                  C.FE                                                                   FM," ).append("\n"); 
		query.append("                                  C.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                                  C.BAY||C.ROWW||C.TIER                                                  POSITION," ).append("\n"); 
		query.append("                                  DECODE(C.CARGO_TYPE,'DG','DG',DECODE(C.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                                    DECODE(C.CARGO_TYPE,'AK','AK',DECODE(C.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("                           FROM   BKG_CONTAINER TP, BAY_PLAN B, BAY_PLAN C, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                                  VSK_VSL_PORT_SKD V, VSK_VSL_PORT_SKD M, VSK_VSL_PORT_SKD S" ).append("\n"); 
		query.append("                           WHERE  TP.BKG_NO          = @[bkg_no]    --:bkg_no" ).append("\n"); 
		query.append("                           --AND    TP.CNTR_NO         IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   TP.CNTR_NO in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    DECODE(SUBSTR(TP.CNTR_TPSZ_CD,2,1),'2','2','4') = '2'" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("                           AND    V.SKD_VOY_NO       = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("                           AND    V.SKD_DIR_CD       = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("                           AND    V.CLPT_SEQ         = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )" ).append("\n"); 
		query.append("                           AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("                           AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                                            'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("                           AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("	                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("	                           AND   B.ID in ( " ).append("\n"); 
		query.append("	                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("	                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("	                         	'$key', " ).append("\n"); 
		query.append("	                         	#else " ).append("\n"); 
		query.append("	                         	'$key' " ).append("\n"); 
		query.append("	                         	#end " ).append("\n"); 
		query.append("	                         #end " ).append("\n"); 
		query.append("	                         )  " ).append("\n"); 
		query.append("	                         #end" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = C.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = C.VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = C.DIR_CD" ).append("\n"); 
		query.append("                           AND    B.PORT_CD          = C.PORT_CD" ).append("\n"); 
		query.append("                           AND    B.CALL_IND         = C.CALL_IND" ).append("\n"); 
		query.append("                           AND    C.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("                           AND    C.BAY IN ( SELECT /*+ QB_NAME(CCC) index(n xak9OPF_HTCH_CVR_LODG_LIST) */" ).append("\n"); 
		query.append("                                                    DECODE(SIGN(B.TIER - 40),1,B.BAY,0,B.BAY,N.VSL_BAY_NO) VSL_BAY_NO" ).append("\n"); 
		query.append("                                             FROM   OPF_HTCH_CVR_LODG_LIST O, OPF_HTCH_CVR_LODG_LIST N" ).append("\n"); 
		query.append("                                             WHERE  O.VSL_CD = B.VSL_CD" ).append("\n"); 
		query.append("                                             AND    O.VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                             AND    ( DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)" ).append("\n"); 
		query.append("                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )" ).append("\n"); 
		query.append("                                             OR     DECODE(MOD(O.ST_DECK_NO,2),1,-O.ST_DECK_NO,O.ST_DECK_NO)" ).append("\n"); 
		query.append("                                                     >= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )" ).append("\n"); 
		query.append("                                             AND    ( DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)" ).append("\n"); 
		query.append("                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) )" ).append("\n"); 
		query.append("                                             OR     DECODE(MOD(O.END_DECK_NO,2),1,-O.END_DECK_NO,O.END_DECK_NO)" ).append("\n"); 
		query.append("                                                     <= ( SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW) ) )" ).append("\n"); 
		query.append("                                             AND    O.VSL_CD = N.VSL_CD" ).append("\n"); 
		query.append("                                             AND    O.ST_DECK_NO = N.ST_DECK_NO" ).append("\n"); 
		query.append("                                             AND    O.END_DECK_NO = N.END_DECK_NO" ).append("\n"); 
		query.append("                                             AND    O.CNN_HTCH_CVR_IDX_NO = N.CNN_HTCH_CVR_IDX_NO" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("                           AND    B.TIER            < C.TIER" ).append("\n"); 
		query.append("                           AND    C.TIER            >= '40'" ).append("\n"); 
		query.append("                           AND    ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                   >= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                         FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                         WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                         AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )" ).append("\n"); 
		query.append("                           OR     DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                   >= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                        (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                 DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO)) FM_ROW" ).append("\n"); 
		query.append("                                         FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                         WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                         AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                         AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                  DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )" ).append("\n"); 
		query.append("                           AND    ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                     <= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW" ).append("\n"); 
		query.append("                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                 < DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                 >= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) )" ).append("\n"); 
		query.append("                           OR     DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(C.ROWW),0,TO_NUMBER(C.ROWW),DECODE(MOD(TO_NUMBER(C.ROWW),2),1,-TO_NUMBER(C.ROWW),TO_NUMBER(C.ROWW)))" ).append("\n"); 
		query.append("                                     <= ( DECODE(SIGN(B.TIER - 40),1,TO_NUMBER(B.ROWW),0,TO_NUMBER(B.ROWW)," ).append("\n"); 
		query.append("                                          (SELECT DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)) TO_ROW" ).append("\n"); 
		query.append("                                          FROM   OPF_HTCH_CVR_LODG_LIST" ).append("\n"); 
		query.append("                                          WHERE  VSL_CD     = B.VSL_CD" ).append("\n"); 
		query.append("                                          AND    VSL_BAY_NO = B.BAY" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO),DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO))" ).append("\n"); 
		query.append("                                                 <= DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW)" ).append("\n"); 
		query.append("                                          AND    DECODE(SIGN(DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO) - DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO)),1," ).append("\n"); 
		query.append("                                                   DECODE(MOD(ST_DECK_NO,2),1,-ST_DECK_NO,ST_DECK_NO),DECODE(MOD(END_DECK_NO,2),1,-END_DECK_NO,END_DECK_NO))" ).append("\n"); 
		query.append("                                                 > DECODE(MOD(B.ROWW,2),1,-B.ROWW,B.ROWW))) ) )" ).append("\n"); 
		query.append("                           AND    C.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("                           AND    B.VSL_CD           = M.VSL_CD" ).append("\n"); 
		query.append("                           AND    B.VOY_NO           = M.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    B.DIR_CD           = M.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    M.YD_CD            = @[cod_rhnd_port_yd_cd]        --:cod_rhnd_port_yd_cd" ).append("\n"); 
		query.append("                           AND    C.VSL_CD           = S.VSL_CD" ).append("\n"); 
		query.append("                           AND    C.VOY_NO           = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                           AND    C.DIR_CD           = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                           AND    NVL(C.POD_ISO,'N') = S.VPS_PORT_CD" ).append("\n"); 
		query.append("                           AND    M.CLPT_SEQ         < S.CLPT_SEQ " ).append("\n"); 
		query.append("                           /* Q44 */" ).append("\n"); 
		query.append("                           ) " ).append("\n"); 
		query.append("						   /* Q4 */" ).append("\n"); 
		query.append("         UNION ALL" ).append("\n"); 
		query.append("		 /* Q5 */" ).append("\n"); 
		query.append("         SELECT /*+ LEADING(@VVV V B O N) index(v xpkvsk_vsl_port_skd) index(m xpkvsk_vsl_port_skd) index(s xpkvsk_vsl_port_skd) */ " ).append("\n"); 
		query.append("         NVL(T.CNTR_TPSZ_CD,DECODE(B.CNTR_TYPE,'N','D',B.CNTR_TYPE)|| " ).append("\n"); 
		query.append("                    DECODE(B.CNTR_SIZE,'2','2','3','3','4','4','H','5','L','7'))       TPSZ," ).append("\n"); 
		query.append("                B.ID                                                                   CNT," ).append("\n"); 
		query.append("                B.FE                                                                   FM," ).append("\n"); 
		query.append("                B.PORT_CD                                                              PORT," ).append("\n"); 
		query.append("                B.BAY||B.ROWW||B.TIER                                                  POSITION," ).append("\n"); 
		query.append("                DECODE(B.CARGO_TYPE,'DG','DG',DECODE(B.CARGO_TYPE,'RF','RF'," ).append("\n"); 
		query.append("                  DECODE(B.CARGO_TYPE,'AK','AK',DECODE(B.CARGO_TYPE,'BB','BB','DR')))) CATE" ).append("\n"); 
		query.append("         FROM   BAY_PLAN B, VSK_VSL_PORT_SKD V, MDM_CNTR_TP_SZ T," ).append("\n"); 
		query.append("                VSK_VSL_PORT_SKD O, VSK_VSL_PORT_SKD N" ).append("\n"); 
		query.append("         WHERE  V.VSL_CD     = SUBSTR( @[vvd], 1, 4 )    --:vsl_cd    " ).append("\n"); 
		query.append("         AND    V.SKD_VOY_NO = SUBSTR( @[vvd], 5, 4 )    --:skd_voy_no" ).append("\n"); 
		query.append("         AND    V.SKD_DIR_CD = SUBSTR( @[vvd], 9, 1 )    --:skd_dir_cd" ).append("\n"); 
		query.append("         AND    V.CLPT_SEQ   = ( SELECT CLPT_SEQ FROM MAX_CLPT_SEQ )  -- RE-HANDLING PORT(OLD YARD) 이전 PORT 중에 BAYPLAN 에 있는 MAX CLPT_SEQ " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("         AND    V.VSL_CD           = B.VSL_CD" ).append("\n"); 
		query.append("         AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_VOY_NO,'V',V.TURN_SKD_VOY_NO," ).append("\n"); 
		query.append("                                          'F',V.TURN_SKD_VOY_NO,V.SKD_VOY_NO)                = B.VOY_NO" ).append("\n"); 
		query.append("         AND    DECODE(V.TURN_PORT_IND_CD,'D',V.TURN_SKD_DIR_CD,'V',V.TURN_SKD_DIR_CD," ).append("\n"); 
		query.append("                                          'F',V.TURN_SKD_DIR_CD,V.SKD_DIR_CD)                = B.DIR_CD" ).append("\n"); 
		query.append("         --AND    B.ID               IN ('HJCU2046209') --:cntr_no_list" ).append("\n"); 
		query.append("                         #if (${cntr_no} != '') " ).append("\n"); 
		query.append("                           AND   B.ID in ( " ).append("\n"); 
		query.append("                         #foreach($key IN ${cntr_no}) " ).append("\n"); 
		query.append("                         	#if($velocityCount < $cntr_no.size()) " ).append("\n"); 
		query.append("                         	'$key', " ).append("\n"); 
		query.append("                         	#else " ).append("\n"); 
		query.append("                         	'$key' " ).append("\n"); 
		query.append("                         	#end " ).append("\n"); 
		query.append("                         #end " ).append("\n"); 
		query.append("                         )  " ).append("\n"); 
		query.append("                         #end" ).append("\n"); 
		query.append("         AND    V.VPS_PORT_CD      = B.PORT_CD" ).append("\n"); 
		query.append("         AND    B.PLAN_TYPE        = 'F'" ).append("\n"); 
		query.append("         AND    B.SZTP             = T.CNTR_TPSZ_ISO_CD(+)" ).append("\n"); 
		query.append("         AND    V.VSL_CD           = O.VSL_CD" ).append("\n"); 
		query.append("         AND    V.SKD_VOY_NO       = O.SKD_VOY_NO" ).append("\n"); 
		query.append("         AND    V.SKD_DIR_CD       = O.SKD_DIR_CD" ).append("\n"); 
		query.append("         AND    O.YD_CD            = @[old_pod_yd_cd]      --:old_pod_yd_cd" ).append("\n"); 
		query.append("         AND    V.VSL_CD           = N.VSL_CD" ).append("\n"); 
		query.append("         AND    V.SKD_VOY_NO       = N.SKD_VOY_NO" ).append("\n"); 
		query.append("         AND    V.SKD_DIR_CD       = N.SKD_DIR_CD" ).append("\n"); 
		query.append("         AND    N.YD_CD            = @[new_pod_yd_cd]      --:new_pod_yd_cd" ).append("\n"); 
		query.append("         AND    O.CLPT_SEQ         < N.CLPT_SEQ " ).append("\n"); 
		query.append("		 /* Q5 */" ).append("\n"); 
		query.append("		 /* Q2 */" ).append("\n"); 
		query.append("         ) " ).append("\n"); 
		query.append("		 /* Q1 */" ).append("\n"); 
		query.append("		 ) " ).append("\n"); 
		query.append("--GROUP BY TPSZ, FM, PORT, POSITION, CATE" ).append("\n"); 
		query.append("GROUP BY TPSZ, FM, CATE, PORT" ).append("\n"); 

	}
}