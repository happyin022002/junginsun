<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAOCgoRhndPerformInputVORSQL">
			<desc><![CDATA[   2015.08.17 김기원 CHM-201537021  조직코드 변경
2016.04.28 Arie Im CHM-201641178 아프리카 대륙 구주지역본부/동서남아지역본부 구분 로직 추가]]></desc>
			<sql><![CDATA[
SELECT DECODE(C3,1,'G.Total',DECODE(C5,1,'G.Total',PORT)) AS PORT,
       LANE                                               AS LANE,
       VVD,
       DECODE(C1,1,'S.Total',DECODE(C3,1,'Total',OPR))    AS OPR,
       FL,
       MT,
       TL,
       HJS_RH_UNIT,
       OTH_RH_UNIT,
       HJS_RH_MOVE,
       OTH_RH_MOVE,
       CC_MOVE,
       CDC_MOVE,
       RH_UNIT_RATIO,
       RH_MOVE_RATIO,
       RSN_CC,
       RSN_CR,
       RSN_IC,
       RSN_ID,
       RSN_IF,
       RSN_IG,
       RSN_IH,
       RSN_IL,
       RSN_IO,
       RSN_IP,
       RSN_IR,
       RSN_IS,
       RSN_IT,
       RSN_IW,
       RSN_IX,
       RSN_XX
FROM   ( SELECT B.PORT PORT,
                B.LANE LANE,
                B.VVD  VVD,
                B.OPR  OPR,
                GROUPING(B.PORT) P, GROUPING(B.LANE) L, GROUPING(B.VVD) V, GROUPING(B.OPR) O,
                CASE
                WHEN GROUPING(B.PORT)=0 AND GROUPING(B.LANE)=0 AND GROUPING(B.VVD)=0 AND GROUPING(B.OPR)=1 THEN 1
                ELSE 0
                END C1,
                CASE
                WHEN GROUPING(B.PORT)=1 AND GROUPING(B.LANE)=1 AND GROUPING(B.VVD)=1 AND GROUPING(B.OPR)=1 THEN 1
                ELSE 0
                END C3,
                CASE
                WHEN GROUPING(B.PORT)=0 AND GROUPING(B.LANE)=0 AND GROUPING(B.VVD)=0 AND GROUPING(B.OPR)=0 THEN 1
                ELSE 0
                END C4,
                CASE
                WHEN GROUPING(B.PORT)=1 AND GROUPING(B.LANE)=1 AND GROUPING(B.VVD)=1 AND GROUPING(B.OPR)=0 THEN 1
                ELSE 0
                END C5,
                SUM(NVL(A.FL,0))                FL,
                SUM(NVL(A.MT,0))                MT,
                SUM(NVL(A.TL,0))                TL,
                SUM(NVL(B.HBMVS+B.HQMVS,0))     HJS_RH_UNIT,
                SUM(NVL(B.OBMVS+B.OQMVS,0))     OTH_RH_UNIT,
                SUM(NVL(B.HBMVS+(B.HQMVS*2),0)) HJS_RH_MOVE,
                SUM(NVL(B.OBMVS+(B.OQMVS*2),0)) OTH_RH_MOVE,
                SUM(NVL(B.HBMVS+B.OBMVS,0))     CC_MOVE,
                SUM(NVL((B.HQMVS+B.OQMVS*2),0)) CDC_MOVE,
                SUM(NVL(ROUND((B.HBMVS+B.HQMVS+B.OBMVS+B.OQMVS)/A.TL,4),0)) * 100             RH_UNIT_RATIO,
                SUM(NVL(ROUND(((B.HBMVS+(B.HQMVS*2))+(B.OBMVS+(B.OQMVS*2)))/A.TL,4),0)) *100  RH_MOVE_RATIO,
                SUM(NVL(RSN_CC,0)) RSN_CC,
                SUM(NVL(RSN_CR,0)) RSN_CR,
                SUM(NVL(RSN_IC,0)) RSN_IC,
                SUM(NVL(RSN_ID,0)) RSN_ID,
                SUM(NVL(RSN_IF,0)) RSN_IF,
                SUM(NVL(RSN_IG,0)) RSN_IG,
                SUM(NVL(RSN_IH,0)) RSN_IH,
                SUM(NVL(RSN_IL,0)) RSN_IL,
                SUM(NVL(RSN_IO,0)) RSN_IO,
                SUM(NVL(RSN_IP,0)) RSN_IP,
                SUM(NVL(RSN_IR,0)) RSN_IR,
                SUM(NVL(RSN_IS,0)) RSN_IS,
                SUM(NVL(RSN_IT,0)) RSN_IT,
                SUM(NVL(RSN_IW,0)) RSN_IW,
                SUM(NVL(RSN_IX,0)) RSN_IX,
                SUM(NVL(RSN_XX,0)) RSN_XX
         FROM   ( SELECT S.PORT_CD                    PORT,
                         V.LANE                       LANE,
                         S.VSL_CD||S.VOY_NO||S.DIR_CD VVD,
                         S.OPR_CD                     OPR,
                         SUM(DECODE(S.CNTR_TYPE,'E',0,QTY)) FL,
                         SUM(DECODE(S.CNTR_TYPE,'E',QTY,0)) MT,
                         SUM(DECODE(S.CNTR_TYPE,'E',0,QTY)) + SUM(DECODE(S.CNTR_TYPE,'E',QTY,0)) TL
                  FROM   TDR_SUMMARY S,
                         ( SELECT   A.VSL_CD          VSL, 
                                    A.SKD_VOY_NO      VOY, 
                                    A.SKD_DIR_CD      DIR, 
                                    A.VPS_PORT_CD     LOC, 
                                    A.CLPT_IND_SEQ    CAL, 
                                    A.SLAN_CD         LANE 
                           FROM     VSK_VSL_PORT_SKD A, VSK_ACT_PORT_SKD B  
                           WHERE    A.VSL_CD          = B.VSL_CD 
                           AND      A.SKD_VOY_NO      = B.SKD_VOY_NO 
                           AND      A.SKD_DIR_CD      = B.SKD_DIR_CD 
                           AND      A.VPS_PORT_CD     = B.VPS_PORT_CD 
                           AND      A.CLPT_IND_SEQ    = B.CLPT_IND_SEQ
#if (${slan_cd} != '')
                           AND      A.SLAN_CD         LIKE @[slan_cd]||'%'                                          --:lane_cd
#end                           
                           AND      B.PORT_SKD_STS_CD = 'D'
                           AND      B.ACT_DEP_DT      BETWEEN TO_DATE(REPLACE(@[from_date],'-',''),'YYYYMMDD')              --:fm_dt
                                                      AND     TO_DATE(REPLACE(@[to_date],'-',''),'YYYYMMDD') + 0.99999      --:to_dt
#if (${yd_cd} == 'All')
                           AND      A.YD_CD           LIKE @[loc_cd]||'%' 
#else
                           AND      A.YD_CD           LIKE @[loc_cd]||@[yd_cd]||'%' 
#end
                          ) V
                  WHERE  S.VSL_CD   = V.VSL 
                  AND    S.VOY_NO   = V.VOY 
                  AND    S.DIR_CD   = V.DIR 
                  AND    S.PORT_CD  = V.LOC 
                  AND    S.CALL_IND = V.CAL
                  GROUP BY S.PORT_CD, V.LANE, S.VSL_CD||S.VOY_NO||S.DIR_CD, S.OPR_CD ) A,
                ( SELECT C.PORT_CD                    PORT,
                         V.LANE                       LANE,
                         C.VSL_CD||C.VOY_NO||C.DIR_CD VVD,
                         C.OPR_CD                     OPR,
                         SUM(DECODE(C.ACCOUNT,'SML',DECODE(C.SHIFT_TYPE,'B',1,0),0)) HBMVS,
                         SUM(DECODE(C.ACCOUNT,'SML',0,DECODE(C.SHIFT_TYPE,'B',1,0))) OBMVS,
                         SUM(DECODE(C.ACCOUNT,'SML',DECODE(C.SHIFT_TYPE,'Q',1,0),0)) HQMVS,
                         SUM(DECODE(C.ACCOUNT,'SML',0,DECODE(C.SHIFT_TYPE,'Q',1,0))) OQMVS
                  FROM   TDR_CNTR_DETAIL C,
                         ( SELECT   A.VSL_CD          VSL, 
                                    A.SKD_VOY_NO      VOY, 
                                    A.SKD_DIR_CD      DIR, 
                                    A.VPS_PORT_CD     LOC, 
                                    A.CLPT_IND_SEQ    CAL, 
                                    A.SLAN_CD         LANE 
                           FROM     VSK_VSL_PORT_SKD A, VSK_ACT_PORT_SKD B  
                           WHERE    A.VSL_CD          = B.VSL_CD 
                           AND      A.SKD_VOY_NO      = B.SKD_VOY_NO 
                           AND      A.SKD_DIR_CD      = B.SKD_DIR_CD 
                           AND      A.VPS_PORT_CD     = B.VPS_PORT_CD 
                           AND      A.CLPT_IND_SEQ    = B.CLPT_IND_SEQ
#if (${slan_cd} != '')
                           AND      A.SLAN_CD         LIKE @[slan_cd]||'%'                                          --:lane_cd
#end                           
                           AND      B.PORT_SKD_STS_CD = 'D'
                           AND      B.ACT_DEP_DT      BETWEEN TO_DATE(REPLACE(@[from_date],'-',''),'YYYYMMDD')              --:fm_dt
                                                      AND     TO_DATE(REPLACE(@[to_date],'-',''),'YYYYMMDD') + 0.99999      --:to_dt
#if (${yd_cd} == 'All')
                           AND      A.YD_CD           LIKE @[loc_cd]||'%' 
#else
                           AND      A.YD_CD           LIKE @[loc_cd]||@[yd_cd]||'%' 
#end
                         ) V  
                  WHERE  C.VSL_CD   = V.VSL 
                  AND    C.VOY_NO   = V.VOY 
                  AND    C.DIR_CD   = V.DIR 
                  AND    C.PORT_CD  = V.LOC 
                  AND    C.CALL_IND = V.CAL
                  AND    TRIM(C.PRECELL) IS NOT NULL
				  AND    C.STATUS         = 'ST'
                  GROUP BY C.PORT_CD, V.LANE, C.VSL_CD||C.VOY_NO||C.DIR_CD, C.OPR_CD ) B,
                ( SELECT C.PORT_CD                    PORT,
                         V.LANE                       LANE,
                         C.VSL_CD||C.VOY_NO||C.DIR_CD VVD,
                         C.OPR_CD                     OPR,
                         SUM(DECODE(C.SHIFT_RSN,'CC',1,0)) RSN_CC,
                         SUM(DECODE(C.SHIFT_RSN,'CR',1,0)) RSN_CR,
                         SUM(DECODE(C.SHIFT_RSN,'IC',1,0)) RSN_IC,
                         SUM(DECODE(C.SHIFT_RSN,'ID',1,0)) RSN_ID,
                         SUM(DECODE(C.SHIFT_RSN,'IF',1,0)) RSN_IF,
                         SUM(DECODE(C.SHIFT_RSN,'IG',1,0)) RSN_IG,
                         SUM(DECODE(C.SHIFT_RSN,'IH',1,0)) RSN_IH,
                         SUM(DECODE(C.SHIFT_RSN,'IL',1,0)) RSN_IL,
                         SUM(DECODE(C.SHIFT_RSN,'IO',1,0)) RSN_IO,
                         SUM(DECODE(C.SHIFT_RSN,'IP',1,0)) RSN_IP,
                         SUM(DECODE(C.SHIFT_RSN,'IR',1,0)) RSN_IR,
                         SUM(DECODE(C.SHIFT_RSN,'IS',1,0)) RSN_IS,
                         SUM(DECODE(C.SHIFT_RSN,'IT',1,0)) RSN_IT,
                         SUM(DECODE(C.SHIFT_RSN,'IW',1,0)) RSN_IW,
                         SUM(DECODE(C.SHIFT_RSN,'IX',1,0)) RSN_IX,
                         SUM(DECODE(C.SHIFT_RSN,'XX',1,0)) RSN_XX
                  FROM   TDR_CNTR_DETAIL C,
                         ( SELECT   A.VSL_CD          VSL, 
                                    A.SKD_VOY_NO      VOY, 
                                    A.SKD_DIR_CD      DIR, 
                                    A.VPS_PORT_CD     LOC, 
                                    A.CLPT_IND_SEQ    CAL, 
                                    A.SLAN_CD         LANE 
                           FROM     VSK_VSL_PORT_SKD A, VSK_ACT_PORT_SKD B  
                           WHERE    A.VSL_CD          = B.VSL_CD 
                           AND      A.SKD_VOY_NO      = B.SKD_VOY_NO 
                           AND      A.SKD_DIR_CD      = B.SKD_DIR_CD 
                           AND      A.VPS_PORT_CD     = B.VPS_PORT_CD 
                           AND      A.CLPT_IND_SEQ    = B.CLPT_IND_SEQ
                           AND      B.PORT_SKD_STS_CD = 'D'
                           AND      B.ACT_DEP_DT      BETWEEN TO_DATE(REPLACE(@[from_date],'-',''),'YYYYMMDD')              --:fm_dt
                                                      AND     TO_DATE(REPLACE(@[to_date],'-',''),'YYYYMMDD') + 0.99999      --:to_dt
#if (${yd_cd} == 'All')
                           AND      A.YD_CD           LIKE @[loc_cd]||'%' 
#else
                           AND      A.YD_CD           LIKE @[loc_cd]||@[yd_cd]||'%' 
#end
                         ) V
                  WHERE  C.VSL_CD   = V.VSL 
                  AND    C.VOY_NO   = V.VOY 
                  AND    C.DIR_CD   = V.DIR 
                  AND    C.PORT_CD  = V.LOC 
                  AND    C.CALL_IND = V.CAL
                  AND    TRIM(C.PRECELL) IS NOT NULL
				  AND    C.STATUS         = 'ST'
                  GROUP BY C.PORT_CD, V.LANE, C.VSL_CD||C.VOY_NO||C.DIR_CD, C.OPR_CD ) C,
                ( SELECT  LOC_CD
                  FROM      ( 
--                            SELECT LOC_CD, 'HAMRU' POR_RHQ
--                            FROM   MDM_LOCATION
--                            WHERE  DECODE(CONTI_CD, 'F', 'E', CONTI_CD) = 'E'
--                            AND    NVL(DELT_FLG, 'N') = 'N'
--                            AND    CALL_PORT_FLG = 'Y'
--                            AND    LOC_CD NOT IN ('EGAIS','ZADUR','RUVVO')
--                            UNION ALL
--                            SELECT LOC_CD, 'NYCRA' POR_RHQ
--                            FROM   MDM_LOCATION
--                            WHERE  CONTI_CD  = 'M'
--                            AND    NVL(DELT_FLG, 'N') = 'N'
--                            AND    CALL_PORT_FLG = 'Y'
--                            UNION ALL
--                            SELECT LOC_CD, DECODE(SCONTI_CD, 'AF', DECODE(CNT_CD,'KR','SELIB','JP','TYOIB','SHARC'), 'SINRS') POR_RHQ
--                            FROM   MDM_LOCATION
--                            WHERE  (CONTI_CD  = 'A' OR LOC_CD = 'EGAIS' OR LOC_CD = 'ZADUR')
--                            AND    NVL(DELT_FLG, 'N') = 'N'
--                            AND    CALL_PORT_FLG = 'Y'
--							UNION ALL
--							SELECT LOC_CD, 'VVOIA' POR_RHQ
--                            FROM   MDM_LOCATION
--                            WHERE  CONTI_CD = 'E'
--                            AND    NVL(DELT_FLG, 'N') = 'N'
--                            AND    CALL_PORT_FLG = 'Y'
--                            AND    LOC_CD = 'RUVVO'
                            SELECT L.LOC_CD, O.OFC_N3RD_LVL_CD POR_RHQ FROM MDM_LOCATION L, MAS_OFC_LVL O WHERE L.EQ_CTRL_OFC_CD = O.OFC_CD AND L.CALL_PORT_FLG = 'Y' AND L.DELT_FLG = 'N' AND O.OFC_APLY_TO_YRMON ='999912' AND O.OFC_LVL < 9 
                            ) 
                  WHERE   POR_RHQ = DECODE(SUBSTR(@[rhq], 1, 3), 'ALL', POR_RHQ, @[rhq] ) ) R,             --:rhq_cd
                MDM_VSL_SVC_LANE T
         WHERE A.PORT(+)     = B.PORT
         AND   A.LANE(+)     = B.LANE
         AND   A.VVD(+)      = B.VVD
         AND   A.OPR(+)      = B.OPR
         AND   B.PORT     = C.PORT
         AND   B.LANE     = C.LANE
         AND   B.VVD      = C.VVD
         AND   B.OPR      = C.OPR
         AND   B.PORT     = R.LOC_CD
         AND   B.LANE     = T.VSL_SLAN_CD(+)
         AND   T.DELT_FLG = 'N'
         GROUP BY CUBE( B.PORT, B.LANE, B.VVD, B.OPR) )
WHERE (C1 = 1 OR C3 = 1 OR C4 = 1 OR C5 = 1)
ORDER BY DECODE(C3,1,'ZZZZZ',DECODE(C5,1,'YYYYY',PORT)), LANE, VVD, DECODE(C1,1,'ZZZZ',DECODE(C3,1,'YYYY',OPR))			]]></sql>
			<params>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="from_date" type="12" value="" out="N"/>
				<param name="to_date" type="12" value="" out="N"/>
				<param name="loc_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="rhq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
