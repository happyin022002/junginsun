<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BudgetPortChargeMgtDBDAOinsertGlEstmIfErpCSQL">
			<desc><![CDATA[추정 데이타를 GlEstmIfErp 테이블에  Insert 한다.

* 2010.08.04
추정실적 산출시 진행항차에서 대하여 아래의 조건으로 Tariff Cost 산출
1) Carrier Code(Actual/MDM)가 HJS인 VVD만 생성
2) "PV"인 VVD만 진행 항차로 산출함

[CHM-201005568-01]
운하 통항비(511911)- Actual invocie값이 입력되더라도
Estimate 금액에 일치시키지 말고 Estimate 금액을 유지

[CHM-201114431-01]
1. 511911 Actual Invoice amount 입력시 estmate로 사용하고 accural 0으로 처리함
2. 511911 Actual Invoice amount 미입력시 estimate는 Tariff Cost로 사용하고 accoural에 tariff Cost 비용을 입력함.]]></desc>
			<sql><![CDATA[
INSERT INTO GL_ESTM_IF_ERP 
            ( EXE_YRMON, 
            SYS_SRC_ID, 
            REV_YRMON, 
            ACCT_CD,
            ESTM_SEQ_NO,
            BIZ_UT_ID,
            LOC_CD,
            VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD,
            ESTM_VVD_TP_CD,          -- 'RV'
            ESTM_IOC_DIV_CD,         -- 'OO'
            ESTM_BC_DIV_CD,          -- 'C'
            ESTM_VVD_HDR_ID,         -- 106405
            TTL_TRF_AMT,
            ESTM_AMT,
            ACT_AMT,
            ACCL_AMT,
            CRE_USR_ID ,
            CRE_DT,
            UPD_USR_ID,
            UPD_DT
            )
    SELECT 
        EXE_YRMON 
        ,SYS_SRC_ID
        ,REV_YRMON
        --,T2.ACCT_CD
        ,ACCT_CD
        ,ROWNUM+(SELECT /*+INDEX_DESC(X XPKGL_ESTM_IF_ERP)*/ 
                   NVL(MAX(X.ESTM_SEQ_NO),0) 
                   FROM GL_ESTM_IF_ERP X 
                   WHERE X.EXE_YRMON = T1.EXE_YRMON 
                   AND X.SYS_SRC_ID = T1.SYS_SRC_ID
                   AND X.REV_YRMON = T1.REV_YRMON
                   AND X.ACCT_CD = T1.ACCT_CD
                   AND X.ESTM_SEQ_NO >= 0
                   AND ROWNUM <= 1  ) AS    ESTM_SEQ_NO
        ,'CNTR'
        ,LOC_CD
        ,VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD
        ,ESTM_VVD_TP_CD
        ,ESTM_IOC_DIV_CD
        ,ESTM_BC_DIV_CD
        ,ESTM_VVD_HDR_ID
        ,EST_AMT AS TTL_TRF_AMT
        
		,NVL(EST_AMT, 0) AS ESTM_AMT
        ,NVL(INV_AMT, 0) AS ACT_AMT
        ,NVL(EST_AMT, 0) - NVL(INV_AMT,0) AS ACCL_AMT
        ,@[cre_usr_id]
        ,SYSDATE
        ,@[upd_usr_id]
        ,SYSDATE            
        FROM 
        (
            SELECT  V.EXE_YRMON  AS EXE_YRMON
            ,'PSO' AS SYS_SRC_ID
            , V.ESTM_IOC_DIV_CD
            , V.REV_YRMON
            , SUBSTR(NVL(E.YD_CD,C.YD_CD),1,5) AS LOC_CD
            , V.VSL_CD,V.SKD_VOY_NO,V.SKD_DIR_CD,V.REV_DIR_CD
            , V.ESTM_VVD_TP_CD
            ,V.ESTM_VVD_HDR_ID
            , V.ESTM_BC_DIV_CD
            ,T1.ACCT_CD
            ,(CASE 
		             WHEN MONTHS_BETWEEN(TO_DATE(V.EXE_YRMON, 'YYYYMM'), TO_DATE(V.REV_YRMON, 'YYYYMM')) >= 5 THEN
		                  NVL(SUM(INV_AMT), 0)        ----------- 수행월(EXE_YRMON) 5개월 이전 Accural에 대해서는 0 처리함.([CHM-201005568-01)]
--		             WHEN ACCT_CD = '511911' THEN 
--		         	      	(CASE
--		                		-------- Accrual이 10만불 이하인 경우에는 Estimated Amount는 Actual Amount로 봄  [#Add 2010.09.07 by sj]
--		                		WHEN NVL(SUM(E.INV_USD_AMT), 0) - NVL(SUM(INV_AMT), 0) <= 100000 THEN
--		                			DECODE(NVL(SUM(INV_AMT), 0), 0
--        		                             , NVL(SUM(E.INV_USD_AMT), 0)
--        		                             , NVL(SUM(INV_AMT), 0))
--		                		-------- Accrual이 10만불 초과인 경우에는 Estimated Amount 유지  [#Add 2010.09.07 by sj]
--		                		ELSE
--									-- 전도금이 있으면, 해당 금액을 Estimated Amount로 보고,
--									-- 전도금이 없으면, Tariff Cost를 Estimated Amount로 본다.
--		                		    DECODE(NVL(MAX(ADV_AMT), 0), 0, NVL(SUM(E.INV_LOCL_AMT), 0), NVL(MAX(ADV_AMT), 0))        ----------- 운하통항비(511911)의 경우에는 Estimated Amount를 유지함.([CHM-201005568-01)]
--		                     END)
		             ELSE 
		                   DECODE(NVL(SUM(INV_AMT), 0), 0
		                             , NVL(SUM(E.INV_USD_AMT), 0)
		                             , NVL(SUM(INV_AMT), 0))
		     END) EST_AMT 
			--SUM(E.INV_LOCL_AMT) AS EST_AMT
            ,SUM(INV_AMT) AS INV_AMT
            FROM    -- Target VVD
                    (
                    SELECT  ESTM_IOC_DIV_CD AS ESTM_IOC_DIV_CD, EXE_YRMON, REV_YRMON, VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD
                    , ESTM_VVD_TP_CD, ESTM_VVD_HDR_ID, ESTM_BC_DIV_CD, RLANE_CD
                    FROM    GL_ESTM_REV_VVD G
                    WHERE   ESTM_IOC_DIV_CD =   'OO'
                    AND     EXE_YRMON  =   (SELECT MAX(X.EXPN_YRMON)
							                FROM PSO_TGT_VVD X
                							WHERE X.PSO_BZTP_CD = '2' )
                    AND     ESTM_BC_DIV_CD  IN  ('C', 'M')
                    UNION   ALL
                    SELECT  ESTM_IOC_DIV_CD , EXE_YRMON
                    , REV_YRMON, VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD
                    , ESTM_VVD_TP_CD, ESTM_VVD_HDR_ID, ESTM_BC_DIV_CD, RLANE_CD
                    FROM    GL_ESTM_REV_VVD
                    WHERE   ESTM_IOC_DIV_CD <>  'OO'
                    AND     ( VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD ) NOT IN
                                            (   SELECT  VSL_CD,SKD_VOY_NO,SKD_DIR_CD,REV_DIR_CD
                                                FROM    GL_ESTM_REV_VVD
                                                WHERE   ESTM_IOC_DIV_CD =   'OO'
                                                AND     EXE_YRMON  =   (SELECT MAX(X.EXPN_YRMON)
							                							FROM PSO_TGT_VVD X
                														WHERE X.PSO_BZTP_CD = '2' )
                                            )
                     AND     EXE_YRMON  =   (SELECT MAX(X.EXPN_YRMON)
							                FROM PSO_TGT_VVD X
                							WHERE X.PSO_BZTP_CD = '2' )
                    AND      ESTM_BC_DIV_CD      IN  ('C', 'M')
		            
	           		AND     ( ESTM_VVD_TP_CD  <> 'PV'  
		            	 	  OR
		            	 	  -- 진행항차의 경우에는 RLANE의 4번째 자리가 'I'인 경우에는 Internal만 있는 경우 포함, 그 외에는 제외 [#Mod 2010.09.07 by sj]
		            	 	  (ESTM_VVD_TP_CD  = 'PV' AND 'I' = SUBSTR(RLANE_CD, 4, 1) ))
                    )  V   
              ,
              PSO_TGT_YD_EXPN E
              ,(
              SELECT VSL_CD
                   ,SKD_VOY_NO
                   ,SKD_DIR_CD
                   ,RLANE_CD
                   ,YD_CD
                   ,LGS_COST_CD
                   ,SUM(INV_AMT) INV_AMT
                FROM ( 
                        SELECT C2.VSL_CD
                                -- TURN / VIRTUAL 항차 구분 - 사용자가 IO 입력하지 않은 경우에는 시스템에서 자동으로 배분하므로,
                                -- 사용자가 IO 입력하지 않은 경우에는 INVOICE의 데이터를 이용.
                                -- 그 외에는 SKD의 TURN_VOY_NO 사용
                               ,(CASE 
                                    WHEN CNT = 0 OR C2.DP_IO_BND_CD IS NULL THEN
                                        C2.SKD_VOY_NO
                                    ELSE
                                        NVL(V.TURN_SKD_VOY_NO, C2.SKD_VOY_NO)
                                END) SKD_VOY_NO
                               ,(CASE 
                                    WHEN CNT = 0 OR C2.DP_IO_BND_CD IS NULL THEN
                                        C2.SKD_DIR_CD
                                    ELSE
                                        NVL(V.TURN_SKD_DIR_CD, C2.SKD_DIR_CD)
                                END) SKD_DIR_CD
                                ,(CASE 
                                    WHEN CNT = 0 OR C2.DP_IO_BND_CD IS NULL THEN
                                        C2.RLANE_CD
                                    ELSE
                                        NVL(PSO_GET_REV_LANE_FNC(V.VSL_CD, V.TURN_SKD_VOY_NO, V.TURN_SKD_DIR_CD, SUBSTR (C1.YD_CD, 1, 5)), C2.RLANE_CD)
                                END) RLANE_CD
                                , C1.YD_CD, C2.LGS_COST_CD, ROUND( (C2.LOCL_AMT / X1.USD_LOCL_XCH_RT) * 0.5, 2) INV_AMT
                     
                       FROM  PSO_CHARGE C1, PSO_CHG_DTL C2, GL_MON_XCH_RT   X1
                           ,VSK_VSL_PORT_SKD V
                           ,(SELECT CPY_NO CNT FROM COM_CPY_NO WHERE CPY_NO <= 1)
                       WHERE C1.ISS_CTY_CD   = C2.ISS_CTY_CD
                       AND   C1.SO_SEQ        = C2.SO_SEQ 
                       AND   EXISTS (select 'X' FROM AP_PAY_INV I1
                                                WHERE I1.INV_STS_CD IN ( 'P','D')
                                                and I1.INV_SUB_SYS_CD = 'PSO'
                                                and I1.INV_RGST_NO = C1.INV_RGST_NO
                                     )
                       AND   EXISTS ( SELECT 'X'  FROM GL_ESTM_REV_VVD
                                      WHERE     EXE_YRMON  =   (SELECT MAX(X.EXPN_YRMON)
					                							FROM PSO_TGT_VVD X
        														WHERE X.PSO_BZTP_CD = '2' )
                                      AND     VSL_CD = C2.VSL_CD
                                      AND     SKD_VOY_NO = C2.SKD_VOY_NO
                                      AND     SKD_DIR_CD = C2.SKD_DIR_CD   
                                     ) 
                       AND    C1.CURR_CD = X1.CURR_CD
                       AND    X1.ACCT_XCH_RT_LVL = 3
                       AND    X1.ACCT_XCH_RT_YRMON =	(SELECT  MAX(EXPN_YRMON)
                                          				   FROM  PSO_TGT_VVD
                                          				  WHERE  PSO_BZTP_CD = '2') 
                                          				  
                        AND C2.VSL_CD = V.VSL_CD(+) AND C2.SKD_VOY_NO = V.SKD_VOY_NO(+) AND C2.SKD_DIR_CD = V.SKD_DIR_CD(+) AND C1.YD_CD = NVL(V.YD_CD, C1.YD_CD)
                        AND NVL(V.CLPT_SEQ, 1) = NVL((SELECT MIN(CLPT_SEQ) FROM VSK_VSL_PORT_SKD
                                                        WHERE VSL_CD = V.VSL_CD AND SKD_VOY_NO = V.SKD_VOY_NO 
                                                        AND SKD_DIR_CD = V.SKD_DIR_CD AND YD_CD = V.YD_CD
                                                        AND 'S' <> NVL(SKD_CNG_STS_CD, ' ')), 1)    
                     )
                              
               GROUP BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, RLANE_CD,YD_CD, LGS_COST_CD
              )  C -- Actual Amount 
              , TES_LGS_COST T1 
              , 
              (SELECT @[vsl_cd] VSL_CD, @[skd_voy_no] SKD_VOY_NO, @[skd_dir_cd] SKD_DIR_CD, 
                    ROUND(TTL_LOCL_AMT / USD_LOCL_XCH_RT, 2) ADV_AMT
               FROM PSO_CHARGE A, GL_MON_XCH_RT   X1
              WHERE INV_NO LIKE '%-'||@[vsl_cd]||@[skd_voy_no]||@[skd_dir_cd]||'%-ADV-%' 
               AND    A.CURR_CD = X1.CURR_CD
               AND    X1.ACCT_XCH_RT_LVL = 3
               AND    X1.ACCT_XCH_RT_YRMON =	(SELECT  MAX(EXPN_YRMON)
                                  				   FROM  PSO_TGT_VVD
                                  				  WHERE  PSO_BZTP_CD = '2')   
			   ) ADV -- 전도금 내역 조회
            WHERE   PSO_BZTP_CD(+) = 2
            AND     V.VSL_CD        = E.VSL_CD(+)
            AND     V.SKD_VOY_NO    = E.SKD_VOY_NO(+)
            AND     V.SKD_DIR_CD    = E.SKD_DIR_CD(+)
            AND     V.RLANE_CD    = E.RLANE_CD(+)
            AND     V.VSL_CD        = C.VSL_CD(+)
            AND     V.SKD_VOY_NO    = C.SKD_VOY_NO(+)
            AND     V.SKD_DIR_CD    = C.SKD_DIR_CD(+)
            AND     V.RLANE_CD    = C.RLANE_CD(+)
            AND     V.VSL_CD        = ADV.VSL_CD(+)
            AND     V.SKD_VOY_NO    = ADV.SKD_VOY_NO(+)
            AND     V.SKD_DIR_CD    = ADV.SKD_DIR_CD(+)
            AND    NVL(C.LGS_COST_CD,E.LGS_COST_CD)  = T1.LGS_COST_CD
            AND  ( E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD, E.YD_CD )
                  IN ( select VSL_CD, SKD_VOY_NO, SKD_DIR_CD, YD_CD
                       from vsk_vsl_port_skd
                       where VSL_CD = @[vsl_cd]--'HNBW'
                       AND SKD_VOY_NO = @[skd_voy_no]--'0012' 
                       AND SKD_DIR_CD = @[skd_dir_cd]--'W'
                       AND VPS_PORT_CD = SUBSTR(@[yd_cd]/*'AUMELY1'*/, 1, 5)
                      )    
            GROUP BY V.ESTM_IOC_DIV_CD, V.EXE_YRMON, V.REV_YRMON, V.VSL_CD,V.SKD_VOY_NO,V.SKD_DIR_CD,V.REV_DIR_CD,NVL(E.YD_CD,C.YD_CD), V.ESTM_VVD_TP_CD
            ,V.ESTM_VVD_HDR_ID, V.ESTM_BC_DIV_CD, V.RLANE_CD, T1.ACCT_CD 
      ) T1			]]></sql>
			<params>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
