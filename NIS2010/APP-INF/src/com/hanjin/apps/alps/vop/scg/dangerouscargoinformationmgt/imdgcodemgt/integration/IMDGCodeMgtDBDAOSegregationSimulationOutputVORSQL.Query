<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="IMDGCodeMgtDBDAOSegregationSimulationOutputVORSQL">
			<desc><![CDATA[Segregation Simulation in a CNTR 화면의 Segregation Validation 목록을 조회한다.]]></desc>
			<sql><![CDATA[
WITH UN_NO_TBL AS (
     SELECT T.SORT_NO
          , T.IMDG_UN_NO
          , T.IMDG_UN_NO_SEQ
          , DECODE(NVL(UN.SEGR_AS_FOR_IMDG_CLSS_CD,''),'',T.IMDG_CLSS_CD,UN.SEGR_AS_FOR_IMDG_CLSS_CD) IMDG_CLSS_CD
		  ,	NVL(UN.IMDG_UN_NO_HLD_FLG,'N') IMDG_UN_NO_HLD_FLG
          , UN.IMDG_COMP_GRP_CD  
          , CASE WHEN T.LQ_CHK = '1' THEN
                                          CASE WHEN NVL(UN.IMDG_LMT_QTY,0) = 0 THEN 'LY'
                                               ELSE 'LX'
                                          END
                 WHEN T.EQ_CHK = '1' THEN
                                          CASE WHEN NVL(UN.IMDG_EXPT_QTY_CD,'E0') = 'E0' THEN 'EY'
                                               ELSE 'LX'
                                          END
                 ELSE 'N'
            END AS LEQ_CHK  
          , UN.IMDG_TBL_NO
       FROM (
#foreach(${obj} in ${opt_obj})
             SELECT $velocityCount          AS SORT_NO
                  , '$obj.getImdgUnNo()'    AS IMDG_UN_NO
                  , '$obj.getImdgUnNoSeq()' AS IMDG_UN_NO_SEQ
                  , '$obj.getImdgClssCd()'  AS IMDG_CLSS_CD
                  , '$obj.getLqChk()'       AS LQ_CHK
                  , '$obj.getEqChk()'       AS EQ_CHK
               FROM DUAL
     #if($velocityCount < ${obj_size})
             UNION ALL
     #end
#end
           ) T, SCG_IMDG_UN_NO UN
      WHERE T.IMDG_UN_NO     = UN.IMDG_UN_NO
        AND T.IMDG_UN_NO_SEQ = UN.IMDG_UN_NO_SEQ
),
UN_NO_SEGR_TBL AS (
     SELECT B.SORT_NO                           AS SORT_NO
          , B.IMDG_UN_NO                        AS IMDG_UN_NO
          , B.IMDG_UN_NO_SEQ                    AS IMDG_UN_NO_SEQ
          , B.IMDG_CLSS_CD                      AS IMDG_CLSS_CD1
          , C.IMDG_CLSS_CD                      AS IMDG_CLSS_CD2
          , B.IMDG_UN_NO_HLD_FLG                AS IMDG_UN_NO_HLD_FLG
          , B.IMDG_COMP_GRP_CD                  AS IMDG_COMP_GRP_CD
          , (D.IMDG_SEGR_TP_CD||C.IMDG_SEGR_CD) AS IMDG_SEGR_CD
          , D.IMDG_SEGR_DESC                    AS IMDG_SEGR_DESC
          , B.IMDG_TBL_NO                       AS IMDG_TBL_NO
       FROM UN_NO_TBL           B
          , SCG_IMDG_UN_NO_SEGR C
          , SCG_IMDG_SEGR_SYM   D
      WHERE B.IMDG_UN_NO_HLD_FLG = 'N'
        AND B.LEQ_CHK            = 'N'
        AND B.IMDG_UN_NO         = C.IMDG_UN_NO
        AND B.IMDG_UN_NO_SEQ     = C.IMDG_UN_NO_SEQ     
        AND C.IMDG_SEGR_CD       = D.IMDG_SEGR_CD
        AND NVL(D.DELT_FLG,'N')  = 'N' 
        AND D.IMDG_SEGR_TP_CD    = 'C'       
),
UN_NO_SEGR_GRP_TBL AS (
     SELECT E.SORT_NO
          , E.IMDG_UN_NO
          , E.IMDG_UN_NO_SEQ
          , E.IMDG_CLSS_CD
          , E.IMDG_UN_NO_HLD_FLG
          , F.IMDG_SEGR_GRP_NO
          , ('G'||F.IMDG_SEGR_GRP_STWG_TP_CD) AS IMDG_SEGR_GRP_STWG_TP_CD
          , E.IMDG_TBL_NO
       FROM UN_NO_TBL               E
          , SCG_IMDG_UN_NO_SEGR_GRP F
      WHERE E.IMDG_UN_NO_HLD_FLG = 'N'
        AND E.LEQ_CHK            = 'N'
        AND E.IMDG_UN_NO     = F.IMDG_UN_NO
        AND E.IMDG_UN_NO_SEQ = F.IMDG_UN_NO_SEQ
),
CLSS1_SEGR_TBL AS (
     SELECT CGS.ROW_IMDG_COMP_GRP_CD
          , CGS.COL_IMDG_COMP_GRP_CD
          , ('P'||CGS.IMDG_SEGR_CD) AS IMDG_SEGR_CD
          , CGS.IMDG_SEGR_NTC_NO 
          , (SELECT MSG.ERR_MSG FROM COM_ERR_MSG MSG WHERE MSG.ERR_MSG_CD = 'SCG00005') IMDG_SEGR_DESC
       FROM SCG_IMDG_COMP_GRP_SEGR CGS 
      WHERE NOT EXISTS (
            SELECT 'X'
              FROM SCG_IMDG_SEGR_SYM SYM
             WHERE SYM.IMDG_SEGR_CD      = CGS.IMDG_SEGR_NTC_NO
               AND NVL(SYM.DELT_FLG,'N') = 'N'
               AND SYM.IMDG_SEGR_TP_CD   = 'P'
      ) 
),
SEGR_GRP_NOS_TBL AS (
     SELECT SG.IMDG_UN_NO
          , SUBSTR(XMLAGG(XMLELEMENT(X, '/' || IMDG_SEGR_GRP_NO) ORDER BY IMDG_SEGR_GRP_NO).EXTRACT('//text()'), 2) IMDG_SEGR_GRP_NOS
       FROM SCG_IMDG_SEGR_GRP_DTL SG
      WHERE EXISTS (
                   SELECT 'Y'
                     FROM UN_NO_TBL G
                    WHERE G.IMDG_UN_NO = SG.IMDG_UN_NO
                   )
         OR EXISTS (
                   SELECT 'Y'
                     FROM UN_NO_SEGR_GRP_TBL H
                    WHERE H.IMDG_UN_NO = SG.IMDG_UN_NO
                   )
      GROUP BY SG.IMDG_UN_NO
) 
SELECT T.IMDG_UN_NO1
     , T.IMDG_UN_NO_SEQ1
     , T.IMDG_SEGR_GRP_NO1
     , T.CONFLICT_DESC
     , T.IMDG_UN_NO2
     , T.IMDG_UN_NO_SEQ2
     , T.IMDG_SEGR_GRP_NO2
  FROM 
  (
    SELECT TST.SORT_NO1
         , TST.IMDG_UN_NO1
         , TST.IMDG_UN_NO_SEQ1
         , '' AS IMDG_SEGR_GRP_NO1
         , TST.IMDG_UN_NO_HLD_FLG1
         , DECODE(TST.IMDG_SEGR_CD,'C*',CL1.IMDG_SEGR_CD,TST.IMDG_SEGR_CD)    AS IMDG_SEGR_CD
         , DECODE(TST.IMDG_SEGR_CD,'C*',CL1.IMDG_SEGR_DESC,TST.CONFLICT_DESC) AS CONFLICT_DESC
         , TST.SORT_NO2
         , TST.IMDG_UN_NO2
         , TST.IMDG_UN_NO_SEQ2
         , '' AS IMDG_SEGR_GRP_NO2
         , TST.IMDG_UN_NO_HLD_FLG2
      FROM 
         (     
          SELECT UNS.SORT_NO            AS SORT_NO1
               , UNS.IMDG_UN_NO         AS IMDG_UN_NO1
               , UNS.IMDG_UN_NO_SEQ     AS IMDG_UN_NO_SEQ1
               , UNS.IMDG_CLSS_CD1      AS IMDG_CLSS_CD1
               , UNS.IMDG_COMP_GRP_CD   AS IMDG_SEGR_GRP_NO1
               , UNS.IMDG_UN_NO_HLD_FLG AS IMDG_UN_NO_HLD_FLG1
               , UNS.IMDG_SEGR_CD       AS IMDG_SEGR_CD
               , UNS.IMDG_SEGR_DESC     AS CONFLICT_DESC
               , UNT.SORT_NO            AS SORT_NO2
               , UNT.IMDG_UN_NO         AS IMDG_UN_NO2
               , UNT.IMDG_UN_NO_SEQ     AS IMDG_UN_NO_SEQ2
               , UNT.IMDG_COMP_GRP_CD   AS IMDG_SEGR_GRP_NO2
               , UNT.IMDG_UN_NO_HLD_FLG AS IMDG_UN_NO_HLD_FLG2
            FROM UN_NO_SEGR_TBL UNS
               , UN_NO_TBL      UNT
           WHERE UNS.IMDG_CLSS_CD2      = UNT.IMDG_CLSS_CD
             AND UNT.IMDG_UN_NO_HLD_FLG = 'N'
             AND UNT.LEQ_CHK            = 'N'
             AND (
                 UNS.IMDG_UN_NO     <> UNT.IMDG_UN_NO
              OR UNS.IMDG_UN_NO_SEQ <> UNT.IMDG_UN_NO_SEQ
              OR UNS.IMDG_CLSS_CD1  <> UNT.IMDG_CLSS_CD
             )
             AND ((UNS.IMDG_TBL_NO <> UNT.IMDG_TBL_NO) OR UNS.IMDG_TBL_NO IS NULL)
         ) TST
         , CLSS1_SEGR_TBL CL1
     WHERE TST.IMDG_SEGR_GRP_NO1 = CL1.ROW_IMDG_COMP_GRP_CD(+)
       AND TST.IMDG_SEGR_GRP_NO2 = CL1.COL_IMDG_COMP_GRP_CD(+)
    UNION ALL
    SELECT UGT.SORT_NO                   AS SORT_NO1
         , UGT.IMDG_UN_NO                AS IMDG_UN_NO1
         , UGT.IMDG_UN_NO_SEQ            AS IMDG_UN_NO_SEQ1
         , SG1.IMDG_SEGR_GRP_NOS         AS IMDG_SEGR_GRP_NO1 
         , UGT.IMDG_UN_NO_HLD_FLG        AS IMDG_UN_NO_HLD_FLG1
         , UGT.IMDG_SEGR_GRP_STWG_TP_CD  AS IMDG_SEGR_CD
         , DECODE(UGT.IMDG_SEGR_GRP_STWG_TP_CD, 'G1', 'Away from Segregation Group '||UGT.IMDG_SEGR_GRP_NO, 'G2', 'Separated from Segregation Group '||UGT.IMDG_SEGR_GRP_NO, 'N/A') AS CONFLICT_DESC
         , UNT.SORT_NO                   AS SORT_NO2
         , UNT.IMDG_UN_NO                AS IMDG_UN_NO2
         , UNT.IMDG_UN_NO_SEQ            AS IMDG_UN_NO_SEQ2
         , SG2.IMDG_SEGR_GRP_NOS         AS IMDG_SEGR_GRP_NO2
         , UNT.IMDG_UN_NO_HLD_FLG        AS IMDG_UN_NO_HLD_FLG2
      FROM UN_NO_SEGR_GRP_TBL    UGT
         , SCG_IMDG_SEGR_GRP_DTL ISG
         , UN_NO_TBL             UNT
         , SEGR_GRP_NOS_TBL      SG1
         , SEGR_GRP_NOS_TBL      SG2
     WHERE UGT.IMDG_SEGR_GRP_NO   = ISG.IMDG_SEGR_GRP_NO
       AND ISG.IMDG_UN_NO         = UNT.IMDG_UN_NO
       AND UNT.IMDG_UN_NO_HLD_FLG = 'N'
       AND UNT.LEQ_CHK            = 'N'
       AND (
           UGT.IMDG_UN_NO     <> UNT.IMDG_UN_NO
        OR UGT.IMDG_UN_NO_SEQ <> UNT.IMDG_UN_NO_SEQ
        OR UGT.IMDG_CLSS_CD   <> UNT.IMDG_CLSS_CD
           )
       AND ((UGT.IMDG_TBL_NO <> UNT.IMDG_TBL_NO) OR UGT.IMDG_TBL_NO IS NULL)
       AND UGT.IMDG_UN_NO       = SG1.IMDG_UN_NO(+)
       AND UNT.IMDG_UN_NO       = SG2.IMDG_UN_NO(+)
    UNION ALL
    SELECT UNT.SORT_NO                   AS SORT_NO1
         , UNT.IMDG_UN_NO                AS IMDG_UN_NO1
         , UNT.IMDG_UN_NO_SEQ            AS IMDG_UN_NO_SEQ1
         , ''                            AS IMDG_SEGR_GRP_NO1 
         , UNT.IMDG_UN_NO_HLD_FLG        AS IMDG_UN_NO_HLD_FLG1
         , 'HD'                          AS IMDG_SEGR_CD
         , (
           SELECT MSG.ERR_MSG
             FROM COM_ERR_MSG MSG
            WHERE MSG.ERR_MSG_CD = 'SCG00004'
              AND MSG.LANG_TP_CD = 'ENG'
           )                             AS CONFLICT_DESC
         , 0                             AS SORT_NO2
         , ''                            AS IMDG_UN_NO2
         , ''                            AS IMDG_UN_NO_SEQ2
         , ''                            AS IMDG_SEGR_GRP_NO2
         , ''                            AS IMDG_UN_NO_HLD_FLG2
      FROM UN_NO_TBL             UNT
     WHERE UNT.IMDG_UN_NO_HLD_FLG = 'Y'
    UNION ALL
    SELECT UNT.SORT_NO                   AS SORT_NO1
         , UNT.IMDG_UN_NO                AS IMDG_UN_NO1
         , UNT.IMDG_UN_NO_SEQ            AS IMDG_UN_NO_SEQ1
         , ''                            AS IMDG_SEGR_GRP_NO1 
         , UNT.IMDG_UN_NO_HLD_FLG        AS IMDG_UN_NO_HLD_FLG1
         , 'CK'                          AS IMDG_SEGR_CD
         , (
           SELECT MSG.ERR_MSG
             FROM COM_ERR_MSG MSG
            WHERE MSG.ERR_MSG_CD = DECODE(UNT.LEQ_CHK,'LY','SCG50016','EY','SCG50019','SCG50016')
              AND MSG.LANG_TP_CD = 'ENG'
           )                             AS CONFLICT_DESC
         , 0                             AS SORT_NO2
         , ''                            AS IMDG_UN_NO2
         , ''                            AS IMDG_UN_NO_SEQ2
         , ''                            AS IMDG_SEGR_GRP_NO2
         , ''                            AS IMDG_UN_NO_HLD_FLG2
      FROM UN_NO_TBL             UNT
     WHERE UNT.LEQ_CHK = 'LY' OR UNT.LEQ_CHK = 'EY'
  ) T
  WHERE NVL(T.IMDG_SEGR_CD,'PX') != 'PX'
    AND T.IMDG_SEGR_CD != 'CX'
  ORDER BY
        (CASE WHEN T.SORT_NO1<T.SORT_NO2 THEN T.SORT_NO1 ELSE T.SORT_NO2 END)
      , TO_NUMBER(T.IMDG_UN_NO1)+TO_NUMBER(T.IMDG_UN_NO2)
      , TO_NUMBER(T.SORT_NO1)
      , T.IMDG_UN_NO1
      , T.IMDG_UN_NO_SEQ1
      , T.IMDG_SEGR_GRP_NO1			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
