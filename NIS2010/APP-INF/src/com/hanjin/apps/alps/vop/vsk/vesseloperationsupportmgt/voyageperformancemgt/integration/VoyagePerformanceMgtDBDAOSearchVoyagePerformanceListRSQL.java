/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : VoyagePerformanceMgtDBDAOSearchVoyagePerformanceListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.23
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.23 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.vsk.vesseloperationsupportmgt.voyageperformancemgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class VoyagePerformanceMgtDBDAOSearchVoyagePerformanceListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Voyage Performance List 조회
	  * </pre>
	  */
	public VoyagePerformanceMgtDBDAOSearchVoyagePerformanceListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("curr_dt",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vvd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("signal_idx_yellow",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("signal_idx_red",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("signal_idx_green",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_slan_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.vsk.vesseloperationsupportmgt.voyageperformancemgt.integration").append("\n"); 
		query.append("FileName : VoyagePerformanceMgtDBDAOSearchVoyagePerformanceListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT  T1.VSL_SLAN_CD, T1.PF_SKD_TP_CD, T1.VVD, T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD, T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("        , T1.VSL_STS" ).append("\n"); 
		query.append("        , T1.FROM_PORT_CD, T1.TO_PORT_CD" ).append("\n"); 
		query.append("        , T1.FM_YD_CD, T1.TO_YD_CD " ).append("\n"); 
		query.append("        , T1.TO_CLPT_IND_SEQ" ).append("\n"); 
		query.append("        , T1.SKD_DELAY_COLOR_FLAG      AS SIGNAL_SKED_IDX" ).append("\n"); 
		query.append("        , T1.NAVI_SPD_COLOR_FLAG       AS SIGNAL_NAVI_IDX" ).append("\n"); 
		query.append("        , T1.CSM_DAILY_FOC_COLOR_FLAG  AS SIGNAL_FOC_IDX" ).append("\n"); 
		query.append("        , DECODE(T1.SKD_DELAY_COLOR_FLAG    , 'YELLOW', ' SKED', 'RED', ' SKED') ||" ).append("\n"); 
		query.append("          DECODE(T1.NAVI_SPD_COLOR_FLAG     , 'YELLOW', ' Nav' , 'RED', ' Nav' ) ||" ).append("\n"); 
		query.append("          DECODE(T1.CSM_DAILY_FOC_COLOR_FLAG, 'YELLOW', ' FOC' , 'RED', ' FOC' ) AS SIGNAL_INDEX" ).append("\n"); 
		query.append("        , T1.CNTR_DZN_CAPA" ).append("\n"); 
		query.append("        , TO_CHAR(T1.CST_NXT_PORT_ETD_DT,'YYYY-MM-DD HH24:MI') AS CST_NXT_PORT_ETD_DT" ).append("\n"); 
		query.append("        , TO_CHAR(T1.NOON_RPT_DT,'YYYY-MM-DD HH24:MI') AS NOON_RPT_DT " ).append("\n"); 
		query.append("        , T1.CNTR_DZN_CAPA" ).append("\n"); 
		query.append("        , TO_CHAR(T1.CST_NXT_PF_ETA_DT  ,'YYYY-MM-DD HH24:MI') AS SKD_PF_ETA_DT" ).append("\n"); 
		query.append("        , TO_CHAR(T1.CST_NXT_PORT_ETA_DT,'YYYY-MM-DD HH24:MI') AS SKD_LOC_ETA_DT" ).append("\n"); 
		query.append("        , TO_CHAR(T1.NXT_PORT_ETA_DT    ,'YYYY-MM-DD HH24:MI') AS SKD_RPT_ETA_DT" ).append("\n"); 
		query.append("        , T1.SKD_DELAY_HRS,  T1.SKD_DELAY_COLOR_FLAG, T1.NAVI_RUN_HRS AS NAVI_RUN_HRS" ).append("\n"); 
		query.append("        , ( " ).append("\n"); 
		query.append("          SELECT  S.OPMZ_SEA_SPD" ).append("\n"); 
		query.append("          FROM    FCM_VSL_PORT_STND_FUEL_OIL  S" ).append("\n"); 
		query.append("          WHERE   S.VSL_CD          = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S.SKD_VOY_NO      = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND     S.SKD_DIR_CD      = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S.VPS_PORT_CD     = T1.FROM_PORT_CD" ).append("\n"); 
		query.append("          AND     S.CLPT_IND_SEQ    = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          ) * T1.NAVI_RUN_HRS                                                   AS NAVI_OPT_DIST  -- Distance Short" ).append("\n"); 
		query.append("        , ROUND(TO_NUMBER(REGEXP_SUBSTR(T1.PPS_SAIL_DIST, '[^@]+', 1, 1)), 1)   AS NAVI_DR_DIST   -- Distance PPS" ).append("\n"); 
		query.append("        , T1.NAVI_NOON_DIST                                                                       -- Distance Noon" ).append("\n"); 
		query.append("        , T1.NAVI_ETA_SPD                                                                         -- Speed ETA" ).append("\n"); 
		query.append("        , TO_NUMBER(REGEXP_SUBSTR(T1.PPS_SAIL_DIST, '[^@]+', 1, 2))             AS NAVI_PPS_SPD   -- Speed PPS" ).append("\n"); 
		query.append("        , T1.NAVI_NOON_SPD                                                                        -- Speed Noon" ).append("\n"); 
		query.append("        , '   Received Date' ||'       '|| 'LAT' ||'       '|| 'LONG' ||'     '|| 'Term' ||'    '|| 'Distance' ||'    '|| 'Speed' ||CHR(13)||'\n'||" ).append("\n"); 
		query.append("          '---------------------------------------------------------------------'                                                 ||CHR(13)||'\n'||" ).append("\n"); 
		query.append("          REGEXP_SUBSTR(T1.PPS_SAIL_DIST, '[^@]+', 1, 3)                        AS PPS_DESC-- NAVI_PPS_POPUP_MSG   -- PPS Message" ).append("\n"); 
		query.append("        , T1.NAVI_SPD_COLOR_FLAG" ).append("\n"); 
		query.append("        , T1.NAVI_RPM, ROUND(T1.NAVI_AVG_SLIP, 1) AS NAVI_AVG_SLIP,  T1.NAVI_NOON_SLIP,  T1.NOON_RPT_EXIST_FLG,  T1.NOON_AVG_SPD,  T1.NOON_SAIL_DIST, '' AS CSM_DAILY_FOC_STD" ).append("\n"); 
		query.append("        , '' AS CSM_DAILY_FOC_T_LINE, T1.PPS_AVG_SPD" ).append("\n"); 
		query.append("        , TO_NUMBER(REGEXP_SUBSTR(T1.PPS_SAIL_DIST, '[^@]+', 1, 1))             AS PPS_SAIL_DIST" ).append("\n"); 
		query.append("        , '' AS CSM_DAILY_FOC_PPS,  T1.CSM_DAILY_FOC_NOON,  T1.CSM_DAILY_FOC_COLOR_FLAG,  '' AS CSM_DAILY_FOC_DIFF" ).append("\n"); 
		query.append("        , T1.CSM_FROM_FOC_STD, '' AS CSM_FROM_AVG_STD, T1.CSM_FROM_AVG_FOC, '' AS CSM_FROM_BALANCE_FOC, '' AS CSM_FROM_ACH_PERCENTAGE,  T1.OPT_FWD_TRIM" ).append("\n"); 
		query.append("        , T1.OPT_AFT_TRIM" ).append("\n"); 
		query.append("        , T1.OPT_TRM" ).append("\n"); 
		query.append("        , T1.OPT_TRM_IMG" ).append("\n"); 
		query.append("        , T1.OPT_BOW_HGT" ).append("\n"); 
		query.append("        , T1.OPT_TRSM_HGT" ).append("\n"); 
		query.append("        , T1.CST_NXT_PORT_ETA_DT" ).append("\n"); 
		query.append("        , T1.TZTM_HRS" ).append("\n"); 
		query.append("#if (${sel_cargo} != '')" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          SELECT  ROUND(S1.GROSS_GC, 1)" ).append("\n"); 
		query.append("          FROM    TDR_HEADER S1" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD       = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.VOY_NO       = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND     S1.DIR_CD       = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD      = T1.FROM_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.CALL_IND     = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          )                                                                                                                         AS CGO_FROM_GROSS_PROD          -- Productivity/Previous" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          WITH TB_TML_PRD AS (" ).append("\n"); 
		query.append("          SELECT  VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND, GROSS_GC, ROW_NUMBER() OVER (PARTITION BY VSL_CD, PORT_CD, DIR_CD ORDER BY UPDATE_TIME DESC) AS UPD_RANK_SEQ" ).append("\n"); 
		query.append("          FROM    TDR_HEADER" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     GROSS_GC    > 0" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("          SELECT  ROUND(AVG(S1.GROSS_GC), 1)" ).append("\n"); 
		query.append("          FROM    TB_TML_PRD S1" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD       = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD      = T1.TO_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.DIR_CD       = T1.CST_NXT_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.UPD_RANK_SEQ <= 3" ).append("\n"); 
		query.append("          )                                                                                                                         AS CGO_TO_GROSS_PROD            -- Productivity/Next" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          SELECT  COUNT(DISTINCT CRANE_ID)" ).append("\n"); 
		query.append("          FROM    BAY_CRANE S1" ).append("\n"); 
		query.append("          WHERE   1 = 1" ).append("\n"); 
		query.append("          AND     T1.VSL_CD        = S1.VSL_CD" ).append("\n"); 
		query.append("          AND     T1.SKD_VOY_NO    = S1.VOY_NO" ).append("\n"); 
		query.append("          AND     T1.SKD_DIR_CD    = S1.DIR_CD" ).append("\n"); 
		query.append("          AND     T1.FROM_PORT_CD  = S1.PORT_CD" ).append("\n"); 
		query.append("          AND     T1.CLPT_IND_SEQ  = S1.CALL_IND" ).append("\n"); 
		query.append("          )                                                                                                                         AS CGO_FROM_STWG_ARRANGEMENT    -- No. of used Crane/Provious/ISTWG" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          WITH TB_AVG_CRANE AS (" ).append("\n"); 
		query.append("          SELECT  S1.VSL_CD,  S1.VOY_NO, S1.DIR_CD, S1.PORT_CD, S1.CALL_IND," ).append("\n"); 
		query.append("                  ROUND((S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_WORK,1,INSTR(S1.GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_WORK,INSTR(S1.GROSS_WORK,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_WORK,1,INSTR(S1.GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_WORK,INSTR(S1.GROSS_WORK,':')+1)/60)))) /" ).append("\n"); 
		query.append("                  DECODE(S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60))),0,1," ).append("\n"); 
		query.append("                  (S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60))))),2) AS AVG_CRANE" ).append("\n"); 
		query.append("                 , ROW_NUMBER() OVER (PARTITION BY S1.VSL_CD, S1.DIR_CD, S1.PORT_CD ORDER BY S2.VPS_ETA_DT DESC) AS UPD_RANK_SEQ" ).append("\n"); 
		query.append("                 , ETA" ).append("\n"); 
		query.append("          FROM    TDR_HEADER       S1," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD   = S2.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.VOY_NO   = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND     S1.DIR_CD   = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD  = S2.VPS_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.CALL_IND = S2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("          SELECT  ROUND(AVG(S1.AVG_CRANE), 2)" ).append("\n"); 
		query.append("          FROM    TB_AVG_CRANE S1" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD       = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD      = T1.FROM_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.DIR_CD       = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.UPD_RANK_SEQ <= 3" ).append("\n"); 
		query.append("          )                                                                                                                        AS CGO_FROM_AVG_ARRANGEMENT   -- No. of used Crane/Provious/AVG" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          SELECT  ROUND((S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_WORK,1,INSTR(S1.GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_WORK,INSTR(S1.GROSS_WORK,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_WORK,1,INSTR(S1.GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_WORK,INSTR(S1.GROSS_WORK,':')+1)/60)))) /" ).append("\n"); 
		query.append("                  DECODE(S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60))),0,1," ).append("\n"); 
		query.append("                  (S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60))))),2) AS AVG_CRANE" ).append("\n"); 
		query.append("          FROM    TDR_HEADER       S1" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD         = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.VOY_NO         = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND     S1.DIR_CD         = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD        = T1.FROM_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.CALL_IND       = T1.CLPT_IND_SEQ         " ).append("\n"); 
		query.append("          )                                                                                                                         AS CGO_FROM_USED_ARRANGEMENT -- No. of used Crane/Provious/USED" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          WITH TB_AVG_CRANE AS (" ).append("\n"); 
		query.append("          SELECT  S1.VSL_CD,  S1.VOY_NO, S1.DIR_CD, S1.PORT_CD, S1.CALL_IND," ).append("\n"); 
		query.append("                  ROUND((S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_WORK,1,INSTR(S1.GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_WORK,INSTR(S1.GROSS_WORK,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_WORK,1,INSTR(S1.GROSS_WORK,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_WORK,INSTR(S1.GROSS_WORK,':')+1)/60)))) /" ).append("\n"); 
		query.append("                  DECODE(S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60))),0,1," ).append("\n"); 
		query.append("                  (S1.MVS / (DECODE(TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60),0,1," ).append("\n"); 
		query.append("                  TO_NUMBER(SUBSTR(S1.GROSS_GANG,1,INSTR(S1.GROSS_GANG,':')-1))+TO_NUMBER(SUBSTR(S1.GROSS_GANG,INSTR(S1.GROSS_GANG,':')+1)/60))))),2) AS AVG_CRANE" ).append("\n"); 
		query.append("                 , ROW_NUMBER() OVER (PARTITION BY S1.VSL_CD, S1.DIR_CD, S1.PORT_CD ORDER BY S2.VPS_ETA_DT DESC) AS UPD_RANK_SEQ" ).append("\n"); 
		query.append("                 , ETA" ).append("\n"); 
		query.append("          FROM    TDR_HEADER       S1," ).append("\n"); 
		query.append("                  VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD   = S2.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.VOY_NO   = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND     S1.DIR_CD   = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD  = S2.VPS_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.CALL_IND = S2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          )" ).append("\n"); 
		query.append("          SELECT  ROUND(AVG(S1.AVG_CRANE), 2)" ).append("\n"); 
		query.append("          FROM    TB_AVG_CRANE S1" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD       = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD      = T1.TO_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.DIR_CD       = T1.CST_NXT_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.UPD_RANK_SEQ <= 3" ).append("\n"); 
		query.append("          )                                                                                                                         AS CGO_TO_AVG_ARRANGEMENT    -- No. of used Crane/Next/AVG" ).append("\n"); 
		query.append("        , T1.CGO_VOL_TEU_QTY                                                                                                                                     -- Operation/TEU" ).append("\n"); 
		query.append("        , T1.CGO_VOL_WGT                                                                                                                                         -- Operation/WT" ).append("\n"); 
		query.append("        , T1.CGO_BSA_HJS_QTY                                                                                                                                     -- BSA/SML" ).append("\n"); 
		query.append("        , T1.CGO_BSA_ALLIANCE_QTY                                                                                                                                -- BSA/Alliance" ).append("\n"); 
		query.append("        , REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG, '[^:]+', 1, 1)                                                                      AS CGO_ONBOARD_TEU_QTY       -- On Board/TEU" ).append("\n"); 
		query.append("        , REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG, '[^:]+', 1, 2)                                                                      AS CGO_ONBOARD_WGT           -- On Board/WT" ).append("\n"); 
		query.append("        , CASE" ).append("\n"); 
		query.append("          WHEN T1.CGO_BSA_HJS_QTY+T1.CGO_BSA_ALLIANCE_QTY 	= 0                           THEN '0.0'||'%'" ).append("\n"); 
		query.append("          WHEN T1.CGO_BSA_HJS_QTY+T1.CGO_BSA_ALLIANCE_QTY 	                     IS NULL  THEN '0.0'||'%'" ).append("\n"); 
		query.append("          WHEN TO_NUMBER(REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG, '[^:]+', 1, 1))   IS NULL  THEN '0.0'||'%'" ).append("\n"); 
		query.append("          ELSE ROUND(TO_NUMBER(REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG, '[^:]+', 1, 1)) / (T1.CGO_BSA_HJS_QTY + T1.CGO_BSA_ALLIANCE_QTY )*100,1)||'%'" ).append("\n"); 
		query.append("          END                                                                                                                       AS CGO_TOTAL_LF_RATIO        -- L/F / TTL" ).append("\n"); 
		query.append("        , CGO_TO_IB_TEU_QTY                                                                                                         AS CGO_TO_IB_TEU_QTY         -- Next Port(TEU) I/B" ).append("\n"); 
		query.append("        , CGO_TO_OB_TEU_QTY                                                                                                         AS CGO_TO_OB_TEU_QTY         -- Next Port(TEU) O/B" ).append("\n"); 
		query.append("        , (" ).append("\n"); 
		query.append("          SELECT  SUM(CASE WHEN (S1.STATUS = 'ST' AND TRIM(S1.PRECELL) IS NOT NULL) THEN 1 ELSE 0 END)" ).append("\n"); 
		query.append("          FROM    TDR_CNTR_DETAIL  S1" ).append("\n"); 
		query.append("          WHERE   1=1" ).append("\n"); 
		query.append("          AND     S1.VSL_CD         = T1.VSL_CD" ).append("\n"); 
		query.append("          AND     S1.VOY_NO         = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("          AND     S1.DIR_CD         = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("          AND     S1.PORT_CD        = T1.FROM_PORT_CD" ).append("\n"); 
		query.append("          AND     S1.CALL_IND       = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("          )                                                                                                                         AS CGO_RHDL_QTY              -- R/H RF" ).append("\n"); 
		query.append("        , REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG  , '[^:]+', 1, 5)                                                                    AS CGO_RF_QTY                -- On Board/RF" ).append("\n"); 
		query.append("        , REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG  , '[^:]+', 1, 6)                                                                    AS CGO_AK_QTY                -- Special Cargo/AWK" ).append("\n"); 
		query.append("        , REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG  , '[^:]+', 1, 7)                                                                    AS CGO_BB_QTY                -- Special Cargo/BB" ).append("\n"); 
		query.append("        , CASE" ).append("\n"); 
		query.append("          WHEN NVL(T1.CGO_BSA_ALLIANCE_QTY, 0) = 0 THEN 0" ).append("\n"); 
		query.append("          ELSE (" ).append("\n"); 
		query.append("               TO_NUMBER(REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG, '[^:]+', 1, 4))" ).append("\n"); 
		query.append("               ) / DECODE(T1.CGO_BSA_ALLIANCE_QTY, NULL, 1, 0, 1, T1.CGO_BSA_ALLIANCE_QTY) * 100" ).append("\n"); 
		query.append("          END                                                                                                                       AS CGO_LF_ALLIANCE_QTY       -- 화면에서 미사용          " ).append("\n"); 
		query.append("        , CASE" ).append("\n"); 
		query.append("          WHEN NVL(T1.CGO_BSA_HJS_QTY, 0) = 0 THEN 0" ).append("\n"); 
		query.append("          ELSE (" ).append("\n"); 
		query.append("               TO_NUMBER(REGEXP_SUBSTR(CGO_FM_TEU_WGT_BSA_SCG, '[^:]+', 1, 3))" ).append("\n"); 
		query.append("               ) / DECODE(T1.CGO_BSA_HJS_QTY + T1.CGO_BSA_ALLIANCE_QTY, NULL, 1, 0, 1, T1.CGO_BSA_HJS_QTY) * 100" ).append("\n"); 
		query.append("          END                                                                                                                       AS CGO_LF_HJS_QTY            -- 화면에서 미사용" ).append("\n"); 
		query.append("          " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        SELECT  T1.VSL_CD" ).append("\n"); 
		query.append("                , T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                , T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                , T1.VPS_PORT_CD                                                                                           AS FROM_PORT_CD" ).append("\n"); 
		query.append("                , T1.CLPT_SEQ" ).append("\n"); 
		query.append("                , T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , T1.CST_NXT_DIR_CD" ).append("\n"); 
		query.append("                , T1.CST_NXT_PORT_CD                                                                                       AS TO_PORT_CD" ).append("\n"); 
		query.append("                , T1.CST_NXT_CLPT_IND_SEQ                                                                                  AS TO_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                , T1.VSL_SLAN_CD                                                                                           AS VSL_SLAN_CD" ).append("\n"); 
		query.append("                , T1.PF_SKD_TP_CD" ).append("\n"); 
		query.append("                , T1.VSL_CD || T1.SKD_VOY_NO || T1.SKD_DIR_CD                                                              AS VVD" ).append("\n"); 
		query.append("                , CASE" ).append("\n"); 
		query.append("                  WHEN NR.NOON_RPT_DT IS NULL THEN" ).append("\n"); 
		query.append("                       CASE " ).append("\n"); 
		query.append("                       WHEN @[curr_dt] IS NULL THEN" ).append("\n"); 
		query.append("                            CASE" ).append("\n"); 
		query.append("                            WHEN SYSDATE >  T1.VPS_ETD_DT                              THEN 'Underway'" ).append("\n"); 
		query.append("                            WHEN SYSDATE >= T1.VPS_ETB_DT AND SYSDATE <= T1.VPS_ETD_DT THEN 'Berthed'" ).append("\n"); 
		query.append("                            END" ).append("\n"); 
		query.append("                       ELSE" ).append("\n"); 
		query.append("                           CASE" ).append("\n"); 
		query.append("                           WHEN TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD') >  TO_DATE(TO_CHAR(T1.VPS_ETD_DT,'YYYYMMDD'),'YYYYMMDD') THEN" ).append("\n"); 
		query.append("                                'Underway'" ).append("\n"); 
		query.append("                           WHEN (TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD') >= TO_DATE(TO_CHAR(T1.VPS_ETB_DT,'YYYYMMDD'),'YYYYMMDD') AND" ).append("\n"); 
		query.append("                                 TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD') <= TO_DATE(TO_CHAR(T1.VPS_ETD_DT,'YYYYMMDD'),'YYYYMMDD')) THEN" ).append("\n"); 
		query.append("                                'Berthed'" ).append("\n"); 
		query.append("                           END" ).append("\n"); 
		query.append("                       END" ).append("\n"); 
		query.append("                  ELSE" ).append("\n"); 
		query.append("                      'Underway'" ).append("\n"); 
		query.append("                  END                                                                                                      AS VSL_STS" ).append("\n"); 
		query.append("                , T1.YD_CD                                                                                                 AS FM_YD_CD" ).append("\n"); 
		query.append("                , T1.CST_NXT_YD_CD                                                                                         AS TO_YD_CD" ).append("\n"); 
		query.append("                , T1.CST_NXT_PORT_ETD_DT" ).append("\n"); 
		query.append("                , T1.CNTR_DZN_CAPA" ).append("\n"); 
		query.append("                , T1.VPS_ETB_DT" ).append("\n"); 
		query.append("                , T1.PF_ETA_DT " ).append("\n"); 
		query.append("                , T1.CST_NXT_PF_ETA_DT" ).append("\n"); 
		query.append("                , T1.CST_NXT_PORT_ETA_DT" ).append("\n"); 
		query.append("                , NR.NXT_PORT_ETA_DT" ).append("\n"); 
		query.append("                , ROUND(NVL(NR.NXT_PORT_ETA_DT - T1.CST_NXT_PF_ETA_DT,0)*24,2)                                             AS SKD_DELAY_HRS" ).append("\n"); 
		query.append("                , CASE" ).append("\n"); 
		query.append("                  WHEN NR.NXT_PORT_ETA_DT - T1.CST_NXT_PF_ETA_DT        IS NULL      THEN 'GREEN'" ).append("\n"); 
		query.append("                  WHEN ROUND((NR.NXT_PORT_ETA_DT - T1.CST_NXT_PF_ETA_DT)*24,2) >= 24 THEN 'RED'" ).append("\n"); 
		query.append("                  WHEN ROUND((NR.NXT_PORT_ETA_DT - T1.CST_NXT_PF_ETA_DT)*24,2) <= 0  THEN 'GREEN'" ).append("\n"); 
		query.append("                  ELSE" ).append("\n"); 
		query.append("                      'YELLOW'" ).append("\n"); 
		query.append("                  END                                                                                                      AS SKD_DELAY_COLOR_FLAG" ).append("\n"); 
		query.append("                , NVL2(NR.SAIL_HRMNT,(TO_NUMBER(SUBSTR(NR.SAIL_HRMNT,0,2))+TO_NUMBER(SUBSTR(NR.SAIL_HRMNT,3,2))/60),24.0)  AS NAVI_RUN_HRS" ).append("\n"); 
		query.append("                , NR.NVGT_ML_DIST                                                                                          AS NAVI_NOON_DIST" ).append("\n"); 
		query.append("                , NR.RMN_AVG_SPD                                                                                           AS NAVI_ETA_SPD" ).append("\n"); 
		query.append("                , NR.SAIL_AVG_SPD                                                                                          AS NAVI_NOON_SPD" ).append("\n"); 
		query.append("                , CASE" ).append("\n"); 
		query.append("                  WHEN NR.RMN_AVG_SPD >= 0.3 THEN 'RED'" ).append("\n"); 
		query.append("                  WHEN NR.RMN_AVG_SPD <= 0   THEN 'YELLOW'" ).append("\n"); 
		query.append("                  ELSE 'GREEN'" ).append("\n"); 
		query.append("                  END                                                                                                      AS NAVI_SPD_COLOR_FLAG" ).append("\n"); 
		query.append("                , NR.SAIL_AVG_RPM_PWR                                                                                      AS NAVI_RPM" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  AVG(S3.SLP_RT)" ).append("\n"); 
		query.append("                  FROM    VSK_VSL_PORT_SKD    S1," ).append("\n"); 
		query.append("                          VSK_VSL_PORT_SKD    S2," ).append("\n"); 
		query.append("                          FCM_NOON_RPT        S3" ).append("\n"); 
		query.append("                  WHERE   1=1" ).append("\n"); 
		query.append("                  AND     S1.VSL_CD       = S2.VSL_CD" ).append("\n"); 
		query.append("                  AND     S1.SKD_VOY_NO   = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     S1.SKD_DIR_CD   = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     S1.VPS_PORT_CD  = 'CNYIT'" ).append("\n"); 
		query.append("                  AND     S2.VPS_PORT_CD  = T1.VPS_PORT_CD" ).append("\n"); 
		query.append("                  AND     S1.CLPT_SEQ + 1 = S2.CLPT_SEQ" ).append("\n"); 
		query.append("                  AND     S1.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("                  AND     S2.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("                  AND     'S'            != NVL(S1.SKD_CNG_STS_CD, ' ')" ).append("\n"); 
		query.append("                  AND     'S'            != NVL(S2.SKD_CNG_STS_CD, ' ')" ).append("\n"); 
		query.append("                  AND     S2.VSL_CD       = S3.VSL_CD" ).append("\n"); 
		query.append("                  AND     S2.SKD_VOY_NO   = S3.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     S2.SKD_DIR_CD   = S3.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     S2.VPS_PORT_CD  = S3.NXT_PORT_CD                        " ).append("\n"); 
		query.append("                  AND     S3.NOON_RPT_DT  BETWEEN CASE TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'Q')" ).append("\n"); 
		query.append("                                                  WHEN '1' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'0101','YYYYMMDD')" ).append("\n"); 
		query.append("                                                  WHEN '2' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'0401','YYYYMMDD')" ).append("\n"); 
		query.append("                                                  WHEN '3' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'0701','YYYYMMDD')" ).append("\n"); 
		query.append("                                                  WHEN '4' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'1001','YYYYMMDD')" ).append("\n"); 
		query.append("                                                  END" ).append("\n"); 
		query.append("                                          AND     CASE TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'Q')" ).append("\n"); 
		query.append("                                                  WHEN '1' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'0331','YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("                                                  WHEN '2' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'0630','YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("                                                  WHEN '3' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'0930','YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("                                                  WHEN '4' THEN TO_DATE(TO_CHAR(NVL(TO_DATE(REPLACE(@[curr_dt],'-'),'YYYYMMDD'),SYSDATE),'YYYY')||'1231','YYYYMMDD')+0.99999" ).append("\n"); 
		query.append("                                          END" ).append("\n"); 
		query.append("                  )                                                                                                        AS NAVI_AVG_SLIP" ).append("\n"); 
		query.append("                , NR.SLP_RT                                                                                                AS NAVI_NOON_SLIP" ).append("\n"); 
		query.append("                , NVL2(NR.VSL_CD,'Y','N')                                                                                  AS NOON_RPT_EXIST_FLG" ).append("\n"); 
		query.append("                , NR.RMN_AVG_SPD                                                                                           AS NOON_AVG_SPD" ).append("\n"); 
		query.append("                , NR.ENG_ML_DIST                                                                                           AS NOON_SAIL_DIST" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  /*+INDEX_DESC(S XAK01VSK_VSL_PSN_PLNG_DTL) */" ).append("\n"); 
		query.append("                          (S.VSL_SPD + S.VSL_PRE_SPD) / 2" ).append("\n"); 
		query.append("                  FROM    VSK_VSL_PSN_PLNG_DTL     S" ).append("\n"); 
		query.append("                  WHERE   S.VSL_CD                = T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     S.SKD_VOY_NO            = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     S.SKD_DIR_CD            = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     S.VSL_SPD               > 0" ).append("\n"); 
		query.append("                  AND     S.VSL_PRE_SPD           > 0" ).append("\n"); 
		query.append("                  AND     ROWNUM    = 1" ).append("\n"); 
		query.append("                  )                                                                                                        AS PPS_AVG_SPD" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                    WITH TB_PPS_DIST AS" ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                    SELECT  VSL_CD, SKD_VOY_NO, SKD_DIR_CD, VSL_PLNG_DIST, VSL_PRE_SPD, SUM(SUM(CNT)) OVER (PARTITION BY VSL_CD) AS CNT" ).append("\n"); 
		query.append("                            , MSG|| TO_CHAR(ROUND(VSL_PLNG_DIST, 7), '00.0000000') ||'   '|| TO_CHAR( DECODE(VSL_PLNG_DIST, 0, 0, VSL_SPD), '00.0') AS MSG" ).append("\n"); 
		query.append("                    FROM    (" ).append("\n"); 
		query.append("                            SELECT  S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD, S.VSL_PRE_SPD" ).append("\n"); 
		query.append("                                    , CASE" ).append("\n"); 
		query.append("                                      WHEN  VSL_PLNG_DIST = LAG(S.VSL_PLNG_DIST) OVER (PARTITION BY S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD ORDER BY PLNG_GEN_LOCL_DT) THEN" ).append("\n"); 
		query.append("                                            0" ).append("\n"); 
		query.append("                                      ELSE" ).append("\n"); 
		query.append("                                            VSL_PLNG_DIST * (6 / PLNG_GEN_DIFF_HRS) -- 6 시간 진행한 거리로 환산" ).append("\n"); 
		query.append("                                      END                 AS VSL_PLNG_DIST" ).append("\n"); 
		query.append("                                    , SUM(" ).append("\n"); 
		query.append("                                      CASE" ).append("\n"); 
		query.append("                                      WHEN  TO_CHAR(S.PLNG_GEN_LOCL_DT, 'YYYYMMDDHH24') = TO_CHAR(SYSDATE - 1, 'YYYYMMDD')||'12' THEN" ).append("\n"); 
		query.append("                                            0" ).append("\n"); 
		query.append("                                      ELSE" ).append("\n"); 
		query.append("                                            1" ).append("\n"); 
		query.append("                                      END" ).append("\n"); 
		query.append("                                      )                     AS CNT" ).append("\n"); 
		query.append("                                    , TO_CHAR(S.PLNG_GEN_LOCL_DT, 'YYYY-MM-DD HH24:MI:SS') ||'   '|| S.VSL_PRE_LAT ||'   '|| S.VSL_PRE_LON ||'   '|| TO_CHAR(ROUND(S.PLNG_GEN_DIFF_HRS), '00') ||'   ' AS MSG" ).append("\n"); 
		query.append("                                    , VSL_SPD" ).append("\n"); 
		query.append("                            FROM    VSK_VSL_PSN_PLNG_DTL     S" ).append("\n"); 
		query.append("                            WHERE   1=1" ).append("\n"); 
		query.append("                            AND     TO_CHAR(S.PLNG_GEN_LOCL_DT, 'YYYYMMDDHH24') IN" ).append("\n"); 
		query.append("                                    (	-- 6 시간 단위로 하루 4번 입력된 것으로 처리." ).append("\n"); 
		query.append("                                    TO_CHAR(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')), 'YYYYMMDD') - 1, 'YYYYMMDD')||'12'," ).append("\n"); 
		query.append("                                    TO_CHAR(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')), 'YYYYMMDD') - 1, 'YYYYMMDD')||'18'," ).append("\n"); 
		query.append("                                    TO_CHAR(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')), 'YYYYMMDD')    , 'YYYYMMDD')||'00'," ).append("\n"); 
		query.append("                                    TO_CHAR(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')), 'YYYYMMDD')    , 'YYYYMMDD')||'06'," ).append("\n"); 
		query.append("                                    TO_CHAR(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')), 'YYYYMMDD')    , 'YYYYMMDD')||'12'" ).append("\n"); 
		query.append("                                    )" ).append("\n"); 
		query.append("                            GROUP BY S.VSL_CD, S.SKD_VOY_NO, S.SKD_DIR_CD, S.PLNG_GEN_LOCL_DT, S.VSL_PLNG_DIST, S.PLNG_GEN_DIFF_HRS, S.VSL_PRE_SPD" ).append("\n"); 
		query.append("                                    , TO_CHAR(S.PLNG_GEN_LOCL_DT, 'YYYY-MM-DD HH24:MI:SS') ||'   '|| S.VSL_PRE_LAT ||'   '|| S.VSL_PRE_LON ||'   '|| TO_CHAR(ROUND(S.PLNG_GEN_DIFF_HRS), '00') ||'   '" ).append("\n"); 
		query.append("                                    , VSL_SPD" ).append("\n"); 
		query.append("                            )" ).append("\n"); 
		query.append("                    WHERE   1=1" ).append("\n"); 
		query.append("                    AND     CNT = 1" ).append("\n"); 
		query.append("                    GROUP BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, VSL_PLNG_DIST, VSL_PRE_SPD, MSG, VSL_SPD" ).append("\n"); 
		query.append("                    ORDER BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, MSG|| ROUND(VSL_PLNG_DIST, 7) ||'   '|| TO_CHAR( DECODE(VSL_PLNG_DIST, 0, 0, VSL_SPD), '00.0')" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("                    SELECT  -- 조회 시점까지 접수된 Position polling 값을 이용하여 좌표간 시간당 Distance x Running Hrs로 PPS로 계산한 평균 운항 거리를 표시함 ." ).append("\n"); 
		query.append("                            -- 만일 Position polling 값이 24시간을 채우지 못할 시에는 접수하지 못한구간은  구간의 평균값으로 계산하여 표시함." ).append("\n"); 
		query.append("                            SUM(VSL_PLNG_DIST) + SUM( VSL_PLNG_DIST / 6  * (4 - CNT)) ||'@'|| AVG(VSL_PRE_SPD) ||'@'|| REPLACE(WM_CONCAT(MSG), ',', CHR(13))||'@'" ).append("\n"); 
		query.append("                    FROM    TB_PPS_DIST S" ).append("\n"); 
		query.append("                    WHERE   1=1" ).append("\n"); 
		query.append("                    AND     S.VSL_CD         = T1.VSL_CD" ).append("\n"); 
		query.append("                    AND     S.SKD_VOY_NO     IN (T1.SKD_VOY_NO, TURN_SKD_VOY_NO2)" ).append("\n"); 
		query.append("                    AND     S.SKD_DIR_CD     IN (T1.SKD_DIR_CD, TURN_SKD_DIR_CD2)" ).append("\n"); 
		query.append("                  )                                                                                                        AS PPS_SAIL_DIST" ).append("\n"); 
		query.append("                , NVL(NR.MN_FOIL_CSM_QTY,0) + NVL(NR.MN_LOW_SULP_FOIL_CSM_QTY,0) + NVL(NR.MN_DOIL_CSM_QTY,0) + NVL(NR.MN_LOW_SULP_DOIL_CSM_QTY,0) AS CSM_DAILY_FOC_NOON" ).append("\n"); 
		query.append("                , ''                                                                                                       AS CSM_DAILY_FOC_COLOR_FLAG" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  NVL(FO.RVIS_FOIL_CSM,FO.INIT_FOIL_CSM)" ).append("\n"); 
		query.append("                  FROM    FCM_VSL_PORT_STND_FUEL_OIL   FO" ).append("\n"); 
		query.append("                  WHERE   1 = 1" ).append("\n"); 
		query.append("                  AND     FO.VSL_CD         = T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     FO.SKD_VOY_NO     = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     FO.SKD_DIR_CD     = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     FO.VPS_PORT_CD    = T1.VPS_PORT_CD" ).append("\n"); 
		query.append("                  AND     FO.CLPT_IND_SEQ   = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                  )                                                                                                        AS CSM_FROM_FOC_STD" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  SUM  ( NVL(NR.MN_FOIL_CSM_QTY          , 0) " ).append("\n"); 
		query.append("                               + NVL(NR.MN_LOW_SULP_FOIL_CSM_QTY , 0) " ).append("\n"); 
		query.append("                               + NVL(NR.MN_DOIL_CSM_QTY          , 0) " ).append("\n"); 
		query.append("                               + NVL(NR.MN_LOW_SULP_DOIL_CSM_QTY , 0) " ).append("\n"); 
		query.append("                               + NVL(NR.GNR_FOIL_CSM_QTY         , 0) " ).append("\n"); 
		query.append("                               + NVL(NR.GNR_LOW_SULP_FOIL_CSM_QTY, 0)" ).append("\n"); 
		query.append("                               )" ).append("\n"); 
		query.append("                  FROM    FCM_NOON_RPT                 NR" ).append("\n"); 
		query.append("                  WHERE   1 = 1" ).append("\n"); 
		query.append("                  AND     NR.VSL_CD          =  T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     NR.SKD_VOY_NO      =  T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     NR.SKD_DIR_CD      =  T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     NR.NXT_PORT_CD     =  T1.CST_NXT_PORT_CD" ).append("\n"); 
		query.append("                  AND     NR.NOON_RPT_DT     <= NR.NOON_RPT_DT" ).append("\n"); 
		query.append("                  )                                                                                                         AS CSM_FROM_AVG_FOC" ).append("\n"); 
		query.append("                , DR.DEP_FWDDR_HGT                                                                                          AS OPT_FWD_TRIM" ).append("\n"); 
		query.append("                , DR.DEP_AFTDR_HGT                                                                                          AS OPT_AFT_TRIM" ).append("\n"); 
		query.append("                , DR.DEP_FWDDR_HGT - DR.DEP_AFTDR_HGT                                                                       AS OPT_TRM" ).append("\n"); 
		query.append("                , DR.DEP_FWDDR_HGT - DR.DEP_AFTDR_HGT                                                                       AS OPT_TRM_IMG" ).append("\n"); 
		query.append("                , AD.BOW_HGT                                                                                                AS OPT_BOW_HGT" ).append("\n"); 
		query.append("                , AD.TRSM_HGT                                                                                               AS OPT_TRSM_HGT" ).append("\n"); 
		query.append("                , NR.NOON_RPT_DT, T1.VPS_ETD_DT" ).append("\n"); 
		query.append("                , NVL(T1.TZTM_HRS,  (" ).append("\n"); 
		query.append("                                    SELECT S.TZTM_HRS" ).append("\n"); 
		query.append("                                    FROM   VSK_PF_SKD_DTL S" ).append("\n"); 
		query.append("                                    WHERE  1=1" ).append("\n"); 
		query.append("                                    AND    T1.VSL_SLAN_CD   = S.VSL_SLAN_CD" ).append("\n"); 
		query.append("                                    AND    T1.PF_SKD_TP_CD  = S.PF_SVC_TP_CD" ).append("\n"); 
		query.append("                                    AND    T1.SKD_DIR_CD    = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                                    AND    T1.VPS_PORT_CD   = S.PORT_CD" ).append("\n"); 
		query.append("                                    AND    T1.CLPT_IND_SEQ  = S.CLPT_SEQ" ).append("\n"); 
		query.append("                                    )" ).append("\n"); 
		query.append("                  )                                                                                                         AS TZTM_HRS" ).append("\n"); 
		query.append("#if (${sel_cargo} != '')" ).append("\n"); 
		query.append("                , CASE (SELECT X.VSL_SLAN_DIR_SEQ FROM MDM_VSL_SVC_LANE_DIR X WHERE X.VSL_SLAN_CD = T1.VSL_SLAN_CD AND X.VSL_SLAN_DIR_CD = T1.SKD_DIR_CD)" ).append("\n"); 
		query.append("                        WHEN 1 THEN LC.HD_HUL_HC_INCL_QTY" ).append("\n"); 
		query.append("                        WHEN 2 THEN LC.BAK_HUL_HC_INCL_QTY" ).append("\n"); 
		query.append("                        ELSE NULL" ).append("\n"); 
		query.append("                  END                                                                                                       AS CGO_VOL_TEU_QTY" ).append("\n"); 
		query.append("                , CASE (SELECT X.VSL_SLAN_DIR_SEQ FROM MDM_VSL_SVC_LANE_DIR X WHERE X.VSL_SLAN_CD = T1.VSL_SLAN_CD AND X.VSL_SLAN_DIR_CD = T1.SKD_DIR_CD)" ).append("\n"); 
		query.append("                        WHEN 1 THEN LC.HD_HUL_TTL_WGT" ).append("\n"); 
		query.append("                        WHEN 2 THEN LC.BAK_HUL_TTL_WGT" ).append("\n"); 
		query.append("                        ELSE NULL" ).append("\n"); 
		query.append("                  END                                                                                                       AS CGO_VOL_WGT" ).append("\n"); 
		query.append("                , TO_NUMBER(REGEXP_SUBSTR(T1.BSA, '[^:]+', 1, 1))                                                           AS CGO_BSA_HJS_QTY" ).append("\n"); 
		query.append("                , TO_NUMBER(REGEXP_SUBSTR(T1.BSA, '[^:]+', 1, 2))                                                           AS CGO_BSA_ALLIANCE_QTY" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  SUM(CASE" ).append("\n"); 
		query.append("                              WHEN (SUBSTR(S1.SZTP, 2, 1) = '2') THEN 1" ).append("\n"); 
		query.append("                              ELSE                                    2" ).append("\n"); 
		query.append("                              END" ).append("\n"); 
		query.append("                              )                                                                                   ||':'||" ).append("\n"); 
		query.append("                          SUM(TO_NUMBER(S1.WEIGHT))                                                               ||':'||" ).append("\n"); 
		query.append("                          SUM(CASE" ).append("\n"); 
		query.append("                              WHEN (S1.OPR_CD || S1.FE || SUBSTR(S1.SZTP, 2, 1) = 'SMLF2') THEN 1" ).append("\n"); 
		query.append("                              WHEN (S1.OPR_CD || S1.FE                          = 'SMLF' ) THEN 2" ).append("\n"); 
		query.append("                              ELSE                                                              0" ).append("\n"); 
		query.append("                              END" ).append("\n"); 
		query.append("                              )                                                                                   ||':'||" ).append("\n"); 
		query.append("                          SUM(CASE" ).append("\n"); 
		query.append("                              WHEN (S1.OPR_CD                                   = 'SML'  ) THEN 0" ).append("\n"); 
		query.append("                              WHEN (S1.FE || SUBSTR(S1.SZTP, 2, 1)              = 'F2'   ) THEN 1" ).append("\n"); 
		query.append("                              WHEN (S1.FE                                       = 'F'    ) THEN 2" ).append("\n"); 
		query.append("                              ELSE                                                              0" ).append("\n"); 
		query.append("                              END" ).append("\n"); 
		query.append("                              )                                                                                   ||':'||" ).append("\n"); 
		query.append("                          SUM(CASE WHEN S1.FE || S1.CARGO_TYPE = 'FRF' AND S1.TEMP IS NOT NULL THEN 1 ELSE 0 END) ||':'||" ).append("\n"); 
		query.append("                          SUM(CASE WHEN S1.FE || S1.CARGO_TYPE = 'FAK'                         THEN 1 ELSE 0 END) ||':'||" ).append("\n"); 
		query.append("                          SUM(CASE WHEN S1.FE || S1.CARGO_TYPE = 'FBB'                         THEN 1 ELSE 0 END) ||':'" ).append("\n"); 
		query.append("                  FROM    BAY_PLAN     S1" ).append("\n"); 
		query.append("                  WHERE   1=1" ).append("\n"); 
		query.append("                  AND     S1.PLAN_TYPE     = 'F'" ).append("\n"); 
		query.append("                  AND     S1.VSL_CD         = T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     S1.VOY_NO         = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     S1.DIR_CD         = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     S1.PORT_CD        = T1.VPS_PORT_CD" ).append("\n"); 
		query.append("                  AND     S1.CALL_IND       = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                  )                                                                                                         AS CGO_FM_TEU_WGT_BSA_SCG" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  SUM(CASE" ).append("\n"); 
		query.append("                              WHEN (SUBSTR(S1.SZTP, 2, 1) = '2') THEN 1" ).append("\n"); 
		query.append("                              ELSE                                    2" ).append("\n"); 
		query.append("                              END" ).append("\n"); 
		query.append("                             ) " ).append("\n"); 
		query.append("                  FROM    BAY_PLAN     S1" ).append("\n"); 
		query.append("                  WHERE   1=1" ).append("\n"); 
		query.append("                  AND     S1.PLAN_TYPE       = 'F'" ).append("\n"); 
		query.append("                  AND     S1.VSL_CD          = T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     S1.VOY_NO          = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                  AND     S1.DIR_CD          = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                  AND     S1.PORT_CD         = T1.VPS_PORT_CD" ).append("\n"); 
		query.append("                  AND     S1.CALL_IND        = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                  AND     S1.POD_ISO         = T1.CST_NXT_PORT_CD" ).append("\n"); 
		query.append("                  )                                                                                                         AS CGO_TO_IB_TEU_QTY" ).append("\n"); 
		query.append("                , (" ).append("\n"); 
		query.append("                  SELECT  NVL(SUM(CASE" ).append("\n"); 
		query.append("                              WHEN (SUBSTR(S2.CNTR_TPSZ_CD, 2, 1) = '2') THEN 1" ).append("\n"); 
		query.append("                              ELSE                                    2" ).append("\n"); 
		query.append("                              END" ).append("\n"); 
		query.append("                              ), 0)  AS OB_TEU        -- SML Q'ty (FULL, EMPTY 포함)" ).append("\n"); 
		query.append("                  FROM    BKG_VVD         S1," ).append("\n"); 
		query.append("                          BKG_CONTAINER   S2" ).append("\n"); 
		query.append("                  WHERE   S1.BKG_NO           = S2.BKG_NO" ).append("\n"); 
		query.append("                  AND     S1.VSL_CD           = T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     S1.SKD_VOY_NO       = T1.CST_NXT_VOY_NO" ).append("\n"); 
		query.append("                  AND     S1.SKD_DIR_CD       = T1.CST_NXT_DIR_CD" ).append("\n"); 
		query.append("                  AND     S1.POL_CD           = T1.CST_NXT_PORT_CD" ).append("\n"); 
		query.append("                  AND     S1.POL_CLPT_IND_SEQ = T1.CST_NXT_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                  ) +" ).append("\n"); 
		query.append("                  (" ).append("\n"); 
		query.append("                  SELECT  /*+ INDEX_DESC (S1 XAK12VSK_VSL_PORT_SKD)*/" ).append("\n"); 
		query.append("                          ROUND(AVG(" ).append("\n"); 
		query.append("                                      (" ).append("\n"); 
		query.append("                                      SELECT  SUM(CASE" ).append("\n"); 
		query.append("                                              WHEN (SUBSTR(S2.SZTP, 2, 1) = '2') THEN 1" ).append("\n"); 
		query.append("                                              ELSE                                    2" ).append("\n"); 
		query.append("                                              END" ).append("\n"); 
		query.append("                                              ) AS QTY" ).append("\n"); 
		query.append("                                      FROM   BAY_PLAN          S2" ).append("\n"); 
		query.append("                                      WHERE  1=1" ).append("\n"); 
		query.append("                                      AND    S2.PLAN_TYPE  = 'F'" ).append("\n"); 
		query.append("                                      AND    S2.OPR_CD    <> 'SML'" ).append("\n"); 
		query.append("                                      AND    S1.VSL_CD       = S2.VSL_CD" ).append("\n"); 
		query.append("                                      AND    S1.SKD_VOY_NO   = S2.VOY_NO" ).append("\n"); 
		query.append("                                      AND    S1.SKD_DIR_CD   = S2.DIR_CD" ).append("\n"); 
		query.append("                                      AND    S1.VPS_PORT_CD  = S2.PORT_CD" ).append("\n"); 
		query.append("                                      AND    S1.CLPT_IND_SEQ = S2.CALL_IND" ).append("\n"); 
		query.append("                                      AND    S1.VPS_PORT_CD  = S2.POL " ).append("\n"); 
		query.append("                                      )" ).append("\n"); 
		query.append("                          ))                              AS AVG_QTY  -- SML 제외 최근 기항 3개 VVD 평균" ).append("\n"); 
		query.append("                  FROM    VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                  WHERE   S1.VSL_CD           = T1.VSL_CD" ).append("\n"); 
		query.append("                  AND     S1.VPS_PORT_CD      = T1.CST_NXT_PORT_CD" ).append("\n"); 
		query.append("                  AND     S1.SKD_DIR_CD       = T1.CST_NXT_DIR_CD" ).append("\n"); 
		query.append("                  AND     EXISTS" ).append("\n"); 
		query.append("                          (" ).append("\n"); 
		query.append("                          SELECT  'Y'" ).append("\n"); 
		query.append("                          FROM    BAY_PLAN S2" ).append("\n"); 
		query.append("                          WHERE   S1.VSL_CD       = S2.VSL_CD" ).append("\n"); 
		query.append("                          AND     S1.SKD_VOY_NO   = S2.VOY_NO" ).append("\n"); 
		query.append("                          AND     S1.SKD_DIR_CD   = S2.DIR_CD" ).append("\n"); 
		query.append("                          AND     S1.VPS_PORT_CD  = S2.PORT_CD" ).append("\n"); 
		query.append("                          AND     S1.CLPT_IND_SEQ = S2.CALL_IND" ).append("\n"); 
		query.append("                          AND     ROWNUM          = 1" ).append("\n"); 
		query.append("                          )" ).append("\n"); 
		query.append("                  AND     ROWNUM  <= 3                  " ).append("\n"); 
		query.append("                  )                                                                                                         AS CGO_TO_OB_TEU_QTY" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("        FROM      (" ).append("\n"); 
		query.append("                  SELECT  T1.*" ).append("\n"); 
		query.append("                          , (" ).append("\n"); 
		query.append("                            SELECT  NVL(S2.FNL_HJS_BSA_CAPA, 0) ||':'|| DECODE(S2.HJS_BSA_RTO, 1, 0, NVL(S2.BSA_CAPA, 0) - NVL(S2.FNL_HJS_BSA_CAPA, 0))||':'" ).append("\n"); 
		query.append("                            FROM    MDM_DTL_REV_LANE S1, BSA_VVD_MST S2" ).append("\n"); 
		query.append("                            WHERE   S1.RLANE_CD         = S2.RLANE_CD" ).append("\n"); 
		query.append("                            AND     S1.VSL_SLAN_DIR_CD  = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND     S2.VSL_CD           = T1.VSL_CD" ).append("\n"); 
		query.append("                            AND     S2.SKD_VOY_NO       = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND     S2.SKD_DIR_CD       = T1.SKD_DIR_CD            " ).append("\n"); 
		query.append("                            AND     S1.FM_CONTI_CD      = T1.FM_CONTI_CD    " ).append("\n"); 
		query.append("                            AND     S1.TO_CONTI_CD      = T1.TO_CONTI_CD" ).append("\n"); 
		query.append("                            AND     S1.RLANE_CD         LIKE T1.VSL_SLAN_CD || '%'" ).append("\n"); 
		query.append("                            AND     S1.DELT_FLG         = 'N'" ).append("\n"); 
		query.append("                            )                                                   AS BSA" ).append("\n"); 
		query.append("                          , (" ).append("\n"); 
		query.append("                            SELECT  /*+INDEX_DESC(S1 XPKFCM_NOON_RPT) */" ).append("\n"); 
		query.append("                                    S1.NOON_RPT_DT" ).append("\n"); 
		query.append("                            FROM    FCM_NOON_RPT    S1" ).append("\n"); 
		query.append("                            WHERE   S1.VSL_CD       = T1.VSL_CD" ).append("\n"); 
		query.append("                            AND     S1.SKD_VOY_NO   = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                            AND     S1.SKD_DIR_CD   = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                            AND     S1.NXT_PORT_CD  = T1.CST_NXT_PORT_CD" ).append("\n"); 
		query.append("                            AND     ROWNUM          = 1" ).append("\n"); 
		query.append("                            )                                                   AS PK_NN_RPT_DT" ).append("\n"); 
		query.append("                  FROM    (" ).append("\n"); 
		query.append("                          SELECT    T3.VSL_CD" ).append("\n"); 
		query.append("                                  , T3.SKD_VOY_NO" ).append("\n"); 
		query.append("                                  , T3.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  , T4.VSL_SLAN_DIR_SEQ" ).append("\n"); 
		query.append("                                  , T3.VPS_PORT_CD" ).append("\n"); 
		query.append("                                  , T3.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                  , T3.CLPT_SEQ" ).append("\n"); 
		query.append("                                  , T3.YD_CD" ).append("\n"); 
		query.append("                                  , T3.PF_ETA_DT" ).append("\n"); 
		query.append("                                  , T3.VPS_ETA_DT" ).append("\n"); 
		query.append("                                  , T3.VPS_ETB_DT" ).append("\n"); 
		query.append("                                  , T3.VPS_ETD_DT" ).append("\n"); 
		query.append("                                  , T3.TZTM_HRS" ).append("\n"); 
		query.append("                                  , T3.SLAN_CD AS VSL_SLAN_CD" ).append("\n"); 
		query.append("                                  , T2.PF_SKD_TP_CD" ).append("\n"); 
		query.append("                                  , LAG (T3.SKD_VOY_NO   ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_PRE_VOY_NO" ).append("\n"); 
		query.append("                                  , LAG (T3.SKD_DIR_CD   ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_PRE_DIR_CD" ).append("\n"); 
		query.append("                                  , LAG (T3.VPS_PORT_CD  ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_PRE_PORT_CD" ).append("\n"); 
		query.append("                                  , LAG (T3.CLPT_IND_SEQ ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_PRE_IND_SEQ" ).append("\n"); 
		query.append("                                  , LEAD(T3.SKD_VOY_NO   ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_VOY_NO" ).append("\n"); 
		query.append("                                  , LEAD(T3.SKD_DIR_CD   ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_DIR_CD" ).append("\n"); 
		query.append("                                  , LEAD(T3.VPS_PORT_CD  ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_PORT_CD" ).append("\n"); 
		query.append("                                  , LEAD(T3.CLPT_IND_SEQ ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                  , LEAD(T3.VPS_ETA_DT   ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_PORT_ETA_DT" ).append("\n"); 
		query.append("                                  , LEAD(T3.VPS_ETD_DT   ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_PORT_ETD_DT" ).append("\n"); 
		query.append("                                  , LEAD(T3.YD_CD        ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_YD_CD" ).append("\n"); 
		query.append("                                  , LEAD(T3.PF_ETA_DT    ) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS CST_NXT_PF_ETA_DT" ).append("\n"); 
		query.append("                                  , FIRST_VALUE(T3.TURN_SKD_VOY_NO) OVER (PARTITION BY T3.VSL_CD, T3.SKD_VOY_NO, T3.SKD_DIR_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS TURN_SKD_VOY_NO2" ).append("\n"); 
		query.append("                                  , FIRST_VALUE(T3.TURN_SKD_DIR_CD) OVER (PARTITION BY T3.VSL_CD, T3.SKD_VOY_NO, T3.SKD_DIR_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS TURN_SKD_DIR_CD2" ).append("\n"); 
		query.append("                                  , T1.CNTR_DZN_CAPA" ).append("\n"); 
		query.append("                                  , T1.RF_RCPT_MAX_KNT" ).append("\n"); 
		query.append("                                  ,  CASE" ).append("\n"); 
		query.append("                                     WHEN T3.VPS_PORT_CD IN ('EGSUZ', 'PAPAC') THEN" ).append("\n"); 
		query.append("                                          LAG(T5.CONTI_CD) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                     ELSE" ).append("\n"); 
		query.append("                                          T5.CONTI_CD" ).append("\n"); 
		query.append("                                     END     AS FM_CONTI_CD" ).append("\n"); 
		query.append("                                  ,  CASE" ).append("\n"); 
		query.append("                                     WHEN LEAD(T3.VPS_PORT_CD) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IN ('EGSUZ', 'PAPAC') THEN" ).append("\n"); 
		query.append("                                          T5.CONTI_CD" ).append("\n"); 
		query.append("                                     ELSE" ).append("\n"); 
		query.append("                                          LEAD(T5.CONTI_CD) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)" ).append("\n"); 
		query.append("                                     END     AS TO_CONTI_CD" ).append("\n"); 
		query.append("                          FROM    (" ).append("\n"); 
		query.append("                                  SELECT  T2.VSL_CD, T1.CNTR_DZN_CAPA, T1.RF_RCPT_MAX_KNT" ).append("\n"); 
		query.append("                                  FROM    MDM_VSL_CNTR        T1," ).append("\n"); 
		query.append("                                          FCM_VSL_CNTR_RGST   T2" ).append("\n"); 
		query.append("                                  WHERE   1=1" ).append("\n"); 
		query.append("                                  AND     T1.VSL_CD             = T2.VSL_CD" ).append("\n"); 
		query.append("                                  AND     T2.TRND_LINE_USE_FLG  = 'Y'" ).append("\n"); 
		query.append("                                  AND     'N'                   = NVL(T1.VSL_CLSS_FLG, ' ')" ).append("\n"); 
		query.append("                                  AND     T1.DELT_FLG           = 'N'" ).append("\n"); 
		query.append("                                  AND     T1.FDR_DIV_CD         = 'T'" ).append("\n"); 
		query.append("                                  #if (${vvd} != '')" ).append("\n"); 
		query.append("                                  AND     T1.VSL_CD             = SUBSTR(@[vvd], 1, 4)" ).append("\n"); 
		query.append("                                  #end" ).append("\n"); 
		query.append("                                  AND     T1.VSL_CD             IN (" ).append("\n"); 
		query.append("                                                                  SELECT  SUBSTR(MAX(S1.VSL_CD || TO_CHAR(EXP_DT, 'YYYYMMDD')), 1, 4)" ).append("\n"); 
		query.append("                                                                  FROM    FMS_CONTRACT S1" ).append("\n"); 
		query.append("                                                                  WHERE   1=1" ).append("\n"); 
		query.append("                                                                  AND     S1.FLET_CTRT_TP_CD  != 'TO'" ).append("\n"); 
		query.append("                                                                  AND     S1.EXP_DT           > TO_DATE('2011-08-01', 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                                                  GROUP BY S1.VSL_CD" ).append("\n"); 
		query.append("                                                                  )" ).append("\n"); 
		query.append("                                  #if (${vsl_class_list} != '')" ).append("\n"); 
		query.append("                                  AND     (" ).append("\n"); 
		query.append("                                           #foreach($cntr_dzn_capa in ${vsl_class_list} )" ).append("\n"); 
		query.append("                                               #if($velocityCount < $vsl_class_list.size()) " ).append("\n"); 
		query.append("                                          T1.CNTR_DZN_CAPA   = '$cntr_dzn_capa' OR" ).append("\n"); 
		query.append("                                               #else " ).append("\n"); 
		query.append("                                          T1.CNTR_DZN_CAPA   = '$cntr_dzn_capa'" ).append("\n"); 
		query.append("                                               #end" ).append("\n"); 
		query.append("                                           #end" ).append("\n"); 
		query.append("                                          )" ).append("\n"); 
		query.append("                                  #end" ).append("\n"); 
		query.append("                                  )                           T1" ).append("\n"); 
		query.append("                                  , VSK_VSL_SKD               T2 " ).append("\n"); 
		query.append("                                  , VSK_VSL_PORT_SKD          T3" ).append("\n"); 
		query.append("                                  , MDM_VSL_SVC_LANE_DIR      T4" ).append("\n"); 
		query.append("                                  , MDM_LOCATION              T5" ).append("\n"); 
		query.append("                          WHERE   1 = 1" ).append("\n"); 
		query.append("                          AND     T1.VSL_CD           = T2.VSL_CD" ).append("\n"); 
		query.append("                          AND     T2.VSL_CD           = T3.VSL_CD" ).append("\n"); 
		query.append("                          AND     T2.SKD_VOY_NO       = T3.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND     T2.SKD_DIR_CD       = T3.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND     T3.SLAN_CD          = T4.VSL_SLAN_CD" ).append("\n"); 
		query.append("                          AND     T3.SKD_DIR_CD       = T4.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("                          AND     T3.VPS_PORT_CD      = T5.LOC_CD" ).append("\n"); 
		query.append("                          AND     T3.VPS_ETB_DT       BETWEEN  ADD_MONTHS(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')) || SUBSTR(TO_CHAR(T3.VPS_ETB_DT, 'YYYYMMDDHH24MI'), 9, 4), 'YYYYMMDDHH24MI'), -1)" ).append("\n"); 
		query.append("                                                      AND      ADD_MONTHS(TO_DATE(NVL(REPLACE(@[curr_dt],'-'), TO_CHAR(SYSDATE, 'YYYYMMDD')) || SUBSTR(TO_CHAR(T3.VPS_ETB_DT, 'YYYYMMDDHH24MI'), 9, 4), 'YYYYMMDDHH24MI'),  1)" ).append("\n"); 
		query.append("                          AND     T3.TURN_PORT_IND_CD IN ('Y', 'N')" ).append("\n"); 
		query.append("                          AND     'S'                 <> NVL(T3.SKD_CNG_STS_CD, ' ')" ).append("\n"); 
		query.append("                          ) T1" ).append("\n"); 
		query.append("                  WHERE   1=1" ).append("\n"); 
		query.append("                  AND     T1.CST_NXT_PORT_CD IS NOT NULL" ).append("\n"); 
		query.append("                  AND     TO_DATE(NVL(REPLACE(@[curr_dt], '-'), TO_CHAR(SYSDATE, 'YYYYMMDD')) || TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS', SYSDATE, T1.CST_NXT_PORT_CD), 'HH24MI'), 'YYYYMMDDHH24MI')" ).append("\n"); 
		query.append("                          BETWEEN T1.VPS_ETB_DT        -- 입력한 날짜 + 도착 PORT Local HH24:MI로 조회 기준을 맞춤." ).append("\n"); 
		query.append("                          AND     T1.CST_NXT_PORT_ETA_DT" ).append("\n"); 
		query.append("                  #if (${vvd} != '')" ).append("\n"); 
		query.append("                  AND     T1.VSL_CD           = SUBSTR(@[vvd], 1, 4)" ).append("\n"); 
		query.append("                  AND     T1.SKD_VOY_NO       = SUBSTR(@[vvd], 5, 4)" ).append("\n"); 
		query.append("                  AND     T1.SKD_DIR_CD       = SUBSTR(@[vvd], 9, 1)" ).append("\n"); 
		query.append("                  #end" ).append("\n"); 
		query.append("                  #if (${vsl_slan_cd} != '')" ).append("\n"); 
		query.append("                  AND     T1.VSL_SLAN_CD      = @[vsl_slan_cd]" ).append("\n"); 
		query.append("                  #end" ).append("\n"); 
		query.append("                  )                                      T1" ).append("\n"); 
		query.append("                , FCM_NOON_RPT                           NR" ).append("\n"); 
		query.append("                , FCM_DEP_RPT                            DR" ).append("\n"); 
		query.append("                , VSK_VSL_ADD_SPEC                       AD" ).append("\n"); 
		query.append("                , VSK_VSL_LANE_LDB_CAPA                  LC" ).append("\n"); 
		query.append("        WHERE   1 = 1" ).append("\n"); 
		query.append("        AND     T1.VSL_CD               = NR.VSL_CD       (+)" ).append("\n"); 
		query.append("        AND     T1.SKD_VOY_NO           = NR.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("        AND     T1.SKD_DIR_CD           = NR.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("        AND     T1.CST_NXT_PORT_CD      = NR.NXT_PORT_CD  (+)" ).append("\n"); 
		query.append("        AND     T1.PK_NN_RPT_DT         = NR.NOON_RPT_DT  (+)" ).append("\n"); 
		query.append("        AND     T1.VSL_CD               = DR.VSL_CD       (+)" ).append("\n"); 
		query.append("        AND     T1.SKD_VOY_NO           = DR.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("        AND     T1.SKD_DIR_CD           = DR.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("        AND     T1.VPS_PORT_CD          = DR.DEP_PORT_CD  (+)" ).append("\n"); 
		query.append("        AND     T1.CST_NXT_PORT_CD      = DR.NXT_PORT_CD  (+)" ).append("\n"); 
		query.append("        AND     T1.VSL_CD               = AD.VSL_CD       (+)" ).append("\n"); 
		query.append("        AND     T1.VSL_SLAN_CD          = LC.VSL_SLAN_CD  (+)" ).append("\n"); 
		query.append("        AND     T1.CNTR_DZN_CAPA        = LC.CNTR_DZN_CAPA(+)" ).append("\n"); 
		query.append("        AND     1                       = LC.CAPA_SEQ     (+)" ).append("\n"); 
		query.append("        )  T1" ).append("\n"); 
		query.append("WHERE   1=1" ).append("\n"); 
		query.append("AND     T1.TO_PORT_CD      IS NOT NULL" ).append("\n"); 
		query.append("AND     T1.FROM_PORT_CD    <> T1.TO_PORT_CD" ).append("\n"); 
		query.append("#if (${curr_dt} != '')" ).append("\n"); 
		query.append("AND     DECODE(T1.NOON_RPT_DT,NULL,'y',TO_CHAR(T1.NOON_RPT_DT,'YYYYMMDD')) =" ).append("\n"); 
		query.append("        CASE" ).append("\n"); 
		query.append("        WHEN T1.NOON_RPT_DT IS NULL THEN" ).append("\n"); 
		query.append("             CASE" ).append("\n"); 
		query.append("             WHEN  (REPLACE(@[curr_dt],'-') >= TO_CHAR(T1.VPS_ETB_DT, 'YYYYMMDD') AND REPLACE(@[curr_dt],'-') <= TO_CHAR(T1.CST_NXT_PORT_ETA_DT,'YYYYMMDD')) THEN" ).append("\n"); 
		query.append("                    'y'" ).append("\n"); 
		query.append("             ELSE" ).append("\n"); 
		query.append("                    'X'" ).append("\n"); 
		query.append("             END " ).append("\n"); 
		query.append("        ELSE" ).append("\n"); 
		query.append("             TO_CHAR(T1.NOON_RPT_DT,'YYYYMMDD')" ).append("\n"); 
		query.append("        END" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("          -- Signal Index : GREEN,YELLOW,RED --" ).append("\n"); 
		query.append("#if (${signal_idx_green} != '' && ${signal_idx_yellow} != '' && ${signal_idx_red} != '')" ).append("\n"); 
		query.append("AND     1 = 1" ).append("\n"); 
		query.append("#elseif (${signal_idx_green} == '' && ${signal_idx_yellow} == '' && ${signal_idx_red} == '')" ).append("\n"); 
		query.append("AND     1 = 2" ).append("\n"); 
		query.append("#elseif (${signal_idx_green} != '' && ${signal_idx_yellow} != '')" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        T1.SKD_DELAY_COLOR_FLAG               IN (@[signal_idx_green],@[signal_idx_yellow]) OR" ).append("\n"); 
		query.append("        T1.NAVI_SPD_COLOR_FLAG                IN (@[signal_idx_green],@[signal_idx_yellow]) OR" ).append("\n"); 
		query.append("        T1.CSM_DAILY_FOC_COLOR_FLAG           IN (@[signal_idx_green],@[signal_idx_yellow])" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#elseif (${signal_idx_green} != '' && ${signal_idx_red} != '')" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        T1.SKD_DELAY_COLOR_FLAG               IN (@[signal_idx_green],@[signal_idx_red]) OR" ).append("\n"); 
		query.append("        T1.NAVI_SPD_COLOR_FLAG                IN (@[signal_idx_green],@[signal_idx_red]) OR" ).append("\n"); 
		query.append("        T1.CSM_DAILY_FOC_COLOR_FLAG           IN (@[signal_idx_green],@[signal_idx_red])" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#elseif (${signal_idx_yellow} != '' && ${signal_idx_red} != '')" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        T1.SKD_DELAY_COLOR_FLAG               IN (@[signal_idx_yellow],@[signal_idx_red]) OR" ).append("\n"); 
		query.append("        T1.NAVI_SPD_COLOR_FLAG                IN (@[signal_idx_yellow],@[signal_idx_red]) OR" ).append("\n"); 
		query.append("        T1.CSM_DAILY_FOC_COLOR_FLAG           IN (@[signal_idx_yellow],@[signal_idx_red])" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#elseif (${signal_idx_green} != '')" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        T1.SKD_DELAY_COLOR_FLAG               = @[signal_idx_green] OR" ).append("\n"); 
		query.append("        T1.NAVI_SPD_COLOR_FLAG                = @[signal_idx_green] OR" ).append("\n"); 
		query.append("        T1.CSM_DAILY_FOC_COLOR_FLAG           = @[signal_idx_green]" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#elseif (${signal_idx_yellow} != '')" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        T1.SKD_DELAY_COLOR_FLAG               = @[signal_idx_yellow] OR" ).append("\n"); 
		query.append("        T1.NAVI_SPD_COLOR_FLAG                = @[signal_idx_yellow] OR" ).append("\n"); 
		query.append("        T1.CSM_DAILY_FOC_COLOR_FLAG           = @[signal_idx_yellow]" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#elseif (${signal_idx_red} != '')" ).append("\n"); 
		query.append("AND     (" ).append("\n"); 
		query.append("        T1.SKD_DELAY_COLOR_FLAG                 = @[signal_idx_red] OR" ).append("\n"); 
		query.append("        T1.NAVI_SPD_COLOR_FLAG                  = @[signal_idx_red] OR" ).append("\n"); 
		query.append("        T1.CSM_DAILY_FOC_COLOR_FLAG             = @[signal_idx_red]" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("           -- Port Pair --" ).append("\n"); 
		query.append("#if (${vsl_port_list} != '')" ).append("\n"); 
		query.append("AND    (T1.FROM_PORT_CD, T1.TO_PORT_CD) IN (" ).append("\n"); 
		query.append("      #foreach($vsl_port in ${vsl_port_list} )" ).append("\n"); 
		query.append("          #if($velocityCount < $vsl_port_list.size())" ).append("\n"); 
		query.append("        (SUBSTR('$vsl_port',1,5),SUBSTR('$vsl_port',9,5)) ," ).append("\n"); 
		query.append("          #else" ).append("\n"); 
		query.append("        (SUBSTR('$vsl_port',1,5),SUBSTR('$vsl_port',9,5))" ).append("\n"); 
		query.append("          #end" ).append("\n"); 
		query.append("      #end" ).append("\n"); 
		query.append("      )" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${vvd} != '')" ).append("\n"); 
		query.append("ORDER BY  T1.CLPT_SEQ           ASC" ).append("\n"); 
		query.append("        , T1.NOON_RPT_DT        ASC" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("ORDER BY  T1.VSL_CD             ASC" ).append("\n"); 
		query.append("        , T1.SKD_VOY_NO         ASC" ).append("\n"); 
		query.append("        , T1.SKD_DIR_CD         ASC" ).append("\n"); 
		query.append("        , T1.FROM_PORT_CD       ASC" ).append("\n"); 
		query.append("        , T1.TO_PORT_CD         ASC" ).append("\n"); 
		query.append("        , T1.VPS_ETB_DT         ASC" ).append("\n"); 
		query.append("#end" ).append("\n"); 

	}
}