<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TerminalDepartureReportDBDAODischImportTotalVORSQL">
			<desc><![CDATA[Import Bkg Total

1. 2012.12.03 CHM-201221299-01 이혜민 신규 장비 R8,R9 을 40’HC으로 분류하여 CBF 및 COD 메뉴에 반영

2. 2012.12.10 [CHM-201221836] 이수진 TOR: Load/Discharge Vol 을 Bkg data에서 Import시 source 변경
   1) Vol 산정 기준 : 기존 BKG 단위에서 CNTR 단위로 변경
   2) Weight 산정 기준 : 기존 Cargo 무게에서 Cargo 무게 + CNTR 무게 합으로 변경]]></desc>
			<sql><![CDATA[
SELECT 'SML' OPR_CD, 
       @[port_cd] AS POD_CD,
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 1, NULL), NULL), NULL)) FULL_BO_20, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '3', 1, NULL), NULL), NULL)) FULL_BO_2H, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '4', 1, NULL), NULL), NULL)) FULL_BO_40, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '5', 1, CASE WHEN CNTR_TPSZ_CD IN ('R8', 'R9') THEN 1 ELSE NULL END), NULL), NULL)) FULL_BO_4H, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '7', 1, NULL), NULL), NULL)) FULL_BO_45,
	   SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'X', 1, NULL), NULL), NULL)) FULL_BO_DX, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 1, NULL),  NULL))) FULL_TS_20, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '3', 1, NULL),  NULL))) FULL_TS_2H, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '4', 1, NULL),  NULL))) FULL_TS_40, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '5', 1, CASE WHEN CNTR_TPSZ_CD IN ('R8', 'R9') THEN 1 ELSE NULL END),  NULL))) FULL_TS_4H, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '7', 1, NULL),  NULL))) FULL_TS_45, 
	   SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'X', 1, NULL),  NULL))) FULL_TS_DX,
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 1, NULL)), NULL)) ET_BO_20, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '3', 1, NULL)), NULL)) ET_BO_2H, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '4', 1, NULL)), NULL)) ET_BO_40, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '5', 1, CASE WHEN CNTR_TPSZ_CD IN ('R8', 'R9') THEN 1 ELSE NULL END)), NULL)) ET_BO_4H, 
       SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '7', 1, NULL)), NULL)) ET_BO_45, 
	   SUM(DECODE(VVD_POD, BKG_POD, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'X', 1, NULL)), NULL)) ET_BO_DX,
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', 1, NULL)))) ET_TS_20, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '3', 1, NULL)))) ET_TS_2H, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '4', 1, NULL)))) ET_TS_40, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '5', 1, CASE WHEN CNTR_TPSZ_CD IN ('R8', 'R9') THEN 1 ELSE NULL END)))) ET_TS_4H, 
       SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '7', 1, NULL)))) ET_TS_45, 
	   SUM(DECODE(VVD_POD, BKG_POD, NULL, DECODE(BKG_CGO_TP_CD, 'F', NULL, DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'X', 1, NULL)))) ET_TS_DX,
       ROUND(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '2', CNTR_WGT, NULL)) / 1000, 1)                                									WT_20, 
       ROUND(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '3', CNTR_WGT, NULL)) / 1000, 1)                               										WT_2H, 
       ROUND(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '4', CNTR_WGT, NULL)) / 1000, 1)                                									WT_40, 
       ROUND(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '5', CNTR_WGT, CASE WHEN CNTR_TPSZ_CD IN ('R8', 'R9') THEN CNTR_WGT ELSE NULL END)) / 1000, 1)      WT_4H, 
       ROUND(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), '7', CNTR_WGT, NULL)) / 1000, 1)                                									WT_45,
	   ROUND(SUM(DECODE(SUBSTR(CNTR_TPSZ_CD, 2, 1), 'X', CNTR_WGT, NULL)) / 1000, 1)                                                                    WT_DX
FROM   (

	SELECT  XX.VVD_POD
	     ,  XX.BKG_POD
	     ,  XX.BKG_CGO_TP_CD
	     ,  XX.CNTR_TPSZ_CD
	     ,  XX.CNTR_NO
	     ,  CNTR_WGT + (SELECT C.CNTR_TPSZ_TARE_WGT FROM MDM_CNTR_TP_SZ C WHERE C.CNTR_TPSZ_CD = XX.CNTR_TPSZ_CD)  CNTR_WGT
	FROM   (
	
		 SELECT 
				    V.POD_CD VVD_POD
	    		,  	B.POD_CD BKG_POD
	    		,  	B.BKG_CGO_TP_CD
	    		,  	C.CNTR_TPSZ_CD
	    		,  	C.CNTR_NO
	    		,  	SUM(DECODE(C.WGT_UT_CD,'KGS',C.CNTR_WGT,'LBS',C.CNTR_WGT*0.453599,C.CNTR_WGT)) CNTR_WGT   -- BKG_CONTAINER.CNTR_WGT <== CARGO WEIGHT, CNTR TARE WEIGHT 미적용상태임 --
	         FROM   VSK_VSL_PORT_SKD 	S
		      ,  	BKG_VVD 			V
		      ,  	BKG_CONTAINER 		C
		      ,  	BKG_BOOKING 		B
	         WHERE  S.VSL_CD       		= @[vsl_cd] 
	         AND    S.SKD_VOY_NO   		= @[voy_no] 
	         AND    S.SKD_DIR_CD   		= @[dir_cd] 
	         AND    S.YD_CD        		= @[yd_cd] 
	         AND    S.CLPT_IND_SEQ 		= @[clpt_ind_seq]
	         AND    S.VSL_CD       		= V.VSL_CD
	         AND    S.SKD_VOY_NO   		= V.SKD_VOY_NO
	         AND    S.SKD_DIR_CD   		= V.SKD_DIR_CD
	         AND    S.VPS_PORT_CD  		= V.POD_CD
	         AND    S.CLPT_IND_SEQ 		= NVL(V.POD_CLPT_IND_SEQ, 1)
	         AND    V.BKG_NO       		= C.BKG_NO
	         AND    V.BKG_NO       		= B.BKG_NO
	         AND    NVL(B.BKG_STS_CD, 'N') NOT IN ('X', 'A')		
		GROUP BY 
	       			V.POD_CD
	    		,  	B.POD_CD
	    		,  	B.BKG_CGO_TP_CD
	   		    ,  	C.CNTR_TPSZ_CD
	    		,  	C.CNTR_NO
	
	         UNION ALL
	
		 SELECT 
				    V.POD_CD VVD_POD
	    		,  	B.POD_CD BKG_POD
	    		,  	B.BKG_CGO_TP_CD
	    		,  	C.CNTR_TPSZ_CD
	    		,  	C.CNTR_NO
	    		,  	SUM(DECODE(C.WGT_UT_CD,'KGS',C.CNTR_WGT,'LBS',C.CNTR_WGT*0.453599,C.CNTR_WGT)) CNTR_WGT
	         FROM   VSK_VSL_PORT_SKD 	S
		      ,  	BKG_VVD 			V
		      ,  	BKG_CONTAINER 		C
		      ,  	BKG_BOOKING 		B
	         WHERE  S.VSL_CD            = @[vsl_cd] 
	         AND    S.SKD_VOY_NO        = @[voy_no] 
	         AND    S.SKD_DIR_CD        = @[dir_cd] 
	         AND    S.YD_CD             = @[yd_cd] 
	         AND    S.CLPT_IND_SEQ 		= @[clpt_ind_seq]
	         AND    S.TURN_PORT_FLG     = 'Y'
	         AND    S.VSL_CD            = V.VSL_CD
	         AND    S.TURN_SKD_VOY_NO   = V.SKD_VOY_NO
	         AND    S.TURN_SKD_DIR_CD   = V.SKD_DIR_CD
	         AND    S.VPS_PORT_CD       = V.POD_CD
	         AND    S.TURN_CLPT_IND_SEQ = NVL(V.POD_CLPT_IND_SEQ, 1)
	         AND    V.BKG_NO            = C.BKG_NO
	         AND    V.BKG_NO            = B.BKG_NO
	         AND    NVL(B.BKG_STS_CD, 'N') NOT IN ('X', 'A') 	
		GROUP BY 
	       			V.POD_CD
	    		,  	B.POD_CD
	    		,  	B.BKG_CGO_TP_CD
	   		    ,  	C.CNTR_TPSZ_CD
	    		,  	C.CNTR_NO
	
	       ) XX   
       )
ORDER BY OPR_CD, POD_CD			]]></sql>
			<params>
				<param name="port_cd" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="voy_no" type="12" value="" out="N"/>
				<param name="dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
