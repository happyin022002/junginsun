/*=========================================================
*Copyright(c) 2015 CyberLogitec
*@FileName : OpfStowageMgtDBDAOBayPlanListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2015.12.28
*@LastModifier : 
*@LastVersion : 1.0
* 2015.12.28 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.opf.opfstowagemgt.opfstowagemgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class OpfStowageMgtDBDAOBayPlanListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * OpfStowageMgtDBDAOBayPlanList
	  * </pre>
	  */
	public OpfStowageMgtDBDAOBayPlanListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("dh_tp",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("port_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_dir_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("cntr_id",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("skd_voy_no",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("call_ind",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("bay_idx",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.opf.opfstowagemgt.opfstowagemgt.integration").append("\n"); 
		query.append("FileName : OpfStowageMgtDBDAOBayPlanListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("SELECT  --DECODE(TR_NM,'99','','00','',TR_NM) AS TR_NM" ).append("\n"); 
		query.append("		#if (${dh_tp} == 'D')   -- On Deck" ).append("\n"); 
		query.append("        	TR_NM AS ON_TR_NM_F" ).append("\n"); 
		query.append("        	, TR_NM AS ON_TR_NM_B" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_0),'') AS ON_ROW_0" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_1),'') AS ON_ROW_1" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_2),'') AS ON_ROW_2" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_3),'') AS ON_ROW_3" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_4),'') AS ON_ROW_4" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_5),'') AS ON_ROW_5" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_6),'') AS ON_ROW_6" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_7),'') AS ON_ROW_7" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_8),'') AS ON_ROW_8" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_9),'') AS ON_ROW_9" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_10),'') AS ON_ROW_10" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_11),'') AS ON_ROW_11" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_12),'') AS ON_ROW_12" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_13),'') AS ON_ROW_13" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_14),'') AS ON_ROW_14" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_15),'') AS ON_ROW_15" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_16),'') AS ON_ROW_16" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_17),'') AS ON_ROW_17" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_18),'') AS ON_ROW_18" ).append("\n"); 
		query.append("		#else   -- Under Deck" ).append("\n"); 
		query.append("        	TR_NM AS UNDER_TR_NM_F" ).append("\n"); 
		query.append("        	, TR_NM AS UNDER_TR_NM_B" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_0),'') AS UNDER_ROW_0" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_1),'') AS UNDER_ROW_1" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_2),'') AS UNDER_ROW_2" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_3),'') AS UNDER_ROW_3" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_4),'') AS UNDER_ROW_4" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_5),'') AS UNDER_ROW_5" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_6),'') AS UNDER_ROW_6" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_7),'') AS UNDER_ROW_7" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_8),'') AS UNDER_ROW_8" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_9),'') AS UNDER_ROW_9" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_10),'') AS UNDER_ROW_10" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_11),'') AS UNDER_ROW_11" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_12),'') AS UNDER_ROW_12" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_13),'') AS UNDER_ROW_13" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_14),'') AS UNDER_ROW_14" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_15),'') AS UNDER_ROW_15" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_16),'') AS UNDER_ROW_16" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_17),'') AS UNDER_ROW_17" ).append("\n"); 
		query.append("        	, NVL(MAX(ROW_18),'') AS UNDER_ROW_18" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("FROM    (SELECT  TR_NM" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'0',MAX(ID)) AS ROW_0" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'1',MAX(ID)) AS ROW_1" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'2',MAX(ID)) AS ROW_2" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'3',MAX(ID)) AS ROW_3" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'4',MAX(ID)) AS ROW_4" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'5',MAX(ID)) AS ROW_5" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'6',MAX(ID)) AS ROW_6" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'7',MAX(ID)) AS ROW_7" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'8',MAX(ID)) AS ROW_8" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'9',MAX(ID)) AS ROW_9" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'10',MAX(ID)) AS ROW_10" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'11',MAX(ID)) AS ROW_11" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'12',MAX(ID)) AS ROW_12" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'13',MAX(ID)) AS ROW_13" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'14',MAX(ID)) AS ROW_14" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'15',MAX(ID)) AS ROW_15" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'16',MAX(ID)) AS ROW_16" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'17',MAX(ID)) AS ROW_17" ).append("\n"); 
		query.append("                , DECODE(ROW_IDX,'18',MAX(ID)) AS ROW_18" ).append("\n"); 
		query.append("        FROM    (SELECT  MAIN.VSL, " ).append("\n"); 
		query.append("                        MAIN.BAY_IDX, MAIN.BAY_NM, " ).append("\n"); 
		query.append("                        MAIN.ROW_IDX, MAIN.ROW_NM, " ).append("\n"); 
		query.append("                        MAIN.TR_IDX, MAIN.TR_NM," ).append("\n"); 
		query.append("                        MAIN.VSL_CD," ).append("\n"); 
		query.append("                        MAIN.VOY_NO," ).append("\n"); 
		query.append("                        MAIN.DIR_CD," ).append("\n"); 
		query.append("                        --MAIN.ID," ).append("\n"); 
		query.append("                        DECODE(TRIM(MAIN.ID),'X'" ).append("\n"); 
		query.append("                                         ,(CASE WHEN (SELECT COUNT(ID) AS CNT" ).append("\n"); 
		query.append("                                                        FROM BAY_PLAN A" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                                                        AND VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("                                                        AND DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("                                                        AND PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                        AND CALL_IND = @[call_ind]" ).append("\n"); 
		query.append("                                                        AND BAY IN (SELECT BAY_NM" ).append("\n"); 
		query.append("                                                                    FROM TPL_VSL_STWG_BAY" ).append("\n"); 
		query.append("                                                                    WHERE 1=1" ).append("\n"); 
		query.append("                                                                    AND VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                                                                    AND HTCH_IDX = (SELECT HTCH_IDX" ).append("\n"); 
		query.append("                                                                                    FROM TPL_VSL_STWG_BAY" ).append("\n"); 
		query.append("                                                                                    WHERE 1=1" ).append("\n"); 
		query.append("                                                                                    AND VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                                                                                    AND BAY_NM = MAIN.BAY_NM" ).append("\n"); 
		query.append("                                                                                    )" ).append("\n"); 
		query.append("                                                                    AND BAY_NM != MAIN.BAY_NM" ).append("\n"); 
		query.append("                                                                    )" ).append("\n"); 
		query.append("                                                        AND ROWW = MAIN.ROW_NM" ).append("\n"); 
		query.append("                                                        AND TIER = MAIN.TR_NM" ).append("\n"); 
		query.append("                                                        ) > 0 THEN ID ELSE " ).append("\n"); 
		query.append("                                                                        CASE WHEN ((AKBB.OVH_BAY_NM=MAIN.BAY_NM) AND " ).append("\n"); 
		query.append("																					((AKBB.OVH_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM9=MAIN.TR_NM))" ).append("\n"); 
		query.append("                                                                                  )" ).append("\n"); 
		query.append("                                                                                THEN '▣'" ).append("\n"); 
		query.append("                                                                              WHEN ((AKBB.OVH_BAY_NM!=MAIN.BAY_NM) AND " ).append("\n"); 
		query.append("																					((AKBB.OVH_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("																					OR (AKBB.OVH_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVH_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVP_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVP_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVH_SLOT_OVS_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVH_SLOT_OVS_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVP_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVP_SLOT_TR_NM9=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM1=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM1=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM2=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM2=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM3=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM3=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM4=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM4=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM5=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM5=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM6=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM6=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM7=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM7=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM8=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM8=MAIN.TR_NM)" ).append("\n"); 
		query.append("                                                                                    OR (AKBB.OVS_SLOT_ROW_NM9=MAIN.ROW_NM AND AKBB.OVS_SLOT_TR_NM9=MAIN.TR_NM))" ).append("\n"); 
		query.append("                                                                                  )" ).append("\n"); 
		query.append("                                                                                THEN 'X'" ).append("\n"); 
		query.append("                                                                             ELSE '.'" ).append("\n"); 
		query.append("                                                                         END" ).append("\n"); 
		query.append("                                                                      END)" ).append("\n"); 
		query.append("                                         ,MAIN.ID) AS ID," ).append("\n"); 
		query.append("                        MAIN.CALL_IND," ).append("\n"); 
		query.append("                        MAIN.PORT_CNT," ).append("\n"); 
		query.append("                        MAIN.MAX_ROW_IDX," ).append("\n"); 
		query.append("                        MAIN.MAX_TR_IDX" ).append("\n"); 
		query.append("                FROM    (SELECT  CELL.VSL, " ).append("\n"); 
		query.append("                                CELL.BAY_IDX, CELL.BAY_NM, " ).append("\n"); 
		query.append("                                CELL.ROW_IDX, CELL.ROW_NM, " ).append("\n"); 
		query.append("                                CELL.TR_IDX, CELL.TR_NM," ).append("\n"); 
		query.append("                                PLAN.VSL_CD," ).append("\n"); 
		query.append("                                PLAN.VOY_NO," ).append("\n"); 
		query.append("                                PLAN.DIR_CD," ).append("\n"); 
		query.append("                                --NVL(PLAN.ID,'X') AS ID," ).append("\n"); 
		query.append("                                --DECODE(PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.ID,'____','X',PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.ID) AS ID," ).append("\n"); 
		query.append("                                --DECODE(PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_CNTR',PLAN.ID),'_____','X','______CNTR','X',PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_CNTR',PLAN.ID)) AS ID," ).append("\n"); 
		query.append("                                --DECODE(PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_0_0_255_CNTR',PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B),'________','X','______0_0_255_CNTR','X',PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_0_0_255_CNTR',PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B)) AS ID," ).append("\n"); 
		query.append("								--DECODE(PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_53_53_53_'||PLAN.CARGO_TYPE||'_CNTR',PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B||'_'||PLAN.CARGO_TYPE),'_________','X','______53_53_53_'||PLAN.CARGO_TYPE||'_CNTR','X',PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_53_53_53_'||PLAN.CARGO_TYPE||'_CNTR',PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B||'_'||PLAN.CARGO_TYPE)) AS ID," ).append("\n"); 
		query.append("								--DECODE(PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_53_53_53_'||PLAN.CARGO_TYPE||'_'||CELL.BAY_NM||'-'||CELL.ROW_NM||'-'||CELL.TR_NM||'_CNTR',PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B||'_'||PLAN.CARGO_TYPE)||'_'||CELL.BAY_NM||'-'||CELL.ROW_NM||'-'||CELL.TR_NM,'__________'||CELL.BAY_NM||'-'||CELL.ROW_NM||'-'||CELL.TR_NM,'X','______53_53_53_'||PLAN.CARGO_TYPE||'_'||CELL.BAY_NM||'-'||CELL.ROW_NM||'-'||CELL.TR_NM||'_CNTR','X',PLAN.POL||'_'||PLAN.POD||'_'||PLAN.OPR_CD||'_'||PLAN.WEIGHT||'_'||PLAN.SZTP||'_'||DECODE(PLAN.ID,[cntr_id],PLAN.ID||'_53_53_53_'||PLAN.CARGO_TYPE||'_'||CELL.BAY_NM||'-'||CELL.ROW_NM||'-'||CELL.TR_NM||'_CNTR',PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B||'_'||PLAN.CARGO_TYPE||'_'||CELL.BAY_NM||'-'||CELL.ROW_NM||'-'||CELL.TR_NM)) AS ID," ).append("\n"); 
		query.append("                                ' '||DECODE(CARGO_TYPE,'N','  ','EM','  ',CARGO_TYPE)||'      '||DECODE(DECODE(PLAN.ID,@[cntr_id],'_'||PLAN.ID||'_53_53_53_CNTR'" ).append("\n"); 
		query.append("                                                                                                                       ,'_'||PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B)" ).append("\n"); 
		query.append("                                                                                                ,'____','X'" ).append("\n"); 
		query.append("                                                                                                ,'__53_53_53__CNTR','X'" ).append("\n"); 
		query.append("                                                                                                ,DECODE(PLAN.ID,@[cntr_id],'_'||PLAN.ID||'_53_53_53_CNTR'" ).append("\n"); 
		query.append("                                                                                                                          ,'_'||PLAN.ID||'_'||COLOR.BG_COLR_R||'_'||COLOR.BG_COLR_G||'_'||COLOR.BG_COLR_B)" ).append("\n"); 
		query.append("                                                                                        ) AS ID," ).append("\n"); 
		query.append("                                " ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                                PLAN.CALL_IND," ).append("\n"); 
		query.append("                                COUNT(PLAN.PORT_CD) AS PORT_CNT," ).append("\n"); 
		query.append("                                MAX(ROW_IDX) AS MAX_ROW_IDX," ).append("\n"); 
		query.append("                                MAX(TR_IDX) AS MAX_TR_IDX" ).append("\n"); 
		query.append("                        FROM CDV_VESSEL VESSEL --2" ).append("\n"); 
		query.append("                            , TPL_VSL_STWG_BAY BAY --3" ).append("\n"); 
		query.append("                            , TPL_VSL_STWG_CELL CELL --4" ).append("\n"); 
		query.append("                            --, BAY_PLAN PLAN --5" ).append("\n"); 
		query.append("                            , (SELECT *" ).append("\n"); 
		query.append("                                FROM BAY_PLAN " ).append("\n"); 
		query.append("                                WHERE 1=1" ).append("\n"); 
		query.append("                                AND (VSL_CD, VOY_NO, DIR_CD, PORT_CD, ID, CALL_IND, PLAN_TYPE) IN (SELECT VSL_CD, VOY_NO, DIR_CD, PORT_CD, ID, CALL_IND" ).append("\n"); 
		query.append("                                                                                                           , CASE WHEN COUNT(PLAN_TYPE) > 1 THEN 'E' ELSE 'F' END AS PLAN_TYPE" ).append("\n"); 
		query.append("                                                                                                    FROM BAY_PLAN A" ).append("\n"); 
		query.append("                                                                                                    WHERE 1=1" ).append("\n"); 
		query.append("                                                                                                    AND VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                                                                                                    AND VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("                                                                                                    AND DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("                                                                                                    AND PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                                                    AND CALL_IND = @[call_ind]" ).append("\n"); 
		query.append("                                                                                                    GROUP BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, ID, CALL_IND" ).append("\n"); 
		query.append("                                                                                                    )" ).append("\n"); 
		query.append("                            ) PLAN" ).append("\n"); 
		query.append("                        , (SELECT FAVORITE_CD AS PORT_CD," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(FRGRND_COLR_CTNT, 2, LENGTH(FRGRND_COLR_CTNT)-2), '[^,]+', 1, 1) FR_COLR_R," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(FRGRND_COLR_CTNT, 2, LENGTH(FRGRND_COLR_CTNT)-2), '[^,]+', 1, 2) FR_COLR_G," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(FRGRND_COLR_CTNT, 2, LENGTH(FRGRND_COLR_CTNT)-2), '[^,]+', 1, 3) FR_COLR_B," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(BG_COLR_CTNT, 2, LENGTH(BG_COLR_CTNT)-2), '[^,]+', 1, 1) BG_COLR_R," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(BG_COLR_CTNT, 2, LENGTH(BG_COLR_CTNT)-2), '[^,]+', 1, 2) BG_COLR_G," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(BG_COLR_CTNT, 2, LENGTH(BG_COLR_CTNT)-2), '[^,]+', 1, 3) BG_COLR_B" ).append("\n"); 
		query.append("                                FROM STO_CD_LANE_FVRT" ).append("\n"); 
		query.append("                                WHERE LANE_CD = 'NE3' --LANE CODE" ).append("\n"); 
		query.append("                                  AND CATE_CD = 'PORT'" ).append("\n"); 
		query.append("                                UNION ALL" ).append("\n"); 
		query.append("                                SELECT PORT_CD," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(PORT_FRGRND_COLR_CTNT, 2, LENGTH(PORT_FRGRND_COLR_CTNT)-2), '[^,]+', 1, 1) FR_COLR_R," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(PORT_FRGRND_COLR_CTNT, 2, LENGTH(PORT_FRGRND_COLR_CTNT)-2), '[^,]+', 1, 2) FR_COLR_G," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(PORT_FRGRND_COLR_CTNT, 2, LENGTH(PORT_FRGRND_COLR_CTNT)-2), '[^,]+', 1, 3) FR_COLR_B," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(PORT_BG_COLR_CTNT, 2, LENGTH(PORT_BG_COLR_CTNT)-2), '[^,]+', 1, 1) BG_COLR_R," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(PORT_BG_COLR_CTNT, 2, LENGTH(PORT_BG_COLR_CTNT)-2), '[^,]+', 1, 2) BG_COLR_G," ).append("\n"); 
		query.append("                                  REGEXP_SUBSTR(SUBSTR(PORT_BG_COLR_CTNT, 2, LENGTH(PORT_BG_COLR_CTNT)-2), '[^,]+', 1, 3) BG_COLR_B" ).append("\n"); 
		query.append("                                FROM STO_CD_PORT" ).append("\n"); 
		query.append("                                WHERE NOT EXISTS (" ).append("\n"); 
		query.append("                                    SELECT *" ).append("\n"); 
		query.append("                                    FROM STO_CD_LANE_FVRT" ).append("\n"); 
		query.append("                                    WHERE LANE_CD = 'NE3' --LANE CODE" ).append("\n"); 
		query.append("                                      AND CATE_CD = 'PORT'" ).append("\n"); 
		query.append("                                      AND PORT_CD = FAVORITE_CD)" ).append("\n"); 
		query.append("                        ) COLOR                            " ).append("\n"); 
		query.append("                        WHERE 1=1" ).append("\n"); 
		query.append("                        AND VESSEL.CDV_VSL_CODE = @[vsl_cd]" ).append("\n"); 
		query.append("                        AND VESSEL.CDV_VSL_CODE = BAY.VSL_CD" ).append("\n"); 
		query.append("                        AND BAY.VSL_CD = CELL.VSL" ).append("\n"); 
		query.append("                        AND BAY.BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                        --AND BAY.BAY_IDX = [bay_idx]" ).append("\n"); 
		query.append("                        AND BAY.BAY_NM = @[bay_idx]" ).append("\n"); 
		query.append("                        AND CELL.DH_TP = @[dh_tp]" ).append("\n"); 
		query.append("                        --                AND CELL.DH_TP = 'D'" ).append("\n"); 
		query.append("                        AND CELL.TR_IDX != -1" ).append("\n"); 
		query.append("                        /*AND CELL.VSL = PLAN.VSL_CD(+)*/" ).append("\n"); 
		query.append("                        AND CELL.BAY_NM = PLAN.BAY(+)" ).append("\n"); 
		query.append("                        AND CELL.ROW_NM = PLAN.ROWW(+)" ).append("\n"); 
		query.append("                        AND CELL.TR_NM = PLAN.TIER(+)" ).append("\n"); 
		query.append("                        AND PLAN.POD = COLOR.PORT_CD(+)" ).append("\n"); 
		query.append("                        --AND PLAN.VSL_CD = ''" ).append("\n"); 
		query.append("                        /*AND PLAN.VOY_NO(+) = [skd_voy_no]*/" ).append("\n"); 
		query.append("                        /*AND PLAN.DIR_CD(+) = [skd_dir_cd]*/" ).append("\n"); 
		query.append("                        GROUP BY CELL.VSL, " ).append("\n"); 
		query.append("                                CELL.BAY_IDX, CELL.BAY_NM, " ).append("\n"); 
		query.append("                                CELL.ROW_IDX, CELL.ROW_NM, " ).append("\n"); 
		query.append("                                CELL.TR_IDX, CELL.TR_NM," ).append("\n"); 
		query.append("                                PLAN.VSL_CD," ).append("\n"); 
		query.append("                                PLAN.VOY_NO," ).append("\n"); 
		query.append("                                PLAN.DIR_CD," ).append("\n"); 
		query.append("                                PLAN.ID," ).append("\n"); 
		query.append("                                PLAN.CALL_IND," ).append("\n"); 
		query.append("                                PLAN.POL," ).append("\n"); 
		query.append("                                PLAN.POD," ).append("\n"); 
		query.append("                                PLAN.OPR_CD," ).append("\n"); 
		query.append("                                PLAN.WEIGHT," ).append("\n"); 
		query.append("                                PLAN.SZTP," ).append("\n"); 
		query.append("								PLAN.CARGO_TYPE," ).append("\n"); 
		query.append("        						COLOR.BG_COLR_R," ).append("\n"); 
		query.append("        						COLOR.BG_COLR_G," ).append("\n"); 
		query.append("        						COLOR.BG_COLR_B" ).append("\n"); 
		query.append("                        ORDER BY TR_IDX, ROW_IDX" ).append("\n"); 
		query.append("                        ) MAIN" ).append("\n"); 
		query.append("                        ,(SELECT  /***********************************************[1-S]*/" ).append("\n"); 
		query.append("                                CELL.BAY_NM AS OVH_BAY_NM," ).append("\n"); 
		query.append("                                -- 1-1.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM1," ).append("\n"); 
		query.append("                                -- 1-1.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-1" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM1," ).append("\n"); 
		query.append("                                -- 1-2.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 1" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM2," ).append("\n"); 
		query.append("                                -- 1-2.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 1" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-2" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM2," ).append("\n"); 
		query.append("                                -- 1-3.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 2" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM3," ).append("\n"); 
		query.append("                                -- 1-3.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 2" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-3" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM3," ).append("\n"); 
		query.append("                                -- 1-4.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 3" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM4," ).append("\n"); 
		query.append("                                -- 1-4.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 3" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-4" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM4," ).append("\n"); 
		query.append("                                -- 1-5.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 4" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM5," ).append("\n"); 
		query.append("                                -- 1-5.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 4" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-5" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM5," ).append("\n"); 
		query.append("                                -- 1-6.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 5" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM6," ).append("\n"); 
		query.append("                                -- 1-6.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 5" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-6" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM6," ).append("\n"); 
		query.append("                                -- 1-7.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 6" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM7," ).append("\n"); 
		query.append("                                -- 1-7.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 6" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-7" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM7," ).append("\n"); 
		query.append("                                -- 1-8.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 7" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM8," ).append("\n"); 
		query.append("                                -- 1-8.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 7" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-8" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM8," ).append("\n"); 
		query.append("                                -- 1-9.[세로:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 8" ).append("\n"); 
		query.append("                                                THEN CELL.ROW_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_ROW_NM9," ).append("\n"); 
		query.append("                                -- 1-9.[세로:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 8" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-9" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_TR_NM9," ).append("\n"); 
		query.append("                                /***********************************************[1-E]*/" ).append("\n"); 
		query.append("                                /***********************************************[2-S]*/" ).append("\n"); 
		query.append("                                -- 2-1.[세로:ROW:왼쪽] : 1~9까지 같음" ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM1," ).append("\n"); 
		query.append("                                -- 2-1.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-1" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM1," ).append("\n"); 
		query.append("                                -- 2-2.[세로:ROW:왼쪽] : 1~9까지 같음 " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM2," ).append("\n"); 
		query.append("                                -- 2-2.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 1" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-2" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM2," ).append("\n"); 
		query.append("                                -- 2-3.[세로:ROW:왼쪽] : 1~9까지 같음 " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM3," ).append("\n"); 
		query.append("                                -- 2-3.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 2" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-3" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM3," ).append("\n"); 
		query.append("                                -- 2-4.[세로:ROW:왼쪽]  : 1~9까지 같음" ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM4," ).append("\n"); 
		query.append("                                -- 2-4.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 3" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-4" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM4," ).append("\n"); 
		query.append("                                -- 2-5.[세로:ROW:왼쪽] : 1~9까지 같음 " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM5," ).append("\n"); 
		query.append("                                -- 2-5.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 4" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-5" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM5," ).append("\n"); 
		query.append("                                -- 2-6.[세로:ROW:왼쪽] : 1~9까지 같음 " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM6," ).append("\n"); 
		query.append("                                -- 2-6.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 5" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-6" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM6," ).append("\n"); 
		query.append("                                -- 2-7.[세로:ROW:왼쪽] : 1~9까지 같음 " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM7," ).append("\n"); 
		query.append("                                -- 2-7.[세로:TIER:왼쪽]" ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 6" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-7" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM7," ).append("\n"); 
		query.append("                                -- 2-8.[세로:ROW:왼쪽] : 1~9까지 같음  " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM8," ).append("\n"); 
		query.append("                                -- 2-8.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 7" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-8" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM8," ).append("\n"); 
		query.append("                                -- 2-9.[세로:ROW:왼쪽] : 1~9까지 같음  " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVP_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_ROW_NM9," ).append("\n"); 
		query.append("                                -- 2-9.[세로:TIER:왼쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 8" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-9" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVP_SLOT_TR_NM9," ).append("\n"); 
		query.append("                                /***********************************************[2-E]*/" ).append("\n"); 
		query.append("                                /***********************************************[3-S]*/" ).append("\n"); 
		query.append("                                -- 3-1.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM1," ).append("\n"); 
		query.append("                                -- 3-1.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-1" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM1," ).append("\n"); 
		query.append("                                -- 3-2.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM2," ).append("\n"); 
		query.append("                                -- 3-2.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 1" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-2" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM2," ).append("\n"); 
		query.append("                                -- 3-3.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM3," ).append("\n"); 
		query.append("                                -- 3-3.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 2" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-3" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM3," ).append("\n"); 
		query.append("                                -- 3-4.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM4," ).append("\n"); 
		query.append("                                -- 3-4.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 3" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-4" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM4," ).append("\n"); 
		query.append("                                -- 3-5.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM5," ).append("\n"); 
		query.append("                                -- 3-5.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 4" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-5" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM5," ).append("\n"); 
		query.append("                                -- 3-6.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM6," ).append("\n"); 
		query.append("                                -- 3-6.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 5" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-6" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM6," ).append("\n"); 
		query.append("                                -- 3-7.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM7," ).append("\n"); 
		query.append("                                -- 3-7.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 6" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-7" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM7," ).append("\n"); 
		query.append("                                -- 3-8.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM8," ).append("\n"); 
		query.append("                                -- 3-8.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 7" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-8" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM8," ).append("\n"); 
		query.append("                                -- 3-9.[세로:ROW:오른쪽] : 1~9까지 같음   " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN (MAX(OVH_SLOT) > 0 AND MAX(OVS_SLOT) > 0)" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_ROW_NM9," ).append("\n"); 
		query.append("                                -- 3-9.[세로:TIER:오른쪽] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVH_SLOT) > 8" ).append("\n"); 
		query.append("                                                THEN (SELECT TR_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX-9" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVH_SLOT_OVS_SLOT_TR_NM9," ).append("\n"); 
		query.append("                                /***********************************************[3-E]*/" ).append("\n"); 
		query.append("                                /***********************************************[4-S]*/" ).append("\n"); 
		query.append("                                -- 4-1.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM1," ).append("\n"); 
		query.append("                                -- 4-1.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM1," ).append("\n"); 
		query.append("                                -- 4-2.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 1" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-2" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM2," ).append("\n"); 
		query.append("                                -- 4-2.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM2," ).append("\n"); 
		query.append("                                -- 4-3.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 2" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-3" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM3," ).append("\n"); 
		query.append("                                -- 4-3.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM3," ).append("\n"); 
		query.append("                                -- 4-4.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 3" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-4" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM4," ).append("\n"); 
		query.append("                                -- 4-4.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM4," ).append("\n"); 
		query.append("                                -- 4-5.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 4" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-5" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM5," ).append("\n"); 
		query.append("                                -- 4-5.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM5," ).append("\n"); 
		query.append("                                -- 4-6.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 5" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-6" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM6," ).append("\n"); 
		query.append("                                -- 4-6.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM6," ).append("\n"); 
		query.append("                                -- 4-7.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 6" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-7" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM7," ).append("\n"); 
		query.append("                                -- 4-7.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM7," ).append("\n"); 
		query.append("                                -- 4-8.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 7" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-8" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM8," ).append("\n"); 
		query.append("                                -- 4-8.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM8," ).append("\n"); 
		query.append("                                -- 4-9.[가로:왼쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 8" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX-9" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_ROW_NM9," ).append("\n"); 
		query.append("                                -- 4-9.[가로:왼쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVP_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVP_SLOT_TR_NM9," ).append("\n"); 
		query.append("                                /***********************************************[4-E]*/" ).append("\n"); 
		query.append("                                /***********************************************[5-S]*/" ).append("\n"); 
		query.append("                                -- 5-1.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+1" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM1," ).append("\n"); 
		query.append("                                -- 5-1.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM1," ).append("\n"); 
		query.append("                                -- 5-2.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 1" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+2" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM2," ).append("\n"); 
		query.append("                                -- 5-2.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM2," ).append("\n"); 
		query.append("                                -- 5-3.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 2" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+3" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM3," ).append("\n"); 
		query.append("                                -- 5-3.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM3," ).append("\n"); 
		query.append("                                -- 5-4.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 3" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+4" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM4," ).append("\n"); 
		query.append("                                -- 5-4.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM4," ).append("\n"); 
		query.append("                                -- 5-5.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 4" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+5" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM5," ).append("\n"); 
		query.append("                                -- 5-5.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM5," ).append("\n"); 
		query.append("                                -- 5-6.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 5" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+6" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM6," ).append("\n"); 
		query.append("                                -- 5-6.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM6," ).append("\n"); 
		query.append("                                -- 5-7.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 6" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+7" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM7," ).append("\n"); 
		query.append("                                -- 5-7.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM7," ).append("\n"); 
		query.append("                                -- 5-8.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 7" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+8" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM8," ).append("\n"); 
		query.append("                                -- 5-8.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM8," ).append("\n"); 
		query.append("                                -- 5-9.[가로:오른쪽:ROW] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 8" ).append("\n"); 
		query.append("                                                THEN (SELECT ROW_NM" ).append("\n"); 
		query.append("                                                        FROM TPL_VSL_STWG_CELL" ).append("\n"); 
		query.append("                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                        AND VSL= CELL.VSL" ).append("\n"); 
		query.append("                                                        AND BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                                                        AND ROW_IDX = CELL.ROW_IDX+9" ).append("\n"); 
		query.append("                                                        AND TR_IDX = CELL.TR_IDX" ).append("\n"); 
		query.append("                                                    )" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_ROW_NM9," ).append("\n"); 
		query.append("                                -- 5-9.[가로:오른쪽:TIER] " ).append("\n"); 
		query.append("                                CASE WHEN (MAX(PLAN.CARGO_TYPE)='AK' OR MAX(PLAN.CARGO_TYPE)='BB') " ).append("\n"); 
		query.append("                                        THEN" ).append("\n"); 
		query.append("                                            CASE WHEN MAX(OVS_SLOT) > 0" ).append("\n"); 
		query.append("                                                THEN CELL.TR_NM" ).append("\n"); 
		query.append("                                            ELSE '0' END                        " ).append("\n"); 
		query.append("                                    ELSE '0'" ).append("\n"); 
		query.append("                                END AS OVS_SLOT_TR_NM9" ).append("\n"); 
		query.append("                                /***********************************************[5-E]*/" ).append("\n"); 
		query.append("                        FROM CDV_VESSEL VESSEL --2" ).append("\n"); 
		query.append("                            , TPL_VSL_STWG_BAY BAY --3" ).append("\n"); 
		query.append("                            , TPL_VSL_STWG_CELL CELL --4" ).append("\n"); 
		query.append("                            , (SELECT *" ).append("\n"); 
		query.append("                                FROM BAY_PLAN " ).append("\n"); 
		query.append("                                WHERE 1=1" ).append("\n"); 
		query.append("                                AND (VSL_CD, VOY_NO, DIR_CD, PORT_CD, ID, CALL_IND, PLAN_TYPE) IN (SELECT VSL_CD, VOY_NO, DIR_CD, PORT_CD, ID, CALL_IND" ).append("\n"); 
		query.append("                                                                                                           , CASE WHEN COUNT(PLAN_TYPE) > 1 THEN 'E' ELSE 'F' END AS PLAN_TYPE" ).append("\n"); 
		query.append("                                                                                                    FROM BAY_PLAN A" ).append("\n"); 
		query.append("                                                                                                    WHERE 1=1" ).append("\n"); 
		query.append("                                                                                                    AND VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                                                                                                    AND VOY_NO = @[skd_voy_no]" ).append("\n"); 
		query.append("                                                                                                    AND DIR_CD = @[skd_dir_cd]" ).append("\n"); 
		query.append("                                                                                                    AND PORT_CD = @[port_cd]" ).append("\n"); 
		query.append("                                                                                                    AND CALL_IND = @[call_ind]" ).append("\n"); 
		query.append("                                                                                                    GROUP BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, ID, CALL_IND" ).append("\n"); 
		query.append("                                                                                                    )" ).append("\n"); 
		query.append("                            ) PLAN" ).append("\n"); 
		query.append("                        WHERE 1=1" ).append("\n"); 
		query.append("                        AND VESSEL.CDV_VSL_CODE = @[vsl_cd]" ).append("\n"); 
		query.append("                        AND VESSEL.CDV_VSL_CODE = BAY.VSL_CD" ).append("\n"); 
		query.append("                        AND BAY.VSL_CD = CELL.VSL" ).append("\n"); 
		query.append("                        AND BAY.BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("                        --AND BAY.BAY_NM = [bay_idx]" ).append("\n"); 
		query.append("                        AND BAY.BAY_NM IN (SELECT BAY_NM" ).append("\n"); 
		query.append("                                            FROM TPL_VSL_STWG_BAY" ).append("\n"); 
		query.append("                                            WHERE 1=1" ).append("\n"); 
		query.append("                                            AND (VSL_CD, HTCH_IDX) IN (SELECT VSL_CD, HTCH_IDX" ).append("\n"); 
		query.append("                                                                        FROM TPL_VSL_STWG_BAY" ).append("\n"); 
		query.append("                                                                        WHERE 1=1" ).append("\n"); 
		query.append("                                                                        AND VSL_CD = @[vsl_cd]" ).append("\n"); 
		query.append("                                                                        and BAY_NM = @[bay_idx]" ).append("\n"); 
		query.append("                                                                        )" ).append("\n"); 
		query.append("                                            )" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("                        AND CELL.DH_TP = @[dh_tp]" ).append("\n"); 
		query.append("                        AND CELL.TR_IDX != -1" ).append("\n"); 
		query.append("                        AND CELL.BAY_NM = PLAN.BAY(+)" ).append("\n"); 
		query.append("                        AND CELL.ROW_NM = PLAN.ROWW(+)" ).append("\n"); 
		query.append("                        AND CELL.TR_NM = PLAN.TIER(+)" ).append("\n"); 
		query.append("                        AND PLAN.CARGO_TYPE IN ('AK','BB')" ).append("\n"); 
		query.append("                        GROUP BY CELL.VSL, " ).append("\n"); 
		query.append("                                CELL.BAY_IDX, CELL.BAY_NM, " ).append("\n"); 
		query.append("                                CELL.ROW_IDX, CELL.ROW_NM, " ).append("\n"); 
		query.append("                                CELL.TR_IDX, CELL.TR_NM," ).append("\n"); 
		query.append("                                PLAN.VSL_CD," ).append("\n"); 
		query.append("                                PLAN.VOY_NO," ).append("\n"); 
		query.append("                                PLAN.DIR_CD," ).append("\n"); 
		query.append("                                PLAN.ID," ).append("\n"); 
		query.append("                                PLAN.CALL_IND," ).append("\n"); 
		query.append("                                PLAN.POL," ).append("\n"); 
		query.append("                                PLAN.POD," ).append("\n"); 
		query.append("                                PLAN.OPR_CD," ).append("\n"); 
		query.append("                                PLAN.WEIGHT," ).append("\n"); 
		query.append("                                PLAN.SZTP" ).append("\n"); 
		query.append("                        --ORDER BY TR_IDX, ROW_IDX" ).append("\n"); 
		query.append("                        UNION ALL" ).append("\n"); 
		query.append("                        SELECT '0' AS OVH_BAY_NM" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_ROW_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_TR_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_ROW_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVP_SLOT_TR_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_ROW_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVH_SLOT_OVS_SLOT_TR_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_ROW_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVP_SLOT_TR_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM1" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM2" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM3" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM4" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM5" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM6" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM7" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM8" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_ROW_NM9" ).append("\n"); 
		query.append("                                , '0' AS OVS_SLOT_TR_NM9" ).append("\n"); 
		query.append("                        FROM DUAL                        " ).append("\n"); 
		query.append("                        ) AKBB                        " ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("        GROUP BY TR_NM, ROW_IDX        " ).append("\n"); 
		query.append("        " ).append("\n"); 
		query.append("        UNION ALL" ).append("\n"); 
		query.append("		#if (${dh_tp} == 'D')   -- On Deck" ).append("\n"); 
		query.append("            SELECT '99' AS TR_NM " ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'0',MAX(CELL.ROW_NM)) AS ROW_0" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'1',MAX(CELL.ROW_NM)) AS ROW_1" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'2',MAX(CELL.ROW_NM)) AS ROW_2" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'3',MAX(CELL.ROW_NM)) AS ROW_3" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'4',MAX(CELL.ROW_NM)) AS ROW_4" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'5',MAX(CELL.ROW_NM)) AS ROW_5" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'6',MAX(CELL.ROW_NM)) AS ROW_6" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'7',MAX(CELL.ROW_NM)) AS ROW_7" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'8',MAX(CELL.ROW_NM)) AS ROW_8" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'9',MAX(CELL.ROW_NM)) AS ROW_9" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'10',MAX(CELL.ROW_NM)) AS ROW_10" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'11',MAX(CELL.ROW_NM)) AS ROW_11" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'12',MAX(CELL.ROW_NM)) AS ROW_12" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'13',MAX(CELL.ROW_NM)) AS ROW_13" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'14',MAX(CELL.ROW_NM)) AS ROW_14" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'15',MAX(CELL.ROW_NM)) AS ROW_15" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'16',MAX(CELL.ROW_NM)) AS ROW_16" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'17',MAX(CELL.ROW_NM)) AS ROW_17" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'18',MAX(CELL.ROW_NM)) AS ROW_18" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            FROM CDV_VESSEL VESSEL --2" ).append("\n"); 
		query.append("                , TPL_VSL_STWG_BAY BAY --3" ).append("\n"); 
		query.append("                , TPL_VSL_STWG_CELL CELL --4" ).append("\n"); 
		query.append("            WHERE 1=1" ).append("\n"); 
		query.append("            AND VESSEL.CDV_VSL_CODE = @[vsl_cd]" ).append("\n"); 
		query.append("            AND VESSEL.CDV_VSL_CODE = BAY.VSL_CD" ).append("\n"); 
		query.append("            AND BAY.VSL_CD = CELL.VSL" ).append("\n"); 
		query.append("            AND BAY.BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("            AND BAY.BAY_NM = @[bay_idx]" ).append("\n"); 
		query.append("            AND CELL.DH_TP = @[dh_tp]" ).append("\n"); 
		query.append("            AND CELL.TR_IDX != -1" ).append("\n"); 
		query.append("            GROUP BY CELL.ROW_IDX" ).append("\n"); 
		query.append("                    , CELL.ROW_NM" ).append("\n"); 
		query.append("		#else   -- Under Deck" ).append("\n"); 
		query.append("            SELECT '0' AS TR_NM " ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'0',MAX(CELL.ROW_NM)) AS ROW_0" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'1',MAX(CELL.ROW_NM)) AS ROW_1" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'2',MAX(CELL.ROW_NM)) AS ROW_2" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'3',MAX(CELL.ROW_NM)) AS ROW_3" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'4',MAX(CELL.ROW_NM)) AS ROW_4" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'5',MAX(CELL.ROW_NM)) AS ROW_5" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'6',MAX(CELL.ROW_NM)) AS ROW_6" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'7',MAX(CELL.ROW_NM)) AS ROW_7" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'8',MAX(CELL.ROW_NM)) AS ROW_8" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'9',MAX(CELL.ROW_NM)) AS ROW_9" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'10',MAX(CELL.ROW_NM)) AS ROW_10" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'11',MAX(CELL.ROW_NM)) AS ROW_11" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'12',MAX(CELL.ROW_NM)) AS ROW_12" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'13',MAX(CELL.ROW_NM)) AS ROW_13" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'14',MAX(CELL.ROW_NM)) AS ROW_14" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'15',MAX(CELL.ROW_NM)) AS ROW_15" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'16',MAX(CELL.ROW_NM)) AS ROW_16" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'17',MAX(CELL.ROW_NM)) AS ROW_17" ).append("\n"); 
		query.append("                            , DECODE(ROW_IDX,'18',MAX(CELL.ROW_NM)) AS ROW_18" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("            FROM CDV_VESSEL VESSEL --2" ).append("\n"); 
		query.append("                , TPL_VSL_STWG_BAY BAY --3" ).append("\n"); 
		query.append("                , TPL_VSL_STWG_CELL CELL --4" ).append("\n"); 
		query.append("            WHERE 1=1" ).append("\n"); 
		query.append("            AND VESSEL.CDV_VSL_CODE = @[vsl_cd]" ).append("\n"); 
		query.append("            AND VESSEL.CDV_VSL_CODE = BAY.VSL_CD" ).append("\n"); 
		query.append("            AND BAY.VSL_CD = CELL.VSL" ).append("\n"); 
		query.append("            AND BAY.BAY_IDX = CELL.BAY_IDX" ).append("\n"); 
		query.append("            AND BAY.BAY_NM = @[bay_idx]" ).append("\n"); 
		query.append("            AND CELL.DH_TP = @[dh_tp]" ).append("\n"); 
		query.append("            AND CELL.TR_IDX != -1" ).append("\n"); 
		query.append("            GROUP BY CELL.ROW_IDX" ).append("\n"); 
		query.append("                    , CELL.ROW_NM" ).append("\n"); 
		query.append("		#end" ).append("\n"); 
		query.append("        )" ).append("\n"); 
		query.append("GROUP BY TR_NM" ).append("\n"); 
		query.append("ORDER BY TR_NM DESC" ).append("\n"); 
		query.append("-- ORDER BY TR_IDX" ).append("\n"); 

	}
}