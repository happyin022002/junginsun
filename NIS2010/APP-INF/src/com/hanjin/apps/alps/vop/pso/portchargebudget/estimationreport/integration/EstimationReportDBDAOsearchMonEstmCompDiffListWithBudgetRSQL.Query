<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EstimationReportDBDAOsearchMonEstmCompDiffListWithBudgetRSQL">
			<desc><![CDATA[당월과 사업계획의 추청치의 차를 구한다.]]></desc>
			<sql><![CDATA[
SELECT RLANE_CD,
       SUM(CNT_1) - SUM(CNT_12) SUM_CNT1,
       SUM(CNT_PORT_1) - SUM(CNT_PORT_12) SUM_CNT_PORT,
       SUM(ACT_PORT_1) - SUM(ACT_PORT_2) SUM_ACT_PORT,
       SUM(AMT_1) - SUM(AMT_11) AS SUM_AMT1 ,
       SUM(CNT_2) - SUM(CNT_22) AS SUM_CNT2 ,
       SUM(AMT_2) - SUM(AMT_22) SUM_AMT2,
       SUM(AMT_1) - SUM(AMT_11) + SUM(AMT_2) - SUM(AMT_22) TOTAL_SUM_AMT 
  FROM (
   SELECT  RLANE_CD,                                                           
           0 CNT_1,SUM(PT_CHG_CNT) CNT_12,                                             
           0 CNT_PORT_1,SUM(PT_CNT) CNT_PORT_12,                                                       
           0 ACT_PORT_1,SUM(ACT_PT_CNT) ACT_PORT_2,                                                     
           0 AMT_1,SUM(PT_CHG) AMT_11,                                                         
           0 CNT_2,SUM(CNL_FEE_CNT) CNT_22,                                                 
           0 AMT_2,SUM(CNL_FEE) AMT_22                                                   
     FROM (
 
          SELECT BUD_YRMON, 
                 RLANE_CD, 
                 VSL_CD||SKD_VOY_NO||SKD_DIR_CD, 
                 MAX(PT_CNT) PT_CNT,
                 MAX(PORT_CHG_AMT) PT_CHG, 
                 MAX(CNL_FEE_AMT) CNL_FEE,
                 SUM(ACT_PT_CNT) ACT_PT_CNT,
                 DECODE(SUM(PORT_CHG_AMT), 0, 0, 1) PT_CHG_CNT,
                 DECODE(SUM(CNL_FEE_AMT), 0, 0, 1) CNL_FEE_CNT
          FROM  (
                SELECT BUD_SCNR_NO,
                       TRD_CD,
                       SUB_TRD_CD,
                       VSL_CD,
                       SKD_VOY_NO,
                       SKD_DIR_CD,
                       RLANE_CD,
                       BUD_YRMON,
                       TURN_PORT_IND_CD,
                       CNTR_VSL_CLSS_CAPA,
                       PORT_CHG_AMT,
                       CNL_FEE_AMT ,
                       DECODE(TURN_PORT_IND_CD, 'N', 1, 0.5) ACT_PT_CNT,
                       COUNT(*) OVER(PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD ) PT_CNT
                  FROM PSO_BUD_TRF_PLN 
                 WHERE  1=1
                   AND    BUD_SCNR_NO = substr(@[rev_yrmon],0,4) || @[bud_str]
                   AND    SUBSTR(BUD_YRMON,5,2)  = substr(@[rev_yrmon],6,2)        
                )
            GROUP BY BUD_YRMON, RLANE_CD, VSL_CD||SKD_VOY_NO||SKD_DIR_CD
        )
        WHERE PT_CHG_CNT<>0
        GROUP BY RLANE_CD


  
        UNION ALL
        SELECT RLANE_CD
               ,COUNT(*) AS CNT_1,0 CNT_12, SUM(DECODE(PPORT,0,PORT,PPORT)) CNT_PORT_1,0 CNT_PORT_12, 
                SUM(DECODE(ACT_PPORT,0,ACT_PORT,ACT_PPORT)) ACT_PORT_1, 0 ACT_PORT_2,0 AMT_1,0 AMT_11,0 CNT_2, 0 CNT_22,
                 0 AMT_2, 0 AMT_22 
                 
                 
        FROM
        (SELECT DISTINCT E.RLANE_CD, E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD,
                (SELECT COUNT(*) FROM VSK_VSL_PORT_SKD 
                WHERE VSL_CD = E.VSL_CD AND SKD_VOY_NO = E.SKD_VOY_NO AND SKD_DIR_CD = E.SKD_DIR_CD
                AND NVL(SKD_CNG_STS_CD, 'X') <> 'S') PORT ,
                
                 (SELECT COUNT(*) FROM VSK_VSL_PORT_SKD A, PSO_PORT_EXPN_DIV B
                WHERE 1=1
                AND A.VSL_CD = E.VSL_CD AND A.SKD_VOY_NO = E.SKD_VOY_NO AND A.SKD_DIR_CD = E.SKD_DIR_CD
                AND A.SLAN_CD  = B.SLAN_CD
                AND A.VPS_PORT_CD = B.LOC_CD
                AND E.RLANE_CD = B.RLANE_CD
                AND A.SKD_DIR_CD = B.SKD_DIR_CD
                AND NVL(A.SKD_CNG_STS_CD, 'X') <> 'S') PPORT,
                
                (SELECT SUM(DECODE(NVL(TURN_SKD_VOY_NO, 1), 1, 1, 0.5)) -- TURNNING OR VIRTUAL?? ??? 0.5
                FROM VSK_VSL_PORT_SKD 
                WHERE VSL_CD = E.VSL_CD AND SKD_VOY_NO = E.SKD_VOY_NO AND SKD_DIR_CD = E.SKD_DIR_CD
                AND NVL(SKD_CNG_STS_CD, 'X') <> 'S') ACT_PORT,
        
                  NVL ((SELECT  SUM(DECODE(NVL(TURN_SKD_VOY_NO, 1), 1, 1, 0.5)) -- TURNNING OR VIRTUAL?? ??? 0.5
                        FROM VSK_VSL_PORT_SKD A, PSO_PORT_EXPN_DIV B
                        WHERE 1=1
                        AND A.VSL_CD = E.VSL_CD AND A.SKD_VOY_NO = E.SKD_VOY_NO AND A.SKD_DIR_CD = E.SKD_DIR_CD
                        AND A.SLAN_CD  = B.SLAN_CD
                        AND A.VPS_PORT_CD = B.LOC_CD
                        AND E.RLANE_CD = B.RLANE_CD
                        AND A.SKD_DIR_CD = B.SKD_DIR_CD
                        AND NVL(A.SKD_CNG_STS_CD, 'X') <> 'S'),0) ACT_PPORT
                      
                
                
        FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
        WHERE 1=1
        AND E.EXE_YRMON = REPLACE(@[rev_yrmon], '-', '')
        AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
        AND E.VSL_CD = P.VSL_CD
        AND E.SKD_VOY_NO = P.SKD_VOY_NO
        AND E.SKD_DIR_CD = P.SKD_DIR_CD
        AND E.REV_DIR_CD = P.REV_DIR_CD
        AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
        AND E.REV_YRMON = P.REV_YRMON
        AND P.EXE_YRMON = (SELECT MAX(EXE_YRMON)  FROM GL_ESTM_IF_ERP 
                            WHERE REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
                              AND SYS_SRC_ID = 'PSO')
        AND P.SYS_SRC_ID = 'PSO'
        AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD
        AND P.ACCT_CD <> '511911'
        ) 
        GROUP  BY RLANE_CD

          
        UNION ALL
        
       
        SELECT RLANE_CD,
               0 CNT_1,0 CNT_12, 0 CNT_PORT_1,0 CNT_PORT_12, 
               0 ACT_PORT_1, 0 ACT_PORT_2,0 AMT_1,0 AMT_11 ,COUNT(*) CNT_2,0 CNT_22,
               0 AMT_2, 0 AMT_22 
    
        FROM
        (SELECT DISTINCT E.RLANE_CD, E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD 
        FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
        WHERE 1=1
        AND E.EXE_YRMON = REPLACE(@[rev_yrmon], '-', '')
        AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
        AND E.VSL_CD = P.VSL_CD
        AND E.SKD_VOY_NO = P.SKD_VOY_NO
        AND E.SKD_DIR_CD = P.SKD_DIR_CD
        AND E.REV_DIR_CD = P.REV_DIR_CD
        AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
        AND E.REV_YRMON = P.REV_YRMON
        AND P.EXE_YRMON = (SELECT MAX(EXE_YRMON)  FROM GL_ESTM_IF_ERP 
                            WHERE REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
                              AND SYS_SRC_ID = 'PSO')
        AND P.SYS_SRC_ID = 'PSO'
        AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD
        AND P.ACCT_CD = '511911'
        )
        GROUP BY RLANE_CD
   
        UNION ALL
        

        SELECT  RLANE_CD,
               0 CNT_1,0 CNT_12, 0 CNT_PORT_1,0 CNT_PORT_12, 
               0 ACT_PORT_1, 0 ACT_PORT_2,
               SUM(DECODE(P.ACCT_CD, '511911', 0, NVL(ESTM_AMT, 0))) AS AMT_1,  0 AMT_11,
               0 CNT_2,
               0 CNT_22,
               SUM(DECODE(P.ACCT_CD, '511911', NVL(ESTM_AMT, 0), 0)) AS AMT_2,  0 AMT_22 
        FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
        WHERE 1=1
        AND E.EXE_YRMON = REPLACE(@[rev_yrmon], '-', '')
        AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
        AND E.VSL_CD = P.VSL_CD
        AND E.SKD_VOY_NO = P.SKD_VOY_NO
        AND E.SKD_DIR_CD = P.SKD_DIR_CD
        AND E.REV_DIR_CD = P.REV_DIR_CD
        AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
        AND E.REV_YRMON = P.REV_YRMON
        AND P.EXE_YRMON = (SELECT MAX(EXE_YRMON)  FROM GL_ESTM_IF_ERP 
                            WHERE REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
                              AND SYS_SRC_ID = 'PSO')
        AND P.SYS_SRC_ID = 'PSO'
        AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD
        GROUP BY E.RLANE_CD
       
  ) 
  GROUP BY RLANE_CD
  ORDER BY RLANE_CD			]]></sql>
			<params>
				<param name="rev_yrmon" type="12" value="" out="N"/>
				<param name="bud_str" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
