<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="CanalTransitFeeInvoiceBCDBDAOsearchCanalTzFeeSummaryRSQL">
			<desc><![CDATA[전도금과 actual 의 diff]]></desc>
			<sql><![CDATA[
WITH ADV_PAY AS (
 SELECT CNL_TZ_BZTP_CD , 
        MIN(LGS_COST_CD1) AS LGS_COST_CD1,
        MIN(LGS_COST_CD2) AS LGS_COST_CD2,
        MIN(LGS_COST_CD3) AS LGS_COST_CD3,
        MIN(LGS_COST_CD4) AS LGS_COST_CD4,
        MIN(LGS_COST_CD5) AS LGS_COST_CD5,
        MIN(LGS_COST_CD6) AS LGS_COST_CD6,
        MIN(LGS_COST_CD7) AS LGS_COST_CD7,
        MIN(LGS_COST_CD8) AS LGS_COST_CD8,
        MIN(LGS_COST_CD9) AS LGS_COST_CD9,
        MIN(LGS_COST_CD10) AS LGS_COST_CD10,
        MIN(LGS_COST_CD11) AS LGS_COST_CD11,
        MIN(LGS_COST_CD12) AS LGS_COST_CD12,
        MIN(LGS_COST_CD13) AS LGS_COST_CD13
  FROM (
 SELECT A.CNL_TZ_BZTP_CD, 
        DECODE(LGS_COST_GRP,'CNAC',RQST_AMT) AS LGS_COST_CD1,
        DECODE(LGS_COST_GRP,'CNBK',RQST_AMT) AS LGS_COST_CD2,
        DECODE(LGS_COST_GRP,'CNHD',RQST_AMT) AS LGS_COST_CD3,
        DECODE(LGS_COST_GRP,'CNLD',RQST_AMT) AS LGS_COST_CD4,
        DECODE(LGS_COST_GRP,'CNLH',RQST_AMT) AS LGS_COST_CD5,
        DECODE(LGS_COST_GRP,'CNLR',RQST_AMT) AS LGS_COST_CD6,
        DECODE(LGS_COST_GRP,'CNOT',RQST_AMT) AS LGS_COST_CD7,
        DECODE(LGS_COST_GRP,'CNPT',RQST_AMT) AS LGS_COST_CD8,
        DECODE(LGS_COST_GRP,'CNQR',RQST_AMT) AS LGS_COST_CD9,
        DECODE(LGS_COST_GRP,'CNSS',RQST_AMT) AS LGS_COST_CD10,
        DECODE(LGS_COST_GRP,'CNTF',RQST_AMT) AS LGS_COST_CD11,
        DECODE(LGS_COST_GRP,'CNTW',RQST_AMT) AS LGS_COST_CD12,
        DECODE(LGS_COST_GRP,'CNTX',RQST_AMT) AS LGS_COST_CD13 
  FROM ( 
  SELECT X.CNL_TZ_BZTP_CD, SUBSTR(Y.LGS_COST_CD,1,4) LGS_COST_GRP, SUM(Y.RQST_AMT) AS RQST_AMT
    FROM PSO_CNL_TZ_FEE X, PSO_CNL_TZ_FEE_DTL Y
   WHERE X.PSO_BZTP_CD        = Y.PSO_BZTP_CD
     AND X.VSL_CD             = Y.VSL_CD
     AND X.SKD_VOY_NO         = Y.SKD_VOY_NO
     AND X.SKD_DIR_CD         = Y.SKD_DIR_CD
     AND X.PSO_BZTP_CD        = '5'
     AND X.YD_CD              = Y.YD_CD
     AND X.CALL_SEQ           = Y.CALL_SEQ
     AND X.CNL_TZ_PROC_STS_CD = 'A'
     AND X.VSL_CD             = substr(@[vvd], 1, 4)
     AND X.SKD_VOY_NO         = substr(@[vvd], 5, 4)
     AND X.SKD_DIR_CD         = substr(@[vvd], 9, 1)
     AND X.YD_CD              = @[yd_cd]
     AND X.CNL_TZ_BZTP_CD     ='E'
     AND EXISTS  ( SELECT '*'
                    FROM PSO_CNL_TZ_FEE_DTL A, PSO_CNL_TZ_FEE B
                   WHERE A.VSL_CD             = substr(@[vvd], 1, 4)
                     AND A.SKD_VOY_NO         = substr(@[vvd], 5, 4)
                     AND A.SKD_DIR_CD         = substr(@[vvd], 9, 1)
                     AND A.YD_CD              = @[yd_cd]
                     AND A.VSL_CD             = B.VSL_CD
                     AND A.SKD_VOY_NO         = B.SKD_VOY_NO
                     AND B.CNL_TZ_BZTP_CD     = 'I'
                     AND A.SKD_DIR_CD         = B.SKD_DIR_CD
                     AND A.YD_CD              = B.YD_CD
                     AND A.PSO_BZTP_CD        = B.PSO_BZTP_CD
                     AND A.CALL_SEQ          = B.CALL_SEQ
                     AND B.PSO_BZTP_CD       = '5'
                     AND B.NTC_YRMON         = @[rev_yrmon]
                     AND A.LGS_COST_CD        LIKE  Y.LGS_COST_CD||'%' )
     GROUP BY X.CNL_TZ_BZTP_CD, SUBSTR(Y.LGS_COST_CD,1,4) ) A ) 
     GROUP BY CNL_TZ_BZTP_CD ),
  INV_PAY AS ( SELECT CNL_TZ_BZTP_CD , 
        MIN(LGS_COST_CD1) AS LGS_COST_CD1,
        MIN(LGS_COST_CD2) AS LGS_COST_CD2,
        MIN(LGS_COST_CD3) AS LGS_COST_CD3,
        MIN(LGS_COST_CD4) AS LGS_COST_CD4,
        MIN(LGS_COST_CD5) AS LGS_COST_CD5,
        MIN(LGS_COST_CD6) AS LGS_COST_CD6,
        MIN(LGS_COST_CD7) AS LGS_COST_CD7,
        MIN(LGS_COST_CD8) AS LGS_COST_CD8,
        MIN(LGS_COST_CD9) AS LGS_COST_CD9,
        MIN(LGS_COST_CD10) AS LGS_COST_CD10,
        MIN(LGS_COST_CD11) AS LGS_COST_CD11,
        MIN(LGS_COST_CD12) AS LGS_COST_CD12,
        MIN(LGS_COST_CD13) AS LGS_COST_CD13
  FROM (
 SELECT A.CNL_TZ_BZTP_CD, 
        DECODE(LGS_COST_GRP,'CNAC',RQST_AMT) AS LGS_COST_CD1,
        DECODE(LGS_COST_GRP,'CNBK',RQST_AMT) AS LGS_COST_CD2,
        DECODE(LGS_COST_GRP,'CNHD',RQST_AMT) AS LGS_COST_CD3,
        DECODE(LGS_COST_GRP,'CNLD',RQST_AMT) AS LGS_COST_CD4,
        DECODE(LGS_COST_GRP,'CNLH',RQST_AMT) AS LGS_COST_CD5,
        DECODE(LGS_COST_GRP,'CNLR',RQST_AMT) AS LGS_COST_CD6,
        DECODE(LGS_COST_GRP,'CNOT',RQST_AMT) AS LGS_COST_CD7,
        DECODE(LGS_COST_GRP,'CNPT',RQST_AMT) AS LGS_COST_CD8,
        DECODE(LGS_COST_GRP,'CNQR',RQST_AMT) AS LGS_COST_CD9,
        DECODE(LGS_COST_GRP,'CNSS',RQST_AMT) AS LGS_COST_CD10,
        DECODE(LGS_COST_GRP,'CNTF',RQST_AMT) AS LGS_COST_CD11,
        DECODE(LGS_COST_GRP,'CNTW',RQST_AMT) AS LGS_COST_CD12,
        DECODE(LGS_COST_GRP,'CNTX',RQST_AMT) AS LGS_COST_CD13 
  FROM ( 
  SELECT X.CNL_TZ_BZTP_CD, SUBSTR(Y.LGS_COST_CD,1,4) LGS_COST_GRP, SUM(Y.RQST_AMT) AS RQST_AMT
    FROM PSO_CNL_TZ_FEE X, PSO_CNL_TZ_FEE_DTL Y
   WHERE X.PSO_BZTP_CD        = Y.PSO_BZTP_CD
     AND X.VSL_CD             = Y.VSL_CD
     AND X.SKD_VOY_NO         = Y.SKD_VOY_NO
     AND X.SKD_DIR_CD         = Y.SKD_DIR_CD
     AND X.PSO_BZTP_CD        = '5'
     AND X.YD_CD              = Y.YD_CD
     AND X.CNL_TZ_PROC_STS_CD IN ( 'A','Q')
     AND X.CALL_SEQ           = Y.CALL_SEQ
     AND X.VSL_CD             = substr(@[vvd], 1, 4)
     AND X.SKD_VOY_NO         = substr(@[vvd], 5, 4)
     AND X.SKD_DIR_CD         = substr(@[vvd], 9, 1)
     AND X.YD_CD              = @[yd_cd]
     AND X.CNL_TZ_BZTP_CD     = 'I'
     AND SUBSTR(Y.LGS_COST_CD,1,4) IN ( SELECT SUBSTR(B.LGS_COST_CD,1,4)
                                          FROM PSO_CNL_TZ_FEE A, PSO_CNL_TZ_FEE_DTL B
                                         WHERE A.NTC_YRMON          = @[rev_yrmon]
                                           AND A.PSO_BZTP_CD        = B.PSO_BZTP_CD
                                           AND A.VSL_CD             = B.VSL_CD
                                           AND A.SKD_VOY_NO         = B.SKD_VOY_NO
                                           AND A.SKD_DIR_CD         = B.SKD_DIR_CD
                                           AND A.PSO_BZTP_CD        = '5'
                                           AND A.YD_CD              = B.YD_CD
                                           AND A.CNL_TZ_PROC_STS_CD IN ( 'A','Q')
                                           AND A.CALL_SEQ           = B.CALL_SEQ
                                           AND A.VSL_CD             = substr(@[vvd], 1, 4)
                                           AND A.SKD_VOY_NO         = substr(@[vvd], 5, 4)
                                           AND A.SKD_DIR_CD         = substr(@[vvd], 9, 1)
                                           AND A.YD_CD              = @[yd_cd]
                                           AND A.CNL_TZ_BZTP_CD     = 'I'  )
     GROUP BY X.CNL_TZ_BZTP_CD, SUBSTR(Y.LGS_COST_CD,1,4) ) A ) 
     GROUP BY CNL_TZ_BZTP_CD )
    SELECT  'Advance Payment' AS TITLE, 
            LGS_COST_CD1, LGS_COST_CD2, LGS_COST_CD3,  LGS_COST_CD4,  LGS_COST_CD5,  LGS_COST_CD6,
            LGS_COST_CD7, LGS_COST_CD8, LGS_COST_CD9,  LGS_COST_CD10, LGS_COST_CD11, LGS_COST_CD12, LGS_COST_CD13 
      FROM ADV_PAY
    UNION ALL
    SELECT  'Invoice Amount' AS TITLE, 
            LGS_COST_CD1, LGS_COST_CD2, LGS_COST_CD3,  LGS_COST_CD4,  LGS_COST_CD5,  LGS_COST_CD6,
            LGS_COST_CD7, LGS_COST_CD8, LGS_COST_CD9,  LGS_COST_CD10, LGS_COST_CD11, LGS_COST_CD12, LGS_COST_CD13 
     FROM INV_PAY
    UNION ALL
    SELECT 'Diff'  AS TITLE, 
           CASE WHEN A.LGS_COST_CD1 IS NULL AND B.LGS_COST_CD1 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD1,0) -  NVL(B.LGS_COST_CD1  ,0) 
           END AS LGS_COST_CD1,
           CASE WHEN A.LGS_COST_CD2 IS NULL AND B.LGS_COST_CD2 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD2,0) -  NVL(B.LGS_COST_CD2  ,0) 
           END AS LGS_COST_CD2,
           CASE WHEN A.LGS_COST_CD3 IS NULL AND B.LGS_COST_CD3 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD3,0) -  NVL(B.LGS_COST_CD3  ,0) 
           END AS LGS_COST_CD3,
           CASE WHEN A.LGS_COST_CD4 IS NULL AND B.LGS_COST_CD4 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD4,0) -  NVL(B.LGS_COST_CD4  ,0) 
           END AS LGS_COST_CD4,
           CASE WHEN A.LGS_COST_CD5 IS NULL AND B.LGS_COST_CD5 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD5,0) -  NVL(B.LGS_COST_CD5  ,0) 
           END AS LGS_COST_CD5,
           CASE WHEN A.LGS_COST_CD6 IS NULL AND B.LGS_COST_CD6 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD6,0) -  NVL(B.LGS_COST_CD6  ,0) 
           END AS LGS_COST_CD1,
           CASE WHEN A.LGS_COST_CD7 IS NULL AND B.LGS_COST_CD7 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD7,0) -  NVL(B.LGS_COST_CD7  ,0) 
           END AS LGS_COST_CD7,
           CASE WHEN A.LGS_COST_CD8 IS NULL AND B.LGS_COST_CD8 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD8,0) -  NVL(B.LGS_COST_CD8  ,0) 
           END AS LGS_COST_CD8,
           CASE WHEN A.LGS_COST_CD9 IS NULL AND B.LGS_COST_CD9 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD9,0) -  NVL(B.LGS_COST_CD9  ,0) 
           END AS LGS_COST_CD9,
           CASE WHEN A.LGS_COST_CD10 IS NULL AND B.LGS_COST_CD10 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD10,0) -  NVL(B.LGS_COST_CD10  ,0) 
           END AS LGS_COST_CD10,
           CASE WHEN A.LGS_COST_CD11 IS NULL AND B.LGS_COST_CD11 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD11,0) -  NVL(B.LGS_COST_CD11  ,0) 
           END AS LGS_COST_CD11,
           CASE WHEN A.LGS_COST_CD12 IS NULL AND B.LGS_COST_CD12 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD12,0) -  NVL(B.LGS_COST_CD12  ,0) 
           END AS LGS_COST_CD12,
           CASE WHEN A.LGS_COST_CD13 IS NULL AND B.LGS_COST_CD13 IS NULL THEN NULL
                ELSE  NVL(A.LGS_COST_CD13,0) -  NVL(B.LGS_COST_CD13  ,0) 
           END AS LGS_COST_CD13
     FROM ADV_PAY A, INV_PAY B			]]></sql>
			<params>
				<param name="vvd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="rev_yrmon" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
