<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SimulationDBDAOSearchStandardFocRSQL">
			<desc><![CDATA[Standard FOC 화면 조회
2014.04.16 [CHM-201429874] Standard FOC 생성 및 단계별 저장 기능 개발
2014.05.28 [CHM-201430380] Standard FOC 칼럼 추가 및 조회 로직 수정
2014.06.26 [CHM-201430859] Standard FOC내 previous 칼럼 로직 수정
2014.08.22 [CHM-201431484] Previous 칼럼 말풍선 도움말 및 T actal 칼럼 로직 변경
2014.10.31 [CHM-201432489] Standard FOC Calling Sequence 조인 로직 변경건]]></desc>
			<sql><![CDATA[
WITH FCM_DEP_RPT_TMP AS (
    SELECT
        VSL_CD
        , SKD_VOY_NO
        , SKD_DIR_CD
        , DEP_PORT_CD
        , RANK() OVER (PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, DEP_PORT_CD ORDER BY CLPT_IND_SEQ) AS CLPT_IND_SEQ
		, NXT_PORT_CD
        , AFT_UNBRTH_ANK_DRP_DT
        , AFT_UNBRTH_ANK_OFF_DT
        , BFR_BRTH_ANK_DRP_DT
        , BFR_BRTH_ANK_OFF_DT
        , VPS_ETD_DT
        , NXT_PORT_ETA_DT
        , RUP_DT
        , SB_ENG_DT
        , VPS_ETB_DT
        , AVG_SPD
        , PORT_MN_FOIL_CSM_QTY
        , PORT_GNR_FOIL_CSM_QTY
        , PORT_BLR_FOIL_CSM_QTY
        , PORT_MN_LOW_SULP_FOIL_CSM_QTY
        , PORT_GNR_LOW_SULP_FOIL_CSM_QTY
        , PORT_BLR_LOW_SULP_FOIL_CSM_QTY
        , PORT_MN_DOIL_CSM_QTY
        , PORT_GNR_DOIL_CSM_QTY
        , PORT_BLR_DOIL_CSM_QTY
        , PORT_MN_LOW_SULP_DOIL_CSM_QTY
        , PORT_GNR_LOW_SULP_DOIL_CSM_QTY
        , PORT_BLR_LOW_SULP_DOIL_CSM_QTY
        , SEA_MN_FOIL_CSM_QTY
        , SEA_GNR_FOIL_CSM_QTY
        , SEA_BLR_FOIL_CSM_QTY
        , SEA_MN_LOW_SULP_FOIL_CSM_QTY
        , SEA_GNR_LOW_SULP_FOIL_CSM_QTY
        , SEA_BLR_LOW_SULP_FOIL_CSM_QTY
        , SEA_MN_DOIL_CSM_QTY
        , SEA_GNR_DOIL_CSM_QTY
        , SEA_BLR_DOIL_CSM_QTY
        , SEA_MN_LOW_SULP_DOIL_CSM_QTY
        , SEA_GNR_LOW_SULP_DOIL_CSM_QTY
        , SEA_BLR_LOW_SULP_DOIL_CSM_QTY
        , NVGT_ML_DIST
        , MNVR_IN_ML_DIST
        , MNVR_OUT_ML_DIST
        , ENG_ML_DIST
    FROM FCM_DEP_RPT
    WHERE VSL_CD = @[vsl_cd]
)

SELECT T61.VVD_SEQ
        ,T61.CLPT_IND_SEQ
        ,T61.CLPT_SEQ
        ,T61.VSL_SLAN_CD
        ,T61.VSL_CD
        ,T61.SKD_VOY_NO
        ,T61.SKD_DIR_CD
        ,T61.VVD
        ,T61.VPS_PORT_CD
        ,T61.TML_CD
        ,T61.YD_CD
        ,T61.PORT_SKD_STS_CD
        ,T61.SKD_CNG_STS_CD
        ,T61.VPS_ETA_DT
        ,T61.VPS_ETB_DT
        ,T61.VPS_ETD_DT
        ,T62.INIT_FOIL_CSM
        ,T62.RVIS_FOIL_CSM
        ,T62.TRND_LINE_FOIL_CSM
        ,T62.ACT_FOIL_CSM
        ,T62.INIT_PORT_FOIL_CSM
        ,T62.RVIS_PORT_FOIL_CSM
        ,T62.TRND_LINE_PORT_FOIL_CSM
        ,T62.ACT_PORT_FOIL_CSM
        ,DECODE(COUNT(T62.VSL_CD) OVER (PARTITION BY T62.VSL_CD), 0, COALESCE(DIST_OPMZ, DIST_OPMZ_TO_ALL, DIST_OPMZ_FM_ALL, DIST_OPMZ_ALL), T62.OPMZ_DIST) AS OPMZ_DIST
        ,T62.OPMZ_SEA_SPD
        ,T61.PF_SEA_TM_HRS
        ,T61.OPMZ_SEA_TM_HRS
        ,T61.ACT_OPMZ_SEA_TM_HRS
        ,T61.LNK_DIST AS DIST_PF_LNK
        ,COALESCE(DIST_OPMZ, DIST_OPMZ_TO_ALL, DIST_OPMZ_FM_ALL, DIST_OPMZ_ALL) AS DIST_OPMZ
        ,T61.SPD_PF_LNK
        ,(SELECT (   NVL(SEA_MN_FOIL_CSM_QTY          , 0)
                   + NVL(SEA_GNR_FOIL_CSM_QTY         , 0)
                   + NVL(SEA_BLR_FOIL_CSM_QTY         , 0)
                   + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                   + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                   + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                   + NVL(SEA_MN_DOIL_CSM_QTY          , 0)
                   + NVL(SEA_GNR_DOIL_CSM_QTY         , 0)
                   + NVL(SEA_BLR_DOIL_CSM_QTY         , 0)
                   + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                   + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                   + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0))
            FROM FCM_DEP_RPT_TMP D
           WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
             AND D.SKD_VOY_NO   = SUBSTR(T61.NXT_VVD, 5, 4)
             AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
             AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
             AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
             AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ) AS ACT_FOIL_CSM_CAL
        ,(SELECT (   NVL(PORT_MN_FOIL_CSM_QTY          , 0)
                   + NVL(PORT_GNR_FOIL_CSM_QTY         , 0)
                   + NVL(PORT_BLR_FOIL_CSM_QTY         , 0)
                   + NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                   + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                   + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                   + NVL(PORT_MN_DOIL_CSM_QTY          , 0)
                   + NVL(PORT_GNR_DOIL_CSM_QTY         , 0)
                   + NVL(PORT_BLR_DOIL_CSM_QTY         , 0)
                   + NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                   + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                   + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0))
            FROM FCM_DEP_RPT_TMP D
           WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
             AND D.SKD_VOY_NO   = SUBSTR(T61.NXT_VVD, 5, 4)
             AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
             AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
             AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
             AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ) AS ACT_PORT_FOIL_CSM_CAL
        ,NVL((SELECT AVG(   NVL(SEA_MN_FOIL_CSM_QTY          , 0)
                          + NVL(SEA_GNR_FOIL_CSM_QTY         , 0)
                          + NVL(SEA_BLR_FOIL_CSM_QTY         , 0)
                          + NVL(SEA_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                          + NVL(SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                          + NVL(SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                          + NVL(SEA_MN_DOIL_CSM_QTY          , 0)
                          + NVL(SEA_GNR_DOIL_CSM_QTY         , 0)
                          + NVL(SEA_BLR_DOIL_CSM_QTY         , 0)
                          + NVL(SEA_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                          + NVL(SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                          + NVL(SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0))
                FROM FCM_DEP_RPT_TMP D
               WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
                 AND D.SKD_VOY_NO  IN (TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 1, 'FM0000'), TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 2, 'FM0000'), TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 3, 'FM0000'))
                 AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
                 AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
                 AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
                 AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ), 0) AS ACT_FOIL_CSM_AVG
        ,NVL((SELECT AVG(   NVL(PORT_MN_FOIL_CSM_QTY          , 0)
                          + NVL(PORT_GNR_FOIL_CSM_QTY         , 0)
                          + NVL(PORT_BLR_FOIL_CSM_QTY         , 0)
                          + NVL(PORT_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                          + NVL(PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                          + NVL(PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                          + NVL(PORT_MN_DOIL_CSM_QTY          , 0)
                          + NVL(PORT_GNR_DOIL_CSM_QTY         , 0)
                          + NVL(PORT_BLR_DOIL_CSM_QTY         , 0)
                          + NVL(PORT_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                          + NVL(PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                          + NVL(PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0))
                FROM FCM_DEP_RPT_TMP D
               WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
                 AND D.SKD_VOY_NO  IN (TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 1, 'FM0000'), TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 2, 'FM0000'), TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 3, 'FM0000'))
                 AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
                 AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
                 AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
                 AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ), 0) AS ACT_PORT_FOIL_CSM_AVG
        ,T62.INIT_FOIL_CSM      AS S_INIT_FOIL_CSM
        ,T62.INIT_PORT_FOIL_CSM AS S_INIT_PORT_FOIL_CSM
        ,T62.OPMZ_DIST          AS S_OPMZ_DIST
        ,T62.OPMZ_SEA_SPD       AS S_OPMZ_SEA_SPD
        ,T62.PF_SEA_TM_HRS      AS S_PF_SEA_TM_HRS
        ,T62.OPMZ_SEA_TM_HRS    AS S_OPMZ_SEA_TM_HRS
        ,T63.AVG_SPD            AS DEP_AVG_SPD
        ,DECODE(COUNT(T62.VSL_CD) OVER (PARTITION BY T62.VSL_CD), 0, 'N', 'Y') AS SAVE_FLG
        ,T61.PORT_TIME
        ,T61.ACT_PORT_TIME
        ,(SELECT NVL(MNVR_CSM_WGT, 0) AS MNVR_CSM_WGT
            FROM MDM_VSL_CNTR      T1
                ,FCM_VSL_CNTR_RGST T2
           WHERE T1.VSL_CD   = T61.VSL_CD
             AND T1.VSL_CD   = T2.VSL_CD
             AND T1.DELT_FLG = 'N'
         ) AS MNVR_CSM_WGT
        ,(SELECT NVL(OP_MIN_SPD, 0) AS OP_MIN_SPD
            FROM MDM_VSL_CNTR      T1
                ,FCM_VSL_CNTR_RGST T2
           WHERE T1.VSL_CD   = T61.VSL_CD
             AND T1.VSL_CD   = T2.VSL_CD
             AND T1.DELT_FLG = 'N'
         ) AS OP_MIN_SPD
        ,(SELECT NVL(OP_GNR_SPD, 0) AS OP_GNR_SPD
            FROM MDM_VSL_CNTR      T1
                ,FCM_VSL_CNTR_RGST T2
           WHERE T1.VSL_CD   = T61.VSL_CD
             AND T1.VSL_CD   = T2.VSL_CD
             AND T1.DELT_FLG = 'N'
         ) AS OP_GNR_SPD
        ,T61.PF_MNVR_IN_HRS
        ,T61.PF_MNVR_OUT_HRS
        ,(CASE
               WHEN     T63.VPS_ETB_DT          IS NOT NULL
                    AND T63.SB_ENG_DT           IS NOT NULL
                    AND T63.BFR_BRTH_ANK_DRP_DT IS NOT NULL
                    AND T63.BFR_BRTH_ANK_OFF_DT IS NOT NULL     THEN (TO_CHAR(T63.BFR_BRTH_ANK_DRP_DT - T63.SB_ENG_DT) * 24) + (TO_CHAR(T63.VPS_ETB_DT - T63.BFR_BRTH_ANK_OFF_DT) * 24)
               WHEN     T63.VPS_ETB_DT          IS NOT NULL
                    AND T63.SB_ENG_DT           IS NOT NULL     THEN TO_CHAR(T63.VPS_ETB_DT - T63.SB_ENG_DT) * 24
          END) AS DEP_MNVR_IN_HRS
        ,(CASE
               WHEN     T63.VPS_ETD_DT            IS NOT NULL
                    AND T63.RUP_DT                IS NOT NULL
                    AND T63.AFT_UNBRTH_ANK_DRP_DT IS NOT NULL
                    AND T63.AFT_UNBRTH_ANK_OFF_DT IS NOT NULL   THEN (TO_CHAR(T63.AFT_UNBRTH_ANK_DRP_DT - T63.VPS_ETD_DT) * 24) + (TO_CHAR(T63.RUP_DT - T63.AFT_UNBRTH_ANK_OFF_DT) * 24)
               WHEN     T63.VPS_ETD_DT            IS NOT NULL
                    AND T63.RUP_DT                IS NOT NULL   THEN TO_CHAR(T63.RUP_DT - T63.VPS_ETD_DT) * 24
          END) AS DEP_MNVR_OUT_HRS
        ,ROUND((TO_CHAR(T63.NXT_PORT_ETA_DT - T63.VPS_ETD_DT) * 24) + (T61.GMT_HRS - T61.NXT_GMT_HRS) / 60 - NVL(T61.PF_MNVR_OUT_HRS, 0), 2) AS INIT_TACTUAL_SEA_TM_HRS
        ,(SELECT D.NVGT_ML_DIST
            FROM FCM_DEP_RPT_TMP D
           WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
             AND D.SKD_VOY_NO   = SUBSTR(T61.NXT_VVD, 5, 4)
             AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
             AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
             AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
             AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD
        ) AS NVGT_ML_DIST
	  ,(CASE
		WHEN T63.BFR_BRTH_ANK_DRP_DT IS NOT NULL
			AND T63.BFR_BRTH_ANK_OFF_DT IS NOT NULL
			AND T63.AFT_UNBRTH_ANK_DRP_DT IS NOT NULL
			AND T63.AFT_UNBRTH_ANK_OFF_DT IS NOT NULL
		THEN ROUND(T61.ACT_PORT_TIME + (TO_CHAR(T63.BFR_BRTH_ANK_OFF_DT - T63.BFR_BRTH_ANK_DRP_DT) * 24) + (TO_CHAR(T63.AFT_UNBRTH_ANK_OFF_DT - T63.AFT_UNBRTH_ANK_DRP_DT) * 24), 2)
		WHEN T63.BFR_BRTH_ANK_DRP_DT IS NOT NULL
			AND T63.BFR_BRTH_ANK_OFF_DT IS NOT NULL
		THEN ROUND(T61.ACT_PORT_TIME + (TO_CHAR(T63.BFR_BRTH_ANK_OFF_DT - T63.BFR_BRTH_ANK_DRP_DT) * 24), 2)
		WHEN T63.AFT_UNBRTH_ANK_DRP_DT IS NOT NULL
			AND T63.AFT_UNBRTH_ANK_OFF_DT IS NOT NULL
		THEN ROUND(T61.ACT_PORT_TIME + (TO_CHAR(T63.AFT_UNBRTH_ANK_OFF_DT - T63.AFT_UNBRTH_ANK_DRP_DT) * 24), 2)
		ELSE T61.ACT_PORT_TIME
		END
	  ) AS INIT_TACTUAL_PORT_TIME
        ,(SELECT D.SKD_VOY_NO || D.SKD_DIR_CD
				|| '\t' || TO_CHAR(TO_NUMBER(D.NVGT_ML_DIST), 'FM999,999')
				|| '\t' || TO_CHAR(TO_NUMBER(D.ENG_ML_DIST), 'FM999,999')
				|| '\t' || CASE WHEN D.ENG_ML_DIST != '0' THEN ROUND((TO_NUMBER(D.ENG_ML_DIST) - TO_NUMBER(D.NVGT_ML_DIST)) / TO_NUMBER(D.ENG_ML_DIST) * 100, 2)
							ELSE 0
							END || '%'
				|| '\t' || TO_CHAR(TO_NUMBER(T63.MNVR_IN_ML_DIST) + TO_NUMBER(D.MNVR_OUT_ML_DIST), 'FM999,999')
				|| '\t' || ROUND(TO_CHAR(T63.VPS_ETD_DT - T63.VPS_ETB_DT) * 24, 2)
				|| '\t' || D.AVG_SPD
				|| '\t' || TO_CHAR(NVL(D.SEA_MN_FOIL_CSM_QTY          , 0)
                           + NVL(D.SEA_GNR_FOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_BLR_FOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                           + NVL(D.SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(D.SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(D.SEA_MN_DOIL_CSM_QTY          , 0)
                           + NVL(D.SEA_GNR_DOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_BLR_DOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                           + NVL(D.SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                           + NVL(D.SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 'FM999,999.9')
				|| '\t' || TO_CHAR(NVL(T63.PORT_MN_FOIL_CSM_QTY          , 0)
                           + NVL(T63.PORT_GNR_FOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_BLR_FOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                           + NVL(T63.PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_MN_DOIL_CSM_QTY          , 0)
                           + NVL(T63.PORT_GNR_DOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_BLR_DOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                           + NVL(T63.PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 'FM999,999.9')
                FROM FCM_DEP_RPT_TMP D
               WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
                 AND D.SKD_VOY_NO   = TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 1, 'FM0000')
                 AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
                 AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
                 AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
                 AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ) AS ONE_AGO_PREVIOUS
        ,(SELECT D.SKD_VOY_NO || D.SKD_DIR_CD
				|| '\t' || TO_CHAR(TO_NUMBER(D.NVGT_ML_DIST), 'FM999,999')
				|| '\t' || TO_CHAR(TO_NUMBER(D.ENG_ML_DIST), 'FM999,999')
				|| '\t' || CASE WHEN D.ENG_ML_DIST != '0' THEN ROUND((TO_NUMBER(D.ENG_ML_DIST) - TO_NUMBER(D.NVGT_ML_DIST)) / TO_NUMBER(D.ENG_ML_DIST) * 100, 2)
							ELSE 0
							END || '%'
				|| '\t' || TO_CHAR(TO_NUMBER(T63.MNVR_IN_ML_DIST) + TO_NUMBER(D.MNVR_OUT_ML_DIST), 'FM999,999')
				|| '\t' || ROUND(TO_CHAR(T63.VPS_ETD_DT - T63.VPS_ETB_DT) * 24, 2)
				|| '\t' || D.AVG_SPD
				|| '\t' || TO_CHAR(NVL(D.SEA_MN_FOIL_CSM_QTY          , 0)
                           + NVL(D.SEA_GNR_FOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_BLR_FOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                           + NVL(D.SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(D.SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(D.SEA_MN_DOIL_CSM_QTY          , 0)
                           + NVL(D.SEA_GNR_DOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_BLR_DOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                           + NVL(D.SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                           + NVL(D.SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 'FM999,999.9')
				|| '\t' || TO_CHAR(NVL(T63.PORT_MN_FOIL_CSM_QTY          , 0)
                           + NVL(T63.PORT_GNR_FOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_BLR_FOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                           + NVL(T63.PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_MN_DOIL_CSM_QTY          , 0)
                           + NVL(T63.PORT_GNR_DOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_BLR_DOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                           + NVL(T63.PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 'FM999,999.9')
                FROM FCM_DEP_RPT_TMP D
               WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
                 AND D.SKD_VOY_NO   = TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 2, 'FM0000')
                 AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
                 AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
                 AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
                 AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ) AS TWO_AGO_PREVIOUS
        ,(SELECT D.SKD_VOY_NO || D.SKD_DIR_CD
				|| '\t' || TO_CHAR(TO_NUMBER(D.NVGT_ML_DIST), 'FM999,999')
				|| '\t' || TO_CHAR(TO_NUMBER(D.ENG_ML_DIST), 'FM999,999')
				|| '\t' || CASE WHEN D.ENG_ML_DIST != '0' THEN ROUND((TO_NUMBER(D.ENG_ML_DIST) - TO_NUMBER(D.NVGT_ML_DIST)) / TO_NUMBER(D.ENG_ML_DIST) * 100, 2)
							ELSE 0
							END || '%'
				|| '\t' || TO_CHAR(TO_NUMBER(T63.MNVR_IN_ML_DIST) + TO_NUMBER(D.MNVR_OUT_ML_DIST), 'FM999,999')
				|| '\t' || ROUND(TO_CHAR(T63.VPS_ETD_DT - T63.VPS_ETB_DT) * 24, 2)
				|| '\t' || D.AVG_SPD
				|| '\t' || TO_CHAR(NVL(D.SEA_MN_FOIL_CSM_QTY          , 0)
                           + NVL(D.SEA_GNR_FOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_BLR_FOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                           + NVL(D.SEA_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(D.SEA_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(D.SEA_MN_DOIL_CSM_QTY          , 0)
                           + NVL(D.SEA_GNR_DOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_BLR_DOIL_CSM_QTY         , 0)
                           + NVL(D.SEA_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                           + NVL(D.SEA_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                           + NVL(D.SEA_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 'FM999,999.9')
				|| '\t' || TO_CHAR(NVL(T63.PORT_MN_FOIL_CSM_QTY          , 0)
                           + NVL(T63.PORT_GNR_FOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_BLR_FOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_MN_LOW_SULP_FOIL_CSM_QTY , 0)
                           + NVL(T63.PORT_GNR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_BLR_LOW_SULP_FOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_MN_DOIL_CSM_QTY          , 0)
                           + NVL(T63.PORT_GNR_DOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_BLR_DOIL_CSM_QTY         , 0)
                           + NVL(T63.PORT_MN_LOW_SULP_DOIL_CSM_QTY , 0)
                           + NVL(T63.PORT_GNR_LOW_SULP_DOIL_CSM_QTY, 0)
                           + NVL(T63.PORT_BLR_LOW_SULP_DOIL_CSM_QTY, 0), 'FM999,999.9')
                FROM FCM_DEP_RPT_TMP D
               WHERE D.VSL_CD       = SUBSTR(T61.NXT_VVD, 1, 4)
                 AND D.SKD_VOY_NO   = TO_CHAR(SUBSTR(T61.NXT_VVD, 5, 4) - 3, 'FM0000')
                 AND D.SKD_DIR_CD   = SUBSTR(T61.NXT_VVD, 9, 4)
                 AND D.DEP_PORT_CD  = T61.NXT_PORT_CD
                 AND D.CLPT_IND_SEQ = T61.NXT_CLPT_IND_SEQ
                 AND D.NXT_PORT_CD  = T61.NXT_NXT_PORT_CD  ) AS THREE_AGO_PREVIOUS
    FROM (
            SELECT T51.VVD_SEQ
                  ,T51.VSL_CD
                  ,T51.SKD_VOY_NO
                  ,T51.SKD_DIR_CD
                  ,T51.VSL_SLAN_CD
                  ,T51.VSL_CD || T51.SKD_VOY_NO || T51.SKD_DIR_CD AS VVD
                  ,T51.PF_SKD_TP_CD
                  ,T51.ST_PORT_CD
                  ,T51.VPS_PORT_CD
                  ,T51.CLPT_IND_SEQ
                  ,T51.CLPT_SEQ
                  ,T51.SLAN_CD
                  ,T51.PORT_SKD_STS_CD
                  ,T51.YD_CD
                  ,DECODE(T51.YD_CD, NULL, '', SUBSTR(T51.YD_CD, 6, 2)) AS TML_CD
                  ,T51.CALL_YD_IND_SEQ
                  ,TO_CHAR(T51.PF_ETA_DT  , 'YYYY-MM-DD HH24:MI') AS PF_ETA_DT
                  ,TO_CHAR(T51.PF_ETB_DT  , 'YYYY-MM-DD HH24:MI') AS PF_ETB_DT
                  ,TO_CHAR(T51.PF_ETD_DT  , 'YYYY-MM-DD HH24:MI') AS PF_ETD_DT
                  ,TO_CHAR(T51.NXT_ETA_DT , 'YYYY-MM-DD HH24:MI') AS NXT_ETA_DT
                  ,TO_CHAR(T51.NXT_ETD_DT , 'YYYY-MM-DD HH24:MI') AS NXT_ETD_DT
                  ,TO_CHAR(T51.INIT_ETA_DT, 'YYYY-MM-DD HH24:MI') AS INIT_ETA_DT
                  ,TO_CHAR(T51.INIT_ETB_DT, 'YYYY-MM-DD HH24:MI') AS INIT_ETB_DT
                  ,TO_CHAR(T51.INIT_ETD_DT, 'YYYY-MM-DD HH24:MI') AS INIT_ETD_DT
                  ,TO_CHAR(T51.VPS_ETA_DT , 'YYYY-MM-DD HH24:MI') AS VPS_ETA_DT
                  ,TO_CHAR(T51.VPS_ETB_DT , 'YYYY-MM-DD HH24:MI') AS VPS_ETB_DT
                  ,TO_CHAR(T51.VPS_ETD_DT , 'YYYY-MM-DD HH24:MI') AS VPS_ETD_DT
                  ,T51.SKD_CNG_STS_CD
                  ,T51.TURN_PORT_FLG
                  ,T51.TURN_PORT_IND_CD
                  ,T51.TURN_SKD_VOY_NO
                  ,T51.TURN_SKD_DIR_CD
                  ,T51.TURN_CLPT_IND_SEQ
                  ,NVL(T51.LNK_DIST    , NVL(T52.LNK_DIST    , 0)) AS LNK_DIST
                  ,NVL(T51.LNK_SPD     , NVL(T52.LNK_SPD     , 0)) AS LNK_SPD
                  ,NVL(T51.SEA_BUF_HRS , NVL(T52.SEA_BUF_HRS , 0)) AS SEA_BUF_HRS
                  ,NVL(T51.PORT_BUF_HRS, NVL(T52.PORT_BUF_HRS, 0)) AS PORT_BUF_HRS
                  ,NVL(T51.TZTM_HRS    , NVL(T52.TZTM_HRS    , 0)) AS TZTM_HRS
                  ,NVL(T51.PORT_WRK_HRS, NVL(T52.ACT_WRK_HRS , 0)) AS ACT_WRK_HRS
                  ,NVL(T51.MNVR_OUT_HRS, NVL(T52.MNVR_OUT_HRS, 0)) AS MNVR_OUT_HRS
                  ,NVL(T51.MNVR_IN_HRS , NVL(T52.MNVR_IN_HRS , 0)) AS MNVR_IN_HRS
                  ,NVL(T52.LNK_DIST    , 0) AS DIST_PF_LNK
                  ,NVL(T52.LNK_SPD     , 0) AS SPD_PF_LNK
                  ,NVL(T52.SEA_BUF_HRS , 0) AS PF_SEA_BUF_HRS
                  ,NVL(T52.PORT_BUF_HRS, 0) AS PF_PORT_BUF_HRS
                  ,NVL(T52.TZTM_HRS    , 0) AS PF_SEA_TM_HRS
                  ,NVL(T52.ACT_WRK_HRS , 0) AS PF_ACT_WRK_HRS
                  ,NVL(T52.MNVR_OUT_HRS, 0) AS PF_MNVR_OUT_HRS
                  ,NVL(T52.MNVR_IN_HRS , 0) AS PF_MNVR_IN_HRS
                  ,ROUND((TO_CHAR(T51.NXT_ETA_DT - T51.VPS_ETD_DT) * 24) + (T51.GMT_HRS - T51.NXT_GMT_HRS) / 60 - NVL(T52.MNVR_OUT_HRS, 0), 2) AS OPMZ_SEA_TM_HRS
                  ,ROUND((TO_CHAR(T51.VPS_ETD_DT - T51.VPS_ETB_DT) * 24), 2) AS PORT_TIME
                  ,ROUND((TO_CHAR(LEAD(T54.ACT_ARR_DT) OVER (ORDER BY DECODE(T51.SKD_CNG_STS_CD, 'S', 'X', 'A'), T51.VVD_SEQ, T51.VSL_CD, T51.SKD_VOY_NO, T51.SKD_DIR_CD, T51.CLPT_SEQ) - T54.ACT_DEP_DT) * 24) + (T51.GMT_HRS - T51.NXT_GMT_HRS) / 60 - NVL(T52.MNVR_OUT_HRS, 0), 2) AS ACT_OPMZ_SEA_TM_HRS
                  ,ROUND((TO_CHAR(T54.ACT_DEP_DT - T54.ACT_BRTH_DT) * 24), 2) AS ACT_PORT_TIME
                  ,T51.NXT_VVD
                  ,T51.NXT_PORT_CD
                  ,T51.NXT_NXT_PORT_CD
                  ,T51.NXT_CLPT_IND_SEQ
                  ,(SELECT OPMZ_DIST
                      FROM VSK_PORT_OPMZ_DIST D
                     WHERE D.FM_YD_CD     = T51.VPS_PORT_CD
                       AND D.TO_YD_CD     = T51.NXT_PORT_CD
                       AND D.FM_YD_GRP_ID = T51.YD_GRP_ID
                       AND D.TO_YD_GRP_ID = T51.NXT_YD_GRP_ID ) AS DIST_OPMZ
                  ,(SELECT OPMZ_DIST
                      FROM VSK_PORT_OPMZ_DIST D
                     WHERE D.FM_YD_CD     = T51.VPS_PORT_CD
                       AND D.TO_YD_CD     = T51.NXT_PORT_CD
                       AND D.FM_YD_GRP_ID = T51.YD_GRP_ID
                       AND D.TO_YD_GRP_ID = 'All'             ) AS DIST_OPMZ_TO_ALL
                   ,(SELECT OPMZ_DIST
                      FROM VSK_PORT_OPMZ_DIST D
                     WHERE D.FM_YD_CD     = T51.VPS_PORT_CD
                       AND D.TO_YD_CD     = T51.NXT_PORT_CD
                       AND D.FM_YD_GRP_ID = 'All'
                       AND D.TO_YD_GRP_ID = T51.NXT_YD_GRP_ID ) AS DIST_OPMZ_FM_ALL
                   ,(SELECT OPMZ_DIST
                      FROM VSK_PORT_OPMZ_DIST D
                     WHERE D.FM_YD_CD     = T51.VPS_PORT_CD
                       AND D.TO_YD_CD     = T51.NXT_PORT_CD
                       AND D.FM_YD_GRP_ID = 'All'
                       AND D.TO_YD_GRP_ID = 'All'             ) AS DIST_OPMZ_ALL
                   ,T51.GMT_HRS
                   ,T51.NXT_GMT_HRS
              FROM (
                      SELECT T41.LVL AS VVD_SEQ
                            ,T41.VSL_SLAN_CD
                            ,T41.SKD_STS_CD
                            ,T41.SKD_VOY_TP_CD
                            ,T41.SKD_USD_IND_CD
                            ,T41.PF_SKD_TP_CD
                            ,T41.ST_PORT_CD
                            ,T41.N1ST_PORT_BRTH_DT
                            ,T41.PSDO_VVD_CD
                            ,T41.CO_CD
                            ,T41.SKD_RMK
                            ,T41.CRE_USR_ID AS SKD_CRE_USE_ID
                            ,T41.CRE_DT     AS SKD_CRE_DT
                            ,T41.UPD_USR_ID AS SKD_UPD_USE_ID
                            ,T41.UPD_DT     AS SKD_UPD_DT
                            ,T42.*
                            ,LEAD(T42.VSL_CD||T42.SKD_VOY_NO||T42.SKD_DIR_CD)  OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_VVD
                            ,LEAD(T42.VPS_PORT_CD)    OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_PORT_CD
                            ,LEAD(T42.VPS_PORT_CD, 2) OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_NXT_PORT_CD
                            ,LEAD(T42.CLPT_IND_SEQ)   OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_CLPT_IND_SEQ
                            ,LEAD(T42.VPS_ETA_DT )    OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_ETA_DT
                            ,LEAD(T42.VPS_ETD_DT )    OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_ETD_DT
                            ,T43.GMT_HRS
                            ,LEAD(T43.GMT_HRS) OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ) AS NXT_GMT_HRS
                            ,NVL(T44.YD_GRP_ID, 'All') AS YD_GRP_ID
                            ,NVL(LEAD(T44.YD_GRP_ID) OVER (ORDER BY DECODE(T42.SKD_CNG_STS_CD, 'S', 'X', 'A'), T41.LVL, T41.VSL_CD, T41.SKD_VOY_NO, T41.SKD_DIR_CD, CLPT_SEQ), 'All') AS NXT_YD_GRP_ID
                            ,T41.VVD_SEQ AS VVD_CNT
                        FROM (
                                SELECT T31.LVL
                                      ,T32.*
                                      ,ROW_NUMBER() OVER (ORDER BY LVL) AS VVD_SEQ
                                      ,COUNT(*) OVER () - 1 AS MAX_VVD
                                  FROM (  /* 조회 조건의 이전 항차 */
                                          SELECT DISTINCT
                                                 -LEVEL AS LVL
                                                ,VSL_CD
                                                ,TURN_SKD_VOY_NO AS SKD_VOY_NO
                                                ,TURN_SKD_DIR_CD AS SKD_DIR_CD
                                                ,'LAG' AS DIR
                                            FROM VSK_VSL_PORT_SKD
                                           WHERE LEVEL <= FLOOR(TO_NUMBER(@[vvd_seq]) / 2)
                                             AND (TURN_SKD_VOY_NO IS NOT NULL OR TURN_SKD_DIR_CD IS NOT NULL)
                                      START WITH VSL_CD                = @[vsl_cd]
                                             AND SKD_VOY_NO            = @[skd_voy_no]
                                             AND SKD_DIR_CD            = @[skd_dir_cd]
                                             AND TURN_PORT_IND_CD     IN ('Y', 'N')
                                      CONNECT BY PRIOR TURN_SKD_VOY_NO = SKD_VOY_NO
                                             AND PRIOR TURN_SKD_DIR_CD = SKD_DIR_CD
                                             AND PRIOR VSL_CD          = VSL_CD
                                             AND TURN_PORT_IND_CD     IN ('Y', 'N')
                                             AND LEVEL <= FLOOR(TO_NUMBER(@[vvd_seq]) / 2)
                                          UNION ALL
                                          /* 조회 조건의 항차 */
                                          SELECT 0 AS LVL
                                                ,@[vsl_cd]     AS VSL_CD
                                                ,@[skd_voy_no] AS SKD_VOY_NO
                                                ,@[skd_dir_cd] AS SKD_DIR_CD
                                                ,NULL          AS DIR
                                            FROM DUAL
                                          UNION ALL
                                          /* 조회 조건의 이후 항차 */
                                          SELECT DISTINCT
                                                 LEVEL AS LVL
                                                ,VSL_CD
                                                ,TURN_SKD_VOY_NO AS SKD_VOY_NO
                                                ,TURN_SKD_DIR_CD AS SKD_DIR_CD
                                                ,'LEAD' AS DIR
                                            FROM VSK_VSL_PORT_SKD
                                           WHERE LEVEL <= FLOOR(TO_NUMBER(@[vvd_seq]) / 2) + 1
                                             AND (TURN_SKD_VOY_NO IS NOT NULL OR TURN_SKD_DIR_CD IS NOT NULL)
                                      START WITH VSL_CD                = @[vsl_cd]
                                             AND SKD_VOY_NO            = @[skd_voy_no]
                                             AND SKD_DIR_CD            = @[skd_dir_cd]
                                             AND TURN_PORT_IND_CD     IN ('D', 'V', 'F')
                                      CONNECT BY PRIOR TURN_SKD_VOY_NO = SKD_VOY_NO
                                             AND PRIOR TURN_SKD_DIR_CD = SKD_DIR_CD
                                             AND PRIOR VSL_CD          = VSL_CD
                                             AND TURN_PORT_IND_CD IN ('D', 'V', 'F')
                                             AND LEVEL <= FLOOR(TO_NUMBER(@[vvd_seq]) / 2) + 1
                                       ) T31
                                      ,VSK_VSL_SKD T32
                                 WHERE T31.VSL_CD     = T32.VSL_CD
                                   AND T31.SKD_VOY_NO = T32.SKD_VOY_NO
                                   AND T31.SKD_DIR_CD = T32.SKD_DIR_CD
                             ) T41
                            ,VSK_VSL_PORT_SKD T42
                            ,MDM_LOCATION     T43
                            ,VSK_YD_GRP       T44
                       WHERE T41.VSL_CD     = T42.VSL_CD
                         AND T41.SKD_VOY_NO = T42.SKD_VOY_NO
                         AND T41.SKD_DIR_CD = T42.SKD_DIR_CD
                         AND T42.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
                         AND T42.VPS_PORT_CD = T43.LOC_CD
                         AND T42.YD_CD       = T44.YD_CD (+)
                   ) T51
                  ,(
                      SELECT T1.VSL_SLAN_CD
                            ,T1.PF_SVC_TP_CD
                            ,T1.PORT_CD
                            ,DECODE(VIRT_FLG, 'V', T1.DIR_CD2, T2.SKD_DIR_CD) AS SKD_DIR_CD
                            ,T1.CLPT_SEQ
                            ,T2.PORT_ROTN_SEQ
                            ,T2.YD_CD
                            ,CALL_YD_IND_SEQ
                            ,TURN_PORT_FLG
                            ,TURN_PORT_IND_CD
                            ,ETB_DY_CD
                            ,ETB_DY_NO
                            ,ETB_TM_HRMNT
                            ,ETD_DY_CD
                            ,ETD_DY_NO
                            ,ETD_TM_HRMNT
                            ,LNK_DIST
                            ,LNK_SPD
                            ,TZTM_HRS
                            ,SEA_BUF_HRS
                            ,SEA_BUF_SPD
                            ,MNVR_IN_HRS
                            ,MNVR_OUT_HRS
                            ,IB_IPCGO_QTY
                            ,IB_OCN_CGO_QTY
                            ,OB_IPCGO_QTY
                            ,OB_OCN_CGO_QTY
                            ,TML_PROD_QTY
                            ,CRN_KNT
                            ,ACT_WRK_HRS
                            ,PORT_BUF_HRS
                            ,CRE_USR_ID
                            ,CRE_DT
                            ,UPD_USR_ID
                            ,UPD_DT
                            ,LEAD(T1.PORT_CD) OVER (ORDER BY T1.VSL_SLAN_CD, T1.PF_SVC_TP_CD, DIR_CD2, T2.PORT_ROTN_SEQ) AS NXT_PORT
                        FROM (
                                SELECT NVL(T3.VSL_SLAN_CD , T1.VSL_SLAN_CD ) AS VSL_SLAN_CD
                                      ,NVL(T3.PF_SVC_TP_CD, T1.PF_SVC_TP_CD) AS PF_SVC_TP_CD
                                      ,NVL(T3.PORT_CD     , T1.PORT_CD     ) AS PORT_CD
                                      ,DECODE(T3.SKD_DIR_CD, NULL, ( SELECT S.VSL_SLAN_DIR_CD
                                                                       FROM MDM_VSL_SVC_LANE_DIR S
                                                                      WHERE T1.VSL_SLAN_CD = S.VSL_SLAN_CD
                                                                        AND T1.SKD_DIR_CD != S.VSL_SLAN_DIR_CD
                                                                        AND S.DELT_FLG     = 'N'
                                                                        AND ROWNUM = 1 ), T1.SKD_DIR_CD) AS SKD_DIR_CD
                                      ,DECODE(T3.CLPT_SEQ, NULL, ( SELECT T1.CLPT_SEQ
                                                                     FROM VSK_PF_SKD_DTL M
                                                                    WHERE T1.VSL_SLAN_CD      = M.VSL_SLAN_CD
                                                                      AND T1.PF_SVC_TP_CD     = M.PF_SVC_TP_CD
                                                                      AND T1.SKD_DIR_CD       = ( SELECT S.VSL_SLAN_DIR_CD
                                                                                                    FROM MDM_VSL_SVC_LANE_DIR S
                                                                                                   WHERE T1.VSL_SLAN_CD = S.VSL_SLAN_CD
                                                                                                     AND T1.SKD_DIR_CD  = S.VSL_SLAN_DIR_CD
                                                                                                     AND S.DELT_FLG     = 'N' )
                                                                      AND T1.PORT_CD          = M.PORT_CD
                                                                      AND T1.CLPT_SEQ         = M.CLPT_SEQ
                                                                      AND M.TURN_PORT_IND_CD != 'F' ), T1.CLPT_SEQ) AS CLPT_SEQ
                                      ,DECODE(T3.SKD_DIR_CD, NULL, 'V', 'N') AS VIRT_FLG
                                      ,T1.SKD_DIR_CD AS DIR_CD2
                                  FROM VSK_PF_CALL_PORT     T1
                                      ,MDM_VSL_SVC_LANE_DIR T2
                                      ,VSK_PF_SKD_DTL       T3
                                 WHERE T1.VSL_SLAN_CD  = T2.VSL_SLAN_CD
                                   AND T1.SKD_DIR_CD   = T2.VSL_SLAN_DIR_CD
                                   AND T1.VSL_SLAN_CD  = T3.VSL_SLAN_CD  (+)
                                   AND T1.PF_SVC_TP_CD = T3.PF_SVC_TP_CD (+)
                                   AND T1.SKD_DIR_CD   = T3.SKD_DIR_CD   (+)
                                   AND T1.PORT_CD      = T3.PORT_CD      (+)
                                   AND T1.CLPT_SEQ     = T3.CLPT_SEQ     (+)
                                   AND T3.TURN_PORT_IND_CD (+) != 'F'
                             ) T1
                            ,VSK_PF_SKD_DTL T2
                       WHERE T1.VSL_SLAN_CD  = T2.VSL_SLAN_CD
                         AND T1.PF_SVC_TP_CD = T2.PF_SVC_TP_CD
                         AND T1.PORT_CD      = T2.PORT_CD
                         AND T1.SKD_DIR_CD   = T2.SKD_DIR_CD
                         AND T1.CLPT_SEQ     = T2.CLPT_SEQ
                   ) T52
                  ,VSK_PORT_OPMZ_DIST T53
                  ,VSK_ACT_PORT_SKD   T54
             WHERE T51.VSL_SLAN_CD   = T52.VSL_SLAN_CD  (+)
               AND T51.PF_SKD_TP_CD  = T52.PF_SVC_TP_CD (+)
               AND T51.SKD_DIR_CD    = T52.SKD_DIR_CD   (+)
               AND T51.VPS_PORT_CD   = T52.PORT_CD      (+)
               AND T51.CLPT_IND_SEQ  = T52.CLPT_SEQ     (+)
               AND T51.VPS_PORT_CD   = T53.FM_YD_CD     (+)
               AND T51.NXT_PORT_CD   = T53.TO_YD_CD     (+)
               AND T51.YD_GRP_ID     = T53.FM_YD_GRP_ID (+)
               AND T51.NXT_YD_GRP_ID = T53.TO_YD_GRP_ID (+)
               AND T51.VSL_CD        = T54.VSL_CD       (+)
               AND T51.SKD_VOY_NO    = T54.SKD_VOY_NO   (+)
               AND T51.SKD_DIR_CD    = T54.SKD_DIR_CD   (+)
               AND T51.VPS_PORT_CD   = T54.VPS_PORT_CD  (+)
               AND T51.CLPT_IND_SEQ  = T54.CLPT_IND_SEQ (+)
               AND T51.VVD_CNT      <= @[vvd_seq]
         ) T61
        ,FCM_VSL_PORT_STND_FUEL_OIL T62
        ,FCM_DEP_RPT_TMP            T63
   WHERE T61.VSL_CD       = T62.VSL_CD       (+)
     AND T61.SKD_VOY_NO   = T62.SKD_VOY_NO   (+)
     AND T61.SKD_DIR_CD   = T62.SKD_DIR_CD   (+)
     AND T61.VPS_PORT_CD  = T62.VPS_PORT_CD  (+)
     AND T61.CLPT_IND_SEQ = T62.CLPT_IND_SEQ (+)
     AND T61.VSL_CD       = T63.VSL_CD       (+)
     AND T61.SKD_VOY_NO   = T63.SKD_VOY_NO   (+)
     AND T61.SKD_DIR_CD   = T63.SKD_DIR_CD   (+)
     AND T61.VPS_PORT_CD  = T63.DEP_PORT_CD  (+)
     AND T61.CLPT_IND_SEQ = T63.CLPT_IND_SEQ (+)
ORDER BY VVD_SEQ
        ,CLPT_SEQ			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="vvd_seq" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
