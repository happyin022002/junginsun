<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOCreateVslSkdPhaseInOutHistoryCSQL">
			<desc><![CDATA[SKD 변경시 Phase In/Out의 경우 히스토리 생성(SPC모듈 에서 참조)]]></desc>
			<sql><![CDATA[
MERGE INTO VSK_PHS_IO_HIS HIS
    USING
    (
        SELECT      X.VSL_CD
                            , X.SKD_VOY_NO
                            , X.SKD_DIR_CD
                            , X.VPS_PORT_CD
                            , X.CLPT_IND_SEQ
                            , X.CLPT_SEQ
                            , X.YD_CD
                            , X.SLAN_CD AS VSL_SLAN_CD
                            , X.SKD_CNG_STS_CD
                            , X.PF_SVC_TP_CD
                            , X.PF_PORT_ROTN_SEQ
                            , X.REF_VSL_CD
                            , X.REF_SKD_VOY_NO
                            , X.REF_SKD_DIR_CD
                            , X.REF_VPS_PORT_CD
                            , X.REF_CLPT_IND_SEQ
                            , X.REF_CLPT_SEQ
                            , X.REF_YD_CD
                            , X.REF_VSL_SLAN_CD
                            , X.REF_PF_SVC_TP_CD
                            , X.REF_PORT_ROTN_SEQ
                            , @[cre_usr_id] AS CRE_USR_ID
                            , SYSDATE   AS CRE_DT
                            , @[upd_usr_id] AS UPD_USR_ID
                            , SYSDATE   AS UPD_DT
                FROM    (
                        SELECT     T3.SLAN_CD 
                                  , T3.VSL_CD
                                  , T3.SKD_VOY_NO
                                  , T3.SKD_DIR_CD
                                  , T4.VSL_SLAN_DIR_SEQ AS DIR_SEQ
                                  , T3.VPS_PORT_CD
                                  , T3.CLPT_SEQ
                                  , T3.YD_CD
                                  , T3.CLPT_IND_SEQ
                                  , T3.SKD_CNG_STS_CD
                                  , T3.PF_SVC_TP_CD
                                  , T3.PORT_ROTN_SEQ AS PF_PORT_ROTN_SEQ
                                  , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.SLAN_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.SLAN_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.SLAN_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.SLAN_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.SLAN_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                                    END
                                                                                         END
                                                                            END
                                                                END                                                       
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.SLAN_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.SLAN_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.SLAN_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.SLAN_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.SLAN_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                               END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_VSL_SLAN_CD
                                  
                                , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.VSL_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.VSL_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.VSL_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.VSL_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.VSL_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.VSL_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.VSL_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.VSL_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.VSL_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.VSL_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_VSL_CD
                                                        
                                  , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.SKD_VOY_NO, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.SKD_VOY_NO, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.SKD_VOY_NO, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.SKD_VOY_NO, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.SKD_VOY_NO, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.SKD_VOY_NO, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.SKD_VOY_NO, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.SKD_VOY_NO, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.SKD_VOY_NO, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.SKD_VOY_NO, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_SKD_VOY_NO
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.SKD_DIR_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.SKD_DIR_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.SKD_DIR_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.SKD_DIR_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.SKD_DIR_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.SKD_DIR_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.SKD_DIR_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.SKD_DIR_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.SKD_DIR_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.SKD_DIR_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_SKD_DIR_CD
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.VPS_PORT_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.VPS_PORT_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.VPS_PORT_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.VPS_PORT_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.VPS_PORT_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.VPS_PORT_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.VPS_PORT_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.VPS_PORT_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.VPS_PORT_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.VPS_PORT_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_VPS_PORT_CD
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.CLPT_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.CLPT_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.CLPT_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.CLPT_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.CLPT_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.CLPT_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.CLPT_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.CLPT_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.CLPT_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.CLPT_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_CLPT_SEQ
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.YD_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.YD_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.YD_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.YD_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.YD_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.YD_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.YD_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.YD_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.YD_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.YD_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_YD_CD
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.CLPT_IND_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.CLPT_IND_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.CLPT_IND_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.CLPT_IND_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.CLPT_IND_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.CLPT_IND_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.CLPT_IND_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.CLPT_IND_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_ETA_DT, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.CLPT_IND_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.CLPT_IND_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_CLPT_IND_SEQ
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_PF_SVC_TP_CD
                                   
                                 , CASE WHEN   T3.SKD_CNG_STS_CD = 'O' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LAG (T3.PORT_ROTN_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LAG (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LAG (T3.PORT_ROTN_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LAG (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LAG (T3.PORT_ROTN_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LAG (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LAG (T3.PORT_ROTN_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LAG (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LAG (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LAG (T3.PORT_ROTN_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END
                                         WHEN   T3.SKD_CNG_STS_CD = 'I' 
                                                THEN
                                                CASE WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                     THEN   LEAD (T3.PORT_ROTN_SEQ, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        
                                                     WHEN   T3.PF_SVC_TP_CD IS NULL AND LEAD (T3.PF_SVC_TP_CD, 1) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                     THEN
                                                            CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                 THEN   LEAD (T3.PORT_ROTN_SEQ, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                 WHEN   LEAD (T3.PF_SVC_TP_CD, 2) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL     
                                                                 THEN
                                                                        CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                             THEN   LEAD (T3.PORT_ROTN_SEQ, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                             WHEN   LEAD (T3.PF_SVC_TP_CD, 3) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                             THEN
                                                                                    CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                         THEN   LEAD (T3.PORT_ROTN_SEQ, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                         WHEN   LEAD (T3.PF_SVC_TP_CD, 4) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NULL
                                                                                         THEN    
                                                                                                CASE WHEN   LEAD (T3.PF_SVC_TP_CD, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ) IS NOT NULL
                                                                                                     THEN   LEAD (T3.PORT_ROTN_SEQ, 5) OVER (PARTITION BY T3.VSL_CD ORDER BY T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)
                                                                                                     END
                                                                                         END
                                                                            END
                                                                END                                                        
                                                END 
                                   END  AS REF_PORT_ROTN_SEQ
                                   
                                  
                
                        FROM        (                                   
                                    SELECT  P.PF_SVC_TP_CD, P.PORT_ROTN_SEQ, X.*
                                    FROM    (
                                            SELECT  V1.VSL_SLAN_CD, V1.PF_SKD_TP_CD, V2.*
                                            FROM    VSK_VSL_SKD V1
                                                    , VSK_VSL_PORT_SKD V2
                                            WHERE   1=1
                                            AND     V2.VSL_CD   = V1.VSL_CD
                                            AND     V2.SKD_VOY_NO = V1.SKD_VOY_NO
                                            AND     V2.SKD_DIR_CD = V1.SKD_DIR_CD
                                            AND     V2.SLAN_CD    = V1.VSL_SLAN_CD
                                            ) X
                                            , VSK_PF_SKD_DTL P
                                            , MDM_VSL_SVC_LANE_DIR M
                                    WHERE   1=1
                                    AND     X.SLAN_CD   = P.VSL_SLAN_CD (+)
                                    AND     X.PF_SKD_TP_CD  = P.PF_SVC_TP_CD (+)
                                    AND     X.VPS_PORT_CD   = P.PORT_CD (+)
                                    AND     X.SKD_DIR_CD    = P.SKD_DIR_CD (+)
                                    AND     X.CLPT_IND_SEQ  = P.CLPT_SEQ (+)
                                    AND     X.YD_CD         = P.YD_CD (+)
                                    AND     X.SLAN_CD       = M.VSL_SLAN_CD
                                    AND     X.SKD_DIR_CD    = M.VSL_SLAN_DIR_CD
                                    ORDER BY    X.VSL_CD, X.SKD_VOY_NO, M.VSL_SLAN_DIR_SEQ, X.SKD_DIR_CD, X.CLPT_SEQ) T3
                                  , MDM_VSL_SVC_LANE_DIR T4
                                  , MDM_VSL_SVC_LANE T5
                        WHERE       1=1
                        AND         T3.SLAN_CD      = T4.VSL_SLAN_CD
                        AND         T3.SKD_DIR_CD   = T4.VSL_SLAN_DIR_CD
                        AND         T3.SLAN_CD      = T5.VSL_SLAN_CD
                        AND         NVL(T3.SKD_CNG_STS_CD, ' ') <> 'S'
                        ORDER BY    T3.VSL_CD, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.SKD_DIR_CD, T3.CLPT_SEQ
                        ) X
                WHERE   1=1
                AND     NVL(X.SKD_CNG_STS_CD, '*') IN ('O', 'I')
                AND     X.VSL_CD = @[vsl_cd]
                AND     X.SKD_VOY_NO = @[skd_voy_no]
                AND     X.SKD_DIR_CD = @[skd_dir_cd]
                AND     X.VPS_PORT_CD = @[vps_port_cd]
                AND     X.CLPT_IND_SEQ = @[clpt_ind_seq]
    )   SRC
    ON
    (
                HIS.VSL_CD      = SRC.VSL_CD
                AND HIS.SKD_VOY_NO  = SRC.SKD_VOY_NO
                AND HIS.SKD_DIR_CD  = SRC.SKD_DIR_CD
                AND HIS.VPS_PORT_CD = SRC.VPS_PORT_CD
                AND HIS.CLPT_IND_SEQ = SRC.CLPT_IND_SEQ	
    )
WHEN MATCHED THEN 
UPDATE
SET            
                  CLPT_SEQ			=	SRC.CLPT_SEQ
                , YD_CD				=	SRC.YD_CD
                , VSL_SLAN_CD			=	SRC.VSL_SLAN_CD
                , SKD_CNG_STS_CD		=	SRC.SKD_CNG_STS_CD
                , PF_SVC_TP_CD		=	SRC.PF_SVC_TP_CD
                , PF_PORT_ROTN_SEQ	=	SRC.PF_PORT_ROTN_SEQ
                , REF_VSL_CD			=	SRC.REF_VSL_CD
                , REF_SKD_VOY_NO		=	SRC.REF_SKD_VOY_NO
                , REF_SKD_DIR_CD		=	SRC.REF_SKD_DIR_CD
                , REF_VPS_PORT_CD		=	SRC.REF_VPS_PORT_CD
                , REF_CLPT_IND_SEQ	=	SRC.REF_CLPT_IND_SEQ
                , REF_CLPT_SEQ		=	SRC.REF_CLPT_SEQ
                , REF_YD_CD			=	SRC.REF_YD_CD
                , REF_VSL_SLAN_CD		=	SRC.REF_VSL_SLAN_CD
                , REF_PF_SVC_TP_CD		=	SRC.REF_PF_SVC_TP_CD
                , REF_PORT_ROTN_SEQ		=	SRC.REF_PORT_ROTN_SEQ
                , UPD_USR_ID			=	SRC.UPD_USR_ID
                , UPD_DT				=	SRC.UPD_DT

                
WHEN NOT MATCHED THEN
INSERT (
                  VSL_CD
                , SKD_VOY_NO
                , SKD_DIR_CD
                , VPS_PORT_CD
                , CLPT_IND_SEQ
                , CLPT_SEQ
                , YD_CD
                , VSL_SLAN_CD
                , SKD_CNG_STS_CD
                , PF_SVC_TP_CD
                , PF_PORT_ROTN_SEQ
                , REF_VSL_CD
                , REF_SKD_VOY_NO
                , REF_SKD_DIR_CD
                , REF_VPS_PORT_CD
                , REF_CLPT_IND_SEQ
                , REF_CLPT_SEQ
                , REF_YD_CD
                , REF_VSL_SLAN_CD
                , REF_PF_SVC_TP_CD
                , REF_PORT_ROTN_SEQ
                , CRE_USR_ID
                , CRE_DT
                , UPD_USR_ID
                , UPD_DT
       )    
VALUES (
                  SRC.VSL_CD
                , SRC.SKD_VOY_NO
                , SRC.SKD_DIR_CD
                , SRC.VPS_PORT_CD
                , SRC.CLPT_IND_SEQ
                , SRC.CLPT_SEQ
                , SRC.YD_CD
                , SRC.VSL_SLAN_CD
                , SRC.SKD_CNG_STS_CD
                , SRC.PF_SVC_TP_CD
                , SRC.PF_PORT_ROTN_SEQ
                , SRC.REF_VSL_CD
                , SRC.REF_SKD_VOY_NO
                , SRC.REF_SKD_DIR_CD
                , SRC.REF_VPS_PORT_CD
                , SRC.REF_CLPT_IND_SEQ
                , SRC.REF_CLPT_SEQ
                , SRC.REF_YD_CD
                , SRC.REF_VSL_SLAN_CD
                , SRC.REF_PF_SVC_TP_CD
                , SRC.REF_PORT_ROTN_SEQ
                , SRC.CRE_USR_ID
                , SRC.CRE_DT
                , SRC.UPD_USR_ID
                , SRC.UPD_DT

	   )			]]></sql>
			<params>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
