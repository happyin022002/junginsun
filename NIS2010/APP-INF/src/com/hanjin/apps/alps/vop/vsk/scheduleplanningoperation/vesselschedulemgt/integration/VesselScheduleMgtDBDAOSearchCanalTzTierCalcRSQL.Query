<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOSearchCanalTzTierCalcRSQL">
			<desc><![CDATA[BAY PLAN SURCHARGE를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT 
        VSL_CD || VOY_NO || DIR_CD VVD
        ,VSL_CD
		, VOY_NO
		, DIR_CD
		, PORT_CD AS SCG_CAR_PORT_CD
		, CALL_IND
        , CASE WHEN RNK='Y' THEN
            TIER_1ST
        ELSE
            TIER_2ND
        END SCG_CAR_TIER
        , CASE WHEN RNK='Y' THEN
            TEU_1ST
        ELSE
            TEU_2ND
        END SCG_CAR_TEU
		, BOX AS SCG_CAR_BOX
		, TR_SCG_RTO AS SCG_CAR_RATIO
FROM	(
		SELECT	ROW_NUMBER () OVER (PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_NO DESC) AS SEQ
				, VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND
				, DECODE(SIGN(TEU - 11), -1, 'N', 'Y') AS RNK
				, TIER_NO AS TIER_1ST				
				, LEAD (TIER_NO) OVER (PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_NO DESC) AS TIER_2ND
				, TEU AS TEU_1ST
				, LEAD (TEU) OVER (PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_NO DESC) AS TEU_2ND
				, BOX				
		FROM	(
				SELECT	VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND
						, TIER_NO AS TIER_NO
						, MAX(MAX_TIER_BY_BAY) AS TIER_ORG
						, SUM(CASE WHEN (TIER = MAX_TIER_BY_BAY) THEN TEU ELSE 0 END) AS TEU
                        , BOX
				FROM	(	
							SELECT	T1.VSL_CD
									, T1.VOY_NO
									, T1.DIR_CD
									, T1.PORT_CD
									, T1.CALL_IND
									, T1.PLAN_TYPE
									, T1.BAY
									, T1.TIER									
									, MAX(T1.TIER) OVER (PARTITION BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.BAY ) AS MAX_TIER_BY_BAY
									, COUNT (DISTINCT T1.TIER) OVER (PARTITION BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.BAY ) AS TIER_NO							

									--//, SUM( CASE WHEN T1.SZTP LIKE 'D2%' THEN 1 ELSE 2 END ) AS TEU//
									--// A2,D2,D3,F2,O2,P2,R2,S2,T2,A4,D4,D5,F4,F5,O5,O4,P4,R9,R5,S4,T4,D7,D9,DX //--  
									, SUM	(	CASE	WHEN T1.SZTP				IN ('DX')			THEN 2.25  
														WHEN SUBSTR(T1.SZTP,2,1)	IN ('5','7','9')	THEN 2.25  
														WHEN SUBSTR(T1.SZTP,2,1)	IN ('4')			THEN 2 
														ELSE 1  
												END  
											) AS TEU 
									, SUM	(	CASE	WHEN T1.SZTP				IN ('DX')			THEN 1  
														WHEN SUBSTR(T1.SZTP,2,1)	IN ('5','7','9')	THEN 1  														
														WHEN SUBSTR(T1.SZTP,2,1)	IN ('4')			THEN 1
														ELSE 1  
												END  
											) AS BOX
									, ROW_NUMBER () OVER (PARTITION BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.BAY, T1.TIER ORDER BY T1.TIER DESC, T1.PLAN_TYPE DESC) AS PLAN_TYPE_SEQ 						
							FROM	BAY_PLAN T1
							WHERE	1 = 1

--							AND		T2.VSL_CD	(+)= T1.VSL_CD
--							AND		T2.VOY_NO	(+)= T1.SKD_VOY_NO
--							AND		T2.DIR_CD	(+)= T1.SKD_DIR_CD
--							AND		T2.PORT_CD	(+)= T1.PRE_PORT
--							AND		T2.CALL_IND	(+)= T1.PRE_CLPT_IND_SEQ
				
							AND		(T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND) IN 
									(
#foreach(${param} in ${tgtVvd})
	#if($velocityCount < $tgtVvd.size())
		('${param.vslCd}', '${param.skdVoyNo}', '${param.skdDirCd}', '${param.bayLoc}', '${param.bayCal}'),
	#else
		('${param.vslCd}', '${param.skdVoyNo}', '${param.skdDirCd}', '${param.bayLoc}', '${param.bayCal}')
	#end
#end
									)
							AND		T1.TIER		>= '50'
							GROUP BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.PLAN_TYPE, T1.BAY, T1.TIER
						)
				WHERE	PLAN_TYPE_SEQ	= 1		
				GROUP BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND, TIER_NO	,BOX
				)
		) T1, VSK_PORT_CNL_TR_SCG T2
WHERE	T2.LOC_CD		= 'EGSUZ'
AND		T2.TR_SEQ		= DECODE(RNK, 'Y', TIER_1ST, TIER_2ND) 
AND		T1.SEQ			= 1			]]></sql>
			<params>
			</params>
		</query>
	</querys>
</sqls>
