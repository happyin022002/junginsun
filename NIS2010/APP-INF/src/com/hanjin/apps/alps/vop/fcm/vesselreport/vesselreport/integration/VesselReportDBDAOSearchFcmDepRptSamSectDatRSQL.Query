<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselReportDBDAOSearchFcmDepRptSamSectDatRSQL">
			<desc><![CDATA[FCM DEPARTURE REPORT ERROR SAME SECTION DATA 조회 쿼리 - FcmDepRptErrClsVO 형태]]></desc>
			<sql><![CDATA[
WITH FCM_DEP_RPT_TMP AS (
    -- Departure Report 에서 동일 Dep Port, 동일 노선, 동일 선형, 동일 Bound 를 추출하기 위한 쿼리
    SELECT
        T1.VSL_CD
        ,T1.SKD_VOY_NO
        ,T1.SKD_DIR_CD
        ,T1.DEP_PORT_CD
        ,T1.CLPT_IND_SEQ
        ,T2.CNTR_DZN_CAPA
    FROM FCM_DEP_RPT T1, MDM_VSL_CNTR T2
    WHERE T1.VSL_CD = T2.VSL_CD
    AND T1.DEP_PORT_CD = @[dep_port_cd]
    AND T1.VSL_SLAN_CD = @[vsl_slan_cd]
    AND T2.CNTR_DZN_CAPA = @[cntr_dzn_capa]
    AND T1.SKD_DIR_CD = @[skd_dir_cd]
)
, VSK_SKD_TMP AS (
    -- Last Port Schedule 를 추출하기 위한 쿼리
    SELECT
        T1.VSL_CD
        ,T1.SKD_VOY_NO
        ,T1.SKD_DIR_CD
        ,T1.VPS_PORT_CD
        ,T1.CLPT_IND_SEQ
		,LAG(T1.VSL_CD) OVER (PARTITION BY T1.VSL_CD ORDER BY T1.SKD_VOY_NO, T2.VSL_SLAN_DIR_SEQ, T1.CLPT_SEQ) AS LAST_VSL_CD
		,LAG(T1.SKD_VOY_NO) OVER (PARTITION BY T1.VSL_CD ORDER BY T1.SKD_VOY_NO, T2.VSL_SLAN_DIR_SEQ, T1.CLPT_SEQ) AS LAST_SKD_VOY_NO
		,LAG(T1.SKD_DIR_CD) OVER (PARTITION BY T1.VSL_CD ORDER BY T1.SKD_VOY_NO, T2.VSL_SLAN_DIR_SEQ, T1.CLPT_SEQ) AS LAST_SKD_DIR_CD
        ,LAG(T1.VPS_PORT_CD) OVER (PARTITION BY T1.VSL_CD ORDER BY T1.SKD_VOY_NO, T2.VSL_SLAN_DIR_SEQ, T1.CLPT_SEQ) AS LAST_PORT_CD
        ,LAG(T1.CLPT_IND_SEQ) OVER (PARTITION BY T1.VSL_CD ORDER BY T1.SKD_VOY_NO, T2.VSL_SLAN_DIR_SEQ, T1.CLPT_SEQ) AS LAST_CLPT_IND_SEQ
    FROM VSK_VSL_PORT_SKD T1, MDM_VSL_SVC_LANE_DIR T2
    WHERE T1.SLAN_CD = T2.VSL_SLAN_CD
    AND T1.SKD_DIR_CD = T2.VSL_SLAN_DIR_CD
    AND T1.TURN_PORT_IND_CD IN ('Y','N')
    AND NVL(T1.SKD_CNG_STS_CD, 'X')<>'S'
    AND T1.VSL_CD IN (
        SELECT VSL_CD
        FROM FCM_DEP_RPT_TMP
    )
)
,
FCM_DEP_RPT_SAM_TMP AS (
    -- Departure Report Same Section Data 조회 
    SELECT T1.*
    FROM (
        SELECT 
            T1.VSL_CD
            ,CONCAT(T1.SKD_VOY_NO, T1.SKD_DIR_CD) AS SKD_VOY_NO
            ,T1.SKD_DIR_CD
            ,T1.DEP_PORT_CD
            ,T1.CLPT_IND_SEQ
            ,T1.VSL_SLAN_CD
            ,T2.LAST_VSL_CD
            ,T2.LAST_SKD_VOY_NO
            ,T2.LAST_SKD_DIR_CD
            ,T2.LAST_PORT_CD AS LST_DEP_PORT_CD
            ,T2.LAST_CLPT_IND_SEQ
            ,@[cntr_dzn_capa] AS CNTR_DZN_CAPA
            ,T1.NVGT_ML_DIST AS NVGT_ML_DIST_CTNT
            ,T1.ENG_ML_DIST AS ENG_ML_DIST_CTNT
            ,T1.MNVR_IN_ML_DIST AS MNVR_IN_ML_DIST_CTNT
            ,T1.MNVR_OUT_ML_DIST AS MNVR_OUT_ML_DIST_CTNT
            ,T1.AVG_SPD AS AVG_SPD_CTNT
            ,T1.AVG_RPM_PWR AS AVG_RPM_PWR_CTNT
            ,'' AS AVG_PRLR_PCH_VAL
            ,'' AS SAIL_TM_HRS
            ,T1.ARR_FOIL_WGT AS ARR_FOIL_CTNT
            ,T1.ARR_LOW_SULP_FOIL_WGT AS ARR_LOW_SULP_FOIL_CTNT
            ,T1.ARR_DOIL_WGT AS ARR_DOIL_CTNT
            ,T1.ARR_LOW_SULP_DOIL_WGT AS ARR_LOW_SULP_DOIL_CTNT
            ,T1.DEP_FOIL_WGT AS DEP_FOIL_CTNT
            ,T1.DEP_LOW_SULP_FOIL_WGT AS DEP_LOW_SULP_FOIL_CTNT
            ,T1.DEP_DOIL_WGT AS DEP_DOIL_CTNT
            ,T1.DEP_LOW_SULP_DOIL_WGT AS DEP_LOW_SULP_DOIL_CTNT
            ,'' AS SEA_STMNG_MN_ENG_TTL_QTY
            ,'' AS AVG_PORT_TTL_QTY
            ,'' AS AVG_PORT_TTL_HR_QTY
            ,T1.SEA_MN_FOIL_CSM_QTY AS SEA_MN_FOIL_CTNT
            ,T1.SEA_GNR_FOIL_CSM_QTY AS SEA_GNR_FOIL_CTNT
            ,T1.SEA_BLR_FOIL_CSM_QTY AS SEA_BLR_FOIL_CTNT
            ,T1.SEA_MN_LOW_SULP_FOIL_CSM_QTY AS SEA_MN_LOW_SULP_FOIL_CTNT
            ,T1.SEA_GNR_LOW_SULP_FOIL_CSM_QTY AS SEA_GNR_LOW_SULP_FOIL_CTNT
            ,T1.SEA_BLR_LOW_SULP_FOIL_CSM_QTY AS SEA_BLR_LOW_SULP_FOIL_CTNT
            ,T1.SEA_MN_DOIL_CSM_QTY AS SEA_MN_DOIL_CTNT
            ,T1.SEA_GNR_DOIL_CSM_QTY AS SEA_GNR_DOIL_CTNT
            ,T1.SEA_BLR_DOIL_CSM_QTY AS SEA_BLR_DOIL_CTNT
            ,T1.SEA_MN_LOW_SULP_DOIL_CSM_QTY AS SEA_MN_LOW_SULP_DOIL_CTNT
            ,T1.SEA_GNR_LOW_SULP_DOIL_CSM_QTY AS SEA_GNR_LOW_SULP_DOIL_CTNT
            ,T1.SEA_BLR_LOW_SULP_DOIL_CSM_QTY AS SEA_BLR_LOW_SULP_DOIL_CTNT
            ,T1.PORT_MN_FOIL_CSM_QTY AS PORT_MN_FOIL_CTNT
            ,T1.PORT_GNR_FOIL_CSM_QTY AS PORT_GNR_FOIL_CTNT
            ,T1.PORT_BLR_FOIL_CSM_QTY AS PORT_BLR_FOIL_CTNT
            ,T1.PORT_MN_LOW_SULP_FOIL_CSM_QTY AS PORT_MN_LOW_SULP_FOIL_CTNT
            ,T1.PORT_GNR_LOW_SULP_FOIL_CSM_QTY AS PORT_GNR_LOW_SULP_FOIL_CTNT
            ,T1.PORT_BLR_LOW_SULP_FOIL_CSM_QTY AS PORT_BLR_LOW_SULP_FOIL_CTNT
            ,T1.PORT_MN_DOIL_CSM_QTY AS PORT_MN_DOIL_CTNT
            ,T1.PORT_GNR_DOIL_CSM_QTY AS PORT_GNR_DOIL_CTNT
            ,T1.PORT_BLR_DOIL_CSM_QTY AS PORT_BLR_DOIL_CTNT
            ,T1.PORT_MN_LOW_SULP_DOIL_CSM_QTY AS PORT_MN_LOW_SULP_DOIL_CTNT
            ,T1.PORT_GNR_LOW_SULP_DOIL_CSM_QTY AS PORT_GNR_LOW_SULP_DOIL_CTNT
            ,T1.PORT_BLR_LOW_SULP_DOIL_CSM_QTY AS PORT_BLR_LOW_SULP_DOIL_CTNT
            ,T1.SPL_FOIL_BDR_WGT AS SPL_FOIL_BDR_CTNT
            ,T1.SPL_FOIL_ACT_WGT AS SPL_FOIL_ACT_CTNT
            ,T1.SPL_FOIL_SULP_WGT AS SPL_FOIL_SULP_CTNT
            ,T1.SPL_LOW_SULP_FOIL_BDR_WGT AS SPL_LOW_SULP_FOIL_BDR_CTNT
            ,T1.SPL_LOW_SULP_FOIL_ACT_WGT AS SPL_LOW_SULP_FOIL_ACT_CTNT
            ,T1.SPL_LOW_SULP_FOIL_SULP_WGT AS SPL_LOW_SULP_FOIL_SULP_CTNT
            ,T1.SPL_DOIL_BDR_WGT AS SPL_DOIL_BDR_CTNT
            ,T1.SPL_DOIL_ACT_WGT AS SPL_DOIL_ACT_CTNT
            ,T1.SPL_DOIL_SULP_WGT AS SPL_DOIL_SULP_CTNT
            ,T1.SPL_LOW_SULP_DOIL_BDR_WGT AS SPL_LOW_SULP_DOIL_BDR_CTNT
            ,T1.SPL_LOW_SULP_DOIL_ACT_WGT AS SPL_LOW_SULP_DOIL_ACT_CTNT
            ,T1.SPL_LOW_SULP_DOIL_SULP_WGT AS SPL_LOW_SULP_DOIL_SULP_CTNT
            ,T1.NXT_PORT_CD
            ,NVL2(NXT_PORT_ETA_DT,TO_CHAR(NXT_PORT_ETA_DT, 'YYYYMMDDHH24MI'),'') AS NXT_PORT_ETA_DT
            ,T1.RMN_DIST AS RMN_DIST_CTNT
            ,T1.RMN_AVG_SPD AS RMN_AVG_SPD_CTNT
            ,NVL2(T1.SB_ENG_DT,TO_CHAR(T1.SB_ENG_DT, 'YYYYMMDDHH24MI'),'') AS SB_ENG_DT
            ,NVL2(T1.PLT_IN_DT,TO_CHAR(T1.PLT_IN_DT, 'YYYYMMDDHH24MI'),'') AS PLT_IN_DT
            ,NVL2(T1.BFR_BRTH_ANK_DRP_DT,TO_CHAR(T1.BFR_BRTH_ANK_DRP_DT, 'YYYYMMDDHH24MI'),'') AS BFR_BRTH_ANK_DRP_DT
            ,NVL2(T1.BFR_BRTH_ANK_OFF_DT,TO_CHAR(T1.BFR_BRTH_ANK_OFF_DT, 'YYYYMMDDHH24MI'),'') AS BFR_BRTH_ANK_OFF_DT
            ,NVL2(T1.VPS_ETB_DT,TO_CHAR(T1.VPS_ETB_DT, 'YYYYMMDDHH24MI'),'') AS VPS_ETB_DT
            ,NVL2(T1.CGO_WRK_ST_DT,TO_CHAR(T1.CGO_WRK_ST_DT, 'YYYYMMDDHH24MI'),'') AS CGO_WRK_ST_DT
            ,NVL2(T1.CGO_WRK_END_DT, TO_CHAR(T1.CGO_WRK_END_DT, 'YYYYMMDDHH24MI'),'') AS CGO_WRK_END_DT
            ,NVL2(T1.VPS_ETD_DT,TO_CHAR(T1.VPS_ETD_DT, 'YYYYMMDDHH24MI'),'') AS VPS_ETD_DT
            ,NVL2(T1.AFT_UNBRTH_ANK_DRP_DT,TO_CHAR(T1.AFT_UNBRTH_ANK_DRP_DT, 'YYYYMMDDHH24MI'),'') AS AFT_UNBRTH_ANK_DRP_DT
            ,NVL2(T1.AFT_UNBRTH_ANK_OFF_DT,TO_CHAR(T1.AFT_UNBRTH_ANK_OFF_DT, 'YYYYMMDDHH24MI'),'') AS AFT_UNBRTH_ANK_OFF_DT
            ,NVL2(T1.PLT_OUT_DT,TO_CHAR(T1.PLT_OUT_DT, 'YYYYMMDDHH24MI'),'') AS PLT_OUT_DT
            ,NVL2(T1.RUP_DT,TO_CHAR(T1.RUP_DT, 'YYYYMMDDHH24MI'),'') AS RUP_DT
            ,T1.ARR_FWDDR_HGT AS ARR_FWDDR_CTNT
            ,T1.ARR_MID_DRFT_HGT AS ARR_MID_DRFT_CTNT
            ,T1.ARR_AFTDR_HGT AS ARR_AFTDR_CTNT
            ,T1.ARR_GM_HGT AS ARR_GM_CTNT
            ,T1.DEP_FWDDR_HGT AS DEP_FWDDR_CTNT
            ,T1.DEP_MID_DRFT_HGT AS DEP_MID_DRFT_CTNT
            ,T1.DEP_AFTDR_HGT AS DEP_AFTDR_CTNT
            ,T1.DEP_GM_HGT AS DEP_GM_CTNT
            ,T1.FULL_CNTR_OBRD_TEU AS FCNTR_OBRD_TEU_CTNT
            ,T1.MTY_CNTR_OBRD_TEU AS MCNTR_OBRD_TEU_CTNT
            ,T1.TTL_CNTR_OBRD_TEU AS TTL_CNTR_OBRD_TEU_CTNT
            ,T1.DEP_CGO_WGT AS DEP_CGO_CTNT
            ,T1.DEP_DPL_WGT AS DEP_DPL_CTNT
            ,T1.RF_CNTR_DCHG_KNT AS RF_CNTR_DCHG_KNT_CTNT
            ,T1.RF_CNTR_LOD_KNT AS RF_CNTR_LOD_KNT_CTNT
            ,T1.RF_CNTR_OBRD_KNT AS RF_CNTR_OBRD_KNT_CTNT
            ,T1.CRE_USR_ID
            ,T1.CRE_DT
            ,T1.UPD_USR_ID
            ,T1.UPD_DT 
        FROM FCM_DEP_RPT T1, VSK_SKD_TMP T2
        WHERE T1.VSL_CD = T2.VSL_CD
        AND T1.SKD_VOY_NO = T2.SKD_VOY_NO
        AND T1.SKD_DIR_CD = T2.SKD_DIR_CD
        AND T1.DEP_PORT_CD = T2.VPS_PORT_CD
        AND T1.CLPT_IND_SEQ = T2.CLPT_IND_SEQ
        AND T1.DEP_PORT_CD = @[dep_port_cd]
        AND T2.LAST_PORT_CD = @[lst_dep_port_cd]
        AND T1.VSL_SLAN_CD = @[vsl_slan_cd]
        AND T1.SKD_DIR_CD = @[skd_dir_cd]
        ORDER BY UPD_DT DESC
    ) T1
    WHERE ROWNUM < 7
)
, 
FCM_DEP_RPT_SAM_T AS (
    -- Last Port 의 Oil 정보 추출 
    SELECT 
    (
        SELECT 
            T2.DEP_FOIL_WGT || '|' || T2.DEP_LOW_SULP_FOIL_WGT || '|' || T2.DEP_DOIL_WGT || '|' || T2.DEP_LOW_SULP_DOIL_WGT || '|' AS OIL_INFO
        FROM FCM_DEP_RPT T2 
        WHERE T2.VSL_CD = T1.LAST_VSL_CD 
        AND T2.SKD_VOY_NO = T1.LAST_SKD_VOY_NO 
        AND T2.SKD_DIR_CD = T1.LAST_SKD_DIR_CD
        AND T2.DEP_PORT_CD = T1.LST_DEP_PORT_CD
        AND T2.CLPT_IND_SEQ = T1.LAST_CLPT_IND_SEQ
    ) AS OIL_INFO
    ,T1.* 
    FROM FCM_DEP_RPT_SAM_TMP T1
)
SELECT 
     SUBSTR(T1.OIL_INFO, 1, INSTR(T1.OIL_INFO, '|', 1, 1) - 1) AS LST_DEP_FOIL_CTNT
    ,SUBSTR(T1.OIL_INFO, INSTR(T1.OIL_INFO, '|', 1, 1)+1, INSTR(T1.OIL_INFO, '|', 1, 2) - INSTR(T1.OIL_INFO, '|', 1, 1)-1) AS LST_DEP_LOW_SULP_FOIL_CTNT
    ,SUBSTR(T1.OIL_INFO, INSTR(T1.OIL_INFO, '|', 1, 2)+1, INSTR(T1.OIL_INFO, '|', 1, 3) - INSTR(T1.OIL_INFO, '|', 1, 2)-1) AS LST_DEP_DOIL_CTNT
    ,SUBSTR(T1.OIL_INFO, INSTR(T1.OIL_INFO, '|', 1, 3)+1, INSTR(T1.OIL_INFO, '|', 1, 4) - INSTR(T1.OIL_INFO, '|', 1, 3)-1) AS LST_DEP_LOW_SULP_DOIL_CTNT
    , T1.*
FROM FCM_DEP_RPT_SAM_T T1			]]></sql>
			<params>
				<param name="dep_port_cd" type="12" value="" out="N"/>
				<param name="vsl_slan_cd" type="12" value="" out="N"/>
				<param name="cntr_dzn_capa" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="lst_dep_port_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
