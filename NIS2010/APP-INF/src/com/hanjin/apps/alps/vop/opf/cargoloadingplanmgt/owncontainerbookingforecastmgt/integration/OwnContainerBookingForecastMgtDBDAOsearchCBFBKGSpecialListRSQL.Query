<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OwnContainerBookingForecastMgtDBDAOsearchCBFBKGSpecialListRSQL">
			<desc><![CDATA[searchCBFBKGSpecialList 조회
History------------------------------------------------------------------------------------
2011.12.12 [CHM-201114818-01] Split 03-특수화물(DG) 시스템 개선 요청(Segregation Group name 변경 외 3건) : SG 컬럼 추가(HZD_CTNT)
2013.06.12 [CHM-201324915]  [VOP-OPF] CBF – POD TMNL code로 구분]]></desc>
			<sql><![CDATA[
SELECT DISTINCT                                                                                                                                             
       L.BKG_NO,                                                                                                                                            
       L.CNTR_NO,                                                                                                                                           
       L.POD POD_CD,
       L.POD_YD_CD,  
       L.POD_CLPT_IND_SEQ,                                                                                                                                       
       L.MLB MLB_CD,                                                                                                                                        
       L.OPR CRR_CD,                                                                                                                                        
       L.TP CNTR_TPSZ_CD,                                                                                                                                   
       MAX(DECODE(L.SPCL_CGO,'DG','Y','N')) DCGO_FLG,                                                                                                       
       MAX(DECODE(L.SPCL_CGO,'RF','Y','N')) RC_FLG,                                                                                                         
       MAX(DECODE(L.SPCL_CGO,'AK','Y','N')) AWK_CGO_FLG,                                                                                                    
       MAX(DECODE(L.SPCL_CGO,'BB','Y','N')) BB_CGO_FLG,                                                                                                     
       MAX(DECODE(L.STWG_CD,' ',DECODE(L.SPCL_CGO,'ST','Y','N'),'Y')) STWG_CGO_FLG,                                                                         
       L.CNTR_SEQ,                                                                                                                                          
       L.CGO_SEQ,                                                                                                                                           
       MAX(L.CNTR_GRS_WGT) CNTR_GRS_WGT,                                                                                                                    
       MAX(L.CGO_GRS_WGT) CGO_GRS_WGT,                                                                                                                      
       MAX(L.IMO) IMDG_CLSS_CD,                                                                                                                             
       MAX(L.UN_NO) IMDG_UN_NO,   
       MAX(L.PRP_SHP_NM) PRP_SHP_NM, 
       MAX(L.HZD_DESC) HZD_DESC,                                                                                                                           
       MAX(L.SRL) IMDG_SUBS_RSK_LBL_CD,                                                                                                                     
       MAX(L.MP) IMDG_MRN_POLUT_CD,                                                                                                                         
       MAX(DECODE(L.PG, '1', 'I', '2', 'II', '3', 'III', '')) PCK_GRP_CD,                                                                                                                                
       MAX(L.FP) FDO_TEMP,                                                                                                                                  
       MAX(L.RT) CDO_TEMP,                                                                                                                                  
       MAX(L.LQ) LMT_QTY_FLG,                                                                                                                               
       MAX(L.EQ) EXPT_QTY_FLG,                                                                                                                              
       MAX(L.CMDT) CBF_CMDT_NM,                                                                                                                             
       MAX(L.DIM_LEN) DIM_LEN,                                                                                                                              
       MAX(L.DIM_WDT) DIM_WDT,                                                                                                                              
       MAX(L.DIM_HGT) DIM_HGT,                                                                                                                              
       MAX(L.OVR_FWD) OVR_FWD,                                                                                                                              
       MAX(L.OVR_AFT) OVR_AFT,                                                                                                                              
       MAX(L.OVR_LFT) OVR_LFT,                                                                                                                              
       MAX(L.OVR_RGT) OVR_RGT,                                                                                                                              
       MAX(L.OVR_HGT) OVR_HGT,                                                                                                                              
       MAX(L.POST_EXD) CRN_PST_STS_CD,                                                                                                                            
       MAX(L.STWG_CD) STWG_CD,                                                                                                                              
       MAX(L.APVL) SPCL_CGO_AUTH_FLG,                                                                                                                       
       MAX(L.APRO_REF_NO) APRO_REF_NO,                                                                                                                      
       MAX(L.CBF_RMK) CBF_RMK,                                                                                                                              
       @[vsl_cd] VSL_CD,                                                                                                                                    
       @[skd_voy_no] SKD_VOY_NO,                                                                                                                            
       @[skd_dir_cd] SKD_DIR_CD,                                                                                                                            
       MAX(L.POL_YD_CD) YD_CD,     
       MAX(L.POL_CLPT_IND_SEQ) POL_CLPT_IND_SEQ,                                                                                                                                 
       'D' RD_ST,                                                                                                                                           
       'Y' BKG_SHPR_OWNR_FLG,                                                                                                                               
	   MAX(L.LANE) SLAN_CD,                                                                                                                                 
	   'S' CBF_DP_CD,
	   MAX(L.HZD_CTNT) AS HZD_CTNT
FROM ( SELECT DISTINCT A.BKG_NO,
              A.CNTR_NO,
              A.POD_CD               POD,
              A.POD_YD_CD            POD_YD_CD,          
              A.POD_CLPT_IND_SEQ,
              A.POL_YD_CD,
              A.POL_CLPT_IND_SEQ,
              A.MLB,
              'SML'                  OPR,
              A.CNTR_TPSZ_CD         TP,
              A.SPCL_CGO,
              A.CNTR_SEQ,
              A.CGO_SEQ,
              A.CNTR_GRS_WGT,
              A.CGO_GRS_WGT,
              A.IMDG_CLSS_CD         IMO,
              A.IMDG_UN_NO           UN_NO,
              A.PRP_SHP_NM           PRP_SHP_NM,
              A.HZD_DESC             HZD_DESC,
              A.IMDG_SUBS_RSK_LBL_CD SRL,
              A.IMDG_MRN_POLUT_CD    MP,
              A.PCK_GRP_CD           PG,
              A.FDO_TEMP             FP,
              A.CDO_TEMP             RT,
              A.LQ,
              A.EQ,
              A.CMDT,
              DECODE(A.DIM_LEN, 0, '', A.DIM_LEN) DIM_LEN,
			  DECODE(A.DIM_WDT, 0, '', A.DIM_WDT) DIM_WDT,
			  DECODE(A.DIM_HGT, 0, '', A.DIM_HGT) DIM_HGT,
			  DECODE(A.OVR_FWD, 0, '', A.OVR_FWD) OVR_FWD,
			  DECODE(A.OVR_AFT, 0, '', A.OVR_AFT) OVR_AFT,
			  DECODE(A.OVR_LFT, 0, '', A.OVR_LFT) OVR_LFT,
			  DECODE(A.OVR_RGT, 0, '', A.OVR_RGT) OVR_RGT,
			  DECODE(A.OVR_HGT, 0, '', A.OVR_HGT) OVR_HGT,
              A.POST_EXD,
              A.STWG_CD,
              A.SPCL_CGO_AUTH_FLG APVL,
              NVL(VS.APRO_REF_NO,' ')  APRO_REF_NO,
              A.CBF_RMK,                                                                                                                                    
              LANE,
              A.HZD_CTNT
       FROM   ( SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
                       DG.DG_CNTR_SEQ            CNTR_SEQ,
                       DG.CNTR_CGO_SEQ           CGO_SEQ,
                       DG.DCGO_SEQ               U_CGO_SEQ,
                       NVL(DG.CNTR_NO,' ')       CNTR_NO,
                       NVL(VVD.POD_CD,' ')       POD_CD,
                       VVD.POD_YD_CD,
                       VVD.POD_CLPT_IND_SEQ,
                       VVD.POL_YD_CD,
                       VVD.POL_CLPT_IND_SEQ,
                       BKG.BLCK_STWG_CD          MLB,
                       NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD,
                       DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD,
                       CASE 
                           WHEN DG.CNTR_NO IS NULL THEN
                                ROUND(( SUM(DG.GRS_WGT) OVER (PARTITION BY BKG.BKG_NO, DG.CNTR_NO, DG.DG_CNTR_SEQ ) +
                                   DECODE(TP.CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,2500,4000),TP.CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(DOC.WGT_UT_CD,'LBS',0.4536,1),3)
                           ELSE
                                ROUND(( DECODE(DG.CNTR_NO,NULL,DG.GRS_WGT,SUM(DG.GRS_WGT) OVER (PARTITION BY DG.CNTR_NO)) +
                                   DECODE(TP.CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,2500,4000),TP.CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(DOC.WGT_UT_CD,'LBS',0.4536,1),3)
                       END                                                                        CNTR_GRS_WGT,
                       DG.GRS_WGT                                                                 CGO_GRS_WGT,
                       'DG'                                                                       SPCL_CGO,
                       NVL(DG.IMDG_CLSS_CD,' ')                                                   IMDG_CLSS_CD,
                       NVL(DG.IMDG_UN_NO,' ')                                                     IMDG_UN_NO,
                       NVL(DG.PRP_SHP_NM,' ')                                                     PRP_SHP_NM,
                       NVL(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(HZD_DESC,chr(39),' '),chr(92)||chr(36),' '),chr(92)||chr(94),' '),chr(92)||chr(43),' '),' ')                                                       HZD_DESC,
                       (DG.IMDG_SUBS_RSK_LBL_CD1
                 		||DECODE(DG.IMDG_SUBS_RSK_LBL_CD1,'',DG.IMDG_SUBS_RSK_LBL_CD2,DECODE(DG.IMDG_SUBS_RSK_LBL_CD2,'','','/'||DG.IMDG_SUBS_RSK_LBL_CD2))
                 		||DECODE(DG.IMDG_SUBS_RSK_LBL_CD1||DG.IMDG_SUBS_RSK_LBL_CD2,'',DG.IMDG_SUBS_RSK_LBL_CD3,DECODE(DG.IMDG_SUBS_RSK_LBL_CD3,'','','/'||DG.IMDG_SUBS_RSK_LBL_CD3))
                 		||DECODE(DG.IMDG_SUBS_RSK_LBL_CD1||DG.IMDG_SUBS_RSK_LBL_CD2||'','',DG.IMDG_SUBS_RSK_LBL_CD4,DECODE(DG.IMDG_SUBS_RSK_LBL_CD4,'','','/'||DG.IMDG_SUBS_RSK_LBL_CD4))
                	   ) AS IMDG_SUBS_RSK_LBL_CD,
                       NVL(DG.MRN_POLUT_FLG,' ')                                                  IMDG_MRN_POLUT_CD,
                       NVL(DG.IMDG_PCK_GRP_CD,' ')                                                PCK_GRP_CD,
                       NVL(DG.IMDG_LMT_QTY_FLG,' ')                                               LQ,
                       NVL(DG.IMDG_EXPT_QTY_FLG,' ')                                              EQ,
                       DG.FLSH_PNT_CDO_TEMP FDO_TEMP,
                       NULL                                                                       CDO_TEMP,
                       NULL                                                                       DIM_LEN,
                       NULL                                                                       DIM_WDT,
                       NULL                                                                       DIM_HGT,
                       NULL                                                                       OVR_FWD,
                       NULL                                                                       OVR_AFT,
                       NULL                                                                       OVR_LFT,
                       NULL                                                                       OVR_RGT,
                       NULL                                                                       OVR_HGT,
                       NULL                                                                       POST_EXD,
                       NVL(BKG.STWG_CD,' ')                                                       STWG_CD,
                       DG.SPCL_CGO_APRO_CD                                                        SPCL_CGO_AUTH_FLG,
                       TRIM(DG.DIFF_RMK)                                                          CBF_RMK,
                       BKG.UPD_USR_ID,
                       BKG.UPD_DT,
                       VVD.VSL_CD,
                       VVD.SKD_VOY_NO,
                       VVD.SKD_DIR_CD,
                       DG.ORG_YD_CD YD_CD,
                       BKG.BKG_STS_CD CBF_IND_FLG,
                       BKG.SLAN_CD LANE,
                       M.CMDT_NM   CMDT,
                       DG.HZD_CTNT
                FROM   BKG_VVD VVD, 
                       BKG_BOOKING BKG, 
                       BKG_BL_DOC DOC, 
                       BKG_QUANTITY QTY, 
                       (
                        SELECT CDG.*,
                               CNTR.ORG_YD_CD
                          FROM BKG_DG_CGO    CDG,
                               BKG_CONTAINER CNTR
                         WHERE CDG.BKG_NO       = CNTR.BKG_NO(+)
                           AND CDG.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD(+)
                           AND CDG.CNTR_NO      = CNTR.CNTR_NO(+)
                           AND CNTR.DCGO_FLG(+) = 'Y'
                       ) DG,
                       MDM_COMMODITY M, 
                       MDM_CNTR_TP_SZ TP
         		 WHERE VVD.VSL_CD                          = @[vsl_cd]                                                                                                      
         		   AND VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                  
         		   AND VVD.SKD_DIR_CD                      = @[skd_dir_cd]  
                   AND VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                                       
         	       AND VVD.BKG_NO                          = BKG.BKG_NO                                                                                                     
         		   #if(${bk_st} == 'F')                                                                                                                        
         		   AND BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                     
         		   #end                                                                                                                                        
                   AND BKG.BKG_STS_CD      <> 'X'
                   AND BKG.BKG_NO          = DOC.BKG_NO
                   AND BKG.BKG_NO          = QTY.BKG_NO(+)
                   AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
                   AND QTY.BKG_NO          = DG.BKG_NO
                   AND QTY.CNTR_TPSZ_CD    = DG.CNTR_TPSZ_CD
                   AND BKG.CMDT_CD         = M.CMDT_CD(+)
                   AND M.DELT_FLG(+)       = 'N'
                   AND QTY.CNTR_TPSZ_CD    = TP.CNTR_TPSZ_CD(+)
                UNION ALL
                SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
                       RF.RC_SEQ                 CNTR_SEQ,
                       1                         CGO_SEQ,
                       RF.RC_SEQ                 U_CGO_SEQ,
                       NVL(RF.CNTR_NO,' ')       CNTR_NO,
                       NVL(VVD.POD_CD,' ')       POD_CD,
                       VVD.POD_YD_CD,
                       VVD.POD_CLPT_IND_SEQ,
                       VVD.POL_YD_CD,
                       VVD.POL_CLPT_IND_SEQ,
                       BKG.BLCK_STWG_CD          MLB,
                       NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD,
                       DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD,
                       CASE 
                           WHEN RF.CNTR_NO IS NULL THEN
                                ROUND(( SUM(RF.GRS_WGT) OVER (PARTITION BY BKG.BKG_NO, RF.CNTR_NO, RF.RC_SEQ ) +
                                   DECODE(TP.CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,2500,4000),TP.CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(DOC.WGT_UT_CD,'LBS',0.4536,1),3)
                           ELSE
                                ROUND(( DECODE(RF.CNTR_NO,NULL,RF.GRS_WGT,SUM(RF.GRS_WGT) OVER (PARTITION BY RF.CNTR_NO)) +
                                   DECODE(TP.CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,2500,4000),TP.CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(DOC.WGT_UT_CD,'LBS',0.4536,1),3)
                       END                                                      CNTR_GRS_WGT,
                       RF.GRS_WGT                                               CGO_GRS_WGT,
                       'RF'                                                     SPCL_CGO,
                       NULL                                                     IMDG_CLSS_CD,
                       NULL                                                     IMDG_UN_NO,
                       NULL                                                     PRP_SHP_NM,
                       NULL                                                     HZD_DESC,
                       NULL                                                     IMDG_SUBS_RSK_LBL_CD,
                       NULL                                                     IMDG_MRN_POLUT_CD,
                       NULL                                                     PCK_GRP_CD,
                       NULL                                                     LQ,
                       NULL                                                     EQ,
                       NULL                                                     FDO_TEMP,
                       DECODE(TO_CHAR(NVL(RF.CDO_TEMP,0)),'0',NULL,RF.CDO_TEMP) CDO_TEMP,
                       NULL                                                     DIM_LEN,
                       NULL                                                     DIM_WDT,
                       NULL                                                     DIM_HGT,
                       NULL                                                     OVR_FWD,
                       NULL                                                     OVR_AFT,
                       NULL                                                     OVR_LFT,
                       NULL                                                     OVR_RGT,
                       NULL                                                     OVR_HGT,
                       NULL                                                     POST_EXD,
                       NVL(BKG.STWG_CD,' ')                                     STWG_CD,
                       RF.SPCL_CGO_APRO_CD                                      SPCL_CGO_AUTH_FLG,
                       TRIM(RF.DIFF_RMK)                                        CBF_RMK,
                       BKG.UPD_USR_ID,
                       BKG.UPD_DT,
                       VVD.VSL_CD,
                       VVD.SKD_VOY_NO,
                       VVD.SKD_DIR_CD,
                       RF.ORG_YD_CD YD_CD,
                       BKG.BKG_STS_CD CBF_IND_FLG,
                       BKG.SLAN_CD LANE,
                       M.CMDT_NM   CMDT,
                       '' AS HZD_CTNT
                  FROM BKG_VVD VVD, 
                       BKG_BOOKING BKG, 
                       BKG_BL_DOC DOC, 
                       BKG_QUANTITY QTY, 
                       (
                        SELECT CRF.*,
                               CNTR.ORG_YD_CD
                          FROM BKG_RF_CGO    CRF,
                               BKG_CONTAINER CNTR
                         WHERE CRF.BKG_NO       = CNTR.BKG_NO(+)
                           AND CRF.CNTR_TPSZ_CD = CNTR.CNTR_TPSZ_CD(+)
                           AND CRF.CNTR_NO      = CNTR.CNTR_NO(+)
                           AND CNTR.RC_FLG(+)   = 'Y'
                       ) RF,
                       MDM_COMMODITY M, 
                       MDM_CNTR_TP_SZ TP
         		 WHERE VVD.VSL_CD                          = @[vsl_cd]                                                                                                      
         		   AND VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                  
         		   AND VVD.SKD_DIR_CD                      = @[skd_dir_cd]                                                                               
         		   AND VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                             
         		   AND VVD.BKG_NO                          = BKG.BKG_NO                                                                                                     
         		   #if(${bk_st} == 'F')                                                                                                                        
         		   AND BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                     
         		   #end                                                                                                                                        
                   AND BKG.BKG_STS_CD      <> 'X'
                   AND BKG.BKG_NO          = DOC.BKG_NO
                   AND BKG.BKG_NO          = QTY.BKG_NO(+)
                   AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
                   AND QTY.BKG_NO          = RF.BKG_NO
                   AND QTY.CNTR_TPSZ_CD    = RF.CNTR_TPSZ_CD
                   AND BKG.CMDT_CD         = M.CMDT_CD(+)
                   AND M.DELT_FLG(+)       = 'N'
                   AND QTY.CNTR_TPSZ_CD    = TP.CNTR_TPSZ_CD(+)
                UNION ALL
                SELECT BKG_NO,
                       CNTR_SEQ,
                       CGO_SEQ,
                       U_CGO_SEQ,
                       CNTR_NO,
                       POD_CD,
                       POD_YD_CD,
                       POD_CLPT_IND_SEQ,
                       POL_YD_CD,
                       POL_CLPT_IND_SEQ,
                       MLB,
                       CNTR_TPSZ_CD,
                       FULL_MTY_CD,
                       CNTR_GRS_WGT,
                       CGO_GRS_WGT,
                       'BB' SPCL_CGO,
                       NULL IMDG_CLSS_CD,
                       NULL IMDG_UN_NO,
                       NULL PRP_SHP_NM,
                       NULL HZD_DESC,
                       NULL IMDG_SUBS_RSK_LBL_CD,
                       NULL IMDG_MRN_POLUT_CD,
                       NULL PCK_GRP_CD,
                       NULL LQ,
                       NULL EQ,
                       NULL FDO_TEMP,
                       NULL CDO_TEMP,
                       DIM_LEN,
                       DIM_WDT,
                       DIM_HGT,
                       NULL OVR_FWD,
                       NULL OVR_AFT,
                       NULL OVR_LFT,
                       NULL OVR_RGT,
                       NULL OVR_HGT,
                       NULL POST_EXD,
                       STWG_CD,
                       SPCL_CGO_AUTH_FLG,
                       CBF_RMK, 
                       UPD_USR_ID,
                       UPD_DT,
                       VSL_CD,
                       SKD_VOY_NO,
                       SKD_DIR_CD,
                       YD_CD,
                       CBF_IND_FLG,
                       LANE,
                       CMDT,
                       '' AS HZD_CTNT
                FROM  ( WITH COPY_T AS
                          ( SELECT ROWNUM NO
                            FROM BKG_BOOKING
                            WHERE ROWNUM<=1000 )
                        SELECT QTY.BKG_NO,
                               CNTR_SEQ,
                               CS.BB_CGO_SEQ CGO_SEQ,
                               CS.BB_CGO_SEQ U_CGO_SEQ,
                               CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CNTR_NO END CNTR_NO,
                               POD_CD,
                               POD_YD_CD,
                               POD_CLPT_IND_SEQ,
                               POL_YD_CD,
                               POL_CLPT_IND_SEQ,
                               MLB,
                               CNTR_TPSZ_CD,
                               FULL_MTY_CD,
                               CNTR_GRS_WGT,
                               CS.GRS_WGT CGO_GRS_WGT,
                               CS.DIM_LEN,
                               CS.DIM_WDT,
                               CS.DIM_HGT,
                               STWG_CD,
                               SPCL_CGO_AUTH_FLG,
                               TRIM(CS.SPCL_RQST_DESC)||DECODE(TRIM(CS.DIFF_RMK),NULL,'','/')||TRIM(CS.DIFF_RMK) CBF_RMK, 
                               QTY.UPD_USR_ID,
                               QTY.UPD_DT,
                               VSL_CD,
                               SKD_VOY_NO,
                               SKD_DIR_CD,
                               YD_CD,
                               CBF_IND_FLG,
                               LANE,
                               CMDT
                        FROM   ( SELECT BKG_NO,
                                         ROW_NUMBER( ) OVER ( PARTITION BY BKG_NO, CGO_SEQ ORDER BY BKG_NO ASC ) CNTR_SEQ,
                                         CGO_SEQ,
                                         CNTR_NO,
                                         POD_CD,
                                         POD_YD_CD,
                                         POD_CLPT_IND_SEQ,
                                         POL_YD_CD,
                                         POL_CLPT_IND_SEQ,
                                         MLB,
                                         CNTR_TPSZ_CD,
                                         FULL_MTY_CD,
                                         CNTR_GRS_WGT,
                                         STWG_CD,
                                         SPCL_CGO_AUTH_FLG,
                                         UPD_USR_ID,
                                         UPD_DT,
                                         VSL_CD,
                                         SKD_VOY_NO,
                                         SKD_DIR_CD,
                                         YD_CD,
                                         CBF_IND_FLG,
                                         LANE,
                                         CMDT,
                                         QTY,
                                         ROW_NUMBER() OVER (PARTITION BY BKG_NO, CNTR_TPSZ_CD, CGO_SEQ ORDER BY CNTR_NO) RN,
                                         COUNT(CNTR_NO) OVER (PARTITION BY BKG_NO, CNTR_TPSZ_CD ) CNT
                                 FROM   ( SELECT BKG.BKG_NO                                     BKG_NO,
                                                  MAX(BB.BB_CGO_SEQ)                             CGO_SEQ,
                                                  CNTR.CNTR_NO                                   CNTR_NO,
                                                  NVL(VVD.POD_CD,' ')                            POD_CD,
                                                  VVD.POD_YD_CD,
                                                  VVD.POD_CLPT_IND_SEQ,
                                                  VVD.POL_YD_CD,
                                                  VVD.POL_CLPT_IND_SEQ,
                                                  BKG.BLCK_STWG_CD                               MLB,
                                                  QTY.CNTR_TPSZ_CD                               CNTR_TPSZ_CD,
                                                  DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD,
                                                  SUM(BB.GRS_WGT)                                CNTR_GRS_WGT,
                                                  NVL(BKG.STWG_CD,' ')                           STWG_CD,
                                                  BB.SPCL_CGO_APRO_CD                            SPCL_CGO_AUTH_FLG,
                                                  BKG.UPD_USR_ID,
                                                  BKG.UPD_DT,
                                                  VVD.VSL_CD,
                                                  VVD.SKD_VOY_NO,
                                                  VVD.SKD_DIR_CD,
                                                  CNTR.ORG_YD_CD                                 YD_CD,
                                                  BKG.BKG_STS_CD                                 CBF_IND_FLG,
                                                  BKG.SLAN_CD                                    LANE,
                                                  M.CMDT_NM                                      CMDT,
                                                  DTL.OP_CNTR_QTY QTY
                                             FROM BKG_VVD VVD, 
                                                  BKG_BOOKING BKG, 
                                                  BKG_BL_DOC DOC, 
                                                  BKG_CONTAINER CNTR, 
                                                  BKG_QUANTITY QTY, 
                                                  BKG_QTY_DTL DTL, 
                                                  BKG_BB_CGO BB, 
                                                  MDM_COMMODITY M
                                            WHERE VVD.VSL_CD                          = @[vsl_cd]
                                              AND VVD.SKD_VOY_NO                      = @[skd_voy_no]
                                              AND VVD.SKD_DIR_CD                      = @[skd_dir_cd]
                                              AND VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]
                                              AND VVD.BKG_NO                          = BKG.BKG_NO
         				                      #if(${bk_st} == 'F')                                                                                                                        
         				                      AND BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                     
         				                      #end                                                                                                                                        
                                              AND BKG.BKG_STS_CD      <> 'X'
                                              AND BKG.BKG_NO          = DOC.BKG_NO
                                              AND BKG.BKG_NO          = QTY.BKG_NO(+)
                                              AND QTY.BKG_NO          = CNTR.BKG_NO(+)
                                              AND QTY.CNTR_TPSZ_CD    = CNTR.CNTR_TPSZ_CD(+)
                                              AND QTY.BKG_NO          = DTL.BKG_NO
                                              AND QTY.CNTR_TPSZ_CD    = DTL.CNTR_TPSZ_CD
                                              AND  DTL.BB_CGO_FLG      = 'Y'
                                              AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) IN ('F','A','P')
                                              AND QTY.BKG_NO          = BB.BKG_NO(+)
                                              AND BKG.CMDT_CD         = M.CMDT_CD(+)
                                              AND M.DELT_FLG(+)       = 'N' 
                                         GROUP BY BKG.BKG_NO, CNTR.CNTR_NO, NVL(VVD.POD_CD,' '),VVD.POD_YD_CD, VVD.POD_CLPT_IND_SEQ, VVD.POL_YD_CD, VVD.POL_CLPT_IND_SEQ, BKG.BLCK_STWG_CD, QTY.CNTR_TPSZ_CD,
                                                  DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E'), BB.GRS_WGT, NVL(BKG.STWG_CD,' '), BB.SPCL_CGO_APRO_CD,
                                                  BKG.UPD_USR_ID, BKG.UPD_DT, VVD.VSL_CD, VVD.SKD_VOY_NO, VVD.SKD_DIR_CD, CNTR.ORG_YD_CD, BKG.BKG_STS_CD,
                                                  BKG.SLAN_CD, M.CMDT_NM, DTL.OP_CNTR_QTY ) ) QTY, BKG_BB_CGO CS, COPY_T C
                        WHERE  QTY >= RN
                        AND    DECODE(QTY.RN,1,QTY - DECODE(QTY.CNT,0,0,QTY.CNT-1)) >= C.NO(+)
                        AND    QTY.BKG_NO   = CS.BKG_NO(+)
                        AND    QTY.CNTR_SEQ = CS.BB_CGO_SEQ(+) )
                UNION ALL
                SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
                       AK.AWK_CGO_SEQ            CNTR_SEQ,
                       1                         CGO_SEQ,
                       AK.AWK_CGO_SEQ            U_CGO_SEQ,
                       NVL(AK.CNTR_NO,' ')       CNTR_NO,
                       NVL(VVD.POD_CD,' ')       POD_CD,
                       VVD.POD_YD_CD,
                       VVD.POD_CLPT_IND_SEQ,
                       VVD.POL_YD_CD,
                       VVD.POL_CLPT_IND_SEQ,
                       BKG.BLCK_STWG_CD          MLB,
                       NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD,
                       DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD,
                       CASE 
                           WHEN AK.CNTR_NO IS NULL THEN
                                ROUND(( SUM(AK.GRS_WGT) OVER (PARTITION BY BKG.BKG_NO, AK.CNTR_NO, AK.AWK_CGO_SEQ ) +
                                   DECODE(TP.CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,2500,4000),TP.CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(DOC.WGT_UT_CD,'LBS',0.4536,1),3)
                           ELSE
                                ROUND(( DECODE(AK.CNTR_NO,NULL,AK.GRS_WGT,SUM(AK.GRS_WGT) OVER (PARTITION BY AK.CNTR_NO)) +
                                   DECODE(TP.CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,2500,4000),TP.CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(DOC.WGT_UT_CD,'LBS',0.4536,1),3)
                       END                  CNTR_GRS_WGT,
                       AK.GRS_WGT           CGO_GRS_WGT,
                       'AK'                 SPCL_CGO,
                       NULL                 IMDG_CLSS_CD,
                       NULL                 IMDG_UN_NO,
                       NULL                 PRP_SHP_NM,
                       NULL                 HZD_DESC,
                       NULL                 IMDG_SUBS_RSK_LBL_CD,
                       NULL                 IMDG_MRN_POLUT_CD,
                       NULL                 PCK_GRP_CD,
                       NULL                 LQ,
                       NULL                 EQ,
                       NULL                 FDO_TEMP,
                       NULL                 CDO_TEMP,
                       AK.TTL_DIM_LEN       DIM_LEN,
                       AK.TTL_DIM_WDT       DIM_WDT,
                       AK.TTL_DIM_HGT       DIM_HGT,
                       AK.OVR_FWRD_LEN      OVR_FWD,
                       AK.OVR_BKWD_LEN      OVR_AFT,
                       AK.OVR_LF_LEN        OVR_LFT,
                       AK.OVR_RT_LEN        OVR_RGT,
                       AK.OVR_HGT           OVR_HGT,
                       AK.CRN_PST_STS_CD    POST_EXD,
                       NVL(BKG.STWG_CD,' ') STWG_CD,
                       AK.SPCL_CGO_APRO_CD  SPCL_CGO_AUTH_FLG,
                       TRIM(AK.STWG_RQST_DESC)||DECODE(TRIM(AK.DIFF_RMK),NULL,'','/')||TRIM(AK.DIFF_RMK) CBF_RMK,
                       BKG.UPD_USR_ID,
                       BKG.UPD_DT,
                       VVD.VSL_CD,
                       VVD.SKD_VOY_NO,
                       VVD.SKD_DIR_CD,
                       AK.ORG_YD_CD YD_CD,
                       BKG.BKG_STS_CD CBF_IND_FLG,
                       BKG.SLAN_CD LANE,
                       M.CMDT_NM   CMDT,
                       '' AS HZD_CTNT
                  FROM BKG_VVD VVD, 
                       BKG_BOOKING BKG, 
                       BKG_BL_DOC DOC, 
                       BKG_QUANTITY QTY, 
                       (
                        SELECT CAK.*,
                               CNTR.ORG_YD_CD
                          FROM BKG_AWK_CGO   CAK,
                               BKG_CONTAINER CNTR
                         WHERE CAK.BKG_NO          = CNTR.BKG_NO(+)
                           AND CAK.CNTR_TPSZ_CD    = CNTR.CNTR_TPSZ_CD(+)
                           AND CAK.CNTR_NO         = CNTR.CNTR_NO(+)
                           AND CNTR.AWK_CGO_FLG(+) = 'Y'
                       ) AK,
                       MDM_COMMODITY M, 
                       MDM_CNTR_TP_SZ TP
         		 WHERE VVD.VSL_CD                          = @[vsl_cd]                                                                                                      
         		   AND VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                  
         		   AND VVD.SKD_DIR_CD                      = @[skd_dir_cd]                                                                               
         		   AND VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                      
         		   AND VVD.BKG_NO                          = BKG.BKG_NO                                                                                                     
         		   #if(${bk_st} == 'F')                                                                                                                        
         		   AND BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                     
         		   #end                                                                                                                                        
                   AND BKG.BKG_STS_CD      <> 'X'
                   AND BKG.BKG_NO          = DOC.BKG_NO
                   AND BKG.BKG_NO          = QTY.BKG_NO(+)
                   AND SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
                   AND QTY.BKG_NO          = AK.BKG_NO
                   AND QTY.CNTR_TPSZ_CD    = AK.CNTR_TPSZ_CD
                   AND BKG.CMDT_CD         = M.CMDT_CD(+)
                   AND M.DELT_FLG(+)       = 'N'
                   AND QTY.CNTR_TPSZ_CD    = TP.CNTR_TPSZ_CD(+)
                UNION ALL
                SELECT BKG_NO,
                       1                         CNTR_SEQ,
                       1                         CGO_SEQ,
                       0                         U_CGO_SEQ,
                       CNTR_NO,
                       POD_CD,
                       POD_YD_CD,
                       POD_CLPT_IND_SEQ,
                       POL_YD_CD,
                       POL_CLPT_IND_SEQ,
                       MLB,
                       CNTR_TPSZ_CD,
                       FULL_MTY_CD,
                       CASE 
                           WHEN CNTR_NO IS NULL THEN
                                ROUND(( SUM(CGO_GRS_WGT) OVER (PARTITION BY BKG_NO, CNTR_NO ) +
                                   DECODE(CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(CNTR_TPSZ_CD,2,1),2,2500,4000),CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(WGT_UT_CD,'LBS',0.4536,1),3)
                           ELSE
                                ROUND(( DECODE(CNTR_NO,NULL,CGO_GRS_WGT,SUM(CGO_GRS_WGT) OVER (PARTITION BY CNTR_NO)) +
                                   DECODE(CNTR_TPSZ_TARE_WGT,0,DECODE(SUBSTR(CNTR_TPSZ_CD,2,1),2,2500,4000),CNTR_TPSZ_TARE_WGT) ) *
                                 DECODE(WGT_UT_CD,'LBS',0.4536,1),3)
                       END                  CNTR_GRS_WGT,
                       ROUND(CGO_GRS_WGT,3) CGO_GRS_WGT,
                       'ST'                 SPCL_CGO,
                       NULL                 IMDG_CLSS_CD,
                       NULL                 IMDG_UN_NO,
                       NULL                 PRP_SHP_NM,
                       NULL                 HZD_DESC,
                       NULL                 IMDG_SUBS_RSK_LBL_CD,
                       NULL                 IMDG_MRN_POLUT_CD,
                       NULL                 PCK_GRP_CD,
                       NULL                 LQ,
                       NULL                 EQ,
                       NULL                 FDO_TEMP,
                       NULL                 CDO_TEMP,
                       NULL                 DIM_LEN,
                       NULL                 DIM_WDT,
                       NULL                 DIM_HGT,
                       NULL                 OVR_FWD,
                       NULL                 OVR_AFT,
                       NULL                 OVR_LFT,
                       NULL                 OVR_RGT,
                       NULL                 OVR_HGT,
                       NULL                 POST_EXD,
                       STWG_CD,
                       NULL                 SPCL_CGO_AUTH_FLG,
                       CBF_RMK,
                       UPD_USR_ID,
                       UPD_DT,
                       VSL_CD,
                       SKD_VOY_NO,
                       SKD_DIR_CD,
                       YD_CD,
                       CBF_IND_FLG,
                       LANE,
                       CMDT,
                       '' AS HZD_CTNT
                FROM   ( SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
                                NVL(CNTR.CNTR_NO,' ')     CNTR_NO,
                                NVL(VVD.POD_CD,' ')       POD_CD,
                                VVD.POD_YD_CD,
                                VVD.POD_CLPT_IND_SEQ,
                                VVD.POL_YD_CD,
                                VVD.POL_CLPT_IND_SEQ,
                                BKG.BLCK_STWG_CD          MLB,
                                NVL(QTY.CNTR_TPSZ_CD,' ') CNTR_TPSZ_CD,
                                DECODE(NVL(BKG.BKG_CGO_TP_CD,' '),'F','F','E') FULL_MTY_CD,
                                DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,1,2) * DECODE(ACT_CNTR_QTY,0,OP_CNTR_QTY,ACT_CNTR_QTY)
                                 / DECODE(SUM(DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,1,2)*DECODE(ACT_CNTR_QTY,0,OP_CNTR_QTY,ACT_CNTR_QTY)) 
                                    OVER (PARTITION BY QTY.BKG_NO),0,1,SUM(DECODE(SUBSTR(QTY.CNTR_TPSZ_CD,2,1),2,1,2)*DECODE(ACT_CNTR_QTY,0,OP_CNTR_QTY,ACT_CNTR_QTY))
                                    OVER (PARTITION BY QTY.BKG_NO)) 
                                 * DOC.ACT_WGT       CGO_GRS_WGT,
                                NVL(BKG.STWG_CD,' ') STWG_CD,
                                TRIM(CNTR.DIFF_RMK)  CBF_RMK,
                                BKG.UPD_USR_ID,
                                BKG.UPD_DT,
                                VVD.VSL_CD,
                                VVD.SKD_VOY_NO,
                                VVD.SKD_DIR_CD,
                                CNTR.ORG_YD_CD YD_CD,
                                BKG.BKG_STS_CD CBF_IND_FLG,
                                BKG.SLAN_CD LANE,
                                M.CMDT_NM   CMDT,
                                DOC.WGT_UT_CD,
                                NVL(TP.CNTR_TPSZ_TARE_WGT,0) CNTR_TPSZ_TARE_WGT
                         FROM   BKG_VVD VVD, BKG_BOOKING BKG, BKG_BL_DOC DOC, BKG_CONTAINER CNTR, BKG_QUANTITY QTY, MDM_COMMODITY M, MDM_CNTR_TP_SZ TP
                         WHERE  VVD.VSL_CD                          = @[vsl_cd]                                                                                                               
                         AND    VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                           
                         AND    VVD.SKD_DIR_CD                      = @[skd_dir_cd]    
                         AND    VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                                           
                         AND    VVD.BKG_NO                          = BKG.BKG_NO                                                                                                              
                         #if(${bk_st} == 'F')                                                                                                                                 
                         AND    BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                              
                         #end                                                                                                                                                 
                         AND    BKG.BKG_STS_CD      <> 'X'
                         AND    TRIM(BKG.STWG_CD)   IS NOT NULL
                         AND    BKG.BKG_NO          = DOC.BKG_NO
                         AND    BKG.BKG_NO          = QTY.BKG_NO(+)
                         AND    QTY.BKG_NO          = CNTR.BKG_NO(+)
                         AND    QTY.CNTR_TPSZ_CD    = CNTR.CNTR_TPSZ_CD(+)
                         AND    SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
                         AND    CNTR.DCGO_FLG       = 'N'
                         AND    CNTR.RC_FLG         = 'N'
                         AND    CNTR.BB_CGO_FLG     = 'N'
                         AND    CNTR.AWK_CGO_FLG    = 'N'
                         AND    BKG.CMDT_CD         = M.CMDT_CD(+)
                         AND    M.DELT_FLG(+)       = 'N' 
                         AND    QTY.CNTR_TPSZ_CD    = TP.CNTR_TPSZ_CD(+) ) ) A,
              
		        (
                  SELECT V.BKG_NO
                       , V.VSL_CD
                       , V.SKD_VOY_NO 
                       , V.SKD_DIR_CD
                       , S.DCGO_SEQ
                       , S.RC_SEQ
                       , S.BB_CGO_SEQ
                       , S.AWK_CGO_SEQ
                       , S.APRO_REF_NO
                    FROM SCG_AUTHORIZATION S
                       , SCG_VVD_APRO_RQST V 
                   WHERE S.BKG_NO                 = V.BKG_NO
                     AND S.SPCL_CGO_APRO_RQST_SEQ = V.SPCL_CGO_APRO_RQST_SEQ
                     AND S.VSL_PRE_PST_CD         = V.VSL_PRE_PST_CD
                     AND S.VSL_SEQ                = V.VSL_SEQ
                     AND V.VSL_CD                 = @[vsl_cd]
                     AND V.SKD_VOY_NO             = @[skd_voy_no]
                     AND V.SKD_DIR_CD             = @[skd_dir_cd]
                     AND V.SPCL_CGO_APRO_RQST_SEQ = (SELECT MAX(T.SPCL_CGO_APRO_RQST_SEQ) 
                                                       FROM SCG_VVD_APRO_RQST T 
                                                      WHERE T.BKG_NO     = V.BKG_NO
                                                        AND T.VSL_CD     = V.VSL_CD
                                                        AND T.SKD_VOY_NO = V.SKD_VOY_NO
                                                        AND T.SKD_DIR_CD = V.SKD_DIR_CD) 
                ) VS
               WHERE A.BKG_NO     = VS.BKG_NO(+)
                 AND A.VSL_CD     = VS.VSL_CD(+) 
                 AND A.SKD_VOY_NO = VS.SKD_VOY_NO(+)
                 AND A.SKD_DIR_CD = VS.SKD_DIR_CD(+)
                 AND A.U_CGO_SEQ  = DECODE(A.SPCL_CGO,'DG',VS.DCGO_SEQ(+),'RF',VS.RC_SEQ(+),'BB',VS.BB_CGO_SEQ(+),'AK',VS.AWK_CGO_SEQ(+),'ST',A.CGO_SEQ)

              ) L,
     ( SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
              DG.DG_CNTR_SEQ            CNTR_SEQ,
              DG.CNTR_CGO_SEQ           CGO_SEQ,
               NVL(DG.CNTR_NO,' ')       CNTR_NO
       FROM   BKG_VVD VVD, BKG_BOOKING BKG, BKG_QUANTITY QTY, BKG_DG_CGO DG
       WHERE  VVD.VSL_CD                          = @[vsl_cd]                                                                                                               
       AND    VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                           
       AND    VVD.SKD_DIR_CD                      = @[skd_dir_cd] 
       AND    VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                                       
       AND    VVD.BKG_NO                          = BKG.BKG_NO                                                                                                              
       #if(${bk_st} == 'F')                                                                                                                                 
       AND    BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                              
       #end                                                                                                                                                 
       AND    BKG.BKG_STS_CD      <> 'X'
       AND    BKG.BKG_NO          = QTY.BKG_NO(+)
       AND    SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
       AND    QTY.BKG_NO          = DG.BKG_NO
       AND    QTY.CNTR_TPSZ_CD    = DG.CNTR_TPSZ_CD ) D,
     ( SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
              RF.RC_SEQ                 CNTR_SEQ,
              1                         CGO_SEQ,
              NVL(RF.CNTR_NO,' ')       CNTR_NO
       FROM   BKG_VVD VVD, BKG_BOOKING BKG, BKG_QUANTITY QTY, BKG_RF_CGO RF
       WHERE  VVD.VSL_CD                          = @[vsl_cd]                                                                                                               
       AND    VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                           
       AND    VVD.SKD_DIR_CD                      = @[skd_dir_cd]                                                                                          
       AND    VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                               
       AND    VVD.BKG_NO                          = BKG.BKG_NO                                                                                                              
       #if(${bk_st} == 'F')                                                                                                                                 
       AND    BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                              
       #end                                                                                                                                                 
       AND    BKG.BKG_STS_CD      <> 'X'
       AND    BKG.BKG_NO          = QTY.BKG_NO(+)
       AND    SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
       AND    QTY.BKG_NO          = RF.BKG_NO
       AND    QTY.CNTR_TPSZ_CD    = RF.CNTR_TPSZ_CD ) R,
     ( SELECT BKG_NO,
                       CNTR_SEQ,
                       CGO_SEQ,
                       CNTR_NO
                FROM  ( WITH COPY_T AS
                          ( SELECT ROWNUM NO
                            FROM BKG_BOOKING
                            WHERE ROWNUM<=1000 )
                        SELECT BKG_NO,
                               ROW_NUMBER( ) OVER ( PARTITION BY QTY.BKG_NO, QTY.CGO_SEQ ORDER BY QTY.BKG_NO ASC ) CNTR_SEQ,
                               CGO_SEQ,
                               CASE WHEN RN=1 AND NO>1 THEN NULL ELSE CNTR_NO END CNTR_NO
                        FROM   ( SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
                                        BB.BB_CGO_SEQ             CGO_SEQ,
                                        NVL(CNTR.CNTR_NO,' ')     CNTR_NO,
                                        DTL.OP_CNTR_QTY QTY,
                                        ROW_NUMBER() OVER (PARTITION BY BKG.BKG_NO, QTY.CNTR_TPSZ_CD, BB.BB_CGO_SEQ ORDER BY CNTR.CNTR_NO) RN,
                                        COUNT(CNTR.CNTR_NO) OVER (PARTITION BY BKG.BKG_NO, QTY.CNTR_TPSZ_CD ) CNT
                                 FROM   BKG_VVD VVD, BKG_BOOKING BKG, BKG_BL_DOC DOC, BKG_CONTAINER CNTR, BKG_QUANTITY QTY, BKG_QTY_DTL DTL, BKG_BB_CGO BB, MDM_COMMODITY M
       WHERE  VVD.VSL_CD                          = @[vsl_cd]                                                                                                               
       AND    VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                           
       AND    VVD.SKD_DIR_CD                      = @[skd_dir_cd]  
       AND    VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                                        
       AND    VVD.BKG_NO                          = BKG.BKG_NO                                                                                                              
       #if(${bk_st} == 'F')                                                                                                                                 
       AND    BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                              
       #end                                                                                                                                                 
                                 AND    BKG.BKG_STS_CD      <> 'X'
                                 AND    BKG.BKG_NO          = DOC.BKG_NO
                                 AND    BKG.BKG_NO          = QTY.BKG_NO(+)
                                 AND    QTY.BKG_NO          = CNTR.BKG_NO(+)
                                 AND    QTY.CNTR_TPSZ_CD    = CNTR.CNTR_TPSZ_CD(+)
                                 AND    QTY.BKG_NO          = DTL.BKG_NO(+)
                                 AND    QTY.CNTR_TPSZ_CD    = DTL.CNTR_TPSZ_CD(+)
                                 AND    DTL.BB_CGO_FLG      = 'Y'
                                 AND    SUBSTR(QTY.CNTR_TPSZ_CD,1,1) IN ('F','A','P')
                                 AND    QTY.BKG_NO          = BB.BKG_NO(+)
                                 AND    BKG.CMDT_CD         = M.CMDT_CD(+)
                                 AND    M.DELT_FLG(+)       = 'N' ) QTY, COPY_T C
                        WHERE  QTY >= RN
                        AND    DECODE(QTY.RN,1,QTY - DECODE(QTY.CNT,0,0,QTY.CNT-1)) >= C.NO(+) ) ) B,
     ( SELECT NVL(BKG.BKG_NO,' ')       BKG_NO,
              AK.AWK_CGO_SEQ            CNTR_SEQ,
              1                         CGO_SEQ,
              NVL(AK.CNTR_NO,' ')       CNTR_NO
       FROM   BKG_VVD VVD, BKG_BOOKING BKG, BKG_QUANTITY QTY, BKG_AWK_CGO AK
       WHERE  VVD.VSL_CD                          = @[vsl_cd]                                                                                                               
       AND    VVD.SKD_VOY_NO                      = @[skd_voy_no]                                                                                                           
       AND    VVD.SKD_DIR_CD                      = @[skd_dir_cd]    
       AND    VVD.POL_YD_CD||VVD.POL_CLPT_IND_SEQ = @[yd_cd]                                                                                        
       AND    VVD.BKG_NO                          = BKG.BKG_NO                                                                                                              
       #if(${bk_st} == 'F')                                                                                                                                 
       AND    BKG.BKG_STS_CD      LIKE 'F'||'%'            --:bkg_sts(Confirm : 'F', All : '')                                                              
       #end                                                                                                                                                 
       AND    BKG.BKG_STS_CD      <> 'X'
       AND    BKG.BKG_NO          = QTY.BKG_NO(+)
       AND    SUBSTR(QTY.CNTR_TPSZ_CD,1,1) <> 'Q'
       AND    QTY.BKG_NO          = AK.BKG_NO
       AND    QTY.CNTR_TPSZ_CD    = AK.CNTR_TPSZ_CD ) A
WHERE  L.BKG_NO   = D.BKG_NO(+)
AND    L.CNTR_NO  = D.CNTR_NO(+)
AND    L.CNTR_SEQ = D.CNTR_SEQ(+)
AND    L.CGO_SEQ  = D.CGO_SEQ(+)
AND    D.BKG_NO   = R.BKG_NO(+)
AND    D.CNTR_NO  = R.CNTR_NO(+)
AND    D.CNTR_SEQ = R.CNTR_SEQ(+)
AND    D.CGO_SEQ  = R.CGO_SEQ(+)
AND    D.BKG_NO   = B.BKG_NO(+)
AND    D.CNTR_NO  = B.CNTR_NO(+)
AND    D.CNTR_SEQ = B.CNTR_SEQ(+)
AND    D.CGO_SEQ  = B.CGO_SEQ(+)
AND    D.BKG_NO   = A.BKG_NO(+)
AND    D.CNTR_NO  = A.CNTR_NO(+)
AND    D.CNTR_SEQ = A.CNTR_SEQ(+)
AND    D.CGO_SEQ  = A.CGO_SEQ(+)
GROUP BY L.BKG_NO, L.CNTR_NO, L.POD,L.POD_YD_CD, L.POD_CLPT_IND_SEQ, L.MLB, L.TP, L.CNTR_SEQ, L.CGO_SEQ
ORDER BY L.POD, L.POD_YD_CD,L.POD_CLPT_IND_SEQ, L.MLB, L.BKG_NO, L.CNTR_SEQ, L.CGO_SEQ, L.CNTR_NO, L.TP			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="COCN" out="N"/>
				<param name="skd_voy_no" type="12" value="0001" out="N"/>
				<param name="skd_dir_cd" type="12" value="E" out="N"/>
				<param name="yd_cd" type="12" value="DEHAMD6" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
