<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="OwnDangerousCargoApprovalDBDAOSearchOwnDGListRSQL">
			<desc><![CDATA[DG-Part1, DG-Part2조회
History------------------------------------------------------------------------------------
2012.04.04 김민아 [CHM-201216940-01] [VOP-SCG] Specail cargo applicaton 상 OPR code 관련 변경 요청]]></desc>
			<sql><![CDATA[
SELECT	ROW_NUMBER() OVER(
			PARTITION BY A.VSL_CD,A.SKD_VOY_NO,A.SKD_DIR_CD,A.BKG_NO 
				ORDER BY A.VSL_CD, A.SKD_VOY_NO ,A.SKD_DIR_CD, A.BKG_NO, A.DG_CNTR_SEQ, A.CNTR_CGO_SEQ ASC) AS NO, 
		A.BKG_NO AS BOOKING_NO,  
        A.BKG_STS_CD,  
        A.DG_CNTR_SEQ, 
        A.CNTR_CGO_SEQ, 
        ROUND(GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS',SYSDATE,'GMT') - A.RQST_GDT,1) AS RQST_DAY, 
        DECODE(NVL(G.SPCL_CGO_AUTH_CD,'R'),'R',DECODE(A.SPCL_RQST_FLG,'Y','S','')||'R'||A.SPCL_CGO_RQST_SEQ,G.SPCL_CGO_AUTH_CD) AS SPCL_CGO_AUTH_CD, 
		G.SPCL_CGO_AUTH_RJCT_CD, 
        G.APRO_REF_NO, 
	(	SELECT DECODE(EML_PROC_STS_CD,'1','W', 
                                      '3','S', 
                                      '4','F', 
                                      '') 
		FROM   COM_EML_SND_INFO 
        WHERE  EML_SND_NO = A.EML_SND_NO) AS EML_SND_NO, 
        A.SLAN_CD, 
        A.VSL_CD, 
        A.SKD_VOY_NO, 
        A.SKD_DIR_CD, 
        A.CRR_CD, 
		NVL(( SELECT DISTINCT CRR_CD
              FROM   (
                       SELECT  DISTINCT NVL(B.VSL_CD,A.VSL_CD) VSL_CD, 
                               NVL(B.CRR_CD,A.CRR_CD) CRR_CD, 
                               NVL(A.EFF_DT,B.EFF_DT) EFF_DT, 
                               NVL(A.EXP_DT,B.EXP_DT) EXP_DT
                       FROM    (
                                  SELECT  DECODE(V.VSL_CD,NULL,C.VSL_CD,V.VSL_CD)               VSL_CD,
                                             DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                             C.EFF_DT, 
                                             C.EXP_DT
                                  FROM    FMS_CONTRACT C
                                       ,  FMS_ID_VSL V
                                  WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                  AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                  AND     C.FLET_CTRT_NO = V.FLET_CTRT_NO(+)
                                  AND  V.USE_FLG(+) = 'Y'
                                  AND  C.FLET_CTRT_TP_CD = 'TI'
                                  UNION ALL
                                  SELECT  C.VSL_CD                VSL_CD,
                                          DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                          C.EFF_DT, 
                                          C.EXP_DT
                                  FROM   FMS_CONTRACT C
                                  WHERE  NVL(C.DELT_FLG,'N') = 'N'
                                  AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                  AND     C.FLET_CTRT_TP_CD = 'TI'
                               ) A,
                               ( 
                                 SELECT  DECODE(V.VSL_CD,NULL,C.VSL_CD,V.VSL_CD)               VSL_CD,
                                         DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                         C.EFF_DT, 
                                         C.EXP_DT
                                 FROM    FMS_CONTRACT C
                                      ,  FMS_ID_VSL V
                                 WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                 AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                 AND     C.FLET_CTRT_NO = V.FLET_CTRT_NO(+)
                                 AND     V.USE_FLG(+) = 'Y'
                                 AND     C.FLET_CTRT_TP_CD = 'TO'
                                 UNION ALL
                                 SELECT  C.VSL_CD                 VSL_CD,
                                         DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                         C.EFF_DT, 
                                         C.EXP_DT
                                  FROM    FMS_CONTRACT C
                                  WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                  AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                  AND     C.FLET_CTRT_TP_CD = 'TO'
                                   ) B   
                       WHERE A.VSL_CD = B.VSL_CD(+)
                       UNION ALL
                       SELECT  DISTINCT NVL(B.VSL_CD,A.VSL_CD) VSL_CD, 
                               NVL(B.CRR_CD,A.CRR_CD) CRR_CD, 
                               NVL(A.EFF_DT,B.EFF_DT) EFF_DT, 
                               NVL(A.EXP_DT,B.EXP_DT) EXP_DT
                       FROM    (
                                 SELECT  DECODE(V.VSL_CD,NULL,C.VSL_CD,V.VSL_CD)               VSL_CD,
                                         DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                         C.EFF_DT, 
                                         C.EXP_DT
                                 FROM    FMS_CONTRACT C, FMS_ID_VSL V
                                 WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                 AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                 AND     C.FLET_CTRT_NO = V.FLET_CTRT_NO(+)
                                 AND     V.USE_FLG(+) = 'Y'
                                 AND     C.FLET_CTRT_TP_CD = 'OW'
                                 UNION ALL
                                 SELECT  C.VSL_CD                 VSL_CD,
                                         DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                         C.EFF_DT, 
                                         C.EXP_DT
                                 FROM    FMS_CONTRACT C
                                 WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                 AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                 AND     C.FLET_CTRT_TP_CD = 'OW'
                               ) A,
                               ( 
                                 SELECT  DECODE(V.VSL_CD,NULL,C.VSL_CD,V.VSL_CD)               VSL_CD,
                                         DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                         C.EFF_DT, 
                                         C.EXP_DT
                                 FROM    FMS_CONTRACT C
                                      ,  FMS_ID_VSL V
                                 WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                 AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                 AND     C.FLET_CTRT_NO = V.FLET_CTRT_NO(+)
                                 AND     V.USE_FLG(+) = 'Y'
                                 AND     C.FLET_CTRT_TP_CD = 'TO'
                                 UNION ALL
                                 SELECT  C.VSL_CD                 VSL_CD,
                                         DECODE(C.FLET_CTRT_TP_CD,'OW','SML','TI','SML','OTH') CRR_CD,
                                         C.EFF_DT, 
                                         C.EXP_DT
                                 FROM    FMS_CONTRACT C
                                 WHERE   NVL(C.DELT_FLG,'N') = 'N'
                                 AND     C.FLET_CTRT_FACT_CD = 'ACT'
                                 AND     C.FLET_CTRT_TP_CD = 'TO'
                               ) B   
                       WHERE A.VSL_CD = B.VSL_CD(+)
                     )
              WHERE VSL_CD = A.VSL_CD
              AND     (   TO_CHAR(A.VPS_ETA_DT,'YYYYMMDD') BETWEEN TO_CHAR(EFF_DT,'YYYYMMDD') AND TO_CHAR(EXP_DT,'YYYYMMDD')
                       OR TO_CHAR(A.VPS_ETA_DT,'YYYYMMDD') BETWEEN TO_CHAR(EFF_DT,'YYYYMMDD') AND TO_CHAR(EXP_DT,'YYYYMMDD')
                       OR ( TO_CHAR(EFF_DT,'YYYYMMDD') >= TO_CHAR(A.VPS_ETA_DT,'YYYYMMDD') AND TO_CHAR(EXP_DT,'YYYYMMDD') <= TO_CHAR(A.VPS_ETA_DT,'YYYYMMDD') ) 
                      )),A.CRR_CD) AS CRR_CODE, 
        A.POR_CD, 
        A.POL_CD, 
		TO_CHAR(A.VPS_ETA_DT,'YYYY-MM-DD HH24:MI') AS VPS_ETA_DT,
        A.POD_CD, 
        A.DEL_CD, 
        A.CNTR_TPSZ_CD, 
        'DD' AS DG_TP, 
        A.IMDG_UN_NO, 
        A.IMDG_UN_NO_SEQ, 
        A.IMDG_CLSS_CD, 
        A.IMDG_SUBS_RSK_LBL_CD1 
        ||DECODE(A.IMDG_SUBS_RSK_LBL_CD2,NULL,NULL,'/') 
        ||A.IMDG_SUBS_RSK_LBL_CD2 
		||DECODE(A.IMDG_SUBS_RSK_LBL_CD3,NULL,NULL,'/') 
        ||A.IMDG_SUBS_RSK_LBL_CD3 
        ||DECODE(A.IMDG_SUBS_RSK_LBL_CD4,NULL,NULL, '/') 
        ||A.IMDG_SUBS_RSK_LBL_CD4 AS IMDG_SUBS_RSK_LBL_CD, 		 
        A.MRN_POLUT_FLG, 
        DECODE(A.IMDG_PCK_GRP_CD,'N',NULL, 
                                 '1','I', 
                                 '2','II', 
                                 '3','III') AS IMDG_PCK_GRP_CD, 
        A.IMDG_LMT_QTY_FLG, 
        A.IMDG_EXPT_QTY_FLG, 
        A.FLSH_PNT_CDO_TEMP, 
        A.GRS_WGT, 
        A.NET_WGT, 
        NVL(A.WGT_UT_CD,'KGS') AS WGT_UT_CD,
        A.PSA_NO, 
        A.HCDG_FLG, 
        A.BKG_NO, 
        A.SPCL_CGO_APRO_RQST_SEQ, 
        A.SPCL_CGO_RQST_SEQ, 
        A.VSL_PRE_PST_CD, 
        A.VSL_SEQ, 
        A.CNTR_NO, 
        A.DCGO_SEQ, 
        A.DCGO_QTY, 
        A.LST_RQST_DAT_FLG, 
        A.BKG_RCV_TERM_CD, 
        A.BKG_DE_TERM_CD, 
        A.POL_CLPT_IND_SEQ, 
        A.POD_CLPT_IND_SEQ, 
        A.POL_YD_CD, 
        A.POD_YD_CD, 
        @[rgn_shp_opr_cd] ASRGN_SHP_OPR_CD, 
        A.SPCL_CGO_CATE_CD, 
        G.SPCL_CGO_AUTH_NO, 
        G.AUTH_OFC_CD, 
        G.SPCL_CGO_AUTH_SEQ, 
        SCG_GET_MPA1_NET_FNC(A.VSL_CD,A.SKD_VOY_NO,A.SKD_DIR_CD,A.POL_CD, 
                             A.POD_CD,A.IMDG_CLSS_CD) AS NET_WGT_SUM, 
        '' AS SCG_FLG, 
        '' AS RQST_AUTH_CD, 
        A.RQST_OFC_CD, 
        TO_CHAR(A.RQST_DT,'YYYY-MM-DD HH24:MI') AS RQST_DT, 
        TO_CHAR(A.RQST_GDT,'YYYY-MM-DD HH24:MI') AS RQST_GDT, 
        A.RQST_USR_ID, 
        TO_CHAR(G.AUTH_DT,'YYYY-MM-DD HH24:MI')AS AUTH_DT, 
        TO_CHAR(G.AUTH_GDT,'YYYY-MM-DD HH24:MI')AS AUTH_GDT, 
        G.AUTH_USR_ID, 
        G.SPCL_CGO_AUTH_RMK, 
        A.SPCL_RQST_DESC, 
        A.IN_IMDG_PCK_QTY1, 
        A.OUT_IMDG_PCK_QTY1, 
        A.INTMD_IMDG_PCK_QTY1,
        A.NET_EXPLO_WGT,           -- 2012.11.13 Add
        A.IMDG_SEGR_GRP_NO
FROM	
	(	SELECT 	
			#if (${scg_flg} == 'DG1' || ${scg_flg} == 'DG2') 
				/*+ ORDERED USE_NL(B C E F A v vvs) use_hash(d) */
			#end
				A.BKG_NO, 
				A.BKG_STS_CD, 
                C.SLAN_CD, 
                B.SPCL_CGO_APRO_RQST_SEQ, 
                B.SPCL_CGO_RQST_SEQ, 
                B.SPCL_CGO_CATE_CD, 
                B.DCGO_QTY, 
                B.POR_CD, 
                B.DEL_CD, 
                B.EML_SND_NO, 
                B.LST_RQST_DAT_FLG, 
                B.BKG_RCV_TERM_CD, 
                B.BKG_DE_TERM_CD, 
                B.RQST_OFC_CD, 
                B.RQST_DT, 
                B.RQST_GDT, 
                B.RQST_USR_ID, 
                C.VSL_PRE_PST_CD, 
                C.VSL_SEQ, 
                C.VSL_CD, 
                C.SKD_VOY_NO, 
                C.SKD_DIR_CD, 
                C.POL_CD, 
                C.POD_CD, 
                C.POL_CLPT_IND_SEQ, 
                C.POD_CLPT_IND_SEQ, 
                C.POL_YD_CD, 
                C.POD_YD_CD, 
                NVL(VVS.ACT_CRR_CD, D.CRR_CD)   AS CRR_CD,
                F.DCGO_SEQ, 
        --       F.DG_CNTR_SEQ, 
				DENSE_RANK() OVER (PARTITION BY A.BKG_NO ORDER BY F.DG_CNTR_SEQ) AS DG_CNTR_SEQ,
                F.CNTR_CGO_SEQ, 
                F.CNTR_NO, 
                F.CNTR_TPSZ_CD, 
                F.IMDG_UN_NO, 
                F.IMDG_UN_NO_SEQ, 
                F.IMDG_CLSS_CD, 
                F.IMDG_SUBS_RSK_LBL_CD1,
	            F.IMDG_SUBS_RSK_LBL_CD2,
	            F.IMDG_SUBS_RSK_LBL_CD3,
	            F.IMDG_SUBS_RSK_LBL_CD4,
                F.MRN_POLUT_FLG, 
                F.IMDG_PCK_GRP_CD, 
                F.IMDG_LMT_QTY_FLG, 
                F.IMDG_EXPT_QTY_FLG, 
                F.FLSH_PNT_CDO_TEMP, 
                F.GRS_WGT, 
                F.NET_WGT, 
                F.WGT_UT_CD,
                F.IN_IMDG_PCK_QTY1, 
                F.OUT_IMDG_PCK_QTY1, 
                F.INTMD_IMDG_PCK_QTY1, 
                F.PSA_NO, 
                F.HCDG_FLG, 
                F.SPCL_RQST_FLG, 
                F.SPCL_RQST_DESC,
				V.VPS_ETA_DT,
                DECODE( SUBSTR(F.IMDG_CLSS_CD, 1, 1), '1', F.NET_EXPLO_WGT, 0) AS NET_EXPLO_WGT,   -- 2012.11.13 Add (class 1만 입력하도록 되어 있으므로, class 1 이외의 class는 0 으로 표시되면 됨)
                F.HZD_CTNT AS IMDG_SEGR_GRP_NO
		FROM	SCG_APRO_RQST B, 
                SCG_VVD_APRO_RQST C, 
                MDM_VSL_CNTR D,
			#if (${scg_flg} == 'SCG_DG')
		  		SCG_DG_CGO F, 
			#else
			  	BKG_DG_CGO F, 
			#end
                BKG_BOOKING A,
				VSK_VSL_PORT_SKD V,
				VSK_VSL_SKD VVS
		WHERE	B.SPCL_CGO_CATE_CD 			= 'DG' 
		AND		B.LST_RQST_DAT_FLG 			= 'Y' 
        AND 	B.BKG_NO 					= C.BKG_NO 
		AND 	B.SPCL_CGO_APRO_RQST_SEQ 	= C.SPCL_CGO_APRO_RQST_SEQ 
		AND 	C.VSL_CD 					= D.VSL_CD 
		AND 	D.DELT_FLG 					= 'N' 	
		AND 	B.BKG_NO 					= F.BKG_NO 
		AND 	F.SPCL_CGO_APRO_CD 			IS NOT NULL 
		AND 	V.VSL_CD 					= C.VSL_CD
        AND 	V.SKD_VOY_NO 				= C.SKD_VOY_NO
        AND 	V.SKD_DIR_CD 				= C.SKD_DIR_CD
        AND 	V.VPS_PORT_CD 				= C.POL_CD
		AND 	V.CLPT_IND_SEQ 				= C.POL_CLPT_IND_SEQ
		AND 	B.BKG_NO 					= A.BKG_NO                   
        AND 	V.VSL_CD        			= VVS.VSL_CD
        AND 	V.SKD_VOY_NO    			= VVS.SKD_VOY_NO
        AND 	V.SKD_DIR_CD    			= VVS.SKD_DIR_CD
        AND 	V.SLAN_CD    				= VVS.VSL_SLAN_CD

	#if (${scg_flg} == 'DG1' || ${scg_flg} == 'DG2') 
		#if (${rqst_dt_range} != '')
        	AND 	B.RQST_DT 					> SYSTIMESTAMP - @[rqst_dt_range]  --300
		#else
        	AND 	B.RQST_DT 					> SYSTIMESTAMP - 15   
		#end
		#if (${vps_eta_dt} != '')
        	AND 	V.VPS_ETA_DT 				> SYSTIMESTAMP - @[vps_eta_dt]  --300
		#else
        	AND 	V.VPS_ETA_DT 				> SYSTIMESTAMP - 30   
		#end
		AND 	F.SPCL_CGO_APRO_CD 			NOT IN ('C','D','N')
		AND 	A.BKG_STS_CD 				!= 'X'
		#if (${scg_flg} == 'DG1')
			AND 	(F.BKG_NO, F.DG_CNTR_SEQ) IN (
		#else
			AND 	(F.BKG_NO, F.DG_CNTR_SEQ) NOT IN (
		#end
			SELECT	BKG_NO, DG_CNTR_SEQ 
			FROM   	BKG_DG_CGO 
			WHERE  	BKG_NO = B.BKG_NO 
			AND 	(IMDG_CLSS_CD LIKE '1%' OR IMDG_CLSS_CD LIKE '2%' OR IMDG_CLSS_CD LIKE '7%' OR IMDG_CLSS_CD='5.2' OR PSA_NO = '1')) 
	#else
		AND 	A.BKG_STS_CD 				!= 'X'
    	AND 	B.SPCL_CGO_APRO_RQST_SEQ 	= F.SPCL_CGO_APRO_RQST_SEQ
		AND 	F.SPCL_CGO_APRO_CD 			NOT IN ('C','D')
	#end
	
	#if ($slan_cd.size() > 0) 
		AND 	C.SLAN_CD IN ( 
				#foreach($key IN ${slan_cd}) 
					#if($velocityCount < $slan_cd.size()) 
						'$key', 
					#else 
						'$key' 
					#end 
				#end 
				)
	#end
	
	#if (${vsl_cd} != '') 
		AND		C.VSL_CD 			IN ( @[vsl_cd] )
	#end

	#if (${imdg_un_no} != '') 
		AND 	F.IMDG_UN_NO 		= @[imdg_un_no]
	#end

	#if (${imdg_un_no_seq} != '') 
	 	AND 	F.IMDG_UN_NO_SEQ 	= @[imdg_un_no_seq]
	#end

	#if (${imdg_clss_cd} != '') 
		AND 	F.IMDG_CLSS_CD 		= @[imdg_clss_cd]
	#end

	#if (${skd_voy_no} != '') 
		AND		C.SKD_VOY_NO 		IN ( @[skd_voy_no] )
	#end

	#if (${skd_dir_cd} != '') 
		AND 	C.SKD_DIR_CD 		IN ( @[skd_dir_cd] )
	#end
	
	#if (${pol_cd} != '') 
		AND 	C.POL_CD 			= @[pol_cd]
	#end

	#if (${pod_cd} != '') 
		AND 	C.POD_CD 			= @[pod_cd]
	#end

	#if (${val_opr_tp_cd} == 'H') 
		AND 	NVL(VVS.ACT_CRR_CD, D.CRR_CD)	= 'SML'
	#end
	
	#if (${val_opr_tp_cd} == 'O') 
		AND		NVL(VVS.ACT_CRR_CD, D.CRR_CD)	!= 'SML'
	#end  	
	
	#if (${booking_no} != '') 
    	AND 	A.BKG_NO 			= @[booking_no]
	#end

	#if (${shpr_nm} != '') 
    	AND 	A.BKG_NO IN (
					SELECT 	SH.BKG_NO
	        		FROM 	BKG_CUSTOMER SH
    	    		WHERE 	SH.BKG_CUST_TP_CD = 'S'
        			AND 	SH.CUST_NM LIKE '%'||@[shpr_nm]||'%'
	    		)
	#end

    --#if (${from_eta_dt} != '' && ${to_eta_dt} != '') 
	    --AND V.VPS_ETA_DT BETWEEN TO_DATE([from_eta_dt],'YYYYMMDD') AND TO_DATE([to_eta_dt],'YYYYMMDD')+0.99999
	--#elseif (${from_eta_dt} != '') 
		--AND DECODE(C.VSL_PRE_PST_CD,'U',V.VPS_ETA_DT,B.RQST_DT)	<= (SELECT GLOBALDATE_PKG.TIME_CONV_FNC('KRPUS',SYSDATE,BKG_COM_USER_LOC_FNC([usr_id])) FROM DUAL) + TO_NUMBER([from_eta_dt])
    --#end

												   
		) A, 
		SCG_AUTHORIZATION G

WHERE	A.BKG_NO 					= G.BKG_NO (+) 
AND 	A.SPCL_CGO_APRO_RQST_SEQ 	= G.SPCL_CGO_APRO_RQST_SEQ (+) 
AND 	A.VSL_PRE_PST_CD 			= G.VSL_PRE_PST_CD (+) 
AND 	A.VSL_SEQ 					= G.VSL_SEQ (+) 
AND 	A.DCGO_SEQ 					= G.DCGO_SEQ (+) 
AND (
	       @[rgn_shp_opr_cd] = 
        (
            SELECT RGN_SHP_OPR_CD FROM SCG_RGN_SHP_OPR_PORT
            WHERE   A.POL_CD 					= LOC_CD 
--            WHERE   'CNSHA' 					= LOC_CD 
            AND     DELT_FLG 					= 'N'
            AND		RGN_SHP_OPR_CD 	= @[rgn_shp_opr_cd]
        )
        OR
          @[rgn_shp_opr_cd] = 
        (
--    		SELECT 2, RGN_SHP_OPR_CD, A.POL_CD   FROM    SCG_RGN_SHP_OPR_CD
    		SELECT RGN_SHP_OPR_CD   FROM    SCG_RGN_SHP_OPR_CD
            WHERE   (
            SELECT OFC_N3RD_LVL_CD
            FROM DMT_OFC_LVL_V
            WHERE OFC_N8TH_LVL_CD = (SELECT  EQ_CTRL_OFC_CD FROM MDM_LOCATION
            WHERE   NVL(DELT_FLG, 'N') = 'N'
            AND     LOC_CD  =   A.POL_CD))
            IN (RGN_SHP_OPR_RHQ_CD1, RGN_SHP_OPR_RHQ_CD2, RGN_SHP_OPR_RHQ_CD3, RGN_SHP_OPR_RHQ_CD4, RGN_SHP_OPR_RHQ_CD5, RGN_SHP_OPR_RHQ_CD6)
            AND RGN_SHP_OPR_CD 	= @[rgn_shp_opr_cd]
			UNION
			SELECT RGN_SHP_OPR_CD   FROM    SCG_RGN_SHP_OPR_CD
            WHERE   (
					SELECT	DECODE(SYS_AREA_GRP_ID, 'SWA', 'SINRS', 'EUR', 'HAMRU', 'USA', 'NYCRA', 'KOR', 'SHARC', 'CHN', 'SHARC')
                    FROM	COM_SYS_AREA_GRP_ID A, MDM_LOCATION B
                    WHERE	A.CO_IND_CD = 'H'
                    	AND A.CNT_CD = SUBSTR(B.LOC_CD, 1, 2)
                    	AND EQ_CTRL_OFC_CD IS NULL
                    AND   NVL(DELT_FLG, 'N') = 'N'
                    AND NVL(CALL_PORT_FLG, 'N') = 'Y'
                    AND     B.LOC_CD  =   A.POL_CD)
            IN (RGN_SHP_OPR_RHQ_CD1, RGN_SHP_OPR_RHQ_CD2, RGN_SHP_OPR_RHQ_CD3, RGN_SHP_OPR_RHQ_CD4, RGN_SHP_OPR_RHQ_CD5, RGN_SHP_OPR_RHQ_CD6)
            AND RGN_SHP_OPR_CD 	= @[rgn_shp_opr_cd]
        )
       )
#if (${auth_flg} == 'A') 
	AND	NVL(G.SPCL_CGO_AUTH_CD,'R') IN ('R','P')
#end
#if (${auth_flg} == 'P') 
	AND	G.SPCL_CGO_AUTH_CD 			= 'P'
#end
#if (${auth_flg} == 'R') 
	AND NVL(G.SPCL_CGO_AUTH_CD,'R') = 'R'
#end
#if (${auth_flg} == 'Y') 
	AND G.SPCL_CGO_AUTH_CD 			= 'Y'
#end
#if (${auth_flg} == 'N') 
	AND G.SPCL_CGO_AUTH_CD 			= 'N'
#end
#if (${auth_flg} == 'YN') 
	AND G.SPCL_CGO_AUTH_CD 			IN ('Y','N')
#end

#if (${apro_ref_no} != '') 
	AND G.APRO_REF_NO 				= @[apro_ref_no]
#end

ORDER BY TO_CHAR(A.VPS_ETA_DT,'YYYY-MM-DD HH24:MI'), 
         A.SLAN_CD, 
         A.VSL_CD ,
         A.SKD_VOY_NO, 
         A.SKD_DIR_CD, 
         A.CRR_CD, 
         A.POL_CD, 
         A.POD_CD, 
         A.BKG_NO, 
         A.DG_CNTR_SEQ, 
         A.CNTR_CGO_SEQ			]]></sql>
			<params>
				<param name="rgn_shp_opr_cd" type="12" value="" out="N"/>
				<param name="rqst_dt_range" type="12" value="" out="N"/>
				<param name="vps_eta_dt" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="imdg_un_no" type="12" value="" out="N"/>
				<param name="imdg_un_no_seq" type="12" value="" out="N"/>
				<param name="imdg_clss_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="booking_no" type="12" value="" out="N"/>
				<param name="shpr_nm" type="12" value="" out="N"/>
				<param name="apro_ref_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
