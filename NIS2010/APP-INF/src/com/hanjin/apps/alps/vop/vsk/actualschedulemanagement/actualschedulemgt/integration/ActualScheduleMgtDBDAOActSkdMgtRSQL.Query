<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ActualScheduleMgtDBDAOActSkdMgtRSQL">
			<desc><![CDATA[Actual Port Schedule 정보를 조회합니다.
------------------------------------------------------------------------------------------
2010.12.10 진마리아 [CHM-201007578-01] 최초 입력된 INP_DT, INP_USR_ID 컬럼을 추가하여 조회합니다. 
2010.12.28 선처리CSR 이석준 CRE_DT, UPD_DT를 해당 PORT 기준으로 변환하여 조회합니다.
2011.05.13 진마리아 [CHM-201110230-01] VSK-Actual SKD creation 화면 일부 수정 요청(EDI와 Departure Report 정보 구분)
2011.10.04 김민아 [CHM-201112983-01] Actual SKD Creation 및 Inquiry 화면 및 로직 변경. ATA,ATB,ATD 별 Remark 칼럼 추가
2012.08.28 진마리아 CHM-201219486-01 VSK_DEP_RPT 차단(FCM_DEP_RPT 대체) / ACT SKD과 VMS Data를 구별하여 alert
2012.10.24 진마리아 CHM-201220527-01 Departure/Noon Report 데이터를 FCM 데이터와 I/F하도록 변경 요청
2014.02.27 임예지 [CHM-201429074] - ATA, ATB, ATD 삭제 히스토리가 있을 경우 Departure Report의 ATA, ATB, ATD 값을 안보여 주도록 변경.
2014.09.25 강지혜	Actual 정보 조회시 최초에만 Departure Report정보로 
				PLT_LST_UNLD_DT, BFR_BRTH_ANK_DRP_DT,BFR_BRTH_ANK_OFF_DT,AFT_UNBRTH_ANK_DRP_DT,AFT_UNBRTH_ANK_OFF_DT
				값을 보여주고 Actual 정보 저장 후 Actual 정보로 보여준다.
				FLAG컬럼 : '' 에서 Actual 정보 저장이 있을경우 A로 없을 경우 R로 ]]></desc>
			<sql><![CDATA[
SELECT T1.VSL_CD
	, T1.SKD_VOY_NO
	, T1.SKD_DIR_CD
	, T1.VPS_PORT_CD
	, T1.CLPT_SEQ
	, T1.YD_CD 
	, T1.CLPT_IND_SEQ
	, T1.SLAN_CD
	, T2.PORT_SKD_STS_CD
	, TO_CHAR(T1.PF_ETA_DT	, 'YYYY-MM-DD HH24:MI') AS PF_ETA_DT
	, TO_CHAR(T1.PF_ETB_DT	, 'YYYY-MM-DD HH24:MI') AS PF_ETB_DT
	, TO_CHAR(T1.PF_ETD_DT	, 'YYYY-MM-DD HH24:MI') AS PF_ETD_DT
	, TO_CHAR(NVL(T2.LST_ETA_DT, T1.VPS_ETA_DT)	, 'YYYY-MM-DD HH24:MI') AS VPS_ETA_DT
	, TO_CHAR(NVL(T2.LST_ETB_DT, T1.VPS_ETB_DT)	, 'YYYY-MM-DD HH24:MI') AS VPS_ETB_DT
	, TO_CHAR(NVL(T2.LST_ETD_DT, T1.VPS_ETD_DT)	, 'YYYY-MM-DD HH24:MI') AS VPS_ETD_DT
	, T1.TURN_PORT_FLG
	, T1.TURN_PORT_IND_CD
	, T1.TURN_SKD_VOY_NO
	, T1.TURN_SKD_DIR_CD
	, T1.TURN_CLPT_IND_SEQ
	, CASE WHEN T2.ACT_ARR_DT IS NOT NULL THEN TO_CHAR(T2.ACT_ARR_DT, 'YYYY-MM-DD HH24:MI')
	       WHEN (SELECT COUNT(1)
	             FROM   VSK_ACT_PORT_SKD_HIS X
	             WHERE  X.VSL_CD       = T1.VSL_CD
	             AND    X.SKD_VOY_NO   = T1.SKD_VOY_NO
	             AND    X.SKD_DIR_CD   = T1.SKD_DIR_CD
	             AND    X.VPS_PORT_CD  = T1.VPS_PORT_CD
	             AND    X.CLPT_IND_SEQ = T1.CLPT_IND_SEQ) = 0 THEN TO_CHAR(T3.PLT_IN_DT, 'YYYY-MM-DD HH24:MI')
	  END  AS ACT_ARR_DT
	, CASE WHEN T2.ACT_BRTH_DT IS NOT NULL THEN TO_CHAR(T2.ACT_BRTH_DT, 'YYYY-MM-DD HH24:MI')
	       WHEN (SELECT COUNT(1)
	             FROM   VSK_ACT_PORT_SKD_HIS X
	             WHERE  X.VSL_CD       = T1.VSL_CD
	             AND    X.SKD_VOY_NO   = T1.SKD_VOY_NO
	             AND    X.SKD_DIR_CD   = T1.SKD_DIR_CD
	             AND    X.VPS_PORT_CD  = T1.VPS_PORT_CD
	             AND    X.CLPT_IND_SEQ = T1.CLPT_IND_SEQ) = 0 THEN TO_CHAR(T3.VPS_ETB_DT, 'YYYY-MM-DD HH24:MI')
	  END  AS ACT_BRTH_DT
	, CASE WHEN T2.ACT_DEP_DT IS NOT NULL THEN TO_CHAR(T2.ACT_DEP_DT, 'YYYY-MM-DD HH24:MI')
	       WHEN (SELECT COUNT(1)
	             FROM   VSK_ACT_PORT_SKD_HIS X
	             WHERE  X.VSL_CD       = T1.VSL_CD
	             AND    X.SKD_VOY_NO   = T1.SKD_VOY_NO
	             AND    X.SKD_DIR_CD   = T1.SKD_DIR_CD
	             AND    X.VPS_PORT_CD  = T1.VPS_PORT_CD
	             AND    X.CLPT_IND_SEQ = T1.CLPT_IND_SEQ) = 0 THEN TO_CHAR(T3.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI')
	  END  AS ACT_DEP_DT
--	, TO_CHAR(NVL(T2.ACT_ARR_DT	, T3.PLT_IN_DT	),	'YYYY-MM-DD HH24:MI') AS ACT_ARR_DT
--	, TO_CHAR(NVL(T2.ACT_BRTH_DT, T3.VPS_ETB_DT),	'YYYY-MM-DD HH24:MI') AS ACT_BRTH_DT
--	, TO_CHAR(NVL(T2.ACT_DEP_DT	, T3.VPS_ETD_DT	),	'YYYY-MM-DD HH24:MI') AS ACT_DEP_DT
	, TO_CHAR(T2.LST_ETA_DT	, 'YYYY-MM-DD HH24:MI') AS LST_ETA_DT
	, TO_CHAR(T2.LST_ETB_DT	, 'YYYY-MM-DD HH24:MI') AS LST_ETB_DT
	, TO_CHAR(T2.LST_ETD_DT	, 'YYYY-MM-DD HH24:MI') AS LST_ETD_DT
	, LTRIM(TO_CHAR(ROUND(T2.ACT_ARR_DT	- T1.VPS_ETA_DT, 1), '990.0')) AS DLAY_ARR_TM
	, LTRIM(TO_CHAR(ROUND(T2.ACT_BRTH_DT- T1.VPS_ETB_DT, 1), '990.0')) AS DLAY_BRTH_TM
	, LTRIM(TO_CHAR(ROUND(T2.ACT_DEP_DT	- T1.VPS_ETD_DT, 1), '990.0')) AS DLAY_DEP_TM
	, T2.VSL_ARR_DLAY_RSN_CD
	, T2.VSL_BRTH_DLAY_RSN_CD
	, T2.VSL_DEP_DLAY_RSN_CD
	, '' AS VSL_ARR_DLAY_RSN_NM
	, '' AS VSL_BRTH_DLAY_RSN_NM
	, '' AS VSL_DEP_DLAY_RSN_NM
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_FOIL_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_FOIL_WGT         ) , '', T2.ARR_FOIL_WGT          , '0', T2.ARR_FOIL_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_FOIL_WGT)         ) , T2.ARR_FOIL_WGT))          , '99,990.09'   )) AS ARR_FOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_LOW_SULP_FOIL_WGT,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_LOW_SULP_FOIL_WGT) , '', T2.ARR_LOW_SULP_FOIL_WGT , '0', T2.ARR_LOW_SULP_FOIL_WGT, VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_LOW_SULP_FOIL_WGT)) , T2.ARR_LOW_SULP_FOIL_WGT)) , '99,990.09'   )) AS ARR_LOW_SULP_FOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_DOIL_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_DOIL_WGT         ) , '', T2.ARR_DOIL_WGT          , '0', T2.ARR_DOIL_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_DOIL_WGT)         ) , T2.ARR_DOIL_WGT))          , '99,990.09'   )) AS ARR_DOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_LOW_SULP_DOIL_WGT,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_LOW_SULP_DOIL_WGT) , '', T2.ARR_LOW_SULP_DOIL_WGT , '0', T2.ARR_LOW_SULP_DOIL_WGT, VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_LOW_SULP_DOIL_WGT)) , T2.ARR_LOW_SULP_DOIL_WGT)) , '99,990.09'   )) AS ARR_LOW_SULP_DOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_FRSH_WTR_WGT     ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_FRSH_WTR_WGT     ) , '', T2.ARR_FRSH_WTR_WGT      , '0', T2.ARR_FRSH_WTR_WGT     , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_FRSH_WTR_WGT)     ) , T2.ARR_FRSH_WTR_WGT))      , '99,990.09'   )) AS ARR_FRSH_WTR_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_BLST_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_BLST_WGT         ) , '', T2.ARR_BLST_WGT          , '0', T2.ARR_BLST_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_BLST_WGT)         ) , T2.ARR_BLST_WGT))          , '99,990.09'   )) AS ARR_BLST_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_FWDDR_HGT        ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_FWDDR_HGT        ) , '', T2.ARR_FWDDR_HGT         , '0', T2.ARR_FWDDR_HGT        , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_FWDDR_HGT)        ) , T2.ARR_FWDDR_HGT))         , '90.09'       )) AS ARR_FWDDR_HGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_AFTDR_HGT        ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_AFTDR_HGT        ) , '', T2.ARR_AFTDR_HGT         , '0', T2.ARR_AFTDR_HGT        , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_AFTDR_HGT)        ) , T2.ARR_AFTDR_HGT))         , '90.09'       )) AS ARR_AFTDR_HGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.ARR_GM_HGT           ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_GM_HGT           ) , '', T2.ARR_GM_HGT            , '0', T2.ARR_GM_HGT           , VSK_REMOVE_NONE_NUMERIC_FNC(T3.ARR_GM_HGT)           ) , T2.ARR_GM_HGT))            , '90.09'       )) AS ARR_GM_HGT
	, LTRIM(TO_CHAR(T2.ARR_TUG_BOT_KNT                                                                                                                                                                          , '90'          )) AS ARR_TUG_BOT_KNT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.SPL_FOIL_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_FOIL_ACT_WGT          ), '', T2.SPL_FOIL_WGT          , '0', T2.SPL_FOIL_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_FOIL_ACT_WGT)          ), T2.SPL_FOIL_WGT))          , '99,990.09'   )) AS SPL_FOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.SPL_LOW_SULP_FOIL_WGT,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_LOW_SULP_FOIL_ACT_WGT ), '', T2.SPL_LOW_SULP_FOIL_WGT , '0', T2.SPL_LOW_SULP_FOIL_WGT, VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_LOW_SULP_FOIL_ACT_WGT) ), T2.SPL_LOW_SULP_FOIL_WGT)) , '99,990.09'   )) AS SPL_LOW_SULP_FOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.SPL_DOIL_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_DOIL_ACT_WGT          ), '', T2.SPL_DOIL_WGT          , '0', T2.SPL_DOIL_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_DOIL_ACT_WGT)          ), T2.SPL_DOIL_WGT))          , '99,990.09'   )) AS SPL_DOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.SPL_LOW_SULP_DOIL_WGT,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_LOW_SULP_DOIL_ACT_WGT ), '', T2.SPL_LOW_SULP_DOIL_WGT , '0', T2.SPL_LOW_SULP_DOIL_WGT, VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_LOW_SULP_DOIL_ACT_WGT) ), T2.SPL_LOW_SULP_DOIL_WGT)) , '99,990.09'   )) AS SPL_LOW_SULP_DOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.SPL_FRSH_WTR_WGT     ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_FRSH_WTR_ACT_WGT      ), '', T2.SPL_FRSH_WTR_WGT      , '0', T2.SPL_FRSH_WTR_WGT     , VSK_REMOVE_NONE_NUMERIC_FNC(T3.SPL_FRSH_WTR_ACT_WGT)      ), T2.SPL_FRSH_WTR_WGT))      , '99,990.09'   )) AS SPL_FRSH_WTR_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_LOW_SULP_FOIL_WGT,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_LOW_SULP_FOIL_WGT ), '', T2.DEP_LOW_SULP_FOIL_WGT , '0', T2.DEP_LOW_SULP_FOIL_WGT, VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_LOW_SULP_FOIL_WGT) ), T2.DEP_LOW_SULP_FOIL_WGT)) , '99,990.09'   )) AS DEP_LOW_SULP_FOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_FOIL_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_FOIL_WGT          ), '', T2.DEP_FOIL_WGT          , '0', T2.DEP_FOIL_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_FOIL_WGT)          ), T2.DEP_FOIL_WGT))          , '99,990.09'   )) AS DEP_FOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_LOW_SULP_DOIL_WGT,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_LOW_SULP_DOIL_WGT ), '', T2.DEP_LOW_SULP_DOIL_WGT , '0', T2.DEP_LOW_SULP_DOIL_WGT, VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_LOW_SULP_DOIL_WGT) ), T2.DEP_LOW_SULP_DOIL_WGT)) , '99,990.09'   )) AS DEP_LOW_SULP_DOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_DOIL_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_DOIL_WGT          ), '', T2.DEP_DOIL_WGT          , '0', T2.DEP_DOIL_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_DOIL_WGT)          ), T2.DEP_DOIL_WGT))          , '99,990.09'   )) AS DEP_DOIL_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_FRSH_WTR_WGT     ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_FRSH_WTR_WGT      ), '', T2.DEP_FRSH_WTR_WGT      , '0', T2.DEP_FRSH_WTR_WGT     , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_FRSH_WTR_WGT)      ), T2.DEP_FRSH_WTR_WGT))      , '99,990.09'   )) AS DEP_FRSH_WTR_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_BLST_WGT         ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_BLST_WGT          ), '', T2.DEP_BLST_WGT          , '0', T2.DEP_BLST_WGT         , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_BLST_WGT)          ), T2.DEP_BLST_WGT))          , '99,990.09'   )) AS DEP_BLST_WGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_FWDDR_HGT        ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_FWDDR_HGT         ), '', T2.DEP_FWDDR_HGT         , '0', T2.DEP_FWDDR_HGT        , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_FWDDR_HGT)         ), T2.DEP_FWDDR_HGT))         , '90.09'       )) AS DEP_FWDDR_HGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_AFTDR_HGT        ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_AFTDR_HGT         ), '', T2.DEP_AFTDR_HGT         , '0', T2.DEP_AFTDR_HGT        , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_AFTDR_HGT)         ), T2.DEP_AFTDR_HGT))         , '90.09'       )) AS DEP_AFTDR_HGT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.DEP_GM_HGT           ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_GM_HGT            ), '', T2.DEP_GM_HGT            , '0', T2.DEP_GM_HGT           , VSK_REMOVE_NONE_NUMERIC_FNC(T3.DEP_GM_HGT)            ), T2.DEP_GM_HGT))            , '90.09'       )) AS DEP_GM_HGT
	, LTRIM(TO_CHAR(T2.DEP_TUG_BOT_KNT                                                                                                                                                                          , '90'          )) AS DEP_TUG_BOT_KNT
	, LTRIM(TO_CHAR((DECODE(NVL(T2.TTL_SLG_WGT          ,0), 0, DECODE(VSK_REMOVE_NONE_NUMERIC_FNC(T3.TTL_SLG_WGT           ), '', T2.TTL_SLG_WGT           , '0', T2.TTL_SLG_WGT          , VSK_REMOVE_NONE_NUMERIC_FNC(T3.TTL_SLG_WGT)           ), T2.TTL_SLG_WGT))           , '99,990.09'   )) AS TTL_SLG_WGT /* 신규 추가 */
	, LTRIM(TO_CHAR(T2.TTL_GBG_QTY                                                                                                                                                                              , '99,990.09'   )) AS TTL_GBG_QTY /* 신규 추가 */

/* (Vessel Condition FLG) Actual 값이 있거나, Actual/Departure Report 둘 다 값이 없으면 Actual 을, Actual이 없으나 Dep 값이 있으면 Dep 을 가져온다. */
	, LTRIM(DECODE(NVL(T2.ARR_FOIL_WGT         ,0), 0, DECODE(T3.ARR_FOIL_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_FOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_LOW_SULP_FOIL_WGT,0), 0, DECODE(T3.ARR_LOW_SULP_FOIL_WGT , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_LOW_SULP_FOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_DOIL_WGT         ,0), 0, DECODE(T3.ARR_DOIL_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_DOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_LOW_SULP_DOIL_WGT,0), 0, DECODE(T3.ARR_LOW_SULP_DOIL_WGT , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_LOW_SULP_DOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_FRSH_WTR_WGT     ,0), 0, DECODE(T3.ARR_FRSH_WTR_WGT      , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_FRSH_WTR_WGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_BLST_WGT         ,0), 0, DECODE(T3.ARR_BLST_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_BLST_WGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_FWDDR_HGT        ,0), 0, DECODE(T3.ARR_FWDDR_HGT         , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_FWDDR_HGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_AFTDR_HGT        ,0), 0, DECODE(T3.ARR_AFTDR_HGT         , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_AFTDR_HGT_FLG
	, LTRIM(DECODE(NVL(T2.ARR_GM_HGT           ,0), 0, DECODE(T3.ARR_GM_HGT            , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS ARR_GM_HGT_FLG
	, 'Act' AS ARR_TUG_BOT_KNT_FLG
	, LTRIM(DECODE(NVL(T2.SPL_FOIL_WGT         ,0), 0, DECODE(T3.SPL_FOIL_ACT_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS SPL_FOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.SPL_LOW_SULP_FOIL_WGT,0), 0, DECODE(T3.SPL_LOW_SULP_FOIL_ACT_WGT , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS SPL_LOW_SULP_FOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.SPL_DOIL_WGT         ,0), 0, DECODE(T3.SPL_DOIL_ACT_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS SPL_DOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.SPL_LOW_SULP_DOIL_WGT,0), 0, DECODE(T3.SPL_LOW_SULP_DOIL_ACT_WGT , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS SPL_LOW_SULP_DOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.SPL_FRSH_WTR_WGT     ,0), 0, DECODE(T3.SPL_FRSH_WTR_ACT_WGT      , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS SPL_FRSH_WTR_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_LOW_SULP_FOIL_WGT,0), 0, DECODE(T3.DEP_LOW_SULP_FOIL_WGT , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_LOW_SULP_FOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_FOIL_WGT         ,0), 0, DECODE(T3.DEP_FOIL_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_FOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_LOW_SULP_DOIL_WGT,0), 0, DECODE(T3.DEP_LOW_SULP_DOIL_WGT , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_LOW_SULP_DOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_DOIL_WGT         ,0), 0, DECODE(T3.DEP_DOIL_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_DOIL_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_FRSH_WTR_WGT     ,0), 0, DECODE(T3.DEP_FRSH_WTR_WGT      , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_FRSH_WTR_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_BLST_WGT         ,0), 0, DECODE(T3.DEP_BLST_WGT          , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_BLST_WGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_FWDDR_HGT        ,0), 0, DECODE(T3.DEP_FWDDR_HGT         , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_FWDDR_HGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_AFTDR_HGT        ,0), 0, DECODE(T3.DEP_AFTDR_HGT         , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_AFTDR_HGT_FLG
	, LTRIM(DECODE(NVL(T2.DEP_GM_HGT           ,0), 0, DECODE(T3.DEP_GM_HGT            , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS DEP_GM_HGT_FLG
	, 'Act' AS DEP_TUG_BOT_KNT_FLG
	, LTRIM(DECODE(NVL(T2.TTL_SLG_WGT          ,0), 0, DECODE(T3.TTL_SLG_WGT           , '', 'Act', '0', 'Act', 'Dep') , 'Act')) AS TTL_SLG_WGT_FLG
	, 'Act' AS TTL_GBG_QTY_FLG
	/*최초조회 이후 Depart Report를 가지고있으나 Actual 정보를 입력했으면 Actual정보를 보여준다 */
	--, TO_CHAR(NVL(T2.PLT_LST_UNLD_DT	        , T3.PLT_OUT_DT      ), 'YYYY-MM-DD HH24:MI') AS PLT_LST_UNLD_DT
	--, TO_CHAR(NVL(T2.BFR_BRTH_ANK_DRP_DT	    , T3.BFR_BRTH_ANK_DRP_DT	), 'YYYY-MM-DD HH24:MI') AS BFR_BRTH_ANK_DRP_DT
	--, TO_CHAR(NVL(T2.BFR_BRTH_ANK_OFF_DT	    , T3.BFR_BRTH_ANK_OFF_DT	), 'YYYY-MM-DD HH24:MI') AS BFR_BRTH_ANK_OFF_DT
	--, TO_CHAR(NVL(T2.AFT_UNBRTH_ANK_DRP_DT	    , T3.AFT_UNBRTH_ANK_DRP_DT	), 'YYYY-MM-DD HH24:MI') AS AFT_UNBRTH_ANK_DRP_DT
	--, TO_CHAR(NVL(T2.AFT_UNBRTH_ANK_OFF_DT	    , T3.AFT_UNBRTH_ANK_OFF_DT  ), 'YYYY-MM-DD HH24:MI') AS AFT_UNBRTH_ANK_OFF_DT
	, TO_CHAR(NVL(T2.PLT_LST_UNLD_DT	        , DECODE( T2.ACT_ARR_DT , null , T3.PLT_OUT_DT ,null)       ), 'YYYY-MM-DD HH24:MI') AS PLT_LST_UNLD_DT
	, TO_CHAR(NVL(T2.BFR_BRTH_ANK_DRP_DT	    , DECODE( T2.ACT_ARR_DT , null , T3.BFR_BRTH_ANK_DRP_DT, null)	), 'YYYY-MM-DD HH24:MI') AS BFR_BRTH_ANK_DRP_DT
	, TO_CHAR(NVL(T2.BFR_BRTH_ANK_OFF_DT	    , DECODE( T2.ACT_ARR_DT , null , T3.BFR_BRTH_ANK_OFF_DT, null)	), 'YYYY-MM-DD HH24:MI') AS BFR_BRTH_ANK_OFF_DT
	, TO_CHAR(NVL(T2.AFT_UNBRTH_ANK_DRP_DT	    , DECODE( T2.ACT_ARR_DT , null , T3.AFT_UNBRTH_ANK_DRP_DT, null)	), 'YYYY-MM-DD HH24:MI') AS AFT_UNBRTH_ANK_DRP_DT
	, TO_CHAR(NVL(T2.AFT_UNBRTH_ANK_OFF_DT	    , DECODE( T2.ACT_ARR_DT , null , T3.AFT_UNBRTH_ANK_OFF_DT, null)	), 'YYYY-MM-DD HH24:MI') AS AFT_UNBRTH_ANK_OFF_DT
	, T2.DIFF_RMK
	, T2.ACT_ARR_RMK
	, T2.ACT_BRTH_RMK
	, T2.ACT_DEP_RMK
	, T2.CRE_USR_ID
--	, TO_CHAR(T2.CRE_DT, 'YYYY-MM-DD HH24:MI') AS CRE_DT
    , TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL', T2.CRE_DT, @[vps_port_cd]), 'YYYY-MM-DD HH24:MI') AS CRE_DT
	, T2.UPD_USR_ID
--	, TO_CHAR(T2.UPD_DT, 'YYYY-MM-DD HH24:MI') AS UPD_DT
    , TO_CHAR(GLOBALDATE_PKG.TIME_CONV_FNC('KRSEL', T2.UPD_DT, @[vps_port_cd]), 'YYYY-MM-DD HH24:MI') AS UPD_DT
	, (
            SELECT MAX(VPS_PORT_CD)
              FROM VSK_VSL_PORT_SKD T11
             WHERE VSL_CD = T1.VSL_CD
               AND SKD_VOY_NO = CASE WHEN T1.CLPT_SEQ = '1' THEN T1.TURN_SKD_VOY_NO
                                     ELSE T1.SKD_VOY_NO
                                END
               AND SKD_DIR_CD = CASE WHEN T1.CLPT_SEQ = '1' THEN T1.TURN_SKD_DIR_CD
                                     ELSE T1.SKD_DIR_CD
                                END
               AND CLPT_SEQ =      CASE WHEN T1.CLPT_SEQ = '1' 
										THEN (
											SELECT MAX(CLPT_SEQ) 
											FROM VSK_VSL_PORT_SKD 
											WHERE VSL_CD=T1.VSL_CD 
											AND SKD_VOY_NO = T1.TURN_SKD_VOY_NO 
											AND SKD_DIR_CD = T1.TURN_SKD_DIR_CD
											AND NVL(SKD_CNG_STS_CD, ' ') != 'S'
											AND TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))
										ELSE (
											SELECT MAX(CLPT_SEQ) 
											FROM VSK_VSL_PORT_SKD 
											WHERE VSL_CD=T1.VSL_CD 
											AND SKD_VOY_NO = T1.SKD_VOY_NO 
											AND SKD_DIR_CD = T1.SKD_DIR_CD 
											AND NVL(SKD_CNG_STS_CD, ' ') != 'S'
											AND CLPT_SEQ < T1.CLPT_SEQ
										)
										END
         ) AS PRE_PORT_CD
       , (
            SELECT MAX(TO_CHAR(T11.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI'))
              FROM VSK_VSL_PORT_SKD T11
             WHERE VSL_CD = T1.VSL_CD
               AND SKD_VOY_NO = CASE WHEN T1.CLPT_SEQ = '1' THEN T1.TURN_SKD_VOY_NO
                                     ELSE T1.SKD_VOY_NO
                                END
               AND SKD_DIR_CD = CASE WHEN T1.CLPT_SEQ = '1' THEN T1.TURN_SKD_DIR_CD
                                     ELSE T1.SKD_DIR_CD
                                END
               AND CLPT_SEQ =      CASE WHEN T1.CLPT_SEQ = '1' 
										THEN (
											SELECT MAX(CLPT_SEQ) 
											FROM VSK_VSL_PORT_SKD 
											WHERE VSL_CD=T1.VSL_CD 
											AND SKD_VOY_NO = T1.TURN_SKD_VOY_NO 
											AND SKD_DIR_CD = T1.TURN_SKD_DIR_CD
											AND NVL(SKD_CNG_STS_CD, ' ') != 'S'
											AND TURN_PORT_IND_CD NOT IN ('D', 'V', 'F'))
										ELSE (
											SELECT MAX(CLPT_SEQ) 
											FROM VSK_VSL_PORT_SKD 
											WHERE VSL_CD=T1.VSL_CD 
											AND SKD_VOY_NO = T1.SKD_VOY_NO 
											AND SKD_DIR_CD = T1.SKD_DIR_CD 
											AND NVL(SKD_CNG_STS_CD, ' ') != 'S'
											AND CLPT_SEQ < T1.CLPT_SEQ
										)
										END
         ) AS PRE_ETD_DT
       , (
            SELECT VPS_PORT_CD
              FROM VSK_VSL_PORT_SKD T11
             WHERE VSL_CD = T1.VSL_CD
               AND SKD_VOY_NO = T1.SKD_VOY_NO
               AND SKD_DIR_CD = T1.SKD_DIR_CD
			   AND CLPT_SEQ = (SELECT MIN(T21.CLPT_SEQ)
                                  FROM VSK_VSL_PORT_SKD T21
                                 WHERE VSL_CD = T1.VSL_CD
                                   AND SKD_VOY_NO = T1.SKD_VOY_NO
                                   AND SKD_DIR_CD = T1.SKD_DIR_CD
                                   AND CLPT_SEQ > TO_CHAR(TO_NUMBER(T1.CLPT_SEQ), '99')
                                   AND NVL(SKD_CNG_STS_CD, ' ') != 'S'
                              )
         ) AS NXT_PORT_CD
       , (
            SELECT TO_CHAR(T11.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI')
              FROM VSK_VSL_PORT_SKD T11
             WHERE VSL_CD = T1.VSL_CD
               AND SKD_VOY_NO = T1.SKD_VOY_NO
               AND SKD_DIR_CD = T1.SKD_DIR_CD
			   AND CLPT_SEQ = (SELECT MIN(T21.CLPT_SEQ)
                                  FROM VSK_VSL_PORT_SKD T21
                                 WHERE VSL_CD = T1.VSL_CD
                                   AND SKD_VOY_NO = T1.SKD_VOY_NO
                                   AND SKD_DIR_CD = T1.SKD_DIR_CD
                                   AND CLPT_SEQ > TO_CHAR(TO_NUMBER(T1.CLPT_SEQ), '99')
                                   AND NVL(SKD_CNG_STS_CD, ' ') != 'S'
                              )
         ) AS NXT_ETA_DT
       , (
            SELECT ACT_INP_FLG
              FROM VSK_VSL_PORT_SKD T11
             WHERE VSL_CD = T1.VSL_CD
               AND SKD_VOY_NO = T1.SKD_VOY_NO
               AND SKD_DIR_CD = T1.SKD_DIR_CD
			   AND CLPT_SEQ = (SELECT MIN(T21.CLPT_SEQ)
                                  FROM VSK_VSL_PORT_SKD T21
                                 WHERE VSL_CD = T1.VSL_CD
                                   AND SKD_VOY_NO = T1.SKD_VOY_NO
                                   AND SKD_DIR_CD = T1.SKD_DIR_CD
                                   AND CLPT_SEQ > TO_CHAR(TO_NUMBER(T1.CLPT_SEQ), '99'))
         ) AS NXT_ACT_INP_FLG
		/*ATA정보가 입력된 이후 시점은 Actual로 간주한다.*/
       ,(	SELECT DECODE( TT.ACT_ARR_DT , null , 'R' , 'A') 
			FROM	VSK_ACT_PORT_SKD  TT
			WHERE	TT.VSL_CD		    = T2.VSL_CD		    
			AND	TT.SKD_VOY_NO		= T2.SKD_VOY_NO		
			AND	TT.SKD_DIR_CD		= T2.SKD_DIR_CD		
			AND	TT.VPS_PORT_CD		= T2.VPS_PORT_CD	
			AND	TT.CLPT_IND_SEQ		= T2.CLPT_IND_SEQ	) AS FLAG
	   , T4.SKD_STS_CD

       , (
			SELECT TO_CHAR(ACT_ATA_INP_DT, 'YYYYMMDDHH24MISS') FROM (
				SELECT T1.*, ROW_NUMBER() OVER(ORDER BY CNG_SEQ DESC) RNUM
				FROM VSK_ACT_PORT_SKD_HIS T1
				WHERE 1=1
				AND VSL_CD=@[vsl_cd]
				AND SKD_VOY_NO=@[skd_voy_no]
				AND SKD_DIR_CD=@[skd_dir_cd]
				AND VPS_PORT_CD=@[vps_port_cd]
				AND CLPT_IND_SEQ=@[clpt_ind_seq]
				AND ACT_ATA_INP_DT IS NOT NULL
			)
			WHERE RNUM=1
	     ) AS ACT_ATA_INP_DT
       , (
			SELECT ACT_ATA_INP_USR_ID FROM (
				SELECT T1.*, ROW_NUMBER() OVER(ORDER BY CNG_SEQ DESC) RNUM
				FROM VSK_ACT_PORT_SKD_HIS T1
				WHERE 1=1
				AND VSL_CD=@[vsl_cd]
				AND SKD_VOY_NO=@[skd_voy_no]
				AND SKD_DIR_CD=@[skd_dir_cd]
				AND VPS_PORT_CD=@[vps_port_cd]
				AND CLPT_IND_SEQ=@[clpt_ind_seq]
				AND ACT_ATA_INP_USR_ID IS NOT NULL
			)
			WHERE RNUM=1
	     ) AS ACT_ATA_INP_USR_ID
       , (
			SELECT TO_CHAR(ACT_ATB_INP_DT, 'YYYYMMDDHH24MISS') FROM (
				SELECT T1.*, ROW_NUMBER() OVER(ORDER BY CNG_SEQ DESC) RNUM
				FROM VSK_ACT_PORT_SKD_HIS T1
				WHERE 1=1
				AND VSL_CD=@[vsl_cd]
				AND SKD_VOY_NO=@[skd_voy_no]
				AND SKD_DIR_CD=@[skd_dir_cd]
				AND VPS_PORT_CD=@[vps_port_cd]
				AND CLPT_IND_SEQ=@[clpt_ind_seq]
				AND ACT_ATB_INP_DT IS NOT NULL
			)
			WHERE RNUM=1
	     ) AS ACT_ATB_INP_DT
       , (
			SELECT ACT_ATB_INP_USR_ID FROM (
				SELECT T1.*, ROW_NUMBER() OVER(ORDER BY CNG_SEQ DESC) RNUM
				FROM VSK_ACT_PORT_SKD_HIS T1
				WHERE 1=1
				AND VSL_CD=@[vsl_cd]
				AND SKD_VOY_NO=@[skd_voy_no]
				AND SKD_DIR_CD=@[skd_dir_cd]
				AND VPS_PORT_CD=@[vps_port_cd]
				AND CLPT_IND_SEQ=@[clpt_ind_seq]
				AND ACT_ATB_INP_USR_ID IS NOT NULL
			)
			WHERE RNUM=1
	     ) AS ACT_ATB_INP_USR_ID
       , (
			SELECT TO_CHAR(ACT_ATD_INP_DT, 'YYYYMMDDHH24MISS') FROM (
				SELECT T1.*, ROW_NUMBER() OVER(ORDER BY CNG_SEQ DESC) RNUM
				FROM VSK_ACT_PORT_SKD_HIS T1
				WHERE 1=1
				AND VSL_CD=@[vsl_cd]
				AND SKD_VOY_NO=@[skd_voy_no]
				AND SKD_DIR_CD=@[skd_dir_cd]
				AND VPS_PORT_CD=@[vps_port_cd]
				AND CLPT_IND_SEQ=@[clpt_ind_seq]
				AND ACT_ATD_INP_DT IS NOT NULL
			)
			WHERE RNUM=1
	     ) AS ACT_ATD_INP_DT
       , (
			SELECT ACT_ATD_INP_USR_ID FROM (
				SELECT T1.*, ROW_NUMBER() OVER(ORDER BY CNG_SEQ DESC) RNUM
				FROM VSK_ACT_PORT_SKD_HIS T1
				WHERE 1=1
				AND VSL_CD=@[vsl_cd]
				AND SKD_VOY_NO=@[skd_voy_no]
				AND SKD_DIR_CD=@[skd_dir_cd]
				AND VPS_PORT_CD=@[vps_port_cd]
				AND CLPT_IND_SEQ=@[clpt_ind_seq]
				AND ACT_ATD_INP_USR_ID IS NOT NULL
			)
			WHERE RNUM=1
	     ) AS ACT_ATD_INP_USR_ID
       , CASE WHEN T2.VSL_CD IS NOT NULL THEN 'VSK'
              WHEN T3.VSL_CD IS NOT NULL THEN 'VMS'
              ELSE ''
         END AS ACT_SKD_SRC_SYS_CD
FROM VSK_VSL_PORT_SKD T1, VSK_ACT_PORT_SKD T2, FCM_DEP_RPT T3, VSK_VSL_SKD T4
WHERE	1 = 1
AND	T1.VSL_CD		    = @[vsl_cd]
AND	T1.SKD_VOY_NO		= @[skd_voy_no]
AND	T1.SKD_DIR_CD		= @[skd_dir_cd]
AND	T1.VPS_PORT_CD		= @[vps_port_cd]
AND	T1.CLPT_IND_SEQ		= @[clpt_ind_seq]
AND	T1.VSL_CD		    = T2.VSL_CD		    (+)
AND	T1.SKD_VOY_NO		= T2.SKD_VOY_NO		(+)
AND	T1.SKD_DIR_CD		= T2.SKD_DIR_CD		(+)
AND	T1.VPS_PORT_CD		= T2.VPS_PORT_CD	(+)
AND	T1.CLPT_IND_SEQ		= T2.CLPT_IND_SEQ	(+)
AND	T1.VSL_CD		    = T3.VSL_CD		    (+)
AND	T1.SKD_VOY_NO		= T3.SKD_VOY_NO		(+)
AND	T1.SKD_DIR_CD		= T3.SKD_DIR_CD		(+)
AND	T1.VPS_PORT_CD		= T3.DEP_PORT_CD	(+)
AND	T1.CLPT_IND_SEQ		= T3.CLPT_IND_SEQ	(+)
AND	T1.VSL_CD           = T4.VSL_CD
AND T1.SKD_VOY_NO       = T4.SKD_VOY_NO
AND T1.SKD_DIR_CD       = T4.SKD_DIR_CD			]]></sql>
			<params>
				<param name="vps_port_cd" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="clpt_ind_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
