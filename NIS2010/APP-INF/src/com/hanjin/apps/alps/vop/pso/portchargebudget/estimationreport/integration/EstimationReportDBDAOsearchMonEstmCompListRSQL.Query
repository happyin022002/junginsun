<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="EstimationReportDBDAOsearchMonEstmCompListRSQL">
			<desc><![CDATA[당월,전월,동월의 추정치를 조회한다.]]></desc>
			<sql><![CDATA[
SELECT RLANE_CD RLANE_CD,
       SUM(CNT_1) SUM_CNT1,
       SUM(CNT_PORT) SUM_CNT_PORT,
       SUM(ACT_PORT) SUM_ACT_PORT,
       SUM(AMT_1) SUM_AMT1,
       SUM(CNT_2) SUM_CNT2 ,
       SUM(AMT_2) SUM_AMT2,
       SUM(AMT_1+AMT_2) TOTAL_SUM_AMT
FROM (
SELECT RLANE_CD
       ,COUNT(*) AS CNT_1, SUM(DECODE(PPORT,0,PORT,PPORT)) CNT_PORT, 0 ACT_PORT, 0 AMT_1,
       0 CNT_2, 0 AMT_2
FROM
(SELECT DISTINCT E.RLANE_CD, E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD,
        (SELECT COUNT(*) FROM VSK_VSL_PORT_SKD 
        WHERE VSL_CD = E.VSL_CD AND SKD_VOY_NO = E.SKD_VOY_NO AND SKD_DIR_CD = E.SKD_DIR_CD
        AND NVL(SKD_CNG_STS_CD, 'X') <> 'S') PORT ,
        
         (SELECT COUNT(*) FROM VSK_VSL_PORT_SKD A, PSO_PORT_EXPN_DIV B
        WHERE 1=1
        AND A.VSL_CD = E.VSL_CD AND A.SKD_VOY_NO = E.SKD_VOY_NO AND A.SKD_DIR_CD = E.SKD_DIR_CD
        AND A.SLAN_CD  = B.SLAN_CD
        AND A.VPS_PORT_CD = B.LOC_CD
        AND E.RLANE_CD = B.RLANE_CD
        AND A.SKD_DIR_CD = B.SKD_DIR_CD
        AND NVL(A.SKD_CNG_STS_CD, 'X') <> 'S') PPORT 
        
FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
WHERE 1=1
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM')
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
    #else
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
    #end
#else
    AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
#end
AND E.VSL_CD = P.VSL_CD
AND E.SKD_VOY_NO = P.SKD_VOY_NO
AND E.SKD_DIR_CD = P.SKD_DIR_CD
AND E.REV_DIR_CD = P.REV_DIR_CD
AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
AND E.REV_YRMON = P.REV_YRMON
AND E.EXE_YRMON = P.EXE_YRMON
-- 결산 데이터 생성시에 추정 실행 년에 해당하는 정보를 모두 삭제 후 재 생성하기 때문에 실행월 이번달, 전달, 전년도로 검색할 필요가 없다. 2018-03-23
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO')
    #else
--AND P.EXE_YRMON IN ( SELECT  DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO')
    #end
#else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  REPLACE([rev_yrmon], '-', '')
--                       AND SYS_SRC_ID = 'PSO')
#end
AND P.SYS_SRC_ID = 'PSO'
AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD
AND P.ACCT_CD <> '511911'
)
GROUP  BY RLANE_CD

UNION ALL

SELECT RLANE_CD,0 AS CNT_1, 0 CNT_PORT, SUM(DECODE(PPORT,0,PORT,PPORT)) ACT_PORT, 0 AMT_1,0 CNT_2, 0 AMT_2
FROM
(SELECT DISTINCT E.RLANE_CD, E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD,
        (SELECT SUM(DECODE(NVL(TURN_SKD_VOY_NO, 1), 1, 1, 0.5)) 
        FROM VSK_VSL_PORT_SKD 
        WHERE VSL_CD = E.VSL_CD AND SKD_VOY_NO = E.SKD_VOY_NO AND SKD_DIR_CD = E.SKD_DIR_CD
        AND NVL(SKD_CNG_STS_CD, 'X') <> 'S') PORT,
        
      NVL ((SELECT  SUM(DECODE(NVL(TURN_SKD_VOY_NO, 1), 1, 1, 0.5)) 
         FROM VSK_VSL_PORT_SKD A, PSO_PORT_EXPN_DIV B
        WHERE 1=1
        AND A.VSL_CD = E.VSL_CD AND A.SKD_VOY_NO = E.SKD_VOY_NO AND A.SKD_DIR_CD = E.SKD_DIR_CD
        AND A.SLAN_CD  = B.SLAN_CD
        AND A.VPS_PORT_CD = B.LOC_CD
        AND E.RLANE_CD = B.RLANE_CD
        AND A.SKD_DIR_CD = B.SKD_DIR_CD
        AND NVL(A.SKD_CNG_STS_CD, 'X') <> 'S'),0) PPORT 
        
FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
WHERE 1=1
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
    #else
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
    #end
#else
    AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
#end

AND E.VSL_CD = P.VSL_CD
AND E.SKD_VOY_NO = P.SKD_VOY_NO
AND E.SKD_DIR_CD = P.SKD_DIR_CD
AND E.REV_DIR_CD = P.REV_DIR_CD
AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
AND E.REV_YRMON = P.REV_YRMON
AND E.EXE_YRMON = P.EXE_YRMON
-- 결산 데이터 생성시에 추정 실행 년에 해당하는 정보를 모두 삭제 후 재 생성하기 때문에 실행월 이번달, 전달, 전년도로 검색할 필요가 없다. 2018-03-23
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO' )
    #else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO' )
    #end
#else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  REPLACE([rev_yrmon], '-', '')
--                       AND SYS_SRC_ID = 'PSO' )
#end
AND P.SYS_SRC_ID = 'PSO'
AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD
AND P.ACCT_CD <> '511911'
)
GROUP  BY RLANE_CD

UNION ALL

SELECT RLANE_CD
       ,0 AS CNT_1, 0 PORT_CNT, 0 ACT_PORT, 0 AMT_1,
       COUNT(*) CNT_2, 0 AMT_2
FROM
(SELECT DISTINCT E.RLANE_CD, E.VSL_CD, E.SKD_VOY_NO, E.SKD_DIR_CD 
FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
WHERE 1=1 
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
    #else
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
    #end
#else
    AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
#end
AND E.VSL_CD = P.VSL_CD
AND E.SKD_VOY_NO = P.SKD_VOY_NO
AND E.SKD_DIR_CD = P.SKD_DIR_CD
AND E.REV_DIR_CD = P.REV_DIR_CD
AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
AND E.REV_YRMON = P.REV_YRMON
AND E.EXE_YRMON = P.EXE_YRMON
-- 결산 데이터 생성시에 추정 실행 년에 해당하는 정보를 모두 삭제 후 재 생성하기 때문에 실행월 이번달, 전달, 전년도로 검색할 필요가 없다. 2018-03-23
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO' )
    #else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO')
    #end
#else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  REPLACE([rev_yrmon], '-', '')
--                       AND SYS_SRC_ID = 'PSO' )
#end
AND P.SYS_SRC_ID = 'PSO'
AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD
AND P.ACCT_CD = '511911'
)
GROUP BY RLANE_CD

UNION ALL

SELECT X.RLANE_CD AS RLANE_CD
      , 0 CNT_1, 0 PORT_CNT, 0 ACT_PORT
      , SUM(DECODE(X.ACCT_CD, '511911', 0, NVL(ESTM_AMT, 0))) AS AMT1
      , 0 CNT_2
      , SUM(DECODE(X.ACCT_CD, '511911', NVL(ESTM_AMT, 0), 0)) AS AMT2
FROM  (
SELECT DISTINCT E.RLANE_CD, P.*
FROM GL_ESTM_REV_VVD E, GL_ESTM_IF_ERP P
WHERE 1=1 
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
    #else
    AND E.REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE(@[rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
    #end
#else
    AND E.REV_YRMON = REPLACE(@[rev_yrmon], '-', '')
#end
AND E.VSL_CD = P.VSL_CD
AND E.SKD_VOY_NO = P.SKD_VOY_NO
AND E.SKD_DIR_CD = P.SKD_DIR_CD
AND E.REV_DIR_CD = P.REV_DIR_CD
--AND E.ESTM_VVD_TP_CD = P.ESTM_VVD_TP_CD
AND E.REV_YRMON = P.REV_YRMON
AND E.EXE_YRMON = P.EXE_YRMON
-- 결산 데이터 생성시에 추정 실행 년에 해당하는 정보를 모두 삭제 후 재 생성하기 때문에 실행월 이번달, 전달, 전년도로 검색할 필요가 없다. 2018-03-23
#if (${chk_rdo} != '') 
    #if (${chk_rdo} == 'PM') 
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON = TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-1),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO' )
    #else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  TO_CHAR(ADD_MONTHS(TO_DATE([rev_yrmon], 'YYYY-MM'),-12),'YYYYMM')
--                       AND SYS_SRC_ID = 'PSO' )
    #end
#else
--AND P.EXE_YRMON IN ( SELECT DISTINCT EXE_YRMON  FROM GL_ESTM_IF_ERP 
--                     WHERE REV_YRMON =  REPLACE([rev_yrmon], '-', '')
--                       AND SYS_SRC_ID = 'PSO' )
#end
AND P.SYS_SRC_ID = 'PSO'
--AND E.ESTM_IOC_DIV_CD = P.ESTM_IOC_DIV_CD 
) X 
GROUP BY X.RLANE_CD)
GROUP  BY RLANE_CD
ORDER BY RLANE_CD			]]></sql>
			<params>
				<param name="rev_yrmon" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
