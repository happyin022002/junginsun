<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralInvoiceAuditDBDAOsearchApPayInvDtlDivRSQL">
			<desc><![CDATA[INVOICE TONNAGE비용 배분을 위함.( CN, IT, JP만 해당. HKG제외 ) ]]></desc>
			<sql><![CDATA[
(  SELECT T1.INV_RGST_NO
        , T1.INV_RGST_SEQ
        , T1.SO_ETT_TP_CD
        , T1.LGS_COST_CD
        , T1.ACCT_CD
        , T1.VSL_CD
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN 
          --  IN BOUND, VIRTURE PORT
                    T3.TURN_SKD_VOY_NO
               ELSE
                    T1.SKD_VOY_NO
               END                  AS SKD_VOY_NO
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
                    T3.TURN_SKD_DIR_CD
               ELSE
                    T1.SKD_DIR_CD
               END                  AS SKD_DIR_CD
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
                    (
                    SELECT  MAX(S.RLANE_DIR_CD)
                    FROM    AR_MST_REV_VVD S
                    WHERE   S.VSL_CD        = T1.VSL_CD
                    AND     S.SKD_VOY_NO    = T3.TURN_SKD_VOY_NO
                    AND     S.SKD_DIR_CD    = T3.TURN_SKD_DIR_CD
                    AND     S.RLANE_CD      = NVL(PSO_GET_REV_LANE_FNC(T1.VSL_CD, T3.TURN_SKD_VOY_NO, T3.TURN_SKD_DIR_CD, SUBSTR (T1.YD_CD, 1, 5)), S.RLANE_CD)
                    )
               ELSE
                    T1.REV_DIR_CD
               END  AS REV_DIR_CD
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
                    (
                    SELECT  S.VSL_SLAN_CD
                    FROM    VSK_VSL_SKD    S 
                    WHERE   S.VSL_CD         = T1.VSL_CD
                    AND     S.SKD_VOY_NO   = T3.TURN_SKD_VOY_NO
                    AND     S.SKD_DIR_CD    = T3.TURN_SKD_DIR_CD
                    )
               ELSE
                    T2.VSL_SLAN_CD
               END                  AS SLAN_CD
        , T3.VPS_PORT_CD            AS PORT_CD
        , T1.YD_CD
        , T1.INV_AMT
        , T1.SO_OFC_CTY_CD
        , T1.SO_SEQ
        , T1.INV_DESC
FROM    (
        SELECT  T1.INV_RGST_NO,
                SO_DTL_SEQ          AS INV_RGST_SEQ,
                '06'                AS SO_ETT_TP_CD,
                T2.LGS_COST_CD, DECODE(LENGTH(T2.LGS_COST_CD), 4, 110911, T3.ACCT_CD)  AS ACCT_CD,
                T2.VSL_CD,   T2.SKD_VOY_NO, T2.SKD_DIR_CD, T2.REV_DIR_CD,
                T1.YD_CD,
                LOCL_AMT            INV_AMT,
                T1.ISS_CTY_CD       SO_OFC_CTY_CD,
                T1.SO_SEQ,
                SUBSTR(T2.DIFF_RMK, 1, 200) AS INV_DESC,
                T2.DP_IO_BND_CD
        FROM    PSO_CHARGE T1, PSO_CHG_DTL T2, TES_LGS_COST T3
        WHERE   T1.ISS_CTY_CD   = T2.ISS_CTY_CD
        AND     T1.SO_SEQ       = T2.SO_SEQ
        AND     T2.LGS_COST_CD  = T3.LGS_COST_CD
      	AND     (T1.ISS_CTY_CD, T1.SO_SEQ) = (SELECT ISS_CTY_CD, SO_SEQ FROM PSO_CHARGE WHERE INV_NO = @[inv_no] AND VNDR_SEQ = @[vndr_seq] )
        ) T1, VSK_VSL_SKD T2, VSK_VSL_PORT_SKD T3
WHERE   T1.VSL_CD       = T2.VSL_CD
AND     T1.SKD_VOY_NO   = T2.SKD_VOY_NO
AND     T1.SKD_DIR_CD   = T2.SKD_DIR_CD
AND     T1.VSL_CD       = T3.VSL_CD
AND     T1.SKD_VOY_NO   = T3.SKD_VOY_NO
AND     T1.SKD_DIR_CD   = T3.SKD_DIR_CD
AND     T1.YD_CD        = T3.YD_CD
AND     T1.LGS_COST_CD <> 'PTDUTN'
AND     T3.CLPT_IND_SEQ =   (  SELECT  MIN(CLPT_IND_SEQ)
                                 FROM  VSK_VSL_PORT_SKD S
                                WHERE  S.VSL_CD      = T3.VSL_CD
                                  AND  S.SKD_VOY_NO  = T3.SKD_VOY_NO
                                  AND  S.SKD_DIR_CD  = T3.SKD_DIR_CD
                                  AND  S.YD_CD       = T3.YD_CD
                                  AND  NVL(S.SKD_CNG_STS_CD,' ') <> 'S' ) 
 
UNION ALL
SELECT  T1.INV_RGST_NO,
        SO_DTL_SEQ          AS INV_RGST_SEQ,
        '06'                AS SO_ETT_TP_CD,
        T2.LGS_COST_CD, DECODE(LENGTH(T2.LGS_COST_CD), 4, 110911, T3.ACCT_CD)  AS ACCT_CD,
        T2.VSL_CD,   T2.SKD_VOY_NO, T2.SKD_DIR_CD, T2.REV_DIR_CD, SUBSTR(RLANE_CD, 1, 3) AS SLAN_CD,
        SUBSTR(T1.YD_CD,1,5) PORT_CD, T1.YD_CD,
        LOCL_AMT            INV_AMT,
        T1.ISS_CTY_CD       SO_OFC_CTY_CD,
        T1.SO_SEQ,
        SUBSTR(T2.DIFF_RMK, 1, 200) AS INV_DESC 
FROM    PSO_CHARGE T1, PSO_CHG_DTL T2, TES_LGS_COST T3
WHERE   T1.ISS_CTY_CD   = T2.ISS_CTY_CD
AND     T1.SO_SEQ       = T2.SO_SEQ
AND     T2.LGS_COST_CD  = T3.LGS_COST_CD
AND     NOT EXISTS (SELECT 'A' FROM VSK_VSL_SKD WHERE VSL_CD = T2.VSL_CD AND SKD_VOY_NO = T2.SKD_VOY_NO AND SKD_DIR_CD = T2.SKD_DIR_CD)
AND    (T1.ISS_CTY_CD, T1.SO_SEQ) = (SELECT ISS_CTY_CD, SO_SEQ FROM PSO_CHARGE WHERE INV_NO = @[inv_no]   AND VNDR_SEQ = @[vndr_seq] )  
AND     T3.LGS_COST_CD <> 'PTDUTN'   )
UNION ALL
(
SELECT  INV_RGST_NO,  INV_RGST_SEQ,SO_ETT_TP_CD ,LGS_COST_CD ,ACCT_CD ,VSL_CD ,SKD_VOY_NO ,SKD_DIR_CD ,REV_DIR_CD ,SLAN_CD,PORT_CD,YD_CD,
        CASE WHEN G_ROW = 1 THEN NVL(INV_AMT2,0) + PSO_DIV_SUM_FNC(G_COUNT, INV_AMT2,G_INV_AMT)
             ELSE INV_AMT2
        END AS INV_AMT
       ,SO_OFC_CTY_CD,SO_SEQ, NULL AS INV_DESC  
 FROM (  SELECT COUNT(INV_RGST_SEQ) OVER (PARTITION BY SODTLSEQ) G_COUNT,
                SUM(INV_AMT) OVER (PARTITION BY SODTLSEQ)  G_INV_AMT, 
                INV_RGST_NO,  INV_RGST_SEQ,SO_ETT_TP_CD ,LGS_COST_CD ,ACCT_CD ,VSL_CD ,SKD_VOY_NO ,SKD_DIR_CD ,REV_DIR_CD ,SLAN_CD,PORT_CD,YD_CD,
                CASE WHEN CURR_CD IN ('JPY','KRW') THEN 
                  ROUND(SUM(INV_AMT) OVER (PARTITION BY SODTLSEQ) /COUNT(INV_RGST_SEQ) OVER (PARTITION BY SODTLSEQ)) 
                ELSE
                  ROUND(SUM(INV_AMT) OVER (PARTITION BY SODTLSEQ) /COUNT(INV_RGST_SEQ) OVER (PARTITION BY SODTLSEQ) ,2) 
                END  AS INV_AMT2,INV_AMT,
                SO_OFC_CTY_CD,SO_SEQ,'USERID' CRE_USR_ID ,SYSDATE CRE_DT,'USERID' UPD_USR_ID,SYSDATE UPD_DT,INV_DESC ,SODTLSEQ,
                RANK() OVER(PARTITION BY SODTLSEQ ORDER BY INV_RGST_SEQ ) G_ROW
          FROM (
               WITH VSK_VSL AS ( 
                   SELECT  Y.VSL_CD, Y.SKD_VOY_NO, Y.SKD_DIR_CD, Y.YD_CD  ,  SODTLSEQ
                     FROM (
            SELECT  A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, MIN(A.CLPT_SEQ) CLPTSEQ  , MIN(C.ORG_SO_DTL_SEQ) SODTLSEQ
              FROM  VSK_VSL_PORT_SKD A, PSO_CHARGE B, PSO_CHG_DTL C
             WHERE  VPS_ETA_DT BETWEEN C.COST_CALC_EFF_FM_DT AND C.COST_CALC_EFF_TO_DT
               AND  NVL(SKD_CNG_STS_CD,' ') <> 'S'
               AND  TURN_PORT_IND_CD IN ('Y','N')
               AND  A.VSL_CD           = C.VSL_CD
               AND  C.ISS_CTY_CD       = B.ISS_CTY_CD
               AND  C.SO_SEQ           = B.SO_SEQ
               AND  B.INV_NO           = @[inv_no]  
               AND  B.VNDR_SEQ         = @[vndr_seq]
               AND  C.LGS_COST_CD      = 'PTDUTN'
               AND  C.N3PTY_BIL_IF_FLG IN ('N','Y')
               AND  A.VSL_CD||A.SKD_VOY_NO||A.SKD_DIR_CD <> C.VSL_CD||C.SKD_VOY_NO||C.SKD_DIR_CD
               AND  VPS_ETA_DT >=  ( SELECT VPS_ETA_DT
                                       FROM VSK_VSL_PORT_SKD
                                      WHERE VSL_CD        =C.VSL_CD
                                        AND SKD_VOY_NO    =C.SKD_VOY_NO
                                        AND SKD_DIR_CD    =C.SKD_DIR_CD
                                        AND YD_CD         =B.YD_CD 
                                        AND CALL_YD_IND_SEQ = A.CALL_YD_IND_SEQ  )
               AND SUBSTR(VPS_PORT_CD,1,2) = SUBSTR(B.YD_CD,1,2)   
               AND VPS_PORT_CD <> 'CNHKG'  
               AND SUBSTR(VPS_PORT_CD,1,2)  IN ('CN','IT','JP') 
            GROUP BY A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD ) X, VSK_VSL_PORT_SKD Y 
      WHERE X.VSL_CD     = Y.VSL_CD 
        AND X.SKD_VOY_NO = Y.SKD_VOY_NO 
        AND X.SKD_DIR_CD = Y.SKD_DIR_CD 
        AND X.CLPTSEQ    = Y.CLPT_SEQ
            )
SELECT  NULL INV_RGST_NO
        ,   (  SELECT NVL(MAX(SO_DTL_SEQ) ,0 ) FROM PSO_CHARGE A, PSO_CHG_DTL B
               WHERE A.ISS_CTY_CD = B.ISS_CTY_CD
                   AND A.SO_SEQ   = B.SO_SEQ
                   AND A.INV_NO   =  @[inv_no]  AND  A.VNDR_SEQ = @[vndr_seq] ) + ROWNUM INV_RGST_SEQ
        , '06'  SO_ETT_TP_CD
        , 'PTDUTN'  LGS_COST_CD
        , 511751  ACCT_CD
        , VSL_CD
        , SKD_VOY_NO
        , SKD_DIR_CD
        , RLANE_DIR_CD  REV_DIR_CD
        , SLAN_CD
        , SUBSTR(@[yd_cd],1,5)     AS PORT_CD
        ,@[yd_cd]  YD_CD
        , 0 INV_AMT
        , NULL SO_OFC_CTY_CD
        , NULL SO_SEQ
        , NULL INV_DESC
        , SODTLSEQ
        , ( SELECT CURR_CD FROM PSO_CHARGE WHERE INV_NO = @[inv_no]  AND VNDR_SEQ = @[vndr_seq] )  CURR_CD
FROM   (
   SELECT    V.VSL_CD
             , V.SKD_VOY_NO
             , V.SKD_DIR_CD
             , V.TURN TURN
             , V.SLAN_CD
             , V.VPS_PORT_CD
             , V.RLANE_DIR_CD
             , OB_RTO
             , IB_RTO
             , V.RLANE_CD
             , REV_YRMON
             , V.SODTLSEQ
  FROM (

       SELECT  
               V.VSL_CD
             , V.SKD_VOY_NO
             , V.SKD_DIR_CD
             , V.TURN TURN
             , V.SLAN_CD
             , V.VPS_PORT_CD
             , V.RLANE_DIR_CD
             , D.SLAN_CD EXPN_SLAN
             , COUNT(V.SLAN_CD) OVER (PARTITION BY V.SLAN_CD) AS SLAN_CNT
             , DECODE (V.TURN, 'Y', 50, DECODE(OB_RTO, NULL, 100, 0, 0, DECODE(TURN_CNT, 0, 100, OB_RTO)) ) OB_RTO
             , DECODE (V.TURN, 'Y', 0, DECODE(IB_RTO, NULL, 0, 0, 0, DECODE(TURN_CNT, 0, 0, IB_RTO)) ) IB_RTO
             , V.RLANE_CD
             , REV_YRMON
             , V.SODTLSEQ
        FROM   PSO_PORT_EXPN_DIV D
             , (SELECT V1.VSL_CD
                     , V1.SKD_VOY_NO
                     , V1.SKD_DIR_CD
                     , V1.TURN_PORT_FLG TURN
                     , (SELECT COUNT(*) FROM VSK_VSL_PORT_SKD T1
                         WHERE T1.VSL_CD     = V1.VSL_CD
                           AND T1.SKD_VOY_NO = V1.SKD_VOY_NO
                           AND T1.SKD_DIR_CD = V1.SKD_DIR_CD
                           AND T1.TURN_PORT_IND_CD IN ('N', 'Y')
                           AND T1.TURN_SKD_DIR_CD IS NOT NULL) TURN_CNT
                     , V1.SLAN_CD
                     , V1.VPS_PORT_CD
                     , L.RLANE_DIR_CD
                     , V1.TURN_PORT_FLG
                     , L.RLANE_CD
                     , L.REV_YRMON
                     , VSK_VSL.SODTLSEQ
                FROM   VSK_VSL_PORT_SKD V1
                     , AR_MST_REV_VVD L
                     , VSK_VSL 
                WHERE  V1.VSL_CD     = L.VSL_CD
                  AND  V1.SKD_VOY_NO = L.SKD_VOY_NO
                  AND  V1.SKD_DIR_CD = L.SKD_DIR_CD
                  AND  V1.SLAN_CD    = L.SLAN_CD
                  AND  L.DELT_FLG    = 'N'
                  AND  V1.VSL_CD     = VSK_VSL.VSL_CD
                  AND  V1.SKD_VOY_NO = VSK_VSL.SKD_VOY_NO
                  AND  V1.SKD_DIR_CD = VSK_VSL.SKD_DIR_CD
                  AND  V1.YD_CD      = VSK_VSL.YD_CD 
                  AND  NVL (V1.SKD_CNG_STS_CD, ' ') <> 'S'
                  AND  V1.TURN_PORT_IND_CD IN ('N', 'Y')) V 
        WHERE  D.SLAN_CD(+)    = V.SLAN_CD
          AND  D.SKD_DIR_CD(+) = V.SKD_DIR_CD
          AND  D.LOC_CD(+)     = V.VPS_PORT_CD
          AND  D.RLANE_CD(+)   = V.RLANE_CD
          AND  D.REV_DIR_CD(+) = V.RLANE_DIR_CD
          ) V
       UNION ALL
SELECT V.VSL_CD
             , V.SKD_VOY_NO
             , V.SKD_DIR_CD
             , V.TURN_PORT_IND_CD TURN
             , V.SLAN_CD
             , V.VPS_PORT_CD
             , RLANE_DIR_CD
             , 0 OB_RTO
             , 50 IB_RTO
             , L.RLANE_CD
             , REV_YRMON
             , VSK_VSL.SODTLSEQ
        FROM   VSK_VSL_PORT_SKD V
             , AR_MST_REV_VVD L
             , VSK_VSL
        WHERE  V.VSL_CD     = L.VSL_CD
        AND    V.SKD_VOY_NO = L.SKD_VOY_NO
        AND    V.SKD_DIR_CD = L.SKD_DIR_CD
        AND    V.SLAN_CD    = L.SLAN_CD
        AND    L.DELT_FLG   = 'N'
        AND    V.VSL_CD     = VSK_VSL.VSL_CD
        AND    V.TURN_SKD_VOY_NO = VSK_VSL.SKD_VOY_NO
        AND    V.TURN_SKD_DIR_CD = VSK_VSL.SKD_DIR_CD
        AND    V.YD_CD           = VSK_VSL.YD_CD 
        AND    NVL (SKD_CNG_STS_CD, ' ') <> 'S'
        AND    (L.RLANE_CD = NVL ( (SELECT RLANE_CD
                                    FROM   VSK_VSL_PORT_SKD V
                                         , AR_FINC_DIR_CONV B
                                         , MDM_LOCATION L
                                    WHERE  V.VSL_CD = VSK_VSL.VSL_CD
                                    AND    V.TURN_SKD_VOY_NO = VSK_VSL.SKD_VOY_NO
                                    AND    V.TURN_SKD_DIR_CD =  VSK_VSL.SKD_DIR_CD
                                    AND    V.YD_CD = VSK_VSL.YD_CD 
                                    AND    V.VPS_PORT_CD = L.LOC_CD
                                    AND    V.SLAN_CD = B.SLAN_CD
                                    AND    V.SKD_DIR_CD = B.SLAN_DIR_CD
                                    AND    L.SCONTI_CD = B.SCONTI_CD
                                    AND    ROWNUM <= 1), L.RLANE_CD))
        AND    EXISTS ( SELECT 1
                        FROM   AR_MST_REV_VVD X
                        WHERE  X.VSL_CD = V.VSL_CD
                        AND    X.SKD_VOY_NO = V.SKD_VOY_NO
                        AND    X.SKD_DIR_CD = V.SKD_DIR_CD
                        AND    X.DELT_FLG   = 'N' 	   )
	     AND V.TURN_PORT_IND_CD in ('D', 'V', 'F')
)
UNION ALL
 SELECT T1.INV_RGST_NO,
        SO_DTL_SEQ          AS INV_RGST_SEQ,
        '06'                AS SO_ETT_TP_CD,
        T2.LGS_COST_CD, DECODE(LENGTH(T2.LGS_COST_CD), 4, 110911, T3.ACCT_CD)  AS ACCT_CD,
        T2.VSL_CD,   T2.SKD_VOY_NO, T2.SKD_DIR_CD, T2.REV_DIR_CD, SUBSTR(RLANE_CD, 1, 3) AS SLAN_CD,
        SUBSTR(T1.YD_CD,1,5) PORT_CD, T1.YD_CD,
        LOCL_AMT            INV_AMT,
        T1.ISS_CTY_CD       SO_OFC_CTY_CD,
        T1.SO_SEQ,
        SUBSTR(T2.DIFF_RMK, 1, 200) AS INV_DESC , 
        T2.ORG_SO_DTL_SEQ,
        T1.CURR_CD
   FROM PSO_CHARGE T1, PSO_CHG_DTL T2, TES_LGS_COST T3
  WHERE T1.ISS_CTY_CD   = T2.ISS_CTY_CD
    AND T1.SO_SEQ       = T2.SO_SEQ
    AND T2.LGS_COST_CD  = T3.LGS_COST_CD
    AND (T1.ISS_CTY_CD, T1.SO_SEQ) = (SELECT ISS_CTY_CD, SO_SEQ FROM PSO_CHARGE WHERE INV_NO = @[inv_no]  AND VNDR_SEQ = @[vndr_seq] )
    AND T2.LGS_COST_CD = 'PTDUTN'  ) X
  ORDER BY SODTLSEQ ASC, INV_RGST_SEQ DESC ) Y    
     )
 ORDER BY INV_RGST_SEQ			]]></sql>
			<params>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
