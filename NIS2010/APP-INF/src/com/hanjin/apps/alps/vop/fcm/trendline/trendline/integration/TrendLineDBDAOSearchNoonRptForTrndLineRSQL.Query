<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="TrendLineDBDAOSearchNoonRptForTrndLineRSQL">
			<desc><![CDATA[Trend Line 생성을 위한 정보를 조회한다.
=========================================================================
2012.02.14 진마리아 CHM-201216243-01 Departure Report의 Cargo Weight 정보 추가
2012.03.08 선반영 진마리아 Displacement 컬럼 추가
2012.07.02 이혜민   CHM-201218617-01  TREND 곡선 생성시 DATA관련 M/E 소모량을 FO값만 가져오던 것에서 TOTAL값을 가져올 수 있도록 수정.
2014.02.12 정운 CHM-201428644 Trend Line Manual Creation - Cargo 컬럼 수정
2014.05.19 SKY  CHM-201430214 Trend line 생성시 Noon Report 호출 로직 변경
- MN_FOIL_CSM_QTY(MAIN FUEL OIL CONSUMPTION QUANTITY )  값이 0이 아니거나, NULL이 아닌값에 대한  조회 로직건  제거]]></desc>
			<sql><![CDATA[
SELECT
T1.VSL_CD
,T1.SKD_VOY_NO
,T1.SKD_DIR_CD 
,T1.VSL_CD||T1.SKD_VOY_NO||T1.SKD_DIR_CD VVD
,(SELECT CNTR_DZN_CAPA FROM MDM_VSL_CNTR WHERE T1.VSL_CD=VSL_CD) VSL_CLSS_CD
,T1.VSL_SLAN_CD
,T1.NXT_PORT_CD
,T1.WND_SCL_NO
,T1.SEA_STE_NO
,TO_NUMBER(SUBSTR(SAIL_HRMNT, 1, 2))+(TO_NUMBER(SUBSTR(SAIL_HRMNT, 3, 2))/60) SAIL_HRMNT
,T1.NVGT_ML_DIST
,T1.ENG_ML_DIST
,T1.SAIL_AVG_SPD
,T1.SAIL_AVG_RPM_PWR
,T1.SLP_RT
,T1.LOD_IND_QTY
,TO_NUMBER(NVL(T1.MN_FOIL_CSM_QTY,0)) + TO_NUMBER(NVL(T1.MN_LOW_SULP_FOIL_CSM_QTY,0)) MN_FOIL_CSM_QTY 
,TO_NUMBER(NVL(T1.GNR_FOIL_CSM_QTY,0)) + TO_NUMBER(NVL(T1.GNR_LOW_SULP_FOIL_CSM_QTY,0)) GNR_FOIL_CSM_QTY
,TO_NUMBER(NVL(T1.BLR_FOIL_CSM_QTY,0)) + TO_NUMBER(NVL(T1.BLR_LOW_SULP_FOIL_CSM_QTY,0)) BLR_FOIL_CSM_QTY
,((TO_NUMBER(NVL(MN_FOIL_CSM_QTY,0)) + TO_NUMBER(NVL(MN_LOW_SULP_FOIL_CSM_QTY,0)))/(TO_NUMBER(SUBSTR(SAIL_HRMNT, 1, 2))+(TO_NUMBER(SUBSTR(SAIL_HRMNT, 3, 2))/60)))*24 DAY_MN_FOIL_CSM_QTY
,((TO_NUMBER(NVL(GNR_FOIL_CSM_QTY,0)) + TO_NUMBER(NVL(GNR_LOW_SULP_FOIL_CSM_QTY,0)))/(TO_NUMBER(SUBSTR(SAIL_HRMNT, 1, 2))+(TO_NUMBER(SUBSTR(SAIL_HRMNT, 3, 2))/60)))*24 DAY_GNR_FOIL_CSM_QTY
,((TO_NUMBER(NVL(BLR_FOIL_CSM_QTY,0)) + TO_NUMBER(NVL(BLR_LOW_SULP_FOIL_CSM_QTY,0)))/(TO_NUMBER(SUBSTR(SAIL_HRMNT, 1, 2))+(TO_NUMBER(SUBSTR(SAIL_HRMNT, 3, 2))/60)))*24 DAY_BLR_FOIL_CSM_QTY
,T1.MN_PWR
,NVL((SELECT M.MAX_SPD FROM MDM_VSL_CNTR M WHERE M.VSL_CD=T1.VSL_CD),0) MAX_SPD
, @[avg_slp_rt] AVG_SLP_RT
,((ENG_ML_DIST/
            (TO_NUMBER(SUBSTR(SAIL_HRMNT, 1, 2))+(TO_NUMBER(SUBSTR(SAIL_HRMNT, 3, 2))/60)) --HH24MI 형식을 HOUR로 변환
            )*(100-(TO_NUMBER(@[avg_slp_rt])+TO_NUMBER(@[avg_slp_rt])*TO_NUMBER(NVL(@[avg_slp_opt_rt],0))/100))
          )/100 CALC_SPD
,TO_NUMBER(@[avg_slp_rt])+TO_NUMBER(@[avg_slp_rt])*TO_NUMBER(NVL(@[avg_slp_opt_rt],0))/100 APLY_SLP_RT
,(SELECT DECODE(COUNT(TRND_LINE_XCLD_FLG),0,'N','Y')
    FROM FCM_TRND_LINE_RPT_MTCH
   WHERE 1=1
     AND VSL_CD = T1.VSL_CD
     AND SKD_VOY_NO = T1.SKD_VOY_NO
     AND SKD_DIR_CD = T1.SKD_DIR_CD
     AND NOON_RPT_DT = T1.NOON_RPT_DT
     AND TRND_LINE_XCLD_FLG='Y'
 ) TRND_LINE_XCLD_FLG
, TO_CHAR(NOON_RPT_DT,'YYYY-MM-DD HH24:MI') NOON_RPT_DT
, TO_NUMBER(MN_PWR)/68640*100 LOAD
, (SELECT 
          CASE 
                WHEN COUNT(*)  = 2  THEN MAX(TTL_CNTR_OBRD_TEU_EP)
                WHEN COUNT(*)  = 1  THEN  MAX(TTL_CNTR_OBRD_TEU)
                ELSE '0'--DECODE(COUNT(*), 1, MAX(TTL_CNTR_OBRD_TEU), 0)
                END TTL_CNTR_OBRD_TEU
     FROM (SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD, NXT_PORT_CD, TTL_CNTR_OBRD_TEU ,'0' AS TTL_CNTR_OBRD_TEU_EP
             FROM FCM_DEP_RPT      
            UNION ALL
           SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, B.VPS_PORT_CD AS NXT_PORT_CD,  TTL_CNTR_OBRD_TEU, TTL_CNTR_OBRD_TEU AS TTL_CNTR_OBRD_TEU_EP
             FROM FCM_DEP_RPT A, ( SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD, VPS_PORT_CD, NXT_PORT_CD
                                     FROM (SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.VPS_PORT_CD,
                                                  LAG(A.VPS_PORT_CD) OVER (PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD ORDER BY CLPT_SEQ) AS NXT_PORT_CD
                                             FROM VSK_VSL_PORT_SKD A)
                                    WHERE 1=1
                                      AND NXT_PORT_CD IN ('EGSUZ', 'PAPAC')) B
            WHERE 1=1
              AND A.VSL_CD      = B.VSL_CD
              AND A.SKD_VOY_NO  = B.SKD_VOY_NO
              AND A.SKD_DIR_CD  = B.SKD_DIR_CD
              AND A.NXT_PORT_CD = B.NXT_PORT_CD)
   WHERE  T1.VSL_CD=VSL_CD
   AND    T1.SKD_VOY_NO=SKD_VOY_NO
   AND    T1.SKD_DIR_CD=SKD_DIR_CD
   AND    T1.NXT_PORT_CD=NXT_PORT_CD) TTL_CNTR_OBRD_TEU  
, (SELECT     CASE 
                WHEN COUNT(*)  = 2  THEN MAX(DEP_CGO_WGT_EP)
                WHEN COUNT(*)  = 1  THEN  MAX(DEP_CGO_WGT)
                ELSE '0'
              END DEP_CGO_WGT  --DECODE(COUNT(*), 1, MAX(DEP_CGO_WGT), 0)
     FROM (SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD, NXT_PORT_CD, DEP_CGO_WGT ,'0' AS DEP_CGO_WGT_EP
             FROM FCM_DEP_RPT      
            UNION ALL
           SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, B.VPS_PORT_CD AS NXT_PORT_CD, DEP_CGO_WGT, DEP_CGO_WGT AS DEP_CGO_WGT_EP
             FROM FCM_DEP_RPT A, ( SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD, VPS_PORT_CD, NXT_PORT_CD
                                     FROM (SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.VPS_PORT_CD,
                                                  LAG(A.VPS_PORT_CD) OVER (PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD ORDER BY CLPT_SEQ) AS NXT_PORT_CD
                                             FROM VSK_VSL_PORT_SKD A)
                                    WHERE 1=1
                                      AND NXT_PORT_CD IN ('EGSUZ', 'PAPAC')) B
            WHERE 1=1
              AND A.VSL_CD      = B.VSL_CD
              AND A.SKD_VOY_NO  = B.SKD_VOY_NO
              AND A.SKD_DIR_CD  = B.SKD_DIR_CD
              AND A.NXT_PORT_CD = B.NXT_PORT_CD)
   WHERE  T1.VSL_CD=VSL_CD
   AND    T1.SKD_VOY_NO=SKD_VOY_NO
   AND    T1.SKD_DIR_CD=SKD_DIR_CD
   AND    T1.NXT_PORT_CD=NXT_PORT_CD) DEP_CGO_WGT 
, (SELECT  
         CASE 
                WHEN COUNT(*)  = 2  THEN MAX(DEP_DPL_WGT_EP)
                WHEN COUNT(*)  = 1  THEN MAX(DEP_DPL_WGT)
                ELSE '0'
              END DEP_DPL_WGT --DECODE(COUNT(*), 1, MAX(DEP_DPL_WGT), 0)
     FROM (
     
         SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD, NXT_PORT_CD, DEP_DPL_WGT ,'0' AS DEP_DPL_WGT_EP
             FROM FCM_DEP_RPT      
            UNION ALL
           SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, B.VPS_PORT_CD AS NXT_PORT_CD, DEP_DPL_WGT, DEP_DPL_WGT AS DEP_DPL_WGT_EP
             FROM FCM_DEP_RPT A, ( SELECT VSL_CD, SKD_VOY_NO, SKD_DIR_CD, VPS_PORT_CD, NXT_PORT_CD
                                     FROM (SELECT A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD, A.VPS_PORT_CD,
                                                  LAG(A.VPS_PORT_CD) OVER (PARTITION BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD ORDER BY CLPT_SEQ) AS NXT_PORT_CD
                                             FROM VSK_VSL_PORT_SKD A)
                                    WHERE 1=1
                                      AND NXT_PORT_CD IN ('EGSUZ', 'PAPAC')) B
            WHERE 1=1
              AND A.VSL_CD      = B.VSL_CD
              AND A.SKD_VOY_NO  = B.SKD_VOY_NO
              AND A.SKD_DIR_CD  = B.SKD_DIR_CD
              AND A.NXT_PORT_CD = B.NXT_PORT_CD) C
   WHERE  T1.VSL_CD=C.VSL_CD
   AND    T1.SKD_VOY_NO=C.SKD_VOY_NO
   AND    T1.SKD_DIR_CD=C.SKD_DIR_CD
   AND    T1.NXT_PORT_CD=C.NXT_PORT_CD) DEP_DPL_WGT   
, WND_DIR_CTNT
, OCN_CRNT_CTNT
, CRS_NO
, DECODE(MN_PWR,NULL,'X',0,'X','Y') LOAD_USE_FLG
FROM FCM_NOON_RPT T1
WHERE 1=1
#if(${vsl_slan_cd}!='' && ${vsl_slan_cd}!='A')
AND VSL_SLAN_CD=@[vsl_slan_cd]
#end
#if(${vsl_clss_cd}!='' && ${vsl_clss_cd}!='A')
AND VSL_CD IN (SELECT VSL_CD FROM MDM_VSL_CNTR WHERE CNTR_DZN_CAPA = @[vsl_clss_cd])
#end
#if(${vsl_clss_sub_cd}!='') 
AND VSL_CD IN (SELECT VSL_CD FROM FCM_VSL_CNTR_RGST WHERE VSL_CLSS_SUB_CD = @[vsl_clss_sub_cd])
#end
#if(${vsl_cd}!='' && ${vsl_cd}!='A')
AND VSL_CD=@[vsl_cd] 
#end
#if(${skd_dir_cd}!='' && ${skd_dir_cd}!='A')
AND SKD_DIR_CD=@[skd_dir_cd]
#end
#if(${trnd_line_fm_dt}!='' && ${trnd_line_to_dt}!='')
AND NOON_RPT_DT BETWEEN TO_DATE(@[trnd_line_fm_dt], 'YYYY-MM-DD') AND TO_DATE(@[trnd_line_to_dt], 'YYYY-MM-DD')+0.99999
#end
AND T1.VSL_CD IN (SELECT R.VSL_CD FROM FCM_VSL_CNTR_RGST R WHERE T1.VSL_CD = R.VSL_CD AND NVL(R.TRND_LINE_USE_FLG,' ')<>'N')
--AND T1.MN_FOIL_CSM_QTY != '0'
--AND T1.MN_FOIL_CSM_QTY IS NOT NULL
AND TO_CHAR(TO_NUMBER(SUBSTR(SAIL_HRMNT, 1, 2))+(TO_NUMBER(SUBSTR(SAIL_HRMNT, 3, 2))/60)) IN ('23','24','25')
AND ((SLP_RT > -16) AND (SLP_RT < 25))--SLP_RT IS NOT NULL 조건 포함
AND TO_NUMBER(NVL(WND_SCL_NO,0))<=7
AND TO_NUMBER(NVL(SEA_STE_NO,0))<=7
AND T1.ENG_ML_DIST <> '0'
ORDER BY VSL_CD, SKD_VOY_NO, SKD_DIR_CD, NOON_RPT_DT			]]></sql>
			<params>
				<param name="avg_slp_rt" type="12" value="" out="N"/>
				<param name="avg_slp_opt_rt" type="12" value="" out="N"/>
				<param name="vsl_slan_cd" type="12" value="" out="N"/>
				<param name="vsl_clss_cd" type="12" value="" out="N"/>
				<param name="vsl_clss_sub_cd" type="12" value="" out="N"/>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="trnd_line_fm_dt" type="12" value="" out="N"/>
				<param name="trnd_line_to_dt" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
