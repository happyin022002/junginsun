<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="VesselScheduleMgtDBDAOCstSkdBerthWdoRSQL">
			<desc><![CDATA[해당 Port의 Vessel Berth 정보를 조회합니다.
======================================================================
2011.04.20 Daily Berth Window 로직 변경
2015.11.03 Phase Out 된 Port 도 조회 되도록 수정]]></desc>
			<sql><![CDATA[
WITH PORT_SKD AS (
                        SELECT     T3.SLAN_CD
                                  , LAG (T5.VSL_SVC_TP_CD) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS PRE_SVC_TP_CD 
                                  , T5.VSL_SVC_TP_CD 
                                  , LEAD(T5.VSL_SVC_TP_CD) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_SVC_TP_CD
                                  , LAG (T3.VSL_CD       ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS PRE_VSL_CD  
                                  , LAG (T3.SKD_VOY_NO   ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS PRE_VOY_NO
                                  , LAG (T3.SKD_DIR_CD   ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS PRE_DIR_CD
                                  , LAG (T3.VPS_PORT_CD  ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS PRE_PORT_CD
                                  , LAG (T3.CLPT_SEQ     ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS PRE_CLPT_SEQ
                                  , LAG (T3.VPS_ETD_DT  ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)         AS PRE_VPS_ETD_DT
                                  , T3.VSL_CD
                                  , T3.SKD_VOY_NO
                                  , T3.SKD_DIR_CD
                                  , T4.VSL_SLAN_DIR_SEQ AS DIR_SEQ
                                  , T3.VPS_PORT_CD
                                  , T3.CLPT_IND_SEQ
                                  , T3.CLPT_SEQ
                                  , T3.VPS_ETA_DT
                                  , T3.VPS_ETB_DT
                                  , T3.VPS_ETD_DT
                              
                                  , LEAD(T3.VSL_CD       ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_VSL_CD
                                  , LEAD(T3.SKD_VOY_NO   ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_VOY_NO
                                  , LEAD(T3.SKD_DIR_CD   ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_DIR_CD
                                  , LEAD(T3.VPS_PORT_CD  ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_PORT_CD
                                  , LEAD(T3.CLPT_SEQ     ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_CLPT_SEQ
                                  , LEAD(T3.VPS_ETA_DT   ) OVER (PARTITION BY T5.VSL_SVC_TP_CD, T3.VSL_CD ORDER BY T3.VPS_ETB_DT, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.CLPT_SEQ)        AS NXT_VPS_ETA_DT
                        FROM        VSK_VSL_PORT_SKD T3
                                  , MDM_VSL_SVC_LANE_DIR T4
                                  , MDM_VSL_SVC_LANE T5
                        WHERE       1=1
                        AND         T3.SLAN_CD      = T4.VSL_SLAN_CD
                        AND         T3.SKD_DIR_CD   = T4.VSL_SLAN_DIR_CD
                        AND         T3.SLAN_CD      = T5.VSL_SLAN_CD
                        AND         T3.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')
                        AND         NVL(T3.SKD_CNG_STS_CD, ' ') <> 'S'
                        --AND         NVL(T3.SKD_CNG_STS_CD, ' ') <> 'O'
						AND			T3.VPS_ETA_DT BETWEEN	TO_DATE(@[fm_dt], 'YYYY-MM-DD') - 100	AND	TO_DATE(@[to_dt], 'YYYY-MM-DD') + 100
                        ORDER BY    T3.VSL_CD, T3.SKD_VOY_NO, T4.VSL_SLAN_DIR_SEQ, T3.SKD_DIR_CD, T3.CLPT_SEQ
)



SELECT
*
FROM (

SELECT  T1.SLAN_CD
        , M.PRE_VSL_CD || M.PRE_VOY_NO || M.PRE_DIR_CD AS PRE_VVD
        , M.PRE_PORT_CD
        , M.PRE_VPS_ETD_DT AS PRE_ETD_DT
        , T1.VSL_CD
        , T1.SKD_VOY_NO
        , T1.SKD_DIR_CD
		, T1.VSL_CD || T1.SKD_VOY_NO || T1.SKD_DIR_CD AS VVD
        , T1.VPS_PORT_CD
        , M.NXT_VSL_CD || M.NXT_VOY_NO || M.NXT_DIR_CD AS NXT_VVD
        , M.NXT_PORT_CD
        , M.NXT_VPS_ETA_DT AS NXT_ETA_DT
        , T1.CLPT_IND_SEQ
        , T1.CLPT_SEQ
        , T1.PORT_SKD_STS_CD
        , T1.YD_CD
		, (
			SELECT YD_NM FROM MDM_YARD
			 WHERE LOC_CD = T1.VPS_PORT_CD
			   AND YD_CD = T1.YD_CD
	     ) AS YD_NM
        , T1.CALL_YD_IND_SEQ
        , TO_CHAR(T1.PF_ETA_DT, 'YYYYMMDDHH24MI') AS PF_ETA_DT
        , TO_CHAR(T1.PF_ETB_DT, 'YYYYMMDDHH24MI') AS PF_ETB_DT
        , TO_CHAR(T1.PF_ETD_DT, 'YYYYMMDDHH24MI') AS PF_ETD_DT
        , TO_CHAR(T1.INIT_ETA_DT, 'YYYYMMDDHH24MI') AS INIT_ETA_DT
        , TO_CHAR(T1.INIT_ETB_DT, 'YYYYMMDDHH24MI') AS INIT_ETB_DT
        , TO_CHAR(T1.INIT_ETD_DT, 'YYYYMMDDHH24MI') AS INIT_ETD_DT
        , TO_CHAR(T1.VPS_ETA_DT, 'YYYYMMDDHH24MI') AS VPS_ETA_DT
        , TO_CHAR(T1.VPS_ETB_DT, 'YYYYMMDDHH24MI') AS VPS_ETB_DT
        , TO_CHAR(T1.VPS_ETD_DT, 'YYYYMMDDHH24MI') AS VPS_ETD_DT
        , T1.VSL_DLAY_RSN_CD
        , T1.VSL_DLAY_RSN_DESC
        , T1.VSL_DLAY_RSN_LOC_CD
        , T1.SHP_CALL_NO
        , T1.SHP_CALL_NO_UPD_USR_ID
        , T1.SHP_CALL_NO_UPD_DT
        , T1.TML_VSL_CD
        , T1.TML_VOY_NO
        , TO_CHAR(T1.FT_DT, 'YYYYMMDDHH24MI') AS FT_DT
		, NVL(TO_CHAR(T1.FT_DT, 'YYYYMMDDHH24MI'),  DECODE(SUBSTR(T1.VPS_PORT_CD, 1, 2), 'KR', TO_CHAR((T1.VPS_ETB_DT - 5), 'YYYYMMDDHH24MI'), NULL)) AS FREE_TM_DT
        , T1.PLISM_YD_CD
        , T1.PLISM_VSL_CD
        , T1.PLISM_VOY_NO
		, T1.SKD_CNG_STS_CD
        , T1.TURN_PORT_FLG
        , T1.TURN_PORT_IND_CD
        , T1.TURN_SKD_VOY_NO
        , T1.TURN_SKD_DIR_CD
        , T1.TURN_CLPT_IND_SEQ
        , T1.IB_CGO_QTY
        , T1.OB_CGO_QTY
		, NVL(T1.IB_CGO_QTY, 0) + NVL(T1.OB_CGO_QTY, 0) AS CGO_TTL
        , T1.VPS_RMK
        , RTRIM(REPLACE(T1.VPS_RMK, CHR(13)||CHR(10),' ')) AS WIN_RMK 	/* 화면 조회 용 */
        , T1.PHS_IO_RSN_CD
        , T1.PHS_IO_RMK
        , T1.SKD_BRTH_NO
        , T1.INIT_SKD_INP_FLG
        , T1.OFC_INP_FLG
        , T1.NOON_RPT_INP_FLG
        , T1.DEP_RPT_INP_FLG
        , T1.ACT_INP_FLG
        , T1.PRT_CHK_FLG
        , T1.CRE_USR_ID
        , TO_CHAR(T1.CRE_DT, 'YYYYMMDDHH24MISS') AS CRE_DT
        , T1.UPD_USR_ID
        , TO_CHAR(T1.UPD_DT, 'YYYYMMDDHH24MISS') AS UPD_DT
        , TO_CHAR(T1.UPD_DT, 'YYYYMMDDHH24MI') AS UPD_DT_TXT
        , T1.EDI_SND_KNT
        , T1.PORT_SKP_TP_CD
        , T1.PORT_SKP_RSN_CD
        , T1.PORT_SKP_RSN_OFFR_RMK
        , T1.TTL_DLAY_HRS
        , T1.TS_PORT_CD
        , T1.USD_FLG
        , NVL(T1.LNK_SPD, 0) AS LNK_SPD
		, NVL(T1.SEA_BUF_HRS, 0) AS SEA_BUF_HRS
		, NVL(T1.PORT_BUF_HRS, 0) AS PORT_BUF_HRS
		, NVL(T1.TZTM_HRS, 0) AS TZTM_HRS
		, NVL(T1.PORT_WRK_HRS, 0) AS ACT_WRK_HRS
		, NVL(T1.LNK_DIST, 0) AS LNK_DIST
		, NVL(T1.MNVR_OUT_HRS, 0) AS MNVR_OUT_HRS
		, NVL(T1.MNVR_IN_HRS, 0) AS MNVR_IN_HRS
		, T2.VSL_SVC_TP_CD
		, '' AS LANE_GRP
		, '' AS LANE_GRP_NM
		, '' AS USR_ID
		, '' AS FM_DT
		, '' AS TO_DT
		, '' AS EXT_MSG_FLG
		, '' AS USR_INFO
		, '' AS PORT_POS
		, '' AS HEADER_SEQ
		, '' AS DIFF_RMK
		, '' AS USR_NM
		, '' AS MPHN_NO
		, '' AS FAX_NO
		, '' AS USR_EML
		, (
			SELECT  UQ_VSL_ID_NO
			FROM    BKG_VSL_DCHG_YD
			WHERE   VSL_CD = T1.VSL_CD
			AND     SKD_VOY_NO = T1.SKD_VOY_NO
			AND     SKD_DIR_CD = T1.SKD_DIR_CD
			AND     PORT_CD = T1.VPS_PORT_CD
			AND     CLPT_IND_SEQ = T1.CLPT_IND_SEQ
			AND		ROWNUM = 1
		  ) AS UQ_VSL_ID_NO
	   	, (
			SELECT  'X'
			FROM    VSK_VSL_PORT_SKD
			WHERE   VSL_CD           = T1.VSL_CD
			AND     SKD_VOY_NO       = T1.SKD_VOY_NO
			AND     SKD_DIR_CD       = T1.SKD_DIR_CD
			AND     CLPT_SEQ         > T1.CLPT_SEQ
			AND     ACT_INP_FLG = 'Y'
			AND     ROWNUM = 1
	   	  ) AS BFR_ACT_FLG
        , DECODE(TO_CHAR(T1.PF_ETA_DT, 'D'), 1, 'SUN', 2, 'MON', 3, 'TUE', 4, 'WED', 5, 'THU', 6, 'FRI', 7, 'SAT')  AS PF_ETA_DY
        , DECODE(TO_CHAR(T1.PF_ETB_DT, 'D'), 1, 'SUN', 2, 'MON', 3, 'TUE', 4, 'WED', 5, 'THU', 6, 'FRI', 7, 'SAT')  AS PF_ETB_DY
        , DECODE(TO_CHAR(T1.PF_ETD_DT, 'D'), 1, 'SUN', 2, 'MON', 3, 'TUE', 4, 'WED', 5, 'THU', 6, 'FRI', 7, 'SAT')  AS PF_ETD_DY
        , (SELECT VSL_ENG_NM FROM MDM_VSL_CNTR WHERE VSL_CD = T1.VSL_CD) AS VSL_ENG_NM
		, COUNT(*) OVER() TOTAL_CNT
		, ROW_NUMBER() OVER(ORDER BY T1.SLAN_CD, T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD) RNUM
		, (SELECT SKD_CNG_STS_CD FROM VSK_VSL_PORT_SKD WHERE VSL_CD=T1.VSL_CD AND SKD_VOY_NO=T1.SKD_VOY_NO AND SKD_DIR_CD=T1.SKD_DIR_CD AND CLPT_SEQ ='1') AS FIRST_SKIP_FLG
		, (SELECT MAX(CLPT_SEQ) FROM VSK_VSL_PORT_SKD WHERE VSL_CD=T1.VSL_CD AND SKD_VOY_NO=T1.SKD_VOY_NO AND SKD_DIR_CD=T1.SKD_DIR_CD AND TURN_PORT_IND_CD NOT IN ('V', 'D', 'F')) AS MAX_SEQ
		, (SELECT SKD_CNG_STS_CD FROM VSK_VSL_PORT_SKD WHERE VSL_CD=T1.VSL_CD AND SKD_VOY_NO=T1.SKD_VOY_NO AND SKD_DIR_CD=T1.SKD_DIR_CD AND CLPT_SEQ 
		   = (SELECT MAX(CLPT_SEQ) FROM VSK_VSL_PORT_SKD WHERE VSL_CD=T1.VSL_CD AND SKD_VOY_NO=T1.SKD_VOY_NO AND SKD_DIR_CD=T1.SKD_DIR_CD AND TURN_PORT_IND_CD NOT IN ('V', 'D', 'F'))) AS LAST_SKIP_FLG
  FROM  VSK_VSL_PORT_SKD T1
		, (SELECT * FROM MDM_VSL_SVC_LANE WHERE DELT_FLG = 'N' AND VSL_TP_CD = 'C') T2
		, PORT_SKD M
         WHERE	1 = 1
           AND  (T1.SKD_CNG_STS_CD IS NULL OR T1.SKD_CNG_STS_CD != 'S')
           AND  T1.TURN_PORT_IND_CD NOT IN ('V', 'D', 'F')
           AND	T1.SLAN_CD          = T2.VSL_SLAN_CD
		   AND     M.VSL_CD        = T1.VSL_CD (+)
		   AND     M.SKD_VOY_NO    = T1.SKD_VOY_NO (+)
		   AND     M.SKD_DIR_CD    = T1.SKD_DIR_CD   (+)
		   AND     M.VPS_PORT_CD   = T1.VPS_PORT_CD (+)
		   AND     M.CLPT_IND_SEQ  = T1.CLPT_IND_SEQ
		   AND     M.CLPT_SEQ      = T1.CLPT_SEQ
        #if (${vps_port_cd} != '')
           AND	T1.VPS_PORT_CD = @[vps_port_cd]
        #end
        #if (${skd_dir_cd} != '' && ${skd_dir_cd} != 'ALL')
           AND	T1.SKD_DIR_CD = @[skd_dir_cd]
        #end
        #if (${yd_cd} != '') 
           AND	T1.YD_CD IN (
        	#foreach( $key IN ${yd_cd}) 
        		#if($velocityCount < $yd_cd.size())
          		'$key',
        		#else
        		'$key'
        		#end
        	#end
        		) 
        #end
        #if (${lane_grp} == 'L')
        	#if (${slan_cd} != '')
           AND	T1.SLAN_CD = @[slan_cd]
        	#end
        #elseif (${lane_grp} == 'G')
           AND	T1.SLAN_CD IN (
        						SELECT VSL_SLAN_CD 
        						FROM VSK_USR_LANE_GRP
        						WHERE USR_ID = @[usr_id]
        						AND LANE_GRP_NM = @[lane_grp_nm]
        					   )
        #end
           AND	T1.VPS_ETB_DT BETWEEN	TO_DATE(@[fm_dt], 'YYYY-MM-DD')	AND	TO_DATE(@[to_dt], 'YYYY-MM-DD') + 0.99999
        #if (${vsl_svc_tp_cd} == 'O')
           AND  T2.VSL_SVC_TP_CD 		= 'O'
        #elseif (${vsl_svc_tp_cd} == 'T') 
           AND  T2.VSL_SVC_TP_CD 		!= 'O'
        #end
        -- ORDER BY T1.SLAN_CD, T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD
        )
        WHERE 1=1
        AND RNUM BETWEEN (@[page_no]-1)*@[pagerows]+1 AND @[page_no]*@[pagerows]			]]></sql>
			<params>
				<param name="fm_dt" type="12" value="" out="N"/>
				<param name="to_dt" type="12" value="" out="N"/>
				<param name="vps_port_cd" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="usr_id" type="12" value="" out="N"/>
				<param name="lane_grp_nm" type="12" value="" out="N"/>
				<param name="page_no" type="12" value="" out="N"/>
				<param name="pagerows" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
