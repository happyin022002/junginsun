/*=========================================================
*Copyright(c) 2017 CyberLogitec
*@FileName : VesselScheduleMgtDBDAOSearchCanalTzListRSQL.java
*@FileTitle : 
*Open Issues :
*Change history :
*@LastModifyDate : 2017.01.23
*@LastModifier : 
*@LastVersion : 1.0
* 2017.01.23 
* 1.0 Creation
=========================================================*/
package com.hanjin.apps.alps.vop.vsk.scheduleplanningoperation.vesselschedulemgt.integration;

import java.util.HashMap;
import org.apache.log4j.Logger;
import com.hanjin.framework.support.db.ISQLTemplate;

/**
 *
 * @author 
 * @see DAO 참조
 * @since J2EE 1.6
 */

public class VesselScheduleMgtDBDAOSearchCanalTzListRSQL implements ISQLTemplate{

	private StringBuffer query = new StringBuffer();
	
	Logger log =Logger.getLogger(this.getClass());
	
	/** Parameters definition in params/param elements */
	private HashMap<String,String[]> params = null;
	
	/**
	  * <pre>
	  * Canal Surchange 조회
	  * 
	  * History
	  * 2012.10.24 CHM-201220527-01 진마리아 Departure/Noon Report 데이터를 FCM 데이터와 I/F하도록 변경 요청
	  * </pre>
	  */
	public VesselScheduleMgtDBDAOSearchCanalTzListRSQL(){
		setQuery();
		params = new HashMap<String,String[]>();
		String tmp = null;
		String[] arrTmp = null;
		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("end_date",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vndr_seq",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("port_cd",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("start_date",new String[]{arrTmp[0],arrTmp[1]});

		tmp = java.sql.Types.VARCHAR + ",N";
		arrTmp = tmp.split(",");
		if(arrTmp.length !=2){
			throw new IllegalArgumentException();
		}
		params.put("vsl_slan_cd",new String[]{arrTmp[0],arrTmp[1]});

		query.append("/*").append("\n"); 
		query.append("Path : com.hanjin.apps.alps.vop.vsk.scheduleplanningoperation.vesselschedulemgt.integration").append("\n"); 
		query.append("FileName : VesselScheduleMgtDBDAOSearchCanalTzListRSQL").append("\n"); 
		query.append("*/").append("\n"); 
	}
	
	public String getSQL(){
		return query.toString();
	}
	
	public HashMap<String,String[]> getParams() {
		return params;
	}

	/**
	 * Query 생성
	 */
	public void setQuery(){
		query.append("WITH TB_SRC1 AS (" ).append("\n"); 
		query.append("SELECT  BOUND " ).append("\n"); 
		query.append("		, SVC_SCP" ).append("\n"); 
		query.append("        , VVD" ).append("\n"); 
		query.append("        , VSL_CD" ).append("\n"); 
		query.append("        , SKD_VOY_NO " ).append("\n"); 
		query.append("        , SKD_DIR_CD" ).append("\n"); 
		query.append("        , VPS_PORT_CD" ).append("\n"); 
		query.append("        , VNDR_SEQ" ).append("\n"); 
		query.append("        , YD_CD" ).append("\n"); 
		query.append("        , CLPT_SEQ" ).append("\n"); 
		query.append("        , BAY_YD" ).append("\n"); 
		query.append("        , BAY_LOC" ).append("\n"); 
		query.append("        , BAY_CAL" ).append("\n"); 
		query.append("        , VSL_SLAN_CD" ).append("\n"); 
		query.append("        , VPS_ETA_DT" ).append("\n"); 
		query.append("        , VPS_ETB_DT" ).append("\n"); 
		query.append("        , VPS_ETD_DT" ).append("\n"); 
		query.append("        , DETAIL" ).append("\n"); 
		query.append("        , DECODE(SUBSTR(BKG_STS, 1, 1), 'Q', 'Booked', 'A', 'Booked', 'P', 'Booked', 'R', 'Ready') AS BKG_STS" ).append("\n"); 
		query.append("        , SUBSTR(BKG_STS, 2   )                                                                    AS BKG_CRE_DT" ).append("\n"); 
		query.append("        , SCG_LMT_ACT_RATIO" ).append("\n"); 
		query.append("        , SCG_LMT_ACT_SPD" ).append("\n"); 
		query.append("        , ''  AS LOAD_TEU" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        -- T0005 START." ).append("\n"); 
		query.append("        SELECT   T2.BOUND" ).append("\n"); 
		query.append("			   , T2.SVC_SCP" ).append("\n"); 
		query.append("               , T2.VSL_CD || T2.SKD_VOY_NO || T2.SKD_DIR_CD                              AS VVD" ).append("\n"); 
		query.append("               , T2.VSL_CD, T2.SKD_VOY_NO, T2.SKD_DIR_CD, T2.VPS_PORT_CD, T2.YD_CD, T2.CLPT_SEQ" ).append("\n"); 
		query.append("               , SUBSTR(BAY_VVD, 1, 5)                                                    AS BAY_LOC" ).append("\n"); 
		query.append("               , SUBSTR(BAY_VVD, 6, 1)                                                    AS BAY_CAL" ).append("\n"); 
		query.append("               , SUBSTR(BAY_VVD, 7, 7)                                                    AS BAY_YD" ).append("\n"); 
		query.append("               , T2.VSL_SLAN_CD, T2.VPS_ETA_DT, T2.VPS_ETB_DT, T2.VPS_ETD_DT, T2.VNDR_SEQ" ).append("\n"); 
		query.append("               , CASE" ).append("\n"); 
		query.append("                 WHEN (T2.CUR_NOON_FLG = 'Y' AND CUR_DEP_FLG = 'Y') AND (T2.VPS_PORT_CD = 'EGSUZ') THEN" ).append("\n"); 
		query.append("                    '0' /* 선박의 다음 포트가 EGSUZ이고 REPORT가 존재하는 경우(DETAIL을 조회가 가능한 상태)  */" ).append("\n"); 
		query.append("                 ELSE" ).append("\n"); 
		query.append("                    '1' /* DETAIL 조회 불가능 상태 */" ).append("\n"); 
		query.append("                 END                                                                        AS DETAIL" ).append("\n"); 
		query.append("               , (" ).append("\n"); 
		query.append("                 SELECT  NVL(S2.CNL_TZ_PROC_STS_CD, 'R') ||" ).append("\n"); 
		query.append("                         (" ).append("\n"); 
		query.append("                         SELECT   TO_CHAR(P.ISS_DT, 'YYYYMMDD')" ).append("\n"); 
		query.append("                         FROM     PSO_CHARGE P" ).append("\n"); 
		query.append("                         WHERE    P.ISS_CTY_CD  = S2.ISS_CTY_CD" ).append("\n"); 
		query.append("                         AND      P.SO_SEQ      = S2.SO_SEQ" ).append("\n"); 
		query.append("                         )" ).append("\n"); 
		query.append("                 FROM    PSO_TGT_VVD S1, PSO_CNL_TZ_FEE S2" ).append("\n"); 
		query.append("                 WHERE   1=1" ).append("\n"); 
		query.append("                 AND     T2.VSL_CD         = S1.VSL_CD" ).append("\n"); 
		query.append("                 AND     T2.SKD_VOY_NO     = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                 AND     T2.SKD_DIR_CD     = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                 AND     S1.PSO_BZTP_CD    = S2.PSO_BZTP_CD      (+)" ).append("\n"); 
		query.append("                 AND     S1.VSL_CD         = S2.VSL_CD           (+)" ).append("\n"); 
		query.append("                 AND     S1.SKD_VOY_NO     = S2.SKD_VOY_NO       (+)" ).append("\n"); 
		query.append("                 AND     S1.SKD_DIR_CD     = S2.SKD_DIR_CD       (+)" ).append("\n"); 
		query.append("                 AND     S1.PSO_BZTP_CD    = '5'" ).append("\n"); 
		query.append("                 AND     'E'               = S2.CNL_TZ_BZTP_CD   (+)" ).append("\n"); 
		query.append("                 AND     @[port_cd]||'T1'  = S2.YD_CD            (+)" ).append("\n"); 
		query.append("                 )                                                                       AS BKG_STS" ).append("\n"); 
		query.append("               , CASE" ).append("\n"); 
		query.append("                 WHEN T2.VPS_PORT_CD = 'PAPAC' THEN" ).append("\n"); 
		query.append("                      NULL" ).append("\n"); 
		query.append("                 ELSE (" ).append("\n"); 
		query.append("                      NVL((" ).append("\n"); 
		query.append("                          SELECT  LMT_TM_SCG_RTO" ).append("\n"); 
		query.append("                          FROM    VSK_PORT_CNL_PASS_COND S" ).append("\n"); 
		query.append("                          WHERE   SVC_SCP_BND_CD     = T2.SVC_SCP_BND_CD" ).append("\n"); 
		query.append("                          AND     LOC_CD             = T2.VPS_PORT_CD" ).append("\n"); 
		query.append("                          AND     CNL_TZ_SEQ_CD      =" ).append("\n"); 
		query.append("                                  ( /* 해당 선박으로 INVOICE가 청구된 EGSUZ CANAL NET TON를 조회한다. */" ).append("\n"); 
		query.append("                                  SELECT  CASE" ).append("\n"); 
		query.append("                                          WHEN TO_NUMBER(NVL(SUBSTR(MAX(TO_CHAR(S1.RQST_DT, 'YYYYMMDDHH24MI') || S1.SUZ_NET_TONG_WGT ), 13), '0')) >= 70000 THEN" ).append("\n"); 
		query.append("                                               '1'  /* EGSUZ CANAL NET TON 이 70000  보다 클 경우 : FIRST COMBO를 이용함 */" ).append("\n"); 
		query.append("                                          ELSE" ).append("\n"); 
		query.append("                                               '2'  /* EGSUZ CANAL NET TON 이 70000  보다 작을 경우 : SECOND COMBO를 이용함 */" ).append("\n"); 
		query.append("                                          END" ).append("\n"); 
		query.append("                                  FROM    PSO_CNL_TZ_FEE S1" ).append("\n"); 
		query.append("                                  WHERE   S1.PSO_BZTP_CD		= '5' /* Canal Transit Business    */" ).append("\n"); 
		query.append("                                  AND     S1.CNL_TZ_BZTP_CD	= 'I' /* Inputted invoice at Canal Agency */" ).append("\n"); 
		query.append("                                  AND     S1.VSL_CD			= T2.VSL_CD" ).append("\n"); 
		query.append("                                  AND     S1.SKD_DIR_CD		= T2.SKD_DIR_CD" ).append("\n"); 
		query.append("                                  AND     S1.YD_CD			= T2.YD_CD)" ).append("\n"); 
		query.append("                                  AND     TO_CHAR(T2.VPS_ETA_DT, 'HH24MI')	BETWEEN SCG_FM_LMT_HRMNT" ).append("\n"); 
		query.append("                                                                            AND     SCG_TO_LMT_HRMNT" ).append("\n"); 
		query.append("                                  )," ).append("\n"); 
		query.append("                           0)) /* NULL일 경우 SURCHARGE는 0 % 이다 */" ).append("\n"); 
		query.append("                 END                                                                      AS SCG_LMT_ACT_RATIO" ).append("\n"); 
		query.append("               , CASE" ).append("\n"); 
		query.append("                 WHEN T2.VPS_PORT_CD = 'PAPAC' THEN" ).append("\n"); 
		query.append("                      NULL" ).append("\n"); 
		query.append("                 ELSE (" ).append("\n"); 
		query.append("                      ROUND(" ).append("\n"); 
		query.append("                           CASE" ).append("\n"); 
		query.append("                           WHEN CUR_NOON_FLG = 'Y' THEN" ).append("\n"); 
		query.append("                                /* NOON REPORT가 있는 경우 NOON REPORT 의 ETA SPEED 사용 */" ).append("\n"); 
		query.append("                                (" ).append("\n"); 
		query.append("                                SELECT  RMN_AVG_SPD" ).append("\n"); 
		query.append("                                FROM    FCM_NOON_RPT S" ).append("\n"); 
		query.append("                                WHERE   1=1" ).append("\n"); 
		query.append("                                AND     T2.VSL_CD         = S.VSL_CD" ).append("\n"); 
		query.append("                                AND     T2.SKD_VOY_NO     = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND     T2.SKD_DIR_CD     = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND     T2.NOON_RPT_DT    = S.NOON_RPT_DT" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                           WHEN CUR_DEP_FLG = 'Y' THEN" ).append("\n"); 
		query.append("                                /* NOON REPORTS는 없고, DEPARTURE REPORT가 있는 경우 DEPARTURE REPORT 의 ETA SPEED 사용 */" ).append("\n"); 
		query.append("                                (" ).append("\n"); 
		query.append("                                SELECT  TO_NUMBER(VSK_REMOVE_NONE_NUMERIC_FNC(RMN_AVG_SPD))" ).append("\n"); 
		query.append("                                FROM    FCM_DEP_RPT S" ).append("\n"); 
		query.append("                                WHERE   1=1" ).append("\n"); 
		query.append("                                AND     T2.VSL_CD         = S.VSL_CD" ).append("\n"); 
		query.append("                                AND     T2.SKD_VOY_NO     = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                                AND     T2.SKD_DIR_CD     = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                                AND     T2.VPS_PORT_CD    = S.DEP_PORT_CD" ).append("\n"); 
		query.append("                                AND     T2.CLPT_IND_SEQ   = S.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                )" ).append("\n"); 
		query.append("                           WHEN CUR_NOON_FLG||CUR_DEP_FLG = 'NN' THEN" ).append("\n"); 
		query.append("                                /* 4. NOON & DEPARTURE REPORT가 전혀 입력되지 않은 경우.  */" ).append("\n"); 
		query.append("                                /* 4. 또는 아직 LAST PORT에도 도착하지 않은 경우...기타등등. */" ).append("\n"); 
		query.append("                                TO_NUMBER(DECODE(T2.VPS_ETA_DT - PRE_PORT_ETD_DT, 0, NULL," ).append("\n"); 
		query.append("                                      NVL((" ).append("\n"); 
		query.append("                                           SELECT  STND_DIST" ).append("\n"); 
		query.append("                                           FROM    VSK_PORT_DIST" ).append("\n"); 
		query.append("                                           WHERE   FM_LOC_CD = T2.PRE_PORT" ).append("\n"); 
		query.append("                                           AND     TO_LOC_CD = T2.VPS_PORT_CD)," ).append("\n"); 
		query.append("                                           (NVL(T2.PRE_LNK_DIST, 0))" ).append("\n"); 
		query.append("                                           ) / (( T2.VPS_ETA_DT - PRE_PORT_ETD_DT) * 24 )" ).append("\n"); 
		query.append("                                  ))" ).append("\n"); 
		query.append("                           END" ).append("\n"); 
		query.append("                           , 1))" ).append("\n"); 
		query.append("                 END                                                                      AS SCG_LMT_ACT_SPD" ).append("\n"); 
		query.append("               , '' AS LOAD_TEU" ).append("\n"); 
		query.append("        FROM   (" ).append("\n"); 
		query.append("               -- T0004 START." ).append("\n"); 
		query.append("               SELECT  T1.*" ).append("\n"); 
		query.append("                       , NVL((  " ).append("\n"); 
		query.append("                             SELECT 'Y'" ).append("\n"); 
		query.append("                             FROM    FCM_DEP_RPT S1, VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("                             WHERE   1 = 1" ).append("\n"); 
		query.append("                             AND     T1.VSL_CD       = S1.VSL_CD" ).append("\n"); 
		query.append("                             AND     T1.SKD_VOY_NO   = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                             AND     T1.SKD_DIR_CD   = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                             AND     T1.VPS_PORT_CD  = S1.NXT_PORT_CD" ).append("\n"); 
		query.append("                             AND     S1.VSL_CD       = S2.VSL_CD" ).append("\n"); 
		query.append("                             AND     S1.SKD_VOY_NO   = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                             AND     S1.SKD_DIR_CD   = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                             AND     S1.DEP_PORT_CD  = S2.VPS_PORT_CD" ).append("\n"); 
		query.append("                             AND     S1.CLPT_IND_SEQ = S2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                             AND     S2.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')" ).append("\n"); 
		query.append("                             AND     ROWNUM          = 1" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                             , 'N')                                              AS CUR_DEP_FLG" ).append("\n"); 
		query.append("                       , (" ).append("\n"); 
		query.append("                          SELECT  S1.VPS_ETD_DT" ).append("\n"); 
		query.append("                          FROM    FCM_DEP_RPT S1, VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("                          WHERE   1 = 1" ).append("\n"); 
		query.append("                          AND     T1.VSL_CD       = S1.VSL_CD" ).append("\n"); 
		query.append("                          AND     T1.SKD_VOY_NO   = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND     T1.SKD_DIR_CD   = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND     T1.VPS_PORT_CD  = S1.NXT_PORT_CD" ).append("\n"); 
		query.append("                          AND     S1.VSL_CD       = S2.VSL_CD" ).append("\n"); 
		query.append("                          AND     S1.SKD_VOY_NO   = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                          AND     S1.SKD_DIR_CD   = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                          AND     S1.DEP_PORT_CD  = S2.VPS_PORT_CD" ).append("\n"); 
		query.append("                          AND     S1.CLPT_IND_SEQ = S2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                          AND     S2.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')" ).append("\n"); 
		query.append("                          AND     ROWNUM          = 1" ).append("\n"); 
		query.append("                          )                                                      AS ACT_DEP_DT" ).append("\n"); 
		query.append("                       , NVL((" ).append("\n"); 
		query.append("                             SELECT  'Y'" ).append("\n"); 
		query.append("                             FROM    FCM_NOON_RPT S" ).append("\n"); 
		query.append("                             WHERE   1 = 1" ).append("\n"); 
		query.append("                             AND     T1.VSL_CD       = S.VSL_CD" ).append("\n"); 
		query.append("                             AND     T1.SKD_VOY_NO   = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                             AND     T1.SKD_DIR_CD   = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                             AND     T1.VPS_PORT_CD  = S.NXT_PORT_CD" ).append("\n"); 
		query.append("                             AND     ROWNUM          = 1" ).append("\n"); 
		query.append("                             )" ).append("\n"); 
		query.append("                             , 'N') AS CUR_NOON_FLG" ).append("\n"); 
		query.append("                       , (" ).append("\n"); 
		query.append("                         SELECT  /*+ INDEX_DESC (S XPKVSK_NOON_RPT) */" ).append("\n"); 
		query.append("                                 S.NOON_RPT_DT" ).append("\n"); 
		query.append("                         FROM    FCM_NOON_RPT S" ).append("\n"); 
		query.append("                         WHERE   1 = 1" ).append("\n"); 
		query.append("                         AND     T1.VSL_CD        = S.VSL_CD" ).append("\n"); 
		query.append("                         AND     T1.SKD_VOY_NO    = S.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND     T1.SKD_DIR_CD    = S.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND     T1.VPS_PORT_CD   = S.NXT_PORT_CD" ).append("\n"); 
		query.append("                         AND     ROWNUM           = 1" ).append("\n"); 
		query.append("                         )                                                       AS NOON_RPT_DT" ).append("\n"); 
		query.append("                       , (" ).append("\n"); 
		query.append("                         SELECT /*+ INDEX_DESC (S1 XAK12VSK_VSL_PORT_SKD) */" ).append("\n"); 
		query.append("                                S1.VPS_PORT_CD || S1.CLPT_IND_SEQ || S1.YD_CD" ).append("\n"); 
		query.append("                         FROM   VSK_VSL_PORT_SKD S1" ).append("\n"); 
		query.append("                         WHERE  S1.VSL_CD       = T1.VSL_CD" ).append("\n"); 
		query.append("                         AND    S1.SKD_VOY_NO   = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                         AND    S1.SKD_DIR_CD	= T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                         AND    S1.VPS_ETD_DT  <= T1.VPS_ETD_DT" ).append("\n"); 
		query.append("                         AND    T1.VPS_PORT_CD  = @[port_cd]" ).append("\n"); 
		query.append("                         AND    EXISTS         (" ).append("\n"); 
		query.append("                                               SELECT  'X'" ).append("\n"); 
		query.append("                                               FROM    BAY_PLAN S2" ).append("\n"); 
		query.append("                                               WHERE   S2.VSL_CD      = S1.VSL_CD" ).append("\n"); 
		query.append("                                               AND     S2.VOY_NO      = S1.SKD_VOY_NO" ).append("\n"); 
		query.append("                                               AND     S2.DIR_CD      = S1.SKD_DIR_CD" ).append("\n"); 
		query.append("                                               AND     S2.PORT_CD     = S1.VPS_PORT_CD" ).append("\n"); 
		query.append("                                               AND     S2.CALL_IND    = S1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                               AND     ROWNUM         = 1" ).append("\n"); 
		query.append("                                               )" ).append("\n"); 
		query.append("                         AND     ROWNUM        = 1" ).append("\n"); 
		query.append("                         )                                                       AS BAY_VVD" ).append("\n"); 
		query.append("               FROM    (" ).append("\n"); 
		query.append("                       -- T0003 START." ).append("\n"); 
		query.append("                       SELECT  T1.*" ).append("\n"); 
		query.append("                               , LNK_DIST" ).append("\n"); 
		query.append("                               , LAG(LNK_DIST) OVER(PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.CLPT_SEQ) PRE_LNK_DIST" ).append("\n"); 
		query.append("                       FROM    (" ).append("\n"); 
		query.append("                               -- T0002 START." ).append("\n"); 
		query.append("                               SELECT  DECODE(T3.SVC_SCP_BND_CD, 'N', 'North Bound', 'S', 'South Bound') BOUND" ).append("\n"); 
		query.append("									   , T3.SVC_SCP_BND_CD AS SVC_SCP" ).append("\n"); 
		query.append("                                       , T1.VSL_SLAN_CD" ).append("\n"); 
		query.append("                                       , T1.PF_SKD_TP_CD" ).append("\n"); 
		query.append("                                       , T2.VSL_CD" ).append("\n"); 
		query.append("                                       , T2.SKD_VOY_NO" ).append("\n"); 
		query.append("                                       , T2.SKD_DIR_CD" ).append("\n"); 
		query.append("                                       , T2.VPS_PORT_CD" ).append("\n"); 
		query.append("                                       , T2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                                       , T2.CLPT_SEQ" ).append("\n"); 
		query.append("                                       , T2.YD_CD" ).append("\n"); 
		query.append("                                       , T2.VPS_ETA_DT                                       , T2.VPS_ETB_DT                                       , T2.VPS_ETD_DT" ).append("\n"); 
		query.append("                                       , T2.SKD_CNG_STS_CD" ).append("\n"); 
		query.append("                                       , DECODE(T3.SVC_SCP_BND_CD, 'W', 'N', 'E', 'S') AS SVC_SCP_BND_CD" ).append("\n"); 
		query.append("                                       , LAG(T2.VPS_PORT_CD) OVER (PARTITION BY T2.VSL_CD, T2.SKD_VOY_NO, T2.SKD_DIR_CD ORDER BY T2.CLPT_SEQ) AS PRE_PORT" ).append("\n"); 
		query.append("                                       , LAG(T2.VPS_ETD_DT ) OVER (PARTITION BY T2.VSL_CD, T2.SKD_VOY_NO, T2.SKD_DIR_CD ORDER BY T2.CLPT_SEQ) AS PRE_PORT_ETD_DT" ).append("\n"); 
		query.append("                                       , T0.VNDR_SEQ" ).append("\n"); 
		query.append("                               FROM    (" ).append("\n"); 
		query.append("                                       -- T0001 START." ).append("\n"); 
		query.append("                                       SELECT  T2.*, T5.VNDR_SEQ" ).append("\n"); 
		query.append("                                       FROM    VSK_VSL_SKD            T1" ).append("\n"); 
		query.append("                                               , VSK_VSL_PORT_SKD     T2" ).append("\n"); 
		query.append("                                               , MDM_VSL_CNTR         T3" ).append("\n"); 
		query.append("                                              -- , MDM_VSL_SVC_LANE     T4" ).append("\n"); 
		query.append("                                               , MDM_VENDOR           T5" ).append("\n"); 
		query.append("                                               , VSK_CNL_VNDR         T6" ).append("\n"); 
		query.append("                                       WHERE   1=1" ).append("\n"); 
		query.append("                                       AND     T1.VSL_CD        = T2.VSL_CD" ).append("\n"); 
		query.append("                                       AND     T1.SKD_VOY_NO    = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("                                       AND     T1.SKD_DIR_CD    = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("#if (${port_cd} == 'A')" ).append("\n"); 
		query.append("                                       AND     (T2.VPS_PORT_CD = 'EGSUZ' OR T2.VPS_PORT_CD = 'PAPAC')" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("                                       AND     T2.VPS_PORT_CD   = @[port_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("#if (${vsl_slan_cd} != '')" ).append("\n"); 
		query.append("                                       AND     T1.VSL_SLAN_CD   = @[vsl_slan_cd]" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       AND     T2.VPS_ETB_DT    BETWEEN TO_DATE(@[start_date], 'YYYY-MM-DD')" ).append("\n"); 
		query.append("                                                                AND     TO_DATE(@[end_date], 'YYYY-MM-DD') + 0.99999" ).append("\n"); 
		query.append("                                       AND     T2.VSL_CD        = T3.VSL_CD" ).append("\n"); 
		query.append("                                       AND     NVL(T1.ACT_CRR_CD, T3.CRR_CD)    = 'SML'" ).append("\n"); 
		query.append("                                     --  AND     T1.VSL_SLAN_CD   = T4.VSL_SLAN_CD" ).append("\n"); 
		query.append("                                      -- AND     T5.CNL_AGN_FLG   = 'Y'" ).append("\n"); 
		query.append("                                      -- AND     T4.VSL_TP_CD     = 'C' " ).append("\n"); 
		query.append("                                       AND     T6.VSL_SLAN_CD   = T1.VSL_SLAN_CD " ).append("\n"); 
		query.append("                                       AND     T6.CNL_AGN_VNDR_SEQ = T5.VNDR_SEQ " ).append("\n"); 
		query.append("									   AND     T5.VNDR_CNT_CD = SUBSTR(@[port_cd],0,2)" ).append("\n"); 
		query.append("#if (${vndr_seq} != 'ALL')" ).append("\n"); 
		query.append("                                       AND T5.VNDR_SEQ = TO_NUMBER(@[vndr_seq])" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("                                       -- T0001 END." ).append("\n"); 
		query.append("                                       )                       T0" ).append("\n"); 
		query.append("                                       , VSK_VSL_SKD           T1" ).append("\n"); 
		query.append("                                       , VSK_VSL_PORT_SKD      T2" ).append("\n"); 
		query.append("                                       , MDM_VSL_SVC_LANE_DIR  T3" ).append("\n"); 
		query.append("                               WHERE   1=1" ).append("\n"); 
		query.append("                               AND     T0.VSL_CD        = T1.VSL_CD" ).append("\n"); 
		query.append("                               AND     T0.SKD_VOY_NO    = T1.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND     T0.SKD_DIR_CD    = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND     T1.VSL_CD        = T2.VSL_CD" ).append("\n"); 
		query.append("                               AND     T1.SKD_VOY_NO    = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("                               AND     T1.SKD_DIR_CD    = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("                               AND     T1.VSL_SLAN_CD   = T3.VSL_SLAN_CD" ).append("\n"); 
		query.append("                               AND     T1.SKD_DIR_CD    = T3.VSL_SLAN_DIR_CD" ).append("\n"); 
		query.append("                               AND     T3.SVC_SCP_BND_CD IS NOT NULL" ).append("\n"); 
		query.append("                               AND     NVL(T2.SKD_CNG_STS_CD, ' ') != 'S'" ).append("\n"); 
		query.append("                               -- T0002 END." ).append("\n"); 
		query.append("                               ) T1, VSK_PF_SKD_DTL S" ).append("\n"); 
		query.append("                       WHERE   1 = 1" ).append("\n"); 
		query.append("                       AND     S.VSL_SLAN_CD (+)    = T1.VSL_SLAN_CD" ).append("\n"); 
		query.append("                       AND     S.PF_SVC_TP_CD (+)   = T1.PF_SKD_TP_CD" ).append("\n"); 
		query.append("                       AND     S.SKD_DIR_CD (+)     = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                       AND     S.PORT_CD (+)        = T1.VPS_PORT_CD" ).append("\n"); 
		query.append("                       AND     S.CLPT_SEQ (+)       = T1.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                       -- T0003 END." ).append("\n"); 
		query.append("                       ) T1" ).append("\n"); 
		query.append("               WHERE   1=1" ).append("\n"); 
		query.append("               AND     VPS_PORT_CD  = @[port_cd]" ).append("\n"); 
		query.append("               -- T0004 END." ).append("\n"); 
		query.append("               ) T2" ).append("\n"); 
		query.append("       -- T0005 END." ).append("\n"); 
		query.append("       )" ).append("\n"); 
		query.append("WHERE  1=1" ).append("\n"); 
		query.append("#if (${surcharge} == 'Y') " ).append("\n"); 
		query.append("AND    NVL(SCG_LMT_ACT_RATIO, 0) != 0" ).append("\n"); 
		query.append("#elseif (${surcharge} == 'N') " ).append("\n"); 
		query.append("AND    NVL(SCG_LMT_ACT_RATIO, 0) = 0" ).append("\n"); 
		query.append("#else " ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", TB_SUZ_SURCHG AS (" ).append("\n"); 
		query.append("#if (${port_cd} == 'EGSUZ')" ).append("\n"); 
		query.append("--------------------------------- EGSUZ(스웨즈) --------------------------------------------" ).append("\n"); 
		query.append("SELECT  B6.VSL_CD, B6.VOY_NO, B6.DIR_CD, B6. PORT_CD, B6.CALL_IND" ).append("\n"); 
		query.append("        , B6.TIER_NO     AS SCG_CAR_TIER" ).append("\n"); 
		query.append("        , B6.TEU         AS SCG_CAR_TEU" ).append("\n"); 
		query.append("        , B6.BOX         AS SCG_CAR_BOX" ).append("\n"); 
		query.append("        , B6.BOX_20FT    AS FT20_QTY" ).append("\n"); 
		query.append("        , B6.BOX_40FT    AS FT40_QTY" ).append("\n"); 
		query.append("        , B6.TEU_40FT    AS FT20_TEU" ).append("\n"); 
		query.append("        , DECODE(B6.TEU_OVER10_CHK, 'Y', SCG.TR_SCG_RTO  , SCG.UNDER_TR_SCG_RTO)  AS SCG_CAR_RATIO        " ).append("\n"); 
		query.append("        --Rehandling TEU qunt calculate" ).append("\n"); 
		query.append("        , CASE" ).append("\n"); 
		query.append("          WHEN B6.TEU_OVER10_CHK = 'Y' THEN" ).append("\n"); 
		query.append("               -- 11 TEU 이상일 경우 Rehandling 작업을 실행하게 됨." ).append("\n"); 
		query.append("              ( CASE" ).append("\n"); 
		query.append("               WHEN  SIGN(B6.BOX_20FT - 10) = -1 THEN" ).append("\n"); 
		query.append("               -- 20ft Container를 먼저 뺀 후 40ft를 나중에 빼도록 한다." ).append("\n"); 
		query.append("                     B6.BOX_40FT - ( ABS(B6.BOX_20FT - 10) / 2)" ).append("\n"); 
		query.append("               ELSE" ).append("\n"); 
		query.append("                     B6.BOX_40FT + ( B6.BOX_20FT - 10 )" ).append("\n"); 
		query.append("               END)" ).append("\n"); 
		query.append("          ELSE" ).append("\n"); 
		query.append("               (CASE" ).append("\n"); 
		query.append("               WHEN  SIGN(B6.UNDER_BOX_20FT - 10) = -1  THEN" ).append("\n"); 
		query.append("               -- 20ft Container를 먼저 뺀 후 40ft를 나중에 빼도록 한다." ).append("\n"); 
		query.append("                     B6.UNDER_BOX_40FT- ( ABS(B6.UNDER_BOX_20FT - 10) / 2) + B6.BOX_20FT + B6.BOX_40FT" ).append("\n"); 
		query.append("               ELSE" ).append("\n"); 
		query.append("                     B6.UNDER_BOX_40FT+ ( B6.UNDER_BOX_20FT-10 ) + B6.BOX_20FT + B6.BOX_40FT" ).append("\n"); 
		query.append("                     " ).append("\n"); 
		query.append("               END)" ).append("\n"); 
		query.append("          END   AS RHND_CNTR_QTY" ).append("\n"); 
		query.append("--        , B6.UNDER_TIER_NO AS TIER_2ND" ).append("\n"); 
		query.append("--        , B6.UNDER_TEU     AS TEU_2ND" ).append("\n"); 
		query.append("--        , DECODE(B6.TEU_OVER10_CHK, 'N', " ).append("\n"); 
		query.append("          , B6.UNDER_TIER_NO, B6.UNDER_TEU, B6.UNDER_BOX, B6.UNDER_BOX_20FT, B6.UNDER_BOX_40FT" ).append("\n"); 
		query.append("--        , DECODE(B6.TEU_OVER10_CHK, 'Y', SCG.TR_SCG_RTO, UNDER_TR_SCG_RTO) AS RATIO" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("            SELECT B5.VSL_CD, B5.VOY_NO, B5.DIR_CD, B5.PORT_CD, B5.CALL_IND, B5.TIER, B5.TIER_NO, B5.TIER_RANK, B5.TEU, B5.BOX, B5.BOX_20FT, B5.BOX_40FT, B5.TEU_40FT" ).append("\n"); 
		query.append("                   , LEAD(B5.TIER_NO)  OVER(PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_RANK)  AS UNDER_TIER_NO" ).append("\n"); 
		query.append("                   , LEAD(B5.TEU)      OVER(PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_RANK)  AS UNDER_TEU" ).append("\n"); 
		query.append("                   , LEAD(B5.BOX)      OVER(PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_RANK)  AS UNDER_BOX" ).append("\n"); 
		query.append("                   , LEAD(B5.BOX_20FT) OVER(PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_RANK)  AS UNDER_BOX_20FT" ).append("\n"); 
		query.append("                   , LEAD(B5.BOX_40FT) OVER(PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_RANK)  AS UNDER_BOX_40FT" ).append("\n"); 
		query.append("                   , LEAD(B5.TEU_40FT) OVER(PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_RANK)  AS UNDER_TEU_40FT" ).append("\n"); 
		query.append("                   , DECODE(SIGN(B5.TEU - 11), -1, 'N', 'Y')                                                            AS TEU_OVER10_CHK" ).append("\n"); 
		query.append("            FROM (" ).append("\n"); 
		query.append("                    SELECT  B4.VSL_CD, B4.VOY_NO, B4.DIR_CD, B4.PORT_CD, B4.CALL_IND, B4.TIER" ).append("\n"); 
		query.append("                            , ROW_NUMBER()  OVER(PARTITION BY B4.VSL_CD, B4.VOY_NO, B4.DIR_CD, B4.PORT_CD, B4.CALL_IND ORDER BY B4.TIER)      AS TIER_NO" ).append("\n"); 
		query.append("                            , RANK()        OVER(PARTITION BY B4.VSL_CD, B4.VOY_NO, B4.DIR_CD, B4.PORT_CD, B4.CALL_IND ORDER BY B4.TIER DESC) AS TIER_RANK" ).append("\n"); 
		query.append("                            , SUM(B4.PER_TEU)       AS TEU" ).append("\n"); 
		query.append("                            , SUM(B4.PER_BOX)       AS BOX" ).append("\n"); 
		query.append("                            , SUM(B4.PER_BOX_20FT)  AS BOX_20FT" ).append("\n"); 
		query.append("                            , SUM(B4.PER_BOX_40FT)  AS BOX_40FT" ).append("\n"); 
		query.append("                            , SUM(B4.PER_TEU_40FT)  AS TEU_40FT" ).append("\n"); 
		query.append("                    FROM    (" ).append("\n"); 
		query.append("                                SELECT B1.VSL_CD, B1.VOY_NO, B1.DIR_CD, B1.PORT_CD, B1.CALL_IND, B1.TIER" ).append("\n"); 
		query.append("                                FROM " ).append("\n"); 
		query.append("                                (" ).append("\n"); 
		query.append("                                    SELECT  DISTINCT B0.VSL_CD, B0.VOY_NO, B0.DIR_CD, B0.PORT_CD, B0.CALL_IND, B0.TIER" ).append("\n"); 
		query.append("                                    FROM    BAY_PLAN B0" ).append("\n"); 
		query.append("                                            , TB_SRC1 S" ).append("\n"); 
		query.append("                                    WHERE   1=1" ).append("\n"); 
		query.append("                                    AND     S.VSL_CD = B0.VSL_CD" ).append("\n"); 
		query.append("                                    AND     S.SKD_VOY_NO = B0.VOY_NO" ).append("\n"); 
		query.append("                                    AND     S.SKD_DIR_CD = B0.DIR_CD" ).append("\n"); 
		query.append("                                    AND     S.BAY_LOC = B0.PORT_CD" ).append("\n"); 
		query.append("                                    AND     S.BAY_CAL = B0.CALL_IND" ).append("\n"); 
		query.append("                                    AND     B0.TIER >= '50'" ).append("\n"); 
		query.append("                                    ORDER BY B0.TIER" ).append("\n"); 
		query.append("                                ) B1" ).append("\n"); 
		query.append("                                WHERE 1=1" ).append("\n"); 
		query.append("                            ) B2" ).append("\n"); 
		query.append("                           ,(" ).append("\n"); 
		query.append("                                SELECT   B3.VSL_CD, B3.VOY_NO, B3.DIR_CD, B3.PORT_CD, B3.CALL_IND" ).append("\n"); 
		query.append("                                        , B3.TIER" ).append("\n"); 
		query.append("                                        , B3.SZTP" ).append("\n"); 
		query.append("                                        , DECODE(SUBSTR(B3.SZTP, 2, 1) ,2,1 ,3,1 ,2) AS PER_TEU" ).append("\n"); 
		query.append("                                        , DECODE(SUBSTR(B3.SZTP, 2, 1) ,2,1 ,3,1 ,1) AS PER_BOX" ).append("\n"); 
		query.append("                                        , DECODE(SUBSTR(B3.SZTP, 2, 1) ,2,1 ,3,1 ,0) AS PER_BOX_20FT" ).append("\n"); 
		query.append("                                        , DECODE(SUBSTR(B3.SZTP, 2, 1) ,2,0 ,3,0 ,1) AS PER_BOX_40FT" ).append("\n"); 
		query.append("                                        , DECODE(SUBSTR(B3.SZTP, 2, 1) ,2,0 ,3,0 ,2) AS PER_TEU_40FT" ).append("\n"); 
		query.append("                                FROM    BAY_PLAN B3" ).append("\n"); 
		query.append("                                        , TB_SRC1 S" ).append("\n"); 
		query.append("                                WHERE   1=1" ).append("\n"); 
		query.append("                                AND     S.VSL_CD = B3.VSL_CD" ).append("\n"); 
		query.append("                                AND     S.SKD_VOY_NO = B3.VOY_NO" ).append("\n"); 
		query.append("                                AND     S.SKD_DIR_CD = B3.DIR_CD" ).append("\n"); 
		query.append("                                AND     S.BAY_LOC = B3.PORT_CD" ).append("\n"); 
		query.append("                                AND     S.BAY_CAL = B3.CALL_IND" ).append("\n"); 
		query.append("                                AND     B3.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("                                AND     B3.TIER >= '50'" ).append("\n"); 
		query.append("                                ORDER BY B3.TIER" ).append("\n"); 
		query.append("                            ) B4" ).append("\n"); 
		query.append("                    WHERE   1=1" ).append("\n"); 
		query.append("                    AND     B2.VSL_CD = B4.VSL_CD" ).append("\n"); 
		query.append("                    AND     B2.VOY_NO = B4.VOY_NO" ).append("\n"); 
		query.append("                    AND     B2.DIR_CD = B4.DIR_CD" ).append("\n"); 
		query.append("                    AND     B2.PORT_CD = B4.PORT_CD" ).append("\n"); 
		query.append("                    AND     B2.CALL_IND = B4.CALL_IND" ).append("\n"); 
		query.append("                    AND     B2.TIER = B4.TIER" ).append("\n"); 
		query.append("                    GROUP BY    B4.VSL_CD, B4.VOY_NO, B4.DIR_CD, B4.PORT_CD, B4.CALL_IND, B4.TIER" ).append("\n"); 
		query.append("                    ORDER BY    B4.TIER" ).append("\n"); 
		query.append("                    ) B5" ).append("\n"); 
		query.append("            WHERE 1=1" ).append("\n"); 
		query.append("            ORDER BY B5.VSL_CD, B5.VOY_NO, B5.DIR_CD, B5.PORT_CD, B5.CALL_IND, B5.TIER DESC" ).append("\n"); 
		query.append("        ) B6" ).append("\n"); 
		query.append("       ,(" ).append("\n"); 
		query.append("            SELECT  LOC_CD" ).append("\n"); 
		query.append("                    , TR_SEQ" ).append("\n"); 
		query.append("                    , TR_SCG_RTO" ).append("\n"); 
		query.append("                    , LAG(TR_SCG_RTO) OVER(PARTITION BY SKD_DIR_CD ORDER BY TR_SEQ) AS UNDER_TR_SCG_RTO" ).append("\n"); 
		query.append("                    , VSL_TR_NO" ).append("\n"); 
		query.append("                    , SKD_DIR_CD" ).append("\n"); 
		query.append("--                    , DECODE(SKD_DIR_CD, 'N','W','S','E',SKD_DIR_CD) AS SKD_DIR_CD2" ).append("\n"); 
		query.append("            FROM    VSK_PORT_CNL_TR_SCG " ).append("\n"); 
		query.append("            WHERE   1=1" ).append("\n"); 
		query.append("       ) SCG" ).append("\n"); 
		query.append("       , TB_SRC1 B7" ).append("\n"); 
		query.append("       , MDM_VSL_SVC_LANE_DIR MDM              " ).append("\n"); 
		query.append("WHERE       1=1" ).append("\n"); 
		query.append("AND         B6.TIER_RANK    = 1" ).append("\n"); 
		query.append("AND         B6.TIER_NO      = SCG.TR_SEQ" ).append("\n"); 
		query.append("AND         B7.SVC_SCP      = SCG.SKD_DIR_CD" ).append("\n"); 
		query.append("AND         B6.VSL_CD       = B7.VSL_CD" ).append("\n"); 
		query.append("AND         B6.VOY_NO       = B7.SKD_VOY_NO" ).append("\n"); 
		query.append("AND         B6.DIR_CD       = B7.SKD_DIR_CD" ).append("\n"); 
		query.append("AND         B7.VSL_SLAN_CD  = MDM.VSL_SLAN_CD" ).append("\n"); 
		query.append("AND         B7.SVC_SCP      = MDM.SVC_SCP_BND_CD" ).append("\n"); 
		query.append("ORDER BY    B6.DIR_CD, B6.VSL_CD, B6.VOY_NO, B6.TIER_RANK" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("--------------------------------- PAPAC(파나마) --------------------------------------------" ).append("\n"); 
		query.append("SELECT  TB.VSL_CD" ).append("\n"); 
		query.append("        , TB.VOY_NO" ).append("\n"); 
		query.append("        , TB.DIR_CD" ).append("\n"); 
		query.append("        , TB.PORT_CD" ).append("\n"); 
		query.append("        , TB.CALL_IND" ).append("\n"); 
		query.append("        , NVL(ST.TR_SCHG_DECK_KNT  , TB.TIER_NO )       AS SCG_CAR_TIER" ).append("\n"); 
		query.append("        , NVL(ST.TR_SCHG_TEU , 0 )			AS SCG_CAR_TEU" ).append("\n"); 
		query.append("        , NVL(ST.TR_SCHG_BOX , ( TB.FT20_QTY + TB.FT40_QTY ) ) AS SCG_CAR_BOX" ).append("\n"); 
		query.append("        , NULL                          AS SCG_CAR_RATIO" ).append("\n"); 
		query.append("        , NULL                          AS TR_SCG_RTO_SEQ" ).append("\n"); 
		query.append("        , NULL                          AS RHND_CNTR_QTY" ).append("\n"); 
		query.append("        , MD.CNTR_PNM_CAPA		AS ALLOWANCE_TEU" ).append("\n"); 
		query.append("        , TB.TEU                        AS LOAD_TEU" ).append("\n"); 
		query.append("        , ST.VIS_LEN                    AS VISI_RANGE" ).append("\n"); 
		query.append("        , ST.VIS_CNTR_QTY               AS UND_ACP_QTY" ).append("\n"); 
		query.append("	, CASE WHEN  ST.VIS_LEN > MD.LOA_LEN THEN 4000 ELSE 0 END AS  EXD_ACP_ESTI" ).append("\n"); 
		query.append("	, PD.USD_AMT			AS EXD_ACP_ACTUAL" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        -- T0002 START." ).append("\n"); 
		query.append("        SELECT  VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND, TIER_NO" ).append("\n"); 
		query.append("                , SUM(TEU     )  AS TEU" ).append("\n"); 
		query.append("                , SUM(FT20_QTY)  AS FT20_QTY" ).append("\n"); 
		query.append("                , SUM(FT40_QTY)  AS FT40_QTY" ).append("\n"); 
		query.append("                , ROW_NUMBER () OVER (PARTITION BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND ORDER BY TIER_NO DESC)      AS TIER_NO_SEQ" ).append("\n"); 
		query.append("        FROM    (" ).append("\n"); 
		query.append("                -- T0001 START." ).append("\n"); 
		query.append("                SELECT  T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.PLAN_TYPE, T1.TIER" ).append("\n"); 
		query.append("                        , MAX(T1.TIER) OVER (PARTITION BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.BAY )             AS MAX_TIER_BY_BAY" ).append("\n"); 
		query.append("                        , COUNT (DISTINCT T1.TIER) OVER (PARTITION BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.BAY ) AS TIER_NO" ).append("\n"); 
		query.append("                        , SUM(CASE" ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('WF', 'XF')    THEN 3.02  " ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('8F', '9F')    THEN 2.68" ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('7F')          THEN 2.51" ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('5F')          THEN 2.24 " ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('4F')          THEN 2" ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('3F')          THEN 1.12" ).append("\n"); 
		query.append("                              WHEN SUBSTR(T1.SZTP||T1.FE, 2, 2)  IN ('2F')          THEN 1" ).append("\n"); 
		query.append("                              ELSE 0" ).append("\n"); 
		query.append("                              END" ).append("\n"); 
		query.append("                              )                                                                                                          AS TEU" ).append("\n"); 
		query.append("                        , SUM(DECODE(SUBSTR(T1.SZTP, 2, 1), '2', 1, 0))                                                                  AS FT20_QTY" ).append("\n"); 
		query.append("                        , SUM(DECODE(SUBSTR(T1.SZTP, 2, 1), '2', 0, 1))                                                                  AS FT40_QTY" ).append("\n"); 
		query.append("                        , RANK() OVER (PARTITION BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND ORDER BY T1.PLAN_TYPE DESC) AS PLAN_TYPE_RK" ).append("\n"); 
		query.append("                FROM    BAY_PLAN   T1," ).append("\n"); 
		query.append("                        TB_SRC1    T2" ).append("\n"); 
		query.append("                WHERE   1 = 1" ).append("\n"); 
		query.append("                AND     T2.VSL_CD          = T1.VSL_CD" ).append("\n"); 
		query.append("                AND     T2.SKD_VOY_NO      = T1.VOY_NO" ).append("\n"); 
		query.append("                AND     T2.SKD_DIR_CD      = T1.DIR_CD" ).append("\n"); 
		query.append("                AND     T2.BAY_LOC         = T1.PORT_CD" ).append("\n"); 
		query.append("                AND     T2.BAY_CAL         = T1.CALL_IND" ).append("\n"); 
		query.append("                AND     T1.TIER            >= '50'         -- VSK_PORT_CNL_TR_SCG : Tier별 Surcharge를 순차적으로 등록했기 때문에 필요함." ).append("\n"); 
		query.append("                GROUP BY T1.VSL_CD, T1.VOY_NO, T1.DIR_CD, T1.PORT_CD, T1.CALL_IND, T1.PLAN_TYPE, T1.BAY, T1.TIER" ).append("\n"); 
		query.append("                -- T0001 END." ).append("\n"); 
		query.append("                )" ).append("\n"); 
		query.append("        WHERE   PLAN_TYPE_RK    = 1     -- 실제로 사용할 Bay Plan 판별 (PLAN_TYPE이 'F', 'E'가 동시에 존재할 경우가 있으며, 이럴경우 'F'를 사용하도록 처리함." ).append("\n"); 
		query.append("        AND     MAX_TIER_BY_BAY = TIER  -- MAX TIER만 사용" ).append("\n"); 
		query.append("        GROUP BY VSL_CD, VOY_NO, DIR_CD, PORT_CD, CALL_IND, TIER_NO" ).append("\n"); 
		query.append("        -- T0002 END." ).append("\n"); 
		query.append("        )TB , STO_STB_PORT ST" ).append("\n"); 
		query.append("	, MDM_VSL_CNTR MD" ).append("\n"); 
		query.append("	, ( SELECT * FROM PSO_CHG_DTL WHERE LGS_COST_CD = 'CNTFAV' ) PD" ).append("\n"); 
		query.append("WHERE   1=1" ).append("\n"); 
		query.append("AND     TB.TIER_NO_SEQ  = 1   -- 최고의 TIER NO를 판별" ).append("\n"); 
		query.append("AND     TB.VSL_CD = ST.VSL_CD(+)" ).append("\n"); 
		query.append("AND     TB.VOY_NO = ST.VOY_NO(+)" ).append("\n"); 
		query.append("AND     TB.DIR_CD = ST.DIR_CD(+)" ).append("\n"); 
		query.append("AND     TB.PORT_CD = ST.PORT_CD(+)" ).append("\n"); 
		query.append("AND     TB.CALL_IND = ST.CALL_IND(+)" ).append("\n"); 
		query.append("AND	TB.VSL_CD = MD.VSL_CD(+)" ).append("\n"); 
		query.append("AND	TB.VSL_CD = PD.VSL_CD(+)" ).append("\n"); 
		query.append("AND	TB.VOY_NO = PD.SKD_VOY_NO(+)" ).append("\n"); 
		query.append("AND	TB.DIR_CD = PD.SKD_DIR_CD(+)" ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", TB_NEXT_PORT AS (" ).append("\n"); 
		query.append("SELECT    TT.VSL_CD " ).append("\n"); 
		query.append("        , TT.SKD_VOY_NO " ).append("\n"); 
		query.append("        , TT.SKD_DIR_CD" ).append("\n"); 
		query.append("        , TT.NEXT_PORT" ).append("\n"); 
		query.append("        , TT.NEXT_YD " ).append("\n"); 
		query.append("	, TT.NEXT_ETB_DT" ).append("\n"); 
		query.append("FROM ( SELECT	T1.VSL_CD " ).append("\n"); 
		query.append("	      , T1.SKD_VOY_NO " ).append("\n"); 
		query.append("	      , T1.SKD_DIR_CD" ).append("\n"); 
		query.append("              ,	LEAD( T1.VPS_PORT_CD ) OVER( PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.CLPT_SEQ)  NEXT_PORT" ).append("\n"); 
		query.append("              ,	LEAD( T1.YD_CD ) OVER( PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.CLPT_SEQ)  NEXT_YD" ).append("\n"); 
		query.append("	      ,	LEAD( T1.VPS_ETB_DT ) OVER( PARTITION BY T1.VSL_CD, T1.SKD_VOY_NO, T1.SKD_DIR_CD ORDER BY T1.CLPT_SEQ)  NEXT_ETB_DT" ).append("\n"); 
		query.append("              ,	T1.VPS_PORT_CD" ).append("\n"); 
		query.append("       FROM VSK_VSL_PORT_SKD  T1, " ).append("\n"); 
		query.append("            TB_SRC1 T2" ).append("\n"); 
		query.append("       WHERE 1=1" ).append("\n"); 
		query.append("       AND  T1.VSL_CD = T2.VSL_CD " ).append("\n"); 
		query.append("       AND  T1.SKD_VOY_NO = T2.SKD_VOY_NO" ).append("\n"); 
		query.append("       AND  T1.SKD_DIR_CD = T2.SKD_DIR_CD" ).append("\n"); 
		query.append("      ) TT , TB_SRC1 TR" ).append("\n"); 
		query.append("WHERE 1=1" ).append("\n"); 
		query.append("AND  TT.VSL_CD = TR.VSL_CD " ).append("\n"); 
		query.append("AND  TT.SKD_VOY_NO = TR.SKD_VOY_NO" ).append("\n"); 
		query.append("AND  TT.SKD_DIR_CD = TR.SKD_DIR_CD" ).append("\n"); 
		query.append("AND  TT.VPS_PORT_CD  = TR.BAY_LOC" ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append(", TB_PSO_LOAD_TEU AS (" ).append("\n"); 
		query.append("    SELECT SUM(CASE WHEN SZTP ='DW' THEN '3.02'       " ).append("\n"); 
		query.append("                  WHEN SZTP ='DX' THEN '3.02'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '2' THEN '1.00'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '3' THEN '1.12'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '4' THEN '2.00'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '5' THEN '2.24'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '7' THEN '2.51'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '8' THEN '2.68'      " ).append("\n"); 
		query.append("                  WHEN SUBSTR(SZTP, 2,1) = '9' THEN '2.68'      " ).append("\n"); 
		query.append("                  WHEN CNTR_SIZE = '2' THEN '1.00' -- 위의 조건에 일치 하지 않을 경우를 대비하여 임시로 Rate 할당      " ).append("\n"); 
		query.append("                  ELSE '2.00' END)  AS TPRATE  " ).append("\n"); 
		query.append("                  ,B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD  , B.BAY_LOC   AS VPS_PORT_CD                                  " ).append("\n"); 
		query.append("        FROM BAY_PLAN A, TB_SRC1 B      " ).append("\n"); 
		query.append("         WHERE A.FE = 'F'     " ).append("\n"); 
		query.append("          AND A.VSL_CD    = B.VSL_CD         " ).append("\n"); 
		query.append("          AND A.VOY_NO   = B.SKD_VOY_NO       " ).append("\n"); 
		query.append("          AND A.DIR_CD     =  B.SKD_DIR_CD          " ).append("\n"); 
		query.append("          AND A.PORT_CD  = B.BAY_LOC      " ).append("\n"); 
		query.append("          AND A.PLAN_TYPE = 'F'" ).append("\n"); 
		query.append("        GROUP BY B.VSL_CD, B.SKD_VOY_NO, B.SKD_DIR_CD  , B.BAY_LOC " ).append("\n"); 
		query.append(")" ).append("\n"); 
		query.append("" ).append("\n"); 
		query.append("SELECT DISTINCT T1.VVD" ).append("\n"); 
		query.append("        , T1.BOUND" ).append("\n"); 
		query.append("        , T1.VSL_CD" ).append("\n"); 
		query.append("        , T1.SKD_VOY_NO" ).append("\n"); 
		query.append("        , T1.SKD_DIR_CD" ).append("\n"); 
		query.append("        , T1.VNDR_SEQ" ).append("\n"); 
		query.append("        , T1.BAY_YD" ).append("\n"); 
		query.append("        , T1.BAY_LOC          AS SCG_CAR_PORT_CD" ).append("\n"); 
		query.append("        , T1.BAY_CAL" ).append("\n"); 
		query.append("	    --, CASE WHEN T5.NEXT_PORT = 'EGSUZ' THEN T1.BAY_LOC  ELSE T5.NEXT_PORT END AS RHD_PORT	" ).append("\n"); 
		query.append("        , T1.VSL_SLAN_CD" ).append("\n"); 
		query.append("        , T1.VPS_ETA_DT" ).append("\n"); 
		query.append("        , T1.VPS_ETB_DT" ).append("\n"); 
		query.append("        , T1.VPS_ETD_DT" ).append("\n"); 
		query.append("        , T1.DETAIL" ).append("\n"); 
		query.append("        , T1.YD_CD" ).append("\n"); 
		query.append("        , T1.VPS_PORT_CD" ).append("\n"); 
		query.append("        , T1.CLPT_SEQ" ).append("\n"); 
		query.append("        , T1.BKG_STS" ).append("\n"); 
		query.append("        , T1.BKG_CRE_DT" ).append("\n"); 
		query.append("        , T7.CNL_TZ_BKG_PRD_CD" ).append("\n"); 
		query.append("        , T7.CNL_TZ_BKG_PROC_STS_CD" ).append("\n"); 
		query.append("        , T7.CNL_BKG_TZ_DT" ).append("\n"); 
		query.append("        , T7.CNL_OT_SVC_APRO_FLG" ).append("\n"); 
		query.append("        , T7.CNL_OT_SVC_ARR_DT" ).append("\n"); 
		query.append("        , T7.CNL_BKG_AMT" ).append("\n"); 
		query.append("        , T1.SCG_LMT_ACT_RATIO" ).append("\n"); 
		query.append("        , T1.SCG_LMT_ACT_SPD" ).append("\n"); 
		query.append("        , T2.SCG_CAR_TIER" ).append("\n"); 
		query.append("        , T2.SCG_CAR_TEU" ).append("\n"); 
		query.append("        , T2.SCG_CAR_BOX" ).append("\n"); 
		query.append("        , T2.SCG_CAR_RATIO" ).append("\n"); 
		query.append("        , T6.TPRATE         		   AS LOAD_TEU -- T2.LOAD_TEU" ).append("\n"); 
		query.append("        , ROUND(T2.RHND_CNTR_QTY)      AS RHD_QTY" ).append("\n"); 
		query.append("        , T3.CURR_CD                   AS CRR_CD" ).append("\n"); 
		query.append("        , T3.RATE                      AS SCD_RATE" ).append("\n"); 
		query.append("        , T3.USD_RATE                  AS EXH_RATE" ).append("\n"); 
		query.append("#if (${port_cd} == 'EGSUZ')" ).append("\n"); 
		query.append("        , T1.AVR_GROS_PRD" ).append("\n"); 
		query.append("		, CASE WHEN  ( NVL(T2.SCG_CAR_TIER,0) > 0 AND NVL( T1.AVR_GROS_PRD,0 ) > 0  ) THEN '2' ELSE '3' END AS CALC" ).append("\n"); 
		query.append("FROM    (" ).append("\n"); 
		query.append("        SELECT  T1.*" ).append("\n"); 
		query.append("                , NVL(" ).append("\n"); 
		query.append("                     (" ).append("\n"); 
		query.append("                     WITH TB_GC_PRD AS (" ).append("\n"); 
		query.append("                     SELECT  S.VSL_CD, S.VOY_NO, S.DIR_CD, S.PORT_CD, S.CALL_IND, S.GROSS_GC, S.NEXT_CANAL" ).append("\n"); 
		query.append("                             , ROW_NUMBER() OVER (PARTITION BY S.VSL_CD, S.DIR_CD, S.PORT_CD ORDER BY S.VOY_NO DESC) AS CALL_SEQ" ).append("\n"); 
		query.append("                     FROM    TDR_HEADER S" ).append("\n"); 
		query.append("                     WHERE   1=1" ).append("\n"); 
		query.append("                     AND     S.NEXT_CANAL        = 'EGSUZ'" ).append("\n"); 
		query.append("                     AND     NVL(S.GROSS_GC, 0)  > 0" ).append("\n"); 
		query.append("                     )" ).append("\n"); 
		query.append("                     SELECT  NVL(ROUND(AVG(S1.GROSS_GC)),0)" ).append("\n"); 
		query.append("                     FROM    TB_GC_PRD S1" ).append("\n"); 
		query.append("                     WHERE   1=1" ).append("\n"); 
		query.append("                     AND     CALL_SEQ       <= 3" ).append("\n"); 
		query.append("                     AND     S1.VSL_CD      = T1.VSL_CD" ).append("\n"); 
		query.append("                     AND     S1.DIR_CD      = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                     AND     S1.PORT_CD     = T1.BAY_LOC" ).append("\n"); 
		query.append("                     AND     S1.NEXT_CANAL  = 'EGSUZ'" ).append("\n"); 
		query.append("                     ) ," ).append("\n"); 
		query.append("                    (" ).append("\n"); 
		query.append("                    WITH TB_GC_PRD AS (" ).append("\n"); 
		query.append("                    SELECT  S1.VSL_CD, S1.VOY_NO, S1.DIR_CD, S1.PORT_CD, S1.CALL_IND, S1.GROSS_GC, S1.NEXT_CANAL, TO_DATE(S2.VPS_ETD_DT, 'YYYY-MM-DD') AS VPS_ETD_DT" ).append("\n"); 
		query.append("                            , ROW_NUMBER() OVER (PARTITION BY S1.DIR_CD, S1.PORT_CD ORDER BY S2.VPS_ETD_DT DESC) AS CALL_SEQ" ).append("\n"); 
		query.append("                    FROM    TDR_HEADER S1," ).append("\n"); 
		query.append("                            VSK_VSL_PORT_SKD S2" ).append("\n"); 
		query.append("                    WHERE   1=1" ).append("\n"); 
		query.append("                    AND     S1.VSL_CD   = S2.VSL_CD" ).append("\n"); 
		query.append("                    AND     S1.VOY_NO   = S2.SKD_VOY_NO" ).append("\n"); 
		query.append("                    AND     S1.DIR_CD   = S2.SKD_DIR_CD" ).append("\n"); 
		query.append("                    AND     S1.PORT_CD  = S2.VPS_PORT_CD" ).append("\n"); 
		query.append("                    AND     S1.CALL_IND = S2.CLPT_IND_SEQ" ).append("\n"); 
		query.append("                    AND     S2.TURN_PORT_IND_CD NOT IN ('D', 'V', 'F')" ).append("\n"); 
		query.append("                    AND     S1.NEXT_CANAL        = 'EGSUZ'" ).append("\n"); 
		query.append("                    AND     NVL(S1.GROSS_GC, 0)  > 0" ).append("\n"); 
		query.append("                    )" ).append("\n"); 
		query.append("                    SELECT  NVL(ROUND(AVG(S1.GROSS_GC)),0)" ).append("\n"); 
		query.append("                    FROM    TB_GC_PRD S1" ).append("\n"); 
		query.append("                    WHERE   1=1" ).append("\n"); 
		query.append("                    AND     CALL_SEQ       <= 3" ).append("\n"); 
		query.append("                    AND     S1.DIR_CD      = T1.SKD_DIR_CD" ).append("\n"); 
		query.append("                    AND     S1.PORT_CD     = T1.BAY_LOC" ).append("\n"); 
		query.append("                    AND     S1.NEXT_CANAL  = 'EGSUZ'" ).append("\n"); 
		query.append("                   )                                                                                            ) AS AVR_GROS_PRD" ).append("\n"); 
		query.append("        FROM    TB_SRC1       T1" ).append("\n"); 
		query.append("        )             T1," ).append("\n"); 
		query.append("#else" ).append("\n"); 
		query.append("        , T2.VISI_RANGE" ).append("\n"); 
		query.append("        , T2.UND_ACP_QTY" ).append("\n"); 
		query.append("	, T2.ALLOWANCE_TEU	AS ALLOWANCE" ).append("\n"); 
		query.append("	, T2.EXD_ACP_ESTI" ).append("\n"); 
		query.append("	, T2.EXD_ACP_ACTUAL " ).append("\n"); 
		query.append("        , NULL                        AS AVR_GROS_PRD" ).append("\n"); 
		query.append("FROM    TB_SRC1       T1," ).append("\n"); 
		query.append("#end" ).append("\n"); 
		query.append("        TB_SUZ_SURCHG T2," ).append("\n"); 
		query.append("        (SELECT H.YD_CD, H.VNDR_SEQ" ).append("\n"); 
		query.append("                , H.EFF_FM_DT                           -- 적용시작일" ).append("\n"); 
		query.append("                , H.EFF_TO_DT                           -- 적용종료일" ).append("\n"); 
		query.append("                , D.CURR_CD                             -- 통화단위" ).append("\n"); 
		query.append("                , NVL(DECODE(D.TML_AGMT_VOL_UT_CD, 'C', MAX(C.AGMT_RT), MAX(D.AGMT_UT_RT)), 0)                                        AS RATE           -- 계약 요율" ).append("\n"); 
		query.append("                , NVL(ROUND(NVL(DECODE(D.TML_AGMT_VOL_UT_CD, 'C', MAX(C.AGMT_RT), MAX(D.AGMT_UT_RT)), 0) / G.USD_LOCL_XCH_RT, 2), 0)  AS USD_RATE	-- USD 환산금액" ).append("\n"); 
		query.append("        FROM    TES_TML_AGMT_HDR H , TB_SRC1 TT" ).append("\n"); 
		query.append("                , TES_TML_AGMT_DTL D" ).append("\n"); 
		query.append("                , TES_TML_AGMT_TP_SZ C" ).append("\n"); 
		query.append("                , MDM_YARD M" ).append("\n"); 
		query.append("                , GL_MON_XCH_RT G" ).append("\n"); 
		query.append("        WHERE   1 = 1" ).append("\n"); 
		query.append("        AND     H.YD_CD                    = TT.BAY_YD" ).append("\n"); 
		query.append("        AND     H.TML_AGMT_OFC_CTY_CD      = D.TML_AGMT_OFC_CTY_CD" ).append("\n"); 
		query.append("        AND     H.TML_AGMT_SEQ             = D.TML_AGMT_SEQ" ).append("\n"); 
		query.append("        AND     H.TML_AGMT_VER_NO          = D.TML_AGMT_VER_NO" ).append("\n"); 
		query.append("        AND     H.YD_CD                    = M.YD_CD" ).append("\n"); 
		query.append("        AND     H.VNDR_SEQ                 = M.N1ST_VNDR_SEQ" ).append("\n"); 
		query.append("        AND     TT.VPS_ETB_DT            BETWEEN  H.EFF_FM_DT" ).append("\n"); 
		query.append("                                          AND      H.EFF_TO_DT" ).append("\n"); 
		query.append("        AND     NVL(H.DELT_FLG, 'N')      <> 'Y'" ).append("\n"); 
		query.append("        AND     H.TML_AGMT_STS_CD          = 'C'" ).append("\n"); 
		query.append("        AND     D.LGS_COST_CD              = 'SVRHCD'" ).append("\n"); 
		query.append("        AND     H.TML_AGMT_VER_NO          = ( SELECT  MAX(TML_AGMT_VER_NO) AS TML_AGMT_VER_NO" ).append("\n"); 
		query.append("                                               FROM    TES_TML_AGMT_HDR A" ).append("\n"); 
		query.append("                                                       , MDM_YARD B" ).append("\n"); 
		query.append("                                               WHERE   1 = 1" ).append("\n"); 
		query.append("                                               AND     A.YD_CD            = B.YD_CD" ).append("\n"); 
		query.append("                                               AND     A.VNDR_SEQ         = B.N1ST_VNDR_SEQ" ).append("\n"); 
		query.append("                                               AND     A.YD_CD            = H.YD_CD" ).append("\n"); 
		query.append("                                               AND     TT.VPS_ETB_DT BETWEEN A.EFF_FM_DT AND A.EFF_TO_DT" ).append("\n"); 
		query.append("                                               AND     NVL(A.DELT_FLG, 'N')     <> 'Y'" ).append("\n"); 
		query.append("                                               AND     A.TML_AGMT_STS_CD        = 'C'" ).append("\n"); 
		query.append("                                             )" ).append("\n"); 
		query.append("        AND     D.CURR_CD                  = G.CURR_CD" ).append("\n"); 
		query.append("        AND     TO_CHAR(TT.VPS_ETB_DT , 'YYYYMM')= G.ACCT_XCH_RT_YRMON" ).append("\n"); 
		query.append("        AND     G.ACCT_XCH_RT_LVL          = 1" ).append("\n"); 
		query.append("        AND     D.TML_AGMT_OFC_CTY_CD      = C.TML_AGMT_OFC_CTY_CD (+)" ).append("\n"); 
		query.append("        AND     D.TML_AGMT_SEQ             = C.TML_AGMT_SEQ        (+)" ).append("\n"); 
		query.append("        AND     D.TML_AGMT_VER_NO          = C.TML_AGMT_VER_NO     (+)" ).append("\n"); 
		query.append("        AND     D.TML_AGMT_DTL_SEQ         = C.TML_AGMT_DTL_SEQ    (+)" ).append("\n"); 
		query.append("        GROUP BY H.YD_CD" ).append("\n"); 
		query.append("                , H.VNDR_SEQ" ).append("\n"); 
		query.append("                , H.EFF_FM_DT      -- 적용시작일" ).append("\n"); 
		query.append("                , H.EFF_TO_DT      -- 적용종료일" ).append("\n"); 
		query.append("                , D.CURR_CD        -- 통화단위" ).append("\n"); 
		query.append("                , D.TML_AGMT_VOL_UT_CD" ).append("\n"); 
		query.append("                , G.USD_LOCL_XCH_RT )T3," ).append("\n"); 
		query.append("        MDM_YARD T4," ).append("\n"); 
		query.append("	TB_NEXT_PORT T5 , " ).append("\n"); 
		query.append("	TB_PSO_LOAD_TEU T6, " ).append("\n"); 
		query.append("	VSK_CNL_TZ_BKG T7" ).append("\n"); 
		query.append("WHERE   1=1" ).append("\n"); 
		query.append("AND     T1.VSL_CD          = T2.VSL_CD   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_VOY_NO      = T2.VOY_NO   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_DIR_CD      = T2.DIR_CD   (+)" ).append("\n"); 
		query.append("AND     T1.BAY_LOC         = T2.PORT_CD  (+)" ).append("\n"); 
		query.append("AND     T1.BAY_CAL         = T2.CALL_IND (+)" ).append("\n"); 
		query.append("AND     T1.BAY_YD          = T3.YD_CD    (+)" ).append("\n"); 
		query.append("AND     T3.YD_CD           = T4.YD_CD    (+)" ).append("\n"); 
		query.append("AND     T3.VNDR_SEQ        = T4.N1ST_VNDR_SEQ 	 (+)" ).append("\n"); 
		query.append("AND     T1.VSL_CD          = T5.VSL_CD   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_VOY_NO      = T5.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_DIR_CD      = T5.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("AND     T1.VSL_CD          = T6.VSL_CD   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_VOY_NO      = T6.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_DIR_CD      = T6.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("AND     T1.BAY_LOC         = T6.VPS_PORT_CD  (+)" ).append("\n"); 
		query.append("AND     T1.VSL_CD          = T7.VSL_CD(+)" ).append("\n"); 
		query.append("AND     T1.SKD_VOY_NO      = T7.SKD_VOY_NO   (+)" ).append("\n"); 
		query.append("AND     T1.SKD_DIR_CD      = T7.SKD_DIR_CD   (+)" ).append("\n"); 
		query.append("AND     T1.VPS_PORT_CD     = T7.CNL_PORT_CD (+)" ).append("\n"); 
		query.append("AND     REPLACE(TO_CHAR(TO_DATE(@[start_date], 'YYYY-MM-DD'), 'YYYY-MM'), '-', '')  = T7.CNL_TZ_BKG_YRMON (+)" ).append("\n"); 
		query.append("--#if (${port_cd} == 'EGSUZ')" ).append("\n"); 
		query.append("--AND    (NVL(T2.SCG_CAR_TEU,0) - NVL(T1.AVR_GROS_PRD, 0) = 0 OR NVL(T2.SCG_CAR_TEU,0) - NVL(T1.AVR_GROS_PRD,0) < NVL(T2.SCG_CAR_TEU,0) )" ).append("\n"); 
		query.append("--#end" ).append("\n"); 
		query.append("--AND    T1.BKG_STS IS NOT NULL" ).append("\n"); 
		query.append("ORDER BY T1.BOUND, T1.VPS_ETA_DT" ).append("\n"); 

	}
}