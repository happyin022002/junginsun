<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="BudgetPortChargeMgtDBDAOgetIoRatioRSQL">
			<desc><![CDATA[Invoice Creation & Audit 화면에서 Save Button Click 시 해다 PORT별 VVD 의 IO Ration 정보를 조회한다.
=====================================================================
2011.03.28 진마리아 [선처리(SRM-201114694)] 사업계획 항비 로직 수정 요청]]></desc>
			<sql><![CDATA[
-- IoRatio VO 
  SELECT   VSL_CD,
           SKD_VOY_NO,
           SKD_DIR_CD,
           TURN,
           SLAN_CD,
           VPS_PORT_CD,
           RLANE_DIR_CD,
           OB_RTO,
           IB_RTO,
           RLANE_CD,
           REV_YRMON
    FROM   (--Budget 의 경우
            SELECT   V.VSL_CD,
                     V.SKD_VOY_NO,
                     V.SKD_DIR_CD,
                     V.TURN_PORT_IND_CD TURN,
                     V.SLAN_CD,
                     V.VPS_PORT_CD,
                     '' RLANE_DIR_CD,
                     DECODE (V.TURN_PORT_FLG, 'Y', 50,NVL(OB_RTO,100) ) OB_RTO,
                     DECODE (V.TURN_PORT_FLG, 'Y', 0, NVL(IB_RTO,0)) IB_RTO,
                     L.RLANE_CD,
                     BUD_YRMON AS REV_YRMON
              FROM   VSK_BUD_VSL_PORT_SKD V, PSO_BUD_TGT_VVD L, PSO_PORT_EXPN_DIV D
             WHERE       1 = 1
                     AND V.VSL_CD = L.VSL_CD
                     AND V.SKD_VOY_NO = L.SKD_VOY_NO
                     AND V.SKD_DIR_CD = L.SKD_DIR_CD
                     AND V.SLAN_CD = SUBSTR (L.RLANE_CD, 1, 3)
                     AND V.VSL_CD = @[vsl_cd]
         			 AND V.SKD_VOY_NO = @[skd_voy_no]
			         AND V.SKD_DIR_CD = @[skd_dir_cd]
                     AND V.VPS_PORT_CD = SUBSTR (@[yd_cd], 1, 5)
					 --AND V.CLPT_IND_SEQ = 1
                     AND NVL (SKD_CNG_STS_CD, 'X') <> 'S'
                     AND D.SLAN_CD(+) = V.SLAN_CD
                     AND D.SKD_DIR_CD(+) = V.SKD_DIR_CD
                     AND D.LOC_CD(+) = V.VPS_PORT_CD
                     --AND D.RLANE_CD(+)  =  PSO_GET_REV_LANE_FNC(V.VSL_CD,V.SKD_VOY_NO,V.SKD_DIR_CD,V.VPS_PORT_CD)
                     AND D.RLANE_CD(+)  =  @[rlane_cd]
                     AND V.TURN_PORT_IND_CD IN ('N', 'Y')
                     AND L.bud_scnr_no = @[bud_scnr_no]
                     AND L.BUD_YRMON >= REPLACE (@[rev_yrmon], '-', '')
					 AND L.RLANE_CD = @[rlane_cd]
                     AND 'B' = @[org_flg]
            UNION ALL
            SELECT   V.VSL_CD,
                     V.SKD_VOY_NO,
                     V.SKD_DIR_CD,
                     V.TURN_PORT_IND_CD TURN,
                     V.SLAN_CD,
                     V.VPS_PORT_CD,
                     '' RLANE_DIR_CD,
                     0 OB_RTO,
                     50 IB_RTO,
                     L.RLANE_CD,
                     BUD_YRMON AS REV_YRMON
              FROM   VSK_BUD_VSL_PORT_SKD V, PSO_BUD_TGT_VVD L
             WHERE   V.VSL_CD = L.VSL_CD
                     AND V.SKD_VOY_NO = L.SKD_VOY_NO
                     AND V.SKD_DIR_CD = L.SKD_DIR_CD
                     AND V.SLAN_CD = SUBSTR (L.RLANE_CD, 1, 3)
                     AND V.VSL_CD = @[vsl_cd]
         			 AND V.SKD_VOY_NO = @[skd_voy_no]
			         AND V.SKD_DIR_CD = @[skd_dir_cd]
                     AND V.VPS_PORT_CD = SUBSTR (@[yd_cd], 1, 5)
					-- AND V.CLPT_IND_SEQ = 1
                     AND NVL (SKD_CNG_STS_CD, 'X') <> 'S'
                     AND L.RLANE_CD = @[rlane_cd]
--                     AND (L.RLANE_CD =
--                             NVL (
--                                (SELECT   RLANE_CD
--                                   FROM   VSK_VSL_PORT_SKD V,
--                                          AR_FINC_DIR_CONV B,
--                                          MDM_LOCATION L
--                                  WHERE       V.VSL_CD = [vsl_cd]
--                                          AND V.SKD_VOY_NO = [skd_voy_no]
--                                          AND V.SKD_DIR_CD = [skd_dir_cd]
--                                          AND V.VPS_PORT_CD =
--                                                SUBSTR ([yd_cd], 1, 5)
--                                          AND V.VPS_PORT_CD = L.LOC_CD
--                                          AND V.SLAN_CD = B.SLAN_CD
--                                          AND V.SKD_DIR_CD = B.SLAN_DIR_CD
--                                          AND L.SCONTI_CD = B.SCONTI_CD
--                                          AND ROWNUM <= 1),
--                                L.RLANE_CD))
                     AND EXISTS
                           (SELECT   1
                              FROM   pso_bud_tgt_vvd x
                             WHERE       x.VSL_CD = V.VSL_CD
                                     AND x.SKD_VOY_NO = V.SKD_VOY_NO
                                     AND x.SKD_DIR_CD = V.SKD_DIR_CD
                                     AND x.bud_scnr_no = @[bud_scnr_no]
                                     AND x.BUD_YRMON >=
                                           REPLACE (@[rev_yrmon], '-', ''))
                     AND V.TURN_PORT_IND_CD IN ('D', 'V', 'F')
                     AND L.bud_scnr_no = @[bud_scnr_no]
                     AND 'B' = @[org_flg]
union all              
--Monthly Estimated 의 경우
SELECT   DISTINCT V.VSL_CD,
                  V.SKD_VOY_NO,
                  V.SKD_DIR_CD,
                  V.TURN TURN,
                  V.SLAN_CD,
                  V.VPS_PORT_CD,
                  V.REV_DIR_CD RLANE_DIR_CD,
                  DECODE (V.TURN, 'Y', 50,NVL(OB_RTO,100)  ) OB_RTO,
                  DECODE (V.TURN, 'Y', 0,NVL(IB_RTO,0)  ) IB_RTO,
                  V.RLANE_CD,
                  V.REV_YRMON AS REV_YRMON
FROM  PSO_PORT_EXPN_DIV D,
      (SELECT DISTINCT A.VSL_CD,
                  A.SKD_VOY_NO,
                  A.SKD_DIR_CD,
                  B.REV_DIR_CD,
                  A.TURN_PORT_FLG TURN,
                  A.SLAN_CD,
                  A.VPS_PORT_CD,
                  B.RLANE_CD,
                  B.REV_YRMON
        FROM VSK_VSL_PORT_SKD A, GL_ESTM_REV_VVD B
        WHERE A.VSL_CD = B.VSL_CD
        AND   A.SKD_VOY_NO = B.SKD_VOY_NO
        AND   A.SKD_DIR_CD = B.SKD_DIR_CD
        AND A.VSL_CD = @[vsl_cd]
         AND A.SKD_VOY_NO = @[skd_voy_no]
         AND A.SKD_DIR_CD = @[skd_dir_cd]
         AND A.VPS_PORT_CD = SUBSTR (@[yd_cd], 1, 5)  
         AND NVL (A.SKD_CNG_STS_CD, 'X') <> 'S'
#if(${org_flg} == 'E')
		 -- OnLine의 경우      
		 AND B.REV_YRMON =  REPLACE (@[rev_yrmon], '-', '')
#end
#if(${org_flg} == 'M')    
         AND B.EXE_YRMON =  REPLACE (@[rev_yrmon], '-', '')
		 AND B.REV_YRMON >= REPLACE (@[rev_yrmon], '-', '')
#end		 
         AND A.TURN_PORT_IND_CD IN ('N', 'Y')
		 -- Pendulum 의 경우면서 TURN = Y 인 경우 Outbound 쪽만 계산함
		 AND B.RLANE_CD = DECODE(A.TURN_PORT_FLG,'Y',PSO_GET_REV_LANE_FNC(A.VSL_CD, A.SKD_VOY_NO, A.SKD_DIR_CD,A.VPS_PORT_CD ),B.RLANE_CD)
         AND A.CLPT_IND_SEQ = 1
       ) V    
WHERE    1 = 1  
         AND V.SLAN_CD = D.SLAN_CD(+)
         AND V.SKD_DIR_CD = D.SKD_DIR_CD(+)
         AND V.VPS_PORT_CD = D.LOC_CD(+)
         AND V.RLANE_CD = D.RLANE_CD(+)
         AND ( 'E' = @[org_flg] or 'M' = @[org_flg] )  

UNION ALL
SELECT   DISTINCT V.VSL_CD,
                  V.SKD_VOY_NO,
                  V.SKD_DIR_CD,
                  V.TURN_PORT_IND_CD TURN,
                  V.SLAN_CD,
                  V.VPS_PORT_CD,
                  REV_DIR_CD AS RLANE_DIR_CD,
                  0 OB_RTO,
                  50 IB_RTO,
                  L.RLANE_CD,
                  REV_YRMON AS REV_YRMON
  FROM   VSK_VSL_PORT_SKD V, GL_ESTM_REV_VVD L
 WHERE       V.VSL_CD = L.VSL_CD
         AND V.SKD_VOY_NO = L.SKD_VOY_NO
         AND V.SKD_DIR_CD = L.SKD_DIR_CD
         AND V.SLAN_CD = SUBSTR (L.RLANE_CD, 1, 3)
         AND V.VSL_CD = @[vsl_cd]
         AND V.SKD_VOY_NO = @[skd_voy_no]
         AND V.SKD_DIR_CD = @[skd_dir_cd]
         AND V.VPS_PORT_CD = SUBSTR (@[yd_cd], 1, 5)
		 AND V.CLPT_IND_SEQ = 1
         AND NVL (SKD_CNG_STS_CD, 'X') <> 'S'
         AND V.TURN_PORT_IND_CD IN ('D', 'V', 'F')
#if(${org_flg} == 'E')
		 -- OnLine의 경우 
		 AND L.REV_YRMON =  REPLACE (@[rev_yrmon], '-', '')
#end
#if(${org_flg} == 'M')
         -- Batch 추정일 경우 
 		 AND L.EXE_YRMON =  REPLACE (@[rev_yrmon], '-', '')
 		 AND L.REV_YRMON >= REPLACE (@[rev_yrmon], '-', '')
#end
         AND (L.RLANE_CD =
                 NVL (
                    (SELECT   RLANE_CD
                       FROM   VSK_VSL_PORT_SKD V,
                              AR_FINC_DIR_CONV B,
                              MDM_LOCATION L
                      WHERE       V.VSL_CD = @[vsl_cd]
                              AND V.SKD_VOY_NO = @[skd_voy_no]
                              AND V.SKD_DIR_CD = @[skd_dir_cd]
                              AND V.VPS_PORT_CD = SUBSTR (@[yd_cd], 1, 5)
                              AND V.VPS_PORT_CD = L.LOC_CD
                              AND V.SLAN_CD = B.SLAN_CD
                              AND V.SKD_DIR_CD = B.SLAN_DIR_CD
                              AND L.SCONTI_CD = B.SCONTI_CD
                              AND ROWNUM <= 1),
                    L.RLANE_CD
                 ))
         AND ( 'E' = @[org_flg] or 'M' = @[org_flg] ) 
)
ORDER BY   OB_RTO DESC			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="yd_cd" type="12" value="" out="N"/>
				<param name="rlane_cd" type="12" value="" out="N"/>
				<param name="bud_scnr_no" type="12" value="" out="N"/>
				<param name="rev_yrmon" type="12" value="" out="N"/>
				<param name="org_flg" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
