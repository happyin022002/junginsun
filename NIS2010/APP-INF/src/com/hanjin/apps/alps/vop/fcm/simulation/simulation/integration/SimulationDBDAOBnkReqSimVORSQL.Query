<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="SimulationDBDAOBnkReqSimVORSQL">
			<desc><![CDATA[Bunker Request Simulation에 필요한 VVD 정보를 조회한다.

History
2012.04.04 진마리아 CHM-201216636-01 [FCM] ALPS 모델 및 DB 구조 불일치 복구]]></desc>
			<sql><![CDATA[
/*
--BnkReqSimVO
SELECT
'' FCM_SIM_CD,
'' VSL_CD,
'' SKD_VOY_NO,
'' SKD_DIR_CD,
'' FCM_SIM_SEQ,
'' FCM_SIM_DT,
'' VVD_SEQ,
'' VSL_CD,
'' SKD_VOY_NO,
'' SKD_DIR_CD,
'' VPS_PORT_CD,
'' CLPT_IND_SEQ,
'' YD_CD,
'' CLPT_SEQ,
'' SLAN_CD,
'' PF_SKD_TP_CD,
'' VVD,
'' SKD_CNG_STS_CD,
'' VPS_ETA_DT,
'' VPS_ETB_DT,
'' VPS_ETD_DT,
'' PORT_TM_HRS,
'' SEA_TM_HRS,
'' SEA_SPD,
'' ESTM_CSM_WGT,
'' AVG_CSM_WGT,
'' DEP_FOIL_WGT,
'' DEP_LOW_SULP_FOIL_WGT,
'' SUPL_WGT,
'' DAY_CSM_WGT,
'' PORT_CSM_WGT,
'' SAIL_ME_CSM_WGT,
'' SAIL_GNR_CSM_WGT,
'' PF_PORT_TM_HRS,
'' ACT_PORT_TM_HRS,
'' PF_SEA_TM_HRS,
'' ACT_SEA_TM_HRS,
'' PF_PORT_DIST,
'' ACT_PORT_DIST,
'' PF_SEA_SPD,
'' PF_BUFF_SPD,
'' TRND_LINE_TP_CD,
'' TRND_LINE_NO,
'' TRND_LINE_SEQ,
'' CRE_USR_ID,
'' CRE_DT,
'' UPD_USR_ID,
'' UPD_DT
FROM DUAL
*/
WITH SKD AS (
    SELECT
        T1.VVD_SEQ,
        T2.PF_SKD_TP_CD,
        T3.VSL_CD,
        T3.SKD_VOY_NO,
        T3.SKD_DIR_CD,
        T3.VPS_PORT_CD,
        T3.CLPT_IND_SEQ,
        T3.YD_CD,
        T3.CLPT_SEQ,
        T3.SLAN_CD,
        T3.SKD_CNG_STS_CD,
        T3.VPS_ETA_DT,
        T3.VPS_ETB_DT,
        T3.VPS_ETD_DT,
        T3.PF_ETA_DT,
        T3.PF_ETB_DT,
        T3.PF_ETD_DT,
        T3.LNK_DIST,
        T3.LNK_SPD,
        T4.GMT_HRS,
        DECODE(NVL(T3.SKD_CNG_STS_CD, 'X'), 'S', 2, 1) SKIP_FLG
    FROM (
        -- TARGET VVD >>>>>
        SELECT
        VVD_SEQ, VSL_CD, SKD_VOY_NO, SKD_DIR_CD
        FROM (
            SELECT ROWNUM VVD_SEQ, VSL_CD, SKD_VOY_NO, SKD_DIR_CD, N1ST_PORT_BRTH_DT
            FROM VSK_VSL_SKD
            WHERE 1=1
            AND VSL_CD=@[vsl_cd]
            AND N1ST_PORT_BRTH_DT >= (SELECT N1ST_PORT_BRTH_DT FROM VSK_VSL_SKD
                                      WHERE VSL_CD=@[vsl_cd] AND SKD_VOY_NO=@[skd_voy_no] AND SKD_DIR_CD=@[skd_dir_cd])
            ORDER BY N1ST_PORT_BRTH_DT
        )
        WHERE VVD_SEQ <= @[vvd_seq]
        -- <<<<< TARGET VVD
    )T1, VSK_VSL_SKD T2, VSK_VSL_PORT_SKD T3, MDM_LOCATION T4
    WHERE 1=1
    AND T1.VSL_CD=T2.VSL_CD
    AND T1.SKD_VOY_NO=T2.SKD_VOY_NO
    AND T1.SKD_DIR_CD=T2.SKD_DIR_CD
    AND T2.VSL_CD=T3.VSL_CD
    AND T2.SKD_VOY_NO=T3.SKD_VOY_NO
    AND T2.SKD_DIR_CD=T3.SKD_DIR_CD
    AND T3.TURN_PORT_IND_CD IN ('Y', 'N')
    AND T3.VPS_PORT_CD=T4.LOC_CD
    AND  DECODE(NVL(T3.SKD_CNG_STS_CD, 'X'), 'S', 2, 1) <> 2
)
SELECT
    T1.VVD_SEQ,
    T1.PF_SKD_TP_CD,
    T1.VSL_CD,
    T1.SKD_VOY_NO,
    T1.SKD_DIR_CD,
    T1.VSL_CD || T1.SKD_VOY_NO || T1.SKD_DIR_CD VVD,
    T1.VPS_PORT_CD,
    T1.CLPT_IND_SEQ,
    SUBSTR(T1.YD_CD, 6, 2) YD_CD,
    T1.CLPT_SEQ,
    T1.SLAN_CD,
    T1.SKD_CNG_STS_CD,
    TO_CHAR(T1.VPS_ETA_DT, 'YYYY-MM-DD HH24:MI') VPS_ETA_DT,
    TO_CHAR(T1.VPS_ETB_DT, 'YYYY-MM-DD HH24:MI') VPS_ETB_DT,
    TO_CHAR(T1.VPS_ETD_DT, 'YYYY-MM-DD HH24:MI') VPS_ETD_DT,
    T1.PORT_TM_HRS,
    T1.SEA_TM_HRS,
    ROUND(NVL(T1.ACT_PORT_DIST, T1.PF_PORT_DIST)/T1.SEA_TM_HRS, 1) SEA_SPD,
    T1.PF_PORT_TM_HRS,
    T1.ACT_PORT_TM_HRS,
    T1.PF_SEA_TM_HRS,
    T1.ACT_SEA_TM_HRS,
    T1.PF_PORT_DIST,
    T1.ACT_PORT_DIST,
    T1.PF_SEA_SPD,
    T2.DEP_FOIL_WGT,
    T2.DEP_LOW_SULP_FOIL_WGT
FROM (
    SELECT
        T1.*,
        PORT_TM_HRS ACT_PORT_TM_HRS,
        ROUND((VPS_ETA_DT - PRE_VPS_ETD_DT)*24, 1) - (GMT_HRS - PRE_GMT_HRS)/60.0 SEA_TM_HRS,
        ROUND((VPS_ETA_DT - PRE_VPS_ETD_DT)*24, 1) - (GMT_HRS - PRE_GMT_HRS)/60.0 ACT_SEA_TM_HRS,
        ROUND((PF_ETA_DT - PRE_PF_ETD_DT)*24, 1) - (GMT_HRS - PRE_GMT_HRS)/60.0 PF_SEA_TM_HRS,
        (SELECT STND_DIST FROM VSK_PORT_DIST
        WHERE FM_LOC_CD=T1.PRE_VPS_PORT_CD
        AND TO_LOC_CD=T1.VPS_PORT_CD) ACT_PORT_DIST
    FROM (
        SELECT 
            SKD.*,
            LAG(VPS_PORT_CD) OVER(ORDER BY VVD_SEQ, CLPT_SEQ) PRE_VPS_PORT_CD,
            LAG(VPS_ETD_DT) OVER(ORDER BY VVD_SEQ, CLPT_SEQ) PRE_VPS_ETD_DT,
            LAG(PF_ETD_DT) OVER(ORDER BY VVD_SEQ, CLPT_SEQ) PRE_PF_ETD_DT,
            LAG(GMT_HRS) OVER(ORDER BY VVD_SEQ, CLPT_SEQ) PRE_GMT_HRS,
            LAG(LNK_DIST) OVER(ORDER BY VVD_SEQ, CLPT_SEQ) PF_PORT_DIST,
            LAG(LNK_SPD) OVER(ORDER BY VVD_SEQ, CLPT_SEQ) PF_SEA_SPD,
            ROUND((VPS_ETD_DT-VPS_ETA_DT)*24, 1) PORT_TM_HRS,
            ROUND((PF_ETD_DT-PF_ETA_DT)*24, 1) PF_PORT_TM_HRS
        FROM SKD
        WHERE SKIP_FLG=1
        UNION ALL
            SELECT
            SKD.*,
            NULL PRE_VPS_PORT_CD,
            NULL PRE_VPS_ETD_DT,
            NULL PRE_PF_ETD_DT,
            NULL PRE_GMT_HRS,
            NULL PF_PORT_DIST,
            NULL PF_SEA_SPD,
            NULL PORT_TM_HRS,
            NULL PF_PORT_TM_HRS
        FROM SKD
        WHERE SKIP_FLG=2
    )T1
)T1, FCM_DEP_RPT T2
WHERE 1=1
AND T1.VSL_CD=T2.VSL_CD(+)
AND T1.SKD_VOY_NO=T2.SKD_VOY_NO(+)
AND T1.SKD_DIR_CD=T2.SKD_DIR_CD(+)
AND T1.VPS_PORT_CD=T2.DEP_PORT_CD(+)
AND T1.CLPT_IND_SEQ=T2.CLPT_IND_SEQ(+)
ORDER BY VVD_SEQ, CLPT_SEQ			]]></sql>
			<params>
				<param name="vsl_cd" type="12" value="" out="N"/>
				<param name="skd_voy_no" type="12" value="" out="N"/>
				<param name="skd_dir_cd" type="12" value="" out="N"/>
				<param name="vvd_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
