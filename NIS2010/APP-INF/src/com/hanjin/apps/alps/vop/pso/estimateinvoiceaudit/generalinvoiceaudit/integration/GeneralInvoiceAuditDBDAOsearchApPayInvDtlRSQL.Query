<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GeneralInvoiceAuditDBDAOsearchApPayInvDtlRSQL">
			<desc><![CDATA[invoice 생성시 AP_PAY_INV_DTL 에 저장할 정보를 조회한다.

========================================
History
2012.06.08 진마리아 선처리[ITM-201211026] 공통 CSR로 PSO의 INOVICE DATA I/F 시 DATA 생성로직 변경 요청함.]]></desc>
			<sql><![CDATA[
SELECT    T1.INV_RGST_NO
        , T1.INV_RGST_SEQ
        , T1.SO_ETT_TP_CD
        , T1.LGS_COST_CD
        , T1.ACCT_CD
        , T1.VSL_CD
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
          -- IN BOUND, VIRTURE PORT 방향으로 AMOUNT 전환 후 ERP/AP 로 I/F
                    T3.TURN_SKD_VOY_NO
               ELSE
                    T1.SKD_VOY_NO
               END                  AS SKD_VOY_NO
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
                    T3.TURN_SKD_DIR_CD
               ELSE
                    T1.SKD_DIR_CD
               END                  AS SKD_DIR_CD
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
                    (
                    SELECT  MAX(S.RLANE_DIR_CD)
                    FROM    AR_MST_REV_VVD S
                    WHERE   S.VSL_CD        = T1.VSL_CD
                    AND     S.SKD_VOY_NO    = T3.TURN_SKD_VOY_NO
                    AND     S.SKD_DIR_CD    = T3.TURN_SKD_DIR_CD
                    AND     S.RLANE_CD      = NVL(PSO_GET_REV_LANE_FNC(T1.VSL_CD, T3.TURN_SKD_VOY_NO, T3.TURN_SKD_DIR_CD, SUBSTR (T1.YD_CD, 1, 5)), S.RLANE_CD)
                    )
               ELSE
                    T1.REV_DIR_CD
               END                  AS REV_DIR_CD
        , CASE WHEN T1.DP_IO_BND_CD||T3.TURN_PORT_FLG = 'IY' THEN
                    (
                    SELECT  S.VSL_SLAN_CD
                    FROM    VSK_VSL_SKD    S 
                    WHERE   S.VSL_CD        = T1.VSL_CD
                    AND     S.SKD_VOY_NO    = T3.TURN_SKD_VOY_NO
                    AND     S.SKD_DIR_CD    = T3.TURN_SKD_DIR_CD
                    )
               ELSE
                    T2.VSL_SLAN_CD
               END                  AS SLAN_CD
        , T3.VPS_PORT_CD            AS PORT_CD
        , T1.YD_CD
        , T1.INV_AMT
        , T1.SO_OFC_CTY_CD
        , T1.SO_SEQ
        , T1.DELT_FLG
        , T1.CRE_USR_ID
        , T1.CRE_DT
        , T1.UPD_USR_ID
        , T1.UPD_DT
        , T1.INV_DESC
        , T1.ORG_SO_DTL_SEQ
        , T1.N3PTY_BIL_IF_FLG
FROM    (
        SELECT  T1.INV_RGST_NO,
                SO_DTL_SEQ          AS INV_RGST_SEQ,
                '06'                AS SO_ETT_TP_CD,
                T2.LGS_COST_CD, DECODE(LENGTH(T2.LGS_COST_CD), 4, 110911, T3.ACCT_CD)  AS ACCT_CD,
                T2.VSL_CD,   T2.SKD_VOY_NO, T2.SKD_DIR_CD, T2.REV_DIR_CD,
                T1.YD_CD,
                LOCL_AMT            INV_AMT,
                T1.ISS_CTY_CD       SO_OFC_CTY_CD,
                T1.SO_SEQ,
                'N'                 DELT_FLG,
                'USERID'            CRE_USR_ID,
                SYSDATE             CRE_DT,
                'USERID'            UPD_USR_ID,
                SYSDATE             UPD_DT,
                SUBSTR(T2.DIFF_RMK, 1, 200) AS INV_DESC,
                T2.DP_IO_BND_CD,
                T2.ORG_SO_DTL_SEQ,
                T2.N3PTY_BIL_IF_FLG
        FROM    PSO_CHARGE T1, PSO_CHG_DTL T2, TES_LGS_COST T3
        WHERE   1=1
        AND     T1.ISS_CTY_CD   = T2.ISS_CTY_CD
        AND     T1.SO_SEQ       = T2.SO_SEQ
        AND     T2.LGS_COST_CD  = T3.LGS_COST_CD
    #if(${inv_no}!='')
    	AND (T1.ISS_CTY_CD, T1.SO_SEQ) = (SELECT ISS_CTY_CD, SO_SEQ FROM PSO_CHARGE WHERE INV_NO = @[inv_no] AND VNDR_SEQ = @[vndr_seq] )
    #else
    	AND T1.ISS_CTY_CD  = @[iss_cty_cd]
    	AND T1.SO_SEQ      = @[so_seq]
    #end
        ) T1, VSK_VSL_SKD T2, VSK_VSL_PORT_SKD T3
WHERE   1=1
AND     T1.VSL_CD       = T2.VSL_CD
AND     T1.SKD_VOY_NO   = T2.SKD_VOY_NO
AND     T1.SKD_DIR_CD   = T2.SKD_DIR_CD
AND     T1.VSL_CD       = T3.VSL_CD
AND     T1.SKD_VOY_NO   = T3.SKD_VOY_NO
AND     T1.SKD_DIR_CD   = T3.SKD_DIR_CD
AND     T1.YD_CD        = T3.YD_CD
AND     T3.CLPT_IND_SEQ =
       (
       SELECT  MIN(CLPT_IND_SEQ)
       FROM    VSK_VSL_PORT_SKD S
       WHERE   S.VSL_CD              = T3.VSL_CD
       AND     S.SKD_VOY_NO          = T3.SKD_VOY_NO
       AND     S.SKD_DIR_CD          = T3.SKD_DIR_CD
       AND     S.YD_CD               = T3.YD_CD
       AND     'S'                  != NVL(S.SKD_CNG_STS_CD, ' ')
       )
UNION ALL
SELECT  T1.INV_RGST_NO,
        SO_DTL_SEQ          AS INV_RGST_SEQ,
        '06'                AS SO_ETT_TP_CD,
        T2.LGS_COST_CD, DECODE(LENGTH(T2.LGS_COST_CD), 4, 110911, T3.ACCT_CD)  AS ACCT_CD,
        T2.VSL_CD,   T2.SKD_VOY_NO, T2.SKD_DIR_CD, T2.REV_DIR_CD, SUBSTR(RLANE_CD, 1, 3) AS SLAN_CD,
        SUBSTR(T1.YD_CD,1,5) PORT_CD, T1.YD_CD,
        LOCL_AMT            INV_AMT,
        T1.ISS_CTY_CD       SO_OFC_CTY_CD,
        T1.SO_SEQ,
        'N'                 DELT_FLG,
        'USERID'            CRE_USR_ID,
        SYSDATE             CRE_DT,
        'USERID'            UPD_USR_ID,
        SYSDATE             UPD_DT,
        SUBSTR(T2.DIFF_RMK, 1, 200) AS INV_DESC,
        T2.ORG_SO_DTL_SEQ,
        T2.N3PTY_BIL_IF_FLG
FROM    PSO_CHARGE T1, PSO_CHG_DTL T2, TES_LGS_COST T3
WHERE   1=1
AND     T1.ISS_CTY_CD   = T2.ISS_CTY_CD
AND     T1.SO_SEQ       = T2.SO_SEQ
AND     T2.LGS_COST_CD  = T3.LGS_COST_CD
AND     NOT EXISTS (SELECT 'A' FROM VSK_VSL_SKD WHERE VSL_CD = T2.VSL_CD AND SKD_VOY_NO = T2.SKD_VOY_NO AND SKD_DIR_CD = T2.SKD_DIR_CD)
    #if(${inv_no}!='')
    	AND (T1.ISS_CTY_CD, T1.SO_SEQ) = (SELECT ISS_CTY_CD, SO_SEQ FROM PSO_CHARGE WHERE INV_NO = @[inv_no] AND VNDR_SEQ = @[vndr_seq] )
    #else
    	AND T1.ISS_CTY_CD  = @[iss_cty_cd]
    	AND T1.SO_SEQ      = @[so_seq]
    #end			]]></sql>
			<params>
				<param name="inv_no" type="12" value="" out="N"/>
				<param name="vndr_seq" type="12" value="" out="N"/>
				<param name="iss_cty_cd" type="12" value="" out="N"/>
				<param name="so_seq" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
