<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ContainerCargoClaimReportDBDAOSearchSettlementAnalysisTotalRSQL">
			<desc><![CDATA[SearchSettlementAnalysis Total 조회]]></desc>
			<sql><![CDATA[
SELECT DATA_SEQ  
,'Total' REPORT_BY
, DIV
, SUM(CLAIMED) CLAIMED
, SUM(PAID) PAID
, SUM(TIME_BARRED) TIME_BARRED
, SUM(WITHDRAWN) WITHDRAWN
, SUM(REPUDIATED) REPUDIATED
, SUM(TENDER_DEFENCE) TENDER_DEFENCE
, SUM(DISMISSED) DISMISSED
, SUM(TOT) TOT
, SUM(OUTSTANDING) OUTSTANDING
, ROUND(DECODE (SUM(CLAIMED), 0, 0,(SUM(OUTSTANDING)/SUM(CLAIMED))*100),2) OUTSTANDING_P  
, SUM(PAID_DP) PAID_DP
, ROUND(DECODE (SUM(PAID), 0, 0, (SUM(PAID_DP)/SUM(PAID))*100),2) PAID_DP_P
, SUM(LP_RECOVERED) LP_RECOVERED
, ROUND(DECODE (SUM(PAID_DP), 0, 0, (SUM(LP_RECOVERED)/SUM(PAID_DP))*100),2) LP_RECOVERED_P
, SUM(INS_RECOVERED) INS_RECOVERED
, ROUND(DECODE (SUM(PAID_DP), 0, 0, (SUM(INS_RECOVERED)/SUM(PAID_DP))*100),2) INS_RECOVERED_P
, SUM(TOTAL_RECOVERED) TOTAL_RECOVERED
, ROUND(DECODE (SUM(PAID_DP), 0, 0, (SUM(TOTAL_RECOVERED)/SUM(PAID_DP))*100),2) TOTAL_RECOVERED_P
, SUM(NET_PAID) NET_PAID
, ROUND(DECODE (SUM(PAID), 0, 0, (SUM(NET_PAID)/SUM(PAID))*100),2) NET_PAID_P
,  DATA_SEQ2
,'Total' REPORT_BY2
, DIV2
, SUM(CLAIMED2) CLAIMED2
, SUM(PAID2) PAID2
, SUM(TIME_BARRED2) TIME_BARRED2
, SUM(WITHDRAWN2) WITHDRAWN2
, SUM(REPUDIATED2) REPUDIATED2
, SUM(TENDER_DEFENCE2) TENDER_DEFENCE2
, SUM(DISMISSED2) DISMISSED2
, SUM(TOT2) TOT2
, SUM(OUTSTANDING2) OUTSTANDING2
, ROUND(DECODE (SUM(CLAIMED2), 0, 0, (SUM(OUTSTANDING2)/SUM(CLAIMED2))*100),2) OUTSTANDING_P2
, SUM(PAID_DP2) PAID_DP2
, ROUND(DECODE (SUM(PAID2), 0, 0, (SUM(PAID_DP2)/SUM(PAID2))*100),2) PAID_DP_P2
, SUM(LP_RECOVERED2) LP_RECOVERED2
, ROUND(DECODE (SUM(PAID_DP2), 0, 0, (SUM(LP_RECOVERED2)/SUM(PAID_DP2))*100),2) LP_RECOVERED_P2
, SUM(INS_RECOVERED2) INS_RECOVERED2
, ROUND(DECODE (SUM(PAID_DP2), 0, 0, (SUM(INS_RECOVERED2)/SUM(PAID_DP2))*100),2) INS_RECOVERED_P2
, SUM(TOTAL_RECOVERED2) TOTAL_RECOVERED2
, SUM(TOTAL_RECOVERED_P2) TOTAL_RECOVERED_P2
, SUM(NET_PAID2) NET_PAID2
, SUM(NET_PAID_P2) NET_PAID_P2
FROM(
SELECT
  ' ' DATA_SEQ
  , REPORT_BY
  , 'Amount' DIV
  , CLAIMED
  , PAID
  , TIME_BARRED
  , WITHDRAWN
  , REPUDIATED
  , TENDER_DEFENCE
  , DISMISSED
  , TOT
  , OUTSTANDING
  , ROUND (DECODE (CLAIMED, 0, 0, (OUTSTANDING / CLAIMED) * 100), 2) OUTSTANDING_P
  , PAID_DP
  , ROUND (DECODE (PAID, 0, 0, (PAID_DP / PAID) * 100), 2) PAID_DP_P
  , LP_RECOVERED
  , ROUND (DECODE (PAID, 0, 0, (LP_RECOVERED / PAID) * 100), 2) LP_RECOVERED_P
  , INS_RECOVERED
  , ROUND (DECODE (PAID, 0, 0, (INS_RECOVERED / PAID) * 100), 2) INS_RECOVERED_P
  , TOTAL_RECOVERED
  , ROUND (DECODE (PAID, 0, 0, (TOTAL_RECOVERED / PAID) * 100), 2) TOTAL_RECOVERED_P
  , NET_PAID
  , ROUND (DECODE (PAID, 0, 0, (NET_PAID / PAID) * 100), 2) NET_PAID_P
  , ' ' DATA_SEQ2
  , REPORT_BY REPORT_BY2
  , 'Case' DIV2
  , CLAIMED2
  , PAID2
  , TIME_BARRED2
  , WITHDRAWN2
  , REPUDIATED2
  , TENDER_DEFENCE2
  , DISMISSED2
  , TOT2
  , OUTSTANDING2
  , ROUND (DECODE (CLAIMED2, 0, 0, (OUTSTANDING2 / CLAIMED2) * 100), 2) OUTSTANDING_P2
  , PAID_DP2
  , ROUND (DECODE (PAID2, 0, 0, (PAID_DP2 / PAID2) * 100), 2) PAID_DP_P2
  , LP_RECOVERED2
  , ROUND (DECODE (PAID2, 0, 0, (LP_RECOVERED2 / PAID2) * 100), 2) LP_RECOVERED_P2
  , INS_RECOVERED2
  , ROUND (DECODE (PAID2, 0, 0, (INS_RECOVERED2 / PAID2) * 100), 2) INS_RECOVERED_P2
  , '' TOTAL_RECOVERED2
  , '' TOTAL_RECOVERED_P2
  , '' NET_PAID2
  , '' NET_PAID_P2
  , ROW_NUM
  , TOTAL
FROM
    (
----------------------------붙여넣기 시작
        SELECT
#if(${report_by} == 'CLAIM_AMOUNT' || ${report_by} == 'SETTLED_AMOUNT' || ${report_by} == 'MONTH')--CLAIM_AMOUNT , SETTLED_AMOUNT, MONTH
			TCOL REPORT_BY
#else
            REPORT_BY
#end
          , CLAIMED
          , NVL (PAID, 0)                         AS PAID
          , NVL (TIME_BARRED, 0)                  AS TIME_BARRED
          , NVL (WITHDRAWN, 0)                    AS WITHDRAWN
          , NVL (REPUDIATED, 0)                   AS REPUDIATED
          , NVL (TENDER_DEFENCE, 0)               AS TENDER_DEFENCE
          , NVL (DISMISSED, 0)                    AS DISMISSED
          , NVL (TOT, 0)                          AS TOT
          , NVL (OUTSTANDING, 0)                  AS OUTSTANDING
          , NVL (PAID_DP, 0)                      AS PAID_DP
          , NVL (LP_RECOVERED, 0)                 AS LP_RECOVERED
          , NVL (INS_RECOVERED, 0)                AS INS_RECOVERED
          , NVL (LP_RECOVERED + INS_RECOVERED, 0) AS TOTAL_RECOVERED
          , (NVL (PAID_DP, 0) - NVL (LP_RECOVERED + INS_RECOVERED, 0)) NET_PAID
          , CLAIMED2
          , NVL (PAID2, 0)                          AS PAID2
          , NVL (TIME_BARRED2, 0)                   AS TIME_BARRED2
          , NVL (WITHDRAWN2, 0)                     AS WITHDRAWN2
          , NVL (REPUDIATED2, 0)                    AS REPUDIATED2
          , NVL (TENDER_DEFENCE2, 0)                AS TENDER_DEFENCE2
          , NVL (DISMISSED2, 0)                     AS DISMISSED2
          , NVL (TOT2, 0)                           AS TOT2
          , NVL (OUTSTANDING2, 0)                   AS OUTSTANDING2
          , NVL (PAID_DP2, 0)                       AS PAID_DP2
          , NVL (LP_RECOVERED2, 0)                  AS LP_RECOVERED2
          , NVL (INS_RECOVERED2, 0)                 AS INS_RECOVERED2
          , NVL (LP_RECOVERED2 + INS_RECOVERED2, 0) AS TOTAL_RECOVERED2
          , (NVL (PAID_DP2, 0) - NVL (LP_RECOVERED2 + INS_RECOVERED2, 0)) NET_PAID2
#if(${report_by} == 'CLAIM_AMOUNT' || ${report_by} == 'SETTLED_AMOUNT' || ${report_by} == 'MONTH')--CLAIM_AMOUNT , SETTLED_AMOUNT, MONTH
		  , ROW_NUMBER () OVER (ORDER BY REPORT_BY_SEQ ) ROW_NUM
#else	
		  , ROW_NUMBER () OVER (ORDER BY REPORT_BY ) ROW_NUM
#end
		  , COUNT ( *) OVER () TOTAL
        FROM
            (
                SELECT
#if(${report_by} == '09')--AREA
					TBL.CLM_MISC_NM AS REPORT_BY
#end
#if(${report_by} == '08')--STATUS
					TBL.CLM_MISC_NM AS REPORT_BY
#end
#if(${report_by} == 'HOFC')--HOFC
				    TBL.OFC_CD AS REPORT_BY
#end
#if(${report_by} == 'HANDLER')--HANDLER
				    CLM_V.HDLR_USR_ID AS REPORT_BY
#end
#if(${report_by} == 'LP_HOFC')--LP_HOFC
				    TBL.OFC_CD AS REPORT_BY
#end
#if(${report_by} == 'LIABLE_PARTY')--LIABLE_PARTY
				    TBL.CLM_PTY_ABBR_NM AS REPORT_BY
#end
#if(${report_by} == 'SURVEYOR')--SURVEYOR
				    TBL.CLM_PTY_ABBR_NM AS REPORT_BY
#end
#if(${report_by} == 'ROFC')--ROFC
				    FMAL_CLM_RCV_OFC_CD AS REPORT_BY
#end
#if(${report_by} == 'CLAIMANT')--CLAIMANT
				    TBL.PTY_NM AS REPORT_BY
#end
#if(${report_by} == 'CLAIMANT_AGENT')--CLAIMANT_AGENT
				    TBL.PTY_NM AS REPORT_BY
#end
#if(${report_by} == 'SALVAGER')--SALVAGER
				    TBL.CLM_PTY_ABBR_NM AS REPORT_BY
#end
#if(${report_by} == 'INSURER')--INSURER
				    TBL.CLM_PTY_ABBR_NM AS REPORT_BY
#end
#if(${report_by} == 'VVD')--VVD
				    TRNK_REF_VVD_NO AS REPORT_BY
#end
#if(${report_by} == 'POR')--POR
				    POR_CD AS REPORT_BY
#end
#if(${report_by} == 'POL')--POL
				    POL_CD AS REPORT_BY
#end
#if(${report_by} == 'POD')--POD
				    POD_CD AS REPORT_BY
#end
#if(${report_by} == 'DEL')--DEL
				    DEL_CD AS REPORT_BY
#end
#if(${report_by} == 'FVD')--FVD
					N1ST_PRE_REF_VVD_NO AS REPORT_BY
#end
#if(${report_by} == 'PRE_POT')--PRE_POT
					N1ST_PRE_TS_LOC_CD AS REPORT_BY
#end
#if(${report_by} == 'ON_POT')--ON_POT
					N1ST_PST_TS_LOC_CD AS REPORT_BY
#end
#if(${report_by} == 'CT')--CT
					CRR_TERM_CD AS REPORT_BY
#end
#if(${report_by} == '14')--POI
				    CLM_INCI_PLC_TP_CD AS REPORT_BY
#end
#if(${report_by} == 'LANE')--LANE
				    SLAN_CD AS REPORT_BY
#end
#if(${report_by} == '15')--CARGO
				    CLM_CGO_TP_CD AS REPORT_BY
#end
#if(${report_by} == '11')--TOC
				    CGO_CLM_TP_CD AS REPORT_BY
#end
#if(${report_by} == '02')--COLD1
				    MJR_CLM_DMG_LSS_CD AS REPORT_BY
#end
#if(${report_by} == '39')--CODL2
				    N3RD_LABL_PTY_CD AS REPORT_BY
#end
#if(${report_by} == 'LITIGATION')--LITIGATION
				    DECODE(SMNS_SVE_DT, NULL, 'N', 'Y' ) AS REPORT_BY
#end
#if(${report_by} == '07')--TOS
				    CGO_CLM_STL_TP_CD AS REPORT_BY
#end
#if(${report_by} == 'CLAIM_AMOUNT')--CLAIM_AMOUNT
				CASE WHEN  CLMT_USD_AMT >= 0 AND CLMT_USD_AMT <= 3000 THEN '0 ~ 3,000'
					WHEN CLMT_USD_AMT > 3000 AND CLMT_USD_AMT <= 5000 THEN '3,001 ~ 5,000'
					WHEN CLMT_USD_AMT > 5000 AND CLMT_USD_AMT <= 10000 THEN '5,001 ~ 10,000'
					WHEN CLMT_USD_AMT > 10000 AND CLMT_USD_AMT <= 20000 THEN '10,001 ~ 20,000'
					WHEN CLMT_USD_AMT > 20000 AND CLMT_USD_AMT <= 50000 THEN '20,001 ~ 50,000'
					WHEN CLMT_USD_AMT > 50000 AND CLMT_USD_AMT <= 100000 THEN '50,001 ~ 100,000'
					WHEN CLMT_USD_AMT > 100000 THEN '100,000 ~ '
				END AS REPORT_BY
#end
#if(${report_by} == 'SETTLED_AMOUNT')--SETTLED_AMOUNT
				CASE WHEN  CGO_CLM_STL_USD_AMT >= 0 AND CGO_CLM_STL_USD_AMT <= 3000 THEN '0 ~ 3,000'
					WHEN CGO_CLM_STL_USD_AMT > 3000 AND CGO_CLM_STL_USD_AMT <= 5000 THEN '3,001 ~ 5,000'
					WHEN CGO_CLM_STL_USD_AMT > 5000 AND CGO_CLM_STL_USD_AMT <= 10000 THEN '5,001 ~ 10,000'
					WHEN CGO_CLM_STL_USD_AMT > 10000 AND CGO_CLM_STL_USD_AMT <= 20000 THEN '10,001 ~ 20,000'
					WHEN CGO_CLM_STL_USD_AMT > 20000 AND CGO_CLM_STL_USD_AMT <= 50000 THEN '20,001 ~ 50,000'
					WHEN CGO_CLM_STL_USD_AMT > 50000 AND CGO_CLM_STL_USD_AMT <= 100000 THEN '50,001 ~ 100,000'
					WHEN CGO_CLM_STL_USD_AMT > 100000 THEN '100,000 ~ '
				END AS REPORT_BY
#end
#if(${report_by} == 'MONTH')--MONTH	
			  #if(${period} == 'DOU' && ${from_period} != '')
				TO_CHAR(CLM_V.UPD_DT,'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOI' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INCI_OCCR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOSV' && ${from_period} != '')
				  TO_CHAR(TO_DATE(CLM_V.SVEY_INP_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end 
			  #if(${period} == 'DON' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.PRLM_CLM_NTC_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOTB' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CLM_TM_BAR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOTBLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_TM_BAR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FMAL_CLM_RCV_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOFF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FACT_FND_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOSS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.SMNS_SVE_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CGO_CLM_STL_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DORLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_PTY_RCVR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DORINS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INSUR_RCVR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOR' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.RCT_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LODG_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOD' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DCHG_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DDL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DE_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
			  #if(${period} == 'DOC' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CS_CLZ_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') AS REPORT_BY
			  #end
#end
#if(${report_by} == 'YEAR')--YEAR
			  #if(${period} == 'DOU' && ${from_period} != '')
				TO_CHAR(CLM_V.UPD_DT,'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOI' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INCI_OCCR_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOSV' && ${from_period} != '')
				  TO_CHAR(TO_DATE(CLM_V.SVEY_INP_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end 
			  #if(${period} == 'DON' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.PRLM_CLM_NTC_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOTB' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CLM_TM_BAR_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOTBLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_TM_BAR_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FMAL_CLM_RCV_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOFF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FACT_FND_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOSS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.SMNS_SVE_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CGO_CLM_STL_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DORLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_PTY_RCVR_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DORINS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INSUR_RCVR_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOR' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.RCT_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LODG_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOD' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DCHG_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DDL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DE_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
			  #if(${period} == 'DOC' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CS_CLZ_DT,'YYYYMMDD'),'YYYY') AS REPORT_BY
			  #end
#end
                    --, 'Amount'                                                                                                                                                                  
                  , SUM (CLMT_USD_AMT)                                                                                                                                                            AS CLAIMED
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'PD', CLMT_USD_AMT, 'CM', CLMT_USD_AMT))                                                                                                      AS PAID
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'TB', CLMT_USD_AMT))                                                                                                                          AS TIME_BARRED
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'WD', CLMT_USD_AMT))                                                                                                                          AS WITHDRAWN
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'RP', CLMT_USD_AMT))                                                                                                                          AS REPUDIATED
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'TD', CLMT_USD_AMT))                                                                                                                          AS TENDER_DEFENCE
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'DS', CLMT_USD_AMT))                                                                                                                          AS DISMISSED
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'PD', CLMT_USD_AMT, 'CM', CLMT_USD_AMT, 'TB', CLMT_USD_AMT, 'WD', CLMT_USD_AMT, 'RP', CLMT_USD_AMT, 'TD', CLMT_USD_AMT, 'DS', CLMT_USD_AMT))                      AS TOT
                  , SUM (CLMT_USD_AMT) - SUM (DECODE (CGO_CLM_STL_TP_CD, 'PD', CLMT_USD_AMT, 'CM', CLMT_USD_AMT, 'TB', CLMT_USD_AMT, 'WD', CLMT_USD_AMT, 'RP', CLMT_USD_AMT, 'TD', CLMT_USD_AMT, 'DS', CLMT_USD_AMT)) AS OUTSTANDING
                  , SUM (DECODE (CGO_CLM_STL_TP_CD, 'PD', CGO_CLM_STL_USD_AMT, 'CM', CGO_CLM_STL_USD_AMT)) PAID_DP
                  , SUM (LABL_PTY_RCVR_USD_AMT) AS LP_RECOVERED
                  , SUM (INSUR_RCVR_USD_AMT)    AS INS_RECOVERED
                    --, 'Case'                                                                                                                                                          
                  , COUNT (CLM_V.CGO_CLM_NO)                                                                                                                                                  AS CLAIMED2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'PD', CLM_V.CGO_CLM_NO, 'CM', CLM_V.CGO_CLM_NO))                                                                                        AS PAID2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'TB', CLM_V.CGO_CLM_NO))                                                                                                                AS TIME_BARRED2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'WD', CLM_V.CGO_CLM_NO))                                                                                                                AS WITHDRAWN2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'RP', CLM_V.CGO_CLM_NO))                                                                                                                AS REPUDIATED2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'TD', CLM_V.CGO_CLM_NO))                                                                                                                AS TENDER_DEFENCE2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'DS', CLM_V.CGO_CLM_NO))                                                                                                                AS DISMISSED2
                  , COUNT (DECODE (CGO_CLM_STL_TP_CD, 'PD', CLM_V.CGO_CLM_NO, 'CM', CLM_V.CGO_CLM_NO, 'TB', CLM_V.CGO_CLM_NO, 'WD', CLM_V.CGO_CLM_NO, 'RP', CLM_V.CGO_CLM_NO, 'TD', CLM_V.CGO_CLM_NO, 'DS', CLM_V.CGO_CLM_NO))                      AS TOT2
                  , COUNT (CLM_V.CGO_CLM_NO) - COUNT (DECODE (CGO_CLM_STL_TP_CD, 'PD', CLM_V.CGO_CLM_NO, 'CM', CLM_V.CGO_CLM_NO, 'TB', CLM_V.CGO_CLM_NO, 'WD', CLM_V.CGO_CLM_NO, 'RP', CLM_V.CGO_CLM_NO, 'TD', CLM_V.CGO_CLM_NO, 'DS', CLM_V.CGO_CLM_NO)) AS OUTSTANDING2
                  , SUM (DECODE (CGO_CLM_STL_USD_AMT, 0, 0, NULL, 0, 1)) AS PAID_DP2 -- 0을 제외할경우
			      , SUM (DECODE (LABL_PTY_RCVR_USD_AMT, 0, 0, NULL, 0, 1)) AS LP_RECOVERED2 
                  , SUM (DECODE (INSUR_RCVR_USD_AMT, 0, 0, NULL, 0, 1))    AS INS_RECOVERED2
				  --, COUNT (CGO_CLM_STL_USD_AMT)   AS PAID_DP2 -- 0을 포함할경우
				  --, COUNT (LABL_PTY_RCVR_USD_AMT) AS LP_RECOVERED2 
                  --, COUNT (INSUR_RCVR_USD_AMT)    AS INS_RECOVERED2
                FROM
                    CNI_CLM_V CLM_V
		   		  , CNI_PARTY PARTY1
		   	   	  , CNI_PARTY PARTY2
		   		  , CNI_PARTY PARTY3
		   		  , CNI_PARTY PARTY4
		   		  , CNI_PARTY PARTY5
		   		  , CNI_PARTY PARTY6
		   		  , CNI_PARTY PARTY7  
		   		  , (SELECT  A.CGO_CLM_NO
                                 ,A.CGO_CLM_REF_BL_NO
                            FROM  CNI_CGO_CLM_BL_DTL A
                                 ,BKG_BOOKING B
                           WHERE A.CGO_CLM_REF_BL_NO = B.BL_NO(+)
                             AND A.MN_BL_FLG = 'Y' --대표 B/L 번호
                     ) BL_DTL
                  ,(
                      SELECT A.CGO_CLM_NO
                            ,A.CGO_CLM_REF_BL_NO 
                            ,A.CGO_CLM_REF_CNTR_NO
                            ,B.CNTR_TPSZ_CD 
                      FROM (
                            SELECT A.CGO_CLM_NO
                                  ,A.CGO_CLM_REF_BL_NO 
                                  ,A.CGO_CLM_REF_CNTR_NO
                                  ,B.BKG_NO      
                              FROM CNI_CGO_CLM_CNTR_DTL A
                                  ,BKG_BOOKING B
                             WHERE A.CGO_CLM_REF_BL_NO = B.BL_NO(+)
                               AND A.MN_CNTR_FLG = 'Y' --대표 컨테이너 번호
                           ) A
                          ,BKG_CONTAINER B
                     WHERE A.BKG_NO = B.BKG_NO(+)
                       AND A.CGO_CLM_REF_CNTR_NO = B.CNTR_NO(+)
                  ) CNTR_DTL
                  ,(
                       SELECT A.CGO_CLM_NO, A.HDLR_USR_ID 
                        FROM CNI_CGO_CLM_HDLR_HIS A ,
                             (SELECT CGO_CLM_NO, MAX(CGO_CLM_HDLR_HIS_SEQ) CGO_CLM_HDLR_HIS_SEQ FROM  CNI_CGO_CLM_HDLR_HIS WHERE MGR_HDLR_DIV_CD = 'M' GROUP BY CGO_CLM_NO) B
                       WHERE A.CGO_CLM_NO = B.CGO_CLM_NO
                         AND A.MGR_HDLR_DIV_CD = 'M'
                         AND A.CGO_CLM_HDLR_HIS_SEQ = B.CGO_CLM_HDLR_HIS_SEQ
                  ) MGR
#if(${report_by} == '09')--AREA
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
                WHERE CLM_AREA_CD      = TBL.CLM_MISC_CD
				AND CLM_AREA_CD IS NOT NULL
#end
#if(${report_by} == '08')--STATUS
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
                WHERE CGO_CLM_STS_CD      = TBL.CLM_MISC_CD
				AND CGO_CLM_STS_CD IS NOT NULL            
#end
#if(${report_by} == 'HOFC')--HOFC
                  , (
						SELECT
							OFC_ENG_NM
							, OFC_CD
						FROM
							MDM_ORGANIZATION
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE HDLR_OFC_CD      = TBL.OFC_CD
				AND HDLR_OFC_CD IS NOT NULL
#end
#if(${report_by} == 'HANDLER')--HANDLER
				WHERE CLM_V.HDLR_USR_ID IS NOT NULL
#end
#if(${report_by} == 'LP_HOFC')--LP_HOFC
                  , (
						SELECT
							OFC_ENG_NM
							, OFC_CD
						FROM
							MDM_ORGANIZATION
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE HNDL_OFC_CD      = TBL.OFC_CD
				AND HNDL_OFC_CD IS NOT NULL
#end
#if(${report_by} == 'LIABLE_PARTY')--LIABLE_PARTY
                  , (
						SELECT
							CLM_PTY_NO
							, CLM_PTY_ABBR_NM
						FROM
							CNI_PARTY
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE LABL_CLM_PTY_NO  = TBL.CLM_PTY_NO
				AND LABL_CLM_PTY_NO IS NOT NULL
#end
#if(${report_by} == 'SURVEYOR')--SURVEYOR
                  , (
						SELECT
							CLM_PTY_NO
							, CLM_PTY_ABBR_NM
						FROM
							CNI_PARTY
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE SVEY_CLM_PTY_NO  = TBL.CLM_PTY_NO
				AND SVEY_CLM_PTY_NO IS NOT NULL
#end
#if(${report_by} == 'ROFC')--ROFC
				WHERE FMAL_CLM_RCV_OFC_CD IS NOT NULL
#end
#if(${report_by} == 'CLAIMANT')--CLAIMANT
                  , (
						SELECT
							CLM_PTY_NO
							, PTY_NM
						FROM
							CNI_PARTY
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE CLMT_CLM_PTY_NO  = TBL.CLM_PTY_NO
				AND CLMT_CLM_PTY_NO IS NOT NULL
#end
#if(${report_by} == 'CLAIMANT_AGENT')--CLAIMANT_AGENT
                  , (
						SELECT
							CLM_PTY_NO
							, PTY_NM
						FROM
							CNI_PARTY
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE CLM_AGN_CLM_PTY_NO  = TBL.CLM_PTY_NO
				AND CLM_AGN_CLM_PTY_NO IS NOT NULL
#end
#if(${report_by} == 'SALVAGER')--SALVAGER
                  , (
						SELECT
							CLM_PTY_NO
							, CLM_PTY_ABBR_NM
						FROM
							CNI_PARTY
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE SLV_CLM_PTY_NO  = TBL.CLM_PTY_NO
				AND SLV_CLM_PTY_NO IS NOT NULL
#end
#if(${report_by} == 'INSURER')--INSURER
                  , (
						SELECT
							CLM_PTY_NO
							, CLM_PTY_ABBR_NM
						FROM
							CNI_PARTY
						WHERE 
							DELT_FLG   = 'N'
                    )
                    TBL
                WHERE INSUR_CLM_PTY_NO   = TBL.CLM_PTY_NO
				AND INSUR_CLM_PTY_NO  IS NOT NULL
#end
#if(${report_by} == 'VVD')--VVD
				WHERE TRNK_REF_VVD_NO IS NOT NULL
#end
#if(${report_by} == 'POR')--POR
				WHERE POR_CD IS NOT NULL AND ASCII(POR_CD) > 0
#end
#if(${report_by} == 'POL')--POL
				WHERE POL_CD IS NOT NULL AND ASCII(POL_CD) > 0
#end
#if(${report_by} == 'POD')--POD
				WHERE POD_CD IS NOT NULL AND ASCII(POD_CD) > 0
#end
#if(${report_by} == 'DEL')--DEL
				WHERE DEL_CD IS NOT NULL AND ASCII(DEL_CD) > 0
#end
#if(${report_by} == 'FVD')--FVD
				WHERE TRIM(N1ST_PRE_REF_VVD_NO) IS NOT NULL AND ASCII(N1ST_PRE_REF_VVD_NO) > 0
#end
#if(${report_by} == 'PRE_POT')--PRE_POT
				WHERE TRIM(N1ST_PRE_TS_LOC_CD) IS NOT NULL AND ASCII(N1ST_PRE_TS_LOC_CD) > 0
#end
#if(${report_by} == 'ON_POT')--ON_POT
				WHERE TRIM(N1ST_PST_TS_LOC_CD) IS NOT NULL AND ASCII(N1ST_PST_TS_LOC_CD) > 0
#end
#if(${report_by} == 'CT')--CT
				WHERE CRR_TERM_CD IS NOT NULL
#end
#if(${report_by} == '14')--POI
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
				WHERE CLM_INCI_PLC_TP_CD  = TBL.CLM_MISC_CD
				AND CLM_INCI_PLC_TP_CD IS NOT NULL
#end
#if(${report_by} == 'LANE')--LANE
				WHERE SLAN_CD IS NOT NULL AND ASCII(SLAN_CD) > 0
#end
#if(${report_by} == '15')--CARGO
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
				WHERE CLM_CGO_TP_CD  = TBL.CLM_MISC_CD
				AND CLM_CGO_TP_CD IS NOT NULL
#end
#if(${report_by} == '11')--TOC
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
				WHERE CGO_CLM_TP_CD  = TBL.CLM_MISC_CD
				AND CGO_CLM_TP_CD IS NOT NULL
#end
#if(${report_by} == '02')--COLD1
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
				WHERE MJR_CLM_DMG_LSS_CD  = TBL.CLM_MISC_CD
				AND MJR_CLM_DMG_LSS_CD IS NOT NULL
#end
#if(${report_by} == '39')--COLD2
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
				WHERE N3RD_LABL_PTY_CD  = TBL.CLM_MISC_CD
				AND N3RD_LABL_PTY_CD IS NOT NULL
#end
#if(${report_by} == 'LITIGATION')--LITIGATION
				WHERE 1=1
#end
#if(${report_by} == '07')--TOS
                  , (
                        SELECT
                            CLM_MISC_NM
                          , CLM_MISC_CD
                        FROM
                            CNI_MISC_CD
                        WHERE
                            CLSS_CLM_MISC_CD = @[report_by]
                    )
                    TBL
				WHERE CGO_CLM_STL_TP_CD  = TBL.CLM_MISC_CD
				AND CGO_CLM_STL_TP_CD IS NOT NULL
#end
#if(${report_by} == 'CLAIM_AMOUNT')--CLAIM_AMOUNT 
				WHERE CLMT_USD_AMT IS NOT NULL
#end
#if(${report_by} == 'SETTLED_AMOUNT')--SETTLED_AMOUNT
				WHERE CGO_CLM_STL_USD_AMT IS NOT NULL
#end
#if(${report_by} == 'MONTH' || ${report_by} == 'YEAR')--MONTH, YEAR
				WHERE 1=1
#end
--COMMON START
				  AND CGO_CLM_STL_TP_CD IS NOT NULL
				  AND CLM_V.CLMT_CLM_PTY_NO      = PARTY1.CLM_PTY_NO(+)    
				  AND CLM_V.CLM_AGN_CLM_PTY_NO   = PARTY2.CLM_PTY_NO(+)
				  AND CLM_V.DEFT_ATTY_CLM_PTY_NO = PARTY3.CLM_PTY_NO(+)
				  AND CLM_V.INSUR_CLM_PTY_NO     = PARTY4.CLM_PTY_NO(+)
				  AND CLM_V.SLV_CLM_PTY_NO       = PARTY5.CLM_PTY_NO(+)  
				  AND CLM_V.SVEY_CLM_PTY_NO      = PARTY6.CLM_PTY_NO(+) 
				  AND CLM_V.LABL_CLM_PTY_NO      = PARTY7.CLM_PTY_NO(+) 
  				  AND CLM_V.CGO_CLM_NO           = BL_DTL.CGO_CLM_NO(+)
  				  AND CLM_V.CGO_CLM_NO           = CNTR_DTL.CGO_CLM_NO(+)
  				  AND CLM_V.CGO_CLM_NO           = MGR.CGO_CLM_NO(+)
#if(${report_by} == 'MONTH' || ${report_by} == 'YEAR')--MONTH, YEAR
			  #if(${period} == 'DOU' && ${from_period} != '')
			      AND TO_CHAR(CLM_V.UPD_DT,'YYYY') BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOI' && ${from_period} != '')
			      AND SUBSTR(CLM_V.INCI_OCCR_DT,1,4) BETWEEN @[from_period]  AND @[to_period]
			  #end
			  #if(${period} == 'DOSV' && ${from_period} != '')
			      AND SUBSTR(CLM_V.SVEY_INP_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end 
			  #if(${period} == 'DON' && ${from_period} != '')
			      AND SUBSTR(CLM_V.PRLM_CLM_NTC_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOTB' && ${from_period} != '')
			      AND SUBSTR(CLM_V.CLM_TM_BAR_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOTBLP' && ${from_period} != '')
			      AND SUBSTR(CLM_V.LABL_TM_BAR_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOF' && ${from_period} != '')
			      AND SUBSTR(CLM_V.FMAL_CLM_RCV_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOFF' && ${from_period} != '')
			      AND SUBSTR(CLM_V.FACT_FND_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOSS' && ${from_period} != '')
			      AND SUBSTR(CLM_V.SMNS_SVE_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOS' && ${from_period} != '')
			      AND SUBSTR(CLM_V.CGO_CLM_STL_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DORLP' && ${from_period} != '')
			      AND SUBSTR(CLM_V.LABL_PTY_RCVR_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DORINS' && ${from_period} != '')
			      AND SUBSTR(CLM_V.INSUR_RCVR_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOR' && ${from_period} != '')
			      AND SUBSTR(CLM_V.RCT_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOL' && ${from_period} != '')
			      AND SUBSTR(CLM_V.LODG_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOD' && ${from_period} != '')
			      AND SUBSTR(CLM_V.DCHG_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DDL' && ${from_period} != '')
			      AND SUBSTR(CLM_V.DE_DT,1,4) BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOC' && ${from_period} != '')
			      AND SUBSTR(CLM_V.CS_CLZ_DT,1,4) BETWEEN @[from_period]  AND @[to_period]
			  #end
#else
			  #if(${period} == 'DOU' && ${from_period} != '')
			      AND TO_CHAR(CLM_V.UPD_DT,'YYYYMMDD') BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOI' && ${from_period} != '')
			      AND CLM_V.INCI_OCCR_DT BETWEEN @[from_period]  AND @[to_period]
			  #end
			  #if(${period} == 'DOSV' && ${from_period} != '')
			      AND CLM_V.SVEY_INP_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end 
			  #if(${period} == 'DON' && ${from_period} != '')
			      AND CLM_V.PRLM_CLM_NTC_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOTB' && ${from_period} != '')
			      AND CLM_V.CLM_TM_BAR_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOTBLP' && ${from_period} != '')
			      AND CLM_V.LABL_TM_BAR_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOF' && ${from_period} != '')
			      AND CLM_V.FMAL_CLM_RCV_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOFF' && ${from_period} != '')
			      AND CLM_V.FACT_FND_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOSS' && ${from_period} != '')
			      AND CLM_V.SMNS_SVE_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOS' && ${from_period} != '')
			      AND CLM_V.CGO_CLM_STL_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DORLP' && ${from_period} != '')
			      AND CLM_V.LABL_PTY_RCVR_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DORINS' && ${from_period} != '')
			      AND CLM_V.INSUR_RCVR_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOR' && ${from_period} != '')
			      AND CLM_V.RCT_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOL' && ${from_period} != '')
			      AND CLM_V.LODG_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOD' && ${from_period} != '')
			      AND CLM_V.DCHG_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DDL' && ${from_period} != '')
			      AND CLM_V.DE_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
			  #if(${period} == 'DOC' && ${from_period} != '')
			      AND CLM_V.CS_CLZ_DT BETWEEN @[from_period]  AND @[to_period] 
			  #end
#end
			  #if(${area} != 'All' && ${area} != '')
			      AND CLM_V.CLM_AREA_CD = @[area] 
			  #end
			  #if(${status} != 'All' && ${status} != '')
			      AND CLM_V.CGO_CLM_STS_CD = @[status] 
			  #end
			  #if(${vt} != 'All' && ${vt} != '')
			      AND CLM_V.CGO_CLM_DIV_CD = @[vt] 
			  #end
			  #if(${hdlr_ofc_cd} != '')  
			      AND CLM_V.HDLR_OFC_CD = @[hdlr_ofc_cd] -- HOFC
			  #end 
			  #if(${hdlr_usr_id} != '')  
			      AND CLM_V.HDLR_USR_ID = @[hdlr_usr_id] -- Handler
			  #end
			  #if(${mgr_usr_id} != '')  
			      AND CLM_V.HDLR_OFC_CD = @[mgr_usr_id] -- Manager
			  #end 
			  #if(${hndl_ofc_cd} != '')  
			      AND CLM_V.HNDL_OFC_CD = @[hndl_ofc_cd] -- LP HOFC
			  #end
			  #if(${labl_clm_pty_no} != '')  
			      AND CLM_V.LABL_CLM_PTY_NO = @[labl_clm_pty_no] -- Liable Party
			  #end
			  #if(${svey_clm_pty_no} != '')  
			      AND CLM_V.SVEY_CLM_PTY_NO = @[svey_clm_pty_no] -- Surveyor
			  #end 
			  #if(${fmal_clm_rcv_ofc_cd} != '')  
			      AND CLM_V.FMAL_CLM_RCV_OFC_CD = @[fmal_clm_rcv_ofc_cd] -- ROFC
			  #end 
			  #if(${clmt_clm_pty_no} != '')  
			      AND CLM_V.CLMT_CLM_PTY_NO = @[clmt_clm_pty_no] -- Claimant
			  #end
			  #if(${clmt_clm_agn_pty_no} != '') 
			      AND CLM_V.CLM_AGN_CLM_PTY_NO = @[clmt_clm_agn_pty_no] -- Agent
			  #end
			  #if(${slv_clm_pty_no} != '')  
			      AND CLM_V.SLV_CLM_PTY_NO = @[slv_clm_pty_no] -- Salvager
			  #end
			  #if(${insur_clm_pty_no} != '')  
			      AND CLM_V.INSUR_CLM_PTY_NO = @[insur_clm_pty_no] -- Insurer
			  #end
			  #if(${clm_stl_auth_usr_id} != '')  
			      AND CLM_V.CLM_STL_AUTH_USR_ID = @[clm_stl_auth_usr_id] -- Approver 
			  #end
			  #if(${trnk_ref_vvd_no} != '') 
			      AND CLM_V.TRNK_REF_VVD_NO LIKE @[trnk_ref_vvd_no]||'%' -- VVD
			  #end
			  #if(${por_cd} != '')
			      AND CLM_V.POR_CD = @[por_cd]  -- POR
			  #end
			  #if(${pol_cd} != '')
			      AND CLM_V.POL_CD = @[pol_cd]  -- POL
			  #end
			  #if(${pod_cd} != '')
			      AND CLM_V.POD_CD = @[pod_cd] -- POD
			  #end 
			  #if(${del_cd} != '')
			      AND CLM_V.DEL_CD = @[del_cd] -- DEL
			  #end 
			  #if(${fvd} != '') 
			      AND CLM_V.N1ST_PRE_REF_VVD_NO = @[fvd]  -- FVD
			  #end
			  #if(${n1st_pre_ts_loc_cd} != '')
			      AND CLM_V.N1ST_PRE_TS_LOC_CD = @[n1st_pre_ts_loc_cd] -- PRE_POT
			  #end  
			  #if(${n1st_pst_ts_loc_cd} != '')
			      AND CLM_V.N1ST_PST_TS_LOC_CD = @[n1st_pst_ts_loc_cd]  -- POS_POT
			  #end
			  #if(${crr_term_cd} != '')
			      AND CLM_V.CRR_TERM_CD = @[crr_term_cd] -- CT
			  #end
			  #if(${inci_plc_tp_cd} != '')
			      AND CLM_V.INCI_PLC_TP_CD = @[inci_plc_tp_cd] --POI 
			  #end
			  #if(${slan_cd} != '')
			      AND CLM_V.SLAN_CD = @[slan_cd]  -- Lane
			  #end
			  #if(${clm_cgo_tp_cd} != '')
			      AND CLM_V.CLM_CGO_TP_CD = @[clm_cgo_tp_cd]  --Cargo
			  #end
			  #if(${cgo_clm_tp_cd} != '')
			      AND CLM_V.CGO_CLM_TP_CD = @[cgo_clm_tp_cd]  -- TOC
			  #end
			  #if(${mjr_clm_dmg_lss_cd} != '')
			      AND CLM_V.MJR_CLM_DMG_LSS_CD = @[mjr_clm_dmg_lss_cd]  --CODL1
			  #end
			  #if(${n3rd_labl_pty_cd} != '')
			      AND CLM_V.N3RD_LABL_PTY_CD = @[n3rd_labl_pty_cd] --CODL2
			  #end
			  #if(${lit} == 'Y')
			      AND CLM_V.SMNS_SVE_DT <> ''  -- Litigation
			  #end
			  #if(${cgo_clm_stl_tp_cd} != '')
			      AND CLM_V.CGO_CLM_STL_TP_CD = @[cgo_clm_stl_tp_cd]  -- TOS
			  #end
			  #if(${from_clmt_usd_amt} != '' &&  ${to_clmt_usd_amt} !='')
			      AND CLM_V.CLMT_USD_AMT BETWEEN @[from_clmt_usd_amt] AND @[to_clmt_usd_amt] -- Claim Amount
			  #elseif(${from_clmt_usd_amt} != '')
			      AND CLM_V.CLMT_USD_AMT >= @[from_clmt_usd_amt] -- Claim Amount
			  #elseif(${to_clmt_usd_amt} != '')
			      AND CLM_V.CLMT_USD_AMT < @[to_clmt_usd_amt] -- Claim Amount
			  #end
			  #if(${from_cgo_clm_stl_usd_amt} != '' &&  ${to_cgo_clm_stl_usd_amt} !='')
			      AND CLM_V.CGO_CLM_STL_USD_AMT BETWEEN @[from_cgo_clm_stl_usd_amt]  AND @[to_cgo_clm_stl_usd_amt]   -- Settled Amount
			  #elseif(${from_cgo_clm_stl_usd_amt} != '')
			      AND CLM_V.CGO_CLM_STL_USD_AMT >= @[from_cgo_clm_stl_usd_amt] -- Settled Amount
			  #elseif(${to_cgo_clm_stl_usd_amt} != '')
			      AND CLM_V.CGO_CLM_STL_USD_AMT < @[to_cgo_clm_stl_usd_amt] -- Settled Amount
			  #end   
			  #if(${cgo_clm_inci_no} != '')
			      AND CLM_V.CGO_CLM_INCI_NO = @[cgo_clm_inci_no]  -- INC No.
			  #end
--COMMON END
--GROUP BY START
#if(${report_by} == '09')--AREA
                GROUP BY
                    TBL.CLM_MISC_NM              
#end
#if(${report_by} == '08')--STATUS
                GROUP BY
                    TBL.CLM_MISC_NM  
#end
#if(${report_by} == 'HOFC')--HOFC
                GROUP BY
				    TBL.OFC_CD
#end
#if(${report_by} == 'HANDLER')--HANDLER
				GROUP BY
					CLM_V.HDLR_USR_ID
#end
#if(${report_by} == 'LP_HOFC')--LP_HOFC
                GROUP BY
				    TBL.OFC_CD
#end
#if(${report_by} == 'LIABLE_PARTY')--LIABLE_PARTY
                GROUP BY
				    TBL.CLM_PTY_ABBR_NM
#end
#if(${report_by} == 'SURVEYOR')--SURVEYOR
                GROUP BY
				    TBL.CLM_PTY_ABBR_NM
#end
#if(${report_by} == 'ROFC')--ROFC
				GROUP BY
					FMAL_CLM_RCV_OFC_CD
#end
#if(${report_by} == 'CLAIMANT')--CLAIMANT
                GROUP BY
				    TBL.PTY_NM
#end
#if(${report_by} == 'CLAIMANT_AGENT')--CLAIMANT_AGENT
                GROUP BY
				    TBL.PTY_NM
#end
#if(${report_by} == 'SALVAGER')--SALVAGER
                GROUP BY
				    TBL.CLM_PTY_ABBR_NM
#end
#if(${report_by} == 'INSURER')--INSURER
                GROUP BY
				    TBL.CLM_PTY_ABBR_NM
#end
#if(${report_by} == 'VVD')--VVD
				GROUP BY
					TRNK_REF_VVD_NO
#end
#if(${report_by} == 'POR')--POR
				GROUP BY
					POR_CD
#end
#if(${report_by} == 'POL')--POL
				GROUP BY
					POL_CD
#end
#if(${report_by} == 'POD')--POD
				GROUP BY
					POD_CD
#end
#if(${report_by} == 'DEL')--DEL
				GROUP BY
					DEL_CD
#end
#if(${report_by} == 'FVD')--FVD
				GROUP BY
					N1ST_PRE_REF_VVD_NO
#end
#if(${report_by} == 'PRE_POT')--PRE_POT
				GROUP BY
					N1ST_PRE_TS_LOC_CD
#end
#if(${report_by} == 'ON_POT')--ON_POT
				GROUP BY
					N1ST_PST_TS_LOC_CD
#end
#if(${report_by} == 'CT')--CT
				GROUP BY
					CRR_TERM_CD
#end
#if(${report_by} == '14')--POI
                GROUP BY
                    CLM_INCI_PLC_TP_CD
#end
#if(${report_by} == 'LANE')--LANE
				GROUP BY
					SLAN_CD
#end
#if(${report_by} == '15')--CARGO
                GROUP BY
                    CLM_CGO_TP_CD
#end
#if(${report_by} == '11')--TOC
                GROUP BY
                    CGO_CLM_TP_CD
#end
#if(${report_by} == '02')--COLD1
                GROUP BY
                    MJR_CLM_DMG_LSS_CD
#end
#if(${report_by} == '39')--COLD2
                GROUP BY
                    N3RD_LABL_PTY_CD
#end
#if(${report_by} == 'LITIGATION')--LITIGATION
				GROUP BY
					DECODE(SMNS_SVE_DT, NULL, 'N', 'Y' )
#end
#if(${report_by} == '07')--TOS
                GROUP BY
                    CGO_CLM_STL_TP_CD
#end
#if(${report_by} == 'CLAIM_AMOUNT')--CLAIM_AMOUNT
				GROUP BY
				CASE WHEN  CLMT_USD_AMT >= 0 AND CLMT_USD_AMT <= 3000 THEN '0 ~ 3,000'
					WHEN CLMT_USD_AMT > 3000 AND CLMT_USD_AMT <= 5000 THEN '3,001 ~ 5,000'
					WHEN CLMT_USD_AMT > 5000 AND CLMT_USD_AMT <= 10000 THEN '5,001 ~ 10,000'
					WHEN CLMT_USD_AMT > 10000 AND CLMT_USD_AMT <= 20000 THEN '10,001 ~ 20,000'
					WHEN CLMT_USD_AMT > 20000 AND CLMT_USD_AMT <= 50000 THEN '20,001 ~ 50,000'
					WHEN CLMT_USD_AMT > 50000 AND CLMT_USD_AMT <= 100000 THEN '50,001 ~ 100,000'
					WHEN CLMT_USD_AMT > 100000 THEN '100,000 ~ '
				END
#end
#if(${report_by} == 'SETTLED_AMOUNT')--SETTLED_AMOUNT
				GROUP BY
				CASE WHEN  CGO_CLM_STL_USD_AMT >= 0 AND CGO_CLM_STL_USD_AMT <= 3000 THEN '0 ~ 3,000'
					WHEN CGO_CLM_STL_USD_AMT > 3000 AND CGO_CLM_STL_USD_AMT <= 5000 THEN '3,001 ~ 5,000'
					WHEN CGO_CLM_STL_USD_AMT > 5000 AND CGO_CLM_STL_USD_AMT <= 10000 THEN '5,001 ~ 10,000'
					WHEN CGO_CLM_STL_USD_AMT > 10000 AND CGO_CLM_STL_USD_AMT <= 20000 THEN '10,001 ~ 20,000'
					WHEN CGO_CLM_STL_USD_AMT > 20000 AND CGO_CLM_STL_USD_AMT <= 50000 THEN '20,001 ~ 50,000'
					WHEN CGO_CLM_STL_USD_AMT > 50000 AND CGO_CLM_STL_USD_AMT <= 100000 THEN '50,001 ~ 100,000'
					WHEN CGO_CLM_STL_USD_AMT > 100000 THEN '100,000 ~ '
				END
#end
#if(${report_by} == 'MONTH')--MONTH
				GROUP BY
			  #if(${period} == 'DOU' && ${from_period} != '')
				TO_CHAR(CLM_V.UPD_DT,'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOI' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INCI_OCCR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOSV' && ${from_period} != '')
				  TO_CHAR(TO_DATE(CLM_V.SVEY_INP_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end 
			  #if(${period} == 'DON' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.PRLM_CLM_NTC_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOTB' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CLM_TM_BAR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOTBLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_TM_BAR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FMAL_CLM_RCV_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOFF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FACT_FND_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOSS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.SMNS_SVE_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CGO_CLM_STL_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DORLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_PTY_RCVR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DORINS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INSUR_RCVR_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOR' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.RCT_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LODG_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOD' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DCHG_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DDL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DE_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
			  #if(${period} == 'DOC' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CS_CLZ_DT,'YYYYMMDD'),'Mon', 'NLS_DATE_LANGUAGE=AMERICAN')
			  #end
#end
#if(${report_by} == 'YEAR')--YEAR
				GROUP BY
			  #if(${period} == 'DOU' && ${from_period} != '')
				TO_CHAR(CLM_V.UPD_DT,'YYYY')
			  #end
			  #if(${period} == 'DOI' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INCI_OCCR_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOSV' && ${from_period} != '')
				  TO_CHAR(TO_DATE(CLM_V.SVEY_INP_DT,'YYYYMMDD'),'YYYY')
			  #end 
			  #if(${period} == 'DON' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.PRLM_CLM_NTC_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOTB' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CLM_TM_BAR_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOTBLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_TM_BAR_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FMAL_CLM_RCV_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOFF' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.FACT_FND_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOSS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.SMNS_SVE_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CGO_CLM_STL_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DORLP' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LABL_PTY_RCVR_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DORINS' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.INSUR_RCVR_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOR' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.RCT_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.LODG_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOD' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DCHG_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DDL' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.DE_DT,'YYYYMMDD'),'YYYY')
			  #end
			  #if(${period} == 'DOC' && ${from_period} != '')
				TO_CHAR(TO_DATE(CLM_V.CS_CLZ_DT,'YYYYMMDD'),'YYYY')
			  #end
#end
--GROUP BY END
            )
#if(${report_by} == 'CLAIM_AMOUNT' || ${report_by} == 'SETTLED_AMOUNT')--CLAIM_AMOUNT or SETTLED_AMOUNT
			,(
                    SELECT '0 ~ 3,000' TCOL, 1 REPORT_BY_SEQ FROM DUAL
                    UNION ALL 
                    SELECT '3,001 ~ 50,000' TCOL, 2 REPORT_BY_SEQ FROM DUAL
                    UNION ALL 
                    SELECT '5,001 ~ 10,000' TCOL, 3 REPORT_BY_SEQ FROM DUAL
                    UNION ALL 
                    SELECT '10,001 ~ 20,000' TCOL, 4 REPORT_BY_SEQ FROM DUAL
                    UNION ALL 
                    SELECT '20,001 ~ 50,000' TCOL, 5 REPORT_BY_SEQ FROM DUAL
                    UNION ALL 
                    SELECT '50,001 ~ 100,000' TCOL, 6 REPORT_BY_SEQ FROM DUAL
                    UNION ALL 
                    SELECT '100,000 ~ ' TCOL, 7 REPORT_BY_SEQ FROM DUAL
              ) TBL
              WHERE REPORT_BY(+) = TBL.TCOL 
#end
#if(${report_by} == 'MONTH')--MONTH
			,(
                    SELECT TO_CHAR(to_date('01','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 1 REPORT_BY_SEQ  FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('02','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 2 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('03','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 3 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('04','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 4 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('05','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 5 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('06','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 6 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('07','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 7 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('08','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 8 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('09','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 9 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('10','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 10 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('11','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 11 REPORT_BY_SEQ FROM DUAL
                    UNION ALL
                    SELECT TO_CHAR(to_date('12','MM'), 'Mon', 'NLS_DATE_LANGUAGE=AMERICAN') TCOL, 12 REPORT_BY_SEQ FROM DUAL
              ) TBL
              WHERE REPORT_BY(+) = TBL.TCOL
#end
----------------------------붙여넣기 끝
		    )
		#if (${start_page} != '') 
		WHERE ROW_NUM BETWEEN 1 AND ${end_page}
		#end
)			]]></sql>
			<params>
				<param name="report_by" type="12" value="" out="N"/>
				<param name="from_period" type="12" value="" out="N"/>
				<param name="to_period" type="12" value="" out="N"/>
				<param name="area" type="12" value="" out="N"/>
				<param name="status" type="12" value="" out="N"/>
				<param name="vt" type="12" value="" out="N"/>
				<param name="hdlr_ofc_cd" type="12" value="" out="N"/>
				<param name="hdlr_usr_id" type="12" value="" out="N"/>
				<param name="mgr_usr_id" type="12" value="" out="N"/>
				<param name="hndl_ofc_cd" type="12" value="" out="N"/>
				<param name="labl_clm_pty_no" type="12" value="" out="N"/>
				<param name="svey_clm_pty_no" type="12" value="" out="N"/>
				<param name="fmal_clm_rcv_ofc_cd" type="12" value="" out="N"/>
				<param name="clmt_clm_pty_no" type="12" value="" out="N"/>
				<param name="clmt_clm_agn_pty_no" type="12" value="" out="N"/>
				<param name="slv_clm_pty_no" type="12" value="" out="N"/>
				<param name="insur_clm_pty_no" type="12" value="" out="N"/>
				<param name="clm_stl_auth_usr_id" type="12" value="" out="N"/>
				<param name="trnk_ref_vvd_no" type="12" value="" out="N"/>
				<param name="por_cd" type="12" value="" out="N"/>
				<param name="pol_cd" type="12" value="" out="N"/>
				<param name="pod_cd" type="12" value="" out="N"/>
				<param name="del_cd" type="12" value="" out="N"/>
				<param name="fvd" type="12" value="" out="N"/>
				<param name="n1st_pre_ts_loc_cd" type="12" value="" out="N"/>
				<param name="n1st_pst_ts_loc_cd" type="12" value="" out="N"/>
				<param name="crr_term_cd" type="12" value="" out="N"/>
				<param name="inci_plc_tp_cd" type="12" value="" out="N"/>
				<param name="slan_cd" type="12" value="" out="N"/>
				<param name="clm_cgo_tp_cd" type="12" value="" out="N"/>
				<param name="cgo_clm_tp_cd" type="12" value="" out="N"/>
				<param name="mjr_clm_dmg_lss_cd" type="12" value="" out="N"/>
				<param name="n3rd_labl_pty_cd" type="12" value="" out="N"/>
				<param name="cgo_clm_stl_tp_cd" type="12" value="" out="N"/>
				<param name="from_clmt_usd_amt" type="12" value="" out="N"/>
				<param name="to_clmt_usd_amt" type="12" value="" out="N"/>
				<param name="from_cgo_clm_stl_usd_amt" type="12" value="" out="N"/>
				<param name="to_cgo_clm_stl_usd_amt" type="12" value="" out="N"/>
				<param name="cgo_clm_inci_no" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
