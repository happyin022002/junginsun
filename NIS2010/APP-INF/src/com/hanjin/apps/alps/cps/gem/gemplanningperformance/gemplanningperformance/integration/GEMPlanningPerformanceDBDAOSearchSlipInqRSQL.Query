<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GEMPlanningPerformanceDBDAOSearchSlipInqRSQL">
			<desc><![CDATA[ERP 에서 I/F 받은 전표 정보 조회
2011.01.31 이준범[CHM-201108626-01]
요청사항 : SELPLL- >SELLIC  관련 문제 연관 해소
보완내역 : 조직 변경으로 인한 조직 코드 변경시 과거 데이터를 조회 할 수 있도록
               History Table(GEM_OFC_HIS) 검색하도록 SQL 수정  
2011-02-23 이준범 [CHM-201108800-01]
제목: Split 01-ERP에서 ALPS>GEM으로 AP slip data 송신 시 추가정보 요청
보완: upplier code, Supplier Name, Credit card user name 항목 추가
2011-03-11 이준범 [CHM-201108800-01]
제목: ERP I/F DATA 추가 요청
보완: 1. 법인카드 가맹점 정보 추가 I/F
        2. GEM 수신 메뉴
        - INQUIRY > SLIP INQUIRY
        - 화면상 보이지 않고 DOWNLOAD 시 VANDER NAME 옆에 다운로드

2012.12.14 Ticket ID : CHM-201221037
설계자 : 강환, 개발자 : 원종규
Title : 일부 법인 비용주관팀 로직 변경에 따른 조회(inquiry/Report) 기능 보완 요청
Description : SELPLI에서 승인하는 비용항목 조회시 SELPLI의 산하 조직이 조회되도록 수정 

2014.10.23 이준범 [CHM-201432508-01]
요청사항: [GEM] 결산작업을 위한 데이터 업데이트 지원
보완: SELPLI 하드코딩 부분 삭제 ]]></desc>
			<sql><![CDATA[
SELECT SLP_TJ_NO
      ,SLP_TJ_NO1
      ,SLP_SEQ_NO
      ,SLP_SEQ_NO1
      ,OFC_CD
      ,SUB_OFC_CD
      ,OFC_CO_DIV_CD
      ,GEN_EXPN_CD
      ,ABBR_NM
      ,SUB_GEN_EXPN_CD
      ,SUB_ABBR_NM
      ,TIC_CD
      ,TIC_CD1
      ,SLP_CURR_CD
      ,SLP_CURR_CD1
      ,GL_EFF_DT
      ,GL_EFF_DT1
      ,SLP_AMT
      ,SLP_AMT1
      ,GEN_EXPN_FNL_LOCL_AMT
      ,SLP_PERF_AMT
      ,SLP_DESC
      ,SLP_DESC1
      ,RATIO
      ,RATIO1
      ,TOTAL
      ,ROW_NUM
      ,SLP_VNDR_CD
      ,ACCT_CD
      ,SLP_SPLR_CD
      ,SLP_SPLR_NM
      ,CR_CRD_USR_NM
      ,CRD_SHOP_NM
  FROM (
         SELECT A.SLP_TJ_NO
               ,A.SLP_TJ_NO AS SLP_TJ_NO1
               ,A.SLP_SEQ_NO
               ,A.SLP_SEQ_NO AS SLP_SEQ_NO1
               ,A.OFC_CD
               ,A.SUB_OFC_CD
               ,D.OFC_CO_DIV_CD
               ,A.GEN_EXPN_CD
               #if (${sch_lang} == 'E')
               ,B.ENG_ABBR_NM AS ABBR_NM
               #end
               #if (${sch_lang} == 'K')
               ,B.KRN_ABBR_NM AS ABBR_NM
               #end
               #if (${sch_lang} == '')
               ,'' AS ABBR_NM
               #end 
               ,A.SUB_GEN_EXPN_CD
               ,(
                 SELECT #if (${sch_lang} == 'E')
                        ENG_ABBR_NM ABBR_NM 
                        #end
                        #if (${sch_lang} == 'K')
                        KRN_ABBR_NM ABBR_NM 
                        #end
                        #if (${sch_lang} == '')
                        ''
                        #end
                    FROM GEM_EXPENSE 
                   WHERE GEN_EXPN_CD = A.SUB_GEN_EXPN_CD 
                ) AS SUB_ABBR_NM
               ,B.TIC_CD
               ,B.TIC_CD AS TIC_CD1
               ,DECODE(@[ofc_cur], 'Slip', A.SLP_CURR_CD, 'USD', 'USD', 'KRW', 'KRW' ) AS SLP_CURR_CD
               ,DECODE(@[ofc_cur], 'Slip', A.SLP_CURR_CD, 'USD', 'USD', 'KRW', 'KRW' ) AS SLP_CURR_CD1
               ,A.GL_EFF_DT
               ,A.GL_EFF_DT AS GL_EFF_DT1
               ,DECODE(@[ofc_cur], 'Slip', A.SLP_AMT, 'USD', ( 
                                                               SELECT A.SLP_AMT/USD_LOCL_XCH_RT 
                                                                 FROM GEM_XCH_RT 
                                                                WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                  AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                  AND CURR_CD = A.SLP_CURR_CD
                                                             ), 
                                                      'KRW', (
                                                               SELECT (A.SLP_AMT/USD_LOCL_XCH_RT)*USD_KRW_XCH_RT 
                                                                 FROM GEM_XCH_RT 
                                                                WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                  AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                  AND CURR_CD = A.SLP_CURR_CD 
                                                             )
                ) AS SLP_AMT
               ,DECODE(@[ofc_cur], 'Slip', A.SLP_AMT, 'USD', (
                                                               SELECT A.SLP_AMT/USD_LOCL_XCH_RT 
                                                                 FROM GEM_XCH_RT 
                                                                WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                  AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                  AND CURR_CD = A.SLP_CURR_CD
                                                             ),
                                                      'KRW', (
                                                               SELECT (A.SLP_AMT/USD_LOCL_XCH_RT)*USD_KRW_XCH_RT 
                                                                 FROM GEM_XCH_RT 
                                                                WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                  AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                  AND CURR_CD = A.SLP_CURR_CD
                                                             )
                ) AS SLP_AMT1
               ,DECODE(@[ofc_cur], 'Slip', A.GEN_EXPN_FNL_LOCL_AMT, 'USD', ( 
                                                                             SELECT A.GEN_EXPN_FNL_LOCL_AMT/USD_LOCL_XCH_RT 
                                                                               FROM GEM_XCH_RT 
                                                                              WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                                AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                                AND CURR_CD = A.SLP_CURR_CD
                                                                           ),
                                                                    'KRW', (
                                                                             SELECT (A.GEN_EXPN_FNL_LOCL_AMT/USD_LOCL_XCH_RT)*USD_KRW_XCH_RT 
                                                                               FROM GEM_XCH_RT 
                                                                              WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                                AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                                AND CURR_CD = A.SLP_CURR_CD
                                                                           )
                ) AS GEN_EXPN_FNL_LOCL_AMT
               ,DECODE(@[ofc_cur], 'Slip', A.SLP_PERF_AMT, 'USD', (
                                                                    SELECT A.SLP_PERF_AMT/USD_LOCL_XCH_RT 
                                                                      FROM GEM_XCH_RT 
                                                                     WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                       AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                       AND CURR_CD = A.SLP_CURR_CD
                                                                  ), 
                                                           'KRW', (
                                                                    SELECT (A.SLP_PERF_AMT/USD_LOCL_XCH_RT)*USD_KRW_XCH_RT 
                                                                      FROM GEM_XCH_RT 
                                                                     WHERE ACCT_XCH_RT_YRMON = A.RSLT_YRMON 
                                                                       AND GEN_EXPN_XCH_RT_DIV_CD = 'M' 
                                                                       AND CURR_CD = A.SLP_CURR_CD
                                                                  )
                ) AS SLP_PERF_AMT
               ,A.SLP_DESC
               ,A.SLP_DESC AS SLP_DESC1
               ,TO_NUMBER(ROUND(DECODE(A.GEN_EXPN_FNL_LOCL_AMT,NULL,0,0,0,A.SLP_PERF_AMT/A.GEN_EXPN_FNL_LOCL_AMT)*100,2)) AS RATIO
               ,TO_NUMBER(ROUND(DECODE(A.GEN_EXPN_FNL_LOCL_AMT,NULL,0,0,0,A.SLP_PERF_AMT/A.GEN_EXPN_FNL_LOCL_AMT)*100,2)) AS RATIO1
               ,ROW_NUMBER() OVER(ORDER BY A.SLP_TJ_NO, A.SLP_SEQ_NO, A.OFC_CD, A.SUB_OFC_CD, A.GEN_EXPN_CD, A.SUB_GEN_EXPN_CD) AS ROW_NUM
               ,COUNT(*) OVER() TOTAL
               ,A.ACCT_CD
               ,A.SLP_VNDR_CD
               ,A.SLP_SPLR_CD
               ,A.SLP_SPLR_NM
               ,A.CR_CRD_USR_NM
			   ,A.CRD_SHOP_NM
           FROM GEM_SLP_PERF A
               ,GEM_EXPENSE B
               ,GEM_EXPN_GRP_V C
               ,GEM_OFFICE D
          WHERE A.GEN_EXPN_CD = B.GEN_EXPN_CD(+)
            AND A.GEN_EXPN_CD = C.GEN_EXPN_CD(+)
            AND A.OFC_CD      = D.OFC_CD(+)
            #if (${ofc_co_div_cd} != '')  
            AND D.OFC_CO_DIV_CD = @[ofc_co_div_cd]    
            #end
            #if (${slp_tj_no} != '') 
            AND A.SLP_TJ_NO = @[slp_tj_no]
            #end
            #if (${sch_expense_group} != '') 
            AND C.GEM_EXPN_GRP_CD1 = @[sch_expense_group]
            #end
            AND A.GEN_EXPN_CD BETWEEN DECODE (NVL(@[sch_expense_from], ''), '', '111111', @[sch_expense_from]) AND DECODE (NVL(@[sch_expense_to], ''), '', '999999', @[sch_expense_to])
            #if(${sch_tic_cd} != '')
	    	AND B.TIC_CD = @[sch_tic_cd]
            #end
            AND A.RSLT_YRMON BETWEEN @[from_rslt_yrmon] AND @[to_rslt_yrmon]
            #if(${auth_flg} == 'YNYN')
            AND ( A.OFC_CD IN (
                                SELECT OFC_CD      
                                  FROM GEM_OFC_HIS
                            START WITH OFC_CD IN (@[login_office])
                           CONNECT BY PRIOR OFC_CD = BFR_OFC_CD 
                               )
                 OR C.TIC_CD = @[login_office] 
                )   
            #elseif(${auth_flg} == 'YYYN')
             AND ( A.OFC_CD IN ( SELECT OFC_CD      
                                        FROM GEM_OFC_HIS
                                  START WITH OFC_CD IN  ( SELECT L_4 
                                                            FROM GEM_OFC_LEVEL_V
                                                           WHERE L_3 = @[login_office] )
                       CONNECT BY PRIOR OFC_CD = BFR_OFC_CD ) 
                      OR C.TIC_CD = @[login_office] )
#end
#if(${sls_ofc_div_cd} != '' || ${ofc_expn_cd} != '')
   AND A.OFC_CD in (
	SELECT OFC_CD      
  	FROM GEM_OFC_HIS
	START WITH OFC_CD IN (    
        SELECT DISTINCT L_4 CODE
          FROM GEM_OFC_LEVEL_V
         WHERE 1=1
		   #if(${sls_ofc_div_cd} != '')
           AND RGN_OFC_FLG LIKE @[sls_ofc_div_cd]||'%'
		   #end		
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} != '') 
		   AND L_4 LIKE @[ofc_lvl3]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} == '') 
		   AND L_3 LIKE @[ofc_lvl2]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} == '' && ${ofc_lvl3} == '') 
		   AND L_2 LIKE @[ofc_lvl1]||'%' 
		   #end
           #if (${ofc_expn_cd} != '') 
		   AND L_4 LIKE @[ofc_expn_cd]||'%' 
           #end
	)
	CONNECT BY PRIOR OFC_CD = BFR_OFC_CD
    )
#end
)
#if (${start_page} != '') 
WHERE ROW_NUM BETWEEN ${start_page} AND ${end_page}
#end			]]></sql>
			<params>
				<param name="ofc_cur" type="12" value="" out="N"/>
				<param name="ofc_co_div_cd" type="12" value="" out="N"/>
				<param name="slp_tj_no" type="12" value="" out="N"/>
				<param name="sch_expense_group" type="12" value="" out="N"/>
				<param name="sch_expense_from" type="12" value="" out="N"/>
				<param name="sch_expense_to" type="12" value="" out="N"/>
				<param name="sch_tic_cd" type="12" value="" out="N"/>
				<param name="from_rslt_yrmon" type="12" value="" out="N"/>
				<param name="to_rslt_yrmon" type="12" value="" out="N"/>
				<param name="login_office" type="12" value="" out="N"/>
				<param name="sls_ofc_div_cd" type="12" value="" out="N"/>
				<param name="ofc_lvl3" type="12" value="" out="N"/>
				<param name="ofc_lvl2" type="12" value="" out="N"/>
				<param name="ofc_lvl1" type="12" value="" out="N"/>
				<param name="ofc_expn_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
