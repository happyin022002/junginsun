<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GEMMasterCodeMgtDBDAOSearchExchangeRateInqRSQL">
			<desc><![CDATA[환율조회(Foreign Exchange Rate Inquiry)]]></desc>
			<sql><![CDATA[
SELECT A.*
     , COUNT(*) OVER (PARTITION BY CURR_CD ORDER BY CURR_CD) ROW_CNT
FROM (
SELECT '1' sort1, 'Initial' sort_nm 
     , Y.COL1 curr_cd
     , SUM(DECODE(X.RID,'1', Y.COL2)) col_jan
     , SUM(DECODE(X.RID,'2', Y.COL2)) col_feb
     , SUM(DECODE(X.RID,'3', Y.COL2)) col_mar
     , SUM(DECODE(X.RID,'4', Y.COL2)) col_apr
     , SUM(DECODE(X.RID,'5', Y.COL2)) col_may
     , SUM(DECODE(X.RID,'6', Y.COL2)) col_jun
     , SUM(DECODE(X.RID,'7', Y.COL2)) col_jul
     , SUM(DECODE(X.RID,'8', Y.COL2)) col_aug
     , SUM(DECODE(X.RID,'9', Y.COL2)) col_sep
     , SUM(DECODE(X.RID,'10', Y.COL2)) col_oct
     , SUM(DECODE(X.RID,'11', Y.COL2)) col_nov
     , SUM(DECODE(X.RID,'12', Y.COL2)) col_dec
  FROM (
        SELECT LEVEL RID FROM DUAL CONNECT BY LEVEL < 13
    ) X, (     
        SELECT A.CURR_CD COL1
             , A.USD_LOCL_XCH_RT COL2
             , ROW_NUMBER() OVER (PARTITION BY A.CURR_CD ORDER BY A.ACCT_XCH_RT_YRMON) RID
          FROM GEM_XCH_RT A, GEM_XCH_RT B
           WHERE A.GEN_EXPN_XCH_RT_DIV_CD = 'I'
           AND A.ACCT_XCH_RT_YRMON LIKE @[year]||'00%'
           AND A.DELT_FLG = 'N'
           AND A.CURR_CD = B.CURR_CD           
     ) Y
 WHERE X.RID = Y.RID
   #if(${curr_cd} != '')
   AND Y.COL1 IN (${curr_cd})
   #end
GROUP BY Y.COL1
UNION ALL
SELECT '2' sort1, 'USD(1):LCL' sort_nm 
     , Y.COL1 curr_cd
     , SUM(DECODE(X.RID,'1', Y.COL2)) col_jan
     , SUM(DECODE(X.RID,'2', Y.COL2)) col_feb
     , SUM(DECODE(X.RID,'3', Y.COL2)) col_mar
     , SUM(DECODE(X.RID,'4', Y.COL2)) col_apr
     , SUM(DECODE(X.RID,'5', Y.COL2)) col_may
     , SUM(DECODE(X.RID,'6', Y.COL2)) col_jun
     , SUM(DECODE(X.RID,'7', Y.COL2)) col_jul
     , SUM(DECODE(X.RID,'8', Y.COL2)) col_aug
     , SUM(DECODE(X.RID,'9', Y.COL2)) col_sep
     , SUM(DECODE(X.RID,'10', Y.COL2)) col_oct
     , SUM(DECODE(X.RID,'11', Y.COL2)) col_nov
     , SUM(DECODE(X.RID,'12', Y.COL2)) col_dec
  FROM (
        SELECT LEVEL RID FROM DUAL CONNECT BY LEVEL < 13
    ) X, (    
        SELECT B.CURR_CD COL1
             , B.USD_LOCL_XCH_RT COL2
             , ROW_NUMBER() OVER (PARTITION BY B.CURR_CD ORDER BY B.ACCT_XCH_RT_YRMON) RID
          FROM GEM_XCH_RT A, GEM_XCH_RT B
         WHERE B.GEN_EXPN_XCH_RT_DIV_CD = 'M'
           AND B.ACCT_XCH_RT_YRMON LIKE @[year]||'%'
           AND B.DELT_FLG = 'N'
           AND A.GEN_EXPN_XCH_RT_DIV_CD = 'I'
           AND A.ACCT_XCH_RT_YRMON LIKE @[year]||'00%'
           AND A.DELT_FLG = 'N'
           AND A.CURR_CD = B.CURR_CD           
     ) Y
 WHERE X.RID = Y.RID
   #if(${curr_cd} != '')
   AND Y.COL1 IN (${curr_cd})
   #end
GROUP BY Y.COL1
UNION ALL
SELECT '3' sort1, 'LCL:KRW' sort_nm
     , Y.COL1 curr_cd
     , SUM(DECODE(X.RID,'1', Y.COL2)) col_jan
     , SUM(DECODE(X.RID,'2', Y.COL2)) col_feb
     , SUM(DECODE(X.RID,'3', Y.COL2)) col_mar
     , SUM(DECODE(X.RID,'4', Y.COL2)) col_apr
     , SUM(DECODE(X.RID,'5', Y.COL2)) col_may
     , SUM(DECODE(X.RID,'6', Y.COL2)) col_jun
     , SUM(DECODE(X.RID,'7', Y.COL2)) col_jul
     , SUM(DECODE(X.RID,'8', Y.COL2)) col_aug
     , SUM(DECODE(X.RID,'9', Y.COL2)) col_sep
     , SUM(DECODE(X.RID,'10', Y.COL2)) col_oct
     , SUM(DECODE(X.RID,'11', Y.COL2)) col_nov
     , SUM(DECODE(X.RID,'12', Y.COL2)) col_dec
  FROM (
        SELECT LEVEL RID FROM DUAL CONNECT BY LEVEL < 13
    ) X, (    
        SELECT B.CURR_CD COL1
             , B.LOCL_KRW_XCH_RT COL2
             , ROW_NUMBER() OVER (PARTITION BY B.CURR_CD ORDER BY B.ACCT_XCH_RT_YRMON) RID
          FROM GEM_XCH_RT A, GEM_XCH_RT B
         WHERE B.GEN_EXPN_XCH_RT_DIV_CD = 'M'
           AND B.ACCT_XCH_RT_YRMON LIKE @[year]||'%'
           AND B.DELT_FLG = 'N'
           AND A.GEN_EXPN_XCH_RT_DIV_CD = 'I'
           AND A.ACCT_XCH_RT_YRMON LIKE @[year]||'00%'
           AND A.DELT_FLG = 'N'
           AND A.CURR_CD = B.CURR_CD           
     ) Y
 WHERE X.RID = Y.RID
   #if(${curr_cd} != '')
   AND Y.COL1 IN (${curr_cd})
   #end
GROUP BY Y.COL1
) A
ORDER BY CURR_CD, SORT1			]]></sql>
			<params>
				<param name="year" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
