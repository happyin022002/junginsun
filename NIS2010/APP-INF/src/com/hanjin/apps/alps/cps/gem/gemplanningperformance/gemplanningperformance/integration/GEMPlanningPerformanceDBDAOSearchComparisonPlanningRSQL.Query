<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GEMPlanningPerformanceDBDAOSearchComparisonPlanningRSQL">
			<desc><![CDATA[수립된 비용계획에 대한 요청 정보를 승인단계별로 비교 조회한다
2011.01.31 이준범[CHM-201108626-01]
요청사항 : SELPLL- >SELLIC  관련 문제 연관 해소
보완내역 : 조직 변경으로 인한 조직 코드 변경시 과거 데이터를 조회 할 수 있도록
               History Table(GEM_OFC_HIS) 검색하도록 SQL 수정  
2014.10.23 이준범 [CHM-201432508-01]
요청사항: [GEM] 결산작업을 위한 데이터 업데이트 지원
보완: SELPLI 하드코딩 부분 삭제 ]]></desc>
			<sql><![CDATA[
SELECT GEN_EXPN_RQST_NO
      ,GEN_EXPN_CD
      ,GEN_EXPN_ITM_NO
	  ,GEN_EXPN_RQST_SEQ
      ,GEN_EXPN_TRNS_DIV_CD
      ,FM_OFC_CD
      ,TO_OFC_CD
      ,FM_GEN_EXPN_CD
      ,TO_GEN_EXPN_CD
      ,FM_ABBR_NM
      ,TO_ABBR_NM
      ,PLN_YR
      ,FM_LOCL_CURR_CD
      ,TO_LOCL_CURR_CD
	  ,FM_RQST_UT_VAL
	  ,TO_RQST_UT_VAL                   
      ,FM_RQ_AMT
      ,TO_RQ_AMT                 
      ,FM_HQ_AMT
      ,TO_HQ_AMT     
      ,FM_TC_AMT
      ,TO_TC_AMT   
      ,FM_CO_AMT
      ,TO_CO_AMT 
      ,(FM_RQ_AMT - FM_CO_AMT ) FM_DIFF
      ,(TO_RQ_AMT - TO_CO_AMT ) TO_DIFF
  FROM (
        SELECT GEN_EXPN_RQST_NO
              ,NVL(FM_GEN_EXPN_CD, TO_GEN_EXPN_CD) GEN_EXPN_CD
              ,NVL(FM_GEN_EXPN_ITM_NO, TO_GEN_EXPN_ITM_NO) GEN_EXPN_ITM_NO
              ,GEN_EXPN_RQST_SEQ
              ,GEN_EXPN_TRNS_DIV_CD
              ,FM_OFC_CD
              ,TO_OFC_CD
              ,FM_GEN_EXPN_CD
              ,TO_GEN_EXPN_CD
              ,DECODE(@[sch_lang], 'K', FM_KRN_ABBR_NM
                         , 'E', FM_ENG_ABBR_NM ) FM_ABBR_NM
              ,DECODE(@[sch_lang], 'K', TO_KRN_ABBR_NM
                         , 'E', TO_ENG_ABBR_NM ) TO_ABBR_NM
              ,PLN_YR
              ,DECODE(@[ofc_cur], 'LCL', FM_LOCL_CURR_CD
                           , 'USD', DECODE(FM_LOCL_CURR_CD,NULL,NULL,'USD')
                           , 'KRW', DECODE(FM_LOCL_CURR_CD,NULL,NULL,'KRW') ) FM_LOCL_CURR_CD
              ,DECODE(@[ofc_cur], 'LCL', TO_LOCL_CURR_CD
                           , 'USD', DECODE(TO_LOCL_CURR_CD,NULL,NULL,'USD')
                           , 'KRW', DECODE(TO_LOCL_CURR_CD,NULL,NULL,'KRW') ) TO_LOCL_CURR_CD  
              ,DECODE(@[ofc_cur], 'LCL', FM_RQST_UT_VAL, 'KRW', DECODE(FM_RQST_UT_VAL,NULL,NULL,'1000'), 'USD', DECODE(FM_RQST_UT_VAL,NULL,NULL,'1') ) FM_RQST_UT_VAL  
			  ,DECODE(@[ofc_cur], 'LCL', TO_RQST_UT_VAL, 'KRW', DECODE(TO_RQST_UT_VAL,NULL,NULL,'1000'), 'USD', DECODE(TO_RQST_UT_VAL,NULL,NULL,'1') ) TO_RQST_UT_VAL  
              ,DECODE(@[ofc_cur], 'LCL', FM_RQ_AMT
                           , 'USD', (FM_RQ_AMT*FM_RQST_UT_VAL)/FM_USD_LOCL_XCH_RT
                           , 'KRW', (((FM_RQ_AMT*FM_RQST_UT_VAL)/1000)/FM_USD_LOCL_XCH_RT)*FM_USD_KRW_XCH_RT ) FM_RQ_AMT
              ,DECODE(@[ofc_cur], 'LCL', TO_RQ_AMT
                           , 'USD', (TO_RQ_AMT*TO_RQST_UT_VAL)/TO_USD_LOCL_XCH_RT
                           , 'KRW', (((TO_RQ_AMT*TO_RQST_UT_VAL)/1000)/TO_USD_LOCL_XCH_RT)*TO_USD_KRW_XCH_RT ) TO_RQ_AMT                 
              ,DECODE(@[ofc_cur], 'LCL', FM_HQ_AMT
                           , 'USD', (FM_HQ_AMT*FM_RQST_UT_VAL)/FM_USD_LOCL_XCH_RT
                           , 'KRW', (((FM_HQ_AMT*FM_RQST_UT_VAL)/1000)/FM_USD_LOCL_XCH_RT)*FM_USD_KRW_XCH_RT ) FM_HQ_AMT
              ,DECODE(@[ofc_cur], 'LCL', TO_HQ_AMT
                           , 'USD', (TO_HQ_AMT*TO_RQST_UT_VAL)/TO_USD_LOCL_XCH_RT
                           , 'KRW', (((TO_HQ_AMT*TO_RQST_UT_VAL)/1000)/TO_USD_LOCL_XCH_RT)*TO_USD_KRW_XCH_RT ) TO_HQ_AMT     
              ,DECODE(@[ofc_cur], 'LCL', FM_TC_AMT
                           , 'USD', (FM_TC_AMT*FM_RQST_UT_VAL)/FM_USD_LOCL_XCH_RT
                           , 'KRW', (((FM_TC_AMT*FM_RQST_UT_VAL)/1000)/FM_USD_LOCL_XCH_RT)*FM_USD_KRW_XCH_RT ) FM_TC_AMT
              ,DECODE(@[ofc_cur], 'LCL', TO_TC_AMT
                           , 'USD', (TO_TC_AMT*TO_RQST_UT_VAL)/TO_USD_LOCL_XCH_RT
                           , 'KRW', (((TO_TC_AMT*TO_RQST_UT_VAL)/1000)/TO_USD_LOCL_XCH_RT)*TO_USD_KRW_XCH_RT ) TO_TC_AMT   
              ,DECODE(@[ofc_cur], 'LCL', FM_CO_AMT
                           , 'USD', (FM_CO_AMT*FM_RQST_UT_VAL)/FM_USD_LOCL_XCH_RT
                           , 'KRW', (((FM_CO_AMT*FM_RQST_UT_VAL)/1000)/FM_USD_LOCL_XCH_RT)*FM_USD_KRW_XCH_RT ) FM_CO_AMT
              ,DECODE(@[ofc_cur], 'LCL', TO_CO_AMT
                           , 'USD', (TO_CO_AMT*TO_RQST_UT_VAL)/TO_USD_LOCL_XCH_RT
                           , 'KRW', (((TO_CO_AMT*TO_RQST_UT_VAL)/1000)/TO_USD_LOCL_XCH_RT)*TO_USD_KRW_XCH_RT ) TO_CO_AMT                                                         
          FROM (
                SELECT SUBSTR(A.PLN_YRMON,1,4) PLN_YR
                      ,C.GEN_EXPN_RQST_NO
                      ,C.GEN_EXPN_RQST_SEQ
                      ,C.GEN_EXPN_TRNS_DIV_CD
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', C.OFC_CD)) FM_OFC_CD
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', C.OFC_CD)) TO_OFC_CD
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', C.GEN_EXPN_CD)) FM_GEN_EXPN_CD
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', C.GEN_EXPN_CD)) TO_GEN_EXPN_CD
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', C.GEN_EXPN_ITM_NO)) FM_GEN_EXPN_ITM_NO
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', C.GEN_EXPN_ITM_NO)) TO_GEN_EXPN_ITM_NO
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', D.KRN_ABBR_NM)) FM_KRN_ABBR_NM
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', D.KRN_ABBR_NM)) TO_KRN_ABBR_NM
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', D.ENG_ABBR_NM)) FM_ENG_ABBR_NM
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', D.ENG_ABBR_NM)) TO_ENG_ABBR_NM
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', E.LOCL_CURR_CD)) FM_LOCL_CURR_CD
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', E.LOCL_CURR_CD)) TO_LOCL_CURR_CD    
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', E.RQST_UT_VAL)) FM_RQST_UT_VAL
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', E.RQST_UT_VAL)) TO_RQST_UT_VAL              
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', F.USD_LOCL_XCH_RT)) FM_USD_LOCL_XCH_RT
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', F.USD_LOCL_XCH_RT)) TO_USD_LOCL_XCH_RT
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'F', F.USD_KRW_XCH_RT)) FM_USD_KRW_XCH_RT
                      ,MAX(DECODE(C.GEN_EXPN_TRNS_DIV_CD, 'T', F.USD_KRW_XCH_RT)) TO_USD_KRW_XCH_RT            
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'F' AND C.GEN_EXPN_APRO_STEP_CD = 'RQ' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) FM_RQ_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'T' AND C.GEN_EXPN_APRO_STEP_CD = 'RQ' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) TO_RQ_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'F' AND C.GEN_EXPN_APRO_STEP_CD = 'HQ' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) FM_HQ_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'T' AND C.GEN_EXPN_APRO_STEP_CD = 'HQ' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) TO_HQ_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'F' AND C.GEN_EXPN_APRO_STEP_CD = 'TC' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) FM_TC_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'T' AND C.GEN_EXPN_APRO_STEP_CD = 'TC' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) TO_TC_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'F' AND C.GEN_EXPN_APRO_STEP_CD = 'CO' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) FM_CO_AMT
                      ,SUM(CASE WHEN C.GEN_EXPN_TRNS_DIV_CD = 'T' AND C.GEN_EXPN_APRO_STEP_CD = 'CO' THEN C.JAN_AMT + C.FEB_AMT + C.MAR_AMT + C.APR_AMT + C.MAY_AMT + C.JUN_AMT + C.JUL_AMT + C.AUG_AMT + C.SEP_AMT + C.OCT_AMT + C.NOV_AMT + C.DEC_AMT ELSE 0 END) TO_CO_AMT
                  FROM GEM_REQUEST A
                      ,GEM_ITEM B
                      ,GEM_APRO_STEP C
                      ,GEM_EXPN_GRP_V D
                      ,GEM_OFFICE E
                      ,GEM_XCH_RT F
		      		  ,GEM_EXPENSE G
                 WHERE 1 = 1
		   #if(${rslt_yrmon} != '')
		   AND A.PLN_YRMON LIKE @[rslt_yrmon]||'%'
		   #end
		   #if (${gen_expn_rqst_tp_cd} == 'EI') 
		   AND A.GEN_EXPN_RQST_TP_CD = 'EI'
		   #else 
		   AND A.GEN_EXPN_RQST_TP_CD IN ('ET','EA')
		   #end
                   AND A.GEN_EXPN_RQST_NO = B.GEN_EXPN_RQST_NO
                   AND B.CRNT_GEN_EXPN_APRO_STEP_CD = 'CO'
                   AND B.CRNT_GEN_EXPN_APSTS_CD = 'AP'
                   AND B.GEN_EXPN_RQST_NO = C.GEN_EXPN_RQST_NO
                   AND B.OFC_CD = C.OFC_CD
                   AND B.GEN_EXPN_CD = C.GEN_EXPN_CD
                   AND B.GEN_EXPN_ITM_NO = C.GEN_EXPN_ITM_NO
                   AND B.GEN_EXPN_TRNS_DIV_CD = C.GEN_EXPN_TRNS_DIV_CD
                   AND B.GEN_EXPN_RQST_SEQ = C.GEN_EXPN_RQST_SEQ    
                   AND B.GEN_EXPN_CD = D.GEN_EXPN_CD  
		   AND C.GEN_EXPN_CD = G.GEN_EXPN_CD(+)
		   #if (${sch_expense_group} != '') 
		   AND D.GEM_EXPN_GRP_CD1 = @[sch_expense_group]
		   #end
		   AND C.GEN_EXPN_CD BETWEEN DECODE (@[sch_expense_from], '', '111111', @[sch_expense_from]) AND DECODE (@[sch_expense_to], '', '999999', @[sch_expense_to])
           #if(${sch_tic_cd} != '')
           AND G.TIC_CD = @[sch_tic_cd]
		   #end
		   #if(${ofc_co} == 'O')
		   AND E.OFC_CO_DIV_CD = 'O'
		   #end
		   #if(${ofc_co} == 'S')
		   AND E.OFC_CO_DIV_CD = 'S'
		   #end
		   AND B.OFC_CD = E.OFC_CD
           AND F.ACCT_XCH_RT_YRMON = SUBSTR(@[rslt_yrmon],1,4)||'00'
           AND E.LOCL_CURR_CD = F.CURR_CD
           AND F.GEN_EXPN_XCH_RT_DIV_CD = 'I'
#if(${auth_flg} == 'YYNN')
           AND ( B.OFC_CD IN ( SELECT OFC_CD      
                                 FROM GEM_OFC_HIS
                           START WITH OFC_CD IN  ( SELECT L_4 
                                                     FROM GEM_OFC_LEVEL_V 
                                                    WHERE L_3 = @[login_office] ) 
                     CONNECT BY PRIOR OFC_CD = BFR_OFC_CD ))
#elseif(${auth_flg} == 'YNYN')
           AND (B.OFC_CD IN (SELECT OFC_CD      
                               FROM GEM_OFC_HIS
                         START WITH OFC_CD IN (@[login_office])
                   CONNECT BY PRIOR OFC_CD = BFR_OFC_CD )
               OR G.TIC_CD = @[login_office] )
#elseif(${auth_flg} == 'YYYN')
		   AND ( B.OFC_CD IN ( SELECT OFC_CD      
                                 FROM GEM_OFC_HIS
                           START WITH OFC_CD IN  ( SELECT L_4 
                                                     FROM GEM_OFC_LEVEL_V
                                                    WHERE L_3 = @[login_office] )
                     CONNECT BY PRIOR OFC_CD = BFR_OFC_CD ) 
               OR G.TIC_CD = @[login_office] )
#end
                 GROUP BY SUBSTR(A.PLN_YRMON,1,4)
                         ,C.GEN_EXPN_RQST_NO
                         ,C.GEN_EXPN_RQST_SEQ
                         ,C.GEN_EXPN_TRNS_DIV_CD
               ) 
       )
#if(${sls_ofc_div_cd} != '' || ${ofc_expn_cd} != '')
   WHERE ( FM_OFC_CD IN (
	SELECT OFC_CD      
  	FROM GEM_OFC_HIS
	START WITH OFC_CD IN (   
        SELECT DISTINCT L_4 CODE
          FROM GEM_OFC_LEVEL_V
         WHERE 1=1
		   #if(${sls_ofc_div_cd} != '')
           AND RGN_OFC_FLG LIKE @[sls_ofc_div_cd]||'%'
		   #end		
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} != '') 
		   AND L_4 LIKE @[ofc_lvl3]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} == '') 
		   AND L_3 LIKE @[ofc_lvl2]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} == '' && ${ofc_lvl3} == '') 
		   AND L_2 LIKE @[ofc_lvl1]||'%' 
		   #end
           #if (${ofc_expn_cd} != '') 
		   AND L_4 LIKE @[ofc_expn_cd]||'%' 
           #end
		)
	CONNECT BY PRIOR OFC_CD = BFR_OFC_CD
    )
        OR TO_OFC_CD IN (
	SELECT OFC_CD      
  	FROM GEM_OFC_HIS
	START WITH OFC_CD IN (   
        SELECT DISTINCT L_4 CODE
          FROM GEM_OFC_LEVEL_V
         WHERE 1=1
		   #if(${sls_ofc_div_cd} != '')
           AND RGN_OFC_FLG LIKE @[sls_ofc_div_cd]||'%'
		   #end		
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} != '') 
		   AND L_4 LIKE @[ofc_lvl3]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} == '') 
		   AND L_3 LIKE @[ofc_lvl2]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} == '' && ${ofc_lvl3} == '') 
		   AND L_2 LIKE @[ofc_lvl1]||'%' 
		   #end
		  
           #if (${ofc_expn_cd} != '') 
		   AND L_4 LIKE @[ofc_expn_cd]||'%' 
           #end
		)
	CONNECT BY PRIOR OFC_CD = BFR_OFC_CD
    ) )
#end
 ORDER BY FM_OFC_CD||TO_OFC_CD
         ,FM_GEN_EXPN_CD||TO_GEN_EXPN_CD
         ,GEN_EXPN_TRNS_DIV_CD			]]></sql>
			<params>
				<param name="sch_lang" type="12" value="" out="N"/>
				<param name="ofc_cur" type="12" value="" out="N"/>
				<param name="rslt_yrmon" type="12" value="" out="N"/>
				<param name="sch_expense_group" type="12" value="" out="N"/>
				<param name="sch_expense_from" type="12" value="" out="N"/>
				<param name="sch_expense_to" type="12" value="" out="N"/>
				<param name="sch_tic_cd" type="12" value="" out="N"/>
				<param name="login_office" type="12" value="" out="N"/>
				<param name="sls_ofc_div_cd" type="12" value="" out="N"/>
				<param name="ofc_lvl3" type="12" value="" out="N"/>
				<param name="ofc_lvl2" type="12" value="" out="N"/>
				<param name="ofc_lvl1" type="12" value="" out="N"/>
				<param name="ofc_expn_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
