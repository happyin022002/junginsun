<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="GEMPlanningPerformanceDBDAOSearchPlanningPerformanceRSQL">
			<desc><![CDATA[확정된 비용계획과 비용실적 정보 조회
2011.01.31 이준범[CHM-201108626-01]
요청사항 : SELPLL- >SELLIC  관련 문제 연관 해소
보완내역 : 조직 변경으로 인한 조직 코드 변경시 과거 데이터를 조회 할 수 있도록
               History Table(GEM_OFC_HIS) 검색하도록 SQL 수정  

Ticket ID : CHM-201221037, 2012.11.14
설계자 : 강환
개발자 : 원종규
Title : 일부 법인 비용주관팀 로직 변경에 따른 조회(inquiry/Report) 기능 보완 요청
Description : 터미널, 물류_BU 산하 법인의 비용주관팀 심의/조정 기능이 기존 각 비용주관팀(TIC)에서 SELPLI로 변경됨에 따라
               ALPS GEM 시스템의 비용주관팀 조정
2014.10.23 이준범 [CHM-201432508-01]
요청사항: [GEM] 결산작업을 위한 데이터 업데이트 지원
보완: SELPLI 하드코딩 부분 삭제 ]]></desc>
			<sql><![CDATA[
SELECT OFC_CD, GEN_EXPN_CD, OFC_CO_DIV_CD, ABBR_NM, LOCL_CURR_CD, RQST_UT_VAL, YEAR_ASS_EXP, MON_ASS_EXP, MON_PERF, RATIO, YTD_ASS_EXP, YTD_PERF, RATIO1, DIFF, GEN_EXPN_OVR_RTO_RSN, RSLT_YRMON
FROM
(SELECT A.OFC_CD
      ,A.GEN_EXPN_CD
	  ,A.OFC_CO_DIV_CD
      ,DECODE(@[sch_lang], 'K', C.KRN_ABBR_NM
                 , 'E', C.ENG_ABBR_NM ) ABBR_NM
	  ,DECODE(@[ofc_cur], 'LCL', A.LOCL_CURR_CD, 'KRW', 'KRW', 'USD', 'USD' ) LOCL_CURR_CD
      ,DECODE(@[ofc_cur], 'LCL', A.RQST_UT_VAL, 'KRW', '1000', 'USD', '1' ) RQST_UT_VAL
      ,A.YEAR_ASS_EXP
      ,A.MON_ASS_EXP MON_ASS_EXP
      ,A.MON_PERF MON_PERF
      ,DECODE(A.MON_ASS_EXP, 0, 0, (A.MON_PERF/A.MON_ASS_EXP)*100) RATIO      
      ,A.YTD_ASS_EXP YTD_ASS_EXP
      ,A.YTD_PERF YTD_PERF
      ,DECODE(A.YTD_ASS_EXP, 0, 0, (A.YTD_PERF/A.YTD_ASS_EXP)*100) RATIO1
      ,(A.YTD_ASS_EXP - A.YTD_PERF) DIFF
      ,GEN_EXPN_OVR_RTO_RSN AS GEN_EXPN_OVR_RTO_RSN
      ,DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) AS RSLT_YRMON
  FROM (
        SELECT A.OFC_CD
              ,A.GEN_EXPN_CD
              ,A.OFC_CO_DIV_CD
              ,A.LOCL_CURR_CD
              ,A.RQST_UT_VAL      
              ,SUM(DECODE(@[ofc_cur], 'LCL', A.YEAR_ASS_EXP/A.RQST_UT_VAL
                               , 'USD', A.YEAR_ASS_EXP/B.USD_LOCL_XCH_RT
                               , 'KRW', ((A.YEAR_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) YEAR_ASS_EXP
              ,SUM(DECODE(@[ofc_cur], 'LCL', A.MON_ASS_EXP/A.RQST_UT_VAL
                               , 'USD', A.MON_ASS_EXP/B.USD_LOCL_XCH_RT
                               , 'KRW', ((A.MON_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) MON_ASS_EXP      
              ,SUM(DECODE(@[ofc_cur], 'LCL', A.MON_PERF/A.RQST_UT_VAL
                               , 'USD', A.MON_PERF/C.USD_LOCL_XCH_RT
                               , 'KRW', ((A.MON_PERF/1000)/C.USD_LOCL_XCH_RT)*C.USD_KRW_XCH_RT )) MON_PERF
              ,SUM(DECODE(@[ofc_cur], 'LCL', A.YTD_ASS_EXP/A.RQST_UT_VAL
                               , 'USD', A.YTD_ASS_EXP/B.USD_LOCL_XCH_RT
                               , 'KRW', ((A.YTD_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) YTD_ASS_EXP                       
              ,SUM(DECODE(@[ofc_cur], 'LCL', A.YTD_PERF/A.RQST_UT_VAL
                               , 'USD', A.YTD_PERF/C.USD_LOCL_XCH_RT
                               , 'KRW', ((A.YTD_PERF/1000)/C.USD_LOCL_XCH_RT)*C.USD_KRW_XCH_RT )) YTD_PERF
	      ,(SELECT MAX(GEN_EXPN_OVR_RTO_RSN) FROM GEM_RSLT_SMRY WHERE RSLT_YRMON = DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) AND OFC_CD = A.OFC_CD AND A.GEN_EXPN_CD = GEN_EXPN_CD) GEN_EXPN_OVR_RTO_RSN
          FROM (
                SELECT A.OFC_CD
                      ,A.OFC_CO_DIV_CD
                      ,B.LOCL_CURR_CD
                      ,B.RQST_UT_VAL
                      ,A.GEN_EXPN_CD
                      ,A.RSLT_YRMON
                      ,A.GEN_EXPN_INIT_AMT + A.GEN_EXPN_ADD_AMT + A.GEN_EXPN_TRNS_AMT YEAR_ASS_EXP
                      ,CASE WHEN A.RSLT_YRMON BETWEEN DECODE(@[perf_div],'Y',@[from_closing_date],@[from_rslt_yrmon]) AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN (A.GEN_EXPN_INIT_AMT + A.GEN_EXPN_ADD_AMT + A.GEN_EXPN_TRNS_AMT) 
                            ELSE 0                                                 
                        END MON_ASS_EXP
                      ,CASE WHEN A.RSLT_YRMON BETWEEN DECODE(@[perf_div],'Y',@[from_closing_date],@[from_rslt_yrmon]) AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN A.SLP_PERF_AMT
                            ELSE 0
                        END MON_PERF                                                 
                      ,CASE WHEN A.RSLT_YRMON BETWEEN SUBSTR(@[from_rslt_yrmon], 1, 4)||'01' AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN (A.GEN_EXPN_INIT_AMT + A.GEN_EXPN_ADD_AMT + A.GEN_EXPN_TRNS_AMT) 
                            ELSE 0
                        END YTD_ASS_EXP
                      ,CASE WHEN A.RSLT_YRMON BETWEEN SUBSTR(@[from_rslt_yrmon], 1, 4)||'01' AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN A.SLP_PERF_AMT
                            ELSE 0
                        END YTD_PERF
                    FROM GEM_RSLT_SMRY A
                      ,GEM_OFFICE B
                    WHERE A.RSLT_YRMON LIKE SUBSTR(@[from_rslt_yrmon], 1, 4)||'%'
                    AND A.GEN_EXPN_CD BETWEEN DECODE (@[sch_expense_from], '', '111111', @[sch_expense_from]) AND DECODE (@[sch_expense_to], '', '999999', @[sch_expense_to]) 
                    AND A.OFC_CD = B.OFC_CD
               ) A
              ,(
                SELECT B.YRMON
                      ,A.CURR_CD
                      ,A.USD_LOCL_XCH_RT
                      ,A.LOCL_KRW_XCH_RT
                      ,A.USD_KRW_XCH_RT
                  FROM GEM_XCH_RT A
                      ,(
                        SELECT SUBSTR(@[from_rslt_yrmon], 1, 4)||TRIM(TO_CHAR(ROWNUM,'00')) YRMON
                          FROM DUAL 
                       CONNECT BY LEVEL <= 12
                       ) B
                 WHERE A.ACCT_XCH_RT_YRMON = SUBSTR(@[from_rslt_yrmon], 1, 4)||'00'
                   AND A.GEN_EXPN_XCH_RT_DIV_CD = 'I'
                   AND A.DELT_FLG = 'N'
               ) B
              ,GEM_XCH_RT C      
         WHERE A.RSLT_YRMON   = B.YRMON
           AND A.LOCL_CURR_CD = B.CURR_CD
           AND A.RSLT_YRMON   = C.ACCT_XCH_RT_YRMON(+)
           AND A.LOCL_CURR_CD = C.CURR_CD(+)
           AND C.GEN_EXPN_XCH_RT_DIV_CD(+) = 'M'
           AND C.DELT_FLG(+) = 'N'
         GROUP BY A.OFC_CD
                 ,A.GEN_EXPN_CD
                 ,A.OFC_CO_DIV_CD
                 ,A.LOCL_CURR_CD
                 ,A.RQST_UT_VAL         
       ) A,
      GEM_OFFICE B, GEM_EXPENSE C, GEM_EXPN_GRP_V D
    WHERE A.OFC_CD = B.OFC_CD
	AND A.GEN_EXPN_CD = C.GEN_EXPN_CD
	AND A.GEN_EXPN_CD = D.GEN_EXPN_CD
	#if (${sch_expense_group} != '') 
	AND D.GEM_EXPN_GRP_CD1 = @[sch_expense_group]
	#end
	#if(${sch_tic_cd} != '')
	    	AND C.TIC_CD = @[sch_tic_cd]
	#end 
	#if(${ofc_co} == 'O')
	AND A.OFC_CO_DIV_CD = 'O'
	#end
	#if(${ofc_co} == 'S')
	AND A.OFC_CO_DIV_CD = 'S'
	#end

#if(${auth_flg} == 'YNYN')  
-- (YNYN) 일때 -- 비용주관팀           
	     AND ( A.OFC_CD IN (SELECT OFC_CD      
	                          FROM GEM_OFC_HIS
	                    START WITH OFC_CD IN (@[login_office])
	              CONNECT BY PRIOR OFC_CD = BFR_OFC_CD ) 
	          OR C.TIC_CD = @[login_office] )
#elseif(${auth_flg} == 'YYYN')
-- (YYYN) 일때 -- BU CTRL||비용주관
     AND ( A.OFC_CD IN ( SELECT OFC_CD      
                           FROM GEM_OFC_HIS
                     START WITH OFC_CD IN ( SELECT L_4 
                                              FROM GEM_OFC_LEVEL_V 
                                             WHERE L_3 = @[login_office] )
               CONNECT BY PRIOR OFC_CD = BFR_OFC_CD ) OR C.TIC_CD = @[login_office] )    
#end

#if(${expn_dep} == 'FAC')
   AND 1 = DECODE(A.GEN_EXPN_CD, '240601', DECODE(A.OFC_CO_DIV_CD, 'O', 0 , 1 ) , 1 )  
UNION ALL 
SELECT C.TIC_CD OFC_CD
      ,A.GEN_EXPN_CD
	  ,A.OFC_CO_DIV_CD
      ,DECODE(@[sch_lang], 'K', C.KRN_ABBR_NM
                 , 'E', C.ENG_ABBR_NM ) ABBR_NM
	  ,DECODE(@[ofc_cur], 'LCL', A.LOCL_CURR_CD, 'KRW', 'KRW', 'USD', 'USD' ) LOCL_CURR_CD
      ,DECODE(@[ofc_cur], 'LCL', A.RQST_UT_VAL, 'KRW', '1000', 'USD', '1' ) RQST_UT_VAL
      ,A.YEAR_ASS_EXP
      ,A.MON_ASS_EXP MON_ASS_EXP
      ,A.MON_PERF MON_PERF
      ,DECODE(A.MON_ASS_EXP, 0, 0, (A.MON_PERF/A.MON_ASS_EXP)*100) RATIO      
      ,A.YTD_ASS_EXP YTD_ASS_EXP
      ,A.YTD_PERF YTD_PERF
      ,DECODE(A.YTD_ASS_EXP, 0, 0, (A.YTD_PERF/A.YTD_ASS_EXP)*100) RATIO1
      ,(A.YTD_ASS_EXP - A.YTD_PERF) DIFF
      ,GEN_EXPN_OVR_RTO_RSN AS GEN_EXPN_OVR_RTO_RSN
      ,DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) AS RSLT_YRMON
  FROM (
       SELECT  D.TIC_CD
              ,A.GEN_EXPN_CD
              ,MAX(DECODE(D.TIC_CD, A.OFC_CD, A.OFC_CO_DIV_CD)) OFC_CO_DIV_CD
              ,MAX(DECODE(D.TIC_CD, A.OFC_CD, A.LOCL_CURR_CD)) LOCL_CURR_CD
              ,MAX(DECODE(D.TIC_CD, A.OFC_CD, A.RQST_UT_VAL)) RQST_UT_VAL
              ,SUM(DECODE(@[ofc_cur], 'LCL', ((A.YEAR_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT 
                                    , 'USD', A.YEAR_ASS_EXP/B.USD_LOCL_XCH_RT 
                                    , 'KRW', ((A.YEAR_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) YEAR_ASS_EXP
              ,SUM(DECODE(@[ofc_cur], 'LCL', ((A.MON_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT 
                                    , 'USD', A.MON_ASS_EXP/B.USD_LOCL_XCH_RT 
                                    , 'KRW', ((A.MON_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) MON_ASS_EXP
              ,SUM(DECODE(@[ofc_cur], 'LCL', ((A.MON_PERF/1000)/C.USD_LOCL_XCH_RT)*C.USD_KRW_XCH_RT 
                                    , 'USD', A.MON_PERF/C.USD_LOCL_XCH_RT
                                    , 'KRW', ((A.MON_PERF/1000)/C.USD_LOCL_XCH_RT)*C.USD_KRW_XCH_RT )) MON_PERF 
              ,SUM(DECODE(@[ofc_cur], 'LCL', ((A.YTD_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT  
                                    , 'USD', A.YTD_ASS_EXP/B.USD_LOCL_XCH_RT                            
                                    , 'KRW', ((A.YTD_ASS_EXP/1000)/B.USD_LOCL_XCH_RT)*B.USD_KRW_XCH_RT )) YTD_ASS_EXP
              ,SUM(DECODE(@[ofc_cur], 'LCL', ((A.YTD_PERF/1000)/C.USD_LOCL_XCH_RT)*C.USD_KRW_XCH_RT 
                                    , 'USD', A.YTD_PERF/C.USD_LOCL_XCH_RT
                                    , 'KRW', ((A.YTD_PERF/1000)/C.USD_LOCL_XCH_RT)*C.USD_KRW_XCH_RT )) YTD_PERF
	      ,(SELECT MAX(GEN_EXPN_OVR_RTO_RSN) FROM GEM_RSLT_SMRY WHERE RSLT_YRMON = DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) AND OFC_CD = D.TIC_CD AND A.GEN_EXPN_CD = GEN_EXPN_CD) GEN_EXPN_OVR_RTO_RSN
	       FROM (
                SELECT A.OFC_CD
                      ,A.OFC_CO_DIV_CD
                      ,B.LOCL_CURR_CD
                      ,B.RQST_UT_VAL
                      ,A.GEN_EXPN_CD
                      ,A.RSLT_YRMON
                      ,A.GEN_EXPN_INIT_AMT + A.GEN_EXPN_ADD_AMT + A.GEN_EXPN_TRNS_AMT YEAR_ASS_EXP
                      ,CASE WHEN A.RSLT_YRMON BETWEEN DECODE(@[perf_div],'Y',@[from_closing_date],@[from_rslt_yrmon]) AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN (A.GEN_EXPN_INIT_AMT + A.GEN_EXPN_ADD_AMT + A.GEN_EXPN_TRNS_AMT) 
                            ELSE 0                                                 
                        END MON_ASS_EXP
                      ,CASE WHEN A.RSLT_YRMON BETWEEN DECODE(@[perf_div],'Y',@[from_closing_date],@[from_rslt_yrmon]) AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN A.SLP_PERF_AMT
                            ELSE 0
                        END MON_PERF 
                      ,CASE WHEN A.RSLT_YRMON BETWEEN SUBSTR(@[from_rslt_yrmon], 1, 4)||'01' AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN (A.GEN_EXPN_INIT_AMT + A.GEN_EXPN_ADD_AMT + A.GEN_EXPN_TRNS_AMT) 
                            ELSE 0
                        END YTD_ASS_EXP
                      ,CASE WHEN A.RSLT_YRMON BETWEEN SUBSTR(@[from_rslt_yrmon], 1, 4)||'01' AND DECODE(@[perf_div],'Y',@[closing_date],@[to_rslt_yrmon]) THEN A.SLP_PERF_AMT
                            ELSE 0
                        END YTD_PERF
                    FROM GEM_RSLT_SMRY A
                      ,GEM_OFFICE B
                    WHERE A.RSLT_YRMON LIKE SUBSTR(@[from_rslt_yrmon], 1, 4)||'%'
                    AND A.GEN_EXPN_CD BETWEEN DECODE (@[sch_expense_from], '', '111111', @[sch_expense_from]) AND DECODE (@[sch_expense_to], '', '999999', @[sch_expense_to])
                    AND A.OFC_CD = B.OFC_CD
                    AND A.GEN_EXPN_CD = '240601'
                    AND A.OFC_CO_DIV_CD = 'O'
               ) A
              ,(
                SELECT B.YRMON
                      ,A.CURR_CD
                      ,A.USD_LOCL_XCH_RT
                      ,A.LOCL_KRW_XCH_RT
                      ,A.USD_KRW_XCH_RT
                  FROM GEM_XCH_RT A
                      ,(
                        SELECT SUBSTR(@[from_rslt_yrmon], 1, 4)||TRIM(TO_CHAR(ROWNUM,'00')) YRMON
                          FROM DUAL 
                       CONNECT BY LEVEL <= 12
                       ) B
                 WHERE A.ACCT_XCH_RT_YRMON = SUBSTR(@[from_rslt_yrmon], 1, 4)||'00'
                   AND A.GEN_EXPN_XCH_RT_DIV_CD = 'I'
                   AND A.DELT_FLG = 'N'
               ) B
              ,GEM_XCH_RT C
              ,GEM_EXPENSE D      
         WHERE A.RSLT_YRMON   = B.YRMON
           AND A.LOCL_CURR_CD = B.CURR_CD
           AND A.RSLT_YRMON   = C.ACCT_XCH_RT_YRMON(+)
           AND A.LOCL_CURR_CD = C.CURR_CD(+)
           AND C.GEN_EXPN_XCH_RT_DIV_CD(+) = 'M'
           AND C.DELT_FLG(+) = 'N'
           AND A.GEN_EXPN_CD = D.GEN_EXPN_CD
         GROUP BY D.TIC_CD 
                 ,A.GEN_EXPN_CD   
       ) A,
      GEM_OFFICE B, GEM_EXPENSE C, GEM_EXPN_GRP_V D
    WHERE D.TIC_CD = B.OFC_CD
	AND A.GEN_EXPN_CD = C.GEN_EXPN_CD
	AND A.GEN_EXPN_CD = D.GEN_EXPN_CD
	#if (${sch_expense_group} != '') 
	AND D.GEM_EXPN_GRP_CD1 = @[sch_expense_group]
	#end
	#if(${sch_tic_cd} != '')
	    	AND C.TIC_CD = @[sch_tic_cd]
	#end 
	#if(${ofc_co} == 'O')
	AND A.OFC_CO_DIV_CD = 'O'
	#end
	#if(${ofc_co} == 'S')
	AND A.OFC_CO_DIV_CD = 'S'
	#end

	#if(${auth_flg} == 'YNYN')
	-- (YNYN) 일때 -- 비용주관팀           
     AND (A.TIC_CD = @[login_office] OR C.TIC_CD = @[login_office])
	#elseif(${auth_flg} == 'YYYN')
	-- (YYYN) 일때 -- BU CTRL||비용주관
     AND ( A.TIC_CD IN ( SELECT L_4 FROM GEM_OFC_LEVEL_V WHERE L_3 = @[login_office] ) OR C.TIC_CD = @[login_office] )
	#end

 #end
)
WHERE 1=1

#if(${sls_ofc_div_cd} != '' || ${ofc_expn_cd} != '')
   	AND OFC_CD in (
	SELECT OFC_CD      
  	FROM GEM_OFC_HIS
	START WITH OFC_CD IN (    
        SELECT DISTINCT L_4 CODE
          FROM GEM_OFC_LEVEL_V
         WHERE 1=1
		   #if(${sls_ofc_div_cd} != '')
           AND RGN_OFC_FLG LIKE @[sls_ofc_div_cd]||'%'
		   #end		
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} != '') 
		   AND L_4 LIKE @[ofc_lvl3]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} != '' && ${ofc_lvl3} == '') 
		   AND L_3 LIKE @[ofc_lvl2]||'%' 
		   #end
		   #if(${ofc_lvl1} != '' && ${ofc_lvl2} == '' && ${ofc_lvl3} == '') 
		   AND L_2 LIKE @[ofc_lvl1]||'%' 
		   #end
           #if (${ofc_expn_cd} != '') 
		   AND L_4 LIKE @[ofc_expn_cd]||'%' 
           #end
	)
	CONNECT BY PRIOR OFC_CD = BFR_OFC_CD
    )
#end

#if(${com_ratio} == '1')
AND RATIO1 < @[com_ratio_num]
#end
#if(${com_ratio} == '2')
AND RATIO1 >= @[com_ratio_num]
#end
#if(${com_diff} == '1')
AND DIFF < @[com_diff_num]
#end
#if(${com_diff} == '2')
AND DIFF >= @[com_diff_num]
#end
#if(${sub_total} == 'Office')
ORDER BY OFC_CD, GEN_EXPN_CD
#end
#if(${sub_total} == 'Expense')
ORDER BY GEN_EXPN_CD, OFC_CD
#end
#if(${sub_total} == 'NO')
ORDER BY OFC_CD, GEN_EXPN_CD
#end			]]></sql>
			<params>
				<param name="sch_lang" type="12" value="" out="N"/>
				<param name="ofc_cur" type="12" value="" out="N"/>
				<param name="perf_div" type="12" value="" out="N"/>
				<param name="closing_date" type="12" value="" out="N"/>
				<param name="to_rslt_yrmon" type="12" value="" out="N"/>
				<param name="from_closing_date" type="12" value="" out="N"/>
				<param name="from_rslt_yrmon" type="12" value="" out="N"/>
				<param name="sch_expense_from" type="12" value="" out="N"/>
				<param name="sch_expense_to" type="12" value="" out="N"/>
				<param name="sch_expense_group" type="12" value="" out="N"/>
				<param name="sch_tic_cd" type="12" value="" out="N"/>
				<param name="login_office" type="12" value="" out="N"/>
				<param name="sls_ofc_div_cd" type="12" value="" out="N"/>
				<param name="ofc_lvl3" type="12" value="" out="N"/>
				<param name="ofc_lvl2" type="12" value="" out="N"/>
				<param name="ofc_lvl1" type="12" value="" out="N"/>
				<param name="ofc_expn_cd" type="12" value="" out="N"/>
				<param name="com_ratio_num" type="12" value="" out="N"/>
				<param name="com_diff_num" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
