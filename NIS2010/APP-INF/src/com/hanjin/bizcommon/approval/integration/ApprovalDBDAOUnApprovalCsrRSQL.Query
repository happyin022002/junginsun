<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="ApprovalDBDAOUnApprovalCsrRSQL">
			<desc><![CDATA[.]]></desc>
			<sql><![CDATA[
SELECT  	  APRO_RQST_NO
			, CRNT_APRO_SEQ
			, APSTS_CD
			, SUB_SYS_CD
			, GL_DT
			, RQST_ST_DT
			, CSR_NO
			, INV_DT
			, INV_KNT
			, VNDR_SEQ
			, PAY_DUE_DT
			, CURR_CD
			, APRO_TTL_AMT
			, ASA_AMT
			, COST_OFC_CD
			, APRO_OFC_CD
			, APRO_USR_ID
			, APRO_USR_NM
			, APPYN
			, APRO_RMK
			, CRE_DT
			, CRE_USR_ID
			, USR_NM
			, AR_HD_QTR_OFC_CD  
			, OFC_CD
			, INV_EFF_DT
			, OFC_NM
			, AGMT_DOC_CFM_CD
			, AGMT_FILE_CFM_CD
			, FILE_UPLD_FLG
			, ASA_NO
FROM
(

SELECT  	T.APRO_RQST_NO
			, T.CRNT_APRO_SEQ
			, T.APSTS_CD
			, T.SUB_SYS_CD
			, T.GL_DT
			, T.RQST_ST_DT
			, T.CSR_NO
			, T.INV_DT
			, T.INV_KNT
			, T.VNDR_SEQ
			, T.PAY_DUE_DT
			, T.CURR_CD
			, T.APRO_TTL_AMT
			, DECODE(T.APRO_TTL_AMT,0,T.ASA_AMT,0) ASA_AMT
			, T.COST_OFC_CD
			, T.APRO_OFC_CD
			, T.APRO_USR_ID
			, T.APRO_USR_NM
			, T.APPYN
			, T.APRO_RMK
			, T.CRE_DT
			, T.CRE_USR_ID
			, T.USR_NM
			, T.AR_HD_QTR_OFC_CD
			, T.OFC_CD
			, '' INV_EFF_DT
			, '' OFC_NM
			, T.AGMT_DOC_CFM_CD
	  		, T.AGMT_FILE_CFM_CD
	  		,(CASE WHEN
        		NVL(( SELECT COUNT(F.ATCH_FILE_ID)
        				FROM COM_AP_FILE_UPLD F
        				WHERE 1=1
        				AND F.AP_FILE_DIV_CD = 'C'
        				AND F.CSR_NO = T.CSR_NO 
        				AND F.CSR_FILE_UPLD_TP_CD = 'FU'
						AND NVL(F.DELT_FLG,'N') <> 'Y'
        			),0) > 0 THEN 'Y'    
    	  		ELSE 'N'
          		END ) FILE_UPLD_FLG
		   ,DECODE(T.APRO_TTL_AMT,0,T.ASA_NO,'') ASA_NO
  FROM (
        SELECT --ROW_NUMBER() OVER (ORDER BY RQST_ST_DT DESC) no,
              A.APRO_RQST_NO
	         , A.CRNT_APRO_SEQ
  	         , A.APSTS_CD
	         , A.SUB_SYS_CD
      		 , D.GL_DT
             , TO_CHAR(A.RQST_ST_DT, 'YYYY-MM-DD') RQST_ST_DT
      		 , B.CSR_NO
      		 , D.INV_DT
	         , B.INV_KNT
	         , TO_CHAR(B.VNDR_SEQ, '000000') VNDR_SEQ
	         , B.PAY_DUE_DT
	         , B.CURR_CD
	         , B.APRO_TTL_AMT
			 , CASE WHEN A.SUB_SYS_CD = 'TES' 
							THEN NVL((SELECT SUM(TTL_INV_AMT) AMT FROM TES_TML_SO_HDR WHERE CSR_NO = B.CSR_NO AND NVL(DELT_FLG,'N') <> 'Y'), B.APRO_TTL_AMT)
					 WHEN A.SUB_SYS_CD = 'TRS' THEN
							(SELECT 
  								SUM(NVL(INV_WRK.INV_BZC_AMT , RAIL_WRK.INV_BZC_AMT )) INV_BZC_AMT
							FROM AP_INV_HDR DTRB , TRS_TRSP_INV_WRK INV_WRK , TRS_TRSP_RAIL_INV_WRK RAIL_WRK
							WHERE DTRB.CSR_NO = INV_WRK.CSR_NO(+)
  							AND DTRB.CSR_NO = RAIL_WRK.CSR_NO(+)
  							AND DTRB.CSR_NO = B.CSR_NO)
					 WHEN A.SUB_SYS_CD IN ('LSE','CHS','MGS','MNR','PSO','TLL','CNI')
							THEN (SELECT SUM(NVL(T.INV_NET_AMT ,0)) TTL_INV_AMT FROM AP_PAY_INV T , AP_INV_HDR A WHERE  T.CSR_NO = A.CSR_NO AND T.CSR_NO = B.CSR_NO AND NVL(T.DELT_FLG,'N') <> 'Y')
					 WHEN A.SUB_SYS_CD IN ('ACM','FMS') 
							THEN (SELECT SUM(INV_AMT) FROM AP_INV_DTRB WHERE CSR_NO = B.CSR_NO AND ATTR_CTNT1 IS NOT NULL AND DTRB_COA_ACCT_CD <> '954113')
					 ELSE 0
	           END AS ASA_AMT
	         , B.COST_OFC_CD
			 , C.APRO_OFC_CD
			 , C.APRO_USR_ID
			 , C.APRO_USR_NM
	         , DECODE(NVL(C.APSTS_CD, ''), '', 'N', 'Y') APPYN
	         , C.APRO_RMK
			 , TO_CHAR(D.CRE_DT, 'YYYY-MM-DD') CRE_DT
			 , D.CRE_USR_ID
			 , (SELECT USR_NM FROM COM_USER WHERE USR_ID = D.CRE_USR_ID) AS USR_NM
			 , NVL((
	            SELECT DISTINCT AR_HD_QTR_OFC_CD
	            FROM MDM_ORGANIZATION
	            WHERE OFC_CD IN (
	                SELECT DISTINCT INV_OFC_CD
	                FROM AP_PAY_INV
	                WHERE CSR_NO = D.CSR_NO)), (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = A.RQST_OFC_CD) ) AS AR_HD_QTR_OFC_CD
	         , NVL((
	            SELECT DISTINCT INV_OFC_CD
	            FROM AP_PAY_INV
	            WHERE CSR_NO = D.CSR_NO), A.RQST_OFC_CD) AS OFC_CD 
			 ,( CASE WHEN D.GW_AGMT_DOC_CFM_CD IS NOT NULL
           		  	THEN ( CASE WHEN D.GW_AGMT_DOC_CFM_CD = 'P' THEN 'Y'
                       			WHEN D.GW_AGMT_DOC_CFM_CD = 'Y' THEN 'Y'
                       			ELSE 'N'
                  			END )
         			ELSE NVL(D.AGMT_DOC_CFM_CD,'N')
    			END ) AGMT_DOC_CFM_CD
			  , NVL(D.AGMT_FILE_CFM_CD,'N') AGMT_FILE_CFM_CD  --추가
			  , D.ATTR_CTNT2 AS ASA_NO
	      FROM COM_APRO_RQST_HDR  A
	         , COM_APRO_CSR_DTL   B
	         , COM_APRO_RQST_ROUT C
			 , AP_INV_HDR D
	     WHERE 1 = 1
	       AND NVL(A.DELT_FLG, 'N') <> 'Y'
           AND NVL(D.AFT_ACT_FLG,' ') NOT IN ('X','N')
           AND A.SUB_SYS_CD NOT IN ('JOO')
           AND NVL(D.CSR_APRO_TP_CD,'AL') = 'AL'

           #if (${sub_sys_cd} != '')
           AND A.SUB_SYS_CD = @[sub_sys_cd]
           #end

		   AND A.APRO_RQST_NO = B.APRO_RQST_NO
    	   AND A.APRO_RQST_NO = C.APRO_RQST_NO(+)

           AND A.APSTS_CD = 'P'
           AND A.CRNT_APRO_SEQ = C.APRO_RQST_SEQ(+)

		   AND B.CSR_NO = D.CSR_NO
		   #if (${csr_no} != '')
		   AND B.CSR_NO = @[csr_no]
		   #end

           #if (${inv_eff_dt} != '')
           AND D.GL_DT <=  replace(@[inv_eff_dt], '-', '')
           #end

        UNION ALL

        SELECT 
             '' APRO_RQST_NO
	         , TO_NUMBER('') CRNT_APRO_SEQ
  	         , '' APSTS_CD        
	         , R.SUB_SYS_ID SUB_SYS_CD
      		 , D.GL_DT
             , TO_CHAR(D.CSR_APRO_STEP_ASGN_RQST_DT, 'YYYY-MM-DD') RQST_ST_DT
      		 , D.CSR_NO
      		 , D.INV_DT
	         , TO_NUMBER('') INV_KNT
             , TO_CHAR(D.VNDR_NO, '000000') VNDR_SEQ
	         , '' PAY_DUE_DT
	         , D.CSR_CURR_CD
	         , D.CSR_AMT APRO_TTL_AMT
			 , CASE WHEN R.SUB_SYS_ID = 'TES' 
							THEN NVL((SELECT SUM(TTL_INV_AMT) AMT FROM TES_TML_SO_HDR WHERE CSR_NO = d.CSR_NO AND NVL(DELT_FLG,'N') <> 'Y'), D.CSR_AMT)
					 WHEN R.SUB_SYS_ID = 'TRS' THEN
							(SELECT 
  								SUM(NVL(INV_WRK.INV_BZC_AMT , RAIL_WRK.INV_BZC_AMT )) INV_BZC_AMT
							FROM AP_INV_HDR DTRB , TRS_TRSP_INV_WRK INV_WRK , TRS_TRSP_RAIL_INV_WRK RAIL_WRK
							WHERE DTRB.CSR_NO = INV_WRK.CSR_NO(+)
  							AND DTRB.CSR_NO = RAIL_WRK.CSR_NO(+)
  							AND DTRB.CSR_NO = D.CSR_NO)
					 WHEN R.SUB_SYS_ID IN ('LSE','CHS','MGS','MNR','PSO','TLL','CNI')
							THEN (SELECT SUM(NVL(T.INV_NET_AMT ,0)) TTL_INV_AMT FROM AP_PAY_INV T WHERE  T.CSR_NO = D.CSR_NO AND NVL(T.DELT_FLG,'N') <> 'Y')
					 WHEN R.SUB_SYS_ID IN ('ACM','FMS') 
							THEN (SELECT SUM(INV_AMT) FROM AP_INV_DTRB WHERE CSR_NO = D.CSR_NO AND ATTR_CTNT1 IS NOT NULL AND DTRB_COA_ACCT_CD <> '954113')
					 ELSE 0
	            END AS ASA_AMT
	         , '' COST_OFC_CD
			 , '' APRO_OFC_CD
			 , '' APRO_USR_ID
			 , '' APRO_USR_NM
             , 'N' APPYN
	         , '' APRO_RMK
			 , TO_CHAR(D.CRE_DT, 'YYYY-MM-DD') CRE_DT
			 , D.CRE_USR_ID
			 , (SELECT USR_NM FROM COM_USER WHERE USR_ID = D.CRE_USR_ID) AS USR_NM
			 , NVL((
	            SELECT DISTINCT AR_HD_QTR_OFC_CD
	            FROM MDM_ORGANIZATION
	            WHERE OFC_CD IN (
	                SELECT DISTINCT INV_OFC_CD
	                FROM AP_PAY_INV
	                WHERE CSR_NO = D.CSR_NO)), (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = D.TJ_OFC_CD) ) AS AR_HD_QTR_OFC_CD
	         , NVL((
	            SELECT DISTINCT INV_OFC_CD
	            FROM AP_PAY_INV
	            WHERE CSR_NO = D.CSR_NO), D.TJ_OFC_CD) AS OFC_CD 
			 ,( CASE WHEN D.GW_AGMT_DOC_CFM_CD IS NOT NULL
           		  	THEN ( CASE WHEN D.GW_AGMT_DOC_CFM_CD = 'P' THEN 'Y'
                       			WHEN D.GW_AGMT_DOC_CFM_CD = 'Y' THEN 'Y'
                       			ELSE 'N'
                  			END )
         			ELSE NVL(D.AGMT_DOC_CFM_CD,'N')
    			END ) AGMT_DOC_CFM_CD
			  , NVL(D.AGMT_FILE_CFM_CD,'N') AGMT_FILE_CFM_CD  --추가
			  , D.ATTR_CTNT2 AS ASA_NO
	      FROM AP_INV_HDR D, COM_APRO_SND_MN_RULE R
	     WHERE 1 = 1
           AND NVL(D.AFT_ACT_FLG,' ') NOT IN ('X','N')
           AND NVL(D.CSR_APRO_TP_CD,'AL') = 'AL'
           AND D.SRC_CTNT = R.SRC_CTNT(+)
           AND R.SUB_SYS_ID NOT IN ('JOO')
           
           AND NVL(D.RQST_APRO_STEP_FLG,'N') = 'Y'
           AND NOT EXISTS (
                SELECT 'X'
                FROM COM_APRO_CSR_DTL   B
                WHERE B.CSR_NO = D.CSR_NO
           )
           
           #if (${sub_sys_cd} != '')
           AND R.SUB_SYS_ID = @[sub_sys_cd]
           #end

		   #if (${csr_no} != '')
		   AND D.CSR_NO = @[csr_no]
		   #end

           #if (${inv_eff_dt} != '')
           AND D.GL_DT <=  replace(@[inv_eff_dt], '-', '')
           #end

        UNION ALL
        
        SELECT --ROW_NUMBER() OVER (ORDER BY RQST_ST_DT DESC) no,
             '' APRO_RQST_NO
	         , TO_NUMBER('') CRNT_APRO_SEQ
  	         , '' APSTS_CD        
	         , R.SUB_SYS_ID SUB_SYS_CD
      		 , D.GL_DT
             , TO_CHAR(D.CSR_APRO_STEP_ASGN_RQST_DT, 'YYYY-MM-DD') RQST_ST_DT
      		 , D.CSR_NO
      		 , D.INV_DT
             , TO_NUMBER('') INV_KNT
             , TO_CHAR(D.VNDR_NO, '000000') VNDR_SEQ
	         , '' PAY_DUE_DT
	         , D.CSR_CURR_CD CURR_CD
	         , D.CSR_AMT APRO_TTL_AMT
			 , 0 ASA_AMT
	         , '' COST_OFC_CD
			 , '' APRO_OFC_CD
			 , '' APRO_USR_ID
			 , '' APRO_USR_NM
	         , DECODE(NVL(D.APRO_FLG, ''), '', 'N', 'Y') APPYN
	         , '' APRO_RMK
			 , TO_CHAR(D.CRE_DT, 'YYYY-MM-DD') CRE_DT
			 , D.CRE_USR_ID
			 , (SELECT USR_NM FROM COM_USER WHERE USR_ID = D.CRE_USR_ID) AS USR_NM
			 , NVL((
	            SELECT DISTINCT AR_HD_QTR_OFC_CD
	            FROM MDM_ORGANIZATION
	            WHERE OFC_CD IN (
	                SELECT DISTINCT INV_OFC_CD
	                FROM AP_PAY_INV
	                WHERE CSR_NO = D.CSR_NO)), (SELECT DISTINCT AR_HD_QTR_OFC_CD FROM MDM_ORGANIZATION WHERE OFC_CD = D.TJ_OFC_CD) ) AS AR_HD_QTR_OFC_CD
	         , NVL((
	            SELECT DISTINCT INV_OFC_CD
	            FROM AP_PAY_INV
	            WHERE CSR_NO = D.CSR_NO), D.TJ_OFC_CD) AS OFC_CD 
			 ,( CASE WHEN D.GW_AGMT_DOC_CFM_CD IS NOT NULL
           		  	THEN ( CASE WHEN D.GW_AGMT_DOC_CFM_CD = 'P' THEN 'Y'
                       			WHEN D.GW_AGMT_DOC_CFM_CD = 'Y' THEN 'Y'
                       			ELSE 'N'
                  			END )
         			ELSE NVL(D.AGMT_DOC_CFM_CD,'N')
    			END ) AGMT_DOC_CFM_CD
			  , NVL(D.AGMT_FILE_CFM_CD,'N') AGMT_FILE_CFM_CD  --추가
			  , D.ATTR_CTNT2 AS ASA_NO
	      FROM AP_INV_HDR D, COM_APRO_SND_MN_RULE R
	     WHERE 1 = 1
           AND D.SRC_CTNT = R.SRC_CTNT(+)
           AND NVL(D.AFT_ACT_FLG,' ') NOT IN ('X','N')
           AND R.SUB_SYS_ID NOT IN ('JOO')

           #if (${sub_sys_cd} != '')
           AND R.SUB_SYS_ID = @[sub_sys_cd]
           #end

		   #if (${csr_no} != '')
		   AND D.CSR_NO = @[csr_no]
		   #end

           #if (${inv_eff_dt} != '')
           AND D.GL_DT <=  replace(@[inv_eff_dt], '-', '')
           #end

           AND NVL(D.CSR_APRO_TP_CD,'AL') = 'GW'
           AND NVL(D.RQST_APRO_STEP_FLG,'X') <> 'Y'
           AND (D.CSR_APRO_CMPL_DT IS NULL AND D.CSR_CXL_DT IS NULL AND D.CSR_RJCT_DT IS NULL)   
           AND D.IF_FLG IS NULL

       ) T
 WHERE 1 = 1
#if ( (${ar_hd_qtr_ofc_cd} != '' && ${ar_hd_qtr_ofc_cd} != 'ALL') && (${ofc_cd} == '' || ${ofc_cd} == 'ALL'))
  AND T.OFC_CD IN (
        select ofc_cd
        from mdm_organization
        where ar_hd_qtr_ofc_cd = @[ar_hd_qtr_ofc_cd]
          and delt_flg = 'N'
        )
#end

/* condition - ofc_cd */
 #if (${ofc_cd} != '' && ${ofc_cd} != 'ALL') 
	#foreach($key1 IN ${ofc_cd})
 	AND T.OFC_CD IN ('$key1')
	#end
 #end 

#if (${sub_sys_cd} == 'JOO' || ${sub_sys_cd} == '')
UNION ALL
/*JOO*/

SELECT '' APRO_RQST_NO ,
  0 CRNT_APRO_SEQ ,
  '' APSTS_CD ,
  'JOO' SUB_SYS_CD,
   TO_CHAR(J.EFF_DT, 'YYYY-MM-DD') GL_DT,
  TO_CHAR(J.RQST_DT, 'YYYY-MM-DD') RQST_ST_DT,
  J.SLP_TP_CD||J.SLP_FUNC_CD||J.SLP_OFC_CD||TO_CHAR(TO_DATE(J.SLP_ISS_DT,'YYYYMMDD'),'RRMMDD')||J.SLP_SER_NO CSR_NO,
  '' INV_DT ,
  0 INV_KNT ,
  '' VNDR_SEQ ,
  '' PAY_DUE_DT ,
  J.CSR_LOCL_CURR_CD CURR_CD,
  J.CSR_LOCL_AMT APRO_TTL_AMT,
  C.ASA_AMT,
  '' COST_OFC_CD ,
  '' APRO_OFC_CD ,
  C.APRO_USR_ID,
  C.APRO_USR_NM,
  '' APPYN ,
  '' APRO_RMK,
  TO_CHAR(J.CRE_DT, 'YYYY-MM-DD') CRE_DT,
  J.CRE_USR_ID,
  U.USR_NM,
  O.AR_HD_QTR_OFC_CD,
  J.SLP_OFC_CD AS OFC_CD,
  '' INV_EFF_DT ,
  '' OFC_NM,
  '' AGMT_DOC_CFM_CD,  --추가
  '' AGMT_FILE_CFM_CD,  --추가
  '' FILE_UPLD_FLG,      --추가
  C.ASA_NO
FROM	JOO_CSR J,
		COM_USER U,
		MDM_ORGANIZATION O,
		(
	       SELECT
	              B.CSR_NO,
	              C.APRO_USR_ID,
                  ( SELECT USR_NM FROM COM_USER WHERE USR_ID = C.APRO_USR_ID ) AS APRO_USR_NM,
				  (SELECT ATTR_CTNT2 FROM AP_INV_HDR WHERE CSR_NO = B.CSR_NO) AS ASA_NO,
				  (SELECT SUM(INV_AMT) FROM AP_INV_DTRB WHERE CSR_NO = B.CSR_NO AND ATTR_CTNT1 IS NOT NULL AND DTRB_COA_ACCT_CD <> '954113') AS ASA_AMT
	         FROM COM_APRO_RQST_HDR  A,
	              COM_APRO_CSR_DTL   B,
	              COM_APRO_RQST_ROUT C
	        WHERE NVL(A.DELT_FLG, 'N') = 'N'
	          AND NVL(B.DELT_FLG, 'N') = 'N'
	          AND NVL(C.DELT_FLG, 'N') = 'N'
	          AND A.SUB_SYS_CD         = 'JOO'
	          AND NVL(A.APSTS_CD,'P')  = 'P'
	          AND NVL(C.APSTS_CD,'P')  = 'P'
	          AND A.APRO_RQST_NO  = B.APRO_RQST_NO
	          AND A.APRO_RQST_NO  = C.APRO_RQST_NO(+)
	          AND A.CRNT_APRO_SEQ = C.APRO_RQST_SEQ(+)
		) C
WHERE J.APRO_FLG = 'N'
  AND J.CXL_FLG = 'N'
  AND J.CRE_USR_ID = U.USR_ID
  AND J.SLP_OFC_CD = O.OFC_CD 
  
  AND J.SLP_TP_CD||J.SLP_FUNC_CD||J.SLP_OFC_CD||TO_CHAR(TO_DATE(J.SLP_ISS_DT,'YYYYMMDD'),'RRMMDD')||J.SLP_SER_NO = C.CSR_NO
  
#if (${csr_no} != '')
  AND C.CSR_NO = @[csr_no]
#end

#if ( (${ar_hd_qtr_ofc_cd} != '' && ${ar_hd_qtr_ofc_cd} != 'ALL') && (${ofc_cd} == '' || ${ofc_cd} == 'ALL'))
  AND J.SLP_OFC_CD IN (
        select ofc_cd
        from mdm_organization
        where ar_hd_qtr_ofc_cd = @[ar_hd_qtr_ofc_cd]
          and delt_flg = 'N'
        )
#end

/* condition - ofc_cd */
 #if (${ofc_cd} != '' && ${ofc_cd} != 'ALL') 
	#foreach($key1 IN ${ofc_cd})
 	AND J.SLP_OFC_CD IN ('$key1')
	#end
 #end 

#if (${inv_eff_dt} != '')
   AND J.EFF_DT <=  TO_DATE(replace(@[inv_eff_dt], '-', ''),'YYYYMMDD')
#end

#end

)
ORDER BY AR_HD_QTR_OFC_CD, SUB_SYS_CD, OFC_CD DESC			]]></sql>
			<params>
				<param name="sub_sys_cd" type="12" value="" out="N"/>
				<param name="csr_no" type="12" value="" out="N"/>
				<param name="inv_eff_dt" type="12" value="" out="N"/>
				<param name="ar_hd_qtr_ofc_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
