--:prdCtlNo	String	
--:sRterm	String	Y
--:sDterm	String	Y
--:sAgSeq	String	
--:sUSerId	String	
--:sUpdUd	String	
--:pm_f	String	
--:sSkdType	String	V
--:sSkdDate	String	
--:sPor	String	BEANR
--:sPol	String	BEANR
--:sPod	String	KRPUS
--:sDel	String	KRPUS
--:sPolNode	String	
--:sPol1_n	String	
--:sPod1_n	String	NLRTMY1
--:sPodNode	String	KRPUSYG
--:sPol2_n	String	
--:sPod2_n	String	
--:sPol3_n	String	
--:sPod3_n	String	
--:sPol4_n	String	
--:sRout_seq	String	
--:sPol1	String	BEANR
--:sPod1	String	NLRTM
--:sLane1	String	
--:sPol2	String	NLRTM
--:sPod2	String	KRPUS
--:sLane2	String	
--:sPol3	String	
--:sPod3	String	
--:sLane3	String	
--:sPol4	String	
--:sPod4	String	
--:sLane4	String	
--:sVvd	String	HJXM0011E
--:emtPkYd	String	
--:sPorNode	String	
--:so_seq	String	
--:emtRtnYd	String	
--:sDelNode	String	
--:sConstCom	String	
--:sConstDcg	String	
--:sVvd1	String	
--:MODE1	String	
--:TS_IND1	String	
--:sVvd2	String	HJXM0011E

SELECT
:prdCtlNo	||lpad(gp1,4,0) pctl_no, ord pctl_seq,
NODE_NEW1,NODE_NEW2,NODE_NEW_KIND,OI_BND_CD, DECODE(NODE_NEW_KIND,'L',substr(trsp_mod_cd,1,2),'X') trsp_mod_cd,
substr(trsp_mod_cd,3,1) CUST_NOMI_TRKR_FLG ,decode(trsp_mod_cd,'WD','W','VD','V') WTR_DIV_CD,
NODE1_TP,NODE2_TP,
(
CASE
WHEN F_NO2 = 0  AND NODE_NEW_KIND = 'N' AND :sRterm <> 'S' THEN 'Y'
WHEN F_NO2 = 33 AND NODE_NEW_KIND = 'N' AND :sDterm <> 'S' THEN 'Y'
ELSE 'N' END
)
MT_YD_FLG,
TO_DATE(PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),
ORD,NODE_NEW_KIND,DECODE(NODE_NEW_KIND,'N','A','D')),'yyyymmdd hh24:mi:ss') A_TIME,
TO_DATE(PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),
ORD,NODE_NEW_KIND,DECODE(NODE_NEW_KIND,'N','D','A')),'yyyymmdd hh24:mi:ss') D_TIME,
(
CASE
    WHEN NODE_NEW_KIND = 'L' THEN
        TO_NUMBER(PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'T'))
    WHEN NODE_NEW_KIND = 'N' THEN
        TZTM_DW_HRS
END
) ACT_DWTS_HRS,
(CASE WHEN NODE_NEW_KIND = 'N' THEN N1ST_VNDR_SEQ
      WHEN NODE_NEW_KIND = 'L' AND F_NO2 =0 AND :sRterm = 'D' THEN
        LEAD(N1ST_VNDR_SEQ, 1) OVER ( PARTITION BY GP1,NODE_NEW_KIND ORDER BY ORD)
      WHEN NODE_NEW_KIND = 'L' AND F_NO2 =32 AND :sDterm = 'D' THEN
        LAG(N1ST_VNDR_SEQ, 1) OVER ( PARTITION BY GP1,NODE_NEW_KIND ORDER BY ORD)
      ELSE N1ST_VNDR_SEQ
END
) N1ST_VNDR_SEQ,
N2ND_VNDR_SEQ,N3RD_VNDR_SEQ,SLANE,
(
CASE
    WHEN (F_NO2 IN (13,15,17,19)) AND (NODE_NEW_KIND='L') THEN
        PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'CD')
END
) CRR_CD,
(
CASE
    WHEN (F_NO2 IN (13,15,17,19)) AND (NODE_NEW_KIND='L') THEN
        SUBSTR(PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'V'),1,4)
END
) VSL_CD,
(
CASE
    WHEN (F_NO2 IN (13,15,17,19)) AND (NODE_NEW_KIND='L') THEN
        SUBSTR(PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'V'),5,4)
END
) VOY_NO,
NULL GEN_AVAL_SPC,
NULL D7_AVAL_SPC,
NULL RF_AVAL_SPC,
INLND_ROUT_CMB_FLG,TRIM(INLND_ROUT_INV_BIL_PATT_CD) INLND_ROUT_INV_BIL_PATT_CD,
(
CASE
    WHEN (F_NO2 IN (13,15,17,19)) AND (NODE_NEW_KIND='L') THEN
        NVL(SUBSTR(PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'V'),9,1),DIR_CD)
END
) DIR_CD,
ROUT_ORG,ROUT_DEST,ROUT_SEQ,
PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'CT') CNST,
PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'OS') ORG_PORT_SEQ,
PRD_GET_SKD_STR_FNC(LEAD(SKD_TIME,CNT-ORD,NULL) OVER(PARTITION BY GP1 ORDER BY ORD),ORD,NODE_NEW_KIND,'DS') DST_PORT_SEQ,
 :sAgSeq COST_ACT_GRP_SEQ ,  :sUSerId CRE_USR_ID, sysdate CRE_DT , :sUpdUd UPD_USR_ID, sysdate UPD_DT,
TRIM(RAIL_CRR_TYPE) RAIL_CRR_TYPE , TRIM(INLND_ROUT_INCL_STTL_FLG) INLND_ROUT_INCL_STTL_FLG,
TRIM(TRSP_AGMT_OFC_CTY_CD) TRSP_AGMT_OFC_CTY_CD, TRIM(TRSP_AGMT_SEQ) TRSP_AGMT_SEQ, TRIM(AGMT_REF_NO) AGMT_REF_NO
FROM
(
    WITH ROUT_TBL AS
    (
        SELECT
        GP1,F_NO2,L_N0,O1,NODE_NEW1,NODE1_TP,NODE_NEW2,NODE2_TP,NODE_NEW_KIND,OI_BND_CD,trsp_mod_cd,TZTM_DW_HRS,
        N1ST_VNDR_SEQ,N2ND_VNDR_SEQ,N3RD_VNDR_SEQ, ROUT_ORG,ROUT_DEST,ROUT_SEQ,S_DATE,S_TYPE,SLANE,DIR_CD,
        INLND_ROUT_CMB_FLG,INLND_ROUT_INV_BIL_PATT_CD,
        RAIL_CRR_TYPE, INLND_ROUT_INCL_STTL_FLG, TRSP_AGMT_OFC_CTY_CD, TRSP_AGMT_SEQ, AGMT_REF_NO,
        (
        F_NO2||':'||NODE_NEW1||':'||NODE_NEW2||':'||NODE_NEW_KIND||':'||OI_BND_CD||':'
        ||NVL(SUBSTR(TRSP_MOD_CD,1,2),'NON')||':'||NVL(TZTM_DW_HRS,'0')||':'||NVL(SLANE,'NON')||':'
        ||S_TYPE||':'||NVL(DIR_CD,'X')||':'
--        ||S_TYPE||':'||NVL(DIR_CD,'X')||':'||nvl(:cargo_type,'DR')||':'
        ) SKD_STR,
        COUNT(*) over (PARTITION BY GP1) CNT,
        ROW_NUMBER() over (PARTITION BY GP1 ORDER BY O1) ORD
        FROM
        (
            SELECT
             GP1,F_NO2,L_N0,O1,NODE_NEW1,(SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) NODE1_TP,
             DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))  NODE_NEW2,
             DECODE(LENGTH(NODE_NEW2),7,'N',SUBSTR(NODE_NEW2,18,1))  INLND_ROUT_CMB_FLG,
             DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,19,3))  INLND_ROUT_INV_BIL_PATT_CD,
             DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,22,3))  RAIL_CRR_TYPE,
             DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,25,3))  TRSP_AGMT_OFC_CTY_CD,
             DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,28,6))  TRSP_AGMT_SEQ,
             DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,34,15))  AGMT_REF_NO,
             DECODE(LENGTH(NODE_NEW2),7,'',SUBSTR(NODE_NEW2,49,1))  INLND_ROUT_INCL_STTL_FLG,
             (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,
             SUBSTR(NODE_NEW2,3,7))) NODE2_TP,NODE_NEW_KIND,OI_BND_CD,
            (CASE
                WHEN NODE_NEW_KIND='L' AND F_NO2 IN ( 0,32) THEN 'TD'
                WHEN NODE_NEW_KIND='L' AND F_NO2 = 1 AND :sRterm ='S' AND OUT_ROUT_SEQ= 0 THEN 'TD'
                WHEN NODE_NEW_KIND='L' AND F_NO2 = 20 AND :sDterm IN ('S','T','F','Y') AND IN_ROUT_SEQ= 0 THEN 'TD'
                WHEN NODE_NEW_KIND='L' AND F_NO2 IN (13,15,17,19) THEN
                (
                    SELECT DECODE(VSL_SVC_TP_CD, 'O', 'WD', 'VD')
                    FROM MDM_VSL_SVC_LANE
                    WHERE VSL_SLAN_CD = DECODE(F_NO2,13,N1ST_LANE_CD,15,N2ND_LANE_CD,17,N3RD_LANE_CD,19,N4TH_LANE_CD)
                )
               WHEN NODE_NEW_KIND='L' AND LENGTH(NODE_NEW2) > 7 THEN SUBSTR(NODE_NEW2,10,2)
               ELSE
                NVL((
                    SELECT D.TRSP_MOD_CD
                    FROM PRD_INLND_ROUT_MST M, PRD_INLND_ROUT_DTL D
                    WHERE M.ROUT_ORG_NOD_CD =NODE_NEW1
                    AND M.ROUT_DEST_NOD_CD = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))
                    AND M.PRIO_SEQ = (
                                       SELECT /*+ INDEX (XAK1PRD_INLND_ROUT_MST M2) */
                                       M2.PRIO_SEQ
                                       FROM PRD_INLND_ROUT_MST M2, PRD_INLND_ROUT_DTL D2
                                       WHERE
                                       M2.ROUT_ORG_NOD_CD = NODE_NEW1
                                       AND M2.ROUT_DEST_NOD_CD = NODE_NEW2
                                       AND M2.ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                                       AND M2.ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                                       AND M2.ROUT_SEQ = D2.ROUT_SEQ
                                       AND NVL(M2.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
                                       AND NVL(M2.DELT_FLG,'N') <> 'Y'
                                       AND D2.LNK_ORG_NOD_CD = NODE_NEW1
                                       AND D2.LNK_DEST_NOD_CD = NODE_NEW2
                                       AND D2.ROUT_DTL_SEQ = 1
                                       AND NOT EXISTS ( SELECT 'X' FROM PRD_INLND_ROUT_DTL
                                                        WHERE
                                                        ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                                                        AND ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                                                        AND ROUT_SEQ = D2.ROUT_SEQ
                                                        AND ROUT_DTL_SEQ = 2 )
                                       AND ROWNUM = 1
                                    )
                    AND M.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
                    AND M.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
                    AND M.ROUT_SEQ = D.ROUT_SEQ
                    AND NVL(M.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
                    AND NVL(M.DELT_FLG,'N') <> 'Y'
                    AND M.ROUT_ORG_NOD_CD = D.LNK_ORG_NOD_CD
                    AND M.ROUT_DEST_NOD_CD = D.LNK_DEST_NOD_CD
                    AND ROWNUM = 1
                ),'TD')
            END) trsp_mod_cd,
            (CASE
                WHEN NODE_NEW_KIND='N' AND F_NO2 IN (1,32) AND (SELECT NOD_TP_CD FROM PRD_NODE
                                                                WHERE NOD_CD = NODE_NEW1) = 'Z' THEN
                (
                    SELECT CGO_HNDL_TM_HRS FROM MDM_ZONE WHERE ZN_CD = NODE_NEW1
                )
                WHEN NODE_NEW_KIND='N' AND F_NO2 = 1 AND :sRterm ='S' AND OUT_ROUT_SEQ = 0 AND
                    (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) <> 'Z' THEN
                0
                WHEN NODE_NEW_KIND='N' AND F_NO2 = 32 AND :sDterm ='S' AND IN_ROUT_SEQ = 0 AND
                    (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) <> 'Z' THEN
                0
                WHEN NODE_NEW_KIND='N' AND (SELECT NOD_TP_CD FROM PRD_NODE WHERE NOD_CD = NODE_NEW1) <> 'Z' THEN
                (
                    SELECT DECODE(F_NO2,33,0,DECODE(F_NO2,0,0,DECODE(OI_BND_CD, 'T', 0, DECODE(:pm_f,'Y',
                                                   3, 6)))) FROM DUAL
                )
                WHEN  NODE_NEW_KIND='L' AND :sRterm = 'D' AND F_NO2 = 0   THEN
                (SELECT TZTM_HRS FROM MDM_ZONE WHERE ZN_CD = NODE_NEW2 )
                WHEN  NODE_NEW_KIND='L' AND :sDterm = 'D' AND F_NO2 = 32  THEN
                (SELECT TZTM_HRS FROM MDM_ZONE WHERE ZN_CD = NODE_NEW1 )
                WHEN  NODE_NEW_KIND='L' AND :sRterm =  'S' AND F_NO2 = 0   THEN 6
                WHEN  NODE_NEW_KIND='L' AND :sRterm =  'S' AND F_NO2 = 1  AND OUT_ROUT_SEQ = 0 THEN 6
                WHEN  NODE_NEW_KIND='L' AND :sDterm =  'S' AND F_NO2 = 32   THEN 6
                WHEN  NODE_NEW_KIND='L' AND :sDterm =  'S' AND F_NO2 = 20 AND IN_ROUT_SEQ = 0 THEN 6
                WHEN  NODE_NEW_KIND='L' AND :sRterm NOT IN ( 'D','S' ) AND F_NO2 = 0   THEN 24
                WHEN  NODE_NEW_KIND='L' AND :sDterm NOT IN ( 'D','S' ) AND F_NO2 = 32  THEN 24
                WHEN (F_NO2 =13 ) AND (NODE_NEW_KIND='L') THEN N1ST_TZTM_HRS
                WHEN (F_NO2 =15 ) AND (NODE_NEW_KIND='L') THEN N2ND_TZTM_HRS
                WHEN (F_NO2 =17 ) AND (NODE_NEW_KIND='L') THEN N3RD_TZTM_HRS
                WHEN (F_NO2 =19 ) AND (NODE_NEW_KIND='L') THEN N4TH_TZTM_HRS
                WHEN NODE_NEW_KIND='L' AND OI_BND_CD ='T' AND F_NO2 NOT IN (13,15,17,19) THEN 6
                ELSE
                 (SELECT TZTM_HRS
                    FROM PRD_INLND_EACH_LNK
                   WHERE lnk_org_nod_cd = NODE_NEW1
                    AND lnk_dest_nod_cd = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))
                    AND TRSP_MOD_CD = DECODE(LENGTH(NODE_NEW2),7,'TD',SUBSTR(NODE_NEW2,10,2))
                    )
            END ) TZTM_DW_HRS,
            (CASE
                WHEN (F_NO2 =13 ) AND (NODE_NEW_KIND='L') THEN N1ST_LANE_CD
                WHEN (F_NO2 =15 ) AND (NODE_NEW_KIND='L') THEN N2ND_LANE_CD
                WHEN (F_NO2 =17 ) AND (NODE_NEW_KIND='L') THEN N3RD_LANE_CD
                WHEN (F_NO2 =19 ) AND (NODE_NEW_KIND='L') THEN N4TH_LANE_CD
            END ) SLANE,
            ( CASE
                WHEN NODE_NEW_KIND='N' THEN
                (
                    SELECT TO_CHAR(N1ST_VNDR_SEQ)
                    FROM MDM_YARD
                    WHERE YD_CD = NODE_NEW1
                )
                WHEN NODE_NEW_KIND='L' AND F_NO2 IN (13,15,17,19) THEN
                (
                    SELECT TO_CHAR(VNDR_SEQ)
                    FROM PRD_FDR_LNK
                    WHERE VSL_SLAN_CD =DECODE(F_NO2,13,N1ST_LANE_CD,15,N2ND_LANE_CD,17,N3RD_LANE_CD,19,N4TH_LANE_CD)
                    AND LNK_ORG_LOC_CD = SUBSTR(NODE_NEW1,1,5)
                    AND LNK_DEST_LOC_CD = DECODE(LENGTH(NODE_NEW2),7,SUBSTR(NODE_NEW2,1,5),SUBSTR(NODE_NEW2,3,5))
                )
                WHEN NODE_NEW_KIND='L' AND LENGTH(NODE_NEW2) > 7 THEN DECODE(SUBSTR(NODE_NEW2,12,6),'N','',SUBSTR(NODE_NEW2,12,6))
                ELSE
                   (
                    SELECT TO_CHAR(D.VNDR_SEQ )
                    FROM PRD_INLND_ROUT_MST M, PRD_INLND_ROUT_DTL D
                    WHERE M.ROUT_ORG_NOD_CD =NODE_NEW1
                    AND M.ROUT_DEST_NOD_CD = DECODE(LENGTH(NODE_NEW2),7,NODE_NEW2,SUBSTR(NODE_NEW2,3,7))
                    AND M.PRIO_SEQ = (
                                       SELECT /*+ INDEX (XAK1PRD_INLND_ROUT_MST M2) */
                                       M2.PRIO_SEQ
                                       FROM PRD_INLND_ROUT_MST M2, PRD_INLND_ROUT_DTL D2
                                       WHERE
                                       M2.ROUT_ORG_NOD_CD = NODE_NEW1
                                       AND M2.ROUT_DEST_NOD_CD = NODE_NEW2
                                       AND M2.ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                                       AND M2.ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                                       AND M2.ROUT_SEQ = D2.ROUT_SEQ
                                       AND NVL(M2.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
                                       AND NVL(M2.DELT_FLG,'N') <> 'Y'
                                       AND D2.LNK_ORG_NOD_CD = NODE_NEW1
                                       AND D2.LNK_DEST_NOD_CD = NODE_NEW2
                                       AND D2.ROUT_DTL_SEQ = 1
                                       AND NOT EXISTS ( SELECT 'X' FROM PRD_INLND_ROUT_DTL
                                                        WHERE
                                                        ROUT_ORG_NOD_CD = D2.ROUT_ORG_NOD_CD
                                                        AND ROUT_DEST_NOD_CD = D2.ROUT_DEST_NOD_CD
                                                        AND ROUT_SEQ = D2.ROUT_SEQ
                                                        AND ROUT_DTL_SEQ = 2 )
                                       AND ROWNUM = 1
                                    )
                    AND M.ROUT_ORG_NOD_CD = D.ROUT_ORG_NOD_CD
                    AND M.ROUT_DEST_NOD_CD = D.ROUT_DEST_NOD_CD
                    AND M.ROUT_SEQ = D.ROUT_SEQ
                    AND NVL(M.PCTL_IO_BND_CD,OI_BND_CD) IN (OI_BND_CD, 'B')
                    AND NVL(M.DELT_FLG,'N') <> 'Y'
                    AND M.ROUT_ORG_NOD_CD = D.LNK_ORG_NOD_CD
                    AND M.ROUT_DEST_NOD_CD = D.LNK_DEST_NOD_CD
                    AND ROWNUM = 1
                    )
            END ) N1ST_VNDR_SEQ,
            ( CASE
                WHEN NODE_NEW_KIND='N' THEN
                (
                    SELECT N2ND_VNDR_SEQ
                    FROM MDM_YARD
                    WHERE YD_CD = NODE_NEW1
                )
             END ) N2ND_VNDR_SEQ,
            ( CASE
                WHEN NODE_NEW_KIND='N' THEN
                (
                    SELECT N3RD_VNDR_SEQ
                    FROM MDM_YARD
                    WHERE YD_CD = NODE_NEW1
                )
             END ) N3RD_VNDR_SEQ,
            ( CASE
                WHEN F_NO2 IN (13,15,17,19) AND (NODE_NEW_KIND='L') THEN
                    DECODE(F_NO2,13,N1ST_SKD_DIR_CD,15,N2ND_SKD_DIR_CD,17,N3RD_SKD_DIR_CD,19,N4TH_SKD_DIR_CD,NULL)
            END ) DIR_CD,
            DECODE(OI_BND_CD,'I',IN_ORG,'O',OUT_ORG,'T',OCN_ORG) ROUT_ORG,
            DECODE(OI_BND_CD,'I',IN_DEST,'O',OUT_DEST,'T',OCN_DEST) ROUT_DEST,
            DECODE(OI_BND_CD,'I',in_rout_seq,'O',out_rout_seq,'T',OCN_ROUT_SEQ) ROUT_SEQ,
            NVL(TO_DATE(DECODE(:sSkdType,'D',NVL(:sSkdDate,TO_CHAR(SYSDATE,'yyyymmdd'))||'090000',
                'T',NVL(:sSkdDate,TO_CHAR(SYSDATE,'yyyymmdd'))||'230000',NVL(:sSkdDate,TO_CHAR(SYSDATE,'yyyymmdd'))||'000000'),'yyyymmddhh24miss'),SYSDATE) S_DATE,
            NVL(:sSkdType,'D') S_TYPE
            FROM
            (
                SELECT C_POR, C_POL,C_POD,C_DEL,
                GP1,  F_N0 AS F_NO2, L_N0, O1,
                (CASE LENGTH(NODE1) WHEN 7 THEN NODE1 ELSE SUBSTR(NODE1,3,7)  END ) NODE_NEW1,
                (
                 CASE WHEN L_N0 = 1 THEN NODE1
                      WHEN L_N0 = 2 AND F_N0 =32 AND :sDterm = 'S' AND IN_ROUT_SEQ =0 THEN ''
                      WHEN L_N0 = 2 THEN LEAD(NODE1, 1, NULL) OVER (PARTITION BY GP1 ORDER BY GP1,F_N0,L_N0,O1)
                 END
                ) NODE_NEW2,
                (CASE L_N0 WHEN 1 THEN 'N' WHEN 2 THEN 'L' END) NODE_NEW_KIND,
                (
                CASE
                    WHEN F_N0 <=12 OR (F_N0 = 13 AND L_N0 =1)  THEN 'O'
                    WHEN F_N0 >= 20  THEN 'I' ELSE 'T'
                END
                ) OI_BND_CD,
                N1ST_LANE_CD,
                N1ST_SKD_DIR_CD,
                N2ND_POL_CD,
                N2ND_LANE_CD,
                N2ND_SKD_DIR_CD,
                N3RD_POL_CD,
                N3RD_LANE_CD,
                N3RD_SKD_DIR_CD,
                N4TH_POL_CD,
                N4TH_LANE_CD,
                N4TH_SKD_DIR_CD,
                N1ST_TZTM_HRS ,
                N2ND_TZTM_HRS ,
                N3RD_TZTM_HRS ,
                N4TH_TZTM_HRS,
                IN_ORG,IN_DEST,in_rout_seq,
                OUT_ORG, OUT_DEST,out_rout_seq,
                OCN_ORG, OCN_DEST, OCN_ROUT_SEQ
                FROM
                (
                    SELECT C_POR, C_POL,C_POD,C_DEL,
                    F_N0,
                    GP1,
                    NODE1,
                    ROWNUM O1,
                    N1ST_LANE_CD,
                    N1ST_SKD_DIR_CD,
                    N2ND_POL_CD,
                    N2ND_LANE_CD,
                    N2ND_SKD_DIR_CD,
                    N3RD_POL_CD,
                    N3RD_LANE_CD,
                    N3RD_SKD_DIR_CD,
                    N4TH_POL_CD,
                    N4TH_LANE_CD,
                    N4TH_SKD_DIR_CD,
                    N1ST_TZTM_HRS ,
                    N2ND_TZTM_HRS ,
                    N3RD_TZTM_HRS ,
                    N4TH_TZTM_HRS,
                    IN_ORG,IN_DEST,in_rout_seq,
                    OUT_ORG, OUT_DEST,out_rout_seq,
                    OCN_ORG, OCN_DEST, OCN_ROUT_SEQ
                    FROM
                    (
                        SELECT C_POR, C_POL,C_POD,C_DEL,F_N0,
                        GP1,
                        (
                        CASE F_N0
                            WHEN 0 THEN MTPU_CY
                            WHEN 1 THEN DECODE(:sRterm,'T','',DECODE(:sRterm,'F','',DECODE(:sPor,:sPol,DECODE(OUT_ROUT_SEQ,0,DECODE(:sRterm,'D',C_POR,'S',C_POR,''),C_POR),C_POR)))
                            WHEN 2 THEN OL_NODE01   WHEN 3 THEN OL_NODE02   WHEN 4 THEN OL_NODE03   WHEN 5 THEN OL_NODE04
                            WHEN 6 THEN OL_NODE05   WHEN 7 THEN OL_NODE06   WHEN 8 THEN OL_NODE07   WHEN 9 THEN OL_NODE08
                            WHEN 10 THEN OL_NODE09  WHEN 11 THEN OL_NODE10  WHEN 12 THEN C_POL0
                            WHEN 13 THEN DECODE(:sRterm,'T',C_POR,DECODE(:sRterm,'F',C_POR,C_POL))  WHEN 14 THEN C_POD1
                            WHEN 15 THEN C_POL1     WHEN 16 THEN C_POD2     WHEN 17 THEN C_POL2     WHEN 18 THEN C_POD3
                            WHEN 19 THEN C_POL3     WHEN 20 THEN C_POD      WHEN 21 THEN C_POD0     WHEN 22 THEN IL_NODE01
                            WHEN 23 THEN IL_NODE02  WHEN 24 THEN IL_NODE03  WHEN 25 THEN IL_NODE04  WHEN 26 THEN IL_NODE05
                            WHEN 27 THEN IL_NODE06  WHEN 28 THEN IL_NODE07  WHEN 29 THEN IL_NODE08  WHEN 30 THEN IL_NODE09
                            WHEN 31 THEN IL_NODE10
                            WHEN 32 THEN DECODE(:sDterm,'T','',DECODE(:sDterm,'F','',DECODE(NVL(:sPod,SUBSTR(C_POD,1,5)),:sDel,DECODE(IN_ROUT_SEQ,0,DECODE(:sDterm,'D',C_DEL,'S',C_DEL,''),C_DEL),C_DEL)))
                            WHEN 33 THEN MTRTN_CY ELSE 'N/A'
                        END
                        ) NODE1,
                        N1ST_LANE_CD,
                        N1ST_SKD_DIR_CD,
                        N2ND_POL_CD,
                        N2ND_LANE_CD,
                        N2ND_SKD_DIR_CD,
                        N3RD_POL_CD,
                        N3RD_LANE_CD,
                        N3RD_SKD_DIR_CD,
                        N4TH_POL_CD,
                        N4TH_LANE_CD,
                        N4TH_SKD_DIR_CD,
                        N1ST_TZTM_HRS ,
                        N2ND_TZTM_HRS ,
                        N3RD_TZTM_HRS ,
                        N4TH_TZTM_HRS,
                        IN_ORG,IN_DEST,in_rout_seq,
                        OUT_ORG, OUT_DEST,out_rout_seq,
                        OCN_ORG, OCN_DEST, OCN_ROUT_SEQ
                        FROM
                        (
                           SELECT
                           N1ST_LANE_CD, N1ST_SKD_DIR_CD,
                           N2ND_POL_CD, N2ND_LANE_CD, N2ND_SKD_DIR_CD,
                           N3RD_POL_CD, N3RD_LANE_CD, N3RD_SKD_DIR_CD,
                           N4TH_POL_CD, N4TH_LANE_CD, N4TH_SKD_DIR_CD,
                           N1ST_TZTM_HRS, N2ND_TZTM_HRS, N3RD_TZTM_HRS, N4TH_TZTM_HRS,
                           POL1, POD1, POL2, POD2, POL3, POD3,
                           MTPU_CY, C_POR,
                           OL_NODE01, OL_NODE02, OL_NODE03, OL_NODE04, OL_NODE05, OL_NODE06, OL_NODE07, OL_NODE08, OL_NODE09, OL_NODE10,
                           C_POL0, C_POL, C_POD1, C_POL1, C_POD2, C_POL2, C_POD3, C_POL3, C_POD, C_POD0,
                           IL_NODE01, IL_NODE02, IL_NODE03, IL_NODE04, IL_NODE05, IL_NODE06, IL_NODE07, IL_NODE08, IL_NODE09, IL_NODE10,
                           C_DEL, MTRTN_CY,
                           OUT_ORG, OUT_DEST, O_PRIO_SEQ, OUT_ROUT_SEQ,
                           IN_ORG, IN_DEST, I_PRIO_SEQ, IN_ROUT_SEQ,
                           OCN_ORG, OCN_DEST, OCN_ROUT_SEQ,
                           RANK() OVER (ORDER BY OCN_ORG , OCN_DEST , OCN_ROUT_SEQ,OUT_ORG , OUT_DEST , OUT_ROUT_SEQ ,
                                        IN_ORG, IN_DEST, IN_ROUT_SEQ,C_POL,POD1,POL1, POD2,POL2,POD3,POL3,C_POD) GP1
                           FROM
                           (
                               SELECT
                               N1ST_LANE_CD,
                               N1ST_SKD_DIR_CD,
                               N2ND_POL_CD,
                               N2ND_LANE_CD,
                               N2ND_SKD_DIR_CD,
                               N3RD_POL_CD,
                               N3RD_LANE_CD,
                               N3RD_SKD_DIR_CD,
                               N4TH_POL_CD,
                               N4TH_LANE_CD,
                               N4TH_SKD_DIR_CD,
                               N1ST_TZTM_HRS ,
                               N2ND_TZTM_HRS ,
                               N3RD_TZTM_HRS ,
                               N4TH_TZTM_HRS,
                               POL1,
                               POD1,
                               POL2,
                               POD2,
                               POL3,
                               POD3,
                               MTPU_CY,
                               POR AS C_POR,
                               OL_NODE01,
                               OL_NODE02,
                               OL_NODE03,
                               OL_NODE04,
                               OL_NODE05,
                               OL_NODE06,
                               OL_NODE07,
                               OL_NODE08,
                               OL_NODE09,
                               OL_NODE10,
                               '' AS C_POL0,
                               POL0 AS C_POL,
                               DECODE(POD1,POD,'',DECODE(POD1, POL1, '', POD1)) AS C_POD1,
                               POL1 AS C_POL1,
                               DECODE(POD2,POD,'',DECODE(POD2, POL2, '', POD2)) AS C_POD2,
                               POL2 AS C_POL2,
                               DECODE(POD3,POD,'',DECODE(POD3, POL3, '', POD3)) AS C_POD3,
                               POL3 AS C_POL3,
                               POD AS C_POD,
                               DECODE(POD, POD0, NULL, POD0) AS C_POD0,
                               IL_NODE01,
                               IL_NODE02,
                               IL_NODE03,
                               IL_NODE04,
                               IL_NODE05,
                               IL_NODE06,
                               IL_NODE07,
                               IL_NODE08,
                               IL_NODE09,
                               IL_NODE10,
                               DEL AS C_DEL,
                               MTRTN_CY,
                               OUT_LAND.ROUT_ORG_NOD_CD OUT_ORG,
                               OUT_LAND.ROUT_DEST_NOD_CD OUT_DEST,
                               OUT_LAND.PRIO_SEQ O_PRIO_SEQ,
                               OUT_LAND.ROUT_SEQ OUT_ROUT_SEQ,
                               IN_LAND.ROUT_ORG_NOD_CD IN_ORG,
                               IN_LAND.ROUT_DEST_NOD_CD IN_DEST,
                               IN_LAND.PRIO_SEQ I_PRIO_SEQ,
                               IN_LAND.ROUT_SEQ IN_ROUT_SEQ,
                               OCEAN.ORG_LOC_CD OCN_ORG,
                               OCEAN.DEST_LOC_CD OCN_DEST,
                               OCEAN.ROUT_SEQ OCN_ROUT_SEQ,
                               RANK() OVER (PARTITION BY OUT_LAND.ROUT_DEST_NOD_CD,OCEAN.ROUT_SEQ,IN_LAND.ROUT_ORG_NOD_CD ORDER BY OUT_LAND.PRIO_SEQ ASC) AS O_RK,
                               RANK() OVER (PARTITION BY OUT_LAND.ROUT_DEST_NOD_CD,OCEAN.ROUT_SEQ,IN_LAND.ROUT_ORG_NOD_CD ORDER BY IN_LAND.PRIO_SEQ ASC) AS I_RK,
                               RANK() OVER (ORDER BY  OCEAN.ORG_LOC_CD , OCEAN.DEST_LOC_CD , OCEAN.ROUT_SEQ,
                                    OUT_LAND.ROUT_ORG_NOD_CD , OUT_LAND.ROUT_DEST_NOD_CD , OUT_LAND.ROUT_SEQ ,
                                    IN_LAND.ROUT_ORG_NOD_CD , IN_LAND.ROUT_DEST_NOD_CD , IN_LAND.ROUT_SEQ,POL,POD1,POL1, POD2,POL2,POD3,POL3,POD) GP1
                               , LNK1,LNK2,LNK3,LNK4
                               FROM
                               ( /* OCEAN ROUTE */
                                   SELECT
                                   DISTINCT
                                   POL,--POD1,POL1,POD2,POL2,POD3,POL3,POD,
                                   /* Remove shuttle logic start 0904006*/
                                   
                                   (CASE WHEN :sPod1_n IS NOT NULL
                                            THEN POD1
                                         WHEN POL1 IS NOT NULL 
                                            AND POL1 <> POD1
                                            AND N1ST_TZTM_HRS < N2ND_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N2ND_POL_CD
                                                       AND VSL_SLAN_CD = N1ST_LANE_CD
                                                       AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                       AND TML_CD = POL1),'X') = 'Y'
                                            THEN POL1
                                         WHEN POL1 IS NOT NULL 
                                            AND POL1 <> POD1
                                            AND N1ST_TZTM_HRS >= N2ND_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N2ND_POL_CD
                                                       AND VSL_SLAN_CD = N1ST_LANE_CD
                                                       AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                       AND TML_CD = POL1),'X') = 'Y'
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N2ND_POL_CD
                                                       AND VSL_SLAN_CD = N2ND_LANE_CD
                                                       AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                       AND TML_CD = POD1),'X') <> 'Y'
                                          THEN POL1
                                         ELSE POD1
                                   END) 
                                   POD1,  
                                   (CASE WHEN :sPol2_n IS NOT NULL
                                            THEN POL1
                                         WHEN POL1 IS NOT NULL  
                                            AND POL1 <> POD1  
                                            AND N1ST_TZTM_HRS >= N2ND_TZTM_HRS 
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N2ND_POL_CD
                                                       AND VSL_SLAN_CD = N2ND_LANE_CD
                                                       AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                       AND TML_CD = POD1),'X') = 'Y'
                                          THEN POD1
                                         WHEN POL1 IS NOT NULL 
                                            AND POL1 <> POD1
                                            AND N1ST_TZTM_HRS <  N2ND_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N2ND_POL_CD
                                                       AND VSL_SLAN_CD = N1ST_LANE_CD
                                                       AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                       AND TML_CD = POL1),'X') <> 'Y'
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N2ND_POL_CD
                                                       AND VSL_SLAN_CD = N2ND_LANE_CD
                                                       AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                       AND TML_CD = POD1),'X') = 'Y'
                                          THEN POD1 
                                         ELSE POL1
                                   END)                     
                                   POL1,                                   
                                                                      
                                   (CASE WHEN :sPod2_n IS NOT NULL
                                            THEN POD2
                                         WHEN POL2 IS NOT NULL 
                                            AND POL2 <> POD2
                                            AND N2ND_TZTM_HRS < N3RD_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N3RD_POL_CD
                                                       AND VSL_SLAN_CD = N2ND_LANE_CD
                                                       AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                       AND TML_CD = POL2),'X') = 'Y'
                                          THEN POL2
                                         WHEN POL2 IS NOT NULL 
                                            AND POL2 <> POD2
                                            AND N2ND_TZTM_HRS >= N3RD_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N3RD_POL_CD
                                                       AND VSL_SLAN_CD = N2ND_LANE_CD
                                                       AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                       AND TML_CD = POL2),'X') = 'Y'
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N3RD_POL_CD
                                                       AND VSL_SLAN_CD = N3RD_LANE_CD
                                                       AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                       AND TML_CD = POD2),'X') <> 'Y'
                                          THEN POL2
                                         ELSE POD2
                                   END)
                                   POD2,
                                   (CASE WHEN :sPol3_n IS NOT NULL
                                            THEN POL2
                                         WHEN POL2 IS NOT NULL  
                                            AND POL2 <> POD2  
                                            AND N2ND_TZTM_HRS >= N3RD_TZTM_HRS 
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N3RD_POL_CD
                                                       AND VSL_SLAN_CD = N3RD_LANE_CD
                                                       AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                       AND TML_CD = POD2),'X') = 'Y'
                                          THEN POD2
                                         WHEN POL2 IS NOT NULL 
                                            AND POL2 <> POD2
                                            AND N2ND_TZTM_HRS <  N3RD_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N3RD_POL_CD
                                                       AND VSL_SLAN_CD = N2ND_LANE_CD
                                                       AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                       AND TML_CD = POL2),'X') <> 'Y'
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N3RD_POL_CD
                                                       AND VSL_SLAN_CD = N3RD_LANE_CD
                                                       AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                       AND TML_CD = POD2),'X') = 'Y'
                                          THEN POD2 
                                         ELSE POL2
                                   END)
                                   POL2,
                                   
                                   (CASE WHEN :sPod3_n IS NOT NULL
                                            THEN POD3
                                         WHEN POL3 IS NOT NULL 
                                            AND POL3 <> POD3
                                            AND N3RD_TZTM_HRS < N4TH_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N4TH_POL_CD
                                                       AND VSL_SLAN_CD = N3RD_LANE_CD
                                                       AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                       AND TML_CD = POL3),'X') = 'Y'
                                          THEN POL3
                                         WHEN POL3 IS NOT NULL 
                                            AND POL3 <> POD3
                                            AND N3RD_TZTM_HRS >= N4TH_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N4TH_POL_CD
                                                       AND VSL_SLAN_CD = N3RD_LANE_CD
                                                       AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                       AND TML_CD = POL3),'X') = 'Y'
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N4TH_POL_CD
                                                       AND VSL_SLAN_CD = N4TH_LANE_CD
                                                       AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                       AND TML_CD = POD3),'X') <> 'Y'
                                          THEN POL3
                                         ELSE POD3
                                   END)
                                   POD3,
                                   (CASE WHEN :sPol4_n IS NOT NULL
                                            THEN POL3
                                         WHEN POL3 IS NOT NULL  
                                            AND POL3 <> POD3  
                                            AND N3RD_TZTM_HRS >= N4TH_TZTM_HRS 
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N4TH_POL_CD
                                                       AND VSL_SLAN_CD = N4TH_LANE_CD
                                                       AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                       AND TML_CD = POD3),'X') = 'Y'
                                          THEN POD3
                                         WHEN POL3 IS NOT NULL 
                                            AND POL3 <> POD3
                                            AND N3RD_TZTM_HRS <  N4TH_TZTM_HRS
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N4TH_POL_CD
                                                       AND VSL_SLAN_CD = N3RD_LANE_CD
                                                       AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                       AND TML_CD = POL3),'X') <> 'Y'
                                            AND NVL((SELECT 'Y' 
                                                     FROM PRD_PORT_TML_EXPT
                                                     WHERE PORT_CD = N4TH_POL_CD
                                                       AND VSL_SLAN_CD = N4TH_LANE_CD
                                                       AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                       AND TML_CD = POD3),'X') = 'Y'
                                          THEN POD3 
                                         ELSE POL3
                                   END)
                                   POL3,
                                   POD,
                                   /* Remove shuttle logic end   0904006*/
                                   N1ST_LANE_CD,N1ST_SKD_DIR_CD,N2ND_POL_CD,N2ND_LANE_CD,N2ND_SKD_DIR_CD,
                                   N3RD_POL_CD,N3RD_LANE_CD,N3RD_SKD_DIR_CD,N4TH_POL_CD,N4TH_LANE_CD,N4TH_SKD_DIR_CD,
                                   N1ST_TZTM_HRS,N2ND_TZTM_HRS,N3RD_TZTM_HRS,
                                   N4TH_TZTM_HRS,ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ, LNK_KNT
                                   ,( CASE  -- 20090331
                                      WHEN LNK_KNT = 1   THEN  
                                          CASE
                                            WHEN POL IS NOT NULL AND POD1 IS NOT NULL THEN 'Y'
                                            ELSE 'X'
                                          END
                                      ELSE 'Y'  
                                    END)  LNK1,                                     
                                    (CASE  
                                      WHEN LNK_KNT = 2   THEN  
                                          CASE
                                            WHEN POL IS NOT NULL AND POD1 IS NOT NULL 
                                             AND POL1 IS NOT NULL AND POD2 IS NOT NULL THEN 'Y'
                                            ELSE 'X'
                                          END
                                      ELSE 'Y'  
                                    END)  LNK2, 
                                    (CASE  
                                      WHEN LNK_KNT = 3   THEN  
                                          CASE
                                            WHEN POL IS NOT NULL AND POD1 IS NOT NULL 
                                             AND POL1 IS NOT NULL AND POD2 IS NOT NULL 
                                             AND POL2 IS NOT NULL AND POD3 IS NOT NULL THEN 'Y'
                                            ELSE 'X'
                                          END
                                      ELSE 'Y'  
                                    END)  LNK3,                                     
                                    (CASE  
                                      WHEN LNK_KNT = 4   THEN  
                                          CASE
                                            WHEN POL IS NOT NULL AND POD1 IS NOT NULL 
                                             AND POL1 IS NOT NULL AND POD2 IS NOT NULL 
                                             AND POL2 IS NOT NULL AND POD3 IS NOT NULL 
                                             AND POL3 IS NOT NULL AND POD IS NOT NULL THEN 'Y'
                                            ELSE 'X'
                                          END
                                      ELSE 'Y'  
                                    END)  LNK4        
                                   FROM
                                   (
                                       SELECT LNK_KNT,-- 20090331
                                        --BKG MAIN POL NODE에 입력될때 , 이때 fdr 일경우에는 port tml mtx를 보지않고 무조건 입력한 정보로 사용,  
                                        --fdr가 아니면  sPolNode 가 TML MTX에 등록된 거면 그대로 사용, 아니면 EXCEPTION 에서 찾아봄
                                        --BKG MAIN POL NODE에 입력은 안되고  t/s 의 pol1 에 node가 입력될때 이때 fdr 일경우에는 port tml mtx를 보지않고 무조건 입력한 정보로 사용, 
                                        --fdr가 아니면 sPol1_n 가 TML MTX에 등록된 거면 그대로 사용, 아니면 EXCEPTION 에서 찾아봄
                                        -- 그외는 TML MTX에 등록된 거
                                        -- sPol1_n ==> 신항입력에따른 새로운 변수(7자리 노드) 
                                        DECODE(:sPolNode,'',DECODE(:sPol1_n ,'', N1.TML_CD, decode(N1ST_SVC_TP,'O',:sPol1_n, 
                                                                                                   DECODE(:sPol1_n,N1.TML_CD,N1.TML_CD, NVL( (
                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                     WHERE PORT_CD= ORG_LOC_CD
                                                                                                     AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                     AND TML_CD=:sPol1_n                                                        
                                                                                                   ), N1.TML_CD ) ))   -- 2009-03-03
                                                                  ) ,
                                                            decode(N1ST_SVC_TP,'O',:sPolNode, DECODE(:sPolNode,N1.TML_CD,N1.TML_CD, NVL((
                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                     WHERE PORT_CD= ORG_LOC_CD
                                                                                                     AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                     AND TML_CD=:sPolNode                                                        
                                                                                                   ),N1.TML_CD ) )) ) -- 2009-03-03
                                    
                                        POL,
                                        
                                        --NEW t/s가 있을때 처리 
                                        (CASE
                                            WHEN N1ST_SVC_TP = 'O' AND :sPod1_n IS NOT NULL THEN :sPod1_n
                                            WHEN LNK_KNT = 1 THEN
                                                DECODE(:sPodNode, '', decode(:sPod1_n, '',N2.TML_CD , decode(N1ST_SVC_TP,'O',:sPod1_n, --기존로직 (마지막이고 fdr일때 그대로 사용)
                                                                                                               DECODE(:sPod1_n,N2.TML_CD,N2.TML_CD, NVL((
                                                                                                                SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                 WHERE PORT_CD= N1ST_POD_CD
                                                                                                                 AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                                 AND TML_CD=:sPod1_n ),N2.TML_CD )   --2009-03-02                                                     
                                                                                                               )
                                                                                                      ) 
                                                                      ) , 
                                                                      DECODE(N1ST_SVC_TP, 'O',:sPodNode,
                                                                        NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                         WHERE PORT_CD=N1ST_POD_CD
                                                                         AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                         AND TML_CD=:sPodNode),N2.TML_CD))
                                                      )
                                            ELSE DECODE(:sPod1_n ,'', N2.TML_CD, 
                                                        DECODE(:sPod1_n,N2.TML_CD,N2.TML_CD, NVL((
                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                         WHERE PORT_CD= N1ST_POD_CD
                                                         AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                         AND TML_CD=:sPod1_n ), N2.TML_CD  )  --2009-03-03                                                     
                                                       ) )
                                        END) POD1,
                                        
                                        -- NEW 신항으로 인해 노드 정보 들어오면 예외상황 체크 
                                        DECODE(:sPol2_n ,'',  N3.TML_CD, 
                                                                          DECODE(:sPol2_n,N3.TML_CD,N3.TML_CD, NVL((
                                                                            SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                             WHERE PORT_CD= N2ND_POL_CD
--                                                                             AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                             AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD --2009-02-27
                                                                             AND TML_CD=:sPol2_n                                                        
                                                                           ),  N3.TML_CD ) ) --2009-03-03
                                         ) POL1,

                                        --NEW
                                        (CASE
                                            WHEN N2ND_SVC_TP = 'O' AND :sPod2_n IS NOT NULL THEN :sPod2_n
                                            WHEN LNK_KNT = 2 THEN -- 마지막 링크일때 
                                                DECODE(:sPodNode, '', DECODE( :sPod2_n, '', N4.TML_CD, DECODE(N2ND_SVC_TP, 'O',:sPod2_n,
                                                                                    NVL( (SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                     WHERE PORT_CD=N2ND_POD_CD
                                                                                     AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                     AND TML_CD=:sPod2_n), N4.TML_CD ) -- NEW 2009-03-02
                                                                                  )
                                                                             ),
                                                                       -- sPodNod가 있을때 (기존 로직)
                                                                       DECODE(N2ND_SVC_TP, 'O',:sPodNode,
                                                                                NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                 WHERE PORT_CD=N2ND_POD_CD
                                                                                 AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                 AND TML_CD=:sPodNode),N4.TML_CD))       
                                                      )
                                            ELSE DECODE(:sPod2_n ,'', N4.TML_CD, DECODE(:sPod2_n,N4.TML_CD,N4.TML_CD, NVL((
                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                         WHERE PORT_CD= N2ND_POD_CD
                                                         AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                         AND TML_CD=:sPod2_n ), N4.TML_CD)   --2009-03-03                                                     
                                                       ) )  
                                        END) POD2,                                        

                                        -- NEW 신항으로 인해 노드 정보 들어오면 예외상황 체크 
                                        DECODE(:sPol3_n ,'', N5.TML_CD, DECODE(:sPol3_n,N5.TML_CD,N5.TML_CD, NVL( (
                                                                            SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                             WHERE PORT_CD= N3rd_POL_CD
                                                                             AND VSL_SLAN_CD=N3rd_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                             AND TML_CD=:sPol3_n                                                        
                                                                           ), N5.TML_CD) ) --2009-03-03
                                         )  POL2,

                                        --new 
                                        (CASE
                                            WHEN LNK_KNT = 3 THEN -- 마지막 링크일때 
                                                DECODE(:sPodNode, '', DECODE( :sPod3_n, '', N6.TML_CD, DECODE(N3RD_SVC_TP, 'O',:sPod3_n,
                                                                                    NVL( (SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                     WHERE PORT_CD=N3RD_POD_CD
                                                                                     AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                                     AND TML_CD=:sPod3_n), N6.TML_CD ) --N6.TML_CD) -- 2009-03-02
                                                                                  )
                                                                             ),
                                                                             -- sPodNode가 있을때 (기존 로직)
                                                                      DECODE(N3RD_SVC_TP, 'O',:sPodNode,
                                                                             NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                             WHERE PORT_CD=N3RD_POD_CD
                                                                             AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                             AND TML_CD=:sPodNode),N6.TML_CD))
                                                                             
                                                      )
                                            ELSE DECODE(:sPod3_n ,'', N6.TML_CD, DECODE(:sPod3_n,N6.TML_CD,N6.TML_CD, NVL((
                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                         WHERE PORT_CD= N3RD_POD_CD
                                                         AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                         AND TML_CD=:sPod3_n ) ,  N6.TML_CD )   --2009-03-03                                                   
                                                       ) )  
                                        END)  pod3,                                  

                                        -- NEW 신항으로 인해 노드 정보 들어오면 예외상황 체크 
                                        DECODE(:sPol4_n ,'', N7.TML_CD, DECODE(:sPol4_n,N7.TML_CD,N7.TML_CD, NVL( (
                                                                            SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                             WHERE PORT_CD= N4TH_POL_CD
                                                                             AND VSL_SLAN_CD=N4TH_LANE_CD AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                                             AND TML_CD=:sPol4_n                                                        
                                                                           ),N7.TML_CD ) ) -- 2009-03-03
                                         )  POL3,  
                                                                                                                       
                                        --new
                                        (CASE
                                            WHEN TS_IND_CD ='D' THEN
                                                                                     
                                                DECODE(:sPodNode,'',DECODE(:sPod1_n ,'', N2.TML_CD, decode(N1ST_SVC_TP,'O',:sPod1_n, 
                                                                                                           DECODE(:sPod1_n,N2.TML_CD,N2.TML_CD, NVL((
                                                                                                                SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                 WHERE PORT_CD= N1ST_POD_CD
                                                                                                                 AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                                 AND TML_CD=:sPod1_n ), N2.TML_CD ) --2009-03-03
                                                                                                           ))
                                                                    ) ,
                                                                    DECODE(N1ST_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,N2.TML_CD,N2.TML_CD, NVL((
                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                     WHERE PORT_CD= N1ST_POD_CD
                                                                                                     AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                     AND TML_CD=:sPodNode                                                        
                                                                                                   ), N2.TML_CD) )) )
                                                                                                                                                                                        
                                            WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NULL THEN
                                                 DECODE(:sPodNode,'',DECODE(:sPod2_n ,'', N4.TML_CD, decode(N2ND_SVC_TP,'O',:sPod2_n, 
                                                                                                               DECODE(:sPod2_n,N4.TML_CD,N4.TML_CD, NVL((
                                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                     WHERE PORT_CD= N2ND_POD_CD
                                                                                                                     AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                                                     AND TML_CD=:sPod2_n ), N4.TML_CD  ) --2009-03-02
                                                                                                               ))
                                                                        ) ,
                                                                        DECODE(N2ND_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,N4.TML_CD,N4.TML_CD, NVL((
                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                         WHERE PORT_CD= N2ND_POD_CD
                                                                                                         AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                                         AND TML_CD=:sPodNode                                                        
                                                                                                       ), N4.TML_CD) )) )
                                                                                     
                                            WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NOT NULL AND N4TH_LANE_CD IS NULL THEN
                                                                               
                                                 DECODE(:sPodNode,'',DECODE(:sPod3_n ,'', N6.TML_CD, decode(N3RD_SVC_TP,'O',:sPod3_n, 
                                                                                                               DECODE(:sPod3_n,N6.TML_CD,N6.TML_CD, NVL((
                                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                     WHERE PORT_CD= N3RD_POD_CD
                                                                                                                     AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                                                                     AND TML_CD=:sPod3_n ), N6.TML_CD  ) --2009-03-02
                                                                                                               ))
                                                                        ) ,
                                                                        DECODE(N3RD_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,N6.TML_CD,N6.TML_CD, NVL((
                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                         WHERE PORT_CD= N3RD_POD_CD
                                                                                                         AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                                                         AND TML_CD=:sPodNode                                                        
                                                                                                       ), N6.TML_CD) )) )
                                                                                     
                                            WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NOT NULL AND N4TH_LANE_CD IS NOT NULL THEN
                                  
                                                 DECODE(:sPodNode,'',DECODE(:sPod4_n ,'', N9.TML_CD, decode(N4TH_SVC_TP,'O',:sPod4_n, 
                                                                                                               DECODE(:sPod4_n,N9.TML_CD,N9.TML_CD, NVL((
                                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                     WHERE PORT_CD= DEST_LOC_CD
                                                                                                                     AND VSL_SLAN_CD=N4TH_LANE_CD AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                                                                                     AND TML_CD=:sPod4_n ), N9.TML_CD ) --2009-03-03
                                                                                                               ))
                                                                        ) ,
                                                                        DECODE(N4TH_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,N9.TML_CD,N9.TML_CD, NVL((
                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                         WHERE PORT_CD= DEST_LOC_CD
                                                                                                         AND VSL_SLAN_CD=N4TH_LANE_CD AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                                                                         AND TML_CD=:sPodNode                                                        
                                                                                                       ),N9.TML_CD ) )) )                                                     
                                        END)  POD,

                                                                                
                                       N1ST_LANE_CD,
                                       N1ST_SKD_DIR_CD,
                                       N2ND_POL_CD,
                                       N2ND_LANE_CD,
                                       N2ND_SKD_DIR_CD,
                                       N3RD_POL_CD,
                                       N3RD_LANE_CD,
                                       N3RD_SKD_DIR_CD,
                                       N4TH_POL_CD,
                                       N4TH_LANE_CD,
                                       N4TH_SKD_DIR_CD,
                                       N1ST_TZTM_HRS ,
                                       N2ND_TZTM_HRS ,
                                       N3RD_TZTM_HRS ,
                                       N4TH_TZTM_HRS,
                                       ORG_LOC_CD,DEST_LOC_CD,ROUT_SEQ,
                                       (CASE
                                           WHEN N6.TML_CD IS NOT NULL THEN  -- POD3 이 있으면
                                               DECODE(N5.TML_CD,'','N','Y')   -- POL2 가 있어야.
                                           WHEN N4.TML_CD IS NOT NULL THEN -- POD2 가 있으면 
                                               DECODE(N3.TML_CD,'','N','Y')   --POL1 이 있어야.
                                           ELSE 'Y'
                                       END) VALID_TML
                                       
                                       FROM
                                       (
                                                   SELECT
                                                   ORG_LOC_CD,
                                                   N1ST_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N1ST_LANE_CD) N1ST_SVC_TP,
                                                   N1ST_SKD_DIR_CD,
                                                   N1ST_POD_CD,
                                                   N2ND_POL_CD,
                                                   N2ND_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N2ND_LANE_CD) N2ND_SVC_TP,
                                                   N2ND_SKD_DIR_CD,
                                                   N2ND_POD_CD,
                                                   N3RD_POL_CD,
                                                   N3RD_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N3RD_LANE_CD) N3RD_SVC_TP,
                                                   N3RD_SKD_DIR_CD,
                                                   N3RD_POD_CD,
                                                   N4TH_POL_CD,
                                                   N4TH_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N4TH_LANE_CD) N4TH_SVC_TP,
                                                   N4TH_SKD_DIR_CD,
                                                   N1ST_TZTM_HRS ,
                                                   N2ND_TZTM_HRS ,
                                                   N3RD_TZTM_HRS ,
                                                   N4TH_TZTM_HRS,
                                                   DEST_LOC_CD,
                                                   ROUT_SEQ,
                                                   LNK_KNT,
                                                   TS_IND_CD
                                                   FROM PRD_OCN_ROUT A
                                                   WHERE
                                                   A.ORG_LOC_CD =:sPol
                                                   AND A.DEST_LOC_CD IN (SELECT DISTINCT PORT_CD FROM PRD_HUB_LOC_MTCH
                                                                         WHERE LOC_CD = :sDel AND PORT_CD = NVL(:sPod,PORT_CD))
                                                   AND NVL(A.UPD_IND_CD,'S') IN ('C','U','S','T','A','V','G')
                                                   AND A.ROUT_SEQ = NVL(:sRout_seq,A.ROUT_SEQ)
                                                   AND N1ST_POL_CD = NVL(:sPol1,N1ST_POL_CD)
                                                   AND N1ST_POD_CD = NVL(:sPod1,N1ST_POD_CD)
                                                   AND N1ST_LANE_CD IN ( NVL(:sLane1,N1ST_LANE_CD),
                                                                   (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD = :sLane1) )
                                                   AND NVL(N2ND_POL_CD,'X') = NVL(:sPol2,NVL(N2ND_POL_CD,'X'))
                                                   AND NVL(N2ND_POD_CD,'X') = NVL(:sPod2,NVL(N2ND_POD_CD,'X'))
                                                   AND NVL(N2ND_LANE_CD,'X') IN ( NVL(:sLane2,NVL(N2ND_LANE_CD,'X')),
                                                                  (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                               WHERE VSL_SLAN_CD = :sLane2) )
                                                   AND NVL(N3RD_POL_CD,'X') = NVL(:sPol3,NVL(N3RD_POL_CD,'X'))
                                                   AND NVL(N3RD_POD_CD,'X') = NVL(:sPod3,NVL(N3RD_POD_CD,'X'))
                                                   AND NVL(N3RD_LANE_CD,'X') IN ( NVL(:sLane3,NVL(N3RD_LANE_CD,'X')),
                                                                   (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD = :sLane3) )
                                                   AND NVL(N4TH_POL_CD,'X') = NVL(:sPol4,NVL(N4TH_POL_CD,'X'))
                                                   AND NVL(N4TH_POD_CD,'X') = NVL(:sPod4,NVL(N4TH_POD_CD,'X'))
                                                   AND NVL(N4TH_LANE_CD,'X') IN ( NVL(:sLane4,NVL(N4TH_LANE_CD,'X')),
                                                                   (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD = :sLane4) )
                                                   AND (  (SELECT (CASE WHEN
                                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                                        WHERE VSL_SLAN_CD =V.SLAN_CD ) = 'O' THEN 'FDR'
                                                                             ELSE V.SLAN_CD
                                                                   END) SLAN_CD
                                                   FROM VSK_VSL_PORT_SKD  V,VSK_VSL_PORT_SKD  V2
                                                   WHERE V.VSL_CD= substr(:sVvd,1,4)
                                                    and V.SKD_VOY_NO= substr(:sVvd,5,4)
                                                    and V.SKD_DIR_CD = substr(:sVvd,9,1)
                                                    and NVL(V.CNG_STS_CD,'N') <> 'S'
                                                    AND V2.VSL_CD= substr(:sVvd,1,4)
                                                    and V2.SKD_VOY_NO= substr(:sVvd,5,4)
                                                    and V2.SKD_DIR_CD = substr(:sVvd,9,1)
                                                    and NVL(V2.CNG_STS_CD,'N') <> 'S'
                                                    AND V2.CLPT_SEQ > V.CLPT_SEQ
                                                    AND EXISTS
                                                    (SELECT 'X' FROM VSK_VSL_SKD V3
                                                    WHERE V3.VSL_CD = V.VSL_CD
                                                    AND V3.SKD_VOY_NO = V.SKD_VOY_NO
                                                    AND V3.SKD_DIR_CD = V.SKD_DIR_CD
                                                    AND V3.SKD_STS_CD ='ACT')
                                                    AND ROWNUM=1 )      IN ( N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,'FDR')
                                                    OR NVL(:sVvd,'X') = 'X'
                                                    )
                                                   AND NOT EXISTS
                                                   (
                                                       SELECT 'X' FROM PRD_MBGO_MGMT TT
                                                       WHERE SUBSTR (A.ORG_LOC_CD, 1, 2) = TT.FM_CNT_CD
                                                       AND A.TS_IND_CD = 'D'
                                                       AND SUBSTR (A.DEST_LOC_CD, 1, 2) = TT.TO_CNT_CD
                                                   )
                                       ) M ,
                                       PRD_PORT_TML_MTX N1, PRD_PORT_TML_MTX N2, PRD_PORT_TML_MTX N3, PRD_PORT_TML_MTX N4,
                                       PRD_PORT_TML_MTX N5, PRD_PORT_TML_MTX N6, PRD_PORT_TML_MTX N7, PRD_PORT_TML_MTX N8,
                                       PRD_PORT_TML_MTX N9
                                       WHERE ORG_LOC_CD = N1.PORT_CD
                                       AND DECODE(N1ST_SVC_TP,'O','FDR',N1ST_LANE_CD) = N1.VSL_SLAN_CD
                                       AND N1.SKD_DIR_CD= N1ST_SKD_DIR_CD
                                       AND N1ST_POD_CD = N2.PORT_CD(+)
                                       AND DECODE(N1ST_SVC_TP,'O','FDR',N1ST_LANE_CD) = N2.VSL_SLAN_CD(+)
                                       AND N2.SKD_DIR_CD(+)=N1ST_SKD_DIR_CD
                                       AND N2ND_POL_CD = N3.PORT_CD(+)
                                       AND DECODE(N2ND_SVC_TP,'O','FDR',N2ND_LANE_CD) = N3.VSL_SLAN_CD(+)
                                       AND N3.SKD_DIR_CD(+)=N2ND_SKD_DIR_CD
                                       AND N2ND_POD_CD = N4.PORT_CD(+)
                                       AND DECODE(N2ND_SVC_TP,'O','FDR',N2ND_LANE_CD) = N4.VSL_SLAN_CD(+)
                                       AND N4.SKD_DIR_CD(+)=N2ND_SKD_DIR_CD
                                       AND N3RD_POL_CD = N5.PORT_CD(+)
                                       AND DECODE(N3RD_SVC_TP,'O','FDR',N3RD_LANE_CD) = N5.VSL_SLAN_CD(+)
                                       AND N5.SKD_DIR_CD(+)=N3RD_SKD_DIR_CD
                                       AND N3RD_POD_CD = N6.PORT_CD(+)
                                       AND DECODE(N3RD_SVC_TP,'O','FDR',N3RD_LANE_CD) = N6.VSL_SLAN_CD(+)
                                       AND N6.SKD_DIR_CD(+)=N3RD_SKD_DIR_CD
                                       AND N4TH_POL_CD = N7.PORT_CD(+)
                                       AND DECODE(N4TH_SVC_TP,'O','FDR',N4TH_LANE_CD) = N7.VSL_SLAN_CD(+)
                                       AND N7.SKD_DIR_CD(+)=N4TH_SKD_DIR_CD
                                       AND DEST_LOC_CD = N8.PORT_CD(+)
                                       AND DECODE(N3RD_SVC_TP,'O','FDR',N3RD_LANE_CD) = N8.VSL_SLAN_CD(+)
                                       AND N8.SKD_DIR_CD(+)=N3RD_SKD_DIR_CD
                                       AND DEST_LOC_CD = N9.PORT_CD(+)
                                       AND DECODE(N4TH_SVC_TP,'O','FDR',N4TH_LANE_CD) = N9.VSL_SLAN_CD(+)
                                       AND N9.SKD_DIR_CD(+)=N4TH_SKD_DIR_CD
                                   )
                                   WHERE VALID_TML = 'Y' -- AND NVL(POD1,'Y') <>'X' AND NVL(POL1,'Y') <>'X' AND NVL(POD2,'Y') <>'X' AND NVL(POL2,'Y')<>'X' AND NVL(POL3,'Y')<>'X'
                               ) OCEAN ,
                                ( /*  INLAND ROUTE (POR-POL) START */
                                   SELECT
                                   ROUT_ORG_NOD_CD,
                                   ROUT_DEST_NOD_CD,
                                   PRIO_SEQ,
                                   ROUT_SEQ,
                                   DECODE(:sRterm,'S',DECODE(ROUT_SEQ,0,'',ROUT_ORG_NOD_CD),
                                       DECODE(:emtPkYd,'',MAX(DECODE(:sRterm,'D',Z.REP_YD_CD , L.MTY_PKUP_YD_CD)),:emtPkYd)) MTPU_CY,
                                   ROUT_ORG_NOD_CD AS POR,
                                   MAX(DECODE(ROUT_DTL_SEQ, 1 , DECODE(CNT, 1 , '', LNK_DEST_NOD_CD))) OL_NODE01,
                                   MAX(DECODE(ROUT_DTL_SEQ, 2 , DECODE(CNT, 2 , '', LNK_DEST_NOD_CD))) OL_NODE02,
                                   MAX(DECODE(ROUT_DTL_SEQ, 3 , DECODE(CNT, 3 , '', LNK_DEST_NOD_CD))) OL_NODE03,
                                   MAX(DECODE(ROUT_DTL_SEQ, 4 , DECODE(CNT, 4 , '', LNK_DEST_NOD_CD))) OL_NODE04,
                                   MAX(DECODE(ROUT_DTL_SEQ, 5 , DECODE(CNT, 5 , '', LNK_DEST_NOD_CD))) OL_NODE05,
                                   MAX(DECODE(ROUT_DTL_SEQ, 6 , DECODE(CNT, 6 , '', LNK_DEST_NOD_CD))) OL_NODE06,
                                   MAX(DECODE(ROUT_DTL_SEQ, 7 , DECODE(CNT, 7 , '', LNK_DEST_NOD_CD))) OL_NODE07,
                                   MAX(DECODE(ROUT_DTL_SEQ, 8 , DECODE(CNT, 8 , '', LNK_DEST_NOD_CD))) OL_NODE08,
                                   MAX(DECODE(ROUT_DTL_SEQ, 9 , DECODE(CNT, 9 , '', LNK_DEST_NOD_CD))) OL_NODE09,
                                   MAX(DECODE(ROUT_DTL_SEQ, 10, DECODE(CNT, 10, '', LNK_DEST_NOD_CD))) OL_NODE10,
                                   MAX(LNK_DEST_NOD_CD) AS POL0
                                   FROM (
                                       SELECT M.ROUT_ORG_NOD_CD,
                                       M.ROUT_DEST_NOD_CD,
                                       M.PRIO_SEQ,
                                       M.ROUT_SEQ,
                                       RPAD(D.ROUT_DTL_SEQ,2,' ')||D.LNK_DEST_NOD_CD||D.TRSP_MOD_CD||LPAD(NVL(D.VNDR_SEQ,0),6,0)||
                                       NVL(D.INLND_ROUT_CMB_FLG,'N')||LPAD(NVL(M.INLND_ROUT_INV_BIL_PATT_CD,' '),3,' ') ||
                                       RPAD(NVL(D.RAIL_CRR_TP_CD,' '),3,' ') || RPAD(NVL(D.TRSP_AGMT_OFC_CTY_CD,' '),3,' ') || LPAD(NVL(D.TRSP_AGMT_SEQ,0),6,0) ||
                                       RPAD(NVL(D.AGMT_REF_NO,' '),15,' ') || RPAD(NVL(M.INLND_ROUT_INCL_STTL_FLG,' '),1,' ')
                                       LNK_DEST_NOD_CD,
                                       D.ROUT_DTL_SEQ,
                                       COUNT(*) OVER (PARTITION BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ
                                           ORDER BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ) AS CNT
                                       FROM PRD_INLND_ROUT_MST M, PRD_INLND_ROUT_DTL D
                                       WHERE M.INLND_ROUT_BKG_FLG = 'Y'
                                       AND M.ROUT_ORG_NOD_CD LIKE
                                           DECODE(:sRterm,'F','','T','',
                                                  DECODE(:sPorNode,'',DECODE(:sRterm,'D',(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = :sPor),:sPor||'%')
                                                  ,:sPorNode)
                                           )
                                       AND M.ROUT_DEST_NOD_CD LIKE :sPol||'%'
                                       AND M.ROUT_ORG_NOD_CD =D.ROUT_ORG_NOD_CD
                                       AND M.ROUT_DEST_NOD_CD =D.ROUT_DEST_NOD_CD
                                       AND M.ROUT_SEQ =D.ROUT_SEQ
                                       AND NVL(M.PCTL_IO_BND_CD,'O') IN ('O','B' )
                                       AND NVL(M.DELT_FLG,'N') <> 'Y'
                                       AND EXISTS
                                       (SELECT 'X' FROM PRD_NODE N
                                       WHERE N.NOD_CD = M.ROUT_ORG_NOD_CD
                                       AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN (DECODE(:sRterm,'D','D',''),
                                                                                       DECODE(:sRterm,'T','B','F','B','Y','B','S','B',''),
                                                                                       DECODE(:sRterm,'T','M','F','M','Y','M','S','M',''),
                                                                                       DECODE(:sRterm,'Y','Y','S','Y',''),
                                                                                       DECODE(:sRterm,'Y','R','S','R','') )  )
                                       AND DECODE(:sRterm,'D','X','S','X',DECODE(:sPorNode,NULL,DECODE(NVL(:so_seq,0),0,:sPor,'X'),'X')) <> :sPol
                                       UNION ALL
                                       SELECT TML_CD ROUT_ORG_NOD_CD,
                                       TML_CD ROUT_DEST_NOD_CD,
                                       0 PRIO_SEQ,
                                       0 ROUT_SEQ,
                                       TML_CD LNK_DEST_NOD_CD,
                                       0 ROUT_DTL_SEQ,
                                       0 CNT
                                       FROM  (
                                        SELECT DISTINCT
                                           --OLD TML_CD
--                                         DECODE((SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
--                                                WHERE VSL_SLAN_CD = N1ST_LANE_CD),'O',NVL(:sPolNode,N1.TML_CD),N1.TML_CD) TML_CD
                                         DECODE(:sPolNode,'',DECODE(:sPol1_n ,'', N1.TML_CD, decode(N1ST_SVC_TP,'O',:sPol1_n, 
                                                                                               DECODE(:sPol1_n,N1.TML_CD,N1.TML_CD, NVL( (
                                                                                                SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                 WHERE PORT_CD= ORG_LOC_CD
                                                                                                 AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                 AND TML_CD=:sPol1_n                                                        
                                                                                               ), N1.TML_CD ) )) --2009-03-03
                                                              ) ,
                                                        decode(N1ST_SVC_TP,'O',:sPolNode, DECODE(:sPolNode,N1.TML_CD,N1.TML_CD, NVL( (
                                                                                                SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                 WHERE PORT_CD= ORG_LOC_CD
                                                                                                 AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                 AND TML_CD=:sPolNode                                                        
                                                                                               ),  N1.TML_CD  )  )) )    TML_CD   -- 2009-03-03                                                  
                                        FROM  (
                                               SELECT  ORG_LOC_CD,N1ST_LANE_CD, N1ST_SKD_DIR_CD
                                                        -- NEW ADD 
                                                        ,(SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE  
                                                        WHERE VSL_SLAN_CD = N1ST_LANE_CD) N1ST_SVC_TP 
                                               FROM PRD_OCN_ROUT A
                                               WHERE  A.ORG_LOC_CD =:sPol
                                               AND A.DEST_LOC_CD IN (SELECT DISTINCT PORT_CD FROM PRD_HUB_LOC_MTCH
                                                                     WHERE LOC_CD = :sDel AND PORT_CD =NVL(:sPod,PORT_CD))
                                               AND NVL(A.UPD_IND_CD,'S') IN ('C','U','S','T','A','V','G')
                                                AND A.ROUT_SEQ = NVL(:sRout_seq,A.ROUT_SEQ)
                                               AND NOT EXISTS
                                               (
                                                   SELECT 'X' FROM PRD_MBGO_MGMT TT
                                                   WHERE SUBSTR (A.ORG_LOC_CD, 1, 2) = TT.FM_CNT_CD
                                                   AND A.TS_IND_CD = 'D'
                                                   AND SUBSTR (A.DEST_LOC_CD, 1, 2) = TT.TO_CNT_CD
                                               )
                                       ) M ,
                                       PRD_PORT_TML_MTX N1
                                       WHERE ORG_LOC_CD = N1.PORT_CD
                                        AND (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',N1ST_LANE_CD)
                                               FROM MDM_VSL_SVC_LANE WHERE VSL_SLAN_CD = N1ST_LANE_CD) = N1.VSL_SLAN_CD
                                       AND N1.SKD_DIR_CD= N1ST_SKD_DIR_CD
                                       AND N1.TML_CD = DECODE(:sPorNode,'',N1.TML_CD,:sPorNode)
                                       )
                                     WHERE EXISTS
                                     (SELECT 'X' FROM PRD_NODE N
                                      WHERE N.NOD_CD = TML_CD
                                      AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN ('B','M'))
                                     AND :sPor = :sPol
                                     AND :sRterm <> 'D'
                                     AND DECODE(:sPorNode,'',TML_CD,:sPorNode) = TML_CD -----------
                                  ) M, MDM_ZONE Z, MDM_LOCATION L
                                   WHERE Z.ZN_CD(+) = M.ROUT_ORG_NOD_CD
                                   AND L.LOC_CD(+) = SUBSTR(M.ROUT_ORG_NOD_CD,1,5)
                                    AND DECODE(:sRterm,'S','Y','X') =
                                    NVL((SELECT DECODE(:sRterm,'S',YD_FCTY_TP_CFS_FLG,'X') FROM MDM_YARD WHERE YD_CD=M.ROUT_ORG_NOD_CD),'X')
                                   GROUP BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.PRIO_SEQ, M.ROUT_SEQ
                               ) OUT_LAND, /*  INLAND ROUTE (POR-POL) END */
                               (  /*  INLAND ROUTE (POD-DEL) START */
                                   SELECT
                                   ROUT_ORG_NOD_CD,
                                   ROUT_DEST_NOD_CD,
                                   PRIO_SEQ,
                                   ROUT_SEQ,
                                   ROUT_ORG_NOD_CD AS POD0,
                                   MAX(DECODE(ROUT_DTL_SEQ, 1 , DECODE(CNT, 1 , '', LNK_DEST_NOD_CD))) IL_NODE01,
                                   MAX(DECODE(ROUT_DTL_SEQ, 2 , DECODE(CNT, 2 , '', LNK_DEST_NOD_CD))) IL_NODE02,
                                   MAX(DECODE(ROUT_DTL_SEQ, 3 , DECODE(CNT, 3 , '', LNK_DEST_NOD_CD))) IL_NODE03,
                                   MAX(DECODE(ROUT_DTL_SEQ, 4 , DECODE(CNT, 4 , '', LNK_DEST_NOD_CD))) IL_NODE04,
                                   MAX(DECODE(ROUT_DTL_SEQ, 5 , DECODE(CNT, 5 , '', LNK_DEST_NOD_CD))) IL_NODE05,
                                   MAX(DECODE(ROUT_DTL_SEQ, 6 , DECODE(CNT, 6 , '', LNK_DEST_NOD_CD))) IL_NODE06,
                                   MAX(DECODE(ROUT_DTL_SEQ, 7 , DECODE(CNT, 7 , '', LNK_DEST_NOD_CD))) IL_NODE07,
                                   MAX(DECODE(ROUT_DTL_SEQ, 8 , DECODE(CNT, 8 , '', LNK_DEST_NOD_CD))) IL_NODE08,
                                   MAX(DECODE(ROUT_DTL_SEQ, 9 , DECODE(CNT, 9 , '', LNK_DEST_NOD_CD))) IL_NODE09,
                                   MAX(DECODE(ROUT_DTL_SEQ, 10, DECODE(CNT, 10, '', LNK_DEST_NOD_CD))) IL_NODE10,
                                   MAX(LNK_DEST_NOD_CD) DEL,
                                   DECODE(:sDterm,'S',DECODE(ROUT_SEQ,0,'',ROUT_DEST_NOD_CD),
                                           DECODE(:emtRtnYd,'',MAX(DECODE(:sDterm,'D',Z.REP_YD_CD, L.EQ_RTN_YD_CD)),:emtRtnYd)) MTRTN_CY
                                   FROM
                                   (
                                       SELECT M.ROUT_ORG_NOD_CD,
                                           M.ROUT_DEST_NOD_CD,
                                           M.PRIO_SEQ,
                                           M.ROUT_SEQ,
                                           RPAD(D.ROUT_DTL_SEQ,2,' ')||D.LNK_DEST_NOD_CD||D.TRSP_MOD_CD||LPAD(NVL(D.VNDR_SEQ,0),6,0)||
                                           NVL(D.INLND_ROUT_CMB_FLG,'N')||LPAD(NVL(M.INLND_ROUT_INV_BIL_PATT_CD,' '),3,' ') ||
                                           RPAD(NVL(D.RAIL_CRR_TP_CD,' '),3,' ') || RPAD(NVL(D.TRSP_AGMT_OFC_CTY_CD,' '),3,' ') || LPAD(NVL(D.TRSP_AGMT_SEQ,0),6,0) ||
                                           RPAD(NVL(D.AGMT_REF_NO,' '),15,' ') || RPAD(NVL(M.INLND_ROUT_INCL_STTL_FLG,' '),1,' ')
                                           LNK_DEST_NOD_CD,
                                           D.ROUT_DTL_SEQ,
                                           COUNT(*) OVER (PARTITION BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ
                                           ORDER BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.ROUT_SEQ) AS CNT
                                       FROM PRD_INLND_ROUT_MST M, PRD_INLND_ROUT_DTL D
                                       WHERE M.INLND_ROUT_BKG_FLG = 'Y'
                                         AND M.ROUT_DEST_NOD_CD LIKE
                                               DECODE(:sDterm,'F','','T','',
                                                      DECODE(:sDelNode,'',
                                                           DECODE(:sDterm,'D',(SELECT REP_ZN_CD FROM MDM_LOCATION WHERE LOC_CD = :sDel),:sDel||'%')
                                                      ,:sDelNode)
                                               )
                                        AND M.ROUT_ORG_NOD_CD = DECODE(:sPodNode, '',M.ROUT_ORG_NOD_CD,:sPodNode) 
                                        AND SUBSTR(M.ROUT_ORG_NOD_CD,1,5) IN ( SELECT DISTINCT PORT_CD
                                                                              FROM PRD_HUB_LOC_MTCH
                                                                              WHERE LOC_CD = :sDel
                                                                              AND PORT_CD = NVL(:sPod,PORT_CD))
                                        AND M.ROUT_ORG_NOD_CD =D.ROUT_ORG_NOD_CD
                                        AND M.ROUT_DEST_NOD_CD =D.ROUT_DEST_NOD_CD
                                        AND M.ROUT_SEQ =D.ROUT_SEQ
                                        AND NVL(M.PCTL_IO_BND_CD,'I') IN ('I','B')
                                        AND NVL(M.DELT_FLG,'N') <> 'Y'
                                        AND EXISTS
                                           (SELECT 'X' FROM PRD_NODE N
                                             WHERE N.NOD_CD = M.ROUT_DEST_NOD_CD
                                               AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN (DECODE(:sDterm,'D','D',''),
                                                                                           DECODE(:sDterm,'T','B','F','B','Y','B','S','B',''),
                                                                                           DECODE(:sDterm,'T','M','F','M','Y','M','S','M',''),
                                                                                           DECODE(:sDterm,'Y','Y','S','Y',''),
                                                                                           DECODE(:sDterm,'Y','R','S','R',''),
                                                                                           DECODE(:sDterm,'Y','P','') )
                                           )
                                        AND DECODE(:sDterm,'D','X','S','X',DECODE(:sPodNode,NULL,DECODE(NVL(:so_seq,0),0,nvl(:sPod,'X'),'X'),'X')) <> NVL(:sDelNode, :sDel)
                                       UNION ALL
                                       SELECT TML_CD ROUT_ORG_NOD_CD,
                                           TML_CD ROUT_DEST_NOD_CD,
                                           0 PRIO_SEQ,
                                           0 ROUT_SEQ,
                                           TML_CD LNK_DEST_NOD_CD,
                                           0 ROUT_DTL_SEQ,
                                           0 CNT
                                       FROM (
                                        SELECT DISTINCT CHECK_POD TML_CD
                                        FROM (
                                            SELECT
                                              (CASE
                                                    WHEN TS_IND_CD ='D' THEN
                                                        DECODE(:sPodNode, '', X61.TML_CD, DECODE(N1ST_SVC_TP, 'O',:sPodNode,
                                                                                            NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                             WHERE PORT_CD=N1ST_POD_CD
                                                                                             AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                             AND TML_CD=:sPodNode),X61.TML_CD)))
                                                    WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NULL THEN
                                                        DECODE(:sPodNode, '', X63.TML_CD, DECODE(N2ND_SVC_TP, 'O',:sPodNode,
                                                                                            NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                             WHERE PORT_CD=N2ND_POD_CD
                                                                                             AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                             AND TML_CD=:sPodNode),X63.TML_CD)))
                                                    WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NOT NULL AND N4TH_LANE_CD IS NULL THEN
                                                        DECODE(:sPodNode, '', N8.TML_CD, DECODE(N3RD_SVC_TP, 'O',:sPodNode,
                                                                                            NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                             WHERE PORT_CD=N3RD_POD_CD
                                                                                             AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                                             AND TML_CD=:sPodNode),N8.TML_CD)))
                                                    WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NOT NULL AND N4TH_LANE_CD IS NOT NULL THEN
                                                        DECODE(:sPodNode, '', N9.TML_CD, DECODE(N4TH_SVC_TP,'O',:sPodNode,
                                                                                            NVL((SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                             WHERE PORT_CD=DEST_LOC_CD
                                                                                             AND VSL_SLAN_CD=N4TH_LANE_CD AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                                                             AND TML_CD=:sPodNode),N9.TML_CD)))
                                              END) OLD_CHECK_POD,
                                             (CASE
                                                WHEN TS_IND_CD ='D' THEN
                                                                                         
                                                    DECODE(:sPodNode,'',DECODE(:sPod1_n ,'', X61.TML_CD, decode(N1ST_SVC_TP,'O',:sPod1_n, 
                                                                                                               DECODE(:sPod1_n,X61.TML_CD,X61.TML_CD, NVL((
                                                                                                                    SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                     WHERE PORT_CD= N1ST_POD_CD
                                                                                                                     AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                                     AND TML_CD=:sPod1_n ) ,  X61.TML_CD  ) -- 2009-03-03
                                                                                                               ))
                                                                        ) ,
                                                                        DECODE(N1ST_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,X61.TML_CD,X61.TML_CD, NVL( (
                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                         WHERE PORT_CD= N1ST_POD_CD
                                                                                                         AND VSL_SLAN_CD=N1ST_LANE_CD AND SKD_DIR_CD = N1ST_SKD_DIR_CD
                                                                                                         AND TML_CD=:sPodNode                                                        
                                                                                                       ),X61.TML_CD ) )) )
                                                                                                                                                                                            
                                                WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NULL THEN
                                                     DECODE(:sPodNode,'',DECODE(:sPod2_n ,'', X63.TML_CD, decode(N2ND_SVC_TP,'O',:sPod2_n, 
                                                                                                                   DECODE(:sPod2_n,X63.TML_CD,X63.TML_CD, NVL( (
                                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                         WHERE PORT_CD= N2ND_POD_CD
                                                                                                                         AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                                                         AND TML_CD=:sPod2_n ) , X63.TML_CD  ) -- 2009-03-03
                                                                                                                   ))
                                                                            ) ,
                                                                            DECODE(N2ND_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,X63.TML_CD,X63.TML_CD, NVL((
                                                                                                            SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                             WHERE PORT_CD= N2ND_POD_CD
                                                                                                             AND VSL_SLAN_CD=N2ND_LANE_CD AND SKD_DIR_CD = N2ND_SKD_DIR_CD
                                                                                                             AND TML_CD=:sPodNode                                                        
                                                                                                           ),X63.TML_CD ) )) )
                                                                                         
                                                WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NOT NULL AND N4TH_LANE_CD IS NULL THEN
                                                                                         
                                                     DECODE(:sPodNode,'',DECODE(:sPod3_n ,'', N8.TML_CD, decode(N3RD_SVC_TP,'O',:sPod3_n, 
                                                                                                                   DECODE(:sPod3_n,N8.TML_CD,N8.TML_CD, NVL((
                                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                         WHERE PORT_CD= N3RD_POD_CD
                                                                                                                         AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                                                                         AND TML_CD=:sPod3_n ), N8.TML_CD  ) --2009-03-03
                                                                                                                   ))
                                                                            ) ,
                                                                            DECODE(N3RD_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,N8.TML_CD,N8.TML_CD, NVL((
                                                                                                            SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                             WHERE PORT_CD= N3RD_POD_CD
                                                                                                             AND VSL_SLAN_CD=N3RD_LANE_CD AND SKD_DIR_CD = N3RD_SKD_DIR_CD
                                                                                                             AND TML_CD=:sPodNode                                                        
                                                                                                           ),N8.TML_CD )  )) )
                                                                                         
                                                WHEN N2ND_LANE_CD IS NOT NULL AND N3RD_LANE_CD IS NOT NULL AND N4TH_LANE_CD IS NOT NULL THEN
                                                     DECODE(:sPodNode,'',DECODE(:sPod4_n ,'', N9.TML_CD, decode(N4TH_SVC_TP,'O',:sPod4_n, 
                                                                                                                   DECODE(:sPod4_n,N9.TML_CD,N9.TML_CD, NVL( (
                                                                                                                        SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                                         WHERE PORT_CD= DEST_LOC_CD
                                                                                                                         AND VSL_SLAN_CD=N4TH_LANE_CD AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                                                                                         AND TML_CD=:sPod4_n ), N9.TML_CD ) -- 2009-03-03
                                                                                                                   ))
                                                                            ) ,
                                                                            DECODE(N4TH_SVC_TP,'O',:sPodNode, DECODE(:sPodNode,N9.TML_CD,N9.TML_CD, NVL((
                                                                                                            SELECT TML_CD FROM PRD_PORT_TML_EXPT
                                                                                                             WHERE PORT_CD= DEST_LOC_CD
                                                                                                             AND VSL_SLAN_CD=N4TH_LANE_CD AND SKD_DIR_CD = N4TH_SKD_DIR_CD
                                                                                                             AND TML_CD=:sPodNode                                                        
                                                                                                           ),N9.TML_CD ) )) )                                                     
                                            END)   CHECK_POD 
                                              
                                           FROM
                                            (
                                               SELECT
                                                   ORG_LOC_CD,
                                                   N1ST_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N1ST_LANE_CD) N1ST_SVC_TP,
                                                   N1ST_SKD_DIR_CD,
                                                   N1ST_POD_CD,
                                                   N2ND_POL_CD,
                                                   N2ND_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N2ND_LANE_CD) N2ND_SVC_TP,
                                                   N2ND_SKD_DIR_CD,
                                                   N2ND_POD_CD,
                                                   N3RD_POL_CD,
                                                   N3RD_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N3RD_LANE_CD) N3RD_SVC_TP,
                                                   N3RD_SKD_DIR_CD,
                                                   N3RD_POD_CD,
                                                   N4TH_POL_CD,
                                                   N4TH_LANE_CD,
                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                    WHERE VSL_SLAN_CD = N4TH_LANE_CD) N4TH_SVC_TP,
                                                   N4TH_SKD_DIR_CD,
                                                   DEST_LOC_CD,
                                                   TS_IND_CD
                                               FROM PRD_OCN_ROUT A
                                               WHERE  A.ORG_LOC_CD =:sPol
                                                 AND A.DEST_LOC_CD IN (SELECT DISTINCT PORT_CD FROM PRD_HUB_LOC_MTCH
                                                                     WHERE LOC_CD = :sDel AND PORT_CD =NVL(:sPod,PORT_CD))
                                                 AND NVL(A.UPD_IND_CD,'S') IN ('C','U','S','T','A','V','G')
                                                 AND A.ROUT_SEQ = NVL(:sRout_seq,A.ROUT_SEQ)
                                                   AND N1ST_POL_CD = NVL(:sPol1,N1ST_POL_CD)
                                                   AND N1ST_POD_CD = NVL(:sPod1,N1ST_POD_CD)
                                                   AND N1ST_LANE_CD IN ( NVL(:sLane1,N1ST_LANE_CD),
                                                                   (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD = :sLane1) )
                                                   AND NVL(N2ND_POL_CD,'X') = NVL(:sPol2,NVL(N2ND_POL_CD,'X'))
                                                   AND NVL(N2ND_POD_CD,'X') = NVL(:sPod2,NVL(N2ND_POD_CD,'X'))
                                                   AND NVL(N2ND_LANE_CD,'X') IN ( NVL(:sLane2,NVL(N2ND_LANE_CD,'X')),
                                                                  (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                               WHERE VSL_SLAN_CD = :sLane2) )
                                                   AND NVL(N3RD_POL_CD,'X') = NVL(:sPol3,NVL(N3RD_POL_CD,'X'))
                                                   AND NVL(N3RD_POD_CD,'X') = NVL(:sPod3,NVL(N3RD_POD_CD,'X'))
                                                   AND NVL(N3RD_LANE_CD,'X') IN ( NVL(:sLane3,NVL(N3RD_LANE_CD,'X')),
                                                                   (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD = :sLane3) )
                                                   AND NVL(N4TH_POL_CD,'X') = NVL(:sPol4,NVL(N4TH_POL_CD,'X'))
                                                   AND NVL(N4TH_POD_CD,'X') = NVL(:sPod4,NVL(N4TH_POD_CD,'X'))
                                                   AND NVL(N4TH_LANE_CD,'X') IN ( NVL(:sLane4,NVL(N4TH_LANE_CD,'X')),
                                                                   (SELECT DECODE(VSL_SVC_TP_CD,'O','FDR',VSL_SLAN_CD) FROM MDM_VSL_SVC_LANE
                                                                WHERE VSL_SLAN_CD = :sLane4) )
                                                   AND (  (SELECT (CASE WHEN
                                                                   (SELECT VSL_SVC_TP_CD FROM MDM_VSL_SVC_LANE
                                                                        WHERE VSL_SLAN_CD =V.SLAN_CD ) = 'O' THEN 'FDR'
                                                                             ELSE V.SLAN_CD
                                                                   END) SLAN_CD
                                                           FROM VSK_VSL_PORT_SKD  V,VSK_VSL_PORT_SKD  V2
                                                           WHERE V.VSL_CD= substr(:sVvd,1,4)
                                                            and V.SKD_VOY_NO= substr(:sVvd,5,4)
                                                            and V.SKD_DIR_CD = substr(:sVvd,9,1)
                                                            and NVL(V.CNG_STS_CD,'N') <> 'S'
                                                            AND V2.VSL_CD= substr(:sVvd,1,4)
                                                            and V2.SKD_VOY_NO= substr(:sVvd,5,4)
                                                            and V2.SKD_DIR_CD = substr(:sVvd,9,1)
                                                            and NVL(V2.CNG_STS_CD,'N') <> 'S'
                                                            AND V2.CLPT_SEQ > V.CLPT_SEQ
                                                            AND EXISTS
                                                            (SELECT 'X' FROM VSK_VSL_SKD V3
                                                            WHERE V3.VSL_CD = V.VSL_CD
                                                            AND V3.SKD_VOY_NO = V.SKD_VOY_NO
                                                            AND V3.SKD_DIR_CD = V.SKD_DIR_CD
                                                            AND V3.SKD_STS_CD ='ACT')
                                                            AND ROWNUM=1) IN ( N1ST_LANE_CD,N2ND_LANE_CD,N3RD_LANE_CD,N4TH_LANE_CD,'FDR')
                                                        OR NVL(:sVvd,'X') = 'X'
                                                      )
                                                   AND NOT EXISTS
                                                   (
                                                       SELECT 'X' FROM PRD_MBGO_MGMT TT
                                                       WHERE SUBSTR (A.ORG_LOC_CD, 1, 2) = TT.FM_CNT_CD
                                                       AND A.TS_IND_CD = 'D'
                                                       AND SUBSTR (A.DEST_LOC_CD, 1, 2) = TT.TO_CNT_CD
                                                   )
                                          ) M , PRD_PORT_TML_MTX N8, PRD_PORT_TML_MTX N9,
                                           PRD_PORT_TML_MTX X61, PRD_PORT_TML_MTX X63
                                           WHERE DEST_LOC_CD = X63.PORT_CD(+)
                                           AND DECODE(N2ND_SVC_TP,'O','FDR',N2ND_LANE_CD) = X63.VSL_SLAN_CD(+)
                                           AND X63.SKD_DIR_CD(+)= N2ND_SKD_DIR_CD
                                           AND DEST_LOC_CD = N8.PORT_CD(+)
                                           AND DECODE(N3RD_SVC_TP,'O','FDR',N3RD_LANE_CD) = N8.VSL_SLAN_CD(+)
                                           AND N8.SKD_DIR_CD(+)=N3RD_SKD_DIR_CD
                                           AND DEST_LOC_CD = N9.PORT_CD(+)
                                           AND DECODE(N4TH_SVC_TP,'O','FDR',N4TH_LANE_CD) = N9.VSL_SLAN_CD(+)
                                           AND N9.SKD_DIR_CD(+)=N4TH_SKD_DIR_CD
                                           AND DEST_LOC_CD = X61.PORT_CD(+)
                                           AND DECODE(N1ST_SVC_TP,'O','FDR',N1ST_LANE_CD) = X61.VSL_SLAN_CD(+)
                                           AND X61.SKD_DIR_CD(+)=N1ST_SKD_DIR_CD
                                          )
                                        WHERE CHECK_POD = DECODE(:sDelNode,'',CHECK_POD,:sDelNode)
                                       )
                                     WHERE EXISTS
                                             (SELECT 'X' FROM PRD_NODE N
                                              WHERE N.NOD_CD = TML_CD
                                                AND DECODE(N.NOD_TP_CD,'Z','D',N.NOD_TP_CD) IN ('B','M'))
                                       AND NVL(:sPod,:sDel) = :sDel
                                       AND :sDterm <> 'D'
                                       AND DECODE(:sDelNode,'',TML_CD,:sDelNode) = TML_CD
                                       AND SUBSTR(TML_CD,1,5) = :sDel ----------------------------
                                   ) M , MDM_ZONE Z, MDM_LOCATION L
                                   WHERE Z.ZN_CD(+) = M.ROUT_DEST_NOD_CD
                                   AND L.LOC_CD(+) = SUBSTR(M.ROUT_DEST_NOD_CD,1,5)
                                    AND DECODE(:sDterm,'S','Y','X') =
                                    NVL((SELECT DECODE(:sDterm,'S',YD_FCTY_TP_CFS_FLG,'X') FROM MDM_YARD WHERE YD_CD=M.ROUT_DEST_NOD_CD),'X')
                                  GROUP BY M.ROUT_ORG_NOD_CD, M.ROUT_DEST_NOD_CD, M.PRIO_SEQ, M.ROUT_SEQ
                               ) IN_LAND --/*  INLAND ROUTE (POD-DEL) END */
                               WHERE OCEAN.POL=OUT_LAND.ROUT_DEST_NOD_CD AND OCEAN.POD=IN_LAND.ROUT_ORG_NOD_CD
                               AND DECODE(:sRterm,'S','S',MTPU_CY) IS NOT NULL
                               AND DECODE(:sDterm,'S','S',MTRTN_CY) IS NOT NULL
                               AND LNK1= 'Y' AND LNK2= 'Y' AND LNK3= 'Y' AND LNK4= 'Y' -- 20090331
                               ORDER BY OUT_LAND.PRIO_SEQ, OCEAN.ROUT_SEQ,IN_LAND.PRIO_SEQ
                           ) WHERE O_RK <= DECODE(NVL(:so_seq,0),0,2,1) AND I_RK <= 2
                        ),
                        (
                            SELECT CPY_NO F_N0 FROM COM_CPY_NO WHERE CPY_NO <=33
                        )
                    )
                    WHERE NODE1 IS NOT NULL
                ),
                (
                    SELECT CPY_NO L_N0 FROM COM_CPY_NO WHERE CPY_NO IN (1,2)
                )
            )
            WHERE (F_NO2 <> 33 OR L_N0 <> 2 )
            AND NODE_NEW2 IS NOT NULL
            ORDER BY 1,2,3
        ) ORDER BY GP1,O1, L_N0
    )
    SELECT
    GP1,F_NO2,L_N0,O1,NODE_NEW1,NODE1_TP,NODE_NEW2,NODE2_TP,NODE_NEW_KIND,OI_BND_CD,trsp_mod_cd,TZTM_DW_HRS,
    TO_NUMBER(N1ST_VNDR_SEQ) N1ST_VNDR_SEQ,N2ND_VNDR_SEQ,N3RD_VNDR_SEQ,DIR_CD,
    ROUT_ORG,ROUT_DEST,ROUT_SEQ,S_DATE,S_TYPE,SLANE,CNT,ORD, INLND_ROUT_CMB_FLG,INLND_ROUT_INV_BIL_PATT_CD,
    RAIL_CRR_TYPE, INLND_ROUT_INCL_STTL_FLG, TRSP_AGMT_OFC_CTY_CD, TRSP_AGMT_SEQ, AGMT_REF_NO,
--    sys_connect_by_path(SKD_STR,'-')||'-',
    (CASE
        WHEN CNT = ORD THEN
            (CASE
                WHEN :sPol1 IS NOT NULL THEN
                    PRD_GET_SKD_TS_FNC(TO_CHAR(S_DATE,'yyyymmdd hh24:mi:ss'),S_TYPE,
                            replace(sys_connect_by_path(SKD_STR,'-')||'-',','),ORD,NVL(:sConstCom,NULL),NVL(:sConstDcg,NULL),'Y','N',
--                            :sParam1,:sParam2,:sParam3,:sParam4
                            RPAD(NVL(:sPol1,' '),5,' ')||RPAD(NVL(:sPod1,' '),5,' ')||RPAD(NVL(:sVvd1,' '),9,' ')||RPAD(NVL(:sLane1,' '),3,' ')||RPAD(NVL(:MODE1,' '),1,' ')||RPAD(NVL(:TS_IND1,' '),1,' '),
                            RPAD(NVL(:sPol2,' '),5,' ')||RPAD(NVL(:sPod2,' '),5,' ')||RPAD(NVL(:sVvd2,' '),9,' ')||RPAD(NVL(:sLane2,' '),3,' ')||RPAD(NVL(:MODE2,' '),1,' ')||RPAD(NVL(:TS_IND2,' '),1,' '),
                            RPAD(NVL(:sPol3,' '),5,' ')||RPAD(NVL(:sPod3,' '),5,' ')||RPAD(NVL(:sVvd3,' '),9,' ')||RPAD(NVL(:sLane3,' '),3,' ')||RPAD(NVL(:MODE3,' '),1,' ')||RPAD(NVL(:TS_IND3,' '),1,' '),
                            RPAD(NVL(:sPol4,' '),5,' ')||RPAD(NVL(:sPod4,' '),5,' ')||RPAD(NVL(:sVvd4,' '),9,' ')||RPAD(NVL(:sLane4,' '),3,' ')||RPAD(NVL(:MODE4,' '),1,' ')||RPAD(NVL(:TS_IND4,' '),1,' ')
                            
                            )
                ELSE
                    PRD_GET_SKD_FNC(DECODE(S_TYPE,'V',:sVvd,TO_CHAR(S_DATE,'yyyymmdd hh24:mi:ss')),S_TYPE,
                                    replace(sys_connect_by_path(SKD_STR,'-')||'-',','),ORD,NVL(:sConstCom,NULL),NVL(:sConstDcg,NULL),'Y','N')
            END)
    END ) SKD_TIME
    FROM ROUT_TBL
    start with ORD = 1 connect by prior ORD = ORD - 1 and prior GP1 = GP1
)
;
