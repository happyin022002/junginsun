<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableAdjustDBDAOsearchAdjustForOTSHistoryRSQL">
			<desc><![CDATA[Search Adjust for OTS History]]></desc>
			<sql><![CDATA[
SELECT B.IF_NO
    , B.RHQ_CD
    , B.OTS_OFC_CD
    , B.BL_NO
    , B.INV_NO
    , B.CURR_CD
    , CASE WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN 'OFF'
           WHEN A.ADJ_STS_CD = 'REVERSE' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN 'OFFR'
           WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'AGT' OR A.ADJ_TP_CD = 'AGC') THEN 'AGT'
           WHEN A.ADJ_STS_CD = 'ADJUST' THEN 'ADJ'
           ELSE 'ADJR'
      END OTS_HIS_TP_CD
	, A.ADJ_NO REF_NO
    , B.OTS_SRC_CD
    , A.ADJ_GL_DT GL_DT
    , NVL(SUM(A.ADJ_AMT), 0) OTS_AMT
    , A.ADJ_OFC_CD INV_OFC_CD
    , CASE WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN A.ADJ_RMK
           WHEN A.ADJ_STS_CD = 'REVERSE' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN A.ADJ_RMK
           WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'AGT' OR A.ADJ_TP_CD = 'AGC') THEN B.OTS_RMK
           WHEN A.ADJ_STS_CD = 'ADJUST' THEN A.ADJ_RMK
           ELSE A.ADJ_RMK
      END AS OTS_RMK
    , A.CRE_USR_ID
    , A.UPD_USR_ID
    , B.SHP_TO_CUST_CNT_CD
    , B.SHP_TO_CUST_SEQ
    , B.BIL_TO_CUST_CNT_CD
    , B.BIL_TO_CUST_SEQ
    , B.VSL_CD
    , B.SKD_VOY_NO
    , B.DIR_CD
    , B.SVC_SCP_CD
    , B.XCH_RT_TP_CD
    , B.LOCL_XCH_RT
    , B.USD_XCH_RT
    , B.BKG_IO_BND_CD
    , B.XCH_RT_DT
    , B.POL_CD
    , B.POD_CD 
	, B.REV_TP_SRC_CD
	, B.REV_VVD_CD   
FROM SAR_ADJ_HIS A,
     SAR_OTS_HIS B
WHERE A.OTS_HIS_SEQ = B.OTS_HIS_SEQ
	AND A.ADJ_NO IN (
#foreach( $key IN ${adj_no_list}) 
	#if($velocityCount < $adj_no_list.size())
  		'$key',
	#else
		'$key'
	#end
#end
)
	AND A.ADJ_STS_CD = @[sts_cd]
GROUP BY B.IF_NO
    , B.RHQ_CD
    , B.OTS_OFC_CD
    , B.BL_NO
    , B.INV_NO
    , B.CURR_CD
    , CASE WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN 'OFF'
           WHEN A.ADJ_STS_CD = 'REVERSE' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN 'OFFR'
           WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'AGT' OR A.ADJ_TP_CD = 'AGC') THEN 'AGT'
           WHEN A.ADJ_STS_CD = 'ADJUST' THEN 'ADJ'
           ELSE 'ADJR'
      END
	, A.ADJ_NO
    , B.OTS_SRC_CD
    , A.ADJ_GL_DT
    , A.ADJ_OFC_CD
    , CASE WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN A.ADJ_RMK
           WHEN A.ADJ_STS_CD = 'REVERSE' AND (A.ADJ_TP_CD = 'OFF' OR A.ADJ_TP_CD = 'OFFC') THEN A.ADJ_RMK
           WHEN A.ADJ_STS_CD = 'ADJUST' AND (A.ADJ_TP_CD = 'AGT' OR A.ADJ_TP_CD = 'AGC') THEN B.OTS_RMK
           WHEN A.ADJ_STS_CD = 'ADJUST' THEN A.ADJ_RMK
           ELSE A.ADJ_RMK
      END
    , A.CRE_USR_ID
    , A.UPD_USR_ID
    , B.SHP_TO_CUST_CNT_CD
    , B.SHP_TO_CUST_SEQ
    , B.BIL_TO_CUST_CNT_CD
    , B.BIL_TO_CUST_SEQ
    , B.VSL_CD
    , B.SKD_VOY_NO
    , B.DIR_CD
    , B.SVC_SCP_CD
    , B.XCH_RT_TP_CD
    , B.LOCL_XCH_RT
    , B.USD_XCH_RT
    , B.BKG_IO_BND_CD
    , B.XCH_RT_DT
    , B.POL_CD
    , B.POD_CD
    , B.OTS_HIS_SEQ
	, B.REV_TP_SRC_CD
	, B.REV_VVD_CD  
ORDER BY B.OTS_HIS_SEQ			]]></sql>
			<params>
				<param name="sts_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
