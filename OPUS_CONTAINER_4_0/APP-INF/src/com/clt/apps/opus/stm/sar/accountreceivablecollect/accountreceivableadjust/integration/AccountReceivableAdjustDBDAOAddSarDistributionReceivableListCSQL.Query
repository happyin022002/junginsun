<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableAdjustDBDAOAddSarDistributionReceivableListCSQL">
			<desc><![CDATA[SAR_CLT_DTRB  테이블에 insert Receivable]]></desc>
			<sql><![CDATA[
INSERT INTO SAR_CLT_DTRB
(
	CLT_DTRB_SEQ,
	DTRB_SRC_SEQ,
	DTRB_SRC_TBL_CD,
	DTRB_SRC_TP_CD,
	DTRB_CD_CMB_SEQ,
	INP_DR_AMT,
	INP_CR_AMT,
	ACCT_DR_AMT,
	ACCT_CR_AMT,
	ORZ_SEQ,
	FM_DTRB_SRC_SEQ,
	CURR_CD,
	CONV_XCH_RT,
	ACCT_XCH_RT_LVL,
	ACCT_XCH_RT_DT,
	CUST_CNT_CD,
	CUST_SEQ,
	RVS_SRC_SEQ,
	FM_INP_DR_AMT,
	FM_INP_CR_AMT,
	FM_ACCT_DR_AMT,
	FM_ACCT_CR_AMT,
	CRE_USR_ID,
	CRE_DT, 
	UPD_USR_ID,
	UPD_DT,
	AR_IF_SEQ,
	AR_IF_STS_CD,
	AR_IF_ERR_DESC,
    GL_CURR_CD,
	GL_INP_DR_AMT,
	GL_INP_CR_AMT,
	GL_CONV_XCH_RT,
	GL_ACCT_DR_AMT,
	GL_ACCT_CR_AMT
)
SELECT SAR_CLT_DTRB_SEQ.NEXTVAL    AS CLT_DTRB_SEQ
     , @[adj_his_seq] AS DTRB_SRC_SEQ
     , 'ADJ'          AS DTRB_SRC_TBL_CD
     , SODR.ACCT_CLSS_CD   AS DTRB_SRC_TP_CD
     , SODR.OTS_CD_CMB_SEQ AS DTRB_CD_CMB_SEQ
     , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') >= 0 THEN
               ABS(REPLACE(@[adj_amt], ',', ''))
           WHEN REPLACE(@[adj_amt], ',', '') < 0 THEN
               NULL
       END
         AS INP_DR_AMT
     , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') > 0 THEN
               NULL
           WHEN REPLACE(@[adj_amt], ',', '') <= 0 THEN
               ABS(REPLACE(@[adj_amt], ',', ''))
       END
         AS INP_CR_AMT
     , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') >= 0 THEN
               ABS(REPLACE(@[rec_acct_amt], ',', ''))
           WHEN REPLACE(@[adj_amt], ',', '') < 0 THEN
               NULL
       END
         AS ACCT_DR_AMT
     , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') > 0 THEN
               NULL
           WHEN REPLACE(@[adj_amt], ',', '') <= 0 THEN
               ABS(REPLACE(@[rec_acct_amt], ',', ''))
       END
         AS ACCT_CR_AMT     
     , -1                  AS ORZ_SEQ
     , NULL                AS FM_DTRB_SRC_SEQ
     , SODR.CURR_CD        AS CURR_CD
     , ROUND(SODR.CONV_XCH_RT, 6)    AS CONV_XCH_RT
     , SODR.ACCT_XCH_RT_LVL AS ACCT_XCH_RT_LVL
     , SODR.ACCT_XCH_RT_DT  AS ACCT_XCH_RT_DT
     , SOH.BIL_TO_CUST_CNT_CD AS CUST_CNT_CD
     , SOH.BIL_TO_CUST_SEQ    AS CUST_SEQ
     , NULL                   AS RVS_SRC_SEQ
     , NULL                   AS FM_INP_DR_AMT
     , NULL                   AS FM_INP_CR_AMT
     , NULL                   AS FM_ACCT_DR_AMT
     , NULL                   AS FM_ACCT_CR_AMT
     , @[cre_usr_id]          AS CRE_USR_ID
     , SYSDATE                AS CRE_DT 
     , @[upd_usr_id]          AS UPD_USR_ID 
     , SYSDATE                AS UPD_DT
	 , NULL
     , 'P'
     , NULL
#if(${gl_crs_curr_cd} !=  '')  
	 , @[gl_crs_curr_cd] AS GL_CURR_CD
	 , CASE 
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') >= 0 THEN
               ABS(REPLACE(@[gl_crs_curr_amt], ',', ''))
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') < 0 THEN
               NULL
       END AS INP_DR_AMT
     , CASE 
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') > 0 THEN
               NULL
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') <= 0 THEN
               ABS(REPLACE(@[gl_crs_curr_amt], ',', ''))
       END AS INP_CR_AMT
     , ROUND(ABS(REPLACE(@[rec_acct_amt], ',', '')/@[gl_crs_curr_amt]), 6) AS GL_CONV_XCH_RT
     , CASE 
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') >= 0 THEN
               ABS(REPLACE(@[rec_acct_amt], ',', ''))
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') < 0 THEN
               NULL
       END
         AS GL_ACCT_DR_AMT
     , CASE 
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') > 0 THEN
               NULL
           WHEN REPLACE(@[gl_crs_curr_amt], ',', '') <= 0 THEN
               ABS(REPLACE(@[rec_acct_amt], ',', ''))
       END
         AS GL_ACCT_CR_AMT       
#else
	 , SODR.CURR_CD        AS GL_CURR_CD
	 , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') >= 0 THEN
               ABS(REPLACE(@[adj_amt], ',', ''))
           WHEN REPLACE(@[adj_amt], ',', '') < 0 THEN
               NULL
       END
         AS GL_INP_DR_AMT
     , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') > 0 THEN
               NULL
           WHEN REPLACE(@[adj_amt], ',', '') <= 0 THEN
               ABS(REPLACE(@[adj_amt], ',', ''))
       END
         AS GL_INP_CR_AMT
     
     , ROUND(SODR.CONV_XCH_RT, 6) AS GL_CONV_XCH_RT    
	 , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') >= 0 THEN
               ABS(REPLACE(@[rec_acct_amt], ',', ''))
           WHEN REPLACE(@[adj_amt], ',', '') < 0 THEN
               NULL
       END
         AS GL_ACCT_DR_AMT
     , CASE 
           WHEN REPLACE(@[adj_amt], ',', '') > 0 THEN
               NULL
           WHEN REPLACE(@[adj_amt], ',', '') <= 0 THEN
               ABS(REPLACE(@[rec_acct_amt], ',', ''))
       END
         AS GL_ACCT_CR_AMT   
#end
FROM   SAR_OTS_HIS SOH,
       SAR_OTS_CHG SOC,
       SAR_OTS_DTRB SODR
WHERE  SOH.OTS_HIS_SEQ = SOC.OTS_HIS_SEQ
AND    SOC.OTS_HIS_SEQ = SODR.OTS_HIS_SEQ
AND    SOC.CHG_TP_CD = SODR.CHG_TP_CD
AND    SOC.OTS_HIS_SEQ = @[ots_his_seq]
AND    SOC.CHG_TP_CD = @[chg_tp_cd]
AND    SODR.ACCT_CLSS_CD = 'REC'			]]></sql>
			<params>
				<param name="adj_his_seq" type="12" value="" out="N"/>
				<param name="adj_amt" type="12" value="" out="N"/>
				<param name="rec_acct_amt" type="12" value="" out="N"/>
				<param name="cre_usr_id" type="12" value="" out="N"/>
				<param name="upd_usr_id" type="12" value="" out="N"/>
				<param name="gl_crs_curr_cd" type="12" value="" out="N"/>
				<param name="gl_crs_curr_amt" type="12" value="" out="N"/>
				<param name="ots_his_seq" type="12" value="" out="N"/>
				<param name="chg_tp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
