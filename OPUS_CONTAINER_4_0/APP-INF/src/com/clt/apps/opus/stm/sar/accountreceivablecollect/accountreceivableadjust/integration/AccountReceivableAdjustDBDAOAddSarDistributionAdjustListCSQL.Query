<?xml version="1.0" encoding="UTF-8"?>
<sqls>
	<querys>
		<query name="AccountReceivableAdjustDBDAOAddSarDistributionAdjustListCSQL">
			<desc><![CDATA[SAR_CLT_DTRB  테이블에 insert Adjust]]></desc>
			<sql><![CDATA[
INSERT INTO SAR_CLT_DTRB
(
	CLT_DTRB_SEQ,
	DTRB_SRC_SEQ,
	DTRB_SRC_TBL_CD,
	DTRB_SRC_TP_CD,
	DTRB_CD_CMB_SEQ,
	INP_DR_AMT,
	INP_CR_AMT,
	ACCT_DR_AMT,
	ACCT_CR_AMT,
	ORZ_SEQ,
	FM_DTRB_SRC_SEQ,
	CURR_CD,
	CONV_XCH_RT,
	ACCT_XCH_RT_LVL,
	ACCT_XCH_RT_DT,
	CUST_CNT_CD,
	CUST_SEQ,
	RVS_SRC_SEQ,
	FM_INP_DR_AMT,
	FM_INP_CR_AMT,
	FM_ACCT_DR_AMT,
	FM_ACCT_CR_AMT,
	CRE_USR_ID,
	CRE_DT,
	UPD_USR_ID,
	UPD_DT,
	AR_IF_SEQ,
	AR_IF_STS_CD,
	AR_IF_ERR_DESC,
	GL_INP_DR_AMT,
    GL_INP_CR_AMT,
	GL_CONV_XCH_RT,
 	GL_ACCT_DR_AMT,	
	GL_ACCT_CR_AMT,
    GL_CURR_CD
)
SELECT
    SAR_CLT_DTRB_SEQ.NEXTVAL    AS CLT_DTRB_SEQ,
    DTRB_SRC_SEQ,
    DTRB_SRC_TBL_CD,
    DTRB_SRC_TP_CD,
    DTRB_CD_CMB_SEQ,
    INP_DR_AMT,
    INP_CR_AMT,
    ACCT_DR_AMT,
    ACCT_CR_AMT,
    ORZ_SEQ,
    FM_DTRB_SRC_SEQ,
    CURR_CD,
    CONV_XCH_RT,
    ACCT_XCH_RT_LVL,
    ACCT_XCH_RT_DT,
    CUST_CNT_CD,
    CUST_SEQ,
    RVS_SRC_SEQ,
    FM_INP_DR_AMT,
    FM_INP_CR_AMT,
    FM_ACCT_DR_AMT,
    FM_ACCT_CR_AMT,
    CRE_USR_ID,
    CRE_DT,
    UPD_USR_ID,
    UPD_DT,
    NULL,
    'P',
    NULL,
    GL_INP_DR_AMT,
    GL_INP_CR_AMT,
    GL_CONV_XCH_RT,
    GL_ACCT_DR_AMT,
    GL_ACCT_CR_AMT,
    GL_CURR_CD
    FROM
(
SELECT
    @[adj_his_seq]  AS DTRB_SRC_SEQ,
    'ADJ' AS DTRB_SRC_TBL_CD,
    'ADJ' AS DTRB_SRC_TP_CD,
    @[cd_cmb_seq] AS DTRB_CD_CMB_SEQ,
    CASE WHEN A.ADJ_AMT < 0 THEN ABS(A.ADJ_AMT)
    END AS INP_DR_AMT,
    CASE WHEN A.ADJ_AMT > 0 THEN ABS(A.ADJ_AMT)
    END AS INP_CR_AMT,
    CASE WHEN A.ADJ_AMT < 0 THEN ROUND(ABS(A.ADJ_AMT) * @[func_curr_rt], @[dp_prcs_knt])
    END AS ACCT_DR_AMT,
    CASE WHEN A.ADJ_AMT > 0 THEN ROUND(ABS(A.ADJ_AMT) * @[func_curr_rt], @[dp_prcs_knt])
    END AS ACCT_CR_AMT,
    '-1' AS ORZ_SEQ,
    '' AS FM_DTRB_SRC_SEQ,
    @[bl_curr_cd] AS CURR_CD,
    @[func_curr_rt] AS CONV_XCH_RT,
    '1' AS ACCT_XCH_RT_LVL,
    REPLACE(@[adj_dt], '-', '') AS ACCT_XCH_RT_DT,
    SOH.BIL_TO_CUST_CNT_CD AS CUST_CNT_CD,
    SOH.BIL_TO_CUST_SEQ AS CUST_SEQ,
     CASE WHEN A.ADJ_STS_CD = 'REVERSE' THEN (SELECT B.ADJ_HIS_SEQ FROM SAR_ADJ_HIS B WHERE A.ADJ_NO = B.ADJ_NO AND A.ADJ_HIS_SEQ <> B.ADJ_HIS_SEQ AND A.CHG_TP_CD = @[chg_tp_cd])
     END AS RVS_SRC_SEQ,
     '' AS FM_INP_DR_AMT,
     '' AS FM_INP_CR_AMT,
     '' AS FM_ACCT_DR_AMT,
     '' AS FM_ACCT_CR_AMT,
     A.CRE_USR_ID AS CRE_USR_ID,
     SYSDATE AS CRE_DT,
     A.UPD_USR_ID AS UPD_USR_ID,
     SYSDATE AS UPD_DT,
#if(${gl_curr_cd} !=  '')  
     CASE WHEN A.GL_CRS_CURR_AMT < 0 THEN ABS(A.GL_CRS_CURR_AMT)
        END AS GL_INP_DR_AMT,
     CASE WHEN A.GL_CRS_CURR_AMT > 0 THEN ABS(A.GL_CRS_CURR_AMT)
        END AS GL_INP_CR_AMT,  
     A.GL_CRS_EX_RATE AS GL_CONV_XCH_RT,
     CASE WHEN A.GL_CRS_CURR_AMT < 0 THEN 
    	ROUND(ABS(A.GL_CRS_CURR_AMT) * A.GL_CRS_EX_RATE, @[dp_prcs_knt])
     END AS GL_ACCT_DR_AMT,
     CASE WHEN A.GL_CRS_CURR_AMT > 0 THEN 
        ROUND(ABS(A.GL_CRS_CURR_AMT) * A.GL_CRS_EX_RATE, @[dp_prcs_knt])
     END AS GL_ACCT_CR_AMT,
     A.GL_CRS_CURR_CD AS GL_CURR_CD
#else
    CASE WHEN A.ADJ_AMT < 0 THEN ABS(A.ADJ_AMT)
    END AS GL_INP_DR_AMT,
    CASE WHEN A.ADJ_AMT > 0 THEN ABS(A.ADJ_AMT)
    END AS GL_INP_CR_AMT,
    @[func_curr_rt] AS GL_CONV_XCH_RT,
	CASE WHEN A.ADJ_AMT < 0 THEN ROUND(ABS(A.ADJ_AMT) * @[func_curr_rt], @[dp_prcs_knt])
    END AS GL_ACCT_DR_AMT,
    CASE WHEN A.ADJ_AMT > 0 THEN ROUND(ABS(A.ADJ_AMT) * @[func_curr_rt], @[dp_prcs_knt])
    END AS GL_ACCT_CR_AMT,
    @[bl_curr_cd] AS GL_CURR_CD
#end
FROM
    SAR_ADJ_HIS A
    , SAR_OTS_HIS SOH
    , SAR_OTS_CHG SOC
WHERE  1=1
AND ADJ_HIS_SEQ = @[adj_his_seq]
AND SOC.CHG_TP_CD = @[chg_tp_cd]
AND A.OTS_HIS_SEQ = SOC.OTS_HIS_SEQ
AND SOH.OTS_HIS_SEQ = SOC.OTS_HIS_SEQ
)			]]></sql>
			<params>
				<param name="adj_his_seq" type="12" value="" out="N"/>
				<param name="cd_cmb_seq" type="12" value="" out="N"/>
				<param name="func_curr_rt" type="12" value="" out="N"/>
				<param name="dp_prcs_knt" type="12" value="" out="N"/>
				<param name="bl_curr_cd" type="12" value="" out="N"/>
				<param name="adj_dt" type="12" value="" out="N"/>
				<param name="chg_tp_cd" type="12" value="" out="N"/>
			</params>
		</query>
	</querys>
</sqls>
